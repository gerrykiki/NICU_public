{"version":3,"sources":["Image/svg/file1.svg","Image/svg/file2.svg","Image/svg/filter.svg","Image/svg/edit2.svg","Image/svg/Wardview.svg","Image/svg/Historyview.svg","Image/svg/Control.svg","Image/svg/delete.svg","Image/svg/dragdown.svg","Image/svg/RT.svg","Image/svg/calender.svg","Image/svg/calenderwhite.svg","Image/svg/ping.svg","Image/svg/pingwhite.svg","Image/svg/Edit.svg","Image/svg/details.svg","Homepage.js","Layout/Sidermenu.js","Function/Wardstate.js","API/ApiProvider.js","API/ApiGithub.js","Data/RegularData.js","Wardview/Wardcardstatus.js","Wardview/WardCardvalue-k.js","Function/Wardbedfunction.js","Wardview/Wardcard/Wardcarddetail.js","Wardview/Wardcard/UnpreviewWardCardDetail.js","Commonfunction.js","Wardview/Wardnote.js","Wardview/Bedinfo.js","Function/Timeformat.js","Wardview/WardBedinformation.js","Module/Schedule_event.js","Wardview/Wardschedule.js","Wardview/Wardinfoindex.js","jsonResponse.js","Data/Wardviewdata.js","Patientview/CrossSectionView/Labview.js","Wardview/Wardlifechart.js","Wardview/Wardmonthafter.js","Wardview/Wardgrewchart.js","Patientview/Schedule/Notice.js","Patientview/CrossSectionView/Labviewitem.js","Function/FiliterReg.js","Wardview/Wardcardvitalsign.js","Wardview/Wardchart.js","Wardview/Wardunfousercheckbox.js","Patientview/Patientviewinfo.js","Wardview/Wardinfouser-k.js","Wardview/Bedinfo/Bedview.js","Content/Historyview.js","Patientview/CrossSectionView/Crossectionvitalsignchart.js","Patientview/CrossSectionView/Warningsettinglist.js","Patientview/CrossSectionView/Addnewwaring.js","Patientview/CrossSectionView/Vitalsign.js","Patientview/Controlbar.js","Module/iopage.js","Patientview/CrossSectionView/Crossection_io.js","Patientview/CrossSectionView/NonlabviewtableCell.js","Patientview/ExamReportModal.js","Patientview/CrossSectionView/Nonlabviewtable.js","Patientview/CrossSectionView/Nonlabview.js","Patientview/CrossSectionView/RTtable.js","Patientview/CrossSectionView/GAS.js","Patientview/CrossSectionView/RemarkModal.js","Patientview/CrossSectionView/RTbreathtablecell.js","Patientview/CrossSectionView/RTbreathetable.js","Patientview/CrossSectionView/RTbreathe.js","Patientview/Prescriptionorder/Prescriptionordertablecell.js","Patientview/Prescriptionorder/Prescriptionordertable.js","Patientview/Prescriptionorder/Prescriptionorder.js","Patientview/Treatmentorder/Treatmentordertablecell.js","Patientview/Treatmentorder/Treatmentordertable.js","Patientview/Treatmentorder/Treatmentorder.js","Module/Notecell.js","Module/Note.js","Patientview/CrossSectionView/Crosssectionschedule.js","Patientview/CrossSectionView/Crosssection_todo.js","Module/Todo.js","Patientview/CrossSectionView/Crosssectionlayout.js","Patientview/ChronicleView/Chronic_io.js","Patientview/ChronicleView/Chronic_table.js","Patientview/ChronicleView/Chronic_lab.js","Patientview/ChronicleView/Chronic_rttable.js","Patientview/ChronicleView/Chronic_rt.js","Patientview/ChronicleView/Chronic_ordertable.js","Patientview/ChronicleView/Chronic_order.js","Patientview/ChronicleView/Chronic_weighttable.js","Patientview/ChronicleView/Chronic_weight.js","Module/Vitalxaxis.js","Module/Vitalxaxisbot.js","Patientview/ChronicleView/Chronic_vital_chart.js","Patientview/ChronicleView/Chronic_vital.js","Patientview/ChronicleView/Chroniclelayout.js","Patientview/FlootSheetView/Flootsheetio.js","Patientview/FlootSheetView/Flootsheetlayout.js","Patientview/ExamReport/Examchart.js","Patientview/ExamReport/ExamLabview.js","Patientview/ExamReport/Examaxis.js","Patientview/ExamReport/ExamNonlabtablecell.js","Patientview/ExamReport/NonLabview.js","Patientview/ExamReport/ExamReport.js","Patientview/Orderview/Orderview.js","Patientview/NoteView/Notecell.js","Patientview/NoteView/Note.js","Patientview/NoteView/Notelist.js","Patientview/RT/RTview.js","Patientview/Nurtion/Nurtionfeedingcell.js","Patientview/Nurtion/Nurtionfeeding.js","Patientview/Nurtion/Nurtion_TPN_cell.js","Patientview/Nurtion/Nurtion_TPN.js","Patientview/Nurtion/Watervaluechart.js","Patientview/Nurtion/Nurtion.js","Patientview/Infection/Infectionvitalsign.js","Patientview/Infection/Infectionlabtable.js","Patientview/Infection/Infectionlab.js","Patientview/Infection/Infection.js","Patientview/Schedule/Bedsidecard.js","Patientview/Schedule/Scheduletodo.js","Patientview/Schedule/Calendercell.js","Patientview/Schedule/Calender.js","Patientview/Schedule/Scheduleview.js","Patientview/Patientviewlayout.js","Systemgroup/powersetting.js","Systemgroup/Systemlogtable.js","Systemgroup/Systemlog.js","Content/Systemcontrol.js","Systemgroup/Warningmanage.js","Layout/Layout.js","Layout/Loginview.js","App.js","serviceWorker.js","index.js","Image/svg/Chooseedit.svg","Image/svg/Search.svg"],"names":["module","exports","Homepage","Component","Sidermenu","state","powerLogin","powerLogins","Number","sessionStorage","getItem","this","setState","key","match","value","path","props","Selectkeynumber","linkstate","backgroundColor","display","paddingLeft","paddingRight","height","dislinkstate","linkfont","color","marginLeft","dislinkfont","rule","console","log","style","alignItems","gridTemplateColumns","gridColumnGap","to","select_hover","src","wardviewlogo","alt","historylogo","controllogo","statecolor","Labwarningvalue","title","simulationCentermonitordata","time","timeInterval","dataarray","k","dataset","i","newNum","Math","floor","random","push","simulationnisdata","BornWeight","weightlist","birthday","undefined","Array","isArray","findata","filter","index","rec_dat","type","length","parseInt","value2","NewestWeight","XM2JSON","data","xm2","X2JS","xml2js","status","outmsg","rescont","resconts","Doc","DocList","Main","element","PDTYPE","PDDOCNMC","toString","trim","selectweight","List","date","array","moment","valueOf","axios","defaults","baseURL","config","headers","getAlluser","get","getQDC","caseno","st","et","getQENT","getQDVS","getQOXY","getQSPE","getOnePatientNotice","transinno","HISID","getAllPatient","getOnePatientRemark","transid","getOneRemark","remarkid","getAllSchedule","getOnePatientSchedule","starttime","endtime","getStoredProcedureORDLIST","hisid","dpt","docid","getStoredProcedureRESDBGAS","getStoredProcedureRESDGLU1","getStoredProcedureRESDISP","month","seq","getStoredProcedureRESLAB01","getStoredProcedureRESLAB02","getStoredProcedureRESLAB0C","getStoredProcedureRESSECT","getStoredProcedureTRTMNTQ1","getStoredProcedureUDORDER0","getTablePBASINFO","PHISTNUM","getTablePDOCNEW","PCASENO","getTablePLOC","createTodo","caseid","context","body","post","getOneTodo","getPatientwardvalueMedian","startTime","endTime","getPatientwardvalueBoxPlot","interval","getVitalSignData","getHisidwardvalue","axiosGithub","create","timeout","getGitHubJson","string","FlagReg","item","Wardcarstatus","TRTMNTQ1","UDORDER0","TRQ1","ApiProvider","then","DataList","format","ORBGNDT","catch","err","UDORDER","dataList","UDSTATUS","Reg","ApiGithub","Promise","all","result","parseFormat","parsestring","parseJson","map","object","arr","parsrarr","ParseValueTRT","Status","findvlaue","some","v","a","dataMap","ParseValueUD","TRDATA","FlagstatusList","dataObj","ORPROCED","Flag","AntiStatus","parseFlagData","TPNStatus","NP0Status","FoleyStatus","DrainStatus","statusspan","source","style_change","statuslist","InvasiveRespiratorStatus","NonInvasiveRespiratorStatus","RespiratorStatusParse","info","className","wardstatestringformat","StatusUDORDER","UDDRGNAM","toLowerCase","UDGNAME","indexOf","StatusTRTMNTQ1","WardCard","useState","CenterMonitorValue","SetCenterMonitorValue","SetHID","Timer","SetTimer","InitCenterData","useEffect","TimerID","setInterval","clearInterval","HID","phistnum","JSON","stringify","hr","spo2","abpd","abps","abpm","gridColumnsGap","rr","bt","bednumberformat","number","gender","pregancyweeksanddays","bornweeks","borndays","birthdays","localtoborndays","Date","getTime","Wardcarddetail","hoverstate","clickstate","mouse_hover","edit_hover","visible","pbasignfo","birthdayweight","weight","bornweek","bornday","nowweight","report","nonreport","remark","TRANSINID","TRANSINDT","TRANSINTM","handleCancel","e","showModal","API_DATA","beforeOneDay","mapList","ORRCPDT","ORRCPTM","datalist","list","ORSTATUS","datasize","typefrom","from","Birthday","PBIRTHDT","QTWER","Wardstate","QTWPER","QMNC","BornWeeks","weeks","BornDays","days","width","onCancel","footer","justifyContent","border","onClick","handleOk","gridTemplateRows","gridRowGap","HBEDNO","marginRight","placeholder","id","defaultValue","valueFormat","mode","previewmode","hbedlist","PBIRHDT","Weight","PNAMEC","PSEX","fileLogo","file2Logo","borderBottomWidth","borderBottomColor","borderBottomStyle","centerdata","centerMonitorData","padding","position","overflow","fontSize","textOverflow","whiteSpace","pathname","Modelrender","Unpreviewwardcarddetail","databool","statedata","document","getElementById","bednumber","marginBottom","format_bednumber","editlogo","onOk","WardcardNote","_isMounted","editstate","AnnoceRawData","AnnoceDisplayData","inputContent","onInputChange","bind","queryAllAnnounce","parse","announceArray","event","target","announce","newAnnounce","editor","findIndex","splice","announcelist","editstatus","localTime","utc","toDate","deleteimg","ondeleteannounce","placement","detail","annData","marginTop","onMouseUp","editlist","borderCollapse","onChange","AddNewannouce","margin","canceledit","okeditlist","Bedinformation","tableselect","sendReturnSelect","parentCallback","select","weekdatformat","weekday","selectkey","idkey","localtime","day","Month_format","getMonth","getDate","getDay","Unselect_tablestyle","borderLeftWidth","Selectswitch","cursor","textAlign","hbedcount","transoutcount","transincount","rtcount","nonrtcount","tpncount","yyyymmddformat","timestamp","getFullYear","formatmonth","Monthformat","yyyymmfirstweeksate","mmddformat","compareday","formatxArrayhalf","xAxisarray","formatendtime","Wardbedinformation","subselectdate","selectid","selectDate","bedinfo","onChangeDate","datestring","callbackFunction","idnumber","apiData","trans","translist","pnamec","selectDateitem","filterdate","transIn","transoutIncountperson","transOut","transoutOutcountperson","transferListlayout","infolist","infoList","dateTime","Bedinfo","reverse","allowClear","bedinfotitle","weekbedinfo","infoitem","Schedule_event_list","detailstate","pressitemstate","items_interval","EditMode","selSchedule","Scheduledata","PickerDate","ID","caseinfo","querySchedule","queryALLSchedule","propsDate","stateDate","timeNowStr","toISOString","writter","name","PBASINGNINFO","PLOCSTART","getHours","getMinutes","pressitem","scheduleData","checkbackground","BtnType","eventstate","ScheduleList","text","borderRadius","changeitem","itemchange","detaillogo","testiteminterval","changestate","onChangeEditMode","Option","Select","EditButton","EditControl","SwitchTestItemInterval","pressbtn","listevent","onClickCancel","onClickEnter","Wardschedule","Wardinfoindex","newannocestate","scheduleRawData","sendData","itemList","refactoredList","forEach","itemTimeStr","split","foundItemIndex","newItem","scheduleList","newEvent","writer","content","dateStr","dataOfDayIndex","dataOfDay","getDataFromTimestamp","growdata","Male_befor","y","min","max","FeMale_before","Male_after","FeMale_after","todo_data","Time","Content","Editor","simdata","Inputarray","MG_VALUE","PROC_VALUE","WardlifeChart","drawChart","svg_key","weightList","grewinfo","window","screen","availWidth","WEEK_BORN","DAY_BORN","BIRTHDAY","pregencyTimestamp","d3","domain","range","x","yAxis","ticks","tickSize","tickPadding","xAxis","tickFormat","d","svg","attr","append","call","datasource","rec_tim","id_key","Wardmonthafter","Month","Wardgrewchart","test_items_interval","Data","WeightList","borderWidth","borderStyle","borderColor","borderTopLeftRadius","borderTopRightRadius","Onchangetimeinterval","switch_monthy","Notice","noticeData","TRID","preTRID","queryPatientImportant","transinid","updateTime","disableEdit","tooltiptext","t","displayTime","remarkcell","TextArea","Input","renderEditButton","autoSize","Labviewitem","Source","TimeR","TimeRender","RowsHeight","ListForTime","ORRESDT","ListForTimeAndTarget","parseTimestamp","QSPERegList","qspe","SettingValue","qspearray","SelectElement","special","DataArray","DataJson","Labviewlayout","parser","dummy_mg","dummy_pct","latestvalue","selected_parser","find","apply_condition","arrayLength","ORMM","CASEID","ORDSEQNO","RESDISP","selected_mapping","mappings","mapping","re","RegExp","regex_str","regex_flags","CONTENT","currentTimeStr","currentItemTimestamp","matchValue","updateLabviewIfNeed","currentIdx","background","ListEndData","RESDGLU1","RESLAB02","RESLAB01","RESDBGAS","RESSECT","RESDGLU1LIST","FiliterReg","RESLAB02LIST","RESLAB01LIST","RESDBGASLIST","RESSECT_MG_LIST","findLastestTargetValue","RESSECT_PROC_LIST","GLUFAST","WBC","RSV01","SEG","RSV14","LYMP","RSV15","HGB","RSV03","PLATELET","RSV09","NA","RSV13","K","CA","P","RSV17","ALB","RSV02","CRP","RSV32","PH","SS07","PCO2","SS06","BE","SS01","PO2","SS08","BUN","RSV05","CR","RSV06","ALT","RSV11","AST","RSV12","TBIL","RSV08","DBIL","RSV25","ALKP","TOTALCA","IRON","RSV26","TIBC","RSV27","FERRITIN","areainterval","nullvalue","TitleR","TitleRender","WardcardvitalsignChart","sourcedata","selectType","axisTop","axisBot","circlrcolor","MAX","MIN","Upper","Lower","transformmargin","cal_svg_transform","time_now","time_array","time_axis_array","x_axis_time","time_array_reverse","time_axis_array_reverse","formatHour","tickValues","n","xAxisBottom","cal_svg_hight","formatBoxWidth","viewwidth","lower","upper","LimitBoxTimer","interFormat","TimeArray","boxTime","formatBox","boxwidth","drawshadow","BoxPlotData","Xtime","SBP","DBP","q1","Q1","q2","Q2","q3","Q3","q4","Q4","selectAll","enter","WardChart","CMvalue","vitalvalue","colorshadow","nbpd","nbps","nbpm","data2","data_2_circlrcolor","Wardinfousercheckbox","checkboxselect","selectstate","updateOnePatientTodo","selectchange","checked","textDecoration","Patientinfo","patientData","patientDetail","Wardinfouser","Visible","setVisible","Report","SetReport","Nonreport","SetNonreport","SetRESLAB01","SetRESLAB02","SetRESDBGAS","RESLAB0C","SetRESLAB0C","SetScheduleList","todoList","SetTodoList","QENT","SetQENT","CASEIDSTATUS","SetCASEIDSTATUS","location","parsedata","ORDERLISTMAP","PLOC","now","todayBegin","ListWeight","DOCLIST","PDOCNEW","MainDoc","LiveDoc","MainNur","ICUMainDoc","transdata","patientDate","fixpatientDate","maxHeight","minHeight","displayTimeStr","Bedview","simplemode","SelectHISID","ClickSelect","simple_style","gridGap","Unsimple_style","wardcarddetaillist","selectID","cardID","component","WardinfouserK","filterdata","switch_titile_string","onWardcardDisplay","checkedChildren","unCheckedChildren","defaultChecked","Historyview","MouseClick","allPatientDisplayData","allPatientUnset","allPatientSet","selectedRowsArray","hospitalindex","selectedFile","fileList","uploading","doctor","transOuttime","handleUpload","fileData","formData","FormData","file","res","filename","setedUser","transouttime","unsetUser","onChangeName","onChangeHisid","onClickSearch","record","resultD","url","URL","createObjectURL","Blob","link","createElement","href","setAttribute","appendChild","click","hospitalnumber","delete","dateString","InputGroup","Group","compact","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","disabled","searchNO","searchTime","searchName","search","genderswitch","psex","birweek","transage","transicutime","maindoc","EditStyle","onRemove","newFileList","slice","beforeUpload","showUploadList","handleDisplaySwitchChange","lineHeight","Searchbar","exportClick","deleteHistoryUser","columns","dataIndex","dataSource","onRow","onMouseEnter","MouseClickTable","onMouseLeave","Crosssectionvitalsignchart","change","prepickerdate","presource","preinterval","CID","svg_id","PHID","PCID","optionvalue","pickerdate","endTimeStamp","start","end","formatTimer","remove","QDVS","QOXY","HRNISLIST","RRNISLIST","SBPNISLIST","DBPNISLIST","BTNISLIST","Spo2NISLIST","pluse","breath","systolic","diastolic","BT","temperature","concen","FormatNISData","centermonitorApiDataGet","prehid","xAxisvalue","formatxArray","xAxisbotvalue","formatbotaxis","xAxisbot","drawData","formatShift","Warningsetting","dragstate","onClickdrag","transform","dragdown","Addwarningsetting","onSelectDate","dates","dataStrings","dateCallback","onSelectHour","hourCallback","children","Vitalsign","vital_days","visibleConflict","chackstate_one","chackstate_three","addNewWarningDateStr","addNewWarningHourStr","handleSelectDate","handleSelectHour","hourString","handleOkConflict","handleCancelConflict","sourcehandleChange","intervalhandleChange","EndTime","Phistnum","gridarray","checknumber","onClickCheckgrid_three","onClickCheckgrid_one","sourcefrom","changevitaldays","vitaldays","bool","switchdata","centervalueNull","TabPane","Tabs","waringsettingarray","centervalue","FilterList","filterData","Mid","centervaluetoNull","vitaldaysBool","pickerTimer","defaultActiveKey","tab","flexDirection","top","left","onVitalCheck","bottom","Controlbar","display_Mode","item_array","scrollstate","itwm_array","sendDateData","parentDateCallback","scrollToAnchor","anchorName","anchorElement","scrollIntoView","checkedValues","onDateChange","btn_style","unclick_style","display_style","displye_mode","right","boxShadow","zIndex","non_display_mode","check_area","check_text","btnlist","WEIGHT","WardState","DayWeight","btn","scrollpoint","showToday","newtime","oldtime","timestampdiff","daysdiff","open_display","displaylogo","IOpage","QDC","PreStatus","PreIntervalStatus","PreCID","PrePickerDate","intervalStatus","timer","interstatus","Result","ret","IntervalStatus","getAPI","prestatus","preinterstatus","precid","mapcell","IntervalToDataArray","intervalstatus","valueTimeString","valueTime","SumforEach","sum","timearray","pickerTimeArray","QDCLIST","feed","IV","Urine","Other_in","Other_out","feedarray","IVarray","Unarray","Other_inarray","Other_outarray","elementTimeString","elementTime","invalue","inp_val1","outvalue","out_val1","feedData","IVData","UrineData","OtherInData","OtherOutData","feedmap","inp_val2","SumDataforEach","IVmap","Other_inmap","Urinemap","out_val2","Other_outmap","suminlist","ivarray","otherinarray","sumarray","feedvalue","ivvalue","otherinvalue","suminarray","urineunit","urinemap","urineunittimemap","urineunittime","sumoutarray","totalarr","arr1","arr2","totalarray","TitleCellIn","TitleCellOut","Feedcell","cellRender","IVcell","Other_inmapcell","suminarraycell","Urinemapcell","urineunitcell","Other_outmapcell","sumoutarraycell","totalcell","stylechange","Crossection_io","titlelab","NonlabviewtableCell","summary_str","select_parser","input","item_name","sample","lab","start_time","datetime","end_time","summerize","kv_pairs","summary","match_replacer","replacer","replace","caseId","hisId","datatime","result_kv_pairs","come","ExamReportModal","showDetail","Nonlabviewtable","modalVisible","modalReport","ORDLIST","nonLabApiGet","storeProcedureTime","MonthInterval","timestampInterval","selectMonthInterval","ordlist","ressect","StartTime","status_report","ORBGNTM","listforstatus","nonlabcell","ORSPCN1","statis","ORHISTNO","ORDSEQCN","Nonlabviewlayout","RTtable","PreHID","PreTransInDate","GasListToCell","GasData","timeStamp","ORRESTM","PHValue","PCO2Value","PO2Value","HCO3Value","SS04","BEValue","O2SatValue","SS05","FiO2Value","SS03","GasCell","TRDT","getGasAPI","PreTRDT","GasTitleCell","GAS","DateRange","searchbar","RangePicker","DatePicker","fotmattimer","dateRange","formatRangeTimer","RemarkModal","remarkValue","onOkClick","transinId","remarkId","createTime","rows","RTbreathetablecell","onCell","onEdit","newRemarkValue","setting","Mode","Setting","onMouseMove","Mouse_move","Mouse_leave","Edit_state","chooseedit","RTbreathetable","createRTbreathetable","RTbreathe","preCID","QSPE","daterange","formatCrossectionTimer","FilterReg","getQSPEApi","resultData","Prescriptionordertablecell","onMove","seachRemark","UDORDSEQ","setRemark","checkStatus","SelectMode","ET","UDENDDT","Name","PName","UDRPNAME","Unit","UDDOSAGE","UDDUNIT","UDFREQN","UDROUTE","ST","UDBGNDT","on_Mouse","on_leave","Prescriptionordertable","titlecell","Prescriptionordertabletable","Prescriptionorderlayout","InputMode","whiteListParser","classParser","DateRangeMode","class","onDateRangeChange","timeRange","onChangeClass","handleChange","inputdata","querySelector","inputs","allResult","UDGNAME_condition","UDRPNAME_condition","UDGNAME_re","UDGNAME_match","UDRPNAME_re","UDRPNAME_match","parseClass","SortDataList","createST","createET","nowT","DataFormat","shape","icon","controlBar","ControlBarRender","ListData","whiteBlackList","clusteredData","filteredData","Treatmentordertablecell","QD","ORFREQN","ORENDDT","Treatmentordertable","TRTMNT01","Treatmentordertablecelllist","Treatmentorderlayout","selectedValue","inputKey","filteredDataState","includes","onChangeinputKey","crossection_style","order_style","Search_bar","Notecell","updatetime","updatedoctor","updatetime_format","wordBreak","Note","noteData","queryNotice","propDate","TRANSID","doc","notelist","infoObj","updatedictor","Crossection_schedule","Crosssection_todo","queryTodo","renderTodoItem","Crosssectionlayout","Cross_item","SelectInterval","preHID","callbackDateFunction","PickerTimeStamp","NIS_API_IO","Datetime","TransinDate","display_item","Treatmentorder","Inoutonchronic","Tableonchronic","LabParse","chronic_state","title_list","cellMap","parsrList","arrayBiochemical","arrayBlood","arrayCultivate","arrayGAS","arrayGlu","arrayRadiation","arrayOther","BioFind","Biochemical","BloFind","Blood","CulFind","Cultivate","GasFind","GluFind","RadFind","Radiation","LabFormat","DataLength","IntervalArray","TimeInterval","RessectForPickerDate","FormatTimeRessect","si","ei","TimeArrayInterval","datareglist","statestatus","switch_state","cell","Labonchronic","select_interval","Chronicrttable","RTList","changetext","rtlogo","autoAdjustOverflow","overlayStyle","table_content","Rtonchronic","userdata","Chronicordertable","changegridnumber","WhiteListData","Tablecell","udorder0","startTimeFormat","sttimeString","endTimeFormat","ettimestring","shiftWeight","clientWidth","WeightWidth","arraylist","ettimeString","shift","white","formatString","changegridstyle","celltable","Orderonchronic","Chronicweighttable","FormatEndTimeStamp","datafilter","timeString","datafilterTime","diff","widthArray","element2","timeString2","time2","render","Weightonchronic","Vitalxaxis","monthformat","select_date","select_time_format","nowtime","Start_time","intervaldays","xaxis","formatday","Vitalxaxisbot","select_date_zero","Vitalonchronic","check_state_one","check_state_three","check_state_oneweek","check_state_twoweek","statussource","value_interval","defaultdate","Interval_switch","onClickCheckgrid_oneweek","onClickCheckgrid_twoweek","formatPickerTimer","Interval_grid","Interval_grid_box","Chroniclelayout","statuschange","hrdatasource","rrdatasource","spo2datasource","abpdatasource","nbpdatasource","btdatasource","onSelectchange","sourcecallback","APIDataFetch","button","filterlogo","Flootsheetio","itemNumber","dataJson","Title","timeObjectString","nam","groupfirstarray","arrayList","compare","arrList","comparevalue","filterarray","qdc","FirstArray","SecondArray","ThirdArray","FourthArray","line","pos","QDCFormatList","FlootSheetFirstAreaData","FlootSheetSecondAreaData","FlootSheetThirdAreaData","FlootSheetFourthAreaData","stringElement","groupelement","Firstdata","Element","FirstdataCell","Firsttablecell","Thirddata","lost","ThirddataCell","Thirdtablecell","SeconddataCellRender","datajson","SecondDataCell","FourdataCellRender","FourthDataCell","Flowsheetlayout","ApiData","DateTime","splist","specialListRender","Examchart","lineChart","sT","endT","curve","lines","Labview","Selectus","SelectStatus","PickerDateRange","lineCharttitle","titleSearch","parentTitleCallback","fixLineChartData","getAttribute","showDate","temp","sort","showModel","charttableview","itemTime","itemValue","flex","LabDataList","SelectList","SelectTitlefilter","selectdata","SelectTitleRender","ExamLab","CellRender","justifycontent","Examnonlabviewtable","StateMode","pickerdaterange","changeState","ORDCLNM","selectedClass","ORDATE","ORTIME","Nonlabview","ClassMode","onChangeState","inputvalue","Inputvaluesearch","searchlogo","Examreport","selectTitle","callbackTitleFunction","PickerDateRangeChange","vallofnull","selectData","st_timestamp","et_timestamp","CellData","Band","Seq","Lym","Hb","Hct","RSV04","Plt","Na","Cl","CaTotal","Cr","Alt","TBil","DBil","rGGT","RSV19","Alkp","Alb","Iron","RSV28","FeSat","LDH","RSV10","RSV9","ck","RSV18","ckMB","Troponinl","RSV30","PT","APTT","INR","pCO2","pO2","HCO3","O2Sat","FiO2","SS11","SS12","SS13","SS14","CaFree","SS15","Bun","SS16","SS17","GluBeside","GluLab","RSV16","TCB","MicroBil","elementOne","elementTwo","Seg","APIUpdate","SelectDataList","datestrings","datePick","locale","selectvalue","Orderview","apidata","udata","tdata","overflowY","displayMode","display_date","datanumber","infoDate","rowdata","date_style","date_false","borderTopWidth","date_true","filterData_Date","NoteTime","roedata_layout","format_display_date","addZero","hhmmssformat","display_rowdate","dataRange","Noteview","display_data","contentdisplay","ADMDISP","ADMLIST","DISLIST","DISDISP","DTAROTQ4","DTASOAPQ","PCASELIST","ERDISP","PRGTXQRY","PRGTXQRYDIS","CPSLIST","CPSDISP","QPNOT","QPNOTDIS","OPSORAQ1","OPSORAQ2","SelectClass","ADISTNO","ADICASE","DIS1","SEQ","OPABGNDT","OPATIMES","times","ttype","LIVEPLOC","PLOCDT","substr","recordTime","recordResult","PRGDT","PRGTM","PRGTYPE","PRGTX","newObj","idx","transdt","select_option","row","ADMDATA","textType","textObj","DTSOAPTY","DTSOAPSQ","DTSOAPTX","textResult","fakeADMData","cre_nam","pro_not","cellRander","SelectADMDISP","ADIDATE","DCASENO","SelectDISDISP","DDATEIN","DDATEOUT","DPT","DTPDEPT","DTPDATE","SelectDTASOAPQ","DTPTIME","SelectERDISP","PDISDT","SelectPRGTXQRYDIS","CPSCASE","CPSOSEQ","CPSHIST","SelectCPSDISP","CPSENTDT","CPSENTTM","SelectQPNOTDIS","OPACOD1","OPAMANNM","SelectOPSORAQ1","control","NotecontrolBar","renderContentArray","listRender","switchListRender","RTview","TRANSDate","Nurtionfeedingcell","FeedingOrderRemarks","Moduledisplay","Nurtionfeedingorder","getAPIFeedingData","getTreatmentOrderFilter","titleCellRender","DataCellRender","Nurtiontpncell","TPNListcellRender","TPNSubDatacellRender","TPNDATA","AA","Glu","Ca","Mg","RemarkData","Nurtiontpnorder","tpndata","tpnParser","UDWORD","getAPITPNData","tpnList","found","titilecell","ListCellData","Watervaluechart","watervalueData","shiftDays","formatShiftDays","rectwidth","svgrect","on","Feeding","Other","nulldata","car","Caloriessum","model","ModalRender","Nurtionview","sex","showTime","FeedinfData","OtherData","sumcar","Calories","TimerList","shiftTimer","TimerArray","formatTimeArray","watervalueDataList","filterFeedind","filterIV","filterOther","feedingSum","SumData2","IVSum","SumData","OtherSum","caseiddays","GrowthCurve","GrowthCurveControl","GrowthCurveControlBar","WaterValueControl","WaterValueControlBar","feeddata","waterRender","WaterValueRender","Nurtionfeeding","Infectionvitalsign","displMode","StatusSource","selectday","vital_title","Infectionlabtable","FormatList","Datalist","Render","FilterData","CellRander","WBCList","BandList","SegList","LymList","PCTList","CRPList","WBCRender","BandRender","SegRender","LymRender","PCTRender","CRPRender","WBCcell","Bandcell","Segcell","Lymcell","PCTcell","CRPcell","Infectionlab","Infectionview","intervalselect","LabData","LabData2","Bedsidecard","remarkContent","queryPatientRemark","TODO_DONE","TODO_UNFINISH","Scheduletodo","todolist","onItemCheck","itemToUpdate","queryPatientTodo","todolist_data","finish_data","finish_value","unfinish_data","finish_checkbox","unfinish_checkbox","onClickunfisish","onClickfinish","Calendercell","clickindex","sendcallback","newDate","clickdate","today","stateswitch","onClickCheck","weekdateformatcalender","calenderlogo","pingcheck","calenderwhitelogo","pingwhite","disableday","scheduleArray","eventArray","disabledayinfo","Calender","calendermode","Clickdays","ClickDate","displayinfo","startTimestamp","endTimestamp","noticeRawData","getStartEndTime","monthfirstweekday","firstCellBegin","startTimestampStr","endTimestampStr","timestampdate","onClickdays","weekcontext","weeknumber","firstMonthWeekDay","rowIndex","noticeOfDay","getNoticeFromTimestamp","onCancelClick","calendermonthgroup","monthfirstweekdate","weekmonthmode","ShowModule","weekmode","setgroup","MonthPicker","SelectDatepickertype","modechange","Scheduleview","dateformat","exporttime","Patientviewlayout","TYPE","REMARK","tabstring","HBEDNUMBER","HBEDLIST","PBASINFO","matadata","nis_status_shange","activkey","PLOCLIST","PLOCTR","BedList","BEDNUMBER","USERDATA","ploc","transintime","PLOCTM","transindt","qmnc","bornWeeks","bornDays","wetghtList","selectrender","OptionSelectRender","birthdayweeks","tabPosition","callback","confirm","Modal","Powersetting","role","adduser","userList","power","powerName","radioValue","pwdRadio","inputUsername","inputPassword","inputName","inputDoctorid","radioOnChange","addUserdata","adduserhandleChange","nameChange","queryUserdata","inputuserName","password","username","doctorid","account","roleString","set_State","okText","okType","cancelText","showDeleteConfirm","Search","onSearch","userData","powerString","myNewArray","concat","apply","Systemlogtable","loginlog_table","loginlogList","managerName","apilog_table","apilogList","months","j","optionValue","pagination","page","pageSize","getPages","Systemlog","totalSpace","usingSpace","percent","option","total","unuse","toFixed","queryLoginLogdata","queryApiLogdata","pages","showInfo","Systemcontrol","bollogin","å","Layoutframe","clear","UsrName","url_path","routes","route","Loginview","setRedirect","user","setItem","redirect","permission","statusstring","renderRedirect","login","flexWrap","App","documentElement","exact","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cfd32bd7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/file1.6f94c891.svg\";","module.exports = __webpack_public_path__ + \"static/media/file2.2b64f736.svg\";","module.exports = __webpack_public_path__ + \"static/media/filter.43b66bba.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit2.8fc62700.svg\";","module.exports = __webpack_public_path__ + \"static/media/Wardview.6c75f5a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/Historyview.0467b7bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Control.aa66ed95.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.870c0c52.svg\";","module.exports = __webpack_public_path__ + \"static/media/dragdown.0cdfe02a.svg\";","module.exports = __webpack_public_path__ + \"static/media/RT.41b174eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/calender.da91395a.svg\";","module.exports = __webpack_public_path__ + \"static/media/calenderwhite.d66bfce7.svg\";","module.exports = __webpack_public_path__ + \"static/media/ping.c2141b87.svg\";","module.exports = __webpack_public_path__ + \"static/media/pingwhite.0f1e8cfb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Edit.a7d4c3ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/details.bc0482ca.svg\";","import React, { Component } from 'react';\n\nclass Homepage extends Component {\n    render() {\n        return (\n            <div></div>\n        );\n    }\n}\n\nexport default Homepage","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport wardviewlogo from '../Image/svg/Wardview.svg'\nimport historylogo from '../Image/svg/Historyview.svg'\nimport controllogo from '../Image/svg/Control.svg'\n\n\nclass Sidermenu extends Component {\n\n    state = {\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = Number(sessionStorage.getItem('role'))\n        this.setState({ powerLogin: powerLogins })\n    }\n\n    Selectkeynumber(key) {\n\n        switch (key) {\n            case '/nicu':\n                return 0;\n            case '/nicu/history':\n                return 1;\n            case '/nicu/system':\n                return 2;\n            default:\n                if (key.match('patient') != null) {\n                    return 0;\n                }\n                if (key.match('ward') != null) {\n                    return 0;\n                }\n                return '';\n        }\n    }\n\n    select_hover(value) {\n        const { path } = this.props\n        const keynumber = this.Selectkeynumber(path)\n        if (keynumber === value) {\n            return true\n        }\n        return false\n    }\n    render() {\n        const linkstate = {\n            backgroundColor: \"rgba(59, 151, 225, 1)\",\n            display: 'flex',\n            paddingLeft: '15px',\n            paddingRight: '15px',\n            height: \"40px\"\n        }\n        const dislinkstate = {\n            backgroundColor: \"rgba(0, 0, 0, 0)\",\n            display: 'flex',\n            paddingLeft: '15px',\n            paddingRight: '15px',\n            height: \"40px\"\n        }\n        const linkfont = { color: \"rgba(255, 255, 255, 1)\", marginLeft: \"10px\" }\n        const dislinkfont = { color: \"rgba(46, 100, 164, 1)\", marginLeft: \"10px\" }\n        const rule = this.state.powerLogin\n        // const rule = 5\n        console.log(Number(sessionStorage.getItem('role')))\n        //sso custom => custom\n        return (\n            <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"20px\", height: '100%' }}>\n                <div style={{ display: \"grid\", gridTemplateColumns:\"auto auto auto\",gridColumnGap:\"10px\" }}>\n                    <Link to=\"/nicu/ward/wardindex\" style={this.select_hover(0) ? linkstate : dislinkstate} style={{ display: rule === 5 ? \"none\" : \"flex\" }}>\n                        <img src={wardviewlogo} alt='wardviewlogo'></img>\n                        <centerstyle>\n                            <t2 style={this.select_hover(0) ? linkfont : dislinkfont}>住院中病人資訊</t2>\n                        </centerstyle>\n                    </Link>\n                    <Link to=\"/nicu/history\" style={this.select_hover(1) ? linkstate : dislinkstate} style={{ display: rule >= 2 && rule < 5 ? \"flex\" : \"none\" }}>\n                        <img src={historylogo} alt='historyviewlogo'></img>\n                        <centerstyle>\n                            <t2 style={this.select_hover(1) ? linkfont : dislinkfont} >歷史病歷管理</t2>\n                        </centerstyle>\n                    </Link>\n                    <Link to='/nicu/system' style={this.select_hover(2) ? linkstate : dislinkstate} style={{ display: rule === 5 || rule === 4 ? \"flex\" : \"none\" }}>\n                        <img src={controllogo} alt='systemviewlogo'></img>\n                        <centerstyle>\n                            <t2 style={this.select_hover(2) ? linkfont : dislinkfont}>系統設定</t2>\n                        </centerstyle>\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Sidermenu","import X2JS from \"x2js\"\nimport moment from 'moment';\n\nexport function statecolor(state) {\n    if (state === 'HR') {\n        return \"#779F50\"\n    }\n    if (state === 'BP') {\n        return \"#C12528\"\n    }\n\n    if (state === 'ABP') {\n        return \"#C12528\"\n    }\n    if (state === 'NBP') {\n        return \"#C12528\"\n    }\n    if (state === 'SpO2') {\n        return \"#4773B8\"\n    }\n    if (state === 'BT') {\n        return \"#7F3DB5\"\n    }\n    if (state === 'RR') {\n        return \"#DE7531\"\n    }\n    return null\n}\n\n//parse flag\nexport function Respiratorswitch(Respirator) {\n    if (Respirator === '呼(非侵入)') {\n        return '呼(非侵入)'\n    }\n    if (Respirator === '呼(侵入)') {\n        return '呼吸'\n    }\n    return '呼吸'\n}\n\nexport function wardstatestringformat(item) {\n    //console.log(item);\n    switch (item.item) {\n        case \"Respirator\":\n            return Respiratorswitch(item.data)\n        case \"TPN\":\n            return \"TPN\"\n        case \"NPO\":\n            return \"NPO\"\n        case \"HD\":\n            return \"HD\"\n        case \"Anti\":\n            return \"Anti\"\n        case \"Foley\":\n            return \"Foley\"\n        case \"Drain\":\n            return \"Drain\"\n        default:\n            return item\n    }\n}\n\nexport function Labwarningvalue(value, title) {\n    if (title === \"Glucose\") {\n        if (value > 120 || value < 50) {\n            return false\n        }\n    }\n    if (title === \"WBC\") {\n        if (value < 10000 || value > 30000) {\n            return false\n        }\n    }\n    if (title === \"Hgb\") {\n        if (value < 10 || value > 18) {\n            return false\n        }\n    }\n    if (title === \"Platelet\") {\n        if (value < 100000 || value > 450000) {\n            return false\n        }\n    }\n    if (title === \"Na+\") {\n        if (value < 135 || value > 145) {\n            return false\n        }\n    }\n    if (title === \"K+\") {\n        if (value < 3.5 || value > 5.5) {\n            return false\n        }\n    }\n    if (title === \"Ca2+\") {\n        if (value < 0.8 || value > 1.4) {\n            return false\n        }\n    }\n    if (title === \"P\") {\n        if (value < 4.5 || value > 6.0) {\n            return false\n        }\n    }\n    if (title === \"Mg2+\") {\n        if (value < -1.5 || value > 4.5) {\n            return false\n        }\n    }\n    if (title === \"Alb\") {\n        if (value > 3) {\n            return false\n        }\n    }\n    if (title === \"CRP\") {\n        if (value < 1) {\n            return false\n        }\n    }\n    if (title === \"Procalcitionin\") {\n        if (value < 0.5) {\n            return false\n        }\n    }\n    if (title === \"pH\") {\n        if (value < 7.25 || value > 7.4) {\n            return false\n        }\n    }\n    if (title === \"PCO2\") {\n        if (value < 40 || value > 60) {\n            return false\n        }\n    }\n    if (title === \"BE\") {\n        if (value < -7 || value > 6) {\n            return false\n        }\n    }\n    if (title === \"PO2\") {\n        if (value < 40 || value > 90) {\n            return false\n        }\n    }\n    if (title === \"BUN\") {\n        if (value < 1) {\n            return false\n        }\n    }\n    if (title === \"Cr\") {\n        if (value < 1) {\n            return false\n        }\n    }\n    if (title === \"ALT\") {\n        if (value < 45) {\n            return false\n        }\n    }\n    if (title === \"AST\") {\n        if (value < 45) {\n            return false\n        }\n    }\n    if (title === \"TBil\") {\n        if (value < 2) {\n            return false\n        }\n    }\n    if (title === \"DBil\") {\n        if (value < 0.5) {\n            return false\n        }\n    }\n    if (title === \"ALKP\") {\n        if (value < 450) {\n            return false\n        }\n    }\n    if (title === \"Total Ca\") {\n        if (value < 8 || value > 12) {\n            return false\n        }\n    }\n    if (title === \"FeSat\") {\n        if (value < 0.15) {\n            return false\n        }\n    }\n    return true\n}\n\nexport function simulationCentermonitordata(time, timeInterval) {\n    var dataarray = [];\n    for (var k = 0; k < (timeInterval * 6); k++) {\n        var dataset = []; //建立空的資料陣列\n        for (var i = 0; i < timeInterval; i++) {\n            var newNum = Math.floor(Math.random() * 50) + 50;\n            dataset.push(newNum);\n        }\n        dataarray.push({\n            'data': dataset,\n            'time': time[k]\n        });\n    }\n    //console.log(dataarray);\n    return dataarray;\n}\n\nexport function simulationnisdata(time, timeInterval) {\n    var dataarray = [];\n    for (var k = 0; k < timeInterval; k++) {\n        var dataset = []; //建立空的資料陣列\n        var newNum = Math.floor(Math.random() * 50) + 50;\n        dataset.push(newNum);\n        dataarray.push({\n            'data': dataset,\n            'time': time[k]\n        });\n    }\n    //console.log(dataarray);\n    return dataarray;\n}\n\nexport function getRandom(number) {\n    return Math.floor(Math.random() * 5) + number;\n};\n\nexport function getRandomfornumber(number) {\n    return Math.floor(Math.random() * number);\n};\n\nexport function arraychange(list) {\n    var myNewArray = []\n    for (var i = 0; i < list.length; ++i) {\n        for (var j = 0; j < list[i].length; ++j) {\n            myNewArray.push(list[i][j]);\n        }\n    }\n    return myNewArray\n}\n\nexport function WeightList(weightlist) {\n    if (weightlist === undefined || weightlist === null) {\n        return \"--\"\n    }\n    const findata = weightlist.filter(function (value, index) {\n        return value.type === \"TW\"\n    })\n    if (findata.length === 0) {\n        return 0\n    }\n    else return findata\n}\n\nexport function BornWeight(weightlist, birthday) {\n    console.log(weightlist)\n    if (weightlist === undefined || weightlist === null) {\n        return \"--\"\n    }\n    if (Array.isArray(weightlist)) {\n        const findata = weightlist.filter(function (value, index) {\n            return value.rec_dat === birthday && value.type === \"TW\"\n        })\n        if (findata.length === 0) {\n            return 0\n        }\n        else return parseInt(Number(findata[0].value2) * 1000)\n    }\n    else {\n        return parseInt(Number(weightlist.value2) * 1000)\n    }\n}\n\nexport function NewestWeight(weightlist) {\n    if (weightlist === undefined) {\n        return \"--\"\n    }\n    if (weightlist.length === 0) {\n        return 0\n    }\n    if (Array.isArray(weightlist)) {\n        const findata = weightlist.filter(function (value, index) {\n            return value.type === \"TW\"\n        })\n        if (findata.length === 0) {\n            return \"--\"\n        }\n        return parseInt(Number(findata[0].value2) * 1000)\n    }\n    else {\n        return parseInt(Number(weightlist.value2) * 1000)\n    }\n\n}\n\nexport function XM2JSON(data) {\n    const xm2 = new X2JS()\n    if (data === undefined) {\n        return []\n    }\n    console.log(xm2.xml2js(data))\n    const status = xm2.xml2js(data).outmsg.rescont\n    if (Number(status) === '99') {\n        return []\n    }\n    const parsedata = xm2.xml2js(data).outmsg.resconts.rescont\n    return parsedata\n}\n\nexport function Doc(DocList, type) {\n    if (DocList === undefined || DocList === null || DocList === \"\") {\n        return \"\"\n    }\n    const Main = DocList.filter(function (element, index) {\n        return element.PDTYPE === type\n    })\n    if (Main.length === 0) {\n        return \"\"\n    }\n    return Main[0].PDDOCNMC.toString().trim()\n}\n\nexport function selectweight(List, date) {\n    if (List === undefined || List === null) {\n        return \"--\"\n    }\n    var array = []\n    for (let index = 0; index < List.length; index++) {\n        const element = List[index];\n        if (moment(element.rec_dat, 'YYYYMMDD').valueOf() < date) {\n            array.push(element)\n        }\n    }\n    if (array.length === 0) {\n        return 0\n    }\n    return Number(array[0].value2) * 1000\n}\n\n\n","import axios from 'axios';\n\n\naxios.defaults.baseURL = \"http://10.97.241.48/deploy/\";\n// axios.defaults.baseURL = \"http://172.24.7.33/deploy/\";\n// axios.defaults.baseURL = \"http://127.0.0.1:8888/deploy/\";\n\n//----------------------------------------------\n// announcement-controller 病房公告(Ward View)\n//----------------------------------------------\n//建立公告資訊\n/*\nexport function createAnnounce(context, editor, transinno, time) {\n  const body = {\n    context: context,\n    editor: editor,\n    transinno: transinno,\n    time: time\n  }\n  return axios.post(\"Announcement/createAnnouncement\", body);\n}*/\nexport function createAnnounce(announceArray) {\n  return axios.post(\"Announcement/createAnnouncement\", announceArray);\n}\n\n//刪除某天公告資訊\nexport function deleteAnnounce(transinno, dateTime) {\n  return axios.delete(\"Announcement/delannouncement/\" + transinno + \"/\" + dateTime);\n}\n\n//取得全部資訊\nexport function getAllAnnounce() {\n  return axios.get(\"Announcement/getAllannounce\");\n}\n\n//取得某位病人某天資訊\nexport function getOneAnnounce(transinno, dateTime) {\n  return axios.get(\"Announcement/getOneannouncement/\" + transinno + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// export/import-controller 匯入匯出\n//----------------------------------------------\n//匯出\nexport function exportJson(transinno) {\n  return axios.get(\"exportJson/\" + transinno);\n}\n\n//匯入\nexport function importJson(filename) {\n  return axios.get(\"importJson/\" + filename);\n}\n\n//下載檔案\nexport function downloadFile(filename) {\n  return axios.get(\"downloadFile/\" + filename);\n}\n\n//上傳檔案\nconst config = { headers: { 'Content-Type': 'multipart/form-data' } }\nexport function uploadFile(fileData) {\n  return axios.post(\"uploadFile\", fileData, config);\n}\n//----------------------------------------------\n// login-controller 登入與權限設定\n//----------------------------------------------\n//刪除帳號\nexport function deleteUser(name, role, username) {\n  return axios.delete(\"delUser/\" + name + \"/\" + role + \"/\" + username);\n}\n\n//查詢某帳號權限：1->read only 2->general user 3->general manager 4->system manager 5->super user\nexport function getAuth(username) {\n  return axios.get(\"getAuth/\" + username);\n}\n\n//取得系統空間\nexport function getSpace() {\n  return axios.get(\"getSpace\");\n}\n\n//登入\nexport function login(username, password) {\n  const body = {\n    username: username,\n    password: password\n  }\n  return axios.post(\"login\", body);\n}\n\nexport function getSSOLogin(username, password) {\n  return axios.get(\"LoginInSSO/\" + username + \"/\" + password);\n}\n\n//新增帳號與權限\nexport function register(name, password, role, username, doctorid) {\n  const body = {\n    name: name,\n    password: password,\n    role: role,\n    username: username,\n    doctorid: doctorid\n  }\n  return axios.post(\"register\", body);\n}\n\n//取得全部資訊\nexport function getAlluser() {\n  return axios.get(\"getAlluser\")\n}\n\n//角色、姓名搜尋其內容\nexport function searchUser(name, role) {\n  return axios.get(\"searchUser/\" + name + \"/\" + role);\n}\n\n//----------------------------------------------\n// log-controller 顯示Log日誌\n//----------------------------------------------\n\n//Show login log(根據起始時間查詢成功登入記錄)(time格式為yyyy-MM-ddTHH:mm:ss)\nexport function getLoginlog(startTime, endTime) {\n  return axios.get(\"getLoginlog/\" + startTime + \"/\" + endTime);\n}\n\n//Show API access log (date格式為yyyy-MM-dd)\nexport function getApilog(Time) {\n  return axios.get(\"getApilog/\" + Time)\n}\n\n//Show Debug log (date格式為yyyy-MM-dd)\nexport function getDebuglog(Time) {\n  return axios.get(\"getDebuglog/\" + Time)\n}\n\n//----------------------------------------------\n// breath-controller 呼吸RT\n//----------------------------------------------\n//createBreath\nexport function createBreath(editTime, hisid, model, note, setting) {\n  const body = {\n    editTime: editTime,\n    hisid: hisid,\n    model: model,\n    note: note,\n    setting: setting\n  }\n  return axios.post(\"breath/createBreath\", body);\n}\n\n//getBreath\nexport function getAllBreath() {\n  return axios.get(\"breath/getAllbreath\");\n}\n\n//updateNote\nexport function updateNote(editTime, hisid, model, note, setting) {\n  const body = {\n    editTime: editTime,\n    hisid: hisid,\n    model: model,\n    note: note,\n    setting: setting\n  }\n  return axios.put(\"breath/updatebnote/\" + editTime, body);\n}\n\n//----------------------------------------------\n// exam-cbc-controller Exam CBC Controller\n//----------------------------------------------\n//寫入CBC資訊\nexport function createExamCbc(band, hb, hct, hisid, lym, plt, seg, updateTime, wbc) {\n  const body = {\n    band: band,\n    hb: hb,\n    hct: hct,\n    hisid: hisid,\n    lym: lym,\n    plt: plt,\n    seg: seg,\n    updateTime: updateTime,\n    wbc: wbc\n  }\n  return axios.post(\"examcbc/createexamcbc\", body);\n}\n\n//取得全部資訊\nexport function getAllExamCbc() {\n  return axios.get(\"examcbc/getAllexamcbc\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamCbcOfPatient(hisid, dateTime) {\n  return axios.get(\"examcbc/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-cbc-two-controller Exam CBC Two Controller\n//----------------------------------------------\n//寫入CBC資訊\nexport function createExamCbcTwo(band, crp, hisid, lym, ptc, seg, updateTime, wbc) {\n  const body = {\n    band: band,\n    crp: crp,\n    hisid: hisid,\n    lym: lym,\n    ptc: ptc,\n    seg: seg,\n    updateTime: updateTime,\n    wbc: wbc\n  }\n  return axios.post(\"examcbctwo/createexamcbctwo\", body);\n}\n\n//取得全部資訊\nexport function getAllExamCbcTwo() {\n  return axios.get(\"examcbctwo/getAllexamcbctwo\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamCbcTwoOfPatient(hisid, dateTime) {\n  return axios.get(\"examcbctwo/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-cruor-controller Exam Cruor Controller\n//----------------------------------------------\n//createExamCruor\nexport function createExamCruor(apiT, hisid, inr, pt, updateTime) {\n  const body = {\n    apiT: apiT,\n    hisid: hisid,\n    inr: inr,\n    pt: pt,\n    updateTime: updateTime\n  }\n  return axios.post(\"examcruor/createexamcruor\", body);\n}\n\n//getExamCruor\nexport function getAllExamCruor() {\n  return axios.get(\"examcruor/getAllexamcruor\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamCruorOfPatient(hisid, dateTime) {\n  return axios.get(\"examcruor/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-electrolyte-controller Exam Electrolyte Controller\n//----------------------------------------------\n//createExamEletrolyte\nexport function createExamElectrolyte(bun, caFree, caTotal, caseid, cl, cr, hisid, k, mg, na, p, updateTime) {\n  const body = {\n    bun: bun,\n    caFree: caFree,\n    caTotal: caTotal,\n    caseid: caseid,\n    cl: cl,\n    cr: cr,\n    hisid: hisid,\n    k: k,\n    mg: mg,\n    na: na,\n    p: p,\n    updateTime: updateTime\n  }\n  return axios.post(\"examelectrolyte/createexamelectrolyte\", body);\n}\n\n//getExamElectrolyte\nexport function getAllExamElectrolyte() {\n  return axios.get(\"examelectrolyte/getAllexamelectrolyte\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamElectrolyteOfPatient(hisid, dateTime) {\n  return axios.get(\"examcruor/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-gas-addi-controller Exam GAS Addi Controller\n//----------------------------------------------\n//createExamGasAddi\nexport function createExamGasAddi(bun, caFree, cr, hb, hct, hisid, k, na, updateTime) {\n  const body = {\n    bun: bun,\n    caFree: caFree,\n    cr: cr,\n    hb: hb,\n    hct: hct,\n    hisid: hisid,\n    k: k,\n    na: na,\n    updateTime: updateTime\n  }\n  return axios.post(\"examgasaddi/createexamgasaddi\", body);\n}\n\n//getExamGasAddi\nexport function getAllExamGasAddi() {\n  return axios.get(\"examgasaddi/getAllexamgasaddi\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamGasAddiOfPatient(hisid, dateTime) {\n  return axios.get(\"examgasaddi/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-gas-controller Exam GAS Controller\n//----------------------------------------------\n//createExamGas\nexport function createExamGas(be, fiO2, hco3, hisid, o2Sat, pco2, ph, po2, sample, updateTime) {\n  const body = {\n    be: be,\n    fiO2: fiO2,\n    hco3: hco3,\n    hisid: hisid,\n    o2Sat: o2Sat,\n    pco2: pco2,\n    ph: ph,\n    po2: po2,\n    sample: sample,\n    updateTime: updateTime\n  }\n  return axios.post(\"examgas/createexamgas\", body);\n}\n\n//getExamGas\nexport function getAllExamGas() {\n  return axios.get(\"examgas/getAllexamgas\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamGasOfPatient(hisid, dateTime) {\n  return axios.get(\"examgas/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-glu-controller Exam Glu Controller\n//----------------------------------------------\n//createExamGlu\nexport function createExamGlu(gluBedside, gluLab, hisid, updateTime) {\n  const body = {\n    gluBedside: gluBedside,\n    gluLab: gluLab,\n    hisid: hisid,\n    updateTime: updateTime\n  }\n  return axios.post(\"examglu/createexamglu\", body);\n}\n\n//getExamGlu\nexport function getAllExamGlu() {\n  return axios.get(\"examglu/getAllexamglu\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamGluOfPatient(hisid, dateTime) {\n  return axios.get(\"examglu/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-heart-controller Exam Heart Controller\n//----------------------------------------------\n//createExamHeart\nexport function createExamHeart(bnp, caseid, ck, ckMB, hisid, tropoin, updateTime) {\n  const body = {\n    bnp: bnp,\n    caseid: caseid,\n    ck: ck,\n    ckMB: ckMB,\n    hisid: hisid,\n    tropoin: tropoin,\n    updateTime: updateTime\n  }\n  return axios.post(\"examheart/createexamheart\", body);\n}\n\n//getExamGlu\nexport function getAllExamHeart() {\n  return axios.get(\"examheart/getAllexamheart\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamHeartOfPatient(hisid, dateTime) {\n  return axios.get(\"examheart/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-jaundice-controller Exam Jaundice Controller\n//----------------------------------------------\n//createExamJaundice\nexport function createExamJaundice(dbil, hisid, microBil, tbil, tcb, updateTime) {\n  const body = {\n    dbil: dbil,\n    hisid: hisid,\n    microBil: microBil,\n    tbil: tbil,\n    tcb: tcb,\n    updateTime: updateTime\n  }\n  return axios.post(\"examjaundice/createexamjaundice\", body);\n}\n\n//getExamJaundice\nexport function getAllExamJaundice() {\n  return axios.get(\"examjaundice/getAllexamjaundice\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamJaundiceOfPatient(hisid, dateTime) {\n  return axios.get(\"examjaundice/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-liver-controller Exam Liver Controller\n//----------------------------------------------\n//createExamLiver\nexport function createExamLiver(alKp, alb, alt, ast, dbil, hisid, rggt, tbil, updateTime) {\n  const body = {\n    alKp: alKp,\n    alb: alb,\n    alt: alt,\n    ast: ast,\n    dbil: dbil,\n    hisid: hisid,\n    rggt: rggt,\n    tbil: tbil,\n    updateTime: updateTime\n  }\n  return axios.post(\"examliver/createexamliver\", body);\n}\n\n//getExamLiver\nexport function getAllExamLiver() {\n  return axios.get(\"examliver/getAllexamliver\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamLiverOfPatient(hisid, dateTime) {\n  return axios.get(\"examliver/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-premature-baby-controller Exam Premature Baby Controller\n//----------------------------------------------\n//createExamPrematureBaby\nexport function createExamPrematureBaby(alkp, feSat, hisid, iron, ldh, tibc, updateTime) {\n  const body = {\n    alkp: alkp,\n    feSat: feSat,\n    hisid: hisid,\n    iron: iron,\n    ldh: ldh,\n    tibc: tibc,\n    updateTime: updateTime\n  }\n  return axios.post(\"examprematurebaby/createexamprematurebaby\", body);\n}\n\n//getExamPrematureBaby\nexport function getAllExamPrematureBaby() {\n  return axios.get(\"examprematurebaby/getAllexamprematurebaby\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamPrematureBabyOfPatient(hisid, dateTime) {\n  return axios.get(\"examprematurebaby/getOnepatient\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-unstructured-controller Exam Unstructured Controller\n//----------------------------------------------\n//createExamUnstructured\nexport function createExamUnstructured(hisid, item, result, state, time) {\n  const body = {\n    hisid: hisid,\n    item: item,\n    result: result,\n    state: state,\n    time: time\n  }\n  return axios.post(\"examunstructured/createexamunstructured\", body);\n}\n\n//getExamUnstructured\nexport function getAllExamUnstructured() {\n  return axios.get(\"examunstructured/getAllexamunstructured\");\n}\n\n//----------------------------------------------\n// feeding-controller Feeding Controller\n//----------------------------------------------\n//createExamFeeding\nexport function createExamFeeding(editDoctor, editTime, endTime, hisid, name, notice, startTime) {\n  const body = {\n    editDoctor: editDoctor,\n    editTime: editTime,\n    endTime: endTime,\n    hisid: hisid,\n    name: name,\n    notice: notice,\n    startTime: startTime\n  }\n  return axios.post(\"feeding/createfeeding\", body);\n}\n\n//getExamFeeding\nexport function getAllExamFeeding() {\n  return axios.get(\"feeding/getAllfeeding\");\n}\n\n//----------------------------------------------\n// hospitalization-record-controller Hospitalization Record Controller\n//----------------------------------------------\n//createHospitalizationRecord\nexport function createHospitalizationRecord(hisid, hospitalDoctor, tricuactiveue, mainDoctor, nonReport, note, report, updateTime) {\n  const body = {\n    hisid: hisid,\n    hospitalDoctor: hospitalDoctor,\n    icuactive: tricuactiveue,\n    mainDoctor: mainDoctor,\n    nonReport: nonReport,\n    note: note,\n    report: report,\n    updateTime: updateTime\n  }\n  return axios.post(\"hospitalizationrecord/createhospitalizationrecord\", body);\n}\n\n//getHospitalizationRecord\nexport function getHospitalizationRecord() {\n  return axios.get(\"hospitalizationrecord/getAllhospitalizationrecord\");\n}\n\n//----------------------------------------------\n// io-controller IO Controller\n//----------------------------------------------\n//createIO\nexport function createIO(caseid, hisid, item, updateTime) {\n  const body = {\n    caseid: caseid,\n    hisid: hisid,\n    item: item,\n    updateTime: updateTime\n  }\n  return axios.post(\"io/createio\", body);\n}\n\n//getIO\nexport function getIO() {\n  return axios.get(\"io/getAllio\");\n}\n\n//----------------------------------------------\n// nis-controller NIS Controller\n//----------------------------------------------\n//getQDC\nexport function getQDC(caseno, st, et) {\n  return axios.get(\"QDC/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQENT\nexport function getQENT(caseno) {\n  return axios.get(\"QENT/\" + caseno);\n}\n\n//getQDVS\nexport function getQDVS(caseno, st, et) {\n  return axios.get(\"QDVS/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQMNC\nexport function getQMNC(caseno) {\n  return axios.get(\"QMNC/\" + caseno);\n}\n\n//getQOXY\nexport function getQOXY(caseno, st, et) {\n  return axios.get(\"QOXY/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQPNOT\nexport function getQPNOT(caseno, st, et) {\n  return axios.get(\"QPNOT/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQSPE\nexport function getQSPE(caseno, st, et) {\n  return axios.get(\"QSPE/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQTWPER\nexport function getQTWPER(caseno, st, et) {\n  return axios.get(\"QTWPER/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//----------------------------------------------\n// note-controller Note Controller\n//----------------------------------------------\n//createNote\nexport function createNote(caseid, context, editTime, hisid, type) {\n  const body = {\n    caseid: caseid,\n    context: context,\n    editTime: editTime,\n    hisid: hisid,\n    type: type\n  }\n  return axios.post(\"note/createnote\", body);\n}\n\n//getNote\nexport function getNote() {\n  return axios.get(\"note/getAllnote\");\n}\n\n//----------------------------------------------\n// notice-controller 待辦事項 Notice (Ward/Patient View)\n//----------------------------------------------\n//建立資訊\nexport function createNotice(hisid, context, time, transinno, doc) {\n  const body = {\n    hisid: hisid,\n    context: context,\n    time: time,\n    transinno: transinno,\n    doc: doc\n  }\n  return axios.post(\"notice/createNotice\", body);\n}\n\n//刪除某人某件資訊\nexport function deleteNotice(transinno, date) {\n  return axios.delete(\"notice/delnotice/\" + transinno + \"/\" + date);\n}\n\n//取得全部資訊\nexport function getAllNotice() {\n  return axios.get(\"notice/getAllnotice\");\n}\n\n//取得某位病人資訊\nexport function getOnePatientNotice(transinno, HISID, st, et) {\n  return axios.get(\"notice/getOnePatientNotice/\" + transinno + \"/\" + HISID + \"/\" + st + \"/\" + et);\n}\n\n//----------------------------------------------\n// patient-controller 基本資料(Ward View)\n//----------------------------------------------\n//填寫基本資料\nexport function createPatient(nonreport, pacseno, pbirthdt, pbirthweight, pblood, pday, phistnum, pnamec, psex, pweek, report, transinid) {\n  const body = {\n    nonreport: nonreport,\n    pacseno: pacseno,\n    pbirthdt: pbirthdt,\n    pbirthweight: pbirthweight,\n    pblood: pblood,\n    pday: pday,\n    phistnum: phistnum,\n    pnamec: pnamec,\n    psex: psex,\n    pweek: pweek,\n    report: report,\n    transinid: transinid\n  }\n  return axios.post(\"patient/createpatient\", body);\n}\n\n//刪除某位病人\nexport function deletePatient(transinid, caseid, hisid) {\n  return axios.delete(\"patient/delpatient/\" + transinid + \"/\" + caseid + \"/\" + hisid);\n}\n\n//取得全部資訊\nexport function getAllPatient() {\n  return axios.get(\"patient/getAllpatient\");\n}\n\n//取得某位病人資訊\nexport function getOnePatient(hisid) {\n  return axios.get(\"patient/getOnepatient/\" + hisid);\n}\n\n\n//----------------------------------------------\n// patient-important-matter-controller 病人重要注意事項(Patient View)\n//----------------------------------------------\n//建立事項資訊\nexport function createPatientImportantMatter(context, editor, hisid, updateTime, transinid) {\n  const body = {\n    context: context,\n    editor: editor,\n    hisid: hisid.trim(),\n    time: updateTime,\n    transinid: transinid\n  }\n  return axios.post(\"patientimportantmatter/createpatientimportantmatter\", body);\n}\n\n//刪除某日資訊\nexport function deletePatientImportantMatter(date) {\n  return axios.delete(\"patientimportantmatter/delpatientimportantmatter/\" + date);\n}\n\n//取得全部資訊\nexport function getAllPatientImportantMatter() {\n  return axios.get(\"patientimportantmatter/getAllpatientimportantmatter\");\n}\n\n//取得某位病人資訊\nexport function getOnePatientImportantMatter(transinid) {\n  return axios.get(\"patientimportantmatter/getOnepatient/\" + transinid);\n}\n\n//----------------------------------------------\n// patient-remark-controller 病人註記(Patient View)\n//----------------------------------------------\n//createPatientRemark\nexport function createPatientRemark(context, hisid, transid) {\n  const body = {\n    context: context,\n    hisid: hisid,\n    transid: transid\n  }\n  return axios.post(\"patientremark/createpatientremark\", body);\n}\n\n//delPatientremark\nexport function deletePatientRemark(transid) {\n  return axios.delete(\"patientremark/delpatientremark/\" + transid);\n}\n\n//getPatientRemark\nexport function getAllPatientRemark() {\n  return axios.get(\"patientremark/getAllpatientremark\");\n}\n\n//getOnePatientRemark\nexport function getOnePatientRemark(transid) {\n  return axios.get(\"patientremark/getOnepatientremark/\" + transid);\n}\n\n//----------------------------------------------\n// remark-controller 註記\n//----------------------------------------------\n//建立註記\n\nexport function createRemark(name, remark, remarkId, time, transinId, type, editor) {\n  const body = {\n    name: name,\n    remark: remark,\n    remarkid: remarkId,\n    time: time,\n    transinid: transinId,\n    type: type,\n    editor: editor,\n    remarkid: remarkId\n  }\n  return axios.post(\"Remark/createremark\", body);\n}\n\n//取得全部註記\nexport function getAllRemark() {\n  return axios.get(\"Remark/getAllremark\");\n}\n\n//取得某一類型註記\nexport function getOneRemark(transid, remarkid, type) {\n  return axios.get(\"Remark/getOneremark/\" + transid + \"/\" + remarkid + \"/\" + type);\n}\n\n//----------------------------------------------\n// patient-weight-controller 基本資料-體重(Ward View)\n//----------------------------------------------\n//填寫體重資訊\nexport function createPatientWeight(hisid, updateTime, weight) {\n  const body = {\n    hisid: hisid,\n    updateTime: updateTime,\n    weight: weight\n  }\n  return axios.post(\"patientweight/createpatientweight\", body);\n}\n\n//刪除某位病人體重資訊\nexport function deletePatientWeight(date) {\n  return axios.delete(\"patientweight/delpatientweight/\" + date);\n}\n\n//取得全部資訊\nexport function getAllPatientWeight() {\n  return axios.get(\"patientweight/getAllpatientweight\");\n}\n\n//取得某位病人體重資訊\nexport function getOnePatientWeight(hisid) {\n  return axios.get(\"patientweight/getOnepatientweight/\" + hisid);\n}\n\n//----------------------------------------------\n// prescription-order-controller Prescription Order\n//----------------------------------------------\n//建立Prescription Order資訊\nexport function createPrescriptionOrder(caseid, dosage, editTime, endTime, frequency, hisid, name, note, route, scientificName, startTime, state, unit) {\n  const body = {\n    caseid: caseid,\n    dosage: dosage,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    route: route,\n    scientificName: scientificName,\n    startTime: startTime,\n    state: state,\n    unit: unit\n  }\n  return axios.post(\"prescriptionorder/createprescriptionorder\", body);\n}\n\n//取得全部資訊\nexport function getAllPrescriptionOrder() {\n  return axios.get(\"prescriptionorder/getAllprescriptionorder\");\n}\n\n//更新Prescription Order備註\nexport function updatePrescriptionOrder(updateTime, caseid, dosage, editTime, endTime, frequency, hisid, name, note, route, scientificName, startTime, state, unit) {\n  const body = {\n    caseid: caseid,\n    dosage: dosage,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    route: route,\n    scientificName: scientificName,\n    startTime: startTime,\n    state: state,\n    unit: unit\n  }\n  return axios.put(\"prescriptionorder/updateponote/\" + updateTime, body);\n}\n\n//----------------------------------------------\n// schedule-controller 排程與事件(Ward/Patient View)\n//----------------------------------------------\n//建立排程資訊\nexport function createPatientSchedule(bednumber, context, time, transinno, type, writter, name, hisid) {\n  const body = {\n    bednumber: bednumber,\n    context: context,\n    time: time,\n    transinno: transinno,\n    type: type,\n    writter: writter,\n    name: name,\n    hisid: hisid\n  }\n  return axios.post(\"schedule/createschedule\", body);\n}\n\n//刪除某人某天排程資訊\nexport function deletePatientSchedule(transinno, date) {\n  return axios.delete(\"schedule/delschedule/\" + transinno + \"/\" + date);\n}\n\n//取得全部資訊\nexport function getAllSchedule() {\n  return axios.get(\"schedule/getAllschedule\");\n}\n\n//取得某位某時段病人資訊\nexport function getOnePatientSchedule(transinno, starttime, endtime) {\n  return axios.get(\"schedule/getOnepatient/\" + transinno + \"/\" + starttime + \"/\" + endtime);\n}\n\n//----------------------------------------------\n// sso-controller SSO Controller\n//----------------------------------------------\n//get_user_profile\nexport function ssoUserProfile(app_COMPANY_UUID, app_USER_BASIC_PROFILE, app_USER_NODE_UUID, privileged_APP_SSO_TOKEN, public_APP_USER_SSO_TOKEN_TO_QUERY) {\n  const body = {\n    app_COMPANY_UUID: app_COMPANY_UUID,\n    app_USER_BASIC_PROFILE: app_USER_BASIC_PROFILE,\n    app_USER_NODE_UUID: app_USER_NODE_UUID,\n    privileged_APP_SSO_TOKEN: privileged_APP_SSO_TOKEN,\n    public_APP_USER_SSO_TOKEN_TO_QUERY: public_APP_USER_SSO_TOKEN_TO_QUERY\n  }\n  return axios.post(\"nicu/get_user_profile\", body);\n}\n\n//get_uuid\nexport function ssoUuid(privileged_APP_SSO_TOKEN, public_APP_USER_SSO_TOKEN_TO_QUERY) {\n  const body = {\n    privileged_APP_SSO_TOKEN: privileged_APP_SSO_TOKEN,\n    public_APP_USER_SSO_TOKEN_TO_QUERY: public_APP_USER_SSO_TOKEN_TO_QUERY\n  }\n  return axios.post(\"nicu/get_uuid\", body);\n}\n\n//Login\nexport function ssoLogin(app_PRIVATE_ID, app_PRIVATE_PASSWD) {\n  const body = {\n    app_PRIVATE_ID: app_PRIVATE_ID,\n    app_PRIVATE_PASSWD: app_PRIVATE_PASSWD\n  }\n  return axios.post(\"nicu/login\", body);\n}\n\n//login_action\nexport function ssoLoginAction(login_name, password) {\n  const body = {\n    login_name: login_name,\n    password: password\n  }\n  return axios.post(\"nicu/login_a\", body);\n}\n\n//----------------------------------------------\n// stored-procedure-controller Stored Procedure Controller\n//----------------------------------------------\n//getADMDISP\nexport function getStoredProcedureADMDISP(hisid, caseno) {\n  return axios.get(\"ADMDISP/\" + hisid + \"/\" + caseno);\n}\n\n//getADMLIST\nexport function getStoredProcedureADMLIST(hisid, docid) {\n  return axios.get(\"ADMLIST/\" + hisid + \"/\" + docid);\n}\n\n//getCPSDISP\nexport function getStoredProcedureCPSDISP(hisid, caseno, seq) {\n  return axios.get(\"CPSDISP/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//getCPSLIST\nexport function getStoredProcedureCPSLIST(hisid, docid) {\n  return axios.get(\"CPSLIST/\" + hisid + \"/\" + docid);\n}\n\n//getDISDISP\nexport function getStoredProcedureDISDISP(hisid, caseno) {\n  return axios.get(\"DISDISP/\" + hisid + \"/\" + caseno);\n}\n\n//getDISLIST\nexport function getStoredProcedureDISLIST(hisid, docid) {\n  return axios.get(\"DISLIST/\" + hisid + \"/\" + docid);\n}\n\n//getDTAROTQ4\nexport function getStoredProcedureDTAROTQ4(hisid) {\n  return axios.get(\"DTAROTQ4/\" + hisid);\n}\n\n//getDTASOAPQ\nexport function getStoredProcedureDTASOAPQ(hisid, date, dpt) {\n  return axios.get(\"DTASOAPQ/\" + hisid + \"/\" + date + \"/\" + dpt);\n}\n\n//getERDISP\nexport function getStoredProcedureERDISP(hisid, caseno) {\n  return axios.get(\"ERDISP/\" + hisid + \"/\" + caseno);\n}\n\n//getOPSORAQ1\nexport function getStoredProcedureOPSORAQ1(hisid) {\n  return axios.get(\"OPSORAQ1/\" + hisid);\n}\n\n//getOPSORAQ2\nexport function getStoredProcedureOPSORAQ2(hisid, date, times) {\n  return axios.get(\"OPSORAQ2/\" + hisid + \"/\" + date + \"/\" + times);\n}\n\n//getORDLIST\nexport function getStoredProcedureORDLIST(hisid, date, dpt, docid) {\n  return axios.get(\"ORDLIST/\" + hisid + \"/\" + date + \"/\" + dpt + \"/\" + docid);\n}\n\n//getPCASELIST\nexport function getStoredProcedurePCASELIST(hisid, docid, ttype) {\n  return axios.get(\"PCASELIST/\" + hisid + \"/\" + docid + \"/\" + ttype);\n}\n\n//getPRGTXQRY\nexport function getStoredProcedurePRGTXQRY(hisid, date, caseno) {\n  return axios.get(\"PRGTXQRY/\" + date + \"/\" + hisid + \"/\" + caseno);\n}\n\n//getRESDBGAS\nexport function getStoredProcedureRESDBGAS(hisid, date) {\n  return axios.get(\"RESDBGAS/\" + hisid + \"/\" + date);\n}\n\n//getRESDGLU1\nexport function getStoredProcedureRESDGLU1(hisid, date) {\n  return axios.get(\"RESDGLU1/\" + hisid + \"/\" + date);\n}\n\n//getRESDISP\nexport function getStoredProcedureRESDISP(hisid, month, caseno, seq) {\n  return axios.get(\"RESDISP/\" + month + \"/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//getRESDNM2\nexport function getStoredProcedureRESDNM2(hisid, date) {\n  return axios.get(\"RESDNM2/\" + hisid + \"/\" + date);\n}\n\n//getRESLAB01\nexport function getStoredProcedureRESLAB01(hisid, date) {\n  return axios.get(\"RESLAB01/\" + hisid + \"/\" + date);\n}\n\n//getRESLAB02\nexport function getStoredProcedureRESLAB02(hisid, date) {\n  return axios.get(\"RESLAB02/\" + hisid + \"/\" + date);\n}\n\n//getRESLAB0C\nexport function getStoredProcedureRESLAB0C(hisid, date) {\n  return axios.get(\"RESLAB0C/\" + hisid + \"/\" + date);\n}\n\n//getRESSECT\nexport function getStoredProcedureRESSECT(hisid, month, dpt, docid) {\n  return axios.get(\"RESSECT/\" + month + \"/\" + hisid + \"/\" + dpt + \"/\" + docid);\n}\n\n//getTRTMNTQ1\nexport function getStoredProcedureTRTMNTQ1(hisid, caseno) {\n  return axios.get(\"TRTMNTQ1/\" + hisid + \"/\" + caseno);\n}\n\n//getUDORDER0\nexport function getStoredProcedureUDORDER0(hisid, caseno, seq) {\n  return axios.get(\"UDORDER0/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//getUDTEXTQ1\nexport function getStoredProcedureUDTEXTQ1(caseno, seq) {\n  return axios.get(\"UDTEXTQ1/\" + caseno + \"/\" + seq);\n}\n\n//getWARDFLAG\nexport function getStoredProcedureWARDFLAG(hisid, caseno, seq) {\n  return axios.get(\"WARDFLAG/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//----------------------------------------------\n// table-controller Table Controller\n//----------------------------------------------\n//getTableHBED\nexport function getTableHBED() {\n  return axios.get(\"HBED\");\n}\n\n//getTablePBASINFO\nexport function getTablePBASINFO(PHISTNUM) {\n  return axios.get(\"PBASINFO/\" + PHISTNUM);\n}\n\n//getTablePDOCNEW\nexport function getTablePDOCNEW(PCASENO) {\n  return axios.get(\"PDOCNEW/\" + PCASENO);\n}\n\n//getTablePLOC\nexport function getTablePLOC(PCASENO) {\n  return axios.get(\"PLOC/\" + PCASENO);\n}\n\n//----------------------------------------------\n// to-do-controller 待辦事項To Do List(Ward/Patient View)\n//----------------------------------------------\n//建立待辦資訊\nexport function createTodo(caseid, context, time, transinno, type) {\n  const body = {\n    caseid: caseid,\n    context: context,\n    time: time,\n    transinno: transinno,\n    type: type\n  }\n  return axios.post(\"todo/createtodo\", body);\n}\n\n//刪除某件待辦資訊\nexport function deleteTodo(index) {\n  return axios.delete(\"todo/deltodo/\" + index);\n}\n\n//取得全部資訊\nexport function getAllTodo() {\n  return axios.get(\"todo/getAlltodo\");\n}\n\n//取得某位病人資訊\nexport function getOneTodo(transinno, caseid) {\n  return axios.get(\"todo/getOnepatient/\" + transinno + \"/\" + caseid);\n}\n\n//----------------------------------------------\n// tpn-controller TPN Controller\n//----------------------------------------------\n//createTPN\nexport function createTPN(aa, ca, editTime, endTime, frequency, glu, hisid, k, mg, na, name, notice, p, startTime, state, tpn) {\n  const body = {\n    aa: aa,\n    ca: ca,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    glu: glu,\n    hisid: hisid,\n    k: k,\n    mg: mg,\n    na: na,\n    name: name,\n    notice: notice,\n    p: p,\n    startTime: startTime,\n    state: state,\n    tpn: tpn\n  }\n  return axios.post(\"tpn/createtpn\", body);\n}\n\n//getTPN\nexport function getAllTPN() {\n  return axios.get(\"tpn/getAlltpn\");\n}\n\n//----------------------------------------------\n// treatment-order-controller Treatment Order\n//----------------------------------------------\n//建立Treatment Order資訊\nexport function createTreatmentOrder(caseid, editTime, endTime, frequency, hisid, name, note, startTime, state) {\n  const body = {\n    caseid: caseid,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    startTime: startTime,\n    state: state\n  }\n  return axios.post(\"treatmentorder/createtreatmentorder\", body);\n}\n\n//取得全部資訊\nexport function getAllTreatmentOrder() {\n  return axios.get(\"treatmentorder/getAlltreatmentorder\");\n}\n\n//更新Treatment Order備註\nexport function updateTreatmentOrder(EditTime, caseid, editTime, endTime, frequency, hisid, name, note, startTime, state) {\n  const body = {\n    caseid: caseid,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    startTime: startTime,\n    state: state\n  }\n  return axios.put(\"treatmentorder/updatetonote/\" + EditTime, body);\n}\n\n//----------------------------------------------\n// ward-bed-information-history-controller 歷史病床資訊(Ward View)\n//----------------------------------------------\n//建立床位歷史資訊\nexport function createWardbedInformation(breath, hisid, nonBreath, onBedNumber, tpn, updateTime) {\n  const body = {\n    breath: breath,\n    hisid: hisid,\n    nonBreath: nonBreath,\n    onBedNumber: onBedNumber,\n    tpn: tpn,\n    updateTime: updateTime\n  }\n  return axios.post(\"wardbedinformation/createwardbedinformation\", body);\n}\n\n//取得全部資訊\nexport function getAllWardbedInformation() {\n  return axios.get(\"wardbedinformation/getAllwardbedinformation\");\n}\n\n//當日床位資訊\nexport function getOneWardbedInformation(date) {\n  return axios.get(\"wardbedinformation/getOnewardbedinformation/\" + date);\n}\n\n//近兩週床位資訊\nexport function getWeekWardbedInformation(date) {\n  return axios.get(\"wardbedinformation/getWeekswardbedinformation/\" + date);\n}\n\n//----------------------------------------------\n// ward-information-controller Ward Information Controller\n//----------------------------------------------\n//建立WardInformation資訊\nexport function createWardInformation(bednumber, caseid, hisid, indexId, today, transformintime, transformouttime) {\n  const body = {\n    bednumber: bednumber,\n    caseid: caseid,\n    hisid: hisid,\n    indexId: indexId,\n    today: today,\n    transformintime: transformintime,\n    transformouttime: transformouttime\n  }\n  return axios.post(\"wardinformation/createwardinformation\", body);\n}\n\n//取得全部資訊\nexport function getAllWardInformation() {\n  return axios.get(\"wardinformation/getAllwardinformation\");\n}\n\n//取得當日資訊\nexport function getOneWardInformation(date) {\n  return axios.get(\"wardinformation/getTodaywardinformation/\" + date);\n}\n\n//----------------------------------------------\n// ward-state-controller 病床狀態(Ward View)\n//----------------------------------------------\n//建立床位狀態資訊\nexport function createWardState(anti, breath, drain, foley, hd, hisid, npo, tpn) {\n  const body = {\n    anti: anti,\n    breath: breath,\n    drain: drain,\n    foley: foley,\n    hd: hd,\n    hisid: hisid,\n    npo: npo,\n    tpn: tpn\n  }\n  return axios.post(\"wardstate/createwardstate\", body);\n}\n\n//取得全部資訊\nexport function getAllWardState() {\n  return axios.get(\"wardstate/getAllwardstate\");\n}\n\n//取得某人床位狀態資訊\nexport function getOneWardState(hisid) {\n  return axios.get(\"wardstate/getOnewardstate/\" + hisid);\n}\n\n//----------------------------------------------\n// ward-value-controller 生命跡象(Ward/Patient View)\n//----------------------------------------------\n//建立生命跡象資訊\nexport function createWardValue(abpd, abpm, abps, bt, hr, nbpd, nbpm, nbps, phistnum, rr, spO2, time) {\n  const body = {\n    abpd: abpd,\n    abpm: abpm,\n    abps: abps,\n    bt: bt,\n    hr: hr,\n    nbpd: nbpd,\n    nbpm: nbpm,\n    nbps: nbps,\n    phistnum: phistnum,\n    rr: rr,\n    spO2: spO2,\n    time: time\n  }\n  return axios.post(\"wardvalue/createwardvalue\", body);\n}\n\nexport function getWardDebInfo(date) {\n  return axios.get(\"patient/getWardDebInfo/\" + date);\n}\n\nexport function getPatientwardvalueMedian(hisid, startTime, endTime) {\n  return axios.get(\"wardvalue/getPatientwardvalueMedian/\" + hisid + \"/\" + startTime + \"/\" + endTime);\n}\n\n\nexport function getPatientwardvalueBoxPlot(hisid, startTime, endTime, type, interval) {\n  return axios.get(\"wardvalue/getPatientwardvalueBoxPlot/\" + hisid + \"/\" + startTime + \"/\" + endTime + \"/\" + type + \"/\" + interval);\n}\n\nexport function getVitalSignData(hisid, startTime, endTime, type) {\n  return axios.get(\"wardvalue/getVitalSignData/\" + hisid + \"/\" + startTime + \"/\" + endTime + \"/\" + type);\n}\n\n//取得全部資訊\nexport function getAllWardValue() {\n  return axios.get(\"wardvalue/getAllwardvalue\");\n}\n\n//取得全部資訊\nexport function getHisidwardvalue(hisid) {\n  return axios.get(\"wardvalue/getHisidwardvalue/\" + hisid);\n}\n\n//取得某一段時間某一個人生命跡象(原始資料)\nexport function getPatientWardValue(endTime, hisid, startTime, interval, type) {\n  return axios.get(\"wardvalue/getPatientwardvalue/\" + hisid + \"/\" + startTime + \"/\" + endTime + \"/\" + type + \"/\" + interval);\n}\n\n//----------------------------------------------\n// water-volume-controller Water Volume Controller\n//----------------------------------------------\n//createWaterVolume\nexport function createWaterVolume(endTime, feed, hisid, iv, other, startTime, updateTime) {\n  const body = {\n    endTime: endTime,\n    feed: feed,\n    hisid: hisid,\n    iv: iv,\n    other: other,\n    startTime: startTime,\n    updateTime: updateTime\n  }\n  return axios.post(\"watervolume/createwatervolume\", body);\n}\n\n//取得全部資訊\nexport function getAllWaterVolume() {\n  return axios.get(\"watervolume/getAllwatervolume\");\n}\n","import axios from 'axios';\n\nconst githubApiUrl = \"https://raw.githubusercontent.com/gerrykiki/JsonRegObject/master/\";\n\n//create new instance of github API\nvar axiosGithub = axios.create({\n    baseURL: githubApiUrl,\n    timeout: 1000,\n    //headers: {'X-Custom-Header': 'foobar'}\n});\n\nexport function getGitHubJson(string) {\n    return axiosGithub.get(string);\n}\n\n// export function getExamReport() {\n//     return axios.get(\"ExamRepor.json\");\n// }\n\n","export function ExamReportJson() {\n    return [\n        {\n            \"select\": \"CBC檢驗:WBC、Band、Seg、Lym、Hb、Hct、PLT\",\n            \"index\": 0,\n            \"title\": [\n                \"WBC\",\n                \"Band\",\n                \"Seg\",\n                \"Lym\",\n                \"Hb\",\n                \"Hct\",\n                \"PLT\"\n            ]\n        },\n        {\n            \"select\": \"電解質與腎功能檢驗:Na、K、Cl、Ca(Free, Total)、Mg、P、BUN、Cr\",\n            \"index\": 1,\n            \"title\": [\n                \"Na\",\n                \"K\",\n                \"Cl\",\n                \"Ca(Free)\",\n                \"Ca(Total)\",\n                \"Mg\",\n                \"P\",\n                \"BUN\",\n                \"Cr\"\n            ]\n        },\n        {\n            \"select\": \"肝功能檢驗:ALT、AST、TBil、DBil、rGGT、Alkp、Alb\",\n            \"index\": 2,\n            \"title\": [\n                \"ALT\",\n                \"AST\",\n                \"TBil\",\n                \"DBil\",\n                \"rGGT\",\n                \"Alkp\",\n                \"Alb\"\n            ]\n        },\n        {\n            \"select\": \"早產兒追蹤:Iron、TIBC、FeSat、LDH、Alkp\",\n            \"index\": 3,\n            \"title\": [\n                \"Iron\",\n                \"TIBC\",\n                \"FeSat\",\n                \"LDH\",\n                \"Alkp\"\n            ]\n        },\n        {\n            \"select\": \"心臟功能檢驗:ck、ck-MB、BNP、Troponin I\",\n            \"index\": 4,\n            \"title\": [\n                \"ck\",\n                \"ck-MB\",\n                \"BNP\",\n                \"Troponin I\"\n            ]\n        },\n        {\n            \"select\": \"凝血功能檢驗:PT、APTT、INR\",\n            \"index\": 5,\n            \"title\": [\n                \"PT\",\n                \"APTT\",\n                \"INR\"\n            ]\n        },\n        {\n            \"select\": \"GAS(Acid-Base)檢驗:PH、pCO2、pO2、HCO3、BE、Sample、O2Sat、FiO2\",\n            \"index\": 6,\n            \"title\": [\n                \"PH\",\n                \"pCO2\",\n                \"pO2\",\n                \"HCO3\",\n                \"BE\",\n                \"Sample\",\n                \"O2Sat\",\n                \"FiO2\"\n            ]\n        },\n        ,\n        {\n            \"select\": \"GAS(Additionary)檢驗:Hb(Hgb)、Hct、Na、K、Ca(Free)、Bun、Cr\",\n            \"index\": 7,\n            \"title\": [\n                \"Hb(Hgb)\",\n                \"Hct\",\n                \"Na\",\n                \"K\",\n                \"Ca(Free)\",\n                \"Bun\",\n                \"Cr\"\n            ]\n        },\n        {\n            \"select\": \"Glucose檢驗:Glu(BedSide, Lab)\",\n            \"index\": 8,\n            \"title\": [\n                \"Glu(BedSide)\",\n                \"Glu(Lab)\"\n            ]\n        },\n        {\n            \"select\": \"黃疸檢查:TCB、MicroBil、TBil、DBil\",\n            \"index\": 9,\n            \"title\": [\n                \"TCB\",\n                \"MicroBil\",\n                \"TBil\",\n                \"DBil\"\n            ]\n        },\n        {\n            \"select\": \"感染指數:WBC、Band、Seg、Lym、PCT(procalcitonin)、CRP\",\n            \"index\": 10,\n            \"title\": [\n                \"WBC\",\n                \"Band\",\n                \"Seg\",\n                \"Lym\",\n                \"PCT(procalcitonin)\",\n                \"CRP\"\n            ]\n        }\n    ]\n}\nexport function FlagReg() {\n    return [\n        {\n            item: \"Respirator\",\n            \"ParseValueUD\": [\n                \"Restriction\"\n            ],\n            \"ParseValueTRT\": []\n        },\n        {\n            item: \"TPN\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"NPO\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"Anti\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"Foley\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"Drain\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        }\n    ]\n}\nexport function QDC() {\n    return {\n        \"Feeding\": [\n            \"進食\"\n        ],\n        \"IV\": [\n            \"血品\",\n            \"輸液\"\n        ],\n        \"Urine\": [\n            \"排尿\"\n        ],\n        \"Other\": [\n            \"失血\",\n            \"滲液\",\n            \"嘔吐\",\n            \"引流\",\n            \"穿刺\",\n            \"透析\",\n            \"沖洗\",\n            \"排便\"\n        ]\n    }\n}\n\nexport function ChronicLab() {\n    return {\n        \"Biochemical\": [\n        ],\n        \"Blood\": [\n            \"BLOOD\"\n        ],\n        \"Cultivate\": [\n\n        ],\n        \"GAS\": [\n\n        ],\n        \"Glu\": [\n\n        ],\n        \"Radiation\": [\n        ]\n    }\n}\n\nexport function NonLabExamReportParser() {\n    return [\n        {\n            parser_name: \"CBC\",\n            apply_condition: {\n                name: \"CBC|WBC|HB|PLT\",\n                sample: null,\n                lab: null,\n                start_time: null,\n                end_time: null,\n            },\n            mappings: [\n                {\n                    key: \"Hb\",\n                    regex_str: \"HB:\\\\s+(\\\\d+(.\\\\d)?)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"WBC\",\n                    regex_str: \"wbc:\\\\s+(\\\\d+)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"PLT\",\n                    regex_str: \"plt:\\\\s+(\\\\d+)\",\n                    regex_flags: 'ism',\n                    position: 1\n                }\n            ],\n            summary: \"[WBC;-]/[Hb;]/[PLT;-]\"\n        },\n        {\n            parser_name: \"Atypical Respiratory Panel\",\n            apply_condition: {\n                name: \"Atypical Respiratory Panel|CBC|PH|HB|PO2\",\n                sample: null,\n                lab: null,\n                start_time: null,\n                end_time: null,\n            },\n            mappings: [\n                {\n                    key: \"Hb\",\n                    regex_str: \"Hb:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"PH\",\n                    regex_str: \"PH:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"PO2\",\n                    regex_str: \"PO2:\\\\s+\\\\((\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"FIO2\",\n                    regex_str: \"FIO2:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"HCO3\",\n                    regex_str: \"HCO3:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                }\n            ],\n            summary: \"[PH;-]/[Hb;-]/[PO2;-]/[FIO2;-]/[HCO3;-]\"\n        }\n    ]\n}\n\nexport function NonLabExamORDListParser() {\n    return [\n        {\n            parser_name: \"ORDLIST\",\n            apply_condition: {\n                name: \"ORDLIST\",\n                sample: null,\n                lab: null,\n                start_time: null,\n                end_time: null,\n            },\n            mappings: [\n                {\n                    key: \"飲食類別\",\n                    regex_str: \"(CHEST\\\\s+KUB\\\\s+\\\\(FOR\\\\s+BABY\\\\)\\\\s+PORTABLE)|(BRAIN\\\\s+ECHO\\\\s+\\\\(NBD\\\\))\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"管路類別\",\n                    regex_str: \"(BLOOD\\\\s+GAS)|(Atypical\\\\s+Respiratory\\\\s+Panel)|(BLOOD\\\\s+PRODUCTS\\\\s+IRRADIATION)|(Aliqot\\\\s+and\\\\s+storage\\\\s+of\\\\s+blood)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"呼吸類別\",\n                    regex_str: \"(NT-pro-BNP)|(ANTIBODY\\\\s+SCREENING)\",\n                    regex_flags: 'ism',\n                    position: 1\n                }\n            ],\n            summary: \"[CHEST KUB;-]/[BLOOD GAS;-]/[Glucose;-]\"\n        }\n    ]\n}","import React, { Component } from 'react';\nimport { wardstatestringformat } from '../Function/Wardstate'\nimport './Wardcardstatus.scss'\nimport * as ApiProvider from '../API/ApiProvider'\nimport * as ApiGithub from '../API/ApiGithub'\nimport moment from 'moment';\nimport * as RegularData from '../Data/RegularData'\n\nclass Wardcarstatus extends Component {\n    state = {\n        TRTMNTQ1: [],\n        UDORDER0: [],\n        FlagReg: []\n    }\n    componentDidMount() {\n        const { PCASENO, PHISTNUM } = this.props\n        console.log(PCASENO, PHISTNUM )\n        const TRQ1 = ApiProvider.getStoredProcedureTRTMNTQ1(PHISTNUM, PCASENO)\n            .then(data => {\n                console.log(data.data)\n                var List = []\n                const DataList = data.data\n                const time = moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n                if (Array.isArray(DataList)) {\n                    for (let index = 0; index < DataList.length; index++) {\n                        const element = DataList[index];\n                        const elementTime = moment(element.ORBGNDT.toString().trim(), \"YYYY-MM-DD\").valueOf()\n                        if (elementTime === time) {\n                            List.push(element)\n                        }\n                    }\n                }\n                return List\n            })\n            .catch(err => {\n\n            })\n        const UDORDER = ApiProvider.getStoredProcedureUDORDER0(PHISTNUM, PCASENO, \"123\")\n            .then(data => {\n                console.log(data.data)\n                var List = []\n                const dataList = data.data\n                if (Array.isArray(dataList)) {\n                    for (let index = 0; index < dataList.length; index++) {\n                        const status = Number(dataList[index].UDSTATUS)\n                        if (status === 80) {\n                            List.push(dataList[index])\n                        }\n                    }\n                }\n                return List\n            })\n            .catch(err => {\n\n            })\n        const Reg = ApiGithub.getGitHubJson(\"FlagReg.json\")\n            .then(data => {\n                console.log(data.data)\n                return data.data\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        Promise.all([TRQ1, UDORDER, Reg])\n            .then(result => {\n                this.setState({\n                    TRTMNTQ1: result[0],\n                    UDORDER0: result[1],\n                    FlagReg: result[2]\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    render() {\n        function parseFormat(parsestring, parseJson, type) {\n            if (type === \"TR\") {\n                const dataMap = parseJson.map(function (object, index, arr) {\n                    console.log(object)\n                    const parsrarr = object.ParseValueTRT\n                    // console.log(parsrarr)\n                    if (parsrarr.length === 0) {\n                        return {\n                            item: object.item,\n                            Status: false\n                        }\n                    }\n                    const findvlaue = parsrarr.some(function (v, i, a) {\n                        return parsestring.match(v) !== null\n                    })\n                    return {\n                        item: object.item,\n                        Status: findvlaue\n                    }\n                })\n                return dataMap\n            }\n            else {\n                const dataMap = parseJson.map(function (object, index, arr) {\n                    const parsrarr = object.ParseValueUD\n                    if (parsrarr.length === 0) {\n                        return {\n                            item: object.item,\n                            Status: false\n                        }\n                    }\n                    const findvlaue = parsrarr.some(function (v, i, a) {\n                        return parsestring.match(v) !== null\n                    })\n                    return {\n                        item: object.item,\n                        Status: findvlaue\n                    }\n                })\n                console.log(dataMap)\n                return dataMap\n            }\n        }\n\n        const TRDATA = this.state.TRTMNTQ1\n        var FlagstatusList = []\n        for (let index = 0; index < TRDATA.length; index++) {\n            const element = TRDATA[index];\n            const dataObj = parseFormat(element.ORPROCED.toString().trim(), this.state.FlagReg, \"TR\")\n            FlagstatusList.push(dataObj)\n        }\n        const UDORDER = this.state.UDORDER0\n        const TRTMNTQ1 = this.state.TRTMNTQ1\n        const Flag = this.state.FlagReg\n        const AntiStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"Anti\")\n        const TPNStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"TPN\")\n        const NP0Status = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"NPO\")\n        const FoleyStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"Foley\")\n        const DrainStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"Drain\")\n        console.log(AntiStatus, TPNStatus, NP0Status, FoleyStatus, DrainStatus)\n\n\n        const InvasiveRespiratorStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"InvasiveRespirator\")\n        const NonInvasiveRespiratorStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"NonInvasiveRespirator\")\n        const RespiratorStatus = RespiratorStatusParse(InvasiveRespiratorStatus, NonInvasiveRespiratorStatus)\n\n        function RespiratorStatusParse(InvasiveRespiratorStatus, NonInvasiveRespiratorStatus) {\n            if (InvasiveRespiratorStatus === false || NonInvasiveRespiratorStatus === false) {\n                return \"false\"\n            }\n            if (InvasiveRespiratorStatus === true || NonInvasiveRespiratorStatus === true) {\n                return \"false\"\n            }\n            if (InvasiveRespiratorStatus === true) {\n                return '呼(侵入)'\n            }\n            if (NonInvasiveRespiratorStatus === true) {\n                return \"呼(非侵入)\"\n            }\n            return \"--\"\n        }\n\n        const StatusArray = [\n            { \"item\": \"Respirator\", \"data\": RespiratorStatus },\n            { \"item\": \"TPN\", \"data\": TPNStatus },\n            { \"item\": \"NPO\", \"data\": NP0Status },\n            { \"item\": \"Anti\", \"data\": AntiStatus },\n            { \"item\": \"Foley\", \"data\": FoleyStatus },\n            { \"item\": \"Drain\", \"data\": DrainStatus }\n        ]\n        function statusspan(source) {\n            if (source.item === 'Respirator') {\n                return 'gridtwocoltwo'\n            }\n            else return 'gridtwocolone'\n        }\n        function style_change(source) {\n            if (source.item === 'Respirator') {\n                if (source.data === '呼(侵入)') {\n                    return 'statustrue'\n                }\n                if (source.data === '呼(非侵入)') {\n                    return 'statusfalse'\n                }\n                if (source.data === 'true') {\n                    return 'statustrue'\n                }\n                return 'statusfalse'\n\n            }\n            else {\n                if (source.data) {\n                    return 'statustrue'\n                }\n                else {\n                    return 'statusfalse'\n                }\n            }\n        }\n\n\n        const statuslist = StatusArray.map(function (info, index, arr) {\n            return (\n                <div key={index} className={statusspan(info)}>\n                    <t4 className={style_change(info)}>{wardstatestringformat(info)}</t4>\n                </div>\n            );\n        })\n\n\n\n        function parseFlagData(TRTMNTQ1, UDORDER, FlagReg, type) {\n            const Flag = FlagReg.filter(function (value, index, arr) {\n                return value.item === type\n            })\n            const StatusUDORDER = UDORDER.some(function (value, index, arr) {\n                const UDDRGNAM = value.UDDRGNAM.toLowerCase()\n                const UDGNAME = value.UDGNAME.toLowerCase()\n                console.log(Flag[0])\n                const findFlag = Flag[0].ParseValueUD.some(function (value, index, arr) {\n                    return UDDRGNAM.indexOf(value) >= 0 || UDGNAME.indexOf(value)\n                })\n                return findFlag\n            })\n            const StatusTRTMNTQ1 = TRTMNTQ1.some(function (value, index, arr) {\n                const ORPROCED = value.ORPROCED.toLowerCase()\n                const findFlag = Flag[0].ParseValueTRT.some(function (value, index, arr) {\n                    return ORPROCED.indexOf(value) >= 0\n                })\n                return findFlag\n            })\n            if (StatusUDORDER === false && StatusTRTMNTQ1 === false) {\n                return false\n            }\n            return true\n        }\n\n        const source = this.props.source\n        console.log(source)\n        // const source = true\n        return (\n            <div className={source ? \"warscardstatusgrid\" : \"wardinfouserstatusgrid\"}>\n                { statuslist }\n            </div >\n        );\n    }\n}\n\nexport default Wardcarstatus","import React, { useState, useEffect } from \"react\";\nimport { statecolor } from '../Function/Wardstate'\nimport Wardcarstatus from './Wardcardstatus'\nimport * as ApiProvider from '../API/ApiProvider'\nimport './Wardcardvalue.scss'\n\nexport function WardCard(props) {\n    const [CenterMonitorValue, SetCenterMonitorValue] = useState(null)\n    const [HID, SetHID] = useState(\"\")\n    const [Timer, SetTimer] = useState(0)\n    useEffect(() => {\n        const TimerID = setInterval(() => {\n            SetTimer(Timer + 1)\n        }, 5000)\n        return () => clearInterval(TimerID);\n    }, [Timer])\n\n    useEffect(() => {\n        const hisid = props.PHISTNUM.toString().trim()\n        // const hisid = \"TEST1234\"\n        ApiProvider.getHisidwardvalue(hisid)\n            .then(data => {\n                console.log(data.data)\n                const source = data.data\n                const HID = source.phistnum\n                SetCenterMonitorValue(source[0]);\n                SetHID(HID)\n            })\n            .catch(err => {\n                console.log(\"Andy test getHisidwardvalue NG \" + JSON.stringify(err));\n            });\n    }, [Timer]);\n    function InitCenterData(value) {\n        console.log(value)\n        if (value === undefined || value === null || value === \"\") {\n            return \"--\"\n        }\n        else return value\n    }\n    console.log(CenterMonitorValue)\n    if (CenterMonitorValue === null || CenterMonitorValue === undefined) {\n        return null\n    }\n    return (\n        <div className='Wardcardvaluelayout'>\n            <div className='Wardcardvitalvalue'>\n                <div className='valueRows'>\n                    <div>\n                        <t4 style={{ display: \"block\", color: statecolor('HR') }}>HR</t4>\n                        <t2 style={{ display: \"block\", color: statecolor('HR') }}>{InitCenterData(CenterMonitorValue.hr)}</t2>\n                    </div>\n                    <div>\n                        <t4 style={{ display: \"block\", color: statecolor('SpO2') }}>SpO<sub>2</sub></t4>\n                        <t2 style={{ display: \"block\", color: statecolor('SpO2') }}>{InitCenterData(CenterMonitorValue.spo2)}%</t2>\n                    </div>\n                </div>\n                <div className='valueRows'>\n                    <div>\n                        <t4 style={{ display: \"block\", color: statecolor('BP') }}>ABP</t4>\n                        <t2 style={{ display: \"block\", color: statecolor('BP') }}>{InitCenterData(CenterMonitorValue.abpd)}/{InitCenterData(CenterMonitorValue.abps)}({InitCenterData(CenterMonitorValue.abpm)})</t2>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnsGap: \"5px\" }}>\n                        <div>\n                            <t4 style={{ display: \"block\", color: statecolor('RR') }}>RR</t4>\n                            <t2 style={{ display: \"block\", color: statecolor('RR') }}>{InitCenterData(CenterMonitorValue.rr)}</t2>\n                        </div>\n                        <div>\n                            <t4 style={{ display: \"block\", color: statecolor('BT') }}>BT</t4>\n                            <t2 style={{ display: \"block\", color: statecolor('BT') }}>{InitCenterData(CenterMonitorValue.bt)}</t2>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Wardcarstatus source={true} PCASENO={props.PCASENO} PHISTNUM={props.PHISTNUM}></Wardcarstatus>\n        </div>\n    );\n}","function bednumberformat(number) {\n    if (number < 10) {\n        return '0' + number\n    }\n    return number\n}\n\nfunction gender(gender) {\n    if (gender === \"1\") {\n        return '男'\n    }\n    return '女'\n}\n\nfunction WardCardgender(gender) {\n    console.log(gender)\n    if (gender === \"M\") {\n        return '男'\n    }\n    return '女'\n}\n\nfunction pregancybirthdayweekday(pregancy, birthday) {\n    const pregancydays = (new Date(birthday).getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    const pregancyweeks = pregancydays / 7\n    const pregancyweeksdays = pregancydays % 7\n    return '[' + parseInt(pregancyweeks) + '+' + parseInt(pregancyweeksdays) + ']'\n}\n\nfunction pregancynowweek(pregancy) {\n    const pregancydays = (new Date().getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    console.log(pregancydays)\n    const pregancyweeks = pregancydays / 7\n    const pregancyweeksdays = pregancydays % 7\n    console.log(pregancyweeksdays)\n    return '[' + parseInt(pregancyweeks) + '+' + parseInt(pregancyweeksdays) + ']'\n}\n\nfunction pregancytoloaclweeks(pregancy) {\n    const pregancydays = (new Date().getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    console.log(pregancydays)\n    return parseInt(pregancydays / 7)\n}\n\nfunction pregancytolocaldays(pregancy) {\n    const pregancydays = (new Date().getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n\n    return parseInt(pregancydays % 7)\n}\n\nfunction pregancyweek(pregancy, birthday) {\n    const pregancydays = (new Date(birthday).getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    const pregancyweeks = pregancydays / 7\n    return parseInt(pregancyweeks)\n}\n\nfunction pregancydays(pregancy, birthday) {\n    const pregancydays = (new Date(birthday).getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    const pregancyweekdays = pregancydays % 7\n    return parseInt(pregancyweekdays)\n}\n\nfunction birthdayweeks(birthday) {\n    const birthdays = (new Date().getTime() - new Date(birthday).getTime()) / (24 * 60 * 60 * 1000)\n    return parseInt(birthdays / 7)\n}\n\nfunction pregancyweeksanddays(bornweeks, borndays, birthdays) {\n    if (bornweeks === null || bornweeks === undefined || bornweeks === \"\") {\n        return \"[ -- + -- ]\"\n    }\n    if (borndays === null || borndays === undefined || borndays === \"\") {\n        return \"[ -- + -- ]\"\n    }\n    if (birthdays === null || birthdays === undefined || birthdays === \"\") {\n        return \"[ -- + -- ]\"\n    }\n    const localtoborndays = parseInt((new Date().getTime() - new Date(birthdays).getTime()) / (24 * 60 * 60 * 1000)) + parseInt(borndays) + 1\n    const localweeks = parseInt(localtoborndays / 7) + parseInt(bornweeks)\n    const localdays = parseInt(localtoborndays % 7)\n    return \"[\" + localweeks + \"+\" + localdays + \"]\"\n\n}\n\nfunction WeightFormat(BornWeight, Weight) {\n    return BornWeight + \"g -> \" + Weight + \"g\"\n\n}\nexport { bednumberformat, gender, pregancybirthdayweekday, pregancynowweek, pregancyweek, pregancydays, birthdayweeks, pregancytoloaclweeks, pregancytolocaldays, pregancyweeksanddays, WardCardgender, WeightFormat }","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n//Component\nimport * as Wardstate from '../../Function/Wardstate'\nimport * as Wardcardvalue from '../WardCardvalue-k'\nimport { bednumberformat, WardCardgender, pregancyweeksanddays } from '../../Function/Wardbedfunction'\nimport './Wardcarddetail.scss'\n//image\nimport editlogo from '../../Image/svg/edit2.svg'\nimport fileLogo from '../../Image/svg/file1.svg'\nimport file2Logo from '../../Image/svg/file2.svg'\n//antdesign\nimport { Modal, Input, Button } from 'antd';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport X2JS from 'x2js';\nimport moment from 'moment';\n\nclass Wardcarddetail extends Component {\n    state = {\n        hoverstate: \"none\",\n        clickstate: false,\n        mouse_hover: false,\n        edit_hover: false,\n        visible: false,\n        pbasignfo: null,\n        birthdayweight: \"N\",\n        weight: 0,\n        bornweek: 0,\n        bornday: 0,\n        nowweight: 0,\n        report: 0,\n        nonreport: 0,\n        remark: \"\",\n        TRANSINID: \"\",\n        TRANSINDT: \"\",\n        TRANSINTM: \"\"\n    };\n\n    componentDidMount() {\n        this.API_DATA()\n    }\n\n    API_DATA() {\n        const { data } = this.props\n        const source = data\n        const HID = source.PHISTNUM\n        const TRANSINDT = source.TRANSINDT\n        const TRANSINID = source.TRANSINID\n        // const CID = source.PCASENO\n        const beforeOneDay = new Date().getTime() - (24 * 60 * 60 * 1000)\n        ApiProvider.getStoredProcedureRESSECT(HID, 1, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                const ReportList = data.data\n                const mapList = ReportList.filter(function (value, index, array) {\n                    const DTstring = value.ORRCPDT.toString()\n                    const TMstring = value.ORRCPTM.toString()\n                    const time = DTstring + TMstring\n                    return moment(time, 'YYYY-MM-DDHH:mm:ss').valueOf() > beforeOneDay\n                })\n                this.setState({\n                    report: mapList.length\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureRESSECT NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureORDLIST(HID, moment(TRANSINDT, \"YYYYMMDD\").format('YYYY-MM-DD'), \"ALL\", \"DOC3924B\")\n            .then(data => {\n                function datasize(datalist) {\n                    const list = []\n                    for (let index = 0; index < datalist.length; index++) {\n                        const element = datalist[index];\n                        if (element.ORSTATUS === \"31\") {\n                            list.push(element)\n                        }\n                    }\n                    return list.length\n                }\n                this.setState({\n                    nonreport: datasize(data.data)\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getOnePatientRemark(TRANSINID)\n            .then(data => {\n                this.setState({\n                    remark: data.data[0].context\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getOnePatientRemark NG \" + JSON.stringify(err));\n            })\n    }\n\n    //Module show\n    handleOk(string) {\n        this.setState({\n            visible: false\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n    showModal = () => {\n        this.setState({\n            visible: true\n        });\n    };\n\n    Modelrender() {\n        function typefrom(from) {\n            if (from === 'Custom') {\n                return true\n            }\n            return false\n        }\n        const { data } = this.props\n        const source = data\n        const Birthday = source.PBIRTHDT\n        const QTWER = Wardstate.XM2JSON(source.QTWPER)\n        const QMNC = Wardstate.XM2JSON(source.QMNC)\n        const BornWeight = Wardstate.BornWeight(QTWER, Birthday)\n        const BornWeeks = QMNC.weeks\n        const BornDays = QMNC.days\n        return (\n            <Modal\n                width={270}\n                title=\"填寫病床資訊\"\n                visible={this.state.visible}\n                onCancel={this.handleCancel}\n                footer={\n                    <div style={{ display: \"flex\", justifyContent: typefrom(source.type) ? 'space-between' : 'flex-end', alignItems: \"center\" }}>\n                        <Button key=\"delete\" style={typefrom(source.type) ? { border: \"1px solid rgba(208,2,27,1)\", color: \"rgba(208,2,27,1)\" } : { display: \"none\" }} onClick={this.handleCancel}>清床</Button>\n                        <div>\n                            <Button key=\"cancel\" onClick={this.handleCancel}>取消</Button>\n                            <Button key=\"ok\" type=\"primary\" onClick={this.handleOk}>儲存</Button>\n                        </div>\n                    </div>}>\n                <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr\", gridRowGap: \"10px\" }}>\n                    <div className='modulecontent'>\n                        <centerstyle>\n                            <t2>病床號碼:</t2>\n                        </centerstyle>\n                        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                            <div>{bednumberformat(parseInt(source.HBEDNO))}</div>\n                        </div>\n                    </div>\n                    <div className='modulecontent'>\n                        <centerstyle>\n                            <t2>病歷號碼:</t2>\n                        </centerstyle>\n                        <t2>{source.PHISTNUM}</t2>\n                    </div>\n                    <div className='modulecontent'>\n                        <centerstyle>\n                            <t2>出生週數:</t2>\n                        </centerstyle>\n                        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                            <div style={{ marginRight: \"20px\" }}>{BornWeeks}</div>\n                            <t2 style={{ marginRight: \"20px\" }}>週</t2>\n                            <div style={{ marginRight: \"20px\" }}>{BornDays}</div>\n                            <t2>日</t2>\n                        </div>\n                    </div>\n                    <div className='modulecontent'>\n                        <div style={{ display: 'flex', justifyContent: \"space-between\", alignItems: \"cneter\", width: \"69px\" }}>\n                            <t2>生</t2>\n                            <t2>日:</t2>\n                        </div>\n                        <t2>{moment(Birthday, 'YYYYMMDD').format('YYYY/MM/DD')}</t2>\n                    </div>\n                    <div className='modulecontent'>\n                        <centerstyle>\n                            <t2>出生體重:</t2>\n                        </centerstyle>\n                        <div style={{ display: 'flex' }}>\n                            <Input placeholder=\"1200\" id=\"weight\" defaultValue={BornWeight} />&nbsp;g\n                        </div>\n                    </div>\n                </div>\n            </Modal>\n        );\n    }\n    render() {\n        function modedisplay(mode) {\n            if (mode) {\n                return \"block\"\n            }\n            else {\n                return \"none\"\n            }\n        }\n        function valueFormat(value) {\n            if (value === \"\" || value === null || value === undefined) {\n                return \"--\"\n            }\n            return value.toString()\n        }\n        function valueBornWeight(value) {\n            if (value === \"\" || value === null || value === undefined || value === 0) {\n                return \"\"\n            }\n            return value.toString() + \"g → \"\n        }\n        const { data, previewmode, hbedlist } = this.props\n        const source = data\n        const Birthday = source.PBIRHDT\n        const QTWER = Wardstate.XM2JSON(source.QTWPER)\n        const QMNC = Wardstate.XM2JSON(source.QMNC)\n        // const QTWPER = source.QTWER\n        // const QMNC = source.QMNC\n        const BornWeight = Wardstate.BornWeight(QTWER, Birthday)\n        const Weight = Wardstate.NewestWeight(QTWER)\n        const BornWeeks = QMNC.weeks\n        const BornDays = QMNC.days\n\n        const remark = this.state.remark\n\n        if (source === undefined) {\n            return null\n        }\n        return (\n            <div>\n                <div className='wardcarddetailtitle'>\n                    <t3 style={{ color: \"rgba(61, 119, 181, 1)\" }}>{bednumberformat(Number(source.HBEDNO))},{source.PNAMEC.toString().trim()},{WardCardgender(source.PSEX)},{moment(Birthday, 'YYYYMMDD').format('YYYY/MM/DD')},{source.PHISTNUM}</t3>\n                    {/* <div onClick={this.showModal} className='wardcarddetileditbutton'>\n                        <img src={editlogo} alt='editlogo'></img>\n                    </div> */}\n                </div>\n                <div>\n                    <div className='wardinfoweeks'>\n                        <t2 style={{ color: \"rgba(59, 151, 225, 1)\" }}>[{valueFormat(BornWeeks)}+{valueFormat(BornDays)}]&rarr;{pregancyweeksanddays(BornWeeks, BornDays, moment(Birthday, 'YYYYMMDD').format('YYYY/MM/DD'))}</t2>\n                        <t4>{valueBornWeight(BornWeight)}{valueFormat(Weight)}g</t4>\n                        <div className='wardinforeportgroup'>\n                            <img src={fileLogo} alt='fileLogo'></img>\n                            <t4>{this.state.report}</t4>\n                            <img src={file2Logo} alt='file2Logo'></img>\n                            <t4>{this.state.nonreport}</t4>\n                        </div>\n                    </div>\n                    <div style={{ display: modedisplay(previewmode), borderBottomWidth: \"0.5px\", borderBottomColor: \"rgba(215, 238, 255, 1)\", borderBottomStyle: \"solid\" }}>\n                        <Wardcardvalue.WardCard centerdata={source.centerMonitorData} previewmode={previewmode} PHISTNUM={source.PHISTNUM} PCASENO={source.PCASENO}></Wardcardvalue.WardCard>\n                    </div>\n                    <div style={{ width: \"319px\", height: '30px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: \"0px 10px\", position: 'relative' }}>\n                        <div style={{ overflow: \"hidden\", fontSize: \"12px\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\" }}>{remark}</div>\n                        <Link className='patientviewbutton' to={{ pathname: \"/nicu/patient/\" + source.PHISTNUM, state: { \"source\": hbedlist, \"HISID\": source.PHISTNUM, \"CASEID\": source.PCASENO, \"BEDNUMBER\": source.HBEDNO, \"TYPE\": true, \"TRANSINID\": this.state.TRANSINID } }}>\n                            <centerstyle>\n                                <t4>進入病人資料頁面</t4>\n                            </centerstyle>\n                        </Link>\n                    </div>\n                </div>\n                {this.Modelrender()}\n            </div>\n        );\n    }\n}\n\nexport default Wardcarddetail;","import React, { Component } from 'react';\nimport { format_bednumber } from '../../Commonfunction'\nimport editlogo from '../../Image/svg/edit2.svg'\nimport { Modal, Input, DatePicker } from 'antd';\nimport './UnpreviewWardCardDetail.scss'\nimport { bednumberformat } from '../../Function/Wardbedfunction'\n\nclass Unpreviewwardcarddetail extends Component {\n    state = { visible: false, powerLogin: 0 };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n            databool: false,\n            data: null\n        });\n    };\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n\n    handleOk(string) {\n        console.log(string);\n\n        const bednumber = document.getElementById(\"bednumber\").value;\n        const hisnumber = document.getElementById(\"hisid\").value;\n        const birweek = document.getElementById(\"birweek\").value;\n        const birthday = string;\n        const weight = document.getElementById(\"weight\").value;\n        const statedata = {\n            \"BedNumber\": bednumber,\n            \"id\": hisnumber,\n            \"birweek\": birweek,\n            \"birthday\": birthday,\n            \"weight\": weight\n        }\n        console.log(statedata)\n        this.setState({\n            visible: false,\n            data: statedata,\n            databool: false\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    savestatus(string) {\n        console.log(string)\n    }\n\n    render() {\n        function modedisplay(mode) {\n            if (mode) {\n                return \"none\"\n            }\n            else {\n                return \"block\"\n            }\n        }\n        const number = this.props.bednumber\n        const { previewmode } = this.props\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div style={{ height: '40px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', backgroundColor: \"rgba(215, 238, 255, 1)\", padding: \"9px 10px\" }}>\n                    <t3 style={{ color: \"rgba(61, 119, 181, 1)\" }}>{format_bednumber(number)}/--</t3>\n                    <div className='wardcardeditbtn' onClick={this.showModal} style={{ display: this.state.powerLogin >= 2 ? \"flex\" : \"none\" }}>\n                        <img src={editlogo} alt='editlogo'></img>\n                    </div>\n                    <Modal\n                        width={270}\n                        title=\"填寫病床資訊\"\n                        visible={this.state.visible}\n                        onOk={() => this.handleOk(\"2019/12/12\")}\n                        onCancel={this.handleCancel}\n                    >\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr\", gridRowGap: \"10px\" }}>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>病床號碼:</t2>\n                                </centerstyle>\n                                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                    <div>{bednumberformat(number)}</div>\n                                </div>\n                            </div>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>病歷號碼:</t2>\n                                </centerstyle>\n                                <Input id=\"hisid_wardcard\" />\n                            </div>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>出生週數:</t2>\n                                </centerstyle>\n                                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                    <Input id='week' placeholder=\"20\" style={{ marginRight: \"5px\" }}></Input>\n                                    <t2 style={{ marginRight: \"5px\" }}>週</t2>\n                                    <Input id='days' placeholder=\"20\" style={{ marginRight: \"5px\" }}></Input>\n                                    <t2>日</t2>\n                                </div>\n                            </div>\n                            <div className='modulecontent'>\n                                <div style={{ display: 'flex', justifyContent: \"space-between\", alignItems: \"cneter\", width: \"69px\" }}>\n                                    <t2>生</t2>\n                                    <t2>日:</t2>\n                                </div>\n                                <DatePicker placeholder=\"選擇日期\" id=\"birthday\" />\n                            </div>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>出生體重:</t2>\n                                </centerstyle>\n                                <div style={{ display: 'flex' }}><Input placeholder=\"120\" id=\"weight\" />&nbsp;g</div>\n                            </div>\n                        </div>\n                    </Modal>\n                </div>\n                <div style={{ height: '30px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: \"10px\" }}>\n                    <div style={{ fontSize: '14px', color: \"black\" }}>\n                        \"無資料\"\n                    </div>\n                </div>\n                <div style={{ display: modedisplay(previewmode) }}>\n                    <div style={{ height: '30px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: \"10px\" }}></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Unpreviewwardcarddetail;","\nconst Month_format = (time) => {\n    switch (time) {\n        case 0:\n            return \"01\";\n        case 1:\n            return \"02\";\n        case 2:\n            return \"03\";\n        case 3:\n            return \"04\";\n        case 4:\n            return \"05\";\n        case 5:\n            return \"06\";\n        case 6:\n            return \"07\";\n        case 7:\n            return \"08\";\n        case 8:\n            return \"09\";\n        case 9:\n            return \"10\";\n        case 10:\n            return \"11\";\n        case 11:\n            return \"12\";\n        default:\n            return null;\n    }\n};\nconst format_bednumber = (number) => {\n    if (number < 10) {\n        return \"0\" + number;\n    }\n    return number;\n}\n\nexport { Month_format,format_bednumber }","import React, { Component } from 'react';\nimport { Input, Button } from 'antd';\nimport editlogo from '../Image/svg/Edit.svg'\nimport './Wardnote.scss'\nimport deleteimg from '../Image/svg/delete.svg'\nimport detail from '../Image/svg/details.svg'\nimport { Tooltip } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider';\nimport moment from 'moment'\n\nclass WardcardNote extends Component {\n    _isMounted = false;\n    state = {\n        editstate: false,\n        AnnoceRawData: [],\n        AnnoceDisplayData: [],\n        inputContent: undefined,\n        powerLogin: 0\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n    componentDidMount() {\n        this.onInputChange = this.onInputChange.bind(this);\n\n        this.queryAllAnnounce();\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    queryAllAnnounce() {\n        ApiProvider.getAllAnnounce()\n        .then(result => {\n            console.log(\"getAllAnnounce OK \" + JSON.stringify(result));\n            this.setState({\n                AnnoceRawData: result.data,\n                AnnoceDisplayData: result.data\n            })\n        })\n        .catch(err => {\n            console.log(\"getAllAnnounce NG \" + JSON.stringify(err));\n        });\n    }\n    canceledit() {\n        //取消前先拿取server資料\n        this._isMounted = true\n        this.setState({\n            editstate: false,\n            AnnoceDisplayData: JSON.parse(JSON.stringify(this.state.AnnoceRawData))\n        });\n    }\n\n    okeditlist() {\n        //確定上傳\n        this.setState({\n            editstate: false\n        });\n        ApiProvider.createAnnounce(this.state.AnnoceDisplayData)\n        .then(result => {\n            console.log(\"createAnnounce OK \" + JSON.stringify(result));\n            this.queryAllAnnounce();\n        })\n        .catch(err => {\n            console.log(\"createAnnounce NG \" + JSON.stringify(err));\n        });\n    }\n\n    editlist() {\n        this.setState({\n            editstate: !this.state.editstate,\n            AnnoceDisplayData: (this.state.editstate) ? JSON.parse(JSON.stringify(this.state.AnnoceDisplayData)) : JSON.parse(JSON.stringify(this.state.AnnoceRawData))\n        });\n    }\n\n    onInputChange(event) {\n        this.setState({inputContent: event.target.value})\n    }\n\n    AddNewannouce() {\n        const announce = this.state.AnnoceDisplayData;\n        const newAnnounce = {\n            context: this.state.inputContent,\n            time: +(new Date()),\n            editor: \"K醫生\",\n            transinno: \"4\"\n        }\n        announce.push(newAnnounce)\n        this.setState({\n            AnnoceDisplayData: announce,\n            inputContent: undefined\n        });\n    }\n\n    ondeleteannounce(element) {\n        const announce = this.state.AnnoceDisplayData;\n        const index = announce.findIndex(item => item === element);\n        announce.splice(index, 1);\n        this.setState({\n            AnnoceDisplayData: announce\n        });\n    }\n    announcelist(announcelist, status) {\n        var list = []\n        if (announcelist === null || announcelist.length === 0) {\n            list.push(\n                <div>無公告</div>\n            )\n        }\n        for (let index = 0; index < announcelist.length; index++) {\n            const element = announcelist[index];\n            list.push(\n                <div className='announcelistcontext'>\n                    <t2>{index + 1}.{element.context}</t2>\n                    {this.editstatus(element, status)}\n                </div>\n            )\n        }\n        return list\n    }\n    editstatus(element, status) {\n        console.log(element)\n        const time = moment(element.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n        const localTime = moment.utc(time).toDate()\n        const string = element.editor + '醫師於' + moment(localTime).format(\"MM/DD HH:mm\") + '更新'\n        if (status) {\n            return (\n                <img src={deleteimg} alt='deletelogo' onClick={() => this.ondeleteannounce(element)}></img>\n            );\n        }\n        return (\n            <Tooltip placement=\"top\" title={string}>\n                <img src={detail} alt='detaillogo'></img>\n            </Tooltip>\n        );\n    }\n    render() {\n\n        function changehight(state) {\n            if (!state) {\n                return 'wardnotecontextdisedit'\n            }\n            else {\n                return 'wardnotecontextonedit'\n\n            }\n        }\n        const annData = this.state.AnnoceDisplayData\n        return (\n            <div style={{marginTop:'10px'}}>\n                <div className='wardnotetitle'>\n                    <t2>病房公告</t2>\n                    <div style={{ width: \"18px\" }} onMouseUp={() => this.editlist()} style={{ display: this.state.powerLogin >= 2 ? \"flex\" : \"none\" }}>\n                        <img src={editlogo} alt='editlogo'></img>\n                    </div>\n                </div>\n                <div>\n                    <div className={changehight(this.state.editstate)}>\n                        {this.announcelist(annData, this.state.editstate)}\n                    </div>\n                    <div style={{ display: this.state.editstate ? \"block\" : \"none\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"c\" }}>\n                        <div style={{ height: \"50px\", backgroundColor: \"rgba(238,238,238,1)\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                            <Input placeholder=\"新增公告內容\" style={{ marginLeft: \"16px\", width: \"315px\" }} value={this.state.inputContent} onChange={this.onInputChange}/>\n                            <Button type=\"primary\" style={{ marginRight: \"16px\" }} onClick={() => this.AddNewannouce()}>\n                                新增\n                            </Button>\n                        </div>\n                        <div style={{ height: \"50px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <Button style={{ margin: \"10px\", width: \"90px\" }} onClick={() => this.canceledit()}>取消</Button>\n                            <Button type=\"primary\" style={{ margin: \"10px\", width: \"90px\" }} onClick={() => this.okeditlist()}>儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WardcardNote;","import React, { Component } from 'react';\nimport { Month_format } from '../Commonfunction'\n\nclass Bedinformation extends Component {\n    state = {\n        tableselect: false\n    }\n\n    SelectTruechange() {\n        this.setState({\n            tableselect: true\n        })\n    }\n\n    SelectFalsechange() {\n        this.setState({\n            tableselect: false\n        })\n    }\n\n    sendReturnSelect = (id) => {\n        this.props.parentCallback(id);\n    }\n\n    Selectswitch(id, select) {\n        if (id === select) {\n            return true\n        }\n        else return false\n    }\n    render() {\n        function weekdatformat(weekday) {\n            switch (weekday) {\n                case 0:\n                    return \"SUN\"\n                case 1:\n                    return \"MON\"\n                case 2:\n                    return \"TUE\"\n                case 3:\n                    return \"WED\"\n                case 4:\n                    return \"THU\"\n                case 5:\n                    return \"FRI\"\n                case 6:\n                    return \"SAT\"\n                default:\n                    return null\n            }\n        }\n        const { selectkey, idkey, localtime, data } = this.props\n        const day = Month_format(new Date(localtime).getMonth()) + \"/\" + new Date(localtime).getDate()\n        const weekday = new Date(localtime).getDay()\n        const Unselect_tablestyle = { height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"1px solid rgba(238,238,238,1)\", borderLeftWidth: \"0px\" }\n        const select = this.Selectswitch(selectkey, idkey)\n        if (data === null) {\n            return (\n                <div style={select ? { border: \"1px solid rgba(59, 151, 225, 1)\", marginTop: '-2px' } : { cursor: \"pointer\" }} onClick={() => this.sendReturnSelect({ \"idkey\": idkey, \"time\": localtime })}>\n                    <div style={Unselect_tablestyle}>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                            <t2 style={{ textAlign: \"center\" }}>{day}</t2>\n                            <t2 style={{ textAlign: \"center\" }}>{weekdatformat(weekday)}</t2>\n                        </div>\n                    </div>\n                    <div style={Unselect_tablestyle}>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                            <t2 style={{ textAlign: \"center\" }}>0(12)</t2>\n                            <t2 style={{ textAlign: \"center\" }}>--%</t2>\n                        </div>\n                    </div>\n                    <t2 style={Unselect_tablestyle}>--</t2>\n                    <t2 style={Unselect_tablestyle}>--</t2>\n                    <t2 style={Unselect_tablestyle}>--</t2>\n                    <t2 style={Unselect_tablestyle}>--</t2>\n                    <t2 style={Unselect_tablestyle}>--</t2>\n                </div>\n            );\n\n        }\n        return (\n            <div style={select ? { border: \"1px solid rgba(59, 151, 225, 1)\", marginTop: '-2px' } : { cursor: \"pointer\" }} onClick={() => this.sendReturnSelect({ \"idkey\": idkey, \"time\": localtime })}>\n                <div style={Unselect_tablestyle}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                        <t2 style={{ textAlign: \"center\" }}>{day}</t2>\n                        <t2 style={{ textAlign: \"center\" }}>{weekdatformat(weekday)}</t2>\n                    </div>\n                </div>\n                <div style={Unselect_tablestyle}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                        <t2 style={{ textAlign: \"center\" }}>{data.hbedcount}(12)</t2>\n                        <t2 style={{ textAlign: \"center\" }}>{parseInt(parseInt(data.hbedcount) * 100 / 12)}%</t2>\n                    </div>\n                </div>\n                <t2 style={Unselect_tablestyle}>{data.transoutcount}</t2>\n                <t2 style={Unselect_tablestyle}>{data.transincount}</t2>\n                <t2 style={Unselect_tablestyle}>{data.rtcount}</t2>\n                <t2 style={Unselect_tablestyle}>{data.nonrtcount}</t2>\n                <t2 style={Unselect_tablestyle}>{data.tpncount}</t2>\n            </div>\n        );\n    }\n}\n\nexport default Bedinformation\n","import moment from 'moment';\n\nfunction HISAPI_stringtodate(datestring) {\n    function addzero(value){\n        if (value < 10) {\n            return \"0\"+value\n        }\n        return value\n    }\n    console.log(datestring)\n    const datenumber = Number(datestring)\n    console.log(datenumber)\n    const dateformat = parseInt(datenumber / 10000) + '-' + parseInt(parseInt(datenumber / 100) % 100) + '-' + addzero(parseInt(datenumber % 100))\n    // console.log(\"dateformat = \" + dateformat)\n    return dateformat\n}\n\nfunction yyyymmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + \"/\" + Monthformat(new Date(timestamp).getMonth()) + \"/\" + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction yyyymmddstring(timestamp){\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + Monthformat(new Date(timestamp).getMonth()) + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction yyyymmfirstweeksate(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    return new Date(timestamp).getFullYear() + \"/\" + Monthformat(new Date(timestamp).getMonth()) + \"/1\"\n}\n\n\n\nfunction mmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return Monthformat(new Date(timestamp).getMonth()) + '/' + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction weekdateformat(timestamp) {\n    const param = new Date(timestamp).getDay()\n    const weekarray = ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六']\n    return weekarray[param]\n}\n\nfunction weekdateformatcalender(timestamp) {\n    const param = new Date(timestamp).getDay()\n    const weekarray = ['日', '一', '二', '三', '四', '五', '六']\n    return weekarray[param]\n}\n\nfunction hhmmssformat(timestamp) {\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return addZero(new Date(timestamp).getHours()) + ':' + addZero(new Date(timestamp).getMinutes())\n}\n\nfunction hhmmssformattohalf(timestamp) {\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return addZero(new Date(timestamp).getHours()) + ':30:00'\n}\n\n\nfunction yyyymmddHHmmfromat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return new Date(timestamp).getFullYear().toString() + Monthformat(new Date(timestamp).getMonth()).toString() + Dateformat(new Date(timestamp).getDate()).toString() + addZero(new Date(timestamp).getHours()).toString() + addZero(new Date(timestamp).getMinutes()).toString()\n}\n\nfunction MMDDhhmmfromat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return Monthformat(new Date(timestamp).getMonth()) + '/' + Dateformat(new Date(timestamp).getDate()) + ' ' + addZero(new Date(timestamp).getHours()) + ':' + addZero(new Date(timestamp).getMinutes())\n}\n\n\nfunction daysdiff(newtime, oldtime) {\n    const timestampdiff = new Date(newtime).getTime() - new Date(oldtime).getTime()\n    const dissdays = timestampdiff / (24 * 60 * 60 * 1000)\n    return parseInt(dissdays)\n}\n\n\nfunction disabledDate(current) {\n    // Can not select days before today and today\n    console.log(current)\n    return current && current < moment().endOf('day');\n}\n\nfunction compareday(date) {\n    console.log(new Date(date).getTime(), new Date().getTime())\n    if (new Date(date).getTime() > new Date().getTime()) {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunction formatxArrayhalf(time, interval) {\n    var xAxisarray = []\n    if (interval === 24) {\n        for (let index = 0; index < 144; index++) {\n            xAxisarray.push(time + (index * 10 * 60 * 1000))\n        }\n    }\n    if (interval === 18) {\n        for (let index = 0; index < 18; index++) {\n            xAxisarray.push(time + (60 * 60 * 1000 * 2) + (index * 60 * 60 * 1000 * 4))\n        }\n    }\n\n    if (interval === 21) {\n        for (let index = 0; index < 21; index++) {\n            xAxisarray.push(time + (60 * 60 * 1000 * 4) + (index * 60 * 60 * 1000 * 8))\n        }\n    }\n    if (interval === 14) {\n        for (let index = 0; index < 14; index++) {\n            xAxisarray.push(time + (60 * 60 * 1000 * 12) + (index * 60 * 60 * 1000 * 24))\n        }\n    }\n    return xAxisarray\n}\n\n\nfunction formatendtime(time) {\n    const endtime = new Date(yyyymmddformat(time)).getTime() + (31 * 60 * 60 * 1000)\n    return endtime\n}\n\nfunction formatintervaldays(days, interval) {\n    //false:一天 true:三天\n    if (interval === 1) {\n        return days - (24 * 60 * 60 * 1000) * 1\n\n    }\n    if (interval === 3) {\n        return days - (24 * 60 * 60 * 1000) * 3\n\n    }\n    else {\n        return null\n    }\n}\n\nfunction datestringformat(datestring) {\n    function addzero(value){\n        if (value < 10) {\n            return \"0\"+value\n        }\n        return value\n    }\n    const datenumber = Number(datestring)\n    const dateformat = parseInt(datenumber / 10000) + '/' + parseInt(parseInt(datenumber / 100) % 100) + '/' + addzero(parseInt(datenumber % 100))\n    // console.log(\"dateformat = \" + dateformat)\n    return dateformat\n}\n\nfunction apiyyyymmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + \"-\" + Monthformat(new Date(timestamp).getMonth()) + \"-\" + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction nisapiyyyymmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + Monthformat(new Date(timestamp).getMonth()) + Dateformat(new Date(timestamp).getDate())\n}\nexport {\n    yyyymmddformat,\n    weekdateformat,\n    hhmmssformat,\n    mmddformat,\n    MMDDhhmmfromat,\n    daysdiff,\n    disabledDate,\n    compareday,\n    weekdateformatcalender,\n    yyyymmfirstweeksate,\n    hhmmssformattohalf,\n    formatxArrayhalf,\n    formatendtime,\n    formatintervaldays,\n    datestringformat,\n    yyyymmddHHmmfromat,\n    yyyymmddstring,\n    apiyyyymmddformat,\n    nisapiyyyymmddformat,\n    HISAPI_stringtodate\n}","import React, { Component } from 'react';\nimport Bedinformation from './Bedinfo'\nimport { DatePicker } from 'antd';\nimport moment from 'moment';\nimport * as apiProvide from '../API/ApiProvider'\nimport { yyyymmddformat } from '../Function/Timeformat'\nimport './WardBedinformation.scss'\n\nclass Wardbedinformation extends Component {\n    state = {\n        subselectdate: null,\n        selectid: null,\n        selectDate: moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf(),\n        bedinfo: []\n    }\n    componentDidMount() {\n        this.apiData(this.state.selectDate)\n    }\n    apiData(selectDate) {\n        apiProvide.getWardDebInfo(moment(selectDate).format(\"YYYY-MM-DD\"))\n            .then(data => {\n                this.setState({\n                    bedinfo: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n                // this.setState({\n                //     bedinfo: [\n                //         {\n                //           \"transincount\": 2,\n                //           \"rtcount\": 0,\n                //           \"transoutOutcountperson\": [],\n                //           \"tpncount\": 0,\n                //           \"transoutIncountperson\": [],\n                //           \"hbedcount\": 12,\n                //           \"transoutcount\": 3,\n                //           \"nonrtcount\": 0,\n                //           \"Date\": \"20200127\"\n                //         }\n                //       ]\n                // })\n    }\n    onChangeDate = (date, datestring) => {\n        this.setState(\n            {\n                selectDate: date.valueOf(),\n                selectid: null\n            }\n        )\n    }\n    callbackFunction = (idnumber) => {\n        this.setState({\n            selectid: idnumber.idkey,\n            subselectdate: idnumber.time\n        })\n    }\n    transferListlayout(trans) {\n        var translist = []\n        for (let index = 0; index < trans.length; index++) {\n            const element = trans[index];\n            translist.push(\n                <div className='wardbedinfoitemcontextgridRow'>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>{element.caseid}</t2>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>{element.pnamec}</t2>\n                </div>\n            )\n        }\n        return translist\n    }\n    infoitem() {\n        const selectDateitem = this.state.subselectdate\n        const bedinfo = this.state.bedinfo\n        const filterdate = bedinfo.filter(function (info, index) {\n            const tempDate = moment(info.Date, 'YYYYMMDD')\n            return yyyymmddformat(tempDate) === yyyymmddformat(selectDateitem)\n        })\n        if (this.state.selectid === null) {\n            return null\n        }\n        else {\n            if (filterdate.length === 0) {\n                //null\n                return (\n                    <div>\n                        <div className='wardbedinfoitemtriangle'>\n                            <div className='triangle'></div>\n                        </div>\n                        <div className='wardbedinfoitemcontext'>\n                            <div className='wardbedinfoitemcontextgrid'>\n                                <div>\n                                    <t2 className='wardbedinfoitemcontexttitle'>轉入病人清單</t2>\n                                    <div className='wardbedinfoitemcontextgridlayout'>\n                                        <div className='wardbedinfoitemcontextgridRow'>\n                                            <t2 className='wardbedinfoitemcontextgridRowStyle'>病歷號碼</t2>\n                                            <t2 className='wardbedinfoitemcontextgridRowStyle'>姓名</t2>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div>\n                                    <t2 className='wardbedinfoitemcontexttitle'>轉出病人清單</t2>\n                                    <div className='wardbedinfoitemcontextgridlayout'>\n                                        <div className='wardbedinfoitemcontextgridRow'>\n                                            <t2 className='wardbedinfoitemcontextgridRowStyle'>病歷號碼</t2>\n                                            <t2 className='wardbedinfoitemcontextgridRowStyle'>姓名</t2>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n            else {\n                const transIn = filterdate[0].transoutIncountperson\n                const transOut = filterdate[0].transoutOutcountperson\n                return (\n                    <div>\n                        <div className='wardbedinfoitemtriangle'>\n                            <div className='triangle'></div>\n                        </div>\n                        <div className='wardbedinfoitemcontext'>\n                            <div className='wardbedinfoitemcontextgrid'>\n                                <div>\n                                    <t2 className='wardbedinfoitemcontexttitle'>轉入病人清單</t2>\n                                    <div className='wardbedinfoitemcontextgridlayout'>\n                                        <div className='wardbedinfoitemcontextgridRow'>\n                                            <t2 className='wardbedinfoitemcontextgridRowStyle'>病歷號碼</t2>\n                                            <t2 className='wardbedinfoitemcontextgridRowStyle'>姓名</t2>\n                                        </div>\n                                        {this.transferListlayout(transIn)}\n                                    </div>\n                                </div>\n                                <div>\n                                    <t2 className='wardbedinfoitemcontexttitle'>轉出病人清單</t2>\n                                    <div className='wardbedinfoitemcontextgridlayout'>\n                                        <div className='wardbedinfoitemcontextgridRow'>\n                                            <t2 className='wardbedinfoitemcontextgridRowStyle'>病歷號碼</t2>\n                                            <t2 className='wardbedinfoitemcontextgridRowStyle'>姓名</t2>\n                                        </div>\n                                        {this.transferListlayout(transOut)}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n        }\n\n    }\n    bedinfotitle() {\n        const maparray = ['天數', '佔床數', '轉出人數', '轉入人數', '入侵式呼吸器', '非入侵式呼吸器', 'TPN人數']\n        const title = maparray.map(function (info, index) {\n            return (\n                <div className='wardbedinfotablerowtitle'>\n                    <t2>{info}</t2>\n                </div>\n            );\n        })\n        return title\n    }\n    weekbedinfo() {\n        var infolist = []\n        const infoList = this.state.bedinfo\n        const dateTime = this.state.selectDate\n        for (let i = 0; i < 7; i++) {\n            const localtime = dateTime - (i * 24 * 60 * 60 * 1000);\n            const filterdate = infoList.filter(function (info, index) {\n                const tempDate = moment(info.Date, 'YYYYMMDD').valueOf()\n                return tempDate === localtime\n            })\n            if (filterdate.length === 0) {\n                infolist.push(\n                    <Bedinformation data={null} key={i} localtime={localtime} selectkey={this.state.selectid} idkey={i} parentCallback={this.callbackFunction}></Bedinformation>\n                )\n            }\n            else {\n                infolist.push(\n                    <Bedinformation data={filterdate[0]} key={i} localtime={localtime} selectkey={this.state.selectid} idkey={i} parentCallback={this.callbackFunction}></Bedinformation>\n                )\n            }\n        }\n        infolist.reverse()\n        return infolist\n\n    }\n    render() {\n        function disabledDate(current) {\n            // Can not select days before today and today\n            return current && current > moment().endOf('day');\n        }\n        return (\n            <div style={{ marginTop: \"10px\" }}>\n                <div className='wardbrdinfomationtitle'>\n                    <centerstyle>\n                        <t2>\n                            床位資訊\n                        </t2>\n                    </centerstyle>\n                    <DatePicker defaultValue={moment(this.state.selectDate)} format={\"YYYY/MM/DD\"} onChange={this.onChangeDate} allowClear={false} />\n                </div>\n                <div className='wardbedinformationcontext'>\n                    <div>\n                        {this.bedinfotitle()}\n                    </div>\n                    {this.weekbedinfo()}\n                </div>\n                {this.infoitem()}\n            </div>\n        );\n    }\n}\n\nexport default Wardbedinformation;\n","import React, { Component } from 'react';\nimport detaillogo from '../Image/svg/details.svg'\nimport editlogo from '../Image/svg/Edit.svg'\nimport { Tooltip, Input, Button, Select } from 'antd';\nimport './Schedule_event.scss'\nimport { yyyymmddformat, hhmmssformat } from '../Function/Timeformat'\nimport * as ApiProvider from '../API/ApiProvider';\n//資料\n// import { eventdata } from '../jsonResponse'\nimport { eventData } from '../Data/Wardviewdata-jack'\nimport moment from 'moment';\n\nclass Schedule_event_list extends Component {\n    state = {\n        detailstate: \"none\",\n        pressitemstate: \"all\",\n        items_interval: 0,\n        powerLogin: 0,\n        EditMode: false,\n        inputContent: '',\n        selSchedule: '排程',\n\n        Scheduledata: [],\n        status: false,\n        PickerDate: moment().valueOf(),\n        TRANSINID: null\n    }\n\n    querySchedule(time, ID) {\n        const st = moment(moment(time).format(\"YYYY/MM/DD\"), \"YYYY/MM/DD\").valueOf()\n        const et = moment(moment(time).format(\"YYYY/MM/DD\"), \"YYYY/MM/DD\").valueOf() + (24 * 60 * 60 * 1000)\n        console.log(ID, st, et)\n        ApiProvider.getOnePatientSchedule(ID, st, et)\n            .then(data => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n                this.setState({ Scheduledata: data.data })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }\n\n    queryALLSchedule() {\n        ApiProvider.getAllSchedule()\n            .then(data => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n                this.setState({ Scheduledata: data.data })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }\n    componentDidMount() {\n        this.onInputChange = this.onInputChange.bind(this);\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        const source = this.props.source\n        if (source === 1) {\n            const ID = this.props.caseinfo.TRANSINID\n            const date = this.props.PickerDate\n            console.log(this.props.caseinfo)\n            if (ID === null) {\n\n            }\n            else {\n                this.setState({\n                    PickerDate: date,\n                    TRANSINID: ID\n                })\n                this.querySchedule(date, ID)\n            }\n        }\n        else {\n            //get ALL\n            this.queryALLSchedule()\n        }\n\n    }\n\n    componentDidUpdate() {\n        const source = this.props.source\n        if (this.state.status) {\n            this.setState({ status: false })\n            if (source === 1) {\n                const ID = this.props.caseinfo.TRANSINID\n                this.querySchedule(this.state.PickerDate, ID)\n            }\n            else {\n                //get ALL\n                this.queryALLSchedule()\n            }\n        }\n        const propsDate = this.props.PickerDate\n        const stateDate = this.state.PickerDate\n        if (propsDate !== stateDate) {\n            this.setState({ PickerDate: propsDate })\n            if (source === 1) {\n                const ID = this.props.caseinfo.TRANSINID\n                console.log(moment(propsDate).format(\"YYYYMMDDHHmmss\"))\n                console.log(moment(stateDate).format(\"YYYYMMDDHHmmss\"))\n                this.querySchedule(propsDate, ID)\n            }\n            else {\n                //get ALL\n            }\n        }\n    }\n    selSchedule(value) {\n        this.setState({ selSchedule: value })\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString()\n        const writter = sessionStorage.getItem(\"user\")\n        const name = this.props.caseinfo.PBASINGNINFO.PNAMEC\n        const hisid = this.props.caseinfo.HISID\n        ApiProvider.createPatientSchedule(this.props.caseinfo.PLOCSTART.HBEDNO, this.state.inputContent, timeNowStr, this.props.caseinfo.TRANSINID, this.state.selSchedule, writter, name, hisid)\n            .then(data => {\n                console.log(\" OK \" + JSON.stringify(data.data))\n                this.setState(\n                    {\n                        EditMode: false,\n                        inputContent: undefined,\n                        status: true\n                    })\n            })\n            .catch(err => {\n                console.log(\" Err \" + JSON.stringify(err))\n            })\n    }\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    timechange(timestamp) {\n        const changetime = new Date(timestamp).getHours() + \":\" + new Date(timestamp).getMinutes()\n        return changetime\n    }\n\n    pressbtn(pressitem) {\n        this.setState(\n            {\n                pressitemstate: pressitem\n            }\n        );\n    }\n    listevent() {\n        // var eventdatalist = eventdata\n        const scheduleData = this.props.data;\n        console.log(scheduleData)\n\n\n        function itemchange(changeitem) {\n            switch (changeitem) {\n                case \"事件\":\n                    return \"事\"\n                case \"排程\":\n                    return \"排\"\n                default:\n                    return \"\"\n            }\n        }\n\n        function checkbackground(string) {\n            switch (string) {\n                case \"排程\":\n                    return \"rgba(124,179,5,1)\"\n                case \"事件\":\n                    return \"rgba(46,100,164,1)\"\n                default:\n                    return \"rgba(124,179,5,1)\"\n            }\n        }\n        function scheduleList(BtnType) {\n            if (BtnType === \"all\") {\n                return ScheduleList\n            }\n            const scheduleListFilter = ScheduleList.filter(function (info, index, arr) {\n                return info.type === BtnType\n            })\n            return scheduleListFilter\n        }\n        const eventstate = this.state.pressitemstate\n        const ScheduleList = this.state.Scheduledata\n        // const patientdata = this.props.caseinfo\n        // console.log(this.props)\n        if (ScheduleList.length === 0) {\n            return (<div>本日無排程及事件</div>);\n        }\n        const RenderData = scheduleList(eventstate)\n        const CellRender = RenderData.map(function (info, index, arr) {\n            const time = moment(info.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n            const localTime = moment.utc(time).toDate()\n            const text = <div>{info.writter}醫師於{moment(localTime).format(\"YYYY/MM/DD HH:mm:ss\")}更新</div>\n            return (\n                <div key={index} className='CellLayout'>\n                    <div className='Context'>\n                        <div style={{ height: '30px', width: \"30px\", borderRadius: \"4px\", backgroundColor: checkbackground(info.type), display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <t2 style={{ color: 'white' }}>{itemchange(info.type)}</t2>\n                        </div>\n                        <div style={{ fontSize: \"16px\" }}>床{info.bednumber}/{info.name} {moment(localTime).format(\"HH:mm\")} {info.context}</div>\n                    </div>\n                    <Tooltip placement=\"right\" title={text}>\n                        <div>\n                            <img src={detaillogo} alt='detaillogo'></img>\n                        </div>\n                    </Tooltip>\n                </div>\n            );\n        })\n        return CellRender\n    }\n\n\n    //測驗項目功能_區間按鈕樣式\n    SwitchTestItemInterval(testiteminterval) {\n        const stylestate = this.state.pressitemstate\n        if (testiteminterval === stylestate) {\n            return 'buttonselect'\n        }\n        else return 'buttonUnselect'\n    }\n    //測驗項目功能_區間按鈕選擇\n    Onchangetimeinterval(changestate) {this.setState({items_interval: changestate})}\n    EditControl() {\n        const edit = this.props.editstatus\n        if (edit) {\n            return (\n                <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin > 0 ? \"flex\" : \"none\" }}>\n                    <img src={editlogo} alt=\"editlogo\" />\n                </div>\n            );\n        }\n        return null\n    }\n    render() {\n        const { title } = this.props\n        const { Option } = Select\n        const EditButton = this.EditControl()\n        return (\n            <div className='ScheduleEventLayout'>\n                <div className='ScheduleEventTitle'>\n                    <t2>{title}</t2>\n                    {EditButton}\n                </div>\n                <div className='ScheduleEventContext'>\n                    <div className='ContextControl'>\n                        <div className='buttonGroup'>\n                            <div className={this.SwitchTestItemInterval(\"all\")} onClick={() => this.pressbtn(\"all\")}>\n                                <t2 className='titlecolor'>全部</t2>\n                            </div>\n                            <div className={this.SwitchTestItemInterval(\"排程\")} onClick={() => this.pressbtn(\"排程\")}>\n                                <t2 className='titlecolor'>排程</t2>\n\n                            </div>\n                            <div className={this.SwitchTestItemInterval(\"事件\")} onClick={() => this.pressbtn(\"事件\")}>\n                                <t2 className='titlecolor'>事件</t2>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='ContextList'>\n                        {this.listevent()}\n                    </div>\n                </div>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <Select defaultValue={this.state.selSchedule} placeholder='選擇' style={{ width: 150 }} onChange={this.selSchedule.bind(this)}>\n                            <Option value='排程'>排程</Option>\n                            <Option value='事件'>事件</Option>\n                        </Select>\n                        <Input placeholder=\"輸入當日內容\" value={this.state.inputContent} onChange={this.onInputChange}></Input>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Schedule_event_list","import React, { Component } from 'react';\nimport Schedule_event_list from '../Module/Schedule_event'\n\nclass Wardschedule extends Component {\n    \n    render() {\n        return (\n            <Schedule_event_list source={this.props.source}  title=\"今日排程及事件\" data={this.props.scheduleData} editstatus={this.props.editstatus}/>\n        );\n    }\n}\n\n\nexport default Wardschedule","import React, { Component } from 'react';\nimport WardcardNote from './Wardnote'\nimport Wardbedinformation from './WardBedinformation'\nimport Wardschedule from './Wardschedule'\nimport './Wardinfoindex.scss'\nimport * as ApiProvider from '../API/ApiProvider';\n\nconst SCHEDULE_TYPE_EVENT = \"事件\";\n\nclass Wardinfoindex extends Component {\n    state = {\n        newannocestate: true,\n        scheduleRawData: [],\n        scheduleData: []\n    };\n\n    componentDidMount() {\n        ApiProvider.getAllSchedule()\n        .then(data => {\n            console.log(\"getAllSchedule OK \" + JSON.stringify(data.data));\n\n            const itemList = data.data;\n            let refactoredList = [];\n            itemList.forEach(item => {\n                const itemTimeStr = item.time.split('T')[0];\n                let foundItemIndex = refactoredList.findIndex(element => element.time === itemTimeStr);\n                if(foundItemIndex === -1) {\n                    //not found, create one\n                    let newItem = {\n                        time: itemTimeStr,\n                        timestamp: item.time,\n                        scheduleList: []\n                    }\n                    let newEvent = {\n                        type: item.type,\n                        timestamp: new Date(item.time).getTime(),\n                        writer: (item.type === SCHEDULE_TYPE_EVENT) ? \"林醫師\" : \"張醫師\",\n                        name: item.name,//(item.type === SCHEDULE_TYPE_EVENT) ? \"林ＯＯ\" : \"黃ＯＯ\",\n                        content: item.context,\n                        bednumber: item.bednumber\n                    }\n                    newItem.scheduleList.push(newEvent);\n                    refactoredList.push(newItem);\n                } else {\n                    //found, update item\n                    let newEvent = {\n                        type: item.type,\n                        timestamp: new Date(item.time).getTime(),\n                        writer: (item.type === SCHEDULE_TYPE_EVENT) ? \"林醫師\" : \"張醫師\",\n                        name: item.name,//(item.type === SCHEDULE_TYPE_EVENT) ? \"林ＯＯ\" : \"黃ＯＯ\",\n                        content: item.context,\n                        bednumber: item.bednumber\n                    }\n                    refactoredList[foundItemIndex].scheduleList.push(newEvent);\n                }\n            });\n            this.setState({\n                scheduleRawData: data.data,\n                scheduleData: refactoredList\n            });\n        })\n        .catch(err => {\n            console.log(\"getAllSchedule NG \" + JSON.stringify(err));\n        });\n    }\n\n    getDataFromTimestamp(timestamp) {\n        const dateStr = new Date(timestamp).toISOString().split('T')[0];\n        const dataOfDayIndex = this.state.scheduleData.findIndex(element => element.time === dateStr);\n        const dataOfDay = (dataOfDayIndex === -1) ? {scheduleList: []} : this.state.scheduleData[dataOfDayIndex];\n        return dataOfDay;\n    }\n\n    sendData = () => {\n        this.props.parentCallback(null);\n    }\n\n    render() {\n        const dataOfDay = this.getDataFromTimestamp(new Date().getTime());\n        return (\n            <div className='Wardinfoindexcontent'>\n                <centerstyle>\n                    <t1>病房資訊摘要</t1>\n                </centerstyle>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"5px\" }}>\n                    <WardcardNote></WardcardNote>\n                    <Wardschedule source={0} editstatus={false} scheduleData={dataOfDay}></Wardschedule>\n                </div>\n                <Wardbedinformation></Wardbedinformation>\n            </div>\n        );\n    }\n}\n\nexport default Wardinfoindex;","// Get api\n\n\n\n//資料更新時間\nconst updatetime = {\n    'time': 1567051200000\n}\n\nconst eventdata = [\n    {\n        \"item\": \"schedule\",\n        \"time\": 1565748000000,\n        \"result\": \"手術前檢查\",\n        \"name\": \"林博偉\",\n        \"bednumber\": \"01\",\n        \"writter\": \"林天財\"\n    },\n    {\n        \"item\": \"event\",\n        \"time\": 1565748000000,\n        \"result\": \"傷口變大了\",\n        \"name\": \"王添財\",\n        \"bednumber\": \"02\",\n        \"writter\": \"林天財\"\n    }\n]\n\n//Ward_bed_vitalData_last POST\nconst ward_bed_lastData = [\n    {\n        \"MedicalNumber\": \"123456789\",\n        \"Data\": {\n            \"HR\": 120,\n            \"ABP1\": 45,\n            \"ABP2\": 30,\n            \"ABP3\": 35,\n            \"SpO2\": 96,\n            \"BT\": 37.5,\n            \"RR\": 22\n        },\n        \"Status\": {\n            \"Ventilator\": false,\n            \"TPN\": true,\n            \"NPO\": false,\n            \"ECMO\": false,\n            \"Antibiotics\": false,\n            \"Hemodialysis\": false,\n            \"Foley\": false,\n            \"Drain\": false\n        }\n    },\n    {\n        \"MedicalNumber\": \"987654321\",\n        \"Data\": {\n            \"HR\": 120,\n            \"ABP1\": 45,\n            \"ABP2\": 30,\n            \"ABP3\": 35,\n            \"SpO2\": 96,\n            \"BT\": 37.5,\n            \"RR\": 22\n        }\n    },\n    {\n        \"MedicalNumber\": \"123454321\",\n        \"Data\": {\n            \"HR\": 120,\n            \"ABP1\": 45,\n            \"ABP2\": 30,\n            \"ABP3\": 35,\n            \"SpO2\": 96,\n            \"BT\": 37.5,\n            \"RR\": 22\n        }\n    }\n]\n\nconst WardInfo = {\n    UpdateTime: 1567051200000,\n    Director: \"林又新\",\n    HeadNurse: \"鄭麗貞\",\n    BedTotal: 12,\n    SignBed: 7,\n    EmptyBed: 9,\n    TransferBed: 8,\n    NewPatient: 2,\n    Ventilator: 1,\n    NPO: 7,\n    TPN: 4,\n    ECMO: 8,\n    Antibiotics: 6,\n    Hemodialysis: 1,\n    Announcement: [\n        {\n            time: 1567051200000,\n            text: \"7/10 王大明醫師請假，下午請李小華醫師cover ，6/30XXX醫師留\",\n            writter: \"張大帥\"\n        },\n        {\n            time: 1567051250000,\n            text: \"「超音波用完請記得歸還原位」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        }\n    ]\n}\nconst labdata = [\n    [{ title: \"Glucose\", score: 77, date: \"2019/01/01\" }],\n    [{ title: \"WBC\", score: 19647, date: \"Seg 59%2019/01/01\" }],\n    [{ title: \"WBC\", score: 14.8, date: \"2019/01/01\" }],\n    [{ title: \"Platelet\", score: 125, date: \"2019/01/01\" }],\n    [\n        { title: \"Na+\", score: 125, date: \"2019/01/01\" },\n        { title: \"K+\", score: 125, date: \"2019/01/01\" },\n        { title: \"Ca2+\", score: 125, date: \"2019/01/01\" },\n        { title: \"P\", score: 125, date: \"2019/01/01\" },\n        { title: \"Mg2+\", score: 125, date: \"2019/01/01\" },\n    ],\n    [\n        { title: \"CRP\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Procalcitionin\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Current Antibiotics\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Bun\", score: 125, date: \"2019/01/01\" },\n        { title: \"Cr\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"ALT\", score: 125, date: \"2019/01/01\" },\n        { title: \"AST\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"TBIL\", score: 125, date: \"2019/01/01\" },\n        { title: \"D.Bil\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"ALKP\", score: 125, date: \"2019/01/01\" },\n        { title: \"Total Ca\", score: 125, date: \"2019/01/01\" },\n        { title: \"LDH\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Iron\", score: 125, date: \"2019/01/01\" },\n        { title: \"TIBC\", score: 125, date: \"2019/01/01\" },\n        { title: \"FeSat\", score: 125, date: \"2019/01/01\" },\n        { title: \"Ferritin\", score: 125, date: \"2019/01/01\" }\n    ]\n]\nconst jsonResponse = [\n    {\n        \"HISID\": \"H1234567\",\n        \"CASEID\": \"C1234567\",\n        \"name\": \"吳大胖之女\",\n        \"gender\": 1,\n        \"birthday\": \"2019/11/11\",\n        \"bednumber\": 1,\n        \"pregnancy\": \"2019/11/10\",\n        \"weightbirth\": 1400,\n        \"weight\": 2300,\n        'report': 3,\n        'nonreport': 3,\n        'note': '隨時注意病人血壓狀態隨時注意病人血壓狀態',\n        'type':'NIS',\n        'MainDoctor':'張大春',\n        'IcuInTime':'2019/11/11'\n    },\n    {\n        \"HISID\": \"H9876543\",\n        \"CASEID\": \"C12345622\",\n        \"name\": \"吳大胖之女\",\n        \"gender\": 1,\n        \"birthday\": \"2019/11/11\",\n        \"bednumber\": 2,\n        \"pregnancy\": \"2019/11/10\",\n        \"weightbirth\": 1400,\n        \"weight\": 2300,\n        'report': 3,\n        'nonreport': 3,\n        'note': '隨時注意病人血壓狀態隨時注意病人血壓狀態',\n        'type':'Custom',\n        'MainDoctor':'張大春',\n        'IcuInTime':'2019/11/11'\n    }\n]\n\n//Wardview TCP data\nconst centerrowdata = {\n    \"id\": 20190817001,\n    \"data\": {\n        \"Weight\": 5000,\n        \"WeightDif\": 700,\n        \"BP\": [\n            {\n                \"time\": 1565395200,\n                \"DBP\": 60,\n                \"SBP\": 90\n            }\n        ],\n        \"HR\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"RR\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"BT\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"Urine\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"Suger\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"SP\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ]\n    }\n}\n\nconst growdata = {\n    Male_befor: [\n        { y: 22, min: 420, max: 600 },\n        { y: 23, min: 470, max: 700 },\n        { y: 24, min: 510, max: 800 },\n        { y: 25, min: 570, max: 900 },\n        { y: 26, min: 610, max: 1040 },\n        { y: 27, min: 700, max: 1200 },\n        { y: 28, min: 790, max: 1340 },\n        { y: 29, min: 870, max: 1520 },\n        { y: 30, min: 1000, max: 1740 },\n        { y: 31, min: 1120, max: 2000 },\n        { y: 32, min: 1300, max: 2240 },\n        { y: 33, min: 1500, max: 2500 },\n        { y: 34, min: 1700, max: 2800 },\n        { y: 35, min: 1960, max: 3040 },\n        { y: 36, min: 2180, max: 3300 },\n        { y: 37, min: 2400, max: 3500 },\n        { y: 38, min: 2600, max: 3780 },\n        { y: 39, min: 2810, max: 3980 },\n        { y: 40, min: 3000, max: 4200 },\n        { y: 41, min: 3200, max: 4440 },\n        { y: 42, min: 3400, max: 4700 },\n        { y: 43, min: 3600, max: 5000 },\n        { y: 44, min: 3800, max: 5270 }\n    ],\n    FeMale_before: [\n        { y: 22, min: 400, max: 580 },\n        { y: 23, min: 430, max: 640 },\n        { y: 24, min: 490, max: 730 },\n        { y: 25, min: 550, max: 850 },\n        { y: 26, min: 580, max: 1000 },\n        { y: 27, min: 630, max: 1120 },\n        { y: 28, min: 700, max: 1300 },\n        { y: 29, min: 800, max: 1500 },\n        { y: 30, min: 900, max: 1700 },\n        { y: 31, min: 1050, max: 1910 },\n        { y: 32, min: 1200, max: 2180 },\n        { y: 33, min: 1400, max: 2400 },\n        { y: 34, min: 1600, max: 2680 },\n        { y: 35, min: 1850, max: 2930 },\n        { y: 36, min: 2050, max: 3200 },\n        { y: 37, min: 2300, max: 3490 },\n        { y: 38, min: 2480, max: 3700 },\n        { y: 39, min: 2680, max: 3900 },\n        { y: 40, min: 2820, max: 4100 },\n        { y: 41, min: 2980, max: 4300 },\n        { y: 42, min: 3150, max: 4520 },\n        { y: 43, min: 3300, max: 4740 },\n        { y: 44, min: 3500, max: 5000 }\n    ],\n    Male_after: [\n        { y: 0, min: 2500, max: 4300 },\n        { y: 1, min: 2600, max: 4500 },\n        { y: 2, min: 2800, max: 4900 },\n        { y: 3, min: 3100, max: 5200 },\n        { y: 4, min: 3400, max: 5600 },\n        { y: 5, min: 3600, max: 5900 },\n        { y: 6, min: 3800, max: 6300 }\n    ],\n    FeMale_after: [\n        { y: 0, min: 2400, max: 4200 },\n        { y: 1, min: 2500, max: 4400 },\n        { y: 2, min: 2700, max: 4600 },\n        { y: 3, min: 2900, max: 5000 },\n        { y: 4, min: 3100, max: 5300 },\n        { y: 5, min: 3300, max: 5600 },\n        { y: 6, min: 3500, max: 5900 }\n    ]\n}\n\nconst Note_data = [\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 }\n]\n\nconst todo_data = [\n    {\n        Time: 1566287810473,\n        Content: \"幫大明量體重\",\n        Flag: true,\n        Editor: \"修改者\"\n    },\n    {\n        Time: 1566287810473,\n        Content: \"幫大明量體重\",\n        Flag: true,\n        Editor: \"修改者\"\n    },\n    {\n        Time: 1566287810473,\n        Content: \"幫大明量體重\",\n        Flag: true,\n        Editor: \"修改者\"\n    }\n]\n\n\nexport { jsonResponse, centerrowdata, WardInfo, updatetime, ward_bed_lastData, labdata, eventdata, growdata, Note_data, todo_data };","// import { getRandom } from '../Function/Wardstate'\nfunction simdata() {\n    const Inputarray = []\n    for (let index = 0; index < 24; index++) {\n        const element = Math.floor(Math.random() * 100);\n        Inputarray.push(element)\n    }\n    return Inputarray\n}\n\n//Jack\n//Nurtion TPN_data\nconst tpn_row_data = [\n    {\n        TPNDispositionName: \"Check ABG\",\n        TPNStartTime: 1566287810473,\n        TPNEndTime: 1566287810473,\n        TPNRemarks: \"abc\",\n        TPNStatus: \"已取消\",\n        TPNData: [\n            { item: \"AA\", Data: 10 },\n            { item: \"Glu\", Data: 10 },\n            { item: \"Na\", Data: 10 },\n            { item: \"K\", Data: 10 },\n            { item: \"Ca\", Data: 10 },\n            { item: \"P\", Data: 10 },\n            { item: \"Mg\", Data: 10 },\n            { item: \"TPN\", Data: 70 },\n        ]\n    }\n]\n\n\n//Jack\n//Nurtion Feeding_data\nconst feeding_row_data = [\n    {\n        FeedingOrderDispositionName: \"Check ABG\",\n        FeedingOrderStartTime: 1566287810473,\n        FeedingOrderEndTime: 1566287810473,\n        FeedingOrderRemarks: \"abc\",\n    }\n]\n\n\n//Sim Floot sheet IO data\n//Jack\nconst io_source = [\n    {\n        \"item\": \"IV (ml) 1/2NS FOR DRUG\",\n        \"data\": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n    },\n    {\n        \"item\": \"IV (ml) D10W\",\n        \"data\": simdata()\n    },\n    {\n        \"item\": \"IV (ml) IVIG\",\n        \"data\": simdata()\n    },\n    {\n        \"item\": \"UAC (ml) 1/2NS+HEPARIN\",\n        \"data\": simdata()\n    },\n    {\n        \"item\": \"UAC (ml) NS+HEPARIN\",\n        \"data\": simdata()\n    },\n    {\n        \"item\": \"UAC (ml) 20%TPN\",\n        \"data\": simdata()\n    },\n    {\n        \"item\": \"UAC (ml) Albumin 4cc+D5W 2cc\",\n        \"data\": simdata()\n    },\n    {\n        \"item\": \"UVC (ml) D20W\",\n        \"data\": simdata()\n    },\n    {\n        \"item\": \"UVC (ml) Dopamin 21.6 mg in D5W\",\n        \"data\": simdata()\n    },\n    {\n        \"item\": \"UVC (ml)Dopamin 21.6 mg  in D5W\",\n        \"data\": simdata()\n    },\n    {\n        \"item\": \"FFP (ml)\",\n        \"data\": simdata()\n    },\n    {\n        \"item\": \"PRBC (ml)\",\n        \"data\": simdata()\n    },\n    {\n        \"item\": \"Plt.Ph (ml)\",\n        \"data\": simdata()\n    },\n    {\n        \"item\": \"PO (ml)\",\n        \"data\": simdata()\n    },\n    {\n        \"item\": \"NG/OG (ml)\",\n        \"data\": simdata()\n    },\n    {\n        \"item\": \"RV (ml)\",\n        \"data\": simdata()\n    }\n]\n//0:已開單 1:已簽收 2:已發報告\n//報告清單\n//Jack\nconst Nonlablist = [\n    {\n        \"time\": '2019-12-01',\n        \"item\": \"HSV-2 IgG (EIA)\",\n        \"status\": 0,\n        \"result\": \"--\"\n    },\n    {\n        \"time\": '2019-12-01',\n        \"item\": \"HSV-1 IgG (EIA)\",\n        \"status\": 0,\n        \"result\": \"--\"\n    },\n    {\n        \"time\": '2019-12-02',\n        \"item\": \"HSV IGM (EIA)\",\n        \"status\": 1,\n        \"result\": \"--\"\n    },\n    {\n        \"time\": '2019-12-03',\n        \"item\": \"CK,LDH,Lactate\",\n        \"status\": 1,\n        \"result\": \"--\"\n    },\n    {\n        \"time\": '2019-12-03',\n        \"item\": \"Crea\",\n        \"status\": 1,\n        \"result\": \"--\"\n    },\n    {\n        \"time\": '2019-12-03',\n        \"item\": \"BLOOD GAS\",\n        \"status\": 2,\n        \"result\": \"pH(7.452)\"\n    },\n    {\n        \"time\": '2019-12-05',\n        \"item\": \"CHEST KUB (FOR BABY) PORTABLE\",\n        \"status\": 0,\n        \"result\": \"--\"\n    },\n    {\n        \"time\": '2019-12-05',\n        \"item\": \"MICRO BILI\",\n        \"status\": 0,\n        \"result\": \"--\"\n    },\n    {\n        \"time\": '2019-12-05',\n        \"item\": \"BLOOD GAS\",\n        \"status\": 1,\n        \"result\": \"--\"\n    },\n    {\n        \"time\": '2019-12-05',\n        \"item\": \"M-mode and Sector Scan, DOPPLER COLOR\",\n        \"status\": 1,\n        \"result\": \"--\"\n    }\n]\n//Exam Report\n//Jack\nconst gasdata = [\n    {\n        \"time\": '2019-12-05 19:00',\n        \"PH\": 7.366,\n        \"PCO2\": 44.8,\n        \"PO2\": 36.2,\n        \"HCO3\": 25.9,\n        \"BE\": 0.7,\n        \"O2\": '--',\n        \"Sample\": 'Capillary',\n        \"SaCO2\": 94.9,\n    },\n    {\n        \"time\": '2019-12-06 14:30',\n        \"PH\": 7.185,\n        \"PCO2\": 45.2,\n        \"PO2\": 42.3,\n        \"HCO3\": 17.2,\n        \"BE\": -10.1,\n        \"O2\": '--',\n        \"Sample\": 'Capillary',\n        \"SaCO2\": 95.4,\n    },\n    {\n        \"time\": '2019-12-07 8:30',\n        \"PH\": 7.491,\n        \"PCO2\": 32.8,\n        \"PO2\": 30.1,\n        \"HCO3\": 25.3,\n        \"BE\": 3.1,\n        \"O2\": '--',\n        \"Sample\": 'Vein',\n        \"SaCO2\": 94.4,\n    },\n    {\n        \"time\": '2019-12-08 16:00',\n        \"PH\": 7.506,\n        \"PCO2\": 19.9,\n        \"PO2\": 65.2,\n        \"HCO3\": 15.9,\n        \"BE\": -4.1,\n        \"O2\": '--',\n        \"Sample\": 'Artery',\n        \"SaCO2\": 90.7,\n    },\n    {\n        \"time\": '2019-12-04 9:00',\n        \"PH\": 7.48,\n        \"PCO2\": 28.3,\n        \"PO2\": 70.6,\n        \"HCO3\": 21.3,\n        \"BE\": -0.4,\n        \"O2\": '--',\n        \"Sample\": 'Artery',\n        \"SaCO2\": 91.2,\n    }\n]\n\nconst wardstatedata = {\n    \"detaildata\": [\n        { \"item\": \"Depends\", \"time\": 1565395200, \"data\": true },\n        { \"item\": \"TPN\", \"time\": 1565395200, \"data\": true },\n        { \"item\": \"NPO\", \"time\": 1565395200, \"data\": false },\n        { \"item\": \"Anti\", \"time\": 1565395200, \"data\": false },\n        { \"item\": \"Foley\", \"time\": 1565395200, \"data\": true },\n        { \"item\": \"Drain\", \"time\": 1565395200, \"data\": false }\n    ],\n    \"data\": {\n        \"Weight\": 500,\n        \"WeightDif\": 700,\n        \"RowData\": [\n            { \"time\": 1565395200, \"item\": \"ABP_hight\", \"data\": 140 },\n            { \"time\": 1565395200, \"item\": \"ABP_low\", \"data\": 30 },\n            { \"time\": 1565395200, \"item\": \"ABP_avg\", \"data\": 40 },\n            { \"time\": 1565395200, \"item\": \"HR\", \"data\": 90 },\n            { \"time\": 1565395200, \"item\": \"RR\", \"data\": 90 },\n            { \"time\": 1565395200, \"item\": \"BT\", \"data\": 90 },\n            { \"time\": 1565395200, \"item\": \"Urine\", \"data\": 90 },\n            { \"time\": 1565395200, \"item\": \"Suger\", \"data\": 90 },\n            { \"time\": 1565395200, \"item\": \"SpO2\", \"data\": 90 }\n        ]\n    }\n}\nconst iodatain = [\n    [0, 4, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 4, 0],\n    [0, 1.5, 1, 5, 1.5, 1.6, 8.6, 1.6, 8.6, 0, 0, 3.6, 3.6, 3.6, 1.6, 1.5, 1.5, 1.5, 1.5, 0, 1.4, 1.4, 3, 1.4],\n    [0, 0, 0, 0, 0, 0, 0, 1.7, 0, 1.7, 1.8, 1.8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 5.5, 1.5, 1.5, 6.6, 8.6, 1.6, 10.3, 1.6, 1.7, 5.4, 5.4, 6.6, 1.6, 4.5, 1.5, 1.5, 1.5, 0, 1.4, 1.4, 3, 5.4, 4.4]\n]\nconst iodataout = [\n    [0, 0, 16.2, 0, 0, 0, 14.9, 0, 0, 0, 0, 23.3, 0, 0, 1, 0, 0, 0, 0, 0, 18.9, 0, 0, 12],\n    [0, 0, 5.4, 0, 0, 0, 2.5, 0, 0, 0, 0, 3.1, 0, 0, 0.2, 0, 0, 0, 0, 0, 2.1, 0, 0, 2.6],\n    [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 21.6, 1, 0, 0, 17.4, 0, 0, 0, 0, 26.4, 0.5, 0, 1.2, 0, 0, 0, 0, 0, 21, 0, 0, 14.6]\n]\nconst iodatainthirdday = [\n    [9, 5, 0, 6, 0, 4, 10, 0, 3, 5, 0, 3, 4, 5, 0, 6, 0, 4],\n    [4.5, 20.4, 8.8, 8.2, 4.4, 10.2, 4.6, 21.2, 9.6, 8.8, 4.5, 10.2, 4.5, 20.4, 8.8, 8.2, 4.4, 10.2],\n    [0, 1.7, 5.3, 0, 0, 0, 0, 1.7, 5.3, 0, 0, 0, 0, 1.7, 5.3, 0, 0, 0],\n    [13.5, 27.1, 14.1, 14.2, 4.4, 14.2, 14.6, 22.9, 17.9, 13.8, 4.5, 13.2, 8.5, 27.1, 14.1, 14.2, 4.4, 14.2]\n]\nconst iodataoutthirdday = [\n    [16.2, 14.9, 23.3, 1, 0, 30.9, 17.1, 16.2, 0, 21.5, 14.5, 11.1, 17.1, 16.1, 22.2, 1.69, 17.9, 11.5],\n    [2.7, 2.5, 3.8, 0.2, 0, 5.1, 2.8, 2.7, 0, 3.6, 2.4, 1.8, 2.8, 2.7, 3.7, 0.3, 3.0, 1.9],\n    [1, 0, 0, 0.5, 0, 0, 1, 0, 0, 0.5, 0, 0, 1, 0, 0, 0.5, 0, 0],\n    [22.6, 17.4, 26.4, 1.7, 0, 35.6, 18.1, 16.2, 0, 22, 14.5, 11.1, 18.1, 16.1, 22.2, 2.2, 17.9, 11.5]\n]\nconst iodatain_crossection = [\n    [9, 6, 9, 24],\n    [59, 63, 56, 178],\n    [0, 0, 0, 0],\n    [68, 69, 65, 202]\n]\nconst iodataout_crossection = [\n    [35, 72, 77, 184],\n    [2.9, 5.9, 6.4, 5.1],\n    [0, 0, 0.5, 0.5],\n    [37.9, 77.9, 83.9, 199.7]\n]\nconst iodatasum_crossection = [\n    [30.1, -8.9, -18.9, 2.3]\n]\nconst iodatasum_chronic_oneday = [\n    [0, 5.5, -20.1, 0.5, 6.6, 8.6, -15.8, 10.3, 1.6, 1.7, 5.4, -21, 6.1, 1.6, 3.3, 1.5, 1.5, 1.5, 0, 1.4, -19.6, 3, 5.4, -10.2]\n]\n\nconst iodatasum_chronic_thirdday = [\n    [-9.1, 9.7, -12.3, 12.5, 4.4, -21.4, -3.5, 6.7, 17.9, -8.2, -10.0, 2.1, -9.6, 11, -8.1, 12, -13.5, 2.7]\n]\nconst labdata = {\n    \"data\": [\n        {\n            \"item\": \"Glucose\",\n            \"time\": 1566287810473,\n            \"value\": 83\n        },\n        {\n            \"item\": \"WBC\",\n            \"time\": 1566287810473,\n            \"value\": 10300\n        },\n        {\n            \"item\": \"Seg\",\n            \"time\": 1566287810473,\n            \"value\": 44.6\n        },\n        {\n            \"item\": \"Lymp\",\n            \"time\": 1566287810473,\n            \"value\": 28.1\n        },\n        {\n            \"item\": \"Hgb\",\n            \"time\": 1566287810473,\n            \"value\": 10.3\n        },\n        {\n            \"item\": \"Platelet\",\n            \"time\": 1566287810473,\n            \"value\": 574000\n        },\n        {\n            \"item\": \"Na+\",\n            \"time\": 1566287810473,\n            \"value\": 141\n        },\n        {\n            \"item\": \"K+\",\n            \"time\": 1566287810473,\n            \"value\": 5.8\n        },\n        {\n            \"item\": \"Ca2+\",\n            \"time\": 1566287810473,\n            \"value\": 1.1\n        },\n        {\n            \"item\": \"P\",\n            \"time\": 1566287810473,\n            \"value\": 6.1\n        },\n        {\n            \"item\": \"Mg2+\",\n            \"time\": 1566287810473,\n            \"value\": 1.8\n        },\n        {\n            \"item\": \"Alb\",\n            \"time\": 1566287810473,\n            \"value\": 4.8\n        },\n        {\n            \"item\": \"CRP\",\n            \"time\": 1566287810473,\n            \"value\": 0.3\n        },\n        {\n            \"item\": \"Procalcitionin\",\n            \"time\": 1566287810473,\n            \"value\": 0.3\n        },\n        {\n            \"item\": \"pH\",\n            \"time\": 1566287810473,\n            \"value\": 7.185\n        },\n        {\n            \"item\": \"PCO2\",\n            \"time\": 1566287810473,\n            \"value\": 45.2\n        },\n        {\n            \"item\": \"BE\",\n            \"time\": 1566287810473,\n            \"value\": -10.1\n        },\n        {\n            \"item\": \"PO2\",\n            \"time\": 1566287810473,\n            \"value\": 42.3\n        },\n        {\n            \"item\": \"BUN\",\n            \"time\": 1566287810473,\n            \"value\": 7\n        },\n        {\n            \"item\": \"Cr\",\n            \"time\": 1566287810473,\n            \"value\": 0.8\n        },\n        {\n            \"item\": \"ALT\",\n            \"time\": 1566287810473,\n            \"value\": 29\n        },\n        {\n            \"item\": \"AST\",\n            \"time\": 1566287810473,\n            \"value\": 37\n        },\n        {\n            \"item\": \"TBil\",\n            \"time\": 1566287810473,\n            \"value\": 0.45\n        },\n        {\n            \"item\": \"DBil\",\n            \"time\": 1566287810473,\n            \"value\": 0.22\n        },\n        {\n            \"item\": \"ALKP\",\n            \"time\": 1566287810473,\n            \"value\": 387\n        },\n        {\n            \"item\": \"Total Ca\",\n            \"time\": 1566287810473,\n            \"value\": 10\n        },\n        {\n            \"item\": \"Iron\",\n            \"time\": 1566287810473,\n            \"value\": 75\n        },\n        {\n            \"item\": \"TIBC\",\n            \"time\": 1566287810473,\n            \"value\": 228\n        },\n        {\n            \"item\": \"FeSat\",\n            \"time\": 1566287810473,\n            \"value\": 0.33\n        },\n        {\n            \"item\": \"Ferritin\",\n            \"time\": 1566287810473,\n            \"value\": 235\n        }\n    ]\n}\nconst RTbreathelist = [\n    {\n        \"time\": '2019-12-01 12:30',\n        \"Mode\": \"HFOV\",\n        \"Setting\": \"FiO2: 30%, AMP: 24, MAP:9, Freq:15Hz\",\n        \"Note\": \"備註內容\"\n    },\n    {\n        \"time\": '2019-12-02 12:10',\n        \"Mode\": \"HFOV\",\n        \"Setting\": \"FiO2: 35%, AMP: 24, MAP:9, Freq:15Hz\",\n        \"Note\": \"備註內容\"\n    },\n    {\n        \"time\": '2019-12-03 10:10',\n        \"Mode\": \"PC\",\n        \"Setting\": \"FiO2: 55%, Rate: 40/min, RIP: 17, PEEP:7\",\n        \"Note\": \"備註內容\"\n    },\n    {\n        \"time\": '2019-12-04 08:20',\n        \"Mode\": \"PC\",\n        \"Setting\": \"FiO2: 55%, Rate: 40/min, RIP: 17, PEEP:7\",\n        \"Note\": \"備註內容\"\n    },\n    {\n        \"time\": '2019-12-05 23:10',\n        \"Mode\": \"PC\",\n        \"Setting\": \"FiO2: 58%, Rate: 40/min, RIP: 17, PEEP:7\",\n        \"Note\": \"備註內容\"\n    }\n]\nconst Prescriptionordertablelist = [\n    {\n        \"time\": '2019-10-06',\n        \"Name\": \"Heparin sod CCP#* inj 5000u/5ml\",\n        \"ProductName\": \"Agglutex #* inj 1000 u/ml 5 ml\",\n        \"Unit\": \"X1/VL/IVA/QD\",\n        \"State\": \"已結束\",\n        \"StartTime\": \"06/24 16:00\",\n        \"EndTime\": \"06/24 16:00\",\n        \"Note\": \"備註內容\"\n    },\n    {\n        \"time\": '2019-10-06',\n        \"Name\": \"Heparin sod CCP#* inj 5000u/5ml \",\n        \"ProductName\": \"Agglutex #* inj 1000 u/ml 5 ml\",\n        \"Unit\": \"X1/VL/IVA/STAT\",\n        \"State\": \"已結束\",\n        \"StartTime\": \"06/24 16:00\",\n        \"EndTime\": \"06/24 16:00\",\n        \"Note\": \"備註內容\"\n    },\n    {\n        \"time\": '2019-08-12',\n        \"Name\": \"Dextrose \\\"ST\\\" inj 5% 250 ml/BT\",\n        \"ProductName\": \"Vitagen \\\"ST\\\" inj 5% 250 ml/BT\",\n        \"Unit\": \"24/CC/IVD/STAT\",\n        \"State\": \"已結束\",\n        \"StartTime\": \"06/24 16:00\",\n        \"EndTime\": \"06/24 16:00\",\n        \"Note\": \"備註內容\"\n    },\n    {\n        \"time\": '2019-09-20',\n        \"Name\": \"Midazolam (Dormicum#^*inj5mg/5ml\",\n        \"ProductName\": \"Dormicum #^* inj 5 mg/5 ml\",\n        \"Unit\": \"0.04/AMP/IVA/OQT\",\n        \"State\": \"已結束\",\n        \"StartTime\": \"06/24 16:00\",\n        \"EndTime\": \"06/24 16:00\",\n        \"Note\": \"備註內容\"\n    },\n    {\n        \"time\": '2019-08-12',\n        \"Name\": \"Cefotaxime (Claforan)*inj 500 mg\",\n        \"ProductName\": \"Claforan iv * inj 500 mg\",\n        \"Unit\": \"60/MG/IVA/STAT\",\n        \"State\": \"已結束\",\n        \"StartTime\": \"06/24 16:00\",\n        \"EndTime\": \"06/24 16:00\",\n        \"Note\": \"備註內容\"\n    }\n]\nconst Treatmentorderlist = [\n    {\n        \"time\": '2019-11-19',\n        \"ActionName\": \"Check ABG (At Nursing Station)\",\n        \"qd\": \"Q12H\",\n        \"State\": \"生效中\",\n        \"StartTime\": \"06/06 20:00\",\n        \"EndTime\": \"06/06 20:00\",\n        \"Note\": \"備註內容\"\n    },\n    {\n        \"time\": '2019-11-15',\n        \"ActionName\": \"Blood Transfusion\",\n        \"qd\": \"ST\",\n        \"State\": \"已取消\",\n        \"StartTime\": \"2019-10-07\",\n        \"EndTime\": \"2020-10-08\",\n        \"Note\": \"備註內容\"\n    },\n    {\n        \"time\": '2019-11-17',\n        \"ActionName\": \"Pupil Dilatation\",\n        \"qd\": \"ONCALL\",\n        \"State\": \"進行中\",\n        \"StartTime\": \"2019-11-17\",\n        \"EndTime\": \"2020-02-15\",\n        \"Note\": \"備註內容\"\n    },\n    {\n        \"time\": '2019-11-10',\n        \"ActionName\": \"Pupil Dilatation\",\n        \"qd\": \"ST\",\n        \"State\": \"進行中\",\n        \"StartTime\": \"2019-11-10\",\n        \"EndTime\": \"2020-02-08\",\n        \"Note\": \"備註內容\"\n    },\n    {\n        \"time\": '2019-10-06',\n        \"ActionName\": \"非傾入式氧療設備\",\n        \"qd\": \"CONT\",\n        \"State\": \"進行中\",\n        \"StartTime\": \"2019-10-06\",\n        \"EndTime\": \"2019-10-07\",\n        \"Note\": \"備註內容\"\n    }\n]\nconst chronicladdataoneday = [\n    [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n]\n\nconst chroniclabdatathird = [\n    [0, 2, 1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0],\n    [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0],\n    [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],\n    [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0],\n    [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0],\n    [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0]\n]\nconst rtoneday = [\n    [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n]\n\nconst rethird = [\n    [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0]\n]\nconst cbcdata = [\n    {\n        time: \"2019-06-05 9:30\",\n        'data': [8100, 0, 33, 0, 12.1, 35, 279000]\n    },\n    {\n        time: \"2019-06-17 12:38\",\n        'data': [9640, 0, 40, 42.4, 13.4, 38.7, 407000]\n    }\n]\n\nconst electrolysis = [\n    {\n        time: \"2019-08-19 23:30\",\n        'data': [141, 5.2, 0, 0, 0.9, 10, 2.2, 4.5, 30, 0.6]\n    },\n    {\n        time: \"2019-08-20 14:52\",\n        'data': [140, 4.5, 103, 0.95, 11, 2.5, 5, 0, 0.8]\n    },\n    {\n        time: \"2019-08-22 14:51\",\n        'data': [139, 4.2, 0, 0, 0, 3, 0, 0, 0.5]\n    },\n    {\n        time: \"2019-08-26 21:10\",\n        'data': [139, 4.2, 0, 0, 0, 2.8, 0, 9, 0.4]\n    }\n]\n\n//x:0~6 y:2500~4000 after\nconst wardchartoncustombefore = [\n    {\n        x: 40,\n        y: 3300\n    },\n    {\n        x: 40.5,\n        y: 3400\n    },\n    {\n        x: 41,\n        y: 3500\n    },\n    {\n        x: 41.5,\n        y: 3650\n    },\n    {\n        x: 42,\n        y: 3750\n    }\n]\nconst wardchartdatasourcebefore = [\n    {\n        x: 40,\n        y: 3100\n    },\n    {\n        x: 40.5,\n        y: 3200\n    },\n    {\n        x: 41,\n        y: 3300\n    },\n    {\n        x: 41.5,\n        y: 3350\n    },\n    {\n        x: 42,\n        y: 3350\n    }\n]\n\n\n//x:0~6 y:2500~4000\nconst wardchartoncustom = [\n    {\n        x: 2.4,\n        y: 3300\n    },\n    {\n        x: 2.5,\n        y: 3400\n    },\n    {\n        x: 2.6,\n        y: 3500\n    },\n    {\n        x: 2.7,\n        y: 3650\n    },\n    {\n        x: 2.8,\n        y: 3750\n    }\n]\nconst wardchartdatasource = [\n    {\n        x: 2.4,\n        y: 3100\n    },\n    {\n        x: 2.5,\n        y: 3200\n    },\n    {\n        x: 2.6,\n        y: 3300\n    },\n    {\n        x: 2.7,\n        y: 3350\n    },\n    {\n        x: 2.8,\n        y: 3350\n    },\n    {\n        x: 2.9,\n        y: 3400\n    },\n    {\n        x: 3,\n        y: 3450\n    },\n    {\n        x: 3.1,\n        y: 3500\n    },\n    {\n        x: 3.15,\n        y: 3600\n    },\n    {\n        x: 3.2,\n        y: 3700\n    },\n    {\n        x: 3.3,\n        y: 3800\n    },\n    {\n        x: 3.4,\n        y: 3900\n    },\n    {\n        x: 3.5,\n        y: 4100\n    },\n    {\n        x: 3.6,\n        y: 4100\n    },\n    {\n        x: 3.7,\n        y: 4150\n    }\n]\n\n\nexport {\n    wardstatedata,\n    iodatain,\n    iodataout,\n    labdata,\n    Nonlablist,\n    gasdata,\n    RTbreathelist,\n    Prescriptionordertablelist,\n    Treatmentorderlist,\n    iodatainthirdday,\n    iodataoutthirdday,\n    iodatain_crossection,\n    iodataout_crossection,\n    chronicladdataoneday,\n    chroniclabdatathird,\n    rtoneday,\n    rethird,\n    iodatasum_crossection,\n    iodatasum_chronic_oneday,\n    iodatasum_chronic_thirdday,\n    cbcdata,\n    electrolysis,\n    tpn_row_data,\n    feeding_row_data,\n    wardchartdatasource,\n    wardchartoncustom,\n    wardchartoncustombefore,\n    wardchartdatasourcebefore\n}","import React, { Component } from 'react';\nimport Labviewitem from './Labviewitem'\nimport { labdata } from '../../Data/Wardviewdata'\nimport * as FiliterReg from '../../Function/FiliterReg'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport moment from 'moment'\nimport * as ApiGithub from '../../API/ApiGithub'\n\nvar MG_VALUE, PROC_VALUE;\nclass Labviewlayout extends Component {\n    state = {\n        parser: [{ \"apply_condition\": { \"name\": \"\" }, \"mappings\": [] }],\n        dummy_mg: 0,\n        dummy_pct: 0\n    }\n    componentDidMount() {\n        ApiGithub.getGitHubJson(\"Labview.json\")\n            .then(result => {\n                console.log(\"getGitHubJson Labview.json OK \" + JSON.stringify(result.data));\n                this.setState({\n                    parser: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getGitHubJson Labview.json NG \" + JSON.stringify(err));\n            })\n    }\n\n    findLastestTargetValue(arr, target) {\n        const { caseinfo } = this.props\n        const { parser } = this.state\n        let latestTimestamp = 0;\n        let latestvalue = undefined;\n        const selected_parser = parser.find(item => item.apply_condition.name.indexOf(target) > -1);\n        const arrayLength = arr.length;\n        arr.forEach((item, index) => {\n            ApiProvider.getStoredProcedureRESDISP(caseinfo.HISID, item.ORMM, caseinfo.CASEID, item.ORDSEQNO)\n                .then(data => {\n                    console.log(\"getStoredProcedureRESDISP OK \" + JSON.stringify(data.data));\n                    const RESDISP = data.data\n                    //const RESDISP = [{\"RECNO\":\"1\",\"PARTNO\":\"11 \",\"HISTNO\":\"45305666  \",\"ORBGNDT\":\"2019-11-12\",\"CONTENT\":\"    MG++:  (20.00)\",\"ORDSEQ\":\"1\",\"CASENO\":\"25358448\"},{\"RECNO\":\"2\",\"PARTNO\":\"11 \",\"HISTNO\":\"45305666  \",\"ORBGNDT\":\"2019-11-12\",\"CONTENT\":\"    Procalcitonin:  (25.00)\",\"ORDSEQ\":\"1\",\"CASENO\":\"25358448\"}]\n\n                    //search for target\n                    const selected_mapping = selected_parser.mappings.find(mapping => mapping.key === target)\n                    const re = new RegExp(selected_mapping.regex_str, selected_mapping.regex_flags)\n\n                    RESDISP.forEach(element => {\n                        const match = element.CONTENT.match(re)\n                        if (match !== null) {\n                            const currentTimeStr = item.ORRCPDT + \"-\" + item.ORRCPTM\n                            const currentItemTimestamp = moment(currentTimeStr.trim(), \"YYYY-MM-DD-HH.mm.ss\").valueOf()\n                            const matchValue = match[selected_mapping.position]\n\n                            if (matchValue !== \"\" && matchValue !== undefined && matchValue !== null && currentItemTimestamp > latestTimestamp) {\n                                latestvalue = matchValue\n                                if (target === \"mg\") {\n                                    MG_VALUE = latestvalue\n                                } else if (target === \"pct\") {\n                                    PROC_VALUE = latestvalue\n                                }\n                            }\n                        }\n                    })\n                    this.updateLabviewIfNeed(arrayLength, index, target)\n                })\n                .catch(err => {\n                    console.log(\"getStoredProcedureRESDISP NG \" + JSON.stringify(err));\n                    this.updateLabviewIfNeed(arrayLength, index, target)\n                });\n        })\n    }\n    updateLabviewIfNeed(arrayLength, currentIdx, target) {\n        const retryMax = 3\n        if (currentIdx === arrayLength - 1) {\n            if (target === \"mg\" && this.state.dummy_mg < retryMax) {\n                this.setState({ dummy_mg: this.state.dummy_mg + 1 })\n            } else if (target === \"pct\" && this.state.dummy_pct < retryMax) {\n                this.setState({ dummy_pct: this.state.dummy_pct + 1 })\n            }\n        }\n    }\n    TitleRender() {\n        const { Source } = this.props\n        if (Source === \"Wardview\") {\n            return null\n        }\n        else return (\n            <div style={{ height: '40px', paddingLeft: \"5px\", paddingRight: \"5px\", background: \"#cccccc\", display: \"flex\", alignItems: \"center\" }}>\n                <t1>檢驗報告</t1>\n            </div>\n        );\n    }\n    render() {\n        function ListEndData(array) {\n            if (array.length === 0) {\n                return \"--\"\n            }\n            return array[array.length - 1]\n        }\n        // const data = labdata.data\n        const { RESDGLU1, PickerDate, RESLAB02, RESLAB01, RESDBGAS, RESSECT, Source } = this.props\n        console.log(RESDGLU1)\n\n        const RESDGLU1LIST = FiliterReg.ListForTime(RESDGLU1, PickerDate)\n        const RESLAB02LIST = FiliterReg.ListForTime(RESLAB02, PickerDate)\n        const RESLAB01LIST = FiliterReg.ListForTime(RESLAB01, PickerDate)\n        const RESDBGASLIST = FiliterReg.ListForTime(RESDBGAS, PickerDate)\n        // const RESLAB0CLIST = FiliterReg.ListForTime(RESLAB0C, PickerDate)\n\n        const RESSECT_MG_LIST = FiliterReg.ListForTimeAndTarget(RESSECT, PickerDate, \"Mg\")\n        this.findLastestTargetValue(RESSECT_MG_LIST, \"mg\")\n\n        const RESSECT_PROC_LIST = FiliterReg.ListForTimeAndTarget(RESSECT, PickerDate, \"Procalcitonin\")\n        this.findLastestTargetValue(RESSECT_PROC_LIST, \"pct\")\n\n        const GLUFAST = ListEndData(RESDGLU1LIST.filter(function (value, index, array) {\n            return value.GLUFAST !== null\n        }))\n        const WBC = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV01 !== null\n        }))\n        const SEG = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV14 !== null\n        }))\n        const LYMP = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV15 !== null\n        }))\n        const HGB = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV03 !== null\n        }))\n        const PLATELET = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV09 !== null\n        }))\n        const NA = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV13 !== null\n        }))\n        const K = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV14 !== null\n        }))\n        const CA = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            // console.log(value.RSV15)\n            return value.RSV15 !== null\n        }))\n        const P = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV17 !== null\n        }))\n        const ALB = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV02 !== null\n        }))\n        const CRP = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV32 !== null\n        }))\n        const PH = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS07 !== null\n        }))\n        const PCO2 = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS06 !== null\n        }))\n        const BE = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS01 !== null\n        }))\n        const PO2 = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS08 !== null\n        }))\n        const BUN = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV05 !== null\n        }))\n        const CR = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV06 !== null\n        }))\n        const ALT = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV11 !== null\n        }))\n        const AST = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV12 !== null\n        }))\n        const TBIL = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV08 !== null\n        }))\n        const DBIL = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV25 !== null\n        }))\n        const ALKP = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV09 !== null\n        }))\n        const TOTALCA = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV03 !== null\n        }))\n        const IRON = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV26 !== null\n        }))\n        const TIBC = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV27 !== null\n        }))\n        const FERRITIN = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV03 !== null\n        }))\n        // console.log(GLUFAST)\n        // console.log(FERRITIN)\n        // console.log(CA)\n\n        // console.log(RESDGLU1LIST)\n        // console.log(RESLAB02LIST)\n        // console.log(RESLAB01LIST)\n        // console.log(RESDBGASLIST)\n        // console.log(RESDGLU1LIST.GLUFAST.toString().trim())\n        // const fesat = Number(RESLAB01LIST.RSV26) / Number(RESLAB01LIST.RSV27)\n\n\n        function areainterval(source) {\n            if (source === \"Wardview\") {\n                return \"0px\"\n            }\n            else return \"10px\"\n        }\n\n        function nullvalue(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            return value.toString().trim()\n        }\n        const TitleR = this.TitleRender()\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                {TitleR}\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", gridColumnGap: areainterval(Source) }}>\n                    <div style={{ border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(GLUFAST.GLUFAST)} title={\"Glucose\"} time={GLUFAST.ORBGNDT}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(WBC.RSV01)} title={\"WBC\"} time={WBC.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(SEG.RSV14)} title={\"Seg\"} time={SEG.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(LYMP.RSV15)} title={\"Lymp\"} time={LYMP.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(HGB.RSV03)} title={\"Hgb\"} time={HGB.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PLATELET.RSV09)} title={\"Platelet\"} time={PLATELET.ORBGNDT}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"5fr 1fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(NA.RSV13)} title={\"Na+\"} time={NA.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(K.RSV14)} title={\"K+\"} time={K.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(CA.RSV15)} title={\"Ca+\"} time={CA.ORBGNDT}></Labviewitem> {/*parse*/}\n                        <Labviewitem Source={Source} value={nullvalue(P.RSV17)} title={\"P\"} time={P.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(MG_VALUE)} title={\"Mg2+\"} time={\"2019-12-12\"}></Labviewitem> {/*parse*/}\n                    </div>\n                    <div style={{ border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(ALB.RSV02)} title={\"Alb\"} time={ALB.ORBGNDT}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 4fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(CRP.RSV32)} title={\"CRP\"} time={CRP.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PROC_VALUE)} title={\"Procalcitionin\"} time={\"2019-12-12\"}></Labviewitem>  {/*parse*/}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(PH.SS07)} title={\"pH\"} time={PH.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PCO2.SS06)} title={\"PCO2\"} time={PCO2.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(BE.SS01)} title={\"BE\"} time={BE.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PO2.SS08)} title={\"PO2\"} time={PO2.ORBGNDT}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 2fr 2fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(BUN.RSV05)} title={\"BUN\"} time={BUN.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(CR.RSV06)} title={\"Cr\"} time={CR.ORBGNDT}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(ALT.RSV11)} title={\"ALT\"} time={ALT.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(AST.RSV12)} title={\"AST\"} time={AST.ORBGNDT}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(TBIL.RSV08)} title={\"TBil\"} time={TBIL.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(DBIL.RSV25)} title={\"DBil\"} time={DBIL.ORBGNDT}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 4fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(ALKP.RSV09)} title={\"ALKP\"} time={ALKP.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(TOTALCA.RSV03)} title={\"Total Ca\"} time={TOTALCA.ORBGNDT}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(IRON.RSV26)} title={\"Iron\"} time={IRON.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(TIBC.RSV27)} title={\"TIBC\"} time={TIBC.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={\"--\"} title={\"FeSat\"} time={\"2019-12-12\"}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(FERRITIN.RSV03)} title={\"Ferritin\"} time={FERRITIN.ORBGNDT}></Labviewitem> {/* No Data */}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Labviewlayout","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { growdata } from '../jsonResponse'\nimport { wardchartoncustombefore, wardchartdatasourcebefore } from '../Data/Wardviewdata'\nimport moment from 'moment';\n\nclass WardlifeChart extends Component {\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    drawChart() {\n        const { gender, svg_key, weightList, grewinfo } = this.props\n        const width = (window.screen.availWidth - 50) / 2 - 50, height = 400\n        //var d = new Date('2014,12,01,12:16:05');\n        //var vertigo = datarelease();\n        console.log(grewinfo)\n        if (grewinfo === null || grewinfo === undefined) {\n            return null\n        }\n        const bornweeks = Number(grewinfo.WEEK_BORN)\n        const borndays = Number(grewinfo.DAY_BORN)\n        const Birthday = grewinfo.BIRTHDAY\n        const pregencyTimestamp = moment(Birthday, \"YYYYMMDD\").valueOf() - ((bornweeks * 7) + borndays) * 24 * 60 * 60 * 1000\n\n\n\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([0, 6000])\n            .range([height, 0])\n\n        var x = d3.scaleLinear()\n            .domain([22, 44])\n            .range([0, width])\n\n        var yAxis = d3.axisLeft(y)\n            .ticks(12)\n            .tickSize(0, 0)\n            .tickPadding(10);\n\n\n        var xAxis = d3.axisTop(x)\n            .ticks(14)\n            .tickSize(0, 0)\n            .tickPadding(-15)\n            .tickFormat(function (d) { return 'W' + d; });\n\n\n        var svg = d3\n            .select(\"#\" + svg_key)\n            .attr(\"viewBox\", [0, 0, width + 80, height + 50])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 40 + \",\" + 20 + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(\" + 0 + \", \" + height + \")\");\n\n        for (let index = 0; index < 9; index++) {\n            const number = index * 500\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(number))\n                .attr('x2', width)\n                .attr('y2', y(number))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n\n        }\n\n        for (let index = 0; index < 13; index++) {\n            const number = index * 500\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(number))\n                .attr('x2', width)\n                .attr('y2', y(number))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n        }\n\n        for (let index = 22; index < 45; index++) {\n            if (index % 2 == 0) {\n                svg.append('line')\n                    .attr('x1', x(index))\n                    .attr('y1', 0)\n                    .attr('x2', x(index))\n                    .attr('y2', height)\n                    .style('stroke', 'rgba(187, 187, 187, 1)')\n                    .style('stroke-width', 1)\n                    .style('stroke-dasharray', 5.5);\n            }\n        }\n\n        if (gender === '1') {\n            for (let index = 0; index < growdata.Male_befor.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_befor[index].y))\n                    .attr('y1', y(growdata.Male_befor[index].min))\n                    .attr('x2', x(growdata.Male_befor[index + 1].y))\n                    .attr('y2', y(growdata.Male_befor[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 1.5);\n            }\n\n            for (let index = 0; index < growdata.Male_befor.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_befor[index].y))\n                    .attr('y1', y(growdata.Male_befor[index].max))\n                    .attr('x2', x(growdata.Male_befor[index + 1].y))\n                    .attr('y2', y(growdata.Male_befor[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 1.5);\n            }\n        }\n        else {\n            for (let index = 0; index < growdata.FeMale_before.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_before[index].y))\n                    .attr('y1', y(growdata.FeMale_before[index].min))\n                    .attr('x2', x(growdata.FeMale_before[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_before[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 1.5);\n            }\n\n            for (let index = 0; index < growdata.FeMale_before.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_before[index].y))\n                    .attr('y1', y(growdata.FeMale_before[index].max))\n                    .attr('x2', x(growdata.FeMale_before[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_before[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 1.5);\n            }\n        }\n        const datasource = weightList\n        console.log(datasource)\n        //x 週數 y體重 NIS\n        for (let index = 0; index < datasource.length; index++) {\n            const element = datasource[index];\n            const BornDay = element.rec_dat.toString().trim()\n            const BornTime = element.rec_tim.toString().trim()\n            const time = BornDay + BornTime\n            const weighttimestamp = moment(time, \"YYYYMMDDHHmm\").valueOf() //體重時間\n            const weeks = (weighttimestamp - pregencyTimestamp) / (7 * 24 * 60 * 60 * 1000) //體重週數\n            if (weeks < 22) {\n                continue\n            }\n            if (weeks > 44) {\n                continue\n            }\n            svg.append('circle')\n                .attr('cx', x(weeks))\n                .attr('cy', y(Number(element.value2) * 1000))\n                .attr('r', 3)\n                .style('fill', 'green')\n        }\n\n\n        // const datacustom = wardchartoncustombefore\n        // for (let index = 0; index < datacustom.length; index++) {\n        //     const element = datacustom[index];\n        //     svg.append('circle')\n        //         .attr('cx', x(element.x))\n        //         .attr('cy', y(element.y))\n        //         .attr('r', 3)\n        //         .style('fill', 'blue')\n        // }\n\n    }\n\n    render() {\n        const { id_key, svg_key } = this.props\n        return (\n            <div id={id_key}>\n                <svg id={svg_key}></svg>\n            </div>\n        );\n    }\n}\n\nexport default WardlifeChart;","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { growdata } from '../jsonResponse'\nimport moment from 'moment'\n\nclass Wardmonthafter extends Component {\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    drawChart() {\n        const { gender, svg_key,weightList,grewinfo } = this.props\n        const width = (window.screen.availWidth - 50) / 2 - 50, height = 400\n        console.log(grewinfo)\n        if (grewinfo === null || grewinfo === undefined) {\n            return null\n        }\n        const Birthday = grewinfo.BIRTHDAY\n        const pregencyTimestamp = moment(Birthday, \"YYYYMMDD\").valueOf()\n        //var vertigo = datarelease();\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([1000, 10000])\n            .range([height, 0])\n\n        var x = d3.scaleLinear()\n            .domain([0, 6])\n            .range([0, width])\n\n        var yAxis = d3.axisLeft(y)\n            .ticks(10)\n            .tickSize(0, 0)\n            .tickPadding(10);\n\n\n        var xAxis = d3.axisTop(x)\n            .ticks(6)\n            .tickSize(0, 0)\n            .tickPadding(-15)\n            .tickFormat(function (d) {\n                if (d === 0) {\n                    return \"birth\"\n                }\n                else return 'M' + d;\n            });\n\n\n        var svg = d3\n            .select(\"#\" + svg_key)\n            // .style(\"height\", \"300px\")\n            // .style(\"width\", svgwidth + \"px\")\n            // .select(\"svg\")\n            .attr(\"viewBox\", [0, 0, width + 80, height + 50])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 20 + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(\" + 0 + \", \" + height + \")\");\n\n        for (let index = 0; index < 7; index++) {\n            svg.append('line')\n                .attr('x1', x(index))\n                .attr('y1', 0)\n                .attr('x2', x(index))\n                .attr('y2', height)\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n\n        }\n\n        for (let index = 0; index < 19; index++) {\n            const number = index * 500 + 1000\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(number))\n                .attr('x2', width)\n                .attr('y2', y(number))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n\n        }\n\n        // for (let index = 22; index < 45; index++) {\n        //     svg.append('line')\n        //         .attr('x1', x(index))\n        //         .attr('y1', 0)\n        //         .attr('x2', x(index))\n        //         .attr('y2', height)\n        //         .style('stroke', 'rgba(187, 187, 187, 1)')\n        //         .style('stroke-width', 1)\n        //         .style('stroke-dasharray', 5.5);\n        // }\n\n        if (gender === '1') {\n            for (let index = 0; index < growdata.Male_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_after[index].y))\n                    .attr('y1', y(growdata.Male_after[index].min))\n                    .attr('x2', x(growdata.Male_after[index + 1].y))\n                    .attr('y2', y(growdata.Male_after[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 1.5);\n            }\n\n            for (let index = 0; index < growdata.Male_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_after[index].y))\n                    .attr('y1', y(growdata.Male_after[index].max))\n                    .attr('x2', x(growdata.Male_after[index + 1].y))\n                    .attr('y2', y(growdata.Male_after[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 1.5);\n            }\n        }\n        else {\n            for (let index = 0; index < growdata.FeMale_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_after[index].y))\n                    .attr('y1', y(growdata.FeMale_after[index].min))\n                    .attr('x2', x(growdata.FeMale_after[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_after[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 1.5);\n            }\n\n            for (let index = 0; index < growdata.FeMale_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_after[index].y))\n                    .attr('y1', y(growdata.FeMale_after[index].max))\n                    .attr('x2', x(growdata.FeMale_after[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_after[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 1.5);\n            }\n        }\n\n        const datasource = weightList\n        //x時間 y體重\n        for (let index = 0; index < datasource.length; index++) {\n            const element = datasource[index];\n            const BornDay = element.rec_dat.toString().trim()\n            const BornTime = element.rec_tim.toString().trim()\n            const time = BornDay + BornTime\n            const weighttimestamp = moment(time,\"YYYYMMDDHHmm\").valueOf() //體重時間\n            const Month = (weighttimestamp - pregencyTimestamp) / (30 * 24 * 60 * 60 * 1000) //體重週數\n            if (Month < 0 || Month > 6) {\n                continue\n            }\n            console.log(Month,Number(element.value2) * 1000)\n            svg.append('circle')\n                .attr('cx', x(Month))\n                .attr('cy', y(Number(element.value2) * 1000))\n                .attr('r', 3)\n                .style('fill', 'green')\n        }\n        // const datacustom = wardchartoncustom\n        // for (let index = 0; index < datacustom.length; index++) {\n        //     const element = datacustom[index];\n        //     svg.append('circle')\n        //         .attr('cx', x(element.x))\n        //         .attr('cy', y(element.y))\n        //         .attr('r', 3)\n        //         .style('fill', 'blue')\n        // }\n\n    }\n\n    render() {\n        const { id_key, svg_key } = this.props\n        return (\n            <div id={id_key}>\n                <svg id={svg_key}></svg>\n            </div>\n        );\n    }\n}\n\nexport default Wardmonthafter;\n","import React, { Component } from 'react';\nimport WardlifeChart from './Wardlifechart'\nimport Wardmonthafter from './Wardmonthafter'\n\n\nclass Wardgrewchart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            test_items_interval: 0\n        };\n    }\n    switch_monthy() {\n        const { Data, WeightList, grewinfo } = this.props\n        console.log(grewinfo)\n        const switch_data = this.state.test_items_interval\n        switch (switch_data) {\n            case 1:\n                return <WardlifeChart grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife\"} svg_key={\"wardlife_svg\"} gender={Data.PSEX}></WardlifeChart>\n            case 0:\n                return <Wardmonthafter grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife_after\"} svg_key={\"wardlife_after_svg\"} gender={Data.PSEX}></Wardmonthafter>\n            default:\n                return null;\n        }\n    }\n    //測驗項目功能_區間按鈕樣式\n    SwitchTestItemInterval(testiteminterval) {\n        const time_selectbtn_style = {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"40px\",\n            paddingRight: \"10px\",\n            paddingLeft: \"10px\",\n            borderRadius: \"16px\",\n            backgroundColor: \"rgba(245,166,35,1)\",\n            color: \"white\",\n            fontSize: \"1rem\",\n            borderWidth: \"1px\",\n            borderStyle: \"solid\",\n            borderColor: \"rgba(245,166,35,1)\",\n            cursor: \"pointer\"\n        }\n        const time_unselectbtn_style = {\n            display: \"flex\", justifyContent: \"center\",\n            alignItems: \"center\", height: \"40px\",\n            paddingRight: \"10px\", paddingLeft: \"10px\",\n            borderRadius: \"16px\", backgroundColor: \"white\",\n            color: \"rgba(245,166,35,1)\", fontSize: \"1rem\",\n            borderWidth: \"1px\", borderStyle: \"solid\",\n            borderColor: \"rgba(245,166,35,1)\",\n            cursor: \"pointer\"\n        }\n        if (testiteminterval === this.state.test_items_interval) {\n            return time_selectbtn_style\n        }\n        else return time_unselectbtn_style\n    }\n    //測驗項目功能_區間按鈕選擇\n    Onchangetimeinterval(changestate) {\n        this.setState(\n            {\n                test_items_interval: changestate\n            }\n        )\n    }\n    render() {\n        return (\n            <div>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: 'center', height: \"50px\", backgroundColor: \"#cccccc\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", paddingLeft: \"15px\" }}>\n                    <t2>生長曲線圖</t2>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"5px\" }}>\n                        <div style={this.SwitchTestItemInterval(0)} onMouseUp={() => this.Onchangetimeinterval(0)}>滿足月</div>\n                        <div style={this.SwitchTestItemInterval(1)} onMouseUp={() => this.Onchangetimeinterval(1)}>不滿足月</div>\n                    </div>\n                </div>\n                {this.switch_monthy()}\n            </div>\n        );\n    }\n}\nexport default Wardgrewchart","import React, { Component } from 'react';\nimport editlogo from '../../Image/svg/Edit.svg'\nimport detaillogo from '../../Image/svg/details.svg'\nimport { Tooltip, Input, Button } from 'antd';\nimport './Notice.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass Notice extends Component {\n    state = {\n        caseinfo: this.props.caseinfo,\n        EditMode: false,\n        noticeData: [],\n        inputContent: undefined,\n        powerLogin: 0\n    }\n    componentDidMount() {\n        //bind function\n        this.onInputChange = this.onInputChange.bind(this);\n        //query patient notice\n        console.log(\"caseinfo: \" + JSON.stringify(this.props.caseinfo));\n        const TRID = this.props.caseinfo.TRANSINID.toString().trim()\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins, preTRID: TRID })\n        this.queryPatientImportant(TRID);\n    }\n    componentDidUpdate() {\n        const TRID = this.props.caseinfo.TRANSINID.toString().trim()\n        const preTRID = this.state.preTRID\n        if (TRID !== preTRID) {\n            this.setState({ preTRID: TRID })\n            this.queryPatientImportant(TRID);\n        }\n    }\n    queryPatientImportant(TRID) {\n        ApiProvider.getOnePatientImportantMatter(TRID)\n            .then(data => {\n                console.log(\"getOnePatientImportantMatter OK \" + JSON.stringify(data));\n                this.setState({ noticeData: data.data });\n            })\n            .catch(err => {\n                console.log(\"getOnePatientImportantMatter NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString();\n        ApiProvider.createPatientImportantMatter(this.state.inputContent, \"\", this.state.caseinfo.HISID, timeNowStr, this.state.caseinfo.TRANSINID)\n            .then(data => {\n                console.log(\"createPatientImportantMatter OK \" + JSON.stringify(data));\n                this.queryPatientImportant();\n            })\n            .catch(err => {\n                console.log(\"createPatientImportantMatter NG \" + JSON.stringify(err));\n            });\n        this.setState(\n            {\n                EditMode: false,\n                inputContent: undefined\n            }\n        )\n    }\n    renderEditButton() {\n        if (this.props.disableEdit === true) {\n            return null;\n        } else {\n            return (\n                <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin > 0 ? \"flex\" : \"none\" }}>\n                    <img src={editlogo} alt=\"editlogo\" />\n                </div>\n            )\n        }\n    }\n\n    render() {\n        function remarkcellRender(dataList) {\n            if (Array.isArray(dataList)) {\n                if (dataList.length === 0) {\n                    return (\n                        <div style={{ padding: \"5px 15px\" }}>無病人註記</div>\n                    );\n                }\n                const remarkcell = dataList.map((info, index) =>\n                    <div key={index} className='noticecontext'>\n                        <div style={{ whiteSpace: \"pre-wrap\" }}>{info.context}</div>\n                        <Tooltip placement=\"topRight\" title={tooltiptext(info.Editor, info.time)}>\n                            <img src={detaillogo} alt=\"detaillogo\" />\n                        </Tooltip>\n                    </div>\n                )\n                return remarkcell\n            }\n            return (\n                <div style={{ padding: \"5px 15px\" }}>無病人註記</div>\n            );\n        }\n        function tooltiptext(editor, time) {\n            function nullvalue(value) {\n                if (value === null || value === undefined) {\n                    return \"--\"\n                }\n                return value\n            }\n            console.log(time)\n            const t = moment(time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n            const localTime = moment.utc(t).toDate()\n            const displayTime = moment(localTime).format(\"MM/DD HH:mm\")\n            return nullvalue(editor) + \"醫師於\" + displayTime + \"更新\"\n        }\n        const remarkcell = remarkcellRender(this.state.noticeData)\n        const { TextArea } = Input;\n        return (\n            <div style={{ marginBottom: '10px' }}>\n                <div className='noticetitle'>\n                    <t2>病人註記</t2>\n                    {this.renderEditButton()}\n                </div>\n                <div className='noticecontextborder'>\n                    {remarkcell}\n                </div>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", backgroundColor: \"rgba(238,238,238,1)\" }}>\n                        <TextArea id=\"noticeContent\" placeholder=\"輸入當日註記內容\" value={this.state.inputContent} onChange={this.onInputChange} autoSize={true}></TextArea>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Notice","import React, { Component } from 'react';\nimport { Labwarningvalue } from '../../Function/Wardstate'\nimport moment from 'moment'\n\nclass Labviewitem extends Component {\n    TimeRender(time) {\n        const { Source } = this.props\n        if (Source === \"Wardview\") {\n            return null\n        }\n        else return (\n            <centerstyle>\n                <t3 style={{ color: \"rgba(0,0,0,0.4)\" }}>{moment(time,\"YYYY-MM-DD\").format(\"MM/DD\")}</t3>\n            </centerstyle>\n        );\n    }\n    render() {\n        function RowsGrid(source){\n            if (source === \"Wardview\") {\n                return \"1fr 2fr\"\n            }\n            return \"1fr 2fr 1fr\"\n        }\n        function RowsHeight(source){\n            if (source === \"Wardview\") {\n                return \"60px\"\n            }\n            return \"120px\"\n        }\n        const { value, title, time ,Source} = this.props\n        const TimeR = this.TimeRender(time)\n        return (\n            <div style={{ display: \"grid\", gridTemplateRows:RowsGrid(Source), height: RowsHeight(Source) }}>\n                <centerstyle>\n                    <t3>{title}</t3>\n                </centerstyle>\n                <centerstyle>\n                    <t2 style={{ fontSize: \"20px\", color: Labwarningvalue(value, title) ? \"black\" : \"red\" }}>{value}</t2>\n                </centerstyle>\n                {TimeR}\n            </div>\n        );\n    }\n}\n\nexport default Labviewitem","export function firstarea_Reg_IO() {\n    return [\"輸液\"];\n}\n\nexport function Secondarea_reg_IO() {\n    return [\"血品\"];\n}\n\nexport function Thirdarea_reg_IO() {\n    return [\"進食\"];\n}\n\nexport function Fourtharea_reg_IO() {\n    return [\"失血\", \"滲液\", \"嘔吐\", \"引流\", \"穿刺\", \"透析\", \"沖洗\", \"排便\", \"排尿\"];\n}\n\n\n\nexport function Feedarea_Reg_IO() {\n    return [\"進食\"];\n}\n\nexport function IVarea_reg_IO() {\n    return [\"血品\", \"輸液\"];\n}\n\nexport function UOarea_reg_IO() {\n    return [\"排尿\"];\n}\n\nexport function Otherarea_reg_IO() {\n    return [\"失血\", \"滲液\", \"嘔吐\", \"引流\", \"穿刺\", \"透析\", \"沖洗\", \"排便\"];\n}\n\nexport function Select_Main_Doc(DOCLIST) {\n    console.log(DOCLIST)\n    const MainDoc = DOCLIST.filter(function (value, index, array) {\n        return value.PDTYPE === \"B\"\n    })\n    if (MainDoc.length === 0) {\n        return \"\"\n    }\n    else {\n        const data = MainDoc[0]\n        return data.PDDOCNMC\n    }\n}\n\nexport function SumFeedDataMapReduce(arr) {\n    const sumlist = arr.map(function (value, index) {\n        return Number(value.inp_val2)\n    })\n    var sum = 0\n    for (let index = 0; index < sumlist.length; index++) {\n        const element = sumlist[index];\n        sum = sum + element\n    }\n    return sum\n}\n\nexport function SumIVDataMapReduce(arr) {\n    const sumlist = arr.map(function (value, index) {\n        return Number(value.inp_val1)\n    })\n    var sum = 0\n    for (let index = 0; index < sumlist.length; index++) {\n        const element = sumlist[index];\n        sum = sum + element\n    }\n    return sum\n}\n\nexport function SumUrineDataMapReduce(arr) {\n    const sumlist = arr.map(function (value, index) {\n        return Number(value.inp_val1)\n    })\n    var sum = 0\n    for (let index = 0; index < sumlist.length; index++) {\n        const element = sumlist[index];\n        sum = sum + element\n    }\n    return sum\n}\nexport function SumInOtherDataMapReduce(arr) {\n    return arr.map(el => Number(el.inp_val1)).reduce((a, b) => a + b);\n}\nexport function SumOutOtherDataMapReduce(arr) {\n    return arr.map(el => Number(el.out_val1)).reduce((a, b) => a + b);\n}\n\n\n\n//累積報告\n\nexport function ListForTime(arr, time) {\n    var DataList = []\n    for (let index = 0; index < arr.length; index++) {\n        const element = arr[index];\n        if (new Date(element.ORRESDT).getTime() <= new Date(time).getTime()) {\n            DataList.push(element)\n        }\n    }\n    return DataList\n}\n\nexport function ListForTimeAndTarget(arr, time, target) {\n    var DataList = []\n    arr.forEach(element => {\n        const parseTimestamp = new Date(element.ORRCPDT.split(\"-\")[0],element.ORRCPDT.split(\"-\")[1],element.ORRCPDT.split(\"-\")[2]).getTime()\n        const nowTimestamp = new Date(time).getTime()\n        //console.log(\"parseTimestamp: \" + parseTimestamp + \"\\nnowTimestamp: \" + nowTimestamp)\n        //console.log(element.ORPROCED.indexOf(target))\n        if (parseTimestamp <= new Date(time).getTime() && element.ORPROCED.indexOf(target) > -1) {\n            DataList.push(element)\n        }\n    })\n    return DataList\n}\n\nexport function CaRegString(ressectobject) {\n    var select = []\n    if (Array.isArray(ressectobject)) {\n        for (let index = 0; index < ressectobject.length; index++) {\n            const element = ressectobject[index];\n            const elementstring = element.ORPROCED.toString()\n            if (elementstring.match(\"Ca++, free\") !== null) {\n                select.push(element)\n            }\n        }\n    }\n    if (select.length === 0) {\n        return \"null\"\n    }\n\n}\n\nexport function QSPERegList(qspe) {\n    function SettingValue(value) {\n        if (value === undefined || value === null) {\n            return \"\"\n        }\n        return value\n    }\n    var qspearray = []\n    if (Array.isArray(qspe)) {\n        for (let index = 0; index < qspe.length; index++) {\n            const element = qspe[index];\n            console.log(qspe)\n            if (element !== undefined) {\n                const SelectElement = element.special.toString()\n                if (SelectElement.match(\"@v\") !== null) {\n                    const DataArray = SelectElement.split(\" \")\n                    const title = DataArray[1]\n                    const value = DataArray[2]\n                    const DataJson = {\n                        \"Mode\": title,\n                        \"Setting\": SettingValue(value),\n                        \"Date\": element.rec_dat,\n                        \"Time\": element.rec_tim,\n                    }\n                    qspearray.push(DataJson)\n                }\n            }\n        }\n    }\n    return qspearray\n}\n\nexport function QSPESetting(qspesettingarray) {\n    console.log(qspesettingarray)\n    const regString = qspesettingarray.Mode\n    const regValue = qspesettingarray.Setting.split(\"/\")\n    if (regString.match(\"RA\") !== null) {\n        return \"\"\n    }\n    if (regString.match(\"NC\") !== null) {\n        return \"Flow:\" + regValue[0]\n    }\n    if (regString.match(\"UW\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/PEEP:\" + regValue[1]\n    }\n    if (regString.match(\"bcpap\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/PEEP:\" + regValue[1]\n    }\n    if (regString.match(\"CPAP\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/PEEP:\" + regValue[1]\n    }\n    if (regString.match(\"NIPPV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Rate:\" + regValue[1] + \"/PIP:\" + regValue[2] + \"/PEEP:\" + regValue[3]\n    }\n    if (regString.match(\"HFOV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Rate:\" + regValue[1] + \"/PIP:\" + regValue[2] + \"/PEEP:\" + regValue[3]\n    }\n    if (regString.match(\"HFOV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Amp:\" + regValue[1] + \"/MAP:\" + regValue[2] + \"/Freq:\" + regValue[3]\n    }\n    if (regString.match(\"HFPPV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Rate:\" + regValue[1] + \"/PIP:\" + regValue[2] + \"/PEEP:\" + regValue[3]\n    }\n    return qspesettingarray.value\n}\n","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport './Wardcardvitalsign.scss';\nimport { mmddformat } from '../Function/Timeformat'\nimport * as ApiProvider from '../API/ApiProvider'\nimport moment from 'moment';\n\n\n\nclass WardcardvitalsignChart extends Component {\n    state = {\n        sourcedata: []\n    }\n    componentDidUpdate() {\n        // const { svg_key } = this.props\n        // d3.select(\"#\" + svg_key).remove()\n\n    }\n    componentDidMount() {\n        const { id_key } = this.props\n        function selectType(type) {\n            switch (type) {\n                case \"div_hr\":\n                    return \"hr\"\n                case \"div_bp\":\n                    return \"nbp\"\n                case \"div_rr\":\n                    return \"rr\"\n                case \"div_spo\":\n                    return \"spo2\"\n                case \"div_abp\":\n                    return \"abp\"\n                case \"div_bt\":\n                    return \"bt\"\n                default:\n                    break;\n            }\n        }\n        // const simdata = vitalData.simdata\n        const endTime = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").format(\"YYYYMMDDHHmmss\");\n        const startTime = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf() - (24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\");\n        console.log(endTime, startTime)\n        const { HISID } = this.props\n        const hisid = HISID.toString().trim()\n        const type = selectType(id_key)\n        if (id_key === \"div_hr\" || id_key === \"div_rr\" || id_key === \"div_spo\") {\n\n            ApiProvider.getPatientwardvalueBoxPlot(hisid, startTime, endTime, type, 0)\n                .then(data => {\n                    this.setState({\n                        sourcedata: data.data\n                    })\n                    this.drawChart()\n                })\n                .catch(err => { console.log(err) })\n        }\n        if (id_key === \"div_bp\" || id_key === \"div_abp\") {\n\n            ApiProvider.getVitalSignData(hisid, startTime, endTime, type)\n                .then(data => {\n                    this.setState({\n                        sourcedata: data.data\n                    })\n                    this.drawChart()\n                })\n                .catch(err => {\n                    console.log(err);\n                })\n        }\n\n    }\n\n    cal_svg_hight() {\n        const { axisTop, axisBot } = this.props\n        if (axisTop) {\n            if (axisBot) {\n                return 160\n            }\n            else {\n                return 130\n            }\n        }\n        else {\n            if (axisBot) {\n                return 100\n            }\n            else {\n                return 90\n            }\n        }\n    }\n\n    cal_svg_transform() {\n        const { axisTop, axisBot } = this.props\n        console.log(axisTop)\n        if (axisTop) {\n            if (axisBot) {\n                return 70\n            }\n            else {\n                return 50\n            }\n        }\n        else {\n            if (axisBot) {\n                return 5\n            }\n            else {\n                return 5\n            }\n        }\n    }\n\n    drawChart() {\n        function multiFormat(date) {\n            if (formatHour(date) % 4 === 0) {\n                return formatHour(date)\n            }\n            else return null\n        }\n        function multibotformat(date) {\n            if (new Date(date).getHours() === 0) {\n                return mmddformat(date)\n            }\n            else return null\n        }\n        const { svg_key, circlrcolor, axisTop, id_key, axisBot, MAX, MIN, Upper, Lower } = this.props\n        const width = window.screen.availWidth * 0.25, height = 70, transformmargin = this.cal_svg_transform(), margin = 20\n        // const borderwidth = width / 27\n        const time_now = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf()\n        const startTime = time_now - (24 * 60 * 60 * 1000);\n        console.log(time_now)\n\n        var time_array = []\n        var time_axis_array = []\n        for (let index = 0; index < 25; index++) {\n            time_array.push({ key: \"time\", x_axis_time: time_now - index * 60 * 60 * 1000 })\n            time_axis_array.push(time_now - index * 60 * 60 * 1000)\n        }\n        var time_array_reverse = time_array.reverse()\n        var time_axis_array_reverse = time_axis_array.reverse()\n        var formatHour = d3.timeFormat(\"%H\")\n\n        // const endTime = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf();\n\n\n        var x = d3.scaleLinear()\n            .domain([time_array_reverse[0].x_axis_time, time_array_reverse[24].x_axis_time])\n            .range([0, width - 40]);\n\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([MIN, MAX])\n            .range([height, 0])\n\n\n\n        var yAxis = d3.axisLeft(y)\n            .tickValues([MIN, MAX])\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(10);\n\n        var xAxisBottom = d3.axisBottom(x)\n            .tickValues(time_axis_array_reverse)\n            .tickSize(0, 0)\n            .tickPadding(height + 10)\n            .tickFormat(function (d) { return multibotformat(d); });\n\n\n        var xAxis = d3.axisTop(x)\n            .tickValues(time_axis_array_reverse)\n            .tickSize(0, 0)\n            .tickPadding(margin)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_key)\n            .attr(\"viewBox\", [0, 0, width, this.cal_svg_hight()])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 30 + \",\" + transformmargin + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n        if (axisTop) {\n            svg.append(\"g\")\n                .call(xAxis)\n                .attr(\"class\", \"axis\");\n        }\n\n        if (axisBot) {\n            svg.append(\"g\")\n                .call(xAxisBottom)\n                .attr(\"class\", \"axis\");\n        }\n\n        //上下虛線\n        svg.append('line')\n            .attr('x1', 0)\n            .attr('y1', y(MAX))\n            .attr('x2', width)\n            .attr('y2', y(MAX))\n            .style('stroke', '#E0E0E0')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n        svg.append('line')\n            .attr('x1', 0)\n            .attr('y1', y(MIN))\n            .attr('x2', width)\n            .attr('y2', y(MIN))\n            .style('stroke', '#E0E0E0')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n\n        for (let index = 0; index < time_array_reverse.length; index++) {\n            svg.append('line')\n                .attr('x1', x(time_array_reverse[index].x_axis_time))\n                .attr('y1', 0)\n                .attr('x2', x(time_array_reverse[index].x_axis_time))\n                .attr('y2', height)\n                .style('stroke', '#E0E0E0')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n        }\n\n\n\n        drawshadow(startTime, 0, Lower, Upper)\n        function drawshadow(startTime, interval, lower, upper) {\n            const LimitBoxTimer = formatBox(startTime, interval, width)\n            for (let index = 0; index < LimitBoxTimer.length; index++) {\n                const boxwidth = formatBoxWidth(width, interval)\n                const element = LimitBoxTimer[index];\n                console.log(startTime)\n                svg.append('line')\n                    .attr('x1', x(element))\n                    .attr('y1', y(lower))\n                    .attr('x2', x(element))\n                    .attr('y2', y(upper))\n                    .style('stroke', circlrcolor)\n                    .style('opacity', 0.7)\n                    .style('stroke-width', boxwidth)\n\n                if (id_key === \"div_bp\" || id_key === \"div_abp\") {\n                    svg.append('line')\n                        .attr('x1', x(element))\n                        .attr('y1', y(35))\n                        .attr('x2', x(element))\n                        .attr('y2', y(55))\n                        .style('stroke', circlrcolor)\n                        .style('opacity', 0.3)\n                        .style('stroke-width', boxwidth)\n                }\n            }\n        }\n        function formatBox(startTime, interval) {\n            function interFormat(startTime, interval) {\n                var TimeArray = []\n                for (let index = 0; index < interval; index++) {\n                    if (interval === 24) {\n                        const boxTime = startTime + (30 * 60 * 1000) + (index * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 18) {\n                        const boxTime = startTime + (2 * 60 * 60 * 60 * 1000) + (index * 4 * 60 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 21) {\n                        const boxTime = startTime + (4 * 60 * 60 * 60 * 1000) + (index * 8 * 60 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else {\n                        const boxTime = startTime + (12 * 60 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                }\n                return TimeArray\n            }\n            if (interval === 0) {\n                return interFormat(startTime, 24)\n            }\n            if (interval === 1) {\n                return interFormat(startTime, 18)\n            }\n            if (interval === 2) {\n                return interFormat(startTime, 21)\n            }\n            return interFormat(startTime, 14)\n        }\n        function formatBoxWidth(viewwidth, interval) {\n            if (interval === 0) {\n                return viewwidth / 24\n            }\n            if (interval === 1) {\n                return viewwidth / 18\n            }\n            if (interval === 2) {\n                return viewwidth / 21\n            }\n            return viewwidth / 14\n        }\n        // var sim_data = this.state.sourcedata\n        const BoxPlotData = this.state.sourcedata\n        if (BoxPlotData.length === 0) {\n            return null\n        }\n\n        if (id_key === \"div_bp\" || id_key === \"div_abp\") {\n            for (let index = 0; index < BoxPlotData.length; index++) {\n                const element = BoxPlotData[index];\n                const Xtime = moment(element.Time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                const SBP = element.SBP\n                const DBP = element.DBP\n                if (SBP === 0 || DBP === 0) {\n                    continue\n                }\n                svg.append('circle')\n                    .attr('cx', x(Xtime))\n                    .attr('cy', y(SBP))\n                    .attr('r', 3)\n                    .style('fill', circlrcolor)\n\n\n                svg.append('circle')\n                    .attr('cx', x(Xtime))\n                    .attr('cy', y(DBP))\n                    .attr('r', 3)\n                    .style('opacity', 0.5)\n                    .style('fill', circlrcolor)\n            }\n        }\n        if (id_key === \"div_hr\" || id_key === \"div_rr\" || id_key === \"div_spo\") {\n            // for (let index = 0; index < BoxPlotData.length; index++) {\n            //     const element = BoxPlotData[index];\n            //     const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + (30 * 60 * 1000)\n            //     svg.append('line')\n            //         .attr('x1', x(Xtime))\n            //         .attr('y1', y(Lower))\n            //         .attr('x2', x(Xtime))\n            //         .attr('y2', y(Upper))\n            //         .style('stroke', circlrcolor)\n            //         .style('opacity', 0.5)\n            //         // .style('stroke', 'red')\n            //         .style('stroke-width', borderwidth)\n\n            // }\n            for (let index = 0; index < BoxPlotData.length; index++) {\n                const element = BoxPlotData[index];\n                console.log(element)\n                const q1 = element.Q1\n                const q2 = element.Q2\n                const q3 = element.Q3\n                const q4 = element.Q4\n                const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + (30 * 60 * 1000)\n                console.log(q1, q2, q3, q4)\n                const boxwidth = 10\n                svg.append(\"line\")\n                    .attr(\"x1\", x(Xtime))\n                    .attr(\"x2\", x(Xtime))\n                    .attr(\"y1\", y(q1))\n                    .attr(\"y2\", y(q4))\n                    .attr(\"stroke\", circlrcolor)\n                    // .attr(\"stroke\", \"blcak\")\n                    .style('stroke-width', 1)\n\n                svg.append(\"rect\")\n                    .attr(\"x\", x(Xtime) - boxwidth / 2)\n                    .attr(\"y\", y(q3))\n                    .attr(\"height\", (y(q2) - y(q3)))\n                    .attr(\"width\", boxwidth)\n                    .attr(\"stroke\", circlrcolor)\n                    .style(\"fill\", \"rgba(255,255,255,1)\")\n                    .style('stroke-width', 1);\n\n                svg\n                    .selectAll(\"toto\")\n                    .data([q1, q4])\n                    .enter()\n                    .append(\"line\")\n                    .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                    .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                    .attr(\"y1\", function (d) { return (y(d)) })\n                    .attr(\"y2\", function (d) { return (y(d)) })\n                    .attr(\"stroke\", circlrcolor)\n                    .style('stroke-width', 1);\n\n            }\n        }\n\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default WardcardvitalsignChart;","import React, { Component } from 'react';\nimport WardcardvitalsignChart from './Wardcardvitalsign'\nimport { statecolor } from '../Function/Wardstate'\nimport * as ApiProvider from '../API/ApiProvider'\nimport './Wardchart.scss'\nimport moment from 'moment';\n\n\n\nclass WardChart extends Component {\n    state = {\n        data: []\n    }\n    render() {\n        function valueFormat(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"--\"\n            }\n            return value\n        }\n        const data = this.state.data\n        const { CMvalue,HISID } = this.props\n        const vitalvalue = CMvalue\n        if (vitalvalue === undefined || vitalvalue === null) {\n            return null\n        }\n        return (\n            <div className='Wardchartlayout'>\n                <div className='halfwardchart'>\n                    <div className='singlewardchart'>\n                        <div className='firstRowTitle'>\n                            <div>\n                                <centerstyle>\n                                    <t4 style={{ color: statecolor('HR') }}>HR(min)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontSize: \"40px\", color: statecolor('HR') }}>{valueFormat(vitalvalue.hr)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <WardcardvitalsignChart MAX={200} MIN={0} Upper={160} Lower={100} HISID={HISID} svg_key={\"svg_hr\"} id_key={\"div_hr\"} data={data} axisBot={false} axisTop={true} colorshadow={\"rgba(126, 211, 33, 0.1)\"} circlrcolor={\"#779F50\"}></WardcardvitalsignChart>\n                    </div>\n                    <div className='singlewardchart'>\n                        <div className='secondRowTitle'>\n                            <div>\n                                <centerstyle>\n                                    <t4 style={{ color: statecolor('BP') }}>NBP(mmHg)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontSize: \"18px\", color: statecolor('BP') }}>{valueFormat(vitalvalue.nbpd)}/{valueFormat(vitalvalue.nbps)}</div>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontSize: \"14px\", color: statecolor('BP') }}>({valueFormat(vitalvalue.nbpm)})</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <WardcardvitalsignChart MAX={100} MIN={0} Upper={75} Lower={55} HISID={HISID} svg_key={\"svg_bp\"} id_key={\"div_bp\"} data={data} data2={true} axisBot={false} axisTop={false} colorshadow={\"rgba(240, 144, 144, 0.1)\"} circlrcolor={\"#C12528\"} data_2_circlrcolor={\"rgba(240, 144, 144, 0.5)\"}></WardcardvitalsignChart>\n                    </div>\n                    <div className='singlewardchart'>\n                        <div className='thirdRowTitle'>\n                            <div>\n                                <centerstyle>\n                                    <t4 style={{ color: statecolor('BP') }}>ABP(mmHg)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontSize: \"18px\", color: statecolor('BP') }}>{valueFormat(vitalvalue.abpd)}/{valueFormat(vitalvalue.abps)}</div>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontSize: \"14px\", color: statecolor('BP') }}>({valueFormat(vitalvalue.abpm)})</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <WardcardvitalsignChart MAX={100} MIN={0} Upper={75} Lower={55}  HISID={HISID} svg_key={\"svg_abp\"} id_key={\"div_abp\"} data={data} data2={true} axisBot={true} axisTop={false} colorshadow={\"rgba(240, 144, 144, 0.1)\"} circlrcolor={\"#C12528\"} data_2_circlrcolor={\"rgba(240, 144, 144, 0.5)\"}></WardcardvitalsignChart>\n                    </div>\n                </div>\n                <div className='halfwardchart'>\n                    <div className='singlewardchart'>\n                        <div className='firstRowTitle'>\n                            <div>\n                                <centerstyle>\n                                    <t4 style={{ color: statecolor('SpO2') }}>SpO2(%)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontSize: \"40px\", color: statecolor('SpO2') }}>{valueFormat(vitalvalue.spo2)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <div>\n                            <WardcardvitalsignChart  MAX={100} MIN={60} Upper={100} Lower={90} HISID={HISID} svg_key={\"svg_spo\"} id_key={\"div_spo\"} data={data} axisBot={false} axisTop={true} colorshadow={\"rgba(0, 183, 255, 0.1)\"} circlrcolor={\"#4773B8\"}></WardcardvitalsignChart>\n                        </div>\n                    </div>\n                    <div className='singlewardchart'>\n                        <div className='secondRowTitle'>\n                            <div>\n                                <centerstyle>\n                                    <t4 style={{ color: statecolor('BT') }}>BT(<sup>&ordm;</sup>C)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontSize: \"40px\", color: statecolor('BT') }}>{valueFormat(vitalvalue.bt)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <WardcardvitalsignChart  MAX={43} MIN={33} Upper={38} Lower={36} HISID={HISID} svg_key={\"svg_bt\"} id_key={\"div_bt\"} data={data} axisBot={false} axisTop={false} colorshadow={\"rgba(199, 162, 244,0.1)\"} circlrcolor={\"#7F3DB5\"}></WardcardvitalsignChart>\n                    </div>\n                    <div className='singlewardchart'>\n                        <div className='thirdRowTitle'>\n                            <div>\n                                <centerstyle>\n                                    <t4 style={{ color: statecolor('RR') }}>RR(min)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontSize: \"40px\", color: statecolor('RR') }}>{valueFormat(vitalvalue.rr)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <WardcardvitalsignChart MAX={100} MIN={0} Upper={60} Lower={20}  HISID={HISID} svg_key={\"svg_rr\"} id_key={\"div_rr\"} data={data} axisBot={true} axisTop={false} colorshadow={\"rgba(255, 152, 0, 0.1)\"} circlrcolor={\"#DE7531\"}></WardcardvitalsignChart>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WardChart;","import React, { Component } from 'react';\nimport { Checkbox } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider'\n\nclass Wardinfousercheckbox extends Component {\n    state = {\n        checkboxselect: this.props.selectstate\n    }\n\n    updateOnePatientTodo() {\n        if (this.state.checkboxselect) {\n            ApiProvider.createTodo(this.props.item.caseid, this.props.item.context, this.props.item.time, this.props.item.transinno, '已完成')\n                .then(data => {\n                    console.log('updateOnePatientTodo ok ' + JSON.stringify(data))\n                })\n                .catch(err => {\n                    console.log('updateOnePatientTodo ng ' + JSON.stringify(err))\n                })\n        } else {\n            ApiProvider.createTodo(this.props.item.caseid, this.props.item.context, this.props.item.time, this.props.item.transinno, '未完成')\n                .then(data => {\n                    console.log('updateOnePatientTodo ok ' + JSON.stringify(data))\n                })\n                .catch(err => {\n                    console.log('updateOnePatientTodo ng ' + JSON.stringify(err))\n                })\n        }\n    }\n    selectchange() {\n        this.setState({\n            checkboxselect: !this.state.checkboxselect\n        }, this.updateOnePatientTodo)\n    }\n\n    render() {\n        const selectunstyle = {\n            fontSize: \"1rem\"\n        }\n        const selectstyle = {\n            textDecoration: \"line-through\", fontSize: \"1rem\"\n        }\n        return (\n            <div style={{ height: \"50px\", paddingLeft: \"15px\", display: \"flex\", alignItems: \"center\" }}>\n                <Checkbox onChange={() => this.selectchange()} checked={this.state.checkboxselect} style={this.state.checkboxselect ? selectstyle : selectunstyle}>{this.props.item.context}</Checkbox>\n            </div>\n        )\n    }\n\n}\n\nexport default Wardinfousercheckbox;","import React, { Component } from 'react';\nimport './Patientviewinfo.scss'\nclass Patientinfo extends Component {\n\n    state = { visible: false };\n    render() {\n        const { patientDetail } = this.props\n        // console.log(patientDetail)\n        const patientData = patientDetail.map(element =>\n            <div className='context'>\n                <div className='title'>{element[0]} ：</div>\n                <div className='item'>{element[1]}</div>\n            </div>\n        )\n\n        console.log(patientData)\n\n        return (\n            <div className='patientinfolayout'>\n                {patientData}\n            </div>\n        );\n    }\n}\n\nexport default Patientinfo\n","import React, { useState, useEffect } from \"react\";\nimport './Wardinfouser.scss'\nimport moment from 'moment'\nimport { Modal } from 'antd';\nimport * as Wardstate from '../Function/Wardstate'\nimport * as ApiProvider from '../API/ApiProvider'\nimport * as ApiGithub from '../API/ApiGithub'\nimport { pregancyweeksanddays, gender } from '../Function/Wardbedfunction'\nimport fileLogo from '../Image/svg/file1.svg'\nimport file2Logo from '../Image/svg/file2.svg'\nimport Wardgrewchart from './Wardgrewchart'\nimport Notice from '../Patientview/Schedule/Notice'\nimport Labviewlayout from '../Patientview/CrossSectionView/Labview'\nimport WardChart from './Wardchart'\nimport Wardinfousercheckbox from './Wardunfousercheckbox'\nimport { Link } from \"react-router-dom\";\nimport * as Reg from '../Data/RegularData';\nimport Patientinfo from '../Patientview/Patientviewinfo';\nimport Wardcarstatus from './Wardcardstatus'\n\n\nexport function Wardinfouser(props) {\n    const [Visible, setVisible] = useState(false);\n    const [Report, SetReport] = useState(0);\n    const [Nonreport, SetNonreport] = useState(0);\n    const [RESLAB01, SetRESLAB01] = useState([]);\n    const [RESLAB02, SetRESLAB02] = useState([]);\n    const [RESDBGAS, SetRESDBGAS] = useState([]);\n    const [RESLAB0C, SetRESLAB0C] = useState([]);\n    const [RESDGLU1, SetRESDGLU1] = useState([]);\n    const [RESSECT, SetRESSECT] = useState([]);\n    const [CenterMonitorValue, SetCenterMonitorValue] = useState([])\n    const [scheduleList, SetScheduleList] = useState([]);\n    const [todoList, SetTodoList] = useState([]);\n    const [QENT, SetQENT] = useState([]);\n    const [FlagReg, SetFlagReg] = useState(Reg.FlagReg);\n    const [TRTMNTQ1, SetTRTMNTQ1] = useState([]);\n    const [UDORDER0, SetUDORDER0] = useState([]);\n    const [CASEIDSTATUS, SetCASEIDSTATUS] = useState(\"\");\n    const [Timer, SetTimer] = useState(0)\n\n    useEffect(() => {\n        const data = props.location.state.data\n        SetCASEIDSTATUS(data.PCASENO.toString());\n    })\n\n    useEffect(() => {\n        const TimerID = setInterval(() => {\n            SetTimer(Timer + 1)\n        }, 5000)\n        return () => clearInterval(TimerID);\n    }, [Timer])\n\n    useEffect(() => {\n        const data = props.location.state.data\n        const hisid = data.PHISTNUM.toString().trim()\n        // const caseid = data.PCASENO.toString().trim()\n        const time = moment(data.TRANSINDT.toString().trim(), 'YYYYMMDD').format(\"YYYY-MM-DD\")\n        ApiProvider.getStoredProcedureRESLAB0C(hisid, time)\n            .then(data => {\n                SetRESLAB0C(data.data)\n            })\n    }, [CASEIDSTATUS])\n\n    useEffect(() => {\n        const data = props.location.state.data\n        const hisid = data.PHISTNUM.toString().trim()\n        // const caseid = data.PCASENO.toString().trim()\n        const time = moment(data.TRANSINDT.toString().trim(), 'YYYYMMDD').format(\"YYYY-MM-DD\")\n        ApiProvider.getStoredProcedureRESLAB01(hisid, time)\n            .then(data => {\n                SetRESLAB01(data.data)\n            })\n    }, [CASEIDSTATUS])\n\n    useEffect(() => {\n        const data = props.location.state.data\n        const hisid = data.PHISTNUM.toString().trim()\n        // const caseid = data.PCASENO.toString().trim()\n        const time = moment(data.TRANSINDT.toString().trim(), 'YYYYMMDD').format(\"YYYY-MM-DD\")\n        ApiProvider.getStoredProcedureRESLAB02(hisid, time)\n            .then(data => {\n                SetRESLAB02(data.data)\n            })\n    }, [CASEIDSTATUS])\n\n\n\n    useEffect(() => {\n        const data = props.location.state.data\n        const hisid = data.PHISTNUM.toString().trim()\n        // const caseid = data.PCASENO.toString().trim()\n        const time = moment(data.TRANSINDT.toString().trim(), 'YYYYMMDD').format(\"YYYY-MM-DD\")\n        ApiProvider.getStoredProcedureRESDBGAS(hisid, time)\n            .then(data => {\n                SetRESDBGAS(data.data)\n            })\n    }, [CASEIDSTATUS])\n\n \n\n\n\n    useEffect(() => {\n        const data = props.location.state.data\n        const caseid = data.PCASENO.toString()\n        ApiProvider.getQENT(caseid)\n            .then(data => {\n                console.log(data.data)\n                const parsedata = Wardstate.XM2JSON(data.data)\n                SetQENT(parsedata)\n            })\n            .catch(err => {\n                console.log(\"Andy test getQENT NG \" + JSON.stringify(err));\n            });\n    }, [CASEIDSTATUS]);\n\n    useEffect(() => {\n        const data = props.location.state.data\n        // const hisid = \"TEST1234\"\n        const hisid = data.PHISTNUM.toString()\n        ApiProvider.getHisidwardvalue(hisid)\n            .then(data => {\n                console.log(data.data)\n\n                SetCenterMonitorValue(data.data[0]);\n            })\n            .catch(err => {\n                console.log(\"Andy test getHisidwardvalue NG \" + JSON.stringify(err));\n            });\n    }, [Timer]);\n\n\n    useEffect(() => {\n        const data = props.location.state.data\n        const hisid = data.PHISTNUM.toString()\n        const beforeOneDay = new Date().getTime() - (24 * 60 * 60 * 1000)\n\n        ApiProvider.getStoredProcedureRESSECT(hisid, 1, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                const ReportList = data.data\n                const mapList = ReportList.filter(function (value, index, array) {\n                    const DTstring = value.ORRCPDT.toString()\n                    const TMstring = value.ORRCPTM.toString()\n                    const time = DTstring + TMstring\n                    return moment(time, 'YYYY-MM-DDHH:mm:ss').valueOf() > beforeOneDay\n                })\n                SetReport(mapList.length)\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureRESSECT NG \" + JSON.stringify(err));\n            });\n    }, [CASEIDSTATUS]);\n\n    useEffect(() => {\n        const data = props.location.state.data\n        const hisid = data.PHISTNUM.toString()\n        const TRANSINDT = data.TRANSINDT\n\n        ApiProvider.getStoredProcedureORDLIST(hisid, moment(TRANSINDT, \"YYYYMMDD\").format('YYYY-MM-DD'), \"ALL\", \"DOC3924B\")\n            .then(data => {\n                const ORDERLIST = data.data\n                const ORDERLISTMAP = ORDERLIST.filter(function (element, index, arr) {\n                    return element.ORSTATUS === \"31\"\n                })\n                SetNonreport(ORDERLISTMAP.length)\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err));\n            });\n    }, [CASEIDSTATUS]);\n\n\n\n\n    useEffect(() => {\n        console.log(\"query schedule list\")\n\n        const data = props.location.state.data\n        const source = data\n        const PLOC = source.PLOC\n        const TRANSINID = source.TRANSINID.toString()\n\n        const now = new Date();\n        const todayBegin = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n        const startTime = todayBegin.toISOString().split(\".\")[0];\n        const endTime = new Date(todayBegin.getTime() + 24 * 60 * 60 * 1000).toISOString().split(\".\")[0];\n        ApiProvider.getOnePatientSchedule(TRANSINID, startTime, endTime)\n            .then(result => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(result.data));\n                SetScheduleList(result.data);\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }, [CASEIDSTATUS]);\n\n    useEffect(() => {\n        console.log(\"query todo list\")\n\n        const data = props.location.state.data\n        const source = data\n        const PLOC = source.PLOC\n        const TRANSINID = source.TRANSINID.toString()\n\n\n        ApiProvider.getOneTodo(TRANSINID, source.PCASENO.toString())\n            .then(result => {\n                console.log(\"getOneTodo OK \" + JSON.stringify(result.data));\n                SetTodoList(result.data);\n            })\n            .catch(err => {\n                console.log(\"getOneTodo NG \" + JSON.stringify(err));\n            });\n    }, [CASEIDSTATUS]);\n\n    function renderScheduleItem() {\n        if (scheduleList.length === 0) {\n            return (\n                <div>沒有排程</div>\n            )\n        } else {\n            return scheduleList.map((item, index) => {\n                if (item.type === \"排程\") {\n                    const rawDateStr = item.time;\n                    const time = moment(item.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n                    const localTime = moment.utc(time).toDate()\n                    const displayTimeStr = moment(localTime).format(\"MM/DD HH:mm\")\n                    return (\n                        <div key={index} style={{ height: \"50px\", display: 'grid', gridTemplateColumns: \"35% 65%\", borderBottomWidth: \"1px\", borderBottomColor: \"rgba(232, 232, 232, 1)\", borderBottomStyle: \"solid\" }}>\n                            <div style={{ fontSize: \"1rem\", display: \"flex\", paddingLeft: \"15px\", alignItems: \"center\" }}>{displayTimeStr}</div>\n                            <div style={{ fontSize: \"1rem\", display: \"flex\", paddingLeft: \"15px\", alignItems: \"center\" }}>{item.context}</div>\n                        </div>\n                    )\n                }\n            })\n        }\n    }\n    function renderTodoItem() {\n        if (todoList.length === 0) {\n            return (\n                <div>沒有待辦事項</div>\n            )\n        } else {\n            return todoList.map((item, index) => {\n                if (item.type === \"未完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={false}></Wardinfousercheckbox>)\n                } else if (item.type === \"已完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={true}></Wardinfousercheckbox>)\n                }\n\n            });\n        }\n    }\n\n\n\n \n\n    function valueFormat(value) {\n        if (value === \"\" || value === null || value === undefined) {\n            return \"--\"\n        }\n        return value.toString()\n    }\n    function valueBornWeight(value) {\n        if (value === \"\" || value === null || value === undefined || value === 0) {\n            return \"\"\n        }\n        return value.toString() + \"g → \"\n    }\n\n    function fixpatientDate(data) {\n        const transdata = {\n            'cause': '住院原因',\n            'car_pho': '主要照顧者電話',\n            'care': '主要照顧者',\n            'con_1': '聯絡人1',\n            'con_p11': '聯絡人1電話',\n            'con_2': '聯絡人2',\n            'con_p21': '聯絡人2電話',\n            'dvs': '住院時生命徵象',\n            'habit': '飲食狀況',\n            'oxy': '住院時氧和評估',\n            'h_val': '住院時頭圍',\n            'b_val': '住院時胸圍',\n            'tall': '住院時身高',\n            'weight': '住院時體重'\n        }\n\n        const patientDate = []\n\n        for (let index in transdata) {\n            if (data[index] !== \"\") {\n                patientDate.push([transdata[index], data[index]])\n            }\n        }\n\n        return patientDate\n    }\n\n    const data = props.location.state.data\n    const source = data\n    const Birthday = source.PBIRHDT\n    const QTWER = Wardstate.XM2JSON(source.QTWPER)\n    const QMNC = Wardstate.XM2JSON(source.QMNC)\n    const ListWeight = Wardstate.WeightList(QTWER)\n    const BornWeight = Wardstate.BornWeight(QTWER, Birthday)\n    const Weight = Wardstate.NewestWeight(QTWER)\n    const BornWeeks = QMNC.weeks\n    const BornDays = QMNC.days\n    const TRANSINID = source.TRANSINID\n    const DOCLIST = source.PDOCNEW\n    const MainDoc = Wardstate.Doc(DOCLIST, \"B\")\n    const LiveDoc = Wardstate.Doc(DOCLIST, \"D\")\n    const MainNur = Wardstate.Doc(DOCLIST, \"N\")\n    const ICUMainDoc = Wardstate.Doc(DOCLIST, \"U\")\n\n    // const PBASINFO = data.PBASINFO\n    const caseinfo = {\n        \"HISID\": source.PHISTNUM.toString(),\n        \"CASEID\": source.PCASENO.toString(),\n        \"WEEK_BORN\": BornWeeks,\n        \"DAY_BORN\": BornDays,\n        \"TRANSINID\": TRANSINID,\n        \"TRANSINDT\": TRANSINID,\n        \"WEIGHT\": QTWER,\n        \"PBASINGNINFO\": source\n    }\n\n    function RenderInfo() {\n        if (QENT.length === 0) {\n            return null\n        }\n        return (\n            <t3 className='wardblacktoindex' onClick={() => setVisible(true)}>查看病人基本資料</t3>\n        );\n    }\n    const grewinfo = {\n        \"WEEK_BORN\": BornWeeks,\n        \"DAY_BORN\": BornDays,\n        \"BIRTHDAY\": Birthday\n    }\n    const patientDetail = fixpatientDate(QENT)\n    return (\n        <div className='wardinfouserlayout'>\n            <Modal\n                width={800}\n                title=\"病人基本資料\"\n                visible={Visible}\n                onOk={() => setVisible(false)}\n                onCancel={() => setVisible(false)}\n                footer={null}>\n                <Patientinfo patientDetail={patientDetail}></Patientinfo>\n            </Modal>\n            <div className='wardinfopatient'>\n                <div style={{ height: '50px', display: 'grid', gridTemplateColumns: \"1fr 1fr 1fr\" }}>\n                    <Link to=\"/nicu/ward/wardindex\" style={{ alignItems: \"center\", display: \"flex\" }}>\n                        <t2 className='wardblacktoindex'>&larr;返回總覽</t2>\n                    </Link>\n                    <centerstyle>\n                        <t1>病人資訊摘要</t1>\n                    </centerstyle>\n                </div>\n                <div style={{ height: \"50px\" }}>\n                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <t2>床號:{Number(source.HBEDNO)},{source.PNAMEC.toString().trim()},{gender(source.PSEX)},{moment(Birthday, \"YYYYMMDD\").format(\"YYYY/MM/DD\")},{source.PHISTNUM.toString().trim()}</t2>\n                        <Wardcarstatus source={false} PCASENO={source.PCASENO} PHISTNUM={source.PHISTNUM}></Wardcarstatus>\n                    </div>\n                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                            <t2 style={{ marginRight: \"16px\" }}>[{valueFormat(BornWeeks)}+{valueFormat(BornDays)}]&rarr;{pregancyweeksanddays(BornWeeks, BornDays, moment(Birthday, 'YYYYMMDD').format('YYYY/MM/DD'))}</t2>\n                            <t4>{valueBornWeight(BornWeight)}{valueFormat(Weight)}g</t4>\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", width: \"70px\" }}>\n                                <img src={fileLogo} alt='fileLogo'></img>\n                                <t4>{Report}</t4>\n                                <img src={file2Logo} alt='file2Logo'></img>\n                                <t4>{Nonreport}</t4>\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,auto)\", gridColumnGap: \"10px\" }}>\n                            <t3>主治醫師 {MainDoc}</t3>\n                            <t3>加護主治醫師 {ICUMainDoc}</t3>\n                            <t3>住院醫師 {LiveDoc}</t3>\n                            <t3>專科護理師 {MainNur}</t3>\n                            {RenderInfo()}\n                        </div>\n                    </div>\n                </div>\n                <div className='wardinfousercontent'>\n                    <div style={{ padding: \"10px 15px\" }}>\n                        <WardChart HISID={source.PHISTNUM} CMvalue={CenterMonitorValue}></WardChart>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\" }}>\n                        <div style={{ borderRadius: \"4px\" }}>\n                            <div style={{ backgroundColor: \"#cccccc\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"50px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2>檢驗項目</t2>\n                            </div>\n                            <Labviewlayout Source={\"Wardview\"} PickerDate={moment(moment().format('YYYYMMDD'), 'YYYYMMDD').valueOf()} RESLAB01={RESLAB01} RESLAB02={RESLAB02} RESDBGAS={RESDBGAS} RESLAB0C={RESLAB0C} RESDGLU1={RESDGLU1} RESSECT={RESSECT}></Labviewlayout>\n                        </div>\n                        <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\" }}>\n                            <Wardgrewchart grewinfo={grewinfo} Data={source} WeightList={ListWeight}></Wardgrewchart>\n                        </div>\n                    </div>\n                    <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\", marginTop: \"10px\" }}>\n                        {<Notice caseinfo={caseinfo} disableEdit={true}></Notice>}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\", marginTop: \"10px\" }}>\n                        <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\" }}>\n                            <div style={{ backgroundColor: \"#cccccc\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"50px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2>排程</t2>\n                            </div>\n                            <div style={{ maxHeight: \"200px\", overflow: 'auto', minHeight: \"50px\" }}>\n                                {renderScheduleItem()}\n                            </div>\n                        </div>\n                        <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\" }}>\n                            <div style={{ backgroundColor: \"#cccccc\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"50px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2>待辦事項</t2>\n                            </div>\n                            <div style={{ maxHeight: \"200px\", overflow: 'auto', minHeight: \"50px\" }}>\n                                {renderTodoItem()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n} \n","import React, { Component } from 'react';\nimport * as antswitch from 'antd';\nimport Wardcarddetail from '../Wardcard/Wardcarddetail';\nimport Unpreviewwardcarddetail from '../Wardcard/UnpreviewWardCardDetail'\nimport Wardinfoindex from '../Wardinfoindex'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport './Bedview.scss'\nimport moment from 'moment';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport * as WardinfouserK from '../Wardinfouser-k'\n\n\nclass Bedview extends Component {\n    _isMounted = false;\n    state = {\n        index: true,\n        previewmode: false,\n        simplemode: true,\n        SelectHISID: null,\n        source: []\n    };\n    componentDidMount() {\n        ApiProvider.getTableHBED()\n            .then(data => {\n                this.setState({\n                    source: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n    }\n\n    ClickSelect = (hisid) => {\n        console.log(hisid)\n        this.setState({\n            SelectHISID: hisid\n        })\n    }\n\n    onWardcardDisplay() {\n        //WardCard Border\n        function ChangeColor(selectID, cardID) {\n            if (selectID === cardID) {\n                return \"1px solid rgba(245, 166, 35, 1)\"\n            }\n            return \"1px solid rgba(59, 151, 225, 1)\"\n        }\n        const simple_style = { display: \"grid\", gridTemplateColumns: \"322px 1fr\", gridGap: \"5px\", marginTop: \"5px\" }\n        const Unsimple_style = { display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr 1fr\", gridTemplateRows: \"1fr 1fr 1fr\", gridGap: \"5px\", marginTop: \"5px\" }\n        const source = this.state.source;\n        const wardcarddetaillist = []\n        //simplemode true:病人摘要檢視(開) false:病人摘要檢視(關)\n        //previewmode true:床頭卡顯示(繁) flase:床頭卡顯示(簡) \n        if (this.state.simplemode) {\n            for (let index = 0; index < source.length; index++) {\n                const element = source[index]\n                const string = \"/nicu/ward/wardinfo/\" + element.HBEDNO\n                if (element.PHISTNUM.toString().trim() !== \"\") {\n                    wardcarddetaillist.push(\n                        <Link to={{ pathname: string, state: { data: element } }} style={{ border: ChangeColor(this.state.SelectHISID, element.PHISTNUM), borderRadius: \"4px\" }} onClick={() => this.ClickSelect(element.PHISTNUM)}>\n                            <Wardcarddetail key={index} data={element} previewmode={this.state.previewmode} hbedlist={source} />\n                        </Link>\n                    )\n                }\n            }\n            return (\n                <div style={this.state.simplemode ? simple_style : Unsimple_style}>\n                    <div className='wardcardcontent'>\n                        {wardcarddetaillist}\n                    </div>\n                    <Switch>\n                        <Route path={`${this.props.match.path}/wardindex`} component={Wardinfoindex} />\n                        <Route path={`${this.props.match.path}/wardinfo`} component={WardinfouserK.Wardinfouser} />\n                    </Switch>\n                </div>\n            );\n        }\n        else {\n            for (let index = 1; index < 15; index++) {\n                const element = source.filter(function (value, i) {\n                    return Number(value.HBEDNO) === index\n                })\n                if (index === 4 || index === 13) {\n                    continue\n                }\n                if (element.length === 0) {\n                    wardcarddetaillist.push(\n                        <div style={{ border: \"1px solid rgba(59, 151, 225, 1)\" }}>\n                            <Unpreviewwardcarddetail bednumber={index} key={index} previewmode={this.state.previewmode} />\n                        </div>\n                    )\n                }\n                else {\n                    console.log(element)\n                    if (element[0].PHISTNUM.toString().trim() === \"\") {\n                        wardcarddetaillist.push(\n                            <div style={{ border: \"1px solid rgba(59, 151, 225, 1)\" }}>\n                                <Unpreviewwardcarddetail bednumber={index} key={index} previewmode={this.state.previewmode} />\n                            </div>\n                        )\n                    }\n                    else {\n                        console.log(element)\n                        wardcarddetaillist.push(\n                            <div style={{ border: \"1px solid rgba(59, 151, 225, 1)\" }}>\n                                <Wardcarddetail key={index} data={element[0]} previewmode={this.state.previewmode} hbedlist={source} />\n                            </div>\n                        )\n                    }\n                }\n            }\n            return (\n                <div style={this.state.simplemode ? simple_style : Unsimple_style}>\n                    {wardcarddetaillist}\n                </div>\n            );\n        }\n    }\n\n\n\n    render() {\n        function switch_titile_string(hisid, source) {\n            function addzero(value) {\n                if (value < 10) {\n                    return \"0\" + value\n                }\n                else return value\n            }\n            if (hisid === null) {\n                return \"病房資訊摘要\"\n            }\n            else {\n                const filterdata = source.filter(function (item, index, array) {\n                    return item.PHISTNUM === HISID;\n                });\n                const HBEDNUMBER = addzero(parseInt(filterdata[0].HBEDNO))\n                return \"床號\" + HBEDNUMBER + \"病人資訊摘要\"\n            }\n        }\n        const source = this.state.source\n        const HISID = this.state.SelectHISID\n        const title = switch_titile_string(HISID, source)\n        const WardCard = this.onWardcardDisplay()\n\n        return (\n            <div>\n                <div style={{ height: \"40px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2>住院中病人資訊 > {title}</t2>\n                </div>\n                <div style={{ height: \"25px\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"10px\" }}>\n                        <antswitch.Switch checkedChildren=\"床頭卡顯示(繁)\" unCheckedChildren=\"床頭卡顯示(簡)\" defaultChecked={this.state.previewmode} onChange={(checked) => { this.setState({ previewmode: checked }) }} />\n                        <antswitch.Switch checkedChildren=\"病人摘要檢視(開)\" unCheckedChildren=\"病人摘要檢視(關)\" defaultChecked={this.state.simplemode} onChange={(checked) => { this.setState({ simplemode: checked }) }} />\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto auto\", gridColumnGap: \"10px\" }}>\n                        <t3>資料更新時間</t3>\n                        <t3>{moment().format('YYYY/MM/DD HH:mm:ss')}</t3>\n                    </div>\n                </div>\n                {WardCard}\n            </div>\n        );\n    }\n}\n\nexport default Bedview;","import React, { Component } from 'react';\nimport { Icon, Upload, Table, Input, DatePicker, Button, Switch } from 'antd';\nimport { Link } from 'react-router-dom';\nimport * as ApiProvider from '../API/ApiProvider';\nimport moment from 'moment';\n\nclass Historyview extends Component {\n    state = {\n        MouseClick: 0,\n        allPatientDisplayData: [],\n        allPatientUnset: [],\n        allPatientSet: [],\n        selectedRowsArray: [],\n        hospitalindex: '',\n        selectedFile: null,\n        fileList: [],\n        uploading: false,\n        name: '',\n        hisid: '',\n        doctor: '',\n        transOuttime: ''\n    }\n\n    componentDidMount() {\n        this.onChangeName = this.onChangeName.bind(this)\n        this.onChangeHisid = this.onChangeHisid.bind(this)\n        //this.onChangeDoctor = this.onChangeDoctor.bind(this)\n        this.onClickSearch = this.onClickSearch.bind(this)\n        this.onChangeDate = this.onChangeDate.bind(this)\n        console.log(\"Historyview componentDidMount\")\n        ApiProvider.getAllPatient()\n            .then(result => {\n                console.log(\"getAllPatient OK \" + JSON.stringify(result));\n                const setedUser = result.data.filter(item => item.transouttime !== \"unset\");\n                const unsetUser = result.data.filter(item => item.transouttime === \"unset\");\n                this.setState({\n                    allPatientDisplayData: setedUser,\n                    allPatientUnset: unsetUser,\n                    allPatientSet: setedUser\n                });\n            })\n            .catch(err => {\n                console.log(\"getAllPatient NG \" + JSON.stringify(err));\n            });\n    }\n\n    MouseClickTable(record) {\n        //console.log(this.state.MouseClick)\n        this.setState({\n            MouseClick: record\n        })\n    }\n\n    EditStyle(HISID, CASEID, TRANSINID, key) {\n        if (key === this.state.MouseClick) {\n            return (\n                <Link to={{ pathname: \"/nicu/patient/\" + HISID, state: { \"source\": [], \"HISID\": HISID, \"CASEID\": CASEID, \"BEDNUMBER\": 0, \"TYPE\": false, \"TRANSINID\": TRANSINID } }} style={{ height: \"40px\", width: \"100px\", borderRadius: \"4px\" }}>詳細</Link>\n            );\n        }\n        else return null\n    }\n\n    genderswitch(key) {\n        if (key === \"M\") {\n            return '男'\n        }\n        else {\n            return '女'\n        }\n    }\n\n    bornweeks(birthday) {\n        //console.log(Math.floor(birthday / 7))\n        //console.log(birthday % 7)\n        const weeks = Math.floor(birthday / 7)\n        const days = birthday % 7\n        if (days === 0) {\n            return weeks + '週歲'\n        }\n        else return weeks + '週' + days + '天'\n    }\n\n    exportClick() {\n        this.state.selectedRowsArray.map((data, index) => {\n            ApiProvider.exportJson(data.hospitalindex)\n                .then(result => {\n                    ApiProvider.downloadFile(result.data.filename)\n                        .then(resultD => {\n                            const url = window.URL.createObjectURL(new Blob([JSON.stringify(resultD.data)]));\n                            const link = document.createElement('a');\n                            link.href = url;\n                            link.setAttribute('download', result.data.filename);\n                            document.body.appendChild(link);\n                            link.click();\n                        }).catch(err => { })\n                })\n                .catch(err => { })\n        })\n    }\n\n    handleUpload = () => {\n        const { fileList } = this.state\n        const formData = new FormData()\n        fileList.forEach(file => {\n            formData.append('file', file)\n        })\n\n        this.setState({\n            uploading: true,\n        })\n\n        ApiProvider.uploadFile(formData)\n            .then(res => {\n                ApiProvider.importJson(res.data)\n                    .then(result => {\n                        ApiProvider.getAllPatient()\n                            .then(result => {\n                                const setedUser = result.data.filter(item => item.transouttime !== \"unset\");\n                                const unsetUser = result.data.filter(item => item.transouttime === \"unset\");\n                                this.setState({\n                                    allPatientDisplayData: setedUser,\n                                    allPatientUnset: unsetUser,\n                                    allPatientSet: setedUser\n                                });\n                            })\n                            .catch(err => {\n                                console.log(\"getAllPatient NG \" + JSON.stringify(err));\n                            });\n                    })\n                    .catch(err => { })\n            })\n            .catch(err => { })\n    }\n\n    deleteHistoryUser() {\n        this.state.selectedRowsArray.map((data, index) => {\n            ApiProvider.deletePatient(data.hospitalindex, data.hospitalnumber, data.id)\n                .then(res => {\n                    ApiProvider.getAllPatient()\n                        .then(result => {\n                            const setedUser = result.data.filter(item => item.transouttime !== \"unset\");\n                            const unsetUser = result.data.filter(item => item.transouttime === \"unset\");\n                            this.setState({\n                                allPatientDisplayData: setedUser,\n                                allPatientUnset: unsetUser,\n                                allPatientSet: setedUser\n                            });\n                        })\n                        .catch(err => {\n                            console.log(\"getAllPatient NG \" + JSON.stringify(err));\n                        });\n                })\n                .catch(err => { })\n        })\n    }\n\n    onChangeName(event) {\n        this.setState({ name: event.target.value })\n    }\n    onChangeHisid(event) {\n        this.setState({ hisid: event.target.value })\n    }\n    //onChangeDoctor(event) {\n    //this.setState({ doctor: event.target.value })\n    //}\n    onClickSearch() {\n        // ApiProvider.getAllPatient()\n        //     .then(result => {\n        //         const setedUser = result.data.filter(item => item.transouttime !== \"unset\" && item.hisid === this.state.hisid && item.pnamec === this.state.name);\n        //         const unsetUser = result.data.filter(item => item.transouttime === \"unset\" && item.hisid === this.state.hisid && item.pnamec === this.state.name);\n        //         console.log(this.state.transOuttime)\n        //         this.setState({\n        //             allPatientDisplayData: setedUser,\n        //             allPatientUnset: unsetUser,\n        //             allPatientSet: setedUser\n        //         });\n        //     })\n        //     .catch(err => {\n        //         console.log(\"getAllPatient NG \" + JSON.stringify(err));\n        //     });\n    }\n    onChangeDate(date, dateString) {\n        this.setState({ transOuttime: dateString })\n    }\n\n    Searchbar() {\n        const InputGroup = Input.Group;\n        return (\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <div style={{ fontSize: '16px' }}>\n                        個案姓名:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"輸入個案姓名\" onChange={this.onChangeName} value={this.state.name}></Input>\n                    </div>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        轉出時間:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <InputGroup compact>\n                            <DatePicker placeholder=\"選擇轉出時間\" onChange={this.onChangeDate} />\n                        </InputGroup>\n                    </div>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        病歷號碼:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"輸入病歷號碼\" onChange={this.onChangeHisid} value={this.state.hisid}></Input>\n                    </div>\n                </div>\n                {/*<div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        主治醫生:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"選擇主治醫師\" onChange={this.onChangeDoctor} value={this.state.doctor}></Input>\n                    </div>\n        </div>*/}\n                {/* <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <Button shape=\"circle\" icon=\"search\" onClick={this.onClickSearch} />\n                </div> */}\n            </div>\n        );\n    }\n\n    handleDisplaySwitchChange(checked, event) {\n        this.setState({\n            allPatientDisplayData: checked ? this.state.allPatientSet : this.state.allPatientUnset\n        })\n    }\n\n\n    render() {\n        // rowSelection object indicates the need for row selection\n        const rowSelection = {\n            onChange: (selectedRowKeys, selectedRows) => {\n                //console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows)\n                this.setState({ selectedRowsArray: selectedRows })\n            },\n            getCheckboxProps: record => ({\n                disabled: record.name === 'Disabled User', // Column configuration not to be checked\n                name: record.name,\n            }),\n        };\n        const columns = [\n            {\n                title: '床號',\n                dataIndex: 'bednumber',\n                key: 'bednumber',\n                width: \"5%\"\n            },\n            {\n                title: '病歷號碼',\n                dataIndex: 'id',\n                key: 'id',\n                width: \"10%\"\n            },\n            {\n                title: '個案名稱',\n                dataIndex: 'name',\n                key: 'name',\n                width: \"10%\"\n            },\n            {\n                title: '性別',\n                dataIndex: 'gender',\n                key: 'gender',\n                width: \"5%\"\n            },\n            {\n                title: '體重',\n                dataIndex: 'weight',\n                key: 'weight',\n                width: \"5%\"\n            },\n            {\n                title: '出生週期',\n                dataIndex: 'birweek',\n                key: 'birweek',\n                width: \"10%\"\n            },\n            {\n                title: '轉入時年齡',\n                dataIndex: 'transage',\n                key: 'transage',\n                width: \"10%\"\n            },\n            {\n                title: '住院編號',\n                dataIndex: 'hospitalnumber',\n                key: 'hospitalnumber',\n                width: \"10%\"\n            },\n            {\n                title: '住院序號',\n                dataIndex: 'hospitalindex',\n                key: 'hospitalindex',\n                width: \"10%\"\n            },\n            {\n                title: '轉出ICU時間',\n                dataIndex: 'transicutime',\n                key: 'transicutime',\n                width: \"10%\"\n            },\n            //{\n            //title: '主治醫師',\n            //dataIndex: 'maindoc',\n            //key: 'maindoc',\n            //width: \"10%\"\n            //},\n            {\n                dataIndex: 'clickstate',\n                key: 'clickstate',\n                width: \"5%\"\n            }\n        ];\n        function search(data, searchName) {\n            if (searchName === \"\" || searchName === undefined || searchName === null) {\n                return data\n            }\n            const filterData = data.filter(function (item, index, arr) {\n                console.log(item)\n                const fn = item.pnamec.toString().trim()\n                return fn.indexOf(searchName) >= 0\n            })\n            return filterData\n        }\n        function searchTime(data, searchTime) {\n            if (searchTime === \"\" || searchTime === undefined || searchTime === null) {\n                return data\n            }\n            const filterData = data.filter(function (item, index, arr) {\n                console.log(item)\n                const fn = moment(item.transouttime.toString().trim(), \"YYYYMMDD\").valueOf()\n                const ft = moment(searchTime, \"YYYY-MM-DD\").valueOf()\n                return fn === ft\n            })\n            return filterData\n        }\n\n        function searchNO(data, searchNO) {\n            if (searchNO === \"\" || searchNO === undefined || searchNO === null) {\n                return data\n            }\n            const filterData = data.filter(function (item, index, arr) {\n                console.log(item)\n                const HID = item.hisid.toString().trim()\n                return HID === searchNO\n            })\n            return filterData\n        }\n        const rowData = this.state.allPatientDisplayData\n        const d = search(rowData, this.state.name)\n        const f = searchTime(d, this.state.transOuttime)\n        const H = searchNO(f, this.state.hisid)\n        const data = H.map((item, index) => {\n            return {\n                key: index,\n                bednumber: 'B' + index,\n                id: item.hisid,\n                name: item.pnamec,\n                gender: this.genderswitch(item.psex),\n                weight: 2000,\n                birweek: this.bornweeks(27),\n                transage: this.bornweeks(14),\n                hospitalnumber: item.caseid,\n                hospitalindex: item.transinid,\n                transicutime: item.transouttime,\n                maindoc: \"羅宇成\",\n                clickstate: this.EditStyle(item.hisid, item.caseid, item.transinid, index)\n            }\n        });\n\n        const { uploading, fileList } = this.state;\n        const props = {\n            onRemove: file => {\n                this.setState(state => {\n                    const index = state.fileList.indexOf(file);\n                    const newFileList = state.fileList.slice();\n                    newFileList.splice(index, 1);\n                    return {\n                        fileList: newFileList,\n                    };\n                });\n            },\n            beforeUpload: file => {\n                this.setState(state => ({\n                    fileList: [...state.fileList, file],\n                }));\n                return false;\n            },\n            fileList,\n            showUploadList: false\n        };\n        const handleDisplaySwitchChange = this.handleDisplaySwitchChange.bind(this);\n\n        return (\n            <div style={{ paddingLeft: \"24px\", paddingRight: \"24px\" }}>\n                <div style={{ fontSize: \"22px\", height: '50px', lineHeight: \"50px\" }}>\n                    歷史病歷管理\n                </div>\n                <Switch checkedChildren=\"Set\" unCheckedChildren=\"Unset\" defaultChecked onChange={handleDisplaySwitchChange} />\n                <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\", height: '50px', gridColumnGap: \"10px\" }}>\n                    {this.Searchbar()}\n                    <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gridGap: \"10px\" }}>\n                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                            <Upload {...props}>\n                                <Button>\n                                    <Icon type=\"upload\" /> 選擇檔案\n                                </Button>\n                            </Upload>\n                            <Button\n                                onClick={this.handleUpload.bind(this)}\n                                disabled={fileList.length === 0}\n                                style={{ width: \"100%\" }}\n                            >\n                                匯入\n                            </Button>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                            <Button onClick={this.exportClick.bind(this)} style={{ width: \"100%\" }}>匯出</Button>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                            <Button onClick={this.deleteHistoryUser.bind(this)} style={{ width: \"100%\" }}>刪除</Button>\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <Table rowSelection={rowSelection} columns={columns} dataSource={data} onRow={record => {\n                        return {\n                            onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                            onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                        };\n                    }} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Historyview;","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport './Crosssectionvitalsignchart.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport X2JS from 'x2js';\n\nclass Crosssectionvitalsignchart extends Component {\n    state = {\n        change: false,\n        sourcedata: [],\n        prepickerdate: null,\n        presource: null,\n        preinterval: null\n    }\n\n    centermonitorApiDataGet() {\n        function formatTimer(interval, pickerdate) {\n            const endTimeStamp = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    start: moment(endTimeStamp - (24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                    interval: 0\n                }\n            }\n            if (interval === 1) {\n                return {\n                    start: moment(endTimeStamp - (3 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                    interval: 1\n                }\n            }\n            if (interval === 2) {\n                return {\n                    start: moment(endTimeStamp - (7 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                    interval: 2\n                }\n            }\n            return {\n                start: moment(endTimeStamp - (14 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                interval: 3\n            }\n        }\n        const { type, interval, PickerDate, HID, source, CID, svg_id } = this.props\n        const PHID = HID.toString().trim()\n        const PCID = CID.toString().trim()\n        // console.log(interval, PickerDate)\n        const optionvalue = formatTimer(interval, PickerDate)\n        if (source === \"CM\") {\n            if (type === \"hr\" || type === \"rr\" || type === \"spo2\") {\n                ApiProvider.getPatientwardvalueBoxPlot(PHID, optionvalue.start, optionvalue.end, type, optionvalue.interval)\n                    .then(data => {\n                        console.log(data.data)\n                        d3.select(\"#\" + svg_id).remove()\n                        this.drawChart(data.data);\n                    })\n                    .catch(err => { console.log(err) })\n            }\n            if (type === \"abp\" || type === \"nbp\") {\n                ApiProvider.getVitalSignData(PHID, optionvalue.start, optionvalue.end, type)\n                    .then(data => {\n                        console.log(data.data)\n                        d3.select(\"#\" + svg_id).remove()\n                        this.drawChart(data.data);\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    })\n            }\n            if (type === \"bt\") {\n                d3.select(\"#\" + svg_id).remove()\n                this.drawChart([]);\n            }\n        }\n        if (source === \"NIS\") {\n            const xm2 = new X2JS()\n            const st = moment(optionvalue.start, \"YYYYMMDDHHmmss\").format(\"YYYYMMDDHHmm\")\n            const et = moment(optionvalue.end, \"YYYYMMDDHHmmss\").format(\"YYYYMMDDHHmm\")\n            const QDVS = ApiProvider.getQDVS(PCID, st, et)\n                .then(data => {\n                    return xm2.xml2js(data.data).outmsg.resconts.rescont\n                })\n                .catch(err => { console.log(err) })\n\n            const QOXY = ApiProvider.getQOXY(PCID, st, et)\n                .then(data => {\n                    return xm2.xml2js(data.data).outmsg.resconts.rescont\n\n                })\n                .catch(err => { console.log(err) })\n            Promise.all([QDVS, QOXY]).then(result => {\n                function FormatNISData(QDVS, QOXY, type) {\n                    var HRNISLIST = []\n                    var RRNISLIST = []\n                    var SBPNISLIST = []\n                    var DBPNISLIST = []\n                    var BTNISLIST = []\n                    var Spo2NISLIST = []\n                    if (Array.isArray(QDVS)) {\n                        for (let index = 0; index < QDVS.length; index++) {\n                            const element = QDVS[index];\n                            const hr = element.pluse\n                            const rr = element.breath\n                            const SBP = element.systolic\n                            const DBP = element.diastolic\n                            const BT = element.temperature\n                            const time = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                            HRNISLIST.push({\n                                Data: hr,\n                                Time: time\n                            })\n                            RRNISLIST.push({\n                                Data: rr,\n                                Time: time\n                            })\n                            SBPNISLIST.push({\n                                Data: SBP,\n                                Time: time\n                            })\n                            DBPNISLIST.push({\n                                Data: DBP,\n                                Time: time\n                            })\n                            BTNISLIST.push({\n                                Data: BT,\n                                Time: time\n                            })\n                        }\n                    }\n                    if (Array.isArray(QOXY)) {\n                        for (let index = 0; index < QOXY.length; index++) {\n                            const element = QOXY[index];\n                            const spo2 = element.concen\n                            const time = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                            Spo2NISLIST.push({\n                                Data: spo2,\n                                Time: time\n\n                            })\n                        }\n                    }\n                    console.log(Spo2NISLIST)\n                    if (type === \"hr\") { return HRNISLIST }\n                    if (type === \"rr\") { return RRNISLIST }\n                    if (type === \"spo2\") { return Spo2NISLIST }\n                    if (type === \"abp\") { return [SBPNISLIST, DBPNISLIST] }\n                    if (type === \"bt\") { return BTNISLIST }\n                    return []\n                }\n                // console.log(FormatNISData(result[0], result[1], type))\n                d3.select(\"#\" + svg_id).remove()\n                this.drawChart(FormatNISData(result[0], result[1], type))\n            })\n        }\n    }\n    componentDidUpdate() {\n\n        const { svg_id, interval, PickerDate, HID, source, CID } = this.props\n        const PrePickerDate = this.state.prepickerdate\n        if (PrePickerDate !== PickerDate) {\n            this.setState({ prepickerdate: this.props.PickerDate })\n            this.centermonitorApiDataGet()\n        }\n        const Presource = this.state.presource\n        if (Presource !== source) {\n            this.setState({ presource: source })\n            this.centermonitorApiDataGet()\n        }\n        const Preinterval = this.state.preinterval\n        if (interval !== Preinterval) {\n            this.setState({ preinterval: interval })\n            this.centermonitorApiDataGet()\n        }\n        const PreHID = this.state.prehid\n        if (HID !== PreHID) {\n            this.setState({ prehid: HID })\n            this.centermonitorApiDataGet()\n        }\n    }\n\n    componentDidMount() {\n\n        this.setState({\n            prepickerdate: this.props.PickerDate,\n            presource: this.props.source,\n            preinterval: this.props.interval,\n            prehid: this.props.prehid\n        })\n        this.centermonitorApiDataGet()\n\n    }\n    drawChart(sourcedata) {\n        function formatxArray(startTime, interval) {\n            var xAxisarray = []\n            if (interval === 0) {\n                for (let index = 0; index < 25; index++) {\n                    if (index % 4 === 0) {\n                        xAxisarray.push(startTime + (index * 60 * 60 * 1000))\n                    }\n                }\n            }\n            else if (interval === 1) {\n                for (let index = 0; index < 19; index++) {\n                    if (index % 2 === 0) {\n                        xAxisarray.push(startTime + (index * 4 * 60 * 60 * 1000))\n                    }\n                }\n            }\n            else if (interval === 2) {\n                for (let index = 0; index < 21; index++) {\n                    xAxisarray.push(startTime + (index * 60 * 60 * 1000 * 8))\n                }\n            }\n            else {\n                for (let index = 0; index < 14; index++) {\n                    xAxisarray.push(startTime + (index * 60 * 60 * 1000 * 24))\n                }\n            }\n            return xAxisarray\n        }\n\n        function formatbotaxis(time, interval) {\n            var xAxisarray = []\n            if (interval === 0) {\n                xAxisarray.push(startTime + (17 * 60 * 60 * 1000))\n            }\n            else if (interval === 1) {\n                for (let index = 0; index < 3; index++) {\n                    xAxisarray.push(startTime + (17 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000))\n                }\n            }\n            else if (interval === 2) {\n                for (let index = 0; index < 21; index++) {\n                    xAxisarray.push(time + (index * 60 * 60 * 1000 * 8))\n                }\n            }\n            else {\n                for (let index = 0; index < 14; index++) {\n                    xAxisarray.push(time + (index * 60 * 60 * 1000 * 24))\n                }\n            }\n            return xAxisarray\n        }\n\n        var formatHour = d3.timeFormat(\"%H\")\n\n        var formatDay = d3.timeFormat(\"%b %d\")\n        function multiFormat(date) {\n            return formatHour(date)\n        }\n\n        function timeBotmultiFormat(date) {\n            return formatDay(date)\n        }\n        //vitaldays true:threeday\n        const {\n            id_key,\n            svg_id,\n            startTime,\n            endTime,\n            height,\n            width,\n            interval, //0:1天 1:3天 2:1週 3:2週 \n            axisBot,\n            axisTop,\n            circlrcolor,\n            max,\n            min,\n            upper,\n            lower,\n            source,\n            type\n        } = this.props\n\n        // const width = window.screen.availWidth * 0.25, height = 100, viewwidth = width - 50, rect_width = width / 46\n        const viewwidth = width - 50\n        // const EndTime = formatendtime(defaultdate)\n        // var vital_interval = formatintervaldays(EndTime, vitaldays)\n\n        var y = d3.scaleLinear()\n            .domain([min, max])\n            .range([height, 0])\n\n        var x = d3.scaleLinear()\n            .domain([startTime, endTime])\n            .range([0, viewwidth - 1])\n\n\n        var yAxis = d3.axisLeft(y)\n            .tickValues([min, max])\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(15);\n\n\n        const xAxisvalue = formatxArray(startTime, interval)\n        const xAxisbotvalue = formatbotaxis(startTime, interval)\n\n        var xAxis = d3.axisTop(x)\n            .tickValues(xAxisvalue)\n            .tickSize(0, 0)\n            .tickPadding(5)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n        var xAxisbot = d3.axisBottom(x)\n            .tickValues(xAxisbotvalue)\n            .tickSize(0, 0)\n            .tickPadding(height + 10)\n            .tickFormat(function (d) { return moment(d).format(\"MM/DD\") });\n\n        var svg\n        if (axisTop) {\n            svg = d3.select(\"#\" + id_key)\n                .append(\"svg\")\n                .attr(\"id\", svg_id)\n                .style(\"width\", width + 10)\n                .style(\"height\", height + 25)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + 50 + \",\" + 20 + \")\");\n        }\n        else {\n            if (axisBot) {\n                svg = d3.select(\"#\" + id_key)\n                    .append(\"svg\")\n                    .attr(\"id\", svg_id)\n                    .style(\"width\", width)\n                    .style(\"height\", height + 25)\n                    .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + 50 + \",\" + 5 + \")\");\n            }\n            else {\n\n                svg = d3.select(\"#\" + id_key)\n                    .append(\"svg\")\n                    .attr(\"id\", svg_id)\n                    .style(\"width\", width)\n                    .style(\"height\", height + 10)\n                    .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + 50 + \",\" + 5 + \")\");\n            }\n        }\n\n        if (axisTop) {\n            svg.append(\"g\")\n                .call(xAxis)\n                .attr(\"class\", \"axis\");\n        }\n\n        if (axisBot) {\n            svg.append(\"g\")\n                .call(xAxisbot)\n                .attr(\"class\", \"axis\");\n\n        }\n\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n        //上下橫線\n        svg.append('line')\n            .attr('x1', x(startTime))\n            .attr('y1', y(max))\n            .attr('x2', x(endTime))\n            .attr('y2', y(max))\n            .style('stroke', 'rgba(220,220,220,1)')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n        svg.append('line')\n            .attr('x1', x(startTime))\n            .attr('y1', y(min))\n            .attr('x2', x(endTime))\n            .attr('y2', y(min))\n            .style('stroke', 'rgba(220,220,220,1)')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n\n        if (interval === 0) {\n            for (let index = 0; index < 25; index++) {\n                if (index % 8 === 0) {\n                    svg.append('line')\n                        .attr('x1', x(startTime + (index * 60 * 60 * 1000)))\n                        .attr('y1', 0)\n                        .attr('x2', x(startTime + (index * 60 * 60 * 1000)))\n                        .attr('y2', height)\n                        .style('stroke', 'black')\n                        .style('stroke-width', 2);\n                }\n                else {\n                    svg.append('line')\n                        .attr('x1', x(startTime + (index * 60 * 60 * 1000)))\n                        .attr('y1', 0)\n                        .attr('x2', x(startTime + (index * 60 * 60 * 1000)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(220,220,220,1)')\n                        .style('stroke-width', 1)\n                        .style('stroke-dasharray', 5.5);\n                }\n            }\n\n            drawshadow(startTime, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n\n        }\n        if (interval === 1) {\n            for (let index = 0; index < 19; index++) {\n                if (index % 2 === 0) {\n                    svg.append('line')\n                        .attr('x1', x(startTime + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y1', 0)\n                        .attr('x2', x(startTime + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y2', height)\n                        .style('stroke', 'black')\n                        .style('stroke-width', 2);\n                }\n                else {\n                    svg.append('line')\n                        .attr('x1', x(startTime + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y1', 0)\n                        .attr('x2', x(startTime + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(220,220,220,1)')\n                        .style('stroke-width', 1)\n                        .style('stroke-dasharray', 5.5);\n                }\n            }\n\n            drawshadow(startTime, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n        }\n        if (interval === 2) {\n            for (let index = 0; index < 22; index++) {\n                svg.append('line')\n                    .attr('x1', x(startTime + (index * 60 * 60 * 1000 * 8)))\n                    .attr('y1', 0)\n                    .attr('x2', x(startTime + (index * 60 * 60 * 1000 * 8)))\n                    .attr('y2', height)\n                    .style('stroke', 'black')\n                    .style('stroke-width', 1);\n            }\n\n            drawshadow(startTime, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n        }\n        if (interval === 3) {\n            for (let index = 0; index < 15; index++) {\n                svg.append('line')\n                    .attr('x1', x(startTime + (index * 60 * 60 * 1000 * 24)))\n                    .attr('y1', 0)\n                    .attr('x2', x(startTime + (index * 60 * 60 * 1000 * 24)))\n                    .attr('y2', height)\n                    .style('stroke', 'black')\n                    .style('stroke-width', 1);\n            }\n\n            drawshadow(startTime, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n        }\n\n        function formatBox(startTime, interval) {\n            function interFormat(startTime, interval) {\n                var TimeArray = []\n                for (let index = 0; index < interval; index++) {\n                    if (interval === 24) {\n                        const boxTime = startTime + (30 * 60 * 1000) + (index * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 18) {\n                        const boxTime = startTime + (2 * 60 * 60 * 1000) + (index * 4 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 21) {\n                        const boxTime = startTime + (4 * 60 * 60 * 1000) + (index * 8 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else {\n                        const boxTime = startTime + (12 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                }\n                return TimeArray\n            }\n            if (interval === 0) {\n                return interFormat(startTime, 24)\n            }\n            if (interval === 1) {\n                return interFormat(startTime, 18)\n            }\n            if (interval === 2) {\n                return interFormat(startTime, 21)\n            }\n            return interFormat(startTime, 14)\n        }\n        function formatBoxWidth(viewwidth, interval) {\n            if (interval === 0) {\n                return viewwidth / 24\n            }\n            if (interval === 1) {\n                return viewwidth / 18\n            }\n            if (interval === 2) {\n                return viewwidth / 21\n            }\n            return viewwidth / 14\n        }\n        function drawshadow(startTime, interval, lower, upper, type) {\n            const LimitBoxTimer = formatBox(startTime, interval)\n            for (let index = 0; index < LimitBoxTimer.length; index++) {\n                const boxwidth = formatBoxWidth(width, interval)\n                // console.log(boxwidth)\n                const element = LimitBoxTimer[index];\n                svg.append('line')\n                    .attr('x1', x(element))\n                    .attr('y1', y(lower))\n                    .attr('x2', x(element))\n                    .attr('y2', y(upper))\n                    .style('stroke', circlrcolor)\n                    .style('opacity', 0.7)\n                    .style('stroke-width', boxwidth)\n\n                if (type === \"nbp\" || type === \"abp\") {\n                    svg.append('line')\n                        .attr('x1', x(element))\n                        .attr('y1', y(35))\n                        .attr('x2', x(element))\n                        .attr('y2', y(55))\n                        .style('stroke', circlrcolor)\n                        .style('opacity', 0.3)\n                        .style('stroke-width', boxwidth)\n                }\n            }\n        }\n        function drawData(type, source, sourcedata, interval, boxwidth) {\n            function formatShift(interval) {\n                if (interval === 0) {\n                    return 30 * 60 * 1000\n                }\n                if (interval === 1) {\n                    return 2 * 60 * 60 * 1000\n                }\n                if (interval === 2) {\n                    return 4 * 60 * 60 * 1000\n                }\n                return 12 * 60 * 60 * 1000\n            }\n            // console.log(source)\n            if (source === \"CM\") {\n                if (type === \"hr\" || type === \"rr\" || type === \"spo2\") {\n                    for (let index = 0; index < sourcedata.length; index++) {\n                        const element = sourcedata[index];\n                        const q1 = element.Q1\n                        const q2 = element.Q2\n                        const q3 = element.Q3\n                        const q4 = element.Q4\n                        const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + formatShift(interval)\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(q1))\n                            .attr(\"y2\", y(q4))\n                            .attr(\"stroke\", circlrcolor)\n                            // .attr(\"stroke\", \"blcak\")\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q2) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg\n                            .selectAll(\"toto\")\n                            .data([q1, q4])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1);\n\n                    }\n                }\n                if (type === \"abp\" || type === \"nbp\") {\n                    for (let index = 0; index < sourcedata.length; index++) {\n                        const element = sourcedata[index];\n                        const Xtime = moment(element.Time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                        const SBP = element.SBP\n                        const DBP = element.DBP\n                        // console.log(SBP)\n                        if (SBP === 0 || DBP === 0) {\n                            continue\n                        }\n                        else {\n                            // console.log(element)\n                            svg.append('circle')\n                                .attr('cx', x(Xtime))\n                                .attr('cy', y(SBP))\n                                .attr('r', 3)\n                                .style('fill', circlrcolor)\n\n\n                            svg.append('circle')\n                                .attr('cx', x(Xtime))\n                                .attr('cy', y(DBP))\n                                .attr('r', 3)\n                                .style('opacity', 0.5)\n                                .style('fill', circlrcolor)\n                        }\n\n                    }\n                }\n            }\n            else {\n                if (type === \"abp\" || type === \"nbp\") {\n                    if (sourcedata === undefined) {\n                        return null\n                    }\n                    if (sourcedata.length === 0) {\n                        return null\n                    }\n                    const SBP = sourcedata[0]\n                    const DBP = sourcedata[1]\n                    for (let index = 0; index < SBP.length; index++) {\n                        const element = SBP[index];\n                        svg.append('circle')\n                            .attr('cx', x(element.Time))\n                            .attr('cy', y(element.Data))\n                            .attr('r', 3)\n                            .style('fill', circlrcolor)\n\n                    }\n\n                    for (let index = 0; index < DBP.length; index++) {\n                        const element = DBP[index];\n                        svg.append('circle')\n                            .attr('cx', x(element.Time))\n                            .attr('cy', y(element.Data))\n                            .attr('r', 3)\n                            .style('fill', circlrcolor)\n                            .style('opacity', 0.5)\n\n                    }\n                }\n                else {\n                    for (let index = 0; index < sourcedata.length; index++) {\n                        const element = sourcedata[index];\n                        svg.append('circle')\n                            .attr('cx', x(element.Time))\n                            .attr('cy', y(element.Data))\n                            .attr('r', 3)\n                            .style('fill', circlrcolor)\n\n                    }\n                }\n\n            }\n        }\n    }\n\n    changestate() {\n        this.setState({\n            change: !this.state.change\n        })\n    }\n    render() {\n        const { svg_id, source, id_key } = this.props\n        return (\n            <div id={id_key}>\n            </div>\n        );\n    }\n}\n\nexport default Crosssectionvitalsignchart;","import React, { Component } from 'react';\nimport dragdown from '../../Image/svg/dragdown.svg'\n\nclass Warningsetting extends Component {\n    state = {\n        dragstate: false\n    }\n    onClickdrag = () => {\n        this.setState(\n            {\n                dragstate: !this.state.dragstate\n            }\n        )\n    }\n    render() {\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div style={{ height: 50, background: \"rgba(238,238,238,1)\", padding: \"10px 16px\", display: \"flex\", justifyContent: \"space-between\" }}>\n                    <div style={{ display: \"flex\" }}>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>2019-06-01 08:00</div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", marginLeft: \"20px\" }}>\n                            <div style={{ border: \"red 1px solid\", borderRadius: \"4px\", cursor: \"pointer\", color: \"red\", padding: \"5px 20px\", background: \"white\" }}>刪除</div>\n                        </div>\n                    </div>\n                    <div onClick={this.onClickdrag} style={{ transform: this.state.dragstate ? \"scaleY(1)\" : \"scaleY(-1)\" }}>\n                        <img src={dragdown} alt=\"dragdown\"></img>\n                    </div>\n                </div>\n                <div style={{ display: this.state.dragstate ? \"block\" : \"none\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 4fr 1fr 4fr\" }}>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>HR</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>ABP</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>NBP</div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>SpO2</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>BT</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>RR</div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ height: 50, padding: \"10px 16px\", display: \"flex\", alignItems: \"center\" }}>生效時間範圍:2019-06-01 08:00~2019-06-31 08:00</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Warningsetting","import React, { Component } from 'react';\nimport {Input,Button,DatePicker,Select} from 'antd'\n\nclass Addwarningsetting extends Component {\n    onSelectDate = (dates, dataStrings) => {\n        console.log(\"dates\" + JSON.stringify(dates));// \"2019-12-11T08:17:08.350Z\"\n        console.log(\"dataStrings\" + JSON.stringify(dataStrings));// \"2019-12-11\"\n        this.props.dateCallback(dataStrings);\n    }\n    onSelectHour = value => {\n        console.log(value);\n        this.props.hourCallback(value);\n    }\n    render() {\n        //generate select child (hours of a day)\n        const { Option } = Select;\n        const children = [];\n        for (let i = 0; i < 23; i++) {\n            children.push(<Option key={i.toString()}>{i.toString()}</Option>);\n        }\n        return (\n            <div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"100px 150px 150px\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", border: \"1px rgba(238,238,238,1) solid\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"1px rgba(238,238,238,1) solid\" }}>HR</div>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                                    <Button type=\"primary\">預設值</Button>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", border: \"1px rgba(238,238,238,1) solid\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"1px rgba(238,238,238,1) solid\" }}>ABP</div>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>SBP圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>DBP圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                                    <Button type=\"primary\">預設值</Button>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", border: \"1px rgba(238,238,238,1) solid\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"1px rgba(238,238,238,1) solid\" }}>NBP</div>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                                    <Button type=\"primary\">預設值</Button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"100px 150px 150px\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", border: \"1px rgba(238,238,238,1) solid\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"1px rgba(238,238,238,1) solid\" }}>SPO2</div>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                                    <Button type=\"primary\">預設值</Button>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", border: \"1px rgba(238,238,238,1) solid\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"1px rgba(238,238,238,1) solid\" }}>BT</div>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                                    <Button type=\"primary\">預設值</Button>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", border: \"1px rgba(238,238,238,1) solid\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"1px rgba(238,238,238,1) solid\" }}>RR</div>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                                    <Button type=\"primary\">預設值</Button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", marginTop: \"10px\" }}>\n                    <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>設定生效時間:</div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <DatePicker onChange={this.onSelectDate} style={{ width: \"70%\" }} />\n                        <Select defaultValue=\"0\" onChange={this.onSelectHour} style={{ width: \"20%\", marginLeft: \"8px\" }}>\n                            {children}\n                        </Select>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Addwarningsetting","import React, { Component } from 'react';\nimport { Button, Select, Modal, Tabs, DatePicker, Input, Icon } from 'antd';\nimport Crosssectionvitalsignchart from './Crossectionvitalsignchart'\nimport Warningsetting from './Warningsettinglist'\nimport Addwarningsetting from './Addnewwaring'\nimport './Vitalsign.scss'\nimport { formatxArrayhalf, formatendtime } from '../../Function/Timeformat'\nimport { simulationCentermonitordata, simulationnisdata } from '../../Function/Wardstate'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\n\nclass Vitalsign extends Component {\n\n    state = {\n        vital_days: 0, //false:一天 true:三天\n        source: \"CM\", //false:中央站 true:NIS\n        visible: false,\n        visibleConflict: false,\n        chackstate_one: 0,\n        chackstate_three: 0,\n        datasource: null,\n        addNewWarningDateStr: null,\n        addNewWarningHourStr: null,\n\n        CenterMonitorValue: null\n    }\n\n    componentDidMount() {\n        const startTime = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf() - (60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\")\n        const endTime = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf()).format(\"YYYYMMDDHHmmss\")\n        const PHISTNUM = this.props.caseinfo.HISID.toString().trim()\n        this.getVitalSignData(startTime, endTime, PHISTNUM)\n    }\n\n    getVitalSignData(startTime, EndTime, Phistnum) {\n        ApiProvider.getPatientwardvalueMedian(Phistnum, startTime, EndTime)\n            .then(data => {\n                console.log(data.data)\n                this.setState({\n                    CenterMonitorValue: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n                this.setState({\n                    CenterMonitorValue: null\n                })\n            })\n    }\n\n    onVitalCheck() {\n        var gridarray = []\n        if (this.state.vital_days === 1) {\n            for (let index = 0; index < 18; index++) {\n                const checknumber = index + 1\n                if (checknumber === this.state.chackstate_three) {\n                    gridarray.push(<div key={index} style={{ height: 330, width: \"100%\", border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_three(checknumber)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ height: 330, width: \"100%\" }} onClick={() => this.onClickCheckgrid_three(checknumber)}></div>)\n            }\n        }\n        else {\n            for (let index = 0; index < 24; index++) {\n                const checknumber = index + 1\n                if (checknumber === this.state.chackstate_one) {\n                    gridarray.push(<div key={index} style={{ height: 330, width: \"100%\", border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_one(checknumber)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ height: 330, width: \"100%\" }} onClick={() => this.onClickCheckgrid_one(checknumber)}></div>)\n            }\n        }\n        return gridarray;\n    }\n\n    onClickCheckgrid_one(number) {\n        //1:7 2:8 3:9 ........\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (24 * 60 * 60 * 1000)\n        const endtime = ST + (number * 60 * 60 * 1000)\n        const starttime = endtime - 60 * 60 * 1000\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ chackstate_one: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n    onClickCheckgrid_three(number) {\n        console.log(number)\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (3 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 4) * 60 * 60 * 1000)\n        const starttime = endtime - (4 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ chackstate_three: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleSelectDate = dataStrings => {\n        //console.log(\"dataStrings\"+dataStrings);\n        this.setState({\n            addNewWarningDateStr: dataStrings\n        })\n    }\n\n    handleSelectHour = hourString => {\n        //console.log(\"hourString\"+hourString);\n        this.setState({\n            addNewWarningHourStr: hourString\n        })\n    }\n\n    handleOk = e => {\n        //console.log(e);\n        console.log(\"# add warning time: \" + this.state.addNewWarningDateStr + \"/\" + this.state.addNewWarningHourStr);\n        this.setState({\n            visibleConflict: true\n        });\n    };\n\n    handleOkConflict = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n            visibleConflict: false\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancelConflict = e => {\n        console.log(e);\n        this.setState({\n            visible: true,\n            visibleConflict: false,\n        });\n    };\n\n    sourcehandleChange = (value) => {\n        this.setState({ source: value })\n    }\n\n\n    intervalhandleChange = (value) => {\n\n        // this.vitalDataGet(value, PickerDate)\n        this.setState({\n            vital_days: value,\n            chackstate_one: 0,\n            chackstate_three: 0,\n            // datasource: this.switchdata(value, this.state.source)\n\n        })\n\n    }\n\n\n    switchdata(value, sourcefrom) {\n        const { PickerDate } = this.props\n\n        function changevitaldays(vitaldays) {\n            if (vitaldays === 3) {\n                return 18\n            }\n            else {\n                return 24\n            }\n        }\n        var interval\n        if (value === null && value === undefined) {\n\n            interval = this.state.vital_days\n        }\n        else {\n\n            interval = value\n        }\n        const starttime = formatendtime(PickerDate) - (interval * 24 * 60 * 60 * 1000)\n        if (sourcefrom) {\n            const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n            const data = simulationnisdata(datatime, changevitaldays(interval))\n            return data\n        }\n        else {\n\n            const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n            const data = simulationCentermonitordata(datatime, changevitaldays(interval))\n            return data\n        }\n    }\n\n\n    switch_source(bool) {\n        this.setState(\n            {\n                source: bool,\n                datasource: this.switchdata(this.state.vital_days, bool)\n            });\n    }\n\n    render() {\n        function centervalueNull(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            return value\n        }\n        function centervaluetoNull(value) {\n            function FilterList(DataList, type) {\n                const filterData = DataList.filter(function (value, index, arr) {\n                    return value.type === type\n                })\n                if (filterData.length === 0) {\n                    return null\n                }\n                console.log(filterData)\n                return filterData[0].Mid\n            }\n            if (value === undefined || value === null) {\n                return {\n                    hr: null,\n                    rr: null,\n                    bt: null,\n                    spo2: null,\n                    abpd: null,\n                    abpm: null,\n                    abps: null,\n                    nbpm: null,\n                    nbps: null,\n                    nbpd: null\n                }\n            }\n            return {\n                hr: FilterList(value, \"hr\"),\n                rr: FilterList(value, \"rr\"),\n                bt: FilterList(value, \"bt\"),\n                spo2: FilterList(value, \"spo2\"),\n                abpd: FilterList(value, \"abpd\"),\n                abpm: FilterList(value, \"abpm\"),\n                abps: FilterList(value, \"abps\"),\n                nbpd: FilterList(value, \"nbpd\"),\n                nbps: FilterList(value, \"nbps\"),\n                nbpm: FilterList(value, \"nbpm\"),\n            }\n        }\n        const { Option } = Select;\n        const { TabPane } = Tabs;\n        const width = window.screen.availWidth * 0.25\n        const waringsettingarray = []\n        for (let index = 0; index < 20; index++) {\n            waringsettingarray.push(<Warningsetting key={index}></Warningsetting>)\n\n        }\n        const handleSelectDate = this.handleSelectDate;\n        const handleSelectHour = this.handleSelectHour;\n        const centervalue = centervaluetoNull(this.state.CenterMonitorValue)\n\n\n        function vitaldaysBool(vitaldays) {\n            if (vitaldays === 3) {\n                return true\n            }\n            return false\n        }\n\n        function formatPickerTimer(pickerdate, interval) {\n            if (interval === 0) {\n                return {\n                    startTime: pickerdate + (7 * 60 * 60 * 1000),\n                    endTime: pickerdate + (31 * 60 * 60 * 1000)\n                }\n            }\n            else {\n                return {\n                    startTime: pickerdate + (31 * 60 * 60 * 1000) - (3 * 24 * 60 * 60 * 1000),\n                    endTime: pickerdate + (31 * 60 * 60 * 1000)\n                }\n\n            }\n        }\n        const pickerTimer = formatPickerTimer(this.props.PickerDate, this.state.vital_days)\n        const PickerDate = this.props.PickerDate\n        // console.log(hrdatasource)\n        return (\n            <div>\n                <Modal\n                    title=\"生命徵象警示範圍設定\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    width={1000}>\n                    <Tabs defaultActiveKey=\"1\">\n                        <TabPane tab=\"新增警示設定\" key=\"1\">\n                            <Addwarningsetting dateCallback={handleSelectDate} hourCallback={handleSelectHour}></Addwarningsetting>\n                        </TabPane>\n                        <TabPane tab=\"警示設定清單\" key=\"2\">\n                            <div style={{ maxHeight: \"400px\", overflow: \"auto\" }}>\n                                {waringsettingarray}\n                            </div>\n                        </TabPane>\n                    </Tabs>\n                </Modal>\n                <Modal\n                    title=\"您設定的生效時間範圍與以下的歷史變更紀錄時間衝突，是否確定要覆蓋？\"\n                    visible={this.state.visibleConflict}\n                    onOk={this.handleOkConflict}\n                    onCancel={this.handleCancelConflict}\n                    width={1000}>\n                    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                        <Icon type=\"info-circle\" style={{ color: \"darkorange\", width: \"24px\", height: \"24px\" }} />\n                        <div style={{ marginLeft: \"8px\" }}>\n                            <p>點選\"確定\"將覆蓋資料，點選\"取消\"回到設定頁面</p>\n                            <p>1. HR：</p>\n                            <p>舊設定值：2019-08-01 ~ 2019-08-11</p>\n                            <p>新設定值：2019-08-01 ~ 2019-08-20</p>\n                        </div>\n                    </div>\n                </Modal>\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', height: \"50px\", backgroundColor: \"#cccccc\", padding: \"0px 5px\" }}>\n                    <div style={{ display: 'flex', alignItems: \"center\" }}>\n                        <t1>Vital Sign</t1>\n                        <Select defaultValue={\"CM\"} style={{ width: 160, marginLeft: \"16px\" }} onChange={this.sourcehandleChange}>\n                            <Option value={\"CM\"}>Center Monitor</Option>\n                            <Option value={\"NIS\"}>NIS</Option>\n                        </Select>\n                        <Select defaultValue={0} style={{ width: 90, marginLeft: \"15px\" }} onChange={this.intervalhandleChange}>\n                            <Option value={0}>一天</Option>\n                            <Option value={1}>三天</Option>\n                        </Select>\n                    </div>\n                    {/* <Button width={90} type=\"primary\" onClick={this.showModal}>閾值調整</Button> */}\n                </div>\n                <div style={{ borderRadius: \"4px\", border: \"rgba(232,232,232,1) 1px solid\", height: \"400px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"80px 1fr 80px 1fr\" }}>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#779F50\", display: \"flex\", justifyContent: \"center\" }}>HR</div>\n                                    <div style={{ fontSize: \"2rem\", color: \"#779F50\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.hr)}</div>\n                                </div>\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>NBP</div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.nbpd)}/{centervalueNull(centervalue.nbps)}</div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>({centervalueNull(centervalue.nbpm)})</div>\n                                </div>\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>ABP</div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.abpd)}/{centervalueNull(centervalue.abps)}</div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>({centervalueNull(centervalue.abpm)})</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ position: \"relative\" }}>\n                            <div style={{ position: \"absolute\", top: 20, left: 50, width: width - 50, height: 330 }}>\n                                <div style={{ display: \"grid\", gridTemplateColumns: vitaldaysBool(this.state.vital_days) ? \"repeat(18, 1fr)\" : \"repeat(24,1fr)\" }}>\n                                    {this.onVitalCheck()}\n                                </div>\n                            </div>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"HR_svg\"}\n                                id_key={\"HR_div\"}\n                                type={\"hr\"}\n                                source={this.state.source}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={100}\n                                upper={160}\n                                axisBot={false}\n                                axisTop={true}\n                                circlrcolor=\"#779F50\"\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={200}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"NBP_svg\"}\n                                id_key={\"NBP_div\"}\n                                type={\"nbp\"}\n                                source={this.state.source}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={55}\n                                upper={75}\n                                axisBot={false}\n                                axisTop={false}\n                                circlrcolor={\"#C12528\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={100}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"ABP_svg\"}\n                                id_key={\"ABP_div\"}\n                                type={\"abp\"}\n                                source={this.state.source}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={55}\n                                upper={75}\n                                axisBot={true}\n                                axisTop={false}\n                                circlrcolor={\"#C12528\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={100}>\n                            </Crosssectionvitalsignchart>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#4773B8\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>\n                                        SpO<sub style={{ bottom: \"-1em\" }}>2</sub>\n                                    </div>\n                                    <div style={{ fontSize: \"2rem\", color: \"#4773B8\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.spo2)}%</div>\n                                </div>\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#7F3DB5\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>BT</div>\n                                    <div style={{ fontSize: \"2rem\", color: \"#7F3DB5\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>--</div>\n                                </div>\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#DE7531\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>RR</div>\n                                    <div style={{ fontSize: \"2rem\", color: \"#DE7531\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.rr)}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ position: \"relative\" }}>\n                            <div style={{ position: \"absolute\", top: 20, left: 50, width: width - 50, height: 330 }}>\n                                <div style={{ display: \"grid\", gridTemplateColumns: vitaldaysBool(this.state.vital_days) ? \"repeat(18, 1fr)\" : \"repeat(24,1fr)\" }}>\n                                    {this.onVitalCheck()}\n                                </div>\n                            </div>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"SpO2_svg\"}\n                                id_key={\"SpO2_div\"}\n                                type={\"spo2\"}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={90}\n                                upper={100}\n                                axisBot={false}\n                                axisTop={true}\n                                circlrcolor={\"#4773B8\"}\n                                colorshadow={\"#4773B8\"}\n                                min={60}\n                                max={100}\n                                source={this.state.source}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"BT_svg\"}\n                                id_key={\"BT_div\"}\n                                type={\"bt\"}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                source={this.state.source}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={36}\n                                upper={38}\n                                axisBot={false}\n                                axisTop={false}\n                                circlrcolor={\"#7F3DB5\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={33}\n                                max={48}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"RR_svg\"}\n                                id_key={\"RR_div\"}\n                                type={\"spo2\"}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={20}\n                                upper={60}\n                                axisBot={true}\n                                axisTop={false}\n                                circlrcolor={\"#DE7531\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={100}\n                                source={this.state.source}>\n                            </Crosssectionvitalsignchart>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Vitalsign;","import React, { Component } from 'react';\nimport { Button, DatePicker, Checkbox } from 'antd';\nimport moment from 'moment';\nimport displaylogo from '../Image/svg/filter.svg'\nimport { daysdiff, datestringformat, yyyymmddHHmmfromat, yyyymmddformat } from '../Function/Timeformat'\nimport { pregancyweeksanddays } from '../Function/Wardbedfunction'\nimport './Controlbar.scss'\nimport * as ApiProvider from '../API/ApiProvider';\nimport * as WardState from '../Function/Wardstate'\n\nclass Controlbar extends Component {\n    state = {\n        display_Mode: false,\n        item: this.props.item_array,\n        scrollstate: 0,\n    }\n    sendData = (itwm_array) => {\n        this.props.parentCallback(itwm_array);\n    }\n\n\n    sendDateData = (PickerDate) => {\n        this.props.parentDateCallback(PickerDate);\n    }\n    //快速滑動\n    scrollToAnchor = (anchorName) => {\n        if (anchorName) {\n            let anchorElement = document.getElementById(anchorName);\n            if (anchorElement) { anchorElement.scrollIntoView(); }\n        }\n    }\n    onChange = (checkedValues) => {\n        this.sendData(checkedValues)\n\n    }\n    onDateChange = (date, dateString) => {\n        this.sendDateData(date.valueOf())\n    }\n    open_display() {\n        this.setState({\n            display_Mode: !this.state.display_Mode\n        })\n    }\n\n\n    render() {\n       \n        const btn_style = {\n            unclick_style: { borderRadius: \"16px\", color: \"rgba(245, 166, 35, 1)\", border: \"rgba(245, 166, 35, 1) 1px solid\" }\n        }\n\n        \n\n        function Monthformat(month) {\n            return month + 1\n        }\n        function timeformat(timestring) {\n            return new Date(timestring).getFullYear() + \"/\" + Monthformat(new Date(timestring).getMonth()) + \"/\" + new Date(timestring).getDate()\n        }\n        function valueFormat(value){\n            if (value === \"\"|| value === null || value === undefined) {\n                return \"--\"\n            }\n            return value.toString()\n        }\n        function valueBornWeight(value){\n            if (value === \"\"|| value === null || value === undefined || value === 0) {\n                return \"\"\n            }\n            return value.toString() + \"g → \"\n        }\n        const display_style = {\n            displye_mode: { position: \"absolute\", right: '0px', top: \"50px\", width: \"200px\", background: \"white\", boxShadow: \"3px 3px 12px\", zIndex: \"100\" },\n            non_display_mode: { display: \"none\" },\n            check_area: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\" },\n            check_text: { padding: \"10px\", width: \"140px\", borderRadius: \"4px\", borderColor: 'rgba(0, 0, 0, 0.15)', borderStyle: \"solid\", borderWidth: \"1px\", marginLeft: \"10px\" }\n        }\n\n        function disabledDate(current) {\n            // Can not select days before today and today\n            const endvalue = moment(caseinfo.PBASINGNINFO.PBIRTHDT,'YYYYMMDD')\n            return endvalue.endOf('day') > current || current > moment().endOf('day')\n        }\n\n        const { caseinfo, btnlist, PickerDate } = this.props\n        const weightList = caseinfo.WEIGHT\n        const Birthday = caseinfo.PBASINGNINFO.PBIRTHDT\n        const BornWeight = WardState.BornWeight(weightList, Birthday)\n        const DayWeight = WardState.selectweight(weightList, PickerDate)\n        console.log(weightList,BornWeight,DayWeight)\n        const btn = btnlist.map(\n            (item, index) => <Button onClick={this.scrollToAnchor.bind(this, item.scrollpoint)} key={index} style={btn_style.unclick_style}>\n                <t3>{item.name}</t3>\n            </Button>\n        )\n        return (\n            <div>\n                <div className='controlbarlayout'>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"10px\" }}>\n                        <DatePicker width={128} onChange={this.onDateChange} defaultValue={moment(PickerDate)} allowClear={false} showToday={false} />\n                        <div style={{ display: 'grid', gridTemplateColumns: \"repeat(3,auto)\", gridColumnGap: \"5px\" }}>\n                            <centerstyle><t2>週數:[{caseinfo.WEEK_BORN}+{caseinfo.DAY_BORN}]&rarr;{pregancyweeksanddays(caseinfo.WEEK_BORN, caseinfo.DAY_BORN, moment(Birthday,'YYYYMMDD').format('YYYY/MM/DD'))}</t2></centerstyle>\n                            <centerstyle><t2>體重:{valueBornWeight(BornWeight)}{valueFormat(DayWeight)}g</t2></centerstyle>\n                            <centerstyle><t2>住院第{daysdiff(moment(PickerDate).format('YYYY/MM/DD'), moment(caseinfo.TRANSINDT,'YYYYMMDD').format('YYYY/MM/DD'))}天</t2></centerstyle>\n                        </div>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: 'center', position: \"relative\" }}>\n                        <t2>項目切換：</t2>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,auto)\", gridColumnGap: \"5px\" }}>{btn}</div>\n                        <div onClick={() => this.open_display()} style={{ cursor: \"pointer\", marginLeft: \"5px\" }}>\n                            <img src={displaylogo} alt='displaylogo' style={{ width: '15px', height: '15px' }}></img>\n                        </div>\n                        <div style={this.state.display_Mode ? display_style.displye_mode : display_style.non_display_mode}>\n                            <t2 className='controlmoduletitle'>Displayed</t2>\n                            <div style={{ marginTop: \"10px\", marginBottom: \"20px\" }}>\n                                <Checkbox.Group defaultValue={this.state.item} id={\"checkbox_group\"} style={{ width: '100%', display: \"grid\", gridTemplateRows: \"repeat(6,1fr)\", gridRowGap: \"5px\" }} onChange={this.onChange}>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={0}></Checkbox>\n                                        <t3 style={display_style.check_text}>Vital Sign & I/O</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={1} ></Checkbox>\n                                        <t3 style={display_style.check_text}>Lab</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={2}></Checkbox>\n                                        <t3 style={display_style.check_text}>RT</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={3}></Checkbox>\n                                        <t3 style={display_style.check_text}>Order</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={4}></Checkbox>\n                                        <t3 style={display_style.check_text}>Schedule</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={5}></Checkbox>\n                                        <t3 style={display_style.check_text}>To Do List</t3>\n                                    </div>\n                                </Checkbox.Group>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className='boxshadow'></div>\n            </div>\n\n        );\n    }\n}\n\nexport default Controlbar;","import React, { Component } from 'react';\nimport './iopage.scss'\nimport * as FiliterReg from '../Function/FiliterReg'\nimport moment from 'moment';\nimport * as WardState from '../Function/Wardstate'\nimport * as ApiProvider from '../API/ApiProvider'\nimport X2JS from 'x2js';\n\nclass IOpage extends Component {\n    state = {\n        QDC: [],\n        PreStatus: null,\n        PreIntervalStatus: null,\n        PreCID: null,\n        PrePickerDate: null\n    }\n    getAPI(caseid, pickerdate, intervalStatus, status) {\n        if (caseid === undefined || caseid === null) {\n            return null\n        }\n        if (pickerdate === undefined || pickerdate === null) {\n            return null\n        }\n        if (intervalStatus === undefined || intervalStatus === null) {\n            return null\n        }\n        if (status === undefined || status === null) {\n            return null\n        }\n        function formatTimer(pickerdate, interstatus, status) {\n            const endTimeStamp = pickerdate + 31 * 60 * 60 * 1000\n            if (status === \"Crossection\") {\n                return {\n                    start: moment(endTimeStamp - (3 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            if (interstatus === 0) {\n                return {\n                    start: moment(endTimeStamp - (24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            if (interstatus === 1) {\n                return {\n                    start: moment(endTimeStamp - (3 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            if (interstatus === 2) {\n                return {\n                    start: moment(endTimeStamp - (7 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            return {\n                start: moment(endTimeStamp - (14 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n            }\n        }\n        const xm2 = new X2JS()\n        const timer = formatTimer(pickerdate, intervalStatus, status)\n        ApiProvider.getQDC(caseid, timer.start, timer.end)\n            .then(data => {\n                const Result = xm2.xml2js(data.data).outmsg\n                if (Number(Result.ret) === 0) {\n                    const parsedata = Result.resconts.rescont\n                    if (Array.isArray(parsedata)) {\n                        this.setState({ QDC: parsedata })\n                    }\n                    else {\n                        this.setState({ QDC: [parsedata] })\n                    }\n                }\n\n            })\n            .catch(err => {\n                console.log(\"getQDC NG \" + JSON.stringify(err));\n            });\n    }\n    componentDidMount() {\n        const { Status, IntervalStatus, caseinfo, PickerDate } = this.props\n        this.setState({ PreStatus: Status, PreIntervalStatus: IntervalStatus, PreCID: caseinfo.CASEID, PrePickerDate: PickerDate })\n        this.getAPI(caseinfo.CASEID, PickerDate, IntervalStatus, Status)\n    }\n    componentDidUpdate() {\n        const { Status, IntervalStatus, caseinfo, PickerDate } = this.props\n        const prestatus = this.state.PreStatus\n        const preinterstatus = this.state.PreIntervalStatus\n        const precid = this.state.PreCID\n        const prepickerdate = this.state.PrePickerDate\n        if (prepickerdate !== PickerDate || caseinfo.CASEID !== precid || IntervalStatus !== preinterstatus || Status !== prestatus) {\n            console.log(Status, IntervalStatus, caseinfo, PickerDate)\n            this.setState({ PreStatus: Status, PreIntervalStatus: IntervalStatus, PreCID: caseinfo.CASEID, PrePickerDate: PickerDate })\n            this.getAPI(caseinfo.CASEID, PickerDate, IntervalStatus, Status)\n        }\n    }\n    cellRender(arr) {\n        const { Status, IntervalStatus } = this.props\n        const mapcell = arr.map(function (value, index, array) {\n            return (\n                <div key={index} style={{ border: \"1px solid #cccccc\", borderCollapse: \"collapse\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <t2>{parseInt(value)}</t2>\n                </div>\n            );\n        })\n        if (Status === \"Crossection\") {\n            return (\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4,1fr)\" }}>\n                    {mapcell}\n                </div>\n            );\n        }\n        else {\n            if (IntervalStatus === 0) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(24,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n            if (IntervalStatus === 1) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(18,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n            if (IntervalStatus === 2) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(21,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n            if (IntervalStatus === 3) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(14,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n        }\n    }\n    render() {\n        function pickerTimeArray(pickerdate, intervalstatus, status) {\n            const et = pickerdate + (31 * 60 * 60 * 1000)\n            var timearray = []\n            if (status === \"Crossection\") {\n                const st = pickerdate + (7 * 60 * 60 * 1000)\n                for (let index = 0; index < 3; index++) {\n                    const time = st + (index * 8 * 60 * 60 * 1000)\n                    timearray.push(time)\n                }\n            }\n            else {\n                //IntervalStatus 0:1天 1:3天 2:一週 3:兩週\n                if (intervalstatus === 0) {\n                    const st = et - (24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 24; index++) {\n                        const time = st + (index * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (intervalstatus === 1) {\n                    const st = et - (3 * 24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 18; index++) {\n                        const time = st + (index * 4 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (intervalstatus === 2) {\n                    const st = et - (7 * 24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 21; index++) {\n                        const time = st + (index * 8 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (intervalstatus === 3) {\n                    const st = et - (14 * 24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 14; index++) {\n                        const time = st + (index * 24 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n            }\n            return timearray\n        }\n\n        function starttime(status, intervalstatus, time) {\n            if (status === \"Crossection\") {\n                return time - (24 * 60 * 60 * 1000)\n            }\n            if (intervalstatus === 0) {\n                return time - (24 * 60 * 60 * 1000)\n            }\n            if (intervalstatus === 1) {\n                return time - (3 * 24 * 60 * 60 * 1000)\n            }\n            if (intervalstatus === 2) {\n                return time - (7 * 24 * 60 * 60 * 1000)\n            }\n            return time - (14 * 24 * 60 * 60 * 1000)\n\n        }\n\n        function IntervalToDataArray(startTime, status, intervalstatus, element) {\n            if (Array.isArray(element)) {\n                if (status === 'Crossection') {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (8 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                if (intervalstatus === 0) {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (1 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                if (intervalstatus === 1) {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (4 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                if (intervalstatus === 2) {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (8 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                const filterdata = element.filter(function (value, index, arr) {\n                    const valueTimeString = value.rec_dat + value.rec_tim\n                    const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                    const endTime = startTime + (24 * 60 * 60 * 1000)\n                    return valueTime > startTime && valueTime < endTime\n                })\n                return filterdata\n            }\n            return []\n        }\n\n        function SumforEach(arr) {\n            var sum = 0;\n            arr.forEach(function (element) {\n                sum += Number(element);\n            });\n            return sum;\n        }\n\n\n        const { Status, IntervalStatus, caseinfo, PickerDate } = this.props\n\n        const timeInterval = pickerTimeArray(PickerDate, IntervalStatus, Status)\n        const et = PickerDate + (31 * 60 * 60 * 1000)\n        const st = starttime(Status, IntervalStatus, et)\n        const WEIGHT = caseinfo.WEIGHT\n        const dateWeoght = WardState.selectweight(WEIGHT, PickerDate)\n\n        const QDCLIST = this.state.QDC\n        console.log(QDCLIST)\n        const Weight = 1000\n\n\n        var feed = []\n        var IV = []\n        var Urine = []\n        var Other_in = []\n        var Other_out = []\n        if (QDCLIST !== undefined) {\n            if (QDCLIST.length !== 0) {\n                var feedarray = []\n                var IVarray = []\n                var Unarray = []\n                var Other_inarray = []\n                var Other_outarray = []\n                for (let index = 0; index < QDCLIST.length; index++) {\n                    const element = QDCLIST[index];\n                    const elementTimeString = element.rec_dat + element.rec_tim\n                    const elementTime = moment(elementTimeString, 'YYYYMMDDHHmm').valueOf()\n                    if (elementTime > st && elementTime < et) {\n                        const feedstatus = FiliterReg.Feedarea_Reg_IO().find(function (value, index, array) {\n                            return element.item === value\n                        })\n                        if (feedstatus) {\n                            feedarray.push(element)\n                        }\n                        const IVstatus = FiliterReg.IVarea_reg_IO().find(function (value, index, array) {\n                            return element.item === value\n                        })\n                        if (IVstatus) {\n                            IVarray.push(element)\n                        }\n                        const UOstatus = FiliterReg.UOarea_reg_IO().find(function (value, index, array) {\n                            return element.item === value\n                        })\n                        if (UOstatus) {\n                            Unarray.push(element)\n                        }\n                        const Otherstatus = FiliterReg.Otherarea_reg_IO().find(function (value, index, array) {\n                            return element.item === value\n                        })\n                        if (Otherstatus) {\n                            const invalue = element.inp_val1\n                            const outvalue = element.out_val1\n                            if (invalue !== undefined) {\n                                Other_inarray.push(element)\n                            }\n                            if (outvalue !== undefined) {\n                                Other_outarray.push(element)\n                            }\n                        }\n                    }\n                }\n            }\n\n            for (let index = 0; index < timeInterval.length; index++) {\n                const elementTime = timeInterval[index];\n                const feedData = IntervalToDataArray(elementTime, Status, IntervalStatus, feedarray)\n                feed.push(feedData)\n                const IVData = IntervalToDataArray(elementTime, Status, IntervalStatus, IVarray)\n                IV.push(IVData)\n                const UrineData = IntervalToDataArray(elementTime, Status, IntervalStatus, Unarray)\n                Urine.push(UrineData)\n                const OtherInData = IntervalToDataArray(elementTime, Status, IntervalStatus, Other_inarray)\n                Other_in.push(OtherInData)\n                const OtherOutData = IntervalToDataArray(elementTime, Status, IntervalStatus, Other_outarray)\n                Other_out.push(OtherOutData)\n            }\n        }\n\n        const feedmap = feed.map(function (value, index, arr) {\n            function SumDataforEach(arr) {\n                var sum = 0;\n                arr.forEach(function (element) {\n                    sum += Number(element.inp_val2);\n                });\n                return parseInt(sum);\n            }\n            if (Array.isArray(value)) {\n                const data = SumDataforEach(value)\n                return data\n            }\n            return null\n        })\n        const IVmap = IV.map(function (value, index, arr) {\n            function SumDataforEach(arr) {\n                var sum = 0;\n                arr.forEach(function (element) {\n                    sum += Number(element.inp_val1);\n                });\n                return parseInt(sum);\n            }\n            if (Array.isArray(value)) {\n                const data = SumDataforEach(value)\n                return data\n            }\n            return null\n        })\n\n        const Other_inmap = Other_in.map(function (value, index, arr) {\n            function SumDataforEach(arr) {\n                var sum = 0;\n                arr.forEach(function (element) {\n                    sum += Number(element.inp_val1);\n                });\n                return parseInt(sum);\n            }\n            if (Array.isArray(value)) {\n                const data = SumDataforEach(value)\n                return data\n            }\n            return null\n        })\n\n\n        const Urinemap = Urine.map(function (value, index, arr) {\n            function SumDataforEach(arr) {\n                var sum = 0;\n                arr.forEach(function (element) {\n                    sum += Number(element.out_val2);\n                });\n                return parseInt(sum);\n            }\n            if (Array.isArray(value)) {\n                const data = SumDataforEach(value)\n                return data\n            }\n            return null\n        })\n        console.log(Other_out)\n        const Other_outmap = Other_out.map(function (value, index, arr) {\n            function SumDataforEach(arr) {\n                var sum = 0;\n                arr.forEach(function (element) {\n                    if (Number(element.out_val2) !== \"\" || Number(element.out_val2) !== undefined) {\n                        if (element.item === \"排便\") {\n                            sum = sum + 1;\n                        }\n                        else {\n                            sum += Number(element.out_val1);\n                        }\n\n                    }\n                });\n                return parseInt(sum);\n            }\n            if (Array.isArray(value)) {\n                const data = SumDataforEach(value)\n                return data\n            }\n            return null\n        })\n\n\n        if (Status === 'Crossection') {\n            feedmap.push(SumforEach(feedmap))\n            IVmap.push(SumforEach(IVmap))\n            Other_inmap.push(SumforEach(Other_inmap))\n            Urinemap.push(SumforEach(Urinemap))\n            Other_outmap.push(SumforEach(Other_outmap))\n        }\n\n\n\n\n        function suminlist(feedarray, ivarray, otherinarray) {\n            var sumarray = []\n            for (let index = 0; index < feedarray.length; index++) {\n                const feedvalue = feedarray[index];\n                const ivvalue = ivarray[index];\n                const otherinvalue = otherinarray[index];\n                sumarray.push(feedvalue + ivvalue + otherinvalue)\n            }\n            return sumarray\n        }\n\n        function urineunittime(urinemap, weight, status, intervalstatus) {\n            var urineunittimemap = []\n            if (status === \"Crossection\") {\n                for (let index = 0; index < urinemap.length; index++) {\n                    const element = urinemap[index];\n                    if (index === 3) {\n                        urineunittimemap.push(element / (weight / 1000) / 24)\n                    }\n                    else {\n                        urineunittimemap.push(element / (weight / 1000) / 8)\n\n                    }\n                }\n            }\n            else {\n                if (intervalstatus === 0) {\n                    for (let index = 0; index < urinemap.length; index++) {\n                        const element = urinemap[index];\n                        urineunittimemap.push(element / (weight / 1000) / 1)\n                    }\n                }\n                if (intervalstatus === 1) {\n                    for (let index = 0; index < urinemap.length; index++) {\n                        const element = urinemap[index];\n                        urineunittimemap.push(element / (weight / 1000) / 4)\n                    }\n                }\n                if (intervalstatus === 2) {\n                    for (let index = 0; index < urinemap.length; index++) {\n                        const element = urinemap[index];\n                        urineunittimemap.push(element / (weight / 1000) / 8)\n                    }\n                }\n                if (intervalstatus === 3) {\n                    for (let index = 0; index < urinemap.length; index++) {\n                        const element = urinemap[index];\n                        urineunittimemap.push(element / (weight / 1000) / 24)\n                    }\n                }\n            }\n            return urineunittimemap\n        }\n\n\n        const suminarray = suminlist(feedmap, IVmap, Other_inmap)\n        const urineunit = urineunittime(Urinemap, Weight, Status, IntervalStatus)\n        const sumoutarray = suminlist(Urinemap, urineunit, Other_outmap)\n\n\n        function totalarray(arr1, arr2) {\n            var totalarr = []\n            for (let index = 0; index < arr1.length; index++) {\n                totalarr.push(arr1[index] - arr2[index])\n            }\n            return totalarr\n        }\n\n        const totalarr = totalarray(suminarray, sumoutarray)\n        const titleInarray = ['Feed', 'IV', 'Other', 'In:Sum']\n        const titleOutarray = ['U/O', 'ml/kg/hr', 'Other', 'Out:Sum']\n\n        const TitleCellIn = titleInarray.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ border: \"1px solid #cccccc\", borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\" }}>\n                    <t2>{value}</t2>\n                </div>\n            );\n        })\n\n        const TitleCellOut = titleOutarray.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ border: \"1px solid #cccccc\", borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\" }}>\n                    <t2>{value}</t2>\n                </div>\n            );\n        })\n\n        const Feedcell = this.cellRender(feedmap)\n        const IVcell = this.cellRender(IVmap)\n        const Other_inmapcell = this.cellRender(Other_inmap)\n        const suminarraycell = this.cellRender(suminarray)\n\n        const Urinemapcell = this.cellRender(Urinemap)\n        const urineunitcell = this.cellRender(urineunit)\n        const Other_outmapcell = this.cellRender(Other_outmap)\n        const sumoutarraycell = this.cellRender(sumoutarray)\n\n        const totalcell = this.cellRender(totalarr)\n\n        function stylechange(status) {\n            const chronicstyle = \"140px 1fr\"\n            const crossectionstyle = \"1fr 4fr\"\n            if (status === \"Crossection\") {\n                return crossectionstyle\n            }\n            else return chronicstyle\n        }\n        return (\n            <div>\n                <div style={{ display: \"grid\", gridTemplateColumns: stylechange(Status) }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"40px 40px 40px 40px\" }}>\n                        {TitleCellIn}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"40px 40px 40px 40px\" }}>\n                        {Feedcell}\n                        {IVcell}\n                        {Other_inmapcell}\n                        {suminarraycell}\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: stylechange(Status) }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"40px 40px 40px 40px\" }}>\n                        {TitleCellOut}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"40px 40px 40px 40px\" }}>\n                        {Urinemapcell}\n                        {urineunitcell}\n                        {Other_outmapcell}\n                        {sumoutarraycell}\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: stylechange(Status) }}>\n                    <div style={{ border: \"1px solid #cccccc\", borderCollapse: \"collapse\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        <t2>I-O</t2>\n                    </div>\n                    {totalcell}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default IOpage;","import React, { Component } from 'react';\nimport IOpage from '../../Module/iopage'\n\nclass Crossection_io extends Component {\n    render() {\n        const { caseinfo, title, PickerDate } = this.props\n        const titlearray = ['白班', '小夜', '大夜', '全日']\n        const titlelab = titlearray.map(function (info, index) {\n            return (\n                <centerstyle key={index}>\n                    <t2>{info}</t2>\n                </centerstyle>\n            );\n        })\n        return (\n            //510\n            <div>\n                <div style={{ lineHeight: \"50px\", backgroundColor: \"#cccccc\", padding: \"0px 5px\" }}>\n                    <t1>{title}</t1>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr\", height: \"40px\" }}>\n                    <div></div>\n                    {titlelab}\n                </div>\n                <IOpage PickerDate={PickerDate} caseinfo={caseinfo} Status={\"Crossection\"} IntervalStatus={0}></IOpage>\n            </div>\n        );\n    }\n}\n\nexport default Crossection_io","import React, { Component } from 'react';\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport * as RegularData from '../../Data/RegularData';\nimport * as ApiGithub from '../../API/ApiGithub'\n\nexport default class NonlabviewtableCell extends Component {\n    state = {\n        Result: [],\n        parser: { \"mappings\": [] },\n        summary_str: \"\",\n        RESDISP: []\n    }\n\n    componentDidMount() {\n        //call API\n        let { caseId, hisId } = this.props;\n        const { month, seq } = this.props;\n\n        //const fakeData = [{\"RECNO\":\"1\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"正式報告\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"2\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"                                臺北榮民總醫院兒童醫學部報告\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"3\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  病患資訊：      新生兒加護病房 - 1 黃苡齊 4565531-0 女性 5月大 NBD\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"4\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  申請序號 / 工作號：  0ANWCEA/            開立時間：   20200115    0304\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"5\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  開醫囑者：                     簽收時間：   20200115    0305\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"6\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  報告人 ：       NUR2325 袁藝榛         報告時間：   20200115    0305\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"7\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  檢體 ：        Blood\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"8\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  醫囑名稱：      BLOOD GAS\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"9\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   Sample:(Capillary)\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"10\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   PH:  (7.37)      Hb:   ()       BUN: ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"11\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   PO2:  (43)  mmHg   Hct:  (39)  %     Cr:  ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"12\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   PCO2: (59)  mmHg   FIO2:  (40.0) %\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"13\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   HCO3: (34.1) mmol/L  NA+:  (151)  mmol/L\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"14\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   BE:  (7.1)  mmol/L  K+:   (6.0)  mmol/L\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"15\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   SAT:  (77)  %     Cl-:  ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"16\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   TCO2: (35.9) mmol/L  iCA++: (1.44) mmol/L\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"17\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"                AnGap: ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"18\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"                MG++:  ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"19\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"20\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   COMMENT:\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"}];\n\n        if (caseId !== undefined && hisId !== undefined && month !== undefined && seq !== undefined) {\n            hisId = hisId.trim();\n            caseId = caseId.trim();\n\n            ApiProvider.getStoredProcedureRESDISP(hisId, month, caseId, seq)\n                .then(result => {\n                    console.log(\"getStoredProcedureRESDISP OK \" + JSON.stringify(result.data));\n                    //const fakeData = [{\"RECNO\":\"1\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"正式報告\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"2\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"                                臺北榮民總醫院兒童醫學部報告\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"3\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  病患資訊：      新生兒加護病房 - 1 黃苡齊 4565531-0 女性 5月大 NBD\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"4\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  申請序號 / 工作號：  0ANWCEA/            開立時間：   20200115    0304\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"5\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  開醫囑者：                     簽收時間：   20200115    0305\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"6\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  報告人 ：       NUR2325 袁藝榛         報告時間：   20200115    0305\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"7\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  檢體 ：        Blood\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"8\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  醫囑名稱：      BLOOD GAS\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"9\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   Sample:(Capillary)\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"10\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   PH:  (7.37)      Hb:   ()       BUN: ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"11\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   PO2:  (43)  mmHg   Hct:  (39)  %     Cr:  ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"12\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   PCO2: (59)  mmHg   FIO2:  (40.0) %\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"13\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   HCO3: (34.1) mmol/L  NA+:  (151)  mmol/L\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"14\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   BE:  (7.1)  mmol/L  K+:   (6.0)  mmol/L\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"15\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   SAT:  (77)  %     Cl-:  ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"16\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   TCO2: (35.9) mmol/L  iCA++: (1.44) mmol/L\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"17\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"                AnGap: ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"18\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"                MG++:  ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"19\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"20\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   COMMENT:\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"}];\n\n                    this.setState({\n                        RESDISP: result.data\n                        //RESDISP: fakeData\n                    })\n\n                    let input = {\n                        item_name: this.props.name.trim(),\n                        content: \"\",\n                        sample: \"\",\n                        lab: \"\",\n                        datatime: moment(this.props.time).format(\"YYYY-MM-DD HH:mm\")\n                    }\n\n                    //fakeData.forEach(item => {\n                    result.data.forEach(item => {\n                        input.content = `${input.content} \"\\n\" ${item.CONTENT}`;\n                    });\n\n                    console.log(\"start get Summary.json\");\n                    ApiGithub.getGitHubJson(\"Summary.json\")\n                        .then(data => {\n                            console.log(\"get Summary.json OK \" + JSON.stringify(data.data));\n\n                            const selected_parser = this.select_parser(input, data.data)\n                            console.log(\"selected_parser \" + JSON.stringify(selected_parser));\n                            this.setState({\n                                parser: selected_parser\n                            })\n\n                            if (selected_parser !== undefined) {\n                                const result_kv_pairs = this.parse(input, selected_parser)\n                                console.log(\"result_kv_pairs \" + JSON.stringify(result_kv_pairs));\n\n                                const summary_str = this.summerize(result_kv_pairs, selected_parser)\n                                console.log(\"summary_str \" + JSON.stringify(summary_str));\n\n                                this.setState({\n                                    summary_str: summary_str\n                                })\n                            }\n                        })\n                        .catch(err => {\n                            console.log(err)\n                        })\n\n\n                })\n                .catch(err => {\n                    console.log(\"getStoredProcedureRESDISP NG \" + JSON.stringify(err));\n                });\n        }\n    }\n\n    select_parser = (input, parser) => {\n        return parser.find(x =>\n            input.item_name.match(x.apply_condition.name)\n            && (!x.apply_condition.sample || input.sample.match(x.apply_condition.sample))\n            && (!x.apply_condition.lab || input.sample.match(x.apply_condition.lab))\n            && (!x.apply_condition.start_time || input.datetime >= x.apply_condition.start_time)\n            && (!x.apply_condition.end_time || input.datetime < x.apply_condition.end_time)\n        )\n    }\n\n    parse = (input, parser) => {\n        let mappings = parser.mappings\n        let content = input.content\n        let result = {}\n        mappings.forEach(mapping => {\n            const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n            const match = content.match(re)\n            result[mapping.key] = match && match[mapping.position]\n        });\n        return result;\n    }\n\n    summerize = (kv_pairs, parser) => {\n        let summary_str = parser.summary\n        for (const key in kv_pairs) {\n            let match_replacer = summary_str.match(RegExp(\"\\\\[\" + key + \"(;(.*?))?\\\\]\"))\n            let replacer = \"\"\n            if (match_replacer && match_replacer.length === 3) {\n                replacer = match_replacer[2]\n            }\n            summary_str = summary_str.replace(RegExp(\"\\\\[\" + key + \"(;.*?)?\\\\]\"), kv_pairs[key] || replacer)\n        }\n        return summary_str;\n    }\n\n    render() {\n        const { time, name, status, come, showModal } = this.props;\n        const { summary_str, RESDISP } = this.state;\n\n        return (\n            <div style={{ height: \"50px\", display: \"grid\", gridTemplateColumns: \"1fr 1.5fr 1fr 1fr 1fr\" }}>\n                <t3 className='nonlabteblecell'>{moment(time).format('MM/DD HH:mm')}</t3>\n                <t3 className='nonlabteblecell'>{name}</t3>\n                <t3 className='nonlabteblecell'>{come}</t3>\n                <t3 className='nonlabteblecell'>{status === '30' ? \"已開單\" : status === '31' ? \"已簽收\" : \"已發送\"}</t3>\n                <t3 className='nonlabteblecell' onClick={() => showModal(RESDISP)} style={{ color: \"blue\", textDecoration: \"underline\", cursor: \"pointer\" }}>{summary_str}</t3>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Modal, List, Divider } from 'antd'\n\nclass ExamReportModal extends Component {\n    render() {\n        const reportDetail = this.props.report\n        const showDetail = reportDetail.map((data, index) => {\n            return data.CONTENT !== \"\" ? <div key={ \"ExamReportModal\" + index } style={{ whiteSpace: \"pre-wrap\" }}>{data.CONTENT}</div> : \"\"\n        })\n        return (\n            <div>{showDetail}</div>\n        );\n    }\n}\n\nexport default ExamReportModal\n","import React, { Component } from 'react';\nimport './Nonlabviewtable.scss'\nimport NonlabviewtableCell from './NonlabviewtableCell'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider'\nimport { Modal } from 'antd';\nimport InsReportModal from '../ExamReportModal'\n\nclass Nonlabviewtable extends Component {\n    state = {\n        visible: false,\n\n        modalVisible: false,\n        modalReport: \"\",\n        ORDLIST: [],\n        RESSECT: []\n    }\n    componentDidMount() {\n        this.nonLabApiGet()\n    }\n    nonLabApiGet() {\n        function selectMonthInterval(storeProcedureTime) {\n            const timestampInterval = moment() - moment(storeProcedureTime, \"YYYY-MM-DD\").valueOf()\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        const { caseinfo } = this.props\n        const storeProcedureTime = moment(caseinfo.TRANSINDT, \"YYYYMMDD\").format(\"YYYY-MM-DD\")\n        const MonthInterval = selectMonthInterval(storeProcedureTime)\n        ApiProvider.getStoredProcedureORDLIST(caseinfo.HISID, storeProcedureTime, \"ALL\", \"DOC3924B\")\n            .then(data => { this.setState({ ORDLIST: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureORDLIST NG \" + JSON.stringify(err)) });\n        ApiProvider.getStoredProcedureRESSECT(caseinfo.HISID, MonthInterval, \"ALL\", \"DOC3924B\")\n            .then(data => { this.setState({ RESSECT: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESSECT NG \" + JSON.stringify(err)) });\n    }\n    showModal = (report) => {\n        console.log(\"showModal :\" + JSON.stringify(report))\n        this.setState({\n            modalVisible: true,\n            modalReport: report\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n    render() {\n        function listforstatus(ordlist, ressect, StartTime, EndTime) {\n            var status_report = []\n            // console.log(ordlist, ressect, pickerdate)\n            const endTime = EndTime\n            const startTime = StartTime\n            if (Array.isArray(ordlist) && Array.isArray(ressect)) {\n                for (let index = 0; index < ordlist.length; index++) {\n                    const element = ordlist[index];\n                    const time = moment(element.ORBGNDT.toString().trim() + element.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n                    console.log(time, startTime, endTime)\n                    if (time >= startTime && time <= endTime) {\n                        const status = ressect.find(function (value, index, array) {\n                            return value.ORDSEQNO === element.ORDSEQNO\n                        })\n                        if (status) {\n                            status_report.push({\n                                \"status\": true,\n                                \"element\": element\n                            })\n                        }\n                        else {\n                            status_report.push({\n                                \"status\": false,\n                                \"element\": element\n                            })\n\n                        }\n                    }\n                }\n            }\n            return status_report\n        }\n        const { modalVisible, modalReport, ORDLIST, RESSECT } = this.state\n        const { StartTime, EndTime } = this.props\n        const list = listforstatus(ORDLIST, RESSECT, StartTime, EndTime)\n\n        const showModal = this.showModal\n        const handleOk = this.handleOk\n        const handleCancel = this.handleCancel\n        const nonlabcell = list.map(function (value, index, array) {\n            console.log(value.element)\n            const come = value.element.ORSPCN1;\n            const time = moment(value.element.ORBGNDT.toString().trim() + value.element.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf();\n            const name = value.element.ORPROCED;\n            const status = value.status;\n            return (\n                <NonlabviewtableCell key={\"Nonlabviewtable\" + index} come={come} time={time} name={name} statis={status} hisId={value.element.ORHISTNO} caseId={value.element.ORDSEQCN} month={value.element.ORMM} seq={value.element.ORDSEQNO} showModal={showModal}></NonlabviewtableCell>\n            );\n        })\n        return (\n            <div>\n                <div style={{ height: \"50px\", border: \"#E2EDF3 1px solid\", backgroundColor: \"#E2EDF3\", display: \"grid\", gridTemplateColumns: \"1fr 1.5fr 1fr 1fr 1fr\" }}>\n                    <t3 className='nonlabtebletitlecell'>檢驗日期</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗項目名稱</t3>\n                    <t3 className='nonlabtebletitlecell'>檢體來源</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗項目狀態</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗結果</t3>\n                </div>\n                <div className='nonlabviewtable'>\n                    {nonlabcell}\n                </div>\n                <Modal\n                    title={\"檢驗結果\"}\n                    visible={modalVisible}\n                    onOk={handleOk}\n                    onCancel={handleCancel}\n                    width={1000}\n                    footer={null}>\n                    <InsReportModal report={modalReport}></InsReportModal>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Nonlabviewtable\n","import React, { Component } from 'react';\nimport Nonlabviewtable from './Nonlabviewtable'\n\n\nclass Nonlabviewlayout extends Component {\n    render() {\n        // const { PickerDate } = this.props\n        // const { modalVisible, modalReport } = this.state\n        // const showModal = this.showModal\n        // const handleOk = this.handleOk\n        // const handleCancel = this.handleCancel\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div style={{ display: 'flex', alignItems: 'center', height: '40px', paddingLeft: \"5px\", paddingRight: \"5px\", background: \"#cccccc\" }}>\n                    <t1>報告清單</t1>\n                </div>\n                <Nonlabviewtable caseinfo={this.props.caseinfo} StartTime={this.props.StartTime} EndTime={this.props.EndTime}></Nonlabviewtable>\n            </div>\n        );\n    }\n}\n\nexport default Nonlabviewlayout","import React, { Component } from 'react';\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider'\n\n\n\nclass RTtable extends Component {\n    state = {\n        RESDBGAS: [],\n        PreHID: null,\n        PreTransInDate: null\n    }\n    componentDidMount() {\n        const HID = this.props.caseinfo.HISID\n        const TRDT = this.props.caseinfo.TRANSINDT\n        this.setState({ PreHID: HID, PreTransInDate: TRDT })\n        this.getGasAPI()\n    }\n    componentDidUpdate() {\n        const HID = this.props.caseinfo.HISID\n        const TRDT = this.props.caseinfo.TRANSINDT\n        const PreHID = this.state.PreHID\n        const PreTRDT = this.state.PreTransInDate\n        if (HID !== PreHID || TRDT !== PreTRDT) {\n            this.setState({ PreHID: HID, PreTransInDate: TRDT })\n            this.getGasAPI()\n        }\n    }\n    getGasAPI() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID\n        const TransInDate = moment(caseinfo.TRANSINDT, \"YYYYMMDD\").format(\"YYYY-MM-DD\")\n        ApiProvider.getStoredProcedureRESDBGAS(HID, TransInDate)\n            .then(data => { this.setState({ RESDBGAS: data.data }) })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDBGAS NG \" + JSON.stringify(err));\n            });\n    }\n    GasListToCell = () => {\n        function formatGasData(GasDataList, st, et) {\n            const filterTimer = GasDataList.filter(function (element, index, arr) {\n                const timeStamp = moment(element.ORRESDT.toString().trim() + element.ORRESTM.toString().trim(), 'YYYY-MM-DDHH.mm.ss').valueOf()\n                return st <= timeStamp && timeStamp <= et\n            })\n            const cellMap = filterTimer.map(function (element, index, arr) {\n                const PHValue = element.SS07\n                const PCO2Value = element.SS06\n                const PO2Value = element.SS08\n                const HCO3Value = element.SS04\n                const BEValue = element.SS01\n                const SampleValue = \"123\" //Parse\n                const O2SatValue = element.SS05\n                const FiO2Value = element.SS03\n                const timeStamp = moment(element.ORRESDT.toString().trim() + element.ORRESTM.toString().trim(), 'YYYY-MM-DDHH.mm.ss').valueOf()\n                const time = moment(timeStamp).format(\"MM/DD HH:mm\")\n                const gasDataArray = [time, PHValue, PCO2Value, PO2Value, HCO3Value, BEValue, SampleValue, O2SatValue, FiO2Value]\n                const GasCell = gasDataArray.map(function (value, index, array) {\n                    return (\n                        <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\" }}>\n                            <t3>{value}</t3>\n                        </centerstyle>\n                    );\n                })\n                return (\n                    <div key={index} style={{ height: \"50px\", display: \"grid\", gridTemplateColumns: \"110px repeat(8,1fr)\" }}>{GasCell}</div>\n                );\n            })\n            return cellMap\n\n        }\n        const { Timer } = this.props\n        const startTime = Timer[0]\n        const endTime = Timer[1]\n        const GasData = this.state.RESDBGAS\n        const CellRander = formatGasData(GasData, startTime, endTime)\n        //for loop filter three days\n\n        return CellRander\n    }\n\n    render() {\n        const GasTitleList = ['起迄', 'PH', 'PCO2', 'PO2', 'HCO3', 'BE', 'O2', 'Sample', 'FiO2']\n        const GasTitleCell = GasTitleList.map(function (value, index, array) {\n            return (\n                <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\" }}>\n                    <t3>{value}</t3>\n                </centerstyle>\n            );\n        })\n\n        return (\n            <div>\n                <div style={{ height: \"50px\", border: \"rgba(238,238,238,1) 1px solid\", backgroundColor: \"#E2EDF3\", display: \"grid\", gridTemplateColumns: \"110px repeat(8,1fr)\" }}>\n                    {GasTitleCell}\n                </div>\n                <div style={{ maxHeight: \"400px\", overflow: \"auto\" }}>\n                    {this.GasListToCell()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTtable\n","import React, { Component } from 'react';\nimport RTtable from './RTtable'\nimport { DatePicker } from 'antd';\nimport moment from 'moment';\n\nclass GAS extends Component {\n    state = {\n        DateRange: [moment(), moment()]\n    }\n    render() {\n        const { searchbar, caseinfo, source, PickerDate } = this.props\n        const { RangePicker } = DatePicker;\n        function formatRangeTimer(source, dateRange, PickerDate) {\n            if (source === \"crossection\") {\n                const et = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000)\n                const st = et - (3 * 24 * 60 * 60 * 1000)\n                return [st, et]\n            }\n            const st = dateRange[0].valueOf()\n            const et = dateRange[1].valueOf()\n            if (st === et) {\n                return [st, st + (24 * 60 * 60 * 1000)]\n            }\n            return [st, et]\n\n        }\n        const fotmattimer = formatRangeTimer(source, this.state.DateRange, PickerDate)\n        return (\n            <div style={{ marginBottom: \"20px\" }}>\n                <t1>GAS累積報告</t1>\n                <div style={{ marginBottom: \"5px\", display: \"grid\", gridTemplateColumns: \"220px 1fr 25px\", gridColumnGap: \"10px\" }}>\n                    {searchbar ? <RangePicker defaultValue={this.state.DateRange} onChange={(date, dateString) => { this.setState({ DateRange: [date[0].valueOf(), date[1].valueOf()] }) }} allowClear={false} /> : null}\n                </div>\n                <RTtable Timer={fotmattimer} caseinfo={caseinfo}></RTtable>\n            </div>\n        );\n    }\n}\n\nexport default GAS\n","import React, { Component } from 'react';\nimport { Modal, Input } from 'antd';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nexport default class RemarkModal extends Component {\n    state = {\n        remark: this.props.remarkValue.remark,\n        editor: this.props.remarkValue.editor,\n    }\n\n\n    \n    componentDidMount() {\n        console.log(\"RemarkModal componentDidMount\");\n        console.log(\"RemarkModal caseinfo: \" + JSON.stringify(this.props.caseinfo));\n        this.onInputChange = this.onInputChange.bind(this);\n        this.onOkClick = this.onOkClick.bind(this);\n    }\n\n    onInputChange(event) {\n        this.setState({ remark: event.target.value })\n    }\n\n    onOkClick() {\n        const { name, transinId, type, remarkId } = this.props.remarkValue\n        const { remark, editor, } = this.state;\n        let fixTime = moment().format('X');\n\n\n        // console.log(`editor : ${editor}`)\n        // console.log(`name : ${name}`)\n        // console.log(`remark : ${remark}`)\n        // console.log(`remarkId : ${remarkId}`)\n        // console.log(`fixTime: ${fixTime}`)\n        // console.log(`transinId : ${transinId}`)\n        // console.log(`type : ${type}`)\n\n        ApiProvider.createRemark(name, remark, remarkId, fixTime, transinId, type, editor)\n            .then(result => {\n                console.log(\"createRemark OK \" + JSON.stringify(result));\n                this.props.onOk(result.data.remark);\n            })\n            .catch(err => {\n                console.log(\"createRemark NG \" + JSON.stringify(err));\n            });\n    }\n\n    render() {\n        const { TextArea } = Input;\n        const { createTime, name } = this.props.remarkValue;\n        const onCancel = this.props.onCancel;\n        const onOk = this.onOkClick.bind(this);\n\n        return (\n            <Modal\n                title=\"備註\"\n                visible={this.props.visible}\n                onOk={onOk}\n                onCancel={onCancel}>\n                <div style={{ display: \"grid\", gridTemplateRows: \"30px 30px 30px 30px\" }}>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div>開立時間: {createTime}</div>\n                        <div>上次編輯時間: </div>\n                        {/* <div>上次編輯時間: {this.state.editTime}</div> */}\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div>處理名稱: {name}</div>\n                        <div>上次編輯人: {this.state.editor}</div>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div>頻次:</div>\n                        <div>開立醫師: {this.state.editor}</div>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>備註內容:</div>\n                    <TextArea rows={5} placeholder=\"請輸入備註內容\" value={this.state.remark} onChange={this.onInputChange} />\n                </div>\n            </Modal>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './RTbreathtablecell.scss'\nimport * as FiliterReg from '../../Function/FiliterReg'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment';\n\nclass RTbreathetablecell extends Component {\n    state = {\n        onCell: false,\n        onEdit: false,\n        remark: null,\n        powerLogin: 0\n    }\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    Mouse_move() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onCell: true\n                }\n            )\n        }\n    }\n\n    Mouse_leave() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onCell: false\n                }\n            )\n        }\n    }\n\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n    render() {\n        const { value, caseinfo } = this.props\n        console.log(value)\n        const time = moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\")\n        const setting = value.Mode.toString().trim()\n        const mode = value.Setting.toString().trim()\n\n        const remarkValue = {\n            \"createTime\": time,\n            \"name\": setting,\n            \"remarkId\": \"\",\n            \"remark\": \"\",\n            \"transinId\": caseinfo.TRANSINID,\n            \"type\": \"RTbreath\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n        return (\n            <div>\n                <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n                <div onMouseMove={() => this.Mouse_move()} onMouseLeave={() => this.Mouse_leave()} className=\"RTtablecell\">\n                    <t3 className='RTBreathDateCell'>{time}</t3>\n                    <div style={{ display: \"grid\", gridTemplateRows: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"100px\" : \"50px 50px\"] }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\" }}>\n                            <t3 style={{ display: \"flex\", alignItems: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\", padding: \"0px 5px\" }}>{setting}</t3>\n                            <t3 style={{ display: \"flex\", alignItems: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\", padding: \"0px 5px\" }}>{mode}</t3>\n                        </div>\n                        <t3 style={{ display: \"flex\", alignItems: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\", padding: \"0px 5px\", display: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"none\" : \"\"] }}>{this.state.remark}</t3>\n                    </div>\n                    <div style={this.state.onCell ? { display: this.state.powerLogin >= 2 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", right: 0, height: \"100px\", background: \"white\", width: \"77px\", border: \"rgba(238,238,238,1) 1px solid\" } : { display: \"none\" }}>\n                        <div onClick={() => this.Edit_state()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <img src={chooseedit} alt='chooseedit'></img>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTbreathetablecell\n","import React, { Component } from 'react';\nimport RTbreathetablecell from './RTbreathtablecell'\nimport * as FilterReg from '../../Function/FiliterReg'\nimport moment from 'moment'\n\nclass RTbreathetable extends Component {\n\n    createRTbreathetable = () => {\n        const { DataList, caseinfo } = this.props\n\n        const RTbreathetable = DataList.map(\n            (value, index, array) =>\n                <RTbreathetablecell key={index} value={value} caseinfo={caseinfo}></RTbreathetablecell>\n        )\n        return RTbreathetable\n    }\n\n    render() {\n        return (\n            <div>\n                <div style={{ height: \"50px\", display: \"grid\", gridTemplateColumns: \"1fr 3fr 3fr\", backgroundColor: \"#E2EDF3\", border: \"rgba(238,238,238,1) 1px solid\" }}>\n                    <t3 style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>紀錄日期</t3>\n                    <t3 style={{ display: \"flex\", alignItems: \"center\", padding: \"0px 5px\" }}>Mode</t3>\n                    <t3 style={{ display: \"flex\", alignItems: \"center\", padding: \"0px 5px\" }}>Setting</t3>\n                </div>\n                <div style={{ maxHeight: \"400px\", overflow: \"auto\" }}>\n                    {this.createRTbreathetable()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTbreathetable\n","import React, { Component } from 'react';\nimport RTbreathetable from './RTbreathetable'\nimport { DatePicker } from 'antd';\nimport * as FilterReg from '../../Function/FiliterReg'\nimport X2JS from 'x2js';\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\n\nclass RTbreathe extends Component {\n    state = {\n        DateRange: [moment(), moment()],\n        preCID: null,\n        QSPE: []\n    }\n    componentDidMount() {\n        function formatCrossectionTimer(PickerDate, source, daterange) {\n            if (source === \"crossection\") {\n                const et = PickerDate + (31 * 60 * 60 * 1000)\n                const st = et - (3 * 24 * 60 * 60 * 1000)\n                return [st, et]\n            }\n            const et = daterange[1].valueOf()\n            const st = daterange[0].valueOf()\n            if (st === et) {\n                return [st, st + (24 * 60 * 60 * 1000)]\n            }\n            return [st, et]\n        }\n        const { caseinfo, source, PickerDate } = this.props\n        const Timer = formatCrossectionTimer(PickerDate, source, this.state.DateRange)\n        this.setState({ preCID: caseinfo.CASEID })\n        this.getQSPEApi(caseinfo.CASEID, Timer[0], Timer[1])\n\n    }\n    componentDidUpdate() {\n        function formatCrossectionTimer(PickerDate, source, daterange) {\n            if (source === \"crossection\") {\n                const et = PickerDate + (31 * 60 * 60 * 1000)\n                const st = et - (3 * 24 * 60 * 60 * 1000)\n                return [st, et]\n            }\n            const et = daterange[1].valueOf()\n            const st = daterange[0].valueOf()\n            if (st === et) {\n                return [st, st + (24 * 60 * 60 * 1000)]\n            }\n            return [st, et]\n        }\n        const { caseinfo, source, PickerDate } = this.props\n        const CID = caseinfo.CASEID\n        const preCID = this.state.preCID\n        if (CID !== preCID) {\n            const Timer = formatCrossectionTimer(PickerDate, source, this.state.DateRange)\n            this.setState({ preCID: caseinfo.CASEID })\n            this.getQSPEApi(caseinfo.CASEID, Timer[0], Timer[1])\n        }\n    }\n    getQSPEApi(CID, st, et) {\n        const xm2 = new X2JS()\n        ApiProvider.getQSPE(CID, st, et)\n            .then(data => {\n                console.log(xm2.xml2js(data.data).outmsg.resconts.rescont)\n                const result = xm2.xml2js(data.data).outmsg\n                if (Number(result.ret) === 0) {\n                    const resultData = result.resconts.rescont\n                    if (Array.isArray(resultData)) {\n                        this.setState({ QSPE: resultData })\n                    }\n                    else {\n                        this.setState({ QSPE: [resultData] })\n                    }\n                }\n                return []\n            })\n            .catch(err => {\n                console.log(\"getQSPE NG \" + JSON.stringify(err))\n            });\n    }\n\n    createRTbreathetable = () => {\n        function formatCrossectionTimer(PickerDate, source, daterange) {\n            if (source === \"crossection\") {\n                const et = PickerDate + (31 * 60 * 60 * 1000)\n                const st = et - (3 * 24 * 60 * 60 * 1000)\n                return [st, et]\n            }\n            const et = daterange[1].valueOf()\n            const st = daterange[0].valueOf()\n            if (st === et) {\n                return [st, st + (24 * 60 * 60 * 1000)]\n            }\n            return [st, et]\n        }\n        const { caseinfo, source, PickerDate } = this.props\n        const QSPE = this.state.QSPE\n        const Timer = formatCrossectionTimer(PickerDate, source, this.state.DateRange)\n        let DataList = FilterReg.QSPERegList(QSPE)\n        DataList = DataList.filter(data => {\n            let time = moment(data.Date + data.Time, \"YYYYMMDDHHmm\").valueOf()\n            return Timer[0] <= time && time <= Timer[1]\n        })\n        console.log(DataList)\n        return <RTbreathetable DataList={DataList} caseinfo={caseinfo}></RTbreathetable>\n    }\n\n    render() {\n        const { searchbar } = this.props\n        const { RangePicker } = DatePicker;\n\n        return (\n            <div style={{ marginBottom: \"20px\" }}>\n                <t1>呼吸器設定紀錄</t1>\n                <div style={{ marginBottom: \"5px\", display: \"grid\", gridTemplateColumns: \"220px 1fr 25px\", gridColumnGap: \"10px\" }}>\n                    {searchbar ? <RangePicker placeholder={[\"請輸入日期\", \"請輸入日期\"]} onChange={(date, datestring) => { this.setState({ DateRange: [date[0].valueOf(), date[1].valueOf()] }) }} allowClear={false} /> : null}\n                </div>\n                {this.createRTbreathetable()}\n            </div>\n        );\n    }\n}\n\nexport default RTbreathe\n","import React, { Component } from 'react';\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Prescriptionordertablecell.scss'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Prescriptionordertablecell extends Component {\n    state = {\n        onEdit: false,\n        onMove: false,\n        remark: '',\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { caseinfo, value } = this.props\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, value.UDORDSEQ, \"prescription\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    on_Mouse() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: true\n                }\n            )\n        }\n    }\n    on_leave() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: false\n                }\n            )\n        }\n    }\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    checkStatus = () => {\n        const { value, SelectMode } = this.props\n        const ET = moment(value.UDENDDT, \"YYYY-MM-DD-HH:mm:ss.000000\").valueOf()\n\n        if (SelectMode !== undefined) {\n            const Status = SelectMode === 0 || SelectMode === 1 ? \"生效中\" : \"已結束\";\n            return Status\n        } else {\n            const nowT = moment().valueOf()\n            const Status = ET < nowT ? \"已終止\" : \"生效中\";\n            return Status\n        }\n    }\n\n    render() {\n        const { caseinfo, value } = this.props\n        const Name = value.UDGNAME.toString()\n        const PName = value.UDRPNAME.toString()\n        const Unit = value.UDDOSAGE.toString() + \"/\" + value.UDDUNIT.toString() + \"/\" + value.UDFREQN.toString() + \"/\" + value.UDROUTE.toString()\n        const ST = moment(value.UDBGNDT, \"YYYY-MM-DD-HH:mm:ss.000000\").format('YYYY/MM/DD HH:mm:ss')\n        const ET = moment(value.UDENDDT, \"YYYY-MM-DD-HH:mm:ss.000000\").format('YYYY/MM/DD HH:mm:ss')\n        const Status = this.checkStatus()\n\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": PName,\n            \"remarkId\": value.UDORDSEQ,\n            \"remark\": this.state.remark,\n            \"transinId\": caseinfo.TRANSINID,\n            \"type\": \"prescription\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <div onMouseMove={() => this.on_Mouse()} onMouseLeave={() => this.on_leave()} className='prescriptiontablecell'>\n                <div style={{ display: \"grid\", gridTemplateRows: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"100px\" : \"80px 50px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 2fr 1fr 1fr 1fr\" }}>\n                        <div className='prescriptiontablecellcontext'><t4 className='prescriptiontablecellcontexttext'>{Name}</t4></div>\n                        <div className='prescriptiontablecellcontext'><t4 className='prescriptiontablecellcontexttext'>{PName}</t4></div>\n                        <div className='prescriptiontablecellcontext'><t3 className='prescriptiontablecellcontexttext'>{Unit}</t3></div>\n                        <div className='prescriptiontablecellcontext'><t3 className='prescriptiontablecellcontexttext'>{Status}</t3></div>\n                        <div className='prescriptiontablecellcontext'><t3 className='prescriptiontablecellcontexttext'>{ST}</t3></div>\n                        <div className='prescriptiontablecellcontext'><t3 className='prescriptiontablecellcontexttext'>{ET}</t3></div>\n                    </div>\n                    <t3 style={{ display: \"flex\", alignItems: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\", padding: \"0px 5px\", display: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"none\" : \"\"] }}>{this.state.remark}</t3>\n                    <div style={this.state.onMove ? { display: this.state.powerLogin >= 2 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", right: 0, height: [this.state.remark === undefined || this.state.remark === \"\" ? \"100px\" : \"130px\"], background: \"white\", width: \"77px\", border: \"rgba(238,238,238,1) 1px solid\" } : { display: \"none\" }}>\n                        <div onClick={() => this.Edit_state()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <img src={chooseedit} alt='chooseedit'></img>\n                        </div>\n                    </div>\n                </div>\n                <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            </div>\n        );\n    }\n}\n\nexport default Prescriptionordertablecell\n","import React, { Component } from 'react';\nimport Prescriptionordertablecell from './Prescriptionordertablecell'\nimport './Prescriptionordertable.scss'\n\n\nclass Prescriptionordertable extends Component {\n    render() {\n        const { UDORDER0, caseinfo, SelectMode } = this.props\n        const title = [\"學名\", \"商品名\", \"劑量/單位/途徑/頻次\", \"狀態\", \"開始日期\", \"結束日期\"]\n        const titlecell = title.map(function (value, index, arr) {\n            return (\n                <t3 className='title'>{value}</t3>\n            );\n        })\n        const Prescriptionordertabletable = UDORDER0.map(\n            (value, index, array) =>\n                <Prescriptionordertablecell caseinfo={caseinfo} key={index} value={value} SelectMode={SelectMode}></Prescriptionordertablecell>\n        )\n        return (\n            <div>\n                <div className='Prescriptionordertablelayout'>\n                    {titlecell}\n                </div>\n                <div style={{ maxHeight: \"400px\", overflow: \"auto\" }}>\n                    {Prescriptionordertabletable}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Prescriptionordertable\n","import React, { Component } from 'react';\nimport Prescriptionordertable from './Prescriptionordertable'\nimport { DatePicker, Select, Input, Button } from 'antd';\nimport searchlogo from '../../Image/svg/Search.svg'\nimport './Prescriptionorder.scss'\nimport moment from 'moment'\nimport * as ApiGithub from '../../API/ApiGithub'\n\n// var DateRange, SelectData\nclass Prescriptionorderlayout extends Component {\n    state = {\n        InputMode: null,\n        whiteListParser: undefined,\n        classParser: { \"mappings\": [] },\n        DateRangeMode: {},\n        class: \"全部\",\n        SelectMode: 0,\n        search: false\n    }\n    componentDidMount() {\n        ApiGithub.getGitHubJson(\"WhiteList.json\")\n            .then(data => {\n                let parser = data.data;\n                this.setState({\n                    whiteListParser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Prescription\");\n                parser.mappings = [{ \"key\": \"全部\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson Prescription OK \" + JSON.stringify(parser))\n                this.setState({\n                    classParser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    onDateRangeChange = (date, dateString) => {\n        let timeRange = {\n            'st': date[0].valueOf(),\n            'et': date[1].valueOf()\n        }\n        this.setState({\n            DateRangeMode: timeRange\n        })\n    }\n\n    onChangeClass = (value) => {\n        this.setState({\n            class: value\n        })\n    }\n\n    handleChange = (value) => {\n        this.setState({\n            SelectMode: value\n        })\n    }\n\n    onClickSearch = (e) => {\n        const inputdata = document.querySelector(\"#prescriptionorderinput\").value\n\n        // if (inputdata === undefined || inputdata === \" \" || inputdata === null) {\n        //     return null\n        // }\n        // if (sT === undefined || sT === null || sT === \" \" || eT === undefined || eT === null || eT === \" \") {\n        //     return null\n        // }\n\n        this.setState({\n            // SelectMode: SelectData,\n            InputMode: inputdata,\n            // DateRangeMode: DateRange\n        })\n\n    }\n\n    select_parser = (input, parser) => {\n        if (parser === undefined) return undefined;\n        return parser.find(x =>\n            input.match(x.apply_condition.name)\n        )\n    }\n\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {\n            \"white\": [],\n            \"black\": []\n        };\n        const UDGNAME_condition = mappings.find(item => item.key === \"UDGNAME\");\n        const UDRPNAME_condition = mappings.find(item => item.key === \"UDRPNAME\");\n        inputs.forEach(input => {\n            const UDGNAME_re = new RegExp(UDGNAME_condition.regex_str, UDGNAME_condition.regex_flags)\n            const UDGNAME_match = input.UDGNAME.match(UDGNAME_re)\n\n            const UDRPNAME_re = new RegExp(UDRPNAME_condition.regex_str, UDRPNAME_condition.regex_flags)\n            const UDRPNAME_match = input.UDRPNAME.match(UDRPNAME_re)\n\n            if (UDGNAME_match !== null && UDRPNAME_match !== null) {\n                allResult[\"white\"].push(input);\n            } else {\n                allResult[\"black\"].push(input);\n            }\n        });\n\n        return allResult;\n    }\n\n    parseClass = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部\"] = []\n\n        inputs.forEach(input => {\n            let content = input.UDGNAME;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部\"].push(input)\n        });\n        return allResult;\n    }\n\n    ControlBarRender() {\n        const { RangePicker } = DatePicker;\n        const { Option } = Select;\n        return (\n\n            <div class=\"searchBar\" style={{ display: \"grid\", gridTemplateColumns: \"220px 130px 110px 150px auto\", gridColumnGap: \"10px\", marginBottom: \"5px\" }}>\n                <RangePicker placeholder={[\"請輸入日期\", \"請輸入日期\"]} onChange={this.onDateRangeChange} allowClear={false} />\n                <Select defaultValue={this.state.class} style={{ width: 130 }} onChange={this.onChangeClass}>\n                    {this.state.classParser.mappings.map((mapping, index) => {\n                        return <Option value={mapping.key}>{mapping.key}</Option>\n                    })}\n                </Select>\n                <Select defaultValue={this.state.SelectMode} style={{ width: 110 }} onChange={this.handleChange}>\n                    <Option value={0}>全</Option>\n                    <Option value={1}>生效中</Option>\n                    <Option value={2}>失效/已結束/取消</Option>\n                </Select>\n                <Input id=\"prescriptionorderinput\" placeholder=\"輸入藥囑關鍵字\" />\n                <Button onClick={this.onClickSearch.bind(this)} shape=\"circle\" icon=\"search\" style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }} />\n                {/* <div  onClick={this.onClickSearch} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", color: \"blue\", textDecoration: \"underline\", cursor: \"pointer\" }}>\n                    <img src={searchlogo} alt=\"searchlogo\" />\n                </div> */}\n            </div >\n        );\n    }\n\n    SortDataList = (DataList) => {\n        console.log(JSON.stringify(DataList))\n        const { searchbar, PickerDate } = this.props\n        const { InputMode, SelectMode, DateRangeMode } = this.state\n\n        if (SelectMode !== 0) {\n            console.log(SelectMode)\n            /*\n            預設\n            全部 SelectMode == 0\n            已生效 SelectMode == 1, < 現在時間 <\n            失效 SelectMode == 2, < 現在時間\n            */\n            DataList = DataList.filter(data => {\n                const createST = moment(data.UDBGNDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n                const createET = moment(data.UDENDDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n                const nowT = moment().valueOf()\n\n                switch (SelectMode) {\n                    case 1:\n                        return createST <= nowT && nowT <= createET\n                        break;\n                    case 2:\n                        console.log(createET, nowT)\n                        return createET < nowT\n                        break;\n                    default: return null;\n                }\n            })\n        }\n\n        if (InputMode !== null) {\n            console.log(InputMode)\n            DataList = DataList.filter(data => {\n                return data.UDGNAME.match(InputMode) !== null || data.UDRPNAME.match(InputMode) !== null\n            })\n        }\n\n        var DataFormat = []\n        const et = searchbar ? DateRangeMode.et : PickerDate + (31 * 60 * 60 * 1000)\n        const st = searchbar ? DateRangeMode.st : et - (3 * 24 * 60 * 60 * 1000)\n        for (let index = 0; index < DataList.length; index++) {\n            const element = DataList[index];\n            const time = moment(element.UDBGNDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n            if (st <= time && time <= et) {\n                DataFormat.push(element)\n            }\n        }\n        return DataFormat\n    }\n\n    render() {\n        const { searchbar, UDORDER0, caseinfo } = this.props\n        const { SelectMode } = this.state\n\n        const controlBar = this.ControlBarRender()\n\n        const parseClass = this.parseClass;\n\n        const selected_parser = this.select_parser(\"Prescription\", this.state.whiteListParser)\n\n        let ListData = [];\n        if (selected_parser !== undefined) {\n            const whiteBlackList = this.parse(UDORDER0, selected_parser)\n            console.log(\"whiteBlackList \" + JSON.stringify(whiteBlackList));\n\n            let clusteredData = {}\n            if (this.state.classParser !== undefined) {\n                clusteredData = parseClass(whiteBlackList[\"white\"], this.state.classParser)\n            }\n            console.log(\"clusteredData \" + JSON.stringify(clusteredData));\n\n            //filter data by selected class\n            let filteredData = clusteredData[this.state.class];\n\n            ListData = this.SortDataList(filteredData)\n        }\n\n        return (\n            <div>\n                <div className={searchbar ? 'PrescriptionOrderSearchBar' : 'PrescriptionOrderNonSearchBar'}>\n                    <t1>Prescription Order</t1>\n                </div>\n                {searchbar ? controlBar : null}\n                <Prescriptionordertable caseinfo={caseinfo} UDORDER0={ListData} SelectMode={SelectMode}></Prescriptionordertable>\n            </div>\n        );\n    }\n}\n\nexport default Prescriptionorderlayout\n","import React, { Component } from 'react';\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Treatmentordertablecell.scss'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Treatmentordertablecell extends Component {\n    state = {\n        onEdit: false,\n        onMove: false,\n        remark: this.props.info.remark,\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { info } = this.props\n        ApiProvider.getOneRemark(this.props.caseinfo.TRANSINID, info.ORDSEQNO, \"treatment\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    on_Mouse() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: true\n                }\n            )\n        }\n    }\n    on_leave() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: false\n                }\n            )\n        }\n    }\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    render() {\n        const { info } = this.props\n        // console.log(info)\n        const Name = info.ORPROCED\n        const QD = info.ORFREQN\n        const Status = info.ORSTATUS\n        const ST = moment(info.ORBGNDT.toString(), 'YYYY-MM-DD').format(\"MM/DD\")\n        const ET = moment(info.ORENDDT.toString(), 'YYYY-MM-DD').format(\"MM/DD\")\n\n\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": Name,\n            \"remarkId\": info.ORDSEQNO,\n            \"remark\": this.state.remark,\n            \"transinId\": this.props.caseinfo.TRANSINID,\n            \"type\": \"treatment\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <div onMouseMove={() => this.on_Mouse()} onMouseLeave={() => this.on_leave()} className=\"treatmentordercell\">\n                <div style={{ display: \"grid\", gridTemplateRows: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"100px\" : \"80px 50px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 3fr 1fr 1fr\" }}>\n                        <t3 className='cellstyle'>{ST}</t3>\n                        <t3 className='cellstyle'>{ET}</t3>\n                        <t3 className='cellstyle'>{Name}</t3>\n                        <t3 className='cellstyle'>{QD}</t3>\n                        <t3 className='cellstyle'>{Status}</t3>\n                    </div>\n                    <t3 className='cellstyle' style={{ display: [this.state.remark === undefined || this.state.remark === \"\" ? \"none\" : \"\"] }}>{this.state.remark}</t3>\n                    <div style={this.state.onMove ? { display: this.state.powerLogin >= 2 ? \"flex\" : \"none\", justifyContent: \"center\", alignItems: \"center\", position: 'absolute', right: 0, height: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"100px\" : \"130px\"], background: \"white\", width: \"77px\", border: \"rgba(238,238,238,1) 1px solid\" } : { display: \"none\" }}>\n                        <div onClick={() => this.Edit_state()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <img src={chooseedit} alt='chooseedit'></img>\n                        </div>\n                    </div>\n                </div>\n                <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n                {/* <RemarkModal caseinfo={this.props.caseinfo} type=\"treatment\" name={Name} visible={this.state.onEdit} remark={this.state.remark} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal> */}\n            </div>\n        );\n    }\n}\nexport default Treatmentordertablecell\n","import React, { Component } from 'react';\nimport Treatmentordertablecell from './Treatmentordertablecell'\nimport './Treatmentordertable.scss'\nimport moment from 'moment'\n\nclass Treatmentordertable extends Component {\n    render() {\n        const { TRTMNT01, caseinfo, PickerDate } = this.props\n\n        // function SortDataList(DataList, PickerDate) {\n        //     //Format UDORDER0\n        //     var DataFormat = []\n        //     const et = PickerDate + (24 * 60 * 60 * 1000)\n        //     const st = et - (3 * 24 * 60 * 60 * 1000)\n        //     for (let index = 0; index < DataList.length; index++) {\n        //         const element = DataList[index];\n        //         const time = moment(element.ORBGNDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n        //         console.log(st, et)\n        //         console.log(time)\n        //         //if (st <= time && time <= et) {\n        //         DataFormat.push(element)\n        //         //}\n        //     }\n        //     return DataFormat\n        // }\n\n        if (TRTMNT01 === null || TRTMNT01 === undefined) {\n            return null\n        }\n        const DataList = TRTMNT01//SortDataList(TRTMNT01, PickerDate)\n        const Treatmentordertablecelllist = DataList.map(\n            (info, index) => <Treatmentordertablecell caseinfo={caseinfo} key={index} info={info}></Treatmentordertablecell>\n\n        )\n        const titlearray = ['開始日期', '結束日期', '處置名稱', '頻次', '狀態']\n        function titlecell(array) {\n            const result = array.map(function (info, index) {\n                return (\n                    <t3 className=\"treatmentordertablecellstyle\" key={index}>{info}</t3>\n                );\n            })\n            return result\n        }\n        return (\n            <div>\n                <div className='treatmentordertable'>\n                    {titlecell(titlearray)}\n                </div>\n                <div style={{ maxHeight: \"400px\", overflow: \"auto\" }}>\n                    {Treatmentordertablecelllist}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Treatmentordertable\n","import React, { Component } from 'react';\nimport Treatmentordertable from './Treatmentordertable'\nimport { DatePicker, Select, Input, Button } from 'antd';\nimport searchlogo from '../../Image/svg/Search.svg'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport moment from 'moment'\n\nclass Treatmentorderlayout extends Component {\n    state = {\n        class: \"全部\",\n        parser: { \"mappings\": [] },\n        startTime: '',\n        endTime: '',\n        selectedValue: 0,\n        inputKey: '',\n        filteredDataState: []\n    }\n\n    componentDidMount() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Treatment\");\n                parser.mappings = [{ \"key\": \"全部\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson Treatment OK \" + JSON.stringify(parser))\n                this.setState({\n                    parser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    onChangeClass = (value) => {\n        this.setState({ class: value })\n    }\n    onChange(date, dateString) {\n        console.log(date, dateString);\n        const st = date[0].valueOf()\n        const et = date[1].valueOf()\n        this.setState({ startTime: st, endTime: et })\n    }\n    handleChange(value) {\n        this.setState({ selectedValue: value })\n    }\n    onChangeinputKey(event) {\n        this.setState({ inputKey: event.target.value })\n    }\n    onClickSearch() {\n        const { TRTMNT01 } = this.props\n        const parse = this.parse;\n        let DataFormat = []\n\n        let clusteredData = {}\n        if (this.state.parser !== undefined) {\n            clusteredData = parse(TRTMNT01, this.state.parser)\n        }\n\n        //filter data by selected class\n        let filteredData = clusteredData[this.state.class];\n\n        for (let index = 0; index < filteredData.length; index++) {\n            const element = filteredData[index];\n            const time = moment(element.ORBGNDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n\n            if (this.state.startTime <= time && time <= this.state.endTime && element.ORPROCED.includes(this.state.inputKey)) {\n                DataFormat.push(element)\n            }\n        }\n        this.setState({ filteredDataState: DataFormat })\n    }\n\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部\"] = []\n\n        inputs.forEach(input => {\n            let content = input.ORPROCED;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部\"].push(input)\n        });\n        return allResult;\n    }\n\n    Search_bar() {\n        const { searchbar } = this.props\n        const { RangePicker } = DatePicker;\n        const { Option } = Select;\n        function onChange(date, dateString) {\n            console.log(date, dateString);\n        }\n\n        const onChangeClass = this.onChangeClass;\n        function handleChange(value) {\n            console.log(`selected ${value}`);\n        }\n        if (searchbar) {\n            return (\n                <div style={{ display: \"grid\", gridTemplateColumns: \"220px 130px 110px 150px auto\", gridColumnGap: \"10px\", marginBottom: \"5px\" }}>\n                    <RangePicker placeholder={[\"請輸入日期\", \"請輸入日期\"]} onChange={this.onChange.bind(this)} allowClear={false} />\n                    <Select defaultValue={this.state.class} style={{ width: 130 }} onChange={onChangeClass}>\n                        {this.state.parser.mappings.map((mapping, index) => {\n                            return <Option value={mapping.key}>{mapping.key}</Option>\n                        })}\n                    </Select>\n                    <Select defaultValue={0} style={{ width: 110 }} onChange={this.handleChange.bind(this)}>\n                        <Option value={0}>生效中</Option>\n                        <Option value={1}>失效/已結束/取消</Option>\n                    </Select>\n                    <Input placeholder=\"輸入藥囑關鍵字\" value={this.state.inputKey} onChange={this.onChangeinputKey.bind(this)} />\n                    <Button shape=\"circle\" icon=\"search\" onClick={this.onClickSearch.bind(this)} />\n                    {/* <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <img src={searchlogo} alt=\"searchlogo\" />\n                    </div> */}\n                </div>\n            );\n        }\n        else return null\n    }\n\n    render() {\n        const { searchbar, TRTMNT01, caseinfo, PickerDate } = this.props\n        const style = {\n            crossection_style: { display: 'flex', justifyContent: 'space-between', alignItems: 'center', height: '50px', padding: \"0px 5px\", background: \"#cccccc\" },\n            order_style: { display: 'flex', justifyContent: 'space-between', alignItems: 'center', height: '40px', paddingLeft: \"5px\", paddingRight: \"5px\" }\n        }\n        // const parse = this.parse;\n\n        // let clusteredData = {}\n        // if (this.state.parser !== undefined) {\n        //     clusteredData = parse(TRTMNT01, this.state.parser)\n        // }\n\n        //filter data by selected class\n        //let filteredData = clusteredData[this.state.class];\n        return (\n            <div>\n                <div style={searchbar ? style.order_style : style.crossection_style}>\n                    <t1>Treatment Order</t1>\n                </div>\n                {this.Search_bar()}\n                <Treatmentordertable caseinfo={caseinfo} TRTMNT01={this.state.filteredDataState} PickerDate={PickerDate}></Treatmentordertable>\n            </div>\n        );\n    }\n}\n\nexport default Treatmentorderlayout\n","import React, { Component } from 'react';\nimport detaillogo from '../Image/svg/details.svg'\nimport { Tooltip } from 'antd';\n\nclass Notecell extends Component {\n    \n    updatetime_format(updatetime){\n        function monthformat(month){\n            return month + 1\n        }\n        return new Date(updatetime).getFullYear() + \"-\" + monthformat(new Date(updatetime).getMonth()) + \"-\" +new Date(updatetime).getDate() + \" \" + new Date(updatetime).getHours() + \":\" + new Date(updatetime).getMinutes()\n    }\n    render() {\n        const { info } = this.props\n        const text = info.updatedoctor + \"醫師於\" + this.updatetime_format(info.updatetime) + \"更新\"   \n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"19fr 1fr\", minHeight: \"50px\" }}>\n                <div style={{ wordBreak: \"break-all\", fontSize: \"1.3rem\", display: \"flex\", alignItems: \"center\" }}>{info.data}</div>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <Tooltip placement=\"right\" title={text}>\n                        <div>\n                            <img src={detaillogo} alt='detaillogo'></img>\n                        </div>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Notecell","import React, { Component } from 'react';\nimport Notecell from './Notecell'\nimport editlogo from '../Image/svg/Edit.svg'\nimport { Input, Button } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider';\nimport moment from 'moment';\nclass Note extends Component {\n    state = {\n        powerLogin: 0,\n        EditMode: false,\n        inputContent: '',\n        noteData: [],\n        PickerDate: moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.queryNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.HISID, this.state.PickerDate)\n    }\n    componentDidUpdate() {\n        const propDate = this.props.PickerDate\n        const stateDate = this.state.PickerDate\n        if (propDate !== stateDate) {\n            this.setState({ PickerDate: propDate })\n            this.queryNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.HISID, propDate)\n        }\n    }\n    queryNotice(TRANSID, HISID, pickerdate) {\n        const st = moment(moment(pickerdate).format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n        const et = moment(moment(pickerdate).format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf() + (24 * 60 * 60 * 1000)\n        console.log(TRANSID, HISID, st, et)\n        console.log(moment(st).format(\"YYYY/MM/DD\"))\n        console.log(moment(et).format(\"YYYY/MM/DD\"))\n        ApiProvider.getOnePatientNotice(TRANSID, HISID, st, et)\n            .then(result => {\n                console.log(\"getOnePatientNotice OK \" + JSON.stringify(result));\n                this.setState({\n                    noteData: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientNotice NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n    // queryOnePatientNotice() {\n    //     ApiProvider.getOnePatientNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID)\n    //         .then(data => {\n    //             console.log(\" OK \" + JSON.stringify(data))\n    //             this.setState({ noteData: data.data })\n    //         }).catch(err => { })\n    // }\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString()\n        const doc = sessionStorage.getItem('user')\n        ApiProvider.createNotice(this.props.caseinfo.HISID, this.state.inputContent, timeNowStr, this.props.caseinfo.TRANSINID, doc)\n            .then(data => {\n                this.queryNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID, this.props.PickerDate)\n            })\n            .catch(err => {\n                console.log(\" Err \" + JSON.stringify(err))\n            })\n        this.setState(\n            {\n                EditMode: false,\n                inputContent: undefined\n            }\n        )\n    }\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    EditControl() {\n        const edit = this.props.editstatus\n        if (edit) {\n            return (\n                <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin > 0 ? \"flex\" : \"none\" }}>\n                    <img src={editlogo} alt=\"editlogo\" />\n                </div>\n            );\n        }\n        return null\n    }\n    render() {\n        const List = this.state.noteData\n        console.log(List)\n        const notelist = List.map((info, index) => {\n            const time = moment(info.time, \"YYYY-MM-DD[T]HH:mm:ss.000+0000\").format('YYYY-MM-DD HH:mm:ss')\n            const localTime = moment.utc(time).toDate()\n            const infoObj = {\n                updatedictor: info.doc,\n                updatetime: moment(localTime).format(\"YYYY/MM/DD HH:mm:ss\"),\n                data: info.context\n            }\n            return <Notecell key={index} info={infoObj}></Notecell>\n        })\n        const EditButton = this.EditControl()\n        return (\n            <div style={{ marginTop: \"10px\", borderRadius: \"4px\" }}>\n                <div style={{ height: \"50px\", backgroundColor: \"#cccccc\", padding: \"0px 5px\", display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                    <t2>{this.props.title}</t2>\n                    {EditButton}\n                </div>\n                <div style={{ height: \"300px\" }}>\n                    <div style={{ maxHeight: \"300px\", overflow: \"auto\" }}>\n                        {notelist}\n                    </div>\n                    <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                        <div style={{ padding: \"5px 10px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <Input placeholder=\"輸入當日內容\" value={this.state.inputContent} onChange={this.onInputChange.bind(this)}></Input>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                                <Button onClick={() => this.onClickCancel()}>取消</Button>\n                                <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Note","import React, { Component } from 'react';\nimport Schedule_event_list from '../../Module/Schedule_event'\nimport Note from '../../Module/Note'\nclass Crossection_schedule extends Component {\n    render() {\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\" }}>\n                <Schedule_event_list source={this.props.source}  PickerDate={this.props.PickerDate} title=\"排程與事件\" caseinfo={this.props.caseinfo} editstatus={this.props.editstatus}></Schedule_event_list>\n                <Note title=\"當日評論Comment\" PickerDate={this.props.PickerDate} caseinfo={this.props.caseinfo} data={this.props.noticeData} editstatus={this.props.editstatus}></Note>\n            </div>\n        );\n    }\n}\n\nexport default Crossection_schedule;","import React, { Component } from 'react';\nimport Todolayout from '../../Module/Todo';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport Wardinfousercheckbox from '../../Wardview/Wardunfousercheckbox';\n\nclass Crosssection_todo extends Component {\n    state = {\n        todoList: []\n    }\n\n    componentDidMount() {\n        this.queryTodo();\n    }\n\n    queryTodo() {\n        ApiProvider.getOneTodo(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID)\n        .then(result => {\n            console.log(\"getOneTodo OK \" + JSON.stringify(result.data));\n            this.setState({\n                todoList: result.data\n            })\n        })\n        .catch(err => {\n            console.log(\"getOneTodo NG \" + JSON.stringify(err));\n        });\n    }\n\n    renderTodoItem() {\n        if (this.state.todoList.length === 0) {\n            return (\n                <div>沒有待辦事項</div>\n            )\n        } else {\n            return this.state.todoList.map((item, index) => {\n                if (item.type === \"未完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={false}></Wardinfousercheckbox>)\n                } else if (item.type === \"已完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={true}></Wardinfousercheckbox>)\n                }\n\n            });\n        }\n    }\n\n    render() {\n        const renderTodoItem = this.renderTodoItem.bind(this);\n        return (\n            <div>\n                <div style={{display:\"flex\",alignItems:\"center\",padding:\"0px 5px\",backgroundColor:\"#cccccc\",height:\"50px\"}}>\n                    <t2>To Do List</t2>\n                </div>\n                {renderTodoItem()}\n            </div>\n        );\n    }\n}\n\nexport default Crosssection_todo\n","import React, { Component } from 'react';\nimport { Checkbox ,Tooltip} from 'antd';\nimport { todo_data } from '../jsonResponse'\nimport detaillogo from '../Image/svg/details.svg'\nimport './Todo.scss'\n\nclass Todolayout extends Component {\n    state = {\n        Editstate: \"none\"\n    }\n\n    Editclick(editchange) {\n        console.log(editchange)\n        this.setState(\n            {\n                Editstate: editchange\n            }\n        );\n    }\n\n    updatetime_format(updatetime){\n\n        function monthformat(month){\n            return month + 1\n        }\n        \n        return new Date(updatetime).getFullYear() + \"-\" + monthformat(new Date(updatetime).getMonth()) + \"-\" +new Date(updatetime).getDate() + \" \" + new Date(updatetime).getHours() + \":\" + new Date(updatetime).getMinutes()\n    }\n\n    detail_text(info){\n        return info.Editor + \"醫師於\" + this.updatetime_format(info.Time) + \"更新\" \n    }\n    onChange = (checkedValues) => {\n        console.log('checked = ', checkedValues);\n        \n\n    }\n    render() {\n        const { title } = this.props\n        const checkbox_list = todo_data.map((info, index) =>\n            <div key={index} class='checkboxcell'>\n                <Checkbox style={{ fontSize: \"16px\" }} defaultChecked={info.Flag} value={index}>{info.Content}</Checkbox>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <Tooltip placement=\"right\" title={this.detail_text(info)}>\n                        <div>\n                            <img src={detaillogo} alt='detaillogo'></img>\n                        </div>\n                    </Tooltip>\n                </div>\n            </div>)\n        return (\n            <div>\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', height: '50px', padding:\"0px 5px\", background: \"#E2EDF3\" }}>\n                    <t2>{title}</t2>\n                </div>\n                <div style={{ maxHeight: \"250px\",overflowY:'auto' }}>\n                    {/*To do list */}\n                    <Checkbox.Group style={{ width: '100%' }} onChange={this.onChange}>{checkbox_list}</Checkbox.Group>\n                </div>\n                {/* <div style={{ display: this.state.Editstate }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"50px 50px\", paddingRight: \"16px\", paddingLeft: \"16px\", backgroundColor: \"rgba(238,238,238,1)\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                <div style={{ marginRight: \"10px\" }}>待辦時間:</div>\n                                <DatePicker placeholder=\"Select month\" style={{ marginRight: \"10px\" }} />\n                                <TimePicker defaultValue={moment('12:08', format)} format={format} />\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                <div style={{ marginRight: \"10px\" }}>結束時間:</div>\n                                <DatePicker placeholder=\"Select month\" style={{ marginRight: \"10px\" }} />\n                                <TimePicker defaultValue={moment('12:08', format)} format={format} />\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"11fr 1fr\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}><Input placeholder=\"待辦內容\" /></div>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                                <Button type=\"primary\" style={{ width: \"70%\" }}>新增</Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ display: 'flex', justifyContent: \"center\", alignItems: \"center\", padding: \"9px\" }}>\n                        <Button style={{ height: \"35px\", width: \"100px\", borderRadius: \"4px\" }} onClick={() => this.Editclick(\"none\")}>取消</Button>\n                        <div style={{ width: \"20px\" }}></div>\n                        <Button type=\"primary\" style={{ height: \"35px\", width: \"100px\", borderRadius: \"4px\" }}>儲存</Button>\n                    </div>\n                </div> */}\n            </div>\n        );\n    }\n}\n\nexport default Todolayout","import React, { Component } from 'react';\nimport Vitalsign from './Vitalsign';\nimport Controlbar from '../Controlbar';\nimport Crossection_io from './Crossection_io'\nimport Labviewlayout from './Labview'\nimport Nonlabviewlayout from './Nonlabview'\nimport GAS from './GAS'\nimport RTbreathe from './RTbreathe'\nimport Prescriptionorderlayout from '../Prescriptionorder/Prescriptionorder'\nimport Treatmentorderlayout from '../Treatmentorder/Treatmentorder'\nimport Crossection_schedule from './Crosssectionschedule'\nimport Crosssection_todo from './Crosssection_todo'\nimport './Crosssectionlayout.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass Crosssectionlayout extends Component {\n    state = {\n        Cross_item: [0, 1, 2, 3, 4, 5],\n        RESDGLU1: [],\n        RESLAB02: [],\n        RESLAB01: [],\n        RESDBGAS: [],\n        RESLAB0C: [],\n        RESSECT: [],\n        UDORDER0: [],\n        TRTMNTQ1: [],\n\n        PickerDate: moment(moment().format('YYYYMMDD'), 'YYYYMMDD').valueOf(),\n        SelectInterval: 1,\n\n        preCID: null,\n        preHID: null\n    }\n    componentDidMount() {\n        const CID = this.props.caseinfo.CASEID\n        const HID = this.props.caseinfo.HISID\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        this.setState({\n            preCID: CID,\n            preHID: HID\n        })\n        this.NIS_API_IO(this.state.PickerDate, CID, HID, TRDT)\n    }\n    componentDidUpdate() {\n        const CID = this.props.caseinfo.CASEID\n        const HID = this.props.caseinfo.HISID\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        const { preCID, preHID } = this.state\n        if (preCID !== CID || preHID !== HID) {\n            this.setState({\n                preCID: CID,\n                preHID: HID\n            })\n            this.NIS_API_IO(this.state.PickerDate, CID, HID, TRDT)\n        }\n    }\n    NIS_API_IO(Datetime, CID, HID, TRDT) {\n        function selectMonthInterval(Datetime) {\n            const timestampInterval = new Date().getTime() - Datetime\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        const TransinDate = moment(TRDT).format(\"YYYY-MM-DD\")\n        const MonthInterval = selectMonthInterval(Datetime)\n        ApiProvider.getStoredProcedureRESDGLU1(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESDGLU1: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDGLU1 NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESLAB02(HID, TransinDate)\n            .then(data => {\n                this.setState({ RESLAB02: data.data })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESLAB02 NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESLAB01(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESLAB01: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESLAB01 NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESDBGAS(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESDBGAS: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDBGAS NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESLAB0C(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESLAB0C: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESLAB0C NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESSECT(HID, MonthInterval, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                this.setState({\n                    RESSECT: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESSECT NG \" + JSON.stringify(err))\n            });\n\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                this.setState({\n                    UDORDER0: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureUDORDER0 NG \" + JSON.stringify(err))\n            });\n        ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => {\n                this.setState({\n                    TRTMNTQ1: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureTRTMNTQ1 NG \" + JSON.stringify(err))\n            });\n    }\n\n    callbackFunction = (item_array) => {\n        this.setState({Cross_item: item_array})\n    }\n\n    callbackDateFunction = (PickerTimeStamp) => {\n        console.log(PickerTimeStamp)\n        this.setState({PickerDate:PickerTimeStamp})\n    }\n\n    display_item(number) {\n        const item = this.state.Cross_item\n        var filter = item.some(function (item, index, array) {\n            return item === number\n        });\n        return filter\n    }\n    render() {\n        const crosssectioncontrollist = [\n            {\n                \"name\": \"生命徵象/輸出入\",\n                \"scrollpoint\": \"vitalsignIO\"\n            },\n            {\n                \"name\": \"檢驗結果\",\n                \"scrollpoint\": \"lab\"\n            },\n            {\n                \"name\": \"呼吸評估\",\n                \"scrollpoint\": \"rt\"\n            },\n            {\n                \"name\": \"醫藥囑\",\n                \"scrollpoint\": \"order\"\n            },\n            {\n                \"name\": \"行事曆及註記\",\n                \"scrollpoint\": \"schedule\"\n            }\n        ]\n        const { caseinfo } = this.props\n        const TimeStampPickerDate = this.state.PickerDate\n        const endTime = TimeStampPickerDate + (31 * 60 * 60 * 1000)\n        const startTime = endTime - (3 * 24 * 60 * 60 * 1000)\n        return (\n            <div>\n                <Controlbar caseinfo={caseinfo} PickerDate={this.state.PickerDate} parentDateCallback={this.callbackDateFunction} parentCallback={this.callbackFunction} btnlist={crosssectioncontrollist} item_array={this.state.Cross_item}></Controlbar>\n                <div id=\"crossection\" className='crossectioncontent'>\n                    <div id={\"vitalsignIO\"} style={this.display_item(0) ? { display: \"grid\", gridTemplateColumns: \"2fr 1fr\", gridGap: \"10px\", marginBottom: \"10px\" } : { display: \"none\" }}>\n                        <Vitalsign PickerDate={this.state.PickerDate} caseinfo={caseinfo}></Vitalsign>\n                        <Crossection_io PickerDate={this.state.PickerDate} caseinfo={caseinfo} title=\"I/O\"></Crossection_io>\n                    </div>\n                    <div id={\"lab\"} style={this.display_item(1) ? { display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" } : { display: \"none\" }}>\n                        <Labviewlayout PickerDate={this.state.PickerDate} caseinfo={caseinfo} RESLAB01={this.state.RESLAB01} RESLAB02={this.state.RESLAB02} RESDBGAS={this.state.RESDBGAS} RESLAB0C={this.state.RESLAB0C} RESDGLU1={this.state.RESDGLU1} RESSECT={this.state.RESSECT}></Labviewlayout>\n                        <Nonlabviewlayout caseinfo={caseinfo} StartTime={startTime} EndTime={endTime}></Nonlabviewlayout>\n                    </div>\n                    <div id={\"rt\"} style={this.display_item(2) ? { display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" } : { display: \"none\" }}>\n                        <GAS caseinfo={caseinfo} PickerDate={this.state.PickerDate} source={\"crossection\"} searchbar={false}></GAS>\n                        <RTbreathe caseinfo={caseinfo} source={\"crossection\"} PickerDate={this.state.PickerDate} searchbar={false}></RTbreathe>\n                    </div>\n                    <div id={\"order\"} style={this.display_item(3) ? { display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" } : { display: \"none\" }}>\n                        <Prescriptionorderlayout UDORDER0={this.state.UDORDER0} caseinfo={caseinfo} searchbar={false} PickerDate={this.state.PickerDate}></Prescriptionorderlayout>\n                        <Treatmentorderlayout TRTMNT01={this.state.TRTMNTQ1} caseinfo={caseinfo} searchbar={false} PickerDate={this.state.PickerDate}></Treatmentorderlayout>\n                    </div>\n                    <div id={\"schedule\"} style={this.display_item(4) ? null : { display: \"none\" }}>\n                        <Crossection_schedule source={1} PickerDate={this.state.PickerDate} editstatus={false} caseinfo={caseinfo}></Crossection_schedule>\n                    </div>\n                    <div style={this.display_item(5) ? null : { display: \"none\" }}>\n                        <Crosssection_todo caseinfo={caseinfo} ></Crosssection_todo>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Crosssectionlayout;\n","import React, { Component } from 'react';\nimport IOpage from '../../Module/iopage'\n\nclass Inoutonchronic extends Component {\n    render() {\n        const { title, caseinfo, IntervalStatus,QDCLIST,PickerDate } = this.props\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <t1>{title}</t1>\n                <IOpage QDCLIST={QDCLIST} caseinfo={caseinfo} Status={\"Chronic\"} IntervalStatus={IntervalStatus} PickerDate={PickerDate}></IOpage>\n            </div>\n        );\n    }\n}\n\nexport default Inoutonchronic","import React, { Component } from 'react'\nimport './Chronic_table.scss'\nimport moment from 'moment'\nimport * as RegularData from '../../Data/RegularData'\nimport * as ApiGithub from '../../API/ApiGithub'\n\nclass Tableonchronic extends Component {\n    state = {\n        LabParse: RegularData.ChronicLab()\n    }\n    componentDidMount() {\n        ApiGithub.getGitHubJson(\"Chronic_Lab.json\")\n            .then(data => {\n                this.setState({\n                    LabParse: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    // 0:一天 1:三天 2:一週 3:兩週\n    switch_state() {\n        const { chronic_state } = this.props\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 18\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    render() {\n        function datareglist(ressect, interval, pickerdate) {\n            function starttime(i, d) {\n                if (i === 0) {\n                    return new Date(d).getTime() + (7 * 60 * 60 * 1000)\n                }\n                if (i === 1) {\n                    return new Date(d).getTime() + (31 * 60 * 60 * 1000) - (3 * 24 * 60 * 60 * 1000)\n                }\n                if (i === 2) {\n                    return new Date(d).getTime() + (31 * 60 * 60 * 1000) - (7 * 24 * 60 * 60 * 1000)\n                }\n                if (i === 3) {\n                    return new Date(d).getTime() + (31 * 60 * 60 * 1000) - (14 * 24 * 60 * 60 * 1000)\n                }\n                return null\n            }\n            function TimeInterval(st, interval) {\n                var timearray = []\n                if (interval === 0) {\n                    for (let index = 0; index < 24; index++) {\n                        const time = st + (index * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (interval === 1) {\n                    for (let index = 0; index < 18; index++) {\n                        const time = st + (index * 4 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (interval === 2) {\n                    for (let index = 0; index < 21; index++) {\n                        const time = st + (index * 8 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (interval === 3) {\n                    for (let index = 0; index < 14; index++) {\n                        const time = st + (index * 24 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                return timearray\n            }\n            function TimeArrayInterval(interval) {\n                if (interval === 0) {\n                    return (1 * 60 * 60 * 1000)\n                }\n                if (interval === 1) {\n                    return (4 * 60 * 60 * 1000)\n                }\n                if (interval === 2) {\n                    return (8 * 60 * 60 * 1000)\n\n                }\n                if (interval === 3) {\n                    return (24 * 60 * 60 * 1000)\n                }\n                return null\n            }\n            const et = new Date(pickerdate).getTime() + (31 * 60 * 60 * 1000)\n            const st = starttime(interval, pickerdate)\n            const IntervalArray = TimeInterval(st, interval)\n            var RessectForPickerDate = []\n            if (Array.isArray(ressect)) {\n                for (let index = 0; index < ressect.length; index++) {\n                    const element = ressect[index];\n                    const time = element.ORRCPDT.toString() + element.ORRCPTM.toString()\n                    const timestamp = moment(time, 'YYYY-MM-DDHH:mm:ss').valueOf()\n                    if (timestamp > st && timestamp < et) {\n                        RessectForPickerDate.push(element)\n                    }\n                }\n            }\n            var FormatTimeRessect = []\n            for (let index = 0; index < IntervalArray.length; index++) {\n                const si = IntervalArray[index];\n                const ei = si + TimeArrayInterval(interval);\n                const array = RessectForPickerDate.filter(function (value, index, array) {\n                    const time = value.ORRCPDT.toString() + value.ORRCPTM.toString()\n                    const timestamp = moment(time, 'YYYY-MM-DDHH:mm:ss').valueOf()\n                    return timestamp > si && timestamp < ei\n                })\n                FormatTimeRessect.push(array)\n            }\n            return FormatTimeRessect\n        }\n\n        function DataLength(datalist) {\n            var array = []\n            for (let index = 0; index < datalist.length; index++) {\n                const element = datalist[index];\n                array.push(element.length)\n            }\n            return array\n        }\n\n        function LabFormat(DataList, parsrList) {\n            var arrayBiochemical = []\n            var arrayBlood = []\n            var arrayCultivate = []\n            var arrayGAS = []\n            var arrayGlu = []\n            var arrayRadiation = []\n            var arrayOther = []\n            if (Array.isArray(DataList)) {\n                if (DataList.length === 0) {\n                    return null\n                }\n                for (let index = 0; index < DataList.length; index++) {\n                    const element = DataList[index];\n                    const name = element.ORPROCED\n                    // console.log(parsrList.Biochemical)\n                    const BioFind = parsrList.Biochemical.some(function (value, index, arr) {\n                        return name.match(value) !== null\n                    })\n                    const BloFind = parsrList.Blood.some(function (value, index, arr) {\n                        return name.match(value) !== null\n                    })\n                    const CulFind = parsrList.Cultivate.some(function (value, index, arr) {\n                        return name.match(value) !== null\n                    })\n                    const GasFind = parsrList.GAS.some(function (value, index, arr) {\n                        return name.match(value) !== null\n                    })\n                    const GluFind = parsrList.GAS.some(function (value, index, arr) {\n                        return name.match(value) !== null\n                    })\n                    const RadFind = parsrList.Radiation.some(function (value, index, arr) {\n                        return name.match(value) !== null\n                    })\n                    if (BioFind) {\n                        arrayBiochemical.push(element)\n                    }\n                    if (BloFind) {\n                        arrayBlood.push(element)\n                    }\n                    if (CulFind) {\n                        arrayCultivate.push(element)\n                    }\n                    if (GasFind) {\n                        arrayGAS.push(element)\n                    }\n                    if (GluFind) {\n                        arrayGlu.push(element)\n                    }\n                    if (RadFind) {\n                        arrayRadiation.push(element)\n                    }\n                    if (!BioFind && !BloFind && !CulFind && !GasFind && !RadFind) {\n                        arrayOther.push(element)\n                    }\n                }\n            }\n            console.log([arrayBiochemical, arrayBlood, arrayCultivate, arrayGAS, arrayRadiation, arrayOther])\n            return [arrayBiochemical, arrayBlood, arrayCultivate, arrayGAS, arrayGlu, arrayRadiation, arrayOther]\n        }\n\n        const { chronic_state, RESSECT, caseinfo, PickerDate, title } = this.props\n        const title_list = title.map((info, index) => <div className='Chronictabletitlelist' key={index}><t2>{info.title}</t2></div>)\n\n\n        const data = LabFormat(RESSECT, this.state.LabParse)\n\n        const cellMap = data.map(function (value, index, arr) {\n            const DataList = datareglist(value, chronic_state, PickerDate)\n            const ListLength = DataLength(DataList)\n            return ListLength\n        })\n        console.log(cellMap)\n        // const DataList = datareglist(RESSECT, chronic_state, PickerDate)\n        // const ListLength = DataLength(DataList)\n        const statestatus = this.switch_state()\n        const cell = cellMap.map(function (value, index, array) {\n            const valuecell = value.map(function (e, i, a) {\n                return (\n                    <centerstyle style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }} key={index}>\n                        <t2>{e}</t2>\n                    </centerstyle>\n                );\n            })\n            return valuecell\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\" }}>\n                <div style={{ display: \"grid\", gridTemplateRows: \"repeat(\" + title.length + \",1fr)\" }}>\n                    {title_list}\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + statestatus + \",1fr)\", gridTemplateRows: \"repeat(7,1fr)\" }}>\n                    {cell}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Tableonchronic","import React, { Component } from 'react'\nimport Tableonchronic from './Chronic_table'\n\nclass Labonchronic extends Component {\n    render() {\n        const { title, caseinfo, select_interval, RESSECT, PickerDate } = this.props\n        const item_title = [{ title: \"生化\" }, { title: \"血液\" }, { title: \"培養\" }, { title: \"GAS\" }, { title: \"Glu\" }, { title: \"放射\" }, { title: \"其他\" }]\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <t1>{title}</t1>\n                <Tableonchronic title={item_title} caseinfo={caseinfo} chronic_state={select_interval} RESSECT={RESSECT} PickerDate={PickerDate}></Tableonchronic>\n            </div>\n        );\n    }\n}\n\nexport default Labonchronic","import React, { Component } from 'react'\nimport rtlogo from '../../Image/svg/RT.svg'\nimport { rtoneday, rethird } from '../../Data/Wardviewdata'\nimport { arraychange } from '../../Function/Wardstate'\nimport { Tooltip } from 'antd'\nimport * as FilterReg from '../../Function/FiliterReg'\nimport moment from 'moment'\n\nclass Chronicrttable extends Component {\n    // 0:一天 1:三天 2:一週 3:兩週\n    switch_state() {\n        const { chronic_state } = this.props\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 21\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n\n    rendertooltip() {\n        return (\n            <div>123</div>\n        );\n    }\n    table_content() {\n        const { chronic_state, QSPE, PickerDate } = this.props\n        const DataList = FilterReg.QSPERegList(QSPE)\n        const st = PickerDate + 31 * 60 * 60 * 1000 - 24 * 60 * 60 * 1000\n        var RTList = []\n        if (chronic_state === 0) {\n            for (let index = 0; index < 24; index++) {\n                const start = st + (index * 60 * 60 * 1000)\n                const end = st + ((index + 1) * 60 * 60 * 1000)\n                const filterData = DataList.filter(function (value, index, arr) {\n                    const time = moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    return start < time && time < end\n                })\n                RTList.push({\n                    length: filterData.length,\n                    element: filterData\n                })\n\n            }\n        }\n        if (chronic_state === 1) {\n            for (let index = 0; index < 18; index++) {\n                const start = st + (index * 4 * 60 * 60 * 1000)\n                const end = st + ((index + 1) * 4 * 60 * 60 * 1000)\n                const filterData = DataList.filter(function (value, index, arr) {\n                    const time = moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    return start < time && time < end\n                })\n                RTList.push({\n                    length: filterData.length,\n                    element: filterData\n                })\n\n            }\n        }\n        if (chronic_state === 2) {\n            for (let index = 0; index < 21; index++) {\n                const start = st + (index * 8 * 60 * 60 * 1000)\n                const end = st + ((index + 1) * 8 * 60 * 60 * 1000)\n                const filterData = DataList.filter(function (value, index, arr) {\n                    const time = moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    return start < time && time < end\n                })\n                RTList.push({\n                    length: filterData.length,\n                    element: filterData\n                })\n\n            }\n        }\n        if (chronic_state === 3) {\n            for (let index = 0; index < 14; index++) {\n                const start = st + (index * 24 * 60 * 60 * 1000)\n                const end = st + ((index + 1) * 24 * 60 * 60 * 1000)\n                const filterData = DataList.filter(function (value, index, arr) {\n                    const time = moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    return start < time && time < end\n                })\n                RTList.push({\n                    length: filterData.length,\n                    element: filterData\n                })\n\n            }\n        }\n        if (RTList === null || RTList === undefined) {\n            return null\n        }\n        if (RTList.length === 0) {\n            return null\n        }\n        const cellRender = RTList.map(function (value, index, arr) {\n            if (value.length === 0) {\n                return (\n                    <centerstyle style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }} key={index}>\n                        {changetext(value.length)}\n                    </centerstyle>\n                );\n            }\n            else {\n                return (\n                    <Tooltip placement=\"right\" autoAdjustOverflow={true} overlayStyle={{ background: \"white\" }} title={\"123\"}>\n                        <centerstyle style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }} key={index}>\n                            {changetext(value.length)}\n                        </centerstyle>\n                    </Tooltip>\n                );\n            }\n        })\n\n\n        function changetext(text) {\n            if (text === 0) {\n                return ''\n            }\n            return <img src={rtlogo} alt=\"rtlogo\" />\n        }\n        return cellRender\n    }\n    render() {\n\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\", height: \"40px\" }}>\n                <div style={{ backgroundColor: \"#cccccc\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <t2>呼吸評估</t2>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>\n                    {this.table_content()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chronicrttable","import React, { Component } from 'react'\nimport Chronicrttable from './Chronic_rttable'\n\nclass Rtonchronic extends Component {\n    render() {\n        const { title, userdata, select_interval, QSPE, PickerDate } = this.props\n        const item_title = [{ title: \"RT\" }]\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <Chronicrttable PickerDate={PickerDate} QSPE={QSPE} title={item_title} userdata={userdata} chronic_state={select_interval}></Chronicrttable>\n            </div>\n        );\n    }\n}\n\nexport default Rtonchronic","import React, { Component } from 'react'\nimport './Chronic_ordertable.scss'\nimport moment from 'moment'\nimport * as ApiGithub from '../../API/ApiGithub'\n\nclass Chronicordertable extends Component {\n    // 0:一天 1:三天 2:一週 3:兩週\n    switch_state() {\n        const { chronic_state } = this.props\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 21\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    select_parser = (input, parser) => {\n        if (parser === undefined) return undefined;\n        return parser.find(x =>\n            input.match(x.apply_condition.name)\n        )\n    }\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {\n            \"white\": [],\n            \"black\": []\n        };\n        const UDGNAME_condition = mappings.find(item => item.key === \"UDGNAME\");\n        const UDRPNAME_condition = mappings.find(item => item.key === \"UDRPNAME\");\n        if(inputs === undefined) return []\n        inputs.forEach(input => {\n            const UDGNAME_re = new RegExp(UDGNAME_condition.regex_str, UDGNAME_condition.regex_flags)\n            const UDGNAME_match = input.UDGNAME.match(UDGNAME_re)\n\n            const UDRPNAME_re = new RegExp(UDRPNAME_condition.regex_str, UDRPNAME_condition.regex_flags)\n            const UDRPNAME_match = input.UDRPNAME.match(UDRPNAME_re)\n\n            if (UDGNAME_match !== null && UDRPNAME_match !== null) {\n                allResult[\"white\"].push(input);\n            } else {\n                allResult[\"black\"].push(input);\n            }\n        });\n\n        return allResult;\n    }\n    celltable() {\n        function changegridnumber(key) {\n            switch (key) {\n                case 0:\n                    return 24\n                case 1:\n                    return 18\n                case 2:\n                    return 21\n                case 3:\n                    return 14\n                default:\n                    break;\n            }\n        }\n        const { chronic_state } = this.props\n        const number = changegridnumber(chronic_state)\n        var arr = []\n        for (let index = 0; index < number; index++) {\n            arr.push(\n                <div className='cell'></div>\n            )\n\n        }\n        return arr\n    }\n    render() {\n        function changegridstyle(key) {\n            switch (key) {\n                case 0:\n                    return 'ordertableoneday'\n                case 1:\n                    return 'ordertablethirdday'\n                case 2:\n                    return 'ordertableoneweek'\n                case 3:\n                    return 'ordertabletwoweek'\n                default:\n                    return null\n            }\n        }\n        function ListData(udorder0, interval, pickerdate) {\n            function starttime(i, d) {\n                if (i === 0) {\n                    return new Date(d).getTime() + (7 * 60 * 60 * 1000)\n                }\n                if (i === 1) {\n                    return new Date(d).getTime() + (31 * 60 * 60 * 1000) - (3 * 24 * 60 * 60 * 1000)\n                }\n                if (i === 2) {\n                    return new Date(d).getTime() + (31 * 60 * 60 * 1000) - (7 * 24 * 60 * 60 * 1000)\n                }\n                if (i === 3) {\n                    return new Date(d).getTime() + (31 * 60 * 60 * 1000) - (14 * 24 * 60 * 60 * 1000)\n                }\n                return null\n            }\n            function TimeInterval(st, interval) {\n                var timearray = []\n                if (interval === 0) {\n                    for (let index = 0; index < 24; index++) {\n                        const time = st + (index * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (interval === 1) {\n                    for (let index = 0; index < 18; index++) {\n                        const time = st + (index * 4 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (interval === 2) {\n                    for (let index = 0; index < 21; index++) {\n                        const time = st + (index * 8 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (interval === 3) {\n                    for (let index = 0; index < 14; index++) {\n                        const time = st + (index * 24 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                return timearray\n            }\n            // function TimeArrayInterval(interval) {\n            //     if (interval === 0) {\n            //         return (1 * 60 * 60 * 1000)\n            //     }\n            //     if (interval === 1) {\n            //         return (4 * 60 * 60 * 1000)\n            //     }\n            //     if (interval === 2) {\n            //         return (8 * 60 * 60 * 1000)\n\n            //     }\n            //     if (interval === 3) {\n            //         return (24 * 60 * 60 * 1000)\n            //     }\n            //     return null\n            // }\n            function startTimeFormat(st, sttimeString) {\n                if (sttimeString < st) {\n                    return st\n                }\n                return sttimeString\n            }\n            function endTimeFormat(et, ettimestring) {\n                if (et < ettimestring) {\n                    return et\n                }\n                return ettimestring\n            }\n            function shiftWeight(startTime, st, et) {\n                const width = document.body.clientWidth - 220\n                const shiftTimeStampWidth = width * (startTime - st) / (et - st)\n                return shiftTimeStampWidth\n\n            }\n            function WeightWidth(startTime, EndTime, st, et) {\n                const width = document.body.clientWidth - 220\n                const TimeStampWidth = width * (EndTime - startTime) / (et - st)\n                return TimeStampWidth\n            }\n\n            const et = new Date(pickerdate).getTime() + (31 * 60 * 60 * 1000)\n            const st = starttime(interval, pickerdate)\n            // const IntervalArray = TimeInterval(st, interval)\n            var arraylist = []\n            if (Array.isArray(udorder0)) {\n                for (let index = 0; index < udorder0.length; index++) {\n                    const element = udorder0[index];\n                    const sttimeString = moment(element.UDBGNDT.toString(), \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n                    const ettimeString = moment(element.UDENDDT.toString(), \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n                    if (et < sttimeString || st > ettimeString) {\n                    }\n                    else {\n                        const StartTime = startTimeFormat(st, sttimeString)\n                        const EndTime = endTimeFormat(et, ettimeString)\n                        const shift = shiftWeight(StartTime, st, et)\n                        const width = WeightWidth(StartTime, EndTime, st, et)\n                        arraylist.push({\n                            \"width\": width,\n                            \"shift\": shift,\n                            \"element\": element\n                        })\n                    }\n                }\n            }\n            return arraylist\n        }\n\n\n\n        const { chronic_state, UDORDER0, PickerDate, parser } = this.props\n        // console.log(UDORDER0)\n        // console.log(ListData(UDORDER0, chronic_state, PickerDate))\n\n        //filter white list\n        const selected_parser = this.select_parser(\"Prescription\", parser)\n        console.log(\"selected_parser \" + JSON.stringify(selected_parser));\n\n        let WhiteListData = [];\n        if (selected_parser !== undefined) {\n            WhiteListData = this.parse(UDORDER0, selected_parser)\n        }\n        console.log(\"WhiteListData \" + JSON.stringify(WhiteListData));\n\n        const datalist = ListData(WhiteListData.white, chronic_state, PickerDate)\n\n        const Tablecell = datalist.map(function (value, index, array) {\n            function formatString(value) {\n                if (value === undefined || value === null) {\n                    return \"--\"\n                }\n                return value.toString().trim()\n            }\n            // console.log(value.width)\n            return (\n                <div key={index} style={{ padding: \"10px 0px\", paddingLeft: value.shift + \"px\" }}>\n                    <div style={{ width: value.width + \"px\", height: \"20px\", backgroundColor: \"#3B97E1\", color: \"black\", padding: \"0px 5px\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\" }}>{formatString(value.element.UDGNAME)}</div>\n                </div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\", position: 'relative' }}>\n                <div style={{ background: \"#CCCCCC\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <t2>醫藥囑</t2>\n                </div>\n                <div className={changegridstyle(chronic_state)}>{this.celltable()}</div>\n                <div style={{ position: 'absolute', left: 140, height: \"250px\", overflow: \"hidden\" }}>\n                    {Tablecell}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chronicordertable","import React, { Component } from 'react'\nimport Chronicordertable from './Chronic_ordertable'\nimport * as ApiGithub from '../../API/ApiGithub'\n\nclass Orderonchronic extends Component {\n    state = {\n        whiteListParser: []\n    }\n    componentDidMount() {\n        ApiGithub.getGitHubJson(\"WhiteList.json\")\n        .then(data => {\n            let parser = data.data;\n            this.setState({\n                whiteListParser: parser\n            })\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }\n    render() {\n        const { caseinfo, select_interval, UDORDER0,PickerDate } = this.props\n        const { whiteListParser } = this.state\n        const item_title = [{ title: \"醫藥囑\" }]\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <Chronicordertable title={item_title} caseinfo={caseinfo} chronic_state={select_interval} UDORDER0={UDORDER0} PickerDate={PickerDate} parser={whiteListParser}></Chronicordertable>\n            </div>\n        );\n    }\n}\n\nexport default Orderonchronic","import React, { Component } from 'react'\nimport './Chronic_weighttable.scss'\nimport moment from 'moment'\n\nclass Chronicweighttable extends Component {\n    // 0:一天 1:三天 2:一週 3:兩週\n    switch_state() {\n        const { chronic_state } = this.props\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 21\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    celltable() {\n        function changegridnumber(key) {\n            switch (key) {\n                case 0:\n                    return 24\n                case 1:\n                    return 18\n                case 2:\n                    return 21\n                case 3:\n                    return 14\n                default:\n                    break;\n            }\n        }\n        const { chronic_state } = this.props\n        const number = changegridnumber(chronic_state)\n        var arr = []\n        for (let index = 0; index < number; index++) {\n            arr.push(\n                <div className='cell'></div>\n            )\n\n        }\n        return arr\n    }\n    render() {\n\n        const { chronic_state, caseinfo, QTWPER, PickerDate } = this.props\n        console.log(chronic_state)\n        const weight = caseinfo.WEIGHT\n        console.log(caseinfo.WEIGHT)\n        // console.log(QTWPER,weight)\n        function FormatEndTimeStamp(start, interval) {\n            if (interval === 0) {\n                return start - (24 * 60 * 60 * 1000)\n            }\n            if (interval === 1) {\n                return start - (3 * 24 * 60 * 60 * 1000)\n\n            }\n            if (interval === 2) {\n                return start - (7 * 24 * 60 * 60 * 1000)\n\n            }\n            if (interval === 3) {\n                return start - (14 * 24 * 60 * 60 * 1000)\n\n            }\n        }\n        const end = PickerDate + (31 * 60 * 60 * 1000)\n        const start = FormatEndTimeStamp(end, chronic_state)\n        const datafilter = weight.filter(function (value, index, arr) {\n            const timeString = value.rec_dat.toString() + value.rec_tim.toString()\n            const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n            // console.log(start, time, end)\n            return start < time && time < end\n        })\n        const datafilterTime = datafilter.map(function (value, index, arr) {\n            const timeString = value.rec_dat.toString() + value.rec_tim.toString()\n            const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n            return time\n        })\n        console.log(weight, datafilter, datafilterTime)\n        const diff = end - start\n        var widthArray = []\n        if (datafilter.length === 0) {\n            // const element = weight[0]\n            // widthArray.push({\n            //     width: 100,\n            //     weight: (element.value2) * 1000\n            // })\n        }\n        if (datafilter.length === 1) {\n            for (let index = 0; index < datafilter.length; index++) {\n                const element = datafilter[index];\n                const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                const width = parseInt(100 * (time - start) / diff)\n                widthArray.push({\n                    width: width,\n                    weight: (element.value2) * 1000\n                })\n            }\n        }\n        else {\n            for (let index = 0; index < datafilter.length - 1; index++) {\n                const element = datafilter[index];\n                if (index === 0) {\n                    const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                    const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                    const width = parseInt(100 * (time - start) / diff)\n                    widthArray.push({\n                        width: width,\n                        weight: (element.value2) * 1000\n                    })\n                }\n                else if (index === (datafilterTime.length - 1)) {\n                    const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                    const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                    const width = parseInt(100 * (end - time) / diff)\n                    widthArray.push({\n                        width: width,\n                        weight: (element.value2) * 1000\n                    })\n                }\n                else {\n                    const element2 = datafilter[index + 1]\n                    const timeString2 = element2.rec_dat.toString() + element2.rec_tim.toString()\n                    const time2 = moment(timeString2, \"YYYYMMDDHHmm\").valueOf()\n                    const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                    const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                    const width = parseInt(100 * (time2 - time) / diff)\n                    widthArray.push({\n                        width: width,\n                        weight: (element.value2) * 1000\n                    })\n                }\n            }\n        }\n\n        console.log(widthArray)\n        function changegridstyle(key) {\n            switch (key) {\n                case 0:\n                    return 'chronicweighttableoneday'\n                case 1:\n                    return 'chronicweighttablethreeday'\n                case 2:\n                    return 'chronicweighttableoneweek'\n                case 3:\n                    return 'chronicweighttabletwoweek'\n                default:\n                    return null\n            }\n        }\n        const render = widthArray.map(function (value, index, arr) {\n            return (\n                <div style={{ border: \"1px black solid\", borderCollapse: \"collapse\", width: value.width + '%', height: \"20\", backgroundColor: \"#3B97E1\", color: \"white\", display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>{value.weight}g</div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\", position: 'relative' }}>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", background: \"#cccccc\" }}>\n                    <t2>體重</t2>\n                </div>\n                <div className={changegridstyle(chronic_state)}>{this.celltable()}</div>\n                <div style={{ position: 'absolute', left: 140 }}>\n                    <div style={{ padding: \"10px 0px\", display: \"flex\", width: 'calc(100vw - 220px)', overflow: \"hidden\" }}>\n                        {render}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chronicweighttable","import React, { Component } from 'react'\nimport Chronicweighttable from './Chronic_weighttable'\n\nclass Weightonchronic extends Component {\n    render() {\n        const { title, caseinfo, QTWPER, PickerDate, select_interval } = this.props\n        const item_title = [{ title: \"體重\" }]\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <Chronicweighttable PickerDate={PickerDate} QTWPER={QTWPER} title={item_title} caseinfo={caseinfo} chronic_state={select_interval}></Chronicweighttable>\n            </div>\n        );\n    }\n}\n\nexport default Weightonchronic","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport '../Patientview/CrossSectionView/Crosssectionvitalsignchart.scss'\n\nclass Vitalxaxis extends Component {\n    state = {\n        change: false\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n    drawChart() {\n        function nowtime(time) {\n            return time + (7 * 60 * 60 * 1000)\n        }\n        function monthformat(month) {\n            return month + 1\n        }\n        function intervaldays(select_date, select_interval) {\n            switch (select_interval) {\n                //一天\n                case 0:\n                    return select_date - 86400000 * 1\n                //三天\n                case 1:\n                    return select_date - 86400000 * 3\n                //一週\n                case 2:\n                    return select_date - 86400000 * 7\n                //兩週\n                case 3:\n                    return select_date - 86400000 * 14\n                default:\n                    return null\n            }\n        }\n\n        const { id_key, svg_id, axisBot, axisTop, circlrcolor, max, min, select_interval, select_date } = this.props\n        const viewwidth = window.screen.availWidth - 220\n        //選取時間(0點)\n        const select_date_zero = new Date(new Date(select_date).getFullYear() + ',' + monthformat(new Date(select_date).getMonth()) + ',' + new Date(select_date).getDate()).getTime()\n        //選取時間(7點)\n        const select_time_format = nowtime(select_date_zero)\n        //select_intercal:0一天 1三天 2兩週\n        const Start_time = intervaldays(select_time_format, select_interval)\n        var xaxis = []\n        if (select_interval === 0) {\n            for (let index = 0; index < 24; index++) {\n                const time = Start_time + (30 * 60 * 1000) + (index * 60 * 60 * 1000)\n                xaxis.push(time)\n            }\n        }\n        if (select_interval === 1) {\n            for (let index = 0; index < 21; index++) {\n                const time = Start_time + (2 * 60 * 60 * 1000) + (index * 60 * 60 * 1000 * 4)\n                xaxis.push(time)\n            }\n        }\n\n        if (select_interval === 2) {\n            for (let index = 0; index < 21; index++) {\n                const time = Start_time + (4 * 60 * 60 * 1000) + (index * 60 * 60 * 1000 * 8)\n                xaxis.push(time)\n            }\n        }\n\n        if (select_interval === 3) {\n            for (let index = 0; index < 14; index++) {\n                const time = Start_time + (12 * 60 * 60 * 1000) + (index * 60 * 60 * 1000 * 24)\n                xaxis.push(time)\n            }\n        }\n        var x = d3.scaleLinear()\n            .domain([Start_time, select_time_format])\n            .range([0, viewwidth])\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            // .attr(\"viewbox\", [0, 0, viewwidth + 60, 25])\n            .style(\"width\", viewwidth + 100)\n            .style(\"height\", 25)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 15 + \")\");\n\n        var formatHour = d3.timeFormat(\"%H\")\n        var formatday = d3.timeFormat(\"%d\")\n        function multiFormat(date) {\n            if (select_interval === 0) {\n                return formatHour(date) + '~' + formatHour(date + (60 * 60 * 1000))\n            }\n            if (select_interval === 1) {\n                return formatHour(date - (2 * 60 * 60 * 1000)) + '~' + formatHour(date + (2 * 60 * 60 * 1000))\n            }\n            if (select_interval === 2) {\n                return formatHour(date - (4 * 60 * 60 * 1000)) + '~' + formatHour(date + (4 * 60 * 60 * 1000))\n            }\n            if (select_interval === 3) {\n                return monthformat(new Date(date).getMonth()) + '/' + formatday(date)\n            }\n            return formatHour(date)\n        }\n        var xAxis = d3.axisTop(x)\n            .tickValues(xaxis)\n            .tickSize(0, 0)\n            .tickPadding(5)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\");\n\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default Vitalxaxis;","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport '../Patientview/CrossSectionView/Crosssectionvitalsignchart.scss'\nimport { yyyymmddformat } from '../Function/Timeformat'\nimport moment from 'moment';\n\nclass Vitalxaxisbot extends Component {\n    state = {\n        change: false\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n    drawChart() {\n        function intervaldays(select_date, select_interval) {\n            switch (select_interval) {\n                //一天\n                case 0:\n                    return select_date - 86400000 * 1\n                //三天\n                case 1:\n                    return select_date - 86400000 * 3\n                //一週\n                case 2:\n                    return select_date - 86400000 * 7\n                //兩週\n                case 3:\n                    return select_date - 86400000 * 14\n                default:\n                    return null\n            }\n        }\n\n        const { id_key, svg_id, axisBot, axisTop, circlrcolor, max, min, select_interval, select_date } = this.props\n        const viewwidth = window.screen.availWidth - 228, height = 100, viewhieght = height + 10, rect_width = viewwidth / 46\n        //選取時間(0點)\n        const select_date_zero = yyyymmddformat(select_date)\n        //選取時間(7點)\n        const select_time_format = new Date(select_date_zero).getTime() + (31 * 60 * 60 * 1000)\n        //select_intercal:0一天 1三天 2兩週\n        const Start_time = intervaldays(select_time_format, select_interval)\n        console.log(Start_time)\n        var xaxis = []\n        if (select_interval === 0) {\n            const time = Start_time + (17 * 60 * 60 * 1000)\n            console.log(time)\n            xaxis.push(time)\n        }\n        if (select_interval === 1) {\n            for (let index = 0; index < 3; index++) {\n                const time = Start_time + (12 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000)\n                xaxis.push(time)\n            }\n        }\n\n        if (select_interval === 2) {\n            for (let index = 0; index < 7; index++) {\n                const time = Start_time + (12 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000)\n                xaxis.push(time)\n            }\n        }\n\n\n        if (select_interval === 3) {\n            for (let index = 0; index < 14; index++) {\n                const time = Start_time + (12 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000)\n                xaxis.push(time)\n            }\n        }\n        var x = d3.scaleLinear()\n            .domain([Start_time, select_time_format])\n            .range([0, viewwidth - 1])\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            // .attr(\"viewbox\", [0, 0, viewwidth + 60, 25])\n            .style(\"width\", viewwidth)\n            .style(\"height\", 25)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + -10 + \")\");\n\n\n        function multiFormat(date) {\n            return moment(date).format(\"MM/DD\")\n        }\n\n\n        var xAxis = d3.axisBottom(x)\n            .tickValues(xaxis)\n            .tickSize(0, 0)\n            .tickPadding(10)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\");\n\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default Vitalxaxisbot;","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport '../CrossSectionView/Crosssectionvitalsignchart.scss'\nimport { yyyymmddformat, hhmmssformattohalf } from '../../Function/Timeformat'\nimport moment from 'moment'\n\nclass Chronicvitalchart extends Component {\n    state = {\n        change: false\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n    drawChart() {\n        function intervaldays(select_date, select_interval) {\n            switch (select_interval) {\n                //一天\n                case 0:\n                    return select_date - (24 * 60 * 60 * 1000) * 1\n                //三天\n                case 1:\n                    return select_date - (24 * 60 * 60 * 1000) * 3\n                //一週\n                case 2:\n                    return select_date - (24 * 60 * 60 * 1000) * 7\n                //兩週\n                case 3:\n                    return select_date - (24 * 60 * 60 * 1000) * 14\n                default:\n                    return null\n            }\n        }\n\n        const { id_key, svg_id, circlrcolor, max, min, select_interval, select_date, datasource, statussource, NisData } = this.props\n        const viewwidth = window.screen.availWidth - 220, height = 50\n        //選取時間(0點)\n        const select_date_zero = yyyymmddformat(select_date)\n        //選取時間(7點)\n        const End_time_format = new Date(select_date_zero).getTime() + (31 * 60 * 60 * 1000)\n        //select_intercal:0一天 1三天 2兩週\n        const Start_time = intervaldays(End_time_format, select_interval)\n        console.log(NisData)\n        var y = d3.scaleLinear()\n            .domain([min, max])\n            .range([height, 0])\n        // console.log(Start_time, End_time_format)\n        var x = d3.scaleLinear()\n            .domain([Start_time, End_time_format])\n            .range([0, viewwidth - 1])\n\n        // console.log(viewhieght, viewwidth)\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            .style(\"width\", viewwidth + 50)\n            .style(\"height\", \"100px\")\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 5 + \")\");\n\n        var yAxis = d3.axisLeft(y)\n            .tickValues([min, max])\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(10);\n\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n        svg.append('line')\n            .attr('x1', x(Start_time))\n            .attr('y1', y(max))\n            .attr('x2', x(End_time_format))\n            .attr('y2', y(max))\n            .style('stroke', 'rgba(220,220,220,1)')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n        svg.append('line')\n            .attr('x1', x(Start_time))\n            .attr('y1', y(min))\n            .attr('x2', x(End_time_format))\n            .attr('y2', y(min))\n            .style('stroke', 'rgba(220,220,220,1)')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n        //一天\n\n        function drawshadow(data, number, midinterval) {\n            console.log(data)\n            for (let index = 0; index < data.length; index++) {\n                const borderwidth = viewwidth / number\n                const element = data[index];\n                const Xtime = moment(element.Time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + (midinterval * 60 * 1000)\n                svg.append('line')\n                    .attr('x1', x(Xtime))\n                    .attr('y1', y(20))\n                    .attr('x2', x(Xtime))\n                    .attr('y2', y(120))\n                    .style('stroke', circlrcolor)\n                    .style('opacity', 0.2)\n                    // .style('stroke', 'red')\n                    .style('stroke-width', borderwidth)\n\n\n            }\n        }\n        if (select_interval === 0) {\n            for (let index = 0; index < 25; index++) {\n                if (index % 8 === 0) {\n                    svg.append('line')\n                        .attr('x1', x(Start_time + (index * 60 * 60 * 1000)))\n                        .attr('y1', 0)\n                        .attr('x2', x(Start_time + (index * 60 * 60 * 1000)))\n                        .attr('y2', height)\n                        .style('stroke', 'black')\n                        .style('stroke-width', 1);\n                }\n                else {\n                    svg.append('line')\n                        .attr('x1', x(Start_time + (index * 60 * 60 * 1000)))\n                        .attr('y1', 0)\n                        .attr('x2', x(Start_time + (index * 60 * 60 * 1000)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(220,220,220,1)')\n                        .style('stroke-width', 1)\n                        .style('stroke-dasharray', 5.5);\n                }\n            }\n            if (datasource !== null && datasource !== undefined) {\n                if (statussource === 'CM') {\n                    drawshadow(datasource, 24, 30)\n                    for (let index = 0; index < datasource.length; index++) {\n                        const element = datasource[index];\n                        const eledata = element.Data\n                        const boxwidth = 5\n                        const data_sorted = eledata.sort(d3.ascending)\n                        const q1 = d3.quantile(data_sorted, .25)\n                        // const median = d3.quantile(data_sorted, .5)\n                        const q3 = d3.quantile(data_sorted, .75)\n                        const interQuantileRange = q3 - q1\n                        const minbox = data_sorted[0]\n                        const maxbox = data_sorted[data_sorted.length - 1]\n                        const Xtime = moment(element.Time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + (30 * 60 * 1000)\n                        if (eledata.length === 0) {\n                            continue\n                        }\n\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(minbox))\n                            .attr(\"y2\", y(maxbox))\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 0.5)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q1) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style(\"fill\", circlrcolor)\n                            .style('stroke-width', 0.5);\n\n                        svg.selectAll(\"toto\")\n                            .data([minbox, maxbox])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 0.5);\n\n                    }\n                }\n                else {\n                    if (NisData !== null) {\n                        if (NisData !== undefined) {\n                            for (let index = 0; index < NisData.length; index++) {\n                                const element = NisData[index];\n                                svg.append('circle')\n                                    .attr('cx', x(element.Time))\n                                    .attr('cy', y(element.Data))\n                                    .attr('r', 3)\n                                    .style('fill', circlrcolor)\n                            }\n                        }\n                    }\n                }\n\n            }\n            else {\n\n            }\n        }\n\n        // 三天\n        if (select_interval === 1) {\n            for (let index = 0; index < 22; index++) {\n                if (index % 2 === 0) {\n                    svg.append('line')\n                        .attr('x1', x(Start_time + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y1', 0)\n                        .attr('x2', x(Start_time + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y2', height)\n                        .style('stroke', 'black')\n                        .style('stroke-width', 1);\n                }\n                else {\n                    svg.append('line')\n                        .attr('x1', x(Start_time + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y1', 0)\n                        .attr('x2', x(Start_time + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(220,220,220,1)')\n                        .style('stroke-width', 1)\n                        .style('stroke-dasharray', 5.5);\n                }\n            }\n            if (datasource !== null) {\n                if (statussource === 'CM') {\n                    drawshadow(datasource, 18, 120)\n                    for (let index = 0; index < datasource.length; index++) {\n                        const element = datasource[index];\n                        console.log(element)\n                        const eledata = element.Data\n                        const boxwidth = 10\n                        const data_sorted = eledata.sort(d3.ascending)\n                        const q1 = d3.quantile(data_sorted, .25)\n                        // const median = d3.quantile(data_sorted, .5)\n                        const q3 = d3.quantile(data_sorted, .75)\n                        const interQuantileRange = q3 - q1\n                        const minbox = data_sorted[0]\n                        const maxbox = data_sorted[data_sorted.length - 1]\n                        const Xtime = moment(element.Time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + (120 * 60 * 1000)\n                        if (eledata.length === 0) {\n                            continue\n                        }\n\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(minbox))\n                            .attr(\"y2\", y(maxbox))\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q1) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg.selectAll(\"toto\")\n                            .data([minbox, maxbox])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1);\n\n                    }\n                }\n                else {\n                    // statussource == NIS\n\n                    if (NisData !== null || NisData !== undefined) {\n                        for (let index = 0; index < NisData.length; index++) {\n                            const element = NisData[index];\n                            svg.append('circle')\n                                .attr('cx', x(element.Time))\n                                .attr('cy', y(element.Data))\n                                .attr('r', 3)\n                                .style('fill', circlrcolor)\n                        }\n                    }\n                }\n\n            }\n            else {\n\n            }\n        }\n\n        //一週\n        if (select_interval === 2) {\n            for (let index = 0; index < 22; index++) {\n                svg.append('line')\n                    .attr('x1', x(Start_time + (index * 60 * 60 * 1000 * 8)))\n                    .attr('y1', 0)\n                    .attr('x2', x(Start_time + (index * 60 * 60 * 1000 * 8)))\n                    .attr('y2', height)\n                    .style('stroke', 'black')\n                    .style('stroke-width', 1);\n            }\n            if (datasource !== null) {\n                if (statussource === 'CM') {\n\n                    drawshadow(datasource, 21, 240)\n                    for (let index = 0; index < datasource.length; index++) {\n                        const element = datasource[index];\n                        const eledata = element.Data\n                        const boxwidth = 10\n                        const data_sorted = eledata.sort(d3.ascending)\n                        const q1 = d3.quantile(data_sorted, .25)\n                        // const median = d3.quantile(data_sorted, .5)\n                        const q3 = d3.quantile(data_sorted, .75)\n                        const interQuantileRange = q3 - q1\n                        const minbox = data_sorted[0]\n                        const maxbox = data_sorted[data_sorted.length - 1]\n                        const Xtime = moment(element.Time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + (240 * 60 * 1000)\n                        if (eledata.length === 0) {\n                            continue\n                        }\n\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(minbox))\n                            .attr(\"y2\", y(maxbox))\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q1) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg.selectAll(\"toto\")\n                            .data([minbox, maxbox])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1);\n\n                    }\n                }\n                else {\n                    // console.log(datasource)\n\n\n                    if (NisData !== null || NisData !== undefined) {\n                        for (let index = 0; index < NisData.length; index++) {\n                            const element = NisData[index];\n                            svg.append('circle')\n                                .attr('cx', x(element.Time))\n                                .attr('cy', y(element.Data))\n                                .attr('r', 3)\n                                .style('fill', circlrcolor)\n                        }\n                    }\n                }\n\n            }\n            else {\n\n            }\n        }\n        //兩週\n        if (select_interval === 3) {\n            for (let index = 0; index < 15; index++) {\n                svg.append('line')\n                    .attr('x1', x(Start_time + (index * 60 * 60 * 1000 * 24)))\n                    .attr('y1', 0)\n                    .attr('x2', x(Start_time + (index * 60 * 60 * 1000 * 24)))\n                    .attr('y2', height)\n                    .style('stroke', 'black')\n                    .style('stroke-width', 1);\n            }\n            if (datasource !== null) {\n                if (statussource === 'CM') {\n\n                    drawshadow(datasource, 14, 720)\n                    for (let index = 0; index < datasource.length; index++) {\n                        const element = datasource[index];\n                        const eledata = element.Data\n                        const boxwidth = 10\n                        const data_sorted = eledata.sort(d3.ascending)\n                        const q1 = d3.quantile(data_sorted, .25)\n                        // const median = d3.quantile(data_sorted, .5)\n                        const q3 = d3.quantile(data_sorted, .75)\n                        const interQuantileRange = q3 - q1\n                        const minbox = data_sorted[0]\n                        const maxbox = data_sorted[data_sorted.length - 1]\n                        const Xtime = moment(element.Time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + (720 * 60 * 1000)\n                        if (eledata.length === 0) {\n                            continue\n                        }\n\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(minbox))\n                            .attr(\"y2\", y(maxbox))\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q1) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg.selectAll(\"toto\")\n                            .data([minbox, maxbox])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1);\n\n                    }\n                }\n                else {\n                    // console.log(datasource)\n                    if (NisData !== null || NisData !== undefined) {\n                        for (let index = 0; index < NisData.length; index++) {\n                            const element = NisData[index];\n                            svg.append('circle')\n                                .attr('cx', x(element.Time))\n                                .attr('cy', y(element.Data))\n                                .attr('r', 3)\n                                .style('fill', circlrcolor)\n                        }\n                    }\n                }\n\n            }\n        }\n    }\n\n    render() {\n        const { id_key, NisData } = this.props\n        return (\n            <div id={id_key} ></div>\n        );\n    }\n}\n\nexport default Chronicvitalchart;","import React, { Component } from 'react'\nimport { Select } from 'antd';\nimport Chronicvitalchart from './Chronic_vital_chart'\nimport { statecolor, simulationCentermonitordata, simulationnisdata } from '../../Function/Wardstate'\nimport { formatxArrayhalf, formatendtime } from '../../Function/Timeformat'\nimport './Chronic_vital.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport Crosssectionvitalsignchart from '../CrossSectionView/Crossectionvitalsignchart'\n\n\nclass Vitalonchronic extends Component {\n    state = {\n        check_state_one: 0,\n        check_state_three: 0,\n        check_state_oneweek: 0,\n        check_state_twoweek: 0,\n        statussource: \"CM\",\n        CenterMonitorValue: []\n    }\n\n    componentDidMount() {\n        const startTime = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf() - (60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\")\n        const endTime = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf()).format(\"YYYYMMDDHHmmss\")\n        const PHISTNUM = this.props.caseinfo.HISID.toString().trim()\n        this.getVitalSignData(startTime, endTime, PHISTNUM)\n    }\n\n    getVitalSignData(startTime, EndTime, Phistnum) {\n        ApiProvider.getPatientwardvalueMedian(Phistnum, startTime, EndTime)\n            .then(data => {\n                console.log(data.data)\n                this.setState({\n                    CenterMonitorValue: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n                this.setState({\n                    CenterMonitorValue: null\n                })\n            })\n    }\n\n    switchdata(value_interval, sourcefrom) {\n        console.log(sourcefrom)\n        const { defaultdate } = this.props\n        function changevitaldays(vitaldays) {\n            if (vitaldays === 3) {\n                return 18\n            }\n            else {\n                return 24\n            }\n        }\n\n        function Interval_switch(interval) {\n            if (interval === 0) {\n                return 1\n            }\n            if (interval === 1) {\n                return 3\n            }\n        }\n        const interval = Interval_switch(value_interval)\n        const starttime = formatendtime(defaultdate) - (interval * 24 * 60 * 60 * 1000)\n        if (sourcefrom === 'NIS') {\n            const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n            const data = simulationnisdata(datatime, changevitaldays(interval))\n            console.log(data)\n            return data\n        }\n        else {\n\n            const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n            const data = simulationCentermonitordata(datatime, changevitaldays(interval))\n            return data\n        }\n    }\n    Interval_grid_box() {\n        var gridarray = []\n        console.log(this.props.select_interval)\n        if (this.props.select_interval === 0) {\n            for (let index = 0; index < 24; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_one) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: 360, border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_one(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: 360 }} onClick={() => this.onClickCheckgrid_one(number)}></div>)\n            }\n        }\n        if (this.props.select_interval === 1) {\n            for (let index = 0; index < 18; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_three) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: 360, border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_three(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: 360 }} onClick={() => this.onClickCheckgrid_three(number)}></div>)\n            }\n        }\n        if (this.props.select_interval === 2) {\n            for (let index = 0; index < 21; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_oneweek) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: 360, border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_oneweek(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: 360 }} onClick={() => this.onClickCheckgrid_oneweek(number)}></div>)\n            }\n        }\n        if (this.props.select_interval === 3) {\n            for (let index = 0; index < 14; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_twoweek) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: 360, border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_twoweek(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: 360 }} onClick={() => this.onClickCheckgrid_twoweek(number)}></div>)\n            }\n        }\n        return gridarray\n    }\n\n    onClickCheckgrid_one(number) {\n        console.log(number)\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (24 * 60 * 60 * 1000)\n        const endtime = ST + (number * 60 * 60 * 1000)\n        const starttime = endtime - 60 * 60 * 1000\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ check_state_one: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n    onClickCheckgrid_three(number) {\n        console.log(number)\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (3 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 4) * 60 * 60 * 1000)\n        const starttime = endtime - (4 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ chackstate_three: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n\n    onClickCheckgrid_oneweek(number) {\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (7 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 8) * 60 * 60 * 1000)\n        const starttime = endtime - (8 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({check_state_oneweek: number})\n        this.getVitalSignData(start, end, Phistnum)\n    }\n    onClickCheckgrid_twoweek(number) {\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (14 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 24) * 60 * 60 * 1000)\n        const starttime = endtime - (24 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({check_state_twoweek: number})\n        this.getVitalSignData(start, end, Phistnum)\n    }\n\n    sourcehandleChange = (value) => {\n        this.setState({ statussource: value })\n    }\n    render() {\n        function centervaluetoNull(value) {\n            function FilterList(DataList, type) {\n                const filterData = DataList.filter(function (value, index, arr) {\n                    return value.type === type\n                })\n                if (filterData.length === 0) {\n                    return null\n                }\n                console.log(filterData)\n                return filterData[0].Mid\n            }\n            if (value === undefined || value === null) {\n                return {\n                    hr: null,\n                    rr: null,\n                    bt: null,\n                    spo2: null,\n                    abpd: null,\n                    abpm: null,\n                    abps: null,\n                    nbpm: null,\n                    nbps: null,\n                    nbpd: null\n                }\n            }\n            return {\n                hr: FilterList(value, \"hr\"),\n                rr: FilterList(value, \"rr\"),\n                bt: FilterList(value, \"bt\"),\n                spo2: FilterList(value, \"spo2\"),\n                abpd: FilterList(value, \"abpd\"),\n                abpm: FilterList(value, \"abpm\"),\n                abps: FilterList(value, \"abps\"),\n                nbpd: FilterList(value, \"nbpd\"),\n                nbps: FilterList(value, \"nbps\"),\n                nbpm: FilterList(value, \"nbpm\"),\n            }\n        }\n        function centervalueNull(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            return value\n        }\n        function Interval_grid(number) {\n            switch (number) {\n                case 0:\n                    return 24\n                case 1:\n                    return 18\n                case 2:\n                    return 21\n                case 3:\n                    return 14\n                default:\n                    return null\n            }\n        }\n        function formatPickerTimer(pickerdate, interval) {\n            const end = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    startTime: end - (24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n            if (interval === 1) {\n                return {\n                    startTime: end - (3 * 24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n            if (interval === 2) {\n                return {\n                    startTime: end - (7 * 24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n            else {\n                return {\n                    startTime: end - (14 * 24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n        }\n\n        const { Option } = Select;\n        const pickerTimer = formatPickerTimer(this.props.PickerDate, this.props.select_interval)\n        const width = window.screen.availWidth - 171\n        const centervalue = centervaluetoNull(this.state.CenterMonitorValue)\n        return (\n            <div>\n                <div style={{ display: \"flex\", alignItems: \"center\", height: \"50px\" }}>\n                    <t1>生命徵象</t1>\n                    <Select defaultValue={this.state.statussource} style={{ width: 200, marginLeft: \"20px\" }} onChange={this.sourcehandleChange}>\n                        <Option value={'CM'}>Center Monitor</Option>\n                        <Option value={'NIS'}>NIS</Option>\n                    </Select>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\" }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"repeat(6,60px)\" }}>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <t4 style={{ display: \"flex\", justifyContent: \"center\", color: statecolor(\"HR\") }}>{\"HR\"}</t4>\n                                <t1 style={{ display: \"flex\", justifyContent: \"center\", color: statecolor(\"HR\") }}>{centervalueNull(centervalue.hr)}</t1>\n                            </div>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>NBP</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.nbpd)}/{centervalueNull(centervalue.nbps)}</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>({centervalueNull(centervalue.nbpm)})</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>ABP</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.abpd)}/{centervalueNull(centervalue.abps)}</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>({centervalueNull(centervalue.abpm)})</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <div style={{ fontSize: \"1rem\", color: \"#4773B8\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>\n                                    SpO<sub style={{ bottom: \"-1em\" }}>2</sub>\n                                </div>\n                                <div style={{ fontSize: \"1rem\", color: \"#4773B8\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.spo2)}%</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <div style={{ fontSize: \"1rem\", color: \"#7F3DB5\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>BT</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#7F3DB5\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>--</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <div style={{ fontSize: \"1rem\", color: \"#DE7531\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>RR</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#DE7531\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.rr)}</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"repeat(6,60px)\", position: \"relative\" }}>\n                        <div style={{ position: \"absolute\", height: \"340px\",width: width - 50, top: 5, left: 50 }} >\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + Interval_grid(this.props.select_interval) + \",1fr)\" }}>\n                                {this.Interval_grid_box()}\n                            </div>\n                        </div>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"hr_svg_chronic\"}\n                            id_key={\"hr_id_chronic\"}\n                            type={\"hr\"}\n                            source={this.state.statussource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={100}\n                            upper={160}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor=\"#779F50\"\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={200}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"nbp_svg_chronic\"}\n                            id_key={\"nbp_id_chronic\"}\n                            type={\"nbp\"}\n                            source={this.state.statussource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={55}\n                            upper={75}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#C12528\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"abp_svg_chronic\"}\n                            id_key={\"abp_id_chronic\"}\n                            type={\"abp\"}\n                            source={this.state.statussource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={55}\n                            upper={75}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#C12528\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"spo2_svg_chronic\"}\n                            id_key={\"spo2_id_chronic\"}\n                            type={\"spo2\"}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={90}\n                            upper={100}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#4773B8\"}\n                            colorshadow={\"#4773B8\"}\n                            min={60}\n                            max={100}\n                            source={this.state.statussource}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"bt_svg_chronic\"}\n                            id_key={\"bt_id_chronic\"}\n                            type={\"bt\"}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            source={this.state.statussource}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={36}\n                            upper={38}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#7F3DB5\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={33}\n                            max={48}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"rr_svg_chronic\"}\n                            id_key={\"rr_id_chronic\"}\n                            type={\"rr\"}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={20}\n                            upper={60}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#DE7531\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}\n                            source={this.state.statussource}>\n                        </Crosssectionvitalsignchart>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Vitalonchronic","import React, { Component } from 'react';\nimport { DatePicker, Button, Select } from 'antd';\nimport filterlogo from '../../Image/svg/filter.svg'\nimport Inoutonchronic from './Chronic_io'\nimport Labonchronic from './Chronic_lab'\nimport Rtonchronic from './Chronic_rt'\nimport Orderonchronic from './Chronic_order'\nimport Weightonchronic from './Chronic_weight'\nimport Vitalxaxis from '../../Module/Vitalxaxis'\nimport Vitalxaxisbot from '../../Module/Vitalxaxisbot'\nimport moment from 'moment'\nimport './Chroniclelayout.scss'\nimport X2JS from 'x2js';\nimport * as ApiProvider from '../../API/ApiProvider'\n// import * as WardState from '../../Function/Wardstate'\nimport * as SimData from '../../Data/SimData'\nimport { ChronicVital } from './ChronicVital'\nimport Vitalonchronic from './Chronic_vital'\n\nclass Chroniclelayout extends Component {\n    state = {\n        display_Mode: false,\n        item: this.props.item_array,\n        scrollstate: 0,\n        PickerDate: moment(moment().format('YYYYMMDD'), \"YYYYMMDD\").valueOf(), //選擇日期\n        select_interval: 0, //選擇區間\n        RESSECT: [], //IO要用的\n        QSPE: [], //累積報告\n        UDORDER0: [],  //累積報告\n        QTWPER: [], //累積報告\n        QDC: [],\n        statuschange: 0,\n\n\n        hrdatasource: [],\n        rrdatasource: [],\n        spo2datasource: [],\n        abpdatasource: [],\n        nbpdatasource: [],\n        btdatasource: [],\n        QDVS: [],\n        QOXY:[],\n    }\n    componentDidMount() {\n        this.APIDataFetch(this.state.PickerDate)\n    }\n\n    \n\n\n    APIDataFetch(Datetime) {\n        function selectMonthInterval(PickerDate) {\n            const timestampInterval = new Date().getTime() - new Date(PickerDate).getTime()\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        const { caseinfo } = this.props\n        const xm2 = new X2JS()\n        const st = moment(Datetime + (7 * 60 * 60 * 1000)).format('YYYYMMDDHHmm')\n        const et = moment(Datetime + (31 * 60 * 60 * 1000)).format('YYYYMMDDHHmm')\n        // const TRANSDate = moment(caseinfo.TRANSINDT, 'YYYYMMDD').format('YYYY-MM-DD')\n        const MonthInterval = selectMonthInterval(Datetime)\n        const QDC = ApiProvider.getQDC(caseinfo.CASEID, st, et)\n            .then(data => {\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                return parsedata\n\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESSECT = ApiProvider.getStoredProcedureRESSECT(caseinfo.HISID, MonthInterval, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        const QSPE = ApiProvider.getQSPE(caseinfo.CASEID, st, et)\n            .then(data => {\n                console.log(xm2.xml2js(data.data).outmsg.resconts.rescont)\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                if (Array.isArray(parsedata)) {\n                    return parsedata\n                }\n                else {\n                    const arr = []\n                    arr.push(parsedata)\n                    return arr\n                }\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        const UDORDER0 = ApiProvider.getStoredProcedureUDORDER0(caseinfo.HISID, caseinfo.CASEID, \"123\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        Promise.all([RESSECT, QSPE, UDORDER0, QDC]).then(result => {\n            console.log(\"API DATA = \" + result[8])\n            this.setState({\n                RESSECT: result[0], //IO要用的\n                QSPE: result[1], //累積報告\n                UDORDER0: result[2],  //累積報告\n                QDC: result[3]\n            })\n        })\n    }\n\n    scrollToAnchor = (anchorName) => {\n        console.log(anchorName)\n        if (anchorName) {\n            let anchorElement = document.getElementById(anchorName);\n            if (anchorElement) { anchorElement.scrollIntoView(false); }\n        }\n    }\n    scroll_btn_style(index) {\n        console.log(index, this.state.scrollstate)\n        if (index === this.state.scrollstate) {\n            return true\n        }\n        else return false\n    }\n    onChange = (date, dateString) => {\n        console.log(date, dateString);\n\n        this.setState(\n            {\n                PickerDate: date.valueOf()\n            }\n        )\n    }\n    onSelectchange = (value) => {\n        this.setState(\n            {\n                select_interval: value\n            }\n        )\n    }\n    sourcecallback = () => {\n\n    }\n    render() {\n        const { Option } = Select;\n        // const dateFormat = 'YYYY/MM/DD';\n        const { caseinfo } = this.props\n        const crosssectioncontrollist =\n            [{ \"name\": \"生命徵象\", \"scrollpoint\": \"vital_sign_chronic\" },\n            { \"name\": \"輸出入\", \"scrollpoint\": \"input_output_chronic\" },\n            { \"name\": \"檢驗結果\", \"scrollpoint\": \"lab_chronic\" },\n            { \"name\": \"呼吸評估\", \"scrollpoint\": \"rt_chronic\" },\n            { \"name\": \"醫藥囑\", \"scrollpoint\": \"order_chronic\" },\n            { \"name\": \"體重\", \"scrollpoint\": \"infection_chronic\" }]\n\n        let button = crosssectioncontrollist.map(\n            (item, index) => <Button onClick={this.scrollToAnchor.bind(this, item.scrollpoint)} key={index} style={{ borderRadius: \"16px\", color: \"rgba(245, 166, 35, 1)\", border: \"rgba(245, 166, 35, 1) 1px solid\" }}>{item.name}</Button>);\n        const status = this.state.RESSECT\n        if (status.length === 0) {\n            return null\n        }\n        return (\n            <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", height: \"40px\" }}>\n                    <div>\n                        <DatePicker onChange={this.onChange} defaultValue={moment(this.state.PickerDate)} allowClear={false} />\n                        <Select defaultValue={this.state.select_interval} style={{ width: 120, marginLeft: \"20px\" }} onChange={this.onSelectchange}>\n                            <Option value={0}>一天</Option>\n                            <Option value={1}>三天</Option>\n                            <Option value={2}>一週</Option>\n                            <Option value={3}>兩週</Option>\n                        </Select>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(8,auto)\", gridColumnGap: \"15px\" }}>\n                        <t2 style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>項目切換:</t2>\n                        {button}\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <img src={filterlogo} alt='filterlogo'></img>\n                        </div>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\", margin: \"10px 0px\" }}>\n                    <div></div>\n                    <Vitalxaxis max={200} min={0} select_interval={this.state.select_interval} select_date={this.state.PickerDate} id_key=\"xaxis_chronic\" svg_id=\"xaxis_svg_chronic\"></Vitalxaxis>\n                </div>\n                <div className='boxshadow'></div>\n                <div className='chroniclayout'>\n                    {/* Vital sign */}\n                    <div id=\"vital_sign_chronic\">\n                        <Vitalonchronic PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"Vital\"></Vitalonchronic>\n                    </div>\n                    {/* I/O */}\n                    <div id=\"input_output_chronic\">\n                        <Inoutonchronic PickerDate={this.state.PickerDate} QDCLIST={this.state.QDC} Status={\"Chronic\"} IntervalStatus={this.state.select_interval} caseinfo={caseinfo} title=\"輸出入\"></Inoutonchronic>\n                    </div>\n                    {/* Lab */}\n                    <div id=\"lab_chronic\">\n                        <Labonchronic PickerDate={this.state.PickerDate} RESSECT={this.state.RESSECT} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"檢驗結果\"></Labonchronic>\n                    </div>\n                    {/* RT */}\n                    <div id=\"rt_chronic\">\n                        <Rtonchronic QSPE={this.state.QSPE} PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"I/O\"></Rtonchronic>\n                    </div>\n                    {/* Order */}\n                    <div id=\"order_chronic\">\n                        <Orderonchronic PickerDate={this.state.PickerDate} UDORDER0={this.state.UDORDER0} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"\"></Orderonchronic>\n                    </div>\n                    {/* 體重 */}\n                    <div id=\"infection_chronic\">\n                        <Weightonchronic  PickerDate={this.state.PickerDate}  QTWPER={this.state.QTWPER} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"\"></Weightonchronic>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\", marginTop: \"30px\" }}>\n                    <div></div>\n                    <Vitalxaxisbot max={200} min={0} select_interval={this.state.select_interval} select_date={this.state.PickerDate} id_key=\"xaxis_bot_chronic\" svg_id=\"xaxis_bot_svg_chronic\"></Vitalxaxisbot>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chroniclelayout;","import React, { Component } from 'react';\nimport './Flootsheetio.scss'\nimport * as RegFilter from '../../Function/FiliterReg'\nimport moment from 'moment';\n\nclass Flootsheetio extends Component {\n    state = {\n        itemNumber: \"day\"\n    }\n\n    SecondDataCell(dataJson, Title) {\n        const { PickerDate } = this.props\n        const st = PickerDate + (7 * 60 * 60 * 1000)\n        var cellRender = []\n        for (let index = 0; index < 24; index++) {\n            const startTime = st + (index * 60 * 60 * 1000)\n            const endTime = st + ((index + 1) * 60 * 60 * 1000)\n            const timeObjectString = dataJson.rec_dat.toString() + dataJson.rec_tim.toString()\n            const time = moment(timeObjectString, 'YYYYMMDDHHmm').valueOf()\n            if (time > startTime && time < endTime) {\n                cellRender.push(dataJson.value)\n            }\n            else {\n                cellRender.push(\"--\")\n            }\n        }\n        const data = cellRender.map((info, index) =>\n            <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                <t2>{info}</t2>\n            </centerstyle>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <centerstyle style={{ background: \"#cccccc\" }}>\n                    <t4>{Title}</t4>\n                </centerstyle>\n                {data}\n            </div>\n        );\n    }\n    FourthDataCell(dataJson, Title) {\n        const { PickerDate } = this.props\n        const st = PickerDate + (7 * 60 * 60 * 1000)\n        var cellRender = []\n        for (let index = 0; index < 24; index++) {\n            const startTime = st + (index * 60 * 60 * 1000)\n            const endTime = st + ((index + 1) * 60 * 60 * 1000)\n            const filterData = dataJson.filter(function (value, index, arr) {\n                const timeObjectString = value.rec_dat.toString() + value.rec_tim.toString()\n                const time = moment(timeObjectString, 'YYYYMMDDHHmm').valueOf()\n                return time > startTime && time < endTime\n            })\n            if (filterData.length === 0) {\n                cellRender.push(\"--\")\n            }\n            var sum = 0\n            for (let index = 0; index < filterData.length; index++) {\n                const element = filterData[index];\n                if (Title === \"滲液\") {\n                    cellRender.push(element.out_val1)\n                }\n                if (Title === \"嘔吐\") {\n                    const string = element.out_val1.toString() + \"/\" + element.nam.toString() + \"/\" + element.color.toString()\n                    cellRender.push(string)\n                }\n                if (Title === \"引流\") {\n                    const string = element.out_val1.toString() + \"/\" + element.nam.toString() + \"/\" + element.color.toString()\n                    cellRender.push(string)\n                }\n                if (Title === \"穿刺出\") {\n                    cellRender.push(element.out_val1)\n\n                }\n                if (Title === \"穿刺入\") {\n                    cellRender.push(element.inp_val1)\n\n                }\n                if (Title === \"透析出\") {\n                    cellRender.push(element.out_val1)\n\n                }\n                if (Title === \"透析入\") {\n                    cellRender.push(element.inp_val1)\n\n                }\n                if (Title === \"透析加總\") {\n                    const sum = Number(element.out_val1) - Number(element.inp_val1)\n                    cellRender.push(sum)\n\n                }\n                if (Title === \"沖洗出\") {\n                    cellRender.push(element.out_val1)\n\n                }\n                if (Title === \"沖洗入\") {\n                    cellRender.push(element.inp_val1)\n\n                }\n                if (Title === \"排尿\") {\n                    cellRender.push(element.inp_val1)\n\n                }\n            }\n            \n        }\n        const data = cellRender.map((info, index) =>\n            <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                <t2>{info}</t2>\n            </centerstyle>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <centerstyle style={{ background: \"#cccccc\" }}>\n                    <t4>{Title}</t4>\n                </centerstyle>\n                {data}\n            </div>\n        );\n    }\n\n    Thirdtablecell(dataJson, Title) {\n        const { PickerDate } = this.props\n        const st = PickerDate + (7 * 60 * 60 * 1000)\n        var cellRender = []\n\n        for (let index = 0; index < 24; index++) {\n            const startTime = st + (index * 60 * 60 * 1000)\n            const endTime = st + ((index + 1) * 60 * 60 * 1000)\n            const time = moment(dataJson.time, 'YYYYMMDDHHmm').valueOf()\n            if (time > startTime && time < endTime) {\n                cellRender.push(dataJson.value)\n            }\n            else {\n                cellRender.push(\"--\")\n            }\n        }\n\n        const data = cellRender.map((info, index) =>\n            <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                <t2>{info}</t2>\n            </centerstyle>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <centerstyle style={{ background: \"#cccccc\" }}>\n                    <t4>{Title}</t4>\n                </centerstyle>\n                {data}\n            </div>\n        );\n    }\n\n    Firsttablecell(dataList, Title) {\n        const { PickerDate } = this.props\n        const st = PickerDate + (7 * 60 * 60 * 1000)\n        var cellRender = []\n\n        for (let index = 0; index < 24; index++) {\n            const startTime = st + (index * 60 * 60 * 1000)\n            const endTime = st + ((index + 1) * 60 * 60 * 1000)\n            console.log(dataList)\n            const datafilter = dataList.filter(function (value, index, arr) {\n                const time = moment(value.rec_dat.toString() + value.rec_tim.toString(), 'YYYYMMDDHHmm').valueOf()\n                return time > startTime && time < endTime\n            })\n            var sum = 0\n            for (let index = 0; index < datafilter.length; index++) {\n                const element = datafilter[index];\n                sum = sum + Number(element.inp_val1)\n            }\n            cellRender.push(sum)\n        }\n\n        const data = cellRender.map((info, index) =>\n            <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                <t2>{info}</t2>\n            </centerstyle>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <centerstyle style={{ background: \"#cccccc\" }}>\n                    <t4>{Title}</t4>\n                </centerstyle>\n                {data}\n            </div>\n        );\n    }\n\n\n    render() {\n        function groupelement(array) {\n            function groupvalue(arr) {\n                const mapvalue = arr.map(function (value, index, arr) {\n                    return value.element\n                })\n                return mapvalue\n            }\n            var dataList = []\n            for (let index = 0; index < array.length; index++) {\n                const element = array[index];\n                const data = groupvalue(element)\n                if (element.length !== 0) {\n                    if (element[0].title === \"滲液\") {\n                        dataList.push({\n                            \"title\": element[0].title,\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"嘔吐\") {\n                        dataList.push({\n                            \"title\": element[0].title,\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"引流\") {\n                        const stringElement = element[0].element\n                        const string = stringElement.line + \"/\" + stringElement.pos\n                        dataList.push({\n                            \"title\": string,\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"穿刺\") {\n                        const stringElement = element[0].element\n                        if (stringElement.out_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"穿刺出\",\n                                \"element\": data\n                            })\n                        }\n                        if (stringElement.inp_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"穿刺入\",\n                                \"element\": data\n                            })\n                        }\n                    }\n                    if (element[0].title === \"透析\") {\n                        const stringElement = element[0].element\n                        if (stringElement.out_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"透析出\",\n                                \"element\": data\n                            })\n                        }\n                        if (stringElement.inp_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"透析入\",\n                                \"element\": data\n                            })\n                        }\n                        dataList.push({\n                            \"title\": \"透析加總\",\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"沖洗\") {\n                        const stringElement = element[0].element\n                        if (stringElement.out_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"沖洗出\",\n                                \"element\": data\n                            })\n                        }\n                        if (stringElement.inp_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"沖洗入\",\n                                \"element\": data\n                            })\n                        }\n                    }\n                    if (element[0].title === \"排便\") {\n                        dataList.push({\n                            \"title\": \"Stool\",\n                            \"element\": data\n                        })\n                        dataList.push({\n                            \"title\": \"Enema/Stimulation\",\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"排尿\") {\n                        const stringElement = element[0].element\n                        const string = stringElement.inp_val1\n                        dataList.push({\n                            \"title\": \"Urine\" + string,\n                            \"element\": data\n                        })\n                    }\n                }\n            }\n            return dataList\n        }\n        function groupfirstarray(arrayList) {\n            var result = arrayList.filter(function (value, index, arr) {\n                const res = arr.map(function (value, index, arr) {\n                    return value.compare\n                })\n                return res.indexOf(value.compare) === index;\n            });\n            console.log(result)\n            var arrList = []\n            for (let index = 0; index < result.length; index++) {\n                const element = result[index];\n                const comparevalue = element.compare\n                const filterarray = arrayList.filter(function (value, index, arr) {\n                    return value.compare === comparevalue\n                })\n                arrList.push(filterarray)\n            }\n            return arrList\n        }\n        function QDCFormatList(qdc, pickerdate) {\n            function nullvalue(value) {\n                if (value === undefined || value === null) {\n                    return \"--\"\n                }\n                return value.toString().trim()\n            }\n            var FirstArray = []\n            var SecondArray = []\n            var ThirdArray = []\n            var FourthArray = []\n            const st = pickerdate + (7 * 60 * 60 * 1000)\n            const et = pickerdate + (31 * 60 * 60 * 1000)\n            if (Array.isArray(qdc)) {\n                for (let index = 0; index < qdc.length; index++) {\n                    const element = qdc[index];\n                    const elementTime = moment((element.rec_dat + element.rec_tim), 'YYYYMMDDHHmm').valueOf()\n                    if (RegFilter.firstarea_Reg_IO().find(function (value, index, array) {\n                        return value === element.item\n                    })) {\n                        FirstArray.push({\n                            title: nullvalue(element.line) + \"/\" + nullvalue(element.nam) + \"/\" + nullvalue(element.pos),\n                            compare: nullvalue(element.line) + \"/\" + nullvalue(element.nam),\n                            element: element\n                        })\n                    }\n                    if (RegFilter.Secondarea_reg_IO().find(function (value, index, array) {\n                        return value === element.item\n                    })) {\n                        SecondArray.push({\n                            title: nullvalue(element.line) + \"/\" + nullvalue(element.nam) + \"/\" + nullvalue(element.pos),\n                            element: element\n                        })\n                    }\n                    if (RegFilter.Thirdarea_reg_IO().find(function (value, index, array) {\n                        return value === element.item\n                    })) {\n                        ThirdArray.push(element)\n                    }\n                    if (RegFilter.Fourtharea_reg_IO().find(function (value, index, array) {\n                        return value === element.item\n                    })) {\n                        FourthArray.push({\n                            title: element.item,\n                            compare: element.item,\n                            element: element\n                        })\n                    }\n                }\n            }\n            return {\n                \"FirstArray\": FirstArray,\n                \"SecondArray\": SecondArray,\n                \"ThirdArray\": ThirdArray,\n                \"FourthArray\": FourthArray\n            }\n        }\n\n\n\n        const { PickerDate, QDC } = this.props\n        const dataList = QDCFormatList(QDC, PickerDate)\n        // const DataFirst = dataList.FirstArray\n        const FlootSheetFirstAreaData = groupfirstarray(dataList.FirstArray)\n        const FlootSheetSecondAreaData = dataList.SecondArray\n        const FlootSheetThirdAreaData = dataList.ThirdArray\n        const FlootSheetFourthAreaData = groupelement(groupfirstarray(dataList.FourthArray))\n        console.log(FlootSheetFirstAreaData)\n        console.log(FlootSheetSecondAreaData)\n        console.log(FlootSheetThirdAreaData)\n        console.log(FlootSheetFourthAreaData)\n\n        const Firstdata = FlootSheetFirstAreaData.map(function (value, index, arr) {\n            var result = []\n            for (let index = 0; index < value.length; index++) {\n                const element = value[index];\n                result.push(element.element)\n            }\n            return {\n                Title: value[0].title,\n                Element: result\n            }\n        })\n        var FirstdataCell = []\n        for (let index = 0; index < Firstdata.length; index++) {\n            const element = Firstdata[index];\n            FirstdataCell.push(this.Firsttablecell(element.Element, element.Title))\n        }\n        // var Seconddata = []\n        // for (let index = 0; index < FlootSheetSecondAreaData.length; index++) {\n        //     const element = FlootSheetSecondAreaData[index];\n        //     if (element.inp_val1 !== null || element.inp_val1 !== undefined) {\n        //         Seconddata.push({\n        //             Title: element.line + element.nam + element.pos,\n        //             Element: {\n        //                 time: element.rec_dat + element.rec_tim,\n        //                 value: Number(element.inp_val1)\n        //             }\n        //         })\n        //     }\n        //     else {\n        //         Seconddata.push({\n        //             Title: element.line + element.nam + element.pos,\n        //             Element: {\n        //                 time: element.rec_dat + element.rec_tim,\n        //                 value: Number(element.inp_val2)\n        //             }\n        //         })\n        //     }\n        // }\n\n\n        // var SeconddataCell = []\n        // for (let index = 0; index < Seconddata.length; index++) {\n        //     const element = Seconddata[index];\n        //     SeconddataCell.push(this.Thirdtablecell(element.Element, element.Title))\n        // }\n\n\n        var Thirddata = []\n        for (let index = 0; index < FlootSheetThirdAreaData.length; index++) {\n            const element = FlootSheetThirdAreaData[index];\n            Thirddata.push({\n                Title: \"進食\" + element.nam + element.lost,\n                Element: {\n                    time: element.rec_dat + element.rec_tim,\n                    value: Number(element.inp_val2)\n                }\n            })\n            Thirddata.push({\n                Title: \"RV\",\n                Element: {\n                    time: element.rec_dat + element.rec_tim,\n                    value: Number(element.out_val1)\n                }\n            })\n        }\n\n\n        var ThirddataCell = []\n        for (let index = 0; index < Thirddata.length; index++) {\n            const element = Thirddata[index];\n            ThirddataCell.push(this.Thirdtablecell(element.Element, element.Title))\n        }\n\n        // console.log(FlootSheetSecondAreaData)\n        const SeconddataCellRender = FlootSheetSecondAreaData.map((value, index, arr) => {\n            const datajson = value.element\n            const title = value.title\n            return this.SecondDataCell(datajson, title)\n        })\n        const FourdataCellRender = FlootSheetFourthAreaData.map((value, index, arr) => {\n            const datajson = value.element\n            const title = value.title\n            return this.FourthDataCell(datajson, title)\n        })\n        return (\n            <div style={{ marginTop: \"20px\" }}>\n                <div style={{ display: 'flex', alignItems: 'center', height: '50px' }}>\n                    <t1>I/O</t1>\n                </div>\n                <div style={{ display: FirstdataCell.length === 0 ? \"none\" : \"block\", border: \"1px solid black\", borderCollapse: \"collapse\" }}>\n                    {FirstdataCell}\n                </div>\n                <div style={{ display: SeconddataCellRender.length === 0 ? \"none\" : \"block\", border: \"1px solid black\", borderCollapse: \"collapse\" }}>\n                    {SeconddataCellRender}\n                </div>\n                <div style={{ display: ThirddataCell.length === 0 ? \"none\" : \"block\", border: \"1px solid black\", borderCollapse: \"collapse\" }}>\n                    {ThirddataCell}\n                </div>\n                <div style={{ display: FourdataCellRender.length === 0 ? \"none\" : \"block\", border: \"1px solid black\", borderCollapse: \"collapse\" }}>\n                    {FourdataCellRender}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Flootsheetio;","import React, { Component } from 'react';\nimport Flootsheetio from './Flootsheetio'\n// import Flowsheetvitalsign from './Flootsheetvitalsign'\nimport Vitalxaxis from '../../Module/Vitalxaxis'\nimport { DatePicker } from 'antd';\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport './Flootsheetlayout.scss'\nimport X2JS from 'x2js';\nimport * as Wardstate from '../../Function/Wardstate'\n\nclass Flowsheetlayout extends Component {\n    state = {\n        PickerDate: moment(moment().format('YYYYMMDD')).valueOf(),\n        QDC: [],\n        QSPE: [],\n        // itemlist: []\n    }\n    componentDidMount() {\n        // const itemarray = ['10:00 至手術室手術間', '13:50 至手術室觀察區', '14:30 返回病房']\n        // this.setState({\n        //     itemlist: itemarray\n        // })\n        this.ApiData(this.state.PickerDate)\n    }\n\n    ApiData() {\n        const DateTime = this.state.PickerDate\n        const xm2 = new X2JS()\n        const { caseinfo } = this.props\n        const st = moment(DateTime + (7 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        const et = moment(DateTime + (31 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        console.log(caseinfo)\n        const QDC = ApiProvider.getQDC(caseinfo.CASEID, st, et)\n            .then(data => {\n                console.log(xm2.xml2js(data.data))\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                return parsedata\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const QSPE = ApiProvider.getQSPE(caseinfo.CASEID, st, et)\n            .then(data => {\n                const dataJson = Wardstate.XM2JSON(data.data)\n                // const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                if (Array.isArray(dataJson)) {\n                    return dataJson\n                }\n                else {\n                    const arr = []\n                    arr.push(dataJson)\n                    return arr\n                }\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        Promise.all([QDC, QSPE]).then(result => {\n            console.log(\"QSPE DATA = \" + result[1])\n            this.setState({\n                QDC: result[0], //IO要用的\n                QSPE: result[1]\n            })\n        })\n    }\n    onDateChange = (date, dateString) => {\n        this.sendDateData(date.valueOf())\n    }\n\n    render() {\n        const data = this.state.QSPE || [] //特殊護理事件\n        const array = this.state.QDC || []\n        const splist = data.filter(function (value, index, array) {\n            if (value === undefined) {\n                return null\n            }\n            console.log(value)\n            const str = value.special\n            return str.match(\"@v\") === null\n        })\n        const specialListRender = splist.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ display: \"flex\", color: \"rgba(59, 151, 225, 1)\" }}>{value.special.toString().trim()}</div>\n            );\n        })\n        if (array.length === 0) {\n            return null\n        }\n        return (\n            <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 6fr\" }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                        <div style={{ padding: \"0px 10px\" }}>\n                            <DatePicker width={200} defaultValue={moment(this.state.PickerDate)} allowClear={false} onChange={this.onDateChange} />\n                        </div>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                        <t2 style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            特殊護理事件:<t2 style={{ width: \"20px\", height: \"20px\", borderRadius: \"99em\", background: \"black\", color: \"white\", display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>{splist.length}</t2>\n                        </t2>\n                    </div>\n                    <div style={{ padding: \"5px 10px\" }}>\n                        <div style={{ border: \"rgba(238,238,238,1) 1px solid\", borderRadius: \"4px\", maxHeight: \"100px\", height: \"100px\", overflow: \"auto\" }}>\n                            {specialListRender}\n                        </div>\n                    </div>\n                </div>\n                <div style={{ marginBottom: \"10px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\" }}>\n                        <div></div>\n                        <Vitalxaxis max={200} min={0} select_interval={0} select_date={this.state.PickerDate} id_key=\"xaxis_flootsheet\" svg_id=\"xaxis_svg_flootsheet\"></Vitalxaxis>\n                    </div>\n                </div>\n                <div className='boxshadow'></div>\n                <div className='flootsheetlayout'>\n                    <Flootsheetio PickerDate={this.state.PickerDate} QDC={this.state.QDC}></Flootsheetio>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\" }}>\n                    <div></div>\n                    <Vitalxaxis max={200} min={0} select_interval={0} select_date={this.state.PickerDate} id_key=\"xaxis_flootsheet_bot\" svg_id=\"xaxis_svg_flootsheet_bot\"></Vitalxaxis>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Flowsheetlayout;","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport moment from 'moment';\n\nclass Examchart extends Component {\n    state = {\n        change: false\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n    drawChart() {\n        function formattimetoInteger(time) {\n            return new Date(time).getTime()\n        }\n        const { Time, id_key, svg_id, max, min, lineChart } = this.props\n\n        const sT = Time[0]\n        const endT = Time[1]\n\n        // 邊界\n        const margin = { top: 20, right: 20, bottom: 30, left: 50 },\n            width = 1000 - margin.left - margin.right,\n            height = 500 - margin.top - margin.bottom;\n\n        console.log(sT)\n        console.log(endT)\n\n        let x = d3.scaleTime().domain([sT, endT]).range([0, width])\n        let y = d3.scaleLinear().domain([min - 1, max + 1]).range([height, 0])\n\n        let svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            .style(\"height\", height + margin.top + margin.bottom)\n            .style(\"width\", width + margin.left + margin.right)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        svg.append('g')\n            .call(d3.axisBottom(x).ticks(5).tickFormat(d3.timeFormat('%m/%d')))\n            .attr(\"transform\", `translate(0,${height})`)\n            .style('stroke', 'black')\n            .style('stroke-width', 1);\n\n        svg.append('g')\n            .call(d3.axisLeft(y))\n            .style('stroke', 'black')\n            .style('stroke-width', 1);\n\n        let line = d3.line()\n            .x(d => x(moment(d.date, 'YYYYMMDDHHmm').toDate()))\n            .y(d => y(d.value))\n            .curve(d3.curveMonotoneX);\n\n        let lines = svg.append('g').attr('class', 'lines');\n\n        lines.selectAll(\"circle\")\n            .data(lineChart)\n            .enter()\n            .append('g')\n            .append(\"circle\")\n            .attr(\"class\", \"lines-circle\")\n            .attr(\"cx\", d => x(moment(d.date, 'YYYYMMDDHHmm').toDate()))\n            .attr(\"cy\", d => y(d.value))\n            .attr('r', 5)\n            .style('opacity', 1)\n            .style('fill', \"blue\");\n\n        lines\n            .selectAll('.line-group')\n            .data(lineChart)\n            .enter()\n            .append('g')\n            .attr('class', 'line-group')\n            .append('path')\n            .attr('class', 'line')\n            .attr('d', line(lineChart))\n            .style('stroke', 'black')\n            .style('fill', 'none');\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default Examchart;\n","import React, { Component } from 'react';\nimport { Select, Modal } from 'antd';\nimport * as ApiGithub from '../../API/ApiGithub'\nimport * as RegularData from '../../Data/RegularData'\nimport moment from 'moment'\nimport Examchart from './Examchart'\nimport Examaxis from './Examaxis'\nimport * as d3 from \"d3\"\n\nclass Labview extends Component {\n    state = {\n        Selectus: this.props.SelectStatus,\n        PickerDateRange: [moment(), moment()],\n        visible: false,\n        lineCharttitle: '',\n        lineChart: [],\n    }\n    componentDidMount() {\n        // ApiGithub.getExamReport()\n        //     .then(data => {\n        //         this.setState({\n        //             TitleList: data.data\n        //         })\n        //     })\n        //     .catch(err=>{\n        //         console.log(\"GithubAPI NG\" + err)\n        //     })\n        // this.setState({\n        //     TitleList: RegularData.ExamReportJson\n        // })\n    }\n\n    callbackDateFunction = (value) => {\n        this.props.parentDateCallback(value);\n    }\n    handleChange = (value) => {\n        this.callbackDateFunction(value)\n        this.setState({\n            Selectus: value\n        })\n    }\n    titleSearch = (value) => {\n        this.props.parentTitleCallback(value.target.value);\n    }\n    CellRender() {\n        const { DataList } = this.props\n        // console.log(DataList)\n        if (DataList.length === 0) {\n            return null\n        }\n        const DataListCell = DataList.map(function (element, index) {\n            const cellRender = element.Data.map(function (info, index) {\n                return (\n                    <centerstyle key={index} style={{ flex: 1, border: \"1px solid #cccccc\", borderCollapse: 'collapse' }}>\n                        <t3>{info}</t3>\n                    </centerstyle>\n                );\n            })\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"110px 1fr\", height: \"50px\" }}>\n                    <centerstyle style={{ border: \"1px solid #cccccc\", borderCollapse: 'collapse' }}>\n                        <t3>{element.Time}</t3>\n                    </centerstyle>\n                    <div style={{ display: \"flex\", gridTemplateColumns: \"repeat(9,1fr)\" }}>\n                        {cellRender}\n                    </div>\n                </div >\n            );\n        })\n        return DataListCell\n    }\n\n    fixLineChartData = (e) => {\n        const { DataList } = this.props;\n        const value = e.target.value;\n        const number = e.target.getAttribute('index');\n\n        let showDate = DataList.map(data => {\n            let temp = {}\n            temp['date'] = data.Time;\n            temp['value'] = data.Data[number];\n            return temp\n        })\n\n        showDate.sort((x, y) => {\n            return moment(x.date, 'YYYYMMDDHHmm').valueOf() - moment(y.date, 'YYYYMMDDHHmm').valueOf()\n        })\n\n        this.setState({\n            lineCharttitle: value,\n            lineChart: showDate,\n        }, () => { this.showModel() });\n    }\n    showModel = () => {\n        this.setState({\n            visible: true,\n        });\n    }\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    charttableview = () => {\n        const lineChart = this.state.lineChart\n        const itemTime = []\n        const itemValue = []\n        lineChart.map(data => { itemTime.push(data.date); itemValue.push(data.value) })\n\n        const max = Math.max(...itemValue)\n        const min = Math.min(...itemValue)\n        const stDay = moment(itemTime[0], 'YYYYMMDD').toDate()\n        const endDay = moment(itemTime[itemTime.length - 1], 'YYYYMMDD').toDate()\n        const PickerDateRange = [stDay, endDay]\n\n        console.log(lineChart)\n\n        return (\n            <div style={{ margin: \"20px 0px\" }}>\n                <Examchart lineChart={lineChart} Time={PickerDateRange} max={max} min={min} id_key={\"svgExamID\"} svg_id={\"svgExamSVG\"}></Examchart>\n                {/* <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\" }}>\n                    <div></div>\n                    <div>\n                        <Examaxis axisTop={true} Time={PickerDateRange} axisBot={false} max={max} min={min} id_key={\"id_axis_top_exam\"} svg_id={\"svg_axis_top_exam\"}></Examaxis>\n                    </div>\n                </div>\n                {chart}\n                <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\" }}>\n                    <div></div>\n                    <div>\n                        <Examaxis axisTop={false} Time={PickerDateRange} axisBot={true} max={max} min={min} id_key={\"id_axis_bot_exam\"} svg_id={\"svg_axis_bot_exam\"}></Examaxis>\n                    </div>\n                </div> */}\n            </div>\n        );\n    }\n\n    render() {\n        const { Option } = Select;\n        const visible = this.state.visible\n        const lineCharttitle = this.state.lineCharttitle\n        const handleOk = this.handleOk\n        const handleCancel = this.handleCancel\n        const fixLineChartData = this.fixLineChartData\n        const charttableview = this.charttableview()\n        const LabDataList = RegularData.ExamReportJson()\n        //0:CBC 1:電解質 2:肝功能 3:心臟 4:凝血 5:GAS 6:Glucose\n        const SelectList = LabDataList.map(function (info, index) {\n            // console.log(info.index)\n            return (\n                <Option key={info.index} value={info.index} >{info.select}</Option>\n            );\n        })\n        const SelectTitlefilter = LabDataList.filter(function (element, index) {\n            const selectdata = Select\n            return element.index = selectdata\n        })\n        if (SelectTitlefilter.length === 0) {\n            return null\n        }\n        const SelectTitle = SelectTitlefilter[this.state.Selectus].title\n        const SelectTitleRender = SelectTitle.map(function (info, index) {\n            return (\n                <centerstyle style={{ flex: 1 }} key={index}>\n                    <button style={{ backgroundColor: \"transparent\", border: \"2px blue none\" }} index={index} value={info} onClick={fixLineChartData}>{info}</button>\n                </centerstyle >\n            );\n        })\n        const ExamLab = this.CellRender()\n        // console.log(ExamLab)\n        return (\n            <div>\n                <Modal\n                    title={lineCharttitle}\n                    visible={visible}\n                    onOk={handleOk}\n                    onCancel={handleCancel}\n                    width={1200}\n                    footer={null}>\n                    {charttableview}\n                </Modal>\n                <t1>LAB(常規檢驗)</t1>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"auto 1fr\", marginTop: \"10px\", gridColumnGap: \"5px\" }}>\n                    <t2 style={{ display: \"flex\", alignItems: \"center\" }}>檢驗類別:</t2>\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                        <Select defaultValue={this.state.Selectus} style={{ width: \"80%\" }} onChange={this.handleChange}>\n                            {SelectList}\n                        </Select>\n                    </div>\n                </div>\n                <div style={{ marginTop: \"10px\", display: \"grid\", gridTemplateColumns: \"110px 1fr\", height: \"50px\", backgroundColor: \"#E2EDF3\" }}>\n                    <centerstyle>\n                        <t2>檢驗項目</t2>\n                    </centerstyle>\n                    <div style={{ display: \"flex\", gridTemplateColumns: \"repeat(9,1fr)\", justifycontent: \"space-between\" }} onClick={this.titleSearch}>\n                        {SelectTitleRender}\n                    </div>\n                </div>\n                <div>{this.state.Title}</div>\n                {ExamLab}\n            </div >\n        );\n    }\n}\n\nexport default Labview;\n","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nclass Examaxis extends Component {\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n    drawChart() {\n        function formattimetoInteger(time) {\n            return new Date(time).getTime()\n        }\n        function monthformat(month) {\n            return month + 1\n        }\n\n        var formatday = d3.timeFormat(\"%d\")\n        function multiFormat(date) {\n\n            return monthformat(new Date(date).getMonth()) + \"/\" + formatday(date)\n        }\n        const {Time, id_key, svg_id, axisBot, axisTop, max, min } = this.props\n        const Start_time = formattimetoInteger(Time[0])\n        const End_time = formattimetoInteger(Time[1])\n        const interval = (End_time - Start_time) / (24 * 60 * 60 * 1000)\n        const viewwidth = window.screen.availWidth - 218 - 15\n\n        var time_interval = []\n        for (let index = 0; index < interval + 1; index++) {\n            const element = Start_time + index * 24 * 60 * 60 * 1000\n            time_interval.push(element)\n        }\n        var x = d3.scaleLinear().domain([Start_time, End_time]).range([0, viewwidth])\n        var y = d3.scaleLinear().domain([min, max]).range([100, 0])\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            .attr(\"viewbox\", [0, 0, viewwidth + 30, 20])\n            .style(\"height\", 20)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 30 + \",\" + 20 + \")\");\n\n\n        var xAxis = d3.axisTop(x)\n            .tickValues(time_interval)\n            .tickPadding(0)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n\n        var xAxisbot = d3.axisBottom(x)\n            .tickValues(time_interval)\n            .tickPadding(-10)\n            .tickSize(0,0)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n        if (axisTop) {\n            svg.append(\"g\")\n                .call(xAxis)\n                .attr({\n                    'font-size': \"10px\",\n                    'fill': 'black'\n                })\n        }\n        if (axisBot) {\n            svg.append(\"g\")\n                .call(xAxisbot)\n                .attr({\n                    'font-size': \"10px\",\n                    'fill': 'black'\n                })\n        }\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key} style={{ height: \"20px\" }}></div>\n        );\n    }\n}\n\nexport default Examaxis;","import React, { Component } from 'react';\nimport './ExamNonlabtablecell.scss'\n// import { Nonlablist } from '../../Data/Wardviewdata'\nimport moment from 'moment'\nimport NonlabviewtableCell from '../CrossSectionView/NonlabviewtableCell'\nimport { Modal } from 'antd';\nimport InsReportModal from '../ExamReportModal'\n\nclass Examnonlabviewtable extends Component {\n    state = {\n        visible: false\n    }\n\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部\"] = []\n\n        inputs.forEach(input => {\n            let content = input.ORPROCED;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部\"].push(input)\n        });\n\n        return allResult;\n    }\n\n    render() {\n        function listforstatus(ordlist, ressect, pickerdaterange, StateMode, InputMode) {\n            if (StateMode !== 0) {\n                /*\n                預設 \n                全部 StateMode == 0\n                已開單 StateMode == 1, data.ORSTATUS == 30\n                已簽收 StateMode == 2, data.ORSTATUS == 31\n                已發報告 StateMode == 3, data.ORSTATUS == 32\n                */\n                const changeState = { '1': '30', '2': '31', '3': '32' }\n                ordlist = ordlist.filter(data => {\n                    return data.ORSTATUS == changeState[StateMode.toString()]\n                })\n            }\n            if (InputMode !== null) {\n                ordlist = ordlist.filter(data => {\n                    return data.ORPROCED.match(InputMode) !== null\n                })\n            }\n\n            var status_report = []\n            console.log(ordlist, ressect, pickerdaterange)\n            const et = pickerdaterange[1].valueOf() + (24 * 60 * 60 * 1000)\n            const st = pickerdaterange[0].valueOf()\n            if (Array.isArray(ordlist) && Array.isArray(ressect)) {\n                for (let index = 0; index < ordlist.length; index++) {\n                    const element = ordlist[index];\n                    const time = element.ORBGNDT.toString().trim() + element.ORBGNTM.toString().trim()\n                    const timeStamp = moment(time, 'YYYY-MM-DDHHmmss').valueOf()\n                    if (timeStamp > st && timeStamp < et) {\n                        const status = ressect.find(function (value, index, array) {\n                            return value.ORDCLNM === element.ORDCLNM\n                        })\n                        if (status) {\n                            status_report.push({\n                                \"status\": true,\n                                \"element\": element\n                            })\n                        }\n                        else {\n                            status_report.push({\n                                \"status\": false,\n                                \"element\": element\n                            })\n\n                        }\n                    }\n                }\n            }\n            return status_report\n        }\n        function statusflag(status) {\n            switch (status) {\n                case 0:\n                    return '已開單'\n                case 1:\n                    return '已簽收'\n                case 2:\n                    return '已發報告'\n                default:\n                    return '--'\n            }\n        }\n        const { PickerDateRange, ORDLIST, RESSECT, StateMode, InputMode } = this.props\n\n        let clusteredData = {}\n        if (this.props.parser !== undefined) {\n            clusteredData = this.parse(ORDLIST, this.props.parser)\n        }\n\n        //filter data by selected class\n        let filteredData = clusteredData[this.props.selectedClass];\n\n        //Picker Date 前三天\n        const list = listforstatus(filteredData, RESSECT, PickerDateRange, StateMode, InputMode)\n        console.log(list)\n        const showModal = this.props.showModal\n        const nonlabcell = list.map(function (value, index, array) {\n            // console.log(value)\n            const time = moment(value.element.ORDATE.toString().trim() + value.element.ORTIME.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n            const come = value.element.ORSPCN1\n            const name = value.element.ORPROCED\n            const status = value.element.ORSTATUS\n\n            return (\n                <NonlabviewtableCell key={\"Examnonlabviewtable\" + index} come={come} time={time} name={name} status={status} hisId={value.element.ORHISTNO} caseId={value.element.ORDSEQCN} month={value.element.ORMM} seq={value.element.ORDSEQNO} showModal={showModal}></NonlabviewtableCell>\n            );\n        })\n\n        return (\n            <div style={{ marginTop: \"10px\" }}>\n                <div style={{ height: \"50px\", border: \"#E2EDF3 1px solid\", backgroundColor: \"#E2EDF3\", display: \"grid\", gridTemplateColumns: \"1fr 1.5fr 1fr 1fr 1fr\" }}>\n                    <t3 className='nonlabtebletitlecell'>檢驗日期</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗項目名稱</t3>\n                    <t3 className='nonlabtebletitlecell'>檢體來源</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗項目狀態</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗結果</t3>\n                </div>\n                <div className='nonlabviewtable'>\n                    {nonlabcell}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Examnonlabviewtable\n","import React, { Component } from 'react';\nimport Examnonlabviewtable from './ExamNonlabtablecell'\nimport { DatePicker, Input, Button, Select, Modal } from 'antd';\nimport moment from 'moment';\nimport searchlogo from '../../Image/svg/Search.svg'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport InsReportModal from '../ExamReportModal'\n\n// var mode_class, mode_state;\nclass Nonlabview extends Component {\n    state = {\n        ClassMode: \"全部\",\n        StateMode: 0,\n        InputMode: null,\n        parser: { \"mappings\": [] },\n\n        modalVisible: false,\n        modalReport: \"\"\n    }\n\n    componentDidMount() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"NonLabExamReport\");\n                parser.mappings = [{ \"key\": \"全部\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson ExamReportNonLab OK \" + JSON.stringify(parser))\n                this.setState({\n                    parser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    Inputvaluesearch() {\n        // console.log(document.getElementById(\"keywordsearch\").value)\n        const inputvalue = document.getElementById(\"keywordsearch\").value\n        if (inputvalue === null) {\n            return null\n        }\n\n        this.setState({ InputMode: inputvalue })\n    }\n\n    onChangeState = (value) => {\n        this.setState({ StateMode: value })\n    }\n\n    onChangeClass = (value) => {\n        this.setState({ ClassMode: value })\n    }\n\n    showModal = (report) => {\n        console.log(\"showModal :\" + JSON.stringify(report))\n        this.setState({\n            modalVisible: true,\n            modalReport: report\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    render() {\n        var statetime = {\n            \"Starttime\": (+new Date()),\n            \"Endtime\": (+new Date())\n        }\n        const datearray = []\n        const { Option } = Select;\n        function onChange(value, dateString) {\n            statetime.Starttime = (+new Date(dateString[0]))\n            statetime.Endtime = (+new Date(dateString[1]))\n            datearray.push(statetime.Starttime)\n            datearray.push(statetime.Endtime)\n        }\n        function Inputchange() {\n            const value = {\n                \"date\": datearray,\n                \"keyword\": document.getElementById(\"keywordsearch\").value\n            }\n            console.log(value)\n        }\n        const { PickerDateRange, ORDLIST, RESSECT } = this.props\n        const { modalVisible, modalReport } = this.state\n        const showModal = this.showModal\n        const handleOk = this.handleOk\n        const handleCancel = this.handleCancel\n        return (\n            <div>\n                <t1>報告清單</t1>\n                <div style={{ display: 'grid', gridTemplateColumns: \"130px 130px 1fr 25px\", gridColumnGap: \"5px\", marginTop: \"10px\" }}>\n                    <Select defaultValue={this.state.ClassMode} placeholder=\"選擇檢驗類別\" style={{ width: 120 }} onChange={this.onChangeClass}>\n                        {this.state.parser.mappings.map((mapping, index) => {\n                            return <Option key={index} value={mapping.key}>{mapping.key}</Option>\n                        })}\n                    </Select>\n                    <Select defaultValue={this.state.StateMode} placeholder=\"選擇項目狀態\" style={{ width: 120 }} onChange={this.onChangeState}>\n                        <Option value={0}>全部</Option>\n                        <Option value={1}>已開單</Option>\n                        <Option value={2}>已簽收</Option>\n                        <Option value={3}>已發報告</Option>\n                    </Select>\n                    <Input id=\"keywordsearch\" placeholder=\"輸入關鍵字\" />\n                    <div onClick={() => this.Inputvaluesearch()} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <img src={searchlogo} alt=\"searchlogo\" />\n                    </div>\n                </div>\n                <Examnonlabviewtable PickerDateRange={PickerDateRange} ORDLIST={ORDLIST} RESSECT={RESSECT} selectedClass={this.state.ClassMode} parser={this.state.parser} StateMode={this.state.StateMode} InputMode={this.state.InputMode} visible={modalVisible} showModal={showModal} handleOk={handleOk} handleCancel={handleCancel}></Examnonlabviewtable>\n                <Modal\n                    title={\"檢驗結果\"}\n                    visible={modalVisible}\n                    onOk={handleOk}\n                    onCancel={handleCancel}\n                    width={1000}\n                    footer={null}>\n                    <InsReportModal report={modalReport}></InsReportModal>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Nonlabview\n","import React, { Component } from 'react';\nimport Labview from './ExamLabview'\nimport { DatePicker } from 'antd';\nimport searchlogo from '../../Image/svg/Search.svg'\nimport Examchart from './Examchart'\nimport Examaxis from './Examaxis'\nimport './ExamReport.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport Nonlabview from './NonLabview'\nimport * as RegularData from '../../Data/RegularData'\n\nclass Examreport extends Component {\n    state = {\n        selectdata: 0,\n        selectTitle: '',\n        PickerDateRange: [moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD'), moment()],\n        RESDGLU1: [], //累積報告\n        RESLAB02: [], //累積報告\n        RESLAB01: [],  //累積報告\n        RESDBGAS: [],  //累積報告\n        RESLAB0C: [],//累積報告\n        ORDLIST: [],\n        RESSECT: []\n    }\n    constructor(props) {\n        super(props)\n        this.PickerDateRangeChange = this.PickerDateRangeChange.bind(this)\n    }\n    PickerDateRangeChange(date, dateString) {\n        this.setState({ PickerDateRange: [moment(dateString[0], 'YYYYMMDD'), moment(dateString[1], 'YYYYMMDD')] })\n        // console.log(`show DataRange : ${this.state.PickerDateRange}`)\n    }\n    SelectDataList() {\n        function vallofnull(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"\"\n            }\n            return value.toString().trim()\n        }\n        const DateRange = this.state.PickerDateRange\n        console.log(`show DataRange : ${DateRange}`)\n        const selectData = this.state.selectdata\n        const st_timestamp = DateRange[0].valueOf()\n        const et_timestamp = DateRange[1].valueOf() + (24 * 60 * 60 * 1000)\n        // const { PickerDateRange, RESLAB02, RESDGLU1, RESLAB01, RESDBGAS, RESLAB0C, ORDLIST, RESSECT } = this.props\n        const RESLAB02 = this.state.RESLAB02\n        const RESDGLU1 = this.state.RESDGLU1\n        const RESLAB01 = this.state.RESLAB01\n        const RESDBGAS = this.state.RESDBGAS\n        const RESLAB0C = this.state.RESLAB0C\n\n\n        var CellData = []\n        console.log(selectData, RESLAB02, RESDGLU1, RESLAB01, RESDBGAS)\n        if (selectData === 0) { // CBC\n            for (let index = 0; index < RESLAB02.length; index++) {\n                const element = RESLAB02[index];\n                const WBC = vallofnull(element.RSV01)\n                const Band = vallofnull(element.RSV13)\n                const Seq = vallofnull(element.RSV14)\n                const Lym = vallofnull(element.RSV15)\n                const Hb = vallofnull(element.RSV03)\n                const Hct = vallofnull(element.RSV04)\n                const Plt = vallofnull(element.RSV09)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                console.log(\"time \" + time + \" st_timestamp \" + st_timestamp + \" et_timestamp \" + et_timestamp)\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [WBC, Band, Seq, Lym, Hb, Hct, Plt]\n                    })\n                }\n            }\n            console.log(\"CellData => \" + JSON.stringify(CellData))\n            return CellData\n        }\n        if (selectData === 1) { // 電解質與腎\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const Na = vallofnull(element.RSV13)\n                const K = vallofnull(element.RSV14)\n                const Cl = vallofnull(element.RSV15)\n                const CaFree = \"No\"\n                const CaTotal = vallofnull(element.RSV03)\n                const Mg = \"No\"\n                const P = vallofnull(element.RSV17)\n                const BUN = vallofnull(element.RSV05)\n                const Cr = vallofnull(element.RSV06)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [Na, K, Cl, CaFree, CaTotal, Mg, P, BUN, Cr]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 2) { // 肝功能\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const Alt = vallofnull(element.RSV11)\n                const AST = vallofnull(element.RSV12)\n                const TBil = vallofnull(element.RSV08)\n                const DBil = vallofnull(element.RSV25)\n                const rGGT = vallofnull(element.RSV19)\n                const Alkp = vallofnull(element.RSV09)\n                const Alb = vallofnull(element.RSV02)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [Alt, AST, TBil, DBil, rGGT, Alkp, Alb]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 3) { // 早產兒\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const Iron = vallofnull(element.RSV26)\n                const TIBC = vallofnull(element.RSV28)\n                const FeSat = parseInt(vallofnull(element.RSV26)) / parseInt(vallofnull(element.RSV26))\n                const LDH = vallofnull(element.RSV10)\n                const Alkp = vallofnull(element.RSV9)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [Iron, TIBC, FeSat, LDH, Alkp]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 4) { // 心臟\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const ck = vallofnull(element.RSV18)\n                const ckMB = vallofnull(element.RSV28)\n                const BNP = \"No\"\n                const Troponinl = vallofnull(element.RSV30)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [ck, ckMB, BNP, Troponinl]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 5) { // 凝血\n            for (let index = 0; index < RESLAB02.length; index++) {\n                const element = RESLAB02[index];\n                const PT = vallofnull(element.RSV10)\n                const APTT = vallofnull(element.RSV11)\n                const INR = vallofnull(element.RSV12)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [PT, APTT, INR]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 6) { // GAS(Acid-Base)\n            for (let index = 0; index < RESDBGAS.length; index++) {\n                const element = RESDBGAS[index];\n                const PH = vallofnull(element.SS07)\n                const pCO2 = vallofnull(element.SS06)\n                const pO2 = vallofnull(element.SS08)\n                const HCO3 = vallofnull(element.SS04)\n                const BE = vallofnull(element.SS01)\n                const Sample = \"No\"\n                const O2Sat = vallofnull(element.SS05)\n                const FiO2 = vallofnull(element.SS03)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [PH, pCO2, pO2, HCO3, BE, Sample, O2Sat, FiO2]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 7) { // GAS(Additionary)\n            for (let index = 0; index < RESDBGAS.length; index++) {\n                const element = RESDBGAS[index];\n                const Hb = vallofnull(element.SS11)\n                const Hct = vallofnull(element.SS12)\n                const Na = vallofnull(element.SS13)\n                const K = vallofnull(element.SS14)\n                const CaFree = vallofnull(element.SS15)\n                const Bun = vallofnull(element.SS16)\n                const Cr = vallofnull(element.SS17)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [Hb, Hct, Na, K, CaFree, Bun, Cr]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 8) { // Glucose\n            for (let index = 0; index < RESDGLU1.length; index++) {\n                const element = RESDGLU1[index]\n                const GluBeside = vallofnull(element.GLUFAST)\n                const GluLab = vallofnull(element.RSV16)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [GluBeside, GluLab]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 9) { // 黃疸\n            for (let index = 0; index < RESLAB0C.length; index++) {\n                const element = RESLAB0C[index]\n                const TCB = vallofnull(element.RSV01)\n                const MicroBil = vallofnull(element.RSV02)\n                const TBil = vallofnull(element.RSV03)\n                const DBil = vallofnull(element.RSV04)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [TCB, MicroBil, TBil, DBil]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 10) { // 感染指數\n            for (let index = 0; index < RESLAB02.length; index++) {\n                const elementOne = RESLAB02[index]\n                const elementTwo = RESLAB01[index]\n                const WBC = vallofnull(elementOne.RSV01)\n                const Band = vallofnull(elementOne.RSV13)\n                const Seg = vallofnull(elementOne.RSV14)\n                const Lym = vallofnull(elementOne.RSV15)\n                const PCT = \"NO\"\n                const CRP = vallofnull(elementTwo.RSV32)\n                const time = moment((elementOne.ORRESDT.toString() + elementOne.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((elementOne.ORRESDT.toString() + elementOne.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [WBC, Band, Seg, Lym, PCT, CRP]\n                    })\n                }\n            }\n            return CellData\n        }\n        return null\n\n    }\n\n\n\n    componentDidMount() {\n        this.APIUpdate(this.state.PickerDateRange)\n        this.SelectDataList = this.SelectDataList.bind(this)\n    }\n\n    ChangeRangePicker(dates, datestrings) {\n\n    }\n    APIUpdate(DateRange) {\n        console.log(DateRange)\n        function selectMonthInterval(PickerDate) {\n            const timestampInterval = new Date().getTime() - new Date(PickerDate).getTime()\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        const { caseinfo } = this.props\n\n        const st = DateRange[0].format(\"YYYY-MM-DD\")\n        const datePick = DateRange[0].format('YYYY/MM/DD')\n        console.log(DateRange, st, datePick)\n        // const TRANSDate = moment(caseinfo.TRANSINDT, 'YYYYMMDD').format('YYYY-MM-DD')\n        const MonthInterval = selectMonthInterval(datePick)\n        const RESDGLU1 = ApiProvider.getStoredProcedureRESDGLU1(caseinfo.HISID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESLAB02 = ApiProvider.getStoredProcedureRESLAB02(caseinfo.HISID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESLAB01 = ApiProvider.getStoredProcedureRESLAB01(caseinfo.HISID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESDBGAS = ApiProvider.getStoredProcedureRESDBGAS(caseinfo.HISID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESLAB0C = ApiProvider.getStoredProcedureRESLAB0C(caseinfo.HISID, st)\n            .then(data => {\n                console.log(data.data)\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const ORDLIST = ApiProvider.getStoredProcedureORDLIST(caseinfo.HISID, st, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                console.log(data.data)\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        const RESSECT = ApiProvider.getStoredProcedureRESSECT(caseinfo.HISID, MonthInterval, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        Promise.all([RESDGLU1, RESLAB02, RESLAB01, RESDBGAS, RESLAB0C, ORDLIST, RESSECT]).then(result => {\n            console.log(result)\n            this.setState({\n                RESDGLU1: result[0], //累積報告\n                RESLAB02: result[1],  //累積報告\n                RESLAB01: result[2],  //累積報告\n                RESDBGAS: result[3],  //累積報告\n                RESLAB0C: result[4],  //累積報告\n                ORDLIST: result[5],\n                RESSECT: result[6],\n            })\n        })\n    }\n    callbackDateFunction = (select) => {\n        // console.log(select)\n        this.setState({\n            selectdata: select\n        })\n    }\n\n    callbackTitleFunction = (select) => {\n        // console.log(select)\n        this.setState({\n            selectTitle: select\n        })\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const data = this.SelectDataList()\n        console.log(\"SelectDataList => \" + data)\n        const { RangePicker } = DatePicker\n        return (\n            <div className='examreportlayout'>\n                <RangePicker\n                    defaultValue={this.state.PickerDateRange}\n                    format={\"YYYY/MM/DD\"}\n                    allowClear={false}\n                    locale={\"zh_TW\"}\n                    toString={(dates, datestrings) => { this.setState({ RangePicker: dates }) }}\n                    onChange={this.PickerDateRangeChange}\n                />\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" }}>\n                    <Labview selectvalue={this.state.selectdata}\n                        parentDateCallback={this.callbackDateFunction}\n                        DataList={data}\n                        SelectStatus={this.state.selectdata}\n                        PickerDateRange={this.state.PickerDateRange}\n                        parentTitleCallback={this.callbackTitleFunction}>\n                    </Labview>\n                    <Nonlabview ORDLIST={this.state.ORDLIST} RESSECT={this.state.RESSECT} caseinfo={caseinfo} PickerDateRange={this.state.PickerDateRange}></Nonlabview>\n                </div>\n                {/* {this.charttableview()} */}\n                <div style={{ display: \"flex\", justifyContent: 'center', alignItems: 'center' }}>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Examreport;\n","import React, { Component } from 'react';\nimport Prescriptionordertable from '../Prescriptionorder/Prescriptionorder'\nimport Treatmentorderlayout from '../Treatmentorder/Treatmentorder'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass Orderview extends Component {\n    state = {\n        UDORDER0: [],\n        TRTMNTQ1: [],\n        PickerDate: moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n    }\n    componentDidMount() {\n        this.apidata()\n    }\n    apidata() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID.toString().trim()\n        const CID = caseinfo.CASEID.toString().trim()\n        const UDORDER0 = ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureUDORDER0 NG \" + JSON.stringify(err))\n            });\n        const TRTMNTQ1 = ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureTRTMNTQ1 NG \" + JSON.stringify(err))\n            });\n        Promise.all([UDORDER0, TRTMNTQ1]).then(result => {\n            console.log(result)\n            this.setState({\n                UDORDER0: result[0],\n                TRTMNTQ1: result[1]\n            })\n        })\n    }\n    render() {\n        const { caseinfo } = this.props\n        const udata = this.state.UDORDER0\n        const tdata = this.state.TRTMNTQ1\n        if (udata.length === 0 || tdata.length === 0) {\n            //Loading\n            return null\n        }\n        console.log(udata)\n        return (\n            <div>\n                <div style={{ maxHeight: '75vh', overflowY: 'auto' }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" }}>\n                        <Prescriptionordertable PickerDate={this.state.PickerDate} UDORDER0={udata} searchbar={true} caseinfo={caseinfo}></Prescriptionordertable>\n                        <Treatmentorderlayout PickerDate={this.state.PickerDate}  TRTMNT01={tdata} searchbar={true} caseinfo={caseinfo}></Treatmentorderlayout>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Orderview;","import React, { Component } from 'react';\nimport {hhmmssformat,mmddformat} from '../../Function/Timeformat'\n\nclass Notecell extends Component {\n    state = {\n        displayMode: \"none\"\n    }\n\n\n    sendData(info) {\n        console.log(info)\n        this.props.parentCallback(info);\n    }\n\n    display_rowdate(value) {\n        console.log(value)\n        const state = this.state.displayMode\n        if (value === 0) {\n\n        }\n        else {\n            if (state === 'none') {\n                this.setState(\n                    {\n                        displayMode: \"block\"\n                    }\n                )\n            }\n            else {\n                this.setState(\n                    {\n                        displayMode: \"none\"\n                    }\n                )\n            }\n        }\n\n    }\n\n    format_display_date(date) {\n        const { display_date } = this.props\n        if (date === display_date) {\n            return true\n        }\n        else return false\n    }\n\n    render() {\n        function clickstyle(datanumber) {\n            if (datanumber === 0) {\n                return \"default\"\n            }\n            else return \"pointer\"\n        }\n        const { infoDate, rowdata } = this.props\n        const date_style = {\n            date_false:{ height: \"40px\", display: \"flex\", alignItems: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderTopWidth: \"0px\", cursor: \"pointer\" },\n            date_true:{ height: \"40px\", display: \"flex\", alignItems: \"center\",background:\"rgba(59, 151, 225,1)\", border: \"rgb(59, 151, 225) 100% 1px solid\", borderTopWidth: \"0px\", cursor: \"pointer\" }\n        }\n        var filterData_Date = rowdata.filter(function (item, index, array) {\n            return item.NoteTime - infoDate < 24 * 60 * 60 * 1000 && item.NoteTime - infoDate > 0;       // 取得大於五歲的\n        });\n        const roedata_layout = filterData_Date.map((info, index) =>\n            <div onClick={() => this.sendData(info)} key={index} style={this.format_display_date(info.NoteTime)?date_style.date_true:date_style.date_false}>{hhmmssformat(info.NoteTime)}</div>\n        )\n\n        return (\n            <div style={{ marginTop: \"10px\" }}>\n                <div onClick={() => this.display_rowdate(filterData_Date.length)} style={{ height: \"40px\", display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\", border: \"rgba(238,238,238,1) 1px solid\", cursor: clickstyle(filterData_Date.length) }}>\n                    <div>{mmddformat(infoDate)}</div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", width: \"30px\", height: \"30px\", borderRadius: \"99em\", background: \"rgba(59, 151, 225, 1)\", color: \"white\" }}>{filterData_Date.length}</div>\n                </div>\n                <div style={{ display: this.state.displayMode }}>{roedata_layout}</div>\n            </div>\n        );\n    }\n}\n\nexport default Notecell","import React, { Component } from 'react';\nimport { DatePicker, Select } from 'antd';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\nimport Notelist from './Notelist'\nimport searchlogo from '../../Image/svg/Search.svg'\nimport { Button } from 'antd'\nimport './Note.scss'\nimport X2JS from 'x2js';\n\n\nvar dataRange = [];\nclass Noteview extends Component {\n    state = {\n        StartTime: null,\n        EndTime: null,\n        display_data: null,\n        context: null,\n        contentdisplay: false,\n\n\n        ADMDISP: [],\n        ADMLIST: [],\n        DISLIST: [],\n        DISDISP: [],\n        DTAROTQ4: [],\n        DTASOAPQ: [],\n        PCASELIST: [],\n        ERDISP: [],\n        PRGTXQRY: [],\n        PRGTXQRYDIS: [],\n        CPSLIST: [],\n        CPSDISP: [],\n        QPNOT: [],\n        QPNOTDIS: [],\n        OPSORAQ1: [],\n        OPSORAQ2:[],\n        SelectClass: 0\n\n    }\n    componentDidMount() {\n        this.apiData()\n    }\n\n    SelectADMDISP(ADISTNO, ADICASE) {\n        console.log(ADISTNO, ADICASE)\n        ApiProvider.getStoredProcedureADMDISP(ADISTNO, ADICASE)\n            .then(data => {\n                // console.log(data.data)\n                this.setState({\n                    ADMDISP: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureADMDISP NG \" + JSON.stringify(err));\n            });\n    }\n    SelectDISDISP(CID) {\n        // console.log(ADISTNO, ADICASE)\n        const { caseinfo } = this.props\n        ApiProvider.getStoredProcedureDISDISP(caseinfo.HISID, CID)\n            .then(data => {\n                // console.log(data.data)\n                this.setState({\n                    DISDISP: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureADMDISP NG \" + JSON.stringify(err));\n            });\n    }\n\n    SelectERDISP(CID) {\n        const { caseinfo } = this.props\n        ApiProvider.getStoredProcedureERDISP(caseinfo.HISID, CID)\n            .then(data => {\n                this.setState({\n                    ERDISP: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n    }\n    SelectDTASOAPQ(date, dpt) {\n        const { caseinfo } = this.props\n        //門診紀錄內容 需要時間和醫生編號\n        ApiProvider.getStoredProcedureDTASOAPQ(caseinfo.HISID, date, dpt)\n            .then(data => {\n                this.setState({\n                    DTASOAPQ: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureDTASOAPQ NG \" + JSON.stringify(err));\n            });\n    }\n    SelectPRGTXQRYDIS(DIS1) {\n        this.setState({\n            PRGTXQRYDIS: DIS1\n        })\n    }\n    SelectCPSDISP(HID, CID, SEQ) {\n        ApiProvider.getStoredProcedureCPSDISP(HID, CID, SEQ)\n            .then(data => {\n                console.log(data.data)\n                this.setState({\n                    CPSDISP: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n    }\n    SelectQPNOTDIS(data) {\n        this.setState({\n            QPNOTDIS: data\n        })\n    }\n\n    SelectOPSORAQ1(OPABGNDT, OPATIMES) {\n        const { caseinfo } = this.props\n        //門診紀錄內容 需要時間和醫生編號\n        ApiProvider.getStoredProcedureOPSORAQ2(caseinfo.HISID, OPABGNDT, OPATIMES)\n            .then(data => {\n                this.setState({\n                    OPSORAQ2: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureDTASOAPQ NG \" + JSON.stringify(err));\n            });\n    }\n    apiData() {\n        const { caseinfo } = this.props\n        //入院並摘\n        const ADMLIST = ApiProvider.getStoredProcedureADMLIST(caseinfo.HISID, \"DOC3924B\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureADMLIST NG \" + JSON.stringify(err));\n            });\n        //出院並摘\n        const DISLIST = ApiProvider.getStoredProcedureDISLIST(caseinfo.HISID, \"DOC3924B\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureDISLIST NG \" + JSON.stringify(err));\n            });\n\n        //門診紀錄清單\n        const DTAROTQ4 = ApiProvider.getStoredProcedureDTAROTQ4(caseinfo.HISID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureDTAROTQ4 NG \" + JSON.stringify(err));\n            });\n\n\n        //急診紀錄清單\n        const PCASELIST = ApiProvider.getStoredProcedurePCASELIST(caseinfo.HISID, \"DOC3924B\", \"E\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n\n\n\n\n        const CPSLIST = ApiProvider.getStoredProcedureCPSLIST(caseinfo.HISID, \"DOC3924B\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n\n        function nullvalue(value) {\n            if (value === null) {\n                return \"911\"\n            }\n            console.log(value)\n            const PRGTXQRYDATE = moment(value.PLOCDT, 'YYYYMMDD').format(\"YYYYMM\")\n            const D = PRGTXQRYDATE.substr(3, 3)\n            return D\n        }\n\n        const LIVEPLOC = nullvalue(caseinfo.PLOCSTART)\n        console.log(LIVEPLOC)\n        const PRGTXQRY = ApiProvider.getStoredProcedurePRGTXQRY(caseinfo.HISID, LIVEPLOC, caseinfo.CASEID)\n            .then(data => {\n\n                let recordTime = [];\n                let recordResult = [];\n                for (var i = 0; i < data.data.length; i++) {\n                    //find type\n                    const time = data.data[i].PRGDT + data.data[i].PRGTM;\n                    const content = \"\\n\" + data.data[i].PRGTYPE + \"\\n\" + data.data[i].PRGTX;\n                    if (recordTime.indexOf(time) === -1) {\n                        //new type\n                        const newObj = {\n                            \"time\": time,\n                            \"PRGDT\": data.data[i].PRGDT,\n                            \"PRGTM\": data.data[i].PRGTM,\n                            \"content\": content\n                        }\n                        recordResult.push(newObj);\n                        recordTime.push(time);\n\n                    } else {\n                        //old type\n                        const idx = recordResult.findIndex(item => item.time === time)\n                        recordResult[idx].content = recordResult[idx].content + \"\\n\" + content\n                    }\n                }\n\n                return recordResult\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n        const transdt = caseinfo.TRANSINDT\n        const ST = moment(transdt, \"YYYYMMDD\").format(\"YYYYMMDDHHmm\")\n        const ET = moment().format(\"YYYYMMDDHHmm\")\n\n        const QPNOT = ApiProvider.getQPNOT(caseinfo.CASEID, ST, ET)\n            .then(data => {\n                const xm2 = new X2JS()\n                const source = data.data\n                const parseSource = xm2.xml2js(source).outmsg.resconts.rescont\n                return parseSource\n            })\n            .catch(err => {\n\n            })\n        const OPSORAQ1 = ApiProvider.getStoredProcedureOPSORAQ1(caseinfo.HISID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => { console.log(err) })\n        Promise.all([ADMLIST, DISLIST, DTAROTQ4, PCASELIST, PRGTXQRY, CPSLIST, QPNOT, OPSORAQ1]).then(result => {\n            console.log(result)\n            this.setState({\n                ADMLIST: result[0],\n                DISLIST: result[1],\n                DTAROTQ4: result[2],\n                PCASELIST: result[3],\n                PRGTXQRY: result[4],\n                CPSLIST: result[5],\n                QPNOT: result[6],\n                OPSORAQ1: result[7]\n            })\n        })\n    }\n\n\n\n    callbackFunction = (item_array) => {\n        console.log(item_array)\n        this.setState(\n            {\n                display_data: item_array.NoteTime,\n                context: item_array.Content,\n                contentdisplay: true\n            }\n        )\n\n    }\n    handleChange = (value) => {\n\n        console.log(`selected ${value}`);\n        this.setState({\n            SelectClass: value,\n        });\n\n    }\n    onClickSearch() {\n        if (dataRange.length !== 0) {\n            this.setState(\n                {\n                    StartTime: dataRange[0],\n                    EndTime: dataRange[1]\n\n                }\n            )\n        }\n\n    }\n    onDateChange = (date, dateString) => {\n        console.log(date, dateString);\n    }\n    NotecontrolBar() {\n        const select_data = [\n            { item: \"入院病摘\", value: 0 },\n            { item: \"出院病摘\", value: 1 },\n            { item: \"門診紀錄\", value: 2 },\n            { item: \"急診紀錄\", value: 3 },\n            { item: \"病程紀錄\", value: 4 },\n            { item: \"會診紀錄\", value: 5 },\n            { item: \"護理紀錄\", value: 6 },\n            { item: \"手術記錄\", value: 7 }\n        ]\n        const { RangePicker } = DatePicker;\n        const { Option } = Select;\n        const select_option = select_data.map((info, index) =>\n            <Option key={index} value={info.value}>{info.item}</Option>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"200px 220px 25px\", marginBottom: \"10px\" }}>\n                <Select defaultValue={0} style={{ width: 190 }} onChange={this.handleChange}>\n                    {select_option}\n                </Select>\n                {/* <RangePicker id=\"note_Range\" placeholder={[\"請輸入日期\", \"請輸入日期\"]} onChange={this.onDateChange} allowClear={false} />\n                <div onClick={() => this.onClickSearch()} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <img src={searchlogo} alt=\"searchlogo\" />\n                </div> */}\n            </div>\n        );\n    }\n\n    renderContentArray() {\n        const source = this.state.SelectClass\n        if (source === 0) {\n            const data = this.state.ADMDISP\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const fakeADMData = data\n                return fakeADMData.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{row.ADMDATA}</div>);\n\n            }\n        }\n        if (source === 1) {\n            const data = this.state.DISDISP\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const fakeADMData = data\n                return fakeADMData.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{row[\"1\"]}</div>);\n            }\n\n        }\n        if (source === 2) {\n\n            const data = this.state.DTASOAPQ\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                let textType = [];\n                let textObj = [];\n                for (var i = 0; i < data.length; i++) {\n                    console.log(data[i])\n                    //find type\n                    const type = data[i].DTSOAPTY;\n                    const lines = data[i].DTSOAPSQ;\n                    const content = data[i].DTSOAPTX;\n                    if (textType.indexOf(type) === -1) {\n                        //new type\n                        const newObj = {\n                            \"type\": type,\n                            \"lines\": lines,\n                            \"content\": content\n                        }\n                        textObj.push(newObj);\n                        textType.push(type);\n                    } else {\n                        //old type\n                        const idx = textObj.findIndex(item => item.type === type)\n                        textObj[idx].lines = lines;\n                        textObj[idx].content = textObj[idx].content + \"\\n\" + content\n                    }\n                }\n                let textResult = [];\n                for (var i = 0; i < textObj.length; i++) {\n                    textResult.push(textObj[i].type);\n                    textResult.push(textObj[i].content);\n                    textResult.push(\"\\n\");\n                }\n\n                return textResult.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{row}</div>);\n\n            }\n\n        }\n        if (source === 3) {\n            const data = this.state.ERDISP\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const fakeADMData = data\n                return fakeADMData.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{JSON.stringify(row, null, '\\t')}</div>);\n            }\n\n        }\n        if (source === 4) {\n            const data = this.state.PRGTXQRYDIS\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                return (<div style={{ whiteSpace: \"pre-wrap\" }}>{data}</div>);\n            }\n\n        }\n        if (source === 5) {\n            const data = this.state.CPSDISP\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const fakeADMData = data\n                return fakeADMData.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{row[\"1\"]}</div>);\n            }\n\n        }\n        if (source === 6) {\n            const data = this.state.QPNOTDIS\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const fakeADMData = data\n                return (\n                    <div>\n                        <div style={{ whiteSpace: \"pre-wrap\" }}>{fakeADMData.cre_nam}</div>\n                        <div style={{ whiteSpace: \"pre-wrap\" }}>{fakeADMData.pro_not}</div>\n                    </div>\n                );\n            }\n\n        }\n        if (source === 7) {\n            const data = this.state.OPSORAQ2\n            console.log(data)\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const fakeADMData = data\n                return fakeADMData.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{row.CONTENT}</div>);\n            }\n\n        }\n        else {\n            return null;\n\n        }\n\n\n\n    }\n    switchListRender() {\n        const select = this.state.SelectClass\n        if (select === 0) {\n            const data = this.state.ADMLIST\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    const HID = object.ADISTNO.toString().trim()\n                    const CID = object.ADICASE.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", cursor: \"pointer\", textAlign: \"center\" }} onClick={() => this.SelectADMDISP(HID, CID)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.ADIDATE.toString().trim(), \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</div>\n                            <div style={{ fontSize: \"14px\" }}>{object.ADICASE}</div>\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 1) {\n            const data = this.state.DISLIST\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    const CID = object.DCASENO.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\" }} onClick={() => this.SelectDISDISP(CID)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.DDATEIN.toString().trim(), \"YYYY-MM-DD\").format(\"YYYY/MM/DD\")}</div>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.DDATEOUT.toString().trim(), \"YYYY-MM-DD\").format(\"YYYY/MM/DD\")}</div>\n                            {/* <div style={{ fontSize: \"14px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 2) {\n            const data = this.state.DTAROTQ4\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    const DPT = object.DTPDEPT.toString().trim()\n                    const DTPDATE = object.DTPDATE.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\" }} onClick={() => this.SelectDTASOAPQ(DTPDATE, DPT)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.DTPDATE.toString().trim(), \"YYYY-MM-DD\").format(\"YYYY/MM/DD\")}</div>\n                            <div style={{ fontSize: \"14px\" }}>{object.DTPTIME.toString().trim()}</div>\n                            <div style={{ fontSize: \"14px\" }}>{object.DTPDEPT.toString().trim()}</div>\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 3) {\n            const data = this.state.PCASELIST\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    const CID = object.PCASENO.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\" }} onClick={() => this.SelectERDISP(CID)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.PDISDT.toString().trim(), \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</div>\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 4) {\n            const data = this.state.PRGTXQRY\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    const DIS1 = object.content\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\" }} onClick={() => this.SelectPRGTXQRYDIS(DIS1)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.PRGDT.toString().trim(), \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</div>\n                            <div style={{ fontSize: \"14px\" }}>{object.PRGTM}</div>\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 5) {\n            const data = this.state.CPSLIST\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    const CID = object.CPSCASE.toString().trim()\n                    const SEQ = object.CPSOSEQ.toString().trim()\n                    const HID = object.CPSHIST.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\" }} onClick={() => this.SelectCPSDISP(HID, CID, SEQ)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.CPSENTDT.toString().trim(), \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</div>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.CPSENTTM.toString().trim(), \"HHmm\").format(\"HH:mm\")}</div>\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 6) {\n            const data = this.state.QPNOT\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    const DIS1 = object\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\" }} onClick={() => this.SelectQPNOTDIS(DIS1)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.rec_dat.toString().trim(), \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</div>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.rec_tim.toString().trim(), \"HHmm\").format(\"HH:mm\")}</div>\n                            {/* 檢查 */}\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 7) {\n            const data = this.state.OPSORAQ1\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    // const DIS1 = object\n                    const OPABGNDT = object.OPABGNDT.toString().trim()\n                    const OPACOD1 = object.OPACOD1.toString().trim()\n                    const OPAMANNM = object.OPAMANNM.toString().trim()\n                    const OPATIMES = object.OPATIMES.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\" }} onClick={() => this.SelectOPSORAQ1(OPABGNDT, OPATIMES)}>\n                            <div style={{ fontSize: \"14px\" }}>{OPABGNDT}</div>\n                            <div style={{ fontSize: \"14px\" }}>{OPACOD1}</div>\n                            <div style={{ fontSize: \"14px\" }}>{OPAMANNM}</div>\n                            {/* 檢查 */}\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n    }\n    render() {\n        const control = this.NotecontrolBar()\n        const renderContentArray = this.renderContentArray()\n        const listRender = this.switchListRender()\n        return (\n            <div className='Notelayout'>\n                {control}\n                <div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 7fr\", gridGap: \"10px\" }}>\n                        <div>\n                            <div style={{ backgroundColor: \"#e2edf3\", height: \"50px\", padding: '15px' }}>開立日期</div>\n                            <div style={{ padding: \"10px\" }}>\n                                {listRender}\n                            </div>\n                        </div>\n                        <div>\n                            <div style={{ backgroundColor: \"#e2edf3\", height: \"50px\", padding: '15px' }}>內容</div>\n                            <div style={{ fontSize: \"1.3rem\" }}>\n                                {renderContentArray}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Noteview;","import React, { Component } from 'react';\nimport { Button } from 'antd'\nimport Notecell from './Notecell'\n\nclass Notelist extends Component {\n    state = {\n        display: true\n    }\n    callbackFunction = (item_array) => {\n        console.log(item_array)\n        this.sendData(item_array)\n \n    }\n\n    sendData(info) {\n        console.log(info)\n        this.props.parentCallback(info);\n    }\n\n    Date_format(startTime, interval) {\n        var array = []\n        for (let index = 0; index < interval + 1; index++) {\n            const element = startTime + (index * 24 * 60 * 60 * 1000)\n            array.push(element)\n        }\n        console.log(array)\n        return array\n    }\n\n    render() {\n        const { start, End,note_data,display_data } = this.props\n        const startTime = new Date(start).getTime() - (8 * 60 * 60 * 1000)\n        const endTime = new Date(End).getTime() - (8 * 60 * 60 * 1000)\n        const interval = (endTime - startTime) / (1000 * 60 * 60 * 24)\n        var arraydata\n        var date_item\n        if (interval === 0) {\n            arraydata = null\n        }\n        else {\n            arraydata = this.Date_format(startTime, interval)\n            date_item = arraydata.map((info, index) =>\n                <Notecell display_date={display_data} parentCallback={this.callbackFunction}  rowdata={note_data} key={index} infoDate={info}></Notecell>\n            )\n        }\n        \n        return (\n            <div style={{ maxHeight: '60vh', overflowY: 'auto' }}>\n                {date_item}\n            </div>\n        );\n    }\n}\n\nexport default Notelist","import React, { Component } from 'react';\nimport GAS from '../CrossSectionView/GAS'\nimport RTbreathe from '../CrossSectionView/RTbreathe'\nimport './RTview.scss'\nimport X2JS from 'x2js';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass RTview extends Component {\n    state = {\n        RESDBGAS: [],\n        QSPE: [],\n        PickerDate: moment(moment().format('YYYYMMDD')).valueOf()\n    }\n    componentDidMount() {\n        this.API_DATA(this.state.PickerDate)\n    }\n    API_DATA(Datetime) {\n        function selectMonthInterval(PickerDate) {\n            const timestampInterval = new Date().getTime() - new Date(PickerDate).getTime()\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        const xm2 = new X2JS()\n        const { caseinfo } = this.props\n        const MonthInterval = selectMonthInterval(Datetime)\n        const st = moment(Datetime + (7 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        const et = moment(Datetime + (31 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        const TRANSDate = moment(caseinfo.TRANSINDT, 'YYYYMMDD').format('YYYY-MM-DD')\n        ApiProvider.getStoredProcedureRESDBGAS(caseinfo.HISID, TRANSDate)\n            .then(data => {\n                console.log(data.data)\n                this.setState({\n                    RESDBGAS: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        // const QSPE = ApiProvider.getQSPE(caseinfo.CASEID, st, et)\n        ApiProvider.getQSPE(caseinfo.CASEID, st, et)\n            .then(data => {\n                console.log(xm2.xml2js(data.data).outmsg.resconts.rescont)\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                console.log(parsedata)\n                if (Array.isArray(parsedata)) {\n                    this.setState({\n                        QSPE: parsedata\n                    })\n                }\n                else {\n                    const arr = []\n                    arr.push(parsedata)\n                    this.setState({\n                        QSPE: arr\n                    })\n                }\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n    }\n    render() {\n        const { caseinfo } = this.props\n        const RESDBGAS = this.state.RESDBGAS\n        if (RESDBGAS.length === 0) {\n            return null\n        }\n        return (\n            <div className='rtviewlayout'>\n                <div style={{ display: \"grid\", gridTemplateColumns: '1fr 1fr', gridColumnGap: \"5px\" }}>\n                    <GAS caseinfo={caseinfo} PickerDate={moment().valueOf()} searchbar={true} RESDBGAS={this.state.RESDBGAS}></GAS>\n                    <RTbreathe caseinfo={caseinfo} PickerDate={moment().format(\"YYYY/MM/DD\")} searchbar={true} QSPE={this.state.QSPE}></RTbreathe>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTview\n","import React, { Component } from 'react'\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Nurtionfeedingcell.scss'\nimport { yyyymmddformat } from '../../Function/Timeformat'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Nurtionfeedingcell extends Component {\n    state = {\n        EditMode: false,\n        onEdit: false,\n        remark: this.props.data.FeedingOrderRemarks,\n        powerLogin: 0,\n        remark: '',\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { caseinfo, data } = this.props\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, data.ORDSEQNO, \"nurtionfeeding\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    onMouseEnter() {\n        this.setState(\n            {\n                EditMode: true\n            }\n        )\n    }\n    onMouseLeave() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    showModal = () => {\n        this.setState({\n            onEdit: true,\n        });\n    };\n\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    Moduledisplay(PName, ST) {\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": PName,\n            \"remarkId\": this.props.data.ORDSEQNO,\n            \"remark\": this.state.remark,\n            \"transinId\": this.props.caseinfo.TRANSINID,\n            \"type\": \"nurtionfeeding\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n        );\n    }\n\n    render() {\n        const { data } = this.props\n        console.log(data)\n        const startTime = moment(data.ORBGNDT.toString().trim(), \"YYYY-MM-DD\").format(\"MM/DD\")\n        const endTime = moment(data.ORENDDT.toString().trim(), \"YYYY-MM-DD\").format(\"MM/DD\")\n        const name = data.ORPROCED.toString().trim()\n\n        console.log(this.state.remark)\n\n        return (\n            <div onMouseEnter={() => this.onMouseEnter()} onMouseLeave={() => this.onMouseLeave()} style={{ position: \"relative\", height: \"100px\" }}>\n                <div className='nurtionfeedingcell' style={{ gridTemplateRows: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"1fr\" : \"1fr 1fr\"] }}>\n                    <div className='cellforstate'>\n                        <div className='celllayout'>\n                            <t3>{startTime}</t3>\n                        </div>\n                        <div className='celllayout'>\n                            <t3>{endTime}</t3>\n                        </div>\n                        <div className='celllayout'>\n                            <t3>{name}</t3>\n                        </div>\n                    </div>\n                    <div className='cellforremark' style={{ display: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"none\" : \"\"] }}>\n                        <t3>{this.state.remark}</t3>\n                    </div>\n                </div>\n                <div style={this.state.EditMode ? {\n                    display: this.state.powerLogin >= 2 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", top: 0, right: 0, height: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"50px\" : \"100px\"], background: \"white\", width: \"77px\", border: \"rgba(232, 232, 232, 1) 1px solid\"\n                } : { display: \"none\" }}>\n                    < div onClick={() => this.showModal()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }} >\n                        <img src={chooseedit} alt='chooseedit'></img>\n                    </div>\n                </div>\n                {this.Moduledisplay(name, startTime)}\n            </div >\n        );\n    }\n}\n\nexport default Nurtionfeedingcell\n","import React, { Component } from 'react'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport { DatePicker, Input } from 'antd';\nimport searchlogo from '../../Image/svg/Search.svg'\nimport Nurtionfeedingcell from './Nurtionfeedingcell'\nimport moment from 'moment';\nimport * as ApiGithub from '../../API/ApiGithub'\n\n\nclass Nurtionfeedingorder extends Component {\n    state = {\n        TRTMNTQ1: [],\n        PickerDate: moment(moment().format('YYYYMMDD'), 'YYYYMMDD').valueOf(),\n        parser: { \"mappings\": [] },\n        class: \"飲食類別\"\n    }\n    componentDidMount() {\n        this.getAPIFeedingData()\n        this.getTreatmentOrderFilter()\n    }\n    getAPIFeedingData() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID.toString().trim()\n        const CID = caseinfo.CASEID.toString().trim()\n        ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => {\n                console.log(\"getAPIFeedingData OK \" + JSON.stringify(data.data))\n                this.setState({\n                    TRTMNTQ1: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n    }\n    getTreatmentOrderFilter() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Treatment\");\n                parser.mappings = [{ \"key\": \"全部\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson Treatment OK \" + JSON.stringify(parser))\n                this.setState({\n                    parser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部\"] = []\n\n        inputs.forEach(input => {\n            let content = input.ORPROCED;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部\"].push(input)\n        });\n        return allResult;\n    }\n\n    // search_click() {\n    //     const inputdata = document.getElementById(\"nurtion_feeding_input\").value\n    //     if (inputdata === '' || inputdata === undefined || inputdata === null) {\n    //         console.log(\"No input data\")\n    //     }\n    //     else {\n    //         console.log(\"Click search input = \" + inputdata)\n\n    //     }\n\n    // }\n    render() {\n        const { caseinfo } = this.props\n        const title = [\"開始時間\", \"結束時間\", \"處置名稱\"]\n        const titleCellRender = title.map(function (element, index, arr) {\n            return (\n                <div key={index} style={{ padding: \"0px 10px\", display: \"flex\", alignItems: \"center\" }}>\n                    <div style={{ fontSize: \"14px\" }}>{element}</div>\n                </div>\n            );\n        })\n\n        const parse = this.parse;\n        let clusteredData = {}\n        if (this.state.parser !== undefined) {\n            clusteredData = parse(this.state.TRTMNTQ1, this.state.parser)\n        }\n        //filter data by selected class\n        let filteredData = clusteredData[this.state.class];\n        // console.log(`filteredData : ${JSON.stringify(filteredData)} , filteredData type : ${typeof (filteredData)}`)\n        let filterData = []\n        if (filteredData !== undefined) {\n            const ListCellData = filteredData\n            filterData = ListCellData.filter((element, index, arr) => {\n                const time = this.state.PickerDate\n                const starttime = moment(element.ORBGNDT, 'YYYY-MM-DD').valueOf()\n                // const endtime = moment(element.ORENDDT, 'YYYY-MM-DD').valueOf()\n                return starttime === time\n            })\n        }\n\n        const DataCellRender = filterData.map(function (element, index, arr) {\n            return (\n                <Nurtionfeedingcell key={index} data={element} caseinfo={caseinfo} ></Nurtionfeedingcell>\n            );\n        })\n        // console.log(ListCellData)\n        // const { caseinfo } = this.props\n        return (\n            <div>\n                <t1>Feeding Order</t1>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"220px 1fr 25px\", gridColumnGap: \"10px\" }}>\n                    <DatePicker defaultValue={moment(this.state.PickerDate)} allowClear={false} onChange={(date, datestring) => { this.setState({ PickerDate: date.valueOf() }) }} />\n                    {/* <Input id=\"nurtion_feeding_input\" placeholder=\"請輸入關鍵字\" /> */}\n                    {/* <div onClick={() => this.search_click()} style={{ display: \"flex\", alignItems: \"center\" }}>\n                        <img src={searchlogo} alt=\"searchlogo\" />\n                    </div> */}\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \" 1fr 1fr 2fr \", background: \"#cccccc\", height: \"50px\", marginTop: \"10px\" }}>\n                    {titleCellRender}\n                </div>\n                {filterData.length !== 0 && <div style={{ minHeight: \"120px\", maxHeight: \"400px\", overflowY: \"auto\" }}>\n                    {DataCellRender}\n                </div>}\n                {filterData.length === 0 && <div>今日無資料</div>}\n            </div>\n        );\n    }\n}\n\nexport default Nurtionfeedingorder\n","import React, { Component } from 'react'\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Nurtion_TPN_cell.scss'\nimport moment from 'moment'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Nurtiontpncell extends Component {\n    state = {\n        EditMode: false,\n        onEdit: false,\n        remark: null,\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { caseinfo, data } = this.props\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, data.UDORDSEQ, \"nurtiontpn\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    onMouseEnter() {\n        this.setState(\n            {\n                EditMode: true\n            }\n        )\n    }\n    onMouseLeave() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    showModal = () => {\n        this.setState({\n            onEdit: true,\n        });\n    };\n\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    Moduledisplay(PName, ST) {\n\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": PName,\n            \"remarkId\": this.props.data.UDORDSEQ,\n            \"remark\": this.state.remark,\n            \"transinId\": this.props.caseinfo.TRANSINID,\n            \"type\": \"nurtiontpn\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            // <RemarkModal caseinfo={caseinfo} type=\"nurtiontpn\" name={title} visible={this.state.onEdit} remark={this.state.remark} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n        );\n    }\n    render() {\n        const { data } = this.props\n        const TPNList = [\"VOL.\", \"AA\", \"Glu\", \"Na\", \"K\", \"Ca\", \"P\", \"Mg\"]\n        const TPNListcellRender = TPNList.map(function (info, index) {\n            return (\n                <centerstyle key={index} style={{ border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                    <t2>{info}</t2>\n                </centerstyle>\n            );\n        })\n        const TPNSubData = [data.UDDOSAGE, data.TPNDATA.AA, data.TPNDATA.Glu, data.TPNDATA.Na, data.TPNDATA.K, data.TPNDATA.Ca, data.TPNDATA.P, data.TPNDATA.Mg]\n        const TPNSubDatacellRender = TPNSubData.map(function (info, index) {\n            return (\n                <centerstyle key={index} style={{ border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                    <t2>{info}</t2>\n                </centerstyle>\n            );\n        })\n        const RemarkData = this.state.remark\n        function RemarkNull(value) {\n            // console.log(value)\n            if (value === null || value === undefined || value === \"\") {\n                return \"none\"\n            }\n            return \"flex\"\n        }\n        function RemarkNullheight(value) {\n            // console.log(value)\n            if (value === null || value === undefined || value === \"\") {\n                return \"90px\"\n            }\n            return \"120px\"\n        }\n        // function statusstate(st, et, pt) {\n\n        // }\n        const startTime = moment(data.UDBGNDT.toString().trim(), \"YYYY-MM-DD-HH.mm.ss.00.000000\").format(\"MM/DD HH:mm:ss\")\n        const endTime = moment(data.UDENDDT.toString().trim(), \"YYYY-MM-DD-HH.mm.ss.00.000000\").format(\"MM/DD HH:mm:ss\")\n        const name = data.UDGNAME.toString().trim()\n        const status = \"生效中\"\n        return (\n            <div onMouseEnter={() => this.onMouseEnter()} onMouseLeave={() => this.onMouseLeave()} className='nurtiontpntablelayout'>\n                <div style={{ height: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"100px\" : \"130px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \" 1fr 1fr 60px 450px\", height: \"100px\" }} >\n                        <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                            <t3>{startTime}</t3>\n                        </div>\n                        <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                            <t3>{endTime}</t3>\n                        </div>\n                        <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                            <t3>{status}</t3>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"30px 70px\" }}>\n                            <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                                <t3>{name}</t3>\n                            </div>\n                            <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(8,1fr)\" }}>\n                                    {TPNListcellRender}\n                                </div>\n                                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(8,1fr)\" }}>\n                                    {TPNSubDatacellRender}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ display: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"none\" : \"block\"], border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\", padding: \"0px 5px\", alignItems: \"center\", height: \"30px\", width: \"100%\" }}>\n                        <t3>{RemarkData}</t3>\n                    </div>\n                </div>\n                <div style={this.state.EditMode ? {\n                    display: this.state.powerLogin >= 2 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", top: 0, right: 0, height: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"100px\" : \"130px\"], background: \"white\", width: \"77px\", border: \"rgba(232, 232, 232, 1) 1px solid\"\n                } : { display: \"none\" }}>\n                    < div onClick={() => this.showModal()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }} >\n                        <img src={chooseedit} alt='chooseedit'></img>\n                    </div>\n                </div>\n                {this.Moduledisplay(name, startTime)}\n            </div>\n        );\n    }\n}\n\nexport default Nurtiontpncell\n","import React, { Component } from 'react'\nimport { DatePicker, Input } from 'antd';\nimport searchlogo from '../../Image/svg/Search.svg'\nimport Nurtiontpncell from './Nurtion_TPN_cell'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as ApiGithub from '../../API/ApiGithub'\n\nclass Nurtiontpnorder extends Component {\n    state = {\n        onEdit: false,\n        tpndata: [],\n\n        PickerDate: moment(moment().format('YYYYMMDD'), 'YYYYMMDD').valueOf(),\n        UDORDER0: [],\n        tpnParser: []\n    }\n    componentDidMount() {\n        const getAPITPNData = this.getAPITPNData.bind(this)\n        ApiGithub.getGitHubJson(\"TpnOrder.json\")\n        .then(data => {\n            let parser = data.data.find(item => item.apply_condition.name === \"TPN Order\");\n            console.log(\"getGitHubJson TPN Order OK \" + JSON.stringify(parser))\n            this.setState({\n                tpnParser: parser\n            }, () => {\n                getAPITPNData()\n            })\n        })\n        .catch(err => {\n          console.log(err)\n        })\n        \n    }\n    getAPITPNData() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID.toString().trim()\n        const CID = caseinfo.CASEID.toString().trim()\n        const { tpnParser } = this.state\n        // console.log(HID, CID)\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                //create list need to do search\n                let tpnList = [] // All TPN data\n                data.data.forEach(item => {\n                    const found = item.UDDRGNAM.match(RegExp(\"Ampicillin\\\\s+\"))\n                    if(found !== null && found !== \"\") tpnList.push(item)\n                });\n\n                //parser 7 value from each TPN document （AA, Glu, Na, K, Ca, P, Mg）\n                tpnList.forEach((item, index) => {\n                    ApiProvider.getStoredProcedureUDTEXTQ1(CID, item.UDORDSEQ)\n                    .then(data => {\n                        console.log(\"getStoredProcedureUDTEXTQ1 OK \" + JSON.stringify(data.data))\n\n                        //parse every line\n                        const result = this.parse(data.data, tpnParser)\n                        item.TPNDATA = result;\n                        tpnList.splice(index, 1, item)\n                        this.setState({\n                            tpndata: tpnList\n                        })\n                    })\n                    .catch(err => {\n                        console.log(\"getStoredProcedureUDTEXTQ1 NG \" + err)\n                    });\n                });             \n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureUDORDER0 NG \" + err)\n            });\n    }\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n          allResult[mapping.key] = \"\"\n        });\n\n        inputs.forEach(input => {\n            let content = input.UDWORD;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if(match !== null && match[0] !== \"\") {\n                    allResult[mapping.key] = match[mapping.position]\n                }\n            });\n        });\n        return allResult;\n    }\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    render() {\n        // console.log(\"123\")\n        const { caseinfo } = this.props\n        const title = [\"開始時間\", \"結束時間\", \"狀態\", \"處置名稱\"]\n        const titilecell = title.map(function (info, index) {\n            return (\n                <div key={index} style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t4>{info}</t4>\n                </div>\n            );\n        })\n        const ListCellData = this.state.tpndata\n        const filterData = ListCellData.filter((element, index, arr) => {\n            const time = this.state.PickerDate\n            const starttime = moment(moment(element.UDBGNDT, 'YYYY-MM-DD-HH.mm.ss.000000').format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n            // const endtime = moment(element.UDENDDT, 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n            return starttime === time\n        })\n        const DataCellRender = filterData.map(function (element, index, arr) {\n            return (\n                <Nurtiontpncell key={index} data={element} caseinfo={caseinfo} ></Nurtiontpncell>\n            );\n        })\n        console.log(ListCellData)\n        return (\n            <div>\n                <t1>TPN order</t1>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"220px 1fr 25px\", gridColumnGap: \"10px\" }}>\n                    <DatePicker defaultValue={moment(this.state.PickerDate)} allowClear={false} onChange={(date, datestring) => { this.setState({ PickerDate: date.valueOf() }) }} />\n                    {/* <Input id=\"nurtion_feeding_input\" placeholder=\"請輸入關鍵字\" />\n                    <div onClick={() => this.search_click()} style={{ display: \"flex\", alignItems: \"center\" }}>\n                        <img src={searchlogo} alt=\"searchlogo\" />\n                    </div> */}\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \" 1fr 1fr 60px 450px\", background: \"#cccccc\", height: \"50px\", marginTop: \"10px\" }}>\n                    {titilecell}\n                </div>\n                <div style={{ minHeight: \"120px\", maxHeight: \"400px\", overflowY: \"auto\" }}>\n                    {DataCellRender}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Nurtiontpnorder\n","import React, { Component } from 'react'\nimport * as d3 from \"d3\";\nimport './Watervaluechart.scss'\nimport { Modal } from 'antd'\nimport { getRandomfornumber } from '../../Function/Wardstate'\nimport moment from 'moment';\n\nclass Watervaluechart extends Component {\n    state = {\n        visible: false,\n        select: null,\n        rowdata: null\n    };\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: true,\n            select: null,\n            rowdata: null\n        });\n    };\n    componentDidUpdate() {\n        const { svg_key } = this.props\n        d3.select(\"#\" + svg_key).remove()\n        this.drawChart()\n\n    }\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentWillUnmount() {\n    }\n\n    cal_svg_hight() {\n        const { axisTop, axisBot } = this.props\n        if (axisTop) {\n            if (axisBot) {\n                return 160\n            }\n            else {\n                return 130\n            }\n        }\n        else {\n            if (axisBot) {\n                return 130\n            }\n            else {\n                return 90\n            }\n        }\n    }\n\n    cal_svg_transform() {\n        const { axisTop, axisBot } = this.props\n        console.log(axisTop)\n        if (axisTop) {\n            if (axisBot) {\n                return 70\n            }\n            else {\n                return 50\n            }\n        }\n        else {\n            if (axisBot) {\n                return 5\n            }\n            else {\n                return 5\n            }\n        }\n    }\n\n    drawChart() {\n        function formatShiftDays(startTime, endTime) {\n            const shiftDays = parseInt((endTime - startTime) / (24 * 60 * 60 * 1000))\n            return shiftDays\n        }\n        const { svg_key, id_key, startTime, watervalueData } = this.props\n        const width = (window.screen.availWidth - 50) / 2 - 50, height = 400\n        const max = 500, min = 0\n        const shiftDays = formatShiftDays(moment(startTime, \"YYYYMMDD\").valueOf(), moment().valueOf())\n\n        if (watervalueData.length === 0) {\n            return null\n        }\n        const rectwidth = (width / shiftDays) - 2\n        var x = d3.scaleLinear()\n            .domain([0, watervalueData.length])\n            .range([0, width]);\n\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([min, max])\n            .range([height, 0])\n\n\n\n        var yAxis = d3.axisLeft(y)\n            .ticks(11)\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(10);\n\n        var xAxisBottom = d3.axisBottom(x)\n            .ticks(watervalueData.length)\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(height + 10)\n            .tickFormat(function (d) {\n                if (d % 10 === 0) {\n                    if (d > 0) {\n                        return 'D' + d\n                    }\n                    return null\n                }\n                else return null;\n            });\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_key)\n            .attr(\"viewBox\", [0, 0, width + 80, height + 50])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 30 + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n        svg.append(\"g\")\n            .call(xAxisBottom)\n            .attr(\"class\", \"axis\");\n\n\n        for (let index = 0; index < 11; index++) {\n            //上下虛線\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(index * 50))\n                .attr('x2', width)\n                .attr('y2', y(index * 50))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n        }\n\n        for (let index = 0; index < watervalueData.length; index++) {\n            //上下虛線\n            if (index % 10 === 0 && index > 0) {\n                svg.append('line')\n                    .attr('x1', x(0.5 + index))\n                    .attr('y1', y(min))\n                    .attr('x2', x(0.5 + index))\n                    .attr('y2', y(max))\n                    .style('stroke', 'rgba(187, 187, 187, 1)')\n                    .style('stroke-width', 1)\n                    .style('stroke-dasharray', 5.5);\n            }\n        }\n\n\n\n\n        function rowdatageneral(number) {\n            const rowdata = {\n                'IV': {\n                    \"max\": getRandomfornumber(number),\n                    \"min\": 0\n                },\n                'feeding': {\n                    \"max\": getRandomfornumber(number),\n                    \"min\": 0\n                },\n                'Other': {\n                    \"max\": getRandomfornumber(number),\n                    \"min\": 0\n                }\n            }\n            return rowdata\n        }\n        const select = this.state.select\n        if (select === null || select == undefined || select === \"\") {\n            d3.selectAll(\"rect#A123\").remove()\n        }\n        for (let index = 0; index < watervalueData.length; index++) {\n            const rowdata = watervalueData[index]\n            var svgrect = svg.append('g').on('click', () => {\n                if (rowdata === null) {\n\n                }\n                else {\n                    this.setState({\n                        visible: true,\n                        select: index,\n                        rowdata: rowdata\n                    });\n\n                }\n            })\n            console.log(select)\n            if (index === select) {\n                svgrect.append('rect')\n                    .attr('id', 'A123')\n                    .attr('width', rectwidth + 2)\n                    .attr('height', y(0) - y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .attr('x', x(index) - (rectwidth / 2) - 1)\n                    .attr('y', y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .style('fill', 'rgba(0,0,0,0)')\n                    .style('stroke', '#F5A623')\n                    .style('stroke-width', 2)\n                    .style('cursor', 'pointer');\n            }\n            else {\n                svgrect.append('rect')\n                    .attr('id', 'A123')\n                    .attr('width', rectwidth + 2)\n                    .attr('height', y(0) - y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .attr('x', x(index) - (rectwidth / 2) - 1)\n                    .attr('y', y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .style('fill', 'rgba(0,0,0,0)')\n                    .style('stroke', 'rgba(0,0,0,0)')\n                    .style('stroke-width', 2)\n                    .style('cursor', 'pointer')\n                    .style('opacity', 1);\n            }\n            svgrect.append('line')\n                .attr('x1', x(index))\n                .attr('y1', y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                .attr('x2', x(index))\n                .attr('y2', y(rowdata.IV + rowdata.Other))\n                .style('stroke', '#2E64A4')\n                .style('stroke-width', rectwidth)\n\n            svgrect.append('line')\n                .attr('x1', x(index))\n                .attr('y1', y(rowdata.IV + rowdata.Other))\n                .attr('x2', x(index))\n                .attr('y2', y(rowdata.Other))\n                .style('stroke', '#C3EFFF')\n                .style('stroke-width', rectwidth)\n\n\n            svgrect.append('line')\n                .attr('x1', x(index))\n                .attr('y1', y(rowdata.Other))\n                .attr('x2', x(index))\n                .attr('y2', y(0))\n                .style('stroke', '#3B97E1')\n                // .style('stroke', 'red')\n                .style('stroke-width', rectwidth)\n        }\n    }\n\n    ModalRender() {\n        function nulldata(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return 0\n            }\n            return value\n        }\n        const data = this.state.rowdata\n        if (data === null || data === undefined) {\n            return null\n        }\n        function sumRowdata(data) {\n            if (data === null || data === undefined) {\n                return 0\n            }\n            return data * 0.8\n        }\n        const select = this.state.select\n        const waterdata = this.props.watervalueData\n        const car = waterdata[select].Caloriessum\n        return (\n            <Modal\n                title=\"Basic Modal\"\n                visible={this.state.visible}\n                onOk={this.handleOk}\n                onCancel={this.handleCancel}\n                footer={null}\n            >\n                <div>IV:{nulldata(data.IV)}</div>\n                <div>Feeding:{nulldata(data.Feeding)}</div>\n                <div>Other:{nulldata(data.Other)}</div>\n                <div>總熱量:{car}kcal</div>\n            </Modal>\n        );\n    }\n    render() {\n        const { id_key } = this.props\n        const model = this.ModalRender()\n        return (\n            <div id={id_key}>\n                {model}\n            </div>\n        );\n    }\n}\n\nexport default Watervaluechart","import React, { Component } from 'react'\nimport Nurtionfeedingorder from './Nurtionfeeding'\nimport { Select, Button, DatePicker, Modal } from 'antd';\nimport WardlifeChart from '../../Wardview/Wardlifechart'\nimport Wardmonthafter from '../../Wardview/Wardmonthafter'\nimport Nurtiontpnorder from './Nurtion_TPN'\nimport Watervaluechart from './Watervaluechart'\nimport { gender } from '../../Function/Wardbedfunction'\nimport X2JS from 'x2js';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\nimport * as FiliterReg from '../../Function/FiliterReg'\nimport './Nurtion.scss'\n\nclass Nurtionview extends Component {\n    state = {\n        visible: false,\n        test_items_interval: 1,\n        UDORDER0: [],\n        QDC: [],\n        QTWER: []\n    }\n    componentDidMount() {\n        this.API_DATA()\n    }\n    API_DATA() {\n        const { caseinfo } = this.props\n        const xm2 = new X2JS()\n        const st = moment(caseinfo.TRANSINDT.toString(), 'YYYYMMDD').format('YYYYMMDDHHmm')\n        const et = moment().format(\"YYYYMMDDHHmm\")\n        // ApiProvider.getQDC(caseinfo.CASEID, st, et)\n        ApiProvider.getQDC(caseinfo.CASEID, st, et)\n            .then(data => {\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                console.log(parsedata)\n                this.setState({\n                    QDC: parsedata\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureUDORDER0(caseinfo.HISID, caseinfo.CASEID, \"123\")\n            .then(data => {\n                this.setState({\n                    UDORDER0: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n    }\n    switch_monthy() {\n        const { caseinfo } = this.props\n        console.log(caseinfo)\n        const grewinfo = {\n            \"WEEK_BORN\": Number(caseinfo.WEEK_BORN),\n            \"DAY_BORN\": Number(caseinfo.DAY_BORN),\n            \"BIRTHDAY\": caseinfo.PBASINGNINFO.PBIRTHDT\n        }\n        const WeightList = caseinfo.WEIGHT\n        const sex = gender(caseinfo.PBASINGNINFO.PSEX)\n        const switch_data = this.state.test_items_interval\n        switch (switch_data) {\n            case 1:\n                return <WardlifeChart grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife\"} svg_key={\"wardlife_svg\"} gender={sex}></WardlifeChart>\n            case 0:\n                return <Wardmonthafter grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife_after\"} svg_key={\"wardlife_after_svg\"} gender={sex}></Wardmonthafter>\n            default:\n                return null;\n        }\n    }\n\n    handleChange = (checkedValues) => {\n        console.log('checked = ', checkedValues);\n        this.setState(\n            {\n                test_items_interval: checkedValues\n            }\n        )\n\n    }\n    onOk = (value) => {\n        console.log('onOk: ', value);\n    }\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n    WaterValueControlBar() {\n        return (\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", marginRight: \"10px\" }}>\n                    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        <div style={{ height: \"10px\", width: \"10px\", background: \"#C3EFFF\", marginRight: \"5px\" }}></div>\n                        <t3>IV</t3>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        <div style={{ height: \"10px\", width: \"10px\", background: \"#2E64A4\", marginRight: \"5px\" }}></div>\n                        <t3>Feed</t3>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        <div style={{ height: \"10px\", width: \"10px\", background: \"#3B97E1\", marginRight: \"5px\" }}></div>\n                        <t3>Other</t3>\n                    </div>\n                </div>\n                {/* <Button type=\"primary\" onClick={this.showModal}>設定營養項目</Button> */}\n            </div>\n        );\n    }\n    GrowthCurveControlBar() {\n        const { Option } = Select;\n        return (\n            <div className='titlebutton'>\n                <Select defaultValue={1} style={{ width: 120 }} onChange={this.handleChange}>\n                    <Option value={0}>滿足月</Option>\n                    <Option value={1}>不滿足月</Option>\n                </Select>\n                <Button type=\"primary\" onClick={this.showModal}>新增體重</Button>\n                <Modal\n                    title=\"手動新增體重紀錄\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                        <div style={{ display: \"flex\", alignItems: \"center\" }}>選擇時間:</div>\n                        <DatePicker id=\"nurtion_datepicker\" style={{ width: \"400px\" }} showTime placeholder=\"選擇時間\" onOk={this.onOk} />\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n    WaterValueRender() {\n        function formatTimeArray(startTime) {\n            const shiftTimer = parseInt((moment().valueOf() - moment(startTime, \"YYYYMMDD\").valueOf()) / (23 * 60 * 60 * 1000))\n            console.log(startTime, shiftTimer)\n            var TimerArray = []\n            for (let index = 0; index < shiftTimer; index++) {\n                const Time = moment(moment(startTime, \"YYYYMMDD\").valueOf() + (index * 24 * 60 * 60 * 1000)).format(\"YYYY/MM/DD\")\n                TimerArray.push(Time)\n            }\n            return TimerArray\n        }\n        const { caseinfo } = this.props\n        const QDC = this.state.QDC\n        if (QDC.length === 0) {\n            return null\n        }\n        var FeedinfData = []\n        var IVData = []\n        var OtherData = []\n        var Calories = 0\n        for (let index = 0; index < QDC.length; index++) {\n            const element = QDC[index];\n            const feedstatus = FiliterReg.Feedarea_Reg_IO().find(function (value, index, array) {\n                return element.item === value\n            })\n            if (feedstatus) {\n                FeedinfData.push(element)\n            }\n            const IVstatus = FiliterReg.IVarea_reg_IO().find(function (value, index, array) {\n                return element.item === value\n            })\n            if (IVstatus) {\n                IVData.push(element)\n            }\n            const Otherstatus = FiliterReg.Otherarea_reg_IO().find(function (value, index, array) {\n                return element.item === value\n            })\n            if (Otherstatus) {\n                const invalue = element.inp_val1\n                if (invalue !== undefined) {\n                    OtherData.push(element)\n                }\n            }\n            console.log(element)\n\n\n        }\n\n        console.log(FeedinfData)\n        console.log(IVData)\n        console.log(OtherData)\n        function sumcar(List) {\n            var Calories = 0\n            for (let index = 0; index < List.length; index++) {\n                const element = List[index];\n                if (element.item === \"進食\") {\n                    if (element.lost === \"配方奶\") {\n                        Calories = Calories + Number(element.inp_val2) * 0.8\n                    }\n                    if (element.lost === \"母奶\") {\n                        Calories = Calories + Number(element.inp_val2) * 0.7\n\n                    }\n                }\n                if (element.nam !== undefined) {\n                    if (element.nam.toString().match(\"10%TPN\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                    if (element.nam.toString().match(\"15%TPN\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34 * 1.5\n                    }\n                    if (element.nam.toString().match(\"SMOFliquid\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                    if (element.nam.toString().match(\"D10\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                    if (element.nam.toString().match(\"D12\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34 * 1.2\n                    }\n                    if (element.nam.toString().match(\"D5W\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34 * 5\n                    }\n                    if (element.nam.toString().match(\"taita\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                }\n\n            }\n            return Calories\n\n        }\n        const startTime = caseinfo.TRANSINDT.toString()\n        const TimerList = formatTimeArray(startTime)\n        var watervalueDataList = []\n        for (let index = 0; index < TimerList.length; index++) {\n            const element = TimerList[index];\n            const filterFeedind = FeedinfData.filter(function (value, index, arr) {\n                return moment(element, \"YYYY/MM/DD\").valueOf() === moment(value.rec_dat.toString().trim(), \"YYYY/MM/DD\").valueOf()\n            })\n            const filterIV = IVData.filter(function (value, index, arr) {\n                return moment(element, \"YYYY/MM/DD\").valueOf() === moment(value.rec_dat.toString().trim(), \"YYYY/MM/DD\").valueOf()\n            })\n            const filterOther = OtherData.filter(function (value, index, arr) {\n                return moment(element, \"YYYY/MM/DD\").valueOf() === moment(value.rec_dat.toString().trim(), \"YYYY/MM/DD\").valueOf()\n            })\n\n            const feedingSum = SumData2(filterFeedind)\n            const IVSum = SumData(filterIV)\n            const OtherSum = SumData(filterOther)\n\n            const Caloriessum = sumcar(filterFeedind) + sumcar(filterIV) + sumcar(filterOther)\n            watervalueDataList.push({\n                Feeding: feedingSum,\n                IV: IVSum,\n                Other: OtherSum,\n                Time: element,\n                Caloriessum\n            })\n\n        }\n        function SumData(arr) {\n            var sum = 0;\n            for (var i = 0; i < arr.length; i++) {\n                sum += Number(arr[i].inp_val1);\n            };\n            return sum;\n        }\n\n        function SumData2(arr) {\n            var sum = 0;\n            for (var i = 0; i < arr.length; i++) {\n                sum += Number(arr[i].inp_val2);\n            };\n            return sum;\n        }\n\n\n        console.log(watervalueDataList)\n        return (\n            <Watervaluechart Calories={Calories} watervalueData={watervalueDataList} startTime={caseinfo.TRANSINDT} id_key={\"water_id\"} svg_key={\"water_svg\"} caseiddays='2019/11/11'></Watervaluechart>\n        );\n    }\n    render() {\n        const GrowthCurve = this.switch_monthy()\n        const GrowthCurveControl = this.GrowthCurveControlBar()\n        const WaterValueControl = this.WaterValueControlBar()\n        const tpndata = this.state.UDORDER0\n        const feeddata = this.state.TRTMNTQ1\n        const { caseinfo } = this.props\n        if (tpndata.length === 0 || feeddata === 0) {\n            return null\n        }\n        const waterRender = this.WaterValueRender()\n        return (\n            <div className='nurtionheight'>\n                <div className='nurtionlayout'>\n                    <div>\n                        <div className='nurtioncomponmentboxtitle'>\n                            <t1>生長曲線圖</t1>\n                            {GrowthCurveControl}\n                        </div>\n                        <div className='nurtioncomponmentboxcontent'>{GrowthCurve}</div>\n                    </div>\n                    <div>\n                        <div className='nurtioncomponmentboxtitle'>\n                            <t1>水量表</t1>\n                            <div className='titlebutton'>\n                                {WaterValueControl}\n                            </div>\n                        </div>\n                        <div className='nurtioncomponmentboxcontent'>\n                            {waterRender}\n                        </div>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: '1fr 1fr', gridColumnGap: \"10px\", marginBottom: \"20px\" }}>\n                    <Nurtionfeedingorder caseinfo={caseinfo}></Nurtionfeedingorder>\n                    <Nurtiontpnorder caseinfo={caseinfo}></Nurtiontpnorder>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Nurtionview","import React, { Component } from 'react';\nimport { Select } from 'antd';\nimport Crosssectionvitalsignchart from '../CrossSectionView/Crossectionvitalsignchart'\nimport { statecolor } from '../../Function/Wardstate'\nimport moment from 'moment';\n\nclass Infectionvitalsign extends Component {\n    state = {\n        check_state_one: 0,\n    }\n\n    Interval_grid_box() {\n        var gridarray = []\n        for (let index = 0; index < 21; index++) {\n            const number = index + 1\n            if (number === this.state.check_state_one) {\n                gridarray.push(<div style={{ width: \"100%\", height: 350, border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_one(number)}></div>)\n            }\n            else gridarray.push(<div style={{ width: \"100%\", height: 350 }} onClick={() => this.onClickCheckgrid_one(number)}></div>)\n        }\n        return gridarray\n    }\n\n    onClickCheckgrid_one(number) {\n        // //1:7 2:8 3:9 ........\n        // const { defaultdate } = this.props\n        // const starttime = (defaultdate - (24 * 60 * 60 * 1000) + (7 * 60 * 60 * 1000)) + ((number - 1) * (60 * 60 * 1000))\n        // const endtime = (defaultdate - (24 * 60 * 60 * 1000) + (7 * 60 * 60 * 1000)) + ((number) * (60 * 60 * 1000))\n        // console.log(starttime, endtime)\n        console.log(number)\n        this.setState(\n            {\n                check_state_one: number\n\n            }\n        )\n    }\n    constructor() {\n        super()\n        this.state = {\n            displMode: 0\n        }\n    }\n\n    render() {\n        function formatPickerTimer(pickerdate) {\n            return {\n                startTime: pickerdate + (31 * 60 * 60 * 1000) - (7 * 24 * 60 * 60 * 1000),\n                endTime: pickerdate + (31 * 60 * 60 * 1000)\n            }\n        }\n        const { Option } = Select;\n        const { PickerDate, StatusSource, selectday, hrdatasource, rrdatasource, spo2datasource, btdatasource, abpdatasource, nbpdatasource, QDVS, QOXY } = this.props\n        const viewwidth = window.screen.availWidth - 220\n        const title_list = [{ item: \"HR\" }, { item: \"ABP\" }, { item: \"NBP\" }, { item: \"SpO2\" }, { item: \"BT\" }, { item: \"RR\" }]\n        const vital_title = title_list.map((info, index) =>\n            <div key={index} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"60px\" }}>\n                <div>\n                    <t4 style={{ display: \"flex\", justifyContent: \"center\", color: statecolor(info.item) }}>{info.item}</t4>\n                    <t1 style={{ display: \"flex\", justifyContent: \"center\", color: statecolor(info.item) }}>123</t1>\n                </div>\n            </div>\n        )\n        const pickerTimer = formatPickerTimer(PickerDate)\n        console.log(moment(pickerTimer.startTime).format(\"YYYY/MM/DD HH:mm\"))\n        const width = window.screen.availWidth - 171\n        return (\n            <div style={{ margin: \"10px 0px\" }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\" }}>\n                    <div>\n                        {vital_title}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"repeat(6,60px)\", position: \"relative\" }}>\n                        <div style={{ position: \"absolute\", top: 5, left: 50, height: 350, width: viewwidth }}>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(21,1fr)\" }}>\n                                {this.Interval_grid_box()}\n                            </div>\n                        </div>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"hr_svg_Infection\"}\n                            id_key={\"hr_id_Infection\"}\n                            type={\"hr\"}\n                            source={StatusSource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={2}\n                            lower={100}\n                            upper={160}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor=\"#779F50\"\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={200}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"abp_svg_Infection\"}\n                            id_key={\"abp_id_Infection\"}\n                            type={\"abp\"}\n                            source={StatusSource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={2}\n                            lower={55}\n                            upper={75}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#C12528\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"nbp_svg_Infection\"}\n                            id_key={\"nbp_id_Infection\"}\n                            type={\"nbp\"}\n                            source={StatusSource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={2}\n                            lower={55}\n                            upper={75}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#C12528\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"spo2_svg_Infection\"}\n                            id_key={\"spo2_id_Infection\"}\n                            type={\"spo2\"}\n                            source={StatusSource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={2}\n                            lower={55}\n                            upper={75}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#4773B8\"}\n                            colorshadow={\"#4773B8\"}\n                            min={0}\n                            max={100}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"bt_svg_Infection\"}\n                            id_key={\"bt_id_Infection\"}\n                            type={\"bt\"}\n                            source={StatusSource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={2}\n                            lower={55}\n                            upper={75}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#7F3DB5\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"rr_svg_Infection\"}\n                            id_key={\"rr_id_Infection\"}\n                            type={\"rr\"}\n                            source={StatusSource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={2}\n                            lower={55}\n                            upper={75}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#DE7531\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}>\n                        </Crosssectionvitalsignchart>\n                    </div>\n                    {/* <div style={this.state.needFixed ? scrollstyle : stablestyle}><Chroniclescale patid='flootsheetscale'></Chroniclescale></div> */}\n                </div>\n            </div>\n        );\n    }\n}\nexport default Infectionvitalsign","import React, { Component } from 'react'\nimport './Infectionlabtable.scss'\nimport { chronicladdataoneday, chroniclabdatathird } from '../../Data/Wardviewdata'\nimport { arraychange } from '../../Function/Wardstate'\n\nclass Infectionlabtable extends Component {\n    switch_state() {\n        const chronic_state = 2\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 18\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    table_content() {\n        function FormatList(Datalist, st) {\n            var Render = []\n            for (let index = 0; index < 21; index++) {\n                const start = st + (index * 8 * 60 * 60 * 1000)\n                const end = st + ((index + 1) * 8 * 60 * 60 * 1000)\n                const FilterData = Datalist.filter(function (value, index, arr) {\n                    return value.Time > start && value.Time < end\n                })\n                var sum = 0\n                console.log(FilterData)\n                for (let index = 0; index < FilterData.length; index++) {\n                    const element = FilterData[index];\n                    sum = sum + Number(element.Data)\n                }\n                Render.push(sum)\n            }\n            return Render\n        }\n        function CellRander(List) {\n            const cellR = List.map(function (info, index) {\n                return (\n                    <centerstyle style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }} key={index}>\n                        <t2>{info}</t2>\n                    </centerstyle>\n                );\n            })\n            return cellR\n        }\n        const { PickerDate, WBCList, BandList, SegList, LymList, PCTList, CRPList, title } = this.props\n        console.log(PickerDate)\n        const st = PickerDate + (31 * 60 * 60 * 1000) - (7 * 24 * 60 * 60 * 1000)\n        var WBCRender = FormatList(WBCList, st)\n        var BandRender = FormatList(BandList, st)\n        var SegRender = FormatList(SegList, st)\n        var LymRender = FormatList(LymList, st)\n        var PCTRender = FormatList(PCTList, st)\n        var CRPRender = FormatList(CRPList, st)\n        const WBCcell = CellRander(WBCRender)\n        const Bandcell = CellRander(BandRender)\n        const Segcell = CellRander(SegRender)\n        const Lymcell = CellRander(LymRender)\n        const PCTcell = CellRander(PCTRender)\n        const CRPcell = CellRander(CRPRender)\n        return (\n            <div style={{ display: \"grid\", gridTemplateRows: \"repeat(\" + title.length + \",1fr)\" }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{WBCcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{Bandcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{Segcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{Lymcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{PCTcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{CRPcell}</div>\n            </div>\n        );\n    }\n    render() {\n        const { userdata, title } = this.props\n        const title_list = title.map((info, index) => <div className='Chronictabletitlelist' key={index}><t2>{info.title}</t2></div>)\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\" }}>\n                <div style={{ display: \"grid\", gridTemplateRows: \"repeat(\" + title.length + \",1fr)\" }}>\n                    {title_list}\n                </div>\n                {this.table_content()}\n            </div>\n        );\n    }\n}\n\nexport default Infectionlabtable","import React, { Component } from 'react'\nimport Infectionlabtable from './Infectionlabtable'\n\nclass Infectionlab extends Component {\n    render() {\n        const { WBCList, BandList, SegList, LymList, PCTList, CRPList,PickerDate } = this.props\n        const item_title = [{ title: \"WBC\" }, { title: \"Band\" }, { title: \"Seg\" }, { title: \"Lym\" }, { title: \"PCT\" }, { title: \"CRP\" }]\n        return (\n            <div style={{margin:\"10px 0px\"}}>\n                <Infectionlabtable PickerDate={PickerDate} title={item_title}  WBCList={WBCList} BandList={BandList} SegList={SegList} LymList={LymList} PCTList={PCTList} CRPList={CRPList}></Infectionlabtable>\n            </div>\n        );\n    }\n}\n\nexport default Infectionlab","import React, { Component } from 'react'\nimport { DatePicker, Select } from 'antd'\nimport Vitalxaxis from '../../Module/Vitalxaxis'\nimport Infectionvitalsign from './Infectionvitalsign'\nimport Infectionlab from './Infectionlab'\nimport { formatxArrayhalf, formatendtime } from '../../Function/Timeformat'\nimport { simulationCentermonitordata, simulationnisdata } from '../../Function/Wardstate'\nimport Orderonchronic from '../ChronicleView/Chronic_order'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport './Infection.scss'\nimport X2JS from 'x2js';\n\nclass Infectionview extends Component {\n    state = {\n        datasource: [],\n        statussource: \"CM\",\n        intervalselect: 2,\n        PickerDate: moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf(),\n        UDORDER0: [],\n        RESLAB02: [],\n        RESLAB01: [],\n        classParser: undefined,\n\n        hrdatasource: [],\n        rrdatasource: [],\n        spo2datasource: [],\n        abpdatasource: [],\n        nbpdatasource: [],\n        btdatasource: [],\n        QDVS: [],\n        QOXY: [],\n    }\n    componentDidMount() {\n        this.apidata()\n    }\n\n    apidata() {\n        const { caseinfo } = this.props\n        const dateTime = this.state.PickerDate\n        const et = dateTime + (31 * 60 * 60 * 1000)\n        const st = moment(et - (7 * 24 * 60 * 60 * 1000)).format(\"YYYY-MM-DD\")\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Prescription\");\n                console.log(\"getGitHubJson Prescription OK \" + JSON.stringify(parser))\n                this.setState({\n                    classParser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiProvider.getStoredProcedureUDORDER0(caseinfo.HISID, caseinfo.CASEID, \"123\")\n            .then(data => {\n                this.setState({\n                    UDORDER0: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        ApiProvider.getStoredProcedureRESLAB02(caseinfo.HISID, st)\n            .then(data => {\n                this.setState({\n                    RESLAB02: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESLAB01(caseinfo.HISID, st)\n            .then(data => {\n                this.setState({\n                    RESLAB01: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n    }\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        console.log(\"mappings\" + mappings)\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n\n        inputs.forEach(input => {\n            let content = input.UDGNAME;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n        });\n        return allResult;\n    }\n    sourcehandleChange = (value) => {\n        this.setState({\n            statussource: value\n        })\n\n    }\n    switchdata(value_interval, sourcefrom) {\n        console.log(sourcefrom)\n        // const { defaultdate } = this.props\n        const defaultdate = new Date()\n        function changevitaldays(vitaldays) {\n            if (vitaldays === 3) {\n                return 18\n            }\n            if (vitaldays === 7) {\n                return 21\n            }\n            else {\n                return 24\n            }\n        }\n\n        function Interval_switch(interval) {\n            if (interval === 0) {\n                return 1\n            }\n            if (interval === 1) {\n                return 3\n            }\n\n            if (interval === 2) {\n                return 7\n            }\n        }\n        const interval = Interval_switch(value_interval)\n        const starttime = formatendtime(defaultdate) - (interval * 24 * 60 * 60 * 1000)\n        if (sourcefrom === 'NIS') {\n            const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n            const data = simulationnisdata(datatime, changevitaldays(interval))\n            return data\n        }\n        else {\n            const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n            const data = simulationCentermonitordata(datatime, changevitaldays(interval))\n            return data\n        }\n    }\n\n    render() {\n        function vallofnull(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"\"\n            }\n            return value.toString().trim()\n        }\n        const { Option } = Select;\n        const { caseinfo } = this.props\n        const { classParser, UDORDER0 } = this.state\n        const LabData = this.state.RESLAB02\n        const LabData2 = this.state.RESLAB01\n        const dateTime = this.state.PickerDate\n        const et = dateTime + (31 * 60 * 60 * 1000)\n        const st = et - (7 * 24 * 60 * 60 * 1000)\n        var WBCList = []\n        var BandList = []\n        var SegList = []\n        var LymList = []\n        var PCTList = []\n        var CRPList = []\n        if (Array.isArray(LabData)) {\n            if (LabData.length !== 0) {\n                for (let index = 0; index < LabData.length; index++) {\n                    const element = LabData[index];\n                    const WBC = vallofnull(element.RSV01)\n                    const Band = vallofnull(element.RSV13)\n                    const Seg = vallofnull(element.RSV14)\n                    const Lym = vallofnull(element.RSV15)\n                    const PCT = null\n                    const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                    console.log(st, et, time)\n                    if (st < time && time < et) {\n                        if (WBC !== null || WBC !== \"\" || WBC !== undefined) {\n                            WBCList.push({\n                                Time: time,\n                                Data: WBC\n                            })\n                        }\n                        if (Band !== null || Band !== \"\" || Band !== undefined) {\n                            BandList.push({\n                                Time: time,\n                                Data: Band\n                            })\n                        }\n                        if (Seg !== null || Seg !== \"\" || Seg !== undefined) {\n                            SegList.push({\n                                Time: time,\n                                Data: Seg\n                            })\n                        }\n                        if (Lym !== null || Lym !== \"\" || Lym !== undefined) {\n                            LymList.push({\n                                Time: time,\n                                Data: Lym\n                            })\n                        }\n                        if (PCT !== null || PCT !== \"\" || PCT !== undefined) {\n                            PCTList.push({\n                                Time: time,\n                                Data: PCT\n                            })\n                        }\n                    }\n                }\n            }\n        }\n        if (Array.isArray(LabData2)) {\n            if (LabData2.length !== 0) {\n                for (let index = 0; index < LabData2.length; index++) {\n                    const element = LabData2[index];\n                    const CRP = vallofnull(element.RSV32)\n                    const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                    if (st < time && time < et) {\n                        if (CRP !== null || CRP !== \"\" || CRP !== undefined) {\n                            CRPList.push({\n                                Time: time,\n                                Data: CRP\n                            })\n                        }\n                    }\n                }\n            }\n        }\n        console.log(WBCList, BandList, SegList, LymList, PCTList, CRPList)\n\n        let clusteredData = {}\n        if (classParser !== undefined) {\n            clusteredData = this.parse(UDORDER0, classParser)\n        }\n\n        //filter data by selected class\n        const filteredData = clusteredData[\"抗生素類別\"];\n\n        return (\n            <div style={{ padding: \"0px 20px\" }}>\n                <div className='Infectioncontrol'>\n                    <DatePicker defaultValue={moment(this.state.PickerDate)} onChange={(date, datestring) => { this.setState({ PickerDate: date.valueOf() }) }} allowClear={false} />\n                    <Select defaultValue={this.state.statussource} style={{ width: 200 }} onChange={this.sourcehandleChange}>\n                        <Option value={'CM'}>Center Monitor</Option>\n                        <Option value={'NIS'}>NIS</Option>\n                    </Select>\n                </div>\n                <div style={{ margin: \"10px 0px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\" }}>\n                        <div></div>\n                        <Vitalxaxis max={200} min={0} select_interval={2} select_date={new Date().getTime()} id_key=\"xaxis_infect\" svg_id=\"xaxis_svg_infect\"></Vitalxaxis>\n                    </div>\n                </div>\n                <div className='boxshadow'></div>\n                <div className='Infectionlayout'>\n                    <Infectionvitalsign caseinfo={caseinfo} StatusSource={this.state.statussource} PickerDate={this.state.PickerDate}></Infectionvitalsign>\n                    {/* Order */}\n                    <Orderonchronic PickerDate={this.state.PickerDate} UDORDER0={filteredData} select_interval={2} caseinfo={caseinfo} title=\"\"></Orderonchronic>\n                    <Infectionlab PickerDate={this.state.PickerDate} WBCList={WBCList} BandList={BandList} SegList={SegList} LymList={LymList} PCTList={PCTList} CRPList={CRPList}></Infectionlab>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\" }}>\n                    <div></div>\n                    <Vitalxaxis max={200} min={0} select_interval={2} select_date={new Date().getTime()} id_key=\"xaxis_flootsheet_bot\" svg_id=\"xaxis_svg_flootsheet_bot\"></Vitalxaxis>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Infectionview","import React, { Component } from 'react';\nimport editlogo from '../../Image/svg/Edit.svg'\nimport detaillogo from '../../Image/svg/details.svg'\nimport { Input, Button } from 'antd';\nimport './Bedsidecard.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Bedsidecard extends Component {\n    state = {\n        caseinfo: this.props.caseinfo,\n        EditMode: false,\n        remarkContent: \"\",\n        inputContent: \"\",\n        powerLogin: 0\n    }\n    componentDidMount() {\n        //bind function\n        this.onInputChange = this.onInputChange.bind(this);\n\n        //query patient remark\n        this.queryPatientRemark();\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    queryPatientRemark() {\n        ApiProvider.getOnePatientRemark(this.state.caseinfo.TRANSINID)\n        .then(data => {\n            console.log(\"queryPatientRemark OK \" + JSON.stringify(data));\n            this.setState({\n                remarkContent: data.data[0].context\n            });\n        })\n        .catch(err => {\n            console.log(\"queryPatientRemark NG \" + JSON.stringify(err));\n        });\n    }\n    onInputChange(event) {\n        this.setState({inputContent: event.target.value})\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    onClickEnter() {\n        ApiProvider.createPatientRemark(this.state.inputContent, this.state.caseinfo.HISID, this.state.caseinfo.TRANSINID)\n        .then(data => {\n            console.log(\"createPatientRemark OK \" + JSON.stringify(data));\n            this.setState(\n                {\n                    inputContent: \"\"\n                }\n            )\n            this.queryPatientRemark();\n        })\n        .catch(err => {\n            console.log(\"createPatientRemark NG \" + JSON.stringify(err));\n        });\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    render() {\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div className='bedsidecardtitle'>\n                    <t1>床頭卡註記</t1>\n                    <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin > 0 ? \"flex\" : \"none\" }}>\n                        <img src={editlogo} alt=\"editlogo\" />\n                    </div>\n                </div>\n                <div className='bedsidecardcontext'>\n                    <t2>{this.state.remarkContent}</t2>\n                </div>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", backgroundColor: \"rgba(238,238,238,1)\" }}>\n                        <Input placeholder=\"輸入當日註記內容\" value={this.state.inputContent} onChange={this.onInputChange}></Input>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Bedsidecard","import React, { Component } from 'react';\nimport editlogo from '../../Image/svg/Edit.svg'\nimport { Checkbox, Input, Button } from 'antd';\nimport './Scheduletodo.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nconst TODO_DONE = \"已完成\";\nconst TODO_UNFINISH = \"未完成\";\n\nclass Scheduletodo extends Component {\n    state = {\n        EditMode: false,\n        displayMode: true, //true已完成 flase未完成\n        todolist: [],\n        caseinfo: this.props.caseinfo,\n        inputContent: undefined,\n        powerLogin: 0\n    }\n    componentDidMount() {\n        //bind function\n        this.onInputChange = this.onInputChange.bind(this);\n\n        //query patient notice\\\n        this.queryPatientTodo();\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    queryPatientTodo() {\n        ApiProvider.getOneTodo(this.state.caseinfo.TRANSINID, this.state.caseinfo.CASEID)\n            .then(data => {\n                console.log(\"queryPatientTodo OK \" + JSON.stringify(data));\n                this.setState({\n                    todolist: data.data\n                });\n            })\n            .catch(err => {\n                console.log(\"queryPatientTodo NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString()\n        ApiProvider.createTodo(this.state.caseinfo.CASEID, this.state.inputContent, timeNowStr, this.state.caseinfo.TRANSINID, TODO_UNFINISH)\n            .then(data => {\n                console.log(\"createTodo OK \" + JSON.stringify(data));\n                this.queryPatientTodo();\n            })\n            .catch(err => {\n                console.log(\"createTodo NG \" + JSON.stringify(err));\n            });\n        this.setState(\n            {\n                EditMode: false,\n                inputContent: undefined\n            }\n        )\n    }\n    onClickfinish() {\n        console.log(\"finish\")\n        this.setState(\n            {\n                displayMode: true\n            }\n        )\n    }\n    onClickunfisish() {\n        this.setState(\n            {\n                displayMode: false\n            }\n        )\n    }\n\n    onChange = (checkedValues) => {\n        console.log('checked = ', document.getElementById(\"finish\"));\n    }\n    onItemCheck = (event) => {\n        console.log('onItemCheck ' + JSON.stringify(event.target));\n\n        const itemToUpdate = this.state.todolist.find(item => item.time === event.target.value);\n        console.log('find item ' + JSON.stringify(itemToUpdate));\n\n        if ((this.state.displayMode === true && event.target.checked === false) || (this.state.displayMode === false && event.target.checked === true)) {\n            ApiProvider.createTodo(itemToUpdate.caseid, itemToUpdate.context, itemToUpdate.time, itemToUpdate.transinno, (itemToUpdate.type === TODO_DONE) ? TODO_UNFINISH : TODO_DONE)\n                .then(data => {\n                    console.log(\"updateTodo OK \" + JSON.stringify(data));\n                    this.queryPatientTodo();\n                })\n                .catch(err => {\n                    console.log(\"updateTodo NG \" + JSON.stringify(err));\n                });\n        }\n    }\n    render() {\n        // const button_style = {\n        //     finish: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\", borderRadius: \"16px\", border: \"rgba(245, 166, 35, 1) 1px solid\", color: \"rgba(245, 166, 35, 1)\" },\n        //     unfinish: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\", borderRadius: \"16px\", border: \"rgba(245, 166, 35, 1) 1px solid\", background: \"rgba(245, 166, 35, 1)\", color: \"white\" }\n        // }\n\n        const todolist_data = this.state.todolist\n        const finish_data = todolist_data.filter(function (item, index, array) {\n            return item.type === TODO_DONE;\n        });\n        const finish_value = finish_data.map(function (item, index, array) {\n            return item.time;\n        });\n        const unfinish_data = todolist_data.filter(function (item, index, array) {\n            return item.type === TODO_UNFINISH;\n        });\n\n        const onItemCheck = this.onItemCheck;\n        const finish_checkbox = finish_data.map(function (item, index, array) {\n            return (\n                <div key={index} className='scheduletodocell'>\n                    <Checkbox value={item.time} checked={true} onChange={onItemCheck} style={{ textDecoration: \"line-through\" }}>{item.context}</Checkbox>\n                </div>\n            );\n        });\n        const unfinish_checkbox = unfinish_data.map(function (item, index, array) {\n            return (\n                <div key={index} className='scheduletodocell'>\n                    <Checkbox value={item.time} checked={false} onChange={onItemCheck}>{item.context}</Checkbox>\n                </div>\n            );\n        });\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <t1>To Do List</t1>\n                <div className='scheduletodotitle'>\n                    <t1>待辦排程</t1>\n                    <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin > 0 ? \"flex\" : \"none\" }}>\n                        <img src={editlogo} alt=\"editlogo\" />\n                    </div>\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"10px 0px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"115px 115px\", gridColumnGap: \"10px\" }}>\n                        <div className={this.state.displayMode ? 'finishbutton' : 'todobutton'} onClick={() => this.onClickunfisish()}>未完成</div>\n                        <div onClick={() => this.onClickfinish()} className={this.state.displayMode ? 'todobutton' : 'finishbutton'}>已完成</div>\n                    </div>\n                </div>\n                <Checkbox.Group defaultValue={finish_value} style={{ width: '100%' }} onChange={this.onChange}>\n                    <div style={{ overflowY: \"auto\", maxHeight: \"200px\" }}>\n                        {this.state.displayMode ? finish_checkbox : unfinish_checkbox}\n                    </div>\n                </Checkbox.Group>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <Input placeholder=\"輸入當日註記內容\" value={this.state.inputContent} onChange={this.onInputChange}></Input>\n                        <Button type=\"primary\">新增</Button>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Scheduletodo","import React, { Component } from 'react';\nimport calenderlogo from '../../Image/svg/calender.svg'\nimport calenderwhitelogo from '../../Image/svg/calenderwhite.svg'\nimport pingcheck from '../../Image/svg/ping.svg'\nimport pingwhite from '../../Image/svg/pingwhite.svg'\nimport './Calendercell.scss'\nimport { mmddformat, weekdateformatcalender } from '../../Function/Timeformat'\n\nclass Calendercell extends Component {\n\n    sendcallback(timestamp, clickindex) {\n        this.props.parentCallback(timestamp, clickindex);\n    }\n    onClickCheck(timestamp, clickindex) {\n        this.sendcallback(timestamp, clickindex)\n    }\n\n    render() {\n        const { clickindex, state, newDate, timestamp, clickdate, data, today } = this.props;\n        function disableday(state) {\n            if (state) {\n                return (\n                    <div className='calendersubcontexticonsecond'>\n                        <img src={calenderlogo} alt='calenderlogo' />\n                        <img src={pingcheck} alt='pingcheck' />\n                    </div>\n                );\n            }\n            else {\n                return (\n                    <div className='calendersubcontexticonsecond'>\n                        <img src={calenderwhitelogo} alt='calenderlogo' />\n                        <img src={pingwhite} alt='pingcheck' />\n                    </div>\n                );\n            }\n        }\n        function disabledayinfo(state) {\n            const scheduleArray = data.scheduleList.filter(item => item.type === \"排程\");\n            const eventArray    = data.scheduleList.filter(item => item.type === \"事件\");\n\n            if (state) {\n                return (\n                    <div className='calendersubcontexticonsecond'>\n                        <t1>{scheduleArray.length}</t1>\n                        <t1>{eventArray.length}</t1>\n                    </div>\n                );\n            }\n            else {\n                return (\n                    <div className='calendersubcontexticonsecond'>\n                        <t1 className='displayinfo'>{scheduleArray.length}</t1>\n                        <t1 className='displayinfo'>{eventArray.length}</t1>\n                    </div>\n                );\n            }\n        }\n        function locl(state) {\n            /*if (state) {\n                return '當日'\n            }\n            else return null\n            */\n            if(timestamp === today) return  '當日'\n            else return null\n        }\n        function stateswitch() {\n\n            console.log(timestamp, clickdate)\n            if (mmddformat(clickdate) === mmddformat(timestamp)) {\n                return true\n            }\n            return false\n        }\n        return (\n            <div className={stateswitch() ? 'calendersubcontextclick' : 'calendersubcontext'} onClick={() => this.onClickCheck(timestamp, clickindex)}>\n                <div className={stateswitch() ? 'calendersubcontexttitleclick' : 'calendersubcontexttitle'}>\n                    <t2 className='calendersubcontexttitletoday'>{mmddformat(timestamp)}({weekdateformatcalender(timestamp)}){locl(newDate)}</t2>\n                </div>\n                <div className='calendersubcontexticon'>\n                    {disableday(state)}\n                </div>\n                <div className='calendersubcontexticon'>\n                    {disabledayinfo(state)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Calendercell","import React, { Component } from 'react';\nimport { DatePicker } from 'antd';\nimport { Select } from 'antd';\nimport './Calender.scss'\nimport { mmddformat, compareday, yyyymmfirstweeksate } from '../../Function/Timeformat'\nimport Calendercell from './Calendercell'\nimport { Icon } from 'antd'\nimport Crossection_schedule from '../CrossSectionView/Crosssectionschedule'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment';\n\nconst SCHEDULE_TYPE_EVENT = \"事件\";\nconst SCHEDULE_TYPE_SCHEDULE = \"排程\";\nconst timeZoneOffset = 8 * 60 * 60 * 1000;\n\nclass Calender extends Component {\n    state = {\n        calendermode: 'week',\n        Clickdays: null,\n        ClickDate: null,\n        displayinfo: null,\n        scheduleRawData: [],\n        scheduleData: [],\n        startTimestamp: 0,\n        endTimestamp: 0,\n        todayBegin: 0,\n        noticeRawData: []\n    }\n    componentDidMount() {\n        const {startTimestamp, endTimestamp, todayBegin} = this.getStartEndTime();\n        this.setState({\n            startTimestamp: startTimestamp,\n            endTimestamp: endTimestamp,\n            todayBegin: todayBegin,\n            ClickDate: todayBegin\n        });\n        this.querySchedule(new Date(startTimestamp).toISOString().split('.')[0], new Date(endTimestamp).toISOString().split('.')[0]);\n        this.queryNotice();\n    }\n    getStartEndTime() {\n        const today = new Date();\n        const monthfirstweekday = new Date(today.getFullYear(), today.getMonth(), 1).getDay();\n        const firstCellBegin = new Date(today.getFullYear(), today.getMonth(), 1).getTime() - (monthfirstweekday * 24 * 60 * 60 * 1000) + timeZoneOffset;\n        const todayBegin = new Date(today.getFullYear(), today.getMonth(), today.getDate()).getTime() + timeZoneOffset;\n\n        const startTimestamp = (this.state.calendermode === 'week') ? todayBegin -  3 * 24 * 60 * 60 * 1000 : firstCellBegin;\n        const endTimestamp   = (this.state.calendermode === 'week') ? startTimestamp + 7 * 24 * 60 * 60 * 1000 : startTimestamp + 35 * 24 * 60 * 60 * 1000;\n\n        return {startTimestamp, endTimestamp, todayBegin};\n    }\n    querySchedule(startTimestampStr, endTimestampStr) {\n        ApiProvider.getOnePatientSchedule(this.props.caseinfo.TRANSINID, startTimestampStr, endTimestampStr)\n        .then(data => {\n            console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n\n            const itemList = data.data;\n            let refactoredList = [];\n            itemList.forEach(item => {\n                const itemTimeStr = item.time.split('T')[0];\n                let foundItemIndex = refactoredList.findIndex(element => element.time === itemTimeStr);\n                if(foundItemIndex === -1) {\n                    //not found, create one\n                    let newItem = {\n                        time: itemTimeStr,\n                        timestamp: item.time,\n                        scheduleList: []\n                    }\n                    let newEvent = {\n                        type: item.type,\n                        timestamp: new Date(item.time).getTime(),\n                        writer: (item.type === SCHEDULE_TYPE_EVENT) ? \"林醫師\" : \"張醫師\",\n                        name: item.name,//this.props.caseinfo.PBASINGNINFO.PNAMEC,//(item.type === SCHEDULE_TYPE_EVENT) ? \"林ＯＯ\" : \"黃ＯＯ\",\n                        content: item.context,\n                        bednumber: item.bednumber\n                    }\n                    newItem.scheduleList.push(newEvent);\n                    refactoredList.push(newItem);\n                } else {\n                    //found, update item\n                    let newEvent = { \n                        type: item.type,\n                        timestamp: new Date(item.time).getTime(),\n                        writer: (item.type === SCHEDULE_TYPE_EVENT) ? \"林醫師\" : \"張醫師\",\n                        name: item.name,//this.props.caseinfo.PBASINGNINFO.PNAMEC,//(item.type === SCHEDULE_TYPE_EVENT) ? \"林ＯＯ\" : \"黃ＯＯ\",\n                        content: item.context,\n                        bednumber: item.bednumber\n                    }\n                    refactoredList[foundItemIndex].scheduleList.push(newEvent);\n                }\n            });\n            this.setState({\n                scheduleRawData: data.data,\n                scheduleData: refactoredList\n            });\n        })\n        .catch(err => {\n            console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n        });\n    }\n    queryNotice() {\n        ApiProvider.getOnePatientNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID)\n        .then(result => {\n            console.log(\"getOnePatientNotice OK \" + JSON.stringify(result));\n            this.setState({\n                noticeRawData: result.data\n            })\n        })\n        .catch(err => {\n            console.log(\"getOnePatientNotice NG \" + JSON.stringify(err));\n        });\n    }\n    callbackFunction = (timestamp, clickindex) => {\n        console.log(timestamp)\n        this.setState({\n            ClickDate: timestamp,\n            displayinfo: clickindex\n        })\n    }\n    onCancelClick() {\n        this.setState({\n            ClickDate: this.state.todayBegin,\n            displayinfo: null\n        })\n    }\n    handleChange = (value) => {\n        console.log(value)\n        this.setState({\n            calendermode: value,\n            displayinfo: null,\n            Clickdays: null\n        })\n    }\n    onChange = (timestamp) => {\n        console.log('changestate')\n    }\n    onClickCheck(timestampdate) {\n        this.setState({\n            onClickdays: timestampdate\n        })\n    }\n    getDataFromTimestamp(timestamp) {\n        const dateStr = new Date(timestamp).toISOString().split('T')[0];\n        const dataOfDayIndex = this.state.scheduleData.findIndex(element => element.time === dateStr);\n        const dataOfDay = (dataOfDayIndex === -1) ? {scheduleList: []} : this.state.scheduleData[dataOfDayIndex];\n        return dataOfDay;\n    }\n    getNoticeFromTimestamp(timestamp) {\n        const dateStr = new Date(timestamp).toISOString().split('T')[0];\n        const noticeOfDayArray = this.state.noticeRawData.filter(element => element.time.indexOf(dateStr) > -1);\n        return noticeOfDayArray;\n    }\n    weekmode() {\n        var weekcontext = []\n        for (let index = 0; index < 7; index++) {\n            const timestampdate = this.state.startTimestamp + (index * 24 * 60 * 60 * 1000);\n            const date = mmddformat(timestampdate)\n            const dataOfDay = this.getDataFromTimestamp(timestampdate);\n            if (index - 3 === 0) {\n                weekcontext.push(\n                    <Calendercell clickindex={'week'} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={true} newDate={true} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n                );\n            }\n            else {\n                weekcontext.push(\n                    <Calendercell clickindex={'week'} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={compareday(timestampdate)} newDate={false} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n                );\n\n            }\n        }\n        return weekcontext\n    }\n    weekmonthmode(weeknumber, firstMonthWeekDay) {\n        var weekcontext = []\n        for (let index = 0; index < 7; index++) {\n            const timestampdate = new Date(firstMonthWeekDay).getTime() + (index * 24 * 60 * 60 * 1000) + timeZoneOffset;\n            const date = mmddformat(timestampdate)\n            const dataOfDay = this.getDataFromTimestamp(timestampdate)\n\n            if (new Date(mmddformat(new Date().getTime())).getTime() <= new Date(mmddformat(new Date(timestampdate).getTime())).getTime()) {\n                weekcontext.push(\n                    <Calendercell clickindex={weeknumber} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={true} newDate={true} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n                );\n            }\n            else {\n                weekcontext.push(\n                    <Calendercell clickindex={weeknumber} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={false} newDate={true} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n                );\n            }\n        }\n        return weekcontext\n    }\n\n    ShowModule(rowIndex) {\n        if(rowIndex === undefined) rowIndex = 0;\n        console.log(\"this.state.ClickDate\" + this.state.ClickDate);\n\n        const dataOfDay = this.getDataFromTimestamp(this.state.ClickDate);\n        const noticeOfDay = this.getNoticeFromTimestamp(this.state.ClickDate);\n\n        function checkmode(state) {\n            if (state === 'week') {\n                return 'calenderdisplayinformation'\n            }\n            if (state === rowIndex) {\n                return 'calenderdisplayinformation'\n            }\n            return 'calenderdisplayinformationnone'\n        }\n        console.log(moment(this.state.ClickDate).format(\"YYYYMMDDHHmmss\"))\n        return (\n            <div className={checkmode(this.state.displayinfo)}>\n                <div className='calenderModule'>\n                    <t1>詳細資訊</t1>\n                    <Icon type=\"close\" onClick={() => this.onCancelClick()} />\n                </div>\n                <div className='Modulelayout'>\n                    <Crossection_schedule PickerDate={this.state.ClickDate} source={1} caseinfo={this.props.caseinfo} noticeData={noticeOfDay} scheduleData={dataOfDay} editstatus={true}></Crossection_schedule>\n                </div>\n            </div>\n        );\n    }\n\n\n    setgroup() {\n        var calendermonthgroup = []\n        const monthfirstweekdate = new Date(yyyymmfirstweeksate(new Date())).getDay()\n        const firstMonthWeekDay = new Date(yyyymmfirstweeksate(new Date())).getTime() - (monthfirstweekdate * 24 * 60 * 60 * 1000)\n\n        for (let index = 0; index < 5; index++) {\n            calendermonthgroup.push(\n                <div className='calendercontextMonthRows'>\n                    {this.weekmonthmode(index, firstMonthWeekDay + (index * 7 * 24 * 60 * 60 * 1000))}\n                    {this.ShowModule(index)}\n                </div>\n            );\n\n        }\n        return calendermonthgroup\n    }\n    modechange(state) {\n        if (state === 'week') {\n            return (\n                <div className='calendercontext'>\n                    {this.weekmode()}\n                    {this.ShowModule()}\n                </div>\n            );\n        }\n        else {\n            // return (\n            //     <div>\n            //         {this.setgroup()}\n            //     </div>\n            // );\n            return this.setgroup()\n        }\n    }\n\n    SelectDatepickertype() {\n        const { MonthPicker } = DatePicker;\n        if (this.state.calendermode === 'month') {\n            return (\n                <MonthPicker placeholder=\"請選擇月份\" />\n            );\n        }\n        else {\n            return (\n                <DatePicker placeholder={['請選擇時間']} />\n            );\n        }\n    }\n    render() {\n        const { Option } = Select;\n        // const localday = new Date().getTime()\n        // function compareday(days) {\n        //     if (new Date(days).getTime() > new Date().getTime()) {\n        //         return true\n        //     }\n        //     return false\n        // }\n        return (\n            <div>\n                <t1 className='calendertitle'>行事曆</t1>\n                <div className='calendercontrol'>\n                    {this.SelectDatepickertype()}\n                    <Select defaultValue={this.state.calendermode} onChange={this.handleChange}>\n                        <Option value=\"week\">週</Option>\n                        <Option value=\"month\">月</Option>\n                    </Select>\n                </div>\n                {this.modechange(this.state.calendermode)}\n            </div>\n        );\n    }\n}\n\nexport default Calender","import React, { Component } from 'react';\nimport Notice from './Notice'\nimport Bedsidecard from './Bedsidecard'\nimport Scheduletodo from './Scheduletodo'\nimport Calender from './Calender'\nimport './Scheduleview.scss'\n\nclass Scheduleview extends Component {\n    render() {\n        function monthformat(month) {\n            return month + 1\n        }\n        function dateformat(time) {\n            return new Date(time).getFullYear() + \"-\" + monthformat(new Date(time).getMonth()) + \"-\" + new Date(time).getDate()\n        }\n        function exporttime(time) {\n            if (time === null) {\n                return \"--\"\n            }\n            else {\n                return dateformat(time)\n            }\n        }\n        const { caseinfo } = this.props\n        const time = new Date().getTime()\n\n        console.log(caseinfo)\n        return (\n            <div>\n                <div style={{ marginBottom: \"5px\" }}>\n                    <centerstyle>\n                        <div className='scheduletitle'>轉入時間:{dateformat(time)}/轉出時間\b:{exporttime(null)}</div>\n                    </centerstyle>\n                    <div className='boxshadow'></div>\n                </div>\n                <div className='schedulelayout'>\n                    <Bedsidecard caseinfo={caseinfo}></Bedsidecard>\n                    <Notice caseinfo={caseinfo}></Notice>\n                    <Calender caseinfo={caseinfo}></Calender>\n                    <Scheduletodo caseinfo={caseinfo}></Scheduletodo>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Scheduleview\n","import React, { Component } from 'react';\nimport Patientinfo from './Patientviewinfo'\nimport { Select, Modal } from 'antd';\nimport { bednumberformat, gender, birthdayweeks } from '../Function/Wardbedfunction'\nimport { Tabs } from 'antd';\nimport Crosssectionlayout from './CrossSectionView/Crosssectionlayout'\nimport Chroniclelayout from './ChronicleView/Chroniclelayout'\nimport Flowsheetlayout from './FlootSheetView/Flootsheetlayout'\nimport Examreport from './ExamReport/ExamReport'\nimport Orderview from './Orderview/Orderview'\nimport Noteview from './NoteView/Note'\nimport RTview from './RT/RTview'\nimport Nurtionview from './Nurtion/Nurtion'\nimport Infectionview from './Infection/Infection'\nimport Scheduleview from './Schedule/Scheduleview'\nimport * as ApiProvider from '../API/ApiProvider'\nimport X2JS from 'x2js';\nimport moment from 'moment';\nimport * as WardState from '../Function/Wardstate'\n\nclass Patientviewlayout extends Component {\n    state = {\n        TYPE: this.props.location.TYPE,\n        PBASINGNINFO: [],\n        PDOCNEW: [],\n        REMARK: [],\n        PLOC: [],\n        QMNC: [],\n        QENT: [],\n        QTWER: [],\n        tabstring: \"時間點檢視\",\n        visible: false,\n        PLOCSTART: null\n        // TYPE: this.props.location.TYPE,\n        // PBASINGNINFO: SimData.PBASIGNINFO,\n        // PDOCNEW: SimData.PDOCNEW,\n        // REMARK: SimData.REMARK,\n        // PLOC: SimData.PLOC,\n        // QMNC: SimData.QMNC,\n        // QTWER: SimData.QTWER,\n        // tabstring: \"時間點檢視\",\n        // visible: false,\n    }\n    componentDidMount() {\n        // const BEDNUMBER = Number(this.props.location.state.BEDNUMBER)\n        const CASEID = this.props.location.state.CASEID\n        const HISID = this.props.location.state.HISID\n        const PBASINFO = ApiProvider.getTablePBASINFO(HISID)\n            .then(data => {\n                return {\n                    PBASINGNINFO: data.data,\n                }\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n        const PDOCNEW = ApiProvider.getTablePDOCNEW(CASEID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getTablePDOCNEW NG \" + JSON.stringify(err));\n            });\n        const PLOC = ApiProvider.getTablePLOC(CASEID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n        // const pcaslist = ApiProvider.getStoredProcedurePCASELIST(HISID,\"DOC3924B\",\"E\")\n        Promise.all([PBASINFO, PDOCNEW, PLOC])\n            .then(result => {\n                console.log(\"API DATA = \" + result)\n                this.nis_status_shange(CASEID, result[0].PBASINGNINFO);\n                const PLOCLIST = result[2]\n                const PLOCTR = PLOCLIST[PLOCLIST.length - 1]\n                const PLOCSTART = PLOCLIST[0]\n                return {\n                    PBASINGNINFO: result[0].PBASINGNINFO,\n                    PDOCNEW: result[1],\n                    PLOC: PLOCTR,\n                    PLOCSTART: PLOCSTART\n                }\n            })\n            .then(result => {\n                this.setState({\n                    PBASINGNINFO: result.PBASINGNINFO,\n                    PDOCNEW: result.PDOCNEW,\n                    PLOC: result.PLOC,\n                    PLOCSTART: result.PLOCSTART\n                })\n            })\n    }\n\n    selectchange = (HBEDNUMBER) => {\n        const datalist = this.state.HBEDLIST\n        const filterdata = datalist.filter(function (info, index, array) {\n            return parseInt(info.HBEDNO) === HBEDNUMBER\n        })\n        if (filterdata.length === 0) {\n            return null\n        }\n        else {\n            const source = filterdata[0]\n            const HISID = source.PHISTNUM\n            const CASEID = source.PCASENO\n            const PBASINFO = ApiProvider.getTablePBASINFO(HISID)\n                .then(data => {\n                    return {\n                        PBASINGNINFO: data.data,\n                    }\n                })\n                .catch(err => {\n                    console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n                });\n            const PDOCNEW = ApiProvider.getTablePDOCNEW(CASEID)\n                .then(data => {\n                    return data.data\n                })\n                .catch(err => {\n                    console.log(\"Andy test getTablePDOCNEW NG \" + JSON.stringify(err));\n                });\n            const PLOC = ApiProvider.getTablePLOC(CASEID)\n                .then(data => {\n                    const matadata = data.data\n                    return matadata[matadata.length - 1]\n                })\n                .catch(err => {\n                    console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n                });\n            Promise.all([PBASINFO, PDOCNEW, PLOC])\n                .then(result => {\n                    this.nis_status_shange(CASEID, result[0].PBASINGNINFO);\n                    return {\n                        PBASINGNINFO: result[0].PBASINGNINFO,\n                        // BEDNUMBER: result[0].BEDNUMBER,\n                        PDOCNEW: result[1],\n                        PLOC: result[2]\n                    }\n                })\n                .then(result => {\n                    this.setState({\n                        PBASINGNINFO: result.PBASINGNINFO,\n                        PDOCNEW: result.PDOCNEW,\n                        PLOC: result.PLOC\n                    })\n                })\n                .catch(err => {\n                    console.log(\"error\")\n                })\n\n        }\n    }\n\n    nis_status_shange(CASEID, PBASINGNINFO) {\n        const xm2 = new X2JS()\n        ApiProvider.getQENT(CASEID)\n            .then(data=>{\n                this.setState({\n                    QENT: WardState.XM2JSON(data.data)\n                })\n            })\n            .catch(err => { console.log(err) })\n        ApiProvider.getQMNC(CASEID)\n            .then(data => {\n                // const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                this.setState({\n                    QMNC: WardState.XM2JSON(data.data)\n                })\n                const starttime = moment(PBASINGNINFO.PBIRTHDT, 'YYYYMMDD').format(\"YYYYMMDDHHmm\")\n                const endtime = moment().format('YYYYMMDDHHmm')\n                ApiProvider.getQTWPER(CASEID, starttime, endtime)\n                    .then(data => {\n                        const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                        var weightlist = []\n                        for (let index = 0; index < parsedata.length; index++) {\n                            const element = parsedata[index];\n                            if (element.type === 'TW') {\n                                weightlist.push(element)\n                            }\n                        }\n                        this.setState({\n                            QTWER: weightlist\n                        })\n                    })\n                    .catch(err => {\n                        console.log(\"Andy test getQTWPER NG \" + JSON.stringify(err));\n                    });\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n    }\n\n\n\n\n    onChange = (activkey) => {\n        this.setState({\n            tabstring: activkey\n        }\n        )\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    OptionSelectRender() {\n        function addzero(value) {\n            if (value < 10) {\n                return \"0\" + value\n            }\n            return value\n        }\n        function optionselect(LISTBED) {\n            const dataoption = LISTBED.map(function (info, index, array) {\n                return (\n                    <Option key={index} value={Number(info.HBEDNO)}>病床{addzero(parseInt(info.HBEDNO))}</Option>\n                );\n            })\n            return dataoption\n\n        }\n        const BedList = this.props.location.state.source\n        console.log(BedList)\n        const { Option } = Select;\n        const BEDNUMBER = Number(this.props.location.state.BEDNUMBER)\n        if (BedList !== null) {\n            return (\n                <Select defaultValue={Number(BEDNUMBER)} style={{ width: 120 }} onChange={this.selectchange}>\n                    {optionselect(BedList)}\n                </Select>\n            );\n        }\n        return null\n    }\n    fixpatientDate = (data) => {\n        const transdata = {\n            'cause': '住院原因',\n            'car_pho': '主要照顧者電話',\n            'care': '主要照顧者',\n            'con_1': '聯絡人1',\n            'con_p11': '聯絡人1電話',\n            'con_2': '聯絡人2',\n            'con_p21': '聯絡人2電話',\n            'dvs': '住院時生命徵象',\n            'habit': '飲食狀況',\n            'oxy': '住院時氧和評估',\n            'h_val': '住院時頭圍',\n            'b_val': '住院時胸圍',\n            'tall': '住院時身高',\n            'weight': '住院時體重'\n        }\n\n        const patientDate = []\n\n        for (let index in transdata) {\n            if (data[index] !== \"\") {\n                patientDate.push([transdata[index], data[index]])\n            }\n        }\n\n        return patientDate\n    }\n    render() {\n\n        const USERDATA = this.state.PBASINGNINFO\n        if (USERDATA.length === 0) {\n            return null\n        }\n        const BEDNUMBER = Number(this.props.location.state.BEDNUMBER)\n        const CASEID = this.props.location.state.CASEID\n        const HISID = this.props.location.state.HISID\n        const DOCLIST = this.state.PDOCNEW\n        const MainDoc = WardState.Doc(DOCLIST, \"B\")\n        const remark = this.state.REMARK.context\n        const ploc = this.state.PLOC\n        const transintime = ploc.PLOCTM.toString()\n        const transindt = ploc.PLOCDT.toString()\n        const transinid = \"NICU\" + transindt + transintime\n        const qmnc = this.state.QMNC\n        const bornWeeks = qmnc.weeks\n        const bornDays = qmnc.days\n        const wetghtList = this.state.QTWER\n        const { TabPane } = Tabs;\n        const selectrender = this.OptionSelectRender()\n        const caseinfo = {\n            \"HISID\": HISID,\n            \"CASEID\": CASEID,\n            \"WEEK_BORN\": bornWeeks,\n            \"DAY_BORN\": bornDays,\n            \"TRANSINID\": transinid,\n            \"TRANSINDT\": transindt,\n            \"WEIGHT\": wetghtList,\n            \"PBASINGNINFO\": USERDATA,\n            \"PLOCSTART\": this.state.PLOCSTART\n        }\n        const patientDetail = this.fixpatientDate(this.state.QENT)\n\n        return (\n            <div>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: 'center', height: \"40px\" }}>\n                    <t2>住院中病人資訊 > 病床{bednumberformat(BEDNUMBER)} > {this.state.tabstring}</t2>\n                    {selectrender}\n                </div>\n                <div className='infolayout'>\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(7,auto)\", gridColumnGap: \"10px\" }}>\n                            <div>\n                                <t2>病床{bednumberformat(Number(BEDNUMBER))}</t2>\n                                <t2 style={{ margin: \"0px 5px\" }}>{USERDATA.PNAMEC.toString().trim()}</t2>\n                                <t2>{birthdayweeks(moment(USERDATA.PBIRTHDT, \"YYYYMMDD\").format(\"YYYY/MM/DD\"))}週歲</t2>\n                            </div>\n                            <t2>性別:{gender(USERDATA.PSEX)}</t2>\n                            <t2>病歷號碼:{HISID}</t2>\n                            <t2>住院序號:{CASEID}</t2>\n                            <t2>主治醫師:{MainDoc.toString().trim()}醫師</t2>\n                            <t2>備註:{remark}</t2>\n                            <t2 style={{ color: \"blue\", textDecoration: \"underline\", cursor: \"pointer\" }} onClick={this.showModal}>病人基本資料</t2>\n                            <Modal\n                                title=\"病人基本資料\"\n                                visible={this.state.visible}\n                                onOk={this.handleOk}\n                                onCancel={this.handleCancel}\n                                width={800}\n                                footer={null}>\n                                <Patientinfo patientDetail={patientDetail}></Patientinfo>\n                            </Modal>\n                        </div>\n                    </div>\n                </div>\n                <Tabs defaultActiveKey={this.state.tabstring} tabPosition={'top'} onChange={this.onChange}>\n                    <TabPane tab=\"時間點檢視\" key=\"時間點檢視\">\n                        <Crosssectionlayout parentDateCallback={this.callback} caseinfo={caseinfo}></Crosssectionlayout>\n                    </TabPane>\n                    <TabPane tab=\"時間軸檢視\" key=\"時間軸檢視\">\n                        <Chroniclelayout caseinfo={caseinfo}></Chroniclelayout>\n                    </TabPane>\n                    <TabPane tab=\"輸出入細節\" key=\"輸出入細節\">\n                        <Flowsheetlayout caseinfo={caseinfo}></Flowsheetlayout>\n                    </TabPane>\n                    <TabPane tab=\"檢驗及報告\" key=\"檢驗及報告\">\n                        <Examreport caseinfo={caseinfo}>></Examreport>\n                    </TabPane>\n                    <TabPane tab=\"醫囑及藥囑\" key=\"醫囑及藥囑\">\n                        <Orderview caseinfo={caseinfo}>></Orderview>\n                    </TabPane>\n                    <TabPane tab=\"跨團隊紀錄\" key=\"跨團隊紀錄\">\n                        <Noteview caseinfo={caseinfo}>></Noteview>\n                    </TabPane>\n                    <TabPane tab=\"呼吸評估\" key=\"呼吸評估\">\n                        <RTview caseinfo={caseinfo}>></RTview>\n                    </TabPane>\n                    <TabPane tab=\"營養評估\" key=\"營養評估\">\n                        <Nurtionview caseinfo={caseinfo}>></Nurtionview>\n                    </TabPane>\n                    <TabPane tab=\"感染評估\" key=\"感染評估\">\n                        <Infectionview caseinfo={caseinfo}>></Infectionview>\n                    </TabPane>\n                    <TabPane tab=\"行事曆及註記\" key=\"行事曆及註記\">\n                        <Scheduleview caseinfo={caseinfo}>></Scheduleview>\n                    </TabPane>\n                </Tabs>\n            </div >\n        );\n    }\n}\n\nexport default Patientviewlayout;\n","import React, { Component } from 'react';\nimport { Table, Input, Select, Button, Modal, Radio } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider';\nconst { confirm } = Modal;\n\nclass Powersetting extends Component {\n    constructor(props) {\n        super();\n\n        this.addUserdata = this.addUserdata.bind(this)\n        this.adduserhandleChange = this.adduserhandleChange.bind(this)\n    }\n\n    state = {\n        MouseClick: 0,\n        name: undefined,\n        role: undefined,\n        adduser: undefined,\n        userList: [],\n        power: ['僅可瀏覽平台、無法瀏覽管理者', '可瀏覽和編輯平台筆記、無法瀏覽管理者', '可瀏覽和編輯平台筆記、可瀏覽權限設定畫面', '可管理所有角色帳號、可瀏覽和編輯平台筆記、可瀏覽權限設定、系統摘要', '可管理所有角色帳號、可瀏覽和編輯平台筆記、可瀏覽權限設定、系統摘要、歷史畫面','僅可瀏覽權限設定、系統摘要'],\n        powerName: ['唯讀使用者', '一般使用者', '一般使用者管理員', '系統設定管理員', '超級管理者','系統管理者'],\n        visible: false,\n        radioValue: 0,\n        pwdRadio: true,\n        inputUsername: '',\n        inputPassword: '',\n        inputName: '',\n        inputDoctorid: '',\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        this.nameChange = this.nameChange.bind(this)\n        this.queryUserdata = this.queryUserdata.bind(this)\n        this.inputuserName = this.inputuserName.bind(this)\n        this.inputPassword = this.inputPassword.bind(this)\n        this.inputName = this.inputName.bind(this)\n        this.inputDoctorid = this.inputDoctorid.bind(this)\n\n        ApiProvider.getAlluser()\n            .then(data => {\n                this.setState({ userList: data.data })\n            })\n            .catch(err => { })\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n\n    radioOnChange = e => {\n        this.setState({\n            radioValue: e.target.value,\n        }, () => {\n            if (this.state.radioValue === 1) {\n                this.setState({\n                    pwdRadio: true,\n                })\n                console.log(this.state.radioValue)\n            } else if (this.state.radioValue === 0) {\n                this.setState({\n                    pwdRadio: false,\n                })\n                console.log(this.state.radioValue)\n            }\n        })\n    };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    MouseClickTable(record) {\n        this.setState({\n            MouseClick: record\n        })\n    }\n\n    queryUserdata() {\n        if (this.state.role !== undefined && this.state.name !== undefined) {\n            ApiProvider.searchUser(this.state.name, this.state.role)\n                .then(data => {\n                    this.setState({ userList: data.data })\n                })\n                .catch(err => { })\n        }\n    }\n\n    addUserdata() {//sso 只剩下4種角色 其他先傳空直\n        ApiProvider.register(this.state.inputName, '', this.state.adduser, this.state.inputUsername, 'none')\n            .then(data => {\n                ApiProvider.getAlluser()\n                    .then(data => {\n                        this.setState({ userList: data.data, inputUsername: '', inputPassword: '', inputName: '', inputDoctorid: '' })\n                    })\n                    .catch(err => { })\n            })\n            .catch(err => { })\n        this.setState({\n            visible: false,\n        });\n    }\n\n\n    showDeleteConfirm(name, account, role, roleString) {\n        const set_State = this.setState.bind(this)\n        confirm({\n            title: '請問您確定要刪除此帳號嗎?',\n            content: <div>姓名：{name}<br />角色：{roleString}<br />帳號：{account}</div>,\n            okText: 'Yes',\n            okType: 'danger',\n            cancelText: 'No',\n            onOk() {\n                ApiProvider.deleteUser(name, role, account).then(data => {\n                    ApiProvider.getAlluser()\n                        .then(data => {\n                            set_State({ userList: data.data })\n                        })\n                        .catch(err => { })\n                }).catch(err => { })\n            },\n            onCancel() {\n            },\n        });\n    }\n\n    EditStyle(key, name, account, role, roleString) {\n        if (key === this.state.MouseClick) {\n            return (\n                <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gridColumnGap: '10px' }}>\n                    <div>\n                        <Button onClick={this.showDeleteConfirm.bind(this, name, account, role, roleString)} type=\"dashed\">\n                            刪除\n                        </Button>\n                    </div>\n                </div>\n            );\n        }\n        else return null\n    }\n\n    handleChange(value) {\n        this.setState({ role: value })\n    }\n\n    adduserhandleChange(value) {\n        this.setState({ adduser: value })\n    }\n\n    nameChange(event) {\n        this.setState({ name: event.target.value })\n    }\n\n    inputuserName(event) {\n        this.setState({ inputUsername: event.target.value })\n    }\n\n    inputPassword(event) {\n        this.setState({ inputPassword: event.target.value })\n    }\n\n    inputName(event) {\n        this.setState({ inputName: event.target.value })\n    }\n\n    inputDoctorid(event) {\n        this.setState({ inputDoctorid: event.target.value })\n    }\n\n    Searchbar() {\n        const { Option } = Select;\n        const { Search } = Input;\n        return (\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <div style={{ fontSize: '16px' }}>\n                        角色:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Select placeholder='選擇角色' style={{ width: 150 }} onChange={this.handleChange.bind(this)}>\n                            <Option value={0}>唯讀使用者</Option>\n                            <Option value={1}>一般使用者</Option>\n                            <Option value={2}>一般使用者管理員</Option>\n                            <Option value={3}>系統設定管理員</Option>\n                            {/*<Option value={4}>超級管理者</Option>*/}\n                        </Select>\n                    </div>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        姓名:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Search placeholder=\"輸入個案姓名\" onChange={this.nameChange} value={this.state.name} onSearch={this.queryUserdata}></Search>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    render() {\n \n        const columns = [\n            {\n                title: '編號',\n                dataIndex: 'id',\n                key: 'id',\n                width: \"10%\"\n            },\n            {\n                title: '姓名',\n                dataIndex: 'name',\n                key: 'name',\n                width: \"10%\"\n            },\n            {\n                title: '醫師帳號',\n                dataIndex: 'account',\n                key: 'account',\n                width: \"12%\"\n            },\n            {\n                title: '角色',\n                dataIndex: 'role',\n                key: 'role',\n                width: \"10%\"\n            },\n            {\n                title: '權限',\n                dataIndex: 'power',\n                key: 'power',\n                width: \"40%\"\n            },\n            {\n                dataIndex: 'clickstate',\n                key: 'clickstate',\n                width: \"7%\"\n            }\n        ];\n\n        const userData = this.state.userList.map((data, index) => {\n            let roleString = ''\n            let powerString = ''\n\n            roleString = this.state.powerName[data.role]\n            powerString = this.state.power[data.role]\n\n            return [\n                {\n                    key: ++index,\n                    id: index,\n                    name: data.name,\n                    role: roleString,\n                    power: powerString,\n                    account: data.username,\n                    doctorid: data.doctorid,\n                    clickstate: this.EditStyle(index, data.name, data.username, data.role, roleString)\n                }\n            ]\n        })\n        let myNewArray = [].concat.apply([], userData);\n        const { Option } = Select;\n        return (\n            <div>\n                <div style={{ display: \"flex\", justifyContent: 'space-between', alignItems: 'center' }}>\n                    {this.Searchbar()}\n                    <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                        <Button style={{ width: \"100%\" }} onClick={this.showModal}>新增帳號</Button>\n                        <Modal\n                            title=\"新增帳號\"\n                            visible={this.state.visible}\n                            onOk={this.addUserdata}\n                            onCancel={this.handleCancel}\n                            width=\"570px\"\n                        >\n                            <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                                {/*<Radio.Group onChange={this.radioOnChange.bind(this)}>\n                                    <Radio value={0}>一般帳號</Radio>\n                                    <Radio value={1}>SSO帳號</Radio>\n                                </Radio.Group>*/}\n                            </div>\n                            <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\", marginTop: \"10px\" }}>\n                                <div style={{ marginLeft: \"10px\" }}>\n                                    醫師帳號：\n                                <Input id=\"username\" value={this.state.inputUsername} onChange={this.inputuserName} placeholder=\"輸入帳號\" style={{ width: '120px' }} />\n                                </div>\n                                {/*<div style={{ marginLeft: \"10px\" }}>\n                                    密碼：\n                                <Input type=\"password\" id=\"password\" value={this.state.inputPassword} onChange={this.inputPassword} disabled={this.state.pwdRadio} placeholder=\"輸入密碼\" style={{ width: '120px' }} />\n                                </div>*/}\n                                <div style={{ marginLeft: \"10px\" }}>\n                                    姓名：\n                                <Input id=\"name\" placeholder=\"輸入姓名\" value={this.state.inputName} onChange={this.inputName} style={{ width: '120px' }} />\n                                </div>\n                            </div>\n                            {/*<div style={{ display: \"flex\", justifyContent: 'left', alignItems: \"left\", marginTop: \"10px\", marginLeft: \"13px\" }}>\n                                <div style={{ marginLeft: \"0px\" }}>\n                                    醫師編號：\n                                <Input id=\"doctorid\" disabled={this.state.pwdRadio} placeholder=\"請輸入醫師編號\" value={this.state.inputDoctorid} onChange={this.inputDoctorid} style={{ width: '160px' }} />\n                                </div>\n                            </div>*/}\n                            <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\", marginTop: \"10px\", marginLeft: \"13px\" }}>\n                                <div style={{ marginLeft: \"0px\" }}>\n                                    角色：{this.state.pwdRadio ?\n                                        <Select placeholder='選擇角色' style={{ width: 150 }} onChange={this.adduserhandleChange.bind(this)}>\n                                            <Option value={0}>唯讀使用者</Option>\n                                            <Option value={1}>一般使用者</Option>\n                                            <Option value={2} disabled={this.state.powerLogin >= 3 ? false : true}>一般使用者管理員</Option>\n                                        </Select> :\n                                        <Select placeholder='選擇角色' style={{ width: 150 }} onChange={this.adduserhandleChange.bind(this)}>\n                                            <Option value={3}>系統設定管理員</Option>\n                                        </Select>}\n                                </div>\n                            </div>\n                            <div>\n\n                            </div>\n                        </Modal>\n                    </div>\n                </div>\n                <div style={{ marginTop: '20px' }}>\n                    <Table columns={columns} dataSource={myNewArray} onRow={record => {\n                        return {\n                            onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                            onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                        };\n                    }} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Powersetting;","import React, { Component } from 'react';\nimport { Table } from 'antd';\n\nclass Systemlogtable extends Component {\n    state = {\n        MouseClick: 0\n    }\n\n    MouseClickTable(record) {\n        this.setState({\n            MouseClick: record\n        })\n    }\n\n    render() {\n\n        const powerName = ['唯讀使用者', '一般使用者', '一般使用者管理員', '系統設定管理員', '超級管理者']\n        const loginlog_table = this.props.loginlogList.map(\n            (info, index) => {\n                let managerName = ''\n                let dateTime = info.time.split(\"T\")[0] + ' ' + info.time.split(\"T\")[1].split(\".\")[0]\n\n                managerName = powerName[info.role]\n\n                return {\n                    key: index,\n                    time: dateTime,\n                    event: 'User ' + info.name + '(' + managerName + ') login system'\n                }\n            }\n        )\n\n        const apilog_table = this.props.apilogList.map((data, index) => {\n            if (data !== null) {\n                let date = data.split(\"- -\")[1].split(\"]\")[0].split(\"[\")[1].split(\" \")[0].split(\"/\")\n                const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n                for (let j = 0; j < months.length; j++) {\n                    if (date[1] == months[j]) {\n                        date[1] = months.indexOf(months[j]) + 1\n                    }\n                }\n                if (date[1] < 10) {\n                    date[1] = '0' + date[1]\n                }\n                let time = date[2].split(\":\")[0] + \"-\" + date[1] + \"-\" + date[0] + \" \" + date[2].split(\":\")[1] + \":\" + date[2].split(\":\")[2] + \":\" + date[2].split(\":\")[3]\n                let content = data.split(\"- -\")[1].split(\"]\")[1]\n\n                return {\n                    key: index,\n                    time: time,\n                    event: content\n                }\n            }\n        })\n\n        const columns = [\n            {\n                title: '記錄時間',\n                dataIndex: 'time',\n                key: 'time',\n                width: \"1%\"\n            },\n            {\n                title: '事件',\n                dataIndex: 'event',\n                key: 'event',\n                width: \"10%\"\n            }\n        ]\n\n        return (\n            <div style={{ marginTop: '20px' }}>\n                {\n                    this.props.optionValue ? <Table columns={columns} dataSource={apilog_table} onRow={record => {\n                        return {\n                            onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                            onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                        }\n                    }} pagination={{\n                        onChange: (page, pageSize) => {\n                            //console.log('current page: ', page)\n                            this.props.getPages(page)\n                        }\n                    }} /> :\n                        <Table columns={columns} dataSource={loginlog_table} onRow={record => {\n                            return {\n                                onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                                onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                            }\n                        }} pagination={{\n                            onChange: (page, pageSize) => {\n                                //console.log('current page: ', page)\n                                this.props.getPages(page)\n                            }\n                        }} />\n                }\n            </div>\n        )\n    }\n}\n\nexport default Systemlogtable","import React, { Component } from 'react';\nimport { Progress, Select, DatePicker } from 'antd';\nimport Systemlogtable from './Systemlogtable'\nimport * as ApiProvider from '../API/ApiProvider';\n\nclass Systemlog extends Component {\n\n    state = { startTime: \"\", endTime: \"\", totalSpace: 0, usingSpace: 0, percent: 0, option: 0, loginlogList: [], apilogList: [], page: 1 }\n\n    componentDidMount() {\n        ApiProvider.getSpace()\n            .then(data => {\n                const totalSpace = data.data[0].total / 1024 / 1024 / 1024\n                const usingSpace = (data.data[0].total - data.data[0].unuse) / 1024 / 1024 / 1024\n                const percent = (usingSpace / totalSpace) * 100\n                this.setState({ totalSpace: totalSpace.toFixed(2), usingSpace: usingSpace.toFixed(2), percent: percent.toFixed(2) })\n            })\n            .catch(err => { })\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    onChange(date, dateString) {\n        this.setState({ startTime: dateString[0], endTime: dateString[1] }, () => {\n            if (this.state.option == 0) {\n                this.queryLoginLogdata()\n            } else if (this.state.option == 1) {\n                this.queryApiLogdata()\n            }\n        });\n    }\n\n    queryLoginLogdata() {\n        if (this.state.startTime !== \"\" && this.state.endTime !== \"\") {\n            const st = new Date(this.state.startTime.split('-')[0], this.state.startTime.split('-')[1] - 1, this.state.startTime.split('-')[2]).toISOString().split('.')[0];\n            const et = new Date(this.state.endTime.split('-')[0], this.state.endTime.split('-')[1] - 1, this.state.endTime.split('-')[2]).toISOString().split('.')[0];\n\n            ApiProvider.getLoginlog(st, et)\n                .then(data => {\n                    this.setState({ loginlogList: data.data, apilogList: [] })\n                })\n                .catch(err => { })\n        }\n    }\n\n    queryApiLogdata() {\n        if (this.state.startTime !== \"\" && this.state.endTime !== \"\") {\n            ApiProvider.getApilog(this.state.startTime)\n                .then(data => {\n                    this.setState({ apilogList: data.data, loginlogList: [] })\n                })\n                .catch(err => { })\n        }\n    }\n\n    getPages(pages) {\n        this.setState({ page: pages },()=>{\n            //console.log('current page: ', this.state.page)\n        })     \n    }\n\n    handleChange(value) {\n        this.setState({ option: value })\n    }\n    render() {\n        const { Option } = Select;\n        const { RangePicker } = DatePicker;\n        const onChange = this.onChange.bind(this);\n\n        return (\n            <div>\n                <div style={{ fontSize: '22px' }}>系統空間使用狀況</div>\n                <div style={{ marginTop: \"10px\" }}><Progress percent={this.state.percent} showInfo={false} /></div>\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginTop: \"10px\" }}>\n                    <div>\n                        <div>已使用空間/總空間</div>\n                        <div>{this.state.usingSpace}GB({this.state.percent}%)/{this.state.totalSpace}GB</div>\n                    </div>\n                    <div>\n                        <div>收案中的個案資料0.9GB(10.5%)</div>\n                        <div>0.9GB(10.5%)</div>\n                    </div>\n                </div>\n                <div style={{ marginTop: '20px' }}>\n                    <div style={{ fontSize: '22px' }}>Event Log</div>\n                    <div style={{ marginTop: \"10px\" }}>\n                        <Select placeholder='選擇log' style={{ width: 200 }} onChange={this.handleChange.bind(this)}>\n                            <Option value={0}>Login log</Option>\n                            <Option value={1}>API access log</Option>\n                        </Select>\n                        <RangePicker onChange={onChange} style={{ marginLeft: \"10px\", width: 400 }} />\n                    </div>\n                    <div style={{ marginTop: '10px' }}>\n                        <Systemlogtable loginlogList={this.state.loginlogList} apilogList={this.state.apilogList} optionValue={this.state.option} getPages={this.getPages.bind(this)} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Systemlog","import React, { Component } from 'react';\nimport { Tabs } from 'antd';\nimport Powersetting from '../Systemgroup/powersetting'\nimport Systemlog from '../Systemgroup/Systemlog'\nimport Warningmanage from '../Systemgroup/Warningmanage'\n\n\nclass Systemcontrol extends Component {\n    state = {\n        powerLogin: 0\n    }\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    render() {\n\n        const { TabPane } = Tabs;\n        const bollogin = this.state.powerLogin > 2\n        return (\n            <div style={{ paddingLeft: \"24px\", paddingRight: \"24px\" }}>\n                <div style={{ fontSize: \"22px\", height: '50px', lineHeight: \"50px\" }}>系統設定</div>\n                <Tabs defaultActiveKey=\"5\" onChange={console.log(\"click\")} å>\n                    <TabPane tab=\"權限設定\" key=\"1\" >\n                        <Powersetting />\n                    </TabPane>\n                    {\n                        bollogin && <TabPane tab=\"系統摘要\" key=\"2\" >\n                            <Systemlog />\n                        </TabPane>\n                    }\n                    {/*<TabPane tab=\"裝置連線狀態管理\" key=\"3\">\n                    </TabPane> \n                    <TabPane tab=\"病人資料狀態管理\" key=\"3\">\n                    </TabPane>                  \n                    <TabPane tab=\"警示管理\" key=\"5\">\n                        <Warningmanage/>\n                    </TabPane>*/}\n                </Tabs>\n            </div>\n        );\n    }\n}\n\nexport default Systemcontrol;","import React, { Component } from 'react';\nimport { Checkbox, Select, Radio, Input, Button } from 'antd';\n\nclass Warningmanage extends Component {\n    state = {\n        value: 1,\n    };\n\n    onRadioChange = e => {\n        console.log('radio checked', e.target.value);\n        this.setState({\n            value: e.target.value,\n        });\n    };\n\n    Step5function() {\n        const { Option } = Select;\n\n        return (\n            <div style={{ marginTop: '20px' }}>\n                <div style={{ color: 'rgba(59, 151, 225, 1)', fontSize: '16px' }}>Step.5</div>\n                <div style={{ borderWidth: '1px', borderColor: 'rgba(59, 151, 225, 1)', borderStyle: 'solid', borderRadius: '8px', width: '100%', padding: '30px', display: 'flex', alignItems: 'center' }}>\n                    <div>\n                        <div style={{ fontSize: '16px', marginBottom: '20px' }}>設定警示Profile</div>\n                        <div>\n                            <Radio.Group onChange={this.onChange} value={this.state.value}>\n                                <Radio style={{ display: 'block', height: '50px', lineHeight: '50px' }} value={1}>\n                                    不設定為Profile，直接儲存本次設定\n                                </Radio>\n                                <Radio style={{ display: 'block', height: '50px', lineHeight: '50px' }} value={1}>\n                                    將此設定規則儲存為套件Profile\n                                    <Select value='藍色' style={{ width: 150, marginLeft: 10, marginRight: 10 }}>\n                                        <Option value={0}>主要管理者</Option>\n                                        <Option value={1}>一般管理者</Option>\n                                        <Option value={2}>唯獨使用者</Option>\n                                    </Select>\n                                </Radio>\n                            </Radio.Group>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    Step4function() {\n        const { Option } = Select;\n\n        return (\n            <div style={{ marginTop: '20px' }}>\n                <div style={{ color: 'rgba(59, 151, 225, 1)', fontSize: '16px' }}>Step.4</div>\n                <div style={{ borderWidth: '1px', borderColor: 'rgba(59, 151, 225, 1)', borderStyle: 'solid', borderRadius: '8px', width: '100%', padding: '30px', display: 'flex', alignItems: 'center' }}>\n                    <div>\n                        <div style={{ fontSize: '16px', marginBottom: '20px' }}>設定警示呈現方式</div>\n                        <div>\n                            <Radio.Group onChange={this.onChange} value={this.state.value}>\n                                <Radio style={{ display: 'block', height: '50px', lineHeight: '50px' }} value={1}>\n                                    箭頭呈現\n                                    <Select placeholder='選擇方向' style={{ width: 150, marginLeft: 10, marginRight: 10 }}>\n                                        <Option value={0}>主要管理者</Option>\n                                        <Option value={1}>一般管理者</Option>\n                                        <Option value={2}>唯獨使用者</Option>\n                                    </Select>\n                                </Radio>\n                                <Radio style={{ display: 'block', height: '50px', lineHeight: '50px' }} value={1}>\n                                    區塊呈現\n                                    <Input style={{ width: 150, marginLeft: 10, marginRight: 10 }} placeholder='請輸入Profile name' />\n                                </Radio>\n                            </Radio.Group>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    Step3function() {\n        const { Option } = Select;\n\n        return (\n            <div style={{ marginTop: '20px' }}>\n                <div style={{ color: 'rgba(59, 151, 225, 1)', fontSize: '16px' }}>Step.3</div>\n                <div style={{ borderWidth: '1px', borderColor: 'rgba(59, 151, 225, 1)', borderStyle: 'solid', borderRadius: '8px', width: '100%', padding: '30px', display: 'flex', alignItems: 'center' }}>\n                    <div>\n                        <div style={{ fontSize: '16px', marginBottom: '20px' }}>設定警示類型</div>\n                        <div>\n                            <Radio.Group onChange={this.onChange} value={this.state.value}>\n                                <Radio style={{ display: 'block', height: '150px', lineHeight: '50px' }} value={1}>\n                                    閾值警示\n                                    <div style={{ height: '50px', marginLeft: '30px', display: 'flex', alignItems: 'center' }}>\n                                        <Checkbox>超過閾值</Checkbox>\n                                        <Input style={{ width: 150, marginLeft: 10, marginRight: 10 }} placeholder='請輸入數值' />\n                                        <div>以上（合）時，顯示警示燈號</div>\n                                    </div>\n                                    <div style={{ height: '50px', marginLeft: '30px', display: 'flex', alignItems: 'center' }}>\n                                        <Checkbox>超過閾值</Checkbox>\n                                        <Input style={{ width: 150, marginLeft: 10, marginRight: 10 }} placeholder='請輸入數值' />\n                                        <div>以下（合）時，顯示警示燈號</div>\n                                    </div>\n                                </Radio>\n                                <Radio style={{ display: 'block', height: '100px', lineHeight: '50px' }} value={2}>\n                                    與特定觀察值比較\n                                    <div style={{ height: '50px', marginLeft: '30px', display: 'flex', alignItems: 'center' }}>\n                                        <div>與</div>\n                                        <Select value='前一筆' style={{ width: 100, marginLeft: 10, marginRight: 10 }}>\n                                            <Option value={0}>主要管理者</Option>\n                                            <Option value={1}>一般管理者</Option>\n                                            <Option value={2}>唯獨使用者</Option>\n                                        </Select>\n                                        <div>觀察值比較</div>\n                                        <Select value='高於' style={{ width: 100, marginLeft: 10, marginRight: 5 }}>\n                                            <Option value={0}>主要管理者</Option>\n                                            <Option value={1}>一般管理者</Option>\n                                            <Option value={2}>唯獨使用者</Option>\n                                        </Select>\n                                        <Input style={{ width: 100, marginLeft: 5, marginRight: 10 }} placeholder='請輸入數值' />\n                                        <div>%，則亮燈</div>\n                                    </div>\n                                </Radio>\n                            </Radio.Group>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    Step2function() {\n        const { Option } = Select;\n\n        function handleChange(value) {\n            console.log(`selected ${value}`);\n        }\n        return (\n            <div style={{ marginTop: '20px' }}>\n                <div style={{ color: 'rgba(59, 151, 225, 1)', fontSize: '16px' }}>Step.2</div>\n                <div style={{ borderWidth: '1px', borderColor: 'rgba(59, 151, 225, 1)', borderStyle: 'solid', borderRadius: '8px', width: '100%', padding: '30px', display: 'flex', alignItems: 'center' }}>\n                    <div>\n                        <div style={{ fontSize: '16px', marginBottom: '20px' }}>設定警示適用對象</div>\n                        <div>\n                            <Radio.Group onChange={this.onRadioChange} value={this.state.value}>\n                                <Radio style={{ display: 'block', height: '50px', lineHeight: '50px' }} value={1}>Option A</Radio>\n                                <Radio style={{ display: 'block', height: '150px', lineHeight: '50px' }} value={2}>\n                                    Option b\n                                    <div style={{ marginLeft: \"20px\" }}>\n                                        <Radio.Group onChange={this.onChange} value={this.state.value}>\n                                            <Radio style={{ display: 'block', height: '50px', lineHeight: '50px' }} value={1}>\n                                                <Select placeholder='選擇角色' style={{ width: 200, marginLeft: 10 }} onChange={handleChange}>\n                                                    <Option value={0}>主要管理者</Option>\n                                                    <Option value={1}>一般管理者</Option>\n                                                    <Option value={2}>唯獨使用者</Option>\n                                                </Select>\n                                            </Radio>\n                                            <Radio style={{ display: 'block', height: '50px', lineHeight: '50px' }} value={2}>\n                                                <Input style={{ width: 450, marginLeft: 10 }} placeholder='0-20週' />\n                                            </Radio>\n                                        </Radio.Group>\n                                    </div>\n                                </Radio>\n                            </Radio.Group>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    Step1function() {\n        const { Option } = Select;\n\n        function handleChange(value) {\n            console.log(`selected ${value}`);\n        }\n        return (\n            <div>\n                <div style={{ color: 'rgba(59, 151, 225, 1)', fontSize: '16px' }}>Step.1</div>\n                <div style={{ borderWidth: '1px', borderColor: 'rgba(59, 151, 225, 1)', borderStyle: 'solid', borderRadius: '8px', width: '100%', padding: '30px', display: 'flex', alignItems: 'center' }}>\n                    <div>\n                        <div style={{ fontSize: '16px', marginBottom: '20px' }}>選擇臨床警示項目</div>\n                        <div>\n                            <Select placeholder='選擇角色' style={{ width: 200 }} onChange={handleChange}>\n                                <Option value={0}>主要管理者</Option>\n                                <Option value={1}>一般管理者</Option>\n                                <Option value={2}>唯獨使用者</Option>\n                            </Select>\n                            <Select placeholder='選擇角色' style={{ width: 200, marginLeft: '20px' }} onChange={handleChange}>\n                                <Option value={0}>主要管理者</Option>\n                                <Option value={1}>一般管理者</Option>\n                                <Option value={2}>唯獨使用者</Option>\n                            </Select>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    render() {\n        const { Option } = Select;\n\n        function handleChange(value) {\n            console.log(`selected ${value}`);\n        }\n\n        function onChange(e) {\n            console.log(`checked = ${e.target.checked}`);\n        }\n        return (\n            <div>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <Checkbox onChange={onChange}></Checkbox>\n                    <div style={{ marginLeft: '10px' }}>套用已儲存Profile</div>\n                    <Select placeholder='選擇角色' style={{ width: 200, marginLeft: \"10px\" }} onChange={handleChange}>\n                        <Option value={0}>主要管理者</Option>\n                        <Option value={1}>一般管理者</Option>\n                        <Option value={2}>唯獨使用者</Option>\n                    </Select>\n                </div>\n                {this.Step1function()}\n                {this.Step2function()}\n                {this.Step3function()}\n                {this.Step4function()}\n                {this.Step5function()}\n                <div style={{ padding: '30px', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                    <Button style={{ width: '150px', height: '50px' }}>取消</Button>\n                    <Button style={{ width: '150px', height: '50px', marginLeft: '20px' }}>儲存</Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Warningmanage","import React, { Component } from 'react';\nimport './Layout.scss';\nimport Sidermenu from './Sidermenu';\nimport Bedview from '../Wardview/Bedinfo/Bedview'\nimport Historyview from '../Content/Historyview'\nimport Patientviewlayout from '../Patientview/Patientviewlayout'\nimport Systemcontrol from '../Content/Systemcontrol'\nimport { Route, Switch, Link } from 'react-router-dom';\nimport { yyyymmddformat, weekdateformat } from '../Function/Timeformat'\n\nclass Layoutframe extends Component {\n    onClickLogout() {\n        sessionStorage.clear();\n    }\n    render() {\n        const UsrName = sessionStorage.getItem('user');\n        const url_path = this.props.location.pathname\n        return (\n            <div style={{ height: \"100vh\" }}>\n                <div className=\"header\">\n                    {/*eslint-disable-next-line*/}\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                        <t1>NICU</t1>\n                        <Sidermenu path={url_path} routes={this.props.route}></Sidermenu>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"10px\" }}>\n                        <t3 style={{ color: 'white' }}>{UsrName}醫師 {yyyymmddformat(new Date())} {weekdateformat(new Date())}</t3>\n                        {/* <Link to=\"/Login\" onClick={() => this.onClickLogout()}>\n                            <t3 style={{ color: 'white' }}>登出</t3>\n                        </Link> */}\n                    </div>\n                </div>\n                <div className=\"content\">\n                    <Switch>\n                        <Route path={`${this.props.match.path}/ward`} component={Bedview} />\n                        <Route path={`${this.props.match.path}/history`} component={Historyview} />\n                        <Route path={`${this.props.match.path}/system`} component={Systemcontrol} />\n                        <Route path={`${this.props.match.path}/patient`} component={Patientviewlayout} />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Layoutframe;","import React, { Component } from 'react';\nimport { Button } from 'antd';\nimport { Redirect } from 'react-router-dom'\nimport { Input, Icon } from 'antd'\nimport Cookies from 'js-cookie'\nimport * as ApiProvider from '../API/ApiProvider';\n\n\nclass Loginview extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: false,\n            permission: true,\n            statusstring: null\n        }\n        this.setRedirect = this.setRedirect.bind(this);   //把元件中的this繫結到handleClick方法中，這樣就會保持this一致          \n    };\n    setRedirect = () => {\n        const account = document.getElementById(\"account\").value;\n        const password = document.getElementById(\"password\").value;\n        const data = { username: account, password: password }\n        console.log(account, password)\n        ApiProvider.login(account, password)\n            .then(result => {\n                console.log(\"login OK \" + JSON.stringify(result));\n                const userData = result.data\n                const user = account\n                const role = userData[0].role\n                sessionStorage.setItem('user', user);\n                sessionStorage.setItem('role', role);\n                this.setState({\n                    redirect: true\n                })\n            })\n            .catch(err => {\n                console.log(\"login NG \" + JSON.stringify(err));\n                this.setState({\n                    permission: false,\n                    statusstring: \"網路異常\"\n                })\n            });\n    }\n    renderRedirect = () => {\n        const login = sessionStorage.getItem('user');\n        const role = sessionStorage.getItem('role');\n        console.log(role)\n        if (login !== null) {\n            if (Number(role) === 5) {\n                return <Redirect from={\"/login\"} to={\"/nicu/system\"} />\n            }\n            return <Redirect from={\"/login\"} to={\"/nicu/ward/wardindex\"} />\n        }\n        // else if (login !== null) {\n        //     return <Redirect from={\"/login\"} to={\"/nicu\"} />\n        // }\n    }\n\n\n    render() {\n        return (\n            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"100vh\", width: \"100vw\", background: 'linear-gradient(to bottom, rgba(195, 239, 255, 1), rgba(46, 100, 164, 1))' }}>\n                {this.renderRedirect()}\n                <div style={{ display: 'flex', justifyContent: \"center\", alignItems: \"center\", flexWrap: \"wrap\" }}>\n                    <div style={{ color: \"white\", fontSize: \"26px\", textAlign: \"center\", width: \"100%\" }}>台北榮民總醫院 NICU智慧醫療系統</div>\n                    <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ width: \"350px\", height: \"250px\", borderRadius: \"4px\", backgroundColor: \"white\", textAlign: \"center\", padding: '25px', position: \"relative\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                                <div style={{ height: \"32px\", width: \"32px\", borderRadius: \"2px\", backgroundColor: \"rgba(46,100,164,1)\", color: \"white\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>L</div>\n                                <Input id=\"account\" style={{ marginLeft: \"20px\" }} placeholder=\"請輸入帳號\"></Input>\n                            </div>\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginTop: \"25px\" }}>\n                                <div style={{ height: \"32px\", width: \"32px\", borderRadius: \"2px\", backgroundColor: \"rgba(46,100,164,1)\", color: \"white\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>P</div>\n                                <Input type=\"password\" id=\"password\" style={{ marginLeft: \"20px\" }} placeholder=\"請輸入密碼\"></Input>\n                            </div>\n                            <Button style={{ width: \"280px\", backgroundColor: \"rgba(46, 100, 164, 1)\", color: \"white\", marginTop: \"70px\" }} onClick={this.setRedirect}>登入</Button>\n                            <div style={{ display: this.state.permission ? \"none\" : \"block\", color: \"red\", fontSize: \"1rem\" }}>{this.state.statusstring}</div>\n                        </div>\n                    </div>\n                    <div style={{ width: \"100%\", justifyContent: \"center\", alignItems: \"center\", display: \"flex\" }}>200206.005-T</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Loginview","import React from 'react';\nimport Homepage from './Homepage'\nimport './App.scss';\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\nimport Layoutframe from './Layout/Layout'\nimport Loginview from './Layout/Loginview'\nimport 'antd/dist/antd.css';\n\nfunction App() {\n  document.documentElement.style.fontSize = '14px'\n  return (\n    <BrowserRouter>\n      <Route exact path=\"/\" component={Homepage} />\n      <Redirect from={'/'} to={\"/login\"} />\n      <Route path=\"/nicu\" component={Layoutframe} />\n      <Route path=\"/login\" component={Loginview} />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Chooseedit.def74a6e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Search.d99586da.svg\";"],"sourceRoot":""}