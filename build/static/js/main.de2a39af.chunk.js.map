{"version":3,"sources":["Image/svg/edit2.svg","Image/svg/filter.svg","Image/svg/Wardview.svg","Image/svg/Historyview.svg","Image/svg/Control.svg","Image/svg/file1.svg","Image/svg/file2.svg","Image/svg/delete.svg","Image/svg/dragdown.svg","Image/svg/RT.svg","Image/svg/calender.svg","Image/svg/calenderwhite.svg","Image/Logo/1200px-Taipei_Veterans_General_Hospital_Emblem.svg.png","Image/svg/Edit.svg","Image/svg/ping.svg","Image/svg/pingwhite.svg","Homepage.js","Layout/Sidermenu.js","Function/Wardstate.js","API/ApiProvider.js","API/ApiGithub.js","Wardview/Wardcardstatus.js","Wardview/WardCardvalue-k.js","Function/Wardbedfunction.js","Wardview/Wardcard/Wardcarddetail.js","Wardview/Wardcard/UnpreviewWardCardDetail.js","Commonfunction.js","Wardview/Wardnote.js","Wardview/Bedinfo.js","Function/Timeformat.js","Patientview/CrossSectionView/Labview.js","Wardview/WardBedinformation.js","Module/Schedule_event.js","Wardview/Wardschedule.js","Wardview/Wardinfoindex.js","jsonResponse.js","Wardview/Wardlifechart.js","Wardview/Wardmonthafter.js","Wardview/Wardgrewchart.js","Patientview/Schedule/Notice.js","Patientview/CrossSectionView/Labviewitem.js","Function/FiliterReg.js","Wardview/Wardcardvitalsign.js","Wardview/Wardchart.js","Wardview/Wardunfousercheckbox.js","Patientview/Patientviewinfo.js","Wardview/Wardinfouser-k.js","Wardview/Bedinfo/Bedview.js","Content/Historyview.js","Patientview/CrossSectionView/Crossectionvitalsignchart.js","Patientview/CrossSectionView/Vitalsign.js","Patientview/CrossSectionView/Warningsettinglist.js","Patientview/Controlbar.js","Module/ioPageCell.js","Module/iopage.js","Module/ioDataFormat.js","Patientview/CrossSectionView/Crossection_io.js","Patientview/CrossSectionView/NonLabReport.js","Patientview/CrossSectionView/NonlabviewtableCell.js","Patientview/ExamReportModal.js","Patientview/CrossSectionView/Nonlabviewtable.js","Patientview/CrossSectionView/Nonlabview.js","Patientview/CrossSectionView/RTtable.js","Patientview/CrossSectionView/GAS.js","Patientview/CrossSectionView/RemarkModal.js","Patientview/CrossSectionView/RTbreathtablecell.js","Patientview/CrossSectionView/RTbreathetable.js","Patientview/CrossSectionView/RTbreathe.js","Patientview/Prescriptionorder/Prescriptionordertablecell.js","Patientview/Prescriptionorder/Prescriptionordertable.js","Patientview/Prescriptionorder/Prescriptionorder.js","Patientview/Treatmentorder/Treatmentordertablecell.js","Patientview/Treatmentorder/Treatmentordertable.js","Patientview/Treatmentorder/Treatmentorder.js","Module/Notecell.js","Module/Note.js","Patientview/CrossSectionView/Crosssectionschedule.js","Patientview/CrossSectionView/Crosssection_todo.js","Patientview/CrossSectionView/Crosssectionlayout.js","Patientview/ChronicleView/Chronic_io.js","Patientview/ChronicleView/ChronicTableCellTooltipReport.js","Patientview/ChronicleView/ChronicTableCellTooltipCell.js","Patientview/ChronicleView/ChronicTableCell.js","Patientview/ChronicleView/ChronicTable.js","Patientview/ChronicleView/ChronicLab.js","Patientview/ChronicleView/ChronicRTTableCell.js","Patientview/ChronicleView/ChronicRTTable.js","Patientview/ChronicleView/ChronicRT.js","Patientview/ChronicleView/ChronicOrderTable.js","Patientview/ChronicleView/ChronicOrder.js","Patientview/ChronicleView/ChronicWeightTable.js","Patientview/ChronicleView/ChronicWeight.js","Module/Vitalxaxis.js","Module/Vitalxaxisbot.js","Patientview/ChronicleView/Chronic_vital.js","Patientview/ChronicleView/Chroniclelayout.js","Patientview/FlootSheetView/FlootSheetDataFormat.js","Patientview/FlootSheetView/Flootsheetio.js","Patientview/FlootSheetView/Flootsheetlayout.js","Patientview/ExamReport/Examchart.js","Patientview/ExamReport/ExamLabview.js","Data/RegularData.js","Patientview/ExamReport/ExamNonlabtablecell.js","Patientview/ExamReport/NonLabview.js","Patientview/ExamReport/ExamReport.js","Patientview/Orderview/Orderview.js","Resource/QPNOT.js","Resource/ADMDISP.js","Patientview/NoteView/Note.js","Patientview/NoteView/NoteTimeFormat.js","Patientview/RT/RTview.js","Patientview/Nurtion/Nurtionfeedingcell.js","Patientview/Nurtion/Nurtionfeeding.js","Patientview/Nurtion/Nurtion_TPN_cell.js","Patientview/Nurtion/Watervaluechart.js","Patientview/Nurtion/Nurtion_TPN.js","Patientview/Nurtion/Nurtion.js","Patientview/Infection/Infectionlabtable.js","Patientview/Infection/Infectionlab.js","Patientview/Infection/Infection.js","Patientview/Schedule/Bedsidecard.js","Patientview/Schedule/Scheduletodo.js","Patientview/Schedule/Calendercell.js","Patientview/Schedule/Calender.js","Patientview/Schedule/Scheduleview.js","Patientview/Patientviewlayout.js","Systemgroup/powersetting.js","Systemgroup/Systemlogtable.js","Systemgroup/Systemlog.js","Content/Systemcontrol.js","Layout/Layout.js","Layout/Loginview.js","App.js","serviceWorker.js","index.js","Image/svg/Chooseedit.svg","Image/svg/details.svg"],"names":["module","exports","Homepage","Component","Sidermenu","state","powerLogin","Number","sessionStorage","getItem","powerLogins","this","setState","key","match","props","location","fromHistory","value","path","Selectkeynumber","rule","style","display","alignItems","marginLeft","height","gridTemplateColumns","gridColumnGap","to","className","select_hover","src","wardviewlogo","alt","historylogo","controllogo","withRouter","bornstatusFormat","week","day","undefined","toString","valueFormat","WeightListFilter","weightList","PickerDate","dateTime","weightValue","Array","isArray","index","length","element","elementTime","moment","rec_dat","trim","rec_tim","valueOf","value2","CalculateAgeFromPickerDate","BornStatus","startDate","date","minus","diff","console","log","month","Math","floor","tempWeek","tempDay","overDay","CalculateAge","statecolor","Labwarningvalue","title","BornWeight","weightlist","birthday","findata","filter","type","parseInt","NewestWeight","XM2JSON","data","xm2","X2JS","status","xml2js","outmsg","ret","parsedata","resconts","rescont","QMNCXM2JSON","Doc","DocList","Main","PDTYPE","PDDOCNMC","PDMDNO","replace","selectweight","List","array","push","getPersionalStatus","hisid","axios","get","defaults","baseURL","config","headers","getAlluser","getQDC","caseno","st","et","getQENT","getQDVS","getQSPE","getOnePatientNotice","transinno","HISID","getAllPatient","getOnePatientRemark","transid","getOneRemark","remarkid","getOnePatientSchedule","getStoredProcedureORDLIST","dpt","docid","getStoredProcedureRESDBGAS","getStoredProcedureRESDGLU1","getStoredProcedureRESDISP","seq","getStoredProcedureRESLAB01","getStoredProcedureRESLAB02","getStoredProcedureRESLAB0C","getStoredProcedureRESSECT","getStoredProcedureTRTMNTQ1","getStoredProcedureUDORDER0","createTodo","caseid","context","time","body","post","getOneTodo","getPatientwardvalueBoxPlot","startTime","endTime","interval","getVitalSignData","getHisidwardvalue","axiosGithub","create","timeout","getGitHubJson","string","Wardcarstatus","TRTMNTQ1","UDORDER0","FlagReg","PCASENO","PHISTNUM","TRQ1","ApiProvider","then","info","arr","ORSTATUS","catch","err","UDORDER","dataList","UDSTATUS","Reg","ApiGithub","Promise","all","result","parseFlagData","Flag","item","StatusUDORDER","some","UDDRGNAM","toLowerCase","UDGNAME","ParseValueUD","indexOf","StatusTRTMNTQ1","ORPROCED","ParseValueTRT","statusspan","source","style_change","AntiStatus","TPNStatus","NP0Status","FoleyStatus","DrainStatus","statuslist","InvasiveRespiratorStatus","NonInvasiveRespiratorStatus","RespiratorStatusParse","map","Respirator","wardstatestringformat","WardCard","useState","CenterMonitorValue","SetCenterMonitorValue","SetHID","Timer","SetTimer","ChangeAN","SetChangeAN","CenterNisValue","SetCenterNisValue","InitCenterData","useEffect","TimerID","setInterval","clearInterval","HID","phistnum","tempTime","nowTime","JSON","stringify","pd","abpd","ps","abps","pm","abpm","subtract","format","tempData","Wardstate","diastolic","systolic","sort","a","b","marginRight","color","hr","spo2","fontWeight","fontSize","gridColumnsGap","rr","bt","bednumberformat","number","gender","BornChangeWeek","BornChangeDay","BornChangeWeight","Wardcarddetail","hoverstate","clickstate","mouse_hover","edit_hover","visible","pbasignfo","birthdayweight","weight","bornweek","bornday","nowweight","report","nonreport","remark","TRANSINID","TRANSINDT","TRANSINTM","modatstatus","persionstatus","handleCancel","e","showModal","TRID","API_DATA","ORBGNDT","ORBGNTM","Reportfilter","name","sex","parseFloat","toFixed","pname","psex","bweight","bweek","bday","personstatus","from","PNAMEC","PSEX","Birthday","PBIRHDT","BornWeeks","BornDays","BornWeekAndDay","viewstatus","dataArrayRender","HBEDNO","defaultValue","onChange","margin","width","onCancel","footer","justifyContent","onClick","handleOk","Week","Day","statusPersion","QMNC","QTWER","weeks","days","previewmode","hbedlist","QTWPER","Weight","AgeStatus","role","cursor","editlogo","BornStatusRender","fileLogo","file2Logo","borderBottomWidth","borderBottomColor","borderBottomStyle","centerdata","centerMonitorData","padding","position","overflow","textOverflow","whiteSpace","pathname","Modelrender","Unpreviewwardcarddetail","databool","statedata","document","getElementById","bednumber","backgroundColor","format_bednumber","onOk","gridTemplateRows","gridRowGap","id","placeholder","getCalendarContainer","triggerNode","parentNode","WardcardNote","_isMounted","editstate","AnnoceRawData","AnnoceDisplayData","inputContent","onInputChange","bind","queryAllAnnounce","parse","announceArray","event","target","announce","doc","newAnnounce","Date","editor","findIndex","splice","announcelist","list","editstatus","localTime","utc","toDate","deleteimg","ondeleteannounce","placement","detail","annData","onMouseUp","editlist","border","borderCollapse","AddNewannouce","canceledit","okeditlist","Bedinformation","tableselect","sendReturnSelect","selectkey","idkey","localtime","Selectswitch","parentCallback","select","weekdatformat","weekday","Month_format","getMonth","getDate","getDay","Unselect_tablestyle","borderLeftWidth","marginTop","textAlign","borderStyle","borderWidth","borderColor","hbedcount","transoutcount","transincount","rtcount","nonrtcount","tpncount","yyyymmddformat","timestamp","getFullYear","formatmonth","Monthformat","yyyymmfirstweeksate","mmddformat","compareday","getTime","MG_VALUE","PROC_VALUE","CA_VALUE","Wardbedinformation","subselectdate","selectid","bedinfo","onChangeDate","datestring","apiData","callbackFunction","idnumber","trainDay","bTime","nTime","aTime","trans","RenderCell","pnamec","selectDateitem","filterdate","inType","outType","transIn","transoutIncountperson","transOut","transoutOutcountperson","transferListlayout","infolist","infoList","i","Bedinfo","reverse","fontStyle","paddingLeft","showToday","disabledDate","current","startOf","allowClear","shape","icon","bedinfotitle","weekbedinfo","infoitem","Schedule_event_list","detailstate","items_interval","EditMode","selSchedule","Scheduledata","ID","selectdate","caseinfo","querySchedule","queryALLSchedule","propsDate","stateDate","timeNowStr","toISOString","writter","PBASINGNINFO","selectDate","PLOCSTART","getHours","getMinutes","ScheduleList","bedNumber","text","borderRadius","isInteger","detaillogo","changestate","onChangeEditMode","EditButton","EditControl","listevent","onClickCancel","onClickEnter","Wardschedule","scheduleData","Wardinfoindex","growdata","Male_befor","y","min","max","FeMale_before","Male_after","FeMale_after","WardlifeChart","preWeight","svg_key","grewinfo","WEEK_BORN","DAY_BORN","d3","remove","drawChart","id_key","bornweeks","borndays","BIRTHDAY","pregencyTimestamp","tick","Row","tickValues","domain","range","x","yAxis","ticks","tickSize","tickPadding","tickFormat","d","xAxis","yRightAxis","svg","append","attr","call","datasource","Wardmonthafter","Month","Wardgrewchart","test_items_interval","preHID","Data","WeightList","switch_data","window","screen","availWidth","testiteminterval","borderTopLeftRadius","borderTopRightRadius","SwitchTestItemInterval","Onchangetimeinterval","switch_monthy","Notice","noticeData","preTRID","queryPatientImportant","transinid","updateTime","disableEdit","tooltiptext","t","displayTime","fixData","remarkcell","Editor","TextArea","Input","marginBottom","renderEditButton","autoSize","Labviewitem","fixtitle","timevalue","ORRESDT","ORRESTM","formatTime","timeCell","Source","TimeRender","formatValue","ListForTime","DataList","pickerTime","ListForTimeAndTarget","forEach","ORRCPDT","split","QSPERegList","qspe","SettingValue","mode","valueList","qspearray","SelectElement","special","DataArray","DataJson","Labviewlayout","parser","dummy_mg","dummy_pct","dummy_ca","RESDGLU1","RESLAB02","RESLAB01","RESDBGAS","RESLAB0C","RESSECT","prePickerDate","preTRDT","TRDT","getLabData","TransinDate","MonthInterval","timestampInterval","selectMonthInterval","latestvalue","selected_parser","find","apply_condition","arrayLength","ORMM","CASEID","ORDSEQNO","RESDISP","selected_mapping","mappings","mapping","re","RegExp","regex_str","regex_flags","CONTENT","currentTimeStr","ORRCPTM","currentItemTimestamp","matchValue","updateLabviewIfNeed","currentIdx","ListEndData","RESDGLU1LIST","FiliterReg","RESLAB02LIST","RESLAB01LIST","RESDBGASLIST","RESSECT_CA_LIST","findLastestTargetValue","RESSECT_MG_LIST","RESSECT_PROC_LIST","GLUFAST","WBC","RSV01","SEG","RSV14","LYMP","RSV15","HGB","RSV03","PLATELET","RSV09","NA","RSV13","K","CA","P","RSV17","ALB","RSV02","CRP","RSV30","PH","SS07","PCO2","SS06","BE","SS01","PO2","SS08","BUN","RSV05","CR","RSV06","ALT","RSV11","AST","RSV12","TBIL","RSV08","DBIL","RSV25","ALKP","TOTALCA","IRON","RSV26","TIBC","RSV27","FERRITIN","FeSat","feSatformat","areainterval","nullvalue","NaN","TitleR","TitleRender","RSV07","WardcardvitalsignChart","sourcedata","BT","getCenterMonitor","CID","selectType","BTDATA","WardState","mapBTData","temperature","__text","Time","axisTop","axisBot","circlrcolor","MAX","MIN","Upper","Lower","transformmargin","cal_svg_transform","time_now","time_array","time_axis_array","x_axis_time","time_array_reverse","time_axis_array_reverse","formatHour","n","xAxisTop","multiFormat","cal_svg_hight","formatBoxWidth","viewwidth","lower","upper","LimitBoxTimer","interFormat","TimeArray","boxTime","formatBox","boxwidth","drawshadow","BoxPlotData","BT_Row","dataAbps","dataAbpd","q1","Q1","q2","Q2","q3","Q3","q4","Q4","Xtime","selectAll","enter","SBP","DBP","WardChart","pbStatus","changePb","decidePB","nbpd","CMvalue","vitalvalue","bplimitValue","bpd","bps","upper1","lower1","upper2","lower2","limitValue","flexDirection","lineHeight","paddingRight","nbps","nbpm","colorshadow","data2","data_2_circlrcolor","Wardinfousercheckbox","checkboxselect","selectstate","updateOnePatientTodo","selectchange","checked","textDecoration","Patientinfo","preCID","QENT","patientDetail","transdata","patientDate","fixpatientDate","patientData","Wardinfouser","Visible","setVisible","scheduleList","SetScheduleList","todoList","SetTodoList","Persionstatus","SetPersionstatus","PLOC","now","todayBegin","ListWeight","DOCLIST","PDOCNEW","MainDoc","LiveDoc","MainNur","ICUMainDoc","sytle","maxHeight","minHeight","displayTimeStr","Bedview","simplemode","SelectHISID","prePath","HBEDApiGet","simple_style","gridGap","Unsimple_style","wardcarddetaillist","component","WardinfouserK","filterdata","switch_titile_string","onWardcardDisplay","checkedChildren","unCheckedChildren","defaultChecked","Historyview","MouseClick","allPatientDisplayData","allPatientUnset","allPatientSet","selectedRowsArray","hospitalindex","selectedFile","fileList","uploading","doctor","transOuttime","deletedisable","selectedRowKeys","handleUpload","fileData","formData","FormData","file","res","filename","setedUser","patient","transouttime","unsetUser","onChangeName","onChangeHisid","record","resultD","url","URL","createObjectURL","Blob","link","createElement","href","setAttribute","appendChild","click","hospitalnumber","delete","dateString","Group","RangePicker","DatePicker","locale","rowSelection","selectedRows","getCheckboxProps","disabled","H","searchNO","searchTime","fn","transintime","searchName","search","genderswitch","patientinfo","birweek","transage","transicutime","maindoc","EditStyle","onRemove","newFileList","slice","beforeUpload","showUploadList","handleDisplaySwitchChange","Searchbar","exportClick","deleteHistoryUser","columns","dataIndex","dataSource","onRow","onMouseEnter","MouseClickTable","onMouseLeave","Crosssectionvitalsignchart","change","prepickerdate","presource","preinterval","prewidth","svg_id","PHID","PCID","optionvalue","pickerdate","endTimeStamp","start","end","formatTimer","nowDateForSeven","newDateForZero","formatPickerDate","QDVS","QOXY","FormatNISData","HRNISLIST","RRNISLIST","SBPNISLIST","DBPNISLIST","BTNISLIST","Spo2NISLIST","pluse","breath","concen","centermonitorApiDataGet","prehid","comein","xAxisvalue","xAxisarray","formatxArray","xAxisbotvalue","formatbotaxis","xAxisbot","drawData","formatShift","paddingTop","Vitalsign","vital_days","visibleConflict","chackstate_one","chackstate_three","addNewWarningDateStr","addNewWarningHourStr","preHISID","checkStateNumber","Phistnum","timeCheck","checkNum","nowDaySeven","sevenFormat","PickerDateSeven","hourFormat","EndTime","Interval","formatvital_daysToInterval","gridarray","checknumber","onClickCheckgrid","End","intervalforhour","centervalueNull","centervalue","FilterList","filterData","Mid","centervaluetoNull","pickerTimer","top","left","onVitalCheck","Controlbar","display_Mode","item_array","scrollstate","sendData","itwm_array","sendDateData","parentDateCallback","scrollToAnchor","anchorName","anchorElement","scrollIntoView","checkedValues","onDateChange","bron","PBIRTHDT","bronDate","btn_style","unclick_style","display_style","displye_mode","right","background","boxShadow","zIndex","non_display_mode","check_area","check_text","btnlist","WEIGHT","btn","scrollpoint","add","endOf","alignContent","open_display","displaylogo","calcBorderLeft","intervalStatus","Status","IOpageCell","showFloat","IntervalStatus","urine","weightData","urineValue","out_val2","cellValue","IOpage","QDC","PreStatus","PreIntervalStatus","PreCID","PrePickerDate","RegQDC","CarloriesCal","timer","interstatus","Result","getAPI","prestatus","preinterstatus","precid","mapcell","listTimerFormat","inter","TimerList","hourInterval","filterList","filterListALL","gridNumber","cellsum","sum","cellRenderSum","rows","rowColorStyle","CellRender","SE","Other","timerStruct","cellRender","stylechange","intervalstatus","timearray","pickerTimeArray","QDCLIST","formatData","caloriesCalonnam","nam","namstring","valueNumber","FormatFeedingList","FormatIVList","FormatUrineList","FormatOtherInList","FormatOtherOutList","lost","elementItem","Feeding","inp_val2","calories","IV","inp_val1","Urine","input_1","output_1","out_val1","OtherIn","OtherOut","formatQDCtoIO","timerFormat","feed","sumin","arr1","arr2","arr3","sumlist","sumIn","datamap","urineforWeightAndHourCrossection","sumout","sumOut","sumInTotal","Outout","element1","element2","sumInAndOut","urineTimer","dataArray","formatInterval","formatUrineforTimer","sortData","ST","ET","StartTime","formatStartTime","formatStartAndEnd","SortDataArray","ioDataFormat","cellMap","formatDataUrine","TitleCellIn","TitleCellOut","CrossectionIo","titlelab","NonLabReport","preSeq","preMonth","APIget","RESDISP_Report","showDetail","NonlabviewtableCell","summary_str","come","isSameDay","caseId","hisId","statusRender","statusFormat","overflowY","borderBottom","ExamReportModal","Nonlabviewtable","modalVisible","modalReport","ORDLIST","preDate","PickerDateRange","nonLabApiGet","storeProcedureTime","FormatList","ORDLIST_Format","elemetnStatus","elementORBGNTime","ORDLISTFormat","nonlabcell","ORSPCN1","isSame","ORHISTNO","ORDSEQCN","titlecell","Nonlabviewlayout","RTtable","PreHID","PreTransInDate","GasListToCell","GasDataList","filterTimer","timeStamp","Object","keys","decideStyle","PHValue","PCO2Value","PO2Value","HCO3Value","SS04","BEValue","O2SatValue","SS05","FiO2Value","SS03","gasDataArray","compareDay","GasCell","tempStyle","tempValue","isNaN","borderLeft","formatGasData","getGasAPI","PreTRDT","searchbar","GasTitleCell","formatString","justifyItems","GAS","RemarkModal","preremark","preeditor","onOkClick","remarkValue","transinId","remarkId","fixTime","tempRemark","createTime","okText","cancelText","float","RTbreathetablecell","onCell","onEdit","newRemarkValue","setRemark","seachRemark","Mode","setting","Setting","onMouseMove","Mouse_move","Mouse_leave","minheight","borderTop","Edit_state","chooseedit","RTbreathetable","createRTbreathetable","titleCellRender","RTbreathe","QSPE","FilterReg","preST","preET","getQSPEApi","resultData","Prescriptionordertablecell","onMove","UDORDSEQ","checkStatus","valueStatus","Name","PName","UDRPNAME","Unit","UDDOSAGE","UDDUNIT","UDFREQN","UDROUTE","UDBGNDT","UDENDDT","on_Mouse","on_leave","Prescriptionordertable","SelectMode","Prescriptionordertabletable","Prescriptionorderlayout","classParser","class","InputMode","onChangeClass","onChangeinputKey","parseClass","inputs","allResult","input","content","onClickSearch","activeList","formatUDORDERStatus","clusteredData","filteredData","SortDataList","regex","filterDate","getGithub","getUDORDER0","Start","Option","Select","ControlBarRender","Treatmentordertablecell","QD","ORFREQN","infoRemark","ORENDDT","Treatmentordertable","TRTMNT01","Treatmentordertablecelllist","Treatmentorderlayout","DateRangeMode","handleChange","Search_bar","formatTRMINQtatus","getTreatmentQ1","Notecell","updatetime","updatedoctor","updatetime_format","wordBreak","Note","noteData","queryNotice","propDate","TRANSID","notelist","infoObj","updatedictor","CrossectionSchedule","CrosssectionTodo","queryTodo","renderTodoItem","Crosssectionlayout","Cross_item","SelectInterval","isLoading","callbackDateFunction","PickerTimeStamp","NIS_API_IO","Datetime","apiGLU","apiLAB2","apiLAB1","apiGAS","apiLABC","apiRESS","apiUDO","apiTRT","POneDayRange","PThreeDayRange","display_item","Prescriptionorder","Treatmentorder","Inoutonchronic","ChronicTableCellToolTipReport","Chronictablecelltooltip","tooltipelement","Cell","ReportLink","Chronictablecell","summaryParse","startTimeStamp","titleCell","objectElementCell","checkLineColor","lineColor","CellText","autoAdjustOverflow","overlayStyle","maxWidth","Tableonchronic","LabParse","SummaryParse","monthly","ApiPronider","chronic_state","fotmatTimerMonthly","preInterval","ApiGet","TimeLine","lineStyle","TimeInterval","grid","openTimeline","ressect","parsrList","arrayBiochemical","arrayBlood","arrayCultivate","arrayGAS","arrayRadiation","arrayOther","element_ORPROCED","BioFind","Biochemical","BloFind","Blood","CulFind","Cultivate","GasFind","RadFind","Radiation","arrayList","LabFormat","statestatus","title_list","entTimeStamp","starttime","slectInt","TimerForList","filterTimerForDataList","fotmatTimerForTimer","DataForTimer","toolTipID","Chroniclab","select_interval","Chronicrttablecell","cellelement","RTListRender","ToolTipRender","rtlogo","Chronicrttable","prePickerdate","timerList","listFilter","formatDataList","table_content","Chronicrt","Chronicordertable","whiteBlackListParser","tpnParsers","select_parser","parser_name","excludeBlackListResult","UDGNAME_condition","UDRPNAME_condition","UDGNAME_re","UDGNAME_match","UDRPNAME_re","UDRPNAME_match","getUDORDER","openTimeLine","changegridnumber","rawData","filteredRawData","selected_tpn_parser","found","name_regex_flags","selected_white_black_list_parser","Tablecell","formatWidth","elementStart","elementEnd","widthRate","clientWidth","formatStart","formatEnd","formatStartPosition","arraylist","shift","formatUDORDER0","ListData","startTimeFormat","endTimeFormat","changegridstyle","celltable","overflowX","Orderonchronic","Chronicweighttable","QTPWERList","TimerFormat","WeightListFormat","sortWeightList","lastelement","Value","elementValue","sortWeight","elementWidthList","time1","elementWidth","FormatEndTimeStamp","datafilter","timeString","datafilterTime","widthArray","timeString2","time2","weightRectRender","render","round","Weightonchronic","Vitalxaxis","innerWidth","debounceWindowSize","debounce","recalcWindowSize","addEventListener","func","wait","immediate","args","arguments","callNow","clearTimeout","setTimeout","apply","removeEventListener","monthformat","select_date","select_time_format","nowtime","Start_time","intervaldays","xaxis","formatday","Vitalxaxisbot","End_time","Interval_grid","pickerDate","duration","hour","isBefore","hours","asHours","Vitalonchronic","check_state_one","check_state_three","check_state_oneweek","check_state_twoweek","statussource","sourcehandleChange","onClickCheckgrid_one","onClickCheckgrid_three","onClickCheckgrid_oneweek","onClickCheckgrid_twoweek","endtime","formatPickerTimer","fromInfection","onSelectchange","Interval_grid_box","Chroniclelayout","statuschange","onChangeCross","button","filterlogo","formatIOData","filterString","line","pos","compare","groupArray","arrList","comparevalue","filterarray","mapCellrender","ArrayList","formatColor","formatBackgroundColor","valueToInit","valueToVar","vallNull","cellStringArray","timeForList","elementList","valueSum","borderRight","cell","Flootsheetio","itemNumber","formatDayData","Infusion","FlootSheetDataFormat","toUpperCase","ALINE","filterIV","PICC","mapInfusion","mapBlood","mapEat","mapBloodLoss","mapExudate","mapVomit","mapDrainage","Puncture","mapPunctureOut","mapPunctureIn","Dialysis","mapDialysisIn","mapDialysisOut","mapDialysisTotal","Rinse","mapRinseIn","mapRinseOut","Stool","mapStool","mapStimulation","mapUrine","dateArr","generateDateColumn1","Flowsheetlayout","ApiData","DateTime","apiQSPE","dataJson","splist","str","specialListRender","Examchart","decideValue","lineChart","sT","endT","fixLineChart","div","curve","lines","on","transition","html","pageX","pageY","lineCharttitle","wordWrap","Labview","Selectus","SelectStatus","IRParse","titleSearch","parentTitleCallback","showModel","charttableview","itemValue","flex","showDate","temp","LabDataList","SelectList","SelectTitlefilter","selectdata","SelectTitleRender","infoString","fixLineChartData","ExamLab","getPopupContainer","Examnonlabviewtable","resultKey","sample","selectMode","StateMode","selectedClass","BGtime","formatPickerDateRangeToORDLIST","filterInput","formatInputMode","sortfilteredData","Nonlabview","ClassMode","prestartTime","preendTime","Inputvaluesearch","onChangeState","Apiprovider","Examreport","selectTitle","callbackTitleFunction","PickerDateRangeChange","vallofnull","DateRange","selectData","st_timestamp","et_timestamp","CellData","Band","Seq","Lym","Hb","Hct","RSV04","Plt","Na","Cl","CaTotal","Cr","Alt","TBil","DBil","rGGT","RSV19","Alkp","Alb","Iron","LDH","RSV10","RSV9","ck","RSV18","ckMB","RSV28","Troponinl","RSV43","PT","APTT","INR","pCO2","pO2","HCO3","O2Sat","FiO2","SS11","SS12","SS13","SS14","CaFree","SS15","Bun","SS16","SS17","GluBeside","GluLab","RSV16","TCB","MicroBil","elementOne","Seg","elementTwo","APIUpdate","SelectDataList","momentDate","selectvalue","Orderview","apidata","udata","tdata","Noteview","display_data","contentdisplay","ADMDISP","ADMLIST","DISLIST","DISDISP","DTAROTQ4","DTASOAPQ","PCASELIST","ERDISP","PRGTXQRY","PRGTXQRYDIS","CPSLIST","CPSDISP","QPNOT","QPNOTDIS","OPSORAQ1","OPSORAQ2","SelectClass","groupdata","ADISTNO","ADICASE","ADMDISP_Data","SEQ","OPABGNDT","OPATIMES","times","ttype","ICUinTime","LIVEPLOC","PLOCDT","substr","groupfirstarray","parseSource","PLOCinTime","getADMLIST","getDISLIST","getDTAROTQ4","getPCASELIST","getCPSLIST","getPRGTXQRY","getQPNOT","getOPSORAQ1","columnGap","gridAutoColumns","gridAutoFlow","row","ADMDATA","textType","textObj","DTSOAPTY","DTSOAPSQ","DTSOAPTX","newObj","idx","textResult","v","newList","dataFilter","PRGTYPE","PRGTX","cre_nam","pro_not","PRGDT","PRGTM","cellRander","object","tabIndex","SelectADMDISP","ADIDATE","ADISECT","DCASENO","SelectDISDISP","DDATEOUT","DADMSECT","DPT","DTPDEPT","DTPDATE","SelectDTASOAPQ","SECTNM","DTPDOCNM","DTPDOCID","SelectERDISP","PDISDT","PPSECT","predata","DT","TN","PRGWARD","PRGBEDNO","PRGSECT","PRGENTNM","SelectPRGTXQRYDIS","CPSCASE","CPSOSEQ","CPSHIST","DOC1","CPKDOCN1","DOC2","CPKDOCN2","DOC3","CPKDOCN3","SelectCPSDISP","CPSENTDT","CPKSECT","CPSOSECT","grouparray","SelectQPNOTDIS","valueten","year","timeFormat","OPAMANNM","SelectOPSORAQ1","control","NotecontrolBar","renderContentArray","listRender","switchListRender","RTview","Nurtionfeedingcell","Moduledisplay","Nurtionfeedingorder","getAPIFeedingData","getTreatmentOrderFilter","DataCellRender","Nurtiontpncell","TPNListcellRender","TPNSubDatacellRender","TPNDATA","AA","Glu","Ca","Mg","TPNSubDataMap","RemarkData","Watervaluechart","rowdata","watervalueData","shiftDays","formatShiftDays","rectwidth","xAxisBottom","orindex","svgrect","nulldata","car","Caloriessum","model","ModalRender","Nurtionview","OtherFilterInput","OtherData","formatOtherInput","sumcar","Calories","shiftTimer","TimerArray","formatTimeArray","watervalueDataList","filterFeedind","filterOther","feedingSum","SumData2","IVSum","SumData","OtherSum","caseiddays","GrowthCurve","GrowthCurveControl","GrowthCurveControlBar","WaterValueControl","WaterValueControlBar","tpndata","feeddata","TimeStampPickerDate","waterRender","WaterValueRender","Nurtionfeeding","Infectionlabtable","Datalist","Render","FilterData","CellRander","lineColoe","WBCList","BandList","SegList","LymList","PCTList","CRPList","WBCRender","BandRender","SegRender","LymRender","PCTRender","CRPRender","WBCcell","Bandcell","Segcell","Lymcell","PCTcell","CRPcell","switch_state","userdata","Infectionlab","Infectionview","intervalselect","hrdatasource","rrdatasource","spo2datasource","abpdatasource","nbpdatasource","btdatasource","apiClass","LabData","LabData2","Bedsidecard","remarkContent","queryPatientRemark","TODO_DONE","TODO_UNFINISH","Scheduletodo","displayMode","todolist","onItemCheck","itemToUpdate","queryPatientTodo","todolist_data","finish_data","finish_value","unfinish_data","finish_checkbox","unfinish_checkbox","onClickunfisish","onClickfinish","Calendercell","onClick1","CancelModule","clickindex","sendcallback","newDate","clickdate","today","stateswitch","justify","span","onClickCheck","weekdateformatcalender","scheduleArray","calenderlogo","calenderwhitelogo","disableday","Calender","calendermode","Clickdays","ClickDate","displayinfo","scheduleRawData","startTimestamp","endTimestamp","noticeRawData","open","getStartEndTime","monthfirstweekday","firstCellBegin","startTimestampStr","endTimestampStr","itemList","refactoredList","itemTimeStr","foundItemIndex","newItem","newEvent","writer","timestampdate","onClickdays","dateStr","dataOfDayIndex","weekcontext","dataOfDay","getDataFromTimestamp","weeknumber","firstMonthWeekDay","rowIndex","noticeOfDay","getNoticeFromTimestamp","calendermonthgroup","monthfirstweekdate","weekmonthmode","ShowModule","weekmode","setgroup","MonthPicker","SelectDatepickertype","modechange","Scheduleview","dateformat","exporttime","Patientviewlayout","TYPE","REMARK","tabstring","activkey","getPersonStatus","apiStatus","USERDATA","BEDNUMBER","ploc","PLOCTM","transindt","TabPane","Tabs","ICUDays","transoutTime","formatICUDays","defaultActiveKey","tabPosition","tab","callback","confirm","Modal","Powersetting","adduser","userList","power","powerName","radioValue","pwdRadio","inputUsername","inputPassword","inputName","inputDoctorid","radioOnChange","nameChange","addUserdata","adduserhandleChange","queryUserdata","inputuserName","password","username","doctorid","account","roleString","set_State","okType","showDeleteConfirm","userData","powerString","myNewArray","concat","Systemlogtable","loginlog_table","loginlogList","managerName","apilog_table","apilogList","months","j","optionValue","pagination","page","pageSize","getPages","Systemlog","totalSpace","usingSpace","percent","option","total","unuse","queryLoginLogdata","queryApiLogdata","pages","showInfo","Systemcontrol","bollogin","Layoutframe","clear","UsrName","url_path","routes","route","onClickLogout","Loginview","setRedirect","user","setItem","redirect","permission","statusstring","renderRedirect","login","querySelector","keyCode","blur","focus","logo","flexWrap","App","documentElement","zhTW","exact","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,gECA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,gF,+aCA3CD,EAAOC,QAAU,IAA0B,kC,otBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,qKCU5BC,E,iLANP,OACI,kC,GAHWC,a,wFCMjBC,G,kNAEFC,MAAQ,CACJC,WAAYC,OAAOC,eAAeC,QAAQ,U,mFAI1C,IAAMC,EAAcH,OAAOC,eAAeC,QAAQ,SAClDE,KAAKC,SAAS,CAAEN,WAAYI,M,sCAGhBG,GAEZ,OAAQA,GACJ,IAAK,QACD,OAAO,EACX,IAAK,gBACD,OAAO,EACX,IAAK,eACD,OAAO,EACX,QACI,OAA4B,MAAxBA,EAAIC,MAAM,WACPH,KAAKI,MAAMC,SAASX,OAASM,KAAKI,MAAMC,SAASX,MAAMY,YAC/C,EAEJ,EAEc,MAArBJ,EAAIC,MAAM,QACH,EAEJ,M,mCAINI,GAAQ,IACTC,EAASR,KAAKI,MAAdI,KAER,OADkBR,KAAKS,gBAAgBD,KACrBD,I,+BAMlB,IAAMG,EAAOV,KAAKN,MAAMC,WACxB,OACI,yBAAKgB,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,WAAY,OAAQC,OAAQ,SAC7E,yBAAKJ,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,iBAAkBC,cAAe,SACjF,kBAAC,IAAD,CAAMC,GAAG,uBAAuBC,UAAWnB,KAAKoB,aAAa,GAAK,YAAc,eAAgBT,MAAO,CAAEC,QAAiB,GAARF,EAAY,OAAS,SACnI,yBAAKW,IAAKC,IAAcC,IAAI,iBAC5B,qCACI,yBAAKJ,UAAWnB,KAAKoB,aAAa,GAAK,WAAa,eAApD,0CAGR,kBAAC,IAAD,CAAMF,GAAG,gBAAgBC,UAAWnB,KAAKoB,aAAa,GAAK,YAAc,eAAgBT,MAAO,CAAEC,QAAiB,GAARF,EAAY,OAAS,SAC5H,yBAAKW,IAAKG,IAAaD,IAAI,oBAC3B,qCACI,yBAAKJ,UAAWnB,KAAKoB,aAAa,GAAK,WAAa,eAApD,0CAGR,kBAAC,IAAD,CAAMF,GAAG,eAAeC,UAAWnB,KAAKoB,aAAa,GAAK,YAAc,eAAgBT,MAAO,CAAEC,QAAiB,GAARF,EAAY,OAAS,SAC3H,yBAAKW,IAAKI,IAAaF,IAAI,mBAC3B,qCACI,yBAAKJ,UAAWnB,KAAKoB,aAAa,GAAK,WAAa,eAApD,oC,GA9DJ5B,cAuETkC,cAAWjC,G,0CC3EnB,SAASkC,EAAiBC,EAAMC,GACnC,MAAa,KAATD,GAAwB,OAATA,QAA0BE,IAATF,EACzB,KAEE,IAATA,GAAsB,IAARC,EACP,KAEJD,EAAKG,WAAa,IAAMF,EAAIE,WAAa,IAI7C,SAASC,EAAYzB,GACxB,MAAc,KAAVA,GAA0B,OAAVA,QAA4BuB,IAAVvB,GAAiC,IAAVA,EAClD,KAEJA,EAAMwB,WAAa,IAGvB,SAASE,EAAiBC,EAAYC,GACzC,IAAMC,EAAWD,EAAc,MAC3BE,EAAc,EAClB,GAAIC,MAAMC,QAAQL,GACd,IAAK,IAAIM,EAAQ,EAAGA,EAAQN,EAAWO,OAAQD,IAAS,CACpD,IAAME,EAAUR,EAAWM,GACrBG,EAAcC,IAAOF,EAAQG,QAAQd,WAAWe,OAASJ,EAAQK,QAAQhB,WAAWe,OAAQ,gBAAgBE,UAClH,GAAIpD,OAAO8C,EAAQO,QAAU,GACrBN,EAAcP,EAAU,CACxBC,EAAsC,IAAxBzC,OAAO8C,EAAQO,QAC7B,OAKhB,OAAoB,IAAhBZ,EACO,KAEJA,EAGJ,SAASa,EAA2BC,EAAYhB,GACnD,IAAMiB,EAAYR,IAAOO,EAAWE,MAE9BC,EADUV,IAAOT,GACDoB,KAAKH,EAAW,QAEtC,GADAI,QAAQC,IAAIN,QACOrB,IAAfqB,QAAgDrB,IAApBqB,EAAWE,WAA0CvB,IAApBqB,EAAWvB,WAAyCE,IAAnBqB,EAAWtB,IACzG,MAAO,2BAEX,GAAIsB,EAAWvB,MAAQ,GAAI,CACvB,IAAM8B,EAAQC,KAAKC,MAAON,EAAS,IAC7BzB,EAAM8B,KAAKC,MAAON,EAAS,IACjC,OAAOI,EAAQ,EAAR,UAAeA,EAAf,kBAAyB7B,EAAzB,oBAAqCA,EAArC,UAGX,IAAMgC,EAAWF,KAAKC,MAAMT,EAAWvB,MAAQuB,EAAWtB,IAAMyB,GAAS,GACnEQ,EAAUH,KAAKC,OAAOT,EAAWtB,IAAMyB,GAAS,GACtD,GAAIO,GAAY,GAAI,CAChB,IAAME,EAA4B,GAAjBF,EAAW,IAAUC,EAChCJ,EAAQC,KAAKC,MAAMG,EAAU,IAC7BlC,EAAMkC,EAAU,GACtB,OAAOL,EAAQ,EAAR,sBAAiBA,EAAjB,iBAA0B7B,EAA1B,gCAAwCA,EAAxC,UAEP,IACMA,EAAMiC,EACZ,MAAM,GAAN,OAFaD,EAEb,YAAkBhC,GAInB,SAASmC,EAAab,GACzB,IAAMC,EAAYR,IAAOO,EAAWE,MAE9BC,EADUV,MACMW,KAAKH,EAAW,QAEtC,GADAI,QAAQC,IAAIN,QACOrB,IAAfqB,QAAgDrB,IAApBqB,EAAWE,WAA0CvB,IAApBqB,EAAWvB,WAAyCE,IAAnBqB,EAAWtB,IACzG,MAAO,2BAEX,GAAIsB,EAAWvB,MAAQ,GAAI,CACvB,IAAM8B,EAAQC,KAAKC,MAAON,EAAS,IAC7BzB,EAAM8B,KAAKC,MAAON,EAAS,IACjC,OAAOI,EAAQ,EAAR,UAAeA,EAAf,kBAAyB7B,EAAzB,oBAAqCA,EAArC,UAGX,IAAMgC,EAAWF,KAAKC,MAAMT,EAAWvB,MAAQuB,EAAWtB,IAAMyB,GAAS,GACnEQ,EAAUH,KAAKC,OAAOT,EAAWtB,IAAMyB,GAAS,GACtD,GAAIO,GAAY,GAAI,CAChB,IAAME,EAA4B,GAAjBF,EAAW,IAAUC,EAChCJ,EAAQC,KAAKC,MAAMG,EAAU,IAC7BlC,EAAMkC,EAAU,GACtB,OAAOL,EAAQ,EAAR,sBAAiBA,EAAjB,iBAA0B7B,EAA1B,gCAAwCA,EAAxC,UAEP,IACMA,EAAMiC,EACZ,MAAM,GAAN,OAFaD,EAEb,YAAkBhC,GAKnB,SAASoC,EAAWvE,GACvB,MAAc,OAAVA,EACO,kBAEG,OAAVA,EACO,kBAGG,QAAVA,EACO,UAEG,QAAVA,EACO,UAEG,SAAVA,EACO,mBAEG,OAAVA,EACO,kBAEG,OAAVA,EACO,mBAEJ,KAuCJ,SAASwE,EAAgB3D,EAAO4D,GACnC,OAAc,YAAVA,KACI5D,EAAQ,KAAOA,EAAQ,QAIjB,QAAV4D,KACI5D,EAAQ,KAASA,EAAQ,SAInB,QAAV4D,KACI5D,EAAQ,IAAMA,EAAQ,QAIhB,aAAV4D,KACI5D,EAAQ,KAAUA,EAAQ,UAIpB,QAAV4D,KACI5D,EAAQ,KAAOA,EAAQ,SAIjB,OAAV4D,KACI5D,EAAQ,KAAOA,EAAQ,SAIjB,SAAV4D,KACI5D,EAAQ,IAAOA,EAAQ,SAIjB,MAAV4D,KACI5D,EAAQ,KAAOA,EAAQ,OAIjB,SAAV4D,KACI5D,GAAS,KAAOA,EAAQ,UAIlB,QAAV4D,GACI5D,EAAQ,OAIF,QAAV4D,GACI5D,EAAQ,OAIF,mBAAV4D,GACI5D,EAAQ,OAIF,OAAV4D,KACI5D,EAAQ,MAAQA,EAAQ,SAIlB,SAAV4D,KACI5D,EAAQ,IAAMA,EAAQ,QAIhB,OAAV4D,KACI5D,GAAS,GAAKA,EAAQ,OAIhB,QAAV4D,KACI5D,EAAQ,IAAMA,EAAQ,SAIhB,QAAV4D,GACI5D,EAAQ,OAIF,OAAV4D,GACI5D,EAAQ,OAIF,QAAV4D,GACI5D,EAAQ,QAIF,QAAV4D,GACI5D,EAAQ,QAIF,SAAV4D,GACI5D,EAAQ,OAIF,SAAV4D,GACI5D,EAAQ,QAIF,SAAV4D,GACI5D,EAAQ,QAIF,aAAV4D,KACI5D,EAAQ,GAAKA,EAAQ,QAIf,UAAV4D,GACI5D,EAAQ,4BAuCb,SAAS6D,EAAWC,EAAYC,GACnC,QAAmBxC,IAAfuC,GAA2C,OAAfA,EAC5B,MAAO,KAEX,GAAI/B,MAAMC,QAAQ8B,GAAa,CAC3B,IAAME,EAAUF,EAAWG,QAAO,SAAUjE,EAAOiC,GAC/C,OAAOjC,EAAMsC,UAAYyB,GAA2B,OAAf/D,EAAMkE,QAE/C,OAAuB,IAAnBF,EAAQ9B,OACD,EAECiC,SAAsD,IAA7C9E,OAAO2E,EAAQA,EAAQ9B,OAAS,GAAGQ,SAGxD,OAAOyB,SAAqC,IAA5B9E,OAAOyE,EAAWpB,SAInC,SAAS0B,EAAaN,GACzB,QAAmBvC,IAAfuC,EACA,MAAO,KAEX,GAA0B,IAAtBA,EAAW5B,OACX,OAAO,EAEX,GAAIH,MAAMC,QAAQ8B,GAAa,CAC3B,IAAME,EAAUF,EAAWG,QAAO,SAAUjE,EAAOiC,GAC/C,MAAsB,OAAfjC,EAAMkE,QAEjB,OAAuB,IAAnBF,EAAQ9B,OACD,KAEJiC,SAAqC,IAA5B9E,OAAO2E,EAAQ,GAAGtB,SAGlC,OAAOyB,SAAqC,IAA5B9E,OAAOyE,EAAWpB,SAKnC,SAAS2B,EAAQC,GACpB,IAAMC,EAAM,IAAIC,IAChB,QAAajD,IAAT+C,EACA,MAAO,GAEX,IAAMG,EAASF,EAAIG,OAAOJ,GAAMK,OAAOC,IACvC,GAAuB,IAAnBvF,OAAOoF,GAAe,CACtB,IAAMI,EAAYN,EAAIG,OAAOJ,GAAMK,OAAOG,SAASC,QACnD,OAAKhD,MAAMC,QAAQ6C,GAGZA,EAFI,CAACA,GAIhB,MAAO,GAGJ,SAASG,EAAYV,GACxB,IAAMC,EAAM,IAAIC,IAChB,QAAajD,IAAT+C,EACA,MAAO,GAEX,IAAMG,EAASF,EAAIG,OAAOJ,GAAMK,OAAOC,IACvC,OAAuB,IAAnBvF,OAAOoF,GACWF,EAAIG,OAAOJ,GAAMK,OAAOG,SAASC,QAGhD,GAGJ,SAASE,EAAIC,EAAShB,GACzB,QAAgB3C,IAAZ2D,GAAqC,OAAZA,GAAgC,KAAZA,EAC7C,MAAO,GAEX,IAAMC,EAAOD,EAAQjB,QAAO,SAAU9B,EAASF,GAC3C,OAAOE,EAAQiD,SAAWlB,KAE9B,OAAoB,IAAhBiB,EAAKjD,OACE,IAEXe,QAAQC,IAAIiC,EAAK,IACVA,EAAK,GAAGE,SAAS7D,WAAWe,OAAS,IAAM4C,EAAK,GAAGG,OAAO9D,WAAWe,OAAOgD,QAAQ,MAAO,KAG/F,SAASC,EAAaC,EAAM3C,GAC/B,QAAavB,IAATkE,GAA+B,OAATA,EACtB,MAAO,KAGX,IADA,IAAIC,EAAQ,GACHzD,EAAQ,EAAGA,EAAQwD,EAAKvD,OAAQD,IAAS,CAC9C,IAAME,EAAUsD,EAAKxD,GACjBI,IAAOF,EAAQG,QAAS,YAAYG,UAAYK,GAChD4C,EAAMC,KAAKxD,GAGnB,OAAqB,IAAjBuD,EAAMxD,OACC,EAEsB,IAA1B7C,OAAOqG,EAAM,GAAGhD,Q,qCCjYpB,SAASkD,EAAmBC,GACjC,OAAOC,IAAMC,IAAI,iCAAmCF,GAjCtDC,IAAME,SAASC,QAAU,8BA0EzB,IAAMC,EAAS,CAAEC,QAAS,CAAE,eAAgB,wBAgDrC,SAASC,IACd,OAAON,IAAMC,IAAI,cAqcZ,SAASM,EAAOC,EAAQC,EAAIC,GACjC,OAAOV,IAAMC,IAAI,OAASO,EAAS,IAAMC,EAAK,IAAMC,GAI/C,SAASC,EAAQH,GACtB,OAAOR,IAAMC,IAAI,QAAUO,GAItB,SAASI,EAAQJ,EAAQC,EAAIC,GAClC,OAAOV,IAAMC,IAAI,QAAUO,EAAS,IAAMC,EAAK,IAAMC,GAmBhD,SAASG,EAAQL,EAAQC,EAAIC,GAClC,OAAOV,IAAMC,IAAI,QAAUO,EAAS,IAAMC,EAAK,IAAMC,GAsDhD,SAASI,EAAoBC,EAAWC,EAAOP,EAAIC,GACxD,OAAOV,IAAMC,IAAI,8BAAgCc,EAAY,IAAMC,EAAQ,IAAMP,EAAK,IAAMC,GA+BvF,SAASO,IACd,OAAOjB,IAAMC,IAAI,6BA+DZ,SAASiB,EAAoBC,GAClC,OAAOnB,IAAMC,IAAI,qCAAuCkB,GA2BnD,SAASC,GAAaD,EAASE,EAAUjD,GAC9C,OAAO4B,IAAMC,IAAI,uBAAyBkB,EAAU,IAAME,EAAW,IAAMjD,GAkHtE,SAASkD,GAAsBP,EAAW/D,GAC/C,OAAOgD,IAAMC,IAAI,0BAA4Bc,EAAY,IAAM/D,GAwG1D,SAASuE,GAA0BxB,EAAO/C,EAAMwE,EAAKC,GAC1D,OAAOzB,IAAMC,IAAI,WAAaF,EAAQ,IAAM/C,EAAO,IAAMwE,EAAM,IAAMC,GAchE,SAASC,GAA2B3B,EAAO/C,GAChD,OAAOgD,IAAMC,IAAI,YAAcF,EAAQ,IAAM/C,GAIxC,SAAS2E,GAA2B5B,EAAO/C,GAChD,OAAOgD,IAAMC,IAAI,YAAcF,EAAQ,IAAM/C,GAIxC,SAAS4E,GAA0B7B,EAAO1C,EAAOmD,EAAQqB,GAC9D,OAAO7B,IAAMC,IAAI,WAAa5C,EAAQ,IAAM0C,EAAQ,IAAMS,EAAS,IAAMqB,GASpE,SAASC,GAA2B/B,EAAO/C,GAChD,OAAOgD,IAAMC,IAAI,YAAcF,EAAQ,IAAM/C,GAIxC,SAAS+E,GAA2BhC,EAAO/C,GAChD,OAAOgD,IAAMC,IAAI,YAAcF,EAAQ,IAAM/C,GAIxC,SAASgF,GAA2BjC,EAAO/C,GAChD,OAAOgD,IAAMC,IAAI,YAAcF,EAAQ,IAAM/C,GAIxC,SAASiF,GAA0BlC,EAAO1C,EAAOmE,EAAKC,GAC3D,OAAOzB,IAAMC,IAAI,WAAa5C,EAAQ,IAAM0C,EAAQ,IAAMyB,EAAM,IAAMC,GAIjE,SAASS,GAA2BnC,EAAOS,GAChD,OAAOR,IAAMC,IAAI,YAAcF,EAAQ,IAAMS,GAIxC,SAAS2B,GAA2BpC,EAAOS,EAAQqB,GACxD,OAAO7B,IAAMC,IAAI,YAAcF,EAAQ,IAAMS,EAAS,IAAMqB,GAwCvD,SAASO,GAAWC,EAAQC,EAASC,EAAMxB,EAAW3C,GAC3D,IAAMoE,EAAO,CACXH,OAAQA,EACRC,QAASA,EACTC,KAAMA,EACNxB,UAAWA,EACX3C,KAAMA,GAER,OAAO4B,IAAMyC,KAAK,kBAAmBD,GAchC,SAASE,GAAW3B,EAAWsB,GACpC,OAAOrC,IAAMC,IAAI,sBAAwBc,EAAY,IAAMsB,GAmMtD,SAASM,GAA2B5C,EAAO6C,EAAWC,EAASzE,EAAM0E,GAC1E,OAAO9C,IAAMC,IAAI,wCAA0CF,EAAQ,IAAM6C,EAAY,IAAMC,EAAU,IAAMzE,EAAO,IAAM0E,GAGnH,SAASC,GAAiBhD,EAAO6C,EAAWC,EAASzE,GAC1D,OAAO4B,IAAMC,IAAI,8BAAgCF,EAAQ,IAAM6C,EAAY,IAAMC,EAAU,IAAMzE,GAS5F,SAAS4E,GAAkBjD,GAChC,OAAOC,IAAMC,IAAI,+BAAiCF,GC5zCpD,IAGIkD,GAAcjD,IAAMkD,OAAO,CAC3B/C,QAJiB,oEAKjBgD,QAAS,MAIN,SAASC,GAAcC,GAC1B,OAAOJ,GAAYhD,IAAIoD,G,IC4KZC,G,2MA/KXjK,MAAQ,CACJkK,SAAU,GACVC,SAAU,GACVC,QAAS,I,mFAEQ,IAAD,SACc9J,KAAKI,MAA3B2J,EADQ,EACRA,QAASC,EADD,EACCA,SACXC,EAAOC,GAAuCF,EAAUD,GACzDI,MAAK,SAAAtF,GAKF,OAJgBA,EAAKA,KACYL,QAAO,SAAU4F,EAAM5H,EAAO6H,GAC3D,OAAiC,KAA1BzK,OAAOwK,EAAKE,WAA8C,KAA1B1K,OAAOwK,EAAKE,gBAI1DC,OAAM,SAAAC,OAGLC,EAAUP,GAAuCF,EAAUD,EAAS,OACrEI,MAAK,SAAAtF,GACF,IAAImB,EAAO,GACL0E,EAAW7F,EAAKA,KACtB,GAAIvC,MAAMC,QAAQmI,GACd,IAAK,IAAIlI,EAAQ,EAAGA,EAAQkI,EAASjI,OAAQD,IAAS,CAEnC,KADA5C,OAAO8K,EAASlI,GAAOmI,WAElC3E,EAAKE,KAAKwE,EAASlI,IAI/B,OAAOwD,KAEVuE,OAAM,SAAAC,OAGLI,EAAMC,GAAwB,gBAC/BV,MAAK,SAAAtF,GACF,OAAOA,EAAKA,QAEf0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI+G,MAEpBM,QAAQC,IAAI,CAACd,EAAMQ,EAASG,IACvBT,MAAK,SAAAa,GACF,EAAK/K,SAAS,CACV2J,SAAUoB,EAAO,GACjBnB,SAAUmB,EAAO,GACjBlB,QAASkB,EAAO,QAGvBT,OAAM,SAAAC,GACHhH,QAAQC,IAAI+G,Q,+BAoBpB,SAASS,EAAcrB,EAAUa,EAASX,EAASrF,GAE/C,QAAgB3C,IAAZgI,GAAqC,OAAZA,EAAoB,OAAO,KACxD,IAAMoB,EAAOpB,EAAQtF,QAAO,SAAUjE,EAAOiC,EAAO6H,GAChD,OAAO9J,EAAM4K,OAAS1G,KAE1B,GAAoB,IAAhByG,EAAKzI,OACL,OAAO,KAEX,IAAM2I,EAAgBX,EAAQY,MAAK,SAAU9K,EAAOiC,EAAO6H,GACvD,IAAMiB,EAAW/K,EAAM+K,SAASC,cAC1BC,EAAUjL,EAAMiL,QAAQD,cAI9B,OAHiBL,EAAK,GAAGO,aAAaJ,MAAK,SAAU9K,EAAOiC,EAAO6H,GAC/D,OAAOiB,EAASI,QAAQnL,IAAU,GAAKiL,EAAQE,QAAQnL,SAIzDoL,EAAiB/B,EAASyB,MAAK,SAAU9K,EAAOiC,EAAO6H,GACxC9J,EAAMqL,SAASL,cAKhC,OAJiBL,EAAK,GAAGW,cAAcR,MAAK,SAAU9K,EAAOiC,EAAO6H,GAEhE,OAAO9J,QAIf,OAAsB,IAAlB6K,IAA8C,IAAnBO,EAMnC,SAASG,EAAWC,GAChB,MAAoB,eAAhBA,EAAOZ,KACA,gBAEC,gBAEhB,SAASa,EAAaD,GAClB,MAAoB,eAAhBA,EAAOZ,KACa,yBAAhBY,EAAOlH,KACA,aAES,+BAAhBkH,EAAOlH,KACA,aAES,SAAhBkH,EAAOlH,KACA,aAEJ,cAIHkH,EAAOlH,KACA,aAGA,cAKnB,IAAM4F,EAAUzK,KAAKN,MAAMmK,SACrBD,EAAW5J,KAAKN,MAAMkK,SAGtBsB,EAAOlL,KAAKN,MAAMoK,QAGlBmC,EAAahB,EAAcrB,EAAUa,EAASS,EAAM,QACpDgB,EAAYjB,EAAcrB,EAAUa,EAASS,EAAM,OACnDiB,EAAYlB,EAAcrB,EAAUa,EAASS,EAAM,OACnDkB,EAAcnB,EAAcrB,EAAUa,EAASS,EAAM,SACrDmB,EAAcpB,EAAcrB,EAAUa,EAASS,EAAM,SAgBrDoB,EAXc,CAChB,CAAE,KAAQ,aAAc,KA9F5B,SAA+BC,EAA0BC,GACrD,OAAiC,IAA7BD,IAAsE,IAAhCC,EAC/B,SAEsB,IAA7BD,IAAqE,IAAhCC,EAC9B,SAEsB,IAA7BD,EACO,wBAEyB,IAAhCC,EACO,6BAEJ,KA8EcC,CAFQxB,EAAcrB,EAAUa,EAASS,EAAM,sBACpCD,EAAcrB,EAAUa,EAASS,EAAM,2BAKvE,CAAE,KAAQ,MAAO,KAAQkB,GACzB,CAAE,KAAQ,MAAO,KAAQD,GACzB,CAAE,KAAQ,MAAO,KAAQD,GACzB,CAAE,KAAQ,MAAO,KAAQD,GACzB,CAAE,KAAQ,QAAS,KAAQ,IAC3B,CAAE,KAAQ,eAAM,KAAQ,IACxB,CAAE,KAAQ,MAAO,KAAQI,IAGEK,KAAI,SAAUtC,EAAM5H,EAAO6H,GACtD,OACI,yBAAKnK,IAAKsC,EAAOrB,UAAW2K,EAAW1B,IACnC,wBAAIjJ,UAAW6K,EAAa5B,IHlCzC,SAA+Be,GAClC,OAAQA,EAAKA,MACT,IAAK,aACD,MAZW,gCADUwB,EAaGxB,EAAKtG,MAX1B,uCAEQ,yBAAf8H,EACO,uCAEJ,qBAOH,IAAK,MACD,MAAO,MACX,IAAK,MACD,MAAO,MACX,IAAK,KACD,MAAO,KACX,IAAK,MACD,MAAO,MACX,IAAK,MACD,MAAO,MACX,IAAK,QACD,MAAO,QACX,IAAK,eACD,MAAO,eACX,IAAK,MACD,MAAO,MACX,QACI,OAAOxB,EAAKA,KA/BjB,IAA0BwB,EG4CuBC,CAAsBxC,QAIhE2B,EAAS/L,KAAKI,MAAM2L,OAC1B,OACI,yBAAK5K,UAAW4K,EAAS,qBAAuB,0BAC3CO,O,GA1KW9M,a,kBCErB,SAASqN,GAASzM,GAAQ,IAAD,EACwB0M,mBAAS,MADjC,mBACrBC,EADqB,KACDC,EADC,OAENF,mBAAS,IAFH,mBAEhBG,GAFgB,aAGFH,mBAAS,GAHP,mBAGrBI,EAHqB,KAGdC,EAHc,OAIIL,oBAAS,GAJb,mBAIrBM,EAJqB,KAIXC,EAJW,OAKgBP,mBAAS,MALzB,mBAKrBQ,EALqB,KAKLC,EALK,KA4E5B,SAASC,EAAejN,GACpB,YAAcuB,IAAVvB,GAAiC,OAAVA,GAA4B,KAAVA,EAClC,KAECA,EAEhB,OA3EAkN,qBAAU,WACN,IAAMC,EAAUC,aAAY,WACxBR,EAASD,EAAQ,KAClB,KACH,OAAO,kBAAMU,cAAcF,MAC5B,CAACR,IAEJO,qBAAU,WAENvD,GADc9J,EAAM4J,SAASjI,WAAWe,QAEnCqH,MAAK,SAAAtF,GACF,IAAMkH,EAASlH,EAAKA,KACdgJ,EAAM9B,EAAO+B,SAEbC,EAAWnL,IAAOiC,EAAKA,KAAK,GAAG+D,MAAM5F,UACrCgL,EAAUpL,MAASI,UAEzBQ,QAAQC,IAAIsK,EAAUC,GACtBhB,EAAsBjB,EAAO,IAC7BkB,EAAOY,MAEVtD,OAAM,SAAAC,GACHhH,QAAQC,IAAI,kCAAoCwK,KAAKC,UAAU1D,SAExE,CAAC0C,IAGJO,qBAAU,WACN,GAA2B,OAAvBV,QAAsDjL,IAAvBiL,EAAkC,CACjE,IAAMoB,EAAKX,EAAeT,EAAmBqB,MACvCC,EAAKb,EAAeT,EAAmBuB,MACvCC,EAAKf,EAAeT,EAAmByB,MAE7C,GAAW,OAAPL,GAAsB,OAAPE,GAAsB,OAAPE,EAAa,CAC3ClB,GAAY,GACZ,IAAMvG,EAAKlE,MAAS6L,SAAS,EAAG,KAAKC,OAAO,gBACtC3H,EAAKnE,MAAS8L,OAAO,gBAG3BxE,EAFe9J,EAAM2J,QAEOjD,EAAIC,GAC3BoD,MAAK,SAAAtF,GACF,IAAI8J,EAAWC,EAAkB/J,EAAKA,MAKtC8J,GAJAA,EAAWA,EAASjC,KAAI,SAAA7H,GAEpB,MAAO,CAAE,KADQA,EAAKhC,QAAUgC,EAAK9B,QACV,UAAa8B,EAAKgK,UAAW,SAAYhK,EAAKiK,cAEzDC,MAAK,SAACC,EAAGC,GAGzB,OAFkBrM,IAAOoM,EAAEpG,KAAM,gBAAgB5F,UAC/BJ,IAAOqM,EAAErG,KAAM,gBAAgB5F,UAClB,GAAK,KAExCuK,EAAkBoB,EAAS,OAE9BpE,OAAM,SAAAC,GACHhH,QAAQC,IAAI,kCAAoCwK,KAAKC,UAAU1D,WAIhF,CAAC0C,IAiBuB,OAAvBH,QAAsDjL,IAAvBiL,EACxB,KAGP,yBAAK5L,UAAU,uBACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,YAAYR,MAAO,CAAEuO,YAAa,SAC7C,6BACI,wBAAIvO,MAAO,CAAEC,QAAS,QAASuO,MAAOlL,EAAW,QAAjD,MACA,wBAAI9C,UAAU,gBAAgBR,MAAO,CAAEwO,MAAOlL,EAAW,QAAUuJ,EAAeT,EAAmBqC,MAEzG,6BACI,wBAAIzO,MAAO,CAAEC,QAAS,QAASuO,MAAOlL,EAAW,UAAjD,MAA+D,mCAC/D,wBAAI9C,UAAU,gBAAgBR,MAAO,CAAEwO,MAAOlL,EAAW,UACpDuJ,EAAeT,EAAmBsC,MACnC,0BAAM1O,MAAO,CAAE2O,WAAY,MAAOC,SAAU,SAA5C,QAIZ,yBAAKpO,UAAU,aACX,6BACI,wBAAIR,MAAO,CAAEC,QAAS,QAASuO,MAAOlL,EAAW,QAAUmJ,EAAW,KAAO,OAC7E,wBAAIjM,UAAU,gBAAgBR,MAAO,CAAEwO,MAAOlL,EAAW,QApCrEmJ,EAC0B,OAAnBE,EAAA,UAA6BA,EAAewB,SAA5C,YAAwDxB,EAAeuB,WAE1E,kBAAC,KAAD,CAAMpK,KAAK,YAEb,GAAN,OAAUsI,EAAmBuB,KAA7B,YAAqCvB,EAAmBqB,KAAxD,YAAgErB,EAAmByB,KAAnF,OAiCY,yBAAK7N,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWwO,eAAgB,QAC3E,6BACI,wBAAI7O,MAAO,CAAEC,QAAS,QAASuO,MAAOlL,EAAW,QAAjD,MACA,wBAAI9C,UAAU,gBAAgBR,MAAO,CAAEwO,MAAOlL,EAAW,QAAUuJ,EAAeT,EAAmB0C,MAEzG,6BACI,wBAAI9O,MAAO,CAAEC,QAAS,QAASuO,MAAOlL,EAAW,QAAjD,MACA,wBAAI9C,UAAU,gBAAgBR,MAAO,CAAEwO,MAAOlL,EAAW,QACpDuJ,EAAeT,EAAmB2C,IACnC,0BAAM/O,MAAO,CAAE2O,WAAY,MAAOC,SAAU,SAA5C,cAMpB,kBAAC,GAAD,CAAexD,QAAQ,EAAMhC,QAAS3J,EAAM2J,QAASC,SAAU5J,EAAM4J,YCnIjF,SAAS2F,GAAgBC,GACrB,OAAIA,EAAS,GACF,IAAMA,EAEVA,EAGX,SAASC,GAAOA,GACZ,MAAe,MAAXA,EACO,SAEJ,S,uGCKPC,GAAiB,EACjBC,GAAgB,EAChBC,GAAmB,EA4URC,G,2MA1UXvQ,MAAQ,CACJwQ,WAAY,OACZC,YAAY,EACZC,aAAa,EACbC,YAAY,EACZC,SAAS,EACTC,UAAW,KACXC,eAAgB,IAChBC,OAAQ,EACRC,SAAU,EACVC,QAAS,EACTC,UAAW,EACXC,OAAQ,EACRC,UAAW,EACXC,OAAQ,GACRC,UAAW,GACXC,UAAW,GACXC,UAAW,GAEXC,aAAa,EACbC,cAAe,I,EAqFnBC,aAAe,SAAAC,GACX,EAAKrR,SAAS,CACVqQ,SAAS,EACTa,aAAa,K,EAGrBI,UAAY,WAAQ,EAAKtR,SAAS,CAAEqQ,SAAS,K,mFAxFxB,IACTzL,EAAS7E,KAAKI,MAAdyE,KAEFgJ,EAAMhJ,EAAKmF,SACX3G,EAAOT,IAAOA,MAASI,UAAY,OACnCwO,EAAO3M,EAAKmM,UAClBhR,KAAKyR,SAAS5D,EAAKxK,EAAMmO,K,+BAGpB3D,EAAKxK,EAAMmO,GAAO,IAAD,OAetBtH,GAAsC2D,EAAKxK,EAAKqL,OAAO,cAAe,MAAO,YACxEvE,MAAK,SAAAtF,GACF,IAAML,EAASK,EAAKA,KAAKL,QAAO,SAAU4F,EAAM5H,EAAO6H,GACnD,IAAMzB,EAAOhG,IAAOwH,EAAKsH,QAAQ3P,WAAWe,OAASsH,EAAKuH,QAAQ5P,WAAWe,OAAQ,sBAAsBE,UAG3G,OAFAQ,QAAQC,IAAIb,IAAOgG,GAAM8F,OAAO,oBAChClL,QAAQC,IAAIb,IAAOS,EAAKL,WAAW0L,OAAO,oBACjB,OAAlBtE,EAAKE,UAAqB1B,EAAOvF,EAAKL,WAAa4F,EAAOvF,EAAKL,UAAa,SAGjF4O,EAAe/M,EAAKA,KAAKL,QAAO,SAAU4F,EAAM5H,EAAO6H,GACzD,IAAMzB,EAAOhG,IAAOwH,EAAKsH,QAAQ3P,WAAWe,OAASsH,EAAKuH,QAAQ5P,WAAWe,OAAQ,sBAAsBE,UAC3G,MAAyB,OAAlBoH,EAAKE,UAAqB1B,EAAOvF,EAAKL,WAAa4F,EAAOvF,EAAKL,UAAa,SAEvFQ,QAAQC,IAAI,SAAWoK,GACvBrK,QAAQC,IAAI,QAAUmO,EAAanP,QACnCe,QAAQC,IAAI,QAAUe,EAAO/B,QAC7B,EAAKxC,SAAS,CAAE6Q,UAAWtM,EAAO/B,OAAQoO,OAAQe,EAAanP,YAElE8H,OAAM,SAAAC,GACHhH,QAAQC,IAAI,0CAA4CwK,KAAKC,UAAU1D,OAE/EN,EAAgCsH,GAC3BrH,MAAK,SAAAtF,GACF,EAAK5E,SAAS,CACV8Q,OAAQlM,EAAKA,KAAK,GAAG8D,aAG5B4B,OAAM,SAAAC,GACHhH,QAAQC,IAAI,oCAAsCwK,KAAKC,UAAU1D,OAEzEN,EAA+B2D,GAC1B1D,MAAK,SAAAtF,GAAUrB,QAAQC,IAAIoB,EAAKA,MAAO,EAAK5E,SAAS,CAAEmR,cAAevM,EAAKA,UAC3E0F,OAAM,SAAAC,GAAShH,QAAQC,IAAI+G,Q,+BAI3BqD,EAAKgE,EAAMC,GAAM,IAAD,OACflQ,EAAOhC,OAAOkQ,IACdjO,EAAMjC,OAAOmQ,IACbU,EAASsB,WAAWnS,OAAOoQ,IAAoB,KAAMgC,QAAQ,QACpDlQ,IAAX2O,GAAmC,IAAXA,GAA2B,OAAXA,GAA4B,IAAT7O,GAAsB,IAARC,QAAsBC,IAATF,GAA+B,OAATA,GAAyB,OAARC,QAAwBC,IAARD,EAC7I7B,KAAKC,SAAS,CAAEkR,aAAa,IAExBvR,OAAOiC,GAAO,EACnB7B,KAAKC,SAAS,CAAEkR,aAAa,ILxFlC,SAA2B/K,EAAO6L,EAAOC,EAAMC,EAASC,EAAOC,GACpE,IAAMxJ,EAAO,CACX,KAAQwJ,EACR,MAASD,EACT,QAAWD,EACX,MAAS/L,EACT,MAAS6L,EACT,KAAQC,GAEV,OAAO7L,IAAMyC,KAAK,gCAAiCD,GKkFzCqB,CAA8B2D,EAAKgE,EAAMC,EAAKrB,EAAQ7O,EAAMC,GACvDsI,MAAK,SAAAtF,GACFrB,QAAQC,IAAIoB,EAAKA,MACjBqF,EAA+B2D,GAC1B1D,MAAK,SAAAtF,GAAUrB,QAAQC,IAAIoB,EAAKA,MAAO,EAAK5E,SAAS,CAAEmR,cAAevM,EAAKA,KAAMyL,SAAS,EAAOa,aAAa,OAC9G5G,OAAM,SAAAC,GAAShH,QAAQC,IAAI+G,SAEnCD,OAAM,SAAAC,GAAShH,QAAQC,IAAI+G,Q,kCAY5B8H,GAAe,IAAD,WACJC,EAaZxG,EADW/L,KAAKI,MAAdyE,KAEFgJ,EAAM9B,EAAO/B,SAASjI,WAAWe,OACjC+O,EAAO9F,EAAOyG,OAAOzQ,WAAWe,OAChCgP,EAAM/F,EAAO0G,KAAK1Q,WAAWe,OAC7B4P,EAAW3G,EAAO4G,QAClBvO,EAAakO,EAAalO,WAG1BjB,EAfN,SAAwByP,EAAWC,GAC/B,OAAkB,OAAdD,QAAoC9Q,IAAd8Q,GAAyC,KAAdA,EAC1C,GAEJ,CAACA,EAAWC,GAWJC,CAFDR,EAAaM,UACbN,EAAaO,UAEzBE,EAAa/S,KAAKN,MAAMyR,YAQxB6B,EAPY,CACd,CAAE7H,KAAM,4BAAS5K,MAAOoP,GAAgBjL,SAASqH,EAAOkH,UACxD,CAAE9H,KAAM,4BAAS5K,MAAOwL,EAAO/B,SAASjI,WAAWe,QACnD,CAAEqI,KAAM,4BAAS5K,MAAO4C,GACxB,CAAEgI,KAAM,gBAAO5K,MAAOqC,IAAO8P,EAAU,YAAYhE,OAAO,eAC1D,CAAEvD,KAAM,4BAAS5K,MAAO6D,IAEMsI,KAAI,SAAUtC,EAAM5H,EAAO6H,GACzD,MAAkB,8BAAdD,EAAKe,KAED,yBAAKjL,IAAKsC,GACN,yBAAKtC,IAAKsC,EAAO7B,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWD,OAAQ,SAC/E,yBAAKJ,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAU0O,SAAU,SAC1DnF,EAAKe,MAEV,yBAAKxK,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAU0O,SAAU,SAC3D,kBAAC,KAAD,CAAa2D,aAAc9I,EAAK7J,MAAO4S,SAAU,SAAC5S,GAAYyP,GAAmBzP,KACjF,yBAAKI,MAAO,CAAEyS,OAAQ,YAAtB,OAGR,yBAAKzS,MAAO,CAAEC,QAASmS,EAAa,OAAS,QAAS5D,MAAO,QAA7D,6BAIM,8BAAd/E,EAAKe,KAED,yBAAKjL,IAAKsC,GACN,yBAAK7B,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWD,OAAQ,SACnE,yBAAKJ,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAU0O,SAAU,SAC1DnF,EAAKe,MAEV,yBAAKxK,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAU0O,SAAU,SAC3D,kBAAC,KAAD,CAAa2D,aAAc9I,EAAK7J,MAAO4S,SAAU,SAAC5S,GAAYuP,GAAiBvP,KAC/E,yBAAKI,MAAO,CAAEyS,OAAQ,YAAtB,UACA,kBAAC,KAAD,CAAaF,aAAc9I,EAAK7J,MAAO4S,SAAU,SAAC5S,GAAYwP,GAAgBxP,KAC9E,yBAAKI,MAAO,CAAEyS,OAAQ,YAAtB,YAGR,yBAAKzS,MAAO,CAAEC,QAASmS,EAAa,OAAS,QAAS5D,MAAO,QAA7D,6BAKR,yBAAKjP,IAAKsC,EAAO7B,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWD,OAAQ,SAC/E,yBAAKJ,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAU0O,SAAU,SAC1DnF,EAAKe,MAEV,yBAAKxK,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAU0O,SAAU,SAC1DnF,EAAK7J,WAKtB,OACI,kBAAC,KAAD,CACI8S,MAAO,IACPlP,MAAM,uCACNmM,QAAStQ,KAAKN,MAAM4Q,QACpBgD,SAAUtT,KAAKqR,aACfkC,OACI,yBAAK5S,MAAO,CAAEC,QAAS,OAAQ4S,gBAnFzBjB,EAmFkDxG,EAAOtH,KAlF1D,WAAT8N,EAkF2E,gBAAkB,YAAY1R,WAAY,WAE7G,6BACI,kBAAC,KAAD,CAAQX,IAAI,SAASuT,QAASzT,KAAKqR,cAAnC,gBACA,kBAAC,KAAD,CAAQnR,IAAI,KAAKuE,KAAK,UAAUgP,QAAS,WAAQ,EAAKC,SAAS7F,EAAKgE,EAAMC,KAA1E,mBAGXkB,K,uCAIIW,EAAMC,GACnB,OAAa,OAATD,QAA0B7R,IAAT6R,EACV,KAEC,OAARC,QAAwB9R,IAAR8R,EACT,KAEJD,EAAK5R,WAAa,IAAM6R,EAAI7R,WAAa,M,+BAehD,SAAS8R,EAAczC,EAAe0C,EAAMC,EAAOrB,GAG/C,OAFAlP,QAAQC,IAAI2N,GAEiB,IAAzBA,EAAc3O,QACde,QAAQC,IAAIqQ,GAEQ,IAAhBA,EAAKrR,OACE,CACH2B,gBAAYtC,EACZ8Q,eAAW9Q,EACX+Q,cAAU/Q,GAMX,CACHsC,WAJewK,EAAqBmF,EAAOrB,GAK3CE,UAJchT,OAAOkU,EAAKE,OAK1BnB,SAJajT,OAAOkU,EAAKG,QAWtB,CACH7P,WAJ8C,IAAnCxE,OAAOwR,EAAc,GAAGe,SAKnCS,UAJchT,OAAOwR,EAAc,GAAGgB,OAKtCS,SAJajT,OAAOwR,EAAc,GAAGiB,OAtC5C,MA8CmCrS,KAAKI,MAArCyE,EA9CH,EA8CGA,KAAMqP,EA9CT,EA8CSA,YAAaC,EA9CtB,EA8CsBA,SACnB/C,EAAkBpR,KAAKN,MAAvB0R,cACFrF,EAASlH,EACT6N,EAAW3G,EAAO4G,QAClBoB,EAAQnF,EAAkB7C,EAAOqI,QACjCN,EAAOlF,EAAsB7C,EAAO+H,MACpCO,EAASzF,EAAuBmF,GAChC3P,EAAayP,EAAczC,EAAe0C,EAAMC,EAAOrB,GAAUtO,WACjEwO,EAAYiB,EAAczC,EAAe0C,EAAMC,EAAOrB,GAAUE,UAEhEC,EAAWgB,EAAczC,EAAe0C,EAAMC,EAAOrB,GAAUG,SAE/D9B,EAAS/Q,KAAKN,MAAMqR,OAC1B,QAAejP,IAAXiK,EAAwB,OAAO,KACnC,IArDyBxL,EDtOTsP,ECgSVyE,EAAY1F,EALH,CACXvL,KAAMT,IAAO8P,EAAU,YAAY1P,UACnCpB,KAAMgR,EACN/Q,IAAKgR,IAGH0B,EAAO3U,OAAOC,eAAeC,QAAQ,SAE3C,OACI,6BACI,yBAAKqB,UAAU,uBACX,wBAAIR,MAAO,CAAEwO,MAAO,mBAAoBI,SAAU,OAAQD,WAAY,QAAtE,MAAmFK,GAAgB/P,OAAOmM,EAAOkH,UACjH,wBAAItS,MAAO,CAAEwO,MAAO,mBAAoBI,SAAU,OAAQD,WAAY,QAAUvD,EAAOyG,OAAOzQ,WAAWe,QACzG,wBAAInC,MAAO,CAAEwO,MAAO,mBAAoBI,SAAU,OAAQD,WAAY,QAAUvD,EAAO/B,UACvF,wBAAIrJ,MAAO,CAAEwO,MAAO,uBAAwBI,SAAU,UDzSlDM,ECyS4E9D,EAAO0G,KDxSvGjP,QAAQC,IAAIoM,GACG,MAAXA,EACO,SAEJ,WCqSS,wBAAIlP,MAAO,CAAEwO,MAAO,uBAAwBI,SAAU,SAAW3M,IAAO8P,EAAU,YAAYhE,OAAO,SAArG,UACS,GAAR6F,GAAa,yBAAKd,QAASzT,KAAKuR,UAAWpQ,UAAU,0BAA0BR,MAAO,CAAE6T,OAAQ,YAC7F,yBAAKnT,IAAKoT,KAAUlT,IAAI,eAGhC,6BACI,yBAAKJ,UAAU,iBACX,wBAAIR,MAAO,CAAEwO,MAAO,qBACfnP,KAAK0U,iBAAiB9B,EAAWC,GAAU,0BAAMlS,MAAO,CAAE2O,WAAY,QAAUgF,IAErF,wBAAI3T,MAAO,CAAEwO,MAAO,qBA7ElB,MADO5O,EA+EY6D,IA9EH,OAAV7D,QAA4BuB,IAAVvB,GAAiC,IAAVA,EAClD,GAEJA,EAAMwB,WAAa,OA2EmB,0BAAMpB,MAAO,CAAE2O,WAAY,QArF5E,SAAqB/O,GACjB,MAAc,KAAVA,GAA0B,OAAVA,QAA4BuB,IAAVvB,EAC3B,KAEJA,EAAMwB,WAiFqEC,CAAYqS,GAAjD,MAEjC,yBAAKlT,UAAU,uBACX,yBAAKE,IAAKsT,KAAUpT,IAAI,aACxB,yBAAKZ,MAAO,CAAE4O,SAAU,SAAWvP,KAAKN,MAAMmR,QAC9C,yBAAKxP,IAAKuT,KAAWrT,IAAI,cACzB,yBAAKZ,MAAO,CAAE4O,SAAU,SAAWvP,KAAKN,MAAMoR,aAGtD,yBAAKnQ,MAAO,CAAEC,QAASsT,EAAc,QAAU,OAAQW,kBAAmB,QAASC,kBAAmB,yBAA0BC,kBAAmB,UAC/I,kBAAC,GAAD,CAAwBC,WAAYjJ,EAAOkJ,kBAAmBf,YAAaA,EAAalK,SAAU+B,EAAO/B,SAAUD,QAASgC,EAAOhC,WAEvI,yBAAKpJ,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQ4S,eAAgB,gBAAiB3S,WAAY,SAAUqU,QAAS,WAAYC,SAAU,WAAYnU,oBAAqB,YAClK,yBAAKL,MAAO,CAAEyU,SAAU,SAAU7F,SAAU,OAAQ8F,aAAc,WAAYC,WAAY,WAAavE,GACvG,kBAAC,IAAD,CAAM5P,UAAU,oBAAoBD,GAAI,CAAEqU,SAAU,iBAAmBxJ,EAAO/B,SAASjI,WAAWe,OAAQpD,MAAO,CAAE,OAAUyU,EAAU,MAASpI,EAAO/B,SAAU,OAAU+B,EAAOhC,QAAS,UAAagC,EAAOkH,OAAQ,MAAQ,EAAM,UAAajT,KAAKN,MAAMsR,aACzP,qCACI,yBAAKrQ,MAAO,CAAE4O,SAAU,SAAxB,wDAKfvP,KAAKwV,YAAY3B,EAAczC,EAAe0C,EAAMC,EAAOrB,S,GArU/ClT,a,oBCkHdiW,I,kNA7HX/V,MAAQ,CAAE4Q,SAAS,EAAO3Q,WAAY,G,EAEtC4R,UAAY,WACR,EAAKtR,SAAS,CACVqQ,SAAS,EACToF,UAAU,EACV7Q,KAAM,Q,EA8BdwM,aAAe,SAAAC,GACX,EAAKrR,SAAS,CACVqQ,SAAS,K,mFA3Bb,IAAMvQ,EAAcF,eAAeC,QAAQ,QAC3CE,KAAKC,SAAS,CAAEN,WAAYI,M,+BAGvB2J,GAEL,IAKMiM,EAAY,CACd,UANcC,SAASC,eAAe,aAAatV,MAOnD,GANcqV,SAASC,eAAe,SAAStV,MAO/C,QANYqV,SAASC,eAAe,WAAWtV,MAO/C,SANamJ,EAOb,OANWkM,SAASC,eAAe,UAAUtV,OAQjDP,KAAKC,SAAS,CACVqQ,SAAS,EACTzL,KAAM8Q,EACND,UAAU,M,+BAaR,IAAD,OASL,IAAM9F,EAAS5P,KAAKI,MAAM0V,UACF9V,KAAKI,MAArB8T,YACR,OACI,yBAAKvT,MAAO,CAAEI,OAAQ,SAClB,yBAAKJ,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQ4S,eAAgB,gBAAiB3S,WAAY,SAAUkV,gBAAiB,yBAA0Bb,QAAS,aACtJ,wBAAIvU,MAAO,CAAEwO,MAAO,0BAApB,MCpCK,SAACS,GACtB,OAAIA,EAAS,GACF,IAAMA,EAEVA,EDgC4DoG,CAAiBpG,IACpE,yBAAKzO,UAAU,kBAAkBsS,QAASzT,KAAKuR,UAAW5Q,MAAO,CAAEC,QAAkC,GAAzBZ,KAAKN,MAAMC,WAAkB,OAAS,OAAQ6U,OAAQ,YAC9H,yBAAKnT,IAAKoT,KAAUlT,IAAI,cAE5B,kBAAC,KAAD,CACI8R,MAAO,IACPlP,MAAM,uCACNmM,QAAStQ,KAAKN,MAAM4Q,QACpB2F,KAAM,kBAAM,EAAKvC,SAAS,eAC1BJ,SAAUtT,KAAKqR,cAEf,yBAAK1Q,MAAO,CAAEC,QAAS,OAAQsV,iBAAkB,sBAAuBC,WAAY,SAChF,yBAAKhV,UAAU,iBACX,qCACI,0DAEJ,yBAAKR,MAAO,CAAEC,QAAS,OAAQC,WAAY,WACvC,6BAAM8O,GAAgBC,MAG9B,yBAAKzO,UAAU,iBACX,qCACI,0DAEJ,kBAAC,KAAD,CAAOiV,GAAG,oBAEd,yBAAKjV,UAAU,iBACX,qCACI,0DAEJ,yBAAKR,MAAO,CAAEC,QAAS,OAAQC,WAAY,WACvC,kBAAC,KAAD,CAAOuV,GAAG,OAAOC,YAAY,KAAK1V,MAAO,CAAEuO,YAAa,SACxD,wBAAIvO,MAAO,CAAEuO,YAAa,QAA1B,UACA,kBAAC,KAAD,CAAOkH,GAAG,OAAOC,YAAY,KAAK1V,MAAO,CAAEuO,YAAa,SACxD,wCAGR,yBAAK/N,UAAU,iBACX,yBAAKR,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,gBAAiB3S,WAAY,SAAUwS,MAAO,SACzF,sCACA,wCAEJ,kBAAC,KAAD,CAAYiD,qBAAsB,SAAAC,GAAW,OAAIA,EAAYC,YAAYH,YAAY,2BAAOD,GAAG,cAEnG,yBAAKjV,UAAU,iBACX,qCACI,0DAEJ,yBAAKR,MAAO,CAAEC,QAAS,SAAU,kBAAC,KAAD,CAAOyV,YAAY,MAAMD,GAAG,WAA7D,aAKhB,yBAAKzV,MAAO,CAAEI,OAAQ,oBAAoBH,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,SAAUqU,QAAS,SAChH,yBAAKvU,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,oBAAvC,sB,GAlHkB3P,c,gFE+KvBiX,G,2MA3KXC,YAAa,E,EACbhX,MAAQ,CACJiX,WAAW,EACXC,cAAe,GACfC,kBAAmB,GACnBC,kBAAchV,EACdnC,WAAY,G,sFAGZK,KAAK0W,YAAa,I,0CAGlB1W,KAAK+W,cAAgB/W,KAAK+W,cAAcC,KAAKhX,MAC7C,IAAMD,EAAcF,eAAeC,QAAQ,QAC3CE,KAAKC,SAAS,CAAEN,WAAYI,IAC5BC,KAAKiX,qB,yCAEW,IAAD,ORsBd5Q,IAAMC,IAAI,+BQpBN6D,MAAK,SAAAa,GACFxH,QAAQC,IAAI,qBAAuBwK,KAAKC,UAAUlD,IAClD,EAAK/K,SAAS,CACV2W,cAAe5L,EAAOnG,KACtBgS,kBAAmB7L,EAAOnG,UAGjC0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,qBAAuBwK,KAAKC,UAAU1D,S,mCAK1DxK,KAAK0W,YAAa,EAClB1W,KAAKC,SAAS,CACV6W,kBAAchV,EACd6U,WAAW,EACXE,kBAAmB5I,KAAKiJ,MAAMjJ,KAAKC,UAAUlO,KAAKN,MAAMkX,oB,mCAIlD,IRZaO,EQYd,OAETnX,KAAKC,SAAS,CACV0W,WAAW,KRfQQ,EQiBInX,KAAKN,MAAMmX,kBRhBrCxQ,IAAMyC,KAAK,kCAAmCqO,IQiB1ChN,MAAK,SAAAa,GACFxH,QAAQC,IAAI,qBAAuBwK,KAAKC,UAAUlD,IAClD,EAAKiM,sBAER1M,OAAM,SAAAC,GACHhH,QAAQC,IAAI,qBAAuBwK,KAAKC,UAAU1D,S,iCAK1DxK,KAAKC,SAAS,CACV0W,WAAY3W,KAAKN,MAAMiX,UACvBE,kBAAoB7W,KAAKN,MAAMiX,UAAa1I,KAAKiJ,MAAMjJ,KAAKC,UAAUlO,KAAKN,MAAMmX,oBAAsB5I,KAAKiJ,MAAMjJ,KAAKC,UAAUlO,KAAKN,MAAMkX,oB,oCAItIQ,GACVpX,KAAKC,SAAS,CAAE6W,aAAcM,EAAMC,OAAO9W,U,sCAI3C,IAAM+W,EAAWtX,KAAKN,MAAMmX,kBAEtBU,EAAM1X,eAAeC,QAAQ,QAC7B0X,EAAc,CAChB7O,QAAS3I,KAAKN,MAAMoX,aACpBlO,MAAQ,IAAI6O,KACZC,OAAQH,EAAM,eACdnQ,UAAWmQ,EAAM3U,MAAS8L,OAAO,kBAAkB3M,YAEvDuV,EAASpR,KAAKsR,GACdxX,KAAKC,SAAS,CACV4W,kBAAmBS,EACnBR,kBAAchV,M,uCAILY,GACb,IAAM4U,EAAWtX,KAAKN,MAAMmX,kBACtBrU,EAAQ8U,EAASK,WAAU,SAAAxM,GAAI,OAAIA,IAASzI,KAClD4U,EAASM,OAAOpV,EAAO,GACvBxC,KAAKC,SAAS,CAAE4W,kBAAmBS,M,mCAE1BO,EAAc7S,GACvB,IAAI8S,EAAO,GACU,OAAjBD,GAAiD,IAAxBA,EAAapV,QACtCqV,EAAK5R,KACD,yBAAK/E,UAAU,uBAAf,uBAGR,IAAK,IAAIqB,EAAQ,EAAGA,EAAQqV,EAAapV,OAAQD,IAAS,CACtD,IAAME,EAAUmV,EAAarV,GAC7BsV,EAAK5R,KACD,yBAAK/E,UAAU,uBACX,4BAAKqB,EAAQ,EAAb,IAAiBE,EAAQiG,SACxB3I,KAAK+X,WAAWrV,EAASsC,KAItC,OAAO8S,I,iCAEApV,EAASsC,GAAS,IAAD,OAClB4D,EAAOhG,IAAOF,EAAQkG,KAAM,yBAAyB8F,OAAO,uBAC5DsJ,EAAYpV,IAAOqV,IAAIrP,GAAMsP,SAC7BxO,EAAShH,EAAQgV,OAAS,qBAAQ9U,IAAOoV,GAAWtJ,OAAO,eAAiB,eAClF,OAAI1J,EAEI,yBAAK3D,IAAK8W,KAAW5W,IAAI,aAAakS,QAAS,kBAAM,EAAK2E,iBAAiB1V,MAI/E,kBAAC,KAAD,CAAS2V,UAAU,MAAMlU,MAAOuF,GAC5B,yBAAKrI,IAAKiX,KAAQ/W,IAAI,kB,+BAIxB,IAAD,OAWL,IATqB7B,EASjB6Y,EAAUvY,KAAKN,MAAMmX,kBAQzB,OANA0B,EAAUA,EAAQxJ,MAAK,SAACC,EAAGC,GAGvB,OAFgBrM,IAAOoM,EAAEpG,KAAM,yBAAyB5F,UACxCJ,IAAOqM,EAAErG,KAAM,yBAAyB5F,UACzB,GAAK,KAIpC,6BACI,yBAAK7B,UAAU,iBACX,wBAAIR,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBAAtC,4BACA,yBAAKqJ,UAAW,kBAAM,EAAKC,YAAY9X,MAAO,CAAEC,QAAkC,GAAzBZ,KAAKN,MAAMC,WAAkB,OAAS,OAAQ0T,MAAO,OAAQmB,OAAQ,YAC1H,yBAAKnT,IAAKoT,KAAUlT,IAAI,eAGhC,6BACI,yBAAKJ,WA1BIzB,EA0BmBM,KAAKN,MAAMiX,UAzB1CjX,EAIM,wBAHA,2BAyBEM,KAAK6X,aAAaU,EAASvY,KAAKN,MAAMiX,YAE3C,yBAAKhW,MAAO,CAAEC,QAASZ,KAAKN,MAAMiX,UAAY,QAAU,OAAQ+B,OAAQ,gCAAiCC,eAAgB,MACrH,yBAAKhY,MAAO,CAAEI,OAAQ,OAAQgV,gBAAiB,sBAAuBnV,QAAS,OAAQ4S,eAAgB,gBAAiB3S,WAAY,WAChI,kBAAC,KAAD,CAAOwV,YAAY,uCAAS1V,MAAO,CAAEG,WAAY,OAAQuS,MAAO,SAAW9S,MAAOP,KAAKN,MAAMoX,aAAc3D,SAAUnT,KAAK+W,gBAC1H,kBAAC,KAAD,CAAQtS,KAAK,UAAU9D,MAAO,CAAEuO,YAAa,QAAUuE,QAAS,kBAAM,EAAKmF,kBAA3E,iBAIJ,yBAAKjY,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WACjF,kBAAC,KAAD,CAAQF,MAAO,CAAEyS,OAAQ,OAAQC,MAAO,QAAUI,QAAS,kBAAM,EAAKoF,eAAtE,gBACA,kBAAC,KAAD,CAAQpU,KAAK,UAAU9D,MAAO,CAAEyS,OAAQ,OAAQC,MAAO,QAAUI,QAAS,kBAAM,EAAKqF,eAArF,wB,GAnKDtZ,aC0GZuZ,G,2MAhHXrZ,MAAQ,CACJsZ,aAAa,G,EAejBC,iBAAmB,SAAC7C,GAAQ,IAAD,EACiB,EAAKhW,MAArC8Y,EADe,EACfA,UAAWC,EADI,EACJA,MAAOC,EADH,EACGA,UAE1B,GADe,EAAKC,aAAaF,EAAOD,GAC5B,CACR,IAAMrU,EAAO,CAAE,MAAS,KAAM,KAAQuU,GACtC,EAAKhZ,MAAMkZ,eAAezU,QAG1B,EAAKzE,MAAMkZ,eAAelD,I,kFAnB9BpW,KAAKC,SAAS,CACV+Y,aAAa,M,0CAKjBhZ,KAAKC,SAAS,CACV+Y,aAAa,M,mCAgBR5C,EAAImD,GACb,OAAInD,IAAOmD,I,+BAKL,IAAD,OACL,SAASC,EAAcC,GACnB,OAAQA,GACJ,KAAK,EACD,MAAO,SACX,KAAK,EACD,MAAO,SACX,KAAK,EACD,MAAO,SACX,KAAK,EACD,MAAO,SACX,KAAK,EACD,MAAO,SACX,KAAK,EACD,MAAO,SACX,KAAK,EACD,MAAO,SACX,QACI,OAAO,MAlBd,MAqByCzZ,KAAKI,MAA3C8Y,EArBH,EAqBGA,UAAWC,EArBd,EAqBcA,MAAOC,EArBrB,EAqBqBA,UAAWvU,EArBhC,EAqBgCA,KAC/BhD,EF3DO,SAAC+G,GAClB,OAAQA,GACJ,KAAK,EACD,MAAO,IACX,KAAK,EACD,MAAO,IACX,KAAK,EACD,MAAO,IACX,KAAK,EACD,MAAO,IACX,KAAK,EACD,MAAO,IACX,KAAK,EACD,MAAO,IACX,KAAK,EACD,MAAO,IACX,KAAK,EACD,MAAO,IACX,KAAK,EACD,MAAO,IACX,KAAK,EACD,MAAO,KACX,KAAK,GACD,MAAO,KACX,KAAK,GACD,MAAO,KACX,QACI,OAAO,MEgCC8Q,CAAa,IAAIjC,KAAK2B,GAAWO,YAAc,IAAM,IAAIlC,KAAK2B,GAAWQ,UAC/EH,EAAU,IAAIhC,KAAK2B,GAAWS,SAC9BC,EAAsB,CAAE/Y,OAAQ,OAAQH,QAAS,OAAQC,WAAY,SAAU2S,eAAgB,SAAUkF,OAAQ,gCAAiCqB,gBAAiB,OACnKR,EAASvZ,KAAKqZ,aAAaF,EAAOD,GACxC,OAAa,OAATrU,EAEI,6BACI,yBAAKlE,MAAO4Y,EAAS,CAAEb,OAAQ,kCAAmC3C,gBAAiB,YAAaiE,UAAW,QAAW,CAAExF,OAAQ,WAAagE,UAAW,kBAAM,EAAKS,iBAAiB,CAAE,MAASE,EAAO,KAAQC,MAC1M,yBAAKzY,MAAOmZ,GACR,yBAAKnZ,MAAO,CAAEC,QAAS,OAAQsV,iBAAkB,YAC7C,wBAAIvV,MAAO,CAAEsZ,UAAW,WAAapY,GACrC,wBAAIlB,MAAO,CAAEsZ,UAAW,WAAaT,EAAcC,MAG3D,yBAAK9Y,MAAOmZ,GACR,wBAAInZ,MAAO,CAAEsZ,UAAW,WAAxB,UAEJ,wBAAItZ,MAAOmZ,GAAX,KACA,wBAAInZ,MAAOmZ,GAAX,KACA,wBAAInZ,MAAOmZ,GAAX,KACA,wBAAInZ,MAAOmZ,GAAX,KACA,wBAAInZ,MAAOmZ,GAAX,MAEJ,yBAAKnZ,MAAO,CAAEC,QAAS2Y,EAAS,OAAS,OAAQ/F,eAAgB,SAAU3S,WAAY,WACnF,yBAAKF,MAAO,CAAE0S,MAAO,EAAGtS,OAAQ,EAAGmZ,YAAa,QAASC,YAAa,qBAAsBC,YAAa,mDAOrH,6BACI,yBAAKzZ,MAAO4Y,EAAS,CAAEb,OAAQ,kCAAmC3C,gBAAiB,YAAaiE,UAAW,QAAW,CAAExF,OAAQ,WAAagE,UAAW,kBAAM,EAAKS,iBAAiB,CAAE,MAASE,EAAO,KAAQC,MAC1M,yBAAKzY,MAAOmZ,GACR,yBAAKnZ,MAAO,CAAEC,QAAS,OAAQsV,iBAAkB,YAC7C,wBAAIvV,MAAO,CAAEsZ,UAAW,WAAapY,GACrC,wBAAIlB,MAAO,CAAEsZ,UAAW,WAAaT,EAAcC,MAG3D,yBAAK9Y,MAAOmZ,GACR,wBAAInZ,MAAO,CAAEsZ,UAAW,WAAapV,EAAKwV,UAA1C,IAAsD3V,SAAoC,IAA3BA,SAASG,EAAKwV,WAAmB,IAAhG,OAEJ,wBAAI1Z,MAAOmZ,GAAsBjV,EAAKyV,eACtC,wBAAI3Z,MAAOmZ,GAAsBjV,EAAK0V,cACtC,wBAAI5Z,MAAOmZ,GAAsBjV,EAAK2V,SACtC,wBAAI7Z,MAAOmZ,GAAsBjV,EAAK4V,YACtC,wBAAI9Z,MAAOmZ,GAAsBjV,EAAK6V,WAE1C,yBAAK/Z,MAAO,CAAEC,QAAS2Y,EAAS,OAAS,OAAQ/F,eAAgB,SAAU3S,WAAY,WACnF,yBAAKF,MAAO,CAAE0S,MAAO,EAAGtS,OAAQ,EAAGmZ,YAAa,QAASC,YAAa,qBAAsBC,YAAa,iE,GA1GhG5a,aCW7B,SAASmb,GAAeC,GAcpB,OAAO,IAAInD,KAAKmD,GAAWC,cAAgB,IAb3C,SAAqBnX,GACjB,IAAMoX,EAAcpX,EAAQ,EAC5B,OAAIoX,EAAc,GACP,IAAMA,EAELA,EAQiCC,CAAY,IAAItD,KAAKmD,GAAWjB,YAAc,MAN3EtW,EAM4F,IAAIoU,KAAKmD,GAAWhB,WALrH,GACA,IAAMvW,EAELA,GAJhB,IAAoBA,EA0BxB,SAAS2X,GAAoBJ,GAQzB,OAAO,IAAInD,KAAKmD,GAAWC,cAAgB,IAP3C,SAAqBnX,GACjB,IAAMoX,EAAcpX,EAAQ,EAC5B,OAAIoX,EAAc,GACP,IAAMA,EAELA,EAEiCC,CAAY,IAAItD,KAAKmD,GAAWjB,YAAc,KAKnG,SAASsB,GAAWL,GAchB,OAbA,SAAqBlX,GACjB,IAAMoX,EAAcpX,EAAQ,EAC5B,OAAIoX,EAAc,GACP,IAAMA,EAELA,EAQTC,CAAY,IAAItD,KAAKmD,GAAWjB,YAAc,MANjCtW,EAMkD,IAAIoU,KAAKmD,GAAWhB,WAL3E,GACA,IAAMvW,EAELA,GAJhB,IAAoBA,EAqGxB,SAAS6X,GAAW7X,GAChB,OAAI,IAAIoU,KAAKpU,GAAM8X,WAAY,IAAI1D,MAAO0D,U,WCnK1CC,GAAUC,GAAYC,GC8LXC,G,2MA7LX7b,MAAQ,CACJ8b,cAAe,KACfC,SAAU,KACVtZ,WAAYS,IAAOA,MAAS8L,OAAO,YAAa,YAAY1L,UAC5D0Y,QAAS,I,EAYbC,aAAe,SAACtY,EAAMuY,GAClB,EAAK3b,SAAS,CACVkC,WAAYkB,EAAKL,UACjByY,SAAU,OACX,WAAQ,EAAKI,QAAQ,EAAKnc,MAAMyC,gB,EAEvC2Z,iBAAmB,SAACC,GAChB,EAAK9b,SAAS,CACVwb,SAAUM,EAAS5C,MACnBqC,cAAeO,EAASnT,Q,EA0GhCoT,SAAW,SAAC1K,GAAM,IAENnP,EAAe,EAAKzC,MAApByC,WAMR,OAAQmP,EAAE+F,OAAO9W,OACb,IAAK,IACD,IAAM0b,EAAQ9Z,EAJV,MAOJ,EAAKwZ,aAAa/Y,IAAOqZ,IACzB,MACJ,IAAK,IACD,IAAMC,EAAQtZ,IAAOA,MAAS8L,OAAO,aACrC,EAAKiN,aAAaO,GAClB,MACJ,IAAK,IACD,IAAMC,EAAQha,EAdV,MAgBJga,GADcvZ,IAAOA,MAAS8L,OAAO,aAAa1L,WAChC,EAAK2Y,aAAa/Y,IAAOuZ,M,mFAlJnDnc,KAAK6b,QAAQ7b,KAAKN,MAAMyC,c,8BAEpBA,GAAa,IZgxCMkB,EYhxCP,QZgxCOA,EY/wCGT,IAAOT,GAAYuM,OAAO,cZgxCnDrI,IAAMC,IAAI,0BAA4BjD,IY/wClC8G,MAAK,SAAAtF,GACF,EAAK5E,SAAS,CAAEyb,QAAS7W,EAAKA,UAEjC0F,OAAM,SAAAC,GAAShH,QAAQC,IAAI+G,Q,yCAcjB4R,GACf,IAAMC,EAAaD,EAAM1P,KAAI,SAAUhK,EAASF,EAAO6H,GACnD,OACI,yBAAKlJ,UAAU,iCACX,wBAAIA,UAAU,sCAAsCuB,EAAQgG,QAC5D,wBAAIvH,UAAU,sCAAsCuB,EAAQ4Z,YAIxE,OACI,6BACI,yBAAKnb,UAAU,iCACX,wBAAIA,UAAU,sCAAd,4BACA,wBAAIA,UAAU,sCAAd,iBAEHkb,K,iCAKT,IAAME,EAAiBvc,KAAKN,MAAM8b,cAE5BgB,EADUxc,KAAKN,MAAMgc,QACAlX,QAAO,SAAU4F,EAAM5H,GAE9C,OAAOmY,GADU/X,IAAOwH,EAAKqN,KAAM,eACCkD,GAAe4B,MAGvD,GAA4B,OAAxBvc,KAAKN,MAAM+b,SACX,OAAO,KAGP,IAAMgB,EAA+B,IAAtBD,EAAW/Z,OACpBia,EAAgC,IAAtBF,EAAW/Z,OAErBka,EAAgC,IAAtBH,EAAW/Z,OAAe,EAAI+Z,EAAW,GAAGI,sBACtDC,EAAiC,IAAtBL,EAAW/Z,OAAe,EAAI+Z,EAAW,GAAGM,uBAE7D,OACI,6BACI,yBAAK3b,UAAU,0BACX,yBAAKA,UAAU,8BACX,6BACI,wBAAIA,UAAU,+BAAd,wCACA,yBAAKA,UAAU,oCACVsb,EAAS,yBAAKtb,UAAU,aAAf,sBAAuCnB,KAAK+c,mBAAmBJ,KAGjF,6BACI,wBAAIxb,UAAU,+BAAd,wCACA,yBAAKA,UAAU,oCACVub,EAAU,yBAAKvb,UAAU,aAAf,sBAAuCnB,KAAK+c,mBAAmBF,U,qCAoBtG,MARiB,CAAC,eAAM,qBAAO,eAAM,eAAM,uCAAU,6CAAW,kBACzCnQ,KAAI,SAAUtC,EAAM5H,GACvC,OACI,yBAAKrB,UAAU,4BACX,4BAAKiJ,S,oCAUjB,IAJW,IAAD,OACN4S,EAAW,GACTC,EAAWjd,KAAKN,MAAMgc,QACtBtZ,EAAWpC,KAAKN,MAAMyC,WAHlB,WAID+a,GACL,IAAM9D,EAAYhX,EAAgB,GAAJ8a,EAAS,GAAK,GAAK,IAC3CV,EAAaS,EAASzY,QAAO,SAAU4F,EAAM5H,GAE/C,OADiBI,IAAOwH,EAAKqN,KAAM,YAAYzU,YAC3BoW,KAGE,IAAtBoD,EAAW/Z,OACXua,EAAS9W,KACL,6BACI,kBAACiX,GAAD,CAAgBtY,KAAM,KAAM3E,IAAKgd,EAAG9D,UAAWA,EAAWF,UAAW,EAAKxZ,MAAM+b,SAAUtC,MAAO+D,EAAG5D,eAAgB,EAAKwC,qBAKjIkB,EAAS9W,KACL,6BACI,kBAACiX,GAAD,CAAgBtY,KAAM2X,EAAW,GAAItc,IAAKgd,EAAG9D,UAAWA,EAAWF,UAAW,EAAKxZ,MAAM+b,SAAUtC,MAAO+D,EAAG5D,eAAgB,EAAKwC,sBAjBzIoB,EAAI,EAAGA,EAAI,EAAGA,IAAM,EAApBA,GAuBT,OADAF,EAASI,UACFJ,I,+BAkCP,OACI,yBAAKrc,MAAO,CAAEqZ,UAAW,SACrB,yBAAK7Y,UAAU,0BACX,qCACI,wBAAIR,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,sBAAtC,wCACA,wBAAIxO,MAAO,CAAE4O,SAAU,OAAQ8N,UAAW,SAAUlO,MAAO,oBAAqBmO,YAAa,SAA7F,qDAEJ,yBAAK3c,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,QAC9E,kBAAC,KAAD,CAAYqV,qBAAsB,SAAAC,GAAW,OAAIA,EAAYC,YAAY+G,WAAW,EAAMC,aAAc,SAACC,GAAc,OAAOA,GAAWA,EAAU7a,MAAS8a,QAAQ,QAAUnd,MAAOqC,IAAO5C,KAAKN,MAAMyC,YAAauM,OAAQ,aAAcyE,SAAUnT,KAAK2b,aAAcgC,YAAY,IACnR,yBAAKhd,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,MAAOH,WAAY,SACjG,kBAAC,KAAD,CAAQP,MAAM,IAAIqd,MAAM,SAASC,KAAK,cAAcpK,QAASzT,KAAKgc,WAClE,kBAAC,KAAD,CAAQzb,MAAM,IAAIqd,MAAM,SAASC,KAAK,eAAepK,QAASzT,KAAKgc,WACnE,kBAAC,KAAD,CAAQzb,MAAM,IAAIqd,MAAM,SAASC,KAAK,eAAepK,QAASzT,KAAKgc,cAI/E,yBAAK7a,UAAU,6BACX,6BACKnB,KAAK8d,gBAET9d,KAAK+d,eAET/d,KAAKge,gB,GAxLWxe,aCkRlBye,I,kNAvQXve,MAAQ,CACJwe,YAAa,OAEbC,eAAgB,EAChBxe,WAAY,EACZye,UAAU,EACVtH,aAAc,GACduH,YAAa,eAEbC,aAAc,GACdtZ,QAAQ,EACR7C,WAAYS,MAASI,UACrBgO,UAAW,M,6EAGDpI,EAAM2V,GAAK,IAAD,OAIpBrU,GAAkCqU,EAHjB3b,IAAOgG,GAAM8F,OAAO,eAIhCvE,MAAK,SAAAtF,GACFrB,QAAQC,IAAI,4BAA8BwK,KAAKC,UAAUrJ,EAAKA,OAC9D,EAAK5E,SAAS,CAAEqe,aAAczZ,EAAKA,UAEtC0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,4BAA8BwK,KAAKC,UAAU1D,S,yCAIjD,IAAD,OASTnH,EAAOrD,KAAKI,MAAM+B,WAClBqc,EAAa5b,IAAOS,GAAMqL,OAAO,cACvClL,QAAQC,IAAI+a,Gbs0Bb,SAA+Bnb,GACpC,OAAOgD,IAAMC,IAAI,kCAAoCjD,Gat0B/C6G,CAAkCsU,GAC7BrU,MAAK,SAAAtF,GACFrB,QAAQC,IAAI,4BAA8BwK,KAAKC,UAAUrJ,EAAKA,OAC9D,EAAK5E,SAAS,CAAEqe,aAAczZ,EAAKA,UAEtC0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,4BAA8BwK,KAAKC,UAAU1D,S,0CAIjExK,KAAK+W,cAAgB/W,KAAK+W,cAAcC,KAAKhX,MAE7C,IAAMD,EAAcF,eAAeC,QAAQ,QAG3C,GAFAE,KAAKC,SAAS,CAAEN,WAAYI,IAEb,IADAC,KAAKI,MAAM2L,OACR,CACd,IAAMwS,EAAKve,KAAKI,MAAMqe,SAASzN,UACzB3N,EAAOrD,KAAKI,MAAM+B,WACxBqB,QAAQC,IAAIzD,KAAKI,MAAMqe,UACZ,OAAPF,IAIAve,KAAKC,SAAS,CACVkC,WAAYkB,EACZ2N,UAAWuN,IAEfve,KAAK0e,cAAcrb,EAAMkb,SAK7Bve,KAAK2e,qB,2CAMT,IAAM5S,EAAS/L,KAAKI,MAAM2L,OAC1B,GAAI/L,KAAKN,MAAMsF,OAEX,GADAhF,KAAKC,SAAS,CAAE+E,QAAQ,IACT,IAAX+G,EAAc,CACd,IAAMwS,EAAKve,KAAKI,MAAMqe,SAASzN,UAC/BhR,KAAK0e,cAAc1e,KAAKN,MAAMyC,WAAYoc,QAI1Cve,KAAK2e,mBAGb,IAAMC,EAAY5e,KAAKI,MAAM+B,WACvB0c,EAAY7e,KAAKN,MAAMyC,WAC7B,GAAIyc,IAAcC,IACd7e,KAAKC,SAAS,CAAEkC,WAAYyc,IACb,IAAX7S,GAAc,CACd,IAAMwS,EAAKve,KAAKI,MAAMqe,SAASzN,UAC/BxN,QAAQC,IAAIb,IAAOgc,GAAWlQ,OAAO,mBACrClL,QAAQC,IAAIb,IAAOic,GAAWnQ,OAAO,mBACrC1O,KAAK0e,cAAcE,EAAWL,M,kCAO9Bhe,GACRP,KAAKC,SAAS,CAAEoe,YAAa9d,M,oCAEnB6W,GACVpX,KAAKC,SAAS,CAAE6W,aAAcM,EAAMC,OAAO9W,U,yCAG3CP,KAAKC,SACD,CACIme,UAAWpe,KAAKN,MAAM0e,a,qCAIlB,IAAD,OACX5a,QAAQC,IAAIzD,KAAKN,MAAMyC,YACvB,IAAM2c,GAAa,IAAIrH,MAAOsH,cAC9Bvb,QAAQC,IAAIqb,GACZ,IAAME,EAAUnf,eAAeC,QAAQ,QACjC+R,EAAO7R,KAAKI,MAAMqe,SAASQ,aAAazM,OACxCpM,EAAQpG,KAAKI,MAAMqe,SAASpX,MAC5BhE,EAAOrD,KAAKI,MAAM+B,WAClBqc,EAAa5b,IAAOS,GAAMqL,OAAO,cACvClL,QAAQC,IAAIJ,GACZG,QAAQC,IAAI+a,GbotBb,SAA+B1I,EAAWnN,EAASC,EAAMxB,EAAW3C,EAAMua,EAASnN,EAAMzL,EAAOoY,GACrG,IAAM3V,EAAO,CACXiN,UAAWA,EACXnN,QAASA,EACTC,KAAMA,EACNxB,UAAWA,EACX3C,KAAMA,EACNua,QAASA,EACTnN,KAAMA,EACNzL,MAAOA,EACP8Y,WAAYV,GAEd,OAAOnY,IAAMyC,KAAK,0BAA2BD,Ga/tBvCqB,CAAkClK,KAAKI,MAAMqe,SAASU,UAAUlM,OAAQjT,KAAKN,MAAMoX,aAAcgI,EAAY9e,KAAKI,MAAMqe,SAASzN,UAAWhR,KAAKN,MAAM2e,YAAaW,EAASnN,EAAMzL,EAAOoY,GACrLrU,MAAK,SAAAtF,GACFrB,QAAQC,IAAI,OAASwK,KAAKC,UAAUrJ,EAAKA,OACzC,EAAK5E,SACD,CACIme,UAAU,EACVtH,kBAAchV,EACdkD,QAAQ,OAGnBuF,OAAM,SAAAC,GACHhH,QAAQC,IAAI,QAAUwK,KAAKC,UAAU1D,S,sCAI7CxK,KAAKC,SACD,CACIme,UAAU,M,iCAKXxD,GAEP,OADmB,IAAInD,KAAKmD,GAAWwE,WAAa,IAAM,IAAI3H,KAAKmD,GAAWyE,e,kCAY9E,IAAIC,EAAetf,KAAKN,MAAM4e,aAE9B,OADA9a,QAAQC,IAAI6b,GACgB,IAAxBA,EAAa7c,OACN,yBAAK9B,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQC,WAAY,WAA3D,mCAMPye,EAAa7c,OAAS,IACtB6c,EAAeA,EAAavQ,MAAK,SAACC,EAAGC,GAGjC,OAFgBrM,IAAOA,IAAOoM,EAAEpG,KAAM,yBAAyB8F,OAAO,uBAAwB,YAAY1L,UAC1FJ,IAAOA,IAAOqM,EAAErG,KAAM,yBAAyB8F,OAAO,uBAAwB,YAAY1L,UAC3E,GAAK,MAIzBsc,EAAa5S,KAAI,SAAUtC,EAAM5H,EAAO6H,GACvD,IAhMYkV,EAgMN3W,EAAOhG,IAAOwH,EAAKxB,KAAM,yBAAyB8F,OAAO,uBACzDsJ,EAAYpV,IAAOqV,IAAIrP,GAAMsP,SAC7BsH,EAAO,6BAAMpV,EAAK4U,QAAX,qBAAuBpc,IAAOoV,GAAWtJ,OAAO,uBAAhD,gBACb,OACI,yBAAKxO,IAAKsC,EAAOrB,UAAU,cACvB,yBAAKA,UAAU,WACX,yBAAKR,MAAO,CAAEI,OAAQ,OAAQsS,MAAO,OAAQoM,aAAc,MAAO1J,gBAAiB,oBAAqBnV,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WAC3J,wBAAIF,MAAO,CAAEwO,MAAO,UAApB,OAvMJoQ,EAuMsDnV,EAAK0L,UAtM3ElW,OAAO8f,UAAUH,GACVA,EAAY,EAAIA,EAAhB,WAAgCA,EAAUxd,YAG9C,QAqMa,yBAAKpB,MAAO,CAAE4O,SAAU,SACnBnF,EAAKyH,KAELzH,EAAKzB,UAGd,kBAAC,KAAD,CAAS0P,UAAU,QAAQlU,MAAOqb,GAC9B,6BACI,yBAAKne,IAAKse,KAAYpe,IAAI,wB,2CAmB7Bqe,GAAe5f,KAAKC,SAAS,CAAEke,eAAgByB,M,oCACrD,IAAD,OAEV,OADa5f,KAAKI,MAAM2X,WAGhB,yBAAKtE,QAAS,kBAAM,EAAKoM,oBAAoBlf,MAAO,CAAEC,QAAkC,GAAzBZ,KAAKN,MAAMC,WAAkB,OAAS,OAAQ6U,OAAQ,YACjH,yBAAKnT,IAAKoT,KAAUlT,IAAI,cAI7B,O,+BAED,IAAD,OACG4C,EAAUnE,KAAKI,MAAf+D,MACF2b,EAAa9f,KAAK+f,cACxB,OACI,yBAAK5e,UAAU,uBACX,yBAAKA,UAAU,sBACX,wBAAIR,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBAAqBhL,GAC1D2b,GAEL,yBAAK3e,UAAU,wBACX,yBAAKA,UAAU,eACVnB,KAAKggB,cAGd,yBAAKrf,MAAO,CAAEC,QAASZ,KAAKN,MAAM0e,SAAW,QAAU,SACnD,yBAAKzd,MAAO,CAAEuU,QAAS,WAAYtU,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WACtF,yBAAKN,MAAM,eAAKI,MAAO,CAAEC,QAAS,OAAQyS,MAAO,IAAKtS,OAAQ,OAAQyS,eAAgB,SAAU3S,WAAY,SAAU6X,OAAQ,oBAAqB+G,aAAc,MAAOvQ,YAAa,QAArL,gBACA,kBAAC,KAAD,CAAOmH,YAAY,uCAAS9V,MAAOP,KAAKN,MAAMoX,aAAc3D,SAAUnT,KAAK+W,iBAE/E,yBAAKpW,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WACjE,yBAAKF,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaC,cAAe,SAC5E,kBAAC,KAAD,CAAQwS,QAAS,kBAAM,EAAKwM,kBAA5B,gBACA,kBAAC,KAAD,CAAQxM,QAAS,kBAAM,EAAKyM,gBAAgBzb,KAAK,WAAjD,wB,GA/PMjF,cCJnB2gB,G,iLAPP,OACI,kBAAC,GAAD,CAAsBhe,WAAYS,IAAOA,MAAS8L,OAAO,YAAY,YAAY1L,UAAY+I,OAAQ/L,KAAKI,MAAM2L,OAAQ5H,MAAM,2BAAOU,KAAM7E,KAAKI,MAAMggB,aAAcrI,WAAY/X,KAAKI,MAAM2X,iB,GAJ5KvY,aCoBZ6gB,I,wLAbP,OACI,yBAAKlf,UAAU,wBACX,yBAAKR,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,oBAAqBG,WAAY,MAAO1O,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WAAtI,oBACA,yBAAKF,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWC,cAAe,MAAO+Y,UAAW,SAC5F,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAcjO,OAAQ,EAAGgM,YAAY,KAEzC,kBAAC,GAAD,W,GATYvY,c,kCC+QtB8gB,GAAW,CACbC,WAAY,CACR,CAAEC,EAAG,GAAIC,IAAK,IAAKC,IAAK,KACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,KACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,KACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,KACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,MACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,MACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,MACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,MACxB,CAAEF,EAAG,GAAIC,IAAK,IAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,KACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,IAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,KACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,OAE7BC,cAAe,CACX,CAAEH,EAAG,GAAIC,IAAK,IAAKC,IAAK,KACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,KACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,KACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,KACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,KACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,MACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,MACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,MACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,MACxB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MAE7BE,WAAY,CACR,CAAEJ,EAAG,EAAGC,IAAK,KAAMC,IAAK,MACxB,CAAEF,EAAG,EAAGC,IAAK,KAAMC,IAAK,MACxB,CAAEF,EAAG,EAAGC,IAAK,KAAMC,IAAK,MACxB,CAAEF,EAAG,EAAGC,IAAK,KAAMC,IAAK,MACxB,CAAEF,EAAG,EAAGC,IAAK,KAAMC,IAAK,MACxB,CAAEF,EAAG,EAAGC,IAAK,KAAMC,IAAK,MACxB,CAAEF,EAAG,EAAGC,IAAK,KAAMC,IAAK,OAE5BG,aAAc,CACV,CAAEL,EAAG,EAAGC,IAAK,KAAMC,IAAK,MACxB,CAAEF,EAAG,EAAGC,IAAK,KAAMC,IAAK,MACxB,CAAEF,EAAG,EAAGC,IAAK,KAAMC,IAAK,MACxB,CAAEF,EAAG,EAAGC,IAAK,KAAMC,IAAK,KACxB,CAAEF,EAAG,EAAGC,IAAK,KAAMC,IAAK,MACxB,CAAEF,EAAG,EAAGC,IAAK,KAAMC,IAAK,MACxB,CAAEF,EAAG,EAAGC,IAAK,KAAMC,IAAK,QCvGjBI,G,2MA7OXphB,MAAQ,CACJqhB,UAAW,M,mFAEM,IAAD,EAE0B/gB,KAAKI,MAAvC8B,EAFQ,EAERA,WAAY8e,EAFJ,EAEIA,QAASC,EAFb,EAEaA,SAC7Bzd,QAAQC,IAAIwd,QACKnf,IAAbmf,QAC2Bnf,IAAvBmf,EAASC,gBAAiDpf,IAAtBmf,EAASE,eAC1Brf,IAAfI,IACAlC,KAAKC,SAAS,CAAE8gB,UAAW7e,EAAWO,SACtC2e,KAAU,IAAMJ,GAASK,SACzBrhB,KAAKshB,e,2CAMC,IAAD,EACyBthB,KAAKI,MAAvC8B,EADS,EACTA,WAAY8e,EADH,EACGA,QAASC,EADZ,EACYA,SACrBF,EAAc/gB,KAAKN,MAAnBqhB,UACRvd,QAAQC,IAAIwd,QACKnf,IAAbmf,QAC2Bnf,IAAvBmf,EAASC,gBAAiDpf,IAAtBmf,EAASE,eAC1Brf,IAAfI,GACIA,EAAWO,SAAWse,IACtB/gB,KAAKC,SAAS,CAAE8gB,UAAW7e,EAAWO,SACtC2e,KAAU,IAAMJ,GAASK,SACzBrhB,KAAKshB,e,kCAQZ,IAAD,EACiEthB,KAAKI,MAAtEyP,EADA,EACAA,OAAQmR,EADR,EACQA,QAAS9e,EADjB,EACiBA,WAAY+e,EAD7B,EAC6BA,SAAU5N,EADvC,EACuCA,MAAOtS,EAD9C,EAC8CA,OAAQwgB,EADtD,EACsDA,OAC9D,GAAiB,OAAbN,QAAkCnf,IAAbmf,EACrB,OAAO,KAEXzd,QAAQC,IAAIwd,GACZ,IAAMO,EAAY5hB,OAAOqhB,EAASC,WAC5BO,EAAW7hB,OAAOqhB,EAASE,UAC3BzO,EAAWuO,EAASS,SACpBC,EAAoB/e,IAAO8P,EAAU,YAAY1P,UAA2C,IAAjB,EAAZwe,EAAiBC,GAAiB,GAAK,GAAK,IAYjH,IAAMG,EATN,SAAoBtB,EAAUzQ,GAC1B,GAAe,MAAXA,GAA6B,MAAXA,EAAgB,CAClC,IAAMgS,EAAMvB,EAASC,WACrB,MAAO,CAACsB,EAAIA,EAAIpf,OAAS,GAAGge,IAAKoB,EAAIA,EAAIpf,OAAS,GAAGie,KAEzD,IAAMmB,EAAMvB,EAASK,cACrB,MAAO,CAACkB,EAAIA,EAAIpf,OAAS,GAAGge,IAAKoB,EAAIA,EAAIpf,OAAS,GAAGie,KAG5CoB,CAAWxB,GAAUzQ,GAG9B2Q,EAAIY,OACHW,OAAO,CAAC,EAAG,OACXC,MAAM,CAACjhB,EAAQ,IAEhBkhB,EAAIb,OACHW,OAAO,CAAC,GAAI,KACZC,MAAM,CAAC,EAAG3O,IAGX6O,EAAQd,KAAYZ,GACnB2B,MAAM,IACNC,SAAS,EAAG,GACZC,YAAY,IACZC,YAAW,SAAUC,EAAG/f,GAAS,OAAiB,KAAVA,EAAe+f,EAAI,MAAQA,KAGpEC,EAAQpB,KAAWa,GAClBE,MAAM,IACNC,SAAS,EAAG,GACZC,aAAa,IACbC,YAAW,SAAUC,EAAG/f,GAAS,OAAO+f,EAAI,OAE7CE,EAAarB,KAAYZ,GACxBsB,WAAWF,GACXQ,SAAS,EAAG,GACZC,aAAa,IACbC,YAAW,SAAUC,EAAG/f,GACrB,OAAc,IAAVA,EACO,QAEG,IAAVA,EACO,QAEJ,QAEXkgB,EAAMtB,KAAU,IAAMG,GACrBoB,OAAO,OACPC,KAAK,KAAM5B,GACXrgB,MAAM,SAAU,SAChBA,MAAM,QAAS,QACfgiB,OAAO,KACPC,KAAK,YAAa,oBAIvBF,EAAIC,OAAO,KACNE,KAAKX,GACLU,KAAK,QAAS,QAInBF,EAAIC,OAAO,KACNE,KAAKL,GACLI,KAAK,QAAS,QACdA,KAAK,YAAa,gBAA0B7hB,EAAS,KAE1D2hB,EAAIC,OAAO,KACNE,KAAKJ,GACLG,KAAK,QAAS,QACdA,KAAK,YAAa,aAAevP,EAAQ,QAE9C,IAAK,IAAI7Q,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CACrC,IAAMoN,EAAiB,IAARpN,EACfkgB,EAAIC,OAAO,QACNC,KAAK,KAAM,GACXA,KAAK,KAAMpC,EAAE5Q,IACbgT,KAAK,KAAMvP,GACXuP,KAAK,KAAMpC,EAAE5Q,IACbjP,MAAM,SAAU,0BAChBA,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,KAgBnC,IAAK,IAAI6B,EAAQ,GAAIA,EAAQ,GAAIA,IACzBA,EAAQ,GAAK,GACbkgB,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAEzf,IACbogB,KAAK,KAAM,GACXA,KAAK,KAAMX,EAAEzf,IACbogB,KAAK,KAAM7hB,GACXJ,MAAM,SAAU,0BAChBA,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,KAIvC,GAAe,MAAXkP,GAA6B,MAAXA,EAAgB,CAClC,IAAK,IAAIrN,EAAQ,EAAGA,EAAQ8d,GAASC,WAAW9d,OAAS,EAAGD,IACxDkgB,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE3B,GAASC,WAAW/d,GAAOge,IACxCoC,KAAK,KAAMpC,EAAEF,GAASC,WAAW/d,GAAOie,MACxCmC,KAAK,KAAMX,EAAE3B,GAASC,WAAW/d,EAAQ,GAAGge,IAC5CoC,KAAK,KAAMpC,EAAEF,GAASC,WAAW/d,EAAQ,GAAGie,MAC5C9f,MAAM,SAAU,aAChBA,MAAM,eAAgB,GAG/B,IAAK,IAAI6B,EAAQ,EAAGA,EAAQ8d,GAASC,WAAW9d,OAAS,EAAGD,IACxDkgB,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE3B,GAASC,WAAW/d,GAAOge,IACxCoC,KAAK,KAAMpC,EAAEF,GAASC,WAAW/d,GAAOke,MACxCkC,KAAK,KAAMX,EAAE3B,GAASC,WAAW/d,EAAQ,GAAGge,IAC5CoC,KAAK,KAAMpC,EAAEF,GAASC,WAAW/d,EAAQ,GAAGke,MAC5C/f,MAAM,SAAU,aAChBA,MAAM,eAAgB,OAG9B,CACD,IAAK,IAAI6B,EAAQ,EAAGA,EAAQ8d,GAASK,cAAcle,OAAS,EAAGD,IAC3DkgB,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE3B,GAASK,cAAcne,GAAOge,IAC3CoC,KAAK,KAAMpC,EAAEF,GAASK,cAAcne,GAAOie,MAC3CmC,KAAK,KAAMX,EAAE3B,GAASK,cAAcne,EAAQ,GAAGge,IAC/CoC,KAAK,KAAMpC,EAAEF,GAASK,cAAcne,EAAQ,GAAGie,MAC/C9f,MAAM,SAAU,aAChBA,MAAM,eAAgB,GAG/B,IAAK,IAAI6B,EAAQ,EAAGA,EAAQ8d,GAASK,cAAcle,OAAS,EAAGD,IAC3DkgB,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE3B,GAASK,cAAcne,GAAOge,IAC3CoC,KAAK,KAAMpC,EAAEF,GAASK,cAAcne,GAAOke,MAC3CkC,KAAK,KAAMX,EAAE3B,GAASK,cAAcne,EAAQ,GAAGge,IAC/CoC,KAAK,KAAMpC,EAAEF,GAASK,cAAcne,EAAQ,GAAGke,MAC/C/f,MAAM,SAAU,aAChBA,MAAM,eAAgB,GAKnC,IAFA,IAAMmiB,EAAa5gB,EAEVM,EAAQ,EAAGA,EAAQsgB,EAAWrgB,OAAQD,IAAS,CACpD,IAAME,EAAUogB,EAAWtgB,GAGrBoG,EAFUlG,EAAQG,QAAQd,WAAWe,OAC1BJ,EAAQK,QAAQhB,WAAWe,OAGtCkR,GADkBpR,IAAOgG,EAAM,gBAAgB5F,UACpB2e,GAAnB,OAEV3N,EAAQ,KAGRA,EAAQ,IAGZ0O,EAAIC,OAAO,UACNC,KAAK,KAAMX,EAAEjO,IACb4O,KAAK,KAAMpC,EAA2B,IAAzB5gB,OAAO8C,EAAQO,UAC5B2f,KAAK,IAAK,KACVjiB,MAAM,OAAQ,a,+BAMjB,IAAD,EACuBX,KAAKI,MAAzBmhB,EADH,EACGA,OADH,EACWP,QAChB,OACI,yBAAK5K,GAAImL,Q,GAvOO/hB,aCkObujB,G,4LAjOU,IAAD,EACgB/iB,KAAKI,MAA7B8B,EADQ,EACRA,WAAY8e,EADJ,EACIA,QACpBhhB,KAAKC,SAAS,CAAE8gB,UAAW7e,IAC3Bkf,KAAU,IAAMJ,GAASK,SACzBrhB,KAAKshB,c,2CAGa,IAAD,EACethB,KAAKI,MAA7B8B,EADS,EACTA,WAAY8e,EADH,EACGA,QAEhB9e,IADkBlC,KAAKN,MAAnBqhB,YAEJ/gB,KAAKC,SAAS,CAAE8gB,UAAW7e,IAC3Bkf,KAAU,IAAMJ,GAASK,SACzBrhB,KAAKshB,e,kCAGA,IAAD,EACiEthB,KAAKI,MAAtEyP,EADA,EACAA,OAAQmR,EADR,EACQA,QAAS9e,EADjB,EACiBA,WAAY+e,EAD7B,EAC6BA,SAAU5N,EADvC,EACuCA,MAAOtS,EAD9C,EAC8CA,OAAQwgB,EADtD,EACsDA,OAC9D,GAAiB,OAAbN,QAAkCnf,IAAbmf,EACrB,OAAO,KAEX,IAAMvO,EAAWuO,EAASS,SACpBC,EAAoB/e,IAAO8P,EAAU,YAAY1P,UAcvD,IAAM4e,EAXN,SAAoBtB,EAAUzQ,GAC1B,GAAe,MAAXA,GAA6B,MAAXA,EAAgB,CAClC,IAAMgS,EAAMvB,EAASM,WAErB,OADApd,QAAQC,IAAIoe,GACL,CAACA,EAAIA,EAAIpf,OAAS,GAAGge,IAAKoB,EAAIA,EAAIpf,OAAS,GAAGie,KAEzD,IAAMmB,EAAMvB,EAASO,aACrB,MAAO,CAACgB,EAAIA,EAAIpf,OAAS,GAAGge,IAAKoB,EAAIA,EAAIpf,OAAS,GAAGie,KAI5CoB,CAAWxB,GAAUzQ,GAG9B2Q,EAAIY,OACHW,OAAO,CAAC,KAAM,MACdC,MAAM,CAACjhB,EAAQ,IAIhBkhB,EAAIb,OACHW,OAAO,CAAC,EAAG,IACXC,MAAM,CAAC,EAAG3O,IAEX6O,EAAQd,KAAYZ,GACnB2B,MAAM,IACNC,SAAS,EAAG,GACZC,YAAY,IACZC,YAAW,SAAUC,EAAG/f,GAAS,OAAiB,KAAVA,EAAe+f,EAAI,MAAQA,KAEpEE,EAAarB,KAAYZ,GACxBsB,WAAWF,GACXQ,SAAS,EAAG,GACZC,aAAa,IACbC,YAAW,SAAUC,EAAG/f,GACrB,OAAc,IAAVA,EAAsB,QACZ,IAAVA,EAAsB,QACnB,QAIXggB,EAAQpB,KAAWa,GAClBE,MAAM,GACNC,SAAS,EAAG,GACZC,aAAa,IACbC,YAAW,SAAUC,GAClB,OAAOA,EAAI,OAIfG,EAAMtB,KAAU,IAAMG,GACrBoB,OAAO,OACPC,KAAK,KAAM5B,GACXrgB,MAAM,SAAU,SAChBA,MAAM,QAAS,QACfgiB,OAAO,KACPC,KAAK,YAAa,oBAIvBF,EAAIC,OAAO,KACNE,KAAKX,GACLU,KAAK,QAAS,QAInBF,EAAIC,OAAO,KACNE,KAAKL,GACLI,KAAK,QAAS,QACdA,KAAK,YAAa,gBAA0B7hB,EAAS,KAG1D2hB,EAAIC,OAAO,KACNE,KAAKJ,GACLG,KAAK,QAAS,QACdA,KAAK,YAAa,aAAevP,EAAQ,QAE9C,IAAK,IAAI7Q,EAAQ,EAAGA,EAAQ,EAAGA,IAC3BkgB,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAEzf,IACbogB,KAAK,KAAM,GACXA,KAAK,KAAMX,EAAEzf,IACbogB,KAAK,KAAM7hB,GACXJ,MAAM,SAAU,0BAChBA,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,KAInC,IAAK,IAAI6B,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CACrC,IAAMoN,EAAiB,IAARpN,EAAc,IAC7BkgB,EAAIC,OAAO,QACNC,KAAK,KAAM,GACXA,KAAK,KAAMpC,EAAE5Q,IACbgT,KAAK,KAAMvP,GACXuP,KAAK,KAAMpC,EAAE5Q,IACbjP,MAAM,SAAU,0BAChBA,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,KAenC,GAAe,MAAXkP,GAA6B,MAAXA,EAAgB,CAClC,IAAK,IAAIrN,EAAQ,EAAGA,EAAQ8d,GAASM,WAAWne,OAAS,EAAGD,IACxDkgB,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE3B,GAASM,WAAWpe,GAAOge,IACxCoC,KAAK,KAAMpC,EAAEF,GAASM,WAAWpe,GAAOie,MACxCmC,KAAK,KAAMX,EAAE3B,GAASM,WAAWpe,EAAQ,GAAGge,IAC5CoC,KAAK,KAAMpC,EAAEF,GAASM,WAAWpe,EAAQ,GAAGie,MAC5C9f,MAAM,SAAU,aAChBA,MAAM,eAAgB,GAG/B,IAAK,IAAI6B,EAAQ,EAAGA,EAAQ8d,GAASM,WAAWne,OAAS,EAAGD,IACxDkgB,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE3B,GAASM,WAAWpe,GAAOge,IACxCoC,KAAK,KAAMpC,EAAEF,GAASM,WAAWpe,GAAOke,MACxCkC,KAAK,KAAMX,EAAE3B,GAASM,WAAWpe,EAAQ,GAAGge,IAC5CoC,KAAK,KAAMpC,EAAEF,GAASM,WAAWpe,EAAQ,GAAGke,MAC5C/f,MAAM,SAAU,aAChBA,MAAM,eAAgB,OAG9B,CACD,IAAK,IAAI6B,EAAQ,EAAGA,EAAQ8d,GAASO,aAAape,OAAS,EAAGD,IAC1DkgB,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE3B,GAASO,aAAare,GAAOge,IAC1CoC,KAAK,KAAMpC,EAAEF,GAASO,aAAare,GAAOie,MAC1CmC,KAAK,KAAMX,EAAE3B,GAASO,aAAare,EAAQ,GAAGge,IAC9CoC,KAAK,KAAMpC,EAAEF,GAASO,aAAare,EAAQ,GAAGie,MAC9C9f,MAAM,SAAU,aAChBA,MAAM,eAAgB,GAG/B,IAAK,IAAI6B,EAAQ,EAAGA,EAAQ8d,GAASO,aAAape,OAAS,EAAGD,IAC1DkgB,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE3B,GAASO,aAAare,GAAOge,IAC1CoC,KAAK,KAAMpC,EAAEF,GAASO,aAAare,GAAOke,MAC1CkC,KAAK,KAAMX,EAAE3B,GAASO,aAAare,EAAQ,GAAGge,IAC9CoC,KAAK,KAAMpC,EAAEF,GAASO,aAAare,EAAQ,GAAGke,MAC9C/f,MAAM,SAAU,aAChBA,MAAM,eAAgB,GAMnC,IAFA,IAAMmiB,EAAa5gB,EAEVM,EAAQ,EAAGA,EAAQsgB,EAAWrgB,OAAQD,IAAS,CACpD,IAAME,EAAUogB,EAAWtgB,GAGrBoG,EAFUlG,EAAQG,QAAQd,WAAWe,OAC1BJ,EAAQK,QAAQhB,WAAWe,OAGtCkgB,GADkBpgB,IAAOgG,EAAM,gBAAgB5F,UACpB2e,GAAnB,OACdne,QAAQC,IAAIuf,GACRA,EAAQ,GAAKA,EAAQ,GAGI,IAAzBpjB,OAAO8C,EAAQO,QAAiB,MAChCyf,EAAIC,OAAO,UACNC,KAAK,KAAMX,EAAEe,IACbJ,KAAK,KAAMpC,EAA2B,IAAzB5gB,OAAO8C,EAAQO,UAC5B2f,KAAK,IAAK,KACVjiB,MAAM,OAAQ,Y,+BAgBrB,IAAD,EACuBX,KAAKI,MAAzBmhB,EADH,EACGA,OAAQP,EADX,EACWA,QAChB,OACI,yBAAK5K,GAAImL,GACL,yBAAKnL,GAAI4K,S,GA5NIxhB,aCsGdyjB,G,YAtGX,WAAY7iB,GAAQ,IAAD,8BACf,4CAAMA,KACDV,MAAQ,CACTwjB,oBAAqB,EACrBC,OAAQ,MAJG,E,iFAOC,IACIxP,EADJ,EAQe3T,KAAKI,MAA5B6gB,EARQ,EAQRA,SAAUxC,EARF,EAQEA,cACS3c,IAAvBmf,EAASC,gBAAiDpf,IAAtBmf,EAASE,eAA6Crf,IAAnB2c,EAASpX,OAA0C,OAAnBoX,EAASpX,OAChHrH,KAAKC,SAAS,CAAEkjB,OAAQ1E,EAASpX,MAAO6b,qBATxBvP,EASwDsN,EAASC,UARjF1d,QAAQC,IAAI7D,OAAO+T,IACf/T,OAAO+T,GAAQ,GACR,EAEJ,O,2CAOM,IACGA,EADH,EAQc3T,KAAKI,MAA5B6gB,EARS,EAQTA,SAAUxC,EARD,EAQCA,SACV0E,EAAWnjB,KAAKN,MAAhByjB,YACmBrhB,IAAvBmf,EAASC,gBAAiDpf,IAAtBmf,EAASE,eAA6Crf,IAAnB2c,EAASpX,OAA0C,OAAnBoX,EAASpX,OAC5G8b,IAAW1E,EAASpX,QACpB7D,QAAQC,IAAIwd,GACZjhB,KAAKC,SAAS,CAAEkjB,OAAQ1E,EAASpX,MAAO6b,qBAZ5BvP,EAY4DsN,EAASC,UAXrF1d,QAAQC,IAAI7D,OAAO+T,IACf/T,OAAO+T,GAAQ,GACR,EAEJ,Q,sCAWE,IAAD,EAC2B3T,KAAKI,MAApCgjB,EADI,EACJA,KAAMC,EADF,EACEA,WAAYpC,EADd,EACcA,SACpBqC,EAActjB,KAAKN,MAAMwjB,oBACzB7P,GAASkQ,OAAOC,OAAOC,WAAa,KAAO,EACjD,OAAQH,GACJ,KAAK,EACD,OAAO,kBAAC,GAAD,CAAejQ,MAAOA,EAAOtS,OAHiB,IAGDkgB,SAAUA,EAAU/e,WAAYmhB,EAAY9B,OAAQ,WAAYP,QAAS,eAAgBnR,OAAQuT,EAAK3Q,OAC9J,KAAK,EACD,OAAO,kBAAC,GAAD,CAAgBY,MAAOA,EAAOtS,OALgB,IAKAkgB,SAAUA,EAAU/e,WAAYmhB,EAAY9B,OAAQ,iBAAkBP,QAAS,qBAAsBnR,OAAQuT,EAAK3Q,OAC3K,QACI,OAAO,Q,6CAIIiR,GA0BnB,OAAIA,IAAqB1jB,KAAKN,MAAMwjB,oBAzBP,CACzBtiB,QAAS,OACT4S,eAAgB,SAChB3S,WAAY,SACZE,OAAQ,OACRmU,QAAS,UACTuK,aAAc,MACd1J,gBAAiB,YACjB5G,MAAO,QACPI,SAAU,OACV4K,YAAa,MACbD,YAAa,QACbE,YAAa,YACb5F,OAAQ,WAEmB,CAC3B5T,QAAS,OAAQ4S,eAAgB,SACjC3S,WAAY,SAAUE,OAAQ,OAC9BmU,QAAS,UACTuK,aAAc,MAAO1J,gBAAiB,QACtC5G,MAAO,YAAaI,SAAU,OAC9B4K,YAAa,MAAOD,YAAa,QACjCE,YAAa,YACb5F,OAAQ,a,2CAQKoL,GACjB5f,KAAKC,SAAS,CAAEijB,oBAAqBtD,M,+BAE/B,IAAD,SAEL,OACI,6BACI,yBAAKjf,OAAK,GAAIC,QAAS,OAAQ4S,eAAgB,gBAAiB3S,WAAY,SAAUkV,gBAAiB,YAAa4N,oBAAqB,MAAOC,qBAAsB,MAAO7iB,OAAQ,OAAQmU,QAAS,YAA5L,yBAAiN,QAAjN,4BAAqO,UAArO,IACN,wBAAIvU,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBAAtC,kCACA,yBAAKxO,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWC,cAAe,MAAOJ,WAAY,WAC7F,yBAAKF,MAAOX,KAAK6jB,uBAAuB,GAAIrL,UAAW,kBAAM,EAAKsL,qBAAqB,KAAvF,kBACA,yBAAKnjB,MAAOX,KAAK6jB,uBAAuB,GAAIrL,UAAW,kBAAM,EAAKsL,qBAAqB,KAAvF,oBAGP9jB,KAAK+jB,qB,GAlGMvkB,aCwKbwkB,I,kNApKXtkB,MAAQ,CACJ+e,SAAU,EAAKre,MAAMqe,SACrBL,UAAU,EACV6F,WAAY,GACZnN,kBAAchV,EACdnC,WAAY,EACZukB,QAAS,M,mFAITlkB,KAAK+W,cAAgB/W,KAAK+W,cAAcC,KAAKhX,MAE7C,IAAMwR,EAAOxR,KAAKI,MAAMqe,SAASzN,UAAUjP,WAAWe,OAChD/C,EAAcF,eAAeC,QAAQ,QAC3CE,KAAKC,SAAS,CAAEN,WAAYI,EAAamkB,QAAS1S,IAClDxR,KAAKmkB,sBAAsB3S,K,2CAG3B,IAAMA,EAAOxR,KAAKI,MAAMqe,SAASzN,UAAUjP,WAAWe,OAElD0O,IADYxR,KAAKN,MAAMwkB,UAEvBlkB,KAAKC,SAAS,CAAEikB,QAAS1S,IACzBxR,KAAKmkB,sBAAsB3S,M,4CAGbA,GAAO,IpB0rBY4S,EoB1rBb,QpB0rBaA,EoBzrBI5S,EpB0rBxCnL,IAAMC,IAAI,wCAA0C8d,IoBzrBhDja,MAAK,SAAAtF,GACFrB,QAAQC,IAAI,mCAAqCwK,KAAKC,UAAUrJ,IAChE,EAAK5E,SAAS,CAAEgkB,WAAYpf,EAAKA,UAEpC0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,mCAAqCwK,KAAKC,UAAU1D,S,oCAG9D4M,GACVpX,KAAKC,SAAS,CAAE6W,aAAcM,EAAMC,OAAO9W,U,yCAG3CP,KAAKC,SACD,CACIme,UAAWpe,KAAKN,MAAM0e,a,sCAM9Bpe,KAAKC,SACD,CACIme,UAAU,M,qCAKN,IAAD,OACLU,GAAa,IAAIrH,MAAOsH,epBsoB/B,SAAsCpW,EAAS+O,EAAQtR,EAAOie,EAAYD,GAC/E,IAAMvb,EAAO,CACXF,QAASA,EACT+O,OAAQA,EACRtR,MAAOA,EAAMtD,OACb8F,KAAMyb,EACND,UAAWA,GAEb,OAAO/d,IAAMyC,KAAK,sDAAuDD,IoB7oBnEqB,CAAyClK,KAAKN,MAAMoX,aAAc,GAAI9W,KAAKN,MAAM+e,SAASpX,MAAOyX,EAAY9e,KAAKN,MAAM+e,SAASzN,WAC5H7G,MAAK,SAAAtF,GACFrB,QAAQC,IAAI,mCAAqCwK,KAAKC,UAAUrJ,IAChE,EAAKsf,sBAAsB,EAAKzkB,MAAMwkB,YAEzC3Z,OAAM,SAAAC,GACHhH,QAAQC,IAAI,mCAAqCwK,KAAKC,UAAU1D,OAExExK,KAAKC,SACD,CACIme,UAAU,EACVtH,kBAAchV,M,yCAIN,IAAD,OACf,OAA+B,IAA3B9B,KAAKI,MAAMkkB,YACJ,KAGH,yBAAK7Q,QAAS,kBAAM,EAAKoM,oBAAoBlf,MAAO,CAAEC,QAAkC,GAAzBZ,KAAKN,MAAMC,WAAkB,OAAS,OAAQ6U,OAAQ,YACjH,yBAAKnT,IAAKoT,KAAUlT,IAAI,gB,+BAM9B,IAAD,OA2BL,SAASgjB,EAAY7M,EAAQ9O,GAOzB,IANmBrI,EAMbikB,EAAI5hB,IAAOgG,EAAM,yBAAyB8F,OAAO,uBACjDsJ,EAAYpV,IAAOqV,IAAIuM,GAAGtM,SAC1BuM,EAAc7hB,IAAOoV,GAAWtJ,OAAO,eAC7C,OARkB,QADCnO,EASFmX,SARmB5V,IAAVvB,EACX,KAEJA,GAKgB,qBAAQkkB,EAAc,eAGrDjhB,QAAQC,IAAIzD,KAAKN,MAAMukB,YAEvB,IAzC0BvZ,EAyCpBga,EAAU1kB,KAAKN,MAAMukB,WAAWlV,MAAK,SAACC,EAAGC,GAG3C,OAFgBrM,IAAOoM,EAAEpG,KAAM,wBAAwB5F,UACvCJ,IAAOqM,EAAErG,KAAM,wBAAwB5F,UACxB,GAAK,KAGlC2hB,GA/CoBja,EA+CUga,EA9C5BpiB,MAAMC,QAAQmI,GACU,IAApBA,EAASjI,OAEL,yBAAK9B,MAAO,CAAEI,OAAQ,OAAQuc,YAAa,OAAQ1c,QAAS,OAAQC,WAAY,WAAhF,kCAKW6J,EAASgC,KAAI,SAACtC,EAAM5H,GAAP,OAC5B,yBAAKtC,IAAKsC,EAAOrB,UAAU,iBACvB,yBAAKR,MAAO,CAAE2U,WAAY,aAAelL,EAAKzB,SAC9C,kBAAC,KAAD,CAAS0P,UAAU,WAAWlU,MAAOogB,EAAYna,EAAKwa,OAAQxa,EAAKxB,OAC/D,yBAAKvH,IAAKse,KAAYpe,IAAI,oBAOtC,yBAAKZ,MAAO,CAAEI,OAAQ,OAAQuc,YAAa,OAAQ1c,QAAS,OAAQC,WAAY,WAAhF,mCA4BAgkB,EAAaC,KAAbD,SACR,OACI,yBAAKlkB,MAAO,CAAEokB,aAAc,SACvB/kB,KAAKI,MAAMkkB,YAER,yBAAK3jB,MAAO,CAAEoV,gBAAiB,YAAa4N,oBAAqB,MAAOC,qBAAsB,MAAO7iB,OAAQ,OAAQmU,QAAS,WAAYtU,QAAS,OAAQC,WAAY,WACnK,wBAAIF,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBAAtC,6BAGJ,yBAAKhO,UAAU,eACX,wBAAIR,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBAAtC,4BACCnP,KAAKglB,oBAEd,yBAAK7jB,UAAU,uBACVwjB,GAEL,yBAAKhkB,MAAO,CAAEC,QAASZ,KAAKN,MAAM0e,SAAW,QAAU,SACnD,yBAAKzd,MAAO,CAAEuU,QAAS,WAAYa,gBAAiB,wBAChD,kBAAC8O,EAAD,CAAUzO,GAAG,gBAAgBC,YAAY,mDAAW9V,MAAOP,KAAKN,MAAMoX,aAAc3D,SAAUnT,KAAK+W,cAAekO,UAAU,KAEhI,yBAAKtkB,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WACjE,yBAAKF,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaC,cAAe,SAC5E,kBAAC,KAAD,CAAQwS,QAAS,kBAAM,EAAKwM,kBAA5B,gBACA,kBAAC,KAAD,CAAQxM,QAAS,kBAAM,EAAKyM,gBAAgBzb,KAAK,WAAjD,wB,GA5JPjF,cC2IN0lB,G,2MA/GbC,SAAW,SAAAhhB,GACT,OAAQA,GACN,IAAK,MACL,IAAK,OACH,OACE,6BACE,4BAAKA,GACL,wBAAIxD,MAAO,CAAE4O,SAAU,SAAvB,MAGN,IAAK,KACH,OACE,6BACE,4BAAK,MACL,mCAGN,IAAK,IACH,OACE,6BACE,4BAAK,KACL,mCAGN,IAAK,KACH,OACE,6BACE,4BAAK,MACL,oCAGN,IAAK,KACH,OACE,6BACE,4BAAKpL,GACL,oCAGN,IAAK,MAOL,IAAK,KACH,OACE,6BACE,4BAAKA,GACL,mCAMR,OAAOA,G,0EArFEyE,GAcT,OAAa,OAATA,GAA0B,OAATA,EAEjB,qCACG,MAKL,qCACE,kBAAC,KAAD,CAASyP,UAAU,SAASlU,OAhBLihB,EAgB8Bxc,EAfrC,OAAdwc,GAA+B,OAATxc,EACjB,KAEFhG,IAAOgG,EAAKyc,QAAQtjB,WAAWe,OAAS8F,EAAK0c,QAAQvjB,WAAWe,OAAQ,sBAAsB4L,OAAO,WAV9G,SAAoB0W,GAClB,OAAkB,OAAdA,GAA+B,OAATxc,EACjB,KAEFhG,IAAOgG,EAAKyc,QAAQtjB,WAAWe,OAAS8F,EAAK0c,QAAQvjB,WAAWe,OAAQ,sBAAsB4L,OAAO,SAmBvG6W,CAAW3c,KAjBlB,IAA2Bwc,I,+BAiFpB,MAuBgCplB,KAAKI,MAApCG,EAvBD,EAuBCA,MAAO4D,EAvBR,EAuBQA,MAAOyE,EAvBf,EAuBeA,KAEhB4c,GAzBC,EAuBqBC,OAEXzlB,KAAK0lB,WAAW9c,IAC3Buc,EAAWnlB,KAAKmlB,SAAShhB,GAC/B,OACE,yBAAKxD,MAAO,CACVC,QAAS,OACTsV,iBAlBO,cAmBPnV,OAbO,SAeP,qCAEGokB,GAEH,qCACE,wBACExkB,MAAO,CACL4O,SAAU,OACVJ,MAAOjL,EAAgB3D,EAAO4D,GAAS,QAAU,QAxC3D,SAAqB5D,EAAO4D,GAC1B,MAAc,UAAVA,EACY,OAAV5D,EACK,KAEFA,EAAQ,IAEVA,EAoCAolB,CAAYplB,EAAO4D,KAGvBqhB,O,GAxIiBhmB,aC0FnB,SAASomB,GAAYvb,EAAKzB,GAG7B,IAFA,IAAIid,EAAW,GACTC,EAAald,EAAQ,MAClBpG,EAAQ,EAAGA,EAAQ6H,EAAI5H,OAAQD,IAAS,CAC7C,IAAME,EAAU2H,EAAI7H,GACDI,IAAOF,EAAQ2iB,QAAQtjB,WAAWe,OAASJ,EAAQ4iB,QAAQvjB,WAAWe,OAAQ,sBAAsBE,WACrG8iB,GACdD,EAAS3f,KAAKxD,GAGtB,OAAOmjB,EAGJ,SAASE,GAAqB1b,EAAKzB,EAAMyO,GAC5C,IAAIwO,EAAW,GAQf,OAPAxb,EAAI2b,SAAQ,SAAAtjB,GACe,IAAI+U,KAAK/U,EAAQujB,QAAQC,MAAM,KAAK,GAAIxjB,EAAQujB,QAAQC,MAAM,KAAK,GAAIxjB,EAAQujB,QAAQC,MAAM,KAAK,IAAI/K,WAEvG,IAAI1D,KAAK7O,GAAMuS,WAAazY,EAAQkJ,SAASF,QAAQ2L,IAAW,GAClFwO,EAAS3f,KAAKxD,MAGfmjB,EAoBJ,SAASM,GAAYC,GACxB,SAASC,EAAaC,EAAM/lB,GACxB,QAAcuB,IAAVvB,GAAiC,OAAVA,EACvB,MAAO,GAEX,IAAMgmB,EAAYhmB,EAAM2lB,MAAM,KAC9B,MAAa,OAATI,EACQ,qCAAWC,EAAU,GAArB,SAEC,OAATD,EACQ,yBAAK3lB,MAAO,CAAEC,QAAS,WAAvB,MAAsC,kCAAtC,IAAoD2lB,EAAU,GAA9D,WAA0EA,EAAU,GAApF,MAA0F,kCAA1F,KAEC,OAATD,GAA0B,UAATA,GAA6B,SAATA,EAC7B,yBAAK3lB,MAAO,CAAEC,QAAS,WAAvB,MAAsC,kCAAtC,IAAoD2lB,EAAU,GAA9D,WAA0EA,EAAU,GAApF,MAA0F,kCAA1F,KAEC,UAATD,GAAyC,OAArBA,EAAKnmB,MAAM,MAEvB,yBAAKQ,MAAO,CAAEC,QAAS,WAAvB,MAAsC,kCAAtC,IAAoD2lB,EAAU,GAA9D,WAA0EA,EAAU,GAApF,aAAkGA,EAAU,GAA5G,MAAkH,kCAAlH,WAAuIA,EAAU,GAAjJ,MAAuJ,kCAAvJ,KAEe,OAAvBD,EAAKnmB,MAAM,QACH,yBAAKQ,MAAO,CAAEC,QAAS,WAAvB,MAAsC,kCAAtC,IAAoD2lB,EAAU,GAA9D,UAAyEA,EAAU,GAAnF,MAAyF,kCAAzF,UAA6GA,EAAU,GAAvH,MAA6H,kCAA7H,WAAkJA,EAAU,GAA5J,MAEgB,OAAxBD,EAAKnmB,MAAM,SACH,yBAAKQ,MAAO,CAAEC,QAAS,WAAvB,MAAsC,kCAAtC,IAAoD2lB,EAAU,GAA9D,WAA0EA,EAAU,GAApF,aAAkGA,EAAU,GAA5G,MAAkH,kCAAlH,WAAuIA,EAAU,GAAjJ,MAAuJ,kCAAvJ,MAELhmB,EAGX,IAAIimB,EAAY,GAChB,GAAIlkB,MAAMC,QAAQ6jB,GACd,IAAK,IAAI5jB,EAAQ,EAAGA,EAAQ4jB,EAAK3jB,OAAQD,IAAS,CAC9C,IAAME,EAAU0jB,EAAK5jB,GACrB,QAAgBV,IAAZY,EAAuB,CACvB,IAAM+jB,EAAgB/jB,EAAQgkB,QAAQ3kB,WACtC,GAAkC,OAA9B0kB,EAActmB,MAAM,OAA8C,OAA9BsmB,EAActmB,MAAM,MAAgB,CACxE,IAAMwmB,EAAYF,EAAcP,MAAM,KAChC/hB,EAAQwiB,EAAU,GAElBC,EAAW,CACb,KAAQziB,EACR,QAAWkiB,EAAaliB,EAHdwiB,EAAU,IAIpB,KAAQjkB,EAAQG,QAAQd,WAAWe,OACnC,KAAQJ,EAAQK,SAEpByjB,EAAUtgB,KAAK0gB,KAK/B,OAAOJ,E,IX8KIK,G,2MA9VXnnB,MAAQ,CACJonB,OAAQ,CAAC,CAAE,gBAAmB,CAAE,KAAQ,IAAM,SAAY,KAC1DC,SAAU,KACVC,UAAW,KACXC,SAAU,KAEVC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,QAAS,GAETC,cAAe,KACfrE,OAAQ,KACRsE,QAAS,M,mFAEQ,IAAD,OAChB5c,GAAwB,gBACnBV,MAAK,SAAAa,GACFxH,QAAQC,IAAI,iCAAmCwK,KAAKC,UAAUlD,EAAOnG,OACrE,EAAK5E,SAAS,CACV6mB,OAAQ9b,EAAOnG,UAGtB0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,iCAAmCwK,KAAKC,UAAU1D,OATtD,MAWiBxK,KAAKI,MAA9B+B,EAXQ,EAWRA,WAAYsc,EAXJ,EAWIA,SACdiJ,EAAO9kB,IAAO5C,KAAKI,MAAMqe,SAASxN,UAAW,YAAYjO,UAC/DhD,KAAKC,SAAS,CAAEunB,cAAerlB,EAAYghB,OAAQ1E,EAASpX,MAAOogB,QAASC,IAC5E1nB,KAAK2nB,WAAWxlB,EAAYsc,EAASpX,MAAOqgB,K,2CAG1B,IAAD,EACgB1nB,KAAKI,MAA9B+B,EADS,EACTA,WAAYsc,EADH,EACGA,SADH,EAE0Bze,KAAKN,MAAxC8nB,EAFS,EAETA,cAAerE,EAFN,EAEMA,OAAQsE,EAFd,EAEcA,QACzBC,EAAO9kB,IAAO5C,KAAKI,MAAMqe,SAASxN,UAAW,YAAYjO,UAC/DQ,QAAQC,IAAI+jB,EAAerlB,GAC3BqB,QAAQC,IAAIgb,EAASpX,MAAO8b,GAC5B3f,QAAQC,IAAIikB,EAAMD,GACdD,IAAkBrlB,GAAcghB,IAAW1E,EAASpX,OAASogB,IAAYC,IACzE1nB,KAAKC,SAAS,CAAEunB,cAAerlB,EAAYghB,OAAQ1E,EAASpX,MAAOogB,QAASC,IAC5E1nB,KAAK2nB,WAAWxlB,EAAYsc,EAASpX,MAAOqgB,M,iCAGzCvlB,EAAY0L,EAAK6Z,GAAO,IAAD,OAO9B,IAAME,EAAchlB,IAAO8kB,GAAMhZ,OAAO,cAClCmZ,EAPN,SAA6B1lB,GACzB,IAAM2lB,GAAoB,IAAIrQ,MAAO0D,UAAYhZ,EAGjD,OADiBuC,SAASojB,EADH,QACyC,EAI9CC,CAAoB5lB,GAC1C+H,GAAuC2D,EAAK+Z,GACvCzd,MAAK,SAAAtF,GAAU,EAAK5E,SAAS,CAAEinB,SAAUriB,EAAKA,UAC9C0F,OAAM,SAAAC,GAAShH,QAAQC,IAAI,iCAAmCwK,KAAKC,UAAU1D,OAClFN,GAAuC2D,EAAK+Z,GACvCzd,MAAK,SAAAtF,GAAU,EAAK5E,SAAS,CAAEknB,SAAUtiB,EAAKA,UAC9C0F,OAAM,SAAAC,GAAShH,QAAQC,IAAI,iCAAmCwK,KAAKC,UAAU1D,OAClFN,GAAuC2D,EAAK+Z,GACvCzd,MAAK,SAAAtF,GAAU,EAAK5E,SAAS,CAAEmnB,SAAUviB,EAAKA,UAC9C0F,OAAM,SAAAC,GAAShH,QAAQC,IAAI,iCAAmCwK,KAAKC,UAAU1D,OAClFN,GAAuC2D,EAAK+Z,GACvCzd,MAAK,SAAAtF,GAAU,EAAK5E,SAAS,CAAEonB,SAAUxiB,EAAKA,UAC9C0F,OAAM,SAAAC,GAAShH,QAAQC,IAAI,iCAAmCwK,KAAKC,UAAU1D,OAClFN,GAAuC2D,EAAK+Z,GACvCzd,MAAK,SAAAtF,GAAU,EAAK5E,SAAS,CAAEqnB,SAAUziB,EAAKA,UAC9C0F,OAAM,SAAAC,GAAShH,QAAQC,IAAI,iCAAmCwK,KAAKC,UAAU1D,OAClFN,GAAsC2D,EAAKga,EAAe,MAAO,YAC5D1d,MAAK,SAAAtF,GAAU,EAAK5E,SAAS,CAAEsnB,QAAS1iB,EAAKA,UAC7C0F,OAAM,SAAAC,GAAShH,QAAQC,IAAI,gCAAkCwK,KAAKC,UAAU1D,S,6CAE9DH,EAAKgN,GAAS,IAAD,OACxBoH,EAAaze,KAAKI,MAAlBqe,SACAqI,EAAW9mB,KAAKN,MAAhBonB,OAEJkB,OAAclmB,EACZmmB,EAAkBnB,EAAOoB,MAAK,SAAA/c,GAAI,OAAgD,OAA5CA,EAAKgd,gBAAgBtW,KAAK1R,MAAMkX,MACtE+Q,EAAc/d,EAAI5H,OACLzC,KAAKN,MAAhByjB,SACO1E,EAASpX,OACpBgD,EAAI2b,SAAQ,SAAC7a,EAAM3I,GACf0H,GAAsCuU,EAASpX,MAAO8D,EAAKkd,KAAM5J,EAAS6J,OAAQnd,EAAKod,UAClFpe,MAAK,SAAAtF,GACFrB,QAAQC,IAAI,gCAAkCwK,KAAKC,UAAUrJ,EAAKA,OAClE,IAAM2jB,EAAU3jB,EAAKA,KAGf4jB,EAAmBR,EAAgBS,SAASR,MAAK,SAAAS,GAAO,OAAIA,EAAQzoB,MAAQmX,KAC5EuR,EAAK,IAAIC,OAAOJ,EAAiBK,UAAWL,EAAiBM,aAEnEP,EAAQxC,SAAQ,SAAAtjB,GACZ,IAAMvC,EAAQuC,EAAQsmB,QAAQ7oB,MAAMyoB,GACpC,GAAc,OAAVzoB,EAAgB,CAChB,IAAM8oB,EAAiB9d,EAAK8a,QAAU,IAAM9a,EAAK+d,QAC3CC,EAAuBvmB,IAAOqmB,EAAenmB,OAAQ,uBAAuBE,UAC5EomB,EAAajpB,EAAMsoB,EAAiBtT,UAEvB,KAAfiU,QAAoCtnB,IAAfsnB,GAA2C,OAAfA,GAAuBD,EAvB9E,IAwBMnB,EAAcoB,EACC,OAAX/R,EACA+D,GAAW4M,EACO,QAAX3Q,EACPgE,GAAa2M,EACK,OAAX3Q,IACPiE,GAAW0M,QAK3B,EAAKqB,oBAAoBjB,EAAa5lB,EAAO6U,MAEhD9M,OAAM,SAAAC,GACHhH,QAAQC,IAAI,gCAAkCwK,KAAKC,UAAU1D,IAC7D,EAAK6e,oBAAoBjB,EAAa5lB,EAAO6U,W,0CAK7C+Q,EAAakB,EAAYjS,GACzC,IADiD,EAEPrX,KAAKN,MAAvCqnB,EAFyC,EAEzCA,SAAUC,EAF+B,EAE/BA,UAAWC,EAFoB,EAEpBA,SACZ,OAAbF,GAAmC,OAAdC,GAAmC,OAAbC,GACvCqC,IAAelB,EAAc,IACd,OAAX/Q,GAAmBrX,KAAKN,MAAMqnB,SAJzB,EAKL/mB,KAAKC,SAAS,CAAE8mB,SAAU/mB,KAAKN,MAAMqnB,SAAW,IAC9B,QAAX1P,GAAoBrX,KAAKN,MAAMsnB,UANjC,EAOLhnB,KAAKC,SAAS,CAAE+mB,UAAWhnB,KAAKN,MAAMsnB,UAAY,IAChC,SAAX3P,GAAqBrX,KAAKN,MAAMunB,SARlC,GASLjnB,KAAKC,SAAS,CAAEgnB,SAAUjnB,KAAKN,MAAMunB,SAAW,O,oCAO5D,MAAe,aADIjnB,KAAKI,MAAhBqlB,OAEG,KAGP,yBAAK9kB,MAAO,CAAEoV,gBAAiB,YAAa4N,oBAAqB,MAAOC,qBAAsB,MAAO7iB,OAAQ,OAAQmU,QAAS,WAAYtU,QAAS,OAAQC,WAAY,WACnK,wBAAIF,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBAAtC,iD,+BAKR,SAASoa,EAAYtjB,GACjB,OAAqB,IAAjBA,EAAMxD,OACC,KAEJwD,EAAMA,EAAMxD,OAAS,GAL3B,MAQ0BzC,KAAKI,MAA5B+B,EARH,EAQGA,WAAYsjB,EARf,EAQeA,OARf,EASuDzlB,KAAKN,MAAzDwnB,EATH,EASGA,SAAUC,EATb,EASaA,SAAUC,EATvB,EASuBA,SAAUC,EATjC,EASiCA,SAAUE,EAT3C,EAS2CA,QAE1CiC,EAAeC,GAAuBvC,EAAU/kB,GAChDunB,EAAeD,GAAuBtC,EAAUhlB,GAChDwnB,EAAeF,GAAuBrC,EAAUjlB,GAChDynB,EAAeH,GAAuBpC,EAAUllB,GAGhD0nB,EAAkBJ,GAAgClC,EAASplB,EAAY,MAC7EnC,KAAK8pB,uBAAuBD,EAAiB,MAE7C,IAAME,EAAkBN,GAAgClC,EAASplB,EAAY,MAC7EnC,KAAK8pB,uBAAuBC,EAAiB,MAE7C,IAAMC,EAAoBP,GAAgClC,EAASplB,EAAY,iBAC/EnC,KAAK8pB,uBAAuBE,EAAmB,OAE/C,IAAMC,EAAUV,EAAYC,EAAahlB,QAAO,SAAUjE,EAAOiC,EAAOyD,GACpE,OAAyB,OAAlB1F,EAAM0pB,YAEXC,EAAMX,EAAYG,EAAallB,QAAO,SAAUjE,EAAOiC,EAAOyD,GAChE,OAAuB,OAAhB1F,EAAM4pB,UAEXC,EAAMb,EAAYG,EAAallB,QAAO,SAAUjE,EAAOiC,EAAOyD,GAChE,OAAuB,OAAhB1F,EAAM8pB,UAEXC,EAAOf,EAAYG,EAAallB,QAAO,SAAUjE,EAAOiC,EAAOyD,GACjE,OAAuB,OAAhB1F,EAAMgqB,UAEXC,EAAMjB,EAAYG,EAAallB,QAAO,SAAUjE,EAAOiC,EAAOyD,GAChE,OAAuB,OAAhB1F,EAAMkqB,UAEXC,EAAWnB,EAAYG,EAAallB,QAAO,SAAUjE,EAAOiC,EAAOyD,GACrE,OAAuB,OAAhB1F,EAAMoqB,UAEXC,EAAKrB,EAAYI,EAAanlB,QAAO,SAAUjE,EAAOiC,EAAOyD,GAC/D,OAAuB,OAAhB1F,EAAMsqB,UAEXC,EAAIvB,EAAYI,EAAanlB,QAAO,SAAUjE,EAAOiC,EAAOyD,GAC9D,OAAuB,OAAhB1F,EAAM8pB,UAEXU,EAAKxB,EAAYI,EAAanlB,QAAO,SAAUjE,EAAOiC,EAAOyD,GAC/D,OAAuB,OAAhB1F,EAAMgqB,UAEXS,EAAIzB,EAAYI,EAAanlB,QAAO,SAAUjE,EAAOiC,EAAOyD,GAC9D,OAAuB,OAAhB1F,EAAM0qB,UAEXC,EAAM3B,EAAYI,EAAanlB,QAAO,SAAUjE,EAAOiC,EAAOyD,GAChE,OAAuB,OAAhB1F,EAAM4qB,UAEXC,EAAM7B,EAAYI,EAAanlB,QAAO,SAAUjE,EAAOiC,EAAOyD,GAChE,OAAuB,OAAhB1F,EAAM8qB,UAEXC,EAAK/B,EAAYK,EAAaplB,QAAO,SAAUjE,EAAOiC,EAAOyD,GAC/D,OAAsB,OAAf1F,EAAMgrB,SAEXC,EAAOjC,EAAYK,EAAaplB,QAAO,SAAUjE,EAAOiC,EAAOyD,GACjE,OAAsB,OAAf1F,EAAMkrB,SAEXC,EAAKnC,EAAYK,EAAaplB,QAAO,SAAUjE,EAAOiC,EAAOyD,GAC/D,OAAsB,OAAf1F,EAAMorB,SAEXC,EAAMrC,EAAYK,EAAaplB,QAAO,SAAUjE,EAAOiC,EAAOyD,GAChE,OAAsB,OAAf1F,EAAMsrB,SAEXC,EAAMvC,EAAYI,EAAanlB,QAAO,SAAUjE,EAAOiC,EAAOyD,GAChE,OAAuB,OAAhB1F,EAAMwrB,UAGXC,EAAKzC,EAAYI,EAAanlB,QAAO,SAAUjE,EAAOiC,EAAOyD,GAC/D,OAAuB,OAAhB1F,EAAM0rB,UAEXC,EAAM3C,EAAYI,EAAanlB,QAAO,SAAUjE,EAAOiC,EAAOyD,GAChE,OAAuB,OAAhB1F,EAAM4rB,UAEXC,EAAM7C,EAAYI,EAAanlB,QAAO,SAAUjE,EAAOiC,EAAOyD,GAChE,OAAuB,OAAhB1F,EAAM8rB,UAEXC,EAAO/C,EAAYI,EAAanlB,QAAO,SAAUjE,EAAOiC,EAAOyD,GACjE,OAAuB,OAAhB1F,EAAMgsB,UAEXC,EAAOjD,EAAYI,EAAanlB,QAAO,SAAUjE,EAAOiC,EAAOyD,GACjE,OAAuB,OAAhB1F,EAAMksB,UAEXC,EAAOnD,EAAYI,EAAanlB,QAAO,SAAUjE,EAAOiC,EAAOyD,GACjE,OAAuB,OAAhB1F,EAAMoqB,UAEXgC,EAAUpD,EAAYI,EAAanlB,QAAO,SAAUjE,EAAOiC,EAAOyD,GACpE,OAAuB,OAAhB1F,EAAMkqB,UAEXmC,EAAOrD,EAAYI,EAAanlB,QAAO,SAAUjE,EAAOiC,EAAOyD,GACjE,OAAuB,OAAhB1F,EAAMssB,UAEXC,EAAOvD,EAAYI,EAAanlB,QAAO,SAAUjE,EAAOiC,EAAOyD,GACjE,OAAuB,OAAhB1F,EAAMwsB,UAEXC,EAAWzD,EAAYI,EAAanlB,QAAO,SAAUjE,EAAOiC,EAAOyD,GACrE,OAAuB,OAAhB1F,EAAMkqB,UAEXwC,EACN,SAAqBL,EAAME,GAEvB,GADAtpB,QAAQC,IAAImpB,GACC,OAATA,GAAgC,OAAfA,EAAKC,YAAiC/qB,IAAf8qB,EAAKC,OAA8C,IAAvBjtB,OAAOgtB,EAAKC,OAChF,OAAO,KAEX,GAAa,OAATC,GAAgC,OAAfA,EAAKC,YAAiCjrB,IAAfgrB,EAAKC,OAA8C,IAAvBntB,OAAOktB,EAAKC,OAChF,OAAO,KAEX,OAAOhb,WAAWnS,OAAOgtB,EAAKC,OAASjtB,OAAOktB,EAAKC,QAAQ/a,QAAQ,GATzDkb,CAAYN,EAAME,GAWhC,SAASK,EAAaphB,GAClB,MAAe,aAAXA,EACO,MAEC,OAGhB,SAASqhB,EAAU7sB,GACf,YAAcuB,IAAVvB,GAAiC,OAAVA,GAA4B8sB,MAAV9sB,EAClC,KAEJA,EAAMwB,WAAWe,OAE5B,IAAMwqB,EAASttB,KAAKutB,cACpB,OACI,6BACKD,EACD,yBAAK3sB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWC,cAAeksB,EAAa1H,KACvF,yBAAK9kB,MAAO,CAAE+X,OAAQ,kCAClB,kBAAC,GAAD,CAAa+M,OAAQA,EAAQllB,MAAO6sB,EAAUnD,EAAQA,SAAU9lB,MAAO,UAAWyE,KAAOqhB,KAE7F,yBAAKtpB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,gBAAiB0X,OAAQ,kCACzE,kBAAC,GAAD,CAAa+M,OAAQA,EAAQllB,MAAO6sB,EAAUlD,EAAIC,OAAQhmB,MAAO,MAAOyE,KAAMshB,IAC9E,kBAAC,GAAD,CAAazE,OAAQA,EAAQllB,MAAO6sB,EAAUhD,EAAIC,OAAQlmB,MAAO,MAAOyE,KAAMwhB,IAC9E,kBAAC,GAAD,CAAa3E,OAAQA,EAAQllB,MAAO6sB,EAAU9C,EAAKC,OAAQpmB,MAAO,OAAQyE,KAAM0hB,IAChF,kBAAC,GAAD,CAAa7E,OAAQA,EAAQllB,MAAO6sB,EAAU5C,EAAIC,OAAQtmB,MAAO,MAAOyE,KAAM4hB,IAC9E,kBAAC,GAAD,CAAa/E,OAAQA,EAAQllB,MAAO6sB,EAAU1C,EAASC,OAAQxmB,MAAO,WAAYyE,KAAM8hB,MAGhG,yBAAK/pB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWC,cAAeksB,EAAa1H,GAASzL,UAAWmT,EAAa1H,KACxH,yBAAK9kB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,gBAAiB0X,OAAQ,kCACzE,kBAAC,GAAD,CAAa+M,OAAQA,EAAQllB,MAAO6sB,EAAUxC,EAAGC,OAAQ1mB,MAAO,KAAMyE,KAAMgiB,IAC5E,kBAAC,GAAD,CAAanF,OAAQA,EAAQllB,MAAO6sB,EAAUtC,EAAET,OAAQlmB,MAAO,IAAKyE,KAAMkiB,IAC1E,kBAAC,GAAD,CAAarF,OAAQA,EAAQllB,MAAO6sB,EAAU9R,IAAWnX,MAAO,KAAMyE,KAAMmiB,IAHhF,IAII,kBAAC,GAAD,CAAatF,OAAQA,EAAQllB,MAAO6sB,EAAUpC,EAAEC,OAAQ9mB,MAAO,IAAKyE,KAAMoiB,IAC1E,kBAAC,GAAD,CAAavF,OAAQA,EAAQllB,MAAO6sB,EAAUhS,IAAWjX,MAAO,KAAMyE,KAAM,OALhF,KAOA,yBAAKjI,MAAO,CAAE+X,OAAQ,kCAClB,kBAAC,GAAD,CAAa+M,OAAQA,EAAQllB,MAAO6sB,EAAUlC,EAAIC,OAAQhnB,MAAO,MAAOyE,KAAMsiB,MAGtF,yBAAKvqB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWC,cAAeksB,EAAa1H,GAASzL,UAAWmT,EAAa1H,KACxH,yBAAK9kB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,gBAAiB0X,OAAQ,kCACzE,kBAAC,GAAD,CAAa+M,OAAQA,EAAQllB,MAAO6sB,EAAUhC,EAAIC,OAAQlnB,MAAO,MAAOyE,KAAMwiB,IAC9E,kBAAC,GAAD,CAAa3F,OAAQA,EAAQllB,MAAO6sB,EAAU/R,IAAalX,MAAO,MAAOyE,KAAM,OAFnF,MAIA,yBAAKjI,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,gBAAiB0X,OAAQ,kCACzE,kBAAC,GAAD,CAAa+M,OAAQA,EAAQllB,MAAO6sB,EAAU9B,EAAGC,MAAOpnB,MAAO,KAAMyE,KAAM0iB,IAC3E,kBAAC,GAAD,CAAa7F,OAAQA,EAAQllB,MAAO6sB,EAAU5B,EAAKC,MAAOtnB,MAAO,MAAOyE,KAAM4iB,IAC9E,kBAAC,GAAD,CAAa/F,OAAQA,EAAQllB,MAAO6sB,EAAU1B,EAAGC,MAAOxnB,MAAO,KAAMyE,KAAM8iB,IAC3E,kBAAC,GAAD,CAAajG,OAAQA,EAAQllB,MAAO6sB,EAAUxB,EAAIC,MAAO1nB,MAAO,KAAMyE,KAAMgjB,MAGpF,yBAAKjrB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAeksB,EAAa1H,GAASzL,UAAWmT,EAAa1H,KAC5H,yBAAK9kB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,gBAAiB0X,OAAQ,kCACzE,kBAAC,GAAD,CAAa+M,OAAQA,EAAQllB,MAAO6sB,EAAUtB,EAAIC,OAAQ5nB,MAAO,MAAOyE,KAAMkjB,IAC9E,kBAAC,GAAD,CAAarG,OAAQA,EAAQllB,MAAO6sB,EAAUpB,EAAGwB,OAAQrpB,MAAO,KAAMyE,KAAMojB,KAEhF,yBAAKrrB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,gBAAiB0X,OAAQ,kCACzE,kBAAC,GAAD,CAAa+M,OAAQA,EAAQllB,MAAO6sB,EAAUlB,EAAIC,OAAQhoB,MAAO,MAAOyE,KAAMsjB,IAC9E,kBAAC,GAAD,CAAazG,OAAQA,EAAQllB,MAAO6sB,EAAUhB,EAAIC,OAAQloB,MAAO,MAAOyE,KAAMwjB,KAElF,yBAAKzrB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,gBAAiB0X,OAAQ,kCACzE,kBAAC,GAAD,CAAa+M,OAAQA,EAAQllB,MAAO6sB,EAAUd,EAAKC,OAAQpoB,MAAO,OAAQyE,KAAM0jB,IAChF,kBAAC,GAAD,CAAa7G,OAAQA,EAAQllB,MAAO6sB,EAAUZ,EAAKC,OAAQtoB,MAAO,OAAQyE,KAAM4jB,MAGxF,yBAAK7rB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWC,cAAeksB,EAAa1H,GAASzL,UAAWmT,EAAa1H,KACxH,yBAAK9kB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,gBAAiB0X,OAAQ,kCACzE,kBAAC,GAAD,CAAa+M,OAAQA,EAAQllB,MAAO6sB,EAAUV,EAAK/B,OAAQxmB,MAAO,QAASyE,KAAM8jB,IACjF,kBAAC,GAAD,CAAajH,OAAQA,EAAQllB,MAAO6sB,EAAUT,EAAQlC,OAAQtmB,MAAO,WAAYyE,KAAM+jB,KAE3F,yBAAKhsB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,gBAAiB0X,OAAQ,kCACzE,kBAAC,GAAD,CAAa+M,OAAQA,EAAQllB,MAAO6sB,EAAUR,EAAKC,OAAQ1oB,MAAO,OAAQyE,KAAMgkB,IAChF,kBAAC,GAAD,CAAanH,OAAQA,EAAQllB,MAAO6sB,EAAUN,EAAKC,OAAQ5oB,MAAO,OAAQyE,KAAMkkB,IAChF,kBAAC,GAAD,CAAarH,OAAQA,EAAQllB,MAAO6sB,EAAkB,IAARH,GAAc9oB,MAAO,QAASyE,KAAM,OAClF,kBAAC,GAAD,CAAa6c,OAAQA,EAAQllB,MAAO6sB,EAAUJ,EAASvC,OAAQtmB,MAAO,WAAYyE,KAAMokB,IAJ5F,W,GAnVQxtB,aYgiBbiuB,I,kNA7hBX/tB,MAAQ,CACJguB,WAAY,GACZvK,OAAQ,KACRwK,GAAI,I,oFAEc,IACVtmB,EAAUrH,KAAKI,MAAfiH,MACIA,EAAMtF,WAAWe,SACd9C,KAAKN,MAAMyjB,SAEtBnjB,KAAKC,SAAS,CAAEkjB,OAAQ9b,EAAMtF,WAAWe,SACzC9C,KAAK4tB,sB,0CAIQ,IACTvmB,EAAUrH,KAAKI,MAAfiH,MACRrH,KAAKC,SAAS,CAAEkjB,OAAQ9b,EAAMtF,WAAWe,SACzC9C,KAAK4tB,qB,yCAGW,IAAD,OAoBf,IAAM1kB,EAAUtG,IAAOA,MAAS8L,OAAO,cAAe,cAAcA,OAAO,kBACrEzF,EAAYrG,IAAOA,IAAOA,MAAS8L,OAAO,cAAe,cAAc1L,UAAa,OAAsB0L,OAAO,kBArBxG,EAsBgB1O,KAAKI,MAA5BmhB,EAtBO,EAsBPA,OAAQla,EAtBD,EAsBCA,MAAOwmB,EAtBR,EAsBQA,IACjBhgB,EAAMxG,EAAMtF,WAAWe,OACvB2B,EAvBN,SAAoBA,GAChB,OAAQA,GACJ,IAAK,SACD,MAAO,KACX,IAAK,SACD,MAAO,MACX,IAAK,SACD,MAAO,KACX,IAAK,UACD,MAAO,OACX,IAAK,UACD,MAAO,MACX,IAAK,SACD,MAAO,MAUNqpB,CAAWvM,GAClBxa,EAAKnE,IAAOA,MAAS8L,OAAO,cAAe,cAAcA,OAAO,gBAChE5H,EAAKlE,IAAOA,IAAOA,MAAS8L,OAAO,cAAe,cAAc1L,UAAa,OAAsB0L,OAAO,gBACjG,YAAX6S,GACArX,GAAuC2D,EAAK5E,EAAWC,EAASzE,EAAM,GACjE0F,MAAK,SAAAtF,GACF,EAAK5E,SAAS,CACVytB,WAAY7oB,EAAKA,OAErB,EAAKyc,eAER/W,OAAM,SAAAC,GAAShH,QAAQC,IAAI+G,MAErB,WAAX+W,GAAkC,WAAXA,GAAkC,YAAXA,GAE9CrX,GAAuC2D,EAAK5E,EAAWC,EAASzE,EAAM,GACjE0F,MAAK,SAAAtF,GACF,EAAK5E,SAAS,CACVytB,WAAY7oB,EAAKA,OAErB,EAAKyc,eAER/W,OAAM,SAAAC,GAAShH,QAAQC,IAAI+G,MAErB,WAAX+W,GAEArX,GAA6B2D,EAAK5E,EAAWC,EAASzE,GACjD0F,MAAK,SAAAtF,GACF,EAAK5E,SAAS,CACVytB,WAAY7oB,EAAKA,OAErB,EAAKyc,eAER/W,OAAM,SAAAC,GACHhH,QAAQC,IAAI+G,MAGT,WAAX+W,IACA/d,QAAQC,IAAIoqB,EAAK/mB,EAAIC,GACrBmD,EAAoB2jB,EAAK/mB,EAAIC,GACxBoD,MAAK,SAAAtF,GACF,IAAMkpB,EAASC,EAAkBnpB,EAAKA,MAEtC,GADArB,QAAQC,IAAIsqB,GACRzrB,MAAMC,QAAQwrB,GAAS,CACvB,IAGME,EAHUF,EAAOvpB,QAAO,SAAUjE,EAAOiC,EAAO6H,GAClD,YAA6BvI,IAAtBvB,EAAM2tB,aAA2Db,MAA9BztB,OAAOW,EAAM2tB,mBAAqDpsB,IAA7BvB,EAAM2tB,YAAYC,UAE3EzhB,KAAI,SAAUtC,EAAM5H,EAAO6H,GACjD,IAAMzB,EAAOhG,IAAOwH,EAAKvH,QAAQd,WAAaqI,EAAKrH,QAAQhB,WAAY,gBAAgBiB,UACvF,MAAO,CACHogB,KAAMhZ,EAAK8jB,YACXE,KAAMxlB,MAGdpF,QAAQC,IAAIwqB,GACZ,EAAKhuB,SAAS,CAAE0tB,GAAIM,IAEpB,EAAK3M,UAAU,QAGtB/W,OAAM,SAAAC,GAAShH,QAAQC,IAAI+G,S,sCAGvB,IAAD,EACiBxK,KAAKI,MAA1BiuB,EADI,EACJA,QAASC,EADL,EACKA,QACjB,OAAID,EACIC,EACO,IAGA,IAIPA,EACO,IAGA,K,0CAKE,IAAD,EACatuB,KAAKI,MAA1BiuB,EADQ,EACRA,QAASC,EADD,EACCA,QACjB,OAAID,EACIC,EACO,GAGA,GAIPA,EACO,GAGA,K,kCA6Bf,IAxBQ,MAgB2EtuB,KAAKI,MAAhF4gB,EAhBA,EAgBAA,QAASuN,EAhBT,EAgBSA,YAAaF,EAhBtB,EAgBsBA,QAAS9M,EAhB/B,EAgB+BA,OAAiBiN,GAhBhD,EAgBuCF,QAhBvC,EAgBgDE,KAAKC,EAhBrD,EAgBqDA,IAAKC,EAhB1D,EAgB0DA,MAAOC,EAhBjE,EAgBiEA,MACnEtb,EAAmC,IAA3BkQ,OAAOC,OAAOC,WAAgCmL,EAAkB5uB,KAAK6uB,oBAE7EC,EAAWlsB,IAAOA,MAAS8L,OAAO,cAAe,cAAc1L,UAC/DiG,EAAY6lB,EAAY,MAE1BC,EAAa,GACbC,EAAkB,GACbxsB,EAAQ,EAAGA,EAAQ,GAAIA,IAC5BusB,EAAW7oB,KAAK,CAAEhG,IAAK,OAAQ+uB,YAAaH,EAAmB,GAARtsB,EAAa,GAAK,MACzEwsB,EAAgB9oB,KAAK4oB,EAAmB,GAARtsB,EAAa,GAAK,KAEtD,IAAI0sB,EAAqBH,EAAW3R,UAChC+R,EAA0BH,EAAgB5R,UAC1CgS,EAAahO,KAAc,MAK3Ba,EAAIb,OACHW,OAAO,CAACmN,EAAmB,GAAGD,YAAaC,EAAmB,IAAID,cAClEjN,MAAM,CAAC,EAAG3O,EAAQ,KAInBmN,EAAIY,OACHW,OAAO,CAAC0M,EAAKD,IACbxM,MAAM,CA1B6C,GA0BpC,IAEhBE,EAAQd,KAAYZ,GACnBsB,WAAW,CAAC2M,EAAKD,IACjBlM,YAAW,SAAA+M,GAAC,OAAKA,KACjBjN,SAAS,EAAG,GACZC,YAAY,IAEbiN,EAAWlO,KAAWa,GACrBH,WAAWqN,GACX/M,SAAS,EAAG,GACZC,YAAYjP,IACZkP,YAAW,SAAUC,GAAK,OA7CPlf,EA6C6Bkf,EA5Cf,IAA9B,IAAI9K,KAAKpU,GAAM+b,WACRnE,GAAW5X,GAEV,KAJhB,IAAwBA,KA+CpBmf,EAAQpB,KAAWa,GAClBH,WAAWqN,GACX/M,SAAS,EAAG,GACZC,YA3C4G,IA4C5GC,YAAW,SAAUC,EAAGrF,EAAGmS,GAAK,OA5DrC,SAAqBhsB,EAAM6Z,EAAGmS,GAC1B,OAAKA,EAAE5sB,OAAS,GAAMya,EACX,eAEPkS,EAAW/rB,GAAQ,IAAM,EAClB+rB,EAAW/rB,GAEV,KAqD4BksB,CAAYhN,EAAGrF,EAAGmS,MAE9DjO,KAAU,IAAMJ,GAASK,SACzB,IAAIqB,EAAMtB,KAAU,IAAMG,GACrBoB,OAAO,OACPC,KAAK,KAAM5B,GACX4B,KAAK,UAAW,CAAC,EAAG,EAAGvP,EAAOrT,KAAKwvB,kBACnC7M,OAAO,KACPC,KAAK,YAAa,gBAA0BgM,EAAkB,KAInElM,EAAIC,OAAO,KACNE,KAAKX,GACLU,KAAK,QAAS,QAGfyL,IACA3L,EAAIC,OAAO,KACNE,KAAKL,GACLI,KAAK,QAAS,QAEnBF,EAAIC,OAAO,KACNE,KAAKyM,GACL1M,KAAK,QAAS,SAUvBF,EAAIC,OAAO,QACNC,KAAK,KAAM,GACXA,KAAK,KAAMpC,EAAEgO,IACb5L,KAAK,KAAMvP,GACXuP,KAAK,KAAMpC,EAAEgO,IACb7tB,MAAM,SAAU,WAChBA,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,KAE/B+hB,EAAIC,OAAO,QACNC,KAAK,KAAM,GACXA,KAAK,KAAMpC,EAAEiO,IACb7L,KAAK,KAAMvP,GACXuP,KAAK,KAAMpC,EAAEiO,IACb9tB,MAAM,SAAU,WAChBA,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,KAG/B,IAAK,IAAI6B,EAAQ,EAAGA,EAAQ0sB,EAAmBzsB,OAAQD,IACnDkgB,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAEiN,EAAmB1sB,GAAOysB,cACvCrM,KAAK,KAAM,GACXA,KAAK,KAAMX,EAAEiN,EAAmB1sB,GAAOysB,cACvCrM,KAAK,KAtG0C,IAuG/CjiB,MAAM,SAAU,WAChBA,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,KAkEnC,SAAS8uB,EAAeC,EAAWvmB,GAC/B,OAAiB,IAAbA,EACOumB,EAAY,KAEN,IAAbvmB,EACOumB,EAAY,GAEN,IAAbvmB,EACOumB,EAAY,GAEhBA,EAAY,IAtEvB,SAAoBzmB,EAAWE,EAAUwmB,EAAOC,GAE5C,IADA,IAAMC,EAyBV,SAAmB5mB,EAAWE,GAC1B,SAAS2mB,EAAY7mB,EAAWE,GAE5B,IADA,IAAI4mB,EAAY,GACPvtB,EAAQ,EAAGA,EAAQ2G,EAAU3G,IAClC,GAAiB,KAAb2G,EAAiB,CACjB,IAAM6mB,EAAU/mB,EAAa,KAA2B,GAARzG,EAAa,GAAK,IAClEutB,EAAU7pB,KAAK8pB,QAEd,GAAiB,KAAb7mB,EAAiB,CACtB,IAAM6mB,EAAU/mB,EAAa,MAAoC,EAARzG,EAAY,GAAK,GAAK,GAAK,IACpFutB,EAAU7pB,KAAK8pB,QAEd,GAAiB,KAAb7mB,EAAiB,CACtB,IAAM6mB,EAAU/mB,EAAa,MAAoC,EAARzG,EAAY,GAAK,GAAK,GAAK,IACpFutB,EAAU7pB,KAAK8pB,OAEd,CACD,IAAMA,EAAU/mB,EAAa,OAAqC,GAARzG,EAAa,GAAK,GAAK,GAAK,IACtFutB,EAAU7pB,KAAK8pB,GAGvB,OAAOD,EAEX,GAAiB,IAAb5mB,EACA,OAAO2mB,EAAY7mB,EAAW,IAElC,GAAiB,IAAbE,EACA,OAAO2mB,EAAY7mB,EAAW,IAElC,GAAiB,IAAbE,EACA,OAAO2mB,EAAY7mB,EAAW,IAElC,OAAO6mB,EAAY7mB,EAAW,IAzDRgnB,CAAUhnB,EAAWE,GAClC3G,EAAQ,EAAGA,EAAQqtB,EAAcptB,OAAQD,IAAS,CACvD,IAAM0tB,EAAWT,EAAepc,EAAOlK,GACjCzG,EAAUmtB,EAAcrtB,GAC9BkgB,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAEvf,IACbkgB,KAAK,KAAMpC,EAAEmP,IACb/M,KAAK,KAAMX,EAAEvf,IACbkgB,KAAK,KAAMpC,EAAEoP,IACbjvB,MAAM,SAAU4tB,GAChB5tB,MAAM,UAAW,IACjBA,MAAM,eAAgBuvB,GAEZ,WAAX3O,GAAkC,YAAXA,GACvBmB,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAEvf,IACbkgB,KAAK,KAAMpC,EAAE,KACboC,KAAK,KAAMX,EAAEvf,IACbkgB,KAAK,KAAMpC,EAAE,KACb7f,MAAM,SAAU4tB,GAChB5tB,MAAM,UAAW,IACjBA,MAAM,eAAgBuvB,IAvBvCC,CAAWlnB,EAAW,EAAG0lB,EAAOD,GA0EhC,IAAM0B,EAAcpwB,KAAKN,MAAMguB,WAE/B,GADAlqB,QAAQC,IAAI8d,EAAQ6O,GACL,WAAX7O,EAEA,IADA,IAAM8O,EAASrwB,KAAKN,MAAMiuB,GACjBnrB,EAAQ,EAAGA,EAAQ6tB,EAAO5tB,OAAQD,IAAS,CAChD,IAAME,EAAU2tB,EAAO7tB,GACvBgB,QAAQC,IAAIf,GACZggB,EAAIC,OAAO,UACNC,KAAK,KAAMX,EAAEvf,EAAQ0rB,OACrBxL,KAAK,KAAMpC,EAAE9d,EAAQ0gB,OACrBR,KAAK,IAAK,GACVjiB,MAAM,OAAQ4tB,GAI3B,GAA2B,IAAvB6B,EAAY3tB,OACZ,OAAO,KAGX,GAAe,YAAX8e,EAAsB,CAItB,IAHA,IAAM+O,EAAWF,EAAY9hB,KACvBiiB,EAAWH,EAAYhiB,KAEpB5L,EAAQ,EAAGA,EAAQ+tB,EAAS9tB,OAAQD,IAAS,CAClD,IAAME,EAAU6tB,EAAS/tB,GACnBguB,EAAK9tB,EAAQ+tB,GACbC,EAAKhuB,EAAQiuB,GACbC,EAAKluB,EAAQmuB,GACbC,EAAKpuB,EAAQquB,GACbC,EAAQpuB,IAAOF,EAAQkG,KAAM,uBAAuB5F,UAC1D0f,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE+O,IACbpO,KAAK,KAAMX,EAAE+O,IACbpO,KAAK,KAAMpC,EAAEgQ,IACb5N,KAAK,KAAMpC,EAAEsQ,IACblO,KAAK,SAAU2L,GACf5tB,MAAM,UAAW,IAEjBA,MAAM,eAAgB,GAE3B+hB,EAAIC,OAAO,QACNC,KAAK,IAAKX,EAAE+O,GAASd,GACrBtN,KAAK,IAAKpC,EAAEoQ,IACZhO,KAAK,SAAWpC,EAAEkQ,GAAMlQ,EAAEoQ,IAC1BhO,KAAK,QAtBG,IAuBRA,KAAK,SAAU2L,GACf5tB,MAAM,UAAW,IACjBA,MAAM,OAAQ,uBACdA,MAAM,eAAgB,GAE3B+hB,EACKuO,UAAU,QACVpsB,KAAK,CAAC2rB,EAAIM,IACVI,QACAvO,OAAO,QACPC,KAAK,KAAMX,EAAE+O,GAASd,GACtBtN,KAAK,KAAMX,EAAE+O,GAASd,GACtBtN,KAAK,MAAM,SAAUL,GAAK,OAAQ/B,EAAE+B,MACpCK,KAAK,MAAM,SAAUL,GAAK,OAAQ/B,EAAE+B,MACpCK,KAAK,SAAU2L,GACf5tB,MAAM,UAAW,IACjBA,MAAM,eAAgB,GAE/B,IAAK,IAAI6B,EAAQ,EAAGA,EAAQ8tB,EAAS7tB,OAAQD,IAAS,CAClD,IAAME,EAAU4tB,EAAS9tB,GACnBguB,EAAK9tB,EAAQ+tB,GACbC,EAAKhuB,EAAQiuB,GACbC,EAAKluB,EAAQmuB,GACbC,EAAKpuB,EAAQquB,GACbC,EAAQpuB,IAAOF,EAAQkG,KAAM,uBAAuB5F,UAC1D0f,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE+O,IACbpO,KAAK,KAAMX,EAAE+O,IACbpO,KAAK,KAAMpC,EAAEgQ,IACb5N,KAAK,KAAMpC,EAAEsQ,IACblO,KAAK,SAAU2L,GAEf5tB,MAAM,eAAgB,GAE3B+hB,EAAIC,OAAO,QACNC,KAAK,IAAKX,EAAE+O,GAASd,GACrBtN,KAAK,IAAKpC,EAAEoQ,IACZhO,KAAK,SAAWpC,EAAEkQ,GAAMlQ,EAAEoQ,IAC1BhO,KAAK,QA7DG,IA8DRA,KAAK,SAAU2L,GACf5tB,MAAM,OAAQ,uBACdA,MAAM,eAAgB,GAE3B+hB,EACKuO,UAAU,QACVpsB,KAAK,CAAC2rB,EAAIM,IACVI,QACAvO,OAAO,QACPC,KAAK,KAAMX,EAAE+O,GAASd,GACtBtN,KAAK,KAAMX,EAAE+O,GAASd,GACtBtN,KAAK,MAAM,SAAUL,GAAK,OAAQ/B,EAAE+B,MACpCK,KAAK,MAAM,SAAUL,GAAK,OAAQ/B,EAAE+B,MACpCK,KAAK,SAAU2L,GACf5tB,MAAM,eAAgB,IAGnC,GAAe,WAAX4gB,EACA,IAAK,IAAI/e,EAAQ,EAAGA,EAAQ4tB,EAAY3tB,OAAQD,IAAS,CACrD,IAAME,EAAU0tB,EAAY5tB,GACtBwuB,EAAQpuB,IAAOF,EAAQ0rB,KAAM,uBAAuBprB,UACpDmuB,EAAMzuB,EAAQyuB,IACdC,EAAM1uB,EAAQ0uB,IACR,IAARD,GAAqB,IAARC,IAGjB1O,EAAIC,OAAO,UACNC,KAAK,KAAMX,EAAE+O,IACbpO,KAAK,KAAMpC,EAAE2Q,IACbvO,KAAK,IAAK,GACVjiB,MAAM,OAAQ4tB,GAGnB7L,EAAIC,OAAO,UACNC,KAAK,KAAMX,EAAE+O,IACbpO,KAAK,KAAMpC,EAAE4Q,IACbxO,KAAK,IAAK,GACVjiB,MAAM,UAAW,IACjBA,MAAM,OAAQ4tB,IAI3B,GAAe,WAAXhN,GAAkC,WAAXA,GAAkC,YAAXA,EAgB9C,IAAK,IAAI/e,EAAQ,EAAGA,EAAQ4tB,EAAY3tB,OAAQD,IAAS,CACrD,IAAME,GAAU0tB,EAAY5tB,GACtBguB,GAAK9tB,GAAQ+tB,GACbC,GAAKhuB,GAAQiuB,GACbC,GAAKluB,GAAQmuB,GACbC,GAAKpuB,GAAQquB,GACbC,GAAQpuB,IAAOF,GAAQkG,KAAM,uBAAuB5F,UAAa,KAEvE0f,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE+O,KACbpO,KAAK,KAAMX,EAAE+O,KACbpO,KAAK,KAAMpC,EAAEgQ,KACb5N,KAAK,KAAMpC,EAAEsQ,KACblO,KAAK,SAAU2L,GACf5tB,MAAM,eAAgB,GAE3B+hB,EAAIC,OAAO,QACNC,KAAK,IAAKX,EAAE+O,IAASd,GACrBtN,KAAK,IAAKpC,EAAEoQ,KACZhO,KAAK,SAAWpC,EAAEkQ,IAAMlQ,EAAEoQ,KAC1BhO,KAAK,QAbO,IAcZA,KAAK,SAAU2L,GACf5tB,MAAM,OAAQ,uBACdA,MAAM,eAAgB,GAE3B+hB,EACKuO,UAAU,QACVpsB,KAAK,CAAC2rB,GAAIM,KACVI,QACAvO,OAAO,QACPC,KAAK,KAAMX,EAAE+O,IAASd,GACtBtN,KAAK,KAAMX,EAAE+O,IAASd,GACtBtN,KAAK,MAAM,SAAUL,GAAK,OAAQ/B,EAAE+B,MACpCK,KAAK,MAAM,SAAUL,GAAK,OAAQ/B,EAAE+B,MACpCK,KAAK,SAAU2L,GACf5tB,MAAM,eAAgB,M,+BAO7B,IACE4gB,EAAWvhB,KAAKI,MAAhBmhB,OACR,OACI,yBAAKnL,GAAImL,Q,GAzhBgB/hB,cC6JtB6xB,I,kNA9JX3xB,MAAQ,CACJmF,KAAM,GACNysB,UAAU,G,EAGdC,SAAW,WACP,EAAKtxB,SAAS,CACVqxB,UAAU,K,EAIlBE,SAAW,SAACpiB,EAAIqiB,EAAMrjB,GACH,EAAK1O,MAAM4xB,WAEtBliB,EAAK,KAAOA,EAAK,KAAO,EAAKmiB,WAC7BE,EAAO,IAAMA,EAAO,IAAM,EAAKF,WAC/BnjB,EAAO,IAAMA,EAAO,IAAM,EAAKmjB,a,wEAKnC,SAASvvB,EAAYzB,GACjB,OAAc,OAAVA,QAA4BuB,IAAVvB,GAAiC,KAAVA,GAAkC,IAAlBX,OAAOW,GACzD,KAEJA,EAEX,IAAMsE,EAAO7E,KAAKN,MAAMmF,KAPnB,EAQ2B7E,KAAKI,MAA7BsxB,EARH,EAQGA,QAASrqB,EARZ,EAQYA,MAAOwmB,EARnB,EAQmBA,IAClB8D,EAAaD,EACnB,QAAmB5vB,IAAf6vB,GAA2C,OAAfA,EAC5B,OAAO,KAKX,SAASC,EAAaC,EAAKC,EAAKC,EAAQC,EAAQC,EAAQC,GACpD,QAAItyB,OAAOiyB,GAAO,GAAKjyB,OAAOkyB,GAAO,MAC7BD,EAAME,GAAUF,EAAMG,MAGtBF,EAAMG,GAAUH,EAAMI,GASlC,SAASC,EAAW5xB,EAAOqvB,EAAOD,GAC9B,QAAI/vB,OAAOW,GAAS,MACZA,EAAQqvB,GAASrvB,EAAQovB,GAlBrC3vB,KAAKwxB,SAASG,EAAWviB,GAAIuiB,EAAWF,KAAME,EAAWvjB,MA2B1CpO,KAAKN,MAAM4xB,SAE1B,OADA9tB,QAAQC,IAAIoqB,GAER,yBAAK1sB,UAAU,mBACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,iBACX,yBAAKR,MAAO,CAAEC,QAAS,OAAQwxB,cAAe,SAAU5e,eAAgB,SAAU3S,WAAY,SAAUwS,MAAO,OAAQtS,OAAQ,OAAQmU,QAAS,UAAWa,gBAAiBoc,EAAWR,EAAWviB,GAAI,IAAK,KAAO,QAAUnL,EAAW,QACnO,qCACI,wBAAItD,MAAO,CAAEwO,MAAOgjB,EAAWR,EAAWviB,GAAI,IAAK,KAAOnL,EAAW,MAAQ,UAA7E,YAEJ,qCACI,yBAAKtD,MAAO,CAAE2O,WAAY,MAAOC,SAAU,OAAQ8iB,WAAY,OAAQC,aAAc,MAAOnjB,MAAOgjB,EAAWR,EAAWviB,GAAI,IAAK,KAAOnL,EAAW,MAAQ,UAAYjC,EAAY2vB,EAAWviB,QAI3M,yBAAKjO,UAAU,kBACX,yBAAKR,MAAO,CAAEC,QAAS,OAAQwxB,cAAe,SAAU5e,eAAgB,SAAU3S,WAAY,SAAUwS,MAAO,OAAQtS,OAAQ,OAAQmU,QAAS,UAAWa,gBAAiB6b,EAAaD,EAAWF,KAAME,EAAWY,KAAM,GAAI,GAAI,GAAI,IAAM,QAAUtuB,EAAW,QAC9P,qCACI,wBAAItD,MAAO,CAAEwO,MAAOyiB,EAAaD,EAAWF,KAAME,EAAWY,KAAM,GAAI,GAAI,GAAI,IAAMtuB,EAAW,MAAQ,UAAxG,cAEJ,qCACI,yBAAKtD,MAAO,CAAE2O,WAAY,MAAOC,SAAU,OAAQ8iB,WAAY,OAAQljB,MAAOyiB,EAAaD,EAAWF,KAAME,EAAWY,KAAM,GAAI,GAAI,GAAI,IAAMtuB,EAAW,MAAQ,UAAYjC,EAAY2vB,EAAWY,MAArM,IAA6MvwB,EAAY2vB,EAAWF,QAExO,qCACI,yBAAK9wB,MAAO,CAAE2O,WAAY,MAAOC,SAAU,OAAQ8iB,WAAY,OAAQljB,MAAOyiB,EAAaD,EAAWF,KAAME,EAAWY,KAAM,GAAI,GAAI,GAAI,IAAMtuB,EAAW,MAAQ,UAAlK,IAA+KjC,EAAY2vB,EAAWa,MAAtM,QAIZ,yBAAKrxB,UAAU,iBACX,yBAAKR,MAAO,CAAEC,QAAS,OAAQwxB,cAAe,SAAU5e,eAAgB,SAAU3S,WAAY,SAAUwS,MAAO,OAAQtS,OAAQ,OAAQmU,QAAS,UAAWa,gBAAiB6b,EAAaD,EAAWvjB,KAAMujB,EAAWrjB,KAAM,GAAI,GAAI,GAAI,IAAM,QAAUrK,EAAW,QAC9P,qCACI,wBAAItD,MAAO,CAAEwO,MAAOyiB,EAAaD,EAAWvjB,KAAMujB,EAAWrjB,KAAM,GAAI,GAAI,GAAI,IAAMrK,EAAW,MAAQ,UAAxG,cAEJ,qCACI,yBAAKtD,MAAO,CAAE2O,WAAY,MAAOC,SAAU,OAAQ8iB,WAAY,OAAQljB,MAAOyiB,EAAaD,EAAWvjB,KAAMujB,EAAWrjB,KAAM,GAAI,GAAI,GAAI,IAAMrK,EAAW,MAAQ,UAAYjC,EAAY2vB,EAAWrjB,MAArM,IAA6MtM,EAAY2vB,EAAWvjB,QAExO,qCACI,yBAAKzN,MAAO,CAAE2O,WAAY,MAAOC,SAAU,OAAQ8iB,WAAY,OAAQljB,MAAOyiB,EAAaD,EAAWvjB,KAAMujB,EAAWrjB,KAAM,GAAI,GAAI,GAAI,IAAMrK,EAAW,MAAQ,UAAlK,IAA+KjC,EAAY2vB,EAAWnjB,MAAtM,SAKhB,yBAAK7N,MAAO,CAAEwU,SAAU,aACpB,kBAAC,GAAD,CAAwB0Y,IAAKA,EAAKW,IAAK,IAAKC,IAAK,EAAGC,MAAO,IAAKC,MAAO,IAAKtnB,MAAOA,EAAO2Z,QAAS,SAAUO,OAAQ,SAAU1c,KAAMA,EAAMypB,SAAS,EAAOD,SAAS,EAAMoE,YAAa,0BAA2BlE,YAAa,YAC/N,kBAAC,GAAD,CAAwBV,IAAKA,EAAKW,IAAK,IAAKC,IAAK,EAAGC,MAAO,GAAIC,MAAO,GAAItnB,MAAOA,EAAO2Z,QAAS,SAAUO,OAAQ,SAAU1c,KAAMA,EAAM6tB,OAAO,EAAMpE,SAAS,EAAOD,SAAS,EAAOoE,YAAa,2BAA4BlE,YAAa,UAAWoE,mBAAoB,6BAC3Q,kBAAC,GAAD,CAAwB9E,IAAKA,EAAKW,IAAK,IAAKC,IAAK,EAAGC,MAAO,GAAIC,MAAO,GAAItnB,MAAOA,EAAO2Z,QAAS,UAAWO,OAAQ,UAAW1c,KAAMA,EAAM6tB,OAAO,EAAMpE,SAAS,EAAMD,SAAS,EAAOoE,YAAa,2BAA4BlE,YAAa,UAAWoE,mBAAoB,+BAGpR,yBAAKxxB,UAAU,iBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,iBACX,yBAAKR,MAAO,CAAEC,QAAS,OAAQwxB,cAAe,SAAU5e,eAAgB,SAAU3S,WAAY,SAAUwS,MAAO,OAAQtS,OAAQ,OAAQmU,QAAS,UAAWa,gBAAiBoc,EAAWR,EAAWtiB,KAAM,IAAK,IAAM,QAAUpL,EAAW,UACpO,qCACI,wBAAItD,MAAO,CAAEwO,MAAOgjB,EAAWR,EAAWtiB,KAAM,IAAK,IAAMpL,EAAW,QAAU,UAAhF,MAEI,kCAFJ,QAMJ,qCACI,yBAAKtD,MAAO,CAAE2O,WAAY,MAAOC,SAAU,OAAQ8iB,WAAY,OAAQC,aAAc,MAAOnjB,MAAOgjB,EAAWR,EAAWtiB,KAAM,IAAK,IAAMpL,EAAW,QAAU,UAAYjC,EAAY2vB,EAAWtiB,MAAlM,QAIZ,yBAAKlO,UAAU,kBACX,yBAAKR,MAAO,CAAEC,QAAS,OAAQwxB,cAAe,SAAU5e,eAAgB,SAAU3S,WAAY,SAAUwS,MAAO,OAAQtS,OAAQ,OAAQmU,QAAS,UAAWa,gBAAiBoc,EAAWR,EAAWjiB,GAAI,GAAI,IAAM,QAAUzL,EAAW,QACjO,qCACI,wBAAItD,MAAO,CAAEwO,MAAOgjB,EAAWR,EAAWjiB,GAAI,GAAI,IAAMzL,EAAW,MAAQ,UAA3E,MAAyF,qCAAzF,OAEJ,qCACI,yBAAKtD,MAAO,CAAE2O,WAAY,MAAOC,SAAU,OAAQ8iB,WAAY,OAAQC,aAAc,MAAOnjB,MAAOgjB,EAAWR,EAAWjiB,GAAI,GAAI,IAAMzL,EAAW,MAAQ,UAAYjC,EAAY2vB,EAAWjiB,QAIzM,yBAAKvO,UAAU,iBACX,yBAAKR,MAAO,CAAEC,QAAS,OAAQwxB,cAAe,SAAU5e,eAAgB,SAAU3S,WAAY,SAAUwS,MAAO,OAAQtS,OAAQ,OAAQmU,QAAS,UAAWa,gBAAiBoc,EAAWR,EAAWliB,GAAI,GAAI,IAAM,QAAUxL,EAAW,QACjO,qCACI,wBAAItD,MAAO,CAAEwO,MAAOgjB,EAAWR,EAAWliB,GAAI,GAAI,IAAMxL,EAAW,MAAQ,UAA3E,YAEJ,qCACI,yBAAKtD,MAAO,CAAE2O,WAAY,MAAOC,SAAU,OAAQ8iB,WAAY,OAAQC,aAAc,MAAOnjB,MAAOgjB,EAAWR,EAAWliB,GAAI,GAAI,IAAMxL,EAAW,MAAQ,UAAYjC,EAAY2vB,EAAWliB,SAK7M,yBAAK9O,MAAO,CAAEwU,SAAU,aACpB,kBAAC,GAAD,CAAwB0Y,IAAKA,EAAKW,IAAK,IAAKC,IAAK,GAAIC,MAAO,IAAKC,MAAO,GAAItnB,MAAOA,EAAO2Z,QAAS,UAAWO,OAAQ,UAAW1c,KAAMA,EAAMypB,SAAS,EAAOD,SAAS,EAAMoE,YAAa,yBAA0BlE,YAAa,YAChO,kBAAC,GAAD,CAAwBV,IAAKA,EAAKW,IAAK,GAAIC,IAAK,GAAIC,MAAO,GAAIC,MAAO,GAAItnB,MAAOA,EAAO2Z,QAAS,SAAUO,OAAQ,SAAU1c,KAAMA,EAAMypB,SAAS,EAAOD,SAAS,EAAOoE,YAAa,0BAA2BlE,YAAa,YAC9N,kBAAC,GAAD,CAAwBV,IAAKA,EAAKW,IAAK,IAAKC,IAAK,EAAGC,MAAO,GAAIC,MAAO,GAAItnB,MAAOA,EAAO2Z,QAAS,SAAUO,OAAQ,SAAU1c,KAAMA,EAAMypB,SAAS,EAAMD,SAAS,EAAOoE,YAAa,yBAA0BlE,YAAa,mB,GAvJ5N/uB,c,SCyCTozB,G,2MA7CXlzB,MAAQ,CACJmzB,eAAgB,EAAKzyB,MAAM0yB,a,sFAIvB9yB,KAAKN,MAAMmzB,eACX3oB,GAAuBlK,KAAKI,MAAM+K,KAAKzC,OAAQ1I,KAAKI,MAAM+K,KAAKxC,QAAS3I,KAAKI,MAAM+K,KAAKvC,KAAM5I,KAAKI,MAAM+K,KAAK/D,UAAW,sBACpH+C,MAAK,SAAAtF,GACFrB,QAAQC,IAAI,2BAA6BwK,KAAKC,UAAUrJ,OAE3D0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,2BAA6BwK,KAAKC,UAAU1D,OAGhEN,GAAuBlK,KAAKI,MAAM+K,KAAKzC,OAAQ1I,KAAKI,MAAM+K,KAAKxC,QAAS3I,KAAKI,MAAM+K,KAAKvC,KAAM5I,KAAKI,MAAM+K,KAAK/D,UAAW,sBACpH+C,MAAK,SAAAtF,GACFrB,QAAQC,IAAI,2BAA6BwK,KAAKC,UAAUrJ,OAE3D0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,2BAA6BwK,KAAKC,UAAU1D,S,qCAKpExK,KAAKC,SAAS,CACV4yB,gBAAiB7yB,KAAKN,MAAMmzB,gBAC7B7yB,KAAK+yB,wB,+BAGF,IAAD,OAOL,OACI,yBAAKpyB,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQC,WAAY,WACvD,kBAAC,KAAD,CAAUsS,SAAU,kBAAM,EAAK6f,gBAAgBC,QAASjzB,KAAKN,MAAMmzB,eAAgBlyB,MAAOX,KAAKN,MAAMmzB,eALzF,CAChBK,eAAgB,eAAgB3jB,SAAU,QAJxB,CAClBA,SAAU,SAO8IvP,KAAKI,MAAM+K,KAAKxC,c,GAvCjJnJ,aCkFpB2zB,I,kNA/EXzzB,MAAQ,CAAE0zB,OAAQ,KAAMC,KAAM,I,mFACT,IAEXxF,EADe7tB,KAAKI,MAAlBqe,SACa6J,OACrBtoB,KAAKC,SAAS,CAAEmzB,OAAQvF,IACxB7tB,KAAKgH,QAAQ6mB,K,0CAEI,IACTpP,EAAaze,KAAKI,MAAlBqe,SACA2U,EAAWpzB,KAAKN,MAAhB0zB,OACFvF,EAAMpP,EAAS6J,OACjBuF,IAAQuF,IACRpzB,KAAKC,SAAS,CAAEmzB,OAAQvF,IACxB7tB,KAAKgH,QAAQ6mB,M,8BAIbA,GAAM,IAAD,OACT3jB,EAAoB2jB,GACf1jB,MAAK,SAAAtF,GACF,IAAMO,EAAYwJ,EAAsB/J,EAAKA,MAC7C,EAAK5E,SAAS,CAAEozB,KAAMjuB,OAEzBmF,OAAM,SAAAC,GACHhH,QAAQC,IAAI,wBAA0BwK,KAAKC,UAAU1D,S,+BAiC7D,IAAM8oB,EA7BN,SAAwBzuB,GACpB,IAAM0uB,EAAY,CACd,MAAS,2BACT,QAAW,6CACX,KAAQ,iCACR,MAAS,sBACT,QAAW,kCACX,MAAS,sBACT,QAAW,kCACX,IAAO,6CACP,MAAS,2BACT,IAAO,6CACP,MAAS,iCACT,MAAS,iCACT,KAAQ,iCACR,OAAU,kCAGRC,EAAc,GAEpB,IAAK,IAAIhxB,KAAS+wB,EACM,KAAhB1uB,EAAKrC,IACLgxB,EAAYttB,KAAK,CAACqtB,EAAU/wB,GAAQqC,EAAKrC,KAIjD,OAAOgxB,EAGWC,CAAezzB,KAAKN,MAAM2zB,MAC1CK,EAAcJ,EAAc5mB,KAAI,SAAAhK,GAAO,OACzC,yBAAKvB,UAAU,WACX,yBAAKA,UAAU,SAASuB,EAAQ,GAAhC,WACA,yBAAKvB,UAAU,QAAQuB,EAAQ,QAGvC,OAA0B,OAAtB1C,KAAKN,MAAM0zB,QAA4C,IAAzBE,EAAc7wB,OAExC,yBAAK9B,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WACjE,kBAAC,KAAD,CAAM4D,KAAK,aAKnB,yBAAKtD,UAAU,qBACVuyB,O,GA3ESl0B,cCa1B,SAASqU,GAAczC,EAAe0C,EAAMC,EAAOrB,GAG/C,OAFAlP,QAAQC,IAAI2N,GAEiB,IAAzBA,EAAc3O,QACde,QAAQC,IAAIqQ,GAEQ,IAAhBA,EAAKrR,OACE,CACH2B,gBAAYtC,EACZ8Q,eAAW9Q,EACX+Q,cAAU/Q,GAMX,CACHsC,WAJewK,EAAqBmF,EAAOrB,GAK3CE,UAJchT,OAAOkU,EAAKE,OAK1BnB,SAJajT,OAAOkU,EAAKG,QAWtB,CACH7P,WAJ8C,IAAnCxE,OAAOwR,EAAc,GAAGe,SAKnCS,UAJchT,OAAOwR,EAAc,GAAGgB,OAKtCS,SAJajT,OAAOwR,EAAc,GAAGiB,OAS1C,SAASshB,GAAavzB,GAAQ,IAAD,EACF0M,oBAAS,GADP,mBACzB8mB,EADyB,KAChBC,EADgB,OAEoB/mB,mBAAS,IAF7B,mBAEzBC,EAFyB,KAELC,EAFK,OAGQF,mBAAS,IAHjB,mBAGzBgnB,EAHyB,KAGXC,EAHW,OAIAjnB,mBAAS,IAJT,mBAIzBknB,EAJyB,KAIfC,EAJe,OAKNnnB,mBAAS,GALH,mBAKzBI,EALyB,KAKlBC,EALkB,OAMUL,mBAAS,IANnB,mBAMzBonB,EANyB,KAMVC,EANU,KAwIhC,SAASnyB,EAAYzB,GACjB,MAAc,KAAVA,GAA0B,OAAVA,QAA4BuB,IAAVvB,EAC3B,KAEJA,EAAMwB,WApIjB0L,qBAAU,WACN,IAAMC,EAAUC,aAAY,WACxBR,EAASD,EAAQ,KAClB,KACH,OAAO,kBAAMU,cAAcF,MAC5B,CAACR,IAGJO,qBAAU,WAINvD,GAHa9J,EAAMC,SAASX,MAAMmF,KAEfmF,SAASjI,YAEvBoI,MAAK,SAAAtF,GACFrB,QAAQC,IAAIoB,EAAKA,MAEjBmI,EAAsBnI,EAAKA,KAAK,OAEnC0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,kCAAoCwK,KAAKC,UAAU1D,SAExE,CAAC0C,EAAO9M,EAAMC,SAASX,MAAMmF,KAAKmF,WAErCyD,qBAAU,WAGNvD,EAFa9J,EAAMC,SAASX,MAAMmF,KACjBmF,SAASjI,YAErBoI,MAAK,SAAAtF,GACFrB,QAAQC,IAAIoB,EAAKA,MACjBsvB,EAAiBtvB,EAAKA,SAEzB0F,OAAM,SAAAC,GAAShH,QAAQC,IAAI+G,QACjC,CAACpK,EAAMC,SAASX,MAAMmF,KAAKmF,WAG9ByD,qBAAU,WAGN,IACM1B,EADO3L,EAAMC,SAASX,MAAMmF,KAG5BmM,GADOjF,EAAOqoB,KACFroB,EAAOiF,UAAUjP,YAE7BsyB,EAAM,IAAI5c,KACV6c,EAAa,IAAI7c,KAAK4c,EAAIxZ,cAAewZ,EAAI1a,WAAY0a,EAAIza,WAC7D3Q,EAAYqrB,EAAWvV,cAAcmH,MAAM,KAAK,GACtC,IAAIzO,KAAK6c,EAAWnZ,UAAY,OAAqB4D,cAAcmH,MAAM,KAAK,GAC9Fhc,GAAkC8G,EAAW/H,GACxCkB,MAAK,SAAAa,GACFxH,QAAQC,IAAI,4BAA8BwK,KAAKC,UAAUlD,EAAOnG,OAChEkvB,EAAgB/oB,EAAOnG,SAE1B0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,4BAA8BwK,KAAKC,UAAU1D,SAElE,CAACpK,EAAMC,SAASX,MAAMmF,KAAKmM,YAE9BvD,qBAAU,WAEN,IACM1B,EADO3L,EAAMC,SAASX,MAAMmF,KAErBkH,EAAOqoB,KAEpBlqB,GADkB6B,EAAOiF,UAAUjP,WACDgK,EAAOhC,QAAQhI,YAC5CoI,MAAK,SAAAa,GACFxH,QAAQC,IAAI,iBAAmBwK,KAAKC,UAAUlD,EAAOnG,OACrDovB,EAAYjpB,EAAOnG,SAEtB0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,iBAAmBwK,KAAKC,UAAU1D,SAEvD,CAACpK,EAAMC,SAASX,MAAMmF,KAAKkF,UAsE9B,IAPyBxJ,EAQnBwL,EADO3L,EAAMC,SAASX,MAAMmF,KAE5B6N,EAAW3G,EAAO4G,QAClBoB,EAAQnF,EAAkB7C,EAAOqI,QACjCN,EAAOlF,EAAsB7C,EAAO+H,MACpCygB,E5BwGH,SAAoBlwB,GACvB,QAAmBvC,IAAfuC,GAA2C,OAAfA,EAC5B,MAAO,KAEX,IAAME,EAAUF,EAAWG,QAAO,SAAUjE,EAAOiC,GAC/C,MAAsB,OAAfjC,EAAMkE,QAEjB,OAAuB,IAAnBF,EAAQ9B,OACD,EAEC8B,E4BlHOqK,CAAqBmF,GAClCM,EAASzF,EAAuBmF,GAGhC/C,EAAYjF,EAAOiF,UACnBC,EAAYlF,EAAOkF,UACnBujB,EAAUzoB,EAAO0oB,QACjBC,EAAU9lB,EAAc4lB,EAAS,KACjCG,EAAU/lB,EAAc4lB,EAAS,KACjCI,EAAUhmB,EAAc4lB,EAAS,KACjCK,EAAajmB,EAAc4lB,EAAS,KAEpCpwB,EAAayP,GAAcqgB,EAAepgB,EAAMC,EAAOrB,GAAUtO,WACjEwO,EAAYiB,GAAcqgB,EAAepgB,EAAMC,EAAOrB,GAAUE,UAChEC,EAAWgB,GAAcqgB,EAAepgB,EAAMC,EAAOrB,GAAUG,SAM/DyB,GAAY1F,EALH,CACXvL,KAAMT,IAAO8P,EAAU,YAAY1P,UACnCpB,KAAMgR,EACN/Q,IAAKgR,IAKH4L,GAAW,CACb,MAAS1S,EAAO/B,SAASjI,WACzB,OAAUgK,EAAOhC,QAAQhI,WACzB,UAAa6Q,EACb,SAAYC,EACZ,UAAa7B,EACb,UAAaC,EACb,OAAU8C,EACV,aAAgBhI,GAGdkV,GAAW,CACb,UAAarO,EACb,SAAYC,EACZ,SAAYH,GAGhB,OACI,yBAAKvR,UAAU,sBACX,kBAAC,KAAD,CACIkS,MAAO,IACPlP,MAAM,iCACNmM,QAASsjB,EACT3d,KAAM,kBAAM4d,GAAW,IACvBvgB,SAAU,kBAAMugB,GAAW,IAC3BtgB,OAAQ,MACR,kBAAC,GAAD,CAAakL,SAAUA,MAE3B,yBAAKtd,UAAU,mBACX,yBAAKR,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQI,oBAAqB,gBAChE,kBAAC,IAAD,CAAME,GAAG,uBAAuBP,MAAO,CAAEE,WAAY,SAAUD,QAAS,SACpE,wBAAIO,UAAU,oBAAd,mCAEJ,qCACI,wBAAI2zB,MAAO,CAAEvlB,SAAU,SAAvB,QAAuC3P,OAAOmM,EAAOkH,QAArD,IAA+DlH,EAAOyG,OAAOzQ,WAAWe,SAE5F,kBAAC,IAAD,CAAM5B,GAAI,CAAEqU,SAAU,iBAAmBxJ,EAAO/B,SAASjI,WAAWe,OAAQpD,MAAO,CAAE,OAAU,KAAM,MAAS+e,GAASpX,MAAO,OAAUoX,GAAS6J,OAAQ,UAAa1oB,OAAOmM,EAAOkH,QAAS,MAAQ,EAAM,UAAawL,GAASzN,YAAerQ,MAAO,CAAEE,WAAY,SAAU2S,eAAgB,WAAY5S,QAAS,SAChT,wBAAIO,UAAU,oBAAd,4DAGR,yBAAKR,MAAO,CAAEI,OAAQ,SAClB,yBAAKJ,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,gBAAiB3S,WAAY,WACxE,kDAASkL,EAAO/B,UAChB,4CAAQ6F,GAAO9D,EAAO0G,OACtB,4CAAQ7P,IAAO8P,EAAU,YAAYhE,OAAO,eAC5C,kDAAS3C,EAAOkF,WAChB,kBAAC,GAAD,CAAelF,QAAQ,EAAOhC,QAASgC,EAAOhC,QAASC,SAAU+B,EAAO/B,YAE5E,yBAAKrJ,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,gBAAiB3S,WAAY,WACxE,yBAAKF,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAChD,wBAAIL,MAAO,CAAEwO,MAAO,oBACfnN,EAAY4Q,GADjB,IAC8B5Q,EAAY6Q,GAD1C,IACwD,0BAAMlS,MAAO,CAAE2O,WAAY,QAAUgF,KAE7F,wBAAI3T,MAAO,CAAEwO,MAAO,kBAAmBrO,WAAY,KAvFzD,MADOP,EAyFoB6D,IAxFX,OAAV7D,QAA4BuB,IAAVvB,GAAiC,IAAVA,EAClD,GAEJA,EAAMwB,WAAa,OAqF2B,0BAAMpB,MAAO,CAAE2O,WAAY,QAAUtN,EAAYqS,GAAjD,OAGrC,yBAAK1T,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,iBAAkBC,cAAe,SACjF,4CAAQyzB,GACPA,GAAWG,GAAc,4CAAQA,GACjCH,GAAWC,GAAW,4CAAQA,GACnB,IAAXC,GAAiB,kCAAQA,GAC1B,yBAAKzzB,UAAU,mBAAmBsS,QAAS,kBAAMogB,GAAW,KAA5D,qCAIZ,yBAAK1yB,UAAU,uBACX,yBAAKR,MAAO,CAAEuU,QAAS,cACnB,kBAAC,GAAD,CAAW2Y,IAAK9hB,EAAOhC,QAAS1C,MAAO0E,EAAO/B,SAAU0nB,QAAS3kB,KAErE,yBAAKpM,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWC,cAAe,OAAQiU,QAAS,YAC3F,yBAAKvU,MAAO,CAAE8e,aAAc,QACxB,yBAAK9e,MAAO,CAAEoV,gBAAiB,YAAa4N,oBAAqB,MAAOC,qBAAsB,MAAO7iB,OAAQ,OAAQmU,QAAS,WAAYtU,QAAS,OAAQC,WAAY,WACnK,wBAAIF,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBAAtC,6BAEJ,kBAAC,GAAD,CAAesW,OAAQ,WAAYtjB,WAAYS,IAAOA,MAAS8L,OAAO,aAAa1L,UAAWyb,SAAUA,MAE5G,yBAAK9d,MAAO,CAAE+X,OAAQ,gCAAiC+G,aAAc,MAAO1e,OAAQ,MAChF,kBAAC,GAAD,CAAe0d,SAAUA,GAAUwC,SAAUA,GAAUmC,KAAMrX,EAAQsX,WAAYkR,EAAY9vB,MAAM,MAG3G,yBAAK9D,MAAO,CAAE+X,OAAQ,gCAAiC+G,aAAc,MAAOzF,UAAW,OAAQ9K,YAAa,QACvG,kBAAC,GAAD,CAAQuP,SAAUA,GAAU6F,aAAa,KAE9C,yBAAK3jB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWC,cAAe,OAAQ+Y,UAAW,OAAQsY,aAAc,QACnH,yBAAK3xB,MAAO,CAAE+X,OAAQ,gCAAiC+G,aAAc,QACjE,yBAAK9e,MAAO,CAAEoV,gBAAiB,YAAa4N,oBAAqB,MAAOC,qBAAsB,MAAO7iB,OAAQ,OAAQmU,QAAS,WAAYtU,QAAS,OAAQC,WAAY,WACnK,wBAAIF,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBAAtC,iBAEJ,yBAAKxO,MAAO,CAAEo0B,UAAW,QAAS3f,SAAU,OAAQ4f,UAAW,SAxLvD,IAAxBlB,EAAarxB,OAET,yBAAK9B,MAAO,CAAEI,OAAQ,OAAQuc,YAAa,OAAQ1c,QAAS,OAAQC,WAAY,WAAhF,4BAMaizB,EAAa/kB,MAAK,SAACC,EAAGC,GAGnC,OAFgBrM,IAAOoM,EAAEpG,KAAM,yBAAyB5F,UACxCJ,IAAOqM,EAAErG,KAAM,yBAAyB5F,UACzB,GAAK,KAGtB0J,KAAI,SAACvB,EAAM3I,GACzB,GAAkB,iBAAd2I,EAAK1G,KAAe,CAEpB,IAAMmE,EAAOhG,IAAOuI,EAAKvC,KAAM,yBAAyB8F,OAAO,uBACzDsJ,EAAYpV,IAAOqV,IAAIrP,GAAMsP,SAC7B+c,EAAiBryB,IAAOoV,GAAWtJ,OAAO,eAChD,OACI,yBAAKxO,IAAKsC,EAAO7B,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQI,oBAAqB,UAAW6T,kBAAmB,MAAOC,kBAAmB,yBAA0BC,kBAAmB,QAASuI,YAAa,SACvM,yBAAK3c,MAAO,CAAE4O,SAAU,OAAQ3O,QAAS,OAAQ0c,YAAa,OAAQzc,WAAY,WAAao0B,GAC/F,yBAAKt0B,MAAO,CAAE4O,SAAU,OAAQ3O,QAAS,OAAQ0c,YAAa,OAAQzc,WAAY,WAAasK,EAAKxC,gBAqKxG,yBAAKhI,MAAO,CAAE+X,OAAQ,gCAAiC+G,aAAc,QACjE,yBAAK9e,MAAO,CAAEoV,gBAAiB,YAAa4N,oBAAqB,MAAOC,qBAAsB,MAAO7iB,OAAQ,OAAQmU,QAAS,WAAYtU,QAAS,OAAQC,WAAY,WACnK,wBAAIF,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBAAtC,6BAEJ,yBAAKxO,MAAO,CAAEo0B,UAAW,QAAS3f,SAAU,OAAQ4f,UAAW,SAjK3D,IAApBhB,EAASvxB,OAEL,yBAAK9B,MAAO,CAAEI,OAAQ,OAAQuc,YAAa,OAAQ1c,QAAS,OAAQC,WAAY,WAAhF,wCAMGmzB,EAAStnB,KAAI,SAACvB,EAAM3I,GACvB,MAAkB,uBAAd2I,EAAK1G,KACG,kBAAC,GAAD,CAAsBvE,IAAKsC,EAAO2I,KAAMA,EAAM2nB,aAAa,IAC9C,uBAAd3nB,EAAK1G,KACJ,kBAAC,GAAD,CAAsBvE,IAAKsC,EAAO2I,KAAMA,EAAM2nB,aAAa,SADhE,W,ICRRoC,G,2MA3JXx1B,MAAQ,CACJ8C,OAAO,EACP0R,aAAa,EACbihB,YAAY,EACZC,YAAa,KACbrpB,OAAQ,GACRspB,QAAS,M,4EAEC,IAAD,O5B0iCRhvB,IAAMC,IAAI,Q4BxiCN6D,MAAK,SAAAtF,GAAU,EAAK5E,SAAS,CAAE8L,OAAQlH,EAAKA,UAC5C0F,OAAM,SAAAC,GAAShH,QAAQC,IAAI,6BAA+BwK,KAAKC,UAAU1D,S,0CAG9ExK,KAAKC,SAAS,CAAEo1B,QAASr1B,KAAKI,MAAMC,SAASkV,WAC7CvV,KAAKs1B,e,2CAIL,IAAM90B,EAAOR,KAAKI,MAAMC,SAASkV,SACbvV,KAAKN,MAAjB21B,UACQ70B,IACZR,KAAKC,SAAS,CAAEo1B,QAASr1B,KAAKI,MAAMC,SAASkV,WACR,yBAAjCvV,KAAKI,MAAMC,SAASkV,UACpBvV,KAAKC,SAAS,CAAEm1B,YAAa,U,0CAKpB,IAAD,OACVG,EAAe,CAAE30B,QAAS,OAAQI,oBAAqB,YAAaw0B,QAAS,MAAOxb,UAAW,OAC/Fyb,EAAiB,CAAE70B,QAAS,OAAQI,oBAAqB,kBAAmBkV,iBAAkB,cAAesf,QAAS,MAAOxb,UAAW,OACxIjO,EAAS/L,KAAKN,MAAMqM,OAC1B,GAAe,OAAXA,QAA8BjK,IAAXiK,GAA0C,IAAlBA,EAAOtJ,OAClD,OAAO,KAEX,IAAMizB,EAAqB,GAG3B,GAAI11B,KAAKN,MAAMy1B,WAAY,CACvB,IADwB,IAAD,WACd3yB,GACL,IAAME,EAAUqJ,EAAOvJ,GACjBkH,EAAS,uBAAyBhH,EAAQsH,SAASjI,WAAWe,OACzB,KAAvCJ,EAAQsH,SAASjI,WAAWe,QAC5B4yB,EAAmBxvB,KACf,kBAAC,IAAD,CAAMhG,IAAKsC,EAAOtB,GAAI,CAAEqU,SAAU7L,EAAQhK,MAAO,CAAEmF,KAAMnC,IACrD/B,MAAO,CAAE+X,OAAQ,EAAKhZ,MAAM01B,cAAgB1yB,EAAQsH,SAAW,4BAA8B,iCAAkCyV,aAAc,OAC7IhM,QAAS,WAAQ,EAAKxT,SAAS,CAAEm1B,YAAa1yB,EAAQsH,aACtD,kBAAC,GAAD,CAAgB9J,IAAKsC,EAAOqC,KAAMnC,EAASwR,YAAa,EAAKxU,MAAMwU,YAAaC,SAAUpI,OARjGvJ,EAAQ,EAAGA,EAAQuJ,EAAOtJ,OAAQD,IAAU,EAA5CA,GAaT,OACI,yBAAK7B,MAAOX,KAAKN,MAAMy1B,WAAaI,EAAeE,GAC/C,yBAAKt0B,UAAU,mBACVu0B,GAEL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOl1B,KAAI,UAAKR,KAAKI,MAAMD,MAAMK,KAAtB,cAAwCm1B,UAAWtV,KAC9D,kBAAC,IAAD,CAAO7f,KAAI,UAAKR,KAAKI,MAAMD,MAAMK,KAAtB,aAAuCm1B,UAAWC,OAMzE,IADE,IAAD,WACQpzB,GACL,IAAME,EAAUqJ,EAAOvH,QAAO,SAAUjE,EAAO2c,GAC3C,OAAOtd,OAAOW,EAAM0S,UAAYzQ,KAEpC,GAAc,IAAVA,GAAyB,KAAVA,EAEf,iBAEmB,IAAnBE,EAAQD,OACRizB,EAAmBxvB,KACf,yBAAKvF,MAAO,CAAE+X,OAAQ,oCAClB,kBAAC,GAAD,CAAyB5C,UAAWtT,EAAOtC,IAAKsC,EAAO0R,YAAa,EAAKxU,MAAMwU,gBAKzC,KAA1CxR,EAAQ,GAAGsH,SAASjI,WAAWe,OAC/B4yB,EAAmBxvB,KACf,yBAAKvF,MAAO,CAAE+X,OAAQ,oCAClB,kBAAC,GAAD,CAAyB5C,UAAWtT,EAAOtC,IAAKsC,EAAO0R,YAAa,EAAKxU,MAAMwU,gBAKvFwhB,EAAmBxvB,KACf,yBAAKvF,MAAO,CAAE+X,OAAQ,oCAClB,kBAAC,GAAD,CAAgBxY,IAAKsC,EAAOqC,KAAMnC,EAAQ,GAAIwR,YAAa,EAAKxU,MAAMwU,YAAaC,SAAUpI,OA1BxGvJ,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,EAAhCA,GAgCT,OACI,yBAAK7B,MAAOX,KAAKN,MAAMy1B,WAAaI,EAAeE,GAC9CC,K,+BAQP,IAAD,OAmBL,IAAM3pB,EAAS/L,KAAKN,MAAMqM,OACpB1E,EAAQrH,KAAKN,MAAM01B,YACnBjxB,EApBN,SAA8BiC,EAAO2F,GAOjC,GAAc,OAAV3F,EACA,MAAO,mBAGP,IAVa7F,EAUPs1B,EAAa9pB,EAAOvH,QAAO,SAAU2G,EAAM3I,EAAOyD,GACpD,OAAOkF,EAAKnB,WAAa3C,KAG7B,MAAO,QAdM9G,EAacmE,SAASmxB,EAAW,GAAG5iB,SAZtC,GACD,IAAM1S,EAELA,GAUgB,uCAKtBu1B,CAAqBzuB,EAAO0E,GACpCc,EAAW7M,KAAK+1B,oBAEtB,OACI,6BACI,yBAAKp1B,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,gBAAiB3S,WAAY,WACxE,yBAAKF,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaw0B,QAAS,QACtE,yBAAK70B,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQC,WAAY,WACvD,wBAAIF,MAAO,CAAEwO,MAAO,wBAApB,0CAAuDhL,IAE3D,yBAAKxD,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,gBAAiB3S,WAAY,SAAUwS,MAAO,UACzF,kBAAC,IAAD,CAAkB1S,MAAO,CAAEoV,iBAA4C,IAA3B/V,KAAKN,MAAMwU,YAAuB,UAAY,uBAAyB8hB,gBAAgB,uCAASC,kBAAkB,uCAASC,eAAgBl2B,KAAKN,MAAMwU,YAAaf,SAAU,SAAC8f,GAAc,EAAKhzB,SAAS,CAAEiU,YAAa+e,OACrQ,kBAAC,IAAD,CAAkBtyB,MAAO,CAAEoV,iBAA2C,IAA1B/V,KAAKN,MAAMy1B,WAAsB,UAAY,uBAAyBa,gBAAgB,2BAAOC,kBAAkB,2BAAOC,eAAgBl2B,KAAKN,MAAMy1B,WAAYhiB,SAAU,SAAC8f,GAAc,EAAKhzB,SAAS,CAAEk1B,WAAYlC,SAGtQ,yBAAKtyB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,iBAAkBC,cAAe,SACjF,oEACA,4BAAK2B,MAAS8L,OAAO,0BAG5B7B,O,GAtJKrN,a,6BCobP22B,G,2MAzbXz2B,MAAQ,CACJ02B,WAAY,EACZC,sBAAuB,GACvBC,gBAAiB,GACjBC,cAAe,GACfC,kBAAmB,GACnBC,cAAe,GACfC,aAAc,KACdC,SAAU,GACVC,WAAW,EACX/kB,KAAM,GACNzL,MAAO,GACPywB,OAAQ,GACRC,kBAAch1B,EACdi1B,eAAe,EACfC,gBAAiB,I,EAmFrBC,aAAe,WAAO,I7B3BCC,E6B4BXP,EAAa,EAAKj3B,MAAlBi3B,SACFQ,EAAW,IAAIC,SACrBT,EAAS3Q,SAAQ,SAAAqR,GACbF,EAASxU,OAAO,OAAQ0U,MAG5B,EAAKp3B,SAAS,CACV22B,WAAW,K7BnCIM,E6BsCIC,E7BrCtB9wB,IAAMyC,KAAK,aAAcouB,EAAUzwB,I6BsC/B0D,MAAK,SAAAmtB,G7BlDX,IAAoBC,K6BmDYD,EAAIzyB,K7BlDlCwB,IAAMC,IAAI,cAAgBixB,I6BmDdptB,MAAK,SAAAa,GACFd,IACKC,MAAK,SAAAa,GACF,IAAMwsB,EAAYxsB,EAAOnG,KAAKL,QAAO,SAAA2G,GAAI,MAAkC,UAA9BA,EAAKssB,QAAQC,gBACpDC,EAAY3sB,EAAOnG,KAAKL,QAAO,SAAA2G,GAAI,MAAkC,UAA9BA,EAAKssB,QAAQC,gBAC1D,EAAKz3B,SAAS,CACVo2B,sBAAuBmB,EACvBlB,gBAAiBqB,EACjBpB,cAAeiB,OAGtBjtB,OAAM,SAAAC,GACHhH,QAAQC,IAAI,oBAAsBwK,KAAKC,UAAU1D,UAG5DD,OAAM,SAAAC,UAEdD,OAAM,SAAAC,Q,mFA/GM,IAAD,OAChBxK,KAAK43B,aAAe53B,KAAK43B,aAAa5gB,KAAKhX,MAC3CA,KAAK63B,cAAgB73B,KAAK63B,cAAc7gB,KAAKhX,MAG7CA,KAAK2b,aAAe3b,KAAK2b,aAAa3E,KAAKhX,MAC3CwD,QAAQC,IAAI,iCACZyG,IACKC,MAAK,SAAAa,GACFxH,QAAQC,IAAI,oBAAsBwK,KAAKC,UAAUlD,IACjDxH,QAAQC,IAAIuH,EAAOnG,MACnB,IAAM2yB,EAAYxsB,EAAOnG,KAAKL,QAAO,SAAA2G,GAAI,MAAkC,UAA9BA,EAAKssB,QAAQC,gBACpDC,EAAY3sB,EAAOnG,KAAKL,QAAO,SAAA2G,GAAI,MAAkC,UAA9BA,EAAKssB,QAAQC,gBAC1Dl0B,QAAQC,IAAIk0B,GACZ,EAAK13B,SAAS,CACVo2B,sBAAuBmB,EACvBlB,gBAAiBqB,EACjBpB,cAAeiB,OAGtBjtB,OAAM,SAAAC,GACHhH,QAAQC,IAAI,oBAAsBwK,KAAKC,UAAU1D,S,sCAI7CstB,GAEZ93B,KAAKC,SAAS,CACVm2B,WAAY0B,M,gCAIVzwB,EAAOihB,EAAQtX,EAAW9Q,EAAKw3B,GACrC,IAAMp3B,GAAeN,KAAKN,MAAMq3B,cAChC,OAAI72B,IAAQF,KAAKN,MAAM02B,WAEf,kBAAC,IAAD,CAAMl1B,GAAI,CAAEqU,SAAU,iBAAmBlO,EAAO3H,MAAO,CAAEY,cAAa,OAAU,GAAI,MAAS+G,EAAO,OAAUihB,EAAQ,UAAa,EAAG,MAAQ,EAAO,UAAatX,EAAW,aAAgB0mB,IAAkB/2B,MAAO,CAAEI,OAAQ,OAAQsS,MAAO,QAASoM,aAAc,QAAtQ,gBAGI,O,mCAGHvf,GACT,MAAY,MAARA,EACO,SAGA,W,gCAILoE,GAGN,IAAM0P,EAAQrQ,KAAKC,MAAMU,EAAW,GAC9B2P,EAAO3P,EAAW,EACxB,OAAa,IAAT2P,EACOD,EAAQ,eAEPA,EAAQ,SAAMC,EAAO,W,oCAIjCjU,KAAKN,MAAM82B,kBAAkB9pB,KAAI,SAAC7H,EAAMrC,G7B1BzC,IAAoB4E,K6B2BQvC,EAAK4xB,c7B1B/BpwB,IAAMC,IAAI,cAAgBc,I6B2BlB+C,MAAK,SAAAa,G7BlBf,IAAsBusB,K6BmBgBvsB,EAAOnG,KAAK0yB,S7BlBhDlxB,IAAMC,IAAI,gBAAkBixB,I6BmBZptB,MAAK,SAAA4tB,GACF,IAAMC,EAAMzU,OAAO0U,IAAIC,gBAAgB,IAAIC,KAAK,CAAClqB,KAAKC,UAAU6pB,EAAQlzB,SAClEuzB,EAAOxiB,SAASyiB,cAAc,KACpCD,EAAKE,KAAON,EACZI,EAAKG,aAAa,WAAYvtB,EAAOnG,KAAK0yB,UAC1C3hB,SAAS/M,KAAK2vB,YAAYJ,GAC1BA,EAAKK,WACNluB,OAAM,SAAAC,UAEhBD,OAAM,SAAAC,Y,0CAsCE,IAAD,OAChBxK,KAAKN,MAAM82B,kBAAkB9pB,KAAI,SAAC7H,EAAMrC,G7BuiBzC,IAAuB4hB,EAAW1b,EAAQtC,GAAnBge,E6BtiBQvf,EAAK4xB,c7BsiBF/tB,E6BtiBiB7D,EAAK6zB,e7BsiBdtyB,E6BtiB8BvB,EAAKuR,G7BuiB3E/P,IAAMsyB,OAAO,sBAAwBvU,EAAY,IAAM1b,EAAS,IAAMtC,I6BtiB9D+D,MAAK,SAAAmtB,GACFptB,IACKC,MAAK,SAAAa,GACF,IAAMwsB,EAAYxsB,EAAOnG,KAAKL,QAAO,SAAA2G,GAAI,MAAkC,UAA9BA,EAAKssB,QAAQC,gBACpDC,EAAY3sB,EAAOnG,KAAKL,QAAO,SAAA2G,GAAI,MAAkC,UAA9BA,EAAKssB,QAAQC,gBAC1D,EAAKz3B,SAAS,CACVo2B,sBAAuBsB,EACvBrB,gBAAiBqB,EACjBpB,cAAeiB,EACfR,gBAAiB,QAGxBzsB,OAAM,SAAAC,GACHhH,QAAQC,IAAI,oBAAsBwK,KAAKC,UAAU1D,UAG5DD,OAAM,SAAAC,Y,mCAIN4M,GAASpX,KAAKC,SAAS,CAAE4R,KAAMuF,EAAMC,OAAO9W,U,oCAC3C6W,GAASpX,KAAKC,SAAS,CAAEmG,MAAOgR,EAAMC,OAAO9W,U,mCAC9C8C,EAAMu1B,GAAc54B,KAAKC,SAAS,CAAE62B,aAAc8B,M,kCAGxC9T,KAAM+T,MAAzB,IACQC,EAAgBC,KAAhBD,YAER,OACI,yBAAKn4B,MAAO,CAAEC,QAAS,OAAQC,WAAY,WACvC,yBAAKF,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,WAAY,SAC7D,yBAAKH,MAAO,CAAE4O,SAAU,SAAxB,6BAGA,yBAAK5O,MAAO,CAAEG,WAAY,SACtB,kBAAC,KAAD,CAAOuV,YAAY,uCAASlD,SAAUnT,KAAK63B,cAAet3B,MAAOP,KAAKN,MAAM0G,UAGpF,yBAAKzF,MAAO,CAAEC,QAAS,OAAQC,WAAY,WACvC,yBAAKF,MAAO,CAAE4O,SAAU,SAAxB,6BAGA,yBAAK5O,MAAO,CAAEG,WAAY,SACtB,kBAAC,KAAD,CAAOuV,YAAY,uCAASlD,SAAUnT,KAAK43B,aAAcr3B,MAAOP,KAAKN,MAAMmS,SAGnF,yBAAKlR,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,WAAY,SAC7D,yBAAKH,MAAO,CAAE4O,SAAU,SAAxB,6BAGA,yBAAK5O,MAAO,CAAEG,WAAY,SAGtB,kBAACg4B,EAAD,CAAaxiB,qBAAsB,SAAAC,GAAW,OAAIA,EAAYC,YAAY7V,MAAO,CAAE0S,MAAO,SAAW3E,OAAQ,aAAcsqB,OAAQ,QAC/H3iB,YAAa,CAAC,iCAAS,kCAAUlD,SAAUnT,KAAK2b,aAAcgC,YAAY,S,gDAoBxEvG,GACtBpX,KAAKC,SAAS,CACVo2B,sBAA6C,MAAtBjf,EAAMC,OAAO9W,MAAgBP,KAAKN,MAAM62B,cAAgBv2B,KAAKN,MAAM42B,gBAC1FS,cAAqC,MAAtB3f,EAAMC,OAAO9W,U,+BAK1B,IAAD,OAGC04B,EAAe,CACjBjC,gBAFwBh3B,KAAKN,MAAzBs3B,gBAGJ7jB,SAAU,SAAC6jB,EAAiBkC,GAExB,EAAKj5B,SAAS,CACVu2B,kBAAmB0C,EACnBlC,gBAAiBA,KAGzBmC,iBAAkB,SAAArB,GAAM,MAAK,CACzBsB,SAA0B,kBAAhBtB,EAAOjmB,KACjBA,KAAMimB,EAAOjmB,QAkHrB,IAGMwnB,EAjBN,SAAkBx0B,EAAMy0B,GACpB,MAAiB,KAAbA,QAAgCx3B,IAAbw3B,GAAuC,OAAbA,EACtCz0B,EAEQA,EAAKL,QAAO,SAAU2G,EAAM3I,EAAO6H,GAElD,OADYc,EAAKssB,QAAQrxB,MAAMrE,WAAWe,OAC/B3C,MAAMm5B,MAWfA,CA/BV,SAAoBz0B,EAAM00B,GACtB,MAAmB,KAAfA,QAAoCz3B,IAAfy3B,GAA2C,OAAfA,EAC1C10B,EAEQA,EAAKL,QAAO,SAAU2G,EAAM3I,EAAO6H,GAElD,IAAMmvB,EAAK52B,IAAOuI,EAAKssB,QAAQgC,YAAY13B,WAAWe,OAAQ,YAAYE,UACpE8D,EAAKlE,IAAO22B,EAAW,GAAGx3B,WAAWe,OAAQ,YAAYE,UACzD+D,EAAKnE,IAAO22B,EAAW,GAAGx3B,WAAWe,OAAQ,YAAYE,UAC/D,OAAO8D,GAAM0yB,GAAMA,GAAMzyB,KAqBvBwyB,CAxCV,SAAgB10B,EAAM60B,GAClB,MAAmB,KAAfA,QAAoC53B,IAAf43B,GAA2C,OAAfA,EAC1C70B,EAEQA,EAAKL,QAAO,SAAU2G,EAAM3I,EAAO6H,GAElD,OADWc,EAAKssB,QAAQnb,OAAOva,WAAWe,OAChC4I,QAAQguB,IAAe,KAiC/BC,CADM35B,KAAKN,MAAM22B,sBACDr2B,KAAKN,MAAMmS,MACb7R,KAAKN,MAAMo3B,cACb92B,KAAKN,MAAM0G,OACjC,QAAUtE,IAANu3B,GAAyB,OAANA,EAAc,OAAO,KAC5C,IAAMx0B,EAAOw0B,EAAE3sB,KAAI,SAACvB,EAAM3I,GACtB,MAAO,CACHtC,IAAKsC,EACL4T,GAAIjL,EAAKssB,QAAQrxB,MACjByL,KAAM1G,EAAKssB,QAAQnb,OACnBzM,OAAQ,EAAK+pB,aAAazuB,EAAKssB,QAAQvlB,MACvCzB,OAAoC,IAA5BtF,EAAK0uB,YAAYp3B,OAAe,KAA6C,IAAtC7C,OAAOuL,EAAK0uB,YAAY,GAAG1nB,SAC1E2nB,QAAqC,IAA5B3uB,EAAK0uB,YAAYp3B,OAAe,KAAO0I,EAAK0uB,YAAY,GAAGznB,MAAQ,SAAMjH,EAAK0uB,YAAY,GAAGxnB,KAAO,SAC7G0nB,SAAU,KACVrB,eAAgBvtB,EAAKssB,QAAQ/uB,OAC7B+tB,cAAetrB,EAAKssB,QAAQrT,UAC5B4V,aAAc7uB,EAAKssB,QAAQC,aAC3BuC,QAAS,KACT9pB,WAAY,EAAK+pB,UAAU/uB,EAAKssB,QAAQrxB,MAAO+E,EAAKssB,QAAQ/uB,OAAQyC,EAAKssB,QAAQrT,UAAW5hB,EAAO2I,EAAKssB,QAAQC,kBAlJnH,EAsJ2B13B,KAAKN,MAAlBi3B,GAtJd,EAsJGC,UAtJH,EAsJcD,UACbv2B,EAAQ,CACV+5B,SAAU,SAAA9C,GACN,EAAKp3B,UAAS,SAAAP,GACV,IAAM8C,EAAQ9C,EAAMi3B,SAASjrB,QAAQ2rB,GAC/B+C,EAAc16B,EAAMi3B,SAAS0D,QAEnC,OADAD,EAAYxiB,OAAOpV,EAAO,GACnB,CACHm0B,SAAUyD,OAItBE,aAAc,SAAAjD,GAIV,OAHA,EAAKp3B,UAAS,SAAAP,GAAK,MAAK,CACpBi3B,SAAS,GAAD,oBAAMj3B,EAAMi3B,UAAZ,CAAsBU,SAE3B,GAEXV,WACA4D,gBAAgB,GAGpB,OACI,yBAAK55B,MAAO,CAAE2c,YAAa,OAAQgV,aAAc,SAE7C,yBAAK3xB,MAAO,CAAEC,QAAS,OAAQE,WAAY,OAAQD,WAAY,WAC3D,yBAAKF,MAAO,CAAE4O,SAAU,OAAQxO,OAAQ,OAAQsxB,WAAY,OAAQnjB,YAAa,KAAjF,wCAGA,yBAAK3O,MAAM,KAAKY,UAAWnB,KAAKN,MAAMq3B,cAAgB,iBAAmB,uBAAwBp2B,MAAO,CAAEuO,YAAa,GAAKuE,QAAS,WAAQ,EAAK+mB,0BAA0B,CAAEnjB,OAAQ,CAAE9W,MAAO,UAA/L,sBAGA,yBAAKA,MAAM,MAAMY,UAAYnB,KAAKN,MAAMq3B,cAAmC,uBAAnB,iBAA2CtjB,QAAS,WAAQ,EAAK+mB,0BAA0B,CAAEnjB,OAAQ,CAAE9W,MAAO,WAAtK,uBAIJ,yBAAKI,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWD,OAAQ,OAAQE,cAAe,SACzFjB,KAAKy6B,YACuB,GAA5Bz6B,KAAKN,MAAMq3B,cAAyB,yBAAKp2B,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAew0B,QAAS,OAAQtmB,YAAyC,GAA5BlP,KAAKN,MAAMq3B,cAAyB,GAAK,MAC3K,yBAAKp2B,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,gBAAiB3S,WAAY,WACxE,kBAAC,KAAWT,EACR,kBAAC,KAAD,CAAQO,MAAO,CAAE0S,MAAO,SACpB,kBAAC,KAAD,CAAM5O,KAAK,WADf,8BAIJ,kBAAC,KAAD,CACIgP,QAASzT,KAAKi3B,aAAajgB,KAAKhX,MAChCo5B,SAA8B,IAApBzC,EAASl0B,OACnB9B,MAAO,CAAE0S,MAAO,SAHpB,iBAQJ,yBAAK1S,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WACjE,kBAAC,KAAD,CAAQ4S,QAASzT,KAAK06B,YAAY1jB,KAAKhX,MAAOW,MAAO,CAAE0S,MAAO,SAA9D,iBAEJ,yBAAK1S,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WACjE,kBAAC,KAAD,CAAQ4S,QAASzT,KAAK26B,kBAAkB3jB,KAAKhX,MAAOW,MAAO,CAAE0S,MAAO,SAApE,kBAEC,MAEb,6BACI,kBAAC,KAAD,CAAO4lB,aAAcA,EAAc2B,QAnM/B,CACZ,CACIz2B,MAAO,uCACP02B,UAAW,SACX36B,IAAK,SACLmT,MAAO,MAEX,CACIlP,MAAO,2BACP02B,UAAW,KACX36B,IAAK,KACLmT,MAAO,MAEX,CACIlP,MAAO,2BACP02B,UAAW,OACX36B,IAAK,OACLmT,MAAO,MAEX,CACIlP,MAAO,eACP02B,UAAW,SACX36B,IAAK,SACLmT,MAAO,MAEX,CACIlP,MAAO,2BACP02B,UAAW,SACX36B,IAAK,SACLmT,MAAO,MAEX,CACIlP,MAAO,2BACP02B,UAAW,UACX36B,IAAK,UACLmT,MAAO,MAEX,CACIlP,MAAO,iCACP02B,UAAW,aACX36B,IAAK,aACLmT,MAAO,MAEX,CACIlP,MAAO,iCACP02B,UAAW,cACX36B,IAAK,cACLmT,MAAO,MAEX,CACIlP,MAAO,qBACP02B,UAAW,iBACX36B,IAAK,iBACLmT,MAAO,OAEX,CACIlP,MAAO,qBACP02B,UAAW,gBACX36B,IAAK,gBACLmT,MAAO,OAEX,CACIlP,MAAO,8BACP02B,UAAW,eACX36B,IAAK,eACLmT,MAAO,MAEX,CACIwnB,UAAW,aACX36B,IAAK,aACLmT,MAAO,OA6HkDynB,WAAYj2B,EAAMk2B,MAAO,SAAAjD,GAC1E,MAAO,CACHkD,aAAc,SAAA5jB,GAAW,EAAK6jB,gBAAgBnD,EAAO53B,MACrDg7B,aAAc,SAAA9jB,GAAW,EAAK6jB,gBAAgB,c,GAjbhDz7B,a,UC02BX27B,I,kNAx2BXz7B,MAAQ,CACJ07B,QAAQ,EACR1N,WAAY,GACZ2N,cAAe,KACfC,UAAW,KACXC,YAAa,KACbC,SAAU,M,yFAGa,IAAD,aA0C2Cx7B,KAAKI,MAA9DqE,EA1Cc,EA0CdA,KAAM0E,EA1CQ,EA0CRA,SAAUhH,EA1CF,EA0CEA,WAAY0L,EA1Cd,EA0CcA,IAAK9B,EA1CnB,EA0CmBA,OAAQ8hB,EA1C3B,EA0C2BA,IAAK4N,EA1ChC,EA0CgCA,OAChDC,EAAO7tB,EAAI9L,WAAWe,OACtB64B,EAAO9N,EAAI9rB,WAAWe,OAEtB84B,EA7CN,SAAqBzyB,EAAU0yB,GAC3B,IAAMC,EAAeD,EAAc,OACnC,OAAiB,IAAb1yB,EACO,CACH4yB,MAAOn5B,IAAOk5B,EAAgB,OAAsBptB,OAAO,kBAC3DstB,IAAKp5B,IAAOk5B,GAAcptB,OAAO,kBACjCvF,SAAU,GAGD,IAAbA,EACO,CACH4yB,MAAOn5B,IAAOk5B,EAAgB,QAA0BptB,OAAO,kBAC/DstB,IAAKp5B,IAAOk5B,GAAcptB,OAAO,kBACjCvF,SAAU,GAGD,IAAbA,EACO,CACH4yB,MAAOn5B,IAAOk5B,EAAgB,QAA0BptB,OAAO,kBAC/DstB,IAAKp5B,IAAOk5B,GAAcptB,OAAO,kBACjCvF,SAAU,GAGX,CACH4yB,MAAOn5B,IAAOk5B,EAAgB,SAA2BptB,OAAO,kBAChEstB,IAAKp5B,IAAOk5B,GAAcptB,OAAO,kBACjCvF,SAAU,GAmBE8yB,CAAY9yB,EAhBhC,SAA0BhH,GACtB,IAAM+5B,EAAkBt5B,IAAOA,MAAS8L,OAAO,YAAa,YAAY1L,UAAa,MAC/Em5B,EAAiBv5B,IAAOA,MAAS8L,OAAO,YAAa,YAAY1L,UACjEqxB,EAAMzxB,MAASI,UACrB,OAAIb,IAAeg6B,GACX9H,EAAM6H,EACC/5B,EAAc,MAItBA,EAKOi6B,CAAiBj6B,IAkCnC,GAhCe,OAAX4J,IACa,QAATtH,GACAyF,GAAuCwxB,EAAME,EAAYG,MAAOH,EAAYI,IAAKv3B,EAAMm3B,EAAYzyB,UAC9FgB,MAAK,SAAAtF,GACFuc,KAAU,IAAMqa,GAAQpa,SACxB,EAAKC,UAAUzc,EAAKA,SAEvB0F,OAAM,SAAAC,GAAShH,QAAQC,IAAI+G,MAEvB,OAAT/F,GAA0B,OAATA,GAA0B,SAATA,GAClCyF,GAAuCwxB,EAAME,EAAYG,MAAOH,EAAYI,IAAKv3B,EAAMm3B,EAAYzyB,UAC9FgB,MAAK,SAAAtF,GACFuc,KAAU,IAAMqa,GAAQpa,SACxB,EAAKC,UAAUzc,EAAKA,SAEvB0F,OAAM,SAAAC,GAAShH,QAAQC,IAAI+G,MAEvB,QAAT/F,GACAyF,GAA6BwxB,EAAME,EAAYG,MAAOH,EAAYI,IAAKv3B,GAClE0F,MAAK,SAAAtF,GACFuc,KAAU,IAAMqa,GAAQpa,SACxB,EAAKC,UAAUzc,EAAKA,SAEvB0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI+G,MAGX,OAAT/F,IACA2c,KAAU,IAAMqa,GAAQpa,SACxBrhB,KAAKshB,UAAU,MAGR,QAAXvV,EAAkB,CAClB,IAAMjH,EAAM,IAAIC,IACV+B,EAAKlE,IAAOg5B,EAAYG,MAAO,kBAAkBrtB,OAAO,gBACxD3H,EAAKnE,IAAOg5B,EAAYI,IAAK,kBAAkBttB,OAAO,gBACtD2tB,EAAOnyB,EAAoByxB,EAAM70B,EAAIC,GACtCoD,MAAK,SAAAtF,GACF,OAAOC,EAAIG,OAAOJ,EAAKA,MAAMK,OAAOG,SAASC,WAEhDiF,OAAM,SAAAC,GAAShH,QAAQC,IAAI+G,MAE1B8xB,E9B6eX,SAAiBz1B,EAAQC,EAAIC,GAClC,OAAOV,IAAMC,IAAI,QAAUO,EAAS,IAAMC,EAAK,IAAMC,G8B9e9BmD,CAAoByxB,EAAM70B,EAAIC,GACtCoD,MAAK,SAAAtF,GACF,OAAOC,EAAIG,OAAOJ,EAAKA,MAAMK,OAAOG,SAASC,WAGhDiF,OAAM,SAAAC,GAAShH,QAAQC,IAAI+G,MAChCM,QAAQC,IAAI,CAACsxB,EAAMC,IAAOnyB,MAAK,SAAAa,GAC3B,SAASuxB,EAAcF,EAAMC,EAAM73B,GAC/B,IAAI+3B,EAAY,GACZC,EAAY,GACZC,EAAa,GACbC,EAAa,GACbC,EAAY,GACZC,EAAc,GAClB,GAAIv6B,MAAMC,QAAQ85B,GACd,IAAK,IAAI75B,EAAQ,EAAGA,EAAQ65B,EAAK55B,OAAQD,IAAS,CAC9C,IAAME,EAAU25B,EAAK75B,GACf4M,EAAK1M,EAAQo6B,MACbrtB,EAAK/M,EAAQq6B,OACb5L,EAAMzuB,EAAQoM,SACdsiB,EAAM1uB,EAAQmM,UACd8e,EAAKjrB,EAAQwrB,YACbtlB,EAAOhG,IAAOF,EAAQG,QAAQd,WAAaW,EAAQK,QAAQhB,WAAY,gBAAgBiB,eAGlFlB,IAAPsN,GACmBie,MAAfztB,OAAOwP,SAA6BtN,IAAdsN,EAAG+e,QACzBqO,EAAUt2B,KAAK,CACXkd,KAAMhU,EACNgf,KAAMxlB,SAIP9G,IAAP2N,GACmB4d,MAAfztB,OAAO6P,SAA6B3N,IAAd2N,EAAG0e,QACzBsO,EAAUv2B,KAAK,CACXkd,KAAM3T,EACN2e,KAAMxlB,SAIN9G,IAARqvB,GACoB9D,MAAhBztB,OAAOuxB,SAA+BrvB,IAAfqvB,EAAIhD,QAC3BuO,EAAWx2B,KAAK,CACZkd,KAAM+N,EACN/C,KAAMxlB,SAIN9G,IAARsvB,GACoB/D,MAAhBztB,OAAOwxB,SAA+BtvB,IAAfsvB,EAAIjD,QAC3BwO,EAAWz2B,KAAK,CACZkd,KAAMgO,EACNhD,KAAMxlB,SAIP9G,IAAP6rB,GAGmBN,MAAfztB,OAAO+tB,SAA6B7rB,IAAd6rB,EAAGQ,QACzByO,EAAU12B,KAAK,CACXkd,KAAMuK,EACNS,KAAMxlB,IAM1B,GAAItG,MAAMC,QAAQ+5B,GACd,IAAK,IAAI95B,EAAQ,EAAGA,EAAQ85B,EAAK75B,OAAQD,IAAS,CAC9C,IAAME,EAAU45B,EAAK95B,GACf6M,EAAO3M,EAAQs6B,OACrB,QAAal7B,IAATuN,GACqBge,MAAjBztB,OAAOyP,SAAiCvN,IAAhBuN,EAAK8e,OAAsB,CACnD,IAAMvlB,EAAOhG,IAAOF,EAAQG,QAAQd,WAAaW,EAAQK,QAAQhB,WAAY,gBAAgBiB,UAC7F65B,EAAY32B,KAAK,CACbkd,KAAM/T,EACN+e,KAAMxlB,KAO1B,MAAa,OAATnE,EAAwB+3B,EACf,OAAT/3B,EAAwBg4B,EACf,SAATh4B,EAA0Bo4B,EACjB,QAATp4B,EAAyB,CAACi4B,EAAYC,GAC7B,OAATl4B,EAAwBm4B,EACrB,GAEXxb,KAAU,IAAMqa,GAAQpa,SACxB7d,QAAQC,IAAI84B,EAAcvxB,EAAO,GAAIA,EAAO,GAAIvG,IAChD,EAAK6c,UAAUib,EAAcvxB,EAAO,GAAIA,EAAO,GAAIvG,U,2CAIzC,IAAD,EACoCzE,KAAKI,MAAlD+I,EADS,EACTA,SAAUhH,EADD,EACCA,WAAY0L,EADb,EACaA,IAAK9B,EADlB,EACkBA,OAAQsH,EAD1B,EAC0BA,MACrBrT,KAAKN,MAAM27B,gBACXl5B,IAClBnC,KAAKC,SAAS,CAAEo7B,cAAer7B,KAAKI,MAAM+B,aAC1CnC,KAAKi9B,2BAESj9B,KAAKN,MAAM47B,YACXvvB,IACd/L,KAAKC,SAAS,CAAEq7B,UAAWvvB,IAC3B/L,KAAKi9B,2BAELj9B,KAAKN,MAAM87B,WAAanoB,IACxBrT,KAAKC,SAAS,CAAEu7B,SAAUnoB,IAC1BrT,KAAKi9B,2BAGL9zB,IADgBnJ,KAAKN,MAAM67B,cAE3Bv7B,KAAKC,SAAS,CAAEs7B,YAAapyB,IAC7BnJ,KAAKi9B,2BAGLpvB,IADW7N,KAAKN,MAAMw9B,SAEtBl9B,KAAKC,SAAS,CAAEi9B,OAAQrvB,IACxB7N,KAAKi9B,6B,0CAMTj9B,KAAKC,SAAS,CACVo7B,cAAer7B,KAAKI,MAAM+B,WAC1Bm5B,UAAWt7B,KAAKI,MAAM2L,OACtBwvB,YAAav7B,KAAKI,MAAM+I,SACxB+zB,OAAQl9B,KAAKI,MAAM88B,OACnB1B,SAAUx7B,KAAKI,MAAMiT,QAEzBrT,KAAKi9B,4B,gCAGCvP,GAqDN,IAAI0B,EAAahO,KAAc,MArDb,MA8EdphB,KAAKI,MAhBL+8B,EA9Dc,EA8DdA,OACA5b,EA/Dc,EA+DdA,OACAka,EAhEc,EAgEdA,OACA16B,EAjEc,EAiEdA,OACAsS,EAlEc,EAkEdA,MACAlK,EAnEc,EAmEdA,SACAmlB,EApEc,EAoEdA,QACAD,EArEc,EAqEdA,QACAE,EAtEc,EAsEdA,YACA7N,EAvEc,EAuEdA,IACAD,EAxEc,EAwEdA,IACAmP,EAzEc,EAyEdA,MACAD,EA1Ec,EA0EdA,MACA5jB,EA3Ec,EA2EdA,OACAtH,EA5Ec,EA4EdA,KACAtC,EA7Ec,EA6EdA,WA8CJ,IAAMutB,EAAYrc,EAAQ,GAKpBuoB,EAhDN,SAAqBzyB,EAAU0yB,GAC3B,IAAMC,EAAeD,EAAc,OACnC,OAAiB,IAAb1yB,EACO,CACH4yB,MAAOD,EAAgB,MACvBE,IAAKF,EACL3yB,SAAU,GAGD,IAAbA,EACO,CACH4yB,MAAOD,EAAgB,OACvBE,IAAKF,EACL3yB,SAAU,GAGD,IAAbA,EACO,CACH4yB,MAAOD,EAAgB,OACvBE,IAAKF,EACL3yB,SAAU,GAGX,CACH4yB,MAAOD,EAAgB,QACvBE,IAAKF,EACL3yB,SAAU,GAsBE8yB,CAAY9yB,EAnBhC,SAA0BhH,GACtB,IAAM+5B,EAAkBt5B,IAAOA,MAAS8L,OAAO,YAAa,YAAY1L,UAAa,MAC/Em5B,EAAiBv5B,IAAOA,MAAS8L,OAAO,YAAa,YAAY1L,UACjEqxB,EAAMzxB,MAASI,UACrB,OAAIb,IAAeg6B,GACX9H,EAAM6H,EACC/5B,EAAc,MAItBA,EAQOi6B,CAAiBj6B,IAEnCqB,QAAQC,IAAIm4B,GACZ,IA+BIlZ,EA/BAlC,EAAIY,OACHW,OAAO,CAACtB,EAAKC,IACbsB,MAAM,CAACjhB,EAAQ,IAEhBkhB,EAAIb,OACHW,OAAO,CAAC6Z,EAAYG,MAAOH,EAAYI,MACvCha,MAAM,CAAC,EAAG0N,EAAY,IAGvBxN,EAAQd,KAAYZ,GACnBsB,WAAW,CAACrB,EAAKC,IACjB4B,YAAW,SAAA+M,GAAC,OAAKA,KACjBjN,SAAS,EAAG,GACZC,YAAY,IAGX+a,EAjJN,SAAsBn0B,EAAWE,GAC7B,IAAIk0B,EAAa,GACjB,GAAiB,IAAbl0B,EACA,IAAK,IAAI3G,EAAQ,EAAGA,EAAQ,GAAIA,IACxBA,EAAQ,IAAM,GACd66B,EAAWn3B,KAAK+C,EAAqB,GAARzG,EAAa,GAAK,UAItD,GAAiB,IAAb2G,EACL,IAAK,IAAI3G,EAAQ,EAAGA,EAAQ,GAAIA,IACxBA,EAAQ,IAAM,GACd66B,EAAWn3B,KAAK+C,EAAqB,EAARzG,EAAY,GAAK,GAAK,UAI1D,GAAiB,IAAb2G,EACL,IAAK,IAAI3G,EAAQ,EAAGA,EAAQ,GAAIA,IAC5B66B,EAAWn3B,KAAK+C,EAAqB,GAARzG,EAAa,GAAK,IAAO,QAI1D,IAAK,IAAIA,EAAQ,EAAGA,EAAQ,GAAIA,IAC5B66B,EAAWn3B,KAAK+C,EAAqB,GAARzG,EAAa,GAAK,IAAO,IAG9D,OAAO66B,EAuHQC,CAAa1B,EAAYG,MAAO5yB,GAC7Co0B,EArHN,SAAuB30B,EAAMO,GACzB,IAAIk0B,EAAa,GACjB,GAAiB,IAAbl0B,EACAk0B,EAAWn3B,KAAK0C,EAAQ,YAEvB,GAAiB,IAAbO,EACL,IAAK,IAAI3G,EAAQ,EAAGA,EAAQ,EAAGA,IAC3B66B,EAAWn3B,KAAK0C,EAAQ,MAAgC,GAARpG,EAAa,GAAK,GAAK,UAG1E,GAAiB,IAAb2G,EACL,IAAK,IAAI3G,EAAQ,EAAGA,EAAQ,GAAIA,IAC5B66B,EAAWn3B,KAAK0C,EAAgB,GAARpG,EAAa,GAAK,IAAO,QAIrD,IAAK,IAAIA,EAAQ,EAAGA,EAAQ,GAAIA,IAC5B66B,EAAWn3B,KAAK0C,EAAgB,GAARpG,EAAa,GAAK,IAAO,IAGzD,OAAO66B,EAiGWG,CAAc5B,EAAYG,MAAO5yB,GAEnDqZ,EAAQpB,KAAWa,GAClBH,WAAWsb,GACXhb,SAAS,EAAG,GACZC,YAAY,GACZC,YAAW,SAAUC,GAAK,OAjGpB6M,EAiGuC7M,MAE9Ckb,EAAWrc,KAAWa,GACrBH,WAAWyb,GACXnb,SAAS,EAAG,GACZC,YAAY,IACZC,YAAW,SAAUC,GAAK,OAAO3f,IAAO2f,GAAG7T,OAAO,YAwEvD,GApEIgU,EADA2L,EACMjN,KAAU,IAAMG,GACjBoB,OAAO,OACPC,KAAK,KAAM6Y,GACX96B,MAAM,QAAS0S,EAAQ,IACvB1S,MAAM,SAAUI,EAAS,IACzB4hB,OAAO,KACPC,KAAK,YAAa,oBAGnB0L,EACMlN,KAAU,IAAMG,GACjBoB,OAAO,OACPC,KAAK,KAAM6Y,GACX96B,MAAM,QAAS0S,EAAQ,IACvB1S,MAAM,SAAUI,EAAS,IACzB4hB,OAAO,KACPC,KAAK,YAAa,mBAIjBxB,KAAU,IAAMG,GACjBoB,OAAO,OACPC,KAAK,KAAM6Y,GACX96B,MAAM,QAAS0S,EAAQ,IACvB1S,MAAM,SAAUI,EAAS,IACzB4hB,OAAO,KACPC,KAAK,YAAa,mBAI3ByL,GACA3L,EAAIC,OAAO,KACNE,KAAKL,GACLI,KAAK,QAAS,QAGnB0L,GACA5L,EAAIC,OAAO,KACNE,KAAK4a,GACL7a,KAAK,QAAS,QAIvBF,EAAIC,OAAO,KACNE,KAAKX,GACLU,KAAK,QAAS,QAInBF,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE2Z,EAAYG,QACzBnZ,KAAK,KAAMpC,EAAEE,IACbkC,KAAK,KAAMX,EAAE2Z,EAAYI,MACzBpZ,KAAK,KAAMpC,EAAEE,IACb/f,MAAM,SAAU,uBAChBA,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,KAE/B+hB,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE2Z,EAAYG,QACzBnZ,KAAK,KAAMpC,EAAEC,IACbmC,KAAK,KAAMX,EAAE2Z,EAAYI,MACzBpZ,KAAK,KAAMpC,EAAEC,IACb9f,MAAM,SAAU,uBAChBA,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,KAGd,IAAbwI,EAAgB,CAChB,IAAK,IAAI3G,EAAQ,EAAGA,EAAQ,GAAIA,IACvBA,EAAQ,KAAQ,EACjBkgB,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE2Z,EAAYG,MAAiB,GAARv5B,EAAa,GAAK,MACpDogB,KAAK,KAAM,GACXA,KAAK,KAAMX,EAAE2Z,EAAYG,MAAiB,GAARv5B,EAAa,GAAK,MACpDogB,KAAK,KAAM7hB,GACXJ,MAAM,SAAU,mBAChBA,MAAM,eAAgB,GACpB6B,EAAQ,IAAM,EACrBkgB,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE2Z,EAAYG,MAAiB,GAARv5B,EAAa,GAAK,MACpDogB,KAAK,KAAM,GACXA,KAAK,KAAMX,EAAE2Z,EAAYG,MAAiB,GAARv5B,EAAa,GAAK,MACpDogB,KAAK,KAAM7hB,GACXJ,MAAM,SAAU,mBAChBA,MAAM,eAAgB,GAG3B+hB,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE2Z,EAAYG,MAAiB,GAARv5B,EAAa,GAAK,MACpDogB,KAAK,KAAM,GACXA,KAAK,KAAMX,EAAE2Z,EAAYG,MAAiB,GAARv5B,EAAa,GAAK,MACpDogB,KAAK,KAAM7hB,GACXJ,MAAM,SAAU,uBAChBA,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,KAIvCwvB,EAAWyL,EAAYG,MAAO5yB,EAAUwmB,EAAOC,EAAOnrB,GACtDi5B,EAASj5B,EAAMsH,EAAQ2hB,EAAYvkB,EAAU,IAGjD,GAAiB,IAAbA,EAAgB,CAChB,IAAK,IAAI3G,EAAQ,EAAGA,EAAQ,GAAIA,IACvBA,EAAQ,IAAO,EAChBkgB,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE2Z,EAAYG,MAAiB,GAARv5B,EAAa,GAAK,IAAO,IAC3DogB,KAAK,KAAM,GACXA,KAAK,KAAMX,EAAE2Z,EAAYG,MAAiB,GAARv5B,EAAa,GAAK,IAAO,IAC3DogB,KAAK,KAAM7hB,GACXJ,MAAM,SAAU,mBAChBA,MAAM,eAAgB,GACpB6B,EAAQ,IAAM,EACrBkgB,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE2Z,EAAYG,MAAiB,GAARv5B,EAAa,GAAK,IAAO,IAC3DogB,KAAK,KAAM,GACXA,KAAK,KAAMX,EAAE2Z,EAAYG,MAAiB,GAARv5B,EAAa,GAAK,IAAO,IAC3DogB,KAAK,KAAM7hB,GACXJ,MAAM,SAAU,mBAChBA,MAAM,eAAgB,GAG3B+hB,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE2Z,EAAYG,MAAiB,GAARv5B,EAAa,GAAK,IAAO,IAC3DogB,KAAK,KAAM,GACXA,KAAK,KAAMX,EAAE2Z,EAAYG,MAAiB,GAARv5B,EAAa,GAAK,IAAO,IAC3DogB,KAAK,KAAM7hB,GACXJ,MAAM,SAAU,uBAChBA,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,KAIvCwvB,EAAWyL,EAAYG,MAAO5yB,EAAUwmB,EAAOC,EAAOnrB,GACtDi5B,EAASj5B,EAAMsH,EAAQ2hB,EAAYvkB,EAAU,IAEjD,GAAiB,IAAbA,EAAgB,CAChB,IAAK,IAAI3G,EAAQ,EAAGA,EAAQ,GAAIA,IAExBkgB,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE2Z,EAAYG,MAAiB,GAARv5B,EAAa,GAAK,IAAO,IAC3DogB,KAAK,KAAM,GACXA,KAAK,KAAMX,EAAE2Z,EAAYG,MAAiB,GAARv5B,EAAa,GAAK,IAAO,IAC3DogB,KAAK,KAAM7hB,GACXJ,MAAM,SAAU,mBAChBA,MAAM,eAAgB,GAanCwvB,EAAWyL,EAAYG,MAAO5yB,EAAUwmB,EAAOC,EAAOnrB,GACtDi5B,EAASj5B,EAAMsH,EAAQ2hB,EAAYvkB,EAAU,IAEjD,GAAiB,IAAbA,EAAgB,CAChB,IAAK,IAAI3G,EAAQ,EAAGA,EAAQ,GAAIA,IAC5BkgB,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE2Z,EAAYG,MAAiB,GAARv5B,EAAa,GAAK,IAAO,KAC3DogB,KAAK,KAAM,GACXA,KAAK,KAAMX,EAAE2Z,EAAYG,MAAiB,GAARv5B,EAAa,GAAK,IAAO,KAC3DogB,KAAK,KAAM7hB,GACXJ,MAAM,SAAU,mBAChBA,MAAM,eAAgB,GAG/BwvB,EAAWyL,EAAYG,MAAO5yB,EAAUwmB,EAAOC,EAAOnrB,GACtDi5B,EAASj5B,EAAMsH,EAAQ2hB,EAAYvkB,EAAU,IAqCjD,SAASsmB,EAAeC,EAAWvmB,GAC/B,OAAiB,IAAbA,EACkB,SAAXg0B,EAAoBzN,EAAY,KAAOA,EAAY,GAE7C,IAAbvmB,EACkB,SAAXg0B,EAAoBzN,EAAY,KAAOA,EAAY,KAE7C,IAAbvmB,EACkB,SAAXg0B,EAAoBzN,EAAY,GAAKA,EAAY,KAE1C,SAAXyN,EAAoBzN,EAAY,GAAKA,EAAY,KAE5D,SAASS,EAAWlnB,EAAWE,EAAUwmB,EAAOC,EAAOnrB,GAEnD,IADA,IAAMorB,EA/CV,SAAmB5mB,EAAWE,GAC1B,SAAS2mB,EAAY7mB,EAAWE,GAE5B,IADA,IAAI4mB,EAAY,GACPvtB,EAAQ,EAAGA,EAAQ2G,EAAU3G,IAClC,GAAiB,KAAb2G,EAAiB,CACjB,IAAM6mB,EAAU/mB,EAAa,KAA2B,GAARzG,EAAa,GAAK,IAClEutB,EAAU7pB,KAAK8pB,QAEd,GAAiB,KAAb7mB,EAAiB,CACtB,IAAM6mB,EAAU/mB,EAAa,KAA+B,EAARzG,EAAY,GAAK,GAAK,IAC1EutB,EAAU7pB,KAAK8pB,QAEd,GAAiB,KAAb7mB,EAAiB,CACtB,IAAM6mB,EAAU/mB,EAAa,MAA+B,EAARzG,EAAY,GAAK,GAAK,IAC1EutB,EAAU7pB,KAAK8pB,OAEd,CACD,IAAMA,EAAU/mB,EAAa,MAAgC,GAARzG,EAAa,GAAK,GAAK,IAC5EutB,EAAU7pB,KAAK8pB,GAGvB,OAAOD,EAEX,OACWD,EAAY7mB,EADN,IAAbE,EAC8B,GAEjB,IAAbA,EAC8B,GAEjB,IAAbA,EAC8B,GAEJ,IAeR8mB,CAAUhnB,EAAWE,GAClC3G,EAAQ,EAAGA,EAAQqtB,EAAcptB,OAAQD,IAAS,CACvD,IAAM0tB,EAAWT,EAAepc,EAAOlK,GACjCzG,EAAUmtB,EAAcrtB,GAC9BkgB,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAEvf,IACbkgB,KAAK,KAAMpC,EAAEmP,IACb/M,KAAK,KAAMX,EAAEvf,IACbkgB,KAAK,KAAMpC,EAAEoP,IACbjvB,MAAM,SAAU4tB,GAChB5tB,MAAM,UAAW,IACjBA,MAAM,eAAgBuvB,GAEd,QAATzrB,GAA2B,QAATA,GAClBie,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAEvf,IACbkgB,KAAK,KAAMpC,EAAE,KACboC,KAAK,KAAMX,EAAEvf,IACbkgB,KAAK,KAAMpC,EAAE,KACb7f,MAAM,SAAU4tB,GAChB5tB,MAAM,UAAW,IACjBA,MAAM,eAAgBuvB,IAIvC,SAASwN,EAASj5B,EAAMsH,EAAQ2hB,EAAYvkB,EAAU+mB,GAClD,SAASyN,EAAYx0B,GACjB,OAAiB,IAAbA,EACO,KAEM,IAAbA,EACO,KAEM,IAAbA,EACO,MAEJ,MAEX,GAAe,OAAX4C,EAAiB,CACjB,GAAa,QAATtH,EAAgB,CAGhB,IAFA,IAAM6rB,EAAW5C,EAAWpf,KACtBiiB,EAAW7C,EAAWtf,KACnB5L,EAAQ,EAAGA,EAAQ+tB,EAAS9tB,OAAQD,IAAS,CAClD,IAAME,EAAU6tB,EAAS/tB,GACnBguB,EAAK9tB,EAAQ+tB,GACbC,EAAKhuB,EAAQiuB,GACbC,EAAKluB,EAAQmuB,GACbC,EAAKpuB,EAAQquB,GACbC,EAAQpuB,IAAOF,EAAQkG,KAAM,uBAAuB5F,UAAY26B,EAAYx0B,GAClFuZ,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE+O,IACbpO,KAAK,KAAMX,EAAE+O,IACbpO,KAAK,KAAMpC,EAAEgQ,IACb5N,KAAK,KAAMpC,EAAEsQ,IACblO,KAAK,SAAU2L,GACf5tB,MAAM,UAAW,IACjBA,MAAM,eAAgB,GAE3B+hB,EAAIC,OAAO,QACNC,KAAK,IAAKX,EAAE+O,GAASd,EAAW,GAChCtN,KAAK,IAAKpC,EAAEoQ,IACZhO,KAAK,SAAWpC,EAAEkQ,GAAMlQ,EAAEoQ,IAC1BhO,KAAK,QAASsN,GACdtN,KAAK,SAAU2L,GACf5tB,MAAM,UAAW,IACjBA,MAAM,OAAQ,uBACdA,MAAM,eAAgB,GAE3B+hB,EACKuO,UAAU,QACVpsB,KAAK,CAAC2rB,EAAIM,IACVI,QACAvO,OAAO,QACPC,KAAK,KAAMX,EAAE+O,GAASd,EAAW,GACjCtN,KAAK,KAAMX,EAAE+O,GAASd,EAAW,GACjCtN,KAAK,MAAM,SAAUL,GAAK,OAAQ/B,EAAE+B,MACpCK,KAAK,MAAM,SAAUL,GAAK,OAAQ/B,EAAE+B,MACpCK,KAAK,SAAU2L,GACf5tB,MAAM,UAAW,IACjBA,MAAM,eAAgB,GAE/B,IAAK,IAAI6B,EAAQ,EAAGA,EAAQ8tB,EAAS7tB,OAAQD,IAAS,CAClD,IAAME,EAAU4tB,EAAS9tB,GACnBguB,EAAK9tB,EAAQ+tB,GACbC,EAAKhuB,EAAQiuB,GACbC,EAAKluB,EAAQmuB,GACbC,EAAKpuB,EAAQquB,GACbC,EAAQpuB,IAAOF,EAAQkG,KAAM,uBAAuB5F,UAAY26B,EAAYx0B,GAClFuZ,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE+O,IACbpO,KAAK,KAAMX,EAAE+O,IACbpO,KAAK,KAAMpC,EAAEgQ,IACb5N,KAAK,KAAMpC,EAAEsQ,IACblO,KAAK,SAAU2L,GAEf5tB,MAAM,eAAgB,GAE3B+hB,EAAIC,OAAO,QACNC,KAAK,IAAKX,EAAE+O,GAASd,EAAW,GAChCtN,KAAK,IAAKpC,EAAEoQ,IACZhO,KAAK,SAAWpC,EAAEkQ,GAAMlQ,EAAEoQ,IAC1BhO,KAAK,QAASsN,GACdtN,KAAK,SAAU2L,GACf5tB,MAAM,OAAQ,uBACdA,MAAM,eAAgB,GAE3B+hB,EACKuO,UAAU,QACVpsB,KAAK,CAAC2rB,EAAIM,IACVI,QACAvO,OAAO,QACPC,KAAK,KAAMX,EAAE+O,GAASd,EAAW,GACjCtN,KAAK,KAAMX,EAAE+O,GAASd,EAAW,GACjCtN,KAAK,MAAM,SAAUL,GAAK,OAAQ/B,EAAE+B,MACpCK,KAAK,MAAM,SAAUL,GAAK,OAAQ/B,EAAE+B,MACpCK,KAAK,SAAU2L,GACf5tB,MAAM,eAAgB,IAGnC,GAAa,OAAT8D,GAA0B,OAATA,GAA0B,SAATA,EAClC,IAAK,IAAIjC,EAAQ,EAAGA,EAAQkrB,EAAWjrB,OAAQD,IAAS,CACpD,IAAME,EAAUgrB,EAAWlrB,GACrBguB,EAAK9tB,EAAQ+tB,GACbC,EAAKhuB,EAAQiuB,GACbC,EAAKluB,EAAQmuB,GACbC,EAAKpuB,EAAQquB,GACbC,EAAQpuB,IAAOF,EAAQkG,KAAM,uBAAuB5F,UAAY26B,EAAYx0B,GAClFuZ,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE+O,IACbpO,KAAK,KAAMX,EAAE+O,IACbpO,KAAK,KAAMpC,EAAEgQ,IACb5N,KAAK,KAAMpC,EAAEsQ,IACblO,KAAK,SAAU2L,GAEf5tB,MAAM,eAAgB,GAE3B+hB,EAAIC,OAAO,QACNC,KAAK,IAAKX,EAAE+O,GAASd,EAAW,GAChCtN,KAAK,IAAKpC,EAAEoQ,IACZhO,KAAK,SAAWpC,EAAEkQ,GAAMlQ,EAAEoQ,IAC1BhO,KAAK,QAASsN,GACdtN,KAAK,SAAU2L,GACf5tB,MAAM,OAAQ,uBACdA,MAAM,eAAgB,GAE3B+hB,EACKuO,UAAU,QACVpsB,KAAK,CAAC2rB,EAAIM,IACVI,QACAvO,OAAO,QACPC,KAAK,KAAMX,EAAE+O,GAASd,EAAW,GACjCtN,KAAK,KAAMX,EAAE+O,GAASd,EAAW,GACjCtN,KAAK,MAAM,SAAUL,GAAK,OAAQ/B,EAAE+B,MACpCK,KAAK,MAAM,SAAUL,GAAK,OAAQ/B,EAAE+B,MACpCK,KAAK,SAAU2L,GACf5tB,MAAM,eAAgB,GAInC,GAAa,QAAT8D,EACA,IAAK,IAAIjC,EAAQ,EAAGA,EAAQkrB,EAAWjrB,OAAQD,IAAS,CACpD,IAAME,EAAUgrB,EAAWlrB,GACrBwuB,EAAQpuB,IAAOF,EAAQ0rB,KAAM,uBAAuBprB,UACpDmuB,EAAMzuB,EAAQyuB,IACdC,EAAM1uB,EAAQ0uB,IACR,IAARD,GAAqB,IAARC,IAIb1O,EAAIC,OAAO,UACNC,KAAK,KAAMX,EAAE+O,IACbpO,KAAK,KAAMpC,EAAE2Q,IACbvO,KAAK,IAAK,GACVjiB,MAAM,OAAQ4tB,GAGnB7L,EAAIC,OAAO,UACNC,KAAK,KAAMX,EAAE+O,IACbpO,KAAK,KAAMpC,EAAE4Q,IACbxO,KAAK,IAAK,GACVjiB,MAAM,UAAW,IACjBA,MAAM,OAAQ4tB,UAO/B,GAAa,QAAT9pB,GAA2B,QAATA,EAAgB,CAClC,QAAmB3C,IAAf4rB,EACA,OAAO,KAEX,GAA0B,IAAtBA,EAAWjrB,OACX,OAAO,KAIX,IAFA,IAAM0uB,EAAMzD,EAAW,GACjB0D,EAAM1D,EAAW,GACdlrB,EAAQ,EAAGA,EAAQ2uB,EAAI1uB,OAAQD,IAAS,CAC7C,IAAME,EAAUyuB,EAAI3uB,GACpBkgB,EAAIC,OAAO,UACNC,KAAK,KAAMX,EAAEvf,EAAQ0rB,OACrBxL,KAAK,KAAMpC,EAAE9d,EAAQ0gB,OACrBR,KAAK,IAAK,GACVjiB,MAAM,OAAQ4tB,GAIvB,IAAK,IAAI/rB,EAAQ,EAAGA,EAAQ4uB,EAAI3uB,OAAQD,IAAS,CAC7C,IAAME,EAAU0uB,EAAI5uB,GACpBkgB,EAAIC,OAAO,UACNC,KAAK,KAAMX,EAAEvf,EAAQ0rB,OACrBxL,KAAK,KAAMpC,EAAE9d,EAAQ0gB,OACrBR,KAAK,IAAK,GACVjiB,MAAM,OAAQ4tB,GACd5tB,MAAM,UAAW,SAIzB,CACD6C,QAAQC,IAAIgB,GACZjB,QAAQC,IAAIiqB,GACZ,IAAK,IAAIlrB,EAAQ,EAAGA,EAAQkrB,EAAWjrB,OAAQD,IAAS,CACpD,IAAME,EAAUgrB,EAAWlrB,GAC3BkgB,EAAIC,OAAO,UACNC,KAAK,KAAMX,EAAEvf,EAAQ0rB,OACrBxL,KAAK,KAAMpC,EAAE9d,EAAQ0gB,OACrBR,KAAK,IAAK,GACVjiB,MAAM,OAAQ4tB,Q,oCAUnCvuB,KAAKC,SAAS,CACVm7B,QAASp7B,KAAKN,MAAM07B,W,+BAGlB,IACE7Z,EAAWvhB,KAAKI,MAAhBmhB,OACR,OACI,yBAAKnL,GAAImL,EAAQ5gB,MAAO,CAAEi9B,WAAY,U,GAp2BTp+B,c,qBCof1Bq+B,ICxfcr+B,Y,kNDazBE,MAAQ,CACJo+B,WAAY,EACZ/xB,OAAQ,KACRuE,SAAS,EACTytB,iBAAiB,EACjBC,eAAgB,EAChBC,iBAAkB,EAClBnb,WAAY,KACZob,qBAAsB,KACtBC,qBAAsB,KAEtBpxB,mBAAoB,KACpBqxB,SAAU,KACV5W,cAAe,KACf6W,iBAAkB,KAElB/M,UAAU,G,EAsBdC,SAAW,WACP,EAAKtxB,SAAS,CACVqxB,UAAU,K,EAIlBE,SAAW,SAACpiB,EAAIqiB,EAAMrjB,GACH,EAAK1O,MAAM4xB,WAEtBliB,EAAK,KAAOA,EAAK,KAAO,EAAKmiB,WAC7BE,EAAO,IAAMA,EAAO,IAAM,EAAKF,WAC/BnjB,EAAO,IAAMA,EAAO,IAAM,EAAKmjB,a,oFA/BjB,IACVpvB,EAAenC,KAAKI,MAApB+B,WACAqlB,EAAkBxnB,KAAKN,MAAvB8nB,cACF8W,EAAWt+B,KAAKI,MAAMqe,SAASpX,MAAMtF,WAAWe,OAChDs7B,EAAWp+B,KAAKN,MAAM0+B,SACtBhQ,EAAOxrB,IAAO5C,KAAKu+B,UAAUp8B,EAAYnC,KAAKN,MAAMo+B,YAAYl1B,MAAM8F,OAAO,kBAC/E4vB,IAAaF,GAAYj8B,IAAeqlB,IACxCxnB,KAAKC,SAAS,CAAEm+B,SAAUE,EAAU9W,cAAerlB,EAAYk8B,iBAAkBr+B,KAAKu+B,UAAUp8B,EAAYnC,KAAKN,MAAMo+B,YAAYU,WACnIx+B,KAAKoJ,iBAAiBglB,EAAKxlB,KAAM01B,M,0CAGrB,IAERn8B,EAAenC,KAAKI,MAApB+B,WACFisB,EAAOxrB,IAAO5C,KAAKu+B,UAAUp8B,EAAYnC,KAAKN,MAAMo+B,YAAYl1B,MAAM8F,OAAO,kBAC7E4vB,EAAWt+B,KAAKI,MAAMqe,SAASpX,MAAMtF,WAAWe,OACtD9C,KAAKC,SAAS,CAAEm+B,SAAUE,EAAU9W,cAAerlB,EAAYk8B,iBAAkBr+B,KAAKu+B,UAAUp8B,EAAYnC,KAAKN,MAAMo+B,YAAYU,WACnIx+B,KAAKoJ,iBAAiBglB,EAAMkQ,K,gCAkBtBn8B,EAAYgH,GAQlB,IACMP,EARN,SAAqB61B,GAEjB,OADY77B,MAASI,UACXy7B,EACCA,EAAe,MAEnBA,EAGEC,CADO97B,IAAOA,MAAS8L,OAAO,YAAa,YAAY1L,UAAa,OAE3E27B,EAAkBx8B,EAAc,MAChCy8B,EAAah8B,MAAS0D,IAAI,SAChC,GAAIq4B,IAAoB/1B,EAAM,CAE1B,IAAMi2B,EAAUj8B,IAAOA,MAAS8L,OAAO,cAAe,cAAc1L,UACpE,GAAiB,IAAbmG,EACA,MAAO,CACHP,KAAMi2B,EAAW,KACjBL,SAAUI,EAAa,GAG/B,IAAMlwB,EAAShK,SAASk6B,EAAa,GAAK,EAC1C,MAAO,CACHh2B,KAAMi2B,EAAoB,GAATnwB,EAAc,GAAK,IACpC8vB,SAAU,GAAK95B,SAAU9B,IAAOgG,EAAQ,OAAsBrF,KAAKX,IAAOi8B,EAAoB,GAATnwB,EAAc,GAAK,KAAQ,SAAW,IAInI,IAAMmwB,EAAUj8B,IAAOA,MAAS8L,OAAO,YAAa,YAAY1L,UAAa,OAC7E,OAAiB,IAAbmG,EACO,CACHP,KAAMi2B,EAAW,KACjBL,SAAU,IAGX,CACH51B,KAAMi2B,EAAW,MACjBL,SAAU,M,uCAKDpQ,EAAMkQ,GAAW,I/BurCAl4B,EAAOwC,EAAMO,E+BvrCd,OACvB21B,EAAW9+B,KAAK++B,8B/BsrCQ34B,E+BrrCIk4B,E/BqrCG11B,E+BrrCOwlB,E/BqrCDjlB,E+BrrCO21B,E/BsrCjDz4B,IAAMC,IAAI,mCAAqCF,EAAQ,IAAMwC,EAAO,IAAMO,I+BrrCtEgB,MAAK,SAAAtF,GAAUrB,QAAQC,IAAIoB,EAAKA,MAAO,EAAK5E,SAAS,CAAE8M,mBAAoBlI,EAAKA,UAChF0F,OAAM,SAAAC,GAAShH,QAAQC,IAAI+G,Q,mCAGvBrB,GAAW,IAAD,OACf61B,EAAY,GAChB,GAAiB,IAAb71B,EACA,IADiB,IAAD,WACP3G,GACL,IAAMy8B,EAAcz8B,EAAQ,EACxBy8B,IAAgB,EAAKv/B,MAAM2+B,iBAC3BW,EAAU94B,KAAK,yBAAKhG,IAAKsC,EAAO7B,MAAO,CAAEI,OAAQ,IAAKsS,MAAO,OAAQqF,OAAQ,sCAE5EsmB,EAAU94B,KAAK,yBAAKhG,IAAKsC,EAAO7B,MAAO,CAAEI,OAAQ,IAAKsS,MAAO,OAAQmB,OAAQ,WAAaf,QAAS,kBAAM,EAAKyrB,iBAAiBD,EAAa91B,QAL5I3G,EAAQ,EAAGA,EAAQ,GAAIA,IAAU,EAAjCA,QAST,IADE,IAAD,WACQA,GACL,IAAMy8B,EAAcz8B,EAAQ,EACxBy8B,IAAgB,EAAKv/B,MAAM2+B,iBAC3BW,EAAU94B,KAAK,yBAAKhG,IAAKsC,EAAO7B,MAAO,CAAEI,OAAQ,IAAKsS,MAAO,OAAQqF,OAAQ,sCAE5EsmB,EAAU94B,KAAK,yBAAKhG,IAAKsC,EAAO7B,MAAO,CAAEI,OAAQ,IAAKsS,MAAO,OAAQmB,OAAQ,WAAaf,QAAS,kBAAM,EAAKyrB,iBAAiBD,EAAa91B,QAL5I3G,EAAQ,EAAGA,EAAQ,GAAIA,IAAU,EAAjCA,GAQb,OAAOw8B,I,mDAKP,OAAkB,IADAh/B,KAAKN,MAAMo+B,WAElB,EAEJ,I,uCAGMluB,EAAQkvB,GAAU,IAcvB38B,EAAenC,KAAKI,MAApB+B,WACFyG,EAAOhG,IAdb,SAAmBT,EAAY28B,GAC3B,IAAMK,EAAMh9B,EAAc,OAC1B,OAAiB,IAAb28B,EACOK,EAAO,MAEXA,EAAO,OASEl2B,CAAU9G,EAAY28B,GAP1C,SAAyBA,GACrB,OAAiB,IAAbA,EACO,EAEJ,EAG4CM,CAAgBN,IAAalvB,EAAS,GAAK,GAAK,GAAK,KAAOlB,OAAO,kBACpH4vB,EAAWt+B,KAAKI,MAAMqe,SAASpX,MAAMtF,WAAWe,OACtD9C,KAAKC,SAAS,CAAEo+B,iBAAkBzuB,IAClC5P,KAAKoJ,iBAAiBR,EAAM01B,K,+BAGtB,IAAD,OAOL,SAASe,EAAgB9+B,GACrB,YAAcuB,IAAVvB,GAAiC,OAAVA,EAChB,KAEJA,EAwCX,SAAS4xB,EAAW5xB,EAAOqvB,EAAOD,GAC9B,QAAIpvB,EAAQqvB,GAASrvB,EAAQovB,GA4BjC,IAf2BkM,EAerBxoB,EAAmC,IAA3BkQ,OAAOC,OAAOC,WACtB6b,EApEN,SAA2B/+B,GACvB,SAASg/B,EAAW1Z,EAAUphB,GAC1B,IAAM+6B,EAAa3Z,EAASrhB,QAAO,SAAUjE,EAAOiC,EAAO6H,GACvD,OAAO9J,EAAMkE,OAASA,KAE1B,OAA0B,IAAtB+6B,EAAW/8B,OACJ,KAEJ+8B,EAAW,GAAGC,IAEzB,YAAc39B,IAAVvB,GAAiC,OAAVA,EAChB,CACH6O,GAAI,KACJK,GAAI,KACJC,GAAI,KACJL,KAAM,KACNjB,KAAM,KACNI,KAAM,KACNF,KAAM,KACNkkB,KAAM,KACND,KAAM,KACNd,KAAM,MAGP,CACHriB,GAAImwB,EAAWh/B,EAAO,MACtBkP,GAAI8vB,EAAWh/B,EAAO,MACtBmP,GAAI6vB,EAAWh/B,EAAO,MACtB8O,KAAMkwB,EAAWh/B,EAAO,QACxB6N,KAAMmxB,EAAWh/B,EAAO,QACxBiO,KAAM+wB,EAAWh/B,EAAO,QACxB+N,KAAMixB,EAAWh/B,EAAO,QACxBkxB,KAAM8N,EAAWh/B,EAAO,QACxBgyB,KAAMgN,EAAWh/B,EAAO,QACxBiyB,KAAM+M,EAAWh/B,EAAO,SAkCZm/B,CAAkB1/B,KAAKN,MAAMqN,oBAC3C4yB,GAjBqB9D,EAiBW77B,KAAKI,MAAM+B,WAhB5B,IAgBwCnC,KAAKN,MAAMo+B,WAfzD,CACH70B,UAAW4yB,EAAc,MACzB3yB,QAAS2yB,EAAc,QAIpB,CACH5yB,UAAW4yB,EAAc,OAAwB,OACjD3yB,QAAS2yB,EAAc,SAQ7B15B,EAAanC,KAAKI,MAAM+B,WAE9BnC,KAAKwxB,SAAS8N,EAAYlwB,GAAIkwB,EAAY7N,KAAM6N,EAAYlxB,MAC5D,IArFqB7N,EAqFfyE,EAAShF,KAAKN,MAAM4xB,SAC1B,OACI,yBAAK3wB,MAAO,CAAE+X,OAAQ,qCAClB,yBAAK/X,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUE,OAAQ,OAAQgV,gBAAiB,YAAab,QAAS,WAAYuK,aAAc,gBAClI,yBAAK9e,MAAO,CAAE4O,SAAU,SAAxB,4BACA,yBAAK5O,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaw0B,QAAS,MAAO10B,WAAY,SACzF,yBAAKK,UAAiC,OAAtBnB,KAAKN,MAAMqM,OAAkB,iBAAmB,uBAAwBpL,MAAO,CAAEuO,YAAa,OAASuE,QAAS,WAAQ,EAAKxT,SAAS,CAAE8L,OAAQ,KAAMsyB,iBAAkB,SAAxL,kCAGA,yBAAKl9B,UAAiC,QAAtBnB,KAAKN,MAAMqM,OAAmB,iBAAmB,uBAAwB0H,QAAS,WAAQ,EAAKxT,SAAS,CAAE8L,OAAQ,MAAOsyB,iBAAkB,SAA3J,yCAIJ,yBAAK19B,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaw0B,QAAS,MAAO10B,WAAY,SACzF,yBAAKK,UAAqC,IAA1BnB,KAAKN,MAAMo+B,WAAmB,mBAAqB,yBAA0Bn9B,MAAO,CAAEuO,YAAa,OAASuE,QAAS,WAAQ,EAAKxT,SAAS,CAAE69B,WAAY,EAAGO,iBAAkB,EAAKE,UAAUp8B,EAAY,GAAGq8B,aAA5N,4BAGA,yBAAKr9B,UAAqC,IAA1BnB,KAAKN,MAAMo+B,WAAmB,mBAAqB,yBAA0BrqB,QAAS,WAAQ,EAAKxT,SAAS,CAAE69B,WAAY,EAAGO,iBAAkB,EAAKE,UAAUp8B,EAAY,GAAGq8B,aAA7L,8BAKR,yBAAKr9B,UAAU,mBACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,kBAAkBR,MAAO,CAAEC,QAAS,OAAQsV,iBAAkB,2BACzE,8BACA,yBAAK/U,UAAU,YACX,yBAAKR,MAAO,CAAEC,QAAS,OAAQwxB,cAAe,SAAU5e,eAAgB,SAAU3S,WAAY,SAAUwS,MAAO,QAAStS,OAAQ,QAASgV,gBAAiB/Q,EAAS,QAAUf,EAAW,QACpL,wBAAItD,MAAO,CAAEwO,MAAOnK,EAASf,EAAW,MAAQ,UAAhD,MACA,yBAAKtD,MAAO,CAAE2O,WAAY,MAAOC,SAAU,OAAQ8iB,WAAY,OAAQC,aAAc,MAAOnjB,MAAOnK,EAASf,EAAW,MAAQ,UAAYo7B,EAAgBC,EAAYlwB,OAIrJ,OAAtBpP,KAAKN,MAAMqM,OACP,yBAAK5K,UAAU,YACX,yBAAKR,MAAO,CAAEC,QAAS,OAAQwxB,cAAe,SAAU5e,eAAgB,SAAU3S,WAAY,SAAUwS,MAAO,QAAStS,OAAQ,QAASgV,gBAAiB/Q,EAAS,QAAUf,EAAW,QACpL,yBAAKtD,MAAO,CAAEwO,MAAOnK,EAASf,EAAW,MAAQ,UAAjD,aACA,yBAAKtD,MAAO,CAAE2O,WAAY,MAAOC,SAAU,OAAQ8iB,WAAY,OAAQljB,MAAOnK,EAASf,EAAW,MAAQ,UAAYo7B,EAAgBC,EAAY/M,MAAlJ,IAA0J8M,EAAgBC,EAAY7N,OACtL,yBAAK9wB,MAAO,CAAE2O,WAAY,MAAOC,SAAU,OAAQ8iB,WAAY,OAAQljB,MAAOnK,EAASf,EAAW,MAAQ,UAA1G,IAAuHo7B,EAAgBC,EAAY9M,MAAnJ,OAGR,KAER,yBAAKrxB,UAAU,YACX,yBAAKR,MAAO,CAAEC,QAAS,OAAQwxB,cAAe,SAAU5e,eAAgB,SAAU3S,WAAY,SAAUwS,MAAO,QAAStS,OAAQ,QAASgV,gBAAiB/Q,EAAS,QAAUf,EAAW,QACpL,yBAAKtD,MAAO,CAAEwO,MAAOnK,EAASf,EAAW,MAAQ,UAAkC,OAAtBjE,KAAKN,MAAMqM,OAAkB,MAAQ,KAAlG,UACA,yBAAKpL,MAAO,CAAE2O,WAAY,MAAOC,SAAU,OAAQ8iB,WAAY,OAAQljB,MAAOnK,EAASf,EAAW,MAAQ,UAAYo7B,EAAgBC,EAAYhxB,MAAlJ,IAA0J+wB,EAAgBC,EAAYlxB,OACtL,yBAAKzN,MAAO,CAAE2O,WAAY,MAAOC,SAAU,OAAQ8iB,WAAY,OAAQljB,MAAOnK,EAASf,EAAW,MAAQ,UAA1G,IAAuHo7B,EAAgBC,EAAY9wB,MAAnJ,QAIZ,yBAAK7N,MAAO,CAAEwU,SAAU,aAEM,OAAtBnV,KAAKN,MAAMqM,OACP,yBAAKpL,MAAO,CAAEwU,SAAU,WAAYyqB,IAAK,GAAIC,KAAM,GAAIxsB,MAAOA,EAAQ,GAAItS,OAAQ,MAC9E,yBAAKJ,MAAO,CAAEC,QAAS,OAAQI,oBAA+C,IAA1BhB,KAAKN,MAAMo+B,WAAmB,kBAAoB,mBACjG99B,KAAK8/B,aAAa9/B,KAAKN,MAAMo+B,cAGtC,KAER,kBAAC,GAAD,CACIX,OAAQ,OACRtP,IAAK7tB,KAAKI,MAAMqe,SAAS6J,OACzBza,IAAK7N,KAAKI,MAAMqe,SAASpX,MACzBlF,WAAYA,EACZs5B,OAAQ,SACRla,OAAQ,SACR9c,KAAM,KACNsH,OAAQ/L,KAAKN,MAAMqM,OACnB9C,UAAW02B,EAAY12B,UACvBC,QAASy2B,EAAYz2B,QACrBnI,OAAQ,IACRsS,MAAOA,EACPlK,SAAUnJ,KAAKN,MAAMo+B,WACrBnO,MAAO,IACPC,MAAO,IACPtB,SAAS,EACTD,SAAS,EACTE,YAAY,UACZkE,YAAa,0BACbhS,IAAK,EACLC,IAAK,MAGiB,OAAtB1gB,KAAKN,MAAMqM,OACP,kBAAC,GAAD,CACIoxB,OAAQ,OACRtP,IAAK7tB,KAAKI,MAAMqe,SAAS6J,OACzBza,IAAK7N,KAAKI,MAAMqe,SAASpX,MACzBlF,WAAYA,EACZs5B,OAAQ,UACRla,OAAQ,UACR9c,KAAM,MACNsH,OAAQ/L,KAAKN,MAAMqM,OACnB9C,UAAW02B,EAAY12B,UACvBC,QAASy2B,EAAYz2B,QACrBnI,OAAQ,IACRsS,MAAOA,EACPlK,SAAUnJ,KAAKN,MAAMo+B,WACrBnO,MAAO,GACPC,MAAO,GACPtB,SAAS,EACTD,SAAS,EACTE,YAAa,UACbkE,YAAa,0BACbhS,IAAK,EACLC,IAAK,MAET,KAER,kBAAC,GAAD,CACIyc,OAAQ,OACRtP,IAAK7tB,KAAKI,MAAMqe,SAAS6J,OACzBza,IAAK7N,KAAKI,MAAMqe,SAASpX,MACzBlF,WAAYA,EACZs5B,OAAQ,UACRla,OAAQ,UACR9c,KAAM,MACNsH,OAAQ/L,KAAKN,MAAMqM,OACnB9C,UAAW02B,EAAY12B,UACvBC,QAASy2B,EAAYz2B,QACrBnI,OAAQ,IACRsS,MAAOA,EACPlK,SAAUnJ,KAAKN,MAAMo+B,WACrBnO,MAAO,GACPC,MAAO,GACPtB,SAAS,EACTD,SAAS,EACTE,YAAa,UACbkE,YAAa,0BACbhS,IAAK,EACLC,IAAK,QAIjB,yBAAKvf,UAAU,iBACX,yBAAKA,UAAU,kBAAkBR,MAAO,CAAEC,QAAS,OAAQsV,iBAAkB,2BACzE,8BACA,yBAAK/U,UAAU,YACX,yBAAKR,MAAO,CAAEC,QAAS,OAAQwxB,cAAe,SAAU5e,eAAgB,SAAU3S,WAAY,SAAUwS,MAAO,QAAStS,OAAQ,QAASgV,gBAAiBoc,EAAWmN,EAAYjwB,KAAM,IAAK,IAAM,QAAUpL,EAAW,UACnN,wBAAItD,MAAO,CAAEwO,MAAOgjB,EAAWmN,EAAYjwB,KAAM,IAAK,IAAMpL,EAAW,QAAU,UAAjF,MAEI,kCAFJ,OAKA,yBAAKtD,MAAO,CAAE2O,WAAY,MAAOC,SAAU,OAAQ8iB,WAAY,OAAQC,aAAc,MAAOnjB,MAAOgjB,EAAWmN,EAAYjwB,KAAM,IAAK,IAAMpL,EAAW,QAAU,UAAYo7B,EAAgBC,EAAYjwB,MAAxM,OAGR,yBAAKlO,UAAU,YACX,yBAAKR,MAAO,CAAEC,QAAS,OAAQwxB,cAAe,SAAU5e,eAAgB,SAAU3S,WAAY,SAAUwS,MAAO,QAAStS,OAAQ,QAASgV,gBAAiBoc,EAAWmN,EAAY5vB,GAAI,GAAI,IAAM,QAAUzL,EAAW,QAChN,yBAAKtD,MAAO,CAAEwO,MAAOgjB,EAAWmN,EAAY5vB,GAAI,GAAI,IAAMzL,EAAW,MAAQ,UAA7E,MACA,yBAAKtD,MAAO,CAAE2O,WAAY,MAAOC,SAAU,OAAQ8iB,WAAY,OAAQC,aAAc,MAAOnjB,MAAOgjB,EAAWmN,EAAY5vB,GAAI,GAAI,IAAMzL,EAAW,MAAQ,UA5OrK,QADG1D,EA6O0L++B,EAAY5vB,UA5OvL5N,IAAVvB,GAAiC,KAAVA,EAClC,KAEJA,KA4OS,yBAAKY,UAAU,YACX,yBAAKR,MAAO,CAAEC,QAAS,OAAQwxB,cAAe,SAAU5e,eAAgB,SAAU3S,WAAY,SAAUwS,MAAO,QAAStS,OAAQ,QAASgV,gBAAiBoc,EAAWmN,EAAY7vB,GAAI,GAAI,IAAM,QAAUxL,EAAW,QAChN,yBAAKtD,MAAO,CAAEwO,MAAOgjB,EAAWmN,EAAY7vB,GAAI,GAAI,IAAMxL,EAAW,MAAQ,UAA7E,WACA,yBAAKtD,MAAO,CAAE2O,WAAY,MAAOC,SAAU,OAAQ8iB,WAAY,OAAQC,aAAc,MAAOnjB,MAAOgjB,EAAWmN,EAAY7vB,GAAI,GAAI,IAAMxL,EAAW,MAAQ,UAAYo7B,EAAgBC,EAAY7vB,QAI/M,yBAAK9O,MAAO,CAAEwU,SAAU,aAEM,OAAtBnV,KAAKN,MAAMqM,OACP,yBAAKpL,MAAO,CAAEwU,SAAU,WAAYyqB,IAAK,GAAIC,KAAM,GAAIxsB,MAAOA,EAAQ,GAAItS,OAAQ,MAC9E,yBAAKJ,MAAO,CAAEC,QAAS,OAAQI,oBAA+C,IAA1BhB,KAAKN,MAAMo+B,WAAmB,kBAAoB,mBACjG99B,KAAK8/B,aAAa9/B,KAAKN,MAAMo+B,cAGtC,KAGR,kBAAC,GAAD,CACIX,OAAQ,OACRtP,IAAK7tB,KAAKI,MAAMqe,SAAS6J,OACzBza,IAAK7N,KAAKI,MAAMqe,SAASpX,MACzBlF,WAAYA,EACZs5B,OAAQ,WACRla,OAAQ,WACR9c,KAAM,OACNwE,UAAW02B,EAAY12B,UACvBC,QAASy2B,EAAYz2B,QACrBnI,OAAQ,IACRsS,MAAOA,EACPlK,SAAUnJ,KAAKN,MAAMo+B,WACrBnO,MAAO,GACPC,MAAO,IACPtB,SAAS,EACTD,SAAS,EACTE,YAAa,UACbkE,YAAa,UACbhS,IAAK,GACLC,IAAK,IACL3U,OAAQ/L,KAAKN,MAAMqM,SAEvB,kBAAC,GAAD,CACIoxB,OAAQ,OACRtP,IAAK7tB,KAAKI,MAAMqe,SAAS6J,OACzBza,IAAK7N,KAAKI,MAAMqe,SAASpX,MACzBlF,WAAYA,EACZs5B,OAAQ,SACRla,OAAQ,SACR9c,KAAM,KACNwE,UAAW02B,EAAY12B,UACvBC,QAASy2B,EAAYz2B,QACrB6C,OAAQ/L,KAAKN,MAAMqM,OACnBhL,OAAQ,IACRsS,MAAOA,EACPlK,SAAUnJ,KAAKN,MAAMo+B,WACrBnO,MAAO,GACPC,MAAO,GACPtB,SAAS,EACTD,SAAS,EACTE,YAAa,UACbkE,YAAa,0BACbhS,IAAK,GACLC,IAAK,KAET,kBAAC,GAAD,CACIyc,OAAQ,OACRtP,IAAK7tB,KAAKI,MAAMqe,SAAS6J,OACzBza,IAAK7N,KAAKI,MAAMqe,SAASpX,MACzBlF,WAAYA,EACZs5B,OAAQ,SACRla,OAAQ,SACR9c,KAAM,KACNwE,UAAW02B,EAAY12B,UACvBC,QAASy2B,EAAYz2B,QACrBnI,OAAQ,IACRsS,MAAOA,EACPlK,SAAUnJ,KAAKN,MAAMo+B,WACrBnO,MAAO,GACPC,MAAO,GACPtB,SAAS,EACTD,SAAS,EACTE,YAAa,UACbkE,YAAa,0BACbhS,IAAK,EACLC,IAAK,IACL3U,OAAQ/L,KAAKN,MAAMqM,iB,GAle3BvM,c,uCE6KTugC,G,2MA9KXrgC,MAAQ,CACJsgC,cAAc,EACd70B,KAAM,EAAK/K,MAAM6/B,WACjBC,YAAa,G,EAEjBC,SAAW,SAACC,GACR,EAAKhgC,MAAMkZ,eAAe8mB,I,EAI9BC,aAAe,SAACl+B,GACZ,EAAK/B,MAAMkgC,mBAAmBn+B,I,EAGlCo+B,eAAiB,SAACC,GACd,GAAIA,EAAY,CACZ,IAAIC,EAAgB7qB,SAASC,eAAe2qB,GACxCC,GAAiBA,EAAcC,mB,EAG3CvtB,SAAW,SAACwtB,GACR,EAAKR,SAASQ,I,EAGlBC,aAAe,SAACv9B,EAAMu1B,GAClB,EAAKyH,aAAah9B,EAAKL,Y,EAQ3BgZ,SAAW,SAAC1K,GAAO,IAAD,EACmB,EAAKlR,MAA9Bqe,EADM,EACNA,SAAUtc,EADJ,EACIA,WACZ0+B,EAAOpiB,EAASQ,aAAa6hB,SAC7BC,EAAWn+B,IAAOA,IAAOi+B,GAAMnyB,OAAO,aAAa1L,UAIzD,OAAQsO,EAAE+F,OAAO9W,OACb,IAAK,IACD,IAAM0b,EAAQ9Z,EAJV,MAMJ4+B,GADcn+B,IAAOA,IAAOqZ,GAAOvN,OAAO,aAAa1L,WAClC,EAAKq9B,aAAapkB,GACvC,MACJ,IAAK,IACD,IAAMC,EAAQtZ,IAAOA,MAAS8L,OAAO,aAAa1L,UAClD,EAAKq9B,aAAankB,GAClB,MACJ,IAAK,IACD,IAAMC,EAAQha,EAbV,MAeJga,GADcvZ,IAAOA,MAAS8L,OAAO,aAAa1L,WAChC,EAAKq9B,aAAalkB,K,8EAzB5Cnc,KAAKC,SAAS,CACV+/B,cAAehgC,KAAKN,MAAMsgC,iB,+BA+BxB,IAAD,OAECgB,EAAY,CACdC,cAAe,CAAExhB,aAAc,MAAOtQ,MAAO,YAAauJ,OAAQ,sBAAuBxD,QAAS,UAAWnU,OAAQ,SAqBzH,IAAMmgC,EAAgB,CAClBC,aAAc,CAAEhsB,SAAU,WAAYisB,MAAO,MAAOxB,IAAK,OAAQvsB,MAAO,QAASguB,WAAY,QAASC,UAAW,eAAgBC,OAAQ,MAAO9hB,aAAc,OAC9J+hB,iBAAkB,CAAE5gC,QAAS,QAC7B6gC,WAAY,CAAE7gC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,UACrE6gC,WAAW,cAAGxsB,QAAS,MAAO7B,MAAO,QAASoM,aAAc,MAAOrF,YAAa,sBAAuBF,YAAa,QAASC,YAAa,MAAOrZ,WAAY,QAAnJ,eAAyK,QA5BlL,MAqC6Cd,KAAKI,MAA/Cqe,EArCH,EAqCGA,SAAUkjB,EArCb,EAqCaA,QAASx/B,EArCtB,EAqCsBA,WAAY6C,EArClC,EAqCkCA,OAEjC9C,EAAauc,EAASmjB,OACtBlvB,EAAW+L,EAASQ,aAAa6hB,SACjCe,EAAMF,EAAQj1B,KAChB,SAACvB,EAAM3I,GAAP,OAAiB,kBAAC,KAAD,CAAQiR,QAAS,EAAK8sB,eAAevpB,KAAK,EAAM7L,EAAK22B,aAAc5hC,IAAKsC,EAAO7B,MAAOqgC,EAAUC,eAC7G,4BAAK91B,EAAK0G,UAGlB,OAEI,yBAAK1Q,UAAU,oBACX,yBAAKR,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,iBAAkBC,cAAe,SACjF,kBAAC,KAAD,CAAYqV,qBAAsB,SAAAC,GAAW,OAAIA,EAAYC,YAAYwiB,OAAQA,KAAQ3lB,MAAO,IAAKF,SAAUnT,KAAK4gC,aAAcrgC,MAAOqC,IAAOT,GAAawb,YAAY,EAAOJ,WAAW,EAAOC,aAAc,SAACC,GAAc,OAAOA,EAAU7a,MAAS8a,QAAQ,QAAUD,EAAU7a,IAAO8P,EAAU,YAAYqvB,KAAK,EAAG,QAAQC,MAAM,UACxU,yBAAKrhC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,QAC9E,kBAAC,KAAD,CAAQV,MAAM,IAAIqd,MAAM,SAASC,KAAK,cAAcpK,QAASzT,KAAKgc,WAClE,kBAAC,KAAD,CAAQzb,MAAM,IAAIqd,MAAM,SAASC,KAAK,eAAepK,QAASzT,KAAKgc,WACnE,kBAAC,KAAD,CAAQzb,MAAM,IAAIqd,MAAM,SAASC,KAAK,eAAepK,QAASzT,KAAKgc,YAEvE,yBAAKrb,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,iBAAkBC,cAAe,OAAQghC,aAAc,aAM/G,yBAAKthC,MAAO,CAAE4O,SAAU,SAAxB,6BACWye,EAA2BhpB,EAAOpD,KAAKoD,EAAOnD,KADzD,IAC+D,0BAAMlB,MAAO,CAAE2O,WAAY,MAAOH,MAAO,UAAY6e,EAAqChpB,EAAQ7C,KAEjK,yBAAKxB,MAAO,CAAE4O,SAAU,SAAxB,6BACWye,EAAsBhpB,EAAOZ,YAAY,0BAAMzD,MAAO,CAAE2O,WAAY,MAAOH,MAAO,UAAY6e,EAA2B9rB,EAAWC,GAA3F,MAEpD,yBAAKxB,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUsU,SAAU,aAC3D,8DACA,yBAAKxU,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,iBAAkBC,cAAe,QAAU4gC,GAC/F,yBAAKpuB,QAAS,kBAAM,EAAKyuB,gBAAgBvhC,MAAO,CAAE6T,OAAQ,UAAW1T,WAAY,QAC7E,yBAAKO,IAAK8gC,KAAa5gC,IAAI,cAAcZ,MAAO,CAAE0S,MAAO,OAAQtS,OAAQ,WAE7E,yBAAKJ,MAAOX,KAAKN,MAAMsgC,aAAekB,EAAcC,aAAeD,EAAcM,kBAC7E,wBAAIrgC,UAAU,sBAAd,4BACA,yBAAKR,MAAO,CAAEqZ,UAAW,OAAQ+K,aAAc,SAC3C,kBAAC,KAAS8T,MAAV,CAAgB3lB,aAAclT,KAAKN,MAAMyL,KAAMiL,GAAI,iBAAkBzV,MAAO,CAAE0S,MAAO,OAAQzS,QAAS,OAAQsV,iBAAkB,gBAAiBC,WAAY,OAAShD,SAAUnT,KAAKmT,UACjL,yBAAKxS,MAAOugC,EAAcO,YACtB,kBAAC,KAAD,CAAUlhC,MAAO,IACjB,wBAAII,MAAOugC,EAAcQ,YAAzB,6BAEJ,yBAAK/gC,MAAOugC,EAAcO,YACtB,kBAAC,KAAD,CAAUlhC,MAAO,IACjB,wBAAII,MAAOugC,EAAcQ,YAAzB,iBAEJ,yBAAK/gC,MAAOugC,EAAcO,YACtB,kBAAC,KAAD,CAAUlhC,MAAO,IACjB,wBAAII,MAAOugC,EAAcQ,YAAzB,6BAEJ,yBAAK/gC,MAAOugC,EAAcO,YACtB,kBAAC,KAAD,CAAUlhC,MAAO,IACjB,wBAAII,MAAOugC,EAAcQ,YAAzB,uBAEJ,yBAAK/gC,MAAOugC,EAAcO,YACtB,kBAAC,KAAD,CAAUlhC,MAAO,IACjB,wBAAII,MAAOugC,EAAcQ,YAAzB,kD,GA7JXliC,a,OCRzB,IAAM4iC,GAAiB,SAACC,EAAgB7/B,EAAO8/B,GAC3C,MAAe,gBAAXA,EACO,oBAEY,IAAnBD,EACI7/B,EAAQ,KAAO,EACR,4BACAA,EAAQ,IAAM,EACd,4BAEA,oBAEe,IAAnB6/B,EACH7/B,EAAQ,IAAM,EACP,4BACAA,EAAQ,IAAM,EACd,4BAEA,oBAIA,6BA2FJ+/B,G,iLAjFD,IAAD,EACL,SAASC,EAAUjiC,GACf,MAAuB,kBAAXA,GAAuBA,EAAQ,IAAM,EACtCA,EAEJwR,WAAWxR,GAAOyR,QAAQ,GALhC,MAQuDhS,KAAKI,MAAzDqiC,EARH,EAQGA,eAAgBH,EARnB,EAQmBA,OAAQz9B,EAR3B,EAQ2BA,KAAM3C,EARjC,EAQiCA,WAAYM,EAR7C,EAQ6CA,MAG5C0G,GADYrE,EAAKk3B,MACPl3B,EAAKm3B,KACft5B,EAAUmC,EAAKnC,QACfggC,EAAQ79B,EAAK69B,MACfC,EAAa,EACjB,GAAIrgC,MAAMC,QAAQL,GACd,IAAK,IAAIM,EAAQ,EAAGA,EAAQN,EAAWO,OAAQD,IAAS,CACpD,IAAME,EAAUR,EAAWM,GACrBG,EAAcC,IAAOF,EAAQG,QAAQd,WAAWe,OAASJ,EAAQK,QAAQhB,WAAWe,OAAQ,gBAAgBE,UAG/F,IAAf2/B,GACIhgC,GAAeuG,IACfy5B,EAAa/iC,OAAO8C,EAAQO,SAK5C,IAAI2/B,EAAa,EACjB,GAAItgC,MAAMC,QAAQG,GACd,IAAK,IAAIF,EAAQ,EAAGA,EAAQE,EAAQD,OAAQD,IAAS,CACjD,IAAM4H,EAAO1H,EAAQF,GAErBogC,GADchjC,OAAOwK,EAAKy4B,UAIlC,GAAmB,IAAfF,GAAmC,IAAfC,GAA8B,IAAVF,EAAa,CAAC,IAAD,EAE/CI,EAAY/wB,WAAY6wB,EAAaF,EAASC,GAAY3wB,QAAQ,GACxE,OACI,yBAAK9R,IAAKsC,EAAO7B,OAAK,GAClBgY,eAAgB,WAAY/X,QAAS,OAAQC,WAAY,SAAU2S,eAAgB,SAAUkF,OAAQ,qBADnF,gCACwH,YADxH,4BAEN0pB,GAAeK,EAAgBjgC,EAAO8/B,IAFhC,iCAGU,gBAAXA,EACc,KAA1BvwB,WAAW+wB,GAAoB,QAAU,uBAE/B,IAAVtgC,EAAc,sBAEX,wBARU,IAUU,KAA1BuP,WAAW+wB,IAAgC,gBAAXR,GAA6B,yBAAK3hC,MAAO,CACvE2O,WAAwB,gBAAXgzB,GAAsC,IAAV9/B,EAAe,MAAQ,GAChE2M,MAAQ4C,WAAW+wB,GAAa,IAAO/wB,WAAW+wB,GAAa,EAAK,UAAY,UAEpD,KAA1B/wB,WAAW+wB,IAA+C,IAA1B/wB,WAAW+wB,GAAoB,KAE7D/wB,WAAW+wB,IAAc,EAAzB,UAAgCN,EAAUM,IAAeN,EAAUM,KAKvF,OACI,yBAAK5iC,IAAKsC,EAAO7B,OAAK,GAClBgY,eAAgB,WAAY/X,QAAS,OAAQC,WAAY,SAAU2S,eAAgB,SAAUkF,OAAQ,qBADnF,gCACwH,YADxH,4BAEN0pB,GAAeK,EAAgBjgC,EAAO8/B,IAFhC,iCAGU,gBAAXA,EAA2B,QAE9B,IAAV9/B,EAAc,sBAEV,wBAPU,IASN,gBAAX8/B,GAA4B,yBAAK3hC,MAAO,CACrC2O,WAAsB,IAAV9M,EAAc,MAAQ,GAClC2M,MAAO,UAFkB,W,GAxEpB3P,aCxBnB4iC,GAAiB,SAACC,EAAgB7/B,EAAO8/B,GAC3C,MAAe,gBAAXA,EACO,oBAEY,IAAnBD,EACI7/B,EAAQ,KAAO,EACR,4BACAA,EAAQ,IAAM,EACd,4BAEA,oBAEe,IAAnB6/B,EACH7/B,EAAQ,IAAM,EACP,4BACAA,EAAQ,IAAM,EACd,4BAEA,oBAIA,6BAqwBJugC,G,2MA3vBXrjC,MAAQ,CACJsjC,IAAK,GACLC,UAAW,KACXC,kBAAmB,KACnBC,OAAQ,KACRC,cAAe,KACfC,OAAQ,KACRC,aAAc,I,sEAEX56B,EAAQmzB,EAAYwG,EAAgBr9B,GAAS,IAAD,OAC/C,QAAelD,IAAX4G,GAAmC,OAAXA,EACxB,OAAO,KAEX,QAAmB5G,IAAf+5B,GAA2C,OAAfA,EAC5B,OAAO,KAEX,QAAuB/5B,IAAnBugC,GAAmD,OAAnBA,EAChC,OAAO,KAEX,QAAevgC,IAAXkD,GAAmC,OAAXA,EACxB,OAAO,KAiCX,IAAMF,EAAM,IAAIC,IACVw+B,EAhCN,SAAqB1H,EAAY2H,EAAax+B,GAC1C,IAAM82B,EAAeD,EAAa,OAClC,MAAe,gBAAX72B,EACO,CACH+2B,MAAOn5B,IAAOk5B,EAAgB,QAA0BptB,OAAO,gBAC/DstB,IAAKp5B,IAAOk5B,GAAcptB,OAAO,iBAGrB,IAAhB80B,EACO,CACHzH,MAAOn5B,IAAOk5B,EAAgB,QAAsBptB,OAAO,gBAC3DstB,IAAKp5B,IAAOk5B,GAAcptB,OAAO,iBAGrB,IAAhB80B,EACO,CACHzH,MAAOn5B,IAAOk5B,EAAgB,QAA0BptB,OAAO,gBAC/DstB,IAAKp5B,IAAOk5B,GAAcptB,OAAO,iBAGrB,IAAhB80B,EACO,CACHzH,MAAOn5B,IAAOk5B,EAAgB,QAA0BptB,OAAO,gBAC/DstB,IAAKp5B,IAAOk5B,GAAcptB,OAAO,iBAGlC,CACHqtB,MAAOn5B,IAAOk5B,EAAgB,SAA2BptB,OAAO,gBAChEstB,IAAKp5B,IAAOk5B,GAAcptB,OAAO,iBAI3ButB,CAAYJ,EAAYwG,EAAgBr9B,GACtDkF,EAAmBxB,EAAQ66B,EAAMxH,MAAOwH,EAAMvH,KACzC7xB,MAAK,SAAAtF,GACF,IAAM4+B,EAAS3+B,EAAIG,OAAOJ,EAAKA,MAAMK,OACrC,GAA2B,IAAvBtF,OAAO6jC,EAAOt+B,KAAY,CAC1B,IAAMC,EAAYq+B,EAAOp+B,SAASC,QAC9BhD,MAAMC,QAAQ6C,GACd,EAAKnF,SAAS,CAAE+iC,IAAK59B,IAGrB,EAAKnF,SAAS,CAAE+iC,IAAK,CAAC59B,SAKjCmF,OAAM,SAAAC,GACHhH,QAAQC,IAAI,aAAewK,KAAKC,UAAU1D,OAGlDK,GAAwB,kBACnBV,MAAK,SAAAtF,GACF,EAAK5E,SAAS,CAAEojC,OAAQx+B,EAAKA,UAEhC0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,cAAgBwK,KAAKC,UAAU1D,S,0CAGlC,IAAD,EACyCxK,KAAKI,MAAtDkiC,EADQ,EACRA,OAAQG,EADA,EACAA,eAAgBhkB,EADhB,EACgBA,SAAUtc,EAD1B,EAC0BA,WAC1CnC,KAAKC,SAAS,CAAEgjC,UAAWX,EAAQY,kBAAmBT,EAAgBU,OAAQ1kB,EAAS6J,OAAQ8a,cAAejhC,IAC9GnC,KAAK0jC,OAAOjlB,EAAS6J,OAAQnmB,EAAYsgC,EAAgBH,K,2CAGvC,IAAD,EACwCtiC,KAAKI,MAAtDkiC,EADS,EACTA,OAAQG,EADC,EACDA,eAAgBhkB,EADf,EACeA,SAAUtc,EADzB,EACyBA,WACpCwhC,EAAY3jC,KAAKN,MAAMujC,UACvBW,EAAiB5jC,KAAKN,MAAMwjC,kBAC5BW,EAAS7jC,KAAKN,MAAMyjC,OACJnjC,KAAKN,MAAM0jC,gBACXjhC,GAAcsc,EAAS6J,SAAWub,GAAUpB,IAAmBmB,GAAkBtB,IAAWqB,IAC9GngC,QAAQC,IAAI6+B,EAAQG,EAAgBhkB,EAAUtc,GAC9CnC,KAAKC,SAAS,CAAEgjC,UAAWX,EAAQY,kBAAmBT,EAAgBU,OAAQ1kB,EAAS6J,OAAQ8a,cAAejhC,IAC9GnC,KAAK0jC,OAAOjlB,EAAS6J,OAAQnmB,EAAYsgC,EAAgBH,M,iCAGtDj4B,GAAM,IAAD,EACuBrK,KAAKI,MAAhCkiC,EADI,EACJA,OAAQG,EADJ,EACIA,eACVqB,EAAUz5B,EAAIqC,KAAI,SAAUnM,EAAOiC,EAAOyD,GAC5C,OACI,yBAAK/F,IAAKsC,EAAO7B,MAAO,CAAE+X,OAAQ,oBAAqBC,eAAgB,WAAY/X,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WACtI,4BAAK6D,SAASnE,QAI1B,MAAe,gBAAX+hC,EAEI,yBAAK3hC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,kBAC/C8iC,GAKc,IAAnBrB,EAEI,yBAAK9hC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,mBAC/C8iC,GAIU,IAAnBrB,EAEI,yBAAK9hC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,mBAC/C8iC,GAIU,IAAnBrB,EAEI,yBAAK9hC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,mBAC/C8iC,GAIU,IAAnBrB,EAEI,yBAAK9hC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,mBAC/C8iC,QAHb,I,+BAmSJ,SAASC,EAAgB/9B,EAAMu9B,EAAOv+B,GAGlC,IAFA,IAAMg/B,EAAQT,EAAMp6B,SAChB86B,EAAY,GAF0B,WAGjCzhC,GACL,IAAMsE,EAAKy8B,EAAMt6B,UAAazG,EAAQ+gC,EAAMW,aAAe,GAAK,GAAK,IAC/Dn9B,EAAKw8B,EAAMt6B,WAAczG,EAAQ,GAAK+gC,EAAMW,aAAe,GAAK,GAAK,IACrEC,EAAan+B,EAAKxB,QAAO,SAAU4F,EAAM5H,EAAO6H,GAClD,IAAMzB,EAAOwB,EAAKxB,KAClB,OAAO9B,GAAM8B,GAAQA,EAAO7B,KAEhCk9B,EAAU/9B,KAAKi+B,IAPV3hC,EAAQ,EAAGA,EAAQwhC,EAAOxhC,IAAU,EAApCA,GAST,GAAe,gBAAXwC,EAA0B,CAC1B,IAAM8B,EAAKy8B,EAAMt6B,UACXlC,EAAKw8B,EAAMr6B,QACXk7B,EAAgBp+B,EAAKxB,QAAO,SAAU4F,EAAM5H,EAAO6H,GACrD,IAAMzB,EAAOwB,EAAKxB,KAClB,OAAO9B,GAAM8B,GAAQA,EAAO7B,KAEhCk9B,EAAU/9B,KAAKk+B,GAEnB,OAAOH,EAkCX,SAASI,EAAWl7B,EAAUnE,GAC1B,MAAe,gBAAXA,EACO,EAEJmE,EAEX,SAASm7B,EAAQxsB,GASb,OARgBA,EAAKpL,KAAI,SAAUtC,EAAM5H,EAAO6H,GAE5C,IADA,IAAIk6B,EAAM,EACD/hC,EAAQ,EAAGA,EAAQ4H,EAAK3H,OAAQD,IAAS,CAE9C+hC,GADgBn6B,EAAK5H,GACDjC,MAExB,OAAOgkC,KAKf,SAAS/B,EAAUjiC,GACf,MAAuB,kBAAXA,GAAuBA,EAAQ,IAAM,EACtCA,EAEJwR,WAAWxR,GAAOyR,QAAQ,GAGrC,SAASwyB,EAAclC,EAAQxqB,EAAM2sB,EAAMhgC,EAAMg+B,GAC7C,IAAMiC,EAAgB,CAClB,EAAK,CACD,GAAK,yBACL,MAAQ,2BAEZ,EAAK,CACD,GAAK,sBACL,MAAQ,wBAEZ,EAAK,CACD,GAAK,uBACL,MAAQ,yBAIVC,EAAa7sB,EAAKpL,KAAI,SAAUtC,EAAM5H,EAAO6H,GAAM,IAAD,EAC1B,EAA1B,OAAqBgjB,MAAjBztB,OAAOwK,GAEH,yBAAKlK,IAAKsC,EAAO7B,OAAK,GAClBgY,eAAgB,WAAY/X,QAAS,OAAQC,WAAY,SAAU2S,eAAgB,SAAUkF,OAAQ,qBADnF,gCACwH,YADxH,4BAEN0pB,GAAeK,EAAgBjgC,EAAO8/B,IAFhC,iCAGU,gBAAXA,EAA2B,QAAoB,IAAV9/B,EAAckiC,EAAcD,GAAMG,GAAKF,EAAcD,GAAMI,OAH/F,IAKN,gBAAXvC,GAA4B,yBAAK3hC,MAAO,CACrC2O,WAAwB,gBAAXgzB,GAAsC,IAAV9/B,EAAe,MAAQ,GAChE2M,MAAO,UAFkB,OASrC,yBAAKjP,IAAKsC,EAAO7B,OAAK,GAClBgY,eAAgB,WAAY/X,QAAS,OAAQC,WAAY,SAAU2S,eAAgB,SAAUkF,OAAQ,qBADnF,gCACwH,YADxH,4BAEN0pB,GAAeK,EAAgBjgC,EAAO8/B,IAFhC,iCAGU,gBAAXA,EACS,KAArBvwB,WAAW3H,GAAe,QAAUs6B,EAAcD,GAAMI,MAAoB,IAAVriC,EAAckiC,EAAcD,GAAMG,GAAKF,EAAcD,GAAMI,OAJhH,IAMK,KAArB9yB,WAAW3H,IAA2B,gBAAXk4B,GAA6B,yBAAK3hC,MAAO,CAClE2O,WAAwB,gBAAXgzB,GAAsC,IAAV9/B,EAAe,MAAQ,GAChE2M,MAAgB,IAAT1K,GAAcsN,WAAW3H,GAAQ,EAAI,MAE/B,IAAT3F,GAAcsN,WAAW3H,IAAS,EAAI,OAAS,UAE5B,KAArB2H,WAAW3H,IAAqC,IAArB2H,WAAW3H,GAAe,KAEnD2H,WAAW3H,IAAS,EAApB,WAA4Bo4B,EAAUp4B,IAAUo4B,EAAUp4B,QAK9E,OACI,yBAAKzJ,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,WAAaqjC,EAAWS,EAAY37B,SAAUm5B,GAAU,WACvGqC,GAKb,SAASI,EAAWzC,EAAQxqB,EAAM2sB,EAAMhC,GACpC,IAAMiC,EAAgB,CAClB,EAAK,CACD,GAAK,yBACL,MAAQ,2BAEZ,EAAK,CACD,GAAK,sBACL,MAAQ,yBAGVC,EAAa7sB,EAAKpL,KAAI,SAAUtC,EAAM5H,EAAO6H,GAAM,IAAD,EAEA,EADhDk6B,EAAM,EACV,GAAoB,IAAhBn6B,EAAK3H,aAAgCX,IAAhBsI,EAAK3H,OAC1B,OACI,yBAAKvC,IAAKsC,EAAO7B,OAAK,GAClBgY,eAAgB,WAAY/X,QAAS,OAAQC,WAAY,SAAU2S,eAAgB,SAAUkF,OAAQ,qBADnF,gCACwH,YADxH,4BAEN0pB,GAAeK,EAAgBjgC,EAAO8/B,IAFhC,iCAGU,gBAAXA,EAA2B,QAG9B,IAAV9/B,EAAckiC,EAAcD,GAAMG,GAE9BF,EAAcD,GAAMI,OARV,IAUN,gBAAXvC,GAA4B,yBAAK3hC,MAAO,CACrC2O,WAAsB,IAAV9M,EAAc,MAAQ,GAClC2M,MAAO,UAFkB,OAOzC,IAAK,IAAI3M,EAAQ,EAAGA,EAAQ4H,EAAK3H,OAAQD,IAAS,CAE9C+hC,GADgBn6B,EAAK5H,GACDjC,MAExB,OACI,yBAAKL,IAAKsC,EAAO7B,OAAK,GAClBgY,eAAgB,WAAY/X,QAAS,OAAQC,WAAY,SAAU2S,eAAgB,SAAUkF,OAAQ,qBADnF,gCACwH,YADxH,4BAEN0pB,GAAeK,EAAgBjgC,EAAO8/B,IAFhC,iCAGU,gBAAXA,EACQ,KAApBvwB,WAAWwyB,GAAc,QAAUG,EAAcD,GAAMI,MAG7C,IAAVriC,EAAckiC,EAAcD,GAAMG,GAAKF,EAAcD,GAAMI,OAP9C,IASI,KAApB9yB,WAAWwyB,IAA0B,gBAAXjC,GAA6B,yBAAK3hC,MAAO,CACjE2O,WAAwB,gBAAXgzB,GAAsC,IAAV9/B,EAAe,MAAQ,GAChE2M,MAAO,UAEe,KAArB4C,WAAW3H,GAAe,KAAOo4B,EAAU+B,QAK5D,OACI,yBAAK5jC,MAAO,CAAEgY,eAAgB,WAAY/X,QAAS,OAAQI,oBAAqB,WAAaqjC,EAAWS,EAAY37B,SAAUm5B,GAAU,WACnIqC,GAMb,SAASK,EAAYhgC,GAGjB,MAAe,gBAAXA,EADqB,UADJ,YArepB,IA6CsBigC,EAAgBr8B,EA7CtC,EAkgBoD5I,KAAKI,MAAtDkiC,EAlgBH,EAkgBGA,OAAQG,EAlgBX,EAkgBWA,eAAgBhkB,EAlgB3B,EAkgB2BA,SAAUtc,EAlgBrC,EAkgBqCA,WAIpCy/B,GArgBN,SAAyB/F,EAAYoJ,EAAgBjgC,GACjD,IAAM+B,EAAK80B,EAAc,OACrBqJ,EAAY,GAChB,GAAe,gBAAXlgC,EAEA,IADA,IAAM8B,EAAK+0B,EAAc,MAChBr5B,EAAQ,EAAGA,EAAQ,EAAGA,IAAS,CACpC,IAAMoG,EAAO9B,EAAc,EAARtE,EAAY,GAAK,GAAK,IACzC0iC,EAAUh/B,KAAK0C,OAGlB,CAED,GAAuB,IAAnBq8B,EAEA,IADA,IAAMn+B,EAAKC,EAAM,MACRvE,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CACrC,IAAMoG,EAAO9B,EAAc,GAARtE,EAAa,GAAK,IACrC0iC,EAAUh/B,KAAK0C,GAGvB,GAAuB,IAAnBq8B,EAEA,IADA,IAAMn+B,EAAKC,EAAM,OACRvE,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CACrC,IAAMoG,EAAO9B,EAAc,EAARtE,EAAY,GAAK,GAAK,IACzC0iC,EAAUh/B,KAAK0C,GAGvB,GAAuB,IAAnBq8B,EAEA,IADA,IAAMn+B,EAAKC,EAAM,OACRvE,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CACrC,IAAMoG,EAAO9B,EAAc,EAARtE,EAAY,GAAK,GAAK,IACzC0iC,EAAUh/B,KAAK0C,GAGvB,GAAuB,IAAnBq8B,EAEA,IADA,IAAMn+B,EAAKC,EAAM,QACRvE,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CACrC,IAAMoG,EAAO9B,EAAc,GAARtE,EAAa,GAAK,GAAK,IAC1C0iC,EAAUh/B,KAAK0C,KA6dVu8B,CAAgBhjC,EAAYsgC,EAAgBH,GAtdtC2C,EAwdExC,EAxdc75B,EAudhCzG,EAAc,OAEVsc,EAASmjB,QAElBwD,GADapX,EAAuB4T,EAAQz/B,GAClCnC,KAAKN,MAAMsjC,KAErBK,EAASrjC,KAAKN,MAAM2jC,OAC1B,GAAe,OAAXA,QAA8BvhC,IAAXuhC,EAAwB,OAAO,KACtD,IAAMgC,EApZN,SAAuBrC,GAUnB,SAASsC,EAAiBC,EAAKhlC,GAC3B,GAAY,OAARglC,QAAwBzjC,IAARyjC,GAA6B,KAARA,EACrC,OAAO,EAEX,IAAMC,EAAYD,EAAIxjC,WAChB0jC,EAAc7lC,OAAOW,GAC3B,OAAoB,OAAhBklC,QAAwC3jC,IAAhB2jC,EAAoC,EAC9B,OAA9BD,EAAUrlC,MAAM,UAA2C,IAAdslC,EACX,OAAlCD,EAAUrlC,MAAM,cAA+C,IAAdslC,EACtB,OAA3BD,EAAUrlC,MAAM,OAAwC,IAAdslC,EACf,OAA3BD,EAAUrlC,MAAM,OAAwC,IAAdslC,EAAqB,IACpC,OAA3BD,EAAUrlC,MAAM,OAAwC,IAAdslC,EAAqB,EAClC,OAA7BD,EAAUrlC,MAAM,SAA0C,IAAdslC,EACzC,EAOX,IALA,IAAIC,EAAoB,GACpBC,EAAe,GACfC,EAAkB,GAClBC,EAAoB,GACpBC,EAAqB,GA7BD,WA8BftjC,GACL,IA9BiBujC,EAAMxlC,EA8BjBmC,EAAUsgC,EAAIxgC,GACdwjC,EAActjC,EAAQyI,KACtBvC,EAAOhG,IAAOF,EAAQG,QAAQd,WAAWe,OAASJ,EAAQK,QAAQhB,WAAWe,OAAQ,gBAAgBE,UACrGuiC,EAAM7iC,EAAQ6iC,IAyCpB,GAxCmBlC,EAAO4C,QACa56B,MAAK,SAAUjB,EAAM5H,EAAO6H,GAC/D,OAAOD,IAAS47B,MAGhBN,EAAkBx/B,KAAK,CACnB0C,KAAMA,EACNrI,MAAOX,OAAO8C,EAAQwjC,UACtBC,UA1CSJ,EA0CarjC,EAAQqjC,KA1CfxlC,EA0CqBmC,EAAQwjC,SAzCvC,uBAATH,EACuB,GAAhBnmC,OAAOW,GAEL,iBAATwlC,EACuB,GAAhBnmC,OAAOW,GAEX,GAoCCmC,QAASA,IAGH2gC,EAAO+C,GACQ/6B,MAAK,SAAUjB,EAAM5H,EAAO6H,GACrD,OAAOD,IAAS47B,MAGhBL,EAAaz/B,KAAK,CACd0C,KAAMA,EACNrI,MAAOX,OAAO8C,EAAQ2jC,UACtBF,SAAUb,EAAiBC,EAAK7iC,EAAQ2jC,UACxC3jC,QAASA,IAGA2gC,EAAOiD,MACWj7B,MAAK,SAAUjB,EAAM5H,EAAO6H,GAC3D,OAAOD,IAAS47B,MAGhBJ,EAAgB1/B,KAAK,CACjB0C,KAAMA,EACNrI,MAAOX,OAAO8C,EAAQmgC,UACtBsD,SAAUb,EAAiBC,EAAK7iC,EAAQmgC,UACxCngC,QAASA,IAGA2gC,EAAOwB,MACWx5B,MAAK,SAAUjB,EAAM5H,EAAO6H,GAC3D,OAAOD,IAAS47B,KAEG,CACnB,IAAMO,EAAU3mC,OAAO8C,EAAQ2jC,UACzBG,EAAW5mC,OAAO8C,EAAQ+jC,UACZ,iBAAhBT,EAOAF,EAAmB5/B,KAAK,CACpB0C,KAAMA,EACNrI,MAAO,EACP4lC,SAAU,EACVzjC,QAASA,KAIG,OAAZ6jC,QAAgCzkC,IAAZykC,GACpBT,EAAmB5/B,KAAK,CACpB0C,KAAMA,EACNrI,MAAOX,OAAO8C,EAAQ2jC,UACtBF,SAAUb,EAAiBC,EAAK7iC,EAAQ2jC,UACxC3jC,QAASA,IAGA,OAAb8jC,QAAkC1kC,IAAb0kC,GACrBX,EAAkB3/B,KAAK,CACnB0C,KAAMA,EACNrI,MAAOX,OAAO8C,EAAQ8jC,UACtBL,SAAU,EACVzjC,QAASA,OA5EpBF,EAAQ,EAAGA,EAAQwgC,EAAIvgC,OAAQD,IAAU,EAAzCA,GAmFT,MAAO,CACHyjC,QAASP,EACTU,GAAIT,EACJe,QAASb,EACTS,MAAOV,EACPe,SAAUb,GA8RCc,CAAcxB,GAC3BN,EA5RN,SAAqB3iC,EAAY28B,EAAUwD,GACvC,IAAMzD,EAAU18B,EAAc,OAC9B,MAAe,gBAAXmgC,EACO,CACHn5B,SAAU,EACV+6B,aAAc,EACdj7B,UAAW41B,EAAW,MACtB31B,QAAS21B,GAGA,IAAbC,EACO,CACH31B,SAAU,GACV+6B,aAAc,EACdj7B,UAAW41B,EAAW,MACtB31B,QAAS21B,GAGA,IAAbC,EACO,CACH31B,SAAU,GACV+6B,aAAc,EACdj7B,UAAW41B,EAAW,OACtB31B,QAAS21B,GAGA,IAAbC,EACO,CACH31B,SAAU,GACV+6B,aAAc,EACdj7B,UAAW41B,EAAW,OACtB31B,QAAS21B,GAGV,CACH11B,SAAU,GACV+6B,aAAc,GACdj7B,UAAW41B,EAAW,QACtB31B,QAAS21B,GAsPGgI,CAAY1kC,EAAYsgC,EAAgBH,GACtDwE,EAAO/C,EAAgBsB,EAAWY,QAASnB,EAAaxC,GACxD8D,EAAKrC,EAAgBsB,EAAWe,GAAItB,EAAaxC,GACjDoE,EAAU3C,EAAgBsB,EAAWqB,QAAS5B,EAAaxC,GAC3DyE,EA/NN,SAAeC,EAAMC,EAAMC,GAEvB,IADA,IAAIC,EAAU,GACL3kC,EAAQ,EAAGA,EAAQwkC,EAAKvkC,OAAQD,IAAS,CAC9C,IAGM+hC,EAHWyC,EAAKxkC,GACLykC,EAAKzkC,GACL0kC,EAAK1kC,GAEtB2kC,EAAQjhC,KAAKq+B,GAEjB,OAAO4C,EAsNGC,CAAM9C,EAAQwC,GAAOxC,EAAQ8B,GAAK9B,EAAQoC,IAClDJ,EAAQvC,EAAgBsB,EAAWiB,MAAOxB,EAAaxC,GAEvDqE,GAvCN,SAA0CL,EAAO71B,GAe7C,IAdA,IAAM42B,EAAUf,EAAM55B,KAAI,SAAUtC,EAAM5H,EAAO6H,GAE7C,IADA,IAAIk6B,EAAM,EACD/hC,EAAQ,EAAGA,EAAQ4H,EAAK3H,OAAQD,IAAS,CAE9C+hC,GADgBn6B,EAAK5H,GACDjC,MAExB,OAAY,IAARgkC,EACO,EAEI,OAAX9zB,QAA8B3O,IAAX2O,EACZ,KAEJsB,WAAWwyB,EAAM9zB,EAAS,GAAGuB,QAAQ,MAEvCxP,EAAQ,EAAGA,EAAQ8jC,EAAM7jC,OAAQD,IACtB8jC,EAAM9jC,GAsBV8kC,CAAiChB,EAAO,KAC3CvC,EAAgBsB,EAAWsB,SAAU7B,EAAaxC,IAC7DiF,EAxNN,SAAgBP,EAAMC,GAElB,IADA,IAAIE,EAAU,GACL3kC,EAAQ,EAAGA,EAAQwkC,EAAKvkC,OAAQD,IAAS,CAC9C,IAEM+hC,EAFWyC,EAAKxkC,GACLykC,EAAKzkC,GAEtB2kC,EAAQjhC,KAAKq+B,GAEjB,OAAO4C,EAgNIK,CAAOlD,EAAQgC,GAAQhC,EAAQqC,IACxCc,EA/MN,SAAqB3iB,EAAO4iB,GAExB,IADA,IAAIP,EAAU,GACL3kC,EAAQ,EAAGA,EAAQsiB,EAAMriB,OAAQD,IAAS,CAC/C,IAAMmlC,EAAW7iB,EAAMtiB,GACjBolC,EAAWF,EAAOllC,GAClB+hC,EAAMxyB,WAAW41B,EAAWC,GAAU51B,QAAQ,GACpDm1B,EAAQjhC,KAAKq+B,GAEjB,OAAO4C,EAuMQU,CAAYd,EAAOQ,GAgBtC,ICzrBkBvE,ED0rBZ8E,EC/qBP,SAAyBC,EAAWlM,EAAY1yB,EAAU4C,GAgB7D,SAASi8B,EAAej8B,EAAQ5C,GAC5B,MAAe,gBAAX4C,EAAmC,EACtB,IAAb5C,EAAyB,GACZ,IAAbA,EAAyB,GACZ,IAAbA,EAAyB,GACtB,GAgCX,SAAS8+B,EAAoBl8B,EAAQ5C,EAAUu5B,EAAOwF,EAAUC,EAAIC,GAChE,MAAe,gBAAXr8B,EACO,CACHgwB,MAAOoM,EACPnM,IAAKoM,EACL1lC,QAASwlC,EACTxF,MAAO,GAGE,IAAbv5B,EACO,CACH4yB,MAAOoM,EACPnM,IAAKoM,EACL1lC,QAASwlC,EACTxF,MAAOA,GAGE,IAAbv5B,EACO,CACH4yB,MAAOoM,EACPnM,IAAKoM,EACL1lC,QAASwlC,EACTxF,MAAe,EAARA,GAIE,IAAbv5B,EACO,CACH4yB,MAAOoM,EACPnM,IAAKoM,EACL1lC,QAASwlC,EACTxF,MAAO,GAGR,CACH3G,MAAOoM,EACPnM,IAAKoM,EACL1lC,QAASwlC,EACTxF,MAAO,IAGf,IAAM7D,EAAUhD,EAAc,OACxBwM,EA9FN,SAAyBt8B,EAAQ5C,EAAUD,GACvC,MAAe,gBAAX6C,EACO7C,EAAW,MAEL,IAAbC,EACOD,EAAW,OAEL,IAAbC,EACOD,EAAW,OAEL,IAAbC,EACOD,EAAW,OAEfA,EAAW,QAiFJo/B,CAAgBv8B,EAAQ5C,EAAU01B,GAChD6D,EAAQ,EACRlD,EAAa,GACjB,GAAIl9B,MAAMC,QAAQwlC,GAAY,CAC1BvkC,QAAQC,IAAIskC,GACZvkC,QAAQC,IAAIukC,EAAej8B,EAAQ5C,IACnC,IAH0B,eAGjB3G,GACL,IAAM0K,EA/Ed,SAA2BnB,EAAQ5C,EAAU3G,EAAO6lC,GAChD,MAAe,gBAAXt8B,EACO,CACHgwB,MAAOsM,EAAqB,EAAR7lC,EAAY,GAAK,GAAK,IAC1Cw5B,IAAKqM,EAA2B,GAAb7lC,EAAQ,GAAS,GAAK,GAAK,KAGrC,IAAb2G,EACO,CACH4yB,MAAOsM,EAAuB,GAAT7lC,EAAc,GAAK,IACxCw5B,IAAKqM,EAA2B,IAAb7lC,EAAQ,GAAU,GAAK,KAGjC,IAAb2G,EACO,CACH4yB,MAAOsM,EAAqB,EAAR7lC,EAAY,GAAK,GAAK,IAC1Cw5B,IAAKqM,EAA2B,GAAb7lC,EAAQ,GAAS,GAAK,GAAK,KAGrC,IAAb2G,EACO,CACH4yB,MAAOsM,EAAqB,EAAR7lC,EAAY,GAAK,GAAK,IAC1Cw5B,IAAKqM,EAA2B,GAAb7lC,EAAQ,GAAS,GAAK,GAAK,KAG/C,CACHu5B,MAAOsM,EAAqB,GAAR7lC,EAAa,GAAK,GAAK,IAC3Cw5B,IAAKqM,EAA2B,IAAb7lC,EAAQ,GAAU,GAAK,GAAK,KAoDjC+lC,CAAkBx8B,EAAQ5C,EAAU3G,EAAO6lC,GACnDF,EAAKj7B,EAAM6uB,MACXqM,EAAKl7B,EAAM8uB,IACXwM,EAAgBT,EAAUvjC,QAAO,SAAU4F,EAAM8S,EAAG7S,GACtD,IAAMzB,EAAOhG,IAAOwH,EAAKvH,QAAQd,WAAWe,OAASsH,EAAKrH,QAAQhB,WAAWe,OAAQ,gBAAgBE,UACrG,MAAe,gBAAX+I,GACc,IAAVvJ,EACO6lC,GAAaz/B,GAAQA,EAAOi2B,EAGpCsJ,GAAMv/B,GAAQA,EAAOw/B,KAEjB,gBAAXr8B,EACc,IAAVvJ,EACAg9B,EAAWt5B,KAAK+hC,EAAoBl8B,EAAQ5C,EAAU,EAAGq/B,EAAeH,EAAWxJ,IAInFW,EAAWt5B,KAAK+hC,EAAoBl8B,EAAQ5C,EAAU,EAAGq/B,EAAeL,EAAIC,IAOnD,IAAzBI,EAAc/lC,QACdigC,GAAgB,EAChBlD,EAAWt5B,KAAK+hC,EAAoBl8B,EAAQ5C,EAAU,EAAGq/B,EAAeL,EAAIC,MAG5E1F,GAAgB,EAChBlD,EAAWt5B,KAAK+hC,EAAoBl8B,EAAQ5C,EAAUu5B,EAAO8F,EAAeL,EAAIC,IAChF1F,EAAQ,IAjCXlgC,EAAQ,EAAGA,EAAQwlC,EAAej8B,EAAQ5C,GAAW3G,IAAU,EAA/DA,GAsCb,OAAOg9B,EDoiBgBiJ,EC1rBDzF,EDyrBuBoC,ECvrBzC9iC,MAAMC,QAAQygC,GACCA,EAAIx+B,QAAO,SAAU4F,EAAM5H,EAAO6H,GAC7C,MAAuC,iBAAhCD,EAAKe,KAAKpJ,WAAWe,UAI7B,IDkrBwDX,EAAYsgC,EAAgBH,GACvF9+B,QAAQC,IAAIqkC,GACZ,IACMY,EAjBN,SAAyBZ,EAAY/7B,EAAQ5C,GACzC,MAAe,gBAAX4C,EACO+7B,EAEM,IAAb3+B,EACiB2+B,EAAWtjC,QAAO,SAAU4F,EAAM5H,EAAO6H,GACtD,OAAO7H,GAAS,KAIjBslC,EAMMa,CAAgBb,EAAYxF,EAAQG,GAC5B/1B,KAAI,SAAUtC,EAAM5H,EAAO6H,GAChD,OAAO,kBAAC,GAAD,CAAYo4B,eAAgBA,EAAgBH,OAAQA,EAAQpiC,IAAKsC,EAAOA,MAAOA,EAAOqC,KAAMuF,EAAMlI,WAAY0/B,EAAQz/B,WAAYA,OAIvIymC,EAFe,CAAC,eAAM,eAAM,eAAM,sBAEPl8B,KAAI,SAAUnM,EAAOiC,EAAO6H,GACzD,OACI,yBAAKnK,IAAKsC,EAAO7B,MAAO,CAAE+X,OAAQ,oBAAqBC,eAAgB,WAAY/X,QAAS,OAAQC,WAAY,SAAUkV,gBAAiB,sBAAuBuH,YAAa,SAC3K,4BAAK/c,OAKXsoC,EATgB,CAAC,eAAM,WAAY,eAAM,sBASZn8B,KAAI,SAAUnM,EAAOiC,EAAO6H,GAC3D,OACI,yBAAKnK,IAAKsC,EAAO7B,MAAO,CAAE+X,OAAQ,oBAAqBC,eAAgB,WAAY/X,QAAS,OAAQC,WAAY,SAAUkV,gBAAiB,sBAAuBuH,YAAa,SAC3K,4BAAK/c,OAIjB,OACI,6BACI,yBAAKI,MAAO,CAAEC,QAAS,OAAQI,oBAAqBgkC,EAAY1C,KAC5D,yBAAK3hC,MAAO,CAAEC,QAAS,OAAQsV,iBAAkB,wBAC5C0yB,GAEL,yBAAKjoC,MAAO,CAAEC,QAAS,OAAQsV,iBAAkB,wBAC5C6uB,EAAWzC,EAAQwE,EAAM,IAAKrE,GAC9BsC,EAAWzC,EAAQ8D,EAAI,IAAK3D,GAC5BsC,EAAWzC,EAAQoE,EAAS,IAAKjE,GACjC+B,EAAclC,EAAQyE,EAAO,IAAK,EAAGtE,KAG9C,yBAAK9hC,MAAO,CAAEC,QAAS,OAAQI,oBAAqBgkC,EAAY1C,GAAStoB,UAAW,QAChF,yBAAKrZ,MAAO,CAAEC,QAAS,OAAQsV,iBAAkB,sBAAuByC,eAAgB,aACnFkwB,GAEL,yBAAKloC,MAAO,CAAEC,QAAS,OAAQsV,iBAAkB,sBAAuByC,eAAgB,aACnFosB,EAAWzC,EAAQgE,EAAO,IAAK7D,GAEhC,yBAAK9hC,MAAO,CAAEgY,eAAgB,WAAY/X,QAAS,OAAQI,oBAAqB,WAAaqjC,EAAWS,EAAY37B,SAAUm5B,GAAU,WACnIoG,GAEJ3D,EAAWzC,EAAQqE,EAAU,IAAKlE,GAClC+B,EAAclC,EAAQiF,EAAQ,IAAK,EAAG9E,KAG/C,yBAAK9hC,MAAO,CAAEC,QAAS,OAAQI,oBAAqBgkC,EAAY1C,GAAStoB,UAAW,QAChF,yBAAKrZ,MAAO,CAAE+X,OAAQ,oBAAqBC,eAAgB,WAAY/X,QAAS,OAAQC,WAAY,SAAU2S,eAAgB,SAAUuC,gBAAiB,uBAAwBhV,OAAQ,SACzK,gBAAXuhC,EACG,wBAAI3hC,MAAO,CAAE4O,SAAU,OAAQD,WAAY,QAA3C,MAEA,mCAEPk1B,EAAclC,EAAQmF,EAAY,IAAK,EAAGhF,S,GAnvB1CjjC,aEXNspC,G,iLAzBD,IAAD,EACmC9oC,KAAKI,MAArCqe,EADH,EACGA,SAAUta,EADb,EACaA,MAAOhC,EADpB,EACoBA,WAEnB4mC,EADa,CAAC,eAAM,eAAM,eAAM,gBACVr8B,KAAI,SAAUtC,EAAM5H,GAC5C,OACI,iCAAatC,IAAKsC,GACd,wBAAI7B,MAAO,CAAE2O,WAAsB,IAAV9M,EAAc,MAAQ,KAAO4H,OAIlE,OACI,yBAAKzJ,MAAO,CAAE+X,OAAQ,qCAClB,yBAAK/X,MAAO,CAAEoV,gBAAiB,YAAa4N,oBAAqB,MAAOC,qBAAsB,MAAO7iB,OAAQ,OAAQmU,QAAS,WAAYtU,QAAS,OAAQC,WAAY,WACnK,wBAAIF,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBAAqBhL,IAE/D,yBAAKxD,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,sBAAuBD,OAAQ,SAC/E,yBAAKJ,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WAAa+B,IAAOT,GAAYuM,OAAO,SAC3Gq6B,GAEL,kBAAC,GAAD,CAAQ5mC,WAAYA,EAAYsc,SAAUA,EAAU6jB,OAAQ,cAAeG,eAAgB,S,GApB/EjjC,aCAPwpC,I,yNACjBtpC,MAAQ,CACJ8oB,QAAS,KACT4K,OAAQ,KACRjQ,OAAQ,KACR8lB,OAAQ,KACRC,SAAU,M,mFAEO,IAAD,EACiBlpC,KAAKI,MAA9BytB,EADQ,EACRA,IAAKhgB,EADG,EACHA,IAAKnK,EADF,EACEA,MAAOwE,EADT,EACSA,IACzBlI,KAAKC,SAAS,CAAEmzB,OAAQvF,EAAK1K,OAAQtV,EAAKq7B,SAAUxlC,EAAOulC,OAAQ/gC,IACnElI,KAAKmpC,OAAOt7B,EAAKnK,EAAOmqB,EAAK3lB,K,2CAGX,IAAD,EACgBlI,KAAKI,MAA9BytB,EADS,EACTA,IAAKhgB,EADI,EACJA,IAAKnK,EADD,EACCA,MAAOwE,EADR,EACQA,IADR,EAE4BlI,KAAKN,MAA1C0zB,EAFS,EAETA,OAAQjQ,EAFC,EAEDA,OAAQ+lB,EAFP,EAEOA,SAAUD,EAFjB,EAEiBA,OAC9Bpb,IAAQuF,GAAUvlB,IAAQsV,GAAUzf,IAAUwlC,GAAYhhC,IAAQ+gC,IAClEjpC,KAAKC,SAAS,CAAEmzB,OAAQvF,EAAK1K,OAAQtV,EAAKq7B,SAAUxlC,EAAOulC,OAAQ/gC,IACnElI,KAAKmpC,OAAOt7B,EAAKnK,EAAOmqB,EAAK3lB,M,6BAI9B2F,EAAKnK,EAAOmqB,EAAK3lB,GAAM,IAAD,OACzBgC,GAAsC2D,EAAKnK,EAAOmqB,EAAK3lB,GAClDiC,MAAK,SAAAtF,GAAUrB,QAAQC,IAAIoB,EAAKA,MAAO,EAAK5E,SAAS,CAAEuoB,QAAS3jB,EAAKA,UACrE0F,OAAM,SAAAC,GAAShH,QAAQC,IAAI+G,Q,+BAKhC,IAAM4+B,EAAiBppC,KAAKN,MAAM8oB,QAElC,GADAhlB,QAAQC,IAAI2lC,GACW,OAAnBA,EACA,OACI,yBAAKzoC,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WACjE,kBAAC,KAAD,CAAM4D,KAAK,aAGvB,IAAM4kC,EAAaD,EAAe18B,KAAI,SAAC7H,EAAMrC,GACzC,MAAwB,KAAjBqC,EAAKmkB,QAAiB,yBAAK9oB,IAAK,kBAAoBsC,EAAO7B,MAAO,CAAE2U,WAAY,aAAezQ,EAAKmkB,SAAiB,MAEhI,OACI,6BAAMqgB,O,GA3CwB7pC,cCKrB8pC,G,2MACjB5pC,MAAQ,CACJ+jC,OAAQ,GACR3c,OAAQ,CAAE,SAAY,IACtByiB,YAAa,KACb/gB,QAAS,GACTlY,SAAS,G,EAGbiB,UAAY,WACR,EAAKtR,SAAS,CACVqQ,SAAS,K,EAIjBoD,SAAW,SAAApC,GACP9N,QAAQC,IAAI6N,GACZ,EAAKrR,SAAS,CACVqQ,SAAS,K,EAIjBe,aAAe,SAAAC,GACX9N,QAAQC,IAAI6N,GACZ,EAAKrR,SAAS,CACVqQ,SAAS,K,qHAiGR,MAgBiFtQ,KAAKI,MAAnFwI,EAhBH,EAgBGA,KAAMiJ,EAhBT,EAgBSA,KAAM7M,EAhBf,EAgBeA,OAAQwkC,EAhBvB,EAgBuBA,KAAiBC,GAhBxC,EAgB6Bl4B,UAhB7B,EAgBwCk4B,WAAWC,EAhBnD,EAgBmDA,OAAQC,EAhB3D,EAgB2DA,MAAOjmC,EAhBlE,EAgBkEA,MAAOwE,EAhBzE,EAgByEA,IAhBzE,EAiB4BlI,KAAKN,MAChCkqC,GAlBD,EAiBGL,YAjBH,EAiBgB/gB,QAhBrB,SAAsBxjB,GAElB,OAAe,IAAXA,EACO,2BAEI,IAAXA,EACO,qBAGI,IAAXA,EACO,qBAEJA,EAKU6kC,CAAa7kC,IACZN,SAASM,GAE/B,OACI,yBAAKrE,MAAO,CAAEq0B,UAAW,OAAQp0B,QAAS,OAAQI,oBAAqB,wBAAyB8oC,UAAW,OAAQC,aAAcN,EAAY,mCAAqC,oBAAqB9wB,eAAgB,aACnN,wBAAIxX,UAAU,mBAAmByB,IAAOgG,GAAM8F,OAAO,gBACrD,wBAAIvN,UAAU,kBAAkBR,MAAO,CAAE6S,eAAgB,SAAW3B,GACpE,wBAAI1Q,UAAU,mBAAmBqoC,GACjC,wBAAIroC,UAAU,mBAAmByoC,GAGjC,wBAAIzoC,UAAU,kBAAkBsS,QAAoB,IAAXzO,EAAehF,KAAKuR,UAAY,KAAM5Q,MAAO,CAAEwO,MAAkB,IAAXnK,EAAe,OAAS,QAASkuB,eAA2B,IAAXluB,EAAe,YAAc,OAAQwP,OAAmB,IAAXxP,EAAe,UAAY,SACxM,IAAXA,EAAe,eAAO,MAE3B,kBAAC,KAAD,CACIb,MAAM,2BACNmM,QAAStQ,KAAKN,MAAM4Q,QACpB2F,KAAMjW,KAAK0T,SACXJ,SAAUtT,KAAKqR,aACfgC,MAAO,IACPE,OAAQ,MACR,kBAAC,GAAD,CAAcsa,IAAK6b,EAAO3nC,WAAWe,OAAQ+K,IAAK87B,EAAM5nC,WAAWe,OAAQY,MAAOA,EAAM3B,WAAWe,OAAQoF,IAAKA,U,GAjKnF1I,aCIlCwqC,G,iLAVP,IACMX,EADerpC,KAAKI,MAAMyQ,OACAnE,KAAI,SAAC7H,EAAMrC,GACvC,MAAwB,KAAjBqC,EAAKmkB,QAAiB,yBAAK9oB,IAAM,kBAAoBsC,EAAQ7B,MAAO,CAAE2U,WAAY,aAAezQ,EAAKmkB,SAAiB,MAElI,OACI,6BAAMqgB,O,GAPY7pC,aC4LfyqC,G,2MApLXvqC,MAAQ,CACJ4Q,SAAS,EAET45B,cAAc,EACdC,YAAa,GACbC,QAAS,GACT7iB,QAAS,GAET8iB,QAAS,M,EAiCb94B,UAAY,SAACV,GACT,EAAK5Q,SAAS,CACViqC,cAAc,EACdC,YAAat5B,K,EAIrB6C,SAAW,SAAApC,GACP,EAAKrR,SAAS,CACViqC,cAAc,K,EAItB74B,aAAe,SAAAC,GACX,EAAKrR,SAAS,CACViqC,cAAc,K,mFA7ClB,IAAMnO,EAAQ/7B,KAAKI,MAAMkqC,gBAAgB,GACzCtqC,KAAKC,SAAS,CAAEoqC,QAAStO,IACzB/7B,KAAKuqC,iB,2CAGL,IAAMxO,EAAQ/7B,KAAKI,MAAMkqC,gBAAgB,GAErCvO,IADgB/7B,KAAKN,MAAjB2qC,UAEJrqC,KAAKC,SAAS,CAAEoqC,QAAStO,IACzB/7B,KAAKuqC,kB,qCAGG,IAAD,aAU2BvqC,KAAKI,MAAnCqe,EAVG,EAUHA,SAAU6rB,EAVP,EAUOA,gBACZE,EAAqB5nC,IAAO0nC,EAAgB,IAAI57B,OAAO,eAV7D,SAA6B87B,GACzB,IAAM1iB,EAAoBllB,MAAWA,IAAO4nC,EAAoB,cAAcxnC,UAE7D0B,SAASojB,EADH,QASLC,CAAoByiB,GAC1CtgC,GAAsCuU,EAASpX,MAAOmjC,EAAoB,MAAO,YAC5ErgC,MAAK,SAAAtF,GAAU,EAAK5E,SAAS,CAAEmqC,QAASvlC,EAAKA,UAC7C0F,OAAM,SAAAC,GAAShH,QAAQC,IAAI,gCAAkCwK,KAAKC,UAAU1D,S,+BAqB5E,MAmD0CxK,KAAKN,MAA5CwqC,EAnDH,EAmDGA,aAAcC,EAnDjB,EAmDiBA,YAElBM,EApDJ,SAAuBL,EAASE,GAC5B9mC,QAAQC,IAAI6mC,EAAgB,IAC5B,IAAII,EAAiB,GACrB,GAAIpoC,MAAMC,QAAQ6nC,GACd,IAAK,IAAI5nC,EAAQ,EAAGA,EAAQ4nC,EAAQ3nC,OAAQD,IAAS,CACjD,IAAME,EAAU0nC,EAAQ5nC,GAClBmoC,EAAgB/qC,OAAO8C,EAAQ4H,UAC/BsgC,EAAmBhoC,IAAOF,EAAQgP,QAAQ3P,WAAWe,OAASJ,EAAQiP,QAAQ5P,WAAWe,OAAQ,sBAAsBE,UAC7H,GAAIsnC,EAAgB,IAAMM,GAAoBA,GAAoBN,EAAgB,GAC9E,GAAsB,KAAlBK,EAEAD,EAAexkC,KAAK,CAChB0C,KAAMgiC,EACN5lC,OAAQ,EACRtC,QAASA,SAGZ,GAAsB,KAAlBioC,EAELD,EAAexkC,KAAK,CAChB0C,KAAMgiC,EACN5lC,OAAQ,EACRtC,QAASA,SAGZ,GAAsB,KAAlBioC,EAELD,EAAexkC,KAAK,CAChB0C,KAAMgiC,EACN5lC,OAAQ,EACRtC,QAASA,QAGZ,IAAsB,KAAlBioC,GAA0C,KAAlBA,GAA0C,KAAlBA,EAErD,SAIAD,EAAexkC,KAAK,CAChB0C,KAAMgiC,EACN5lC,OAAQ2lC,EACRjoC,QAASA,KAM7B,OAAOgoC,EAIMG,CArDZ,EAmD8BT,QACPpqC,KAAKI,MAAzBkqC,iBAEF/4B,EAAYvR,KAAKuR,UACjBmC,EAAW1T,KAAK0T,SAChBrC,EAAerR,KAAKqR,aAEtBo5B,EAAWhoC,OAAS,IACpBgoC,EAAaA,EAAW17B,MAAK,SAACC,EAAGC,GAC7B,OAAOD,EAAEpG,KAAOqG,EAAErG,KAAO,GAAK,MAItC,IAAMkiC,EAAaL,EAAW/9B,KAAI,SAAUnM,EAAOiC,EAAOyD,GACtD,IAAMujC,EAAOjpC,EAAMmC,QAAQqoC,QACrBniC,EAAOrI,EAAMqI,KACbiJ,EAAOtR,EAAMmC,QAAQkJ,SACrB5G,EAASzE,EAAMyE,OACjBykC,GAAY,EAQhB,OAPIjnC,EAAQioC,EAAWhoC,OAAS,IAC5BgnC,EAAY7mC,IAAOrC,EAAMqI,MAAMoiC,OAAOpoC,IAAO6nC,EAAWjoC,EAAQ,GAAGoG,MAAO,QAE1EpG,IAAUioC,EAAWhoC,OAAS,IAC9BgnC,GAAY,GAIZ,kBAAC,GAAD,CAAqBvpC,IAAK,kBAAoBsC,EAAOgnC,KAAMA,EAAM5gC,KAAMA,EAAMiJ,KAAMA,EAAM7M,OAAQA,EAAQ2kC,MAAOppC,EAAMmC,QAAQuoC,SAAUvB,OAAQnpC,EAAMmC,QAAQwoC,SAAUxnC,MAAOnD,EAAMmC,QAAQ2lB,KAAMngB,IAAK3H,EAAMmC,QAAQ6lB,SAAUhX,UAAWA,EAAWk4B,UAAWA,OAInQ0B,EADQ,CAAC,eAAM,2BAAQ,eAAM,eAAM,gBACjBz+B,KAAI,SAAUnM,EAAOiC,EAAO6H,GAEhD,OACI,wBAAIlJ,UAAU,uBAAuBR,MAAO,CAAE6S,eAAgB,WAAajT,MAKnF,OACI,6BACI,yBAAKI,MAAO,CAAEI,OAAQ,OAAQgV,gBAAiB,yBAA0BnV,QAAS,OAAQI,oBAAqB,0BAC1GmqC,GAEL,yBAAKxqC,MAAO,CAAE+X,OAAQ,mCAAoC+G,aAAc,cAAe9G,eAAgB,aACnG,yBAAKxX,UAAU,mBACqB,OAA/B8M,KAAKC,UAAUu8B,GACZK,EAEA,yBAAKnqC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,0BAChD,yBAAKL,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQC,WAAY,SAAU2S,eAAgB,WAArF,wBAKZ,kBAAC,KAAD,CACIrP,MAAO,2BACPmM,QAAS45B,EACTj0B,KAAMvC,EACNJ,SAAUjC,EACVgC,MAAO,IACPE,OAAQ,MACR,kBAAC,GAAD,CAAgB1C,OAAQs5B,W,GA7KlB3qC,aCaf4rC,G,iLAXP,OACI,yBAAKzqC,MAAO,CAAEokB,aAAc,SACxB,yBAAKpkB,MAAO,CAAEoV,gBAAiB,YAAa4N,oBAAqB,MAAOC,qBAAsB,MAAO7iB,OAAQ,OAAQmU,QAAS,WAAYtU,QAAS,OAAQC,WAAY,WACnK,wBAAIF,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBAAtC,+CAEJ,kBAAC,GAAD,CAAiBsP,SAAUze,KAAKI,MAAMqe,SAAU6rB,gBAAiBtqC,KAAKI,MAAMkqC,uB,GAZ7D9qC,aCqKhB6rC,G,2MApKX3rC,MAAQ,CACJ2nB,SAAU,GACVikB,OAAQ,KACRC,eAAgB,M,EA4BpBC,cAAgB,WAAM,IAsEVt+B,EAAU,EAAK9M,MAAf8M,MACFjE,EAAYiE,EAAM,GAClBhE,EAAUgE,EAAM,GAItB,OA1EA,SAAuBu+B,EAAa3kC,EAAIC,GACpC,IAAI2kC,EAAcD,EAAYjnC,QAAO,SAAU9B,EAASF,EAAO6H,GAC3D,IAAMshC,EAAY/oC,IAAOF,EAAQ2iB,QAAQtjB,WAAWe,OAASJ,EAAQ4iB,QAAQvjB,WAAWe,OAAQ,sBAAsBE,UACtH,OAAO8D,GAAM6kC,GAAaA,GAAa5kC,KAGvC6kC,OAAOC,KAAKH,GAAajpC,OAAS,IAClCipC,EAAcA,EAAY38B,MAAK,SAACC,EAAGC,GAG/B,OAFgBrM,IAAOoM,EAAEqW,QAAQtjB,WAAWe,OAAQ,cAAcE,UAClDJ,IAAOqM,EAAEoW,QAAQtjB,WAAWe,OAAQ,cAAcE,UACnC,GAAK,MAI5C,IAAM8oC,EAAc,CAChB,EAAK,CAAE,IAAO,IAAK,IAAO,KAC1B,EAAK,CAAE,IAAO,EAAG,IAAO,KACxB,EAAK,CAAE,IAAO,EAAG,IAAO,KACxB,EAAK,CAAE,IAAO,EAAG,IAAO,IACxB,EAAK,CAAE,KAAQ,GAAI,IAAO,IAC1B,EAAK,CAAE,IAAO,EAAG,IAAO,KACxB,EAAK,CAAE,IAAO,EAAG,IAAO,MA4C5B,OAzCgBJ,EAAYh/B,KAAI,SAAUhK,EAASF,EAAO6H,GACtD,IAAM0hC,EAAUrpC,EAAQ6oB,KAClBygB,EAAYtpC,EAAQ+oB,KACpBwgB,EAAWvpC,EAAQmpB,KACnBqgB,EAAYxpC,EAAQypC,KACpBC,EAAU1pC,EAAQipB,KAClB0gB,EAAa3pC,EAAQ4pC,KACrBC,EAAY7pC,EAAQ8pC,KACpBb,EAAY/oC,IAAOF,EAAQ2iB,QAAQtjB,WAAWe,OAASJ,EAAQ4iB,QAAQvjB,WAAWe,OAAQ,sBAAsBE,UAGhHypC,EAAe,CAFR7pC,IAAO+oC,GAAWj9B,OAAO,eAEVq9B,EAASC,EAAWC,EAAUC,EAAWE,EAASC,EAAYE,EADrE,QAEjB9C,GAAY,EAChB,GAAIjnC,EAAQkpC,EAAYjpC,OAAS,EAAG,CAChC,IAAMZ,EAAMe,IAAO+oC,GAAWj9B,OAAO,cAC/Bg+B,EAAa9pC,IAAO8oC,EAAYlpC,EAAQ,GAAG6iB,QAAQtjB,WAAWe,OAAS4oC,EAAYlpC,EAAQ,GAAG8iB,QAAQvjB,WAAWe,OAAQ,sBAAsB4L,OAAO,cAC5J+6B,EAAY7mC,IAAOf,GAAKmpC,OAAO0B,EAAY,OAG3ClqC,IAAUkpC,EAAYjpC,OAAS,IAC/BgnC,GAAY,GAGhB,IAAMkD,EAAUF,EAAa//B,KAAI,SAAUnM,EAAOiC,EAAOyD,GACrD,IAAI2mC,GAAY,EACVC,EAAY96B,WAAWxR,GAK7B,OAHa,GAATiC,GAAuB,GAATA,IAAeqqC,EAAYf,EAAYtpC,EAAMT,YAAY2e,KAAOmsB,EAAYf,EAAYtpC,EAAMT,YAAY0e,MAA4B,GAApBqsB,MAAMD,MACtID,GAAY,GAGZ,iCAAa1sC,IAAKsC,EAAO7B,MAAO,CAAEosC,WAAsB,IAAVvqC,EAAc,gCAAkC,GAAIunC,aAAc,gCAAiCpxB,eAAgB,aAC7J,wBAAIhY,MAAO,CAAEwO,MAAOy9B,EAAY,MAAkB,IAAVpqC,EAAc,QAAU,OAAQ8M,WAAsB,IAAV9M,EAAc,IAAM,KAAOjC,OAK3H,OACI,yBAAKL,IAAKsC,EAAO7B,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQI,oBAAqB,sBAAuB+oC,aAAcN,EAAY,mCAAqC,sBAAwBkD,MAUvLK,CADH,EAAKttC,MAAM2nB,SACepe,EAAWC,I,mFAnGrD,IAAM2E,EAAM7N,KAAKI,MAAMqe,SAASpX,MAC1BqgB,EAAO1nB,KAAKI,MAAMqe,SAASxN,UACjCjR,KAAKC,SAAS,CAAEqrC,OAAQz9B,EAAK09B,eAAgB7jB,IAC7C1nB,KAAKitC,c,2CAGL,IAAMp/B,EAAM7N,KAAKI,MAAMqe,SAASpX,MAC1BqgB,EAAO1nB,KAAKI,MAAMqe,SAASxN,UAC3Bq6B,EAAStrC,KAAKN,MAAM4rC,OACpB4B,EAAUltC,KAAKN,MAAM6rC,eACvB19B,IAAQy9B,GAAU5jB,IAASwlB,IAC3BltC,KAAKC,SAAS,CAAEqrC,OAAQz9B,EAAK09B,eAAgB7jB,IAC7C1nB,KAAKitC,e,kCAGA,IAAD,OACAxuB,EAAaze,KAAKI,MAAlBqe,SAGRvU,GAFYuU,EAASpX,MACDzE,IAAO6b,EAASxN,UAAW,YAAYvC,OAAO,eAE7DvE,MAAK,SAAAtF,GAAU,EAAK5E,SAAS,CAAEonB,SAAUxiB,EAAKA,UAC9C0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,iCAAmCwK,KAAKC,UAAU1D,S,+BAkFhE,IACE2iC,EAAcntC,KAAKI,MAAnB+sC,UAEFC,EADe,CAAC,eAAM,KAAP,OAAqB,MAAO,OAAQ,KAAM,QAAS,OAAQ,gBAC9C1gC,KAAI,SAAUnM,EAAOiC,EAAOyD,GAoB1D,OACI,iCAAa/F,IAAKsC,EAAO7B,MAAO,CAAEuU,QAAS,UAAWtU,QAAS,OAAQC,WAAY,SAAU8X,eAAgB,aACzG,yBAAKhY,MAAO,CAAE4O,SAAU,SArBhC,SAAsBhP,GAElB,MAAc,UAAVA,EACO,yBAAKI,MAAO,CAAE4O,SAAU,SAAxB,IAAmC,kCAAnC,OAEG,SAAVhP,EACO,yBAAKI,MAAO,CAAE4O,SAAU,SAAxB,MAAqC,mCAElC,QAAVhP,EACO,yBAAKI,MAAO,CAAE4O,SAAU,SAAxB,KAAoC,mCAEjC,SAAVhP,EACO,yBAAKI,MAAO,CAAE4O,SAAU,SAAxB,MAAqC,mCAElC,SAAVhP,EACO,yBAAKI,MAAO,CAAE4O,SAAU,SAAxB,MAAqC,mCAEzChP,EAIgC8sC,CAAa9sC,QAItDirC,EAAgBxrC,KAAKwrC,gBAE3B,OACI,6BACI,yBAAK7qC,MAAO,CAAE2sC,aAAc,SAAUvsC,OAAQ,OAAQgV,gBAAiB,yBAA0BnV,QAAS,OAAQI,oBAAqB,wBAClIosC,GAEL,yBAAKzsC,MAAO,CAAE+X,OAAQ,mCAAoC+G,aAAc,cAAe9G,eAAgB,aACnG,yBAAKhY,MAAO,CAAEq0B,UAAWmY,EAAY,sBAAwB,QAASpY,UAAWoY,EAAY,sBAAwB,QAASrD,UAAW,SAC3G,IAAzB0B,EAAc/oC,OACX+oC,EAEA,yBAAK7qC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,wBAChD,yBAAKL,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQC,WAAY,SAAU2S,eAAgB,WAArF,8B,GAzJVhU,aCiBP+tC,G,iLAhBD,IAAD,EAC4CvtC,KAAKI,MAA9Cqe,EADH,EACGA,SAAU6rB,EADb,EACaA,gBAAiB6C,EAD9B,EAC8BA,UAEnC,OACI,6BACI,yBAAKxsC,MAAO,CAAEoV,gBAAiB,YAAa0J,aAAc,cAAe1e,OAAQ,OAAQmU,QAAS,WAAYtU,QAAS,OAAQC,WAAY,WACvI,wBAAIF,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBACjCg+B,EAAY,8BAAY,2DAGjC,kBAAC,GAAD,CAASjgC,MAAOo9B,EAAiB7rB,SAAUA,EAAU0uB,UAAWA,S,GAb9D3tC,a,oBCGGguC,I,kNACjB9tC,MAAQ,CACJ+tC,UAAW,KACXC,UAAW,M,mFAIX1tC,KAAK+W,cAAgB/W,KAAK+W,cAAcC,KAAKhX,MAC7CA,KAAK2tC,UAAY3tC,KAAK2tC,UAAU32B,KAAKhX,MACrC,IAAM+Q,EAAS/Q,KAAKI,MAAMwtC,YAAY78B,OACtCvN,QAAQC,IAAIzD,KAAKI,MAAMwtC,YAAY78B,QACnC/Q,KAAKC,SAAS,CAAEwtC,UAAW18B,M,2CAK3B,IAAMA,EAAS/Q,KAAKI,MAAMwtC,YAAY78B,OAC9B08B,EAAcztC,KAAKN,MAAnB+tC,UACRjqC,QAAQC,IAAIgqC,GACM,OAAdA,GAAoC,KAAdA,GAClBA,IAAc18B,GACd/Q,KAAKC,SAAS,CAAEwtC,UAAW18B,M,oCAKzBqG,GAEV5T,QAAQC,IAAI2T,EAAMC,OAAO9W,OACzBP,KAAKC,SAAS,CAAEwtC,UAAWr2B,EAAMC,OAAO9W,U,gCAGlC6W,GAAQ,IAAD,SACyBpX,KAAKI,MAAMwtC,YAAzCC,EADK,EACLA,UAAWppC,EADN,EACMA,KAAMqpC,EADZ,EACYA,SADZ,EAEqB9tC,KAAKN,MAA/B+tC,EAFK,EAELA,UAAWC,EAFN,EAEMA,UACfK,EAAUnrC,MAAS8L,OAAO,yBAI1Bs/B,EAAa,GAES,KAAtB52B,EAAMC,OAAO9W,MACbytC,EAAaP,GAEbO,EAAa,GACbhuC,KAAKC,SAAS,CAAEwtC,UAAW,Q7C+sBhC,SAAsB57B,EAAMd,EAAQ+8B,EAAUllC,EAAMilC,EAAWppC,EAAMiT,GAC1E,IAAM7O,EAAO,CACXgJ,KAAMA,EACNd,OAAQA,EACRrJ,SAAUomC,EACVllC,KAAMA,EACNwb,UAAWypB,EACXppC,KAAMA,EACNiT,OAAQA,GAEV,OAAOrR,IAAMyC,KAAK,sBAAuBD,G6CttBnCqB,CAXa,gBAWkB8jC,EAAYF,EAAUC,EAASF,EAAWppC,EAAMipC,GAC1EvjC,MAAK,SAAAa,GACFxH,QAAQC,IAAI,mBAAqBwK,KAAKC,UAAUlD,IAChD,EAAK5K,MAAM6V,KAAK+3B,MAEnBzjC,OAAM,SAAAC,GACHhH,QAAQC,IAAI,mBAAqBwK,KAAKC,UAAU1D,S,+BAIlD,IACEqa,EAAaC,KAAbD,SADH,EAEwB7kB,KAAKI,MAAMwtC,YAAhCK,EAFH,EAEGA,WAAYp8B,EAFf,EAEeA,KACdyB,EAAWtT,KAAKI,MAAMkT,SACtB2C,EAAOjW,KAAK2tC,UAAU32B,KAAKhX,MAEjC,OADAwD,QAAQC,IAAIzD,KAAKN,MAAM+tC,WAEnB,kBAAC,KAAD,CACItpC,MAAM,2BACNmM,QAAStQ,KAAKI,MAAMkQ,QACpBgD,SAAUA,EACV46B,OAAO,eACPC,WAAW,eACX56B,OAAQ,CACJ,kBAAC,KAAD,CAAQ5S,MAAO,CAAEytC,MAAO,QAAU36B,QAASwC,EAAM1V,MAAM,KAAvD,gBACA,kBAAC,KAAD,CAAQkT,QAASH,GAAjB,gBACA,kBAAC,KAAD,CAAQ7O,KAAK,UAAUgP,QAASwC,EAAM1V,MAAM,KAA5C,kBAGJ,yBAAKI,MAAO,CAAEC,QAAS,OAAQsV,iBAAkB,wBAC7C,yBAAKvV,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,gBAAiB3S,WAAY,WACxE,0DAAYotC,GACZ,wEAGJ,yBAAKttC,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,gBAAiB3S,WAAY,WACxE,0DAAYgR,GACZ,gEAAa7R,KAAKN,MAAMgY,SAE5B,yBAAK/W,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,gBAAiB3S,WAAY,WACxE,8CACA,0DAAYb,KAAKN,MAAMgY,SAE3B,yBAAK/W,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,gBAAiB3S,WAAY,WAA5E,6BACA,kBAACgkB,EAAD,CAAU4f,KAAM,EAAGpuB,YAAY,6CAAU9V,MAAOP,KAAKN,MAAM+tC,UAAWt6B,SAAUnT,KAAK+W,sB,GA5FhEvX,cCiI1B6uC,G,2MA7HX3uC,MAAQ,CACJ4uC,QAAQ,EACRC,QAAQ,EACRx9B,OAAQ,GACRpR,WAAY,G,EAwChB+T,SAAW,SAAA86B,GACPhrC,QAAQC,IAAI+qC,GACZ,EAAKvuC,SAAS,CACVsuC,QAAQ,EACRx9B,OAAQy9B,K,EAIhBn9B,aAAe,SAAAC,GACX,EAAKrR,SAAS,CACVsuC,QAAQ,K,EAIhBE,UAAY,SAACluC,GACT,EAAKN,SAAS,CACV8Q,YAAkBjP,IAAVvB,EAAsBA,EAAQ,M,EAI9CmuC,YAAc,WAAO,IAAD,EACY,EAAKtuC,MAAzBqe,EADQ,EACRA,SAAUle,EADF,EACEA,MACZ6V,EAAE,gBAAYxT,IAAOrC,EAAMkX,KAAK1V,WAAaxB,EAAM6tB,KAAKrsB,WAAY,gBAAgBiB,WAC1FkH,GAAyBuU,EAASzN,UAAWoF,EAAI,YAAYjM,MAAK,SAAAa,GAC9D,EAAKyjC,UAAUzjC,EAAOnG,KAAK,GAAGkM,WAC/BxG,OAAM,SAAAC,GACLhH,QAAQC,IAAI,mBAAqBwK,KAAKC,UAAU1D,Q,mFA/DpD,IAAMzK,EAAcF,eAAeC,QAAQ,QAC3CE,KAAKC,SAAS,CAAEN,WAAYI,IAC5BC,KAAK0uC,gB,mCAGD1uC,KAAKN,MAAM6uC,QAIXvuC,KAAKC,SACD,CACIquC,QAAQ,M,oCAOhBtuC,KAAKN,MAAM6uC,QAIXvuC,KAAKC,SACD,CACIquC,QAAQ,M,mCAOpBtuC,KAAKC,SACD,CACIsuC,QAAQ,M,+BAkCV,IAAD,SACkCvuC,KAAKI,MAApCG,EADH,EACGA,MAAOke,EADV,EACUA,SAAUgrB,EADpB,EACoBA,UACnBrzB,EAAE,gBAAYxT,IAAOrC,EAAMkX,KAAK1V,WAAaxB,EAAM6tB,KAAKrsB,WAAY,gBAAgBiB,WACpF4F,EAAOhG,IAAOrC,EAAMkX,KAAK1V,WAAaxB,EAAM6tB,KAAKrsB,WAAY,gBAAgB2M,OAAO,eACpF4X,EAAO/lB,EAAMouC,KAAK5sC,WAAWe,OAC7B8rC,EAAUruC,EAAMsuC,QAEtBrrC,QAAQC,IAAImrC,GAEZ,IAAMhB,EAAc,CAChB,WAAchlC,EACd,KAAQgmC,EACR,SAAYx4B,EACZ,OAAUpW,KAAKN,MAAMqR,OACrB,UAAa0N,EAASzN,UACtB,KAAQ,WACR,OAAUnR,eAAeC,QAAQ,SAGrC,OACI,yBAAKgvC,YAAa,kBAAM,EAAKC,cAAc7T,aAAc,kBAAM,EAAK8T,eAAe7tC,UAAU,cAAcR,MAAO,CAAEsuC,UAAiC,KAAtBjvC,KAAKN,MAAMqR,OAAgB,OAAS,OAAQg5B,aAAeN,EAAY,mCAAqC,sBACvO,wBAAItoC,UAAU,mBAAmBR,MAAO,CAAEsuC,UAAiC,KAAtBjvC,KAAKN,MAAMqR,OAAgB,OAAS,SAAWnI,GACpG,yBAAKjI,MAAO,CAAEC,QAAS,OAAQsV,iBAAkB,CAAuB,OAAtBlW,KAAKN,MAAMqR,aAAyCjP,IAAtB9B,KAAKN,MAAMqR,QAA8C,KAAtB/Q,KAAKN,MAAMqR,OAAgB,MAAQ,cAClJ,yBAAKpQ,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAChD,yBAAKL,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAU2S,eAAgB,SAAUmF,eAAgB,WAAYo0B,WAAY,qCACnH,wBAAIpsC,MAAO,CAAE2O,WAAY,IAAKH,MAAO,UAChCmX,IAGT,yBAAK3lB,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAU8X,eAAgB,WAAYo0B,WAAY,qCACzF,wBAAIpsC,MAAO,CAAE2O,WAAY,IAAKH,MAAO,UAChCy/B,KAIb,wBAAIjuC,MAAO,CAAE2O,WAAY,IAAKzO,WAAY,SAAU8X,eAAgB,WAAYxJ,MAAO,eAAgBiG,SAAU,SAAUrU,OAAQ,OAAQH,QAAS,CAAuB,OAAtBZ,KAAKN,MAAMqR,aAAyCjP,IAAtB9B,KAAKN,MAAMqR,QAA8C,KAAtB/Q,KAAKN,MAAMqR,OAAgB,OAAS,IAAKg8B,WAAY,mCAAoCmC,UAAW,qCAAuClvC,KAAKN,MAAMqR,QAC5W,yBAAKpQ,MAAOX,KAAKN,MAAM4uC,OACnB,CAAE1tC,QAAkC,GAAzBZ,KAAKN,MAAMC,WAAkB,OAAS,OAAQkB,WAAY,SAAU2S,eAAgB,SAAU2B,SAAU,WAAYisB,MAAO,EAAGrgC,QAAQf,KAAKN,MAAMqR,OAAgB,QAAiBswB,WAAY,cAAehuB,MAAO,QAE/N,CAAEzS,QAAS,SACX,yBAAK6S,QAAS,kBAAM,EAAK07B,cAAcxuC,MAAO,CAAE0S,MAA6B,KAAtBrT,KAAKN,MAAMqR,OAAgB,OAAS,OAAQhQ,OAA8B,KAAtBf,KAAKN,MAAMqR,OAAgB,OAAS,OAAQ0O,aAAc,OAAQ4hB,WAAY,uBAAwBzgC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,SAAU2T,OAAQ,YACtR,yBAAKnT,IAAK+tC,KAAY7tC,IAAI,kBAItC,kBAAC,GAAD,CAAaqsC,YAAaA,EAAat9B,QAAStQ,KAAKN,MAAM6uC,OAAQj7B,SAAUtT,KAAKqR,aAAc4E,KAAMjW,KAAK0T,gB,GAxH1FlU,aC0DlB6vC,G,2MA3DXC,qBAAuB,WAAO,IAAD,EACiB,EAAKlvC,MAAvCylB,EADiB,EACjBA,SAAUpH,EADO,EACPA,SAAU0uB,EADH,EACGA,UAWtBkC,EAAiBxpB,EAASnZ,KAC5B,SAACnM,EAAOiC,EAAOyD,GACX,IAAIwjC,GAAY,EAOhB,OANIjnC,EAAQqjB,EAASpjB,OAAS,IAC1BgnC,EAAY7mC,IAAOrC,EAAMkX,KAAM,YAAYuzB,OAAOpoC,IAAOijB,EAASrjB,EAAQ,GAAGiV,KAAM,YAAa,QAEhGjV,IAAUqjB,EAASpjB,OAAS,IAC5BgnC,GAAY,GAET,kBAAC,GAAD,CAAoBvpC,IAAKsC,EAAOjC,MAAOA,EAAOke,SAAUA,EAAU0uB,UAAWA,EAAW1D,UAAWA,OAIlH,OAA2B,IAApB5jB,EAASpjB,OAAe4sC,EAC3B,yBAAK1uC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,iBAChD,yBAAKL,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQC,WAAY,SAAU2S,eAAgB,WAArF,wB,wEAOR,IACQ25B,EAAcntC,KAAKI,MAAnB+sC,UACFoC,EAFQ,CAAC,eAAM,eAAM,gBAEG7iC,KAAI,SAAUhK,EAASF,EAAO6H,GACxD,OACI,yBAAKnK,IAAKsC,EAAO7B,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAU8X,eAAgB,WAAYnF,eAAgB,WACzG,yBAAK7S,MAAO,CAAE4O,SAAU,SAAW7M,OAK/C,OACI,6BACI,yBAAK/B,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQI,oBAAqB,eAAgB+U,gBAAiB,yBAA0Bu3B,aAAc,WACxIiC,GAEL,yBAAK5uC,MAAO,CAAE+X,OAAQ,mCAAoC+G,aAAc,cAAe9G,eAAgB,aACnG,yBAAKhY,MAAO,CAAEq0B,UAAWmY,EAAY,sBAAwB,QAASpY,UAAWoY,EAAY,sBAAwB,QAAS/3B,SAAU,SACnIpV,KAAKsvC,8B,GApDD9vC,aCuFdgwC,G,2MAnFX9vC,MAAQ,CACJ0zB,OAAQ,KACRqc,KAAM,I,EA4CVH,qBAAuB,WAAO,IAAD,EACwB,EAAKlvC,MAA9Cqe,EADiB,EACjBA,SAAU6rB,EADO,EACPA,gBAAiB6C,EADV,EACUA,UAE/BtnB,EAAW6pB,GADE,EAAKhwC,MAAd+vC,MAiBR,OAbA5pB,EAAWA,EAASrhB,QAAO,SAAAK,GACvB,IAAI+D,EAAOhG,IAAOiC,EAAK4S,KAAO5S,EAAKupB,KAAM,gBAAgBprB,UACzD,OAAOsnC,EAAgB,IAAM1hC,GAAQA,GAAQ0hC,EAAgB,MAG7DsB,OAAOC,KAAKhmB,GAAUpjB,OAAS,IAC/BojB,EAAWA,EAAS9W,MAAK,SAACC,EAAGC,GAGzB,OAFgBrM,IAAOoM,EAAEyI,KAAOzI,EAAEof,KAAM,gBAAgBprB,UACxCJ,IAAOqM,EAAEwI,KAAOxI,EAAEmf,KAAM,gBAAgBprB,UACzB,GAAK,MAIrC,kBAAC,GAAD,CAAgB6iB,SAAUA,EAAUpH,SAAUA,EAAU0uB,UAAWA,K,mFA7DzD,IAAD,EACsBntC,KAAKI,MAAnCqe,EADQ,EACRA,SAAU6rB,EADF,EACEA,gBAClBtqC,KAAKC,SAAS,CAAEmzB,OAAQ3U,EAAS6J,OAAQqnB,MAAOrF,EAAgB,GAAIsF,MAAOtF,EAAgB,KAC3FtqC,KAAK6vC,WAAWpxB,EAAS6J,OAAQgiB,EAAgB,GAAIA,EAAgB,M,2CAGnD,IAAD,EACqBtqC,KAAKI,MAAnCqe,EADS,EACTA,SAAU6rB,EADD,EACCA,gBADD,EAEgBtqC,KAAKN,MAA9B0zB,EAFS,EAETA,OAAQuc,EAFC,EAEDA,MAAOC,EAFN,EAEMA,MACjB/hB,EAAMpP,EAAS6J,OACf6f,EAAKmC,EAAgB,GACrBlC,EAAKkC,EAAgB,GACvBzc,IAAQuF,GAAU+U,IAAOwH,GAASvH,IAAOwH,IACzC5vC,KAAKC,SAAS,CAAEmzB,OAAQ3U,EAAS6J,OAAQqnB,MAAOrF,EAAgB,GAAIsF,MAAOtF,EAAgB,KAC3FtqC,KAAK6vC,WAAWpxB,EAAS6J,OAAQgiB,EAAgB,GAAIA,EAAgB,O,iCAGlEzc,EAAK/mB,EAAIC,GAAK,IAAD,OACdjC,EAAM,IAAIC,IAGhBmF,EAAoB2jB,EAFNjrB,IAAOkE,GAAI4H,OAAO,gBACpB9L,IAAOmE,GAAI2H,OAAO,iBAEzBvE,MAAK,SAAAtF,GACFrB,QAAQC,IAAIqB,EAAIG,OAAOJ,EAAKA,MAAMK,OAAOG,SAASC,SAClD,IAAM0F,EAASlG,EAAIG,OAAOJ,EAAKA,MAAMK,OACrC,GAA2B,IAAvBtF,OAAOoL,EAAO7F,KAAY,CAC1B,IAAM2qC,EAAa9kC,EAAO3F,SAASC,QAC/BhD,MAAMC,QAAQutC,GACd,EAAK7vC,SAAS,CAAEwvC,KAAMK,IAGtB,EAAK7vC,SAAS,CAAEwvC,KAAM,CAACK,KAG/B,MAAO,MAEVvlC,OAAM,SAAAC,GACHhH,QAAQC,IAAI,cAAgBwK,KAAKC,UAAU1D,S,+BA2B7C,IACE2iC,EAAcntC,KAAKI,MAAnB+sC,UACR,OACI,6BACI,yBAAKxsC,MAAO,CAAEoV,gBAAiB,YAAa0J,aAAc,cAAe1e,OAAQ,OAAQmU,QAAS,WAAYtU,QAAS,OAAQC,WAAY,WACvI,wBAAIF,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBACjCg+B,EAAY,6CAAY,qDAGhCntC,KAAKsvC,4B,GA9EE9vC,aCyITuwC,I,kNA1IXrwC,MAAQ,CACJ6uC,QAAQ,EACRyB,QAAQ,EACRj/B,OAAQ,GACRpR,WAAY,G,EAShB+uC,YAAc,WAAO,IAAD,EACY,EAAKtuC,MAAzBqe,EADQ,EACRA,SAAUle,EADF,EACEA,MAClB2J,GAAyBuU,EAASzN,UAAWzQ,EAAM0vC,SAAU,gBAAgB9lC,MAAK,SAAAa,GAC9ExH,QAAQC,IAAI,mBAAqBwK,KAAKC,UAAUlD,IAChD,EAAKyjC,UAAUzjC,EAAOnG,KAAK,GAAGkM,WAC/BxG,OAAM,SAAAC,GACLhH,QAAQC,IAAI,mBAAqBwK,KAAKC,UAAU1D,Q,EAmCxDkJ,SAAW,SAAA86B,GACP,EAAKvuC,SAAS,CACVsuC,QAAQ,EACRx9B,OAAQy9B,K,EAIhBn9B,aAAe,SAAAC,GACX,EAAKrR,SAAS,CACVsuC,QAAQ,K,EAIhBE,UAAY,SAACluC,GACT,EAAKN,SAAS,CACV8Q,YAAkBjP,IAAVvB,EAAsBA,EAAQ,M,EAI9C2vC,YAAc,WAAO,IACT3vC,EAAU,EAAKH,MAAfG,MACF4vC,EAAcvwC,OAAOW,EAAMoK,UACjC,OAAoB,KAAhBwlC,EACO,qBAES,KAAhBA,EACO,qBAES,KAAhBA,EACO,qBAEJA,G,mFA7EP,IAAMpwC,EAAcF,eAAeC,QAAQ,QAC3CE,KAAKC,SAAS,CAAEN,WAAYI,IAC5BC,KAAK0uC,gB,iCAcD1uC,KAAKN,MAAM6uC,QAIXvuC,KAAKC,SACD,CACI+vC,QAAQ,M,iCAMhBhwC,KAAKN,MAAM6uC,QAIXvuC,KAAKC,SACD,CACI+vC,QAAQ,M,mCAMpBhwC,KAAKC,SACD,CACIsuC,QAAQ,M,+BAsCV,IAAD,SACuBvuC,KAAKI,MAAzBqe,EADH,EACGA,SAAUle,EADb,EACaA,MACZ6vC,EAAO7vC,EAAMiL,QAAQzJ,WACrBsuC,EAAQ9vC,EAAM+vC,SAASvuC,WACvBwuC,EAAOhwC,EAAMiwC,SAASzuC,WAAWe,OAAS,IAAMvC,EAAMkwC,QAAQ1uC,WAAWe,OAAS,IAAMvC,EAAMmwC,QAAQ3uC,WAAWe,OAAS,IAAMvC,EAAMowC,QAAQ5uC,WAAWe,OACzJqlC,EAAKvlC,IAAOrC,EAAMqwC,QAAS,8BAA8BliC,OAAO,eAChE05B,EAAKxlC,IAAOrC,EAAMswC,QAAS,8BAA8BniC,OAAO,eAChE4zB,EAAStiC,KAAKkwC,cAEdtC,EAAc,CAChB,WAAczF,EACd,KAAQkI,EACR,SAAY9vC,EAAM0vC,SAClB,OAAUjwC,KAAKN,MAAMqR,OACrB,UAAa0N,EAASzN,UACtB,KAAQ,eACR,OAAUnR,eAAeC,QAAQ,SAGrC,OACI,yBAAKgvC,YAAa,kBAAM,EAAKgC,YAAY5V,aAAc,kBAAM,EAAK6V,YAAY5vC,UAAU,wBAAwBR,MAAO,CAAEsuC,UAAiC,KAAtBjvC,KAAKN,MAAMqR,OAAgB,OAAS,OAAQm+B,UAAW,oBAAqBnF,aAAc,oBAAqBpxB,eAAgB,aAC/P,wBAAIxX,UAAU,mCAAmCR,MAAO,CAAEsuC,UAAiC,KAAtBjvC,KAAKN,MAAMqR,OAAgB,OAAS,QAAUo3B,EAAnH,MAA0HC,GAC1H,yBAAKznC,MAAO,CAAEC,QAAS,OAAQsV,iBAAkB,CAAuB,OAAtBlW,KAAKN,MAAMqR,aAAyCjP,IAAtB9B,KAAKN,MAAMqR,QAA8C,KAAtB/Q,KAAKN,MAAMqR,OAAgB,MAAQ,cAClJ,yBAAKpQ,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,iBAAkBg0B,UAAW,SAC7E,yBAAK7zB,UAAU,gCACX,wBAAIA,UAAU,mCAAmCR,MAAO,CAAEwO,MAAO,QAASG,WAAY,MAAQ8gC,IAElG,yBAAKjvC,UAAU,gCACX,wBAAIA,UAAU,oCAAoCovC,IAEtD,yBAAKpvC,UAAU,gCACX,wBAAIA,UAAU,oCAAoCmhC,KAG1D,wBAAI3hC,MAAO,CAAE2O,WAAY,IAAKzO,WAAY,SAAUquC,UAAW,gCAAiCnC,WAAY,gCAAiCp0B,eAAgB,WAAYzD,QAAS,UAAW/F,MAAO,eAAgBiG,SAAU,SAAUrU,OAAQ,OAAQH,QAAS,CAAuB,OAAtBZ,KAAKN,MAAMqR,aAAyCjP,IAAtB9B,KAAKN,MAAMqR,QAA8C,KAAtB/Q,KAAKN,MAAMqR,OAAgB,OAAS,MAAQ/Q,KAAKN,MAAMqR,QAC1X,yBAAKpQ,MAAOX,KAAKN,MAAMswC,OACnB,CAAEpvC,QAAkC,GAAzBZ,KAAKN,MAAMC,WAAkB,OAAS,OAAQkB,WAAY,SAAU2S,eAAgB,SAAU2B,SAAU,WAAYisB,MAAO,EAAGrgC,OAAQ,MAAuBe,IAAtB9B,KAAKN,MAAMqR,QAA8C,KAAtB/Q,KAAKN,MAAMqR,OAAgB,OAAS,QAASswB,WAAY,cAAehuB,MAAO,QAEpQ,CAAEzS,QAAS,SACX,yBAAK6S,QAAS,kBAAM,EAAK07B,cAAcxuC,MAAO,CAAE0S,MAA6B,KAAtBrT,KAAKN,MAAMqR,OAAgB,OAAS,OAAQhQ,OAA8B,KAAtBf,KAAKN,MAAMqR,OAAgB,OAAS,OAAQ0O,aAAc,OAAQ4hB,WAAY,uBAAwBzgC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,SAAU2T,OAAQ,YACtR,yBAAKnT,IAAK+tC,KAAY7tC,IAAI,kBAItC,kBAAC,GAAD,CAAaqsC,YAAaA,EAAat9B,QAAStQ,KAAKN,MAAM6uC,OAAQj7B,SAAUtT,KAAKqR,aAAc4E,KAAMjW,KAAK0T,gB,GArIlFlU,cCmC1BwxC,I,wLApCD,IAAD,EACiDhxC,KAAKI,MAAnDyJ,EADH,EACGA,SAAU4U,EADb,EACaA,SAAUwyB,EADvB,EACuBA,WAAY9D,EADnC,EACmCA,UAGlChC,EADQ,CAAC,2BAAQ,eAAM,eAAM,gBACXz+B,KAAI,SAAUnM,EAAOiC,EAAO6H,GAChD,OACI,wBAAIlJ,UAAU,SAASZ,MAGzB2wC,EAA8BrnC,EAAS6C,KACzC,SAACnM,EAAOiC,EAAOyD,GAAf,OACI,kBAAC,GAAD,CAA4BwY,SAAUA,EAAUve,IAAKsC,EAAOjC,MAAOA,EAAO0wC,WAAYA,OAE9F,OACI,6BACI,yBAAK9vC,UAAU,gCACVgqC,GAEL,yBAAKxqC,MAAO,CAAE+X,OAAQ,mCAAoC+G,aAAc,cAAe9G,eAAgB,aACnG,yBAAKhY,MAAO,CAAEq0B,UAAWmY,EAAY,sBAAwB,QAASpY,UAAWoY,EAAY,sBAAwB,QAASrD,UAAW,SACvG,OAA7B77B,KAAKC,UAAUrE,GACZqnC,EAEA,yBAAKvwC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,yBAChD,yBAAKL,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQC,WAAY,SAAU2S,eAAgB,WAChF25B,EAAY,qBAAQ,0C,GA1BpB3tC,c,SCwLtB2xC,G,2MApLXzxC,MAAQ,CACJ0xC,YAAa,CAAE,SAAY,IAC3BC,MAAO,2BACPJ,WAAY,EACZK,UAAW,KACXnuB,OAAQ,KACRiQ,OAAQ,KACRvpB,SAAU,I,EAiDd0nC,cAAgB,SAAChxC,GACb,EAAKN,SAAS,CAAEoxC,MAAO9wC,K,EAE3BixC,iBAAmB,SAACp6B,GAChB,EAAKnX,SAAS,CAAEqxC,UAAWl6B,EAAMC,OAAO9W,S,EAuB5CkxC,WAAa,SAACC,EAAQ5qB,GAClB,IAAI4B,EAAW5B,EAAO4B,SAClBipB,EAAY,GAkBhB,OAjBAjpB,EAAS1C,SAAQ,SAAA2C,GACbgpB,EAAUhpB,EAAQzoB,KAAO,MAE7ByxC,EAAU,4BAAU,GAEpBD,EAAO1rB,SAAQ,SAAA4rB,GACX,IAAIC,EAAUD,EAAMpmC,QACpBkd,EAAS1C,SAAQ,SAAA2C,GACb,IAAMC,EAAK,IAAIC,OAAOF,EAAQG,UAAWH,EAAQI,aAC3C5oB,EAAQ0xC,EAAQ1xC,MAAMyoB,GACd,OAAVzoB,GAA+B,KAAbA,EAAM,IACxBwxC,EAAUhpB,EAAQzoB,KAAKgG,KAAK0rC,MAIpCD,EAAU,4BAAQzrC,KAAK0rC,MAEpBD,G,EAGXG,cAAgB,WAUU,EAAK1xC,MAAnB+sC,UAVU,IAWVtjC,EAAa,EAAKnK,MAAlBmK,SACF4nC,EAAa,EAAKA,WAElBM,EAbN,SAA6BloC,EAAUy4B,GACnC,OAAe,IAAXA,EACOz4B,EAEWA,EAASrF,QAAO,SAAU4F,EAAM5H,EAAO6H,GACzD,OAAOzK,OAAOwK,EAAKO,YAAc23B,KAQtB0P,CAAoBnoC,EADxB,EAAKnK,MAAMuxC,YAGtBgB,EAAgB,QACWnwC,IAA3B,EAAKpC,MAAM0xC,cACXa,EAAgBR,EAAWM,EAAY,EAAKryC,MAAM0xC,cAEtD,IAAIc,EAAeD,EAAc,EAAKvyC,MAAM2xC,OAE5C,OADW,EAAKc,aAAaD,I,EAIjCC,aAAe,SAACtsB,GAAc,IAAD,EACc,EAAKzlB,MAApCkqC,EADiB,EACjBA,gBAAiB6C,EADA,EACAA,UACjBmE,EAAc,EAAK5xC,MAAnB4xC,UACR,GAAkB,OAAdA,EAAoB,CACpB,IAAMc,EAAQ,IAAIvpB,OAAOyoB,EAAW,KACpCzrB,EAAWA,EAASrhB,QAAO,SAAAK,GACvB,OAAqC,OAA9BA,EAAK2G,QAAQrL,MAAMiyC,IAAkD,OAA/BvtC,EAAKyrC,SAASnwC,MAAMiyC,MAIzE,IAAMtrC,EAAiBwjC,EAAgB,GACjCvjC,EAAKomC,EAAY7C,EAAgB,GAAM,MAAuBA,EAAgB,GAEhF+H,EAAaxsB,EAASrhB,QAAO,SAAU9B,EAASF,EAAO6H,GACvD,IAAMpB,EAAYrG,IAAOF,EAAQkuC,QAAQ7uC,WAAWe,OAAQ,8BAA8BE,UACpFkG,EAAUtG,IAAOF,EAAQmuC,QAAQ9uC,WAAWe,OAAQ,8BAA8BE,UACxF,QAAS8D,EAAKoC,GAAWnC,EAAKkC,MAWlC,OARI2iC,OAAOC,KAAKwG,GAAY5vC,OAAS,IACjC4vC,EAAaA,EAAWtjC,MAAK,SAACC,EAAGC,GAI7B,OAHAzL,QAAQC,MACQb,IAAOoM,EAAE4hC,QAAQ7uC,WAAWe,OAAQ,8BAA8BE,UAClEJ,IAAOqM,EAAE2hC,QAAQ7uC,WAAWe,OAAQ,8BAA8BE,UACnD,GAAK,MAGrCqvC,G,mFApJPryC,KAAKsyC,YADW,IAER7zB,EAAaze,KAAKI,MAAlBqe,SACF5Q,EAAM4Q,EAASpX,MACfwmB,EAAMpP,EAAS6J,OACrBtoB,KAAKC,SAAS,CAAEkjB,OAAQtV,EAAKulB,OAAQvF,IACrC7tB,KAAKuyC,YAAY1kC,EAAKggB,K,2CAEJ,IACVpP,EAAaze,KAAKI,MAAlBqe,SADS,EAEUze,KAAKN,MAAxByjB,EAFS,EAETA,OAAQiQ,EAFC,EAEDA,OACVvlB,EAAM4Q,EAASpX,MACfwmB,EAAMpP,EAAS6J,OACjBza,IAAQsV,GAAU0K,IAAQuF,IAC1BpzB,KAAKC,SAAS,CAAEkjB,OAAQtV,EAAKulB,OAAQvF,IACrC7tB,KAAKuyC,YAAY1kC,EAAKggB,M,kCAGjB,IAAD,OACRhjB,GAAwB,cACnBV,MAAK,SAAAtF,GACF,IAAIiiB,EAASjiB,EAAKA,KAAKqjB,MAAK,SAAA/c,GAAI,MAAkC,iBAA9BA,EAAKgd,gBAAgBtW,QACzDiV,EAAO4B,SAAP,CAAmB,CAAE,IAAO,2BAAQ,UAAa,OAAjD,oBAA4D5B,EAAO4B,WACnEllB,QAAQC,IAAI,iCAAmCwK,KAAKC,UAAU4Y,IAC9D,EAAK7mB,SAAS,CACVmxC,YAAatqB,OAGpBvc,OAAM,SAAAC,GACHhH,QAAQC,IAAI+G,Q,kCAGZqD,EAAKggB,EAAK2kB,EAAOrT,GAAM,IAAD,OAE9Bj1B,GAAuC2D,EAAKggB,EAAK,OAC5C1jB,MAAK,SAAAtF,GAKF,EAAK5E,SAAS,CAAE4J,SAAUhF,EAAKA,UAElC0F,OAAM,SAAAC,GAAShH,QAAQC,IAAI,iCAAmCwK,KAAKC,UAAU1D,S,yCAYlE,IAAD,OACPioC,EAAWC,KAAXD,OACR,OACI,yBAAK9xC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,mBAAoBC,cAAe,SACnF,kBAAC,KAAD,CAAQiS,aAAclT,KAAKN,MAAM2xC,MAAO1wC,MAAO,CAAE0S,MAAO,KAAOF,SAAUnT,KAAKuxC,eACzEvxC,KAAKN,MAAM0xC,YAAY1oB,SAAShc,KAAI,SAACic,EAASnmB,GAC3C,OAAO,kBAACiwC,EAAD,CAAQlyC,MAAOooB,EAAQzoB,KAAMyoB,EAAQzoB,SAGpD,kBAAC,KAAD,CAAQgT,aAAclT,KAAKN,MAAMuxC,WAAYtwC,MAAO,CAAE0S,MAAO,KAAOF,SAAU,SAAC5S,GAAYiD,QAAQC,IAAIlD,GAAQ,EAAKN,SAAS,CAAEgxC,WAAY1wC,MACvI,kBAACkyC,EAAD,CAAQlyC,MAAO,GAAf,4BACA,kBAACkyC,EAAD,CAAQlyC,MAAO,IAAf,sBACA,kBAACkyC,EAAD,CAAQlyC,MAAO,IAAf,sBACA,kBAACkyC,EAAD,CAAQlyC,MAAO,IAAf,uBAEJ,kBAAC,KAAD,CAAO6V,GAAG,yBAAyBC,YAAY,6CAAUlD,SAAUnT,KAAKwxC,sB,+BAmF1E,IAAD,EAC2BxxC,KAAKI,MAA7B+sC,EADH,EACGA,UAAW1uB,EADd,EACcA,SACXwyB,EAAejxC,KAAKN,MAApBuxC,WAEFzR,EAAax/B,KAAK8xC,gBAExB,OACI,6BACI,yBAAKnxC,MAAO,CAAEoV,gBAAiB,YAAa0J,aAAc,cAAe1e,OAAQ,OAAQmU,QAAS,WAAYtU,QAAS,OAAQI,oBAAqBmsC,EAAY,UAAY,MAAOtsC,WAAY,WAE3L,wBAAIF,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBAAqBg+B,EAAY,2BAAS,4BAC/EA,EAAYntC,KAAK2yC,mBAAqB,MAE3C,kBAAC,GAAD,CAAwBl0B,SAAUA,EAAU5U,SAAU21B,EAAYyR,WAAYA,EAAY9D,UAAWA,S,GA/K/E3tC,aCkIvBozC,I,kNAlIXlzC,MAAQ,CACJ6uC,QAAQ,EACRyB,QAAQ,EACRj/B,OAAQ,EAAK3Q,MAAMgK,KAAK2G,OACxBpR,WAAY,G,EAShB+uC,YAAc,WAAO,IACTtkC,EAAS,EAAKhK,MAAdgK,KACRF,GAAyB,EAAK9J,MAAMqe,SAASzN,UAAW5G,EAAKme,SAAU,aAAape,MAAK,SAAAa,GACrFxH,QAAQC,IAAI,mBAAqBwK,KAAKC,UAAUlD,IAChD,EAAKyjC,UAAUzjC,EAAOnG,KAAK,GAAGkM,WAC/BxG,OAAM,SAAAC,GACLhH,QAAQC,IAAI,mBAAqBwK,KAAKC,UAAU1D,Q,EAmCxDkJ,SAAW,SAAA86B,GACP,EAAKvuC,SAAS,CACVsuC,QAAQ,EACRx9B,OAAQy9B,K,EAIhBn9B,aAAe,SAAAC,GACX,EAAKrR,SAAS,CACVsuC,QAAQ,K,EAIhBE,UAAY,SAACluC,GACT,EAAKN,SAAS,CACV8Q,YAAkBjP,IAAVvB,EAAsBA,EAAQ,M,mFA7D1C,IAAMR,EAAcF,eAAeC,QAAQ,QAC3CE,KAAKC,SAAS,CAAEN,WAAYI,IAC5BC,KAAK0uC,gB,iCAcD1uC,KAAKN,MAAM6uC,QAIXvuC,KAAKC,SACD,CACI+vC,QAAQ,M,iCAMhBhwC,KAAKN,MAAM6uC,QAIXvuC,KAAKC,SACD,CACI+vC,QAAQ,M,mCAMpBhwC,KAAKC,SACD,CACIsuC,QAAQ,M,+BAuBV,IAAD,WACiBjkC,EAYdF,EAASpK,KAAKI,MAAdgK,KAEFgmC,EAAOhmC,EAAKwB,SACZinC,EAAKzoC,EAAK0oC,QACVxQ,GAhBgBh4B,EAgBMF,EAAKE,SAfJ,KAArB1K,OAAO0K,IAAyC,KAArB1K,OAAO0K,GAC3B,qBAEc,KAArB1K,OAAO0K,GACA,qBAEc,KAArB1K,OAAO0K,GACA,qBAEJA,GAOLyoC,EAAa3oC,EAAK,IAAMrI,WAAWe,OACnCqlC,EAAKvlC,IAAOwH,EAAKsH,QAAQ3P,WAAY,cAAc2M,OAAO,SAC1D05B,EAAKxlC,IAAOwH,EAAK4oC,QAAQjxC,WAAY,cAAc2M,OAAO,SAE1Dk/B,EAAc,CAChB,WAAczF,EACd,KAAQiI,EACR,SAAYhmC,EAAKme,SACjB,OAAUvoB,KAAKN,MAAMqR,OACrB,UAAa/Q,KAAKI,MAAMqe,SAASzN,UACjC,KAAQ,YACR,OAAUnR,eAAeC,QAAQ,SAGrC,OACI,yBAAKgvC,YAAa,kBAAM,EAAKgC,YAAY5V,aAAc,kBAAM,EAAK6V,YAAY5vC,UAAU,qBAAqBR,MAAO,CAAEsuC,UAAiC,KAAtBjvC,KAAKN,MAAMqR,OAAgB,OAAS,OAAQm+B,UAAW,oBAAqBnF,aAAc,sBACvN,wBAAI5oC,UAAU,YAAYR,MAAO,CAAEsuC,UAAiC,KAAtBjvC,KAAKN,MAAMqR,OAAgB,OAAS,SAAWo3B,EAA7F,MAAoGC,GACpG,yBAAKznC,MAAO,CAAEC,QAAS,OAAQsV,iBAAkB,CAAuB,OAAtBlW,KAAKN,MAAMqR,aAAyCjP,IAAtB9B,KAAKN,MAAMqR,QAA8C,KAAtB/Q,KAAKN,MAAMqR,OAAgB,MAAQ,cAClJ,yBAAKpQ,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,sBAChD,wBAAIG,UAAU,YAAYR,MAAO,CAAEwO,MAAO,QAASG,WAAY,IAAKy9B,WAAY,qCAAuCqD,GACvH,wBAAIjvC,UAAU,aAAaR,MAAO,CAAEosC,WAAY,qCAAuCgG,GACvF,wBAAI5xC,UAAU,YAAYR,MAAO,CAAEosC,WAAY,qCAAuC8F,GACtF,wBAAI1xC,UAAU,YAAYR,MAAO,CAAEosC,WAAY,qCAAuCzK,IAE1F,wBAAInhC,UAAU,YAAYR,MAAO,CAAEuuC,UAAW,mCAAoC5/B,WAAY,IAAKH,MAAO,cAAeiG,SAAU,SAAUrU,OAAQ,OAAQH,QAAS,MAAuBkB,IAAtB9B,KAAKN,MAAMqR,QAA8C,KAAtB/Q,KAAKN,MAAMqR,OAAgB,OAAS,MAAQ/Q,KAAKN,MAAMqR,QACjQ,yBAAKpQ,MAAOX,KAAKN,MAAMswC,OACnB,CAAEpvC,QAAkC,GAAzBZ,KAAKN,MAAMC,WAAkB,OAAS,OAAQ6T,eAAgB,SAAU3S,WAAY,SAAUsU,SAAU,WAAYisB,MAAO,EAAGrgC,OAAQ,EAAuB,OAAtBf,KAAKN,MAAMqR,aAAyCjP,IAAtB9B,KAAKN,MAAMqR,QAAwB/Q,KAAKN,MAAMqR,OAAgB,SAAkBswB,WAAY,cAAehuB,MAAO,QAElS,CAAEzS,QAAS,SACX,yBAAK6S,QAAS,kBAAM,EAAK07B,cAAcxuC,MAAO,CAAE0S,MAA6B,KAAtBrT,KAAKN,MAAMqR,OAAgB,OAAS,OAAQhQ,OAA8B,KAAtBf,KAAKN,MAAMqR,OAAgB,OAAS,OAAQ0O,aAAc,OAAQ4hB,WAAY,uBAAwBzgC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,SAAU2T,OAAQ,YACtR,yBAAKnT,IAAK+tC,KAAY7tC,IAAI,kBAItC,kBAAC,GAAD,CAAaqsC,YAAaA,EAAat9B,QAAStQ,KAAKN,MAAM6uC,OAAQj7B,SAAUtT,KAAKqR,aAAc4E,KAAMjW,KAAK0T,gB,GA9HrFlU,cCsCvByzC,I,wLAxCD,IAAD,EACiDjzC,KAAKI,MAAnD8yC,EADH,EACGA,SAAUz0B,EADb,EACaA,SAAsB0uB,GADnC,EACuBhrC,WADvB,EACmCgrC,WAExC,GAAiB,OAAb+F,QAAkCpxC,IAAboxC,EACrB,OAAO,KAGX,IAAMC,EAA8BD,EAASxmC,KACzC,SAACtC,EAAM5H,GAAP,OAAiB,kBAAC,GAAD,CAAyBic,SAAUA,EAAUve,IAAKsC,EAAO4H,KAAMA,OAI9E+gC,EADa,CAAC,2BAAQ,2BAAQ,2BAAQ,eAAM,gBACrBz+B,KAAI,SAAUtC,EAAM5H,GAC7C,OACI,wBAAIrB,UAAU,+BAA+BjB,IAAKsC,GAAQ4H,MAIlE,OACI,6BACI,yBAAKjJ,UAAU,uBACVgqC,GAEL,yBAAKxqC,MAAO,CAAE+X,OAAQ,mCAAoC+G,aAAc,cAAe9G,eAAgB,aACnG,yBAAKhY,MAAO,CAAEq0B,UAAWmY,EAAY,sBAAwB,QAASpY,UAAWoY,EAAY,sBAAwB,QAASrD,UAAW,SACvG,OAA7B77B,KAAKC,UAAUglC,GACZC,EAEA,yBAAKxyC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,4BAChD,yBAAKL,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQC,WAAY,SAAU2S,eAAgB,WAChF25B,EAAY,qBAAQ,0C,GA/BvB3tC,cCsMnB4zC,G,2MAlMX1zC,MAAQ,CAEJonB,OAAQ,CAAE,SAAY,IACtBusB,cAAe,GACfhC,MAAO,2BACPJ,WAAY,EACZK,UAAW,GACXnuB,OAAQ,KACRiQ,OAAQ,KACRxpB,SAAU,I,EA2Cd2nC,cAAgB,SAAChxC,GACb,EAAKN,SAAS,CAAEoxC,MAAO9wC,K,EAG3B+yC,aAAe,SAAC/yC,GACZ,EAAKN,SAAS,CAAEgxC,WAAY1wC,K,EAGhCixC,iBAAmB,SAACp6B,GAChB,EAAKnX,SAAS,CAAEqxC,UAAWl6B,EAAMC,OAAO9W,S,EAG5CgzC,WAAa,WAAM,IAEPd,EAAWC,KAAXD,OAER,OACI,yBAAK9xC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,mBAAoBC,cAAe,SACnF,kBAAC,KAAD,CAAQiS,aAAc,EAAKxT,MAAM2xC,MAAO1wC,MAAO,CAAE0S,MAAO,KAAOF,SAAU,EAAKo+B,eACzE,EAAK7xC,MAAMonB,OAAO4B,SAAShc,KAAI,SAACic,EAASnmB,GACtC,OAAO,kBAACiwC,EAAD,CAAQvyC,IAAKsC,EAAOjC,MAAOooB,EAAQzoB,KAAMyoB,EAAQzoB,SAGhE,kBAAC,KAAD,CAAQgT,aAAc,EAAGvS,MAAO,CAAE0S,MAAO,KAAOF,SAAU,EAAKmgC,cAC3D,kBAACb,EAAD,CAAQlyC,MAAO,GAAf,4BACA,kBAACkyC,EAAD,CAAQlyC,MAAO,GAAf,sBACA,kBAACkyC,EAAD,CAAQlyC,MAAO,GAAf,sBACA,kBAACkyC,EAAD,CAAQlyC,MAAO,GAAf,uBAEJ,kBAAC,KAAD,CAAO8V,YAAY,6CAAU9V,MAAO,EAAKb,MAAM4xC,UAAWn+B,SAAU,EAAKq+B,qB,EAMrFt6B,MAAQ,SAACw6B,EAAQ5qB,GACb,IAAI4B,EAAW5B,EAAO4B,SAClBipB,EAAY,GAkBhB,OAjBAjpB,EAAS1C,SAAQ,SAAA2C,GACbgpB,EAAUhpB,EAAQzoB,KAAO,MAE7ByxC,EAAU,4BAAU,GAEpBD,EAAO1rB,SAAQ,SAAA4rB,GACX,IAAIC,EAAUD,EAAMhmC,SACpB8c,EAAS1C,SAAQ,SAAA2C,GACb,IAAMC,EAAK,IAAIC,OAAOF,EAAQG,UAAWH,EAAQI,aAC3C5oB,EAAQ0xC,EAAQ1xC,MAAMyoB,GACd,OAAVzoB,GAA+B,KAAbA,EAAM,IACxBwxC,EAAUhpB,EAAQzoB,KAAKgG,KAAK0rC,MAIpCD,EAAU,4BAAQzrC,KAAK0rC,MAEpBD,G,EAGXG,cAAgB,WAAM,IAiBVoB,EAAa,EAAK9yC,MAAlB8yC,SACAjC,EAAe,EAAKvxC,MAApBuxC,WACF/5B,EAAQ,EAAKA,MAEb66B,EApBN,SAA2BmB,EAAU5Q,GACjC,OAAe,IAAXA,EACO4Q,EAEYA,EAAS1uC,QAAO,SAAU4F,EAAM5H,EAAO6H,GAC1D,OAAe,IAAXi4B,EACiC,KAA1B1iC,OAAOwK,EAAKE,WAA8C,KAA1B1K,OAAOwK,EAAKE,UAExC,IAAXg4B,EACiC,KAA1B1iC,OAAOwK,EAAKE,UAEU,KAA1B1K,OAAOwK,EAAKE,aASRkpC,CAAkBN,EAAUjC,GAC/CztC,QAAQC,IAAI,cAAgBwK,KAAKC,UAAU6jC,IAE3C,IAAIE,EAAgB,QACMnwC,IAAtB,EAAKpC,MAAMonB,SACXmrB,EAAgB/6B,EAAM66B,EAAY,EAAKryC,MAAMonB,SAIjD,IAAIorB,EAAeD,EAAc,EAAKvyC,MAAM2xC,OAI5C,OAFiB,EAAKc,aAAaD,I,EAKvCC,aAAe,SAACtsB,GAAc,IAAD,EACc,EAAKzlB,MAApCkqC,EADiB,EACjBA,gBAAiB6C,EADA,EACAA,UACjBmE,EAAc,EAAK5xC,MAAnB4xC,UAER,GAAkB,KAAdA,EAAkB,CAClB,IAAMc,EAAQ,IAAIvpB,OAAOyoB,EAAW,KACpCzrB,EAAWA,EAASrhB,QAAO,SAAAK,GACvB,OAAsC,OAA/BA,EAAK+G,SAASzL,MAAMiyC,MAInC,IAAMtrC,EAAiBwjC,EAAgB,GACjCvjC,EAAKomC,EAAY7C,EAAgB,GAAM,MAAuBA,EAAgB,GAEhF+H,EAAaxsB,EAASrhB,QAAO,SAAU9B,EAASF,EAAO6H,GACvD,IAAMpB,EAAYrG,IAAOF,EAAQgP,QAAQ3P,WAAWe,OAAQ,cAAcE,UACpEkG,EAAUtG,IAAOF,EAAQswC,QAAQjxC,WAAWe,OAAQ,cAAcE,UACxE,QAAS8D,EAAKoC,GAAWnC,EAAKkC,MAUlC,OAPI2iC,OAAOC,KAAKwG,GAAY5vC,OAAS,IACjC4vC,EAAaA,EAAWtjC,MAAK,SAACC,EAAGC,GAG7B,OAFgBrM,IAAOoM,EAAE0C,QAAQ3P,WAAWe,OAAQ,cAAcE,UAClDJ,IAAOqM,EAAEyC,QAAQ3P,WAAWe,OAAQ,cAAcE,UACnC,GAAK,MAGrCqvC,G,mFAjKPryC,KAAKsyC,YADW,IAER7zB,EAAaze,KAAKI,MAAlBqe,SACF5Q,EAAM4Q,EAASpX,MACfwmB,EAAMpP,EAAS6J,OACrBtoB,KAAKC,SAAS,CAAEkjB,OAAQtV,EAAKulB,OAAQvF,IACrC7tB,KAAKyzC,eAAe5lC,EAAKggB,K,2CAEP,IACVpP,EAAaze,KAAKI,MAAlBqe,SADS,EAEUze,KAAKN,MAAxByjB,EAFS,EAETA,OAAQiQ,EAFC,EAEDA,OACVvlB,EAAM4Q,EAASpX,MACfwmB,EAAMpP,EAAS6J,OACjBza,IAAQsV,GAAU0K,IAAQuF,IAC1BpzB,KAAKC,SAAS,CAAEkjB,OAAQtV,EAAKulB,OAAQvF,IACrC7tB,KAAKyzC,eAAe5lC,EAAKggB,M,kCAKpB,IAAD,OACRhjB,GAAwB,cACnBV,MAAK,SAAAtF,GACF,IAAIiiB,EAASjiB,EAAKA,KAAKqjB,MAAK,SAAA/c,GAAI,MAAkC,cAA9BA,EAAKgd,gBAAgBtW,QACzDiV,EAAO4B,SAAP,CAAmB,CAAE,IAAO,2BAAQ,UAAa,OAAjD,oBAA4D5B,EAAO4B,WACnEllB,QAAQC,IAAI,8BAAgCwK,KAAKC,UAAU4Y,IAC3D,EAAK7mB,SAAS,CACV6mB,OAAQA,OAGfvc,OAAM,SAAAC,GACHhH,QAAQC,IAAI+G,Q,qCAGTqD,EAAKggB,GAAM,IAAD,OACrB3jB,GAAuC2D,EAAKggB,GACvC1jB,MAAK,SAAAtF,GAAU,EAAK5E,SAAS,CAAE2J,SAAU/E,EAAKA,UAC9C0F,OAAM,SAAAC,GAAShH,QAAQC,IAAI,iCAAmCwK,KAAKC,UAAU1D,S,+BAgI5E,IAAD,EAC2BxK,KAAKI,MAA7B+sC,EADH,EACGA,UAAW1uB,EADd,EACcA,SAEb+gB,EAAax/B,KAAK8xC,gBAExB,OACI,6BACI,yBAAKnxC,MAAO,CAAEoV,gBAAiB,YAAa0J,aAAc,cAAe1e,OAAQ,OAAQmU,QAAS,WAAYtU,QAAS,OAAQI,oBAAqBmsC,EAAY,UAAY,MAAOtsC,WAAY,WAC3L,wBAAIF,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBAAqBg+B,EAAY,2BAAS,4BAC/EA,EAAYntC,KAAKuzC,aAAe,MAErC,kBAAC,GAAD,CAAqB90B,SAAUA,EAAUy0B,SAAU1T,EAAY2N,UAAWA,S,GA7LvD3tC,aCwBpBk0C,G,0LAzBOC,GAId,OAAO,IAAIl8B,KAAKk8B,GAAY94B,cAAgB,KAAkB,IAAIpD,KAAKk8B,GAAYh6B,WAFhE,GAE8E,IAAM,IAAIlC,KAAKk8B,GAAY/5B,UAAY,IAAM,IAAInC,KAAKk8B,GAAYv0B,WAAa,IAAM,IAAI3H,KAAKk8B,GAAYt0B,e,+BAErM,IACEjV,EAASpK,KAAKI,MAAdgK,KACFoV,EAAOpV,EAAKwpC,aAAe,qBAAQ5zC,KAAK6zC,kBAAkBzpC,EAAKupC,YAAc,eAEnF,OACI,yBAAKhzC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,WAAYg0B,UAAW,SACvE,yBAAKr0B,MAAO,CAAEmzC,UAAW,YAAavkC,SAAU,SAAU3O,QAAS,OAAQC,WAAY,WAAauJ,EAAKvF,MACzG,yBAAKlE,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WACjE,kBAAC,KAAD,CAASwX,UAAU,QAAQlU,MAAOqb,GAC9B,6BACI,yBAAKne,IAAKse,KAAYpe,IAAI,uB,GAlB/B/B,aC+IRu0C,G,2MA5IXr0C,MAAQ,CACJC,WAAY,EACZye,UAAU,EACVtH,aAAc,GACdk9B,SAAU,GACV7xC,WAAYS,IAAOA,MAAS8L,OAAO,YAAa,YAAY1L,W,mFAI5D,IAAMjD,EAAcF,eAAeC,QAAQ,QAC3CE,KAAKC,SAAS,CAAEN,WAAYI,IAC5BC,KAAKi0C,YAAYj0C,KAAKI,MAAMqe,SAASzN,UAAWhR,KAAKI,MAAMqe,SAASpX,MAAOrH,KAAKN,MAAMyC,c,2CAGtF,IAAM+xC,EAAWl0C,KAAKI,MAAM+B,WAExB+xC,IADcl0C,KAAKN,MAAMyC,aAEzBnC,KAAKC,SAAS,CAAEkC,WAAY+xC,IAC5Bl0C,KAAKi0C,YAAYj0C,KAAKI,MAAMqe,SAASzN,UAAWhR,KAAKI,MAAMqe,SAASpX,MAAO6sC,M,kCAGvEC,EAAS9sC,EAAOw0B,GAAa,IAAD,OAGpC3xB,EAAgCiqC,EAAS9sC,EAF9BzE,IAAOA,IAAOi5B,GAAYntB,OAAO,YAAa,YAAY1L,UAC1DJ,IAAOA,IAAOi5B,GAAYntB,OAAO,YAAa,YAAY1L,UAAa,OAE7EmH,MAAK,SAAAa,GACFxH,QAAQC,IAAI,0BAA4BwK,KAAKC,UAAUlD,IACvD,EAAK/K,SAAS,CACV+zC,SAAUhpC,EAAOnG,UAGxB0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,0BAA4BwK,KAAKC,UAAU1D,S,oCAGrD4M,GACVpX,KAAKC,SAAS,CAAE6W,aAAcM,EAAMC,OAAO9W,U,yCAG3CP,KAAKC,SACD,CACIme,UAAWpe,KAAKN,MAAM0e,a,qCAUlB,IAAD,OACLU,GAAa,IAAIrH,MAAOsH,cACxBxH,EAAM1X,eAAeC,QAAQ,SxDskBpC,SAAsBsG,EAAOuC,EAASC,EAAMxB,EAAWmQ,GAC5D,IAAM1O,EAAO,CACXzC,MAAOA,EACPuC,QAASA,EACTC,KAAMA,EACNxB,UAAWA,EACXmQ,IAAKA,GAEP,OAAOlR,IAAMyC,KAAK,sBAAuBD,IwD7kBnCqB,CAAyBlK,KAAKI,MAAMqe,SAASpX,MAAOrH,KAAKN,MAAMoX,aAAcgI,EAAY9e,KAAKI,MAAMqe,SAASzN,UAAWuG,GACnHpN,MAAK,SAAAtF,GACF,EAAKovC,YAAY,EAAK7zC,MAAMqe,SAASzN,UAAW,EAAK5Q,MAAMqe,SAAS6J,OAAQ,EAAKloB,MAAM+B,eAE1FoI,OAAM,SAAAC,GACHhH,QAAQC,IAAI,QAAUwK,KAAKC,UAAU1D,OAE7CxK,KAAKC,SACD,CACIme,UAAU,EACVtH,kBAAchV,M,sCAKtB9B,KAAKC,SACD,CACIme,UAAU,M,oCAIP,IAAD,OAEV,OADape,KAAKI,MAAM2X,WAGhB,yBAAKtE,QAAS,kBAAM,EAAKoM,oBAAoBlf,MAAO,CAAEC,QAAkC,GAAzBZ,KAAKN,MAAMC,WAAkB,OAAS,OAAQ6U,OAAQ,YACjH,yBAAKnT,IAAKoT,KAAUlT,IAAI,cAI7B,O,+BAED,IAAD,OACDmJ,EAAW1K,KAAKN,MAAMs0C,SAEtBpI,OAAOC,KAAKnhC,GAAUjI,OAAS,IAC/BiI,EAAWA,EAASqE,MAAK,SAACC,EAAGC,GAGzB,OAFgBrM,IAAOoM,EAAEpG,KAAM,kCAAkC5F,UACjDJ,IAAOqM,EAAErG,KAAM,kCAAkC5F,UAClC,GAAK,MAI5C,IAAMoxC,EAAW1pC,EAASgC,KAAI,SAACtC,EAAM5H,GACjC,IAAMoG,EAAOhG,IAAOwH,EAAKxB,KAAM,kCAAkC8F,OAAO,uBAClEsJ,EAAYpV,IAAOqV,IAAIrP,GAAMsP,SAC7Bm8B,EAAU,CACZC,aAAclqC,EAAKmN,IACnBo8B,WAAY/wC,IAAOoV,GAAWtJ,OAAO,uBACrC7J,KAAMuF,EAAKzB,SAEf,OAAO,kBAAC,GAAD,CAAUzI,IAAKsC,EAAO4H,KAAMiqC,OAEjCv0B,EAAa9f,KAAK+f,cACxB,OACI,6BACI,yBAAKpf,MAAO,CAAEoV,gBAAiB,YAAa0J,aAAc,cAAe1e,OAAQ,OAAQmU,QAAS,WAAYtU,QAAS,OAAQC,WAAY,SAAU2S,eAAgB,kBACjK,wBAAI7S,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBAAqBnP,KAAKI,MAAM+D,OACrE2b,GAEL,yBAAKnf,MAAO,CAAE+X,OAAQ,mCAAoC+G,aAAc,cAAe9G,eAAgB,WAAYzD,QAAS,aACxH,yBAAKvU,MAAO,CAAEo0B,UAAW,QAASC,UAAW,QAAS8U,UAAW,SAC/B,OAA7B77B,KAAKC,UAAUxD,GAAqB,yBAAK/J,MAAO,CAAEq0B,UAAW,QAASD,UAAW,QAAS3f,SAAU,SAChGg/B,GAED,yBAAKzzC,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQC,WAAY,WAA3D,mCAIR,yBAAKF,MAAO,CAAEC,QAASZ,KAAKN,MAAM0e,SAAW,QAAU,SACnD,yBAAKzd,MAAO,CAAEuU,QAAS,WAAYtU,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WACtF,kBAAC,KAAD,CAAOwV,YAAY,uCAAS9V,MAAOP,KAAKN,MAAMoX,aAAc3D,SAAUnT,KAAK+W,cAAcC,KAAKhX,SAElG,yBAAKW,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WACjE,yBAAKF,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaC,cAAe,SAC5E,kBAAC,KAAD,CAAQwS,QAAS,kBAAM,EAAKwM,kBAA5B,gBACA,kBAAC,KAAD,CAAQxM,QAAS,kBAAM,EAAKyM,gBAAgBzb,KAAK,WAAjD,yB,GAnIbjF,aCQJ+0C,G,iLATP,OACI,yBAAK5zC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWC,cAAe,SAC1E,kBAAC,GAAD,CAAqB8K,OAAQ/L,KAAKI,MAAM2L,OAAQ5J,WAAYnC,KAAKI,MAAM+B,WAAYgC,MAAM,eAAKsa,SAAUze,KAAKI,MAAMqe,SAAU1G,WAAY/X,KAAKI,MAAM2X,aACpJ,kBAAC,GAAD,CAAM5T,MAAM,eAAKhC,WAAYnC,KAAKI,MAAM+B,WAAYsc,SAAUze,KAAKI,MAAMqe,SAAU5Z,KAAM7E,KAAKI,MAAM6jB,WAAYlM,WAAY/X,KAAKI,MAAM2X,kB,GALrHvY,aC0DnBg1C,G,2MAxDX90C,MAAQ,CACJs0B,SAAU,I,mFAIVh0B,KAAKy0C,c,kCAGI,IAAD,OACRvqC,GAAuBlK,KAAKI,MAAMqe,SAASzN,UAAWhR,KAAKI,MAAMqe,SAAS6J,QACrEne,MAAK,SAAAa,GACFxH,QAAQC,IAAI,iBAAmBwK,KAAKC,UAAUlD,EAAOnG,OACrD,EAAK5E,SAAS,CACV+zB,SAAUhpB,EAAOnG,UAGxB0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,iBAAmBwK,KAAKC,UAAU1D,S,uCAKtD,OAAmC,IAA/BxK,KAAKN,MAAMs0B,SAASvxB,OAGhB,yBAAK9B,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQC,WAAY,WAA3D,wCAKGb,KAAKN,MAAMs0B,SAAStnB,KAAI,SAACvB,EAAM3I,GAClC,MAAkB,uBAAd2I,EAAK1G,KACG,kBAAC,GAAD,CAAsBvE,IAAKsC,EAAO2I,KAAMA,EAAM2nB,aAAa,IAE3D,kBAAC,GAAD,CAAsB5yB,IAAKsC,EAAO2I,KAAMA,EAAM2nB,aAAa,S,+BAQ/E,IAAM4hB,EAAiB10C,KAAK00C,eAAe19B,KAAKhX,MAChD,OACI,6BACI,yBAAKW,MAAO,CAAEoV,gBAAiB,YAAa4N,oBAAqB,MAAOC,qBAAsB,MAAO7iB,OAAQ,OAAQmU,QAAS,WAAYtU,QAAS,OAAQC,WAAY,WACnK,wBAAIF,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBAAtC,6BAEJ,yBAAKxO,MAAO,CAAE+X,OAAQ,gCAAiC+G,aAAc,cAAe9G,eAAgB,WAAYzD,QAAS,aACpHw/B,U,GAlDUl1C,aCoOhBm1C,I,kNAtNXj1C,MAAQ,CACJk1C,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B1tB,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,QAAS,GACT1d,SAAU,GACVD,SAAU,GAEVzH,WAAYS,IAAOA,MAAS8L,OAAO,aAAa1L,UAEhD6xC,eAAgB,EAEhBzhB,OAAQ,KACRjQ,OAAQ,KACR2xB,WAAW,G,EAoHfh5B,iBAAmB,SAACmkB,GAChB,EAAKhgC,SAAS,CAAE20C,WAAY3U,K,EAGhC8U,qBAAuB,SAACC,GACpB,EAAK/0C,SAAS,CAAEkC,WAAY6yC,K,mFAtH5B,IAAMnnB,EAAM7tB,KAAKI,MAAMqe,SAAS6J,OAC1Bza,EAAM7N,KAAKI,MAAMqe,SAASpX,MAC1BqgB,EAAO9kB,IAAO5C,KAAKI,MAAMqe,SAASxN,UAAW,YAAYjO,UAC/DhD,KAAKC,SAAS,CACVmzB,OAAQvF,EACR1K,OAAQtV,IAEZ7N,KAAKi1C,WAAWj1C,KAAKN,MAAMyC,WAAY0rB,EAAKhgB,EAAK6Z,K,2CAGjD,IAAMmG,EAAM7tB,KAAKI,MAAMqe,SAAS6J,OAC1Bza,EAAM7N,KAAKI,MAAMqe,SAASpX,MAC1BqgB,EAAO9kB,IAAO5C,KAAKI,MAAMqe,SAASxN,UAAW,YAAYjO,UAH9C,EAIUhD,KAAKN,MAAxB0zB,EAJS,EAITA,OAAQjQ,EAJC,EAIDA,OACZiQ,IAAWvF,GAAO1K,IAAWtV,IAC7B7N,KAAKC,SAAS,CACVmzB,OAAQvF,EACR1K,OAAQtV,IAEZ7N,KAAKi1C,WAAWj1C,KAAKN,MAAMyC,WAAY0rB,EAAKhgB,EAAK6Z,M,iCAG9CwtB,EAAUrnB,EAAKhgB,EAAK6Z,GAAO,IAAD,OAOjC,IAAME,EAAchlB,IAAO8kB,GAAMhZ,OAAO,cAClCmZ,EAPN,SAA6BqtB,GACzB,IAAMptB,GAAoB,IAAIrQ,MAAO0D,UAAY+5B,EAGjD,OADiBxwC,SAASojB,EADH,QACyC,EAI9CC,CAAoBmtB,GAC1Cl1C,KAAKC,SAAS,CAAE60C,WAAW,IAC3B,IAAMK,EAASjrC,GAAuC2D,EAAK+Z,GACtDzd,MAAK,SAAAtF,GACF,EAAK5E,SAAS,CACVinB,SAAUriB,EAAKA,UAGtB0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,iCAAmCwK,KAAKC,UAAU1D,OAEhE4qC,EAAUlrC,GAAuC2D,EAAK+Z,GACvDzd,MAAK,SAAAtF,GACF,EAAK5E,SAAS,CAAEknB,SAAUtiB,EAAKA,UAElC0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,iCAAmCwK,KAAKC,UAAU1D,OAEhE6qC,EAAUnrC,GAAuC2D,EAAK+Z,GACvDzd,MAAK,SAAAtF,GACF,EAAK5E,SAAS,CACVmnB,SAAUviB,EAAKA,UAGtB0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,iCAAmCwK,KAAKC,UAAU1D,OAEhE8qC,EAASprC,GAAuC2D,EAAK+Z,GACtDzd,MAAK,SAAAtF,GACF,EAAK5E,SAAS,CACVonB,SAAUxiB,EAAKA,UAGtB0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,iCAAmCwK,KAAKC,UAAU1D,OAEhE+qC,EAAUrrC,GAAuC2D,EAAK+Z,GACvDzd,MAAK,SAAAtF,GACF,EAAK5E,SAAS,CACVqnB,SAAUziB,EAAKA,UAGtB0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,iCAAmCwK,KAAKC,UAAU1D,OAEhEgrC,EAAUtrC,GAAsC2D,EAAKga,EAAe,MAAO,YAC5E1d,MAAK,SAAAtF,GACF,EAAK5E,SAAS,CACVsnB,QAAS1iB,EAAKA,UAGrB0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,gCAAkCwK,KAAKC,UAAU1D,OAG/DirC,EAASvrC,GAAuC2D,EAAKggB,EAAK,OAC3D1jB,MAAK,SAAAtF,GACF,EAAK5E,SAAS,CACV4J,SAAUhF,EAAKA,UAGtB0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,iCAAmCwK,KAAKC,UAAU1D,OAEhEkrC,EAASxrC,GAAuC2D,EAAKggB,GACtD1jB,MAAK,SAAAtF,GACF,EAAK5E,SAAS,CACV2J,SAAU/E,EAAKA,UAGtB0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,iCAAmCwK,KAAKC,UAAU1D,OAGtEM,QAAQC,IAAI,CAACuqC,EAAQH,EAAQE,EAASD,EAASG,EAASC,EAASE,EAAQD,IACpEtrC,MAAK,WACF,EAAKlK,SAAS,CAAE60C,WAAW,OAE9BvqC,OAAM,WACH,EAAKtK,SAAS,CAAE60C,WAAW,S,mCAY1BllC,GAKT,OAJa5P,KAAKN,MAAMk1C,WACNvpC,MAAK,SAAUF,EAAM3I,EAAOyD,GAC1C,OAAOkF,IAASyE,O,+BAKpB,IADK,EAuBwB5P,KAAKI,MAA1Bqe,EAvBH,EAuBGA,SAAUzZ,EAvBb,EAuBaA,OAEZkE,EADsBlJ,KAAKN,MAAMyC,WACA,OAEjCmoC,EAAkB,CADNphC,EAAW,OACOA,GAE9BysC,EAAe,CAACzsC,EAAW,MAAsBA,GACjD0sC,EAAiB,CAAC1sC,EAAW,OAA0BA,GAE7D,OAAOlJ,KAAKN,MAAMo1C,UACX,kBAAC,KAAD,CAAMrwC,KAAK,YAEV,6BACI,kBAAC,GAAD,CAAYO,OAAQA,EAAQyZ,SAAUA,EAAUtc,WAAYnC,KAAKN,MAAMyC,WAAYm+B,mBAAoBtgC,KAAK+0C,qBAAsBz7B,eAAgBtZ,KAAK8b,iBAAkB6lB,QAnCrJ,CAC5B,CACI,KAAQ,2BACR,YAAe,eAEnB,CACI,KAAQ,eACR,YAAe,OAEnB,CACI,KAAQ,2BACR,YAAe,MAEnB,CACI,KAAQ,qBACR,YAAe,SAEnB,CACI,KAAQ,uCACR,YAAe,aAgBgM1B,WAAYjgC,KAAKN,MAAMk1C,aAClO,yBAAKx+B,GAAG,cAAcjV,UAAU,sBAC5B,yBAAKiV,GAAI,cAAezV,MAAOX,KAAK61C,aAAa,GAAK,CAAEj1C,QAAS,OAAQI,oBAAqB,YAAaw0B,QAAS,OAAQzQ,aAAc,QAAW,CAAEnkB,QAAS,SAC5J,kBAAC,GAAD,CAAWuB,WAAYnC,KAAKN,MAAMyC,WAAYsc,SAAUA,IACxD,kBAAC,GAAD,CAAetc,WAAYnC,KAAKN,MAAMyC,WAAYsc,SAAUA,EAAUta,MAAM,wBAEhF,yBAAKiS,GAAI,MAAOzV,MAAOX,KAAK61C,aAAa,GAAK,CAAEj1C,QAAS,OAAQI,oBAAqB,cAAew0B,QAAS,QAAW,CAAE50B,QAAS,SAChI,kBAAC,GAAD,CAAeuB,WAAYnC,KAAKN,MAAMyC,WAAYsc,SAAUA,EAAU2I,SAAUpnB,KAAKN,MAAM0nB,SAAUD,SAAUnnB,KAAKN,MAAMynB,SAAUE,SAAUrnB,KAAKN,MAAM2nB,SAAUC,SAAUtnB,KAAKN,MAAM4nB,SAAUJ,SAAUlnB,KAAKN,MAAMwnB,SAAUK,QAASvnB,KAAKN,MAAM6nB,UACrP,kBAAC,GAAD,CAAkB9I,SAAUA,EAAU6rB,gBAAiBA,KAE3D,yBAAKl0B,GAAI,KAAMzV,MAAOX,KAAK61C,aAAa,GAAK,CAAEj1C,QAAS,OAAQI,oBAAqB,cAAew0B,QAAS,OAAQpiB,OAAQ,oBAAuB,CAAExS,QAAS,SAC3J,kBAAC,GAAD,CAAK6d,SAAUA,EAAU6rB,gBAAiBA,EAAiB6C,WAAW,IACtE,kBAAC,GAAD,CAAW1uB,SAAUA,EAAU6rB,gBAAiBsL,EAAgBzI,WAAW,KAE/E,yBAAK/2B,GAAI,QAASzV,MAAOX,KAAK61C,aAAa,GAAK,CAAEj1C,QAAS,OAAQI,oBAAqB,cAAew0B,QAAS,OAAQpiB,OAAQ,oBAAuB,CAAExS,QAAS,SAC9J,kBAACk1C,GAAD,CAAyBjsC,SAAU7J,KAAKN,MAAMmK,SAAU4U,SAAUA,EAAU0uB,WAAW,EAAO7C,gBAAiBqL,IAC/G,kBAACI,GAAD,CAAsB7C,SAAUlzC,KAAKN,MAAMkK,SAAU6U,SAAUA,EAAU0uB,WAAW,EAAO7C,gBAAiBqL,KAEhH,yBAAKv/B,GAAI,WAAYzV,MAAOX,KAAK61C,aAAa,GAAK,CAAEziC,OAAQ,oBAAuB,CAAExS,QAAS,SAC3F,kBAAC,GAAD,CAAqBmL,OAAQ,EAAG5J,WAAYnC,KAAKN,MAAMyC,WAAY4V,YAAY,EAAO0G,SAAUA,KAEpG,yBAAK9d,MAAOX,KAAK61C,aAAa,GAAK,CAAEziC,OAAQ,oBAAuB,CAAExS,QAAS,SAC3E,kBAAC,GAAD,CAAkB6d,SAAUA,W,GA/MvBjf,cCClBw2C,G,iLAdD,IAAD,EACmDh2C,KAAKI,MAArD+D,EADH,EACGA,MAAOsa,EADV,EACUA,SAAUgkB,EADpB,EACoBA,eAAgBtgC,EADpC,EACoCA,WACzC,OACI,yBAAKxB,MAAO,CAAEqZ,UAAW,SAErB,yBAAKrZ,MAAO,CAAEoV,gBAAiB,YAAa4N,oBAAqB,MAAOC,qBAAsB,MAAO7iB,OAAQ,OAAQmU,QAAS,WAAYtU,QAAS,OAAQC,WAAY,WACnK,wBAAIF,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBAAqBhL,IAE/D,kBAAC,GAAD,CAAQsa,SAAUA,EAAU6jB,OAAQ,UAAWG,eAAgBA,EAAgBtgC,WAAYA,S,GAT9E3C,aCCRy2C,G,2MACjBv2C,MAAQ,CACJ4Q,SAAS,G,EAEbiB,UAAY,WACR,EAAKtR,SAAS,CACVqQ,SAAS,K,EAIjBoD,SAAW,SAAApC,GACP9N,QAAQC,IAAI6N,GACZ,EAAKrR,SAAS,CACVqQ,SAAS,K,EAIjBe,aAAe,SAAAC,GACX9N,QAAQC,IAAI6N,GACZ,EAAKrR,SAAS,CACVqQ,SAAS,K,wEAGP,IAAD,EACwCtQ,KAAKI,MAA1CyN,EADH,EACGA,IAAKggB,EADR,EACQA,IAAKxF,EADb,EACaA,KAAME,EADnB,EACmBA,SAAUvjB,EAD7B,EAC6BA,OAElC,OADAxB,QAAQC,IAAIuB,GAER,yBAAKrE,MAAO,CAAE6T,OAAQ,YAClB,6BACI,yBAAK7T,MAAO,CAAEuyB,eAAgB,YAAa1e,OAAQ,WAAaf,QAASzT,KAAKuR,WAAY,gBAC1F,kBAAC,KAAD,CACIpN,MAAM,cACNmM,QAAStQ,KAAKN,MAAM4Q,QACpB2F,KAAMjW,KAAK0T,SACXJ,SAAUtT,KAAKqR,cACf,kBAAC,GAAD,CAAcwc,IAAKA,EAAKhgB,IAAKA,EAAKnK,MAAO2kB,EAAMngB,IAAKqgB,W,GAnCjB/oB,aCoH5C02C,G,2MAjHXx2C,MAAQ,G,uKAiFM,IAAD,EAC4BM,KAAKI,MAAlC+1C,EADC,EACDA,eAAgB13B,EADf,EACeA,SAClB4J,EAAO8tB,EAAe9tB,KAAKtmB,WAAWe,OACtCylB,EAAW4tB,EAAe5tB,SAASxmB,WAAWe,OAC9C+K,EAAM4Q,EAASpX,MAAMtF,WAAWe,OAChC+qB,EAAMpP,EAAS6J,OAAOvmB,WAAWe,OACjCkC,EAASmxC,EAAe7rC,SAC9B,OACI,kBAAC,GAAD,CAA+BtF,OAAQA,EAAQ6I,IAAKA,EAAKggB,IAAKA,EAAKxF,KAAMA,EAAME,SAAUA,M,+BAGvF,IACE4tB,EAAmBn2C,KAAKI,MAAxB+1C,eAOFC,EADiB,CAJND,EAAejtB,QAAQnnB,WAAWe,OACtCqzC,EAAevqC,SAAS7J,WAAWe,OAC7BqzC,EAAepL,QAAQhpC,WAAWe,OAClC9C,KAAKq2C,cAEI3pC,KAAI,SAAUnM,EAAOiC,GAC7C,OACI,yBAAKtC,IAAKsC,EAAO7B,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,SAAUqU,QAAS,YAC/F3U,MAIb,OACI,yBAAKI,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,4BAA8Bo1C,O,GA7GxD52C,aC6DvB82C,G,mLA7DC,IAAD,EACqCt2C,KAAKI,MAAzCsC,EADD,EACCA,QAAS+b,EADV,EACUA,SAAU83B,EADpB,EACoBA,aAErBC,GADQ5zC,IAAOF,EAAQ2lC,WAAW35B,OAAO,uBACxB9L,IAAOF,EAAQ2lC,WAAWrlC,WAG3CyzC,GAFM7zC,IAAOF,EAAQm8B,SAASnwB,OAAO,YAC7B,CAAC,2BAAQ,2BAAQ,eAAM,gBACbhC,KAAI,SAAUnM,EAAOiC,GACzC,OACI,yBAAKtC,IAAKsC,EAAO7B,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,SAAUqU,QAAS,YAC/F3U,OAKPm2C,EADgBh0C,EAAQA,QACUgK,KAAI,SAAUtC,EAAM5H,EAAO6H,GAC/D,OACI,kBAAC,GAAD,CAAyBnK,IAAKsC,EAAOg0C,eAAgBA,EAAgBL,eAAgB/rC,EAAMqU,SAAUA,EAAU83B,aAAcA,OAGrI,OACI,6BAGI,yBAAK51C,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,4BAC/Cy1C,GAEJC,K,+BAKT,SAASC,EAAeC,GACpB,OAAiB,OAAdA,EACQ,GAED,GAAN,OAAUA,EAAUvjC,MAApB,kBAAmCujC,EAAUznC,OALhD,IAQc5O,EAMXmC,EAAY1C,KAAKI,MAAjBsC,QACF6qB,EAAcvtB,KAAK62C,WACzB,OAA+B,IAA3Bn0C,EAAQA,QAAQD,OAEZ,yBAAK9B,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,SAAU6X,OAAQ,gCAAiCC,eAAgB,WAAYo0B,WAAY4J,EAAe32C,KAAKI,MAAMw2C,cAI9M,kBAAC,KAAD,CAASzyC,MAAOopB,EAAaupB,oBAAoB,EAAMC,aAAc,CAAEC,SAAU,UAC7E,yBAAKr2C,MAAO,CAAEoV,gBAAgB,qBAAsBhV,OAAQ,OAAOwO,SAAU,OAAQ3O,QAAS,OAAQC,WAAY,SAAU2S,eAAgB,SAAUkF,OAAQ,gCAAiCC,eAAgB,WAAYnE,OAAQ,UAAWu4B,WAAY4J,EAAe32C,KAAKI,MAAMw2C,aAd1Q,QADCr2C,EAgBImC,EAAQA,QAAQD,cAfHX,IAAVvB,GAAiC,IAAVA,EAClC,GAEL,GAAN,OAAUA,EAAV,gB,GA3CmBf,aC0ShBy3C,G,2MAvSXv3C,MAAQ,CACJw3C,SAAU,GACVC,aAAc,CAAC,CAAEhvB,gBAAiB,GAAIO,SAAU,KAChDnB,QAAS,GACTpE,OAAQ,M,sEAGLtV,EAAKupC,GAAU,IAAD,OACjBvsC,GAAwB,oBACnBV,MAAK,SAAAtF,GACF,EAAK5E,SAAS,CACVi3C,SAAUryC,EAAKA,UAGtB0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI+G,MAEpBK,GAAwB,gBACnBV,MAAK,SAAAtF,GACF,EAAK5E,SAAS,CACVk3C,aAActyC,EAAKA,UAG1B0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI+G,MAEpB6sC,GAAsCxpC,EAAK,IAAK,MAAO,YAClD1D,MAAK,SAAAtF,GACF,EAAK5E,SAAS,CAAEsnB,QAAS1iB,EAAKA,UAEjC0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,0CAA4CwK,KAAKC,UAAU1D,S,0CAI9D,IAAD,EACgCxK,KAAKI,MAA7Cqe,EADQ,EACRA,SAAUtc,EADF,EACEA,WAAYm1C,EADd,EACcA,cACxBzpC,EAAM4Q,EAASpX,MACf+vC,EAAUp3C,KAAKu3C,mBAAmBp1C,GACxCnC,KAAKC,SAAS,CAAEkjB,OAAQ1E,EAASpX,MAAOmgB,cAAerlB,EAAYq1C,YAAaF,IAChFt3C,KAAKy3C,OAAO5pC,EAAKupC,K,2CAEC,IAAD,EAC+Bp3C,KAAKI,MAA7Cqe,EADS,EACTA,SAAUtc,EADD,EACCA,WAAYm1C,EADb,EACaA,cACxBzpC,EAAM4Q,EAASpX,MAFJ,EAG8BrH,KAAKN,MAA5CyjB,EAHS,EAGTA,OAAQqE,EAHC,EAGDA,cAAegwB,EAHd,EAGcA,YACzBJ,EAAUp3C,KAAKu3C,mBAAmBp1C,GACpC0L,IAAQsV,GAAUqE,IAAkBrlB,GAAcq1C,IAAgBF,IAClEt3C,KAAKC,SAAS,CAAEkjB,OAAQ1E,EAASpX,MAAOmgB,cAAerlB,EAAYq1C,YAAaF,IAChFt3C,KAAKy3C,OAAO5pC,EAAKupC,M,yCAINvb,GACf,IAAM/T,EAAoBllB,MAASI,UAAY64B,EAG/C,OADiBn3B,SAASojB,EADH,QACyC,I,2CAIhE,MAAO,U,+BAgIP,SAAS4vB,EAASvuC,EAAU3G,GACxB,IAAMm1C,EAAY,CACdtkC,MAAO,GACPlE,MAAO,IAEX,OAAiB,IAAbhG,EACc,IAAV3G,GAAgBA,EAAQ,KAAQ,GAChCm1C,EAAUtkC,MAAQ,MAClBskC,EAAUxoC,MAAQ,kBACXwoC,GACAn1C,EAAQ,IAAM,GACrBm1C,EAAUtkC,MAAQ,MAClBskC,EAAUxoC,MAAQ,kBACXwoC,IAGPA,EAAUtkC,MAAQ,MAClBskC,EAAUxoC,MAAQ,UACXwoC,GAGE,IAAbxuC,EACc,IAAV3G,GAAgBA,EAAQ,IAAO,GAC/Bm1C,EAAUtkC,MAAQ,MAClBskC,EAAUxoC,MAAQ,kBACXwoC,GACAn1C,EAAQ,IAAM,GACrBm1C,EAAUtkC,MAAQ,MAClBskC,EAAUxoC,MAAQ,kBACXwoC,IAGPA,EAAUtkC,MAAQ,MAClBskC,EAAUxoC,MAAQ,UACXwoC,GAGE,IAAbxuC,GAEIwuC,EAAUtkC,MAAQ,MAClBskC,EAAUxoC,MAAQ,kBACXwoC,GAOE,IAAbxuC,GACAwuC,EAAUtkC,MAAQ,MAClBskC,EAAUxoC,MAAQ,kBACXwoC,QAHX,EAMJ,SAASC,EAAazuC,GAClB,OAAiB,IAAbA,EACO,CAAEA,SAAU,GAAI0uC,KAAM,GAEhB,IAAb1uC,EACO,CAAEA,SAAU,GAAI0uC,KAAM,GAEhB,IAAb1uC,EACO,CAAEA,SAAU,GAAI0uC,KAAM,GAE1B,CAAE1uC,SAAU,GAAI0uC,KAAM,IA9L5B,MAgMgE73C,KAAKI,MAAlEk3C,EAhMH,EAgMGA,cAAe74B,EAhMlB,EAgMkBA,SAAUtc,EAhM5B,EAgM4BA,WAAYgC,EAhMxC,EAgMwCA,MAAO2zC,EAhM/C,EAgM+CA,aAhM/C,EAiMuC93C,KAAKN,MAAzCw3C,EAjMH,EAiMGA,SAAU3vB,EAjMb,EAiMaA,QAAS4vB,EAjMtB,EAiMsBA,aAC3B,GAAiB,OAAbD,QAAkCp1C,IAAbo1C,GAA8C,IAApBA,EAASz0C,OACxD,OAAO,KAEX,GAAgB,OAAZ8kB,QAAgCzlB,IAAZylB,GAA4C,IAAnBA,EAAQ9kB,OACrD,OAAO,KAEX,IAAMoC,EA7JN,SAAmBkzC,EAASC,GASxB,IARA,IAAIC,EAAmB,GACnBC,EAAa,GACbC,EAAiB,GACjBC,EAAW,GAEXC,EAAiB,GACjBC,EAAa,GAPkB,WAS1B91C,GACL,IAAME,EAAUq1C,EAAQv1C,GAClB+1C,EAAmB71C,EAAQkJ,SAC3B4sC,EAAUR,EAAUS,YAAYptC,MAAK,SAAU9K,EAAOiC,EAAO6H,GAC/D,OAAyC,OAAlCkuC,EAAiBp4C,MAAMI,MAE5Bm4C,EAAUV,EAAUW,MAAMttC,MAAK,SAAU9K,EAAOiC,EAAO6H,GACzD,OAAyC,OAAlCkuC,EAAiBp4C,MAAMI,MAE5Bq4C,EAAUZ,EAAUa,UAAUxtC,MAAK,SAAU9K,EAAOiC,EAAO6H,GAC7D,OAAyC,OAAlCkuC,EAAiBp4C,MAAMI,MAE5Bu4C,EAAUd,EAAUzK,IAAIliC,MAAK,SAAU9K,EAAOiC,EAAO6H,GACvD,OAAyC,OAAlCkuC,EAAiBp4C,MAAMI,MAK5Bw4C,EAAUf,EAAUgB,UAAU3tC,MAAK,SAAU9K,EAAOiC,EAAO6H,GAC7D,OAAyC,OAAlCkuC,EAAiBp4C,MAAMI,MAE9Bi4C,GACAP,EAAiB/xC,KAAKxD,GAEtBg2C,GACAR,EAAWhyC,KAAKxD,GAEhBk2C,GACAT,EAAejyC,KAAKxD,GAEpBo2C,GACAV,EAASlyC,KAAKxD,GAKdq2C,GACAV,EAAenyC,KAAKxD,IAER,IAAZ81C,IAAiC,IAAZE,IAAiC,IAAZE,IAAiC,IAAZE,IAAiC,IAAZC,GACpFT,EAAWpyC,KAAKxD,IAxCfF,EAAQ,EAAGA,EAAQu1C,EAAQt1C,OAAQD,IAAU,EAA7CA,GA2CT,IAAMy2C,EAAY,GA6BlB,OA5BAA,EAAU/yC,KAAK,CACX/B,MAAO,eACP8B,MAAOgyC,IAEXgB,EAAU/yC,KAAK,CACX/B,MAAO,eACP8B,MAAOiyC,IAEXe,EAAU/yC,KAAK,CACX/B,MAAO,eACP8B,MAAOkyC,IAEXc,EAAU/yC,KAAK,CACX/B,MAAO,MACP8B,MAAOmyC,IAMXa,EAAU/yC,KAAK,CACX/B,MAAO,eACP8B,MAAOoyC,IAEXY,EAAU/yC,KAAK,CACX/B,MAAO,eACP8B,MAAOqyC,IAEJW,EA4EEC,CAAU3xB,EAAS2vB,GAC1BiC,EAAcvB,EAAaN,GAC3B8B,EAAaj1C,EAAMuI,KAAI,SAACtC,EAAM5H,GAAP,OACzB,yBAAK7B,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,SAAUE,OAAQ,OAAQ2X,OAAQ,gCAAiCC,eAAgB,WAAY5C,gBAAiB,WAAa7V,IAAKsC,GACnM,4BAAK4H,EAAKjG,WAOZ4gC,EAJYlgC,EAAK6H,KAAI,SAAUnM,EAAOiC,EAAO6H,GAE/C,OAhNJ,SAAsBK,EAAUvB,EAAU0yB,GAiCtC,IACM/0B,EAjCN,SAAmBqC,EAAUkwC,GACzB,OAAiB,IAAblwC,EACOkwC,EAAgB,MAEV,IAAblwC,EACOkwC,EAAgB,OAEV,IAAblwC,EACOkwC,EAAgB,OAEpBA,EAAgB,QAuBhBC,CAAUnwC,EADV0yB,EAAc,QAEnB0d,EAAW3B,EAAazuC,GAE9B,OAvBA,SAA6BA,EAAUrC,EAAIgR,EAAM3T,EAAO0zC,GAEpD,IADA,IAAI2B,EAAe,GADuC,WAEjDh3C,GACL,IAAM6lC,EAAYvhC,EAAMtE,EAAQq1C,EAAO,GAAK,GAAK,IAC3ChZ,EAAU/3B,GAAOtE,EAAQ,GAAKq1C,EAAO,GAAK,GAAK,IAC/C4B,EAAyB3hC,EAAKtT,QAAO,SAAU9B,EAASF,EAAO6H,GACjE,IAAMzB,EAAOlG,EAAQujB,QAAQlkB,WAAWe,OAASJ,EAAQwmB,QAAQnnB,WAAWe,OACtE8X,EAAYhY,IAAOgG,EAAM,sBAAsB5F,UACrD,OAAOqlC,GAAaztB,GAAaA,EAAYikB,KAEjD2a,EAAatzC,KAAK,CACdmiC,UAAWA,EACXxJ,QAASA,EACTn8B,QAAS+2C,EACTt1C,MAAOA,KAZN3B,EAAQ,EAAGA,EAAQ2G,EAAU3G,IAAU,EAAvCA,GAeT,OAAOg3C,EAKeE,CAAoBH,EAASpwC,SAAUrC,EAAI4D,EAASzE,MAAOyE,EAASvG,MAAOo1C,EAAS1B,MA2K7F8B,CAAap5C,EAAO+2C,EAAen1C,MAG3BuK,KAAI,SAAUnM,EAAOiC,EAAOyD,GAOrD,OANkB1F,EAAMmM,KAAI,SAAUhK,EAASF,EAAO6H,GAClD,IAAMuvC,EAAY,qBAAuBp3C,EACzC,OACI,kBAAC,GAAD,CAAkBo0C,UAAWkB,EAAeJ,EAASJ,EAAe90C,GAAS,KAAMtC,IAAK05C,EAAWl3C,QAASA,EAAS+b,SAAUA,EAAU83B,aAAcY,UAKnK,OACI,yBAAKx2C,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAChD,yBAAKL,MAAO,CAAEC,QAAS,OAAQsV,iBAAkB,UAAY/R,EAAM1B,OAAS,UACvE22C,GAEL,yBAAKz4C,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAYm4C,EAAYhwC,SAAW,QAAS+M,iBAAkB,kBAC7G6uB,Q,GAjSQvlC,aCYdq6C,G,iLAfD,IAAD,EACoD75C,KAAKI,MAAtD+D,EADH,EACGA,MAAOsa,EADV,EACUA,SAAUq7B,EADpB,EACoBA,gBAAiB33C,EADrC,EACqCA,WAE1C,OACI,yBAAKxB,MAAO,CAAEqZ,UAAW,SAErB,yBAAKrZ,MAAO,CAAEoV,gBAAiB,YAAa4N,oBAAqB,MAAOC,qBAAsB,MAAO7iB,OAAQ,OAAQmU,QAAS,WAAYtU,QAAS,OAAQC,WAAY,WACnK,wBAAIF,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBAAqBhL,IAE/D,kBAAC,GAAD,CAAgB2zC,cAAc,EAAM3zC,MAPzB,CAAC,CAAEA,MAAO,gBAAQ,CAAEA,MAAO,gBAAQ,CAAEA,MAAO,gBAAQ,CAAEA,MAAO,OAAS,CAAEA,MAAO,gBAAQ,CAAEA,MAAO,iBAOpDsa,SAAUA,EAAU64B,cAAewC,EAAiB33C,WAAYA,S,GAV9G3C,a,qBCyDVu6C,G,wLAtDM,IACLC,EAAgBh6C,KAAKI,MAArB45C,YACF/wC,EAAYrG,IAAOo3C,EAAY/wC,WAAWyF,OAAO,eACjDxF,EAAUtG,IAAOo3C,EAAY9wC,SAASwF,OAAO,eAC7CurC,EAAeD,EAAYt3C,QAAQgK,KAAI,SAAUtC,EAAM5H,EAAO6H,GAChE,IAAMzB,EAAOhG,IAAOwH,EAAKqN,KAAOrN,EAAKgkB,KAAM,gBAAgB1f,OAAO,eAC5DigC,EAAOvkC,EAAKukC,KACZE,EAAUzkC,EAAKykC,QACrB,OACI,6BACI,qCAAWjmC,GACX,qCAAW+lC,GACX,yBAAKhuC,MAAO,CAAEC,QAAS,SACnB,yCACA,6BAAMiuC,QAMtB,OACI,6BACI,6BAAM5lC,EAAN,IAAkBC,GACjB+wC,K,+BAKT,SAAStD,EAAeC,GACpB,OAAiB,OAAdA,EACQ,GAED,GAAN,OAAUA,EAAUvjC,MAApB,kBAAmCujC,EAAUznC,OALhD,IAcG6qC,EAAgBh6C,KAAKI,MAArB45C,YACR,OAA2B,IAAvBA,EAAYv3C,OACL,yBAAK9B,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,SAAU6X,OAAQ,gCAAiCC,eAAgB,WAAWo0B,WAAY4J,EAAe32C,KAAKI,MAAMw2C,aAAzL,MAGP,kBAAC,KAAD,CAASv+B,UAAU,QAAQy+B,oBAAoB,EAAM3yC,MAAOnE,KAAKk6C,gBAAiBnD,aAAc,CAAEC,SAAU,QAAS3V,WAAY,UAC7H,yBAAK1gC,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,SAAU6X,OAAQ,gCAAiCC,eAAgB,WAAYnE,OAAQ,UAAWu4B,WAAY4J,EAAe32C,KAAKI,MAAMw2C,aAXpM,IAYOoD,EAAYv3C,OAXrB,KAEJ,yBAAKpB,IAAK84C,KAAQ54C,IAAI,iB,GAxCR/B,aCG3Bk4C,GAAW,SAACvuC,EAAU3G,GACxB,IAAMm1C,EAAY,CACdtkC,MAAO,GACPlE,MAAO,IAEX,OAAiB,IAAbhG,EACc,IAAV3G,GAAgBA,EAAQ,KAAQ,GAChCm1C,EAAUtkC,MAAQ,MAClBskC,EAAUxoC,MAAQ,kBACXwoC,GACAn1C,EAAQ,IAAM,GACrBm1C,EAAUtkC,MAAQ,MAClBskC,EAAUxoC,MAAQ,kBACXwoC,IAGPA,EAAUtkC,MAAQ,MAClBskC,EAAUxoC,MAAQ,UACXwoC,GAGE,IAAbxuC,EACc,IAAV3G,GAAgBA,EAAQ,IAAO,GAC/Bm1C,EAAUtkC,MAAQ,MAClBskC,EAAUxoC,MAAQ,kBACXwoC,GACAn1C,EAAQ,IAAM,GACrBm1C,EAAUtkC,MAAQ,MAClBskC,EAAUxoC,MAAQ,kBACXwoC,IAGPA,EAAUtkC,MAAQ,MAClBskC,EAAUxoC,MAAQ,UACXwoC,GAGE,IAAbxuC,GAEIwuC,EAAUtkC,MAAQ,MAClBskC,EAAUxoC,MAAQ,kBACXwoC,GAOE,IAAbxuC,GACAwuC,EAAUtkC,MAAQ,MAClBskC,EAAUxoC,MAAQ,kBACXwoC,QAHX,GAiJWyC,G,2MAzIX16C,MAAQ,CACJ+vC,KAAM,GACNrc,OAAQ,KACRinB,cAAe,KACf7C,YAAa,M,mFAEI,IAAD,EACkCx3C,KAAKI,MAA/Cqe,EADQ,EACRA,SAAUtc,EADF,EACEA,WAAY23C,EADd,EACcA,gBAC9B95C,KAAKC,SAAS,CAAEmzB,OAAQ3U,EAAS6J,OAAQ+xB,cAAel4C,EAAYq1C,YAAasC,IACjF,IAAMvW,EAAQvjC,KAAK6mC,YAAY1kC,EAAY23C,GACrC/d,EAAQn5B,IAAO2gC,EAAM8E,WAAW35B,OAAO,gBACvCstB,EAAMp5B,IAAO2gC,EAAM1E,SAASnwB,OAAO,gBACzC1O,KAAKkH,QAAQuX,EAAS6J,OAAQyT,EAAOC,K,2CAEnB,IAAD,EACiCh8B,KAAKI,MAA/Cqe,EADS,EACTA,SAAUtc,EADD,EACCA,WAAY23C,EADb,EACaA,gBADb,EAE8B95C,KAAKN,MAA5C0zB,EAFS,EAETA,OAAQinB,EAFC,EAEDA,cAAe7C,EAFd,EAEcA,YAC/B,GAAI/4B,EAAS6J,SAAW8K,GAAUjxB,IAAek4C,GAAiB7C,IAAgBsC,EAAiB,CAAC,IAAD,EAC9D95C,KAAKI,MAA9Bqe,EADuF,EACvFA,SAAUtc,EAD6E,EAC7EA,WAClBnC,KAAKC,SAAS,CAAEmzB,OAAQ3U,EAAS6J,OAAQ+xB,cAAel4C,EAAYq1C,YAAasC,IACjF,IAAMvW,EAAQvjC,KAAK6mC,YAAY1kC,EAAY23C,GACrC/d,EAAQn5B,IAAO2gC,EAAM8E,WAAW35B,OAAO,gBACvCstB,EAAMp5B,IAAO2gC,EAAM1E,SAASnwB,OAAO,gBACzC1O,KAAKkH,QAAQuX,EAAS6J,OAAQyT,EAAOC,M,8BAIrCnO,EAAK/mB,EAAIC,GAAK,IAAD,OACXjC,EAAM,IAAIC,IAChBmF,EAAoB2jB,EAAK/mB,EAAIC,GACxBoD,MAAK,SAAAtF,GACF,IAAMO,EAAYN,EAAIG,OAAOJ,EAAKA,MAAMK,OAAOG,SAASC,QACpDhD,MAAMC,QAAQ6C,GACd,EAAKnF,SAAS,CAAEwvC,KAAMrqC,IAGtB,EAAKnF,SAAS,CAAEwvC,KAAM,CAACrqC,QAG9BmF,OAAM,SAAAC,GACHhH,QAAQC,IAAI,0CAA4CwK,KAAKC,UAAU1D,S,kCAKvErI,EAAY28B,GACpB,IAAMD,EAAU18B,EAAc,OAC9B,OAAiB,IAAb28B,EACO,CACHuJ,UAAWxJ,EAAW,MACtBA,QAASA,EACTC,SAAU,GACV+Y,KAAM,GAGG,IAAb/Y,EACO,CACHuJ,UAAWxJ,EAAW,OACtBA,QAASA,EACTC,SAAU,GACV+Y,KAAM,GAIG,IAAb/Y,EACO,CACHuJ,UAAWxJ,EAAW,OACtBA,QAASA,EACTC,SAAU,GACV+Y,KAAM,GAIP,CACHxP,UAAWxJ,EAAW,QACtBA,QAASA,EACTC,SAAU,GACV+Y,KAAM,M,sCAME,MAoB4B73C,KAAKI,MAArC05C,EApBI,EAoBJA,gBAAiB33C,EApBb,EAoBaA,WAEnBuI,EAAWglC,GADJ1vC,KAAKN,MAAM+vC,MAExB,GAAiB,OAAb/kC,QAAkC5I,IAAb4I,GAA8C,IAApBA,EAASjI,OACxD,OAAO,KAEX,IAAM8gC,EAAQvjC,KAAK6mC,YAAY1kC,EAAY23C,GAO3C,OAhCA,SAAwB7wC,EAAWE,EAAU2O,EAAM+/B,GAE/C,IADA,IAAIyC,EAAY,GADqC,WAE5C93C,GACL,IAAMu5B,EAAQ9yB,EAAazG,EAAQq1C,EAAO,GAAK,GAAK,IAC9C7b,EAAM/yB,GAAczG,EAAQ,GAAKq1C,EAAO,GAAK,GAAK,IAClD0C,EAAaziC,EAAKtT,QAAO,SAAU4F,EAAM5H,EAAO6H,GAClD,IAAMzB,EAAOhG,IAAOwH,EAAKqN,KAAK1V,WAAaqI,EAAKgkB,KAAKrsB,WAAY,gBAAgBiB,UACjF,OAAO+4B,GAASnzB,GAAQA,EAAOozB,KAEnCse,EAAUp0C,KAAK,CACXzD,OAAQ83C,EAAW93C,OACnBC,QAAS63C,EACTtxC,UAAW8yB,EACX7yB,QAAS8yB,KAXRx5B,EAAQ,EAAGA,EAAQ2G,EAAU3G,IAAU,EAAvCA,GAcT,OAAO83C,EAUME,CAAejX,EAAM8E,UAAW9E,EAAMzE,SAAUp0B,EAAU64B,EAAMsU,MACrDnrC,KAAI,SAAUnM,EAAOiC,EAAO6H,GACpD,OACI,kBAAC,GAAD,CAAoBusC,UAAWc,GAASoC,EAAiBt3C,GAAQtC,IAAKsC,EAAOw3C,YAAaz5C,S,+BAK5F,IAAD,EACmCP,KAAKI,MAArC05C,EADH,EACGA,gBAAiB33C,EADpB,EACoBA,WACnBohC,EAAQvjC,KAAK6mC,YAAY1kC,EAAY23C,GAC3C,OACI,yBAAKn5C,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaD,OAAQ,SACrE,yBAAKJ,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,SAAUwgC,WAAY,0BACvF,qEAKJ,yBAAK1gC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAYuiC,EAAMzE,SAAW,UAC5E9+B,KAAKy6C,sB,GAnIGj7C,aCjDdk7C,G,iLAVD,IAAD,EAC4C16C,KAAKI,MAA/Cqe,EADF,EACEA,SAAUq7B,EADZ,EACYA,gBAAiB33C,EAD7B,EAC6BA,WAClC,OACI,yBAAKxB,MAAO,CAAEqZ,UAAW,SACrB,kBAAC,GAAD,CAAgB7X,WAAYA,EAAYgC,MAAO,CAAEA,MAAO,MAAQsa,SAAUA,EAAUq7B,gBAAiBA,S,GAL7Ft6C,aC+VTm7C,I,kNAzVXj7C,MAAQ,CACJ+K,QAAS,GACTmwC,qBAAsB,GACtBC,WAAY,GACZ13B,OAAQ,KACRiQ,OAAQ,M,EAgEZ0nB,cAAgB,SAAClJ,EAAO9qB,GACpB,QAAehlB,IAAXglB,EACJ,OAAOA,EAAOoB,MAAK,SAAAjG,GAAC,OAChB2vB,EAAMzxC,MAAM8hB,EAAE84B,iB,EAGtB7jC,MAAQ,SAACw6B,EAAQ5qB,GACb,IAAI4B,EAAW5B,EAAO4B,SAClBsyB,EAAyB,GACvBC,EAAoBvyB,EAASR,MAAK,SAAA/c,GAAI,MAAiB,YAAbA,EAAKjL,OAC/Cg7C,EAAqBxyB,EAASR,MAAK,SAAA/c,GAAI,MAAiB,aAAbA,EAAKjL,OACtD,YAAe4B,IAAX4vC,EAA6B,IACjCA,EAAO1rB,SAAQ,SAAA4rB,GACX,IAAMuJ,EAAa,IAAItyB,OAAOoyB,EAAkBnyB,UAAWmyB,EAAkBlyB,aACvEqyB,EAAgBxJ,EAAMpmC,QAAQrL,MAAMg7C,GAEpCE,EAAc,IAAIxyB,OAAOqyB,EAAmBpyB,UAAWoyB,EAAmBnyB,aAC1EuyB,EAAiB1J,EAAMtB,SAASnwC,MAAMk7C,GAEtB,OAAlBD,GAA6C,OAAnBE,GAC1BN,EAAuB90C,KAAK0rC,MAI7BoJ,I,mFAtFU,IACTv8B,EAAaze,KAAKI,MAAlBqe,SACF5Q,EAAM4Q,EAASpX,MACfwmB,EAAMpP,EAAS6J,OACrBtoB,KAAKC,SAAS,CAAEkjB,OAAQtV,EAAKulB,OAAQvF,IACrC7tB,KAAKu7C,WAAW1tC,EAAKggB,K,2CAGH,IACVpP,EAAaze,KAAKI,MAAlBqe,SADS,EAEUze,KAAKN,MAAxByjB,EAFS,EAETA,OAAQiQ,EAFC,EAEDA,OACVvlB,EAAM4Q,EAASpX,MACfwmB,EAAMpP,EAAS6J,OACjBnF,IAAWtV,GAAOulB,IAAWvF,IAC7B7tB,KAAKC,SAAS,CAAEkjB,OAAQtV,EAAKulB,OAAQvF,IACrC7tB,KAAKu7C,WAAW1tC,EAAKggB,M,iCAGlBhgB,EAAKggB,GAAM,IAAD,OACjBhjB,GAAwB,uBACnBV,MAAK,SAAAtF,GACF,IAAIiiB,EAASjiB,EAAKA,KAClB,EAAK5E,SAAS,CAAE26C,qBAAsB9zB,OAEzCvc,OAAM,SAAAC,GAAShH,QAAQC,IAAI+G,MAChCK,GAAwB,iBACnBV,MAAK,SAAAtF,GACF,IAAIiiB,EAASjiB,EAAKA,KAClB,EAAK5E,SAAS,CAAE46C,WAAY/zB,OAE/Bvc,OAAM,SAAAC,GACHhH,QAAQC,IAAI+G,MAEpBN,GAAuC2D,EAAKggB,EAAK,OAC5C1jB,MAAK,SAAAtF,GACF,EAAK5E,SAAS,CAAEwK,QAAS5F,EAAKA,UAGjC0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,0CAA4CwK,KAAKC,UAAU1D,S,qCAO/E,OAD0BxK,KAAKI,MAAvBk3C,eAEJ,KAAK,EACD,OAAO,GACX,KAAK,EAEL,KAAK,EACD,OAAO,GACX,KAAK,EACD,OAAO,M,2CAMf,MAAO,U,kCA4BC,MAegCt3C,KAAKI,MAArCk3C,EAfA,EAeAA,cAAekE,EAff,EAeeA,aAmCvB,SAAS7E,EAAe6E,EAAclE,EAAe90C,GACjD,GAAIg5C,EACA,OAnCR,SAAkBryC,EAAU3G,GACxB,OAAiB,IAAb2G,EACc,IAAV3G,GAAgBA,EAAQ,KAAQ,EACzB,4BACAA,EAAQ,IAAM,EACd,4BAGA,oBAGE,IAAb2G,EACc,IAAV3G,GAAgBA,EAAQ,IAAO,EACxB,4BACAA,EAAQ,IAAM,EACd,4BAGA,oBAGE,IAAb2G,EAGW,4BAKE,IAAbA,EACO,iCADX,EAMWuuC,CAASJ,EAAe90C,GAKvC,IAFA,IAAMoN,EAtDN,SAA0B1P,GACtB,OAAQA,GACJ,KAAK,EACD,OAAO,GACX,KAAK,EACD,OAAO,GACX,KAAK,EACD,OAAO,GACX,KAAK,EACD,OAAO,IA6CJu7C,CAAiBnE,GAC5BjtC,EAAM,GACD7H,EAAQ,EAAGA,EAAQoN,EAAQpN,IAChC6H,EAAInE,KACA,yBAAKhG,IAAKsC,EAAOrB,UAAU,OAAOR,MAAO,CAAEosC,WAAY4J,EAAe6E,EAAclE,EAAe90C,OAI3G,OAAO6H,I,+BAEF,MAqGyCrK,KAAKI,MAA3Ck3C,EArGH,EAqGGA,cAAen1C,EArGlB,EAqGkBA,WAAY4J,EArG9B,EAqG8BA,OAG7B2vC,EAAU17C,KAAKN,MAAM+K,QAGvBkxC,EAAkB,GACtB,GAAe,cAAX5vC,EAAwB,CACxB,IAAM6vC,EAAsB57C,KAAK86C,cAAc,YAAa96C,KAAKN,MAAMm7C,iBAC3C/4C,IAAxB85C,GACAF,EAAQ11B,SAAQ,SAAA7a,GACZ,IAAM0wC,EAAQ1wC,EAAKG,SAASnL,MAAM0oB,OAAO+yB,EAAoBzzB,gBAAgBtW,KAAM+pC,EAAoBzzB,gBAAgB2zB,mBACzG,OAAVD,GAA4B,KAAVA,GAAcF,EAAgBz1C,KAAKiF,WAIjEwwC,EAAkBD,EAGtB,IAAIxJ,EAAe,GACb6J,EAAmC/7C,KAAK86C,cAAc,aAAc96C,KAAKN,MAAMk7C,2BAC5C94C,IAArCi6C,IACA7J,EAAelyC,KAAKkX,MAAMykC,EAAiBI,IAG/C,IAGMC,EAlHN,SAAkBnyC,EAAUV,EAAU0yB,GA2BlC,SAASogB,EAAYhzC,EAAWC,EAASgzC,EAAcC,GAanD,IACMC,GADQxmC,SAAS/M,KAAKwzC,YAAc,MACfnzC,EAAUD,GAC/B8yB,EAdN,SAAqBmgB,EAAcjzC,GAC/B,OAAIizC,GAAgBjzC,EACTA,EAEJizC,EAUGI,CAAYJ,EAAcjzC,GAExC,OAVA,SAAmBkzC,EAAYjzC,GAC3B,OAAIizC,GAAcjzC,EACPizC,EAEJjzC,EAKCqzC,CAAUJ,EAAYjzC,GACpB6yB,GAASqgB,EAE3B,SAASI,EAAoBvzC,EAAWC,EAASgzC,GAC7C,IAAM7oC,EAAQuC,SAAS/M,KAAKwzC,YAAc,IAC1C,OAAIH,GAAgBjzC,EACT,GAGFizC,EAAejzC,IADNoK,GAASnK,EAAUD,IAwBzC,IAAMs6B,EAzEN,SAAqB1H,EAAY1yB,GAC7B,IAAMD,EAAU2yB,EAAc,OAC9B,OAAiB,IAAb1yB,EACO,CACHF,UAAWC,EAAW,MACtBA,QAASA,GAGA,IAAbC,EACO,CACHF,UAAWC,EAAW,OACtBA,QAASA,GAGA,IAAbC,EACO,CACHF,UAAWC,EAAW,OACtBA,QAASA,GAGV,CACHD,UAAWC,EAAW,QACtBA,QAASA,GAmDH+yB,CAAYJ,EAAY1yB,GACtC,YAAiBrH,IAAb+H,GAAuC,OAAbA,EACnB,GAEa,IAApBA,EAASpH,OACF,GA1BX,SAAwBoH,EAAU05B,GAI9B,IAHA,IAAIkZ,EAAY,GACVxzC,EAAYs6B,EAAMt6B,UAClBC,EAAUq6B,EAAMr6B,QACb1G,EAAQ,EAAGA,EAAQqH,EAASpH,OAAQD,IAAS,CAClD,IAAME,EAAUmH,EAASrH,GACnB05C,EAAet5C,IAAOF,EAAQkuC,QAAQ7uC,WAAY,8BAA8BiB,UAChFm5C,EAAav5C,IAAOF,EAAQmuC,QAAQ9uC,WAAY,8BAA8BiB,UACpF,KAAIkG,EAAUgzC,GAAgBC,EAAalzC,GAA3C,CAGA,IAAMyzC,EAAQF,EAAoBvzC,EAAWC,EAASgzC,GAChD7oC,EAAQ4oC,EAAYhzC,EAAWC,EAASgzC,EAAcC,GAC5DM,EAAUv2C,KAAK,CACX,MAASmN,EACT,MAASqpC,EACT,QAAWh6C,KAGnB,OAAO+5C,EASWE,CAAe9yC,EAAU05B,GA6BlCqZ,CAAS1K,EAAcoF,EAAen1C,GAG5BuK,KAAI,SAAUnM,EAAOiC,EAAOyD,GAkCnD,OACI,yBAAK/F,IAAKsC,EAAO7B,MAAO,CAAEuU,QAAS,UAAWoI,YAAa/c,EAAMm8C,MAAQ,EAAI,KAAMloC,OAAQ,YACvF,kBAAC,KAAD,CAAS6D,UAAU,SAASy+B,oBAAoB,EAAM3yC,MA3B9D,SAAuB5D,GAanB,IAZsB+hC,EAYhBua,EAAkBj6C,IAAOrC,EAAMmC,QAAQkuC,QAAS,8BAA8BliC,OAAO,eACrFouC,EAAgBl6C,IAAOrC,EAAMmC,QAAQmuC,QAAS,8BAA8BniC,OAAO,eACnF1J,EAba,MADGs9B,EAcM1iC,OAAOW,EAAMmC,QAAQiI,WAZlC,qBAEI,KAAX23B,EACO,qBAEI,KAAXA,EACO,qBAEJA,EAKX,OACI,6BACI,oEAAeua,EAAf,cAAoCC,IACpC,wDAAav8C,EAAMmC,QAAQ8tC,SAA3B,cAAyCjwC,EAAMmC,QAAQ+tC,QAAvD,cAAoElwC,EAAMmC,QAAQguC,QAAlF,cAA+FnwC,EAAMmC,QAAQiuC,UAC7G,8CAAU3rC,IAO+Ck1C,CAAc35C,GAAQw2C,aAAc,CAAEC,SAAU,UACzG,yBAAKr2C,MAAO,CAAE0S,MAAO9S,EAAM8S,MAAQ,KAAMtS,OAAQ,OAAQgV,gBAAiB,YAAa5G,MAAO,QAAS+F,QAAS,UAAWG,aAAc,WAAYC,WAAY,SAAUhG,WAAY,QApCnM,SAAsB/O,GAElB,YAAcuB,IAAVvB,GAAiC,OAAVA,EAChB,KAEJA,EAAMwB,WAAWe,OA+BiLuqC,CAAa9sC,EAAMmC,QAAQ8I,eAK5O,OACI,yBAAK7K,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAamU,SAAU,aACvE,yBAAKxU,MAAO,CAAE0gC,WAAY,UAAWzgC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WACxF,mDAEJ,yBAAKM,UA/Kb,SAAyBjB,GACrB,OAAQA,GACJ,KAAK,EACD,MAAO,mBACX,KAAK,EACD,MAAO,qBACX,KAAK,EACD,MAAO,oBACX,KAAK,EACD,MAAO,oBACX,QACI,OAAO,MAoKK68C,CAAgBzF,GAAgB32C,MAAO,CAAEI,OAAQi7C,EAAUv5C,OAA4B,GAAnBu5C,EAAUv5C,OAAc,SAAczC,KAAKg9C,aAC/H,yBAAKr8C,MAAO,CAAEwU,SAAU,WAAY0qB,KAAM,IAAK7K,UAAW,OAAQioB,UAAW,WACxEjB,Q,GAnVWx8C,cCWjB09C,G,iLAdD,IAAD,EAC6Dl9C,KAAKI,MAA/Dqe,EADH,EACGA,SAAUq7B,EADb,EACaA,gBAAiBjwC,EAD9B,EAC8BA,SAAS1H,EADvC,EACuCA,WAAYgC,EADnD,EACmDA,MAExD,OACI,yBAAKxD,MAAO,CAAEqZ,UAAW,SACrB,yBAAKrZ,MAAO,CAAEoV,gBAAiB,YAAa4N,oBAAqB,MAAOC,qBAAsB,MAAO7iB,OAAQ,OAAQmU,QAAS,WAAYtU,QAAS,OAAQC,WAAY,WACnK,wBAAIF,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBAAqBhL,IAE/D,kBAAC,GAAD,CAAmBq3C,cAAc,EAAMr3C,MAN5B,CAAC,CAAEA,MAAO,uBAMqCsa,SAAUA,EAAU64B,cAAewC,EAAiBjwC,SAAUA,EAAU1H,WAAYA,EAAY4J,OAAQ/L,KAAKI,MAAM2L,c,GAThKvM,aCmVd29C,I,kNA/UXz9C,MAAQ,CAAE0U,OAAQ,M,mFACG,IAEX3D,EADezQ,KAAKI,MAAlBqe,SACgBmjB,OACxB5hC,KAAKC,SAAS,CAAEmU,OAAQ3D,M,qCAMxB,OAD0BzQ,KAAKI,MAAvBk3C,eAEJ,KAAK,EACD,OAAO,GACX,KAAK,EAEL,KAAK,EACD,OAAO,GACX,KAAK,EACD,OAAO,M,2CAMf,MAAO,U,kCAEC,MAegCt3C,KAAKI,MAArCk3C,EAfA,EAeAA,cAAekE,EAff,EAeeA,aACjB5rC,EAfN,SAA0B1P,GACtB,OAAQA,GACJ,KAAK,EACD,OAAO,GACX,KAAK,EACD,OAAO,GACX,KAAK,EACD,OAAO,GACX,KAAK,EACD,OAAO,IAMJu7C,CAAiBnE,GAkChC,SAASX,EAAe6E,EAAclE,EAAe90C,GACjD,GAAIg5C,EACA,OAnCR,SAAkBryC,EAAU3G,GACxB,OAAiB,IAAb2G,EACc,IAAV3G,GAAgBA,EAAQ,KAAQ,EACzB,4BACAA,EAAQ,IAAM,EACd,4BAGA,gCAGE,IAAb2G,EACc,IAAV3G,GAAgBA,EAAQ,IAAO,EACxB,4BACAA,EAAQ,IAAM,EACd,4BAGA,gCAGE,IAAb2G,EAGW,4BAKE,IAAbA,EACO,iCADX,EAMWuuC,CAASJ,EAAe90C,GAIvC,IADA,IAAI6H,EAAM,GACD7H,EAAQ,EAAGA,EAAQoN,EAAQpN,IAChC6H,EAAInE,KACA,yBAAKhG,IAAKsC,EAAOrB,UAAU,OAAOR,MAAO,CAAEosC,WAAY4J,EAAe6E,EAAclE,EAAe90C,OAI3G,OAAO6H,I,yCAEQ,MAkCiCrK,KAAKI,MAA7Ck3C,EAlCO,EAkCPA,cAAyBn1C,GAlClB,EAkCQsc,SAlCR,EAkCkBtc,YAE3Bi7C,EAAap9C,KAAKN,MAAM0U,OAC9B,QAAmBtS,IAAfs7C,GAA2C,OAAfA,EAC5B,OAAO,KAgBX,IAdA,IAAM/5B,EAAa+5B,EAAW54C,QAAO,SAAU4F,EAAM5H,EAAO6H,GACxD,MAAqB,OAAdD,EAAK3F,QAGV8+B,EA3CN,SAAqBp6B,EAAU0yB,GAC3B,IAAM3yB,EAAU2yB,EAAc,OAC9B,OAAiB,IAAb1yB,EACO,CACHF,UAAWC,EAAW,MACtBA,QAASA,EACTC,SAAU,GACV0uC,KAAM,GAGG,IAAb1uC,EACO,CACHF,UAAWC,EAAW,OACtBA,QAASA,EACTC,SAAU,GACV0uC,KAAM,GAGG,IAAb1uC,EACO,CACHF,UAAWC,EAAW,OACtBA,QAASA,EACTC,SAAU,GACV0uC,KAAM,GAGP,CACH5uC,UAAWC,EAAW,QACtBA,QAASA,EACTC,SAAU,GACV0uC,KAAM,IAaAwF,CAAY/F,EAAen1C,GAEnCi6C,GADQxmC,SAAS/M,KAAKwzC,YAAc,MACf9Y,EAAMr6B,QAAUq6B,EAAMt6B,WAC7Cq0C,EAAmB,GACjBC,EAAiBl6B,EAAWtU,MAAK,SAAUC,EAAGC,GAGhD,OAFcrM,IAAOoM,EAAEnM,QAAQd,WAAaiN,EAAEjM,QAAQhB,WAAY,gBAAgBiB,UACpEJ,IAAOqM,EAAEpM,QAAQd,WAAakN,EAAElM,QAAQhB,WAAY,gBAAgBiB,UAC3D,GAAK,KAE5Bw6C,EAAc,KACTh7C,EAAQ,EAAGA,EAAQ+6C,EAAe96C,OAAQD,IAAS,CACxD,IAAME,EAAU2gB,EAAW7gB,GACrBG,EAAcC,IAAOF,EAAQG,QAAQd,WAAaW,EAAQK,QAAQhB,WAAY,gBAAgBiB,UACpG,GAAIugC,EAAMt6B,UAAYtG,EAElB66C,EAAc,CAAEpvB,KAAMzrB,EAAa86C,MADd/4C,SAAkC,IAAzB9E,OAAO8C,EAAQO,UAIjD,GADAO,QAAQC,IAAI+5C,GACRja,EAAMt6B,WAAatG,GAAeA,GAAe4gC,EAAMr6B,QAAS,CAChE,IAAMw0C,EAAeh5C,SAAkC,IAAzB9E,OAAO8C,EAAQO,SAC7Cq6C,EAAiBp3C,KAAK,CAClBkoB,KAAMzrB,EACN86C,MAAOC,KAInBl6C,QAAQC,IAAI65C,GACQ,OAAhBE,IACAF,EAAiB1lC,OAAO,EAAE,EAAE4lC,GAC5BA,EAAc,MAElBh6C,QAAQC,IAAI65C,GAMZ,IALA,IAAMK,EAAaL,EAAiBvuC,MAAK,SAAUC,EAAGC,GAClD,OAAOD,EAAEof,KAAOnf,EAAEmf,KAAO,GAAK,KAE9BsuB,EAAQ,EACRkB,EAAmB,GACdp7C,EAAQ,EAAGA,EAAQm7C,EAAWl7C,OAAQD,IAAS,CACpD,IAAME,EAAUi7C,EAAWn7C,GAS3B,GARc,IAAVA,IAEIk6C,EADAh6C,EAAQ0rB,KAAOmV,EAAMt6B,UACb,GAGCvG,EAAQ0rB,KAAOmV,EAAMt6B,WAAamzC,GAG/CuB,EAAWl7C,OAAS,IAAMD,EAAO,CACjC,IAAMq7C,EAAQn7C,EAAQ0rB,KAEhB0vB,GADQva,EAAMr6B,QACU20C,GAASzB,EACvCwB,EAAiB13C,KAAK,CAClBu3C,MAAO/6C,EAAQ+6C,MACfpqC,MAAOyqC,QAGV,CACD,IAAMD,EAAQF,EAAWn7C,GAAO4rB,KAE1B0vB,GADQH,EAAWn7C,EAAQ,GAAG4rB,KACNyvB,GAASzB,EACvCwB,EAAiB13C,KAAK,CAClBu3C,MAAO/6C,EAAQ+6C,MACfpqC,MAAOyqC,KAInB,MAAO,CACHpB,MAAOA,EACPkB,iBAAkBA,K,+BAGhB,IAAD,EAC2C59C,KAAKI,MAA7Ck3C,EADH,EACGA,cAAe74B,EADlB,EACkBA,SAAUtc,EAD5B,EAC4BA,WAC3BsO,EAASgO,EAASmjB,OAGxB,GAFAp+B,QAAQC,IAAIgb,GAEG,OAAXhO,EAAmB,OAAO,KAkB9B,IAAMurB,EAAM75B,EAAc,OACpB45B,EAlBN,SAA4BA,EAAO5yB,GAC/B,OAAiB,IAAbA,EACO4yB,EAAS,MAEH,IAAb5yB,EACO4yB,EAAS,OAGH,IAAb5yB,EACO4yB,EAAS,OAGH,IAAb5yB,EACO4yB,EAAS,aADpB,EAMUgiB,CAAmB/hB,EAAKsb,GAChC0G,EAAavtC,EAAOjM,QAAO,SAAUjE,EAAOiC,EAAO6H,GACrD,IAAM4zC,EAAa19C,EAAMsC,QAAQd,WAAaxB,EAAMwC,QAAQhB,WACtD6G,EAAOhG,IAAOq7C,EAAY,gBAAgBj7C,UAChD,OAAO+4B,EAAQnzB,GAAQA,EAAOozB,KAE5BkiB,EAAiBF,EAAWtxC,KAAI,SAAUnM,EAAOiC,EAAO6H,GAC1D,IAAM4zC,EAAa19C,EAAMsC,QAAQd,WAAaxB,EAAMwC,QAAQhB,WAE5D,OADaa,IAAOq7C,EAAY,gBAAgBj7C,aAG9CO,EAAOy4B,EAAMD,EACfoiB,EAAa,GAQjB,GAPIH,EAAWv7C,OAOW,IAAtBu7C,EAAWv7C,OACX,IAAK,IAAID,EAAQ,EAAGA,EAAQw7C,EAAWv7C,OAAQD,IAAS,CACpD,IAAME,EAAUs7C,EAAWx7C,GACrBy7C,EAAav7C,EAAQG,QAAQd,WAAaW,EAAQK,QAAQhB,WAC1D6G,EAAOhG,IAAOq7C,EAAY,gBAAgBj7C,UAC1CqQ,EAAQ3O,SAAS,KAAOkE,EAAOmzB,GAASx4B,GAC9C46C,EAAWj4C,KAAK,CACZmN,MAAOA,EACP5C,OAAiC,IAAzB7Q,OAAO8C,EAAQO,eAK/B,IAAK,IAAIT,EAAQ,EAAGA,EAAQw7C,EAAWv7C,OAAS,EAAGD,IAAS,CACxD,IAAME,EAAUs7C,EAAWx7C,GAC3B,GAAc,IAAVA,EAAa,CACb,IAAMy7C,EAAav7C,EAAQG,QAAQd,WAAaW,EAAQK,QAAQhB,WAC1D6G,EAAOhG,IAAOq7C,EAAY,gBAAgBj7C,UAC1CqQ,EAAQ3O,SAAS,KAAOkE,EAAOmzB,GAASx4B,GAC9C46C,EAAWj4C,KAAK,CACZmN,MAAOA,EACP5C,OAAiC,IAAzB7Q,OAAO8C,EAAQO,eAG1B,GAAIT,IAAW07C,EAAez7C,OAAS,EAAI,CAC5C,IAAMw7C,EAAav7C,EAAQG,QAAQd,WAAaW,EAAQK,QAAQhB,WAC1D6G,EAAOhG,IAAOq7C,EAAY,gBAAgBj7C,UAC1CqQ,EAAQ3O,SAAS,KAAOs3B,EAAMpzB,GAAQrF,GAC5C46C,EAAWj4C,KAAK,CACZmN,MAAOA,EACP5C,OAAiC,IAAzB7Q,OAAO8C,EAAQO,cAG1B,CACD,IAAM2kC,EAAWoW,EAAWx7C,EAAQ,GAC9B47C,EAAcxW,EAAS/kC,QAAQd,WAAa6lC,EAAS7kC,QAAQhB,WAC7Ds8C,EAAQz7C,IAAOw7C,EAAa,gBAAgBp7C,UAC5Ci7C,EAAav7C,EAAQG,QAAQd,WAAaW,EAAQK,QAAQhB,WAC1D6G,EAAOhG,IAAOq7C,EAAY,gBAAgBj7C,UAC1CqQ,EAAQ3O,SAAS,KAAO25C,EAAQz1C,GAAQrF,GAC9C46C,EAAWj4C,KAAK,CACZmN,MAAOA,EACP5C,OAAiC,IAAzB7Q,OAAO8C,EAAQO,WAmBvC,IAAM6U,EAAO9X,KAAKs+C,mBAClB,GAAa,OAATxmC,QAA0BhW,IAATgW,EACjB,OAAO,KAEX,IAAMymC,EAASzmC,EAAK8lC,iBAAiBlxC,KAAI,SAAUnM,EAAOiC,EAAO6H,GAC7D,OACI,yBAAKnK,IAAKsC,EAAO7B,MAAO,CAAE+X,OAAQ,kBAAmBC,eAAgB,WAAYtF,MAAO9S,EAAM8S,MAAQ,IAAKtS,OAAQ,KAAMgV,gBAAiB,UAAW5G,MAAO,QAASvO,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WAAa8C,KAAK66C,MAAMj+C,EAAMk9C,OAA1P,QAGR,OACI,yBAAK98C,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAamU,SAAU,aACvE,yBAAKxU,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,OAAQ3S,WAAY,SAAUwgC,WAAY,wBAAyB/jB,YAAa,SAC3H,6CAEJ,yBAAKnc,UA5Bb,SAAyBjB,GACrB,OAAQA,GACJ,KAAK,EACD,MAAO,2BACX,KAAK,EACD,MAAO,6BACX,KAAK,EACD,MAAO,4BACX,KAAK,EACD,MAAO,4BACX,QACI,OAAO,MAiBK68C,CAAgBzF,IAAiBt3C,KAAKg9C,aACtD,yBAAKr8C,MAAO,CAAEwU,SAAU,WAAY0qB,KAAM,IAAKjC,WAAY,SACvD,yBAAKj9B,MAAO,CAAE2c,YAAaxF,EAAK4kC,MAAQ,KAAM97C,QAAS,OAAQyS,MAAO,sBAAuB+B,SAAU,WAClGmpC,S,GAzUQ/+C,cCSlBi/C,G,iLAXD,IAAD,EAC6Cz+C,KAAKI,MAA/Cqe,EADH,EACGA,SAAUtc,EADb,EACaA,WAAY23C,EADzB,EACyBA,gBAE9B,OACI,yBAAKn5C,MAAO,CAAEqZ,UAAW,SACrB,kBAAC,GAAD,CAAoBwhC,cAAc,EAAMr5C,WAAYA,EAAYgC,MAHrD,CAAC,CAAEA,MAAO,iBAG8Dsa,SAAUA,EAAU64B,cAAewC,S,GANxGt6C,aC0Jfk/C,G,2MAxJXh/C,MAAQ,CACJ07B,QAAQ,EACR1L,UAAWnM,OAAOo7B,WAAa,K,EA4BnCC,mBAAqB,EAAKC,SAAS,EAAKC,iBAAkB,K,oFA1BpC,IAEVrjB,EAAWz7B,KAAKI,MAAhBq7B,OACRra,KAAU,IAAMqa,GAAQpa,SACxBrhB,KAAKshB,c,0CAILthB,KAAKshB,YACLiC,OAAOw7B,iBAAiB,SAAU/+C,KAAK4+C,sB,+BAElCI,EAAMC,EAAMC,GAAY,IACzB11C,EADwB,mBAE5B,OAAO,WACH,IAAIb,EAAU,EAAMw2C,EAAOC,EAKvBC,EAAUH,IAAc11C,EAC5B81C,aAAa91C,GACbA,EAAU+1C,YANE,WACR/1C,EAAU,KACL01C,GAAWF,EAAKQ,MAAM72C,EAASw2C,KAIZF,GACxBI,GAASL,EAAKQ,MAAM72C,EAASw2C,M,6CAOrC57B,OAAOk8B,oBAAoB,SAAUz/C,KAAK4+C,sB,yCAI1C5+C,KAAKC,SAAS,CAAEyvB,UAAWnM,OAAOo7B,WAAa,Q,kCAO/C,SAASe,EAAYh8C,GACjB,OAAOA,EAAQ,EALX,MA0BgD1D,KAAKI,MAArDmhB,EA1BA,EA0BAA,OAAQka,EA1BR,EA0BQA,OAAOqe,EA1Bf,EA0BeA,gBAAiB6F,EA1BhC,EA0BgCA,YAKlCC,EA9BN,SAAiBh3C,GACb,OAAOA,EAAQ,MA6BQi3C,CAFF,IAAIpoC,KAAK,IAAIA,KAAKkoC,GAAa9kC,cAAgB,IAAM6kC,EAAY,IAAIjoC,KAAKkoC,GAAahmC,YAAc,IAAM,IAAIlC,KAAKkoC,GAAa/lC,WAAWuB,WAI/J2kC,EA1BN,SAAsBH,EAAa7F,GAC/B,OAAQA,GAEJ,KAAK,EACD,OAAO6F,EAAc,MAEzB,KAAK,EACD,OAAOA,EAAc,OAEzB,KAAK,EACD,OAAOA,EAAc,OAEzB,KAAK,EACD,OAAOA,EAAc,QACzB,QACI,OAAO,MAWAI,CAAaH,EAAoB9F,GAChDkG,EAAQ,GACZ,GAAwB,IAApBlG,EACA,IAAK,IAAIt3C,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CACrC,IAAMoG,EAAOk3C,EAAc,KAA2B,GAARt9C,EAAa,GAAK,IAChEw9C,EAAM95C,KAAK0C,GAGnB,GAAwB,IAApBkxC,EACA,IAAK,IAAIt3C,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CACrC,IAAMoG,EAAOk3C,EAAc,KAA+B,GAARt9C,EAAa,GAAK,IAAO,EAC3Ew9C,EAAM95C,KAAK0C,GAInB,GAAwB,IAApBkxC,EACA,IAAK,IAAIt3C,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CACrC,IAAMoG,EAAOk3C,EAAc,MAA+B,GAARt9C,EAAa,GAAK,IAAO,EAC3Ew9C,EAAM95C,KAAK0C,GAUnB,IAAIqZ,EAAIb,OACHW,OAAO,CAAC+9B,EAAYF,IACpB59B,MAAM,CAAC,EAAGhiB,KAAKN,MAAMgwB,YAGtBhN,EAAMtB,KAAU,IAAMG,GACrBoB,OAAO,OACPC,KAAK,KAAM6Y,GAEX96B,MAAM,QAASX,KAAKN,MAAMgwB,UAAY,KACtC/uB,MAAM,SAAU,IAChBgiB,OAAO,KACPC,KAAK,YAAa,oBAEnBwM,EAAahO,KAAc,MAC3B6+B,EAAY7+B,KAAc,MAgB9B,IAAIoB,EAAQpB,KAAWa,GAClBH,WAAWk+B,GACX59B,SAAS,EAAG,GACZC,YAAY,GACZC,YAAW,SAAUC,GAAK,OAnBVlf,EAmB6Bkf,EAlBtB,IAApBu3B,EACO1qB,EAAW/rB,GAAQ,IAAM+rB,EAAW/rB,EAAQ,MAE/B,IAApBy2C,EACO1qB,EAAW/rB,EAAQ,MAAuB,IAAM+rB,EAAW/rB,EAAQ,MAEtD,IAApBy2C,EACO1qB,EAAW/rB,EAAQ,OAAuB,IAAM+rB,EAAW/rB,EAAQ,OAEtD,IAApBy2C,EACO4F,EAAY,IAAIjoC,KAAKpU,GAAMsW,YAAc,IAAMsmC,EAAU58C,GAE7D+rB,EAAW/rB,GAbtB,IAAqBA,KAqBrBqf,EAAIC,OAAO,KACNE,KAAKL,GACLI,KAAK,QAAS,U,+BAIb,IACErB,EAAWvhB,KAAKI,MAAhBmhB,OACR,OACI,yBAAKnL,GAAImL,Q,GApJI/hB,aC0IV0gD,G,2MAvIXxgD,MAAQ,CACJ07B,QAAQ,EACR1L,UAAWnM,OAAOo7B,WAAa,K,EA6BnCC,mBAAqB,EAAKC,SAAS,EAAKC,iBAAkB,K,oFA3BpC,IAEVrjB,EAAWz7B,KAAKI,MAAhBq7B,OACRra,KAAU,IAAMqa,GAAQpa,SACxBrhB,KAAKshB,c,0CAILthB,KAAKshB,YACLiC,OAAOw7B,iBAAiB,SAAU/+C,KAAK4+C,sB,+BAGlCI,EAAMC,EAAMC,GAAY,IACzB11C,EADwB,mBAE5B,OAAO,WACH,IAAIb,EAAU,EAAMw2C,EAAOC,EAKvBC,EAAUH,IAAc11C,EAC5B81C,aAAa91C,GACbA,EAAU+1C,YANE,WACR/1C,EAAU,KACL01C,GAAWF,EAAKQ,MAAM72C,EAASw2C,KAIZF,GACxBI,GAASL,EAAKQ,MAAM72C,EAASw2C,M,6CAOrC57B,OAAOk8B,oBAAoB,SAAUz/C,KAAK4+C,sB,yCAI1C5+C,KAAKC,SAAS,CAAEyvB,UAAWnM,OAAOo7B,WAAa,Q,kCAGvC,MAoBiD3+C,KAAKI,MAAtDmhB,EApBA,EAoBAA,OAAQka,EApBR,EAoBQA,OAAQqe,EApBhB,EAoBgBA,gBAAiB6F,EApBjC,EAoBiCA,YACnCG,EApBN,SAAsBH,EAAa7F,GAC/B,OAAQA,GAEJ,KAAK,EACD,OAAOl3C,IAAO+8C,GAAa5d,IAAI,EAAG,SAAS/+B,UAE/C,KAAK,EACD,OAAOJ,IAAO+8C,GAAalxC,SAAS,EAAG,QAAQszB,IAAI,EAAG,SAAS/+B,UAEnE,KAAK,EACD,OAAOJ,IAAO+8C,GAAalxC,SAAS,EAAG,QAAQszB,IAAI,EAAG,SAAS/+B,UAEnE,KAAK,EACD,OAAOJ,IAAO+8C,GAAalxC,SAAS,GAAI,QAAQszB,IAAI,EAAG,SAAS/+B,UACpE,QACI,OAAO,MAKA+8C,CAAaJ,EAAa7F,GACvCqG,EAAWv9C,IAAO+8C,GAAa5d,IAAI,EAAG,OAAOrkB,QAAQ,OAAOqkB,IAAI,EAAG,SAAS/+B,UAC9Eg9C,EAAQ,GACZ,GAAwB,IAApBlG,EAAuB,CACvBkG,EAAM95C,KAAK45C,GACX,IAAMl3C,EAAOhG,IAAOk9C,GAAY/d,IAAI,EAAG,OAAOrkB,QAAQ,OAAO1a,UAC7Dg9C,EAAM95C,KAAK0C,GAEf,GAAwB,IAApBkxC,EAAuB,CACvBkG,EAAM95C,KAAK45C,GACX,IAAK,IAAIt9C,EAAQ,EAAGA,EAAQ,EAAGA,IAAS,CACpC,IAAMoG,EAAOhG,IAAOk9C,GAAY/d,IAAIv/B,EAAO,QAAQkb,QAAQ,OAAO1a,UAClEg9C,EAAM95C,KAAK0C,IAInB,GAAwB,IAApBkxC,EAAuB,CACvBkG,EAAM95C,KAAK45C,GACX,IAAK,IAAIt9C,EAAQ,EAAGA,EAAQ,EAAGA,IAAS,CACpC,IAAMoG,EAAOhG,IAAOk9C,GAAY/d,IAAIv/B,EAAO,QAAQkb,QAAQ,OAAO1a,UAClEg9C,EAAM95C,KAAK0C,IAInB,GAAwB,IAApBkxC,EAAuB,CACvBkG,EAAM95C,KAAK45C,GACX,IAAK,IAAIt9C,EAAQ,EAAGA,EAAQ,EAAGA,IAAS,CACpC,IAAMoG,EAAOhG,IAAOk9C,GAAY/d,IAAI,EAAEv/B,EAAO,QAAQkb,QAAQ,OAAO1a,UACpEg9C,EAAM95C,KAAK0C,IAGnB,IAAIqZ,EAAIb,OACHW,OAAO,CAAC+9B,EAAYK,IACpBn+B,MAAM,CAAC,EAAGhiB,KAAKN,MAAMgwB,UAAY,IAGlChN,EAAMtB,KAAU,IAAMG,GACrBoB,OAAO,OACPC,KAAK,KAAM6Y,GAEX96B,MAAM,QAASX,KAAKN,MAAMgwB,WAC1B/uB,MAAM,SAAU,IAChBgiB,OAAO,KACPC,KAAK,YAAa,oBAQvB,IAAIJ,EAAQpB,KAAca,GACrBH,WAAWk+B,GACX59B,SAAS,EAAG,GACZC,YAAY,IACZC,YAAW,SAAUC,GAAK,OATVlf,EAS6Bkf,EARvC3f,IAAOS,GAAMqL,OAAO,SAD/B,IAAqBrL,KAYrBqf,EAAIC,OAAO,KACNE,KAAKL,GACL7hB,MAAM,YAAa,QACnBiiB,KAAK,QAAS,U,+BAIb,IACErB,EAAWvhB,KAAKI,MAAhBmhB,OACR,OACI,yBAAKnL,GAAImL,Q,GAnIO/hB,aCKtB4gD,I,cAAgB,SAACxwC,GACnB,OAAQA,GACJ,KAAK,EACD,OAAO,GACX,KAAK,EACD,OAAO,GACX,KAAK,EACD,OAAO,GACX,KAAK,EACD,OAAO,GACX,QACI,OAAO,QAKb2uB,GAAY,SAACp1B,EAAUk3C,GAEzB,IAAMC,EAAW19C,IAAO09C,SAAS19C,MAASW,KAAKX,IAAOy9C,GAAY3iC,QAAQ,OAAO6iC,KAAK,KAEtF,GAAI39C,IAAOy9C,GAAYG,SAAS59C,MAAS8a,QAAQ,QAC7C,OAAO0iC,GAAcj3C,GAClB,GAAiB,IAAbA,EAAgB,CACvB,IAAMs3C,EAAQ98C,KAAKC,MAAM08C,EAASI,WAClC,OAAOD,EAAQ,EAAIA,EAAQ,EACxB,OAAiB,IAAbt3C,EAEA,GADMxF,KAAKC,MAAM08C,EAASI,UAAY,GAEzB,IAAbv3C,EAEA,GADMxF,KAAKC,MAAM08C,EAASI,UAAY,GAEzB,IAAbv3C,EACA,QADJ,GAuiBIw3C,G,2MAhiBXjhD,MAAQ,CACJkhD,gBAAiB,EACjBC,kBAAmB,EACnBC,oBAAqB,EACrBC,oBAAqB,EACrBC,aAAc,KACdj0C,mBAAoB,GACpBsG,MAAOkQ,OAAOo7B,WAAa,IAC3BrtB,UAAU,EACVkmB,YAAa,EACbhwB,cAAe,G,EAkBnBo3B,mBAAqB,EAAKC,SAAS,EAAKC,iBAAkB,K,EAyK1DmC,mBAAqB,SAAC1gD,GAClB,EAAKN,SAAS,CAAE+gD,aAAczgD,K,wEAzLzBy+C,EAAMC,EAAMC,GAAY,IACzB11C,EADwB,mBAE5B,OAAO,WACH,IAAIb,EAAU,EAAMw2C,EAAOC,EAKvBC,EAAUH,IAAc11C,EAC5B81C,aAAa91C,GACbA,EAAU+1C,YANE,WACR/1C,EAAU,KACL01C,GAAWF,EAAKQ,MAAM72C,EAASw2C,KAIZF,GACxBI,GAASL,EAAKQ,MAAM72C,EAASw2C,M,0CAMpB,IAAD,EACwBn/C,KAAKI,MAArC05C,EADQ,EACRA,gBAAiB33C,EADT,EACSA,WACzBnC,KAAKkhD,qBAAqB3iB,GAAUub,EAAiB33C,IACrDohB,OAAOw7B,iBAAiB,SAAU/+C,KAAK4+C,oBACvC5+C,KAAKC,SAAS,CAAEu3C,YAAasC,EAAiBtyB,cAAerlB,M,2CAG3C,IAAD,EACuBnC,KAAKI,MAArC05C,EADS,EACTA,gBAAiB33C,EADR,EACQA,WADR,EAEsBnC,KAAKN,MAApC83C,EAFS,EAETA,YAAahwB,EAFJ,EAEIA,cACjBsyB,IAAoBtC,GAAer1C,IAAeqlB,IAClDxnB,KAAKC,SAAS,CAAEu3C,YAAasC,EAAiBtyB,cAAerlB,IACrC,IAApB23C,EACA95C,KAAKkhD,qBAAqB3iB,GAAUub,EAAiB33C,IAC1B,IAApB23C,EACP95C,KAAKmhD,uBAAuB5iB,GAAUub,EAAiB33C,IAC5B,IAApB23C,EACP95C,KAAKohD,yBAAyB7iB,GAAUub,EAAiB33C,IAC9B,IAApB23C,GACP95C,KAAKqhD,yBAAyB9iB,GAAUub,EAAiB33C,O,6CAMjEohB,OAAOk8B,oBAAoB,SAAUz/C,KAAK4+C,sB,yCAI1C5+C,KAAKC,SAAS,CAAEoT,MAAOkQ,OAAOo7B,WAAa,Q,uCAG9B11C,EAAW41B,EAASP,GAAW,IAAD,Q3E2rC5C,SAAmCl4B,EAAO6C,EAAWC,GAC1D,OAAO7C,IAAMC,IAAI,uCAAyCF,EAAQ,IAAM6C,EAAY,IAAMC,I2E3rCpFgB,CAAsCo0B,EAAUr1B,EAAW41B,GACtD10B,MAAK,SAAAtF,GACF,EAAK5E,SAAS,CACV8M,mBAAoBlI,EAAKA,UAGhC0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI+G,GACZ,EAAKvK,SAAS,CACV8M,mBAAoB,Y,0CAsCf,IAAD,OACZiyB,EAAY,GAChB,GAAmC,IAA/Bh/B,KAAKI,MAAM05C,gBACX,IADmC,IAAD,WACzBt3C,GACL,IAAMoN,EAASpN,EAAQ,EACnBoN,IAAW,EAAKlQ,MAAMkhD,gBACtB5hB,EAAU94B,KAAK,yBAAKhG,IAAKsC,EAAO7B,MAAO,CAAE0S,MAAO,OAAQtS,OAAQ,OAAQ2X,OAAQ,mCAAqCjF,QAAS,kBAAM,EAAKytC,qBAAqBtxC,OAE7JovB,EAAU94B,KAAK,yBAAKhG,IAAKsC,EAAO7B,MAAO,CAAE0S,MAAO,OAAQtS,OAAQ,QAAU0S,QAAS,kBAAM,EAAKytC,qBAAqBtxC,QALnHpN,EAAQ,EAAGA,EAAQ,GAAIA,IAAU,EAAjCA,GAQb,GAAmC,IAA/BxC,KAAKI,MAAM05C,gBACX,IADmC,IAAD,WACzBt3C,GACL,IAAMoN,EAASpN,EAAQ,EACnBoN,IAAW,EAAKlQ,MAAMmhD,kBACtB7hB,EAAU94B,KAAK,yBAAKhG,IAAKsC,EAAO7B,MAAO,CAAE0S,MAAO,OAAQtS,OAAQ,OAAQ2X,OAAQ,mCAAqCjF,QAAS,kBAAM,EAAK0tC,uBAAuBvxC,OAE/JovB,EAAU94B,KAAK,yBAAKhG,IAAKsC,EAAO7B,MAAO,CAAE0S,MAAO,OAAQtS,OAAQ,QAAU0S,QAAS,kBAAM,EAAK0tC,uBAAuBvxC,QALrHpN,EAAQ,EAAGA,EAAQ,GAAIA,IAAU,EAAjCA,GAQb,GAAmC,IAA/BxC,KAAKI,MAAM05C,gBACX,IADmC,IAAD,WACzBt3C,GACL,IAAMoN,EAASpN,EAAQ,EACnBoN,IAAW,EAAKlQ,MAAMohD,oBACtB9hB,EAAU94B,KAAK,yBAAKhG,IAAKsC,EAAO7B,MAAO,CAAE0S,MAAO,OAAQtS,OAAQ,OAAQ2X,OAAQ,mCAAqCjF,QAAS,kBAAM,EAAK2tC,yBAAyBxxC,OAEjKovB,EAAU94B,KAAK,yBAAKhG,IAAKsC,EAAO7B,MAAO,CAAE0S,MAAO,OAAQtS,OAAQ,QAAU0S,QAAS,kBAAM,EAAK2tC,yBAAyBxxC,QALvHpN,EAAQ,EAAGA,EAAQ,GAAIA,IAAU,EAAjCA,GAQb,GAAmC,IAA/BxC,KAAKI,MAAM05C,gBACX,IADmC,IAAD,WACzBt3C,GACL,IAAMoN,EAASpN,EAAQ,EACnBoN,IAAW,EAAKlQ,MAAMqhD,oBACtB/hB,EAAU94B,KAAK,yBAAKhG,IAAKsC,EAAO7B,MAAO,CAAE0S,MAAO,OAAQtS,OAAQ,OAAQ2X,OAAQ,mCAAqCjF,QAAS,kBAAM,EAAK4tC,yBAAyBzxC,OAEjKovB,EAAU94B,KAAK,yBAAKhG,IAAKsC,EAAO7B,MAAO,CAAE0S,MAAO,OAAQtS,OAAQ,QAAU0S,QAAS,kBAAM,EAAK4tC,yBAAyBzxC,QALvHpN,EAAQ,EAAGA,EAAQ,GAAIA,IAAU,EAAjCA,GAQb,OAAOw8B,I,2CAGUpvB,GAAS,IAClBzN,EAAenC,KAAKI,MAApB+B,WAEFm/C,EADK1+C,IAAOT,GAAYa,UAAa,OAAwB,MACpC,GAAT4M,EAAc,GAAK,IACnC0pC,EAAYgI,EAAU,KACtBvlB,EAAQn5B,IAAO02C,GAAW5qC,OAAO,kBACjCstB,EAAMp5B,IAAO0+C,GAAS5yC,OAAO,kBAC7B4vB,EAAWt+B,KAAKI,MAAMqe,SAASpX,MAAMtF,WAAWe,OACtD9C,KAAKC,SAAS,CAAE2gD,gBAAiBhxC,IACjC5P,KAAKoJ,iBAAiB2yB,EAAOC,EAAKsC,K,6CAEf1uB,GAAS,IACpBzN,EAAenC,KAAKI,MAApB+B,WAEFm/C,EADK1+C,IAAOT,GAAYa,UAAa,OAAwB,OACnC,EAAT4M,EAAc,GAAK,GAAK,IACzC0pC,EAAYgI,EAAW,MACvBvlB,EAAQn5B,IAAO02C,GAAW5qC,OAAO,kBACjCstB,EAAMp5B,IAAO0+C,GAAS5yC,OAAO,kBAC7B4vB,EAAWt+B,KAAKI,MAAMqe,SAASpX,MAAMtF,WAAWe,OACtD9C,KAAKC,SAAS,CAAE4gD,kBAAmBjxC,IACnC5P,KAAKoJ,iBAAiB2yB,EAAOC,EAAKsC,K,+CAGb1uB,GAAS,IACtBzN,EAAenC,KAAKI,MAApB+B,WAEFm/C,EADK1+C,IAAOT,GAAYa,UAAa,OAAwB,OACnC,EAAT4M,EAAc,GAAK,GAAK,IACzC0pC,EAAYgI,EAAW,MACvBvlB,EAAQn5B,IAAO02C,GAAW5qC,OAAO,kBACjCstB,EAAMp5B,IAAO0+C,GAAS5yC,OAAO,kBAC7B4vB,EAAWt+B,KAAKI,MAAMqe,SAASpX,MAAMtF,WAAWe,OACtD9C,KAAKC,SAAS,CAAE6gD,oBAAqBlxC,IACrC5P,KAAKoJ,iBAAiB2yB,EAAOC,EAAKsC,K,+CAEb1uB,GAAS,IACtBzN,EAAenC,KAAKI,MAApB+B,WAEFm/C,EADK1+C,IAAOT,GAAYa,UAAa,OAAwB,QACnC,GAAT4M,EAAe,GAAK,GAAK,IAC1C0pC,EAAYgI,EAAW,MACvBvlB,EAAQn5B,IAAO02C,GAAW5qC,OAAO,kBACjCstB,EAAMp5B,IAAO0+C,GAAS5yC,OAAO,kBAC7B4vB,EAAWt+B,KAAKI,MAAMqe,SAASpX,MAAMtF,WAAWe,OACtD9C,KAAKC,SAAS,CAAE8gD,oBAAqBnxC,IACrC5P,KAAKoJ,iBAAiB2yB,EAAOC,EAAKsC,K,+BAM5B,IAAD,OAsCL,SAASe,EAAgB9+B,GACrB,YAAcuB,IAAVvB,GAAiC,OAAVA,EAChB,KAEJA,EA8BX,SAAS4xB,EAAW5xB,EAAOqvB,EAAOD,GAC9B,QAAIpvB,EAAQqvB,GAASrvB,EAAQovB,GAYd+iB,KAAXD,OArFH,IA8EgBlyC,EAQbwL,EAAW/L,KAAKI,MAAhB2L,OACF4zB,EA1CN,SAA2B9D,EAAY1yB,GACnC,IAAM6yB,EAAMH,EAAc,OAC1B,OAAiB,IAAb1yB,EACO,CACHF,UAAW+yB,EAAO,MAClB9yB,QAAS8yB,GAGA,IAAb7yB,EACO,CACHF,UAAW+yB,EAAO,OAClB9yB,QAAS8yB,GAGA,IAAb7yB,EACO,CACHF,UAAW+yB,EAAO,OAClB9yB,QAAS8yB,GAIN,CACH/yB,UAAW+yB,EAAO,QAClB9yB,QAAS8yB,GAmBDulB,CAAkBvhD,KAAKI,MAAM+B,WAAYnC,KAAKI,MAAM05C,iBAClExa,EAvFN,SAA2B/+B,GACvB,SAASg/B,EAAW1Z,EAAUphB,GAC1B,IAAM+6B,EAAa3Z,EAASrhB,QAAO,SAAUjE,EAAOiC,EAAO6H,GACvD,OAAO9J,EAAMkE,OAASA,KAE1B,OAA0B,IAAtB+6B,EAAW/8B,OACJ,KAEJ+8B,EAAW,GAAGC,IAEzB,YAAc39B,IAAVvB,GAAiC,OAAVA,EAChB,CACH6O,GAAI,KACJK,GAAI,KACJC,GAAI,KACJL,KAAM,KACNjB,KAAM,KACNI,KAAM,KACNF,KAAM,KACNkkB,KAAM,KACND,KAAM,KACNd,KAAM,MAGP,CACHriB,GAAImwB,EAAWh/B,EAAO,MACtBkP,GAAI8vB,EAAWh/B,EAAO,MACtBmP,GAAI6vB,EAAWh/B,EAAO,MACtB8O,KAAMkwB,EAAWh/B,EAAO,QACxB6N,KAAMmxB,EAAWh/B,EAAO,QACxBiO,KAAM+wB,EAAWh/B,EAAO,QACxB+N,KAAMixB,EAAWh/B,EAAO,QACxBkxB,KAAM8N,EAAWh/B,EAAO,QACxBgyB,KAAMgN,EAAWh/B,EAAO,QACxBiyB,KAAM+M,EAAWh/B,EAAO,SAqDZm/B,CAAkB1/B,KAAKN,MAAMqN,oBACzCsG,EAAUrT,KAAKN,MAAf2T,MACFrO,EAAShF,KAAKN,MAAM4xB,SAC1B,OACI,6BACI,yBAAK3wB,MAAO,CAAEoV,gBAAiB,YAAa4N,oBAAqB,MAAOC,qBAAsB,MAAO7iB,OAAQ,OAAQmU,QAAS,WAAYtU,QAAS,OAAQC,WAAY,SAAUmZ,UAAW,SACxL,wBAAIrZ,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBAAtC,4BAKA,yBAAKxO,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaw0B,QAAS,MAAO10B,WAAY,SACzF,yBAAKK,UAAuC,OAA5BnB,KAAKN,MAAMshD,aAAwB,iBAAmB,uBAAwBrgD,MAAO,CAAEuO,YAAa,OAASuE,QAAS,kBAAM,EAAKwtC,mBAAmB,QAApK,kCAGA,yBAAK9/C,UAAuC,QAA5BnB,KAAKN,MAAMshD,aAAyB,iBAAmB,uBAAwBvtC,QAAS,kBAAM,EAAKwtC,mBAAmB,SAAtI,yCAKAjhD,KAAKI,MAAMohD,cAAgB,KAEvB,yBAAK7gD,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,sBAAuBw0B,QAAS,MAAO10B,WAAY,SACnG,yBAAKK,UAA0C,IAA/BnB,KAAKI,MAAM05C,gBAAwB,mBAAqB,yBAA0Bn5C,MAAO,CAAEuO,YAAa,OAASuE,QAAS,kBAAM,EAAKrT,MAAMqhD,eAAe,KAA1K,4BAGA,yBAAKtgD,UAA0C,IAA/BnB,KAAKI,MAAM05C,gBAAwB,mBAAqB,yBAA0Bn5C,MAAO,CAAEuO,YAAa,OAASuE,QAAS,kBAAM,EAAKrT,MAAMqhD,eAAe,KAA1K,4BAGA,yBAAKtgD,UAA0C,IAA/BnB,KAAKI,MAAM05C,gBAAwB,mBAAqB,yBAA0Bn5C,MAAO,CAAEuO,YAAa,OAASuE,QAAS,kBAAM,EAAKrT,MAAMqhD,eAAe,KAA1K,4BAGA,yBAAKtgD,UAA0C,IAA/BnB,KAAKI,MAAM05C,gBAAwB,mBAAqB,yBAA0BrmC,QAAS,kBAAM,EAAKrT,MAAMqhD,eAAe,KAA3I,8BAOhB,yBAAKtgD,UAAU,iBACX,yBAAKR,MAAO,CAAEC,QAAS,OAAQsV,iBAA8C,OAA5BlW,KAAKN,MAAMshD,aAAwB,kBAAoB,oBAEpG,yBAAK7/C,UAAU,wBAAwBR,MAAO,CAAEoV,gBAAiB/Q,EAAS,QAAUf,EAAW,QAC3F,wBAAItD,MAAO,CAAEwO,MAAOnK,EAASf,EAAW,MAAQ,UAAhD,MACA,wBAAItD,MAAO,CAAE0xB,WAAY,OAAQljB,MAAOnK,EAASf,EAAW,MAAQ,UAAYo7B,EAAgBC,EAAYlwB,MAIhF,OAA5BpP,KAAKN,MAAMshD,aACP,yBAAK7/C,UAAU,wBAAwBR,MAAO,CAAEoV,gBAAiB/Q,EAAS,QAAUf,EAAW,QAC3F,yBAAK9C,UAAU,4BAA4BR,MAAO,CAAEwO,MAAOnK,EAASf,EAAW,MAAQ,UACnF,mCACA,uCAEJ,yBAAK9C,UAAU,4BACX,wBAAIR,MAAO,CAAEwO,MAAOnK,EAASf,EAAW,MAAQ,UAAYo7B,EAAgBC,EAAY/M,MAAxF,IAAgG8M,EAAgBC,EAAY7N,OAC5H,wBAAI9wB,MAAO,CAAEwO,MAAOnK,EAASf,EAAW,MAAQ,UAAhD,IAA6Do7B,EAAgBC,EAAY9M,MAAzF,OAGR,KAIR,yBAAKrxB,UAAU,wBAAwBR,MAAO,CAAEoV,gBAAiB/Q,EAAS,QAAUf,EAAW,QAC3F,yBAAK9C,UAAU,4BAA4BR,MAAO,CAAEwO,MAAOnK,EAASf,EAAW,MAAQ,UACnF,4BAAiC,OAA5BjE,KAAKN,MAAMshD,aAAwB,MAAQ,MAChD,uCAEJ,yBAAK7/C,UAAU,4BACX,wBAAIR,MAAO,CAAEwO,MAAOnK,EAASf,EAAW,MAAQ,UAAYo7B,EAAgBC,EAAYhxB,MAAxF,IAAgG+wB,EAAgBC,EAAYlxB,OAC5H,wBAAIzN,MAAO,CAAEwO,MAAOnK,EAASf,EAAW,MAAQ,UAAhD,IAA6Do7B,EAAgBC,EAAY9wB,MAAzF,OAGR,yBAAKrN,UAAU,wBAAwBR,MAAO,CAAEoV,gBAAiBoc,EAAWmN,EAAYjwB,KAAM,IAAK,IAAM,QAAUpL,EAAW,UAC1H,yBAAK9C,UAAU,4BAA4BR,MAAO,CAAEwO,MAAOgjB,EAAWmN,EAAYjwB,KAAM,IAAK,IAAMpL,EAAW,QAAU,UACpH,kCAAO,mCACP,oCAEJ,wBAAItD,MAAO,CAAE0xB,WAAY,OAAQljB,MAAOgjB,EAAWmN,EAAYjwB,KAAM,IAAK,IAAMpL,EAAW,QAAU,UAAYo7B,EAAgBC,EAAYjwB,MAA7I,MAEJ,yBAAKlO,UAAU,wBAAwBR,MAAO,CAAEoV,gBAAiBoc,EAAWmN,EAAY5vB,GAAI,GAAI,IAAM,QAAUzL,EAAW,QACvH,yBAAK9C,UAAU,4BAA4BR,MAAO,CAAEwO,MAAOgjB,EAAWmN,EAAY5vB,GAAI,GAAI,IAAMzL,EAAW,MAAQ,UAC/G,mCAEJ,wBAAItD,MAAO,CAAE0xB,WAAY,OAAQljB,MAAOgjB,EAAWmN,EAAY5vB,GAAI,GAAI,IAAMzL,EAAW,MAAQ,UA7FlG,QADG1D,EA8FuH++B,EAAY5vB,UA7FpH5N,IAAVvB,GAAiC,KAAVA,EAClC,KAEJA,IA4FK,yBAAKY,UAAU,wBAAwBR,MAAO,CAAEoV,gBAAiBoc,EAAWmN,EAAY7vB,GAAI,GAAI,IAAM,QAAUxL,EAAW,QACvH,yBAAK9C,UAAU,4BAA4BR,MAAO,CAAEwO,MAAOgjB,EAAWmN,EAAY7vB,GAAI,GAAI,IAAMxL,EAAW,MAAQ,UAC/G,kCAAO,mCACP,oCAEJ,wBAAItD,MAAO,CAAE0xB,WAAY,OAAQljB,MAAOgjB,EAAWmN,EAAY7vB,GAAI,GAAI,IAAMxL,EAAW,MAAQ,UAAYo7B,EAAgBC,EAAY7vB,OAKhJ,yBAAK9O,MAAO,CAAEwU,SAAU,aAEY,OAA5BnV,KAAKN,MAAMshD,aACP,yBAAKrgD,MAAO,CAAEwU,SAAU,WAAYpU,OAAoC,OAA5Bf,KAAKN,MAAMshD,aAAwB,IAAM,IAAK3tC,MAAOA,EAAQ,GAAIusB,IAAK,EAAGC,KAAM,KACvH,yBAAKl/B,MAAO,CAAEC,QAAS,OAAQG,OAAQ,OAAQC,oBAAqB,UAAYo/C,GAAcpgD,KAAKI,MAAM05C,iBAAmB,UACvH95C,KAAK0hD,sBAGd,KAGR,kBAAC,GAAD,CACIvkB,OAAQ,OACRtP,IAAK7tB,KAAKI,MAAMqe,SAAS6J,OACzBza,IAAK7N,KAAKI,MAAMqe,SAASpX,MACzBlF,WAAYnC,KAAKI,MAAM+B,WACvBs5B,OAAQ,UAAY1vB,EACpBwV,OAAQ,SAAWxV,EACnBtH,KAAM,KACNsH,OAAQ/L,KAAKN,MAAMshD,aACnB/3C,UAAW02B,EAAY12B,UACvBC,QAASy2B,EAAYz2B,QACrBnI,OAAQ,GACRsS,MAAOA,EACPlK,SAAUnJ,KAAKI,MAAM05C,gBACrBnqB,MAAO,IACPC,MAAO,IACPtB,SAAS,EACTD,SAAS,EACTE,YAAY,UACZkE,YAAa,0BACbhS,IAAK,EACLC,IAAK,MAGuB,OAA5B1gB,KAAKN,MAAMshD,aACP,kBAAC,GAAD,CACI7jB,OAAQ,OACRtP,IAAK7tB,KAAKI,MAAMqe,SAAS6J,OACzBza,IAAK7N,KAAKI,MAAMqe,SAASpX,MACzBlF,WAAYnC,KAAKI,MAAM+B,WACvBs5B,OAAQ,UAAY1vB,EACpBwV,OAAQ,SAAWxV,EACnBtH,KAAM,MACNsH,OAAQ/L,KAAKN,MAAMshD,aACnB/3C,UAAW02B,EAAY12B,UACvBC,QAASy2B,EAAYz2B,QACrBnI,OAAQ,GACRsS,MAAOA,EACPlK,SAAUnJ,KAAKI,MAAM05C,gBACrBnqB,MAAO,GACPC,MAAO,GACPtB,SAAS,EACTD,SAAS,EACTE,YAAa,UACbkE,YAAa,0BACbhS,IAAK,EACLC,IAAK,MAET,KAER,kBAAC,GAAD,CACIyc,OAAQ,OACRtP,IAAK7tB,KAAKI,MAAMqe,SAAS6J,OACzBza,IAAK7N,KAAKI,MAAMqe,SAASpX,MACzBlF,WAAYnC,KAAKI,MAAM+B,WACvBs5B,OAAQ,UAAY1vB,EACpBwV,OAAQ,SAAWxV,EACnBtH,KAAM,MACNsH,OAAQ/L,KAAKN,MAAMshD,aACnB/3C,UAAW02B,EAAY12B,UACvBC,QAASy2B,EAAYz2B,QACrBnI,OAAQ,GACRsS,MAAOA,EACPlK,SAAUnJ,KAAKI,MAAM05C,gBACrBnqB,MAAO,GACPC,MAAO,GACPtB,SAAS,EACTD,SAAS,EACTE,YAAa,UACbkE,YAAa,0BACbhS,IAAK,EACLC,IAAK,MAET,kBAAC,GAAD,CACIyc,OAAQ,OACRtP,IAAK7tB,KAAKI,MAAMqe,SAAS6J,OACzBza,IAAK7N,KAAKI,MAAMqe,SAASpX,MACzBlF,WAAYnC,KAAKI,MAAM+B,WACvBs5B,OAAQ,YAAc1vB,EACtBwV,OAAQ,WAAaxV,EACrBtH,KAAM,OACNwE,UAAW02B,EAAY12B,UACvBC,QAASy2B,EAAYz2B,QACrBnI,OAAQ,GACRsS,MAAOA,EACPlK,SAAUnJ,KAAKI,MAAM05C,gBACrBnqB,MAAO,GACPC,MAAO,IACPtB,SAAS,EACTD,SAAS,EACTE,YAAa,UACbkE,YAAa,UACbhS,IAAK,GACLC,IAAK,IACL3U,OAAQ/L,KAAKN,MAAMshD,eAEvB,kBAAC,GAAD,CACI7jB,OAAQ,OACRtP,IAAK7tB,KAAKI,MAAMqe,SAAS6J,OACzBza,IAAK7N,KAAKI,MAAMqe,SAASpX,MACzBlF,WAAYnC,KAAKI,MAAM+B,WACvBs5B,OAAQ,UAAY1vB,EACpBwV,OAAQ,SAAWxV,EACnBtH,KAAM,KACNwE,UAAW02B,EAAY12B,UACvBC,QAASy2B,EAAYz2B,QACrB6C,OAAQ/L,KAAKN,MAAMshD,aACnBjgD,OAAQ,GACRsS,MAAOA,EACPlK,SAAUnJ,KAAKI,MAAM05C,gBACrBnqB,MAAO,GACPC,MAAO,GACPtB,SAAS,EACTD,SAAS,EACTE,YAAa,UACbkE,YAAa,0BACbhS,IAAK,GACLC,IAAK,KAET,kBAAC,GAAD,CACIyc,OAAQ,OACRtP,IAAK7tB,KAAKI,MAAMqe,SAAS6J,OACzBza,IAAK7N,KAAKI,MAAMqe,SAASpX,MACzBlF,WAAYnC,KAAKI,MAAM+B,WACvBs5B,OAAQ,UAAY1vB,EACpBwV,OAAQ,SAAWxV,EACnBtH,KAAM,KACNwE,UAAW02B,EAAY12B,UACvBC,QAASy2B,EAAYz2B,QACrBnI,OAAQ,GACRsS,MAAOA,EACPlK,SAAUnJ,KAAKI,MAAM05C,gBACrBnqB,MAAO,GACPC,MAAO,GACPtB,SAAS,EACTD,SAAS,EACTE,YAAa,UACbkE,YAAa,0BACbhS,IAAK,EACLC,IAAK,IACL3U,OAAQ/L,KAAKN,MAAMshD,sB,GAxhBlBxhD,aC6KdmiD,G,2MA5MXjiD,MAAQ,CACJsgC,cAAc,EACd4U,WAAY,CAAC,EAAG,EAAG,EAAG,GACtB1U,YAAa,EACb/9B,WAAYS,IAAOA,MAAS8L,OAAO,YAAa,YAAY1L,UAC5D82C,gBAAiB,EACjB8H,aAAc,G,EAElBC,cAAgB,SAAClhB,GACb,EAAK1gC,SAAS,CAAE20C,WAAYjU,K,EAQhCJ,eAAiB,SAACC,GACd,GAAIA,EAAY,CACZ,IAAIC,EAAgB7qB,SAASC,eAAe2qB,GACxCC,GAAiBA,EAAcC,mB,EAS3CvtB,SAAW,SAAC9P,EAAMu1B,GAEd,EAAK34B,SACD,CACIkC,WAAYkB,EAAKL,a,EAI7By+C,eAAiB,SAAClhD,GACd,EAAKN,SACD,CACI65C,gBAAiBv5C,K,EAK7Byb,SAAW,SAAC1K,GAAO,IACPmN,EAAa,EAAKre,MAAlBqe,SACAtc,EAAe,EAAKzC,MAApByC,WACF0+B,EAAOpiB,EAASQ,aAAa6hB,SAC7BC,EAAWn+B,IAAOA,IAAOi+B,GAAMnyB,OAAO,aAAa1L,UAIzD,OAAQsO,EAAE+F,OAAO9W,OACb,IAAK,IACD,IAAM0b,EAAQ9Z,EAJV,MAMJ4+B,GADcn+B,IAAOA,IAAOqZ,GAAOvN,OAAO,aAAa1L,WAClC,EAAKmQ,SAASvQ,IAAOqZ,IAC1C,MACJ,IAAK,IACD,IAAMC,EAAQtZ,IAAOA,MAAS8L,OAAO,aACrC,EAAKyE,SAAS+I,GACd,MACJ,IAAK,IACD,IAAMC,EAAQha,EAbV,MAeJga,GADcvZ,IAAOA,MAAS8L,OAAO,aAAa1L,WAChC,EAAKmQ,SAASvQ,IAAOuZ,M,8EArD/Cnc,KAAKC,SAAS,CACV+/B,cAAehgC,KAAKN,MAAMsgC,iB,uCASjBx9B,GACb,OAAIA,IAAUxC,KAAKN,MAAMwgC,c,mCAiDhBtwB,GAKT,OAJa5P,KAAKN,MAAMk1C,WACNvpC,MAAK,SAAUF,EAAM3I,EAAOyD,GAC1C,OAAOkF,IAASyE,O,+BAKd,IAAD,UACc8iC,KAAXD,OAEqBzyC,KAAKI,OAA1Bqe,EAHH,EAGGA,SAAUzZ,EAHb,EAGaA,OAQZg8B,EAAY,CACdC,cAAe,CAAExhB,aAAc,MAAOtQ,MAAO,YAAauJ,OAAQ,sBAAuBxD,QAAS,UAAWnU,OAAQ,SAGrH+gD,EATA,CAAC,CAAE,KAAQ,2BAAQ,YAAe,sBAClC,CAAE,KAAQ,qBAAO,YAAe,wBAChC,CAAE,KAAQ,eAAM,YAAe,eAC/B,CAAE,KAAQ,2BAAQ,YAAe,kBAMAp1C,KACjC,SAACvB,EAAM3I,GAAP,OAAiB,kBAAC,KAAD,CAAQiR,QAAS,EAAK8sB,eAAevpB,KAAK,EAAM7L,EAAK22B,aAAc5hC,IAAKsC,EAAO7B,MAAOqgC,EAAUC,eAC7G,4BAAK91B,EAAK0G,UAGZqvB,EAAgB,CAClBC,aAAc,CAAEhsB,SAAU,WAAYisB,MAAO,MAAOxB,IAAK,OAAQvsB,MAAO,QAASguB,WAAY,QAASC,UAAW,eAAgBC,OAAQ,MAAO9hB,aAAc,OAC9J+hB,iBAAkB,CAAE5gC,QAAS,QAC7B6gC,WAAY,CAAE7gC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,UACrE6gC,WAAW,cAAGxsB,QAAS,MAAO7B,MAAO,QAASoM,aAAc,MAAOrF,YAAa,sBAAuBF,YAAa,QAASC,YAAa,MAAOrZ,WAAY,QAAnJ,eAAyK,QAEvL,OACI,yBAAKH,MAAO,CAAE2c,YAAa,OAAQgV,aAAc,SAC7C,yBAAK3xB,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,gBAAiB3S,WAAY,SAAUE,OAAQ,SAC1F,yBAAKJ,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,QAC9E,kBAAC,KAAD,CAAYqV,qBAAsB,SAAAC,GAAW,OAAIA,EAAYC,YAAYwiB,OAAQA,KAAQxb,aAAc,SAACC,GAAc,OAAOA,EAAU7a,MAAS8a,QAAQ,QAAUD,EAAU7a,IAAO6b,EAASQ,aAAa6hB,SAAS/+B,WAAY,YAAYigC,SAAW7uB,SAAUnT,KAAKmT,SAAU5S,MAAOqC,IAAO5C,KAAKN,MAAMyC,YAAawb,YAAY,IAChU,yBAAKhd,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,MAAOH,WAAY,SACjG,kBAAC,KAAD,CAAQP,MAAM,IAAIqd,MAAM,SAASC,KAAK,cAAcpK,QAASzT,KAAKgc,WAClE,kBAAC,KAAD,CAAQzb,MAAM,IAAIqd,MAAM,SAASC,KAAK,eAAepK,QAASzT,KAAKgc,WACnE,kBAAC,KAAD,CAAQzb,MAAM,IAAIqd,MAAM,SAASC,KAAK,eAAepK,QAASzT,KAAKgc,aAG3E,yBAAKrb,MAAO,CAAE4O,SAAU,SAAxB,6BACWye,EAA2BhpB,EAAOpD,KAAMoD,EAAOnD,KAD1D,IACgE,0BAAMlB,MAAO,CAAE2O,WAAY,MAAOH,MAAO,UAAY6e,EAAqChpB,EAAQhF,KAAKN,MAAMyC,cAE7K,yBAAKxB,MAAO,CAAE4O,SAAU,SAAxB,6BACWye,EAAsBhpB,EAAOZ,YAAY,0BAAMzD,MAAO,CAAE2O,WAAY,MAAOH,MAAO,UAAY6e,EAA2BvP,EAASmjB,OAAQ5hC,KAAKN,MAAMyC,YAA5G,MAEpD,yBAAKxB,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUsU,SAAU,aAC3D,8DACA,yBAAKxU,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,iBAAkBC,cAAe,QAAU6gD,GAC/F,yBAAKruC,QAAS,kBAAM,EAAKyuB,gBAAgBvhC,MAAO,CAAE6T,OAAQ,UAAW1T,WAAY,QAC7E,yBAAKO,IAAK0gD,KAAYxgD,IAAI,aAAaZ,MAAO,CAAE0S,MAAO,OAAQtS,OAAQ,WAE3E,yBAAKJ,MAAOX,KAAKN,MAAMsgC,aAAekB,EAAcC,aAAeD,EAAcM,kBAC7E,wBAAIrgC,UAAU,sBAAd,4BACA,yBAAKR,MAAO,CAAEqZ,UAAW,OAAQ+K,aAAc,SAC3C,kBAAC,KAAS8T,MAAV,CAAgB3lB,aAAclT,KAAKN,MAAMk1C,WAAYx+B,GAAI,iBAAkBzV,MAAO,CAAE0S,MAAO,OAAQzS,QAAS,OAAQsV,iBAAkB,gBAAiBC,WAAY,OAAShD,SAAUnT,KAAK6hD,eACvL,yBAAKlhD,MAAOugC,EAAcO,YACtB,kBAAC,KAAD,CAAUlhC,MAAO,IACjB,wBAAII,MAAOugC,EAAcQ,YAAzB,6BAMJ,yBAAK/gC,MAAOugC,EAAcO,YACtB,kBAAC,KAAD,CAAUlhC,MAAO,IACjB,wBAAII,MAAOugC,EAAcQ,YAAzB,uBAMJ,yBAAK/gC,MAAOugC,EAAcO,YACtB,kBAAC,KAAD,CAAUlhC,MAAO,IACjB,wBAAII,MAAOugC,EAAcQ,YAAzB,iBAEJ,yBAAK/gC,MAAOugC,EAAcO,YACtB,kBAAC,KAAD,CAAUlhC,MAAO,IACjB,wBAAII,MAAOugC,EAAcQ,YAAzB,kCAOxB,yBAAK/gC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaD,OAAQ,OAAQiZ,UAAW,SACxF,8BACA,kBAAC,GAAD,CAAe0G,IAAK,IAAKD,IAAK,EAAGq5B,gBAAiB95C,KAAKN,MAAMo6C,gBAAiB6F,YAAa3/C,KAAKN,MAAMyC,WAAYof,OAAO,oBAAoBka,OAAO,2BAExJ,yBAAK96B,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,WAAYD,OAAQ,OAAQqS,OAAQ,aACpF,8BACA,kBAAC,GAAD,CAAYsN,IAAK,IAAKD,IAAK,EAAGq5B,gBAAiB95C,KAAKN,MAAMo6C,gBAAiB6F,YAAa3/C,KAAKN,MAAMyC,WAAYof,OAAO,gBAAgBka,OAAO,uBAEjJ,yBAAKt6B,UAAU,cACf,yBAAKA,UAAU,iBAEX,yBAAKiV,GAAG,qBAAqBzV,MAAO,CAAEC,QAASZ,KAAK61C,aAAa,GAAK,QAAU,SAC5E,kBAAC,GAAD,CAAgB9pC,OAAQ,UAAW5J,WAAYnC,KAAKN,MAAMyC,WAAY23C,gBAAiB95C,KAAKN,MAAMo6C,gBAAiBr7B,SAAUA,EAAUta,MAAM,QAAQs9C,eAAgBzhD,KAAKyhD,iBAC1K,kBAAC,GAAD,CAAWt/C,WAAYnC,KAAKN,MAAMyC,WAAY23C,gBAAiB95C,KAAKN,MAAMo6C,gBAAiBr7B,SAAUA,KAOzG,yBAAKrI,GAAG,uBAAuBzV,MAAO,CAAEC,QAASZ,KAAK61C,aAAa,GAAK,QAAU,SAC9E,kBAAC,GAAD,CAAgB1zC,WAAYnC,KAAKN,MAAMyC,WAAYmgC,OAAQ,UAAWG,eAAgBziC,KAAKN,MAAMo6C,gBAAiBr7B,SAAUA,EAAUta,MAAM,uBAC5I,kBAAC,GAAD,CAAiBhC,WAAYnC,KAAKN,MAAMyC,WAAYiS,OAAQpU,KAAKN,MAAM0U,OAAQ0lC,gBAAiB95C,KAAKN,MAAMo6C,gBAAiBr7B,SAAUA,EAAUta,MAAM,MAM1J,yBAAKiS,GAAG,cAAczV,MAAO,CAAEC,QAASZ,KAAK61C,aAAa,GAAK,QAAU,SACrE,kBAAC,GAAD,CAAY1zC,WAAYnC,KAAKN,MAAMyC,WAAY23C,gBAAiB95C,KAAKN,MAAMo6C,gBAAiBr7B,SAAUA,EAAUta,MAAM,kBAG1H,yBAAKiS,GAAG,gBAAgBzV,MAAO,CAAEC,QAASZ,KAAK61C,aAAa,GAAK,QAAU,SACvE,kBAAC,GAAD,CAAgB1zC,WAAYnC,KAAKN,MAAMyC,WAAY23C,gBAAiB95C,KAAKN,MAAMo6C,gBAAiBr7B,SAAUA,EAAUta,MAAM,oC,GArMpH3E,a,OC2BvB,SAASwiD,GAAahf,EAAKif,GAC9B,QAAI3/C,MAAMC,QAAQygC,IACCA,EAAIx+B,QAAO,SAAU4F,EAAM5H,EAAO6H,GAC7C,OAAOD,EAAKe,KAAKpJ,WAAWe,SAAWm/C,KAO5C,SAAS5c,GAAW7F,EAAYr9B,EAAY8/C,GAC/C,SAAS70B,EAAU7sB,GACf,YAAcuB,IAAVvB,GAAiC,OAAVA,GAA4B,IAAVA,EAClC,KAEJA,EAAMwB,WAAWe,OAE5B,IAAMk5B,EAAM75B,EAAc,OACpB45B,EAAQ55B,EAAc,MAC5B,GAAIG,MAAMC,QAAQi9B,GAAa,CAC3B,IAAMvD,EAAcuD,EAAWh7B,QAAO,SAAU4F,EAAM5H,EAAO6H,GACzD,IAAMzB,EAAOhG,IAAOwH,EAAKvH,QAAQd,WAAWe,OAASsH,EAAKrH,QAAQhB,WAAWe,OAAQ,gBAAgBE,UACrG,OAAO+4B,GAASnzB,GAAQA,GAAQozB,KAEpC,OAA2B,IAAvBC,EAAYx5B,OACL,KAEU,iBAAjBw/C,EACehmB,EAAYvvB,KAAI,SAAUtC,EAAM5H,EAAO6H,GAClD,IAAMlG,EAAQipB,EAAUhjB,EAAK83C,MAAQ,IAAM90B,EAAUhjB,EAAKm7B,KAAO,IAAMnY,EAAUhjB,EAAK+3C,KACtF,MAAO,CACHh+C,MAAOA,EACPi+C,QAASj+C,EACTzB,QAAS0H,MAKA,iBAAjB63C,EACehmB,EAAYvvB,KAAI,SAAUtC,EAAM5H,EAAO6H,GAClD,IAAMlG,EAAQipB,EAAUhjB,EAAK83C,MAAQ,IAAM90B,EAAUhjB,EAAKm7B,KAAO,IAAMnY,EAAUhjB,EAAK+3C,KACtF,MAAO,CACHh+C,MAAOA,EACPi+C,QAASj+C,EACTzB,QAAS0H,MAKA,iBAAjB63C,EACehmB,EAAYvvB,KAAI,SAAUtC,EAAM5H,EAAO6H,GAClD,IAAMlG,EAAQipB,EAAUhjB,EAAKm7B,KAAO,IAAMnY,EAAUhjB,EAAK27B,MACzD,MAAO,CACH5hC,MAAOA,EACPi+C,QAASj+C,EACTzB,QAAS0H,MAKA,iBAAjB63C,EACehmB,EAAYvvB,KAAI,SAAUtC,EAAM5H,EAAO6H,GAElD,MAAO,CACHlG,MAFU,eAGVi+C,QAHU,eAIV1/C,QAAS0H,MAKA,iBAAjB63C,EACehmB,EAAYvvB,KAAI,SAAUtC,EAAM5H,EAAO6H,GAElD,MAAO,CACHlG,MAFU,eAGVi+C,QAHU,eAIV1/C,QAAS0H,MAKA,iBAAjB63C,EACehmB,EAAYvvB,KAAI,SAAUtC,EAAM5H,EAAO6H,GAElD,MAAO,CACHlG,MAFU,eAGVi+C,QAHU,eAIV1/C,QAAS0H,MAKA,iBAAjB63C,EACehmB,EAAYvvB,KAAI,SAAUtC,EAAM5H,EAAO6H,GAClD,IAAMlG,EAAQipB,EAAUhjB,EAAK83C,MAAQ,IAAM90B,EAAUhjB,EAAK+3C,KAC1D,MAAO,CACHh+C,MAAOA,EACPi+C,QAASj+C,EACTzB,QAAS0H,MAKA,uBAAjB63C,EACehmB,EAAYvvB,KAAI,SAAUtC,EAAM5H,EAAO6H,GAElD,MAAO,CACHlG,MAFU,qBAGVi+C,QAHU,qBAIV1/C,QAAS0H,MAKA,uBAAjB63C,EACehmB,EAAYvvB,KAAI,SAAUtC,EAAM5H,EAAO6H,GAElD,MAAO,CACHlG,MAFU,qBAGVi+C,QAHU,qBAIV1/C,QAAS0H,MAKA,uBAAjB63C,EACehmB,EAAYvvB,KAAI,SAAUtC,EAAM5H,EAAO6H,GAElD,MAAO,CACHlG,MAFU,qBAGVi+C,QAHU,qBAIV1/C,QAAS0H,MAKA,uBAAjB63C,EACehmB,EAAYvvB,KAAI,SAAUtC,EAAM5H,EAAO6H,GAElD,MAAO,CACHlG,MAFU,qBAGVi+C,QAHU,qBAIV1/C,QAAS0H,MAKA,uBAAjB63C,EACehmB,EAAYvvB,KAAI,SAAUtC,EAAM5H,EAAO6H,GAElD,MAAO,CACHlG,MAFU,qBAGVi+C,QAHU,qBAIV1/C,QAAS0H,MAKA,uBAAjB63C,EACehmB,EAAYvvB,KAAI,SAAUtC,EAAM5H,EAAO6H,GAClD,IAAMlG,EAAQipB,EAAUhjB,EAAK83C,MAAQ,IAAM90B,EAAUhjB,EAAK+3C,KAC1D,MAAO,CACHh+C,MAAOA,EACPi+C,QAASj+C,EACTzB,QAAS0H,MAKA,uBAAjB63C,EACehmB,EAAYvvB,KAAI,SAAUtC,EAAM5H,EAAO6H,GAClD,IAAMlG,EAAQipB,EAAUhjB,EAAK83C,MAAQ,IAAM90B,EAAUhjB,EAAK+3C,KAC1D,MAAO,CACHh+C,MAAOA,EACPi+C,QAASj+C,EACTzB,QAAS0H,MAKA,UAAjB63C,EACehmB,EAAYvvB,KAAI,SAAUtC,EAAM5H,EAAO6H,GAElD,MAAO,CACHlG,MAFU,QAGVi+C,QAHU,QAIV1/C,QAAS0H,MAKA,gBAAjB63C,EACehmB,EAAYvvB,KAAI,SAAUtC,EAAM5H,EAAO6H,GAClD,IAAMlG,EAAQ,oBACd,MAAO,CACHA,MAAOA,EACPi+C,QAASj+C,EACTzB,QAAS0H,MAKA,iBAAjB63C,EACehmB,EAAYvvB,KAAI,SAAUtC,EAAM5H,EAAO6H,GAClD,IAAMlG,EAAQ,QAAUipB,EAAUhjB,EAAKi8B,UACvC,MAAO,CACHliC,MAAOA,EACPi+C,QAASj+C,EACTzB,QAAS0H,MAKd,KAEX,OAAO,KAGJ,SAASi4C,GAAWpJ,GACvB,GAAI32C,MAAMC,QAAQ02C,GAAY,CAQ1B,IAPA,IAAIjuC,EAASiuC,EAAUz0C,QAAO,SAAUjE,EAAOiC,EAAO6H,GAIlD,OAHYA,EAAIqC,KAAI,SAAUnM,EAAOiC,EAAO6H,GACxC,OAAO9J,EAAM6hD,WAEN12C,QAAQnL,EAAM6hD,WAAa5/C,KAEtC8/C,EAAU,GAPY,WAQjB9/C,GACL,IACM+/C,EADUv3C,EAAOxI,GACM4/C,QACvBI,EAAcvJ,EAAUz0C,QAAO,SAAUjE,EAAOiC,EAAO6H,GACzD,OAAO9J,EAAM6hD,UAAYG,KAE7BD,EAAQp8C,KAAKs8C,IANRhgD,EAAQ,EAAGA,EAAQwI,EAAOvI,OAAQD,IAAU,EAA5CA,GAQT,OAAO8/C,EAEX,OAAO,KAIJ,SAASG,GAAcC,EAAWvgD,EAAY8/C,GACjD,SAASU,EAAYV,GACjB,MAAqB,iBAAjBA,EACO,qBAEU,iBAAjBA,EACO,qBAEU,iBAAjBA,EACO,oBAEJ,qBAEX,SAASW,EAAsBX,GAC3B,MAAqB,iBAAjBA,EACO,qBAEU,iBAAjBA,EACO,qBAEU,iBAAjBA,EACO,qBAEJ,qBAEX,SAAS70B,EAAU7sB,GACf,YAAcuB,IAAVvB,GAAiC,OAAVA,GAA4B,IAAVA,GAAyB,KAAVA,EACjD,GAE4B,IAAnCA,EAAMwB,WAAW5B,MAAM,QAChB,GAEJI,EAAMwB,WAAWe,OAE5B,IAAMi5B,EAAQ55B,EAAc,MAC5B,SAAS0gD,EAAYZ,GACjB,MAAqB,iBAAjBA,EACO,GAEU,iBAAjBA,EACO,GAEU,UAAjBA,EACO,GAEU,gBAAjBA,EACO,GAGU,iBAAjBA,EACO,GAGJ,EAEX,SAASa,EAAWb,EAAcv/C,GAC9B,SAASqgD,EAASxiD,GACd,OAAc,OAAVA,QAA4BuB,IAAVvB,EACX,KAEJA,EAAMwB,WAAWe,OAE5B,GAAqB,iBAAjBm/C,EACA,OAAOriD,OAAO8C,EAAQ2jC,UAE1B,GAAqB,iBAAjB4b,EACA,OAAOriD,OAAO8C,EAAQ2jC,UAE1B,GAAqB,iBAAjB4b,EACA,OAAOriD,OAAO8C,EAAQwjC,UAE1B,GAAqB,iBAAjB+b,EACA,OAAOriD,OAAO8C,EAAQ+jC,UAE1B,GAAqB,iBAAjBwb,EACA,OAAOriD,OAAO8C,EAAQ+jC,UAE1B,GAAqB,iBAAjBwb,EACA,OAAOv/C,EAAQ+jC,SAAS1kC,WAAa,KAAOghD,EAASrgD,EAAQ6iC,KAAO,KAAOwd,EAASrgD,EAAQyM,OAEhG,GAAqB,iBAAjB8yC,EACA,OAAOriD,OAAO8C,EAAQ+jC,UAAY,KAAOsc,EAASrgD,EAAQyM,OAE9D,GAAqB,uBAAjB8yC,EACA,OAAOriD,OAAO8C,EAAQ+jC,UAE1B,GAAqB,uBAAjBwb,EACA,OAAOriD,OAAO8C,EAAQ2jC,UAE1B,GAAqB,uBAAjB4b,EACA,OAAOriD,OAAO8C,EAAQ+jC,UAE1B,GAAqB,uBAAjBwb,EACA,OAAOriD,OAAO8C,EAAQ2jC,UAE1B,GAAqB,uBAAjB4b,EACA,OAAOriD,OAAO8C,EAAQ+jC,UAAY7mC,OAAO8C,EAAQ2jC,UAErD,GAAqB,uBAAjB4b,EACA,OAAOriD,OAAO8C,EAAQ+jC,UAE1B,GAAqB,uBAAjBwb,EACA,OAAOriD,OAAO8C,EAAQ+jC,UAE1B,GAAqB,UAAjBwb,EAA0B,CAE1B,IAAMe,EAAkBtgD,EAAQ+jC,SAAS1kC,WAAWmkB,MAAM,KAE1D,OAA2B,OAAvB88B,EAAgB,SAAsClhD,IAAvBkhD,EAAgB,IAAkD,IAA9BA,EAAgB,GAAGvgD,QAEtFe,QAAQC,IAAIf,GACLsgD,EAAgB,GAAK,KAAOD,EAASrgD,EAAQ6iC,KAAO,KAAOwd,EAASrgD,EAAQyM,QAErD,IAA9B6zC,EAAgB,GAAGvgD,OACZC,EAAQ6iC,IAAIxjC,WAAWe,OAAS,KAAOJ,EAAQyM,MAAMpN,WAAWe,OAEpEkgD,EAAgB,GAAK,WAAaD,EAASrgD,EAAQ6iC,KAAO,KAAOwd,EAASrgD,EAAQyM,OAE7F,MAAqB,gBAAjB8yC,GACAz+C,QAAQC,IAAIf,QACaZ,IAArBY,EAAQ2jC,UAA+C,OAArB3jC,EAAQ2jC,UAA4D,KAAvC3jC,EAAQ2jC,SAAStkC,WAAWe,OACvFlD,OAAO8C,EAAQmgC,UAAY,EACpB,MAEJ,GAGHjjC,OAAO8C,EAAQmgC,UAAY,EACpB,OAEJ,OAIM,iBAAjBof,EACO70B,EAAU1qB,EAAQmgC,UAAY,KAAOzV,EAAU1qB,EAAQ6iC,KAAO,KAAOnY,EAAU1qB,EAAQyM,OAG3F,EAEX,GAAI7M,MAAMC,QAAQmgD,IAAcA,EAAUjgD,OAAS,EAyC/C,OAxCgBigD,EAAUh2C,KAAI,SAAUtC,EAAM5H,EAAO6H,GAGjD,IAFA,IAAMlG,EAAQiG,EAAK,GAAGjG,MAClB8+C,EAAc,GACTzgD,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CAKrC,IAJA,IAAMyG,EAAY8yB,EAAiB,GAARv5B,EAAa,GAAK,IACvC0G,EAAU6yB,EAAuB,IAAbv5B,EAAQ,GAAU,GAAK,IAC7C+hC,EAAMse,EAAYZ,GAClBiB,EAAc,GACT1gD,EAAQ,EAAGA,EAAQ4H,EAAK3H,OAAQD,IAAS,CAC9C,IAAME,EAAU0H,EAAK5H,GAAOE,QACtBygD,EAAWL,EAAWb,EAAcv/C,GACpCC,EAAcC,IAAOF,EAAQG,QAAQd,WAAaW,EAAQK,QAAQhB,WAAY,gBAAgBiB,UAChGiG,GAAatG,GAAeA,EAAcuG,IAC1Cq7B,GAAY4e,EACZD,EAAYh9C,KAAKxD,IAGzBugD,EAAY/8C,KAAK,CACb3F,MAAOgkC,EACPt7B,UAAWA,EACXC,QAASA,EACTg6C,YAAaA,IAIrB,IACMpX,GAAmD,IADvC,CAAC,eAAM,eAAM,gBACDpgC,QAAQu2C,GAEhCvZ,EAAUua,EAAYv2C,KAAI,SAAUtC,EAAM5H,EAAO6H,GACnD,OACI,yBAAKnK,IAAKsC,EAAO7B,MAAO,CAAEyiD,aAAc5gD,EAAQ,GAAK,GAAK,GAAc,GAATA,GAAcA,GAASygD,EAAYxgD,OAAS,EAAIkgD,EAAYV,GAAgB,aAAeU,EAAYV,GAAgB,aAAclY,aAAc4Y,EAAYV,GAAgB,aAAc/S,UAAWyT,EAAYV,GAAgB,aAActpC,eAAgB,WAAY/X,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAYirC,EAAc,SAAW,GAAIx2B,WAAY,WAAYS,gBAA2C,OAA1BqX,EAAUhjB,EAAK7J,OAAkB,QAAU,GAAIy0B,UAAW,SAAW5H,EAAUhjB,EAAK7J,WAGtiB,OACI,yBAAKL,IAAKsC,EAAO7B,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,uBAAwBg0B,UAAW,SAC/F,yBAAKr0B,MAAO,CAAEyiD,YAAaT,EAAYV,GAAgB,aAAclY,aAAc4Y,EAAYV,GAAgB,aAAc/S,UAAWyT,EAAYV,GAAgB,aAActpC,eAAgB,WAAY5C,gBAAiB6sC,EAAsBX,GAAerhD,QAAS,OAAQC,WAAY,SAAU0O,SAAU,SAAWpL,GAC/TukC,MAMjB,GAAqB,iBAAjBuZ,EAAuB,CAEvB,IADA,IAAIoB,EAAO,GACF7gD,EAAQ,EAAGA,EAAQ,GAAIA,IAC5B6gD,EAAKn9C,KAAK,CACN3F,MAAO,IAGf,IAAMmoC,EAAU2a,EAAK32C,KAAI,SAAUtC,EAAM5H,EAAO6H,GAC5C,OACI,yBAAKnK,IAAKsC,EAAO7B,MAAO,CAAEyiD,aAAc5gD,EAAQ,GAAK,GAAK,GAAc,GAATA,GAAcA,GAAS6gD,EAAK5gD,OAAS,EAAIkgD,EAAYV,GAAgB,aAAeU,EAAYV,GAAgB,aAAclY,aAAc4Y,EAAYV,GAAgB,aAAc/S,UAAWyT,EAAYV,GAAgB,aAActpC,eAAgB,WAAY/X,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WAAausB,EAAUhjB,EAAK7J,WAGja,OACI,yBAAKI,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,uBAAwBg0B,UAAW,SACnF,yBAAKr0B,MAAO,CAAEyiD,YAAaT,EAAYV,GAAgB,aAAclY,aAAc4Y,EAAYV,GAAgB,aAAc/S,UAAWyT,EAAYV,GAAgB,aAActpC,eAAgB,WAAY5C,gBAAiB6sC,EAAsBX,GAAerhD,QAAS,OAAQC,WAAY,SAAU0O,SAAU,SAAW,kCAC/Tm5B,GAIb,GAAqB,iBAAjBuZ,EAAuB,CACnBoB,EAAO,GACX,IADA,IACS7gD,EAAQ,EAAGA,EAAQ,GAAIA,IAC5B6gD,EAAKn9C,KAAK,CACN3F,MAAO,IAGf,IAAMmoC,EAAU2a,EAAK32C,KAAI,SAAUtC,EAAM5H,EAAO6H,GAC5C,OACI,yBAAKnK,IAAKsC,EAAO7B,MAAO,CAAEyiD,aAAc5gD,EAAQ,GAAK,GAAK,GAAc,GAATA,GAAcA,GAAS6gD,EAAK5gD,OAAS,EAAIkgD,EAAYV,GAAgB,aAAeU,EAAYV,GAAgB,aAAclY,aAAc4Y,EAAYV,GAAgB,aAAc/S,UAAWyT,EAAYV,GAAgB,aAActpC,eAAgB,WAAY/X,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WAAausB,EAAUhjB,EAAK7J,WAGja,OACI,yBAAKI,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,uBAAwBg0B,UAAW,SACnF,yBAAKr0B,MAAO,CAAEyiD,YAAaT,EAAYV,GAAgB,aAAclY,aAAc4Y,EAAYV,GAAgB,aAAc/S,UAAWyT,EAAYV,GAAgB,aAActpC,eAAgB,WAAY5C,gBAAiB6sC,EAAsBX,GAAerhD,QAAS,OAAQC,WAAY,SAAU0O,SAAU,SAAW,kCAC/Tm5B,GAIb,GAAqB,UAAjBuZ,EAA0B,CACtBoB,EAAO,GACX,IADA,IACS7gD,EAAQ,EAAGA,EAAQ,GAAIA,IAC5B6gD,EAAKn9C,KAAK,CACN3F,MAAO,IAGf,IAAMmoC,EAAU2a,EAAK32C,KAAI,SAAUtC,EAAM5H,EAAO6H,GAC5C,OACI,yBAAKnK,IAAKsC,EAAO7B,MAAO,CAAEyiD,aAAc5gD,EAAQ,GAAK,GAAK,GAAc,GAATA,GAAcA,GAAS6gD,EAAK5gD,OAAS,EAAIkgD,EAAYV,GAAgB,aAAeU,EAAYV,GAAgB,aAAclY,aAAc4Y,EAAYV,GAAgB,aAAc/S,UAAWyT,EAAYV,GAAgB,aAActpC,eAAgB,WAAY/X,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WAAausB,EAAUhjB,EAAK7J,WAGja,OACI,yBAAKI,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,uBAAwBg0B,UAAW,SACnF,yBAAKr0B,MAAO,CAAEyiD,YAAaT,EAAYV,GAAgB,aAAclY,aAAc4Y,EAAYV,GAAgB,aAAc/S,UAAWyT,EAAYV,GAAgB,aAActpC,eAAgB,WAAY5C,gBAAiB6sC,EAAsBX,GAAerhD,QAAS,OAAQC,WAAY,SAAU0O,SAAU,SAAW,SAC/Tm5B,GAIb,GAAqB,iBAAjBuZ,EAAuB,CACnBoB,EAAO,GACX,IADA,IACS7gD,EAAQ,EAAGA,EAAQ,GAAIA,IAC5B6gD,EAAKn9C,KAAK,CACN3F,MAAO,IAGf,IAAMmoC,EAAU2a,EAAK32C,KAAI,SAAUtC,EAAM5H,EAAO6H,GAC5C,OACI,yBAAKnK,IAAKsC,EAAO7B,MAAO,CAAEyiD,aAAc5gD,EAAQ,GAAK,GAAK,GAAc,GAATA,GAAcA,GAAS6gD,EAAK5gD,OAAS,EAAIkgD,EAAYV,GAAgB,aAAeU,EAAYV,GAAgB,aAAclY,aAAc4Y,EAAYV,GAAgB,aAAc/S,UAAWyT,EAAYV,GAAgB,aAActpC,eAAgB,WAAY/X,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WAAausB,EAAUhjB,EAAK7J,WAGja,OACI,yBAAKI,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,uBAAwBg0B,UAAW,SACnF,yBAAKr0B,MAAO,CAAEyiD,YAAaT,EAAYV,GAAgB,aAAclY,aAAc4Y,EAAYV,GAAgB,aAAc/S,UAAWyT,EAAYV,GAAgB,aAActpC,eAAgB,WAAY5C,gBAAiB6sC,EAAsBX,GAAerhD,QAAS,OAAQC,WAAY,SAAU0O,SAAU,SAAW,SAC/Tm5B,GAIb,OAAO,KCthBX,IA+Oe4a,G,2MAjOX5jD,MAAQ,CACJ6jD,WAAY,MACZnwB,OAAQ,KACR5L,cAAe,KACfwb,IAAK,I,mFAEY,IAAD,EACiBhjC,KAAKI,MAA9Bqe,EADQ,EACRA,SAAUtc,EADF,EACEA,WACZ0rB,EAAMpP,EAAS6J,OACrBtoB,KAAKC,SAAS,CAAEmzB,OAAQvF,EAAKrG,cAAerlB,IAC5CnC,KAAK4G,OAAOinB,EAAK1rB,K,2CAEC,IAAD,EACgBnC,KAAKI,MAA9Bqe,EADS,EACTA,SAAUtc,EADD,EACCA,WACZ0rB,EAAMpP,EAAS6J,OACf8K,EAASpzB,KAAKN,MAAM0zB,OACpB5L,EAAgBxnB,KAAKN,MAAM8nB,cAC7BqG,IAAQuF,GAAUjxB,IAAeqlB,IACjCxnB,KAAKC,SAAS,CAAEmzB,OAAQvF,EAAKrG,cAAerlB,IAC5CnC,KAAK4G,OAAOinB,EAAK1rB,M,oCAIX+gD,GACV1/C,QAAQC,IAAIy/C,K,6BAGTr1B,EAAK1rB,GAAa,IAAD,OACd2C,EAAM,IAAIC,IAGhBmF,EAAmB2jB,EAFRjrB,IAAOT,EAAc,OAAqBuM,OAAO,gBACjD9L,IAAOT,EAAc,QAAsBuM,OAAO,iBAExDvE,MAAK,SAAAtF,GACFrB,QAAQC,IAAIqB,EAAIG,OAAOJ,EAAKA,OAC5B,IAAMO,EAAYN,EAAIG,OAAOJ,EAAKA,MAAMK,OAAOG,SAASC,QACxD,EAAKrF,SAAS,CACV+iC,IAAK59B,OAGZmF,OAAM,SAAAC,GACHhH,QAAQC,IAAI,uBAAyBwK,KAAKC,UAAU1D,S,+BAK5D,SAAS4iB,EAAU7sB,GACf,YAAcuB,IAAVvB,GAAiC,OAAVA,GAA4B,IAAVA,EAClC,GAEJA,EAAMwB,WAAWe,OAE5B,SAAS0gD,EAAcrT,EAAahsC,GAChC,IAAKgsC,EAAa,CAEd,IADA,IAAIkT,EAAO,GACF7gD,EAAQ,EAAGA,EAAQ,GAAIA,IAC5B6gD,EAAKn9C,KAAK,CACN3F,MAAO,IAGf,IAAMmoC,EAAU2a,EAAK32C,KAAI,SAAUtC,EAAM5H,EAAO6H,GAC5C,MAAc,mCAAVlG,EAEI,yBAAKjE,IAAKsC,EAAO7B,MAAO,CAAEyiD,aAAc5gD,EAAQ,GAAK,GAAK,GAAc,GAATA,GAAcA,GAAS6gD,EAAK5gD,OAAS,EAAI,+BAAiC,+BAAgCsnC,aAAc,+BAAgCmF,UAAW,+BAAgCv2B,eAAgB,WAAY/X,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WAAausB,EAAUhjB,EAAK7J,QAIrX,yBAAKL,IAAKsC,EAAO7B,MAAO,CAAEyiD,aAAc5gD,EAAQ,GAAK,GAAK,GAAc,GAATA,GAAcA,GAAS6gD,EAAK5gD,OAAS,EAAI,+BAAiC,+BAAgCsnC,aAAc,+BAAgCmF,UAAW,+BAAgCv2B,eAAgB,WAAY/X,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WAAausB,EAAUhjB,EAAK7J,WAGzX,OACI,yBAAKI,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,uBAAwBD,OAAQ,SAChF,yBAAKJ,MAAO,CAAEyiD,YAAa,+BAAgCrZ,aAAc,+BAAgCmF,UAAW,+BAAgCv2B,eAAgB,WAAY5C,gBAAiB,qBAAsBnV,QAAS,OAAQC,WAAY,SAAU0O,SAAU,SAAWpL,GAClRukC,GAIb,OAAO,KAhCN,IAmCGvmC,EAAenC,KAAKI,MAApB+B,WACA6gC,EAAQhjC,KAAKN,MAAbsjC,IACFygB,EAAWC,GAAkC1gB,EAAK,gBAClDoD,EDvGP,SAAkBpD,GACrB,QAAI1gC,MAAMC,QAAQygC,IAIU,IAHPA,EAAIx+B,QAAO,SAAU4F,EAAM5H,EAAO6H,GAC/C,MAAqD,OAA9CD,EAAK83C,KAAKngD,WAAW4hD,cAAc7gD,UAEjCL,OCkGFihD,CAA8BD,GACzCjgD,QAAQC,IAAI2iC,GACZ,IAAMwd,ED5FP,SAAoB5gB,GACvB,GAAI1gC,MAAMC,QAAQygC,GAAM,CACpB,IAAM6gB,EAAW7gB,EAAIx+B,QAAO,SAAU4F,EAAM5H,EAAO6H,GAC/C,MAAqD,WAA9CD,EAAK83C,KAAKngD,WAAW4hD,cAAc7gD,QAAqE,QAA9CsH,EAAK83C,KAAKngD,WAAW4hD,cAAc7gD,UAGxG,OADAU,QAAQC,IAAIogD,GACY,IAApBA,EAASphD,OAKjB,OAAO,ECiFWihD,CAAgCD,GACxCK,ED/EP,SAAuB9gB,GAC1B,QAAI1gC,MAAMC,QAAQygC,IAIU,IAHPA,EAAIx+B,QAAO,SAAU4F,EAAM5H,EAAO6H,GAC/C,MAAqD,QAA9CD,EAAK83C,KAAKngD,WAAW4hD,cAAc7gD,QAAkE,SAA9CsH,EAAK83C,KAAKngD,WAAW4hD,cAAc7gD,QAAmE,QAA9CsH,EAAK83C,KAAKngD,WAAW4hD,cAAc7gD,UAEhJL,OC0EAihD,CAAmCD,GAG1CM,EAAcL,GADQA,GADLA,GAAgCD,EAAUthD,EAAY,iBAEDA,EAAY,gBAKlF6hD,EAAWN,GADQA,GADLA,GADNA,GAAkC1gB,EAAK,gBACM7gC,EAAY,iBAEDA,EAAY,gBAK5E8hD,EAASP,GADQA,GADLA,GADNA,GAAkC1gB,EAAK,gBACI7gC,EAAY,iBAEDA,EAAY,gBAMxE+hD,EAAeR,GADQA,GADLA,GADNA,GAAkC1gB,EAAK,gBACU7gC,EAAY,iBAEDA,EAAY,gBAKpFgiD,EAAaT,GADQA,GADLA,GADNA,GAAkC1gB,EAAK,gBACQ7gC,EAAY,iBAEDA,EAAY,gBAKhFiiD,EAAWV,GADQA,GADLA,GADNA,GAAkC1gB,EAAK,gBACM7gC,EAAY,iBAEDA,EAAY,gBAK5EkiD,EAAcX,GADQA,GADLA,GADNA,GAAkC1gB,EAAK,gBACS7gC,EAAY,iBAEDA,EAAY,gBAGlFmiD,EAAWZ,GAAkC1gB,EAAK,gBAGlDuhB,EAAiBb,GADQA,GADLA,GAAgCY,EAAUniD,EAAY,uBAEEA,EAAY,sBAIxFqiD,EAAgBd,GADQA,GADLA,GAAgCY,EAAUniD,EAAY,uBAECA,EAAY,sBAGtFsiD,EAAWf,GAAkC1gB,EAAK,gBAGlD0hB,EAAgBhB,GADQA,GADLA,GAAgCe,EAAUtiD,EAAY,uBAECA,EAAY,sBAItFwiD,EAAiBjB,GADQA,GADLA,GAAgCe,EAAUtiD,EAAY,uBAEEA,EAAY,sBAIxFyiD,EAAmBlB,GADQA,GADLA,GAAgCe,EAAUtiD,EAAY,uBAEIA,EAAY,sBAI5F0iD,EAAQnB,GAAkC1gB,EAAK,gBAG/C8hB,EAAapB,GADQA,GADLA,GAAgCmB,EAAO1iD,EAAY,uBAECA,EAAY,sBAKhF4iD,EAAcrB,GADQA,GADLA,GAAgCmB,EAAO1iD,EAAY,uBAEEA,EAAY,sBAGlF6iD,EAAQtB,GAAkC1gB,EAAK,gBAG/CiiB,EAAWvB,GADQA,GADLA,GAAgCsB,EAAO7iD,EAAY,UAEDA,EAAY,SAI5E+iD,EAAiBxB,GADQA,GADLA,GAAgCsB,EAAO7iD,EAAY,gBAEKA,EAAY,eAMxFgjD,EAAWzB,GADQA,GADLA,GADNA,GAAkC1gB,EAAK,gBACM7gC,EAAY,iBAEDA,EAAY,gBAElF,OAEI,6BASI,yBAAKxB,MAAO,CAAEyS,OAAQ,SAAUxS,QAAS,OAAQwxB,cAAe,SAAU5e,eAAgB,SAAUwjC,SAAU,WAtMlG,WACxB,IAAMoO,EAAU9iD,MAAMiQ,KAAKjQ,MAAM,IAAIupC,QAAQn/B,KAAI,SAAA6V,GAAC,OAAKA,EAAI,GAAK,MAChE,OACI,yBAAK5hB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,uBAAwBD,OAAQ,SAChF,yBAAKJ,MAAO,CAAEyiD,YAAa,wBAAyBrZ,aAAc,wBAAyBmF,UAAW,wBAAyBv2B,eAAgB,WAAY/X,QAAS,OAAQC,WAAY,SAAU2S,eAAgB,WAAYjE,SAAU,SAAxO,gBACC61C,EAAQ14C,KAAI,SAAC9D,EAAMpG,GAAP,OACT,yBAAKtC,IAAKsC,EAAO7B,MAAO,CAAEyiD,aAAc5gD,EAAQ,GAAK,IAAM,GAAe,IAAVA,GAAeA,IAAU4iD,EAAQ3iD,OAAS,EAAI,wBAA0B,wBAAyBsnC,aAAc,wBAAyBmF,UAAW,wBAAyBv2B,eAAgB,WAAY/X,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WAAa+H,OAiMvUy8C,GACmB,GAAnB5B,EAAShhD,OAAc,eAAO,KAC/B,yBAAK9B,MAAO,CAAEoV,gBAAiB,qBAAsBnV,QAAS,QAAS8X,OAAQ,+BAAgCC,eAAgB,aAC1H6qC,EAAcpd,EAAI,MAClBod,EAAcI,EAAO,cACrBJ,EAAcM,EAAM,gBACpBC,GAEJ,eACD,yBAAKpjD,MAAO,CAAEoV,gBAAiB,qBAAsBnV,QAAS,QAAS8X,OAAQ,+BAAgCC,eAAgB,aAC1HqrC,GAEJ,eACD,yBAAKrjD,MAAO,CAAEoV,gBAAiB,qBAAsBnV,QAAS,QAAS8X,OAAQ,8BAA+BC,eAAgB,aACzHsrC,GAGJ,2BACD,yBAAKtjD,MAAO,CAAEoV,gBAAiB,qBAAsBnV,QAAS,QAAS8X,OAAQ,+BAAgCC,eAAgB,aAC1HurC,EACAC,EACAC,EACAC,EACAE,EACAC,EACAE,EACAC,EACAC,EACAE,EACAC,EACAE,EACAC,EACAC,S,GA1NE3lD,aCuNZ8lD,I,kNA9Nb5lD,MAAQ,CACNyC,WAAYS,IAAOA,MAAS8L,OAAO,aAAa1L,UAChDowB,OAAQ,KACRqc,KAAM,GACNqF,WAAW,G,EA2CblU,aAAe,SAACv9B,EAAMu1B,GACpB,IAAM/K,EAAM,EAAKztB,MAAMqe,SAAS6J,OAChC,EAAKroB,SAAS,CAAEmzB,OAAQvF,EAAK1rB,WAAYkB,EAAKL,YAC9C,EAAKuiD,QAAQ13B,EAAKxqB,EAAKL,Y,EAGzBgZ,SAAW,SAAA1K,GAAM,IACPmN,EAAa,EAAKre,MAAlBqe,SACAtc,EAAe,EAAKzC,MAApByC,WACF0+B,EAAOpiB,EAASQ,aAAa6hB,SAC7BC,EAAWn+B,IAAOA,IAAOi+B,GAAMnyB,OAAO,aAAa1L,UAIzD,OAAQsO,EAAE+F,OAAO9W,OACf,IAAK,IACH,IAAM0b,EAAQ9Z,EAJN,MAMR4+B,GADc9kB,EAAQ,QACD,EAAK2kB,aAAah+B,IAAOqZ,IAC9C,MACF,IAAK,IACH,IAAMC,EAAQtZ,IAAOA,MAAS8L,OAAO,aACrC,EAAKkyB,aAAa1kB,GAClB,MACF,IAAK,IACH,IAAMC,EAAQha,EAbN,MAeRga,GADcvZ,IAAOA,MAAS8L,OAAO,aAAa1L,WAChC,EAAK49B,aAAah+B,IAAOuZ,M,mFAnE5B,IAEb0R,EADe7tB,KAAKI,MAAlBqe,SACa6J,OACfjlB,EAAOT,IAAOA,MAAS8L,OAAO,aAAa1L,UACjDhD,KAAKC,SAAS,CAAEmzB,OAAQvF,EAAK1rB,WAAYkB,IACzCrD,KAAKulD,QAAQ13B,EAAKxqB,K,2CAGlB,IAAMwqB,EAAM7tB,KAAKI,MAAMqe,SAAS6J,OAEhC,GAAIuF,IADW7tB,KAAKN,MAAM0zB,OACN,CAClB,IAAM/vB,EAAOrD,KAAKN,MAAMyC,WACxBnC,KAAKC,SAAS,CAAEmzB,OAAQvF,EAAK1rB,WAAYkB,IACzCrD,KAAKulD,QAAQ13B,EAAKxqB,M,8BAGdwqB,EAAK23B,GAAW,IAAD,OACf1+C,EAAKlE,IAAO4iD,EAAW,OAAoB92C,OAAO,gBAClD3H,EAAKnE,IAAO4iD,EAAW,QAAqB92C,OAAO,gBACzD1O,KAAKC,SAAS,CAAE60C,WAAW,IAC3B,IAAM2Q,EAAUv7C,EAAoB2jB,EAAK/mB,EAAIC,GAC1CoD,MAAK,SAAAtF,GACJ,IAAM6gD,EAAW92C,EAAkB/J,EAAKA,MAEpCvC,MAAMC,QAAQmjD,GAChB,EAAKzlD,SAAS,CAAEwvC,KAAMiW,IAEtB,EAAKzlD,SAAS,CACZwvC,KAAM,CAACiW,QAIZn7C,OAAM,SAAAC,GACLhH,QAAQC,IACN,0CAA4CwK,KAAKC,UAAU1D,OAIjEM,QAAQC,IAAI,CAAC06C,IAAUt7C,MAAK,WAAQ,EAAKlK,SAAS,CAAE60C,WAAW,OAAYvqC,OAAM,WAAQ,EAAKtK,SAAS,CAAE60C,WAAW,S,+BAqC5G,IAAD,EACsB90C,KAAKI,MAA1Bqe,EADD,EACCA,SAAUzZ,EADX,EACWA,OACV7C,EAAenC,KAAKN,MAApByC,WACF0C,EAAO7E,KAAKN,MAAM+vC,KACxBjsC,QAAQC,IAAIoB,GACZ,IAAM8gD,EAAS9gD,EAAKL,QAAO,SAAUjE,EAAOiC,EAAOyD,GACjD,QAAcnE,IAAVvB,EACF,OAAO,KAET,IAAMqlD,EAAMrlD,EAAMmmB,QAClB,QAA6B,OAApBk/B,EAAIzlD,MAAM,OAAsC,OAApBylD,EAAIzlD,MAAM,UAE3C0lD,EAAoBF,EAAOj5C,KAAI,SAAUnM,EAAOiC,EAAO6H,GAC3D,IAAMzB,EAAOhG,IAAOrC,EAAMsC,QAAQd,WAAWe,OAASvC,EAAMwC,QAAQhB,WAAWe,OAAQ,gBAAgB4L,OAAO,SAC9G,OACE,yBAAKxO,IAAKsC,EAAO7B,MAAO,CAAEC,QAAS,OAAQuO,MAAO,0BAC/CvG,EACA,IACArI,EAAMmmB,QAAQ3kB,WAAWe,WAWhC,IAAMZ,EAAauc,EAASmjB,OAET5T,EAAqB9rB,EADvBuc,EAASQ,aAAa6hB,UAErB9S,EAAuB9rB,EAAYC,GACrD,OACE,6BACE,yBAAKxB,MAAO,CAAEC,QAAS,OAAQC,WAAY,WACzC,kBAAC,KAAD,CACEyV,qBAAsB,SAAAC,GAAW,OAAIA,EAAYC,YACjDgH,aAAc,SAAAC,GACZ,OACEA,EAAU7a,MAAS8a,QAAQ,QAC3BD,EACA7a,IACE6b,EAASQ,aAAa6hB,SAAS/+B,WAC/B,YACAigC,SAGN3uB,MAAO,IACP9S,MAAOqC,IAAO5C,KAAKN,MAAMyC,YACzBwb,YAAY,EACZxK,SAAUnT,KAAK4gC,eAEjB,yBACEjgC,MAAO,CACLC,QAAS,OACTI,oBAAqB,cACrBC,cAAe,MACfiU,QAAS,sBAGX,kBAAC,KAAD,CACE3U,MAAM,IACNqd,MAAM,SACNC,KAAK,cACLpK,QAASzT,KAAKgc,WAEhB,kBAAC,KAAD,CACEzb,MAAM,IACNqd,MAAM,SACNC,KAAK,eACLpK,QAASzT,KAAKgc,WAEhB,kBAAC,KAAD,CACEzb,MAAM,IACNqd,MAAM,SACNC,KAAK,eACLpK,QAASzT,KAAKgc,YAGlB,yBAAKrb,MAAO,CAAE4O,SAAU,SAAxB,6BACSye,EAA2BhpB,EAAOpD,KAAMoD,EAAOnD,KADxD,IAC8D,0BAAMlB,MAAO,CAAE2O,WAAY,MAAOH,MAAO,UAAY6e,EAAqChpB,EAAQhF,KAAKN,MAAMyC,cAE3K,yBAAKxB,MAAO,CAAE4O,SAAU,SAAxB,6BACSye,EAAsBhpB,EAAOZ,YAAY,0BAAMzD,MAAO,CAAE2O,WAAY,MAAOH,MAAO,UAAY6e,EAA2BvP,EAASmjB,OAAQ5hC,KAAKN,MAAMyC,YAA5G,OAGpD,6BACE,yBACExB,MAAO,CACLoV,gBAAiB,YACjB4N,oBAAqB,MACrBC,qBAAsB,MACtB7iB,OAAQ,OACRmU,QAAS,WACTtU,QAAS,OACTC,WAAY,WAGd,wBAAIF,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBAAtC,8CAGA,wBACExO,MAAO,CACL0S,MAAO,OACPtS,OAAQ,OACR0e,aAAc,OACd4hB,WAAY,QACZlyB,MAAO,QACPvO,QAAS,OACT4S,eAAgB,SAChB3S,WAAY,WAGb8kD,EAAOljD,SAGZ,yBAAK9B,MAAO,CAAEo0B,UAAW,QAAS1hB,MAAO,OAAQ+B,SAAU,OAAQkI,YAAa,SAC7EuoC,IAGL,yBAAK1kD,UAAU,oBAEXnB,KAAKN,MAAMo1C,UAEP,kBAAC,KAAD,CAAMrwC,KAAK,YAGX,kBAAC,GAAD,CACEtC,WAAYnC,KAAKN,MAAMyC,WACvBsc,SAAUA,U,GArNEjf,c,SC8JfsmD,I,kNAvKXpmD,MAAQ,CACJ07B,QAAQ,G,EAcZ2qB,YAAc,SAACxlD,GACX,IAAMssC,EAA+B,kBAAXtsC,EAAsBA,EAAMwB,WAAaxB,EAD9C,EAEA,EAAKH,MAAlBsgB,EAFa,EAEbA,IAAKD,EAFQ,EAERA,IACb,OAAkB,OAAdosB,QAAoC/qC,IAAd+qC,EACf,MAEoB,GAA3BA,EAAUnhC,QAAQ,KACX+U,GAC2B,GAA3BosB,EAAUnhC,QAAQ,KAClBgV,EAEAmsB,G,oFAvBO,IAEVpR,EAAWz7B,KAAKI,MAAhBq7B,OACRra,KAAU,YAAYC,SACtBD,KAAU,IAAMqa,GAAQpa,SACxBrhB,KAAKshB,c,0CAILthB,KAAKshB,c,kCAkBI,IAAD,SACwCthB,KAAKI,MAA7CmhB,EADA,EACAA,OAAQka,EADR,EACQA,OAAQ/a,EADhB,EACgBA,IAAKD,EADrB,EACqBA,IAAKulC,EAD1B,EAC0BA,UAE5BC,EAAK,IAAIxuC,KAAK7U,IAAOojD,EAAU,GAAG3iD,KAAM,YAAYL,UAAY,OAChEkjD,EAAO,IAAIzuC,KAAK7U,IAAOojD,EAAUA,EAAUvjD,OAAS,GAAGY,KAAM,YAAc,OAE3E8iD,EAAeH,EAAUxhD,QAAO,SAAAK,GAClC,MAAsB,KAAfA,EAAKtE,OAA+B,OAAfsE,EAAKtE,YAAiCuB,IAAf+C,EAAKtE,SAItD6S,EAAgB,GAAhBA,EAA2B,GAA3BA,EAAuC,GAAvCA,EAAiD,GACnDC,EAAQ,IAAOD,EAAcA,EAC7BrS,EAAS,IAAMqS,EAAaA,EAE5B6O,EAAIb,OAAeW,OAAO,CAACkkC,EAAIC,IAAOlkC,MAAM,CAAC,EAAG3O,EAAQD,EAAcA,IACtEoN,EAAIY,OAAiBW,OAAO,CAACtB,EAAKC,IAAMsB,MAAM,CAACjhB,EAAQ,IAEvDqlD,EAAMhlC,KAAU,IAAMG,GAAQoB,OAAO,OACpCC,KAAK,QAAS,WACdjiB,MAAM,UAAW,GAElB+hB,EAAMtB,KAAU,IAAMG,GACrBoB,OAAO,OACPC,KAAK,KAAM6Y,GACX96B,MAAM,SAAUI,EAASqS,EAAaA,GACtCzS,MAAM,QAAS0S,EAAQD,EAAcA,GACrCuP,OAAO,KACPC,KAAK,YAAa,aAAexP,EAAc,IAAMA,EAAa,KAEvEsP,EAAIC,OAAO,KACNE,KAAKzB,KAAca,GAAGE,MAAM,GAAGG,WAAWlB,KAAc,WACxDwB,KAAK,YAFV,sBAEsC7hB,EAFtC,MAGKJ,MAAM,SAAU,SAChBA,MAAM,eAAgB,GAE3B+hB,EAAIC,OAAO,KACNE,KAAKzB,KAAYZ,IACjB7f,MAAM,SAAU,SAChBA,MAAM,eAAgB,GAE3B,IAAIuhD,EAAO9gC,OACNa,GAAE,SAAAM,GAAC,OAAIN,EAAErf,IAAO2f,EAAElf,KAAM,gBAAgB6U,aACxCsI,GAAE,SAAA+B,GACC,IAAMsqB,EAAY,EAAKkZ,YAAYxjC,EAAEhiB,OACrC,OAAOigB,EAAEqsB,MAEZwZ,MAAMjlC,MAEPklC,EAAQ5jC,EAAIC,OAAO,KAAKC,KAAK,QAAS,SAE1C0jC,EAAMr1B,UAAU,UACXpsB,KAAKshD,GACLj1B,QACAvO,OAAO,KACPA,OAAO,UACPC,KAAK,QAAS,gBACdA,KAAK,MAAM,SAAAL,GACR,IAAMsqB,EAAY,EAAKkZ,YAAYxjC,EAAEhiB,OACrC,OAAOigB,EAAEqsB,MAEZjqB,KAAK,MAAM,SAAAL,GAAC,OAAIN,EAAErf,IAAO2f,EAAElf,KAAM,gBAAgB6U,aACjD0K,KAAK,IAAK,GACV2jC,GAAG,aAAa,SAAUhkC,GACvB6jC,EAAII,aACClG,SAAS,KACT3/C,MAAM,UAAW,IACtBylD,EAAIK,KAAJ,qCAAmBlkC,EAAElf,KAArB,6CAA0Ckf,EAAEhiB,QACvCI,MAAM,OAASygB,KAASslC,MAAQ,IAAO,MACvC/lD,MAAM,MAAQygB,KAASulC,MAAQ,IAAO,SAE9CJ,GAAG,YAAY,SAAUhkC,GACtB6jC,EAAII,aACClG,SAAS,KACT3/C,MAAM,UAAW,MAEzBA,MAAM,UAAW,GACjBA,MAAM,OAAQ,QAEnB2lD,EACKr1B,UAAU,eACVpsB,KAAKshD,GACLj1B,QACAvO,OAAO,KACPC,KAAK,QAAS,cACdD,OAAO,QACPC,KAAK,QAAS,QACdA,KAAK,IAAKs/B,EAAKiE,IACfxlD,MAAM,SAAU,SAChBA,MAAM,OAAQ,U,+BAGd,MA+B8BX,KAAKI,MAAhCmhB,EA/BH,EA+BGA,OAAQqlC,EA/BX,EA+BWA,eAChBpjD,QAAQC,IAAImjD,GAEZ,OACI,6BACI,yBAAKjmD,MAAO,CAAEuU,QAAS,gBAAiB/F,MAAO,sBAAuBkyB,WAAY,OAAQ0I,aAAc,oBAAqBtqB,aAAc,gBAnCnJ,SAAsB4tB,GAElB,OADA7pC,QAAQC,IAAI4pC,GACS,SAAjBA,EACO,0BAAM1sC,MAAO,CAAEwO,MAAO,sBAAuBI,SAAU,OAAQD,WAAY,MAAO+iB,WAAY,OAAQw0B,SAAU,eAAhH,KAAkI,oCAExH,SAAjBxZ,EACO,0BAAM1sC,MAAO,CAAEwO,MAAO,sBAAuBI,SAAU,OAAQD,WAAY,MAAO+iB,WAAY,OAAQw0B,SAAU,eAAhH,KAAkI,oCAExH,SAAjBxZ,EACO,0BAAM1sC,MAAO,CAAEwO,MAAO,sBAAuBI,SAAU,OAAQD,WAAY,MAAO+iB,WAAY,OAAQw0B,SAAU,eAAhH,MAAmI,mCAEzH,QAAjBxZ,EACO,0BAAM1sC,MAAO,CAAEwO,MAAO,sBAAuBI,SAAU,OAAQD,WAAY,MAAO+iB,WAAY,OAAQw0B,SAAU,eAAhH,KAAkI,mCAExH,SAAjBxZ,EACO,0BAAM1sC,MAAO,CAAEwO,MAAO,sBAAuBI,SAAU,OAAQD,WAAY,MAAO+iB,WAAY,OAAQw0B,SAAU,eAAhH,MAAmI,mCAEzH,SAAjBxZ,EACO,0BAAM1sC,MAAO,CAAEwO,MAAO,sBAAuBI,SAAU,OAAQD,WAAY,MAAO+iB,WAAY,OAAQw0B,SAAU,eAAhH,MAAmI,mCAE1H,QAAhBxZ,GAA0C,OAAhBA,GAAyC,OAAhBA,EAE/C,6BACI,0BAAM1sC,MAAO,CAAEwO,MAAO,sBAAuBI,SAAU,OAAQD,WAAY,MAAO+iB,WAAY,OAAQw0B,SAAU,eAAiBxZ,GACjI,0BAAM1sC,MAAO,CAAEwO,MAAO,sBAAuBI,SAAU,OAAQD,WAAY,MAAO+iB,WAAY,OAAQw0B,SAAU,eAAhH,MAIL,0BAAMlmD,MAAO,CAAEwO,MAAO,sBAAuBI,SAAU,OAAQD,WAAY,MAAO+iB,WAAY,OAAQw0B,SAAU,eAAiBxZ,GAQ/HA,CAAauZ,IAElB,yBAAKxwC,GAAImL,S,GAlKD/hB,cCoQTsnD,I,kNA9PXpnD,MAAQ,CACJqnD,SAAU,EAAK3mD,MAAM4mD,aACrB1c,gBAAiB,CAAC1nC,MAAUA,OAC5B0N,SAAS,EACTs2C,eAAgB,GAChBZ,UAAW,GACXiB,QCyTG,CACH,IAAO,CACH,IAAO,CACH,IAAO,EACP,IAAO,KAEX,KAAQ,CACJ,IAAO,EACP,IAAO,IAEX,IAAO,CACH,IAAO,EACP,IAAO,KAEX,KAAQ,CACJ,IAAO,EACP,IAAO,KAEX,IAAO,CACH,IAAO,EACP,IAAO,IAEX,IAAO,CACH,IAAO,GACP,IAAO,IAEX,IAAO,CACH,IAAO,EACP,IAAO,MAGf,6CAAW,CACP,GAAM,CACF,IAAO,IACP,IAAO,KAEX,EAAK,CACD,IAAO,EACP,IAAO,GAEX,GAAM,CACF,IAAO,GACP,IAAO,KAEX,OAAQ,CACJ,IAAO,GACP,IAAO,KAEX,GAAM,CACF,IAAO,EACP,IAAO,IAEX,OAAQ,CACJ,IAAO,EACP,IAAO,GAEX,EAAK,CACD,IAAO,EACP,IAAO,IAEX,IAAO,CACH,IAAO,EACP,IAAO,IAEX,GAAM,CACF,IAAO,EACP,IAAO,IAGf,qBAAO,CACH,IAAO,CACH,IAAO,EACP,IAAO,KAEX,IAAO,CACH,IAAO,EACP,IAAO,KAEX,KAAQ,CACJ,IAAO,EACP,IAAO,IAEX,KAAQ,CACJ,IAAO,EACP,IAAO,IAEX,OAAQ,CACJ,IAAO,EACP,IAAO,KAEX,QAAS,CACL,IAAO,EACP,IAAO,MAEX,IAAO,CACH,IAAO,EACP,IAAO,IAGf,iCAAS,CACL,KAAQ,CACJ,IAAO,EACP,IAAO,KAEX,KAAQ,CACJ,IAAO,EACP,IAAO,KAEX,MAAS,CACL,IAAO,EACP,IAAO,KAEX,IAAO,CACH,IAAO,EACP,IAAO,KAEX,QAAS,CACL,IAAO,EACP,IAAO,OAGf,2BAAQ,CACJ,GAAM,CACF,IAAO,EACP,IAAO,KAEX,QAAS,CACL,IAAO,EACP,IAAO,KAEX,IAAO,CACH,IAAO,EACP,IAAO,KAEX,SAAU,CACN,IAAO,EACP,IAAO,MAGf,2BAAQ,CACJ,GAAM,CACF,IAAO,EACP,IAAO,KAEX,KAAQ,CACJ,IAAO,EACP,IAAO,KAEX,IAAO,CACH,IAAO,EACP,IAAO,IAGf,IAAO,CACH,GAAM,CACF,IAAO,IACP,IAAO,KAEX,KAAQ,CACJ,IAAO,EACP,IAAO,KAEX,IAAO,CACH,IAAO,EACP,IAAO,KAEX,KAAQ,CACJ,IAAO,EACP,IAAO,IAEX,GAAM,CACF,KAAQ,GACR,IAAO,IAEX,MAAS,CACL,IAAO,EACP,IAAO,KAEX,KAAQ,CACJ,IAAO,EACP,IAAO,MAGf,mBAAoB,CAChB,IAAO,CACH,IAAO,EACP,IAAO,IAEX,IAAO,CACH,IAAO,GACP,IAAO,IAEX,GAAM,CACF,IAAO,IACP,IAAO,KAEX,EAAK,CACD,IAAO,EACP,IAAO,GAEX,OAAQ,CACJ,IAAO,GACP,IAAO,KAEX,IAAO,CACH,IAAO,EACP,IAAO,IAEX,GAAM,CACF,IAAO,EACP,IAAO,IAGf,QAAW,CACP,eAAgB,CACZ,IAAO,EACP,IAAO,KAEX,WAAY,CACR,IAAO,EACP,IAAO,MAGf,eAAM,CACF,IAAO,CACH,IAAO,EACP,IAAO,IAEX,SAAY,CACR,IAAO,EACP,IAAO,IAEX,KAAQ,CACJ,IAAO,EACP,IAAO,IAEX,KAAQ,CACJ,IAAO,EACP,IAAO,KAGf,2BAAQ,CACJ,IAAO,CACH,IAAO,EACP,IAAO,KAEX,KAAQ,CACJ,IAAO,EACP,IAAO,IAEX,IAAO,CACH,IAAO,EACP,IAAO,KAEX,KAAQ,CACJ,IAAO,EACP,IAAO,KAEX,IAAO,CACH,IAAO,EACP,IAAO,IAEX,IAAO,CACH,IAAO,EACP,IAAO,O,EDhjBnBlS,qBAAuB,SAACx0C,GACpB,EAAKH,MAAMkgC,mBAAmB//B,I,EAElC+yC,aAAe,SAAC/yC,GACZ,EAAKw0C,qBAAqBx0C,GAC1B,EAAKN,SAAS,CACV8mD,SAAUxmD,K,EAGlB2mD,YAAc,SAAC3mD,GACX,EAAKH,MAAM+mD,oBAAoB5mD,EAAM8W,OAAO9W,Q,EAoEhD6mD,UAAY,WACR,EAAKnnD,SAAS,CACVqQ,SAAS,K,EAGjBoD,SAAW,SAAApC,GACP,EAAKrR,SAAS,CACVqQ,SAAS,K,EAIjBe,aAAe,SAAAC,GACX,EAAKrR,SAAS,CACVqQ,SAAS,K,EAIjB+2C,eAAiB,WAAO,IAAD,EACsC,EAAK3nD,MAAtDunD,EADW,EACXA,QAASF,EADE,EACFA,SAAUH,EADR,EACQA,eAAgBZ,EADxB,EACwBA,UAE3C,GADAxiD,QAAQC,IAAImjD,GACW,KAAnBA,EAAyB,OAAO,KAEpC,IAEM5kC,EADWilC,EADLrb,OAAOC,KAAKob,GAASF,IAEVH,GACjBU,EAAY,GAElB,QAAcxlD,IAAVkgB,EAAuB,OAAO,KAClCxe,QAAQC,IAAIue,GACZ,IAAMtB,OAAoB5e,IAAdkgB,EAAMtB,IAAoBsB,EAAMtB,IAAM/c,KAAK+c,IAAL,MAAA/c,KAAY2jD,GACxD7mC,OAAoB3e,IAAdkgB,EAAMvB,IAAoBuB,EAAMvB,IAAM9c,KAAK8c,IAAL,MAAA9c,KAAY2jD,GAE9D,OACI,yBAAK3mD,MAAO,CAAEyS,OAAQ,aAClB,kBAAC,GAAD,CAAW4yC,UAAWA,EAAWY,eAAgBA,EAAgBlmC,IAAKA,EAAKD,IAAKA,EAAKc,OAAQ,YAAaka,OAAQ,iB,yHApGhH,IACF5V,EAAa7lB,KAAKI,MAAlBylB,SACR,OAAwB,IAApBA,EAASpjB,OAEL,yBAAK9B,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAChD,yBAAKL,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQC,WAAY,SAAU2S,eAAgB,WAArF,uBAMSqS,EAASnZ,KAAI,SAAUhK,EAASF,GACjD,IAAIinC,GAAY,EACZjnC,EAAQqjB,EAASpjB,OAAS,IAC1BgnC,EAAY7mC,IAAOF,EAAQ0rB,MAAM4c,OAAOpoC,IAAOijB,EAASrjB,EAAQ,GAAG4rB,MAAO,QAE1E5rB,IAAUqjB,EAASpjB,OAAS,IAC5BgnC,GAAY,GAEhB,IAAM1E,EAAariC,EAAQ0gB,KAAK1W,KAAI,SAAUtC,EAAM5H,GAChD,OACI,iCAAatC,IAAKsC,EAAO7B,MAAO,CAAE4mD,KAAM,EAAGxa,WAAY,gCAAiCp0B,eAAgB,aACpG,4BAAKvO,OAIXxB,EAAOhG,IAAOF,EAAQ0rB,KAAM,sBAAsB1f,OAAO,eAC/D,OACI,yBAAKxO,IAAKsC,EAAO7B,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaD,OAAQ,OAAQgpC,aAAcN,EAAY,mCAAqC,sBACxJ,iCAAa9oC,MAAO,CAAEC,QAAS,SAC3B,4BAAKgI,IAET,yBAAKjI,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,kBAC/C+jC,S,uCAQJriC,GAAU,IAAD,OACdmjB,EAAa7lB,KAAKI,MAAlBylB,SACFtlB,EAAQmC,EAAQnC,MACtBiD,QAAQC,IAAIlD,GACZ,IAAMqP,EAASlN,EAAQF,MACnBglD,EAAW3hC,EAASnZ,KAAI,SAAA7H,GACxB,IAAI4iD,EAAO,GAGX,OAFAA,EAAI,KAAW5iD,EAAKupB,KACpBq5B,EAAI,MAAY5iD,EAAKue,KAAKxT,GACnB63C,KAGX,GADAjkD,QAAQC,IAAI+jD,GACK,OAAbA,GAAyC,IAApBA,EAAS/kD,OAC9B,OAAO,KAGX+kD,EAASz4C,MAAK,SAACkT,EAAGzB,GACd,OAAO5d,IAAOqf,EAAE5e,KAAM,gBAAgBL,UAAYJ,IAAO4d,EAAEnd,KAAM,gBAAgBL,aAGrFhD,KAAKC,SAAS,CACV2mD,eAAgBrmD,EAChBylD,UAAWwB,IACZ,WAAQ,EAAKJ,iB,+BAyCV,IAAD,OACG3U,EAAWC,KAAXD,OACFniC,EAAUtQ,KAAKN,MAAM4Q,QAErBoD,EAAW1T,KAAK0T,SAChBrC,EAAerR,KAAKqR,aAEpBg2C,EAAiBrnD,KAAKqnD,iBACtBK,EC9JH,CACH,CACI,OAAU,8EACV,MAAS,EACT,MAAS,CACL,MACA,OACA,MACA,OACA,MACA,MACA,QAGR,CACI,OAAU,+HACV,MAAS,EACT,MAAS,CACL,KACA,IACA,KACA,OACA,KACA,OACA,IACA,MACA,OAGR,CACI,OAAU,gGACV,MAAS,EACT,MAAS,CACL,MACA,MACA,OACA,OACA,OACA,QACA,QAGR,CACI,OAAU,+EACV,MAAS,EACT,MAAS,CACL,OACA,OACA,QACA,MACA,UAGR,CACI,OAAU,0EACV,MAAS,EACT,MAAS,CACL,KACA,QACA,MACA,WAGR,CACI,OAAU,6DACV,MAAS,EACT,MAAS,CACL,KACA,OACA,QAGR,CACI,OAAU,+EACV,MAAS,EACT,MAAS,CACL,KACA,OACA,MACA,OACA,KACA,QACA,SAlFL,CAsFH,CACI,OAAU,sFACV,MAAS,EACT,MAAS,CACL,MACA,MACA,KACA,IACA,OACA,MACA,OAGR,CACI,OAAU,wCACV,MAAS,EACT,MAAS,CACL,eACA,aAGR,CACI,OAAU,iEACV,MAAS,EACT,MAAS,CACL,MACA,WACA,OACA,SAGR,CACI,OAAU,8EACV,MAAS,GACT,MAAS,CACL,MACA,OACA,MACA,OACA,MACA,SDkCFC,EAAaD,EAAYh7C,KAAI,SAAUtC,EAAM5H,GAc/C,IAZsB6qC,EAYhB3jC,EAXmB,kIADH2jC,EAYMjjC,EAAKmP,QAVlB,yBAAK5Y,MAAO,CAAE4O,SAAU,SAAxB,mFAAsD,mCAAtD,mBAAyE,mCAAzE,4BAEU,iFAAjB89B,EACO,yBAAK1sC,MAAO,CAAE4O,SAAU,SAAxB,8BAA8C,kCAA9C,WAA6D,kCAA7D,YAA6E,kCAA7E,kBAA8F,kCAA9F,eAAiH,mCAEvG,wFAAjB89B,EACO,yBAAK1sC,MAAO,CAAE4O,SAAU,SAAxB,mEAAoE,mCAApE,qBAEJ,yBAAK5O,MAAO,CAAE4O,SAAU,SAAW89B,GAG9C,OACI,kBAACoF,EAAD,CAAQvyC,IAAKkK,EAAK5H,MAAOjC,MAAO6J,EAAK5H,MAAO7B,MAAO,CAAE4O,SAAU,SAAW7F,MAG5Ek+C,EAAoBF,EAAYljD,QAAO,SAAU9B,EAASF,GAC5D,IAAMqlD,EAAanV,KACnB,OAAOhwC,EAAQF,MAAQqlD,KAE3B,GAAiC,IAA7BD,EAAkBnlD,OAClB,OAAO,KAEX,IACMqlD,EADcF,EAAkB5nD,KAAKN,MAAMqnD,UAAU5iD,MACrBuI,KAAI,SAACtC,EAAM5H,GAyB7C,IAAMulD,EAxBN,SAAsB1a,GAClB,MAAqB,SAAjBA,EACO,yBAAK1sC,MAAO,CAAE4O,SAAU,SAAxB,KAAoC,oCAE1B,SAAjB89B,EACO,yBAAK1sC,MAAO,CAAE4O,SAAU,SAAxB,KAAoC,oCAE1B,SAAjB89B,EACO,yBAAK1sC,MAAO,CAAE4O,SAAU,SAAxB,MAAqC,mCAE3B,QAAjB89B,EACO,yBAAK1sC,MAAO,CAAE4O,SAAU,SAAxB,KAAoC,mCAE1B,SAAjB89B,EACO,yBAAK1sC,MAAO,CAAE4O,SAAU,SAAxB,MAAqC,mCAE3B,SAAjB89B,EACO,yBAAK1sC,MAAO,CAAE4O,SAAU,SAAxB,MAAqC,mCAE3B,UAAjB89B,EACO,yBAAK1sC,MAAO,CAAE4O,SAAU,SAAxB,IAAmC,kCAAnC,OAEJ89B,EAEQA,CAAajjC,GAC1B1H,EAAU,CACZnC,MAAO6J,EACP5H,MAAOA,GAEX,OACI,iCAAa7B,MAAO,CAAE4mD,KAAM,GAAKrnD,IAAKsC,GAClC,kBAAC,KAAD,CAAQ7B,MAAO,CAAEI,OAAQ,OAAQgV,gBAAiB,cAAe2C,OAAQ,kBAAmB9X,QAAS,OAAQI,oBAAqB,iBAAmBwB,MAAOA,EAAOjC,MAAO6J,EAAMqJ,QAAS,WAAQ,EAAKu0C,iBAAiBtlD,KAAaqlD,OAI1OE,EAAUjoD,KAAK2kC,aAErB,OACI,6BACI,kBAAC,KAAD,CACIr0B,QAASA,EACT2F,KAAMvC,EACNJ,SAAUjC,EACVgC,MAAO,KACPE,OAAQ,MACP8zC,GAEL,yBAAK1mD,MAAO,CAAEoV,gBAAiB,YAAa0J,aAAc,cAAe1e,OAAQ,OAAQmU,QAAS,WAAYtU,QAAS,OAAQI,oBAAqB,YAAaH,WAAY,WACzK,yBAAKF,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBAAvC,4BACA,yBAAKxO,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaC,cAAe,QAC5E,wBAAIN,MAAO,CAAEC,QAAS,OAAQC,WAAY,WAA1C,kCACA,yBAAKM,UAAU,kBAAkBR,MAAO,CAAEC,QAAS,OAAQC,WAAY,WACnE,kBAAC,KAAD,CAAQqnD,kBAAmB,SAAA3xC,GAAW,OAAIA,EAAYC,YAAYtD,aAAclT,KAAKN,MAAMqnD,SAAUpmD,MAAO,CAAE0S,MAAO,QAAUF,SAAUnT,KAAKszC,cACzIqU,MAKjB,yBAAKhnD,MAAO,CAAEoV,gBAAiB,yBAA0BhV,OAAQ,OAAQH,QAAS,OAAQI,oBAAqB,YAAaH,WAAY,WACpI,qCACI,wBAAIF,MAAO,CAAEC,QAAS,OAAQ0sC,aAAc,WAA5C,6BAEJ,yBAAK3sC,MAAO,CAAEC,QAAS,QAAU6S,QAASzT,KAAKknD,aAC1CY,IAGT,yBAAKnnD,MAAO,CAAE+X,OAAQ,mCAAoC+G,aAAc,cAAe9G,eAAgB,aACnG,yBAAKhY,MAAO,CAAEq0B,UAAW,sBAAuBD,UAAW,sBAAuB+U,UAAW,SACxFme,S,GAvPHzoD,cEkPP2oD,I,yNAnPXzoD,MAAQ,CACJ4Q,SAAS,G,EAGb4G,MAAQ,SAACw6B,EAAQ5qB,GACb,IAAI4B,EAAW5B,EAAO4B,SAClBipB,EAAY,GAoBhB,OAnBAjpB,EAAS1C,SAAQ,SAAA2C,GACb,IAAMy/B,EAAYz/B,EAAQ0/B,OAAS1/B,EAAQzoB,IAAM,IAAMyoB,EAAQ0/B,OAAS1/B,EAAQzoB,IAChFyxC,EAAUyW,GAAa,MAE3BzW,EAAU,4BAAU,GACpBD,EAAO1rB,SAAQ,SAAA4rB,GACX,IAAIC,EAAUD,EAAMhmC,SACpB8c,EAAS1C,SAAQ,SAAA2C,GACb,IAAMC,EAAK,IAAIC,OAAOF,EAAQG,UAAWH,EAAQI,aAC3C5oB,EAAQ0xC,EAAQ1xC,MAAMyoB,GAC5B,GAAc,OAAVzoB,GAA+B,KAAbA,EAAM,MAAcwoB,EAAQ0/B,QAASzW,EAAM7G,QAAQjoC,SAAW6lB,EAAQ0/B,QAAgB,CACxG,IAAMD,EAAYz/B,EAAQ0/B,OAAS1/B,EAAQzoB,IAAM,IAAMyoB,EAAQ0/B,OAAS1/B,EAAQzoB,IAChFyxC,EAAUyW,GAAWliD,KAAK0rC,OAIlCD,EAAU,4BAAQzrC,KAAK0rC,MAGpBD,G,wEAGF,IA8EqB9sC,EAAMyjD,EA9E3B,EA2HqEtoD,KAAKI,MAAvEkqC,EA3HH,EA2HGA,gBAAiBF,EA3HpB,EA2HoBA,QAASme,EA3H7B,EA2H6BA,UAAWjX,EA3HxC,EA2HwCA,UAEvC5F,GA7HD,EA2HmD8c,cA1DxD,SAAwCpe,EAASE,GAC7C,IAAMvO,EAAQuO,EAAgB,GACxBtO,EAAMsO,EAAgB,GAC5B,OAAIhoC,MAAMC,QAAQ6nC,GACQA,EAAQ5lC,QAAO,SAAU4F,EAAM5H,EAAO6H,GACxD,IAAMo+C,EAAS7lD,IAAOwH,EAAKsH,QAAQ3P,WAAWe,OAASsH,EAAKuH,QAAQ5P,WAAWe,OAAQ,sBAAsBE,UAC7G,OAAO+4B,GAAS0sB,GAAUA,GAAUzsB,KAIrC,KAkDS0sB,CAA+Bte,EAASE,IAEtDqe,EAjBN,SAAyB9jD,EAAMysC,GAC3B,GAAIhvC,MAAMC,QAAQsC,GAAO,CACrB,GAAkB,OAAdysC,GAAoC,KAAdA,QAAkCxvC,IAAdwvC,EAC1C,OAAOzsC,EAEX,IAAMutC,EAAQ,IAAIvpB,OAAOyoB,EAAW,KAIpC,OAHwBzsC,EAAKL,QAAO,SAAU4F,EAAM5H,EAAO6H,GACvD,OAA+D,OAAxDD,EAAKwB,SAAS7J,WAAWwJ,cAAcpL,MAAMiyC,MAI5D,OAAO,KAMSwW,EAjDM/jD,EAgDe6mC,EAhDT4c,EAgDsBC,EA9C9CjmD,MAAMC,QAAQsC,GACK,IAAfyjD,EACmBzjD,EAAKL,QAAO,SAAU4F,EAAM5H,EAAO6H,GAClD,OAAiC,KAA1BzK,OAAOwK,EAAKE,aAIR,IAAfg+C,EACmBzjD,EAAKL,QAAO,SAAU4F,EAAM5H,EAAO6H,GAClD,OAAiC,KAA1BzK,OAAOwK,EAAKE,aAIR,IAAfg+C,EACmBzjD,EAAKL,QAAO,SAAU4F,EAAM5H,EAAO6H,GAClD,OAAiC,KAA1BzK,OAAOwK,EAAKE,aAIR,IAAfg+C,EACmBzjD,EAAKL,QAAO,SAAU4F,EAAM5H,EAAO6H,GAClD,OAAiC,KAA1BzK,OAAOwK,EAAKE,WAA8C,KAA1B1K,OAAOwK,EAAKE,WAA8C,KAA1B1K,OAAOwK,EAAKE,aAIpFzF,EAEJ,MAoB0CysC,GAKjDW,EAAgB,KAOpB,QAN0BnwC,IAAtB9B,KAAKI,MAAM0mB,QAA8D,IAAtC9mB,KAAKI,MAAM0mB,OAAO4B,SAASjmB,SAE9DwvC,EAAgBjyC,KAAKkX,MAAMyxC,EAAa3oD,KAAKI,MAAM0mB,SAIjC,OAAlBmrB,EACA,OAAO,KAEX,IAAMC,EAAeD,EAAcjyC,KAAKI,MAAMooD,eACxCK,EAAmB3W,EAAanjC,MAAK,SAAUC,EAAGC,GAGpD,OAFgBrM,IAAOoM,EAAE0C,QAAQ3P,WAAWe,OAASkM,EAAE2C,QAAQ5P,WAAWe,OAAQ,sBAAsBE,UACxFJ,IAAOqM,EAAEyC,QAAQ3P,WAAWe,OAASmM,EAAE0C,QAAQ5P,WAAWe,OAAQ,sBAAsBE,UAC7E,GAAK,KAG9BuO,EAAYvR,KAAKI,MAAMmR,UACvBu5B,EAAa+d,EAAiBn8C,KAAI,SAAUnM,EAAOiC,EAAOyD,GAc5D,IAb0BqE,EAapB1B,EAAOhG,IAAOrC,EAAMmR,QAAQ3P,WAAWe,OAASvC,EAAMoR,QAAQ5P,WAAWe,OAAQ,sBAAsBE,UACvGwmC,EAAOjpC,EAAMwqC,QACbl5B,EAAOtR,EAAMqL,SACb5G,EAfe,MADKsF,EAgBM1K,OAAOW,EAAM+J,WAd9B,EAEM,KAAbA,EACO,EAEM,KAAbA,EACO,EAEJA,EAQPm/B,GAAY,EAChB,GAAIjnC,EAAQ0vC,EAAazvC,OAAS,EAAG,CACjC,IAAMZ,EAAMe,IAAOgG,GAAM8F,OAAO,cAC1Bg+B,EAAa9pC,IAAOsvC,EAAa1vC,EAAQ,GAAGkP,QAAQ3P,WAAWe,OAASvC,EAAMoR,QAAQ5P,WAAWe,OAAQ,sBAAsB4L,OAAO,cAC5I+6B,EAAY7mC,IAAOf,GAAKmpC,OAAO0B,EAAY,OAM/C,OAJIlqC,IAAU0vC,EAAazvC,OAAS,IAChCgnC,GAAY,GAIZ,kBAAC,GAAD,CAAqBvpC,IAAK,sBAAwBsC,EAAOgnC,KAAMA,EAAM5gC,KAAMA,EAAMiJ,KAAMA,EAAM7M,OAAQA,EAAQ2kC,MAAOppC,EAAM0qC,SAAUvB,OAAQnpC,EAAM2qC,SAAUxnC,MAAOnD,EAAM8nB,KAAMngB,IAAK3H,EAAMgoB,SAAUhX,UAAWA,EAAWk4B,UAAWA,OAKvO0B,EADQ,CAAC,eAAM,2BAAQ,eAAM,eAAM,gBACjBz+B,KAAI,SAAUnM,EAAOiC,EAAO6H,GAEhD,OACI,wBAAIlJ,UAAU,uBAAuBR,MAAO,CAAE6S,eAAgB,WAAajT,MAInF,OACI,6BACI,yBAAKI,MAAO,CAAEI,OAAQ,OAAQgV,gBAAiB,yBAA0BnV,QAAS,OAAQI,oBAAqB,0BAC1GmqC,GAEL,yBAAKxqC,MAAO,CAAE+X,OAAQ,mCAAoC+G,aAAc,cAAe9G,eAAgB,aACnG,yBAAKhY,MAAO,CAAEq0B,UAAW,sBAAuBD,UAAW,sBAAuB+U,UAAW,SACvD,OAAjC77B,KAAKC,UAAUgkC,GACZpH,EAEA,yBAAKnqC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,0BAChD,yBAAKL,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQC,WAAY,SAAU2S,eAAgB,WAArF,8B,GAzOEhU,cCqInBspD,G,2MAhIXppD,MAAQ,CACJqpD,UAAW,2BACXR,UAAW,EACXjX,UAAW,KACXxqB,OAAQ,CAAE,SAAY,IACtBojB,cAAc,EACdC,YAAa,GAEbhnB,OAAQ,KACR6lC,aAAc,KACdC,WAAY,KACZ7e,QAAS,I,EA0Cb8e,iBAAmB,SAAC9xC,GAChB,EAAKnX,SAAS,CAAEqxC,UAAWl6B,EAAMC,OAAO9W,S,EAG5C4oD,cAAgB,SAAC5oD,GACb,EAAKN,SAAS,CAAEsoD,UAAWhoD,K,EAG/BgxC,cAAgB,SAAChxC,GACbiD,QAAQC,IAAIlD,GACZ,EAAKN,SAAS,CAAE8oD,UAAWxoD,K,EAG/BgR,UAAY,SAACV,GACT,EAAK5Q,SAAS,CACViqC,cAAc,EACdC,YAAat5B,K,EAIrB6C,SAAW,SAAApC,GACP,EAAKrR,SAAS,CACViqC,cAAc,K,EAItB74B,aAAe,SAAAC,GACX,EAAKrR,SAAS,CACViqC,cAAc,K,mFAnED,IAAD,EACsBlqC,KAAKI,MAAnCqe,EADQ,EACRA,SAAU6rB,EADF,EACEA,gBACZz8B,EAAM4Q,EAASpX,MACf4B,EAAYrG,IAAO0nC,EAAgB,IAAI57B,OAAO,cAC9CxF,EAAUtG,IAAO0nC,EAAgB,IAAI57B,OAAO,cAClD1O,KAAKC,SAAS,CAAEkjB,OAAQtV,EAAKm7C,aAAc//C,EAAWggD,WAAY//C,IAClElJ,KAAK0jC,OAAO71B,EAAK5E,K,2CAEC,IAAD,EACqBjJ,KAAKI,MAAnCqe,EADS,EACTA,SAAU6rB,EADD,EACCA,gBADD,EAE4BtqC,KAAKN,MAA1CyjB,EAFS,EAETA,OAAQ6lC,EAFC,EAEDA,aAAcC,EAFb,EAEaA,WACxBp7C,EAAM4Q,EAASpX,MACf4B,EAAYrG,IAAO0nC,EAAgB,IAAI57B,OAAO,cAC9CxF,EAAUtG,IAAO0nC,EAAgB,IAAI57B,OAAO,cAC9Cb,IAAQsV,GAAUla,IAAc+/C,GAAgB9/C,IAAY+/C,IAC5DjpD,KAAKC,SAAS,CAAEkjB,OAAQtV,EAAKm7C,aAAc//C,EAAWggD,WAAY//C,IAClElJ,KAAK0jC,OAAO71B,EAAK5E,M,6BAGlB4E,EAAK28B,GAAqB,IAAD,OAC5B4e,GAAsCv7C,EAAK28B,EAAoB,MAAO,YACjErgC,MAAK,SAAAtF,GAAI,OAAI,EAAK5E,SAAS,CAAEmqC,QAASvlC,EAAKA,UAC3C0F,OAAM,SAAAC,GAAShH,QAAQC,IAAI+G,MAGhCK,GAAwB,cACnBV,MAAK,SAAAtF,GACF,IAAIiiB,EAASjiB,EAAKA,KAAKqjB,MAAK,SAAA/c,GAAI,MAAkC,qBAA9BA,EAAKgd,gBAAgBtW,QACzDiV,EAAO4B,SAAP,CAAmB,CAAE,IAAO,2BAAQ,UAAa,OAAjD,oBAA4D5B,EAAO4B,WACnEllB,QAAQC,IAAI,qCAAuCwK,KAAKC,UAAU4Y,IAClE,EAAK7mB,SAAS,CACV6mB,OAAQA,OAGfvc,OAAM,SAAAC,GACHhH,QAAQC,IAAI+G,Q,+BAoCd,IACEioC,EAAqBC,KAArBD,OACAnI,GADqBoI,KAAbj0B,SACYze,KAAKI,MAAzBkqC,iBAFH,EAG0CtqC,KAAKN,MAA5CwqC,EAHH,EAGGA,aAAcC,EAHjB,EAGiBA,YAAaC,EAH9B,EAG8BA,QAC7B74B,EAAYvR,KAAKuR,UACjBmC,EAAW1T,KAAK0T,SAChBrC,EAAerR,KAAKqR,aAC1B,OACI,6BACI,yBAAK1Q,MAAO,CAAEoV,gBAAiB,YAAa0J,aAAc,cAAe1e,OAAQ,OAAQmU,QAAS,WAAYtU,QAAS,OAAQC,WAAY,SAAUG,oBAAqB,YACtK,wBAAIL,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBAAtC,8CACA,yBAAKxO,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,mBAAoBC,cAAe,QACnF,kBAAC,KAAD,CAAQiS,aAAclT,KAAKN,MAAMqpD,UAAW1yC,YAAY,uCAAS1V,MAAO,CAAE0S,MAAO,KAAOF,SAAUnT,KAAKuxC,eAClGvxC,KAAKN,MAAMonB,OAAO4B,SAAShc,KAAI,SAACic,EAASnmB,GACtC,OAAO,kBAACiwC,EAAD,CAAQvyC,IAAKsC,EAAOjC,MAAOooB,EAAQ0/B,OAAS1/B,EAAQzoB,IAAM,IAAMyoB,EAAQ0/B,OAAS1/B,EAAQzoB,KAAMyoB,EAAQ0/B,OAAS1/B,EAAQzoB,IAAM,IAAMyoB,EAAQ0/B,OAAS1/B,EAAQzoB,SAG5K,kBAAC,KAAD,CAAQgT,aAAclT,KAAKN,MAAM6oD,UAAWlyC,YAAY,uCAAS1V,MAAO,CAAE0S,MAAO,KAAOF,SAAUnT,KAAKmpD,eACnG,kBAAC1W,EAAD,CAAQlyC,MAAO,GAAf,4BACA,kBAACkyC,EAAD,CAAQlyC,MAAO,GAAf,4BACA,kBAACkyC,EAAD,CAAQlyC,MAAO,GAAf,sBACA,kBAACkyC,EAAD,CAAQlyC,MAAO,GAAf,sBACA,kBAACkyC,EAAD,CAAQlyC,MAAO,GAAf,iBAEJ,kBAAC,KAAD,CAAO6V,GAAG,gBAAgBC,YAAY,iCAAQlD,SAAUnT,KAAKkpD,qBAGrE,kBAAC,GAAD,CAAqB5e,gBAAiBA,EAAiBF,QAASA,EAASoe,cAAexoD,KAAKN,MAAMqpD,UAAWjiC,OAAQ9mB,KAAKN,MAAMonB,OAAQyhC,UAAWvoD,KAAKN,MAAM6oD,UAAWjX,UAAWtxC,KAAKN,MAAM4xC,UAAWhhC,QAAS45B,EAAc34B,UAAWA,EAAWmC,SAAUA,EAAUrC,aAAcA,IAE1R,kBAAC,KAAD,CACIlN,MAAO,2BACPmM,QAAS45B,EACTj0B,KAAMvC,EACNJ,SAAUjC,EACVgC,MAAO,IACPE,OAAQ,MACR,kBAAC,GAAD,CAAgB1C,OAAQs5B,U,GA1HnB3qC,aC+cV6pD,G,YAjcX,WAAYjpD,GAAQ,IAAD,8BACf,4CAAMA,KAfVV,MAAQ,CACJmoD,WAAY,EACZyB,YAAa,GACbhf,gBAAiB,CAAC1nC,IAAOA,MAAS6L,SAAS,EAAG,QAAQC,OAAO,aAC7D9L,IAAOA,MAAS8L,OAAO,cACvBwY,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,SAAU,GACV8iB,QAAS,GACT7iB,QAAS,GACTutB,WAAW,GAEI,EAqVnBC,qBAAuB,SAACx7B,GACpB,EAAKtZ,SAAS,CACV4nD,WAAYtuC,KAvVD,EA2VnBgwC,sBAAwB,SAAChwC,GACrB,EAAKtZ,SAAS,CACVqpD,YAAa/vC,KA7VF,EAqWnByC,SAAW,SAAC1K,GAAO,IACPmN,EAAa,EAAKre,MAAlBqe,SACA6rB,EAAoB,EAAK5qC,MAAzB4qC,gBACFzJ,EAAOpiB,EAASQ,aAAa6hB,SAC7BC,EAAWn+B,IAAOA,IAAOi+B,GAAMnyB,OAAO,aAAa1L,UAEnD8D,EAAKwjC,EAAgB,GAAGtnC,UACxB+D,EAAKujC,EAAgB,GAAGtnC,UAExBnB,EAAM,MAEZ,OAAQyP,EAAE+F,OAAO9W,OACb,IAAK,IACD,GAAIwgC,GAAaj6B,EAAKjF,EAAM,CACxB,IAAMoa,EAAQ,CAACrZ,IAAOA,IAAOkE,EAAKjF,GAAK6M,OAAO,aAAc9L,IAAOA,IAAOmE,EAAKlF,GAAK6M,OAAO,cAC3F,EAAK86C,sBAAsBvtC,GAE/B,MACJ,IAAK,IACD,IAAMC,EAAQ,CAACtZ,IAAOA,MAAS6L,SAAS,EAAG,QAAQC,OAAO,aAAc9L,IAAOA,MAAS8L,OAAO,cAC/F,EAAK86C,sBAAsBttC,GAC3B,MACJ,IAAK,IAED,GADctZ,IAAOA,MAAS8L,OAAO,aAAa1L,WACpC+D,EAAKlF,EAAM,CACrB,IAAMsa,EAAQ,CAACvZ,IAAOA,IAAOkE,EAAKjF,GAAK6M,OAAO,aAAc9L,IAAOA,IAAOmE,EAAKlF,GAAK6M,OAAO,cAC3F,EAAK86C,sBAAsBrtC,MA7XvC,EAAKqtC,sBAAwB,EAAKA,sBAAsBxyC,KAA3B,iBAFd,E,8EAMf,SAASyyC,EAAWlpD,GAChB,OAAc,OAAVA,QAA4BuB,IAAVvB,GAAiC,KAAVA,EAClC,GAEJA,EAAMwB,WAAWe,OAE5B,IAAM4mD,EAAY1pD,KAAKN,MAAM4qC,gBACvBqf,EAAa3pD,KAAKN,MAAMmoD,WACxB+B,EAAeF,EAAU,GAAG1mD,UAC5B6mD,EAAeH,EAAU,GAAG1mD,UAAa,MAEzCmkB,EAAWnnB,KAAKN,MAAMynB,SACtBD,EAAWlnB,KAAKN,MAAMwnB,SACtBE,EAAWpnB,KAAKN,MAAM0nB,SACtBC,EAAWrnB,KAAKN,MAAM2nB,SACtBC,EAAWtnB,KAAKN,MAAM4nB,SAGxBwiC,EAAW,GACf,GAAmB,IAAfH,EAAkB,CAClB,IAAK,IAAInnD,EAAQ,EAAGA,EAAQ2kB,EAAS1kB,OAAQD,IAAS,CAClD,IAAME,EAAUykB,EAAS3kB,GACnB0nB,EAAMu/B,EAAW/mD,EAAQynB,OACzB4/B,EAAON,EAAW/mD,EAAQmoB,OAC1Bm/B,EAAMP,EAAW/mD,EAAQ2nB,OACzB4/B,EAAMR,EAAW/mD,EAAQ6nB,OACzB2/B,EAAKT,EAAW/mD,EAAQ+nB,OACxB0/B,EAAMV,EAAW/mD,EAAQ0nD,OACzBC,EAAMZ,EAAW/mD,EAAQioB,OACzB/hB,EAAOhG,IAAQF,EAAQ2iB,QAAQtjB,WAAaW,EAAQ4iB,QAAQvjB,WAAa,sBAAsBiB,UACjG4mD,EAAehhD,GAAQA,EAAOihD,GAC9BC,EAAS5jD,KAAK,CACVkoB,KAAMxrB,IAAQF,EAAQ2iB,QAAQtjB,WAAaW,EAAQ4iB,QAAQvjB,WAAa,sBAAsB2M,OAAO,uBACrG0U,KAAM,CAAC8G,EAAK6/B,EAAMC,EAAKC,EAAKC,EAAIC,EAAKE,KAIjD,OAAOP,EAEX,GAAmB,IAAfH,EAAkB,CAClB,IAAK,IAAInnD,EAAQ,EAAGA,EAAQ4kB,EAAS3kB,OAAQD,IAAS,CAClD,IAAME,EAAU0kB,EAAS5kB,GACnB8nD,EAAKb,EAAW/mD,EAAQmoB,OACxBC,EAAI2+B,EAAW/mD,EAAQ2nB,OACvBkgC,EAAKd,EAAW/mD,EAAQ6nB,OAExBigC,EAAUf,EAAW/mD,EAAQ+nB,OAE7BO,EAAIy+B,EAAW/mD,EAAQuoB,OACvBa,EAAM29B,EAAW/mD,EAAQqpB,OACzB0+B,EAAKhB,EAAW/mD,EAAQ8qB,OACxB5kB,EAAOhG,IAAQF,EAAQ2iB,QAAQtjB,WAAaW,EAAQ4iB,QAAQvjB,WAAa,sBAAsBiB,UACjG4mD,EAAehhD,GAAQA,EAAOihD,GAC9BC,EAAS5jD,KAAK,CACVkoB,KAAMxrB,IAAQF,EAAQ2iB,QAAQtjB,WAAaW,EAAQ4iB,QAAQvjB,WAAa,sBAAsB2M,OAAO,uBACrG0U,KAAM,CAACknC,EAAIx/B,EAAGy/B,EAVP,KAUmBC,EARvB,KAQoCx/B,EAAGc,EAAK2+B,KAI3D,OAAOX,EAEX,GAAmB,IAAfH,EAAkB,CAClB,IAAK,IAAInnD,EAAQ,EAAGA,EAAQ4kB,EAAS3kB,OAAQD,IAAS,CAClD,IAAME,EAAU0kB,EAAS5kB,GACnBkoD,EAAMjB,EAAW/mD,EAAQypB,OACzBC,EAAMq9B,EAAW/mD,EAAQ2pB,OACzBs+B,EAAOlB,EAAW/mD,EAAQ6pB,OAC1Bq+B,EAAOnB,EAAW/mD,EAAQ+pB,OAC1Bo+B,EAAOpB,EAAW/mD,EAAQooD,OAC1BC,EAAOtB,EAAW/mD,EAAQioB,OAC1BqgC,EAAMvB,EAAW/mD,EAAQyoB,OACzBviB,EAAOhG,IAAQF,EAAQ2iB,QAAQtjB,WAAaW,EAAQ4iB,QAAQvjB,WAAa,sBAAsBiB,UACjG4mD,EAAehhD,GAAQA,EAAOihD,GAC9BC,EAAS5jD,KAAK,CACVkoB,KAAMxrB,IAAQF,EAAQ2iB,QAAQtjB,WAAaW,EAAQ4iB,QAAQvjB,WAAa,sBAAsB2M,OAAO,uBACrG0U,KAAM,CAACsnC,EAAKt+B,EAAKu+B,EAAMC,EAAMC,EAAME,EAAMC,KAIrD,OAAOlB,EAEX,GAAmB,IAAfH,EAAkB,CAClB,IAAK,IAAInnD,EAAQ,EAAGA,EAAQ4kB,EAAS3kB,OAAQD,IAAS,CAClD,IAAME,EAAU0kB,EAAS5kB,GACnByoD,EAAOxB,EAAW/mD,EAAQmqB,OAC1BC,EAAO28B,EAAW/mD,EAAQqqB,OAC1BE,EAAQrtB,OAAOqrD,IAASrrD,OAAOktB,GAAQ,EAAI/a,WAAWk5C,EAAOn+B,GAAM9a,QAAQ,GAAK,KAChFk5C,EAAMzB,EAAW/mD,EAAQyoD,OACzBJ,EAAOtB,EAAW/mD,EAAQ0oD,MAC1BxiD,EAAOhG,IAAQF,EAAQ2iB,QAAQtjB,WAAaW,EAAQ4iB,QAAQvjB,WAAa,sBAAsBiB,UACjG4mD,EAAehhD,GAAQA,EAAOihD,GAC9BC,EAAS5jD,KAAK,CACVkoB,KAAMxrB,IAAQF,EAAQ2iB,QAAQtjB,WAAaW,EAAQ4iB,QAAQvjB,WAAa,sBAAsB2M,OAAO,uBACrG0U,KAAM,CAAC6nC,EAAMn+B,EAAMG,EAAOi+B,EAAKH,KAI3C,OAAOjB,EAEX,GAAmB,IAAfH,EAAkB,CAClB,IAAK,IAAInnD,EAAQ,EAAGA,EAAQ4kB,EAAS3kB,OAAQD,IAAS,CAClD,IAAME,EAAU0kB,EAAS5kB,GACnB6oD,EAAK5B,EAAW/mD,EAAQ4oD,OACxBC,EAAO9B,EAAW/mD,EAAQ8oD,OAE1BC,GAAYhC,EAAW/mD,EAAQgpD,OAC/B9iD,GAAOhG,IAAQF,EAAQ2iB,QAAQtjB,WAAaW,EAAQ4iB,QAAQvjB,WAAa,sBAAsBiB,UACjG4mD,EAAehhD,IAAQA,GAAOihD,GAC9BC,EAAS5jD,KAAK,CACVkoB,KAAMxrB,IAAQF,EAAQ2iB,QAAQtjB,WAAaW,EAAQ4iB,QAAQvjB,WAAa,sBAAsB2M,OAAO,uBACrG0U,KAAM,CAACioC,EAAIE,EANP,KAMkBE,MAIlC,OAAO3B,EAEX,GAAmB,IAAfH,EAAkB,CAClB,IAAK,IAAInnD,GAAQ,EAAGA,GAAQ2kB,EAAS1kB,OAAQD,KAAS,CAClD,IAAME,GAAUykB,EAAS3kB,IACnBmpD,GAAKlC,EAAW/mD,GAAQyoD,OACxBS,GAAOnC,EAAW/mD,GAAQypB,OAC1B0/B,GAAMpC,EAAW/mD,GAAQ2pB,OACzBzjB,GAAOhG,IAAQF,GAAQ2iB,QAAQtjB,WAAaW,GAAQ4iB,QAAQvjB,WAAa,sBAAsBiB,UACjG4mD,EAAehhD,IAAQA,GAAOihD,GAC9BC,EAAS5jD,KAAK,CACVkoB,KAAMxrB,IAAQF,GAAQ2iB,QAAQtjB,WAAaW,GAAQ4iB,QAAQvjB,WAAa,sBAAsB2M,OAAO,uBACrG0U,KAAM,CAACuoC,GAAIC,GAAMC,MAI7B,OAAO/B,EAEX,GAAmB,IAAfH,EAAkB,CAClB,IAAK,IAAInnD,GAAQ,EAAGA,GAAQ6kB,EAAS5kB,OAAQD,KAAS,CAClD,IAAME,GAAU2kB,EAAS7kB,IACnB8oB,GAAKm+B,EAAW/mD,GAAQ6oB,MACxBugC,GAAOrC,EAAW/mD,GAAQ+oB,MAC1BsgC,GAAMtC,EAAW/mD,GAAQmpB,MACzBmgC,GAAOvC,EAAW/mD,GAAQypC,MAC1BzgB,GAAK+9B,EAAW/mD,GAAQipB,MACxBsgC,GAAQxC,EAAW/mD,GAAQ4pC,MAC3B4f,GAAOzC,EAAW/mD,GAAQ8pC,MAC1B5jC,GAAOhG,IAAQF,GAAQ2iB,QAAQtjB,WAAaW,GAAQ4iB,QAAQvjB,WAAa,sBAAsBiB,UACjG4mD,EAAehhD,IAAQA,GAAOihD,GAC9BC,EAAS5jD,KAAK,CACVkoB,KAAMxrB,IAAQF,GAAQ2iB,QAAQtjB,WAAaW,GAAQ4iB,QAAQvjB,WAAa,sBAAsB2M,OAAO,uBACrG0U,KAAM,CAACkI,GAAIwgC,GAAMC,GAAKC,GAAMtgC,GAAIugC,GAAOC,MAInD,OAAOpC,EAEX,GAAmB,IAAfH,EAAkB,CAClB,IAAK,IAAInnD,GAAQ,EAAGA,GAAQ6kB,EAAS5kB,OAAQD,KAAS,CAClD,IAAME,GAAU2kB,EAAS7kB,IACnB0nD,GAAKT,EAAW/mD,GAAQypD,MACxBhC,GAAMV,EAAW/mD,GAAQ0pD,MACzB9B,GAAKb,EAAW/mD,GAAQ2pD,MACxBvhC,GAAI2+B,EAAW/mD,GAAQ4pD,MACvBC,GAAS9C,EAAW/mD,GAAQ8pD,MAC5BC,GAAMhD,EAAW/mD,GAAQgqD,MACzBjC,GAAKhB,EAAW/mD,GAAQiqD,MACxB/jD,GAAOhG,IAAQF,GAAQ2iB,QAAQtjB,WAAaW,GAAQ4iB,QAAQvjB,WAAa,sBAAsBiB,UACjG4mD,EAAehhD,IAAQA,GAAOihD,GAC9BC,EAAS5jD,KAAK,CACVkoB,KAAMxrB,IAAQF,GAAQ2iB,QAAQtjB,WAAaW,GAAQ4iB,QAAQvjB,WAAa,sBAAsB2M,OAAO,uBACrG0U,KAAM,CAAC8mC,GAAIC,GAAKG,GAAIx/B,GAAGyhC,GAAQE,GAAKhC,MAIhD,OAAOX,EAEX,GAAmB,IAAfH,EAAkB,CAClB,IAAK,IAAInnD,GAAQ,EAAGA,GAAQ0kB,EAASzkB,OAAQD,KAAS,CAClD,IAAME,GAAUwkB,EAAS1kB,IACnBoqD,GAAYnD,EAAW/mD,GAAQunB,SAC/B4iC,GAASpD,EAAW/mD,GAAQoqD,OAC5BlkD,GAAOhG,IAAQF,GAAQ2iB,QAAQtjB,WAAaW,GAAQ4iB,QAAQvjB,WAAa,sBAAsBiB,UACjG4mD,EAAehhD,IAAQA,GAAOihD,GAC9BC,EAAS5jD,KAAK,CACVkoB,KAAMxrB,IAAQF,GAAQ2iB,QAAQtjB,WAAaW,GAAQ4iB,QAAQvjB,WAAa,sBAAsB2M,OAAO,uBACrG0U,KAAM,CAACwpC,GAAWC,MAI9B,OAAO/C,EAEX,GAAmB,IAAfH,EAAkB,CAClB,IAAK,IAAInnD,GAAQ,EAAGA,GAAQ8kB,EAAS7kB,OAAQD,KAAS,CAClD,IAAME,GAAU4kB,EAAS9kB,IACnBuqD,GAAMtD,EAAW/mD,GAAQynB,OACzB6iC,GAAWvD,EAAW/mD,GAAQyoB,OAC9Bw/B,GAAOlB,EAAW/mD,GAAQ+nB,OAC1BmgC,GAAOnB,EAAW/mD,GAAQ0nD,OAC1BxhD,GAAOhG,IAAQF,GAAQ2iB,QAAQtjB,WAAaW,GAAQ4iB,QAAQvjB,WAAa,sBAAsBiB,UACjG4mD,EAAehhD,IAAQA,GAAOihD,GAC9BC,EAAS5jD,KAAK,CACVkoB,KAAMxrB,IAAQF,GAAQ2iB,QAAQtjB,WAAaW,GAAQ4iB,QAAQvjB,WAAa,sBAAsB2M,OAAO,uBACrG0U,KAAM,CAAC2pC,GAAKC,GAAUrC,GAAMC,MAIxC,OAAOd,EAEX,GAAmB,KAAfH,EAAmB,CACnB,IAAK,IAAInnD,GAAQ,EAAGA,GAAQ2kB,EAAS1kB,OAAQD,KAAS,CAClD,IAAMyqD,GAAa9lC,EAAS3kB,IACtB0nB,GAAMu/B,EAAWwD,GAAW9iC,OAC5B4/B,GAAON,EAAWwD,GAAWpiC,OAC7BqiC,GAAMzD,EAAWwD,GAAW5iC,OAC5B4/B,GAAMR,EAAWwD,GAAW1iC,OAE5B3hB,GAAOhG,IAAQqqD,GAAW5nC,QAAQtjB,WAAakrD,GAAW3nC,QAAQvjB,WAAa,sBAAsBiB,UACvG4mD,EAAehhD,IAAQA,GAAOihD,GAC9BC,EAAS5jD,KAAK,CACVkoB,KAAMxrB,IAAQqqD,GAAW5nC,QAAQtjB,WAAakrD,GAAW3nC,QAAQvjB,WAAa,sBAAsB2M,OAAO,uBAC3G0U,KAAM,CAAC8G,GAAK6/B,GAAMmD,GAAKjD,GAAK,KAAM,QAI9C,IAAK,IAAIznD,GAAQ,EAAGA,GAAQ4kB,EAAS3kB,OAAQD,KAAS,CAClD,IAAM2qD,GAAa/lC,EAAS5kB,IAEtB4oB,GAAMq+B,EAAW0D,GAAW9hC,OAC5BziB,GAAOhG,IAAQuqD,GAAW9nC,QAAQtjB,WAAaorD,GAAW7nC,QAAQvjB,WAAa,sBAAsBiB,UACvG4mD,EAAehhD,IAAQA,GAAOihD,GAC9BC,EAAS5jD,KAAK,CACVkoB,KAAMxrB,IAAQuqD,GAAW9nC,QAAQtjB,WAAaorD,GAAW7nC,QAAQvjB,WAAa,sBAAsB2M,OAAO,uBAC3G0U,KAAM,CAAC,KAAM,KAAM,KAAM,KANrB,KAMgCgI,MAIhD,OAAO0+B,EAEX,OAAO,O,0CAIU,IACTrrC,EAAaze,KAAKI,MAAlBqe,SACRze,KAAKC,SAAS,CAAEkjB,OAAQ1E,EAASpX,QACjCrH,KAAKotD,UAAU3uC,EAASxN,UAAWwN,EAASpX,OAC5CrH,KAAKqtD,eAAiBrtD,KAAKqtD,eAAer2C,KAAKhX,Q,2CAG7B,IACVye,EAAaze,KAAKI,MAAlBqe,SACWze,KAAKN,MAAhByjB,SACO1E,EAASpX,QACpBrH,KAAKC,SAAS,CAAEkjB,OAAQ1E,EAASpX,QACjCrH,KAAKotD,UAAU3uC,EAASxN,UAAWwN,EAASpX,OAC5CrH,KAAKqtD,eAAiBrtD,KAAKqtD,eAAer2C,KAAKhX,S,gCAO7C0pD,EAAW77C,GAAM,IAAD,OACtB7N,KAAKC,SAAS,CAAE60C,WAAW,IAQ3B,IAAMhuC,EAAKlE,IAAO8mD,EAAW,YAAYh7C,OAAO,cAChDlL,QAAQC,IAAIimD,EAAW77C,GACvB,IACMga,EAVN,SAA6B1lB,GACzB,IAAM2lB,GAAoB,IAAIrQ,MAAO0D,UAAY,IAAI1D,KAAKtV,GAAYgZ,UAGtE,OADiBzW,SAASojB,EADH,QACyC,EAO9CC,CADLnlB,IAAO8mD,EAAW,YAAYh7C,OAAO,eAEhDwY,EAAWhd,GAAuC2D,EAAK/G,GACxDqD,MAAK,SAAAtF,GACF,OAAOA,EAAKA,QAEf0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,uBAAyBwK,KAAKC,UAAU1D,OAEtD2c,EAAWjd,GAAuC2D,EAAK/G,GACxDqD,MAAK,SAAAtF,GACF,OAAOA,EAAKA,QAEf0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,uBAAyBwK,KAAKC,UAAU1D,OAEtD4c,EAAWld,GAAuC2D,EAAK/G,GACxDqD,MAAK,SAAAtF,GACF,OAAOA,EAAKA,QAEf0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,uBAAyBwK,KAAKC,UAAU1D,OAEtD6c,EAAWnd,GAAuC2D,EAAK/G,GACxDqD,MAAK,SAAAtF,GACF,OAAOA,EAAKA,QAEf0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,uBAAyBwK,KAAKC,UAAU1D,OAEtD8c,EAAWpd,GAAuC2D,EAAK/G,GACxDqD,MAAK,SAAAtF,GAEF,OADArB,QAAQC,IAAIoB,EAAKA,MACVA,EAAKA,QAEf0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,uBAAyBwK,KAAKC,UAAU1D,OAEtD4/B,EAAUlgC,GAAsC2D,EAAK/G,EAAI,MAAO,YACjEqD,MAAK,SAAAtF,GAEF,OADArB,QAAQC,IAAIoB,EAAKA,MACVA,EAAKA,QAEf0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,0CAA4CwK,KAAKC,UAAU1D,OAEzE+c,EAAUrd,GAAsC2D,EAAKga,EAAe,MAAO,YAC5E1d,MAAK,SAAAtF,GACF,OAAOA,EAAKA,QAEf0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,0CAA4CwK,KAAKC,UAAU1D,OAE/EM,QAAQC,IAAI,CAACmc,EAAUC,EAAUC,EAAUC,EAAUC,EAAU8iB,EAAS7iB,IAAUpd,MAAK,SAAAa,GACnF,EAAK/K,SAAS,CACVinB,SAAUlc,EAAO,GACjBmc,SAAUnc,EAAO,GACjBoc,SAAUpc,EAAO,GACjBqc,SAAUrc,EAAO,GACjBsc,SAAUtc,EAAO,GACjBo/B,QAASp/B,EAAO,GAChBuc,QAASvc,EAAO,GAChB8pC,WAAW,OAEhBvqC,OAAM,WAAQ,EAAKtK,SAAS,CAAE60C,WAAW,S,4CAc1BzxC,EAAMu1B,GACxB54B,KAAKC,SAAS,CAAEqqC,gBAAiBjnC,M,+BAqC3B,IACEob,EAAaze,KAAKI,MAAlBqe,SACF6uC,EAAattD,KAAKN,MAAM4qC,gBAC1BzlC,EAAO7E,KAAKqtD,iBAEhBxoD,EAAOA,EAAKkK,MAAK,SAACC,EAAGC,GAGjB,OAFgBrM,IAAOoM,EAAEof,KAAM,oBAAoBprB,UACnCJ,IAAOqM,EAAEmf,KAAM,oBAAoBprB,UACpB,GAAK,KARnC,IAWG81B,EAAgBC,KAAhBD,YACFwR,EAAkB,CAACgjB,EAAW,GAAGtqD,UAAWsqD,EAAW,GAAGtqD,WAEhE,OACI,yBAAK7B,UAAU,oBACX,yBAAKR,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,MAAO8jB,aAAc,QACnG,kBAAC+T,EAAD,CAEIxiB,qBAAsB,SAAAC,GAAW,OAAIA,EAAYC,YACjDjW,MAAOP,KAAKN,MAAM4qC,gBAClB57B,OAAQ,aACRiP,YAAY,EACZqb,OAAQA,KACRxb,aAAc,SAACC,GAAc,OAAOA,EAAU7a,MAAS8a,WAAaD,EAAU7a,IAAO6b,EAASQ,aAAa6hB,SAAS/+B,WAAY,YAAYigC,SAE5I7uB,SAAUnT,KAAKwpD,wBAEnB,yBAAK7oD,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,QAC9E,kBAAC,KAAD,CAAQV,MAAM,IAAIqd,MAAM,SAASC,KAAK,cAAcpK,QAASzT,KAAKgc,WAClE,kBAAC,KAAD,CAAQzb,MAAM,IAAIqd,MAAM,SAASC,KAAK,eAAepK,QAASzT,KAAKgc,WACnE,kBAAC,KAAD,CAAQzb,MAAM,IAAIqd,MAAM,SAASC,KAAK,eAAepK,QAASzT,KAAKgc,aAIvEhc,KAAKN,MAAMo1C,UACJ,kBAAC,KAAD,CAAMrwC,KAAK,YAEV,yBAAK9D,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWw0B,QAAS,SACpE,kBAAC,GAAD,CAAS+3B,YAAavtD,KAAKN,MAAMmoD,WAC7BvnB,mBAAoBtgC,KAAK+0C,qBACzBlvB,SAAUhhB,EACVmiD,aAAchnD,KAAKN,MAAMmoD,WACzBvd,gBAAiBA,EACjB6c,oBAAqBnnD,KAAKupD,wBAE9B,kBAAC,GAAD,CAAY9qC,SAAUA,EAAU6rB,gBAAiBA,KAKjE,yBAAK3pC,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,iB,GAzc5DrB,aCyHVguD,G,2MA5HX9tD,MAAQ,CACJmK,SAAU,GACVD,SAAU,GACVkrC,WAAW,EACXxK,gBAAiB,CAAC1nC,IAAOA,MAAS6L,SAAS,EAAG,QAAQC,OAAO,aAC7D9L,IAAOA,MAAS8L,OAAO,e,EAiC3B86C,sBAAwB,SAACnmD,EAAMu1B,GAC3B,EAAK34B,SAAS,CAAEqqC,gBAAiBjnC,K,EAGrC2Y,SAAW,SAAC1K,GAAO,IACPmN,EAAa,EAAKre,MAAlBqe,SACA6rB,EAAoB,EAAK5qC,MAAzB4qC,gBACFzJ,EAAOpiB,EAASQ,aAAa6hB,SAC7BC,EAAWn+B,IAAOA,IAAOi+B,GAAMnyB,OAAO,aAAa1L,UAEnD8D,EAAKwjC,EAAgB,GAAGtnC,UACxB+D,EAAKujC,EAAgB,GAAGtnC,UAExBnB,EAAM,MAEZ,OAAQyP,EAAE+F,OAAO9W,OACb,IAAK,IACD,GAAIwgC,GAAaj6B,EAAKjF,EAAM,CACxB,IAAMoa,EAAQ,CAACrZ,IAAOA,IAAOkE,EAAKjF,GAAK6M,OAAO,aAAc9L,IAAOA,IAAOmE,EAAKlF,GAAK6M,OAAO,cAC3F,EAAK86C,sBAAsBvtC,GAE/B,MACJ,IAAK,IACD,IAAMC,EAAQ,CAACtZ,IAAOA,MAAS6L,SAAS,EAAG,QAAQC,OAAO,aAAc9L,IAAOA,MAAS8L,OAAO,cAC/F,EAAK86C,sBAAsBttC,GAC3B,MACJ,IAAK,IAED,GADctZ,IAAOA,MAAS8L,OAAO,aAAa1L,WACpC+D,EAAKlF,EAAM,CACrB,IAAMsa,EAAQ,CAACvZ,IAAOA,IAAOkE,EAAKjF,GAAK6M,OAAO,aAAc9L,IAAOA,IAAOmE,EAAKlF,GAAK6M,OAAO,cAC3F,EAAK86C,sBAAsBrtC,M,mFA5DvCnc,KAAKytD,Y,gCAEE,IAAD,OACNztD,KAAKC,SAAS,CAAE60C,WAAW,IADrB,IAEEr2B,EAAaze,KAAKI,MAAlBqe,SACF5Q,EAAM4Q,EAASpX,MAAMtF,WAAWe,OAChC+qB,EAAMpP,EAAS6J,OAAOvmB,WAAWe,OACjC+G,EAAWK,GAAuC2D,EAAKggB,EAAK,OAC7D1jB,MAAK,SAAAtF,GACF,OAAOA,EAAKA,QAEf0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,2CAA6CwK,KAAKC,UAAU1D,OAE1EZ,EAAWM,GAAuC2D,EAAKggB,GACxD1jB,MAAK,SAAAtF,GACF,OAAOA,EAAKA,QAEf0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,2CAA6CwK,KAAKC,UAAU1D,OAEhFM,QAAQC,IAAI,CAAClB,EAAUD,IAAWO,MAAK,SAAAa,GACnC,EAAK/K,SAAS,CACV4J,SAAUmB,EAAO,GACjBpB,SAAUoB,EAAO,GACjB8pC,WAAW,OAEhBvqC,OAAM,WAAQ,EAAKtK,SAAS,CAAE60C,WAAW,S,+BAyCtC,IACEr2B,EAAaze,KAAKI,MAAlBqe,SACFivC,EAAQ1tD,KAAKN,MAAMmK,SACnB8jD,EAAQ3tD,KAAKN,MAAMkK,SACnB0jD,EAAattD,KAAKN,MAAM4qC,gBAEtBxR,EAAgBC,KAAhBD,YACFwR,EAAkB,CAACgjB,EAAW,GAAGtqD,UAAWsqD,EAAW,GAAGtqD,WAChE,OAAqB,IAAjB0qD,EAAMjrD,QAAiC,IAAjBkrD,EAAMlrD,OAErB,KAIP,6BACI,yBAAK9B,MAAO,CAAEmpC,UAAW,SACrB,yBAAKnpC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,MAAO8jB,aAAc,QACnG,kBAAC+T,EAAD,CACIxiB,qBAAsB,SAAAC,GAAW,OAAIA,EAAYC,YACjDjW,MAAOP,KAAKN,MAAM4qC,gBAClB57B,OAAQ,aACRiP,YAAY,EACZqb,OAAQ,QACR7lB,SAAUnT,KAAKwpD,sBACfhsC,aAAc,SAACC,GAAc,OAAOA,EAAU7a,MAAS8a,WAAaD,EAAU7a,IAAO6b,EAASQ,aAAa6hB,SAAS/+B,WAAY,YAAYigC,WAEhJ,yBAAKrhC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,QAC9E,kBAAC,KAAD,CAAQV,MAAM,IAAIqd,MAAM,SAASC,KAAK,cAAcpK,QAASzT,KAAKgc,WAClE,kBAAC,KAAD,CAAQzb,MAAM,IAAIqd,MAAM,SAASC,KAAK,eAAepK,QAASzT,KAAKgc,WACnE,kBAAC,KAAD,CAAQzb,MAAM,IAAIqd,MAAM,SAASC,KAAK,eAAepK,QAASzT,KAAKgc,aAIvEhc,KAAKN,MAAMo1C,UACJ,kBAAC,KAAD,CAAMrwC,KAAK,YAEV,yBAAK9D,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWw0B,QAAS,SACpE,kBAACsgB,GAAD,CAAwBxL,gBAAiBA,EAAiBzgC,SAAU6jD,EAAOvgB,WAAW,EAAM1uB,SAAUA,IACtG,kBAACs3B,GAAD,CAAsBzL,gBAAiBA,EAAiB4I,SAAUya,EAAOxgB,WAAW,EAAM1uB,SAAUA,W,GAnHhHjf,a,OCPjB,ICAMqF,GAAO,CAChB,CACI,QAAW,sTAEf,CACI,QAAW,4NAEf,CACI,QAAW,0NAEf,CACI,QAAW,sRAEf,CACI,QAAW,oQAEf,CACI,QAAW,oQAEf,CACI,QAAW,sPAEf,CACI,QAAW,gQAEf,CACI,QAAW,kNAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,0NAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,kNAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,0NAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,0OAEf,CACI,QAAW,4MAEf,CACI,QAAW,8MAEf,CACI,QAAW,8MAEf,CACI,QAAW,8MAEf,CACI,QAAW,4MAEf,CACI,QAAW,8MAEf,CACI,QAAW,8MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,sOAEf,CACI,QAAW,8MAEf,CACI,QAAW,4MAEf,CACI,QAAW,8MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,0NAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,0NAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,8MAEf,CACI,QAAW,8MAEf,CACI,QAAW,8MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,8MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,8MAEf,CACI,QAAW,8MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,gNAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,8MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,kNAEf,CACI,QAAW,8MAEf,CACI,QAAW,8MAEf,CACI,QAAW,8MAEf,CACI,QAAW,8MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,8NAEf,CACI,QAAW,8MAEf,CACI,QAAW,8MAEf,CACI,QAAW,4MAEf,CACI,QAAW,8MAEf,CACI,QAAW,8MAEf,CACI,QAAW,8MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,4MAEf,CACI,QAAW,6SCixBJ+oD,G,2MA1oCbluD,MAAQ,CACN2oC,UAAW,KACXxJ,QAAS,KACTgvB,aAAc,KACdllD,QAAS,KACTmlD,gBAAgB,EAEhBC,QAAS,GACTC,QAAS,KACTC,QAAS,KACTC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,OAAQ,GACRC,SAAU,GACVC,YAAa,GACbC,QAAS,GACTC,QAAS,GACTC,MAAO,KACPC,SAAU,GACVC,SAAU,KACVC,SAAU,GACVC,YAAa,EACbja,WAAW,EACXka,UAAW,M,EAwVb1b,aAAe,SAAAhiC,GACb,IAAI/Q,EAAQmE,SAAS4M,EAAG,IACV,IAAV/Q,GACF,EAAKN,SAAS,CAAE8uD,YAAaxuD,IAE/B,EAAKN,SAAS,CAAE8uD,YAAaxuD,K,mFA1V7BP,KAAK6b,Y,oCAIOozC,EAASC,GAIrBlvD,KAAKC,SAAS,CAAE8tD,QAASoB,O,oCAEbthC,GAAM,IzFq5BoBznB,EAAOS,EyFr5B5B,OACT4X,EAAaze,KAAKI,MAAlBqe,UzFo5B8BrY,EyFn5BAqY,EAASpX,MzFm5BFR,EyFn5BSgnB,EzFo5BjDxnB,IAAMC,IAAI,WAAaF,EAAQ,IAAMS,IyFn5BvCsD,MAAK,SAAAtF,GACJ,EAAK5E,SAAS,CACZiuD,QAASrpD,EAAKA,UAGjB0F,OAAM,SAAAC,GACLhH,QAAQC,IACN,0CAA4CwK,KAAKC,UAAU1D,S,mCAKtDqjB,GAAM,IzF05BoBznB,EAAOS,EyF15B5B,OACR4X,EAAaze,KAAKI,MAAlBqe,UzFy5B6BrY,EyFx5BAqY,EAASpX,MzFw5BFR,EyFx5BSgnB,EzFy5BhDxnB,IAAMC,IAAI,UAAYF,EAAQ,IAAMS,IyFx5BtCsD,MAAK,SAAAtF,GACJ,EAAK5E,SAAS,CACZquD,OAAQzpD,EAAKA,UAGhB0F,OAAM,SAAAC,GACLhH,QAAQC,IAAI,6BAA+BwK,KAAKC,UAAU1D,S,qCAGjDnH,EAAMwE,GAAM,IAAD,QzFy4BrB,SAAoCzB,EAAO/C,EAAMwE,GACtD,OAAOxB,IAAMC,IAAI,YAAcF,EAAQ,IAAM/C,EAAO,IAAMwE,IyFv4BxDqC,CAFqBlK,KAAKI,MAAlBqe,SAEwCpX,MAAOhE,EAAMwE,GAC1DsC,MAAK,SAAAtF,GACJ,EAAK5E,SAAS,CACZmuD,SAAUvpD,EAAKA,UAGlB0F,OAAM,SAAAC,GACLhH,QAAQC,IACN,2CAA6CwK,KAAKC,UAAU1D,S,wCAIlDxE,GAChBhG,KAAKC,SAAS,CAAEuuD,YAAaxoD,M,oCAEjB6H,EAAKggB,EAAKuhC,GAAM,IzF81BUhpD,EAAOS,EAAQqB,EyF91B1B,QzF81BW9B,EyF71BAyH,EzF61BOhH,EyF71BFgnB,EzF61BU3lB,EyF71BLknD,EzF81B3C/oD,IAAMC,IAAI,WAAaF,EAAQ,IAAMS,EAAS,IAAMqB,IyF71BtDiC,MAAK,SAAAtF,GACJ,EAAK5E,SAAS,CACZyuD,QAAS7pD,EAAKA,UAGjB0F,OAAM,SAAAC,GACLhH,QAAQC,IAAI,6BAA+BwK,KAAKC,UAAU1D,S,qCAGjD3F,GACb7E,KAAKC,SAAS,CACZ2uD,SAAU/pD,M,qCAICwqD,EAAUC,GAAW,IzFq3BKlpD,EAAO/C,EAAMksD,EyFr3BnB,OACzB9wC,EAAaze,KAAKI,MAAlBqe,UzFo3B+BrY,EyFl3BAqY,EAASpX,MAAMtF,WAAWe,OzFk3BnBO,EyFl3B2BgsD,EAASttD,WAAWe,OzFk3BzCysD,EyFl3BiDD,EAASvtD,WAAWe,OzFm3BpHuD,IAAMC,IAAI,YAAcF,EAAQ,IAAM/C,EAAO,IAAMksD,IyFl3BrDplD,MAAK,SAAAtF,GACJ,EAAK5E,SAAS,CACZ6uD,SAAUjqD,EAAKA,UAGlB0F,OAAM,SAAAC,GACLhH,QAAQC,IACN,2CAA6CwK,KAAKC,UAAU1D,S,iCAMzDqD,GAAM,IzFuzBuBzH,EAAO0B,EyFvzB/B,QzFuzBwB1B,EyFrzBAyH,EzFqzBO/F,EyFrzBF,WzFszBtCzB,IAAMC,IAAI,WAAaF,EAAQ,IAAM0B,IyFrzBvCqC,MAAK,SAAAtF,GAAU,EAAK5E,SAAS,CAAE+tD,QAASnpD,EAAKA,UAC7C0F,OAAM,SAAAC,GACLhH,QAAQC,IAAI,0CAA4CwK,KAAKC,UAAU1D,S,iCAIlEqD,GAAM,IzFk0BuBzH,EAAO0B,EyFl0B/B,QzFk0BwB1B,EyFh0BAyH,EzFg0BO/F,EyFh0BF,WzFi0BtCzB,IAAMC,IAAI,WAAaF,EAAQ,IAAM0B,IyFh0BvCqC,MAAK,SAAAtF,GACJ,EAAK5E,SAAS,CAAEguD,QAASppD,EAAKA,UAE/B0F,OAAM,SAAAC,GACLhH,QAAQC,IACN,0CAA4CwK,KAAKC,UAAU1D,S,kCAIvDqD,GAAM,IzF2zBuBzH,EyF3zBxB,QzF2zBwBA,EyFzzBAyH,EzF0zBlCxH,IAAMC,IAAI,YAAcF,IyFzzB1B+D,MAAK,SAAAtF,GACJ,EAAK5E,SAAS,CAAEkuD,SAAUtpD,EAAKA,UAEhC0F,OAAM,SAAAC,GACLhH,QAAQC,IACN,2CAA6CwK,KAAKC,UAAU1D,S,mCAKvDqD,GAAM,IzF40BuBzH,EAAO0B,EAAO0nD,EyF50BtC,QzF40BwBppD,EyF10BAyH,EzF00BO/F,EyF10BF,WzF00BS0nD,EyF10BG,IzF20BpDnpD,IAAMC,IAAI,aAAeF,EAAQ,IAAM0B,EAAQ,IAAM0nD,IyF10BvDrlD,MAAK,SAAAtF,GACJ,EAAK5E,SAAS,CAAEouD,UAAWxpD,EAAKA,UAEjC0F,OAAM,SAAAC,GACLhH,QAAQC,IAAI,6BAA+BwK,KAAKC,UAAU1D,S,iCAIrDqD,GAAM,IzFoxBuBzH,EAAO0B,EyFpxB/B,QzFoxBwB1B,EyFlxBAyH,EzFkxBO/F,EyFlxBF,WzFmxBtCzB,IAAMC,IAAI,WAAaF,EAAQ,IAAM0B,IyFlxBvCqC,MAAK,SAAAtF,GACJ,EAAK5E,SAAS,CAAEwuD,QAAS5pD,EAAKA,UAE/B0F,OAAM,SAAAC,GACLhH,QAAQC,IAAI,6BAA+BwK,KAAKC,UAAU1D,S,kCAGpDqD,EAAKggB,EAAK4hC,GAAY,IAAD,OAW/B,IATmBlvD,EzF0zBoB6F,EAAO/C,EAAMwD,EyFjzB9C6oD,EARU,QADGnvD,EASQkvD,GAPhB,MAEY7sD,IAAOrC,EAAMovD,OAAQ,YAAYjhD,OAAO,UACtCkhD,OAAO,EAAG,IzFqzBIxpD,EyFhzBAyH,EzFgzBOxK,EyFhzBFqsD,EzFgzBQ7oD,EyFhzBEgnB,EzFizBjDxnB,IAAMC,IAAI,YAAcjD,EAAO,IAAM+C,EAAQ,IAAMS,IyFhzBrDsD,MAAK,SAAAtF,GAAU,EAAK5E,SAAS,CAAEsuD,SAAU1pD,EAAKA,OAAS,EAAKgrD,gBAAgBhrD,EAAKA,SACjF0F,OAAM,SAAAC,GACLhH,QAAQC,IAAI,6BAA+BwK,KAAKC,UAAU1D,S,+BAGvDqjB,EAAK4hC,GAAY,IzF4YH5oD,EAAQC,EAAIC,EyF5YV,OAGjBohC,EAAKvlC,IAAO6sD,EAAW,YAAY/gD,OAAO,gBAC1C05B,EAAKxlC,MAAS8L,OAAO,iBzFwYN7H,EyFvYAgnB,EzFuYQ/mB,EyFvYHqhC,EzFuYOphC,EyFvYHqhC,EzFwYzB/hC,IAAMC,IAAI,SAAWO,EAAS,IAAMC,EAAK,IAAMC,IyFvYjDoD,MAAK,SAAAtF,GACJ,IAAMirD,EAAclhD,EAAkB/J,EAAKA,MAC3C,EAAK5E,SAAS,CAAE0uD,MAAOmB,OAExBvlD,OAAM,SAAAC,GACLhH,QAAQC,IAAI+G,Q,kCAINqD,GAAM,IzFuwBuBzH,EyFvwBxB,QzFuwBwBA,EyFtwBAyH,EzFuwBlCxH,IAAMC,IAAI,YAAcF,IyFtwB1B+D,MAAK,SAAAtF,GAAU,EAAK5E,SAAS,CAAE4uD,SAAUhqD,EAAKA,UAC9C0F,OAAM,SAAAC,GAAShH,QAAQC,IAAI+G,Q,gCAErB,IACDiU,EAAaze,KAAKI,MAAlBqe,SACF5Q,EAAM4Q,EAASpX,MACfwmB,EAAMpP,EAAS6J,OACfynC,EAAatxC,EAASU,UACtBswC,EAAYhxC,EAASxN,UAE3BjR,KAAKgwD,WAAWniD,GAChB7N,KAAKiwD,WAAWpiD,GAChB7N,KAAKkwD,YAAYriD,GACjB7N,KAAKmwD,aAAatiD,GAClB7N,KAAKowD,WAAWviD,GAChB7N,KAAKqwD,YAAYxiD,EAAKggB,EAAKkiC,GAC3B/vD,KAAKswD,SAASziC,EAAK4hC,GACnBzvD,KAAKuwD,YAAY1iD,K,uCA2JD,IAAD,OA8Cf,OAjCE,yBACElN,MAAO,CACLC,QAAS,OACTI,oBAAqB,0BACrBwvD,UAAW,OACXzrC,aAAc,OACd0rC,gBAAiB,QACjBC,aAAc,WAnBA,CAClB,CAAEvlD,KAAM,2BAAQ5K,MAAO,GACvB,CAAE4K,KAAM,2BAAQ5K,MAAO,GACvB,CAAE4K,KAAM,2BAAQ5K,MAAO,GACvB,CAAE4K,KAAM,2BAAQ5K,MAAO,GACvB,CAAE4K,KAAM,2BAAQ5K,MAAO,GACvB,CAAE4K,KAAM,2BAAQ5K,MAAO,GACvB,CAAE4K,KAAM,2BAAQ5K,MAAO,GACvB,CAAE4K,KAAM,2BAAQ5K,MAAO,IAaRmM,KAAI,SAAAtC,GACf,OACE,kBAAC,KAAD,CACEqJ,QAAS,SAAAnC,GAAC,OAAI,EAAKgiC,aAAahiC,EAAE+F,OAAO9W,QACzCY,UAAU,UACVR,MAAO,CACL8e,aAAc,MACdtQ,MAAO,YACPuJ,OAAQ,sBACR4E,YAAa,MACbgV,aAAc,MACdvxB,OAAQ,OACRC,oBAAqB,SACrBwT,OAAQ,WAEVjU,MAAO6J,EAAK7J,OAEX6J,EAAKe,Y,2CAWhB,IAAMY,EAAS/L,KAAKN,MAAMqvD,YAC1B,GAAe,IAAXhjD,EAAc,CAChB,IAAMlH,EAAO7E,KAAKN,MAAMquD,QACxB,OAAoB,IAAhBlpD,EAAKpC,OACA,KAEaoC,EACD6H,KAAI,SAAAikD,GAAG,OACxB,yBAAKhwD,MAAO,CAAE2U,WAAY,aAAeq7C,EAAIC,YAInD,GAAe,IAAX7kD,EAAc,CAChB,IAAMlH,EAAO7E,KAAKN,MAAMwuD,QACxB,OAAoB,IAAhBrpD,EAAKpC,OACA,KAEaoC,EACD6H,KAAI,SAAAikD,GAAG,OACxB,yBAAKhwD,MAAO,CAAE2U,WAAY,aAAeq7C,EAAI,OAInD,GAAe,IAAX5kD,EAAc,CAChB,IAAMlH,EAAO7E,KAAKN,MAAM0uD,SACxB,GAAoB,IAAhBvpD,EAAKpC,OACP,OAAO,KAIP,IAFA,IAAIouD,EAAW,GACXC,EAAU,GAFT,aAKH,IAAMrsD,EAAOI,EAAKqY,GAAG6zC,SACfzK,EAAQzhD,EAAKqY,GAAG8zC,SAChBnf,EAAUhtC,EAAKqY,GAAG+zC,SACxB,IAAgC,IAA5BJ,EAASnlD,QAAQjH,GAAc,CAEjC,IAAMysD,EAAS,CACbzsD,KAAMA,EACN6hD,MAAOA,EACPzU,QAASA,GAEXif,EAAQ5qD,KAAKgrD,GACbL,EAAS3qD,KAAKzB,OACT,CAEL,IAAM0sD,EAAML,EAAQn5C,WAAU,SAAAxM,GAAI,OAAIA,EAAK1G,OAASA,KACpDqsD,EAAQK,GAAK7K,MAAQA,EACrBwK,EAAQK,GAAKtf,QAAUif,EAAQK,GAAKtf,QAAU,KAAOA,IAlBhD30B,EAAI,EAAGA,EAAIrY,EAAKpC,OAAQya,IAAM,IAsBvC,IADA,IAAIk0C,EAAa,GACR5uD,EAAQ,EAAGA,EAAQsuD,EAAQruD,OAAQD,IAC1C4uD,EAAWlrD,KAAK4qD,EAAQtuD,GAAOiC,MAC/B2sD,EAAWlrD,KAAK4qD,EAAQtuD,GAAOqvC,SAC/Buf,EAAWlrD,KAAK,MAGlB,OAAOkrD,EAAW1kD,KAAI,SAAAikD,GAAG,OACvB,yBAAKhwD,MAAO,CAAE2U,WAAY,aAAeq7C,MAI/C,GAAe,IAAX5kD,EAAc,CAChB,IAAMlH,EAAO7E,KAAKN,MAAM4uD,OACxB,OAAoB,IAAhBzpD,EAAKpC,OACA,KAEaoC,EACD6H,KAAI,SAAUtC,EAAM5H,GASrC,OARgBopC,OAAOC,KAAKzhC,GACDsC,KAAI,SAAU2kD,EAAGn0C,EAAGlO,GAC7C,OACE,yBAAK9O,IAAKgd,GACP9S,EAAKinD,UAQlB,GAAe,IAAXtlD,EAAc,CAChB,IAAMlH,EAAO7E,KAAKN,MAAM8uD,YACxB,GAAoB,IAAhB3pD,EAAKpC,OACP,OAAO,KAGP,IADA,IAAI6uD,EAAU,GACL9uD,EAAQ,EAAGA,EAAQ,EAAGA,IAAS,CACtC,GAAc,IAAVA,EAAa,CACf,IAAM+uD,EAAa1sD,EAAKL,QAAO,SAAU4F,EAAM5H,EAAO6H,GACpD,MAA0C,MAAnCD,EAAKonD,QAAQzvD,WAAWe,UAEP,IAAtByuD,EAAW9uD,QACb6uD,EAAQprD,KAAKqrD,EAAW,IAI5B,GAAc,IAAV/uD,EAAa,CACf,IAAM+uD,EAAa1sD,EAAKL,QAAO,SAAU4F,EAAM5H,EAAO6H,GACpD,MAA0C,MAAnCD,EAAKonD,QAAQzvD,WAAWe,UAEP,IAAtByuD,EAAW9uD,QACb6uD,EAAQprD,KAAKqrD,EAAW,IAI5B,GAAc,IAAV/uD,EAAa,CACf,IAAM+uD,EAAa1sD,EAAKL,QAAO,SAAU4F,EAAM5H,EAAO6H,GACpD,MAA0C,MAAnCD,EAAKonD,QAAQzvD,WAAWe,UAEP,IAAtByuD,EAAW9uD,QACb6uD,EAAQprD,KAAKqrD,EAAW,IAI5B,GAAc,IAAV/uD,EAAa,CACf,IAAM+uD,EAAa1sD,EAAKL,QAAO,SAAU4F,EAAM5H,EAAO6H,GACpD,MAA0C,MAAnCD,EAAKonD,QAAQzvD,WAAWe,UAEP,IAAtByuD,EAAW9uD,QACb6uD,EAAQprD,KAAKqrD,EAAW,IAI5B,GAAc,IAAV/uD,EAAa,CACf,IAAM+uD,EAAa1sD,EAAKL,QAAO,SAAU4F,EAAM5H,EAAO6H,GACpD,MAA0C,MAAnCD,EAAKonD,QAAQzvD,WAAWe,UAEP,IAAtByuD,EAAW9uD,QACb6uD,EAAQprD,KAAKqrD,EAAW,KAY9B,OARgBD,EAAQ5kD,KAAI,SAAUtC,EAAM5H,EAAO6H,GACjD,OACE,yBAAKnK,IAAKsC,EAAO7B,MAAO,CAAEokB,aAAc,SACtC,yBAAKpkB,MAAO,CAAE2U,WAAY,aAAelL,EAAKonD,SAC9C,yBAAK7wD,MAAO,CAAE2U,WAAY,aAAelL,EAAKqnD,WAOxD,GAAe,IAAX1lD,EAAc,CAChB,IAAMlH,EAAO7E,KAAKN,MAAMgvD,QACxB,OAAoB,IAAhB7pD,EAAKpC,OACA,KAEaoC,EACD6H,KAAI,SAAAikD,GAAG,OACxB,yBAAKhwD,MAAO,CAAE2U,WAAY,aAAeq7C,EAAI,OAInD,GAAe,IAAX5kD,EAAc,CAChB,IAAMlH,EAAO7E,KAAKN,MAAMkvD,SACxB,OAAoB,IAAhB/pD,EAAKpC,OACA,KAMaoC,EAAK6H,KAAI,SAAUtC,EAAM5H,EAAO6H,GAClD,IAAMzB,EAAOwB,EAAKgkB,KACZsjC,EAAUtnD,EAAKsnD,QACfC,EAAUvnD,EAAKunD,QACrB,OACE,yBAAKhxD,MAAO,CAAEokB,aAAc,SAC1B,6BAAMnc,GACN,kCAAkB9G,IAAZ4vD,EAAwB,KAAOA,GACrC,kCAAkB5vD,IAAZ6vD,EAAwB,KAAOA,OAO/C,GAAe,IAAX5lD,EAAc,CAChB,IAAMlH,EAAO7E,KAAKN,MAAMovD,SACxB,OAAoB,IAAhBjqD,EAAKpC,OACA,KAEaoC,EACD6H,KAAI,SAAAikD,GAAG,OACxB,yBAAKhwD,MAAO,CAAE2U,WAAY,aAAeq7C,EAAI3nC,YAIjD,OAAO,O,sCAIKiwB,GACdz1C,QAAQC,IAAIw1C,GAkBZ,IAjBA,IAAIjuC,EAASiuC,EAAUz0C,QAAO,SAAUjE,EAAOiC,EAAO6H,GAOpD,OANYA,EAAIqC,KAAI,SAAUnM,EAAOiC,EAAO6H,GAC1C,OAAOzH,IACLrC,EAAMqxD,MAAM7vD,WAAaxB,EAAMsxD,MAAM9vD,WACrC,sBACAiB,aAGE0I,QACF9I,IACErC,EAAMqxD,MAAM7vD,WAAaxB,EAAMsxD,MAAM9vD,WACrC,sBACAiB,aACER,KAGN8/C,EAAU,GAlBW,WAmBhB9/C,GACP,IAAME,EAAUsI,EAAOxI,GACjB+/C,EAAe3/C,IACnBF,EAAQkvD,MAAM7vD,WAAaW,EAAQmvD,MAAM9vD,WACzC,sBACAiB,UACIw/C,EAAcvJ,EAAUz0C,QAAO,SAAUjE,EAAOiC,EAAO6H,GAC3D,OACEzH,IACErC,EAAMqxD,MAAM7vD,WAAaxB,EAAMsxD,MAAM9vD,WACrC,sBACAiB,YAAcu/C,KAGpBD,EAAQp8C,KAAKs8C,IAdNhgD,EAAQ,EAAGA,EAAQwI,EAAOvI,OAAQD,IAAU,EAA5CA,GAgBTxC,KAAKC,SAAS,CAAE+uD,UAAW1M,M,yCAET,IAAD,OA8BjB,IAAM/oC,EAASvZ,KAAKN,MAAMqvD,YAC1B,GAAe,IAAXx1C,EAAc,CAChB,IAAM1U,EAAO7E,KAAKN,MAAMsuD,QACxB,GAAa,OAATnpD,QAA0B/C,IAAT+C,EACnB,OACE,yBAAKlE,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WACnE,kBAAC,KAAD,CAAM4D,KAAK,aAIf,IAAMqtD,EAAajtD,EAAK6H,KAAI,SAACqlD,EAAQvvD,EAAO6H,GAC1C,IAAMwD,EAAMkkD,EAAO9C,QAAQltD,WAAWe,OAChC+qB,EAAMkkC,EAAO7C,QAAQntD,WAAWe,OACtC,OACE,yBACE5C,IAAKsC,EACLrB,UAAU,WACV6wD,SAAS,IACTrxD,MAAO,CACLuU,QAAS,UACTwD,OAAQ,+BACRlE,OAAQ,UACRiL,aAAc,MACdsF,aAAc,OAEhBtR,QAAS,kBAAM,EAAKw+C,cAAcpkD,EAAKggB,KAEvC,yBAAKltB,MAAO,CAAE4O,SAAU,SAAxB,sBACO3M,IAAOmvD,EAAOG,QAAQnwD,WAAWe,OAAQ,YAAY4L,OAAO,eAEnE,yBAAK/N,MAAO,CAAE4O,SAAU,SAAxB,gBAAsCwiD,EAAOI,aAInD,OAEE,6BAAML,IAIZ,GAAe,IAAXv4C,EAAc,CAChB,IAAM1U,EAAO7E,KAAKN,MAAMuuD,QACxB,GAAa,OAATppD,QAA0B/C,IAAT+C,EACnB,OACE,yBAAKlE,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WACnE,kBAAC,KAAD,CAAM4D,KAAK,aAIf,IAAMqtD,EAAajtD,EAAK6H,KAAI,SAACqlD,EAAQvvD,EAAO6H,GAE1C,IAAMwjB,EAAMkkC,EAAOK,QAAQrwD,WAAWe,OACtC,OACE,yBACE5C,IAAKsC,EACLrB,UAAU,WACV6wD,SAAS,IACTrxD,MAAO,CACLuU,QAAS,UACTwD,OAAQ,+BACRlE,OAAQ,UACRiL,aAAc,MACdsF,aAAc,OAEhBtR,QAAS,kBAAM,EAAK4+C,cAAcxkC,KAElC,yBAAKltB,MAAO,CAAE4O,SAAU,SAAxB,sBACO3M,IAAOmvD,EAAOO,SAASvwD,WAAWe,OAAQ,cAAc4L,OAC7D,eAGF,yBAAK/N,MAAO,CAAE4O,SAAU,SAAxB,gBACMwiD,EAAOQ,SAASxwD,WAAWe,YAKvC,OACE,6BAAMgvD,GAIZ,GAAe,IAAXv4C,EAAc,CAChB,IAAM1U,EAAO7E,KAAKN,MAAMyuD,SACxB,GAAa,OAATtpD,QAA0B/C,IAAT+C,EACnB,OACE,yBAAKlE,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WACnE,kBAAC,KAAD,CAAM4D,KAAK,aAIf,IAAMqtD,EAAajtD,EAAK6H,KAAI,SAACqlD,EAAQvvD,EAAO6H,GAC1C,IAAMmoD,EAAMT,EAAOU,QAAQ1wD,WAAWe,OAChC4vD,EAAUX,EAAOW,QAAQ3wD,WAAWe,OAC1C,OACE,yBACE5C,IAAKsC,EACLrB,UAAU,WACV6wD,SAAS,IACTrxD,MAAO,CACLuU,QAAS,UACTwD,OAAQ,+BACRlE,OAAQ,UACRiL,aAAc,MACdsF,aAAc,OAEhBtR,QAAS,kBAAM,EAAKk/C,eAAeD,EAASF,KAE5C,yBAAK7xD,MAAO,CAAE4O,SAAU,SAAxB,4BACQ3M,IAAOmvD,EAAOW,QAAQ3wD,WAAWe,OAAQ,cAAc4L,OAC7D,eAGF,yBAAK/N,MAAO,CAAE4O,SAAU,SAAxB,gBACMwiD,EAAOa,OAAO7wD,WAAWe,OAASivD,EAAOU,QAAQ1wD,WAAWe,QAElE,yBAAKnC,MAAO,CAAE4O,SAAU,SAAxB,gBACMwiD,EAAOc,SAAS9wD,WAAWe,OAASivD,EAAOe,SAAS/wD,WAAWe,YAK3E,OACE,6BAAMgvD,GAIZ,GAAe,IAAXv4C,EAAc,CAChB,IAAM1U,EAAO7E,KAAKN,MAAM2uD,UACxB,GAAa,OAATxpD,QAA0B/C,IAAT+C,EACnB,OACE,yBAAKlE,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WACnE,kBAAC,KAAD,CAAM4D,KAAK,aAIf,IAAMqtD,EAAajtD,EAAK6H,KAAI,SAACqlD,EAAQvvD,EAAO6H,GAC1C,IAAMwjB,EAAMkkC,EAAOhoD,QAAQhI,WAAWe,OACtC,OACE,yBACE5C,IAAKsC,EACLrB,UAAU,WACV6wD,SAAS,IACTrxD,MAAO,CACLuU,QAAS,UACTwD,OAAQ,+BACRlE,OAAQ,UACRiL,aAAc,MACdsF,aAAc,OAEhBtR,QAAS,kBAAM,EAAKs/C,aAAallC,KAEjC,yBAAKltB,MAAO,CAAE4O,SAAU,SAAxB,sBACO3M,IAAOmvD,EAAOiB,OAAOjxD,WAAWe,OAAQ,YAAY4L,OACzD,eAIF,yBAAK/N,MAAO,CAAE4O,SAAU,SAAxB,gBACMwiD,EAAOkB,OAAOlxD,WAAWe,YAKrC,OACE,6BAAMgvD,GAIZ,GAAe,IAAXv4C,EAAc,CAChB,IAAM25C,EAAUlzD,KAAKN,MAAM6uD,SACrB1pD,EAAO7E,KAAKN,MAAMsvD,UAExB,GADAxrD,QAAQC,IAAI,gBACC,OAAToB,QAA0B/C,IAAT+C,GAAyC,IAAnBquD,EAAQzwD,OACjD,OACE,yBAAK9B,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WACnE,kBAAC,KAAD,CAAM4D,KAAK,aAYf,IAuBMqtD,EAvBOjtD,EAAK6H,KAAI,SAAUtC,EAAM5H,EAAO6H,GAO3C,MAAO,CACLrE,KAPcoE,EAAKsC,KAAI,SAAU2kD,EAAGn0C,EAAGlO,GACvC,MAAO,CACLyiD,MAAOJ,EAAEI,MACTD,QAASH,EAAEG,YAKb2B,GAAI/oD,EAAK,GAAGwnD,MACZwB,GAAIhpD,EAAK,GAAGynD,MACZzjC,KAAMxrB,IAAOwH,EAAK,GAAGwnD,MAAM7vD,WAAWe,OAASsH,EAAK,GAAGynD,MAAM9vD,WAAWe,OAAQ,sBAAsBE,UACtGqwD,QAASjpD,EAAK,GAAGipD,QACjBC,SAAUlpD,EAAK,GAAGkpD,SAClBC,QAASnpD,EAAK,GAAGmpD,QACjBC,SAAUppD,EAAK,GAAGopD,aAIAzkD,MAAK,SAAUC,EAAGC,GACtC,OAAOD,EAAEof,KAAOnf,EAAEmf,KAAO,GAAK,KAGJ1hB,KAAI,SAACqlD,EAAQvvD,EAAO6H,GAC9C,OACE,yBACEnK,IAAKsC,EACLrB,UAAU,WACV6wD,SAAS,IACTrxD,MAAO,CACLuU,QAAS,UACTwD,OAAQ,+BACRlE,OAAQ,UACRiL,aAAc,MACdsF,aAAc,OAEhBtR,QAAS,kBAAM,EAAKggD,kBAAkB1B,EAAO/rD,QAE7C,yBAAKrF,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,gBAAiB3S,WAAY,WAC1E,yBAAKF,MAAO,CAAE4O,SAAU,SAAxB,gBACM3M,IACJmvD,EAAOoB,GAAGpxD,WAAagwD,EAAOqB,GAAGrxD,WACjC,sBACA2M,OAAO,gBAET,yBAAK/N,MAAO,CAAE4O,SAAU,SACrBwiD,EAAOsB,QAAQtxD,WAAWe,OAAS,IAAMlD,OAAOmyD,EAAOuB,YAG5D,yBAAK3yD,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,gBAAiB3S,WAAY,WAC1E,yBAAKF,MAAO,CAAE4O,SAAU,SAAxB,gBACMwiD,EAAOwB,QAAQxxD,WAAWe,QAEhC,yBAAKnC,MAAO,CAAE4O,SAAU,SACrBwiD,EAAOyB,SAASzxD,WAAWe,OAAS,qBAO/C,OACE,6BAAMgvD,GAIZ,GAAe,IAAXv4C,EAAc,CAChB,IAAM1U,EAAO7E,KAAKN,MAAM+uD,QACxB,GAAa,OAAT5pD,QAA0B/C,IAAT+C,EACnB,OACE,yBAAKlE,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WACnE,kBAAC,KAAD,CAAM4D,KAAK,aAIf,IAAMqtD,EAAajtD,EAAK6H,KAAI,SAACqlD,EAAQvvD,EAAO6H,GAC1C,IAAMwjB,EAAMkkC,EAAO2B,QAAQ3xD,WAAWe,OAChCssD,EAAM2C,EAAO4B,QAAQ5xD,WAAWe,OAChC+K,EAAMkkD,EAAO6B,QAAQ7xD,WAAWe,OAChC+wD,EAAO9B,EAAO+B,SAAS/xD,WAAWe,OAClCixD,EAAOhC,EAAOiC,SAASjyD,WAAWe,OAClCmxD,EAAOlC,EAAOmC,SAASnyD,WAAWe,OAExC,OADAU,QAAQC,IAAIsuD,GAEV,yBACE7xD,IAAKsC,EACLrB,UAAU,WACV6wD,SAAS,IACTrxD,MAAO,CACLuU,QAAS,UACTwD,OAAQ,+BACRlE,OAAQ,UACRiL,aAAc,MACdsF,aAAc,OAEhBtR,QAAS,kBAAM,EAAK0gD,cAActmD,EAAKggB,EAAKuhC,KAE5C,yBAAKzuD,MAAO,CAAE4O,SAAU,SAAxB,4BACQ3M,IAAOmvD,EAAOqC,SAASryD,WAAWe,OAAQ,YAAY4L,OAAO,eAErE,yBAAK/N,MAAO,CAAE4O,SAAU,SAAxB,4BACQwiD,EAAOsC,QAAQtyD,WAAWe,OAAS,IAAMivD,EAAOuC,SAASvyD,WAAWe,QAE5E,yBAAKnC,MAAO,CAAE4O,SAAU,SAAxB,4BACQskD,EAAe,KAATE,EAAc,GAAK,IAAMA,EAAe,KAATE,EAAc,GAAK,IAAMA,OAK5E,OACE,6BAAMnC,GAIZ,GAAe,IAAXv4C,EAAc,CAChB,IAAM1U,EAAO7E,KAAKN,MAAMivD,MACxB,GAAa,OAAT9pD,QAA0B/C,IAAT+C,EACnB,OACE,yBAAKlE,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WACnE,kBAAC,KAAD,CAAM4D,KAAK,aAIfjB,QAAQC,IAAIoB,GACZ,IAiBMitD,EAtWV,SAAoB7Y,GAClBz1C,QAAQC,IAAIw1C,GAYZ,IAXA,IAAIjuC,EAASiuC,EAAUz0C,QAAO,SAAUjE,EAAOiC,EAAO6H,GAIpD,OAHYA,EAAIqC,KAAI,SAAUnM,EAAOiC,EAAO6H,GAC1C,OAAOzH,IAAOrC,EAAMsC,QAAQd,WAAY,YAAYiB,aAGhD0I,QACF9I,IAAOrC,EAAMsC,QAAQd,WAAY,YAAYiB,aACzCR,KAGN8/C,EAAU,GAZe,WAapB9/C,GACP,IAAME,EAAUsI,EAAOxI,GACjB+/C,EAAe3/C,IACnBF,EAAQG,QAAQd,WAChB,YACAiB,UACIw/C,EAAcvJ,EAAUz0C,QAAO,SAAUjE,EAAOiC,EAAO6H,GAC3D,OACEzH,IAAOrC,EAAMsC,QAAQd,WAAY,YAAYiB,YAC7Cu/C,KAGJD,EAAQp8C,KAAKs8C,IAZNhgD,EAAQ,EAAGA,EAAQwI,EAAOvI,OAAQD,IAAU,EAA5CA,GAcT,OAAO8/C,EA0TQiS,CAAW1vD,GACH6H,KAAI,SAAUtC,EAAM5H,EAAO6H,GAW9C,MAAO,CACLrE,KAXcoE,EAAKsC,KAAI,SAAU2kD,EAAGn0C,EAAGlO,GACvC,MAAO,CACLof,KAAMxrB,IACJyuD,EAAExuD,QAAQd,WAAasvD,EAAEtuD,QAAQhB,WACjC,gBACA2M,OAAO,eACTgjD,QAASL,EAAEK,QACXC,QAASN,EAAEM,YAKbwB,GAAI/oD,EAAK,GAAGvH,QAAQd,WAAWe,WAGR4J,KAAI,SAACqlD,EAAQvvD,EAAO6H,GAC7C,OACE,yBACEnK,IAAKsC,EACLrB,UAAU,WACV6wD,SAAS,IACTrxD,MAAO,CACLuU,QAAS,UACTwD,OAAQ,+BACRlE,OAAQ,UACRiL,aAAc,MACdsF,aAAc,OAEhBtR,QAAS,kBAAM,EAAK+gD,eAAezC,EAAO/rD,QAE1C,yBAAKrF,MAAO,CAAE4O,SAAU,SAAxB,gBACM3M,IAAOmvD,EAAOoB,GAAI,YAAYzkD,OAAO,mBAKjD,OACE,6BAAMojD,GAIZ,GAAe,IAAXv4C,EAAc,CAChB,IAAM1U,EAAO7E,KAAKN,MAAMmvD,SACxB,GAAa,OAAThqD,QAA0B/C,IAAT+C,EACnB,OACE,yBAAKlE,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WACnE,kBAAC,KAAD,CAAM4D,KAAK,aAIfjB,QAAQC,IAAIoB,GACZ,IAAMitD,EAAajtD,EAAK6H,KAAI,SAACqlD,EAAQvvD,EAAO6H,GAE1C7G,QAAQC,IAAIsuD,EAAO1C,UACnB,IAAMA,ECnjCT,SAA4BA,GAC/B,SAASoF,EAASl0D,GACd,OAAIA,EAAQ,GACD,IAAMA,EAEVA,EAEX,GAAiB8sB,MAAbgiC,GAAiC,OAAbA,QAAkCvtD,IAAbutD,EACzC,MAAO,KAEX,IAAMqF,EAAOhwD,SAAS2qD,EAAW,KAAS,KACpC3rD,EAAQgB,SAAU2qD,EAAW,IAAS,KACtCxtD,EAAM6C,SAAS2qD,EAAW,KAC1BhsD,EAAOqxD,EAAK3yD,WAAa0yD,EAAS/wD,GAAS+wD,EAAS5yD,GAC1D,OAAOe,IAAOS,EAAM,YAAYqL,OAAO,cDqiChBimD,CAA8B/0D,OAAOmyD,EAAO1C,WACvDuF,EAAW7C,EAAO6C,SAAS7yD,WAAWe,OAC5C,OACE,yBACE5C,IAAKsC,EACLrB,UAAU,WACV6wD,SAAS,IACTrxD,MAAO,CACLuU,QAAS,UACTwD,OAAQ,+BACRlE,OAAQ,UACRiL,aAAc,MACdsF,aAAc,OAEhBtR,QAAS,kBAAM,EAAKohD,eAAe9C,EAAO1C,SAAU0C,EAAOzC,YAE3D,yBAAK3uD,MAAO,CAAE4O,SAAU,SAAxB,4BAAwC8/C,GACxC,yBAAK1uD,MAAO,CAAE4O,SAAU,SAAxB,gBAAsCqlD,OAI5C,OACE,6BAAM9C,M,+BAMZ,IAAMgD,EAAU90D,KAAK+0D,iBACfC,EAAqBh1D,KAAKg1D,qBAC1BC,EAAaj1D,KAAKk1D,mBACxB,OACE,6BACGJ,EACD,6BACE,yBACEn0D,MAAO,CACLC,QAAS,OACTI,oBAAqB,YACrBw0B,QAAS,SAGX,6BACE,yBACE70B,MAAO,CACLoV,gBAAiB,YACjBhV,OAAQ,OACRuc,YAAa,MACbsG,qBAAsB,MACtBD,oBAAqB,MACrBxU,MAAO,kBACPtO,WAAY,SACZwS,MAAO,UAGT,yBACE1S,MAAO,CACL4O,SAAU,OACVJ,MAAO,kBACPkjB,WAAY,SAJhB,6BAUF,yBAAKlxB,UAAU,cACZ8zD,IAGL,6BACE,yBACEt0D,MAAO,CACLoV,gBAAiB,YACjBhV,OAAQ,OACRuc,YAAa,MACbsG,qBAAsB,MACtBD,oBAAqB,MACrBpU,SAAU,OACVJ,MAAO,kBACPtO,WAAY,WAGd,yBACEF,MAAO,CACL4O,SAAU,OACVJ,MAAO,kBACPkjB,WAAY,SAJhB,6BAUF,yBAAKlxB,UAAU,cACZ6zD,W,GAjoCMx1D,aEqER21D,I,kNA5EXz1D,MAAQ,CACJ+vC,KAAM,GACNnF,gBAAiB,CAAC1nC,IAAOA,MAAS6L,SAAS,EAAG,QAAQC,OAAO,aAC7D9L,IAAOA,MAAS8L,OAAO,e,EAG3B86C,sBAAwB,SAACnmD,EAAMu1B,GAC3B,EAAK34B,SAAS,CAAEqqC,gBAAiBjnC,K,EAGrC2Y,SAAW,SAAC1K,GAAO,IACPmN,EAAa,EAAKre,MAAlBqe,SACA6rB,EAAoB,EAAK5qC,MAAzB4qC,gBACFzJ,EAAOpiB,EAASQ,aAAa6hB,SAC7BC,EAAWn+B,IAAOA,IAAOi+B,GAAMnyB,OAAO,aAAa1L,UACnD8D,EAAKwjC,EAAgB,GAAGtnC,UACxB+D,EAAKujC,EAAgB,GAAGtnC,UACxBnB,EAAM,MAEZ,OAAQyP,EAAE+F,OAAO9W,OACb,IAAK,IACD,GAAIwgC,GAAaj6B,EAAKjF,EAAM,CACxB,IAAMoa,EAAQ,CAACrZ,IAAOA,IAAOkE,EAAKjF,IAAOe,IAAOA,IAAOmE,EAAKlF,KAC5D,EAAK2nD,sBAAsBvtC,GAE/B,MACJ,IAAK,IACD,IAAMC,EAAQ,CAACtZ,IAAOA,MAAS6L,SAAS,EAAG,QAAQC,OAAO,aAAc9L,OACxE,EAAK4mD,sBAAsBttC,GAC3B,MACJ,IAAK,IAED,GADctZ,IAAOA,OAAUI,WACjB+D,EAAKlF,EAAM,CACrB,IAAMsa,EAAQ,CAACvZ,IAAOA,IAAOkE,EAAKjF,IAAOe,IAAOA,IAAOmE,EAAKlF,KAC5D,EAAK2nD,sBAAsBrtC,M,wEAQjC,IACEsC,EAAaze,KAAKI,MAAlBqe,SACAqa,EAAgBC,KAAhBD,YACFw0B,EAAattD,KAAKN,MAAM4qC,gBAExBA,EAAkB,CAACgjB,EAAW,GAAGtqD,UAAWsqD,EAAW,GAAGtqD,WAEhE,OACI,yBAAK7B,UAAU,gBACX,yBAAKR,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,MAAO8jB,aAAc,QACnG,kBAAC+T,EAAD,CACIxiB,qBAAsB,SAAAC,GAAW,OAAIA,EAAYC,YACjDjW,MAAOP,KAAKN,MAAM4qC,gBAClB57B,OAAQ,aACRiP,YAAY,EACZqb,OAAQ,QACR7lB,SAAUnT,KAAKwpD,sBACfhsC,aAAc,SAACC,GAAc,OAAOA,EAAU7a,MAAS8a,WAAaD,EAAU7a,IAAO6b,EAASQ,aAAa6hB,SAAS/+B,WAAY,YAAYigC,WAEhJ,yBAAKrhC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,QAC9E,kBAAC,KAAD,CAAQV,MAAM,IAAIqd,MAAM,SAASC,KAAK,cAAcpK,QAASzT,KAAKgc,WAClE,kBAAC,KAAD,CAAQzb,MAAM,IAAIqd,MAAM,SAASC,KAAK,eAAepK,QAASzT,KAAKgc,WACnE,kBAAC,KAAD,CAAQzb,MAAM,IAAIqd,MAAM,SAASC,KAAK,eAAepK,QAASzT,KAAKgc,aAG3E,yBAAKrb,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWC,cAAe,QAC1E,kBAAC,GAAD,CAAKqpC,gBAAiBA,EAAiB7rB,SAAUA,EAAU0uB,WAAW,IACtE,kBAAC,GAAD,CAAW7C,gBAAiBA,EAAiB7rB,SAAUA,EAAU0uB,WAAW,U,GAtE3E3tC,cCiHN41D,I,kNAlHX11D,MAAQ,CACJ0e,UAAU,EACVmwB,QAAQ,EACR5uC,WAAY,EACZoR,OAAQ,I,EASZ29B,YAAc,WAAO,IAAD,EACW,EAAKtuC,MAAxBqe,EADQ,EACRA,SAAU5Z,EADF,EACEA,KAClBqF,GAAyBuU,EAASzN,UAAWnM,EAAK0jB,SAAU,kBAAkBpe,MAAK,SAAAa,GAC/ExH,QAAQC,IAAI,mBAAqBwK,KAAKC,UAAUlD,IAChD,EAAKyjC,UAAUzjC,EAAOnG,KAAK,GAAGkM,WAC/BxG,OAAM,SAAAC,GACLhH,QAAQC,IAAI,mBAAqBwK,KAAKC,UAAU1D,Q,EAkBxD+G,UAAY,WACR,EAAKtR,SAAS,CACVsuC,QAAQ,K,EAIhB76B,SAAW,SAAA86B,GACP,EAAKvuC,SAAS,CACVsuC,QAAQ,EACRx9B,OAAQy9B,K,EAIhBn9B,aAAe,SAAAC,GACX,EAAKrR,SAAS,CACVsuC,QAAQ,K,EAGhBE,UAAY,SAACluC,GACT,EAAKN,SAAS,CACV8Q,YAAkBjP,IAAVvB,EAAsBA,EAAQ,M,mFAjD1C,IAAMR,EAAcF,eAAeC,QAAQ,QAC3CE,KAAKC,SAAS,CAAEN,WAAYI,IAC5BC,KAAK0uC,gB,qCAcL1uC,KAAKC,SACD,CACIme,UAAU,M,qCAKlBpe,KAAKC,SACD,CACIme,UAAU,M,oCA4BRiyB,EAAOlI,GACjB,IAAMyF,EAAc,CAChB,WAAczF,EACd,KAAQkI,EACR,SAAYrwC,KAAKI,MAAMyE,KAAK0jB,SAC5B,OAAUvoB,KAAKN,MAAMqR,OACrB,UAAa/Q,KAAKI,MAAMqe,SAASzN,UACjC,KAAQ,iBACR,OAAUnR,eAAeC,QAAQ,SAGrC,OACI,kBAAC,GAAD,CAAa8tC,YAAaA,EAAat9B,QAAStQ,KAAKN,MAAM6uC,OAAQj7B,SAAUtT,KAAKqR,aAAc4E,KAAMjW,KAAK0T,a,+BAIzG,IAAD,OACG7O,EAAS7E,KAAKI,MAAdyE,KACFoE,EAAYrG,IAAOiC,EAAK6M,QAAQ3P,WAAWe,OAAQ,cAAc4L,OAAO,SACxExF,EAAUtG,IAAOiC,EAAKmuC,QAAQjxC,WAAWe,OAAQ,cAAc4L,OAAO,SACtEmD,EAAOhN,EAAK+G,SAAS7J,WAAWe,OAEtC,OACI,yBAAKk4B,aAAc,kBAAM,EAAKA,gBAAgBE,aAAc,kBAAM,EAAKA,gBAAgB/5B,UAAU,UAC7F,yBAAKA,UAAU,qBAAqBR,MAAO,CAAEuV,iBAAkB,CAAuB,KAAtBlW,KAAKN,MAAMqR,aAAuCjP,IAAtB9B,KAAKN,MAAMqR,QAA8C,OAAtB/Q,KAAKN,MAAMqR,OAAkB,MAAQ,aAChK,yBAAK5P,UAAU,gBACX,yBAAKA,UAAU,cACX,4BAAK8H,IAET,yBAAK9H,UAAU,cACX,4BAAK+H,IAET,yBAAK/H,UAAU,cACX,4BAAK0Q,KAGb,yBAAK1Q,UAAU,gBAAgBR,MAAO,CAAEC,QAAS,CAAuB,KAAtBZ,KAAKN,MAAMqR,aAAuCjP,IAAtB9B,KAAKN,MAAMqR,QAA8C,OAAtB/Q,KAAKN,MAAMqR,OAAkB,OAAS,UACnJ,4BAAK/Q,KAAKN,MAAMqR,UAGxB,yBAAKpQ,MAAOX,KAAKN,MAAM0e,SAAW,CAC9Bxd,QAAkC,GAAzBZ,KAAKN,MAAMC,WAAkB,OAAS,OAAQkB,WAAY,SAAU2S,eAAgB,SAAU2B,SAAU,WAAYyqB,IAAK,EAAGwB,MAAO,EAAGrgC,OAAQ,CAAuB,KAAtBf,KAAKN,MAAMqR,aAAuCjP,IAAtB9B,KAAKN,MAAMqR,QAA8C,OAAtB/Q,KAAKN,MAAMqR,OAAkB,OAAS,SAAUswB,WAAY,QAAShuB,MAAO,OAAQqF,OAAQ,oCACnT,CAAE9X,QAAS,SACX,yBAAM6S,QAAS,kBAAM,EAAKlC,aAAa5Q,MAAO,CAAE0S,MAAO,OAAQtS,OAAQ,OAAQ0e,aAAc,OAAQ4hB,WAAY,uBAAwBzgC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,SAAU2T,OAAQ,YAC9M,yBAAKnT,IAAK+tC,KAAY7tC,IAAI,iBAGjCvB,KAAKq1D,cAAcxjD,EAAM5I,Q,GA7GTzJ,cC6HlB81D,G,2MA1HX51D,MAAQ,CACJkK,SAAU,GACVkd,OAAQ,CAAE,SAAY,IACtBuqB,MAAO,4B,EAoCXn6B,MAAQ,SAACw6B,EAAQ5qB,GACb,IAAI4B,EAAW5B,EAAO4B,SAClBipB,EAAY,GAkBhB,OAjBAjpB,EAAS1C,SAAQ,SAAA2C,GACbgpB,EAAUhpB,EAAQzoB,KAAO,MAE7ByxC,EAAU,gBAAQ,GAElBD,EAAO1rB,SAAQ,SAAA4rB,GACX,IAAIC,EAAUD,EAAMhmC,SACpB8c,EAAS1C,SAAQ,SAAA2C,GACb,IAAMC,EAAK,IAAIC,OAAOF,EAAQG,UAAWH,EAAQI,aAC3C5oB,EAAQ0xC,EAAQ1xC,MAAMyoB,GACd,OAAVzoB,GAA+B,KAAbA,EAAM,IACxBwxC,EAAUhpB,EAAQzoB,KAAKgG,KAAK0rC,MAIpCD,EAAU,gBAAMzrC,KAAK0rC,MAElBD,G,mFArDP3xC,KAAKu1D,oBACLv1D,KAAKw1D,4B,0CAEY,IAAD,OACR/2C,EAAaze,KAAKI,MAAlBqe,SAGRvU,GAFYuU,EAASpX,MAAMtF,WAAWe,OAC1B2b,EAAS6J,OAAOvmB,WAAWe,QAElCqH,MAAK,SAAAtF,GACFrB,QAAQC,IAAI,wBAA0BwK,KAAKC,UAAUrJ,EAAKA,OAC1D,EAAK5E,SAAS,CACV2J,SAAU/E,EAAKA,UAGtB0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,0CAA4CwK,KAAKC,UAAU1D,S,gDAGxD,IAAD,OACtBK,GAAwB,cACnBV,MAAK,SAAAtF,GACF,IAAIiiB,EAASjiB,EAAKA,KAAKqjB,MAAK,SAAA/c,GAAI,MAAkC,cAA9BA,EAAKgd,gBAAgBtW,QACzDiV,EAAO4B,SAAP,CAAmB,CAAE,IAAO,eAAM,UAAa,OAA/C,oBAA0D5B,EAAO4B,WACjEllB,QAAQC,IAAI,8BAAgCwK,KAAKC,UAAU4Y,IAC3D,EAAK7mB,SAAS,CACV6mB,OAAQA,OAGfvc,OAAM,SAAAC,GACHhH,QAAQC,IAAI+G,Q,+BA2Bd,IAAD,EACiCxK,KAAKI,MAAnCqe,EADH,EACGA,SAAU6rB,EADb,EACaA,gBAEZiF,EADQ,CAAC,2BAAQ,2BAAQ,4BACD7iC,KAAI,SAAUhK,EAASF,EAAO6H,GACxD,OACI,yBAAKnK,IAAKsC,EAAO7B,MAAO,CAAEuU,QAAS,UAAWtU,QAAS,OAAQC,WAAY,SAAU8X,eAAgB,aACjG,yBAAKhY,MAAO,CAAE4O,SAAU,SAAW7M,OAKzCwU,EAAQlX,KAAKkX,MACf+6B,EAAgB,QACMnwC,IAAtB9B,KAAKN,MAAMonB,SACXmrB,EAAgB/6B,EAAMlX,KAAKN,MAAMkK,SAAU5J,KAAKN,MAAMonB,SAG1D,IAAIorB,EAAeD,EAAcjyC,KAAKN,MAAM2xC,OACxC7R,EAAa,QACI19B,IAAjBowC,IAOA1S,GALAA,EADmB0S,EACO1tC,QAAO,SAAC9B,EAASF,EAAO6H,GAC9C,IAAMzB,EAAOhG,IAAOF,EAAQgP,QAAS,cAAc1O,UACnD,OAAOsnC,EAAgB,IAAM1hC,GAAQA,GAAQ0hC,EAAgB,OAGzCv7B,MAAK,SAACC,EAAGC,GAG7B,OAFgBrM,IAAOoM,EAAE0C,QAAS,cAAc1O,UAChCJ,IAAOqM,EAAEyC,QAAS,cAAc1O,UACjB,GAAK,MAI5C,IAAMyyD,EAAiBj2B,EAAW9yB,KAAI,SAAUhK,EAASF,EAAO6H,GAC5D,OACI,kBAAC,GAAD,CAAoBnK,IAAKsC,EAAOqC,KAAMnC,EAAS+b,SAAUA,OAIjE,OACI,6BACI,yBAAK9d,MAAO,CAAEoV,gBAAiB,YAAa4N,oBAAqB,MAAOC,qBAAsB,MAAO7iB,OAAQ,OAAQmU,QAAS,WAAYtU,QAAS,OAAQC,WAAY,WACnK,wBAAIF,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBAAtC,kBAEJ,yBAAKxO,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,gBAAiBD,OAAQ,OAAQ2X,OAAQ,gCAAiC3C,gBAAiB,yBAA0Bu3B,aAAc,WAClLiC,GAEkB,IAAtB/P,EAAW/8B,QACR,yBAAK9B,MAAO,CAAEq0B,UAAW,QAASD,UAAW,QAAS+U,UAAW,SAC5D2rB,GAEc,IAAtBj2B,EAAW/8B,QACR,yBAAK9B,MAAO,CAAEI,OAAQ,OAAQuc,YAAa,OAAQ1c,QAAS,OAAQC,WAAY,WAAhF,uC,GAnHcrB,aCqJnBk2D,I,kNAtJXh2D,MAAQ,CACJ0e,UAAU,EACVmwB,QAAQ,EACRx9B,OAAQ,KACRpR,WAAY,G,EAShB+uC,YAAc,WAAO,IAAD,EACW,EAAKtuC,MAAxBqe,EADQ,EACRA,SAAU5Z,EADF,EACEA,KAClBqF,GAAyBuU,EAASzN,UAAWnM,EAAKorC,SAAU,cAAc9lC,MAAK,SAAAa,GAC3ExH,QAAQC,IAAI,mBAAqBwK,KAAKC,UAAUlD,IAChD,EAAKyjC,UAAUzjC,EAAOnG,KAAK,GAAGkM,WAC/BxG,OAAM,SAAAC,GACLhH,QAAQC,IAAI,mBAAqBwK,KAAKC,UAAU1D,Q,EAaxD+G,UAAY,WACR,EAAKtR,SAAS,CACVsuC,QAAQ,K,EAIhB76B,SAAW,SAAA86B,GACP,EAAKvuC,SAAS,CACVsuC,QAAQ,EACRx9B,OAAQy9B,K,EAIhBn9B,aAAe,SAAAC,GACX,EAAKrR,SAAS,CACVsuC,QAAQ,K,EAIhBE,UAAY,SAACluC,GACT,EAAKN,SAAS,CACV8Q,YAAkBjP,IAAVvB,EAAsBA,EAAQ,M,mFA7C1C,IAAMR,EAAcF,eAAeC,QAAQ,QAC3CE,KAAKC,SAAS,CAAEN,WAAYI,IAC5BC,KAAK0uC,gB,qCAaQ1uC,KAAKC,SAAS,CAAEme,UAAU,M,qCAGvCpe,KAAKC,SACD,CACIme,UAAU,M,oCA6BRiyB,EAAOlI,GAEjB,IAAMyF,EAAc,CAChB,WAAczF,EACd,KAAQkI,EACR,SAAYrwC,KAAKI,MAAMyE,KAAKorC,SAC5B,OAAUjwC,KAAKN,MAAMqR,OACrB,UAAa/Q,KAAKI,MAAMqe,SAASzN,UACjC,KAAQ,aACR,OAAUnR,eAAeC,QAAQ,SAGrC,OACI,kBAAC,GAAD,CAAa8tC,YAAaA,EAAat9B,QAAStQ,KAAKN,MAAM6uC,OAAQj7B,SAAUtT,KAAKqR,aAAc4E,KAAMjW,KAAK0T,a,+BAIzG,IAAD,OACG7O,EAAS7E,KAAKI,MAAdyE,KAEF8wD,EADU,CAAC,OAAQ,KAAM,MAAO,KAAM,IAAK,KAAM,IAAK,MAC1BjpD,KAAI,SAAUtC,EAAM5H,GAClD,OACI,iCAAatC,IAAKsC,EAAO7B,MAAO,CAAE+X,OAAQ,gCAAiCC,eAAgB,aACvF,4BAAKvO,OAmBjB,IAAMwrD,EAfN,SAAuB/wD,EAAMgxD,GACzB,YAAgB/zD,IAAZ+zD,GAAqC,OAAZA,EAClB,GAEQ,CAAChxD,EAAK2rC,SAAU3rC,EAAKgxD,QAAQC,GAAIjxD,EAAKgxD,QAAQE,IAAKlxD,EAAKgxD,QAAQvL,GAAIzlD,EAAKgxD,QAAQ/qC,EAAGjmB,EAAKgxD,QAAQG,GAAInxD,EAAKgxD,QAAQ7qC,EAAGnmB,EAAKgxD,QAAQI,IAC7GvpD,KAAI,SAAUtC,EAAM5H,GACxD,OACI,iCAAatC,IAAKsC,EAAO7B,MAAO,CAAE+X,OAAQ,gCAAiCC,eAAgB,aACvF,4BAAKvO,OAOQ8rD,CAAcrxD,EAAMA,EAAKgxD,SAChDM,EAAan2D,KAAKN,MAAMqR,OAExB9H,EAAYrG,IAAOiC,EAAK+rC,QAAQ7uC,WAAWe,OAAQ,iCAAiC4L,OAAO,kBAC3FxF,EAAUtG,IAAOiC,EAAKgsC,QAAQ9uC,WAAWe,OAAQ,iCAAiC4L,OAAO,kBACzFmD,EAAOhN,EAAK2G,QAAQzJ,WAAWe,OAErC,OACI,yBAAKk4B,aAAc,kBAAM,EAAKA,gBAAgBE,aAAc,kBAAM,EAAKA,gBAAgB/5B,UAAU,yBAC7F,yBAAKR,MAAO,CAAEI,OAAQ,CAAuB,KAAtBf,KAAKN,MAAMqR,aAAuCjP,IAAtB9B,KAAKN,MAAMqR,QAA8C,OAAtB/Q,KAAKN,MAAMqR,OAAkB,QAAU,WACzH,yBAAKpQ,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,sBAAuBD,OAAQ,UAC/E,yBAAKJ,MAAO,CAAEuU,QAAS,UAAWtU,QAAS,OAAQC,WAAY,SAAU6X,OAAQ,gCAAiCC,eAAgB,aAC9H,4BAAK1P,IAET,yBAAKtI,MAAO,CAAEuU,QAAS,UAAWtU,QAAS,OAAQC,WAAY,SAAU6X,OAAQ,gCAAiCC,eAAgB,aAC9H,4BAAKzP,IAET,yBAAKvI,MAAO,CAAEuU,QAAS,UAAWtU,QAAS,OAAQC,WAAY,SAAU6X,OAAQ,gCAAiCC,eAAgB,aAC9H,4BAZL,uBAcC,yBAAKhY,MAAO,CAAEC,QAAS,OAAQsV,iBAAkB,cAC7C,yBAAKvV,MAAO,CAAEuU,QAAS,UAAWtU,QAAS,OAAQC,WAAY,SAAU6X,OAAQ,gCAAiCC,eAAgB,aAC9H,4BAAK9G,IAET,yBAAKlR,MAAO,CAAEC,QAAS,OAAQsV,iBAAkB,YAC7C,yBAAKvV,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,kBAC/C20D,GAEL,yBAAKh1D,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,kBAC/C40D,MAKjB,yBAAKj1D,MAAO,CAAE2O,WAAY,MAAOH,MAAO,eAAgBvO,QAAS,CAAuB,KAAtBZ,KAAKN,MAAMqR,aAAuCjP,IAAtB9B,KAAKN,MAAMqR,QAA8C,OAAtB/Q,KAAKN,MAAMqR,OAAkB,OAAS,QAAS2H,OAAQ,gCAAiCC,eAAgB,WAAYzD,QAAS,UAAWrU,WAAY,SAAUE,OAAQ,OAAQsS,MAAO,SAClT,4BAAK8iD,KAGb,yBAAKx1D,MAAOX,KAAKN,MAAM0e,SAAW,CAC9Bxd,QAAkC,GAAzBZ,KAAKN,MAAMC,WAAkB,OAAS,OAAQkB,WAAY,SAAU2S,eAAgB,SAAU2B,SAAU,WAAYyqB,IAAK,EAAGwB,MAAO,EAAGrgC,OAAQ,CAAuB,KAAtBf,KAAKN,MAAMqR,aAAuCjP,IAAtB9B,KAAKN,MAAMqR,QAA8C,OAAtB/Q,KAAKN,MAAMqR,OAAkB,QAAU,SAAUswB,WAAY,QAAShuB,MAAO,OAAQqF,OAAQ,oCACpT,CAAE9X,QAAS,SACX,yBAAM6S,QAAS,kBAAM,EAAKlC,aAAa5Q,MAAO,CAAE0S,MAAO,OAAQtS,OAAQ,OAAQ0e,aAAc,OAAQ4hB,WAAY,uBAAwBzgC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,SAAU2T,OAAQ,YAC9M,yBAAKnT,IAAK+tC,KAAY7tC,IAAI,iBAGjCvB,KAAKq1D,cAAcxjD,EAAM5I,Q,GAjJbzJ,cCqTd42D,ICtTe52D,Y,kNDE1BE,MAAQ,CACJ4Q,SAAS,EACTiJ,OAAQ,KACR88C,QAAS,M,EAEb9kD,UAAY,WACR,EAAKtR,SAAS,CACVqQ,SAAS,K,EAIjBoD,SAAW,SAAApC,GACP,EAAKrR,SAAS,CACVqQ,SAAS,K,EAIjBe,aAAe,SAAAC,GACX,EAAKrR,SAAS,CACVqQ,SAAS,EACTiJ,OAAQ,KACR88C,QAAS,Q,oFAGK,IACVr1C,EAAYhhB,KAAKI,MAAjB4gB,QACRI,KAAU,IAAMJ,GAASK,SACzBrhB,KAAKshB,c,0CAILthB,KAAKshB,c,sFAMQ,IAAD,EACiBthB,KAAKI,MAA1BiuB,EADI,EACJA,QAASC,EADL,EACKA,QACjB,OAAID,EACIC,EACO,IAGA,IAIPA,EACO,IAGA,K,0CAKE,IAAD,EACatuB,KAAKI,MAA1BiuB,EADQ,EACRA,QAASC,EADD,EACCA,QACjB,OAAID,EACIC,EACO,GAGA,GAKA,I,kCAQN,IAAD,aAK+CtuB,KAAKI,MAApD4gB,EALA,EAKAA,QAASO,EALT,EAKSA,OAAQtY,EALjB,EAKiBA,UAAWqtD,EAL5B,EAK4BA,eAC9BjjD,GAASkQ,OAAOC,OAAOC,WAAa,IAAM,EAAI,GAE9C8yC,EAPN,SAAyBttD,EAAWC,GAEhC,OADkBxE,UAAUwE,EAAUD,GAAX,OAMbutD,CAAgB5zD,IAAOqG,EAAW,YAAYjG,UAAWJ,MAASI,WAEpF,GAA8B,IAA1BszD,EAAe7zD,OACf,OAAO,KAEX,IAAMg0D,EAAapjD,EAAQkjD,EAAa,EACpCt0C,EAAIb,OACHW,OAAO,CAAC,EAAGu0C,EAAe7zD,SAC1Buf,MAAM,CAAC,EAAG3O,IAIXmN,EAAIY,OACHW,OAAO,CAdW,EAAX,MAePC,MAAM,CAhBsD,IAgB7C,IAIhBE,EAAQd,KAAYZ,GACnB2B,MAAM,IACNG,YAAW,SAAA+M,GAAC,OAAKA,KACjBjN,SAAS,EAAG,GACZC,YAAY,IAEbq0C,EAAct1C,KAAca,GAC3BE,MAAMm0C,EAAe7zD,QACrB6f,YAAW,SAAA+M,GAAC,OAAKA,KACjBjN,SAAS,EAAG,GACZC,YAAYthB,KACZuhB,YAAW,SAAUC,GAClB,OAAIA,EAAI,KAAO,GACPA,EAAI,EACG,IAAMA,EAIT,QAIhBG,EAAMtB,KAAU,IAAMG,GACrBoB,OAAO,OACPC,KAAK,KAAM5B,GACX4B,KAAK,UAAW,CAAC,EAAG,EAAGvP,EAAQ,GAAItS,MACnC4hB,OAAO,KACPC,KAAK,YAAa,oBAIvBF,EAAIC,OAAO,KACNE,KAAKX,GACLU,KAAK,QAAS,QAEnBF,EAAIC,OAAO,KACNE,KAAK6zC,GACL9zC,KAAK,QAAS,QAGnB,IAAK,IAAIpgB,EAAQ,EAAGA,EAAQ,GAAIA,IAE5BkgB,EAAIC,OAAO,QACNC,KAAK,KAAM,GACXA,KAAK,KAAMpC,EAAU,GAARhe,IACbogB,KAAK,KAAMvP,GACXuP,KAAK,KAAMpC,EAAU,GAARhe,IACb7B,MAAM,SAAU,0BAChBA,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,KAGnC,IAAK,IAAI6B,EAAQ,EAAGA,EAAQ8zD,EAAe7zD,OAAQD,IAE3CA,EAAQ,KAAO,GAAKA,EAAQ,GAC5BkgB,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE,GAAMzf,IACnBogB,KAAK,KAAMpC,EA5ED,IA6EVoC,KAAK,KAAMX,EAAE,GAAMzf,IACnBogB,KAAK,KAAMpC,EA9EZ,MA+EC7f,MAAM,SAAU,0BAChBA,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,KAwBvC,IAAM4Y,EAASvZ,KAAKN,MAAM6Z,OACX,OAAXA,QAA8BzX,IAAXyX,GAAmC,KAAXA,GAC3C6H,KAAa,aAAaC,SAE9B,IApHQ,eAoHC7e,GACL,IAAM6zD,EAAUC,EAAe9zD,GACzBm0D,EAAUn0D,EAAQ,GACpBo0D,EAAUl0C,EAAIC,OAAO,KAAK4jC,GAAG,SAAS,WACtB,OAAZ8P,GAIA,EAAKp2D,SAAS,CACVqQ,SAAS,EACTiJ,OAAQ/W,EACR6zD,QAASA,OAKjB7zD,IAAU+W,EACVq9C,EAAQj0C,OAAO,QACVC,KAAK,KAAM,QACXA,KAAK,QAAS6zC,EAAY,GAC1B7zC,KAAK,SAAUpC,EAAE,GAAKA,EAAE61C,EAAQpwB,QAAUowB,EAAQjwB,GAAKiwB,EAAQxxB,QAC/DjiB,KAAK,IAAKX,EAAE00C,GAAYF,EAAY,EAAK,GACzC7zC,KAAK,IAAKpC,EAAE61C,EAAQpwB,QAAUowB,EAAQjwB,GAAKiwB,EAAQxxB,QACnDlkC,MAAM,OAAQ,iBACdA,MAAM,SAAU,WAChBA,MAAM,eAAgB,GACtBA,MAAM,SAAU,WAGrBi2D,EAAQj0C,OAAO,QACVC,KAAK,KAAM,QACXA,KAAK,QAAS6zC,EAAY,GAC1B7zC,KAAK,SAAUpC,EAAE,GAAKA,EAAE61C,EAAQpwB,QAAUowB,EAAQjwB,GAAKiwB,EAAQxxB,QAC/DjiB,KAAK,IAAKX,EAAE00C,GAAYF,EAAY,EAAK,GACzC7zC,KAAK,IAAKpC,EAAE61C,EAAQpwB,QAAUowB,EAAQjwB,GAAKiwB,EAAQxxB,QACnDlkC,MAAM,OAAQ,iBACdA,MAAM,SAAU,iBAChBA,MAAM,eAAgB,GACtBA,MAAM,SAAU,WAChBA,MAAM,UAAW,GAE1Bi2D,EAAQj0C,OAAO,QACVC,KAAK,KAAMX,EAAE00C,IACb/zC,KAAK,KAAMpC,EAAE61C,EAAQpwB,QAAUowB,EAAQjwB,GAAKiwB,EAAQxxB,QACpDjiB,KAAK,KAAMX,EAAE00C,IACb/zC,KAAK,KAAMpC,EAAE61C,EAAQjwB,GAAKiwB,EAAQxxB,QAClClkC,MAAM,SAAU,WAChBA,MAAM,eAAgB81D,GAE3BG,EAAQj0C,OAAO,QACVC,KAAK,KAAMX,EAAE00C,IACb/zC,KAAK,KAAMpC,EAAE61C,EAAQjwB,GAAKiwB,EAAQxxB,QAClCjiB,KAAK,KAAMX,EAAE00C,IACb/zC,KAAK,KAAMpC,EAAE61C,EAAQxxB,QACrBlkC,MAAM,SAAU,WAChBA,MAAM,eAAgB81D,GAG3BG,EAAQj0C,OAAO,QACVC,KAAK,KAAMX,EAAE00C,IACb/zC,KAAK,KAAMpC,EAAE61C,EAAQxxB,QACrBjiB,KAAK,KAAMX,EAAE00C,IACb/zC,KAAK,KAAMpC,EAAE,IACb7f,MAAM,SAAU,WAEhBA,MAAM,eAAgB81D,IAjEtBj0D,EAAQ,EAAGA,EAAQ8zD,EAAe7zD,OAAQD,IAAS,CAAC,IAGrDo0D,EAHoD,EAAnDp0D,M,oCAsET,SAASq0D,EAASt2D,GACd,OAAc,OAAVA,QAA4BuB,IAAVvB,GAAiC,KAAVA,EAClC,EAEJA,EAEX,IAAMsE,EAAO7E,KAAKN,MAAM22D,QACxB,GAAa,OAATxxD,QAA0B/C,IAAT+C,EACjB,OAAO,KAQX,IAAM0U,EAASvZ,KAAKN,MAAM6Z,OAEpBu9C,EADY92D,KAAKI,MAAMk2D,eACP/8C,GAAQw9C,YAC9B,OACI,kBAAC,KAAD,CACI5yD,MAAM,cACNmM,QAAStQ,KAAKN,MAAM4Q,QACpB2F,KAAMjW,KAAK0T,SACXJ,SAAUtT,KAAKqR,aACfkC,OAAQ,MAER,mCAASsjD,EAAShyD,EAAKuhC,KACvB,wCAAcywB,EAAShyD,EAAKohC,UAC5B,sCAAY4wB,EAAShyD,EAAKggC,QAC1B,mDAAUiyB,EAAV,W,+BAIF,IACEv1C,EAAWvhB,KAAKI,MAAhBmhB,OACFy1C,EAAQh3D,KAAKi3D,cACnB,OACI,yBAAK7gD,GAAImL,GACJy1C,O,GA/Sax3D,cEkZf03D,I,kNAxYXx3D,MAAQ,CACJ4Q,SAAS,EACT4S,oBAAqB,EACrBrZ,SAAU,GACVm5B,IAAK,GACLjvB,MAAO,GACP+gC,WAAW,EACXxK,gBAAiB1nC,IAAOA,MAAS8L,OAAO,c,EAuD5C4kC,aAAe,SAAC3S,GACZ,EAAK1gC,SACD,CACIijB,oBAAqByd,K,EAKjC1qB,KAAO,SAAC1V,K,EAERgR,UAAY,WACR,EAAKtR,SAAS,CACVqQ,SAAS,K,EAIjBoD,SAAW,SAAApC,GACP,EAAKrR,SAAS,CACVqQ,SAAS,K,EAIjBe,aAAe,SAAAC,GACX,EAAKrR,SAAS,CACVqQ,SAAS,K,EAkNjBk5C,sBAAwB,SAACnmD,EAAMu1B,GAC3B,EAAK34B,SAAS,CAAEqqC,gBAAiBjnC,K,EAGrC2Y,SAAW,SAAC1K,GAAO,IAETuvB,EADe,EAAKzgC,MAAlBqe,SACcQ,aAAa6hB,SAC7BC,EAAWn+B,IAAOA,IAAOi+B,GAAMnyB,OAAO,aAAa1L,UAEnDb,EAAa,EAAKzC,MAAM4qC,gBAAgBtnC,UAG9C,OAAQsO,EAAE+F,OAAO9W,OACb,IAAK,IACD,IAAM0b,EAAQ9Z,EAJV,MAMJ4+B,GADc9kB,EAAS,QACF,EAAKutC,sBAAsB5mD,IAAOqZ,IACvD,MACJ,IAAK,IACD,IAAMC,EAAQtZ,IAAOA,MAAS8L,OAAO,aACrC,EAAK86C,sBAAsBttC,GAC3B,MACJ,IAAK,IACD,IAAMC,EAAQha,EAbV,MAeJga,GADcvZ,IAAOA,MAAS8L,OAAO,aAAa1L,WAChC,EAAKwmD,sBAAsB5mD,IAAOuZ,M,mFAvT5Dnc,KAAKyR,a,iCAEG,IAAD,OACCgN,EAAaze,KAAKI,MAAlBqe,SACF3Z,EAAM,IAAIC,IACV+B,EAAKlE,IAAO6b,EAASxN,UAAUlP,WAAY,YAAY2M,OAAO,gBAC9D3H,EAAKnE,MAAS8L,OAAO,gBAC3BxE,EAAmBuU,EAAS6J,OAAQxhB,EAAIC,GACnCoD,MAAK,SAAAtF,GACF,IAAMO,EAAYN,EAAIG,OAAOJ,EAAKA,MAAMK,OAAOG,SAASC,QACxD9B,QAAQC,IAAI2B,GACZ,EAAKnF,SAAS,CACV+iC,IAAK59B,OAGZmF,OAAM,SAAAC,GACHhH,QAAQC,IAAI,uBAAyBwK,KAAKC,UAAU1D,OAG5DN,GAAuCuU,EAASpX,MAAOoX,EAAS6J,OAAQ,OACnEne,MAAK,SAAAtF,GACF,EAAK5E,SAAS,CACV60C,WAAW,EACXjrC,SAAUhF,EAAKA,UAGtB0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,0CAA4CwK,KAAKC,UAAU1D,IACvE,EAAKvK,SAAS,CAAE60C,WAAW,S,sCAGtB,IACLr2B,EAAaze,KAAKI,MAAlBqe,SACFwC,EAAW,CACb,UAAarhB,OAAO6e,EAASyC,WAC7B,SAAYthB,OAAO6e,EAAS0C,UAC5B,SAAY1C,EAASQ,aAAa6hB,UAEhCzd,EAAa5E,EAASmjB,OACtB9vB,EAAMjC,GAAO4O,EAASQ,aAAaxM,MACnC6Q,EAActjB,KAAKN,MAAMwjB,oBACzB7P,GAASkQ,OAAOC,OAAOC,WAAa,KAAO,EACjD,OAAQH,GACJ,KAAK,EACD,OAAO,kBAAC,GAAD,CAAejQ,MAAOA,EAAOtS,OAHiB,IAGDkgB,SAAUA,EAAU/e,WAAYmhB,EAAY9B,OAAQ,WAAYP,QAAS,eAAgBnR,OAAQiC,IACzJ,KAAK,EACD,OAAO,kBAAC,GAAD,CAAgBuB,MAAOA,EAAOtS,OALgB,IAKAkgB,SAAUA,EAAU/e,WAAYmhB,EAAY9B,OAAQ,iBAAkBP,QAAS,qBAAsBnR,OAAQiC,IACtK,QACI,OAAO,Q,6CAgCf,OACI,yBAAKnR,MAAO,CAAEC,QAAS,OAAQC,WAAY,WACvC,yBAAKF,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAekO,YAAa,SAC5E,yBAAKvO,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAU2S,eAAgB,WACjE,yBAAK7S,MAAO,CAAEI,OAAQ,OAAQsS,MAAO,OAAQguB,WAAY,UAAWnyB,YAAa,SACjF,mCAEJ,yBAAKvO,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAU2S,eAAgB,WACjE,yBAAK7S,MAAO,CAAEI,OAAQ,OAAQsS,MAAO,OAAQguB,WAAY,UAAWnyB,YAAa,SACjF,qCAEJ,yBAAKvO,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAU2S,eAAgB,WACjE,yBAAK7S,MAAO,CAAEI,OAAQ,OAAQsS,MAAO,OAAQguB,WAAY,UAAWnyB,YAAa,SACjF,0C,6CAOGwU,GA0BnB,OAAIA,IAAqB1jB,KAAKN,MAAMwjB,oBAzBP,CACzBtiB,QAAS,OACT4S,eAAgB,SAChB3S,WAAY,SACZE,OAAQ,OACRmU,QAAS,UACTuK,aAAc,MACd1J,gBAAiB,YACjB5G,MAAO,QACPI,SAAU,OACV4K,YAAa,MACbD,YAAa,QACbE,YAAa,YACb5F,OAAQ,WAEmB,CAC3B5T,QAAS,OAAQ4S,eAAgB,SACjC3S,WAAY,SAAUE,OAAQ,OAC9BmU,QAAS,UACTuK,aAAc,MAAO1J,gBAAiB,QACtC5G,MAAO,YAAaI,SAAU,OAC9B4K,YAAa,MAAOD,YAAa,QACjCE,YAAa,YACb5F,OAAQ,a,8CAOS,IAAD,OACDk+B,KAAXD,OACR,OACI,yBAAKtxC,UAAU,eACX,yBAAKR,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWC,cAAe,QAC1E,yBAAKN,MAAOX,KAAK6jB,uBAAuB,GAAIrL,UAAW,kBAAM,EAAK86B,aAAa,KAA/E,kBACA,yBAAK3yC,MAAOX,KAAK6jB,uBAAuB,GAAIrL,UAAW,kBAAM,EAAK86B,aAAa,KAA/E,sB,yCAqBG,IAUP70B,EAAaze,KAAKI,MAAlBqe,SACFukB,EAAMhjC,KAAKN,MAAMsjC,IACvB,GAAmB,IAAfA,EAAIvgC,OACJ,OAAO,KAEX,IAAMqkC,E7DpLP,SAAkB9D,GAErB,OAAI1gC,MAAMC,QAAQygC,GACCA,EAAIx+B,QAAO,SAAU4F,EAAM5H,EAAO6H,GAC7C,MAAuC,iBAAhCD,EAAKe,KAAKpJ,WAAWe,UAI7B,G6D4KU2lC,CAAsBzF,GAC7BoD,E7D1KP,SAAgBpD,GAEnB,OAAI1gC,MAAMC,QAAQygC,GACCA,EAAIx+B,QAAO,SAAU4F,EAAM5H,EAAO6H,GAC7C,MAAuC,iBAAhCD,EAAKe,KAAKpJ,WAAWe,QAAmD,iBAAhCsH,EAAKe,KAAKpJ,WAAWe,UAIrE,G6DkKQ2lC,CAAoBzF,GAEzBm0B,EAKN,SAA0BC,GACtB,GAAI90D,MAAMC,QAAQ60D,GAAY,CAI1B,OAHyBA,EAAU5yD,QAAO,SAAU4F,EAAM5H,EAAO6H,GAC7D,YAAyBvI,IAAlBsI,EAAKi8B,UAAoDhZ,MAA1BztB,OAAOwK,EAAKi8B,aAI1D,MAAO,GAZcgxB,C7DR1B,SAAmBr0B,GAEtB,QAAI1gC,MAAMC,QAAQygC,IACCA,EAAIx+B,QAAO,SAAU4F,EAAM5H,EAAO6H,GAC7C,MAAuC,iBAAhCD,EAAKe,KAAKpJ,WAAWe,QACQ,iBAAhCsH,EAAKe,KAAKpJ,WAAWe,QACW,iBAAhCsH,EAAKe,KAAKpJ,WAAWe,QACW,iBAAhCsH,EAAKe,KAAKpJ,WAAWe,QACW,iBAAhCsH,EAAKe,KAAKpJ,WAAWe,QACW,iBAAhCsH,EAAKe,KAAKpJ,WAAWe,QACW,iBAAhCsH,EAAKe,KAAKpJ,WAAWe,QACW,iBAAhCsH,EAAKe,KAAKpJ,WAAWe,U6DJf2lC,CAAuBzF,IAGrCx/B,QAAQC,IAAIqjC,GAiBZ,SAASwwB,EAAOtxD,GAEZ,IADA,IAAIuxD,EAAW,EACN/0D,EAAQ,EAAGA,EAAQwD,EAAKvD,OAAQD,IAAS,CAC9C,IAAME,EAAUsD,EAAKxD,GACA,iBAAjBE,EAAQyI,OACa,uBAAjBzI,EAAQqjC,OACRwxB,GAAiD,GAA3B33D,OAAO8C,EAAQwjC,WAEpB,iBAAjBxjC,EAAQqjC,OACRwxB,GAAiD,GAA3B33D,OAAO8C,EAAQwjC,iBAIzBpkC,IAAhBY,EAAQ6iC,MACuC,OAA3C7iC,EAAQ6iC,IAAIxjC,WAAW5B,MAAM,YAC7Bo3D,GAAiD,IAA3B33D,OAAO8C,EAAQ2jC,WAEM,OAA3C3jC,EAAQ6iC,IAAIxjC,WAAW5B,MAAM,YAC7Bo3D,GAAiD,IAA3B33D,OAAO8C,EAAQ2jC,UAAmB,KAET,OAA/C3jC,EAAQ6iC,IAAIxjC,WAAW5B,MAAM,gBAC7Bo3D,GAAiD,IAA3B33D,OAAO8C,EAAQ2jC,WAEG,OAAxC3jC,EAAQ6iC,IAAIxjC,WAAW5B,MAAM,SAC7Bo3D,GAAiD,IAA3B33D,OAAO8C,EAAQ2jC,WAEG,OAAxC3jC,EAAQ6iC,IAAIxjC,WAAW5B,MAAM,SAC7Bo3D,GAAiD,IAA3B33D,OAAO8C,EAAQ2jC,UAAmB,KAEhB,OAAxC3jC,EAAQ6iC,IAAIxjC,WAAW5B,MAAM,SAC7Bo3D,GAAiD,IAA3B33D,OAAO8C,EAAQ2jC,UAAmB,GAEd,OAA1C3jC,EAAQ6iC,IAAIxjC,WAAW5B,MAAM,WAC7Bo3D,GAAiD,IAA3B33D,OAAO8C,EAAQ2jC,YAKjD,OAAO3hC,SAAS6yD,GAMpB,IAHA,IACMtzB,EA9EN,SAAyBh7B,GAGrB,IAFA,IAAMuuD,EAAa9yD,UAAU9B,MAASI,UAAYJ,IAAOqG,EAAW,YAAYjG,WAApD,OACxBy0D,EAAa,GACRj1D,EAAQ,EAAGA,EAAQg1D,EAAYh1D,IAAS,CAC7C,IAAM4rB,EAAOxrB,IAAOA,IAAOqG,EAAW,YAAYjG,UAAqB,GAARR,EAAa,GAAK,GAAK,KAAOkM,OAAO,cACpG+oD,EAAWvxD,KAAKkoB,GAEpB,OAAOqpC,EAuEOC,CADAj5C,EAASxN,UAAUlP,YAEjC41D,EAAqB,GAhFV,WAiFNn1D,GACL,IAAME,EAAUuhC,EAAUzhC,GACpBo1D,EAAgB9wB,EAAKtiC,QAAO,SAAUjE,EAAOiC,EAAO6H,GACtD,OAAOzH,IAAOF,EAAS,cAAcM,YAAcJ,IAAOrC,EAAMsC,QAAQd,WAAWe,OAAQ,cAAcE,aAEvG6gD,EAAWzd,EAAG5hC,QAAO,SAAUjE,EAAOiC,EAAO6H,GAC/C,OAAOzH,IAAOF,EAAS,cAAcM,YAAcJ,IAAOrC,EAAMsC,QAAQd,WAAWe,OAAQ,cAAcE,aAEvG60D,EAAcV,EAAiB3yD,QAAO,SAAUjE,EAAOiC,EAAO6H,GAChE,OAAOzH,IAAOF,EAAS,cAAcM,YAAcJ,IAAOrC,EAAMsC,QAAQd,WAAWe,OAAQ,cAAcE,aAGvG80D,EAsBV,SAAkBztD,GAEd,IADA,IAAIk6B,EAAM,EACDrnB,EAAI,EAAGA,EAAI7S,EAAI5H,OAAQya,IAC5BqnB,GAAO3kC,OAAOyK,EAAI6S,GAAGgpB,UAEzB,OAAOxhC,SAAS6/B,GA3BGwzB,CAASH,GACtBI,EAAQC,EAAQpU,GAChBqU,EAAWD,EAAQJ,GAEnBd,EAAcO,EAAOM,GAAiBN,EAAOzT,GAAYyT,EAAOO,GACtEF,EAAmBzxD,KAAK,CACpB+/B,QAAS6xB,EACT1xB,GAAI4xB,EACJnzB,MAAOqzB,EACP9pC,KAAM1rB,EACNq0D,iBAtBCv0D,EAAQ,EAAGA,EAAQyhC,EAAUxhC,OAAQD,IAAU,EAA/CA,GA0BT,SAASy1D,EAAQ5tD,GAEb,IADA,IAAIk6B,EAAM,EACDrnB,EAAI,EAAGA,EAAI7S,EAAI5H,OAAQya,IAC5BqnB,GAAO3kC,OAAOyK,EAAI6S,GAAGmpB,UAEzB,OAAO3hC,SAAS6/B,GAWpB,OACI,kBAAC,GAAD,CAAiBgzB,SAzFN,EAyF0BjB,eAAgBqB,EAAoB1uD,UAAWwV,EAASxN,UAAWsQ,OAAQ,WAAYP,QAAS,YAAam3C,WAAW,iB,+BAqCjK,IAAMC,EAAcp4D,KAAK+jB,gBACnBs0C,EAAqBr4D,KAAKs4D,wBAC1BC,EAAoBv4D,KAAKw4D,uBACzBC,EAAUz4D,KAAKN,MAAMmK,SACrB6uD,EAAW14D,KAAKN,MAAMkK,SACtB+uD,EAAsB34D,KAAKN,MAAM4qC,gBAAgBtnC,UAC/Cyb,EAAaze,KAAKI,MAAlBqe,SAER,GAAuB,IAAnBg6C,EAAQh2D,QAA6B,IAAbi2D,EACxB,OAAO,KAGX,IAAME,EAAc54D,KAAK64D,mBACnBvuB,EAAkB,CAACquB,EAAuB,OAA0BA,GAE1E,OACI,yBAAKx3D,UAAU,iBACX,yBAAKA,UAAU,iBACX,6BACI,yBAAKA,UAAU,6BACX,8DACCnB,KAAKN,MAAMo1C,UAAa,kBAAC,KAAD,CAAMrwC,KAAK,YAAiB4zD,GAEzD,yBAAKl3D,UAAU,+BAA+Bi3D,IAElD,6BACI,yBAAKj3D,UAAU,6BACX,kDACA,yBAAKA,UAAU,eACVo3D,IAGT,yBAAKp3D,UAAU,+BACVnB,KAAKN,MAAMo1C,UAAa,kBAAC,KAAD,CAAMrwC,KAAK,YAAiBm0D,KAIjE,yBAAKj4D,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,MAAOmS,OAAQ,qBAC7F,kBAAC,KAAD,CACIkD,qBAAsB,SAAAC,GAAW,OAAIA,EAAYC,YACjDjW,MAAOP,KAAKN,MAAM4qC,gBAClB57B,OAAQ,aACRiP,YAAY,EACZqb,OAAQ,QACR7lB,SAAUnT,KAAKwpD,wBAEnB,yBAAK7oD,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,QAC9E,kBAAC,KAAD,CAAQV,MAAM,IAAIqd,MAAM,SAASC,KAAK,cAAcpK,QAASzT,KAAKgc,WAClE,kBAAC,KAAD,CAAQzb,MAAM,IAAIqd,MAAM,SAASC,KAAK,eAAepK,QAASzT,KAAKgc,WACnE,kBAAC,KAAD,CAAQzb,MAAM,IAAIqd,MAAM,SAASC,KAAK,eAAepK,QAASzT,KAAKgc,aAG3E,yBAAKrb,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWC,cAAe,OAAQ8jB,aAAc,SAE5F/kB,KAAKN,MAAMo1C,UAAa,kBAAC,KAAD,CAAMrwC,KAAK,YAAiB,kBAACq0D,GAAD,CAAqBxuB,gBAAiBA,EAAiB7rB,SAAUA,U,GAhYnHjf,cCoJXu5D,I,8LAtJC,OAAO,K,2CAQf,MAAO,U,sCAGP,SAAStuB,EAAWuuB,EAAUlyD,GAE1B,IADA,IAAImyD,EAAS,GADiB,WAErBz2D,GACL,IAAMu5B,EAAQj1B,EAAc,EAARtE,EAAY,GAAK,GAAK,IACpCw5B,EAAMl1B,EAAoB,GAAbtE,EAAQ,GAAS,GAAK,GAAK,IACxC02D,EAAaF,EAASx0D,QAAO,SAAUjE,EAAOiC,EAAO6H,GACvD,OAAO9J,EAAM6tB,KAAO2N,GAASx7B,EAAM6tB,KAAO4N,KAE1CuI,EAAM,EACV,IAAK,IAAI/hC,EAAQ,EAAGA,EAAQ02D,EAAWz2D,OAAQD,IAAS,CACpD,IAAME,EAAUw2D,EAAW12D,GAC3B+hC,GAAY3kC,OAAO8C,EAAQ0gB,MAE/B61C,EAAO/yD,KAAKq+B,IAXP/hC,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CAAC,IAMlC+hC,EANiC,EAAhC/hC,GAaT,OAAOy2D,EAEX,SAASE,EAAWnzD,GAChB,SAAS2wC,EAAeC,GACpB,OAAkB,OAAdA,EACO,GAED,GAAN,OAAUA,EAAUvjC,MAApB,kBAAmCujC,EAAUznC,OA4ErD,OAbcnJ,EAAK0G,KAAI,SAAUtC,EAAM5H,GACnC,IA7DiBjC,EA6DX64D,EAvDV,SAAkBjwD,EAAU3G,GACxB,IAAMm1C,EAAY,CACdtkC,MAAO,GACPlE,MAAO,IAEX,OAAiB,IAAbhG,EACc,IAAV3G,GAAgBA,EAAQ,KAAQ,GAChCm1C,EAAUtkC,MAAQ,MAClBskC,EAAUxoC,MAAQ,kBACXwoC,GACAn1C,EAAQ,IAAM,GACrBm1C,EAAUtkC,MAAQ,MAClBskC,EAAUxoC,MAAQ,kBACXwoC,IAGPA,EAAUtkC,MAAQ,MAClBskC,EAAUxoC,MAAQ,UACXwoC,GAGE,IAAbxuC,EACc,IAAV3G,GAAgBA,EAAQ,IAAO,GAC/Bm1C,EAAUtkC,MAAQ,MAClBskC,EAAUxoC,MAAQ,kBACXwoC,GACAn1C,EAAQ,IAAM,GACrBm1C,EAAUtkC,MAAQ,MAClBskC,EAAUxoC,MAAQ,kBACXwoC,IAGPA,EAAUtkC,MAAQ,MAClBskC,EAAUxoC,MAAQ,UACXwoC,GAGE,IAAbxuC,GAEIwuC,EAAUtkC,MAAQ,MAClBskC,EAAUxoC,MAAQ,kBACXwoC,GAOE,IAAbxuC,GACAwuC,EAAUtkC,MAAQ,MAClBskC,EAAUxoC,MAAQ,kBACXwoC,QAHX,EAOkBD,CAAS,EAAGl1C,GAC9B,OAAa,IAAT4H,EAEI,yBAAKzJ,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,SAAU6X,OAAQ,gCAAiCC,eAAgB,WAAYo0B,WAAY4J,EAAeyiB,MAInM,yBAAKz4D,MAAO,CAAEoV,gBAAiB,qBAAsBhV,OAAQ,OAAQwO,SAAU,OAAQ3O,QAAS,OAAQC,WAAY,SAAU2S,eAAgB,SAAUkF,OAAQ,gCAAiCC,eAAgB,WAAYnE,OAAQ,UAAWu4B,WAAY4J,EAAeyiB,KACvQ,4BApEM,KADG74D,EAqEQ6J,SApEItI,IAAVvB,GAAiC,OAAVA,GAA4B,KAAVA,EACjD,GAEL,GAAN,OAAUA,QA9BN,MAqGyEP,KAAKI,MAAlF+B,EArGI,EAqGJA,WAAYk3D,EArGR,EAqGQA,QAASC,EArGjB,EAqGiBA,SAAUC,EArG3B,EAqG2BA,QAASC,EArGpC,EAqGoCA,QAASC,EArG7C,EAqG6CA,QAASC,EArGtD,EAqGsDA,QAASv1D,EArG/D,EAqG+DA,MACrE2C,EAAK3E,EAAc,OAAwB,OAC7Cw3D,EAAYlvB,EAAW4uB,EAASvyD,GAChC8yD,EAAanvB,EAAW6uB,EAAUxyD,GAClC+yD,EAAYpvB,EAAW8uB,EAASzyD,GAChCgzD,EAAYrvB,EAAW+uB,EAAS1yD,GAChCizD,EAAYtvB,EAAWgvB,EAAS3yD,GAChCkzD,EAAYvvB,EAAWivB,EAAS5yD,GAC9BmzD,EAAUd,EAAWQ,GACrBO,EAAWf,EAAWS,GACtBO,EAAUhB,EAAWU,GACrBO,EAAUjB,EAAWW,GACrBO,EAAUlB,EAAWY,GACrBO,EAAUnB,EAAWa,GAC3B,OACI,yBAAKr5D,MAAO,CAAEC,QAAS,OAAQsV,iBAAkB,UAAY/R,EAAM1B,OAAS,UACxE,yBAAK9B,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAYhB,KAAKu6D,eAAiB,UAAYN,GAClG,yBAAKt5D,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAYhB,KAAKu6D,eAAiB,UAAYL,GAClG,yBAAKv5D,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAYhB,KAAKu6D,eAAiB,UAAYJ,GAClG,yBAAKx5D,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAYhB,KAAKu6D,eAAiB,UAAYH,GAClG,yBAAKz5D,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAYhB,KAAKu6D,eAAiB,UAAYF,GAClG,yBAAK15D,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAYhB,KAAKu6D,eAAiB,UAAYD,M,+BAIpG,IAAD,EACuBt6D,KAAKI,MAAf+D,GADb,EACGq2D,SADH,EACar2D,OACZi1C,EAAaj1C,EAAMuI,KAAI,SAACtC,EAAM5H,GAAP,OAAiB,yBAAK7B,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,SAAUE,OAAQ,OAAQ2X,OAAQ,gCAAiCC,eAAgB,WAAY5C,gBAAiB,WAAa7V,IAAKsC,GAAO,4BAAK4H,EAAKjG,WACtQ,OACI,yBAAKxD,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAChD,yBAAKL,MAAO,CAAEC,QAAS,OAAQsV,iBAAkB,UAAY/R,EAAM1B,OAAS,UACvE22C,GAEJp5C,KAAKy6C,qB,GAzJUj7C,cCajBi7D,G,iLAdD,IAAD,EAC8Ez6D,KAAKI,MAAhFi5D,EADH,EACGA,QAASC,EADZ,EACYA,SAAUC,EADtB,EACsBA,QAASC,EAD/B,EAC+BA,QAASC,EADxC,EACwCA,QAASC,EADjD,EACiDA,QAAQv3D,EADzD,EACyDA,WAAWgC,EADpE,EACoEA,MAEzE,OACI,yBAAKxD,MAAO,CAAEqZ,UAAW,SACzB,yBAAKrZ,MAAO,CAAEoV,gBAAiB,YAAa4N,oBAAqB,MAAOC,qBAAsB,MAAO7iB,OAAQ,OAAQmU,QAAS,WAAYtU,QAAS,OAAQC,WAAY,WACnK,wBAAIF,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBAAqBhL,IAE3D,kBAAC,GAAD,CAAmBhC,WAAYA,EAAYgC,MANhC,CAAC,CAAEA,MAAO,OAAS,CAAEA,MAAO,QAAU,CAAEA,MAAO,OAAS,CAAEA,MAAO,QAAU,CAAEA,MAAO,OAAS,CAAEA,MAAO,QAMlDk1D,QAASA,EAASC,SAAUA,EAAUC,QAASA,EAASC,QAASA,EAASC,QAASA,EAASC,QAASA,S,GATzJl6D,aCqRZk7D,I,kNA1QXh7D,MAAQ,CACJojB,WAAY,GACZk+B,aAAc,KACd2Z,eAAgB,EAChBx4D,WAAYS,IAAOA,MAAS8L,OAAO,YAAa,YAAY1L,UAC5D6G,SAAU,GACVsd,SAAU,GACVC,SAAU,GACVgqB,iBAAatvC,EACbgzC,WAAW,EACX8lB,aAAc,GACdC,aAAc,GACdC,eAAgB,GAChBC,cAAe,GACfC,cAAe,GACfC,aAAc,GACd5+B,KAAM,GACNC,KAAM,I,EAqDVplB,MAAQ,SAACw6B,EAAQ5qB,GACb,IAAI4B,EAAW5B,EAAO4B,SAClBipB,EAAY,GAehB,OAdAjpB,EAAS1C,SAAQ,SAAA2C,GACbgpB,EAAUhpB,EAAQzoB,KAAO,MAG7BwxC,EAAO1rB,SAAQ,SAAA4rB,GACX,IAAIC,EAAUD,EAAMpmC,QACpBkd,EAAS1C,SAAQ,SAAA2C,GACb,IAAMC,EAAK,IAAIC,OAAOF,EAAQG,UAAWH,EAAQI,aAC3C5oB,EAAQ0xC,EAAQ1xC,MAAMyoB,GACd,OAAVzoB,GAA+B,KAAbA,EAAM,IACxBwxC,EAAUhpB,EAAQzoB,KAAKgG,KAAK0rC,SAIjCD,G,EAEXsP,mBAAqB,SAAC1gD,GAClB,EAAKN,SAAS,CACV+gD,aAAczgD,K,EAKtByb,SAAW,SAAC1K,GAAO,IAETuvB,EADe,EAAKzgC,MAAlBqe,SACcQ,aAAa6hB,SAC7BC,EAAWn+B,IAAOA,IAAOi+B,GAAMnyB,OAAO,aAAa1L,UAEnDb,EAAa,EAAKzC,MAAMyC,WAG9B,OAAQmP,EAAE+F,OAAO9W,OACb,IAAK,IACD,IAAM0b,EAAQ9Z,EAJV,MAMJ4+B,GADc9kB,EAAS,QACF,EAAKhc,SAAS,CAAEkC,WAAY8Z,IACjD,MACJ,IAAK,IACD,IAAMC,EAAQtZ,IAAOA,MAAS8L,OAAO,aACrC,EAAKzO,SAAS,CAAEkC,WAAY+Z,IAE5B,MACJ,IAAK,IACD,IAAMC,EAAQha,EAdV,MAgBJga,GADcvZ,IAAOA,MAAS8L,OAAO,aAAa1L,WAChC,EAAK/C,SAAS,CAAEkC,WAAYga,M,mFAlGtDnc,KAAKytD,Y,gCAGE,IAAD,OACEhvC,EAAaze,KAAKI,MAAlBqe,SACRze,KAAKC,SAAS,CAAE60C,WAAW,IAC3B,IACM/tC,EADW/G,KAAKN,MAAMyC,WACL,OACjB2E,EAAKlE,IAAOmE,EAAM,QAA0B2H,OAAO,cACnDwsD,EAAWrwD,GAAwB,cACpCV,MAAK,SAAAtF,GACF,IAAIiiB,EAASjiB,EAAKA,KAAKqjB,MAAK,SAAA/c,GAAI,MAAkC,iBAA9BA,EAAKgd,gBAAgBtW,QACzDrO,QAAQC,IAAI,iCAAmCwK,KAAKC,UAAU4Y,IAC9D,EAAK7mB,SAAS,CACVmxC,YAAatqB,OAGpBvc,OAAM,SAAAC,GACHhH,QAAQC,IAAI+G,MAEdirC,EAASvrC,GAAuCuU,EAASpX,MAAOoX,EAAS6J,OAAQ,OAClFne,MAAK,SAAAtF,GACF,EAAK5E,SAAS,CACV4J,SAAUhF,EAAKA,UAGtB0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,0CAA4CwK,KAAKC,UAAU1D,OAEzE4qC,EAAUlrC,GAAuCuU,EAASpX,MAAOP,GAClEqD,MAAK,SAAAtF,GACF,EAAK5E,SAAS,CACVknB,SAAUtiB,EAAKA,UAGtB0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,uBAAyBwK,KAAKC,UAAU1D,OAEtD6qC,EAAUnrC,GAAuCuU,EAASpX,MAAOP,GAClEqD,MAAK,SAAAtF,GACF,EAAK5E,SAAS,CACVmnB,SAAUviB,EAAKA,UAGtB0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,uBAAyBwK,KAAKC,UAAU1D,OAG5DM,QAAQC,IAAI,CAACmwD,EAAUzlB,EAAQL,EAASC,IAAUlrC,MAAK,WAAQ,EAAKlK,SAAS,CAAE60C,WAAW,OAAYvqC,OAAM,WAAQ,EAAKtK,SAAS,CAAE60C,WAAW,S,+BAyDzI,IAAD,OACL,SAAS2U,EAAWlpD,GAChB,OAAc,OAAVA,QAA4BuB,IAAVvB,GAAiC,KAAVA,EAClC,GAEJA,EAAMwB,WAAWe,OALvB,IAQG2b,EAAaze,KAAKI,MAAlBqe,SARH,EAS6Bze,KAAKN,MAA/B0xC,EATH,EASGA,YAAavnC,EAThB,EASgBA,SACfsxD,EAAUn7D,KAAKN,MAAMynB,SACrBi0C,EAAWp7D,KAAKN,MAAM0nB,SAEtBrgB,EADW/G,KAAKN,MAAMyC,WACL,OACjB2E,EAAKC,EAAM,OACbsyD,EAAU,GACVC,EAAW,GACXC,EAAU,GACVC,EAAU,GACVC,EAAU,GACVC,EAAU,GACd,GAAIp3D,MAAMC,QAAQ44D,IACS,IAAnBA,EAAQ14D,OACR,IAAK,IAAID,EAAQ,EAAGA,EAAQ24D,EAAQ14D,OAAQD,IAAS,CACjD,IAAME,EAAUy4D,EAAQ34D,GAClB0nB,EAAMu/B,EAAW/mD,EAAQynB,OACzB4/B,EAAON,EAAW/mD,EAAQmoB,OAC1BqiC,EAAMzD,EAAW/mD,EAAQ2nB,OACzB4/B,EAAMR,EAAW/mD,EAAQ6nB,OAEzB3hB,EAAOhG,IAAQF,EAAQ2iB,QAAQtjB,WAAaW,EAAQ4iB,QAAQvjB,WAAa,sBAAsBiB,UACjG8D,EAAK8B,GAAQA,EAAO7B,IACR,OAARmjB,GAAwB,KAARA,QAAsBpoB,IAARooB,GAC9BmvC,EAAQnzD,KAAK,CACTkoB,KAAMxlB,EACNwa,KAAM8G,IAGD,OAAT6/B,GAA0B,KAATA,QAAwBjoD,IAATioD,GAChCuP,EAASpzD,KAAK,CACVkoB,KAAMxlB,EACNwa,KAAM2mC,IAGF,OAARmD,GAAwB,KAARA,QAAsBprD,IAARorD,GAC9BqM,EAAQrzD,KAAK,CACTkoB,KAAMxlB,EACNwa,KAAM8pC,IAGF,OAARjD,GAAwB,KAARA,QAAsBnoD,IAARmoD,GAC9BuP,EAAQtzD,KAAK,CACTkoB,KAAMxlB,EACNwa,KAAM6mC,IAIVwP,EAAQvzD,KAAK,CACTkoB,KAAMxlB,EACNwa,KA9BA,QAqCxB,GAAI9gB,MAAMC,QAAQ64D,IACU,IAApBA,EAAS34D,OACT,IAAK,IAAID,EAAQ,EAAGA,EAAQ44D,EAAS34D,OAAQD,IAAS,CAClD,IAAME,EAAU04D,EAAS54D,GACnB4oB,EAAMq+B,EAAW/mD,EAAQ2oB,OACzBziB,EAAOhG,IAAQF,EAAQ2iB,QAAQtjB,WAAaW,EAAQ4iB,QAAQvjB,WAAa,sBAAsBiB,UACjG8D,EAAK8B,GAAQA,EAAO7B,IACR,OAARqkB,GAAwB,KAARA,QAAsBtpB,IAARspB,GAC9BsuC,EAAQxzD,KAAK,CACTkoB,KAAMxlB,EACNwa,KAAMgI,KAQ9B,IAAI6mB,EAAgB,QACAnwC,IAAhBsvC,IACAa,EAAgBjyC,KAAKkX,MAAMrN,EAAUunC,IAIzC,IAAMc,EAAeD,EAAc,kCAEnC,OACI,yBAAKtxC,MAAO,CAAEuU,QAAS,aAAc,yBAAKvU,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,QACnH,kBAAC,KAAD,CACIqV,qBAAsB,SAAAC,GAAW,OAAIA,EAAYC,YACjDgH,aAAc,SAACC,GAAc,OAAOA,EAAU7a,MAAS8a,WAAaD,EAAU7a,IAAO6b,EAASQ,aAAa6hB,SAAS/+B,WAAY,YAAYigC,SAC5IzhC,MAAOqC,IAAO5C,KAAKN,MAAMyC,YACzBgR,SAAU,SAAC9P,EAAMuY,GAAiB,EAAK3b,SAAS,CAAEkC,WAAYkB,EAAKL,aACnE2a,YAAY,IAChB,yBAAKhd,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,QAC9E,kBAAC,KAAD,CAAQV,MAAM,IAAIqd,MAAM,SAASC,KAAK,cAAcpK,QAASzT,KAAKgc,WAClE,kBAAC,KAAD,CAAQzb,MAAM,IAAIqd,MAAM,SAASC,KAAK,eAAepK,QAASzT,KAAKgc,WACnE,kBAAC,KAAD,CAAQzb,MAAM,IAAIqd,MAAM,SAASC,KAAK,eAAepK,QAASzT,KAAKgc,aAGvE,yBAAKrb,MAAO,CAAEyS,OAAQ,aAClB,yBAAKzS,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaD,OAAQ,OAAQiZ,UAAW,SACxF,8BACA,kBAAC,GAAD,CAAe0G,IAAK,IAAKD,IAAK,EAAGq5B,gBAAiB,EAAG6F,aAAa,IAAIloC,MAAO0D,UAAWoG,OAAO,oBAAoBka,OAAO,2BAE9H,yBAAK96B,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,WAAYD,OAAQ,SACpE,8BACA,kBAAC,GAAD,CAAY2f,IAAK,IAAKD,IAAK,EAAGq5B,gBAAiB,EAAG6F,aAAa,IAAIloC,MAAO0D,UAAWoG,OAAO,eAAeka,OAAO,uBAG1H,yBAAKt6B,UAAU,cAEXnB,KAAKN,MAAMo1C,UAEH,kBAAC,KAAD,CAAMrwC,KAAK,YAGX,yBAAKtD,UAAU,mBACX,kBAAC,GAAD,CAAgBgB,WAAYnC,KAAKN,MAAMyC,WAAY23C,gBAAiB,EAAG0H,eAAe,EAAM/iC,SAAUA,EAAU1S,OAAQ,YAAa5H,MAAM,UAG3I,kBAAC,GAAD,CAAgBhC,WAAYnC,KAAKN,MAAMyC,WAAY0H,SAAUqoC,EAAc4H,gBAAiB,EAAGr7B,SAAUA,EAAU1S,OAAQ,YAAa5H,MAAM,6BAC9I,kBAAC,GAAD,CAAchC,WAAYnC,KAAKN,MAAMyC,WAAYk3D,QAASA,EAASC,SAAUA,EAAUC,QAASA,EAASC,QAASA,EAASC,QAASA,EAASC,QAASA,EAASv1D,MAAM,8BAIrL,yBAAKxD,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,WAAYD,OAAQ,SACpE,8BACA,kBAAC,GAAD,CAAY2f,IAAK,IAAKD,IAAK,EAAGq5B,gBAAiB,EAAG6F,aAAa,IAAIloC,MAAO0D,UAAWoG,OAAO,uBAAuBka,OAAO,mC,GApQlHj8B,cC2Fb67D,I,kNAhGX37D,MAAQ,CACJ+e,SAAU,EAAKre,MAAMqe,SACrBL,UAAU,EACVk9C,cAAe,GACfxkD,aAAc,GACdnX,WAAY,G,mFAIZK,KAAK+W,cAAgB/W,KAAK+W,cAAcC,KAAKhX,MAG7CA,KAAKu7D,qBAEL,IAAMx7D,EAAcF,eAAeC,QAAQ,QAC3CE,KAAKC,SAAS,CAAEN,WAAYI,M,2CAEV,IAAD,OACjBmK,EAAgClK,KAAKN,MAAM+e,SAASzN,WAC/C7G,MAAK,SAAAtF,GACFrB,QAAQC,IAAI,yBAA2BwK,KAAKC,UAAUrJ,IACtD,EAAK5E,SAAS,CACVq7D,cAAez2D,EAAKA,KAAK,GAAG8D,aAGnC4B,OAAM,SAAAC,GACHhH,QAAQC,IAAI,yBAA2BwK,KAAKC,UAAU1D,S,oCAGpD4M,GACVpX,KAAKC,SAAS,CAAE6W,aAAcM,EAAMC,OAAO9W,U,yCAG3CP,KAAKC,SACD,CACIme,UAAWpe,KAAKN,MAAM0e,a,sCAM9Bpe,KAAKC,SACD,CACIme,UAAU,M,qCAKN,IAAD,QrG4qBZ,SAA6BzV,EAASvC,EAAOoB,GAClD,IAAMqB,EAAO,CACXF,QAASA,EACTvC,MAAOA,EACPoB,QAASA,GAEX,OAAOnB,IAAMyC,KAAK,oCAAqCD,IqGjrBjDqB,CAAgClK,KAAKN,MAAMoX,aAAc9W,KAAKN,MAAM+e,SAASpX,MAAOrH,KAAKN,MAAM+e,SAASzN,WACnG7G,MAAK,SAAAtF,GACFrB,QAAQC,IAAI,0BAA4BwK,KAAKC,UAAUrJ,IACvD,EAAK5E,SACD,CACI6W,aAAc,KAGtB,EAAKykD,wBAERhxD,OAAM,SAAAC,GACHhH,QAAQC,IAAI,0BAA4BwK,KAAKC,UAAU1D,OAE/DxK,KAAKC,SACD,CACIme,UAAU,M,+BAIZ,IAAD,OACL,OACI,yBAAKzd,MAAO,CAAEokB,aAAc,SACxB,yBAAK5jB,UAAU,oBACX,wBAAIR,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBAAtC,kCACA,yBAAKsE,QAAS,kBAAM,EAAKoM,oBAAoBlf,MAAO,CAAEC,QAAkC,GAAzBZ,KAAKN,MAAMC,WAAkB,OAAS,OAAQ6U,OAAQ,YACjH,yBAAKnT,IAAKoT,KAAUlT,IAAI,eAGhC,yBAAKJ,UAAU,sBACX,4BAAKnB,KAAKN,MAAM47D,gBAEpB,yBAAK36D,MAAO,CAAEC,QAASZ,KAAKN,MAAM0e,SAAW,QAAU,SACnD,yBAAKzd,MAAO,CAAEuU,QAAS,WAAYa,gBAAiB,wBAChD,kBAAC,KAAD,CAAOM,YAAY,mDAAW9V,MAAOP,KAAKN,MAAMoX,aAAc3D,SAAUnT,KAAK+W,iBAEjF,yBAAKpW,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WACjE,yBAAKF,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaC,cAAe,SAC5E,kBAAC,KAAD,CAAQwS,QAAS,kBAAM,EAAKwM,kBAA5B,gBACA,kBAAC,KAAD,CAAQxM,QAAS,kBAAM,EAAKyM,gBAAgBzb,KAAK,WAAjD,wB,GAxFFjF,cCDpBg8D,I,OAAY,sBACZC,GAAgB,qBAyKPC,G,2MAtKXh8D,MAAQ,CACJ0e,UAAU,EACVu9C,aAAa,EACbC,SAAU,GACVn9C,SAAU,EAAKre,MAAMqe,SACrB3H,kBAAchV,EACdnC,WAAY,G,EA2EhBwT,SAAW,SAACwtB,K,EAEZk7B,YAAc,SAACzkD,GAEX,IAAM0kD,EAAe,EAAKp8D,MAAMk8D,SAAS1zC,MAAK,SAAA/c,GAAI,OAAIA,EAAKvC,OAASwO,EAAMC,OAAO9W,WAEjD,IAA3B,EAAKb,MAAMi8D,cAAiD,IAAzBvkD,EAAMC,OAAO4b,UAAkD,IAA3B,EAAKvzB,MAAMi8D,cAAkD,IAAzBvkD,EAAMC,OAAO4b,UACzH/oB,GAAuB4xD,EAAapzD,OAAQozD,EAAanzD,QAASmzD,EAAalzD,KAAMkzD,EAAa10D,UAAY00D,EAAar3D,OAAS+2D,GAAaC,GAAgBD,IAC5JrxD,MAAK,SAAAtF,GACFrB,QAAQC,IAAI,iBAAmBwK,KAAKC,UAAUrJ,IAC9C,EAAKk3D,sBAERxxD,OAAM,SAAAC,GACHhH,QAAQC,IAAI,iBAAmBwK,KAAKC,UAAU1D,Q,mFApF1DxK,KAAK+W,cAAgB/W,KAAK+W,cAAcC,KAAKhX,MAG7CA,KAAK+7D,mBAEL,IAAMh8D,EAAcF,eAAeC,QAAQ,QAC3CE,KAAKC,SAAS,CAAEN,WAAYI,M,yCAEZ,IAAD,OACfmK,GAAuBlK,KAAKN,MAAM+e,SAASzN,UAAWhR,KAAKN,MAAM+e,SAAS6J,QACrEne,MAAK,SAAAtF,GACFrB,QAAQC,IAAI,uBAAyBwK,KAAKC,UAAUrJ,IACpD,EAAK5E,SAAS,CACV27D,SAAU/2D,EAAKA,UAGtB0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,uBAAyBwK,KAAKC,UAAU1D,S,oCAGlD4M,GACVpX,KAAKC,SAAS,CAAE6W,aAAcM,EAAMC,OAAO9W,U,yCAG3CP,KAAKC,SACD,CACIme,UAAWpe,KAAKN,MAAM0e,a,sCAM9Bpe,KAAKC,SACD,CACIme,UAAU,M,qCAKN,IAAD,OACLU,GAAa,IAAIrH,MAAOsH,cAC9B7U,GAAuBlK,KAAKN,MAAM+e,SAAS6J,OAAQtoB,KAAKN,MAAMoX,aAAcgI,EAAY9e,KAAKN,MAAM+e,SAASzN,UAAWyqD,IAClHtxD,MAAK,SAAAtF,GACFrB,QAAQC,IAAI,iBAAmBwK,KAAKC,UAAUrJ,IAC9C,EAAKk3D,sBAERxxD,OAAM,SAAAC,GACHhH,QAAQC,IAAI,iBAAmBwK,KAAKC,UAAU1D,OAEtDxK,KAAKC,SACD,CACIme,UAAU,EACVtH,kBAAchV,M,sCAKtB9B,KAAKC,SACD,CACI07D,aAAa,M,wCAKrB37D,KAAKC,SACD,CACI07D,aAAa,M,+BAsBf,IAAD,OAMCK,EAAgBh8D,KAAKN,MAAMk8D,SAC3BK,EAAcD,EAAcx3D,QAAO,SAAU2G,EAAM3I,EAAOyD,GAC5D,OAAOkF,EAAK1G,OAAS+2D,MAEnBU,EAAeD,EAAYvvD,KAAI,SAAUvB,EAAM3I,EAAOyD,GACxD,OAAOkF,EAAKvC,QAEVuzD,EAAgBH,EAAcx3D,QAAO,SAAU2G,EAAM3I,EAAOyD,GAC9D,OAAOkF,EAAK1G,OAASg3D,MAGnBI,EAAc77D,KAAK67D,YACnBO,EAAkBH,EAAYvvD,KAAI,SAAUvB,EAAM3I,EAAOyD,GAC3D,OACI,yBAAK/F,IAAKsC,EAAOrB,UAAU,oBACvB,kBAAC,KAAD,CAAUZ,MAAO4K,EAAKvC,KAAMqqB,SAAS,EAAM9f,SAAU0oD,EAAal7D,MAAO,CAAEuyB,eAAgB,iBAAmB/nB,EAAKxC,aAIzH0zD,EAAoBF,EAAczvD,KAAI,SAAUvB,EAAM3I,EAAOyD,GAC/D,OACI,yBAAK/F,IAAKsC,EAAOrB,UAAU,oBACvB,kBAAC,KAAD,CAAUZ,MAAO4K,EAAKvC,KAAMqqB,SAAS,EAAO9f,SAAU0oD,GAAc1wD,EAAKxC,aAIrF,OACI,yBAAKhI,MAAO,CAAEokB,aAAc,SACxB,yBAAK5jB,UAAU,qBACX,wBAAIR,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBAAtC,4BACA,yBAAKsE,QAAS,kBAAM,EAAKoM,oBAAoBlf,MAAO,CAAEC,QAAkC,GAAzBZ,KAAKN,MAAMC,WAAkB,OAAS,OAAQ6U,OAAQ,YACjH,yBAAKnT,IAAKoT,KAAUlT,IAAI,eAGhC,yBAAKZ,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,SAAUqU,QAAS,aACpF,yBAAKvU,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,SAC9E,yBAAKN,MAAO,CAAE6T,OAAQ,WAAarT,UAAWnB,KAAKN,MAAMi8D,YAAc,eAAiB,aAAcloD,QAAS,kBAAM,EAAK6oD,oBAA1H,sBACA,yBAAK37D,MAAO,CAAE6T,OAAQ,WAAaf,QAAS,kBAAM,EAAK8oD,iBAAiBp7D,UAAWnB,KAAKN,MAAMi8D,YAAc,aAAe,gBAA3H,wBAGR,kBAAC,KAAS9iC,MAAV,CAAgB3lB,aAAcgpD,EAAcv7D,MAAO,CAAE0S,MAAO,QAAUF,SAAUnT,KAAKmT,UACjF,yBAAKxS,MAAO,CAAEmpC,UAAW,OAAQ/U,UAAW,UACvC/0B,KAAKN,MAAMi8D,YAAcS,EAAkBC,IAGpD,yBAAK17D,MAAO,CAAEC,QAASZ,KAAKN,MAAM0e,SAAW,QAAU,SACnD,yBAAKzd,MAAO,CAAEuU,QAAS,WAAYtU,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WACtF,kBAAC,KAAD,CAAOwV,YAAY,mDAAW9V,MAAOP,KAAKN,MAAMoX,aAAc3D,SAAUnT,KAAK+W,gBAC7E,kBAAC,KAAD,CAAQtS,KAAK,WAAb,iBAEJ,yBAAK9D,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WACjE,yBAAKF,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaC,cAAe,SAC5E,kBAAC,KAAD,CAAQwS,QAAS,kBAAM,EAAKwM,kBAA5B,gBACA,kBAAC,KAAD,CAAQxM,QAAS,kBAAM,EAAKyM,gBAAgBzb,KAAK,WAAjD,wB,GA9JDjF,a,8FCyFZg9D,G,YAzFX,WAAYp8D,GAAQ,IAAD,8BACf,4CAAMA,KAeVq8D,SAAW,YACmB,IAAtB,EAAK/8D,MAAMsF,OACX,EAAK/E,SAAS,CAAE+E,QAAQ,IAAQ,WAC5B,EAAK5E,MAAMs8D,cAAa,MAI5B,EAAKz8D,SAAS,CAAE+E,QAAQ,IAAS,WAC7B,EAAK5E,MAAMs8D,cAAa,OAtBhC,EAAKh9D,MAAQ,CACTsF,QAAQ,GAHG,E,0EASN4V,EAAW+hD,GACpB38D,KAAKI,MAAMkZ,eAAesB,EAAW+hD,K,mCAE5B/hD,EAAW+hD,GACpB38D,KAAK48D,aAAahiD,EAAW+hD,GAC7B38D,KAAKy8D,a,+BAiBC,IAAD,SACqEz8D,KAAKI,MAAvEu8D,EADH,EACGA,WAAYj9D,EADf,EACeA,MAAgBkb,GAD/B,EACsBiiD,QADtB,EAC+BjiD,WAAWkiD,EAD1C,EAC0CA,UAAWj4D,EADrD,EACqDA,KAAMk4D,EAD3D,EAC2DA,MAwBhE,SAASC,IAEL,OAAI/hD,GAAW6hD,KAAe7hD,GAAWL,GAK7C,OACI,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAKnW,KAAK,OAAOw4D,QAAQ,UACrB,kBAAC,KAAD,CAAKC,KAAM,IACP,yBAAK/7D,UAAW67D,IAAgB,0BAA4B,qBACxDvpD,QAAS,kBACL,EAAK0pD,aAAaviD,EAAW+hD,KAEjC,yBAAKx7D,UAAW67D,IAAgB,+BAAiC,2BAC7D,wBAAI77D,UAAU,gCAAgC8Z,GAAWL,GAAzD,I7FGhC,SAAgCA,GAG5B,MADkB,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UADnC,IAAInD,KAAKmD,GAAWf,U6FJgEujD,CAAuBxiD,GAA7F,IAnBhBA,IAAcmiD,EAAc,eACpB,OArBhB,SAAoBr9D,GAChB,IAAM29D,EAAgBx4D,EAAKivB,aAAatvB,QAAO,SAAA2G,GAAI,MAAkB,iBAAdA,EAAK1G,QAC5D,OAAI/E,EAEI,yBAAKyB,UAAU,0BACX,yBAAKE,IAAKi8D,KAAc/7D,IAAI,iBAC5B,4BAAK87D,EAAc56D,SAMvB,yBAAKtB,UAAU,0BACX,yBAAKE,IAAKk8D,KAAmBh8D,IAAI,iBACjC,wBAAIJ,UAAU,eAAek8D,EAAc56D,SA4BtC+6D,CAAW99D,MAGxB,kBAAC,KAAD,CAAK+E,KAAK,OAAOw4D,QAAQ,UACrB,kBAAC,KAAD,KACKD,KAAiBh9D,KAAKN,MAAMsF,OACzB,yBAAKrE,MAAO,CAAE0S,MAAO,EAAGtS,OAAQ,EAAGmZ,YAAa,QAASC,YAAa,qBAAsBC,YAAa,iDACvG,U,GAnFH5a,aC0TZi+D,G,2MAlTX/9D,MAAQ,CACJg+D,aAAc,OACdC,UAAW,KACXC,UAAW,KACXC,YAAa,KACbC,gBAAiB,GACjB19C,aAAc,GACd29C,eAAgB,EAChBC,aAAc,EACd1pC,WAAY,EACZ2pC,cAAe,GACfC,MAAM,G,EAsFVpiD,iBAAmB,SAAClB,EAAW+hD,GAC3Bn5D,QAAQC,IAAImX,GACZ,EAAK3a,SAAS,CACV29D,UAAWhjD,EACXijD,YAAalB,K,EASrBD,aAAe,SAACn8D,IAEE,IAAVA,EACA,EAAKN,SAAS,CAAEi+D,MAAM,IAAQ,WAAQ16D,QAAQC,IAAI,YAAa,EAAK/D,UAEpE,EAAKO,SAAS,CAAEi+D,MAAM,IAAS,WAAQ16D,QAAQC,IAAI,aAAc,EAAK/D,W,EAG9E4zC,aAAe,SAAC/yC,GACZiD,QAAQC,IAAIlD,GACZ,EAAKN,SAAS,CACVy9D,aAAcn9D,EACds9D,YAAa,KACbF,UAAW,Q,EAGnBxqD,SAAW,SAACyH,GACRpX,QAAQC,IAAI,gB,mFAjHK,IAAD,EACqCzD,KAAKm+D,kBAAlDJ,EADQ,EACRA,eAAgBC,EADR,EACQA,aAAc1pC,EADtB,EACsBA,WACtCt0B,KAAKC,SAAS,CACV89D,eAAgBA,EAChBC,aAAcA,EACd1pC,WAAYA,EACZspC,UAAWtpC,IAEft0B,KAAK0e,cAAc,IAAIjH,KAAKsmD,GAAgBh/C,cAAcmH,MAAM,KAAK,GAAI,IAAIzO,KAAKumD,GAAcj/C,cAAcmH,MAAM,KAAK,IACzHlmB,KAAKi0C,gB,wCAGL,IAAM8oB,EAAQ,IAAItlD,KACZ2mD,EAAoB,IAAI3mD,KAAKslD,EAAMliD,cAAekiD,EAAMpjD,WAAY,GAAGE,SACvEwkD,EAAiB,IAAI5mD,KAAKslD,EAAMliD,cAAekiD,EAAMpjD,WAAY,GAAGwB,UAAiC,GAApBijD,EAAyB,GAAK,GAAK,IA/B3G,MAgCT9pC,EAAa,IAAI7c,KAAKslD,EAAMliD,cAAekiD,EAAMpjD,WAAYojD,EAAMnjD,WAAWuB,UAhCrE,MAkCT4iD,EAA8C,SAA5B/9D,KAAKN,MAAMg+D,aAA2BppC,EAAa,OAA0B+pC,EAGrG,MAAO,CAAEN,iBAAgBC,aAFyB,SAA5Bh+D,KAAKN,MAAMg+D,aAA2BK,EAAiB,OAA0BA,EAAiB,OAEjFzpC,gB,oCAE7BgqC,EAAmBC,GAAkB,IAAD,OAC9Cr0D,GAAkClK,KAAKI,MAAMqe,SAASzN,UAAWstD,GAC5Dn0D,MAAK,SAAAtF,GACFrB,QAAQC,IAAI,4BAA8BwK,KAAKC,UAAUrJ,EAAKA,OAE9D,IAAM25D,EAAW35D,EAAKA,KAClB45D,EAAiB,GACrBD,EAASx4C,SAAQ,SAAA7a,GACb,IAAMuzD,EAAcvzD,EAAKvC,KAAKsd,MAAM,KAAK,GACrCy4C,EAAiBF,EAAe9mD,WAAU,SAAAjV,GAAO,OAAIA,EAAQkG,OAAS81D,KAC1E,IAAwB,IAApBC,EAAuB,CAEvB,IAAIC,EAAU,CACVh2D,KAAM81D,EACN9jD,UAAWzP,EAAKvC,KAChBkrB,aAAc,IAEd+qC,EAAW,CACXp6D,KAAM0G,EAAK1G,KACXmW,UAAW,IAAInD,KAAKtM,EAAKvC,MAAMuS,UAC/B2jD,OA7DA,iBA6DS3zD,EAAK1G,KAAgC,qBAAQ,qBACtDoN,KAAM1G,EAAK0G,KACXggC,QAAS1mC,EAAKxC,QACdmN,UAAW3K,EAAK2K,WAEpB8oD,EAAQ9qC,aAAa5tB,KAAK24D,GAC1BJ,EAAev4D,KAAK04D,OACjB,CAEH,IAAIC,EAAW,CACXp6D,KAAM0G,EAAK1G,KACXmW,UAAW,IAAInD,KAAKtM,EAAKvC,MAAMuS,UAC/B2jD,OAzEA,iBAyES3zD,EAAK1G,KAAgC,qBAAQ,qBACtDoN,KAAM1G,EAAK0G,KACXggC,QAAS1mC,EAAKxC,QACdmN,UAAW3K,EAAK2K,WAEpB2oD,EAAeE,GAAgB7qC,aAAa5tB,KAAK24D,OAGzD,EAAK5+D,SAAS,CACV69D,gBAAiBj5D,EAAKA,KACtBub,aAAcq+C,OAGrBl0D,OAAM,SAAAC,GACHhH,QAAQC,IAAI,4BAA8BwK,KAAKC,UAAU1D,S,oCAGtD,IAAD,OACVN,EAAgClK,KAAKI,MAAMqe,SAASzN,UAAWhR,KAAKI,MAAMqe,SAAS6J,QAC9Ene,MAAK,SAAAa,GACFxH,QAAQC,IAAI,0BAA4BwK,KAAKC,UAAUlD,IACvD,EAAK/K,SAAS,CACVg+D,cAAejzD,EAAOnG,UAG7B0F,OAAM,SAAAC,GACHhH,QAAQC,IAAI,0BAA4BwK,KAAKC,UAAU1D,S,sCAUlD,IAAD,OACZxK,KAAKC,SAAS,CACV29D,UAAW59D,KAAKN,MAAM40B,WACtBupC,YAAa,OACd,WAAQr6D,QAAQC,IAAI,EAAK/D,Y,mCAqBnBq/D,GACT/+D,KAAKC,SAAS,CACV++D,YAAaD,M,2CAGAnkD,GACjB,IAAMqkD,EAAU,IAAIxnD,KAAKmD,GAAWmE,cAAcmH,MAAM,KAAK,GACvDg5C,EAAiBl/D,KAAKN,MAAM0gB,aAAazI,WAAU,SAAAjV,GAAO,OAAIA,EAAQkG,OAASq2D,KAErF,OADuC,IAApBC,EAAyB,CAAEprC,aAAc,IAAO9zB,KAAKN,MAAM0gB,aAAa8+C,K,6CAGxEtkD,GACnB,IAAMqkD,EAAU,IAAIxnD,KAAKmD,GAAWmE,cAAcmH,MAAM,KAAK,GAE7D,OADyBlmB,KAAKN,MAAMu+D,cAAcz5D,QAAO,SAAA9B,GAAO,OAAIA,EAAQkG,KAAK8C,QAAQuzD,IAAY,O,iCAKrG,IADA,IAAIE,EAAc,GACT38D,EAAQ,EAAGA,EAAQ,EAAGA,IAAS,CACpC,IAAMu8D,EAAgB/+D,KAAKN,MAAMq+D,eAA0B,GAARv7D,EAAa,GAAK,GAAK,IACpEa,EAAO4X,GAAW8jD,GAClBK,EAAYp/D,KAAKq/D,qBAAqBN,GAExCv8D,EAAQ,IAAM,EACd28D,EAAYj5D,KACR,kBAAC,GAAD,CAAcw2D,aAAc18D,KAAK08D,aAAcC,WAAY,OAAQG,UAAW98D,KAAKN,MAAMk+D,UAAWhjD,UAAWmkD,EAAe17D,KAAMA,EAAM3D,OAAO,EAAMm9D,SAAS,EAAMh4D,KAAMu6D,EAAWrC,MAAO/8D,KAAKN,MAAM40B,WAAYhb,eAAgBtZ,KAAK8b,oBAI9OqjD,EAAYj5D,KAER,kBAAC,GAAD,CAAcw2D,aAAc18D,KAAK08D,aAAcC,WAAY,OAAQG,UAAW98D,KAAKN,MAAMk+D,UAAWhjD,UAAWmkD,EAAe17D,KAAMA,EAAM3D,MAAOwb,GAAW6jD,GAAgBlC,SAAS,EAAOh4D,KAAMu6D,EAAWrC,MAAO/8D,KAAKN,MAAM40B,WAAYhb,eAAgBtZ,KAAK8b,oBAM5Q,OAAOqjD,I,oCAEGG,EAAYC,GAEtB,IADA,IAAIJ,EAAc,GACT38D,EAAQ,EAAGA,EAAQ,EAAGA,IAAS,CACpC,IAAMu8D,EAAgB,IAAItnD,KAAK8nD,GAAmBpkD,UAAqB,GAAR3Y,EAAa,GAAK,GAAK,IA9K3E,MA+KLa,EAAO4X,GAAW8jD,GAClBK,EAAYp/D,KAAKq/D,qBAAqBN,GAExC,IAAItnD,KAAKwD,IAAW,IAAIxD,MAAO0D,YAAYA,WAAa,IAAI1D,KAAKwD,GAAW,IAAIxD,KAAKsnD,GAAe5jD,YAAYA,UAChHgkD,EAAYj5D,KAGR,kBAAC,GAAD,CAAcw2D,aAAc18D,KAAK08D,aAAcC,WAAY2C,EAAYxC,UAAW98D,KAAKN,MAAMk+D,UAAWhjD,UAAWmkD,EAAe17D,KAAMA,EAAM3D,OAAO,EAAMm9D,SAAS,EAAMh4D,KAAMu6D,EAAWrC,MAAO/8D,KAAKN,MAAM40B,WAAYhb,eAAgBtZ,KAAK8b,oBAKlPqjD,EAAYj5D,KAER,kBAAC,GAAD,CAAcw2D,aAAc18D,KAAK08D,aAAcC,WAAY2C,EAAYxC,UAAW98D,KAAKN,MAAMk+D,UAAWhjD,UAAWmkD,EAAe17D,KAAMA,EAAM3D,OAAO,EAAOm9D,SAAS,EAAMh4D,KAAMu6D,EAAWrC,MAAO/8D,KAAKN,MAAM40B,WAAYhb,eAAgBtZ,KAAK8b,oBAM3P,OAAOqjD,I,iCAGAK,QACU19D,IAAb09D,IAAwBA,EAAW,GACvCh8D,QAAQC,IAAI,uBAAyBzD,KAAKN,MAAMk+D,WAEhD,IAGmBl+D,EAHb0/D,EAAYp/D,KAAKq/D,qBAAqBr/D,KAAKN,MAAMk+D,WACjD6B,EAAcz/D,KAAK0/D,uBAAuB1/D,KAAKN,MAAMk+D,WAY3D,OACI,6BACK59D,KAAKN,MAAMw+D,KACR,yBAAK/8D,WAbEzB,EAamBM,KAAKN,MAAMm+D,YAZ/B,SAAVn+D,EACO,6BAEPA,IAAU8/D,EACH,6BAEJ,mCAQK,yBAAKr+D,UAAU,kBACX,yDAGJ,yBAAKA,UAAU,gBACX,kBAAC,GAAD,CAAqBgB,WAAYnC,KAAKN,MAAMk+D,UAAW7xD,OAAQ,EAAG0S,SAAUze,KAAKI,MAAMqe,SAAUwF,WAAYw7C,EAAar/C,aAAcg/C,EAAWrnD,YAAY,MAGrK,M,iCAWd,IAJA,IAAI4nD,EAAqB,GACnBC,EAAqB,IAAInoD,KAAKuD,GAAoB,IAAIvD,OAASoC,SAC/D0lD,EAAoB,IAAI9nD,KAAKuD,GAAoB,IAAIvD,OAAS0D,UAAkC,GAArBykD,EAA0B,GAAK,GAAK,IAE5Gp9D,EAAQ,EAAGA,EAAQ,EAAGA,IAC3Bm9D,EAAmBz5D,KACf,yBAAK/E,UAAU,4BACVnB,KAAK6/D,cAAcr9D,EAAO+8D,EAA6B,EAAR/8D,EAAY,GAAK,GAAK,GAAK,KAC1ExC,KAAK8/D,WAAWt9D,KAK7B,OAAOm9D,I,iCAEAjgE,GACP,MAAc,SAAVA,EAEI,yBAAKyB,UAAU,mBACVnB,KAAK+/D,WACL//D,KAAK8/D,cAUP9/D,KAAKggE,a,6CAII,IACZC,EAAgBlnC,KAAhBknC,YACR,MAAgC,UAA5BjgE,KAAKN,MAAMg+D,aAEP,kBAACuC,EAAD,CAAa3pD,qBAAsB,SAAAC,GAAW,OAAIA,EAAYC,YAAYH,YAAY,mCAKtF,kBAAC,KAAD,CAAYC,qBAAsB,SAAAC,GAAW,OAAIA,EAAYC,YAAYH,YAAa,CAAC,sC,+BAIzF,IACEo8B,EAAWC,KAAXD,OAQR,OACI,6BACI,wBAAItxC,UAAU,iBACV,wBAAIR,MAAO,CAAE4O,SAAU,OAAQJ,MAAO,mBAAtC,uBAEJ,yBAAKhO,UAAU,mBACVnB,KAAKkgE,uBACN,kBAAC,KAAD,CAAQhtD,aAAclT,KAAKN,MAAMg+D,aAAcvqD,SAAUnT,KAAKszC,cAC1D,kBAACb,EAAD,CAAQlyC,MAAM,QAAd,UACA,kBAACkyC,EAAD,CAAQlyC,MAAM,SAAd,YAGPP,KAAKmgE,WAAWngE,KAAKN,MAAMg+D,mB,GA7SrBl+D,aC8BR4gE,I,wLAjCP,SAASC,EAAWz3D,GAChB,OAAO,IAAI6O,KAAK7O,GAAMiS,cAAgB,KAAkB,IAAIpD,KAAK7O,GAAM+Q,WAHxD,GAGsE,IAAM,IAAIlC,KAAK7O,GAAMgR,UALzG,IAeG6E,EAAaze,KAAKI,MAAlBqe,SACF7V,GAAO,IAAI6O,MAAO0D,UAExB,OACI,6BACI,yBAAKxa,MAAO,CAAEokB,aAAc,QACxB,qCACI,yBAAK5jB,UAAU,iBAAf,4BAAqCk/D,EAAWz3D,GAAhD,+BAfhB,SAAoBA,GAChB,OAAa,OAATA,EACO,KAGAy3D,EAAWz3D,GAUoD03D,CAAW,QAE7E,yBAAKn/D,UAAU,eAEnB,yBAAKA,UAAU,kBACX,kBAAC,GAAD,CAAasd,SAAUA,IACvB,kBAAC,GAAD,CAAQA,SAAUA,IAClB,kBAAC,GAAD,CAAUA,SAAUA,IACpB,kBAAC,GAAD,CAAcA,SAAUA,U,GA/BjBjf,cC6cZ+gE,G,2MA7bX7gE,MAAQ,CACJ8gE,KAAM,EAAKpgE,MAAMC,SAASmgE,KAC1BvhD,aAAc,GACdwV,QAAS,GACTgsC,OAAQ,GACR3sD,KAAM,GACNuf,KAAM,GACNtf,MAAO,GACP2sD,UAAW,iCACXpwD,SAAS,EACT6O,UAAW,KACXiV,KAAM,KACNhjB,cAAe,I,EAsJnB+B,SAAW,SAACwtD,GACR,EAAK1gE,SAAS,CACVygE,UAAWC,K,EAKnBpvD,UAAY,WACR,EAAKtR,SAAS,CACVqQ,SAAS,K,EAIjBoD,SAAW,SAAApC,GACP,EAAKrR,SAAS,CACVqQ,SAAS,K,EAIjBe,aAAe,SAAAC,GACX,EAAKrR,SAAS,CACVqQ,SAAS,K,EAgCjBmjB,eAAiB,SAAC5uB,GACd,IAAM0uB,EAAY,CACd,MAAS,2BACT,QAAW,6CACX,KAAQ,iCACR,MAAS,sBACT,QAAW,kCACX,MAAS,sBACT,QAAW,kCACX,IAAO,6CACP,MAAS,2BACT,IAAO,6CACP,MAAS,iCACT,MAAS,iCACT,KAAQ,iCACR,OAAU,kCAGRC,EAAc,GAEpB,IAAK,IAAIhxB,KAAS+wB,EACM,KAAhB1uB,EAAKrC,IACLgxB,EAAYttB,KAAK,CAACqtB,EAAU/wB,GAAQqC,EAAKrC,KAIjD,OAAOgxB,G,mFAlOP,IAAMlL,EAAStoB,KAAKI,MAAMC,SAASX,MAAM4oB,OACnCjhB,EAAQrH,KAAKI,MAAMC,SAASX,MAAM2H,WAC1BvF,IAAVuF,QAAkCvF,IAAXwmB,GACvBtoB,KAAK4gE,gBAAgBv5D,EAAOihB,K,sCAGpBza,EAAKggB,GAAM,I1GiiCF9jB,EAVIC,EAjfTnD,E0GtiBM,Q1GiiCDkD,E0GhiCI8jB,E1GiiCxBxnB,IAAMC,IAAI,QAAUyD,I0GhiChBI,MAAK,SAAAtF,GACFrB,QAAQC,IAAIoB,EAAKA,MACjB,IAAMmG,EAASnG,EAAKA,KACpB,EAAK5E,SAAS,CAAEm0B,KAAMppB,EAAOA,EAAOvI,OAAS,GAAI0c,UAAWnU,EAAO,QAEtET,OAAM,SAAAC,GACHhH,QAAQC,IAAI,6BAA+BwK,KAAKC,UAAU1D,O1GohCnE,SAAyBT,GAC9B,OAAO1D,IAAMC,IAAI,WAAayD,G0GnhCxBG,CAA4B2jB,GACvB1jB,MAAK,SAAAtF,GAAU,EAAK5E,SAAS,CAAEw0B,QAAS5vB,EAAKA,UAC7C0F,OAAM,SAAAC,GAAShH,QAAQC,IAAI,gCAAkCwK,KAAKC,UAAU1D,Q1G2gCxDR,E0G1gCI6D,E1G2gC5BxH,IAAMC,IAAI,YAAc0D,I0G1gCpBG,MAAK,SAAAtF,GACF,EAAK5E,SAAS,CAAEgf,aAAcpa,EAAKA,OACnC,I1G0iBUgC,EAAQC,EAAIC,E0G1iBhBkY,EAAepa,EAAKA,KACpBy0C,EAAY12C,IAAOqc,EAAa6hB,SAAU,YAAYpyB,OAAO,gBAC7D4yC,EAAU1+C,MAAS8L,OAAO,iB1GwiBtB7H,E0GviBYgnB,E1GuiBJ/mB,E0GviBSwyC,E1GuiBLvyC,E0GviBgBu6C,E1GwiB7Cj7C,IAAMC,IAAI,UAAYO,EAAS,IAAMC,EAAK,IAAMC,I0GviBpCoD,MAAK,SAAAa,GACF,IAAM+I,EAAQia,EAAkBhjB,EAAOnG,MACvC,EAAK5E,SAAS,CAAE8T,MAAOA,OAE1BxJ,OAAM,SAAAC,GACHhH,QAAQC,IAAI,0BAA4BwK,KAAKC,UAAU1D,UAGlED,OAAM,SAAAC,GAAShH,QAAQC,IAAI,6BAA+BwK,KAAKC,UAAU1D,OAC9EN,EAA+B2D,GAC1B1D,MAAK,SAAAtF,GAAUrB,QAAQC,IAAIoB,EAAKA,MAAO,EAAK5E,SAAS,CAAEmR,cAAevM,EAAKA,UAC3E0F,OAAM,SAAAC,GAAShH,QAAQC,IAAI+G,MAChCN,EAAoB2jB,GACf1jB,MAAK,SAAAtF,GAAU,EAAK5E,SAAS,CAAEozB,KAAMrF,EAAkBnpB,EAAKA,WAC5D0F,OAAM,SAAAC,GAAShH,QAAQC,IAAI+G,O1GogBhB3D,E0GngBIgnB,E1GogBnBxnB,IAAMC,IAAI,QAAUO,I0GngBhBsD,MAAK,SAAAtF,GAAU,EAAK5E,SAAS,CAAE6T,KAAMka,EAAkBnpB,EAAKA,WAC5D0F,OAAM,SAAAC,GAAShH,QAAQC,IAAI,6BAA+BwK,KAAKC,UAAU1D,S,+BA0L9E,SAASq2D,EAAUtgE,GACf,OAAI+B,MAAMC,QAAQhC,GACO,IAAjBA,EAAMkC,OAKA,OAAVlC,QAA4BuB,IAAVvB,GAAiC,KAAVA,EAR5C,MAauBP,KAAKN,MAAzB00B,EAbH,EAaGA,KACR,IAAKysC,EAdA,EAaS1hD,aACgB0hD,EAAUzsC,GACpC,OAAO,kBAAC,KAAD,CAAM3vB,KAAK,YAMtB,SAASoP,EAAczC,EAAe0C,EAAMC,EAAOrB,GAG/C,OAFAlP,QAAQC,IAAI2N,GAEiB,IAAzBA,EAAc3O,QACde,QAAQC,IAAIqQ,GAEQ,IAAhBA,EAAKrR,OACE,CACH2B,gBAAYtC,EACZ8Q,eAAW9Q,EACX+Q,cAAU/Q,GAMX,CACHsC,WAJewK,EAAqBmF,EAAOrB,GAK3CE,UAJchT,OAAOkU,EAAK,GAAGE,OAK7BnB,SAJajT,OAAOkU,EAAK,GAAGG,QAWzB,CACH7P,WAJ8C,IAAnCxE,OAAOwR,EAAc,GAAGe,SAKnCS,UAJchT,OAAOwR,EAAc,GAAGgB,OAKtCS,SAJajT,OAAOwR,EAAc,GAAGiB,OAQjD,SAASrQ,EAAYzB,GACjB,MAAc,KAAVA,GAA0B,OAAVA,QAA4BuB,IAAVvB,EAC3B,KAEJA,EAAMwB,WAQjB,IAAM++D,EAAW9gE,KAAKN,MAAMuf,aAC5B,GAAwB,IAApB6hD,EAASr+D,OACT,OAAO,kBAAC,KAAD,CAAMgC,KAAK,YAEtB,IAAMs8D,EAAYnhE,OAAOI,KAAKI,MAAMC,SAASX,MAAMqhE,WAC7Cz4C,EAAStoB,KAAKI,MAAMC,SAASX,MAAM4oB,OACnCjhB,EAAQrH,KAAKI,MAAMC,SAASX,MAAM2H,MAElC25D,GADUhhE,KAAKN,MAAM+0B,QACdz0B,KAAKN,MAAM00B,MAClBqF,EAAcunC,EAAKC,OAAOl/D,WAC1Bm/D,EAAYF,EAAKrR,OAAO5tD,WACxBqiB,EAAY,OAAS88C,EAAYznC,EAC/B0nC,EAAYC,KAAZD,QAEFzuD,EAAWouD,EAAShgC,SAhFrB,EAiFkC9gC,KAAKN,MAApC0R,EAjFH,EAiFGA,cAAe0C,EAjFlB,EAiFkBA,KAAMC,EAjFxB,EAiFwBA,MACvB3P,EAAayP,EAAczC,EAAe0C,EAAMC,EAAOrB,GAAUtO,WACjEwO,EAAYiB,EAAczC,EAAe0C,EAAMC,EAAOrB,GAAUE,UAChEC,EAAWgB,EAAczC,EAAe0C,EAAMC,EAAOrB,GAAUG,SAC/DwB,EAAS2Z,EAAuBja,GAWhC0K,EAAW,CACb,MAASpX,EACT,OAAUihB,EACV,UAAa1V,EACb,SAAYC,EACZ,UAAauR,EACb,UAAa88C,EACb,OAVentD,EAAMvP,QAAO,SAAU4F,EAAM5H,EAAO6H,GACnD,MAAqB,OAAdD,EAAK3F,QAUZ,aAAgBq8D,EAChB,UAAa9gE,KAAKN,MAAMyf,WAGtBmU,EAAgBtzB,KAAKyzB,eAAezzB,KAAKN,MAAM2zB,MAC/CruB,EAAS,CACX3B,KAAMT,IAAO8P,EAAU,YAAY1P,UACnCpB,KAAMgR,EACN/Q,IAAKgR,EACLzO,WAAWA,GAETkQ,EAAY0Z,EAAuBhpB,GAkBzC,IAzEyBzE,EAyEnB8gE,EAhBN,SAAuB/gE,EAAaghE,EAAcJ,GAC9C,IAAoB,IAAhB5gE,EAAsB,CACtB,QAAqBwB,IAAjBw/D,GAA+C,OAAjBA,EAAuB,CACrD99D,QAAQC,IAAIy9D,GACZ,IAAMllC,EAAMp5B,IAAO0+D,EAAc,YAC3BvlC,EAAQn5B,IAAOs+D,EAAW,YAEhC,MAAO,0CADSllC,EAAIz4B,KAAKw4B,EAAO,QACD,SAEnC,MAAO,KAEX,IAAMC,EAAMp5B,MACNm5B,EAAQn5B,IAAOs+D,EAAW,YAEhC,MAAO,wBADSllC,EAAIz4B,KAAKw4B,EAAO,QACJ,SAEhBwlC,CAAcvhE,KAAKI,MAAMC,SAASX,MAAMY,YAAaN,KAAKI,MAAMC,SAASX,MAAMg4B,aAAcwpC,GAC7G,OACI,6BACI,yBAAKvgE,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,gBAAiB3S,WAAY,SAAUE,OAAQ,OAAQiZ,UAAW,OAAQ9E,QAAS,MAAOyO,oBAAqB,MAAOC,qBAAsB,MAAO7N,gBAAiB,cAE/M,yBAAKpV,MAAO,CAAE2O,WAAY,MAAOH,MAAO,QAASI,SAAU,SAA3D,QACUI,GAAgB/P,OAAOmhE,IAC7B,0BAAMpgE,MAAO,CAAE0xB,WAAY,OAAQ9iB,SAAU,OAAQ2F,QAAS,YAAc4rD,EAAStuD,OAAOzQ,WAAWe,QACtGuE,GAEL,iDACO,0BAAM1G,MAAO,CAAE2O,WAAY,MAAOH,MAAO,UAAYvM,IAAO8P,EAAU,YAAYhE,OAAO,gBAEhG,8DACW1M,EAAY4Q,GADvB,IACoC5Q,EAAY6Q,GADhD,MAC6D,0BAAMlS,MAAO,CAAE2O,WAAY,MAAOH,MAAO,UAAYmF,IAElH,8DAxFM,MADO/T,EA0Fc6D,IAzFL,OAAV7D,QAA4BuB,IAAVvB,GAAiC,IAAVA,EAClD,GAEJA,EAAMwB,WAAa,OAsFqB,0BAAMpB,MAAO,CAAE2O,WAAY,MAAOH,MAAO,UAAYnN,EAAYqS,GAAjE,MAEvC,wBAAI1T,MAAO,CAAE2O,WAAY,MAAOH,MAAO,UAAYkyD,GACnD,wBAAI1gE,MAAO,CAAEwO,MAAO,OAAQ+jB,eAAgB,YAAa1e,OAAQ,WAAaf,QAASzT,KAAKuR,WAA5F,4BACA,kBAAC,KAAD,CACIpN,MAAM,uCACNmM,QAAStQ,KAAKN,MAAM4Q,QACpB2F,KAAMjW,KAAK0T,SACXJ,SAAUtT,KAAKqR,aACfgC,MAAO,IACPE,OAAQ,MACR,kBAAC,GAAD,CAAakL,SAAUA,EAAU6U,cAAeA,MAIxD,kBAAC,KAAD,CAAMkuC,iBAAkBxhE,KAAKN,MAAMghE,UAAWe,YAAa,MAAOtuD,SAAUnT,KAAKmT,UAC7E,kBAACguD,EAAD,CAASO,IAAI,iCAAQxhE,IAAI,kCACrB,kBAAC,GAAD,CAAoB8E,OAAQA,EAAQs7B,mBAAoBtgC,KAAK2hE,SAAUljD,SAAUA,KAErF,kBAAC0iD,EAAD,CAASO,IAAI,iCAAQxhE,IAAI,kCACrB,kBAAC,GAAD,CAAiB8E,OAAQA,EAAQyZ,SAAUA,KAE/C,kBAAC0iD,EAAD,CAASO,IAAI,iCAAQxhE,IAAI,kCACrB,kBAAC,GAAD,CAAiB8E,OAAQA,EAAQyZ,SAAUA,KAE/C,kBAAC0iD,EAAD,CAASO,IAAI,iCAAQxhE,IAAI,kCACrB,kBAAC,GAAD,CAAYue,SAAUA,GAAtB,MAEJ,kBAAC0iD,EAAD,CAASO,IAAI,iCAAQxhE,IAAI,kCACrB,kBAAC,GAAD,CAAWue,SAAUA,GAArB,MAEJ,kBAAC0iD,EAAD,CAASO,IAAI,iCAAQxhE,IAAI,kCACrB,kBAAC,GAAD,CAAUue,SAAUA,GAApB,MAEJ,kBAAC0iD,EAAD,CAASO,IAAI,2BAAOxhE,IAAI,4BACpB,kBAAC,GAAD,CAAQue,SAAUA,GAAlB,MAEJ,kBAAC0iD,EAAD,CAASO,IAAI,2BAAOxhE,IAAI,4BACpB,kBAAC,GAAD,CAAaue,SAAUA,GAAvB,MAEJ,kBAAC0iD,EAAD,CAASO,IAAI,2BAAOxhE,IAAI,4BACpB,kBAAC,GAAD,CAAeue,SAAUA,GAAzB,MAEJ,kBAAC0iD,EAAD,CAASO,IAAI,uCAASxhE,IAAI,wCACtB,kBAAC,GAAD,CAAcue,SAAUA,GAAxB,Y,GAtbQjf,aCnBxBoiE,GAAYC,KAAZD,QA6UOE,G,YA1UX,WAAY1hE,GAAQ,IAAD,8BACf,+CAMJV,MAAQ,CACJ02B,WAAY,EACZvkB,KAAM,GACN0C,KAAM,EACNwtD,aAASjgE,EACTkgE,SAAU,GACVC,MAAO,CAAC,6FAAmB,yGAAqB,8FAChDC,UAAW,CAAC,iCAAS,iCAAS,kCAC9B5xD,SAAS,EACT6xD,WAAY,EACZC,UAAU,EACVC,cAAe,GACfC,cAAe,GACfC,UAAW,GACXC,cAAe,GACf7iE,WAAY,GAtBG,EA2CnB8iE,cAAgB,SAAAnxD,GACZ,EAAKrR,SAAS,CACVkiE,WAAY7wD,EAAE+F,OAAO9W,QACtB,WAC+B,IAA1B,EAAKb,MAAMyiE,WACX,EAAKliE,SAAS,CACVmiE,UAAU,IAEmB,IAA1B,EAAK1iE,MAAMyiE,YAClB,EAAKliE,SAAS,CACVmiE,UAAU,QArDP,EA2DnB7wD,UAAY,WACR,EAAKtR,SAAS,CACVqQ,SAAS,KA7DE,EAiEnBe,aAAe,SAAAC,GACX,EAAKrR,SAAS,CACVqQ,SAAS,KAnEE,EAgJnBgjC,aAAe,SAAC/yC,GACZ,EAAKN,SAAS,CAAEsU,KAAMhU,KAjJP,EA4KnBk6B,UAAY,WAAO,IACPgY,EAAWC,KAAXD,OAER,OACI,yBAAK9xC,MAAO,CAAEC,QAAS,OAAQC,WAAY,WACvC,yBAAKF,MAAO,CAAEC,QAAS,OAAQC,WAAY,WACvC,yBAAKF,MAAO,CAAE4O,SAAU,SAAxB,iBAGA,yBAAK5O,MAAO,CAAEG,WAAY,SACtB,kBAAC,KAAD,CAAQoS,aAAc,EAAKxT,MAAM6U,KAAM5T,MAAO,CAAE0S,MAAO,KAAOF,SAAU,EAAKmgC,cACzE,kBAACb,EAAD,CAAQlyC,MAAO,GAAf,kCACA,kBAACkyC,EAAD,CAAQlyC,MAAO,GAAf,kCACA,kBAACkyC,EAAD,CAAQlyC,MAAO,GAAf,qCAIZ,yBAAKI,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,WAAY,SAC7D,yBAAKH,MAAO,CAAE4O,SAAU,SAAxB,iBAGA,yBAAK5O,MAAO,CAAEG,WAAY,SACtB,kBAAC,KAAD,CAAOuV,YAAY,uCAASlD,SAAU,EAAKuvD,iBA/L3D,EAAKC,YAAc,EAAKA,YAAY3rD,KAAjB,iBACnB,EAAK4rD,oBAAsB,EAAKA,oBAAoB5rD,KAAzB,iBAJZ,E,iFAyBE,IAAD,OAChBhX,KAAK0iE,WAAa1iE,KAAK0iE,WAAW1rD,KAAKhX,MACvCA,KAAK6iE,cAAgB7iE,KAAK6iE,cAAc7rD,KAAKhX,MAC7CA,KAAK8iE,cAAgB9iE,KAAK8iE,cAAc9rD,KAAKhX,MAC7CA,KAAKsiE,cAAgBtiE,KAAKsiE,cAActrD,KAAKhX,MAC7CA,KAAKuiE,UAAYviE,KAAKuiE,UAAUvrD,KAAKhX,MACrCA,KAAKwiE,cAAgBxiE,KAAKwiE,cAAcxrD,KAAKhX,MAE7CkK,IACKC,MAAK,SAAAtF,GACF,EAAK5E,SAAS,CAAE+hE,SAAUn9D,EAAKA,UAElC0F,OAAM,SAAAC,OAEX,IAAMzK,EAAcF,eAAeC,QAAQ,QAC3CE,KAAKC,SAAS,CAAEN,WAAYI,M,sCA+BhB+3B,GACZ93B,KAAKC,SAAS,CACVm2B,WAAY0B,M,sCAIH,IAAD,SACe93B,KAAKN,MAAxBsiE,EADI,EACJA,SAAUztD,EADN,EACMA,KACdmQ,EAAUs9C,EASd,OAPY,GAARztD,IACAmQ,EAAUA,EAAQlgB,QAAO,SAAAK,GAAI,OAAIA,EAAK0P,MAASA,EAAO,MAGlC,KAApBvU,KAAKN,MAAMmS,OACX6S,EAAUA,EAAQlgB,QAAO,SAAAK,GAAI,OAAwC,MAApCA,EAAKgN,KAAK1R,MAAM,EAAKT,MAAMmS,UAEzD6S,I,oCAGI,IAAD,Q3GgBX,SAAkB7S,EAAMkxD,EAAUxuD,EAAMyuD,EAAUC,GACvD,IAAMp6D,EAAO,CACXgJ,KAAMA,EACNkxD,SAAUA,EACVxuD,KAAMA,EACNyuD,SAAUA,EACVC,SAAUA,GAEZ,OAAO58D,IAAMyC,KAAK,WAAYD,I2GvBxBqB,CAAqBlK,KAAKN,MAAM6iE,UAAW,GAAIviE,KAAKN,MAAMqiE,QAAS/hE,KAAKN,MAAM2iE,cAAe,QACxFl4D,MAAK,SAAAtF,GACFqF,IACKC,MAAK,SAAAtF,GACF,EAAK5E,SAAS,CAAE+hE,SAAUn9D,EAAKA,KAAMw9D,cAAe,GAAIC,cAAe,GAAIC,UAAW,GAAIC,cAAe,QAE5Gj4D,OAAM,SAAAC,UAEdD,OAAM,SAAAC,OACXxK,KAAKC,SAAS,CACVqQ,SAAS,M,wCAKCuB,EAAMqxD,EAAS3uD,EAAM4uD,GACnC,IAAMC,EAAYpjE,KAAKC,SAAS+W,KAAKhX,MACrC4hE,GAAQ,CACJz9D,MAAO,4EACP0tC,QAAS,kDAAShgC,EAAK,6BAAd,qBAAwBsxD,EAAW,6BAAnC,qBAA6CD,GACtDh1B,OAAQ,MACRm1B,OAAQ,SACRl1B,WAAY,KACZl4B,KANI,Y3G9BT,SAAoBpE,EAAM0C,EAAMyuD,GACrC,OAAO38D,IAAMsyB,OAAO,WAAa9mB,EAAO,IAAM0C,EAAO,IAAMyuD,I2GoC7C94D,CAAuB2H,EAAM0C,EAAM2uD,GAAS/4D,MAAK,SAAAtF,GAC7CqF,IACKC,MAAK,SAAAtF,GACFu+D,EAAU,CAAEpB,SAAUn9D,EAAKA,UAE9B0F,OAAM,SAAAC,UACZD,OAAM,SAAAC,QAEb8I,SAfI,iB,gCAoBFpT,EAAK2R,EAAMqxD,EAAS3uD,EAAM4uD,GAChC,OAAIjjE,IAAQF,KAAKN,MAAM02B,WAEf,yBAAKz1B,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWC,cAAe,SAC1E,6BACI,kBAAC,KAAD,CAAQwS,QAASzT,KAAKsjE,kBAAkBtsD,KAAKhX,KAAM6R,EAAMqxD,EAAS3uD,EAAM4uD,GAAa1+D,KAAK,UAA1F,kBAOJ,O,0CAOIlE,GAChBP,KAAKC,SAAS,CAAE8hE,QAASxhE,M,iCAGlB6W,GACPpX,KAAKC,SAAS,CAAE4R,KAAMuF,EAAMC,OAAO9W,U,oCAGzB6W,GACVpX,KAAKC,SAAS,CAAEoiE,cAAejrD,EAAMC,OAAO9W,U,oCAGlC6W,GACVpX,KAAKC,SAAS,CAAEqiE,cAAelrD,EAAMC,OAAO9W,U,gCAGtC6W,GACNpX,KAAKC,SAAS,CAAEsiE,UAAWnrD,EAAMC,OAAO9W,U,oCAG9B6W,GACVpX,KAAKC,SAAS,CAAEuiE,cAAeprD,EAAMC,OAAO9W,U,+BA+BtC,IAAD,OA0CCgjE,EAFUvjE,KAAK6iE,gBAEIn2D,KAAI,SAAC7H,EAAMrC,GAChC,IAAI2gE,EACAK,EAKJ,OAHAL,EAAa,EAAKzjE,MAAMwiE,UAAUr9D,EAAK0P,MACvCivD,EAAc,EAAK9jE,MAAMuiE,MAAMp9D,EAAK0P,MAE7B,CACH,CACIrU,MAAOsC,EACP4T,GAAI5T,EACJqP,KAAMhN,EAAKgN,KACX0C,KAAM4uD,EACNlB,MAAOuB,EACPN,QAASr+D,EAAKm+D,SACdC,SAAUp+D,EAAKo+D,SACf9yD,WAAY,EAAK+pB,UAAU13B,EAAOqC,EAAKgN,KAAMhN,EAAKm+D,SAAUn+D,EAAK0P,KAAM4uD,QAK/EM,EAAa,GAAGC,OAAOlkB,MAAM,GAAI+jB,GAC7B9wB,EAAWC,KAAXD,OAUR,OACI,6BACI,yBAAK9xC,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,gBAAiB3S,WAAY,WACvEb,KAAKy6B,YACN,yBAAK95B,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WACjE,kBAAC,KAAD,CAAQF,MAAO,CAAE0S,MAAO,QAAUI,QAASzT,KAAKuR,WAAhD,4BACA,kBAAC,KAAD,CACIpN,MAAM,2BACNmM,QAAStQ,KAAKN,MAAM4Q,QACpB2F,KAAMjW,KAAK2iE,YACXrvD,SAAUtT,KAAKqR,aACfgC,MAAM,SAEN,yBAAK1S,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,YAGrE,yBAAKF,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,SAAUmZ,UAAW,SACtF,yBAAKrZ,MAAO,CAAEG,WAAY,SAA1B,iCAEA,kBAAC,KAAD,CAAOsV,GAAG,WAAW7V,MAAOP,KAAKN,MAAM2iE,cAAelvD,SAAUnT,KAAK8iE,cAAezsD,YAAY,2BAAO1V,MAAO,CAAE0S,MAAO,YAEvH,yBAAK1S,MAAO,CAAEG,WAAY,SAA1B,qBAEA,kBAAC,KAAD,CAAOsV,GAAG,OAAOC,YAAY,2BAAO9V,MAAOP,KAAKN,MAAM6iE,UAAWpvD,SAAUnT,KAAKuiE,UAAW5hE,MAAO,CAAE0S,MAAO,aAG/G,yBAAK1S,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,SAAUmZ,UAAW,OAAQlZ,WAAY,SAC1G,yBAAKH,MAAO,CAAEG,WAAY,QAA1B,qBACQd,KAAKN,MAAM0iE,SACX,kBAAC,KAAD,CAAQ/rD,YAAY,2BAAO1V,MAAO,CAAE0S,MAAO,KAAOF,SAAUnT,KAAK4iE,oBAAoB5rD,KAAKhX,OACtF,kBAACyyC,EAAD,CAAQlyC,MAAO,GAAf,kCACA,kBAACkyC,EAAD,CAAQlyC,MAAO,GAAf,mCAEJ,kBAAC,KAAD,CAAQ8V,YAAY,2BAAO1V,MAAO,CAAE0S,MAAO,KAAOF,SAAUnT,KAAK4iE,oBAAoB5rD,KAAKhX,OACtF,kBAACyyC,EAAD,CAAQlyC,MAAO,GAAf,iDAIhB,iCAKZ,yBAAKI,MAAO,CAAEqZ,UAAW,SACrB,kBAAC,KAAD,CAAO4gB,QApHH,CACZ,CACIz2B,MAAO,eACP02B,UAAW,KACX36B,IAAK,KACLmT,MAAO,OAEX,CACIlP,MAAO,eACP02B,UAAW,OACX36B,IAAK,OACLmT,MAAO,OAEX,CACIlP,MAAO,2BACP02B,UAAW,UACX36B,IAAK,UACLmT,MAAO,OAEX,CACIlP,MAAO,eACP02B,UAAW,OACX36B,IAAK,OACLmT,MAAO,OAEX,CACIlP,MAAO,eACP02B,UAAW,QACX36B,IAAK,QACLmT,MAAO,OAEX,CACIwnB,UAAW,aACX36B,IAAK,aACLmT,MAAO,OAkFsBynB,WAAY2oC,EAAY1oC,MAAO,SAAAjD,GACpD,MAAO,CACHkD,aAAc,SAAA5jB,GAAW,EAAK6jB,gBAAgBnD,EAAO53B,MACrDg7B,aAAc,SAAA9jB,GAAW,EAAK6jB,gBAAgB,c,GAlU/Cz7B,a,UCuGZmkE,G,2MAxGXjkE,MAAQ,CACJ02B,WAAY,G,+EAGA0B,GACZ93B,KAAKC,SAAS,CACVm2B,WAAY0B,M,+BAIV,IAAD,OAECoqC,EAAY,CAAC,iCAAS,iCAAS,kCAC/B0B,EAAiB5jE,KAAKI,MAAMyjE,aAAan3D,KAC3C,SAACtC,EAAM5H,GACH,IAAIshE,EACA1hE,EAAWgI,EAAKxB,KAAKsd,MAAM,KAAK,GAAK,IAAM9b,EAAKxB,KAAKsd,MAAM,KAAK,GAAGA,MAAM,KAAK,GAIlF,OAFA49C,EAAc5B,EAAU93D,EAAKmK,MAEtB,CACHrU,IAAKsC,EACLoG,KAAMxG,EACNgV,MAAO,QAAUhN,EAAKyH,KAAO,IAAMiyD,EAAc,qBAKvDC,EAAe/jE,KAAKI,MAAM4jE,WAAWt3D,KAAI,SAAC7H,EAAMrC,GAClD,GAAa,OAATqC,EAAe,CAGf,IAFA,IAAIxB,EAAOwB,EAAKqhB,MAAM,OAAO,GAAGA,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAGA,MAAM,KAC1E+9C,EAAS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACpFC,EAAI,EAAGA,EAAID,EAAOxhE,OAAQyhE,IAC3B7gE,EAAK,KAAO4gE,EAAOC,KACnB7gE,EAAK,GAAK4gE,EAAOv4D,QAAQu4D,EAAOC,IAAM,GAS9C,OANI7gE,EAAK,GAAK,KACVA,EAAK,GAAK,IAAMA,EAAK,IAKlB,CACHnD,IAAKsC,EACLoG,KALOvF,EAAK,GAAG6iB,MAAM,KAAK,GAAK,IAAM7iB,EAAK,GAAK,IAAMA,EAAK,GAAK,IAAMA,EAAK,GAAG6iB,MAAM,KAAK,GAAK,IAAM7iB,EAAK,GAAG6iB,MAAM,KAAK,GAAK,IAAM7iB,EAAK,GAAG6iB,MAAM,KAAK,GAMpJ9O,MALUvS,EAAKqhB,MAAM,OAAO,GAAGA,MAAM,KAAK,IAQlD,OAAO,QAGL0U,EAAU,CACZ,CACIz2B,MAAO,2BACP02B,UAAW,OACX36B,IAAK,OACLmT,MAAO,MAEX,CACIlP,MAAO,eACP02B,UAAW,QACX36B,IAAK,QACLmT,MAAO,QAYf,OACI,yBAAK1S,MAAO,CAAEqZ,UAAW,SAEjBha,KAAKI,MAAM+jE,YAAc,kBAAC,KAAD,CAAOvpC,QAASA,EAASE,WAAYipC,EAAchpC,MAAO,SAAAjD,GAC/E,MAAO,CACHkD,aAAc,SAAA5jB,GAAW,EAAK6jB,gBAAgBnD,EAAO53B,MACrDg7B,aAAc,SAAA9jB,GAAW,EAAK6jB,gBAAgB,MAEnDmpC,WAAY,CACXjxD,SAAU,SAACkxD,EAAMC,GACb,EAAKlkE,MAAMmkE,SAASF,OAGxB,kBAAC,KAAD,CAAOzpC,QAASA,EAASE,WAAY8oC,EAAgB7oC,MAAO,SAAAjD,GACxD,MAAO,CACHkD,aAAc,SAAA5jB,GAAW,EAAK6jB,gBAAgBnD,EAAO53B,MACrDg7B,aAAc,SAAA9jB,GAAW,EAAK6jB,gBAAgB,MAEnDmpC,WAAY,CACXjxD,SAAU,SAACkxD,EAAMC,GACb,EAAKlkE,MAAMmkE,SAASF,Y,GAhGvB7kE,aC+FdglE,G,2MA3FX9kE,MAAQ,CAAEuJ,UAAW,GAAIC,QAAS,GAAIu7D,WAAY,EAAGC,WAAY,EAAGC,QAAS,EAAGC,OAAQ,EAAGf,aAAc,GAAIG,WAAY,GAAIK,KAAM,G,mFAE9G,IAAD,O7GuFfh+D,IAAMC,IAAI,Y6GrFN6D,MAAK,SAAAtF,GACF,IAAM4/D,EAAa5/D,EAAKA,KAAK,GAAGggE,MAAQ,KAAO,KAAO,KAChDH,GAAc7/D,EAAKA,KAAK,GAAGggE,MAAQhgE,EAAKA,KAAK,GAAGigE,OAAS,KAAO,KAAO,KACvEH,EAAWD,EAAaD,EAAc,IAC5C,EAAKxkE,SAAS,CAAEwkE,WAAYA,EAAWzyD,QAAQ,GAAI0yD,WAAYA,EAAW1yD,QAAQ,GAAI2yD,QAASA,EAAQ3yD,QAAQ,QAElHzH,OAAM,SAAAC,OACXxK,KAAKszC,aAAetzC,KAAKszC,aAAat8B,KAAKhX,Q,+BAGtCqD,EAAMu1B,GAAa,IAAD,OACvB54B,KAAKC,SAAS,CAAEgJ,UAAW2vB,EAAW,GAAI1vB,QAAS0vB,EAAW,KAAM,WACtC,IAAtB,EAAKl5B,MAAMklE,OACX,EAAKG,oBACwB,IAAtB,EAAKrlE,MAAMklE,QAClB,EAAKI,uB,0CAKI,I7G4GG/7D,EAAWC,E6G5Gf,OAChB,GAA6B,KAAzBlJ,KAAKN,MAAMuJ,WAA2C,KAAvBjJ,KAAKN,MAAMwJ,QAAgB,CAC1D,IAAMpC,EAAK,IAAI2Q,KAAKzX,KAAKN,MAAMuJ,UAAUid,MAAM,KAAK,GAAIlmB,KAAKN,MAAMuJ,UAAUid,MAAM,KAAK,GAAK,EAAGlmB,KAAKN,MAAMuJ,UAAUid,MAAM,KAAK,IAAInH,cAAcmH,MAAM,KAAK,GACvJnf,EAAK,IAAI0Q,KAAKzX,KAAKN,MAAMwJ,QAAQgd,MAAM,KAAK,GAAIlmB,KAAKN,MAAMwJ,QAAQgd,MAAM,KAAK,GAAK,EAAGlmB,KAAKN,MAAMwJ,QAAQgd,MAAM,KAAK,IAAInH,cAAcmH,MAAM,KAAK,I7GyGvIjd,E6GvGQnC,E7GuGGoC,E6GvGCnC,E7GwG/BV,IAAMC,IAAI,eAAiB2C,EAAY,IAAMC,I6GvGrCiB,MAAK,SAAAtF,GACF,EAAK5E,SAAS,CAAE4jE,aAAch/D,EAAKA,KAAMm/D,WAAY,QAExDz5D,OAAM,SAAAC,U,wCAIA,I7GoGG4jB,E6GpGJ,OACe,KAAzBpuB,KAAKN,MAAMuJ,WAA2C,KAAvBjJ,KAAKN,MAAMwJ,U7GmG5BklB,E6GlGQpuB,KAAKN,MAAMuJ,U7GmGpC5C,IAAMC,IAAI,aAAe8nB,I6GlGjBjkB,MAAK,SAAAtF,GACF,EAAK5E,SAAS,CAAE+jE,WAAYn/D,EAAKA,KAAMg/D,aAAc,QAExDt5D,OAAM,SAAAC,S,+BAIVy6D,GACLjlE,KAAKC,SAAS,CAAEokE,KAAMY,M,mCAGb1kE,GACTP,KAAKC,SAAS,CAAE2kE,OAAQrkE,M,+BAElB,IACEkyC,EAAWC,KAAXD,OACA3Z,EAAgBC,KAAhBD,YACF3lB,EAAWnT,KAAKmT,SAAS6D,KAAKhX,MAEpC,OACI,6BACI,yBAAKW,MAAO,CAAE4O,SAAU,SAAxB,oDACA,yBAAK5O,MAAO,CAAEqZ,UAAW,SAAU,kBAAC,KAAD,CAAU2qD,QAAS3kE,KAAKN,MAAMilE,QAASO,UAAU,KACpF,yBAAKvkE,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,gBAAiB3S,WAAY,SAAUmZ,UAAW,SAC7F,6BACI,kFACA,6BAAMha,KAAKN,MAAMglE,WAAjB,MAAgC1kE,KAAKN,MAAMilE,QAA3C,MAAuD3kE,KAAKN,MAAM+kE,WAAlE,OAEJ,6BACI,6FACA,+CAGR,yBAAK9jE,MAAO,CAAEqZ,UAAW,SACrB,yBAAKrZ,MAAO,CAAE4O,SAAU,SAAxB,aACA,yBAAK5O,MAAO,CAAEqZ,UAAW,SACrB,kBAAC,KAAD,CAAQ3D,YAAY,kBAAQ1V,MAAO,CAAE0S,MAAO,KAAOF,SAAUnT,KAAKszC,aAAat8B,KAAKhX,OAChF,kBAACyyC,EAAD,CAAQlyC,MAAO,GAAf,aACA,kBAACkyC,EAAD,CAAQlyC,MAAO,GAAf,mBAEJ,kBAACu4B,EAAD,CAAaxiB,qBAAsB,SAAAC,GAAW,OAAIA,EAAYC,YAAYrD,SAAUA,EAAUxS,MAAO,CAAEG,WAAY,OAAQuS,MAAO,YAEtI,yBAAK1S,MAAO,CAAEqZ,UAAW,SACrB,kBAAC,GAAD,CAAgB6pD,aAAc7jE,KAAKN,MAAMmkE,aAAcG,WAAYhkE,KAAKN,MAAMskE,WAAYG,YAAankE,KAAKN,MAAMklE,OAAQL,SAAUvkE,KAAKukE,SAASvtD,KAAKhX,e,GArFvJR,aCuCT2lE,G,2MApCXzlE,MAAQ,CACJC,WAAY,G,mFAGZ,IAAMI,EAAcF,eAAeC,QAAQ,QAC3CE,KAAKC,SAAS,CAAEN,WAAYI,M,+BAEtB,IAEEohE,EAAYC,KAAZD,QACFiE,EAAoC,GAAzBplE,KAAKN,MAAMC,WAC5B,OACI,yBAAKgB,MAAO,CAAE2c,YAAa,OAAQgV,aAAc,SAC7C,yBAAK3xB,MAAO,CAAE4O,SAAU,OAAQxO,OAAQ,OAAQsxB,WAAY,SAA5D,4BACA,kBAAC,KAAD,CAAMmvC,iBAAiB,KACnB,kBAACL,EAAD,CAASO,IAAI,2BAAOxhE,IAAI,KACpB,kBAAC,GAAD,OAGAklE,GAAY,kBAACjE,EAAD,CAASO,IAAI,2BAAOxhE,IAAI,KAChC,kBAAC,GAAD,a,GArBAV,aCuCb6lE,G,wLAjCPxlE,eAAeylE,U,+BAET,IrG+DU1qD,EqG/DX,OACC2qD,EAAU1lE,eAAeC,QAAQ,QACjC0lE,EAAWxlE,KAAKI,MAAMC,SAASkV,SACrC,OACI,yBAAK5U,MAAO,CAAEI,OAAQ,UAClB,yBAAKI,UAAU,UAEX,yBAAKR,MAAO,CAAEC,QAAS,OAAQC,WAAY,WACvC,yBAAKF,MAAO,CAAE4O,SAAU,OAAQD,WAAY,YAA5C,wDACA,kBAAC,EAAD,CAAW9O,KAAMglE,EAAUC,OAAQzlE,KAAKI,MAAMslE,SAElD,yBAAK/kE,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaC,cAAe,SAC5E,wBAAIN,MAAO,CAAEwO,MAAO,UAAYo2D,EAAhC,gBAA4C5qD,GAAe,IAAIlD,MAA/D,KrGmDAmD,EqGnDwF,IAAInD,KrGqD9F,CAAC,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,sBAD/C,IAAIA,KAAKmD,GAAWf,YqGnDd,kBAAC,IAAD,CAAM3Y,GAAG,SAASuS,QAAS,kBAAM,EAAKkyD,kBAClC,kBAAC,KAAD,CAAMhlE,MAAO,CAAEwO,MAAO,SAAW1K,KAAK,cAIlD,yBAAKtD,UAAU,WACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOX,KAAI,UAAKR,KAAKI,MAAMD,MAAMK,KAAtB,SAAmCm1B,UAAWT,KACzD,kBAAC,IAAD,CAAO10B,KAAI,UAAKR,KAAKI,MAAMD,MAAMK,KAAtB,YAAsCm1B,UAAWQ,KAC5D,kBAAC,IAAD,CAAO31B,KAAI,UAAKR,KAAKI,MAAMD,MAAMK,KAAtB,WAAqCm1B,UAAWwvC,KAC3D,kBAAC,IAAD,CAAO3kE,KAAI,UAAKR,KAAKI,MAAMD,MAAMK,KAAtB,YAAsCm1B,UAAW4qC,Y,GA3B1D/gE,a,qBCiGXomE,G,YAlGX,WAAYxlE,GAAQ,IAAD,8BACf,4CAAMA,KA4BVylE,YAAc,WACV,IAAM3C,EAAUttD,SAASC,eAAe,WAAWtV,MAC7CwiE,EAAWntD,SAASC,eAAe,YAAYtV,OhH2DtD,SAAeyiE,EAAUD,GAC9B,IAAMl6D,EAAO,CACXm6D,SAAUA,EACVD,SAAUA,GAEZ,OAAO18D,IAAMyC,KAAK,QAASD,IgH/DrBqB,CAAkBg5D,EAASH,GACtB54D,MAAK,SAAAa,GACFxH,QAAQC,IAAI,YAAcwK,KAAKC,UAAUlD,IACzC,IAAMu4D,EAAWv4D,EAAOnG,KAClBihE,EAAO5C,EACP3uD,EAAOgvD,EAAS,GAAGhvD,KACzB1U,eAAekmE,QAAQ,OAAQD,GAC/BjmE,eAAekmE,QAAQ,OAAQxxD,GAC/B,EAAKtU,SAAS,CACV+lE,UAAU,OAGjBz7D,OAAM,SAAAC,GACHhH,QAAQC,IAAI,YAAcwK,KAAKC,UAAU1D,IACzC,EAAKvK,SAAS,CACVgmE,YAAY,EACZC,aAAc,mDAhDX,EAoDnBC,eAAiB,WACb,IAAMC,EAAQvmE,eAAeC,QAAQ,QAC/ByU,EAAO1U,eAAeC,QAAQ,QACpC,GAAc,OAAVsmE,EACA,OAAqB,IAAjBxmE,OAAO2U,GACA,kBAAC,IAAD,CAAUhC,KAAM,SAAUrR,GAAI,iBAElC,kBAAC,IAAD,CAAUqR,KAAM,SAAUrR,GAAI,0BAzDzC,EAAKxB,MAAQ,CACTsmE,UAAU,EACVC,YAAY,EACZC,aAAc,MAElB,EAAKL,YAAc,EAAKA,YAAY7uD,KAAjB,iBAPJ,E,iFAUE,IAAD,OACVksD,EAAUttD,SAASywD,cAAc,YACjCtD,EAAWntD,SAASywD,cAAc,aACxCnD,EAAQnkB,iBAAiB,SAAS,WAC9BmkB,EAAQnkB,iBAAiB,SAAS,SAAAztC,GACZ,KAAdA,EAAEg1D,UACFpD,EAAQqD,OACRxD,EAASyD,eAKrBzD,EAAShkB,iBAAiB,SAAS,WAC/BgkB,EAAShkB,iBAAiB,SAAS,SAAAztC,GACjB,KAAdA,EAAEg1D,SAAkB,EAAKT,sB,+BAyCjC,OACI,yBAAKllE,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,SAAUE,OAAQ,QAASsS,MAAO,QAASguB,WAAY,8EACvHrhC,KAAKmmE,iBACN,yBAAKxlE,MAAO,CAAEsZ,UAAW,WACrB,yBAAKtZ,MAAO,CAAE0S,MAAO,SAAWhS,IAAKolE,KAAMllE,IAAI,SAC/C,yBAAKZ,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,SAAU6lE,SAAU,SACrF,yBAAK/lE,MAAO,CAAEwO,MAAO,QAASI,SAAU,OAAQ0K,UAAW,SAAU5G,MAAO,SAA5E,uFACA,yBAAK1S,MAAO,CAAE0S,MAAO,OAAQzS,QAAS,OAAQ4S,eAAgB,SAAU3S,WAAY,WAChF,yBAAKF,MAAO,CAAE0S,MAAO,QAAStS,OAAQ,QAAS0e,aAAc,MAAO1J,gBAAiB,QAASkE,UAAW,SAAU/E,QAAS,OAAQC,SAAU,aAC1I,yBAAKxU,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,gBAAiB3S,WAAY,WACxE,yBAAKF,MAAO,CAAEI,OAAQ,OAAQsS,MAAO,OAAQoM,aAAc,MAAO1J,gBAAiB,qBAAsB5G,MAAO,QAASvO,QAAS,OAAQC,WAAY,SAAU2S,eAAgB,WAC5K,kBAAC,KAAD,CAAM/O,KAAK,OAAO9D,MAAO,CAAEwO,MAAO,YAEtC,kBAAC,KAAD,CAAOiH,GAAG,UAAUzV,MAAO,CAAEG,WAAY,QAAUuV,YAAY,oDAEnE,yBAAK1V,MAAO,CAAEC,QAAS,OAAQ4S,eAAgB,gBAAiB3S,WAAY,SAAUmZ,UAAW,SAC7F,yBAAKrZ,MAAO,CAAEI,OAAQ,OAAQsS,MAAO,OAAQoM,aAAc,MAAO1J,gBAAiB,qBAAsB5G,MAAO,QAASvO,QAAS,OAAQC,WAAY,SAAU2S,eAAgB,WAC5K,kBAAC,KAAD,CAAM/O,KAAK,OAAO9D,MAAO,CAAEwO,MAAO,YAEtC,kBAAC,KAAD,CAAO1K,KAAK,WAAW2R,GAAG,WAAWzV,MAAO,CAAEG,WAAY,QAAUuV,YAAY,oCAEpF,kBAAC,KAAD,CAAQ1V,MAAO,CAAE0S,MAAO,QAAS0C,gBAAiB,wBAAyB5G,MAAO,QAAS6K,UAAW,QAAUvG,QAASzT,KAAK6lE,aAA9H,gBACA,yBAAKllE,MAAO,CAAEC,QAASZ,KAAKN,MAAMumE,WAAa,OAAS,QAAS92D,MAAO,MAAOI,SAAU,SAAWvP,KAAKN,MAAMwmE,gBAGvH,yBAAKvlE,MAAO,CAAE0S,MAAO,OAAQG,eAAgB,SAAU3S,WAAY,SAAUD,QAAS,SAAtF,uB,GA5FApB,a,mCCGxBoD,IAAOo2B,OAAO,SAoBC2tC,OAhBf,WAEE,OADA/wD,SAASgxD,gBAAgBjmE,MAAM4O,SAAW,OAExC,yBAAKpO,UAAU,WACb,kBAAC,KAAD,CAAgB63B,OAAQ6tC,MACtB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACtmE,KAAK,IAAIm1B,UAAWp2B,IACjC,kBAAC,IAAD,CAAUgT,KAAM,IAAKrR,GAAI,WACzB,kBAAC,IAAD,CAAOV,KAAK,QAAQm1B,UAAW0vC,KAC/B,kBAAC,IAAD,CAAO7kE,KAAK,SAASm1B,UAAWiwC,SCZtBmB,QACW,cAA7BxjD,OAAOljB,SAAS2mE,UAEe,UAA7BzjD,OAAOljB,SAAS2mE,UAEhBzjD,OAAOljB,SAAS2mE,SAAS7mE,MACvB,2DCZN8mE,IAAS1oB,OAAO,kBAAC,GAAD,MAAQ3oC,SAASC,eAAe,SD2H1C,kBAAmBqxD,WACrBA,UAAUC,cAAcC,MAAMj9D,MAAK,SAAAk9D,GACjCA,EAAaC,iB,mBEnInBjoE,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.de2a39af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/edit2.8fc62700.svg\";","module.exports = __webpack_public_path__ + \"static/media/filter.43b66bba.svg\";","module.exports = __webpack_public_path__ + \"static/media/Wardview.6c75f5a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/Historyview.0467b7bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Control.aa66ed95.svg\";","module.exports = __webpack_public_path__ + \"static/media/file1.6f94c891.svg\";","module.exports = __webpack_public_path__ + \"static/media/file2.2b64f736.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.870c0c52.svg\";","module.exports = __webpack_public_path__ + \"static/media/dragdown.0cdfe02a.svg\";","module.exports = __webpack_public_path__ + \"static/media/RT.41b174eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/calender.da91395a.svg\";","module.exports = __webpack_public_path__ + \"static/media/calenderwhite.d66bfce7.svg\";","module.exports = __webpack_public_path__ + \"static/media/1200px-Taipei_Veterans_General_Hospital_Emblem.svg.b744f9a1.png\";","module.exports = __webpack_public_path__ + \"static/media/Edit.a7d4c3ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/ping.c2141b87.svg\";","module.exports = __webpack_public_path__ + \"static/media/pingwhite.0f1e8cfb.svg\";","import React, { Component } from 'react';\n\nclass Homepage extends Component {\n    render() {\n        return (\n            <div></div>\n        );\n    }\n}\n\nexport default Homepage","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport wardviewlogo from '../Image/svg/Wardview.svg'\nimport historylogo from '../Image/svg/Historyview.svg'\nimport controllogo from '../Image/svg/Control.svg'\nimport './Sidermenu.scss';\n\n\nclass Sidermenu extends Component {\n\n    state = {\n        powerLogin: Number(sessionStorage.getItem('role'))\n    }\n\n    componentDidMount() {\n        const powerLogins = Number(sessionStorage.getItem('role'))\n        this.setState({ powerLogin: powerLogins })\n    }\n\n    Selectkeynumber(key) {\n\n        switch (key) {\n            case '/nicu':\n                return 0;\n            case '/nicu/history':\n                return 1;\n            case '/nicu/system':\n                return 2;\n            default:\n                if (key.match('patient') != null) {\n                    if(this.props.location.state && this.props.location.state.fromHistory){\n                        return 1;\n                    }\n                    return 0;\n                }\n                if (key.match('ward') != null) {\n                    return 0;\n                }\n                return '';\n        }\n    }\n\n    select_hover(value) {\n        const { path } = this.props\n        const keynumber = this.Selectkeynumber(path)\n        if (keynumber === value) {\n            return true\n        }\n        return false\n    }\n    render() {\n        const rule = this.state.powerLogin\n        return (\n            <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"20px\", height: '100%' }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto auto\", gridColumnGap: \"10px\" }}>\n                    <Link to=\"/nicu/ward/wardindex\" className={this.select_hover(0) ? \"linkstate\" : \"dislinkstate\"} style={{ display: rule == 2 ? \"none\" : \"flex\" }}>\n                        <img src={wardviewlogo} alt='wardviewlogo'></img>\n                        <centerstyle>\n                            <div className={this.select_hover(0) ? \"linkfont\" : \"dislinkfont\"}>住院病人資訊</div>\n                        </centerstyle>\n                    </Link>\n                    <Link to=\"/nicu/history\" className={this.select_hover(1) ? \"linkstate\" : \"dislinkstate\"} style={{ display: rule == 1 ? \"flex\" : \"none\" }}>\n                        <img src={historylogo} alt='historyviewlogo'></img>\n                        <centerstyle>\n                            <div className={this.select_hover(1) ? \"linkfont\" : \"dislinkfont\"} >歷史病歷管理</div>\n                        </centerstyle>\n                    </Link>\n                    <Link to='/nicu/system' className={this.select_hover(2) ? \"linkstate\" : \"dislinkstate\"} style={{ display: rule == 2 ? \"flex\" : \"none\" }}>\n                        <img src={controllogo} alt='systemviewlogo'></img>\n                        <centerstyle>\n                            <div className={this.select_hover(2) ? \"linkfont\" : \"dislinkfont\"}>系統設定</div>\n                        </centerstyle>\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Sidermenu);\n","import X2JS from \"x2js\"\nimport moment from 'moment';\n\n\nexport function bornstatusFormat(week, day) {\n    if (week === \"\" || week === null || week === undefined) {\n        return null\n    }\n    if (week === 0 && day === 0) {\n        return null\n    }\n    return week.toString() + \"+\" + day.toString() + \">\"\n}\n\n\nexport function valueFormat(value) {\n    if (value === \"\" || value === null || value === undefined || value === 0) {\n        return null\n    }\n    return value.toString() + \">\"\n}\n\nexport function WeightListFilter(weightList, PickerDate) {\n    const dateTime = PickerDate + (24 * 60 * 60 * 1000)\n    var weightValue = 0\n    if (Array.isArray(weightList)) {\n        for (let index = 0; index < weightList.length; index++) {\n            const element = weightList[index];\n            const elementTime = moment(element.rec_dat.toString().trim() + element.rec_tim.toString().trim(), \"YYYYMMDDHHmm\").valueOf()\n            if (Number(element.value2) > 0) {\n                if (elementTime < dateTime) {\n                    weightValue = Number(element.value2) *1000\n                    break;\n                }\n            }\n        }\n    }\n    if (weightValue === 0) {\n        return null\n    }\n    return weightValue\n}\n\nexport function CalculateAgeFromPickerDate(BornStatus, PickerDate) {\n    const startDate = moment(BornStatus.date);\n    const endDate = moment(PickerDate);\n    const minus = endDate.diff(startDate, 'days');\n    console.log(BornStatus)\n    if (BornStatus === undefined || BornStatus.date === undefined || BornStatus.week === undefined || BornStatus.day === undefined) {\n        return \"未知年齡\"\n    }\n    if (BornStatus.week >= 37) {\n        const month = Math.floor((minus) / 30);\n        const day = Math.floor((minus) % 30);\n        return month > 0 ? `${month}月+${day}天` : `${day}天`\n    }\n\n    const tempWeek = Math.floor(BornStatus.week + (BornStatus.day + minus) / 7);\n    const tempDay = Math.floor((BornStatus.day + minus) % 7);\n    if (tempWeek >= 40) {\n        const overDay = (tempWeek - 40) * 7 + tempDay\n        const month = Math.floor(overDay / 30)\n        const day = overDay % 30\n        return month > 0 ? `矯齡${month}月${day}天` : `矯齡${day}天`\n    } else {\n        const week = tempWeek\n        const day = tempDay\n        return `${week}+${day}`\n    }\n}\n\nexport function CalculateAge(BornStatus) {\n    const startDate = moment(BornStatus.date);\n    const endDate = moment();\n    const minus = endDate.diff(startDate, 'days');\n    console.log(BornStatus)\n    if (BornStatus === undefined || BornStatus.date === undefined || BornStatus.week === undefined || BornStatus.day === undefined) {\n        return \"未知年齡\"\n    }\n    if (BornStatus.week >= 37) {\n        const month = Math.floor((minus) / 30);\n        const day = Math.floor((minus) % 30);\n        return month > 0 ? `${month}月+${day}天` : `${day}天`\n    }\n\n    const tempWeek = Math.floor(BornStatus.week + (BornStatus.day + minus) / 7);\n    const tempDay = Math.floor((BornStatus.day + minus) % 7);\n    if (tempWeek >= 40) {\n        const overDay = (tempWeek - 40) * 7 + tempDay\n        const month = Math.floor(overDay / 30)\n        const day = overDay % 30\n        return month > 0 ? `矯齡${month}月${day}天` : `矯齡${day}天`\n    } else {\n        const week = tempWeek\n        const day = tempDay\n        return `${week}+${day}`\n    }\n}\n\n\nexport function statecolor(state) {\n    if (state === 'HR') {\n        return \"rgb(100,140,60)\"\n    }\n    if (state === 'BP') {\n        return \"rgb(193,37,40) \"\n    }\n\n    if (state === 'ABP') {\n        return \"#C12528\"\n    }\n    if (state === 'NBP') {\n        return \"#C12528\"\n    }\n    if (state === 'SpO2') {\n        return \"rgb(60,105,160) \"\n    }\n    if (state === 'BT') {\n        return \"rgb(127,61,181)\"\n    }\n    if (state === 'RR') {\n        return \"rgb(200,110,40) \"\n    }\n    return null\n}\n\n//parse flag\nexport function Respiratorswitch(Respirator) {\n    if (Respirator === '呼(非侵入)') {\n        return '非侵入呼吸器'\n    }\n    if (Respirator === '呼(侵入)') {\n        return '侵入性呼吸器'\n    }\n    return '呼吸器'\n}\n\nexport function wardstatestringformat(item) {\n    switch (item.item) {\n        case \"Respirator\":\n            return Respiratorswitch(item.data)\n        case \"TPN\":\n            return \"TPN\"\n        case \"NPO\":\n            return \"NPO\"\n        case \"HD\":\n            return \"HD\"\n        case \"Abx\":\n            return \"Abx\"\n        case \"CVC\":\n            return \"CVC\"\n        case \"Xanth\":\n            return \"Xanth\"\n        case \"Phototherapy\":\n            return \"照光\"\n        case \"DNR\":\n            return \"DNR\"\n        default:\n            return item.item\n    }\n}\n\nexport function Labwarningvalue(value, title) {\n    if (title === \"Glucose\") {\n        if (value > 120 || value < 50) {\n            return false\n        }\n    }\n    if (title === \"WBC\") {\n        if (value < 10000 || value > 30000) {\n            return false\n        }\n    }\n    if (title === \"Hgb\") {\n        if (value < 10 || value > 18) {\n            return false\n        }\n    }\n    if (title === \"Platelet\") {\n        if (value < 100000 || value > 450000) {\n            return false\n        }\n    }\n    if (title === \"Na+\") {\n        if (value < 135 || value > 145) {\n            return false\n        }\n    }\n    if (title === \"K+\") {\n        if (value < 3.5 || value > 5.5) {\n            return false\n        }\n    }\n    if (title === \"Ca2+\") {\n        if (value < 0.8 || value > 1.4) {\n            return false\n        }\n    }\n    if (title === \"P\") {\n        if (value < 4.5 || value > 6.0) {\n            return false\n        }\n    }\n    if (title === \"Mg2+\") {\n        if (value < -1.5 || value > 4.5) {\n            return false\n        }\n    }\n    if (title === \"Alb\") {\n        if (value > 3) {\n            return false\n        }\n    }\n    if (title === \"CRP\") {\n        if (value < 1) {\n            return false\n        }\n    }\n    if (title === \"Procalcitionin\") {\n        if (value < 0.5) {\n            return false\n        }\n    }\n    if (title === \"pH\") {\n        if (value < 7.25 || value > 7.4) {\n            return false\n        }\n    }\n    if (title === \"PCO2\") {\n        if (value < 40 || value > 60) {\n            return false\n        }\n    }\n    if (title === \"BE\") {\n        if (value < -7 || value > 6) {\n            return false\n        }\n    }\n    if (title === \"PO2\") {\n        if (value < 40 || value > 90) {\n            return false\n        }\n    }\n    if (title === \"BUN\") {\n        if (value < 1) {\n            return false\n        }\n    }\n    if (title === \"Cr\") {\n        if (value < 1) {\n            return false\n        }\n    }\n    if (title === \"ALT\") {\n        if (value < 45) {\n            return false\n        }\n    }\n    if (title === \"AST\") {\n        if (value < 45) {\n            return false\n        }\n    }\n    if (title === \"TBil\") {\n        if (value < 2) {\n            return false\n        }\n    }\n    if (title === \"DBil\") {\n        if (value < 0.5) {\n            return false\n        }\n    }\n    if (title === \"ALKP\") {\n        if (value < 450) {\n            return false\n        }\n    }\n    if (title === \"Total Ca\") {\n        if (value < 8 || value > 12) {\n            return false\n        }\n    }\n    if (title === \"FeSat\") {\n        if (value < 0.15) {\n            return false\n        }\n    }\n    return true\n}\n\n\nexport function getRandom(number) {\n    return Math.floor(Math.random() * 5) + number;\n};\n\nexport function getRandomfornumber(number) {\n    return Math.floor(Math.random() * number);\n};\n\nexport function arraychange(list) {\n    var myNewArray = []\n    for (var i = 0; i < list.length; ++i) {\n        for (var j = 0; j < list[i].length; ++j) {\n            myNewArray.push(list[i][j]);\n        }\n    }\n    return myNewArray\n}\n\nexport function WeightList(weightlist) {\n    if (weightlist === undefined || weightlist === null) {\n        return \"--\"\n    }\n    const findata = weightlist.filter(function (value, index) {\n        return value.type === \"TW\"\n    })\n    if (findata.length === 0) {\n        return 0\n    }\n    else return findata\n}\n\nexport function BornWeight(weightlist, birthday) {\n    if (weightlist === undefined || weightlist === null) {\n        return \"--\"\n    }\n    if (Array.isArray(weightlist)) {\n        const findata = weightlist.filter(function (value, index) {\n            return value.rec_dat === birthday && value.type === \"TW\"\n        })\n        if (findata.length === 0) {\n            return 0\n        }\n        else return parseInt(Number(findata[findata.length - 1].value2) * 1000)\n    }\n    else {\n        return parseInt(Number(weightlist.value2) * 1000)\n    }\n}\n\nexport function NewestWeight(weightlist) {\n    if (weightlist === undefined) {\n        return \"--\"\n    }\n    if (weightlist.length === 0) {\n        return 0\n    }\n    if (Array.isArray(weightlist)) {\n        const findata = weightlist.filter(function (value, index) {\n            return value.type === \"TW\"\n        })\n        if (findata.length === 0) {\n            return \"--\"\n        }\n        return parseInt(Number(findata[0].value2) * 1000)\n    }\n    else {\n        return parseInt(Number(weightlist.value2) * 1000)\n    }\n\n}\n\nexport function XM2JSON(data) {\n    const xm2 = new X2JS()\n    if (data === undefined) {\n        return []\n    }\n    const status = xm2.xml2js(data).outmsg.ret\n    if (Number(status) === 0) {\n        const parsedata = xm2.xml2js(data).outmsg.resconts.rescont\n        if (!Array.isArray(parsedata)) {\n            return [parsedata]\n        }\n        return parsedata\n    }\n    return []\n}\n\nexport function QMNCXM2JSON(data) {\n    const xm2 = new X2JS()\n    if (data === undefined) {\n        return []\n    }\n    const status = xm2.xml2js(data).outmsg.ret\n    if (Number(status) === 0) {\n        const parsedata = xm2.xml2js(data).outmsg.resconts.rescont\n        return parsedata\n    }\n    return []\n}\n\nexport function Doc(DocList, type) {\n    if (DocList === undefined || DocList === null || DocList === \"\") {\n        return \"\"\n    }\n    const Main = DocList.filter(function (element, index) {\n        return element.PDTYPE === type\n    })\n    if (Main.length === 0) {\n        return \"\"\n    }\n    console.log(Main[0])\n    return Main[0].PDDOCNMC.toString().trim() + \" \" + Main[0].PDMDNO.toString().trim().replace(\"DOC\", \"\")\n}\n\nexport function selectweight(List, date) {\n    if (List === undefined || List === null) {\n        return \"--\"\n    }\n    var array = []\n    for (let index = 0; index < List.length; index++) {\n        const element = List[index];\n        if (moment(element.rec_dat, 'YYYYMMDD').valueOf() < date) {\n            array.push(element)\n        }\n    }\n    if (array.length === 0) {\n        return 0\n    }\n    return Number(array[0].value2) * 1000\n}\n\n\n","import axios from 'axios';\n\n\naxios.defaults.baseURL = \"http://10.97.241.48/deploy/\";\n// axios.defaults.baseURL = \"http://172.24.7.33/deploy/\";\n// axios.defaults.baseURL = \"http://127.0.0.1:8888/deploy/\";\n\n//----------------------------------------------\n// announcement-controller 病房公告(Ward View)\n//----------------------------------------------\n//建立公告資訊\n/*\nexport function createAnnounce(context, editor, transinno, time) {\n  const body = {\n    context: context,\n    editor: editor,\n    transinno: transinno,\n    time: time\n  }\n  return axios.post(\"Announcement/createAnnouncement\", body);\n}*/\n\n//Create bweek bday bweight\nexport function createPatientInfo(hisid, pname, psex, bweight, bweek, bday) {\n  const body = {\n    \"bday\": bday,\n    \"bweek\": bweek,\n    \"bweight\": bweight,\n    \"hisid\": hisid,\n    \"pname\": pname,\n    \"psex\": psex\n  }\n  return axios.post(\"patientinfo/createPatientInfo\", body)\n}\n\nexport function getPersionalStatus(hisid) {\n  return axios.get(\"patientinfo/getOnePatientInfo/\" + hisid);\n}\n\nexport function createAnnounce(announceArray) {\n  return axios.post(\"Announcement/createAnnouncement\", announceArray);\n}\n\n//刪除某天公告資訊\nexport function deleteAnnounce(transinno, dateTime) {\n  return axios.delete(\"Announcement/delannouncement/\" + transinno + \"/\" + dateTime);\n}\n\n//取得全部資訊\nexport function getAllAnnounce() {\n  return axios.get(\"Announcement/getAllannounce\");\n}\n\n//取得某位病人某天資訊\nexport function getOneAnnounce(transinno, dateTime) {\n  return axios.get(\"Announcement/getOneannouncement/\" + transinno + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// export/import-controller 匯入匯出\n//----------------------------------------------\n//匯出\nexport function exportJson(transinno) {\n  return axios.get(\"exportJson/\" + transinno);\n}\n\n//匯入\nexport function importJson(filename) {\n  return axios.get(\"importJson/\" + filename);\n}\n\n//下載檔案\nexport function downloadFile(filename) {\n  return axios.get(\"downloadFile/\" + filename);\n}\n\n//上傳檔案\nconst config = { headers: { 'Content-Type': 'multipart/form-data' } }\nexport function uploadFile(fileData) {\n  return axios.post(\"uploadFile\", fileData, config);\n}\n//----------------------------------------------\n// login-controller 登入與權限設定\n//----------------------------------------------\n//刪除帳號\nexport function deleteUser(name, role, username) {\n  return axios.delete(\"delUser/\" + name + \"/\" + role + \"/\" + username);\n}\n\n//查詢某帳號權限：1->read only 2->general user 3->general manager 4->system manager 5->super user\nexport function getAuth(username) {\n  return axios.get(\"getAuth/\" + username);\n}\n\n//取得系統空間\nexport function getSpace() {\n  return axios.get(\"getSpace\");\n}\n\n//登入\nexport function login(username, password) {\n  const body = {\n    username: username,\n    password: password\n  }\n  return axios.post(\"login\", body);\n}\n\nexport function getSSOLogin(username, password) {\n  return axios.get(\"LoginInSSO/\" + username + \"/\" + password);\n}\n\n//新增帳號與權限\nexport function register(name, password, role, username, doctorid) {\n  const body = {\n    name: name,\n    password: password,\n    role: role,\n    username: username,\n    doctorid: doctorid\n  }\n  return axios.post(\"register\", body);\n}\n\n//取得全部資訊\nexport function getAlluser() {\n  return axios.get(\"getAlluser\")\n}\n\n//角色、姓名搜尋其內容\nexport function searchUser(name, role) {\n  return axios.get(\"searchUser/\" + name + \"/\" + role);\n}\n\n//----------------------------------------------\n// log-controller 顯示Log日誌\n//----------------------------------------------\n\n//Show login log(根據起始時間查詢成功登入記錄)(time格式為yyyy-MM-ddTHH:mm:ss)\nexport function getLoginlog(startTime, endTime) {\n  return axios.get(\"getLoginlog/\" + startTime + \"/\" + endTime);\n}\n\n//Show API access log (date格式為yyyy-MM-dd)\nexport function getApilog(Time) {\n  return axios.get(\"getApilog/\" + Time)\n}\n\n//Show Debug log (date格式為yyyy-MM-dd)\nexport function getDebuglog(Time) {\n  return axios.get(\"getDebuglog/\" + Time)\n}\n\n//----------------------------------------------\n// breath-controller 呼吸RT\n//----------------------------------------------\n//createBreath\nexport function createBreath(editTime, hisid, model, note, setting) {\n  const body = {\n    editTime: editTime,\n    hisid: hisid,\n    model: model,\n    note: note,\n    setting: setting\n  }\n  return axios.post(\"breath/createBreath\", body);\n}\n\n//getBreath\nexport function getAllBreath() {\n  return axios.get(\"breath/getAllbreath\");\n}\n\n//updateNote\nexport function updateNote(editTime, hisid, model, note, setting) {\n  const body = {\n    editTime: editTime,\n    hisid: hisid,\n    model: model,\n    note: note,\n    setting: setting\n  }\n  return axios.put(\"breath/updatebnote/\" + editTime, body);\n}\n\n//----------------------------------------------\n// exam-cbc-controller Exam CBC Controller\n//----------------------------------------------\n//寫入CBC資訊\nexport function createExamCbc(band, hb, hct, hisid, lym, plt, seg, updateTime, wbc) {\n  const body = {\n    band: band,\n    hb: hb,\n    hct: hct,\n    hisid: hisid,\n    lym: lym,\n    plt: plt,\n    seg: seg,\n    updateTime: updateTime,\n    wbc: wbc\n  }\n  return axios.post(\"examcbc/createexamcbc\", body);\n}\n\n//取得全部資訊\nexport function getAllExamCbc() {\n  return axios.get(\"examcbc/getAllexamcbc\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamCbcOfPatient(hisid, dateTime) {\n  return axios.get(\"examcbc/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-cbc-two-controller Exam CBC Two Controller\n//----------------------------------------------\n//寫入CBC資訊\nexport function createExamCbcTwo(band, crp, hisid, lym, ptc, seg, updateTime, wbc) {\n  const body = {\n    band: band,\n    crp: crp,\n    hisid: hisid,\n    lym: lym,\n    ptc: ptc,\n    seg: seg,\n    updateTime: updateTime,\n    wbc: wbc\n  }\n  return axios.post(\"examcbctwo/createexamcbctwo\", body);\n}\n\n//取得全部資訊\nexport function getAllExamCbcTwo() {\n  return axios.get(\"examcbctwo/getAllexamcbctwo\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamCbcTwoOfPatient(hisid, dateTime) {\n  return axios.get(\"examcbctwo/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-cruor-controller Exam Cruor Controller\n//----------------------------------------------\n//createExamCruor\nexport function createExamCruor(apiT, hisid, inr, pt, updateTime) {\n  const body = {\n    apiT: apiT,\n    hisid: hisid,\n    inr: inr,\n    pt: pt,\n    updateTime: updateTime\n  }\n  return axios.post(\"examcruor/createexamcruor\", body);\n}\n\n//getExamCruor\nexport function getAllExamCruor() {\n  return axios.get(\"examcruor/getAllexamcruor\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamCruorOfPatient(hisid, dateTime) {\n  return axios.get(\"examcruor/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-electrolyte-controller Exam Electrolyte Controller\n//----------------------------------------------\n//createExamEletrolyte\nexport function createExamElectrolyte(bun, caFree, caTotal, caseid, cl, cr, hisid, k, mg, na, p, updateTime) {\n  const body = {\n    bun: bun,\n    caFree: caFree,\n    caTotal: caTotal,\n    caseid: caseid,\n    cl: cl,\n    cr: cr,\n    hisid: hisid,\n    k: k,\n    mg: mg,\n    na: na,\n    p: p,\n    updateTime: updateTime\n  }\n  return axios.post(\"examelectrolyte/createexamelectrolyte\", body);\n}\n\n//getExamElectrolyte\nexport function getAllExamElectrolyte() {\n  return axios.get(\"examelectrolyte/getAllexamelectrolyte\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamElectrolyteOfPatient(hisid, dateTime) {\n  return axios.get(\"examcruor/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-gas-addi-controller Exam GAS Addi Controller\n//----------------------------------------------\n//createExamGasAddi\nexport function createExamGasAddi(bun, caFree, cr, hb, hct, hisid, k, na, updateTime) {\n  const body = {\n    bun: bun,\n    caFree: caFree,\n    cr: cr,\n    hb: hb,\n    hct: hct,\n    hisid: hisid,\n    k: k,\n    na: na,\n    updateTime: updateTime\n  }\n  return axios.post(\"examgasaddi/createexamgasaddi\", body);\n}\n\n//getExamGasAddi\nexport function getAllExamGasAddi() {\n  return axios.get(\"examgasaddi/getAllexamgasaddi\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamGasAddiOfPatient(hisid, dateTime) {\n  return axios.get(\"examgasaddi/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-gas-controller Exam GAS Controller\n//----------------------------------------------\n//createExamGas\nexport function createExamGas(be, fiO2, hco3, hisid, o2Sat, pco2, ph, po2, sample, updateTime) {\n  const body = {\n    be: be,\n    fiO2: fiO2,\n    hco3: hco3,\n    hisid: hisid,\n    o2Sat: o2Sat,\n    pco2: pco2,\n    ph: ph,\n    po2: po2,\n    sample: sample,\n    updateTime: updateTime\n  }\n  return axios.post(\"examgas/createexamgas\", body);\n}\n\n//getExamGas\nexport function getAllExamGas() {\n  return axios.get(\"examgas/getAllexamgas\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamGasOfPatient(hisid, dateTime) {\n  return axios.get(\"examgas/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-glu-controller Exam Glu Controller\n//----------------------------------------------\n//createExamGlu\nexport function createExamGlu(gluBedside, gluLab, hisid, updateTime) {\n  const body = {\n    gluBedside: gluBedside,\n    gluLab: gluLab,\n    hisid: hisid,\n    updateTime: updateTime\n  }\n  return axios.post(\"examglu/createexamglu\", body);\n}\n\n//getExamGlu\nexport function getAllExamGlu() {\n  return axios.get(\"examglu/getAllexamglu\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamGluOfPatient(hisid, dateTime) {\n  return axios.get(\"examglu/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-heart-controller Exam Heart Controller\n//----------------------------------------------\n//createExamHeart\nexport function createExamHeart(bnp, caseid, ck, ckMB, hisid, tropoin, updateTime) {\n  const body = {\n    bnp: bnp,\n    caseid: caseid,\n    ck: ck,\n    ckMB: ckMB,\n    hisid: hisid,\n    tropoin: tropoin,\n    updateTime: updateTime\n  }\n  return axios.post(\"examheart/createexamheart\", body);\n}\n\n//getExamGlu\nexport function getAllExamHeart() {\n  return axios.get(\"examheart/getAllexamheart\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamHeartOfPatient(hisid, dateTime) {\n  return axios.get(\"examheart/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-jaundice-controller Exam Jaundice Controller\n//----------------------------------------------\n//createExamJaundice\nexport function createExamJaundice(dbil, hisid, microBil, tbil, tcb, updateTime) {\n  const body = {\n    dbil: dbil,\n    hisid: hisid,\n    microBil: microBil,\n    tbil: tbil,\n    tcb: tcb,\n    updateTime: updateTime\n  }\n  return axios.post(\"examjaundice/createexamjaundice\", body);\n}\n\n//getExamJaundice\nexport function getAllExamJaundice() {\n  return axios.get(\"examjaundice/getAllexamjaundice\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamJaundiceOfPatient(hisid, dateTime) {\n  return axios.get(\"examjaundice/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-liver-controller Exam Liver Controller\n//----------------------------------------------\n//createExamLiver\nexport function createExamLiver(alKp, alb, alt, ast, dbil, hisid, rggt, tbil, updateTime) {\n  const body = {\n    alKp: alKp,\n    alb: alb,\n    alt: alt,\n    ast: ast,\n    dbil: dbil,\n    hisid: hisid,\n    rggt: rggt,\n    tbil: tbil,\n    updateTime: updateTime\n  }\n  return axios.post(\"examliver/createexamliver\", body);\n}\n\n//getExamLiver\nexport function getAllExamLiver() {\n  return axios.get(\"examliver/getAllexamliver\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamLiverOfPatient(hisid, dateTime) {\n  return axios.get(\"examliver/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-premature-baby-controller Exam Premature Baby Controller\n//----------------------------------------------\n//createExamPrematureBaby\nexport function createExamPrematureBaby(alkp, feSat, hisid, iron, ldh, tibc, updateTime) {\n  const body = {\n    alkp: alkp,\n    feSat: feSat,\n    hisid: hisid,\n    iron: iron,\n    ldh: ldh,\n    tibc: tibc,\n    updateTime: updateTime\n  }\n  return axios.post(\"examprematurebaby/createexamprematurebaby\", body);\n}\n\n//getExamPrematureBaby\nexport function getAllExamPrematureBaby() {\n  return axios.get(\"examprematurebaby/getAllexamprematurebaby\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamPrematureBabyOfPatient(hisid, dateTime) {\n  return axios.get(\"examprematurebaby/getOnepatient\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-unstructured-controller Exam Unstructured Controller\n//----------------------------------------------\n//createExamUnstructured\nexport function createExamUnstructured(hisid, item, result, state, time) {\n  const body = {\n    hisid: hisid,\n    item: item,\n    result: result,\n    state: state,\n    time: time\n  }\n  return axios.post(\"examunstructured/createexamunstructured\", body);\n}\n\n//getExamUnstructured\nexport function getAllExamUnstructured() {\n  return axios.get(\"examunstructured/getAllexamunstructured\");\n}\n\n//----------------------------------------------\n// feeding-controller Feeding Controller\n//----------------------------------------------\n//createExamFeeding\nexport function createExamFeeding(editDoctor, editTime, endTime, hisid, name, notice, startTime) {\n  const body = {\n    editDoctor: editDoctor,\n    editTime: editTime,\n    endTime: endTime,\n    hisid: hisid,\n    name: name,\n    notice: notice,\n    startTime: startTime\n  }\n  return axios.post(\"feeding/createfeeding\", body);\n}\n\n//getExamFeeding\nexport function getAllExamFeeding() {\n  return axios.get(\"feeding/getAllfeeding\");\n}\n\n//----------------------------------------------\n// hospitalization-record-controller Hospitalization Record Controller\n//----------------------------------------------\n//createHospitalizationRecord\nexport function createHospitalizationRecord(hisid, hospitalDoctor, tricuactiveue, mainDoctor, nonReport, note, report, updateTime) {\n  const body = {\n    hisid: hisid,\n    hospitalDoctor: hospitalDoctor,\n    icuactive: tricuactiveue,\n    mainDoctor: mainDoctor,\n    nonReport: nonReport,\n    note: note,\n    report: report,\n    updateTime: updateTime\n  }\n  return axios.post(\"hospitalizationrecord/createhospitalizationrecord\", body);\n}\n\n//getHospitalizationRecord\nexport function getHospitalizationRecord() {\n  return axios.get(\"hospitalizationrecord/getAllhospitalizationrecord\");\n}\n\n//----------------------------------------------\n// io-controller IO Controller\n//----------------------------------------------\n//createIO\nexport function createIO(caseid, hisid, item, updateTime) {\n  const body = {\n    caseid: caseid,\n    hisid: hisid,\n    item: item,\n    updateTime: updateTime\n  }\n  return axios.post(\"io/createio\", body);\n}\n\n//getIO\nexport function getIO() {\n  return axios.get(\"io/getAllio\");\n}\n\n//----------------------------------------------\n// nis-controller NIS Controller\n//----------------------------------------------\n//getQDC\nexport function getQDC(caseno, st, et) {\n  return axios.get(\"QDC/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQENT\nexport function getQENT(caseno) {\n  return axios.get(\"QENT/\" + caseno);\n}\n\n//getQDVS\nexport function getQDVS(caseno, st, et) {\n  return axios.get(\"QDVS/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQMNC\nexport function getQMNC(caseno) {\n  return axios.get(\"QMNC/\" + caseno);\n}\n\n//getQOXY\nexport function getQOXY(caseno, st, et) {\n  return axios.get(\"QOXY/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQPNOT\nexport function getQPNOT(caseno, st, et) {\n  return axios.get(\"QPNOT/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQSPE\nexport function getQSPE(caseno, st, et) {\n  return axios.get(\"QSPE/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQTWPER\nexport function getQTWPER(caseno, st, et) {\n  return axios.get(\"QTWPER/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//----------------------------------------------\n// note-controller Note Controller\n//----------------------------------------------\n//createNote\nexport function createNote(caseid, context, editTime, hisid, type) {\n  const body = {\n    caseid: caseid,\n    context: context,\n    editTime: editTime,\n    hisid: hisid,\n    type: type\n  }\n  return axios.post(\"note/createnote\", body);\n}\n\n//getNote\nexport function getNote() {\n  return axios.get(\"note/getAllnote\");\n}\n\n//----------------------------------------------\n// notice-controller 待辦事項 Notice (Ward/Patient View)\n//----------------------------------------------\n//建立資訊\nexport function createNotice(hisid, context, time, transinno, doc) {\n  const body = {\n    hisid: hisid,\n    context: context,\n    time: time,\n    transinno: transinno,\n    doc: doc\n  }\n  return axios.post(\"notice/createNotice\", body);\n}\n\n//刪除某人某件資訊\nexport function deleteNotice(transinno, date) {\n  return axios.delete(\"notice/delnotice/\" + transinno + \"/\" + date);\n}\n\n//取得全部資訊\nexport function getAllNotice() {\n  return axios.get(\"notice/getAllnotice\");\n}\n\n//取得某位病人資訊\nexport function getOnePatientNotice(transinno, HISID, st, et) {\n  return axios.get(\"notice/getOnePatientNotice/\" + transinno + \"/\" + HISID + \"/\" + st + \"/\" + et);\n}\n\n//----------------------------------------------\n// patient-controller 基本資料(Ward View)\n//----------------------------------------------\n//填寫基本資料\nexport function createPatient(nonreport, pacseno, pbirthdt, pbirthweight, pblood, pday, phistnum, pnamec, psex, pweek, report, transinid) {\n  const body = {\n    nonreport: nonreport,\n    pacseno: pacseno,\n    pbirthdt: pbirthdt,\n    pbirthweight: pbirthweight,\n    pblood: pblood,\n    pday: pday,\n    phistnum: phistnum,\n    pnamec: pnamec,\n    psex: psex,\n    pweek: pweek,\n    report: report,\n    transinid: transinid\n  }\n  return axios.post(\"patient/createpatient\", body);\n}\n\n//刪除某位病人\nexport function deletePatient(transinid, caseid, hisid) {\n  return axios.delete(\"patient/delpatient/\" + transinid + \"/\" + caseid + \"/\" + hisid);\n}\n\n//取得全部資訊\nexport function getAllPatient() {\n  return axios.get(\"patientinfo/getAllpatient\");\n}\n\n//取得某位病人資訊\nexport function getOnePatient(hisid) {\n  return axios.get(\"patient/getOnepatient/\" + hisid);\n}\n\n\n//----------------------------------------------\n// patient-important-matter-controller 病人重要注意事項(Patient View)\n//----------------------------------------------\n//建立事項資訊\nexport function createPatientImportantMatter(context, editor, hisid, updateTime, transinid) {\n  const body = {\n    context: context,\n    editor: editor,\n    hisid: hisid.trim(),\n    time: updateTime,\n    transinid: transinid\n  }\n  return axios.post(\"patientimportantmatter/createpatientimportantmatter\", body);\n}\n\n//刪除某日資訊\nexport function deletePatientImportantMatter(date) {\n  return axios.delete(\"patientimportantmatter/delpatientimportantmatter/\" + date);\n}\n\n//取得全部資訊\nexport function getAllPatientImportantMatter() {\n  return axios.get(\"patientimportantmatter/getAllpatientimportantmatter\");\n}\n\n//取得某位病人資訊\nexport function getOnePatientImportantMatter(transinid) {\n  return axios.get(\"patientimportantmatter/getOnepatient/\" + transinid);\n}\n\n//----------------------------------------------\n// patient-remark-controller 病人註記(Patient View)\n//----------------------------------------------\n//createPatientRemark\nexport function createPatientRemark(context, hisid, transid) {\n  const body = {\n    context: context,\n    hisid: hisid,\n    transid: transid\n  }\n  return axios.post(\"patientremark/createpatientremark\", body);\n}\n\n//delPatientremark\nexport function deletePatientRemark(transid) {\n  return axios.delete(\"patientremark/delpatientremark/\" + transid);\n}\n\n//getPatientRemark\nexport function getAllPatientRemark() {\n  return axios.get(\"patientremark/getAllpatientremark\");\n}\n\n//getOnePatientRemark\nexport function getOnePatientRemark(transid) {\n  return axios.get(\"patientremark/getOnepatientremark/\" + transid);\n}\n\n//----------------------------------------------\n// remark-controller 註記\n//----------------------------------------------\n//建立註記\n\nexport function createRemark(name, remark, remarkId, time, transinId, type, editor) {\n  const body = {\n    name: name,\n    remark: remark,\n    remarkid: remarkId,\n    time: time,\n    transinid: transinId,\n    type: type,\n    editor: editor\n  }\n  return axios.post(\"Remark/createremark\", body);\n}\n\n//取得全部註記\nexport function getAllRemark() {\n  return axios.get(\"Remark/getAllremark\");\n}\n\n//取得某一類型註記\nexport function getOneRemark(transid, remarkid, type) {\n  return axios.get(\"Remark/getOneremark/\" + transid + \"/\" + remarkid + \"/\" + type);\n}\n\n//----------------------------------------------\n// patient-weight-controller 基本資料-體重(Ward View)\n//----------------------------------------------\n//填寫體重資訊\nexport function createPatientWeight(hisid, updateTime, weight) {\n  const body = {\n    hisid: hisid,\n    updateTime: updateTime,\n    weight: weight\n  }\n  return axios.post(\"patientweight/createpatientweight\", body);\n}\n\n//刪除某位病人體重資訊\nexport function deletePatientWeight(date) {\n  return axios.delete(\"patientweight/delpatientweight/\" + date);\n}\n\n//取得全部資訊\nexport function getAllPatientWeight() {\n  return axios.get(\"patientweight/getAllpatientweight\");\n}\n\n//取得某位病人體重資訊\nexport function getOnePatientWeight(hisid) {\n  return axios.get(\"patientweight/getOnepatientweight/\" + hisid);\n}\n\n//----------------------------------------------\n// prescription-order-controller Prescription Order\n//----------------------------------------------\n//建立Prescription Order資訊\nexport function createPrescriptionOrder(caseid, dosage, editTime, endTime, frequency, hisid, name, note, route, scientificName, startTime, state, unit) {\n  const body = {\n    caseid: caseid,\n    dosage: dosage,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    route: route,\n    scientificName: scientificName,\n    startTime: startTime,\n    state: state,\n    unit: unit\n  }\n  return axios.post(\"prescriptionorder/createprescriptionorder\", body);\n}\n\n//取得全部資訊\nexport function getAllPrescriptionOrder() {\n  return axios.get(\"prescriptionorder/getAllprescriptionorder\");\n}\n\n//更新Prescription Order備註\nexport function updatePrescriptionOrder(updateTime, caseid, dosage, editTime, endTime, frequency, hisid, name, note, route, scientificName, startTime, state, unit) {\n  const body = {\n    caseid: caseid,\n    dosage: dosage,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    route: route,\n    scientificName: scientificName,\n    startTime: startTime,\n    state: state,\n    unit: unit\n  }\n  return axios.put(\"prescriptionorder/updateponote/\" + updateTime, body);\n}\n\n//----------------------------------------------\n// schedule-controller 排程與事件(Ward/Patient View)\n//----------------------------------------------\n//建立排程資訊\nexport function createPatientSchedule(bednumber, context, time, transinno, type, writter, name, hisid, selectdate) {\n  const body = {\n    bednumber: bednumber,\n    context: context,\n    time: time,\n    transinno: transinno,\n    type: type,\n    writter: writter,\n    name: name,\n    hisid: hisid,\n    selectDate: selectdate\n  }\n  return axios.post(\"schedule/createschedule\", body);\n}\n\n//刪除某人某天排程資訊\nexport function deletePatientSchedule(transinno, date) {\n  return axios.delete(\"schedule/delschedule/\" + transinno + \"/\" + date);\n}\n\n//取得全部資訊\nexport function getAllSchedule() {\n  return axios.get(\"schedule/getAllschedule\");\n}\n\nexport function getAllPatientFromDate(date) {\n  return axios.get(\"schedule/getAllPatientFromDate/\" + date);\n\n}\n\n//取得某位某時段病人資訊\nexport function getOnePatientSchedule(transinno, date) {\n  return axios.get(\"schedule/getOnepatient/\" + transinno + \"/\" + date);\n}\n\n//----------------------------------------------\n// sso-controller SSO Controller\n//----------------------------------------------\n//get_user_profile\nexport function ssoUserProfile(app_COMPANY_UUID, app_USER_BASIC_PROFILE, app_USER_NODE_UUID, privileged_APP_SSO_TOKEN, public_APP_USER_SSO_TOKEN_TO_QUERY) {\n  const body = {\n    app_COMPANY_UUID: app_COMPANY_UUID,\n    app_USER_BASIC_PROFILE: app_USER_BASIC_PROFILE,\n    app_USER_NODE_UUID: app_USER_NODE_UUID,\n    privileged_APP_SSO_TOKEN: privileged_APP_SSO_TOKEN,\n    public_APP_USER_SSO_TOKEN_TO_QUERY: public_APP_USER_SSO_TOKEN_TO_QUERY\n  }\n  return axios.post(\"nicu/get_user_profile\", body);\n}\n\n//get_uuid\nexport function ssoUuid(privileged_APP_SSO_TOKEN, public_APP_USER_SSO_TOKEN_TO_QUERY) {\n  const body = {\n    privileged_APP_SSO_TOKEN: privileged_APP_SSO_TOKEN,\n    public_APP_USER_SSO_TOKEN_TO_QUERY: public_APP_USER_SSO_TOKEN_TO_QUERY\n  }\n  return axios.post(\"nicu/get_uuid\", body);\n}\n\n//Login\nexport function ssoLogin(app_PRIVATE_ID, app_PRIVATE_PASSWD) {\n  const body = {\n    app_PRIVATE_ID: app_PRIVATE_ID,\n    app_PRIVATE_PASSWD: app_PRIVATE_PASSWD\n  }\n  return axios.post(\"nicu/login\", body);\n}\n\n//login_action\nexport function ssoLoginAction(login_name, password) {\n  const body = {\n    login_name: login_name,\n    password: password\n  }\n  return axios.post(\"nicu/login_a\", body);\n}\n\n//----------------------------------------------\n// stored-procedure-controller Stored Procedure Controller\n//----------------------------------------------\n//getADMDISP\nexport function getStoredProcedureADMDISP(hisid, caseno) {\n  return axios.get(\"ADMDISP/\" + hisid + \"/\" + caseno);\n}\n\n//getADMLIST\nexport function getStoredProcedureADMLIST(hisid, docid) {\n  return axios.get(\"ADMLIST/\" + hisid + \"/\" + docid);\n}\n\n//getCPSDISP\nexport function getStoredProcedureCPSDISP(hisid, caseno, seq) {\n  return axios.get(\"CPSDISP/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//getCPSLIST\nexport function getStoredProcedureCPSLIST(hisid, docid) {\n  return axios.get(\"CPSLIST/\" + hisid + \"/\" + docid);\n}\n\n//getDISDISP\nexport function getStoredProcedureDISDISP(hisid, caseno) {\n  return axios.get(\"DISDISP/\" + hisid + \"/\" + caseno);\n}\n\n//getDISLIST\nexport function getStoredProcedureDISLIST(hisid, docid) {\n  return axios.get(\"DISLIST/\" + hisid + \"/\" + docid);\n}\n\n//getDTAROTQ4\nexport function getStoredProcedureDTAROTQ4(hisid) {\n  return axios.get(\"DTAROTQ4/\" + hisid);\n}\n\n//getDTASOAPQ\nexport function getStoredProcedureDTASOAPQ(hisid, date, dpt) {\n  return axios.get(\"DTASOAPQ/\" + hisid + \"/\" + date + \"/\" + dpt);\n}\n\n//getERDISP\nexport function getStoredProcedureERDISP(hisid, caseno) {\n  return axios.get(\"ERDISP/\" + hisid + \"/\" + caseno);\n}\n\n//getOPSORAQ1\nexport function getStoredProcedureOPSORAQ1(hisid) {\n  return axios.get(\"OPSORAQ1/\" + hisid);\n}\n\n//getOPSORAQ2\nexport function getStoredProcedureOPSORAQ2(hisid, date, times) {\n  return axios.get(\"OPSORAQ2/\" + hisid + \"/\" + date + \"/\" + times);\n}\n\n//getORDLIST\nexport function getStoredProcedureORDLIST(hisid, date, dpt, docid) {\n  return axios.get(\"ORDLIST/\" + hisid + \"/\" + date + \"/\" + dpt + \"/\" + docid);\n}\n\n//getPCASELIST\nexport function getStoredProcedurePCASELIST(hisid, docid, ttype) {\n  return axios.get(\"PCASELIST/\" + hisid + \"/\" + docid + \"/\" + ttype);\n}\n\n//getPRGTXQRY\nexport function getStoredProcedurePRGTXQRY(hisid, date, caseno) {\n  return axios.get(\"PRGTXQRY/\" + date + \"/\" + hisid + \"/\" + caseno);\n}\n\n//getRESDBGAS\nexport function getStoredProcedureRESDBGAS(hisid, date) {\n  return axios.get(\"RESDBGAS/\" + hisid + \"/\" + date);\n}\n\n//getRESDGLU1\nexport function getStoredProcedureRESDGLU1(hisid, date) {\n  return axios.get(\"RESDGLU1/\" + hisid + \"/\" + date);\n}\n\n//getRESDISP\nexport function getStoredProcedureRESDISP(hisid, month, caseno, seq) {\n  return axios.get(\"RESDISP/\" + month + \"/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//getRESDNM2\nexport function getStoredProcedureRESDNM2(hisid, date) {\n  return axios.get(\"RESDNM2/\" + hisid + \"/\" + date);\n}\n\n//getRESLAB01\nexport function getStoredProcedureRESLAB01(hisid, date) {\n  return axios.get(\"RESLAB01/\" + hisid + \"/\" + date);\n}\n\n//getRESLAB02\nexport function getStoredProcedureRESLAB02(hisid, date) {\n  return axios.get(\"RESLAB02/\" + hisid + \"/\" + date);\n}\n\n//getRESLAB0C\nexport function getStoredProcedureRESLAB0C(hisid, date) {\n  return axios.get(\"RESLAB0C/\" + hisid + \"/\" + date);\n}\n\n//getRESSECT\nexport function getStoredProcedureRESSECT(hisid, month, dpt, docid) {\n  return axios.get(\"RESSECT/\" + month + \"/\" + hisid + \"/\" + dpt + \"/\" + docid);\n}\n\n//getTRTMNTQ1\nexport function getStoredProcedureTRTMNTQ1(hisid, caseno) {\n  return axios.get(\"TRTMNTQ1/\" + hisid + \"/\" + caseno);\n}\n\n//getUDORDER0\nexport function getStoredProcedureUDORDER0(hisid, caseno, seq) {\n  return axios.get(\"UDORDER0/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//getUDTEXTQ1\nexport function getStoredProcedureUDTEXTQ1(caseno, seq) {\n  return axios.get(\"UDTEXTQ1/\" + caseno + \"/\" + seq);\n}\n\n//getWARDFLAG\nexport function getStoredProcedureWARDFLAG(hisid, caseno, seq) {\n  return axios.get(\"WARDFLAG/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//----------------------------------------------\n// table-controller Table Controller\n//----------------------------------------------\n//getTableHBED\nexport function getTableHBED() {\n  return axios.get(\"HBED\");\n}\n\n//getTablePBASINFO\nexport function getTablePBASINFO(PHISTNUM) {\n  return axios.get(\"PBASINFO/\" + PHISTNUM);\n}\n\n//getTablePDOCNEW\nexport function getTablePDOCNEW(PCASENO) {\n  return axios.get(\"PDOCNEW/\" + PCASENO);\n}\n\n//getTablePLOC\nexport function getTablePLOC(PCASENO) {\n  return axios.get(\"PLOC/\" + PCASENO);\n}\n\n//----------------------------------------------\n// to-do-controller 待辦事項To Do List(Ward/Patient View)\n//----------------------------------------------\n//建立待辦資訊\nexport function createTodo(caseid, context, time, transinno, type) {\n  const body = {\n    caseid: caseid,\n    context: context,\n    time: time,\n    transinno: transinno,\n    type: type\n  }\n  return axios.post(\"todo/createtodo\", body);\n}\n\n//刪除某件待辦資訊\nexport function deleteTodo(index) {\n  return axios.delete(\"todo/deltodo/\" + index);\n}\n\n//取得全部資訊\nexport function getAllTodo() {\n  return axios.get(\"todo/getAlltodo\");\n}\n\n//取得某位病人資訊\nexport function getOneTodo(transinno, caseid) {\n  return axios.get(\"todo/getOnepatient/\" + transinno + \"/\" + caseid);\n}\n\n//----------------------------------------------\n// tpn-controller TPN Controller\n//----------------------------------------------\n//createTPN\nexport function createTPN(aa, ca, editTime, endTime, frequency, glu, hisid, k, mg, na, name, notice, p, startTime, state, tpn) {\n  const body = {\n    aa: aa,\n    ca: ca,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    glu: glu,\n    hisid: hisid,\n    k: k,\n    mg: mg,\n    na: na,\n    name: name,\n    notice: notice,\n    p: p,\n    startTime: startTime,\n    state: state,\n    tpn: tpn\n  }\n  return axios.post(\"tpn/createtpn\", body);\n}\n\n//getTPN\nexport function getAllTPN() {\n  return axios.get(\"tpn/getAlltpn\");\n}\n\n//----------------------------------------------\n// treatment-order-controller Treatment Order\n//----------------------------------------------\n//建立Treatment Order資訊\nexport function createTreatmentOrder(caseid, editTime, endTime, frequency, hisid, name, note, startTime, state) {\n  const body = {\n    caseid: caseid,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    startTime: startTime,\n    state: state\n  }\n  return axios.post(\"treatmentorder/createtreatmentorder\", body);\n}\n\n//取得全部資訊\nexport function getAllTreatmentOrder() {\n  return axios.get(\"treatmentorder/getAlltreatmentorder\");\n}\n\n//更新Treatment Order備註\nexport function updateTreatmentOrder(EditTime, caseid, editTime, endTime, frequency, hisid, name, note, startTime, state) {\n  const body = {\n    caseid: caseid,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    startTime: startTime,\n    state: state\n  }\n  return axios.put(\"treatmentorder/updatetonote/\" + EditTime, body);\n}\n\n//----------------------------------------------\n// ward-bed-information-history-controller 歷史病床資訊(Ward View)\n//----------------------------------------------\n//建立床位歷史資訊\nexport function createWardbedInformation(breath, hisid, nonBreath, onBedNumber, tpn, updateTime) {\n  const body = {\n    breath: breath,\n    hisid: hisid,\n    nonBreath: nonBreath,\n    onBedNumber: onBedNumber,\n    tpn: tpn,\n    updateTime: updateTime\n  }\n  return axios.post(\"wardbedinformation/createwardbedinformation\", body);\n}\n\n//取得全部資訊\nexport function getAllWardbedInformation() {\n  return axios.get(\"wardbedinformation/getAllwardbedinformation\");\n}\n\n//當日床位資訊\nexport function getOneWardbedInformation(date) {\n  return axios.get(\"wardbedinformation/getOnewardbedinformation/\" + date);\n}\n\n//近兩週床位資訊\nexport function getWeekWardbedInformation(date) {\n  return axios.get(\"wardbedinformation/getWeekswardbedinformation/\" + date);\n}\n\n//----------------------------------------------\n// ward-information-controller Ward Information Controller\n//----------------------------------------------\n//建立WardInformation資訊\nexport function createWardInformation(bednumber, caseid, hisid, indexId, today, transformintime, transformouttime) {\n  const body = {\n    bednumber: bednumber,\n    caseid: caseid,\n    hisid: hisid,\n    indexId: indexId,\n    today: today,\n    transformintime: transformintime,\n    transformouttime: transformouttime\n  }\n  return axios.post(\"wardinformation/createwardinformation\", body);\n}\n\n//取得全部資訊\nexport function getAllWardInformation() {\n  return axios.get(\"wardinformation/getAllwardinformation\");\n}\n\n//取得當日資訊\nexport function getOneWardInformation(date) {\n  return axios.get(\"wardinformation/getTodaywardinformation/\" + date);\n}\n\n//----------------------------------------------\n// ward-state-controller 病床狀態(Ward View)\n//----------------------------------------------\n//建立床位狀態資訊\nexport function createWardState(anti, breath, drain, foley, hd, hisid, npo, tpn) {\n  const body = {\n    anti: anti,\n    breath: breath,\n    drain: drain,\n    foley: foley,\n    hd: hd,\n    hisid: hisid,\n    npo: npo,\n    tpn: tpn\n  }\n  return axios.post(\"wardstate/createwardstate\", body);\n}\n\n//取得全部資訊\nexport function getAllWardState() {\n  return axios.get(\"wardstate/getAllwardstate\");\n}\n\n//取得某人床位狀態資訊\nexport function getOneWardState(hisid) {\n  return axios.get(\"wardstate/getOnewardstate/\" + hisid);\n}\n\n//----------------------------------------------\n// ward-value-controller 生命跡象(Ward/Patient View)\n//----------------------------------------------\n//建立生命跡象資訊\nexport function createWardValue(abpd, abpm, abps, bt, hr, nbpd, nbpm, nbps, phistnum, rr, spO2, time) {\n  const body = {\n    abpd: abpd,\n    abpm: abpm,\n    abps: abps,\n    bt: bt,\n    hr: hr,\n    nbpd: nbpd,\n    nbpm: nbpm,\n    nbps: nbps,\n    phistnum: phistnum,\n    rr: rr,\n    spO2: spO2,\n    time: time\n  }\n  return axios.post(\"wardvalue/createwardvalue\", body);\n}\n\nexport function getWardDebInfo(date) {\n  return axios.get(\"patient/getWardDebInfo/\" + date);\n}\n\nexport function getPatientwarMidValue(hisid, time, interval) {\n  return axios.get(\"wardvalue/getPatientwarMidValue/\" + hisid + \"/\" + time + \"/\" + interval);\n}\n\nexport function getPatientwardvalueMedian(hisid, startTime, endTime) {\n  return axios.get(\"wardvalue/getPatientwardvalueMedian/\" + hisid + \"/\" + startTime + \"/\" + endTime);\n}\n\n\nexport function getPatientwardvalueBoxPlot(hisid, startTime, endTime, type, interval) {\n  return axios.get(\"wardvalue/getPatientwardvalueBoxPlot/\" + hisid + \"/\" + startTime + \"/\" + endTime + \"/\" + type + \"/\" + interval);\n}\n\nexport function getVitalSignData(hisid, startTime, endTime, type) {\n  return axios.get(\"wardvalue/getVitalSignData/\" + hisid + \"/\" + startTime + \"/\" + endTime + \"/\" + type);\n}\n\n//取得全部資訊\nexport function getAllWardValue() {\n  return axios.get(\"wardvalue/getAllwardvalue\");\n}\n\n//取得全部資訊\nexport function getHisidwardvalue(hisid) {\n  return axios.get(\"wardvalue/getHisidwardvalue/\" + hisid);\n}\n\n//取得某一段時間某一個人生命跡象(原始資料)\nexport function getPatientWardValue(endTime, hisid, startTime, interval, type) {\n  return axios.get(\"wardvalue/getPatientwardvalue/\" + hisid + \"/\" + startTime + \"/\" + endTime + \"/\" + type + \"/\" + interval);\n}\n\n//取得某一個人某類型最新生命跡象\nexport function getWardvalueByType(hisid, type) {\n  return axios.get(\"wardvalue/getWardvalueByType/\" + hisid + \"/\" + type);\n}\n\n\n//----------------------------------------------\n// water-volume-controller Water Volume Controller\n//----------------------------------------------\n//createWaterVolume\nexport function createWaterVolume(endTime, feed, hisid, iv, other, startTime, updateTime) {\n  const body = {\n    endTime: endTime,\n    feed: feed,\n    hisid: hisid,\n    iv: iv,\n    other: other,\n    startTime: startTime,\n    updateTime: updateTime\n  }\n  return axios.post(\"watervolume/createwatervolume\", body);\n}\n\n//取得全部資訊\nexport function getAllWaterVolume() {\n  return axios.get(\"watervolume/getAllwatervolume\");\n}\n","import axios from 'axios';\n\nconst githubApiUrl = \"https://raw.githubusercontent.com/gerrykiki/JsonRegObject/master/\";\n\n//create new instance of github API\nvar axiosGithub = axios.create({\n    baseURL: githubApiUrl,\n    timeout: 1000,\n    //headers: {'X-Custom-Header': 'foobar'}\n});\n\nexport function getGitHubJson(string) {\n    return axiosGithub.get(string);\n}\n\n// export function getExamReport() {\n//     return axios.get(\"ExamRepor.json\");\n// }\n\n","import React, { Component } from 'react';\nimport { wardstatestringformat } from '../Function/Wardstate'\nimport './Wardcardstatus.scss'\nimport * as ApiProvider from '../API/ApiProvider'\nimport * as ApiGithub from '../API/ApiGithub'\n// import moment from 'moment';\n// import * as RegularData from '../Data/RegularData'\n\nclass Wardcarstatus extends Component {\n    state = {\n        TRTMNTQ1: [],\n        UDORDER0: [],\n        FlagReg: []\n    }\n    componentDidMount() {\n        const { PCASENO, PHISTNUM } = this.props\n        const TRQ1 = ApiProvider.getStoredProcedureTRTMNTQ1(PHISTNUM, PCASENO)\n            .then(data => {\n                const rowList = data.data\n                const filterStatusList = rowList.filter(function (info, index, arr) {\n                    return Number(info.ORSTATUS) === 30 || Number(info.ORSTATUS) === 90\n                })\n                return filterStatusList\n            })\n            .catch(err => {\n\n            })\n        const UDORDER = ApiProvider.getStoredProcedureUDORDER0(PHISTNUM, PCASENO, \"123\")\n            .then(data => {\n                var List = []\n                const dataList = data.data\n                if (Array.isArray(dataList)) {\n                    for (let index = 0; index < dataList.length; index++) {\n                        const status = Number(dataList[index].UDSTATUS)\n                        if (status === 30) {\n                            List.push(dataList[index])\n                        }\n                    }\n                }\n                return List\n            })\n            .catch(err => {\n\n            })\n        const Reg = ApiGithub.getGitHubJson(\"FlagReg.json\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        Promise.all([TRQ1, UDORDER, Reg])\n            .then(result => {\n                this.setState({\n                    TRTMNTQ1: result[0],\n                    UDORDER0: result[1],\n                    FlagReg: result[2]\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    render() {\n        function RespiratorStatusParse(InvasiveRespiratorStatus, NonInvasiveRespiratorStatus) {\n            if (InvasiveRespiratorStatus === false && NonInvasiveRespiratorStatus === false) {\n                return \"false\"\n            }\n            if (InvasiveRespiratorStatus === true && NonInvasiveRespiratorStatus === true) {\n                return \"false\"\n            }\n            if (InvasiveRespiratorStatus === true) {\n                return '呼(侵入)'\n            }\n            if (NonInvasiveRespiratorStatus === true) {\n                return \"呼(非侵入)\"\n            }\n            return \"--\"\n        }\n\n        function parseFlagData(TRTMNTQ1, UDORDER, FlagReg, type) {\n            //filter  status 生效中\n            if (FlagReg === undefined || FlagReg === null) { return null }\n            const Flag = FlagReg.filter(function (value, index, arr) {\n                return value.item === type\n            })\n            if (Flag.length === 0) {\n                return null\n            }\n            const StatusUDORDER = UDORDER.some(function (value, index, arr) {\n                const UDDRGNAM = value.UDDRGNAM.toLowerCase()\n                const UDGNAME = value.UDGNAME.toLowerCase()\n                const findFlag = Flag[0].ParseValueUD.some(function (value, index, arr) {\n                    return UDDRGNAM.indexOf(value) >= 0 || UDGNAME.indexOf(value)\n                })\n                return findFlag\n            })\n            const StatusTRTMNTQ1 = TRTMNTQ1.some(function (value, index, arr) {\n                const ORPROCED = value.ORPROCED.toLowerCase()\n                const findFlag = Flag[0].ParseValueTRT.some(function (value, index, arr) {\n                    // return ORPROCED.match(value) !== null\n                    return value\n                })\n                return findFlag\n            })\n            if (StatusUDORDER === false && StatusTRTMNTQ1 === false) {\n                return false\n            }\n            return true\n        }\n\n        function statusspan(source) {\n            if (source.item === 'Respirator') {\n                return 'gridtwocoltwo'\n            }\n            else return 'gridtwocolone'\n        }\n        function style_change(source) {\n            if (source.item === 'Respirator') {\n                if (source.data === '呼(侵入)') {\n                    return 'statustrue'\n                }\n                if (source.data === '呼(非侵入)') {\n                    return 'statustrue'\n                }\n                if (source.data === 'true') {\n                    return 'statustrue'\n                }\n                return 'statusfalse'\n\n            }\n            else {\n                if (source.data) {\n                    return 'statustrue'\n                }\n                else {\n                    return 'statusfalse'\n                }\n            }\n        }\n\n        const UDORDER = this.state.UDORDER0\n        const TRTMNTQ1 = this.state.TRTMNTQ1\n\n\n        const Flag = this.state.FlagReg\n\n\n        const AntiStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"Anti\")\n        const TPNStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"TPN\")\n        const NP0Status = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"NPO\")\n        const FoleyStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"Foley\")\n        const DrainStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"Drain\")\n        const InvasiveRespiratorStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"InvasiveRespirator\")\n        const NonInvasiveRespiratorStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"NonInvasiveRespirator\")\n        const RespiratorStatus = RespiratorStatusParse(InvasiveRespiratorStatus, NonInvasiveRespiratorStatus)\n\n        const StatusArray = [\n            { \"item\": \"Respirator\", \"data\": RespiratorStatus },\n            { \"item\": \"CVC\", \"data\": FoleyStatus },\n            { \"item\": \"NPO\", \"data\": NP0Status },\n            { \"item\": \"TPN\", \"data\": TPNStatus },\n            { \"item\": \"Abx\", \"data\": AntiStatus },\n            { \"item\": \"Xanth\", \"data\": [] },\n            { \"item\": \"照光\", \"data\": [] },\n            { \"item\": \"DNR\", \"data\": DrainStatus }\n        ]\n\n        const statuslist = StatusArray.map(function (info, index, arr) {\n            return (\n                <div key={index} className={statusspan(info)}>\n                    <t4 className={style_change(info)}>{wardstatestringformat(info)}</t4>\n                </div>\n            );\n        })\n        const source = this.props.source\n        return (\n            <div className={source ? \"warscardstatusgrid\" : \"wardinfouserstatusgrid\"}>\n                {statuslist}\n            </div >\n        );\n    }\n}\n\nexport default Wardcarstatus\n","import React, { useState, useEffect } from \"react\";\nimport { statecolor } from '../Function/Wardstate'\nimport Wardcarstatus from './Wardcardstatus'\nimport * as Wardstate from \"../Function/Wardstate\";\nimport * as ApiProvider from '../API/ApiProvider'\nimport './Wardcardvalue.scss'\nimport moment from 'moment';\nimport { Icon } from 'antd';\n\n\nexport function WardCard(props) {\n    const [CenterMonitorValue, SetCenterMonitorValue] = useState(null)\n    const [HID, SetHID] = useState(\"\")\n    const [Timer, SetTimer] = useState(0)\n    const [ChangeAN, SetChangeAN] = useState(false)\n    const [CenterNisValue, SetCenterNisValue] = useState(null)\n\n    useEffect(() => {\n        const TimerID = setInterval(() => {\n            SetTimer(Timer + 1)\n        }, 1000 * 60 * 5)\n        return () => clearInterval(TimerID);\n    }, [Timer])\n\n    useEffect(() => {\n        const hisid = props.PHISTNUM.toString().trim()\n        ApiProvider.getHisidwardvalue(hisid)\n            .then(data => {\n                const source = data.data\n                const HID = source.phistnum\n\n                const tempTime = moment(data.data[0].time).valueOf()\n                const nowTime = moment().valueOf()\n\n                console.log(tempTime, nowTime)\n                SetCenterMonitorValue(source[0]);\n                SetHID(HID)\n            })\n            .catch(err => {\n                console.log(\"Andy test getHisidwardvalue NG \" + JSON.stringify(err));\n            });\n    }, [Timer]);\n\n\n    useEffect(() => {\n        if (CenterMonitorValue !== null && CenterMonitorValue !== undefined) {\n            const pd = InitCenterData(CenterMonitorValue.abpd)\n            const ps = InitCenterData(CenterMonitorValue.abps)\n            const pm = InitCenterData(CenterMonitorValue.abpm)\n\n            if (pd === \"--\" && ps === \"--\" && pm === \"--\") {\n                SetChangeAN(true)\n                const st = moment().subtract(5, 'm').format(\"YYYYMMDDHHmm\");\n                const et = moment().format(\"YYYYMMDDHHmm\");\n                const caseno = props.PCASENO\n\n                ApiProvider.getQDVS(caseno, st, et)\n                    .then(data => {\n                        let tempData = Wardstate.XM2JSON(data.data)\n                        tempData = tempData.map(data => {\n                            const tempTime = data.rec_dat + data.rec_tim\n                            return { \"time\": tempTime, \"diastolic\": data.diastolic, \"systolic\": data.systolic }\n                        })\n                        tempData = tempData.sort((a, b) => {\n                            const tempAtime = moment(a.time, \"YYYYMMDDHHmm\").valueOf()\n                            const tempBtime = moment(b.time, \"YYYYMMDDHHmm\").valueOf()\n                            return tempAtime < tempBtime ? 1 : -1\n                        })\n                        SetCenterNisValue(tempData[0])\n                    })\n                    .catch(err => {\n                        console.log(\"Andy test getHisidwardvalue NG \" + JSON.stringify(err));\n                    });\n            }\n        }\n    }, [Timer]);\n\n    function decideABP() {\n        if (ChangeAN) {\n            return CenterNisValue !== null ? `${CenterNisValue.systolic}/${CenterNisValue.diastolic}`\n                :\n                <Icon type=\"loading\" />\n        }\n        return `${CenterMonitorValue.abps}/${CenterMonitorValue.abpd}(${CenterMonitorValue.abpm})`\n    }\n\n    function InitCenterData(value) {\n        if (value === undefined || value === null || value === \"\") {\n            return \"--\"\n        }\n        else return value\n    }\n    if (CenterMonitorValue === null || CenterMonitorValue === undefined) {\n        return null\n    }\n    return (\n        <div className='Wardcardvaluelayout'>\n            <div className='Wardcardvitalvalue'>\n                <div className='valueRows' style={{ marginRight: \"16px\" }}>\n                    <div >\n                        <t4 style={{ display: \"block\", color: statecolor('HR'), }}>HR</t4>\n                        <t2 className=\"bothWordValue\" style={{ color: statecolor('HR') }}>{InitCenterData(CenterMonitorValue.hr)}</t2>\n                    </div>\n                    <div >\n                        <t4 style={{ display: \"block\", color: statecolor('SpO2') }}>SpO<sub>2</sub></t4>\n                        <t2 className=\"bothWordValue\" style={{ color: statecolor('SpO2') }}>\n                            {InitCenterData(CenterMonitorValue.spo2)}\n                            <span style={{ fontWeight: \"400\", fontSize: \"12px\" }}>%</span>\n                        </t2>\n                    </div>\n                </div>\n                <div className='valueRows'>\n                    <div >\n                        <t4 style={{ display: \"block\", color: statecolor('BP') }}>{ChangeAN ? \"BP\" : \"ABP\"}</t4>\n                        <t2 className=\"bothWordValue\" style={{ color: statecolor('BP') }}>{decideABP()}</t2>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnsGap: \"5px\" }}>\n                        <div >\n                            <t4 style={{ display: \"block\", color: statecolor('RR') }}>RR</t4>\n                            <t2 className=\"bothWordValue\" style={{ color: statecolor('RR') }}>{InitCenterData(CenterMonitorValue.rr)}</t2>\n                        </div>\n                        <div >\n                            <t4 style={{ display: \"block\", color: statecolor('BT') }}>BT</t4>\n                            <t2 className=\"bothWordValue\" style={{ color: statecolor('BT') }}>\n                                {InitCenterData(CenterMonitorValue.bt)}\n                                <span style={{ fontWeight: \"400\", fontSize: \"12px\" }}>&deg;C</span>\n                            </t2>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Wardcarstatus source={true} PCASENO={props.PCASENO} PHISTNUM={props.PHISTNUM}></Wardcarstatus>\n        </div>\n    );\n}\n","function bednumberformat(number) {\n    if (number < 10) {\n        return '0' + number\n    }\n    return number\n}\n\nfunction gender(gender) {\n    if (gender === \"1\") {\n        return '男'\n    }\n    return '女'\n}\n\nfunction WardCardgender(gender) {\n    console.log(gender)\n    if (gender === \"M\") {\n        return '男'\n    }\n    return '女'\n}\n\nfunction pregancybirthdayweekday(pregancy, birthday) {\n    const pregancydays = (new Date(birthday).getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    const pregancyweeks = pregancydays / 7\n    const pregancyweeksdays = pregancydays % 7\n    return '[' + parseInt(pregancyweeks) + '+' + parseInt(pregancyweeksdays) + ']'\n}\n\nfunction pregancynowweek(pregancy) {\n    const pregancydays = (new Date().getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    console.log(pregancydays)\n    const pregancyweeks = pregancydays / 7\n    const pregancyweeksdays = pregancydays % 7\n    console.log(pregancyweeksdays)\n    return '[' + parseInt(pregancyweeks) + '+' + parseInt(pregancyweeksdays) + ']'\n}\n\nfunction pregancytoloaclweeks(pregancy) {\n    const pregancydays = (new Date().getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    console.log(pregancydays)\n    return parseInt(pregancydays / 7)\n}\n\nfunction pregancytolocaldays(pregancy) {\n    const pregancydays = (new Date().getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n\n    return parseInt(pregancydays % 7)\n}\n\nfunction pregancyweek(pregancy, birthday) {\n    const pregancydays = (new Date(birthday).getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    const pregancyweeks = pregancydays / 7\n    return parseInt(pregancyweeks)\n}\n\nfunction pregancydays(pregancy, birthday) {\n    const pregancydays = (new Date(birthday).getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    const pregancyweekdays = pregancydays % 7\n    return parseInt(pregancyweekdays)\n}\n\nfunction birthdayweeks(birthday) {\n    const birthdays = (new Date().getTime() - new Date(birthday).getTime()) / (24 * 60 * 60 * 1000)\n    return parseInt(birthdays / 7)\n}\n\nfunction pregancyweeksanddays(bornweeks, borndays, birthdays) {\n    if (bornweeks === null || bornweeks === undefined || bornweeks === \"\") {\n        return \"-- + --\"\n    }\n    if (borndays === null || borndays === undefined || borndays === \"\") {\n        return \"-- + --\"\n    }\n    if (birthdays === null || birthdays === undefined || birthdays === \"\") {\n        return \"-- + --\"\n    }\n    const localtoborndays = parseInt((new Date().getTime() - new Date(birthdays).getTime()) / (24 * 60 * 60 * 1000)) + parseInt(borndays) + 1\n    const localweeks = parseInt(localtoborndays / 7) + parseInt(bornweeks)\n    const localdays = parseInt(localtoborndays % 7)\n    return localweeks + \"+\" + localdays\n\n}\n\nfunction WeightFormat(BornWeight, Weight) {\n    return BornWeight + \"g -> \" + Weight + \"g\"\n\n}\nexport { bednumberformat, gender, pregancybirthdayweekday, pregancynowweek, pregancyweek, pregancydays, birthdayweeks, pregancytoloaclweeks, pregancytolocaldays, pregancyweeksanddays, WardCardgender, WeightFormat }\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n//Component\nimport * as Wardstate from '../../Function/Wardstate'\nimport * as Wardcardvalue from '../WardCardvalue-k'\nimport { bednumberformat, WardCardgender } from '../../Function/Wardbedfunction'\nimport './Wardcarddetail.scss'\n//image\nimport editlogo from '../../Image/svg/edit2.svg'\nimport fileLogo from '../../Image/svg/file1.svg'\nimport file2Logo from '../../Image/svg/file2.svg'\n//antdesign\nimport { Modal, InputNumber, Button } from 'antd';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment';\n\nvar BornChangeWeek = 0\nvar BornChangeDay = 0\nvar BornChangeWeight = 0\nclass Wardcarddetail extends Component {\n    state = {\n        hoverstate: \"none\",\n        clickstate: false,\n        mouse_hover: false,\n        edit_hover: false,\n        visible: false,\n        pbasignfo: null,\n        birthdayweight: \"N\",\n        weight: 0,\n        bornweek: 0,\n        bornday: 0,\n        nowweight: 0,\n        report: 0,\n        nonreport: 0,\n        remark: \"\",\n        TRANSINID: \"\",\n        TRANSINDT: \"\",\n        TRANSINTM: \"\",\n\n        modatstatus: true,\n        persionstatus: []\n    };\n\n    componentDidMount() {\n        const { data } = this.props\n        // console.log(data)\n        const HID = data.PHISTNUM\n        const date = moment(moment().valueOf() - 24 * 60 * 60 * 1000)\n        const TRID = data.TRANSINID\n        this.API_DATA(HID, date, TRID)\n    }\n\n    API_DATA(HID, date, TRID) {\n        // ApiProvider.getStoredProcedureRESSECT(HID, 1, \"ALL\", \"DOC3924B\")\n        //     .then(data => {\n        //         const ReportList = data.data\n        //         const mapList = ReportList.filter(function (value, index, array) {\n        //             const DTstring = value.ORRCPDT.toString()\n        //             const TMstring = value.ORRCPTM.toString()\n        //             const time = DTstring + TMstring\n        //             return moment(time, 'YYYY-MM-DDHH:mm:ss').valueOf() > date.valueOf()\n        //         })\n        //         this.setState({ report: mapList.length })\n        //     })\n        //     .catch(err => {\n        //         console.log(\"Andy test getStoredProcedureRESSECT NG \" + JSON.stringify(err));\n        //     });\n        ApiProvider.getStoredProcedureORDLIST(HID, date.format('YYYY-MM-DD'), \"ALL\", \"DOC3924B\")\n            .then(data => {\n                const filter = data.data.filter(function (info, index, arr) {\n                    const time = moment(info.ORBGNDT.toString().trim() + info.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n                    console.log(moment(time).format(\"YYYYMMDD HHmmss\"))\n                    console.log(moment(date.valueOf()).format(\"YYYYMMDD HHmmss\"))\n                    return info.ORSTATUS === \"31\" && time > date.valueOf() && time < date.valueOf() + (24 * 60 * 60 * 1000)\n                })\n                // console.log(filter)\n                const Reportfilter = data.data.filter(function (info, index, arr) {\n                    const time = moment(info.ORBGNDT.toString().trim() + info.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n                    return info.ORSTATUS === \"64\" && time > date.valueOf() && time < date.valueOf() + (24 * 60 * 60 * 1000)\n                })\n                console.log(\"HID = \" + HID)\n                console.log(\"64 = \" + Reportfilter.length)\n                console.log(\"31 = \" + filter.length)\n                this.setState({ nonreport: filter.length, report: Reportfilter.length })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getOnePatientRemark(TRID)\n            .then(data => {\n                this.setState({\n                    remark: data.data[0].context\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getOnePatientRemark NG \" + JSON.stringify(err));\n            })\n        ApiProvider.getPersionalStatus(HID)\n            .then(data => { console.log(data.data); this.setState({ persionstatus: data.data }) })\n            .catch(err => { console.log(err) })\n    }\n\n    //Module show\n    handleOk(HID, name, sex) {\n        const week = Number(BornChangeWeek)\n        const day = Number(BornChangeDay)\n        const weight = parseFloat(Number(BornChangeWeight) / 1000).toFixed(3)\n        if (weight === undefined || weight === 0 || weight === null || week === 0 || day === 0 || week === undefined || week === null || day === null || day === undefined) {\n            this.setState({ modatstatus: false })\n        }\n        else if (Number(day) > 6) {\n            this.setState({ modatstatus: false })\n        }\n        else {\n            ApiProvider.createPatientInfo(HID, name, sex, weight, week, day)\n                .then(data => {\n                    console.log(data.data);\n                    ApiProvider.getPersionalStatus(HID)\n                        .then(data => { console.log(data.data); this.setState({ persionstatus: data.data, visible: false, modatstatus: true }) })\n                        .catch(err => { console.log(err) })\n                })\n                .catch(err => { console.log(err) })\n        }\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n            modatstatus: true\n        });\n    };\n    showModal = () => { this.setState({ visible: true }); };\n\n    Modelrender(personstatus) {\n        function typefrom(from) {\n            if (from === 'Custom') {\n                return true\n            }\n            return false\n        }\n        function BornWeekAndDay(BornWeeks, BornDays) {\n            if (BornWeeks === null || BornWeeks === undefined || BornWeeks === \"\") {\n                return []\n            }\n            return [BornWeeks, BornDays]\n        }\n        const { data } = this.props\n        const source = data\n        const HID = source.PHISTNUM.toString().trim()\n        const name = source.PNAMEC.toString().trim()\n        const sex = source.PSEX.toString().trim()\n        const Birthday = source.PBIRHDT\n        const BornWeight = personstatus.BornWeight\n        const BornWeeks = personstatus.BornWeeks\n        const BornWdays = personstatus.BornDays\n        const BornStatus = BornWeekAndDay(BornWeeks, BornWdays)\n        const viewstatus = this.state.modatstatus\n        const dataArray = [\n            { item: \"病床號碼:\", value: bednumberformat(parseInt(source.HBEDNO)) },\n            { item: \"病歷號碼:\", value: source.PHISTNUM.toString().trim() },\n            { item: \"出生週數:\", value: BornStatus },\n            { item: \"生日:\", value: moment(Birthday, 'YYYYMMDD').format('YYYY/MM/DD') },\n            { item: \"出生體重:\", value: BornWeight }\n        ]\n        const dataArrayRender = dataArray.map(function (info, index, arr) {\n            if (info.item === \"出生體重:\") {\n                return (\n                    <div key={index} >\n                        <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\", height: \"50px\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                                {info.item}\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                                <InputNumber defaultValue={info.value} onChange={(value) => { BornChangeWeight = value }}></InputNumber>\n                                <div style={{ margin: \"0px 5px\" }}>g</div>\n                            </div>\n                        </div>\n                        <div style={{ display: viewstatus ? \"none\" : \"block\", color: \"red\" }}>輸入錯誤</div>\n                    </div>\n                );\n            }\n            if (info.item === \"出生週數:\") {\n                return (\n                    <div key={index}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\", height: \"50px\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                                {info.item}\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                                <InputNumber defaultValue={info.value} onChange={(value) => { BornChangeWeek = value }}></InputNumber>\n                                <div style={{ margin: \"0px 5px\" }}>週</div>\n                                <InputNumber defaultValue={info.value} onChange={(value) => { BornChangeDay = value }}></InputNumber>\n                                <div style={{ margin: \"0px 5px\" }}>日</div>\n                            </div>\n                        </div>\n                        <div style={{ display: viewstatus ? \"none\" : \"block\", color: \"red\" }}>輸入錯誤</div>\n                    </div>\n                );\n            }\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\", height: \"50px\" }}>\n                    <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                        {info.item}\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                        {info.value}\n                    </div>\n                </div>\n            );\n        })\n        return (\n            <Modal\n                width={400}\n                title=\"填寫病床資訊\"\n                visible={this.state.visible}\n                onCancel={this.handleCancel}\n                footer={\n                    <div style={{ display: \"flex\", justifyContent: typefrom(source.type) ? 'space-between' : 'flex-end', alignItems: \"center\" }}>\n                        {/* <Button key=\"delete\" style={typefrom(source.type) ? { border: \"1px solid rgba(208,2,27,1)\", color: \"rgba(208,2,27,1)\" } : { display: \"none\" }} onClick={this.handleCancel}>清床</Button> */}\n                        <div>\n                            <Button key=\"cancel\" onClick={this.handleCancel}>取消</Button>\n                            <Button key=\"ok\" type=\"primary\" onClick={() => { this.handleOk(HID, name, sex) }}>儲存</Button>\n                        </div>\n                    </div>}>\n                {dataArrayRender}\n            </Modal>\n        );\n    }\n    BornStatusRender(Week, Day) {\n        if (Week === null || Week === undefined) {\n            return null\n        }\n        if (Day === null || Day === undefined) {\n            return null\n        }\n        return Week.toString() + \"+\" + Day.toString() + \">\"\n    }\n    render() {\n        function valueFormat(value) {\n            if (value === \"\" || value === null || value === undefined) {\n                return \"--\"\n            }\n            return value.toString()\n        }\n        function valueBornWeight(value) {\n            if (value === \"\" || value === null || value === undefined || value === 0) {\n                return \"\"\n            }\n            return value.toString() + \"g > \"\n        }\n        function statusPersion(persionstatus, QMNC, QTWER, Birthday) {\n            console.log(persionstatus)\n            // console.log(QMNC)\n            if (persionstatus.length === 0) {\n                console.log(QMNC)\n                // console.log(\"000\" + Number(QMNC.weeks))\n                if (QMNC.length === 0) {\n                    return {\n                        BornWeight: undefined,\n                        BornWeeks: undefined,\n                        BornDays: undefined\n                    }\n                }\n                const BornWeight = Wardstate.BornWeight(QTWER, Birthday)\n                const BornWeeks = Number(QMNC.weeks)\n                const BornDays = Number(QMNC.days)\n                return {\n                    BornWeight: BornWeight,\n                    BornWeeks: BornWeeks,\n                    BornDays: BornDays\n                }\n            }\n            else {\n                const Weight = Number(persionstatus[0].bweight) * 1000\n                const BornWeeks = Number(persionstatus[0].bweek)\n                const BornDays = Number(persionstatus[0].bday)\n                return {\n                    BornWeight: Weight,\n                    BornWeeks: BornWeeks,\n                    BornDays: BornDays\n                }\n            }\n        }\n        const { data, previewmode, hbedlist } = this.props\n        const { persionstatus } = this.state\n        const source = data\n        const Birthday = source.PBIRHDT\n        const QTWER = Wardstate.XM2JSON(source.QTWPER)\n        const QMNC = Wardstate.QMNCXM2JSON(source.QMNC)\n        const Weight = Wardstate.NewestWeight(QTWER)\n        const BornWeight = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornWeight\n        const BornWeeks = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornWeeks\n        // const BornWeeks = undefined\n        const BornDays = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornDays\n        // const BornDays = undefined\n        const remark = this.state.remark\n        if (source === undefined) { return null }\n        const status = {\n            date: moment(Birthday, \"YYYYMMDD\").valueOf(),\n            week: BornWeeks,\n            day: BornDays\n        }\n        const AgeStatus = Wardstate.CalculateAge(status)\n        const role = Number(sessionStorage.getItem('role'))\n\n        return (\n            <div>\n                <div className='wardcarddetailtitle'>\n                    <t3 style={{ color: \"rgba(0, 26, 109)\", fontSize: \"14px\", fontWeight: \"600\" }}>NI-{bednumberformat(Number(source.HBEDNO))}</t3>\n                    <t3 style={{ color: \"rgba(0, 26, 109)\", fontSize: \"16px\", fontWeight: \"600\" }}>{source.PNAMEC.toString().trim()}</t3>\n                    <t3 style={{ color: \"rgba(0, 26, 109)\", fontSize: \"14px\", fontWeight: \"600\" }}>{source.PHISTNUM}</t3>\n                    <t3 style={{ color: \"rgba(0, 26, 109, .7)\", fontSize: \"12px\" }}>{WardCardgender(source.PSEX)}</t3>\n                    <t3 style={{ color: \"rgba(0, 26, 109, .7)\", fontSize: \"12px\" }}>{moment(Birthday, 'YYYYMMDD').format('MM/DD')}生</t3>\n                    {role == 1 && <div onClick={this.showModal} className='wardcarddetileditbutton' style={{ cursor: \"pointer\" }}>\n                        <img src={editlogo} alt='editlogo'></img>\n                    </div>}\n                </div>\n                <div>\n                    <div className='wardinfoweeks'>\n                        <t3 style={{ color: \"rgba(0, 26, 109)\" }}>\n                            {this.BornStatusRender(BornWeeks, BornDays)}<span style={{ fontWeight: \"900\" }}>{AgeStatus}</span>\n                        </t3>\n                        <t3 style={{ color: \"rgba(0, 26, 109)\" }}>\n                            {valueBornWeight(BornWeight)}<span style={{ fontWeight: \"900\" }}>{valueFormat(Weight)}g</span>\n                        </t3>\n                        <div className='wardinforeportgroup'>\n                            <img src={fileLogo} alt='fileLogo'></img>\n                            <div style={{ fontSize: \"12px\" }}>{this.state.report}</div>\n                            <img src={file2Logo} alt='file2Logo'></img>\n                            <div style={{ fontSize: \"12px\" }}>{this.state.nonreport}</div>\n                        </div>\n                    </div>\n                    <div style={{ display: previewmode ? \"block\" : \"none\", borderBottomWidth: \"0.5px\", borderBottomColor: \"rgba(215, 238, 255, 1)\", borderBottomStyle: \"solid\" }}>\n                        <Wardcardvalue.WardCard centerdata={source.centerMonitorData} previewmode={previewmode} PHISTNUM={source.PHISTNUM} PCASENO={source.PCASENO}></Wardcardvalue.WardCard>\n                    </div>\n                    <div style={{ height: '30px', display: 'grid', justifyContent: 'space-between', alignItems: 'center', padding: \"0px 10px\", position: 'relative', gridTemplateColumns: \"2fr 1fr\" }}>\n                        <div style={{ overflow: \"hidden\", fontSize: \"12px\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\" }}>{remark}</div>\n                        <Link className='patientviewbutton' to={{ pathname: \"/nicu/patient/\" + source.PHISTNUM.toString().trim(), state: { \"source\": hbedlist, \"HISID\": source.PHISTNUM, \"CASEID\": source.PCASENO, \"BEDNUMBER\": source.HBEDNO, \"TYPE\": true, \"TRANSINID\": this.state.TRANSINID } }}>\n                            <centerstyle>\n                                <div style={{ fontSize: \"12px\" }}>進入病人資料頁面</div>\n                            </centerstyle>\n                        </Link>\n                    </div>\n                </div>\n                {this.Modelrender(statusPersion(persionstatus, QMNC, QTWER, Birthday))}\n            </div>\n        );\n    }\n}\n\nexport default Wardcarddetail;\n","import React, { Component } from 'react';\nimport { format_bednumber } from '../../Commonfunction'\nimport editlogo from '../../Image/svg/edit2.svg'\nimport { Modal, Input, DatePicker } from 'antd';\nimport './UnpreviewWardCardDetail.scss'\nimport { bednumberformat } from '../../Function/Wardbedfunction'\n\nclass Unpreviewwardcarddetail extends Component {\n    state = { visible: false, powerLogin: 0 };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n            databool: false,\n            data: null\n        });\n    };\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n\n    handleOk(string) {\n\n        const bednumber = document.getElementById(\"bednumber\").value;\n        const hisnumber = document.getElementById(\"hisid\").value;\n        const birweek = document.getElementById(\"birweek\").value;\n        const birthday = string;\n        const weight = document.getElementById(\"weight\").value;\n        const statedata = {\n            \"BedNumber\": bednumber,\n            \"id\": hisnumber,\n            \"birweek\": birweek,\n            \"birthday\": birthday,\n            \"weight\": weight\n        }\n        this.setState({\n            visible: false,\n            data: statedata,\n            databool: false\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    // savestatus(string) {\n    // }\n\n    render() {\n        function modedisplay(mode) {\n            if (mode) {\n                return \"none\"\n            }\n            else {\n                return \"block\"\n            }\n        }\n        const number = this.props.bednumber\n        const { previewmode } = this.props\n        return (\n            <div style={{ height: '100%' }}>\n                <div style={{ height: '40px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', backgroundColor: \"rgba(215, 238, 255, 1)\", padding: \"9px 10px\" }}>\n                    <t3 style={{ color: \"rgba(61, 119, 181, 1)\" }}>NI-{format_bednumber(number)}</t3>\n                    <div className='wardcardeditbtn' onClick={this.showModal} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                        <img src={editlogo} alt='editlogo'></img>\n                    </div>\n                    <Modal\n                        width={270}\n                        title=\"填寫病床資訊\"\n                        visible={this.state.visible}\n                        onOk={() => this.handleOk(\"2019/12/12\")}\n                        onCancel={this.handleCancel}\n                    >\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr\", gridRowGap: \"10px\" }}>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>病床號碼:</t2>\n                                </centerstyle>\n                                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                    <div>{bednumberformat(number)}</div>\n                                </div>\n                            </div>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>病歷號碼:</t2>\n                                </centerstyle>\n                                <Input id=\"hisid_wardcard\" />\n                            </div>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>出生週數:</t2>\n                                </centerstyle>\n                                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                    <Input id='week' placeholder=\"20\" style={{ marginRight: \"5px\" }}></Input>\n                                    <t2 style={{ marginRight: \"5px\" }}>週</t2>\n                                    <Input id='days' placeholder=\"20\" style={{ marginRight: \"5px\" }}></Input>\n                                    <t2>日</t2>\n                                </div>\n                            </div>\n                            <div className='modulecontent'>\n                                <div style={{ display: 'flex', justifyContent: \"space-between\", alignItems: \"cneter\", width: \"69px\" }}>\n                                    <t2>生</t2>\n                                    <t2>日:</t2>\n                                </div>\n                                <DatePicker getCalendarContainer={triggerNode => triggerNode.parentNode} placeholder=\"選擇日期\" id=\"birthday\" />\n                            </div>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>出生體重:</t2>\n                                </centerstyle>\n                                <div style={{ display: 'flex' }}><Input placeholder=\"120\" id=\"weight\" />&nbsp;g</div>\n                            </div>\n                        </div>\n                    </Modal>\n                </div>\n                <div style={{ height: 'calc(100% - 40px)',display: 'flex', justifyContent: 'center', alignItems: 'center', padding: \"10px\" }}>\n                    <div style={{ fontSize: '28px', color: \"rgba(0,0,0,0.1)\" }}>\n                        空床\n                    </div>\n                </div>\n                {/* <div style={{ display: modedisplay(previewmode) }}>\n                    <div style={{ height: '30px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: \"10px\" }}></div>\n                </div> */}\n            </div>\n        );\n    }\n}\n\nexport default Unpreviewwardcarddetail;\n","\nconst Month_format = (time) => {\n    switch (time) {\n        case 0:\n            return \"1\";\n        case 1:\n            return \"2\";\n        case 2:\n            return \"3\";\n        case 3:\n            return \"4\";\n        case 4:\n            return \"5\";\n        case 5:\n            return \"6\";\n        case 6:\n            return \"7\";\n        case 7:\n            return \"8\";\n        case 8:\n            return \"9\";\n        case 9:\n            return \"10\";\n        case 10:\n            return \"11\";\n        case 11:\n            return \"12\";\n        default:\n            return null;\n    }\n};\nconst format_bednumber = (number) => {\n    if (number < 10) {\n        return \"0\" + number;\n    }\n    return number;\n}\n\nexport { Month_format, format_bednumber }\n","import React, { Component } from 'react';\nimport { Input, Button } from 'antd';\nimport editlogo from '../Image/svg/Edit.svg'\nimport './Wardnote.scss'\nimport deleteimg from '../Image/svg/delete.svg'\nimport detail from '../Image/svg/details.svg'\nimport { Tooltip } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider';\nimport moment from 'moment'\n\nclass WardcardNote extends Component {\n    _isMounted = false;\n    state = {\n        editstate: false,\n        AnnoceRawData: [],\n        AnnoceDisplayData: [],\n        inputContent: undefined,\n        powerLogin: 0\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n    componentDidMount() {\n        this.onInputChange = this.onInputChange.bind(this);\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.queryAllAnnounce();\n    }\n    queryAllAnnounce() {\n        ApiProvider.getAllAnnounce()\n            .then(result => {\n                console.log(\"getAllAnnounce OK \" + JSON.stringify(result));\n                this.setState({\n                    AnnoceRawData: result.data,\n                    AnnoceDisplayData: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getAllAnnounce NG \" + JSON.stringify(err));\n            });\n    }\n    canceledit() {\n        //取消前先拿取server資料\n        this._isMounted = true\n        this.setState({\n            inputContent: undefined,\n            editstate: false,\n            AnnoceDisplayData: JSON.parse(JSON.stringify(this.state.AnnoceRawData))\n        });\n    }\n\n    okeditlist() {\n        //確定上傳\n        this.setState({\n            editstate: false\n        });\n        ApiProvider.createAnnounce(this.state.AnnoceDisplayData)\n            .then(result => {\n                console.log(\"createAnnounce OK \" + JSON.stringify(result));\n                this.queryAllAnnounce();\n            })\n            .catch(err => {\n                console.log(\"createAnnounce NG \" + JSON.stringify(err));\n            });\n    }\n\n    editlist() {\n        this.setState({\n            editstate: !this.state.editstate,\n            AnnoceDisplayData: (this.state.editstate) ? JSON.parse(JSON.stringify(this.state.AnnoceDisplayData)) : JSON.parse(JSON.stringify(this.state.AnnoceRawData))\n        });\n    }\n\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n\n    AddNewannouce() {\n        const announce = this.state.AnnoceDisplayData;\n\n        const doc = sessionStorage.getItem('user')\n        const newAnnounce = {\n            context: this.state.inputContent,\n            time: +(new Date()),\n            editor: doc + \"醫生\",\n            transinno: doc + moment().format(\"YYYYMMDDHHmmss\").toString()\n        }\n        announce.push(newAnnounce)\n        this.setState({\n            AnnoceDisplayData: announce,\n            inputContent: undefined\n        });\n    }\n\n    ondeleteannounce(element) {\n        const announce = this.state.AnnoceDisplayData;\n        const index = announce.findIndex(item => item === element);\n        announce.splice(index, 1);\n        this.setState({ AnnoceDisplayData: announce });\n    }\n    announcelist(announcelist, status) {\n        var list = []\n        if (announcelist === null || announcelist.length === 0) {\n            list.push(\n                <div className='announcelistcontext'>無公告</div>\n            )\n        }\n        for (let index = 0; index < announcelist.length; index++) {\n            const element = announcelist[index];\n            list.push(\n                <div className='announcelistcontext'>\n                    <t2>{index + 1}.{element.context}</t2>\n                    {this.editstatus(element, status)}\n                </div>\n            )\n        }\n        return list\n    }\n    editstatus(element, status) {\n        const time = moment(element.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n        const localTime = moment.utc(time).toDate()\n        const string = element.editor + '醫師於' + moment(localTime).format(\"MM/DD HH:mm\") + '更新'\n        if (status) {\n            return (\n                <img src={deleteimg} alt='deletelogo' onClick={() => this.ondeleteannounce(element)}></img>\n            );\n        }\n        return (\n            <Tooltip placement=\"top\" title={string}>\n                <img src={detail} alt='detaillogo'></img>\n            </Tooltip>\n        );\n    }\n    render() {\n\n        function changehight(state) {\n            if (!state) {\n                return 'wardnotecontextdisedit'\n            }\n            else {\n                return 'wardnotecontextonedit'\n\n            }\n        }\n        let annData = this.state.AnnoceDisplayData\n\n        annData = annData.sort((a, b) => {\n            let tempTimeA = moment(a.time, \"YYYY-MM-DD[T]HH:mm:ss\").valueOf()\n            let tempTimeB = moment(b.time, \"YYYY-MM-DD[T]HH:mm:ss\").valueOf()\n            return tempTimeA < tempTimeB ? 1 : -1\n        })\n\n        return (\n            <div>\n                <div className='wardnotetitle'>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>病房公告</t2>\n                    <div onMouseUp={() => this.editlist()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", width: \"18px\", cursor: \"pointer\" }}>\n                        <img src={editlogo} alt='editlogo'></img>\n                    </div>\n                </div>\n                <div>\n                    <div className={changehight(this.state.editstate)}>\n                        {this.announcelist(annData, this.state.editstate)}\n                    </div>\n                    <div style={{ display: this.state.editstate ? \"block\" : \"none\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"c\" }}>\n                        <div style={{ height: \"50px\", backgroundColor: \"rgba(238,238,238,1)\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                            <Input placeholder=\"新增公告內容\" style={{ marginLeft: \"16px\", width: \"315px\" }} value={this.state.inputContent} onChange={this.onInputChange} />\n                            <Button type=\"primary\" style={{ marginRight: \"16px\" }} onClick={() => this.AddNewannouce()}>\n                                新增\n                            </Button>\n                        </div>\n                        <div style={{ height: \"50px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <Button style={{ margin: \"10px\", width: \"90px\" }} onClick={() => this.canceledit()}>取消</Button>\n                            <Button type=\"primary\" style={{ margin: \"10px\", width: \"90px\" }} onClick={() => this.okeditlist()}>儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WardcardNote;\n","import React, { Component } from 'react';\nimport { Month_format } from '../Commonfunction'\n\nclass Bedinformation extends Component {\n    state = {\n        tableselect: false\n    }\n\n    SelectTruechange() {\n        this.setState({\n            tableselect: true\n        })\n    }\n\n    SelectFalsechange() {\n        this.setState({\n            tableselect: false\n        })\n    }\n\n    sendReturnSelect = (id) => {\n        const { selectkey, idkey, localtime } = this.props\n        const select = this.Selectswitch(idkey, selectkey)\n        if (select) {\n            const data = { \"idkey\": null, \"time\": localtime }\n            this.props.parentCallback(data);\n        }\n        else {\n            this.props.parentCallback(id);\n        }\n    }\n\n    Selectswitch(id, select) {\n        if (id === select) {\n            return true\n        }\n        else return false\n    }\n    render() {\n        function weekdatformat(weekday) {\n            switch (weekday) {\n                case 0:\n                    return \"日\"\n                case 1:\n                    return \"一\"\n                case 2:\n                    return \"二\"\n                case 3:\n                    return \"三\"\n                case 4:\n                    return \"四\"\n                case 5:\n                    return \"五\"\n                case 6:\n                    return \"六\"\n                default:\n                    return null\n            }\n        }\n        const { selectkey, idkey, localtime, data } = this.props\n        const day = Month_format(new Date(localtime).getMonth()) + \"/\" + new Date(localtime).getDate()\n        const weekday = new Date(localtime).getDay()\n        const Unselect_tablestyle = { height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"1px solid rgba(238,238,238,1)\", borderLeftWidth: \"0px\" }\n        const select = this.Selectswitch(idkey, selectkey)\n        if (data === null) {\n            return (\n                <div>\n                    <div style={select ? { border: \"1px solid rgba(59, 151, 225, 1)\", backgroundColor: \"#ffe1c499\", marginTop: '-2px' } : { cursor: \"pointer\" }} onMouseUp={() => this.sendReturnSelect({ \"idkey\": idkey, \"time\": localtime })}>\n                        <div style={Unselect_tablestyle}>\n                            <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                <t2 style={{ textAlign: \"center\" }}>{day}</t2>\n                                <t2 style={{ textAlign: \"center\" }}>{weekdatformat(weekday)}</t2>\n                            </div>\n                        </div>\n                        <div style={Unselect_tablestyle}>\n                            <t2 style={{ textAlign: \"center\" }}>0(12)</t2>\n                        </div>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                    </div>\n                    <div style={{ display: select ? \"flex\" : \"none\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ width: 0, height: 0, borderStyle: \"solid\", borderWidth: \"17.3px 10px 0 10px\", borderColor: \"#ffbe59 transparent transparent transparent\" }}></div>\n                    </div>\n                </div>\n            );\n\n        }\n        return (\n            <div>\n                <div style={select ? { border: \"1px solid rgba(59, 151, 225, 1)\", backgroundColor: \"#ffe1c499\", marginTop: '-2px' } : { cursor: \"pointer\" }} onMouseUp={() => this.sendReturnSelect({ \"idkey\": idkey, \"time\": localtime })}>\n                    <div style={Unselect_tablestyle}>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                            <t2 style={{ textAlign: \"center\" }}>{day}</t2>\n                            <t2 style={{ textAlign: \"center\" }}>{weekdatformat(weekday)}</t2>\n                        </div>\n                    </div>\n                    <div style={Unselect_tablestyle}>\n                        <t2 style={{ textAlign: \"center\" }}>{data.hbedcount}({parseInt(parseInt(data.hbedcount) * 100 / 12)}%)</t2>\n                    </div>\n                    <t2 style={Unselect_tablestyle}>{data.transoutcount}</t2>\n                    <t2 style={Unselect_tablestyle}>{data.transincount}</t2>\n                    <t2 style={Unselect_tablestyle}>{data.rtcount}</t2>\n                    <t2 style={Unselect_tablestyle}>{data.nonrtcount}</t2>\n                    <t2 style={Unselect_tablestyle}>{data.tpncount}</t2>\n                </div>\n                <div style={{ display: select ? \"flex\" : \"none\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <div style={{ width: 0, height: 0, borderStyle: \"solid\", borderWidth: \"17.3px 10px 0 10px\", borderColor: \"rgba(255,190,5,1) transparent transparent transparent\" }}></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Bedinformation\n","import moment from 'moment';\n\nfunction HISAPI_stringtodate(datestring) {\n    function addzero(value) {\n        if (value < 10) {\n            return \"0\" + value\n        }\n        return value\n    }\n    const datenumber = Number(datestring)\n    const dateformat = parseInt(datenumber / 10000) + '-' + parseInt(parseInt(datenumber / 100) % 100) + '-' + addzero(parseInt(datenumber % 100))\n    return dateformat\n}\n\nfunction yyyymmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + \"/\" + Monthformat(new Date(timestamp).getMonth()) + \"/\" + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction yyyymmddstring(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + Monthformat(new Date(timestamp).getMonth()) + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction yyyymmfirstweeksate(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    return new Date(timestamp).getFullYear() + \"/\" + Monthformat(new Date(timestamp).getMonth()) + \"/1\"\n}\n\n\n\nfunction mmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return Monthformat(new Date(timestamp).getMonth()) + '/' + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction weekdateformat(timestamp) {\n    const param = new Date(timestamp).getDay()\n    const weekarray = ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六']\n    return weekarray[param]\n}\n\nfunction weekdateformatcalender(timestamp) {\n    const param = new Date(timestamp).getDay()\n    const weekarray = ['日', '一', '二', '三', '四', '五', '六']\n    return weekarray[param]\n}\n\nfunction hhmmssformat(timestamp) {\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return addZero(new Date(timestamp).getHours()) + ':' + addZero(new Date(timestamp).getMinutes())\n}\n\nfunction hhmmssformattohalf(timestamp) {\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return addZero(new Date(timestamp).getHours()) + ':30:00'\n}\n\n\nfunction yyyymmddHHmmfromat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return new Date(timestamp).getFullYear().toString() + Monthformat(new Date(timestamp).getMonth()).toString() + Dateformat(new Date(timestamp).getDate()).toString() + addZero(new Date(timestamp).getHours()).toString() + addZero(new Date(timestamp).getMinutes()).toString()\n}\n\nfunction MMDDhhmmfromat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return Monthformat(new Date(timestamp).getMonth()) + '/' + Dateformat(new Date(timestamp).getDate()) + ' ' + addZero(new Date(timestamp).getHours()) + ':' + addZero(new Date(timestamp).getMinutes())\n}\n\n\nfunction daysdiff(newtime, oldtime) {\n    const timestampdiff = new Date(newtime).getTime() - new Date(oldtime).getTime()\n    const dissdays = timestampdiff / (24 * 60 * 60 * 1000)\n    return parseInt(dissdays)\n}\n\n\nfunction disabledDate(current) {\n    // Can not select days before today and today\n    return current && current < moment().endOf('day');\n}\n\nfunction compareday(date) {\n    if (new Date(date).getTime() > new Date().getTime()) {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunction formatxArrayhalf(time, interval) {\n    var xAxisarray = []\n    if (interval === 24) {\n        for (let index = 0; index < 144; index++) {\n            xAxisarray.push(time + (index * 10 * 60 * 1000))\n        }\n    }\n    if (interval === 18) {\n        for (let index = 0; index < 18; index++) {\n            xAxisarray.push(time + (60 * 60 * 1000 * 2) + (index * 60 * 60 * 1000 * 4))\n        }\n    }\n\n    if (interval === 21) {\n        for (let index = 0; index < 21; index++) {\n            xAxisarray.push(time + (60 * 60 * 1000 * 4) + (index * 60 * 60 * 1000 * 8))\n        }\n    }\n    if (interval === 14) {\n        for (let index = 0; index < 14; index++) {\n            xAxisarray.push(time + (60 * 60 * 1000 * 12) + (index * 60 * 60 * 1000 * 24))\n        }\n    }\n    return xAxisarray\n}\n\n\nfunction formatendtime(time) {\n    const endtime = new Date(yyyymmddformat(time)).getTime() + (31 * 60 * 60 * 1000)\n    return endtime\n}\n\nfunction formatintervaldays(days, interval) {\n    //false:一天 true:三天\n    if (interval === 1) {\n        return days - (24 * 60 * 60 * 1000) * 1\n\n    }\n    if (interval === 3) {\n        return days - (24 * 60 * 60 * 1000) * 3\n\n    }\n    else {\n        return null\n    }\n}\n\nfunction datestringformat(datestring) {\n    function addzero(value) {\n        if (value < 10) {\n            return \"0\" + value\n        }\n        return value\n    }\n    const datenumber = Number(datestring)\n    const dateformat = parseInt(datenumber / 10000) + '/' + parseInt(parseInt(datenumber / 100) % 100) + '/' + addzero(parseInt(datenumber % 100))\n    return dateformat\n}\n\nfunction apiyyyymmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + \"-\" + Monthformat(new Date(timestamp).getMonth()) + \"-\" + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction nisapiyyyymmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + Monthformat(new Date(timestamp).getMonth()) + Dateformat(new Date(timestamp).getDate())\n}\nexport {\n    yyyymmddformat,\n    weekdateformat,\n    hhmmssformat,\n    mmddformat,\n    MMDDhhmmfromat,\n    daysdiff,\n    disabledDate,\n    compareday,\n    weekdateformatcalender,\n    yyyymmfirstweeksate,\n    hhmmssformattohalf,\n    formatxArrayhalf,\n    formatendtime,\n    formatintervaldays,\n    datestringformat,\n    yyyymmddHHmmfromat,\n    yyyymmddstring,\n    apiyyyymmddformat,\n    nisapiyyyymmddformat,\n    HISAPI_stringtodate\n}\n","import React, { Component } from 'react';\nimport Labviewitem from './Labviewitem'\n// import { labdata } from '../../Data/Wardviewdata'\nimport * as FiliterReg from '../../Function/FiliterReg'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport moment from 'moment'\nimport * as ApiGithub from '../../API/ApiGithub'\n\nvar MG_VALUE, PROC_VALUE, CA_VALUE;\nclass Labviewlayout extends Component {\n    state = {\n        parser: [{ \"apply_condition\": { \"name\": \"\" }, \"mappings\": [] }],\n        dummy_mg: null,\n        dummy_pct: null,\n        dummy_ca: null,\n\n        RESDGLU1: [],\n        RESLAB02: [],\n        RESLAB01: [],\n        RESDBGAS: [],\n        RESLAB0C: [],\n        RESSECT: [],\n\n        prePickerDate: null,\n        preHID: null,\n        preTRDT: null\n    }\n    componentDidMount() {\n        ApiGithub.getGitHubJson(\"Labview.json\")\n            .then(result => {\n                console.log(\"getGitHubJson Labview.json OK \" + JSON.stringify(result.data));\n                this.setState({\n                    parser: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getGitHubJson Labview.json NG \" + JSON.stringify(err));\n            })\n        const { PickerDate, caseinfo } = this.props\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        this.setState({ prePickerDate: PickerDate, preHID: caseinfo.HISID, preTRDT: TRDT })\n        this.getLabData(PickerDate, caseinfo.HISID, TRDT)\n    }\n\n    componentDidUpdate() {\n        const { PickerDate, caseinfo } = this.props\n        const { prePickerDate, preHID, preTRDT } = this.state\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        console.log(prePickerDate, PickerDate)\n        console.log(caseinfo.HISID, preHID)\n        console.log(TRDT, preTRDT)\n        if (prePickerDate !== PickerDate || preHID !== caseinfo.HISID || preTRDT !== TRDT) {\n            this.setState({ prePickerDate: PickerDate, preHID: caseinfo.HISID, preTRDT: TRDT })\n            this.getLabData(PickerDate, caseinfo.HISID, TRDT)\n        }\n    }\n    getLabData(PickerDate, HID, TRDT) {\n        function selectMonthInterval(PickerDate) {\n            const timestampInterval = new Date().getTime() - PickerDate\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        const TransinDate = moment(TRDT).format(\"YYYY-MM-DD\")\n        const MonthInterval = selectMonthInterval(PickerDate)\n        ApiProvider.getStoredProcedureRESDGLU1(HID, TransinDate)\n            .then(data => { this.setState({ RESDGLU1: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESDGLU1 NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESLAB02(HID, TransinDate)\n            .then(data => { this.setState({ RESLAB02: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESLAB02 NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESLAB01(HID, TransinDate)\n            .then(data => { this.setState({ RESLAB01: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESLAB01 NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESDBGAS(HID, TransinDate)\n            .then(data => { this.setState({ RESDBGAS: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESDBGAS NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESLAB0C(HID, TransinDate)\n            .then(data => { this.setState({ RESLAB0C: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESLAB0C NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESSECT(HID, MonthInterval, \"ALL\", \"DOC3924B\")\n            .then(data => { this.setState({ RESSECT: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESSECT NG \" + JSON.stringify(err)) });\n    }\n    findLastestTargetValue(arr, target) {\n        const { caseinfo } = this.props\n        const { parser } = this.state\n        let latestTimestamp = 0;\n        let latestvalue = undefined;\n        const selected_parser = parser.find(item => item.apply_condition.name.match(target) !== null);\n        const arrayLength = arr.length;\n        const { preHID } = this.state\n        if (preHID !== caseinfo.HISID) {\n            arr.forEach((item, index) => {\n                ApiProvider.getStoredProcedureRESDISP(caseinfo.HISID, item.ORMM, caseinfo.CASEID, item.ORDSEQNO)\n                    .then(data => {\n                        console.log(\"getStoredProcedureRESDISP OK \" + JSON.stringify(data.data));\n                        const RESDISP = data.data\n\n                        //search for target\n                        const selected_mapping = selected_parser.mappings.find(mapping => mapping.key === target)\n                        const re = new RegExp(selected_mapping.regex_str, selected_mapping.regex_flags)\n\n                        RESDISP.forEach(element => {\n                            const match = element.CONTENT.match(re)\n                            if (match !== null) {\n                                const currentTimeStr = item.ORRCPDT + \"-\" + item.ORRCPTM\n                                const currentItemTimestamp = moment(currentTimeStr.trim(), \"YYYY-MM-DD-HH.mm.ss\").valueOf()\n                                const matchValue = match[selected_mapping.position]\n\n                                if (matchValue !== \"\" && matchValue !== undefined && matchValue !== null && currentItemTimestamp > latestTimestamp) {\n                                    latestvalue = matchValue\n                                    if (target === \"mg\") {\n                                        MG_VALUE = latestvalue\n                                    } else if (target === \"pct\") {\n                                        PROC_VALUE = latestvalue\n                                    } else if (target === \"ca\") {\n                                        CA_VALUE = latestvalue\n                                    }\n                                }\n                            }\n                        })\n                        this.updateLabviewIfNeed(arrayLength, index, target)\n                    })\n                    .catch(err => {\n                        console.log(\"getStoredProcedureRESDISP NG \" + JSON.stringify(err));\n                        this.updateLabviewIfNeed(arrayLength, index, target)\n                    });\n            })\n        }\n    }\n    updateLabviewIfNeed(arrayLength, currentIdx, target) {\n        const retryMax = 3\n        const { dummy_mg, dummy_pct, dummy_ca } = this.state\n        if (dummy_mg === null || dummy_pct === null || dummy_ca === null) {\n            if (currentIdx === arrayLength - 1) {\n                if (target === \"mg\" && this.state.dummy_mg < retryMax) {\n                    this.setState({ dummy_mg: this.state.dummy_mg + 1 })\n                } else if (target === \"pct\" && this.state.dummy_pct < retryMax) {\n                    this.setState({ dummy_pct: this.state.dummy_pct + 1 })\n                } else if (target === \"ca++\" && this.state.dummy_ca < retryMax) {\n                    this.setState({ dummy_ca: this.state.dummy_ca + 1 })\n                }\n            }\n        }\n    }\n    TitleRender() {\n        const { Source } = this.props\n        if (Source === \"Wardview\") {\n            return null\n        }\n        else return (\n            <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                <t1 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>最近實驗室數據</t1>\n            </div>\n        );\n    }\n    render() {\n        function ListEndData(array) {\n            if (array.length === 0) {\n                return \"--\"\n            }\n            return array[array.length - 1]\n        }\n        // const data = labdata.data\n        const { PickerDate, Source } = this.props\n        const { RESDGLU1, RESLAB02, RESLAB01, RESDBGAS, RESSECT } = this.state\n\n        const RESDGLU1LIST = FiliterReg.ListForTime(RESDGLU1, PickerDate)\n        const RESLAB02LIST = FiliterReg.ListForTime(RESLAB02, PickerDate)\n        const RESLAB01LIST = FiliterReg.ListForTime(RESLAB01, PickerDate)\n        const RESDBGASLIST = FiliterReg.ListForTime(RESDBGAS, PickerDate)\n        // const RESLAB0CLIST = FiliterReg.ListForTime(RESLAB0C, PickerDate)\n\n        const RESSECT_CA_LIST = FiliterReg.ListForTimeAndTarget(RESSECT, PickerDate, \"Ca\")\n        this.findLastestTargetValue(RESSECT_CA_LIST, \"ca\")\n\n        const RESSECT_MG_LIST = FiliterReg.ListForTimeAndTarget(RESSECT, PickerDate, \"Mg\")\n        this.findLastestTargetValue(RESSECT_MG_LIST, \"mg\")\n\n        const RESSECT_PROC_LIST = FiliterReg.ListForTimeAndTarget(RESSECT, PickerDate, \"Procalcitonin\")\n        this.findLastestTargetValue(RESSECT_PROC_LIST, \"pct\")\n\n        const GLUFAST = ListEndData(RESDGLU1LIST.filter(function (value, index, array) {\n            return value.GLUFAST !== null\n        }))\n        const WBC = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV01 !== null\n        }))\n        const SEG = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV14 !== null\n        }))\n        const LYMP = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV15 !== null\n        }))\n        const HGB = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV03 !== null\n        }))\n        const PLATELET = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV09 !== null\n        }))\n        const NA = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV13 !== null\n        }))\n        const K = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV14 !== null\n        }))\n        const CA = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV15 !== null\n        }))\n        const P = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV17 !== null\n        }))\n        const ALB = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV02 !== null\n        }))\n        const CRP = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV30 !== null\n        }))\n        const PH = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS07 !== null\n        }))\n        const PCO2 = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS06 !== null\n        }))\n        const BE = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS01 !== null\n        }))\n        const PO2 = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS08 !== null\n        }))\n        const BUN = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV05 !== null\n        }))\n        //02\n        const CR = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV06 !== null\n        }))\n        const ALT = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV11 !== null\n        }))\n        const AST = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV12 !== null\n        }))\n        const TBIL = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV08 !== null\n        }))\n        const DBIL = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV25 !== null\n        }))\n        const ALKP = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV09 !== null\n        }))\n        const TOTALCA = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV03 !== null\n        }))\n        const IRON = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV26 !== null\n        }))\n        const TIBC = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV27 !== null\n        }))\n        const FERRITIN = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV03 !== null\n        }))\n        const FeSat = feSatformat(IRON, TIBC)\n        function feSatformat(IRON, TIBC) {\n            console.log(IRON)\n            if (IRON === null || IRON.RSV26 === null || IRON.RSV26 === undefined || Number(IRON.RSV26) === 0) {\n                return null\n            }\n            if (TIBC === null || TIBC.RSV27 === null || TIBC.RSV27 === undefined || Number(TIBC.RSV27) === 0) {\n                return null\n            }\n            return parseFloat(Number(IRON.RSV26) / Number(TIBC.RSV27)).toFixed(2)\n        }\n        function areainterval(source) {\n            if (source === \"Wardview\") {\n                return \"0px\"\n            }\n            else return \"10px\"\n        }\n\n        function nullvalue(value) {\n            if (value === undefined || value === null || value === NaN) {\n                return null\n            }\n            return value.toString().trim()\n        }\n        const TitleR = this.TitleRender()\n        return (\n            <div >\n                {TitleR}\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", gridColumnGap: areainterval(Source) }}>\n                    <div style={{ border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(GLUFAST.GLUFAST)} title={\"Glucose\"} time={(GLUFAST)}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(WBC.RSV01)} title={\"WBC\"} time={WBC}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(SEG.RSV14)} title={\"Seg\"} time={SEG}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(LYMP.RSV15)} title={\"Lymp\"} time={LYMP}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(HGB.RSV03)} title={\"Hgb\"} time={HGB}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PLATELET.RSV09)} title={\"Platelet\"} time={PLATELET}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"5fr 1fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(NA.RSV13)} title={\"Na\"} time={NA}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(K.RSV14)} title={\"K\"} time={K}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(CA_VALUE)} title={\"Ca\"} time={CA}></Labviewitem> {/*parse*/}\n                        <Labviewitem Source={Source} value={nullvalue(P.RSV17)} title={\"P\"} time={P}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(MG_VALUE)} title={\"Mg\"} time={null}></Labviewitem> {/*parse*/}\n                    </div>\n                    <div style={{ border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(ALB.RSV02)} title={\"ALB\"} time={ALB}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 4fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(CRP.RSV30)} title={\"CRP\"} time={CRP}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PROC_VALUE)} title={\"PCT\"} time={null}></Labviewitem>  {/*parse*/}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(PH.SS07)} title={\"pH\"} time={PH}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PCO2.SS06)} title={\"PCO\"} time={PCO2}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(BE.SS01)} title={\"BE\"} time={BE}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PO2.SS08)} title={\"PO\"} time={PO2}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 2fr 2fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(BUN.RSV05)} title={\"BUN\"} time={BUN}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(CR.RSV07)} title={\"Cr\"} time={CR}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(ALT.RSV11)} title={\"ALT\"} time={ALT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(AST.RSV12)} title={\"AST\"} time={AST}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(TBIL.RSV08)} title={\"TBil\"} time={TBIL}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(DBIL.RSV25)} title={\"DBil\"} time={DBIL}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 4fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(ALKP.RSV09)} title={\"ALK-P\"} time={ALKP}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(TOTALCA.RSV03)} title={\"Total Ca\"} time={TOTALCA}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(IRON.RSV26)} title={\"Iron\"} time={IRON}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(TIBC.RSV27)} title={\"TIBC\"} time={TIBC}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(FeSat * 100)} title={\"FeSat\"} time={null}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(FERRITIN.RSV03)} title={\"Ferritin\"} time={FERRITIN}></Labviewitem> {/* No Data */}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Labviewlayout\n","import React, { Component } from 'react';\nimport Bedinformation from './Bedinfo'\nimport { DatePicker, Button } from 'antd';\nimport moment from 'moment';\nimport * as apiProvide from '../API/ApiProvider'\nimport { yyyymmddformat } from '../Function/Timeformat'\nimport './WardBedinformation.scss'\n\nclass Wardbedinformation extends Component {\n    state = {\n        subselectdate: null,\n        selectid: null,\n        PickerDate: moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf(),\n        bedinfo: []\n    }\n    componentDidMount() {\n        this.apiData(this.state.PickerDate)\n    }\n    apiData(PickerDate) {\n        apiProvide.getWardDebInfo(moment(PickerDate).format(\"YYYY-MM-DD\"))\n            .then(data => {\n                this.setState({ bedinfo: data.data })\n            })\n            .catch(err => { console.log(err) })\n    }\n    onChangeDate = (date, datestring) => {\n        this.setState({\n            PickerDate: date.valueOf(),\n            selectid: null\n        }, () => { this.apiData(this.state.PickerDate) })\n    }\n    callbackFunction = (idnumber) => {\n        this.setState({\n            selectid: idnumber.idkey,\n            subselectdate: idnumber.time\n        })\n    }\n    transferListlayout(trans) {\n        const RenderCell = trans.map(function (element, index, arr) {\n            return (\n                <div className='wardbedinfoitemcontextgridRow'>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>{element.caseid}</t2>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>{element.pnamec}</t2>\n                </div>\n            );\n        })\n        return (\n            <div>\n                <div className='wardbedinfoitemcontextgridRow'>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>病歷號碼</t2>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>姓名</t2>\n                </div>\n                {RenderCell}\n            </div>\n        );\n    }\n    infoitem() {\n        const selectDateitem = this.state.subselectdate\n        const bedinfo = this.state.bedinfo\n        const filterdate = bedinfo.filter(function (info, index) {\n            const tempDate = moment(info.Date, 'YYYYMMDD')\n            return yyyymmddformat(tempDate) === yyyymmddformat(selectDateitem)\n        })\n\n        if (this.state.selectid === null) {\n            return null\n        }\n        else {\n            const inType = filterdate.length === 0\n            const outType = filterdate.length === 0\n\n            const transIn = filterdate.length === 0 ? 0 : filterdate[0].transoutIncountperson\n            const transOut = filterdate.length === 0 ? 0 : filterdate[0].transoutOutcountperson\n\n            return (\n                <div>\n                    <div className='wardbedinfoitemcontext'>\n                        <div className='wardbedinfoitemcontextgrid'>\n                            <div>\n                                <t2 className='wardbedinfoitemcontexttitle'>轉入病人清單</t2>\n                                <div className='wardbedinfoitemcontextgridlayout'>\n                                    {inType ? <div className='nopatient'>無病人</div> : this.transferListlayout(transIn)}\n                                </div>\n                            </div>\n                            <div>\n                                <t2 className='wardbedinfoitemcontexttitle'>轉出病人清單</t2>\n                                <div className='wardbedinfoitemcontextgridlayout'>\n                                    {outType ? <div className='nopatient'>無病人</div> : this.transferListlayout(transOut)}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n            // }\n        }\n\n    }\n    bedinfotitle() {\n        const maparray = ['日期', '佔床數', '轉出', '轉入', '侵入式呼吸器', '非侵入式呼吸器', '開立PN']\n        const title = maparray.map(function (info, index) {\n            return (\n                <div className='wardbedinfotablerowtitle'>\n                    <t2>{info}</t2>\n                </div>\n            );\n        })\n        return title\n    }\n    weekbedinfo() {\n        var infolist = []\n        const infoList = this.state.bedinfo\n        const dateTime = this.state.PickerDate\n        for (let i = 0; i < 7; i++) {\n            const localtime = dateTime - (i * 24 * 60 * 60 * 1000);\n            const filterdate = infoList.filter(function (info, index) {\n                const tempDate = moment(info.Date, 'YYYYMMDD').valueOf()\n                return tempDate === localtime\n            })\n            // console.log(filterdate)\n            if (filterdate.length === 0) {\n                infolist.push(\n                    <div >\n                        <Bedinformation data={null} key={i} localtime={localtime} selectkey={this.state.selectid} idkey={i} parentCallback={this.callbackFunction}></Bedinformation>\n                    </div>\n                )\n            }\n            else {\n                infolist.push(\n                    <div >\n                        <Bedinformation data={filterdate[0]} key={i} localtime={localtime} selectkey={this.state.selectid} idkey={i} parentCallback={this.callbackFunction}></Bedinformation>\n                    </div>\n                )\n            }\n        }\n        infolist.reverse()\n        return infolist\n\n    }\n\n    trainDay = (e) => {\n        // const { caseinfo } = this.props\n        const { PickerDate } = this.state\n        // const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        // const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                // const bTemp = bTime - (6 * day)\n                // bronDate <= bTemp && this.onChange(moment(bTime))\n                this.onChangeDate(moment(bTime))\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD'))\n                this.onChangeDate(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= aTemp && this.onChangeDate(moment(aTime))\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        return (\n            <div style={{ marginTop: \"10px\" }}>\n                <div className='wardbrdinfomationtitle'>\n                    <centerstyle>\n                        <t2 style={{ fontSize: \"16px\", color: \"rgba(0, 0, 0, .7)\" }}>病房每日統計</t2>\n                        <t2 style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"rgba(0, 0, 0, .7)\", paddingLeft: \"10px\" }}>每日上午七點統計</t2>\n                    </centerstyle>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"140px 120px\", gridColumnGap: \"5px\" }}>\n                        <DatePicker getCalendarContainer={triggerNode => triggerNode.parentNode} showToday={true} disabledDate={(current) => { return current && current > moment().startOf('day') }} value={moment(this.state.PickerDate)} format={\"YYYY/MM/DD\"} onChange={this.onChangeDate} allowClear={false} />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\", marginLeft: \"10px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"minus-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                    </div>\n                </div>\n                <div className='wardbedinformationcontext'>\n                    <div>\n                        {this.bedinfotitle()}\n                    </div>\n                    {this.weekbedinfo()}\n                </div>\n                {this.infoitem()}\n            </div>\n        );\n    }\n}\n\nexport default Wardbedinformation;\n","import React, { Component } from 'react';\nimport detaillogo from '../Image/svg/details.svg'\nimport editlogo from '../Image/svg/Edit.svg'\nimport { Tooltip, Input, Button } from 'antd';\nimport './Schedule_event.scss'\nimport * as ApiProvider from '../API/ApiProvider';\n//資料\n// import { eventdata } from '../jsonResponse'\nimport moment from 'moment';\n\nconst parseBedNumber = (bedNumber) => {\n    if (Number.isInteger(bedNumber)) {\n        return bedNumber > 9 ? bedNumber : `0${bedNumber.toString()}`;\n    }\n\n    return '00'\n}\n\nclass Schedule_event_list extends Component {\n    state = {\n        detailstate: \"none\",\n        // pressitemstate: \"all\",\n        items_interval: 0,\n        powerLogin: 0,\n        EditMode: false,\n        inputContent: '',\n        selSchedule: '排程',\n\n        Scheduledata: [],\n        status: false,\n        PickerDate: moment().valueOf(),\n        TRANSINID: null\n    }\n\n    querySchedule(time, ID) {\n        const timeDate = moment(time).format(\"YYYY-MM-DD\")\n        // const et = moment(moment(time).format(\"YYYY/MM/DD\"), \"YYYY/MM/DD\").valueOf() + (24 * 60 * 60 * 1000)\n        // console.log(ID, st, et)\n        ApiProvider.getOnePatientSchedule(ID, timeDate)\n            .then(data => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n                this.setState({ Scheduledata: data.data })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }\n\n    queryALLSchedule() {\n        // ApiProvider.getAllSchedule()\n        //     .then(data => {\n        //         console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n        //         this.setState({ Scheduledata: data.data })\n        //     })\n        //     .catch(err => {\n        //         console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n        //     });\n        const date = this.props.PickerDate\n        const selectdate = moment(date).format(\"YYYY-MM-DD\")\n        console.log(selectdate)\n        ApiProvider.getAllPatientFromDate(selectdate)\n            .then(data => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n                this.setState({ Scheduledata: data.data })\n            })\n            .catch(err => {\n                console.log(\"getAllPatientFromDate NG \" + JSON.stringify(err));\n            })\n    }\n    componentDidMount() {\n        this.onInputChange = this.onInputChange.bind(this);\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        const source = this.props.source\n        if (source === 1) {\n            const ID = this.props.caseinfo.TRANSINID\n            const date = this.props.PickerDate\n            console.log(this.props.caseinfo)\n            if (ID === null) {\n\n            }\n            else {\n                this.setState({\n                    PickerDate: date,\n                    TRANSINID: ID\n                })\n                this.querySchedule(date, ID)\n            }\n        }\n        else {\n            //get ALL\n            this.queryALLSchedule()\n        }\n\n    }\n\n    componentDidUpdate() {\n        const source = this.props.source\n        if (this.state.status) {\n            this.setState({ status: false })\n            if (source === 1) {\n                const ID = this.props.caseinfo.TRANSINID\n                this.querySchedule(this.state.PickerDate, ID)\n            }\n            else {\n                //get ALL\n                this.queryALLSchedule()\n            }\n        }\n        const propsDate = this.props.PickerDate\n        const stateDate = this.state.PickerDate\n        if (propsDate !== stateDate) {\n            this.setState({ PickerDate: propsDate })\n            if (source === 1) {\n                const ID = this.props.caseinfo.TRANSINID\n                console.log(moment(propsDate).format(\"YYYYMMDDHHmmss\"))\n                console.log(moment(stateDate).format(\"YYYYMMDDHHmmss\"))\n                this.querySchedule(propsDate, ID)\n            }\n            else {\n                //get ALL\n            }\n        }\n    }\n    selSchedule(value) {\n        this.setState({ selSchedule: value })\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n    onClickEnter() {\n        console.log(this.state.PickerDate)\n        const timeNowStr = new Date().toISOString()\n        console.log(timeNowStr)\n        const writter = sessionStorage.getItem(\"user\")\n        const name = this.props.caseinfo.PBASINGNINFO.PNAMEC\n        const hisid = this.props.caseinfo.HISID\n        const date = this.props.PickerDate\n        const selectdate = moment(date).format(\"YYYY-MM-DD\")\n        console.log(date)\n        console.log(selectdate)\n        ApiProvider.createPatientSchedule(this.props.caseinfo.PLOCSTART.HBEDNO, this.state.inputContent, timeNowStr, this.props.caseinfo.TRANSINID, this.state.selSchedule, writter, name, hisid, selectdate)\n            .then(data => {\n                console.log(\" OK \" + JSON.stringify(data.data))\n                this.setState(\n                    {\n                        EditMode: false,\n                        inputContent: undefined,\n                        status: true\n                    })\n            })\n            .catch(err => {\n                console.log(\" Err \" + JSON.stringify(err))\n            })\n    }\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    timechange(timestamp) {\n        const changetime = new Date(timestamp).getHours() + \":\" + new Date(timestamp).getMinutes()\n        return changetime\n    }\n\n    // pressbtn(pressitem) {\n    //     this.setState(\n    //         {\n    //             pressitemstate: pressitem\n    //         }\n    //     );\n    // }\n    listevent() {\n        let ScheduleList = this.state.Scheduledata\n        console.log(ScheduleList)\n        if (ScheduleList.length === 0) {\n            return <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\" }}>\n                當日無排程\n                    </div>\n        }\n        // const RenderData = scheduleList(eventstate)\n\n        if (ScheduleList.length > 1) {\n            ScheduleList = ScheduleList.sort((a, b) => {\n                let tempTimeA = moment(moment(a.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss'), \"YYYYMMDD\").valueOf()\n                let tempTimeB = moment(moment(b.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss'), \"YYYYMMDD\").valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n        }\n\n        const CellRender = ScheduleList.map(function (info, index, arr) {\n            const time = moment(info.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n            const localTime = moment.utc(time).toDate()\n            const text = <div>{info.writter}醫師於{moment(localTime).format(\"YYYY/MM/DD HH:mm:ss\")}更新</div>\n            return (\n                <div key={index} className='CellLayout'>\n                    <div className='Context'>\n                        <div style={{ height: '30px', width: \"60px\", borderRadius: \"4px\", backgroundColor: \"rgba(124,179,5,1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <t2 style={{ color: 'white' }}>NI-{parseBedNumber(info.bednumber)}</t2>\n                            {/* itemchange(info.type) */}\n                        </div>\n                        <div style={{ fontSize: \"16px\" }}>\n                            {info.name}\n                            {/* {moment(localTime).format(\"HH:mm\")}  */}\n                            {info.context}\n                        </div>\n                    </div>\n                    <Tooltip placement=\"right\" title={text}>\n                        <div>\n                            <img src={detaillogo} alt='detaillogo'></img>\n                        </div>\n                    </Tooltip>\n                </div>\n            );\n        })\n        return CellRender\n    }\n\n\n    //測驗項目功能_區間按鈕樣式\n    // SwitchTestItemInterval(testiteminterval) {\n    //     const stylestate = this.state.pressitemstate\n    //     if (testiteminterval === stylestate) {\n    //         return 'buttonselect'\n    //     }\n    //     else return 'buttonUnselect'\n    // }\n    //測驗項目功能_區間按鈕選擇\n    Onchangetimeinterval(changestate) { this.setState({ items_interval: changestate }) }\n    EditControl() {\n        const edit = this.props.editstatus\n        if (edit) {\n            return (\n                <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                    <img src={editlogo} alt=\"editlogo\" />\n                </div>\n            );\n        }\n        return null\n    }\n    render() {\n        const { title } = this.props\n        const EditButton = this.EditControl()\n        return (\n            <div className='ScheduleEventLayout'>\n                <div className='ScheduleEventTitle'>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t2>\n                    {EditButton}\n                </div>\n                <div className='ScheduleEventContext'>\n                    <div className='ContextList'>\n                        {this.listevent()}\n                    </div>\n                </div>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div value='排程' style={{ display: \"grid\", width: 150, height: \"32px\", justifyContent: \"center\", alignItems: \"center\", border: \"1px solid #d9d9d9\", borderRadius: \"4px\", marginRight: \"5px\" }}>排程</div>\n                        <Input placeholder=\"輸入當日內容\" value={this.state.inputContent} onChange={this.onInputChange}></Input>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Schedule_event_list\n","import React, { Component } from 'react';\nimport Schedule_event_list from '../Module/Schedule_event'\nimport moment from 'moment';\n\nclass Wardschedule extends Component {\n\n    render() {\n        return (\n            <Schedule_event_list  PickerDate={moment(moment().format(\"YYYYMMDD\"),\"YYYYMMDD\").valueOf()}  source={this.props.source} title=\"今日排程\" data={this.props.scheduleData} editstatus={this.props.editstatus} />\n        );\n    }\n}\n\n\nexport default Wardschedule\n","import React, { Component } from 'react';\nimport WardcardNote from './Wardnote'\nimport Wardbedinformation from './WardBedinformation'\nimport Wardschedule from './Wardschedule'\nimport './Wardinfoindex.scss'\n// import * as ApiProvider from '../API/ApiProvider';\n\n// const SCHEDULE_TYPE_EVENT = \"事件\";\n\nclass Wardinfoindex extends Component {\n    render() {\n        return (\n            <div className='Wardinfoindexcontent'>\n                <div style={{ fontSize: \"22px\", color: \"rgba(0, 0, 0, .7)\", fontWeight: \"600\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>NICU總覽</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"5px\", marginTop: \"10px\" }}>\n                    <WardcardNote></WardcardNote>\n                    <Wardschedule source={0} editstatus={false}></Wardschedule>\n                </div>\n                <Wardbedinformation></Wardbedinformation>\n            </div>\n        );\n    }\n}\n\nexport default Wardinfoindex;\n","// Get api\n\n\n\n//資料更新時間\nconst updatetime = {\n    'time': 1567051200000\n}\n\nconst eventdata = [\n    {\n        \"item\": \"schedule\",\n        \"time\": 1565748000000,\n        \"result\": \"手術前檢查\",\n        \"name\": \"林博偉\",\n        \"bednumber\": \"01\",\n        \"writter\": \"林天財\"\n    },\n    {\n        \"item\": \"event\",\n        \"time\": 1565748000000,\n        \"result\": \"傷口變大了\",\n        \"name\": \"王添財\",\n        \"bednumber\": \"02\",\n        \"writter\": \"林天財\"\n    }\n]\n\n//Ward_bed_vitalData_last POST\nconst ward_bed_lastData = [\n    {\n        \"MedicalNumber\": \"123456789\",\n        \"Data\": {\n            \"HR\": 120,\n            \"ABP1\": 45,\n            \"ABP2\": 30,\n            \"ABP3\": 35,\n            \"SpO2\": 96,\n            \"BT\": 37.5,\n            \"RR\": 22\n        },\n        \"Status\": {\n            \"Ventilator\": false,\n            \"TPN\": true,\n            \"NPO\": false,\n            \"ECMO\": false,\n            \"Antibiotics\": false,\n            \"Hemodialysis\": false,\n            \"Foley\": false,\n            \"Drain\": false\n        }\n    },\n    {\n        \"MedicalNumber\": \"987654321\",\n        \"Data\": {\n            \"HR\": 120,\n            \"ABP1\": 45,\n            \"ABP2\": 30,\n            \"ABP3\": 35,\n            \"SpO2\": 96,\n            \"BT\": 37.5,\n            \"RR\": 22\n        }\n    },\n    {\n        \"MedicalNumber\": \"123454321\",\n        \"Data\": {\n            \"HR\": 120,\n            \"ABP1\": 45,\n            \"ABP2\": 30,\n            \"ABP3\": 35,\n            \"SpO2\": 96,\n            \"BT\": 37.5,\n            \"RR\": 22\n        }\n    }\n]\n\nconst WardInfo = {\n    UpdateTime: 1567051200000,\n    Director: \"林又新\",\n    HeadNurse: \"鄭麗貞\",\n    BedTotal: 12,\n    SignBed: 7,\n    EmptyBed: 9,\n    TransferBed: 8,\n    NewPatient: 2,\n    Ventilator: 1,\n    NPO: 7,\n    TPN: 4,\n    ECMO: 8,\n    Antibiotics: 6,\n    Hemodialysis: 1,\n    Announcement: [\n        {\n            time: 1567051200000,\n            text: \"7/10 王大明醫師請假，下午請李小華醫師cover ，6/30XXX醫師留\",\n            writter: \"張大帥\"\n        },\n        {\n            time: 1567051250000,\n            text: \"「超音波用完請記得歸還原位」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        }\n    ]\n}\nconst labdata = [\n    [{ title: \"Glucose\", score: 77, date: \"2019/01/01\" }],\n    [{ title: \"WBC\", score: 19647, date: \"Seg 59%2019/01/01\" }],\n    [{ title: \"WBC\", score: 14.8, date: \"2019/01/01\" }],\n    [{ title: \"Platelet\", score: 125, date: \"2019/01/01\" }],\n    [\n        { title: \"Na+\", score: 125, date: \"2019/01/01\" },\n        { title: \"K+\", score: 125, date: \"2019/01/01\" },\n        { title: \"Ca2+\", score: 125, date: \"2019/01/01\" },\n        { title: \"P\", score: 125, date: \"2019/01/01\" },\n        { title: \"Mg2+\", score: 125, date: \"2019/01/01\" },\n    ],\n    [\n        { title: \"CRP\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Procalcitionin\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Current Antibiotics\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Bun\", score: 125, date: \"2019/01/01\" },\n        { title: \"Cr\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"ALT\", score: 125, date: \"2019/01/01\" },\n        { title: \"AST\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"TBIL\", score: 125, date: \"2019/01/01\" },\n        { title: \"D.Bil\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"ALKP\", score: 125, date: \"2019/01/01\" },\n        { title: \"Total Ca\", score: 125, date: \"2019/01/01\" },\n        { title: \"LDH\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Iron\", score: 125, date: \"2019/01/01\" },\n        { title: \"TIBC\", score: 125, date: \"2019/01/01\" },\n        { title: \"FeSat\", score: 125, date: \"2019/01/01\" },\n        { title: \"Ferritin\", score: 125, date: \"2019/01/01\" }\n    ]\n]\nconst jsonResponse = [\n    {\n        \"HISID\": \"H1234567\",\n        \"CASEID\": \"C1234567\",\n        \"name\": \"吳大胖之女\",\n        \"gender\": 1,\n        \"birthday\": \"2019/11/11\",\n        \"bednumber\": 1,\n        \"pregnancy\": \"2019/11/10\",\n        \"weightbirth\": 1400,\n        \"weight\": 2300,\n        'report': 3,\n        'nonreport': 3,\n        'note': '隨時注意病人血壓狀態隨時注意病人血壓狀態',\n        'type':'NIS',\n        'MainDoctor':'張大春',\n        'IcuInTime':'2019/11/11'\n    },\n    {\n        \"HISID\": \"H9876543\",\n        \"CASEID\": \"C12345622\",\n        \"name\": \"吳大胖之女\",\n        \"gender\": 1,\n        \"birthday\": \"2019/11/11\",\n        \"bednumber\": 2,\n        \"pregnancy\": \"2019/11/10\",\n        \"weightbirth\": 1400,\n        \"weight\": 2300,\n        'report': 3,\n        'nonreport': 3,\n        'note': '隨時注意病人血壓狀態隨時注意病人血壓狀態',\n        'type':'Custom',\n        'MainDoctor':'張大春',\n        'IcuInTime':'2019/11/11'\n    }\n]\n\n//Wardview TCP data\nconst centerrowdata = {\n    \"id\": 20190817001,\n    \"data\": {\n        \"Weight\": 5000,\n        \"WeightDif\": 700,\n        \"BP\": [\n            {\n                \"time\": 1565395200,\n                \"DBP\": 60,\n                \"SBP\": 90\n            }\n        ],\n        \"HR\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"RR\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"BT\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"Urine\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"Suger\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"SP\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ]\n    }\n}\n\nconst growdata = {\n    Male_befor: [\n        { y: 22, min: 420, max: 600 },\n        { y: 23, min: 470, max: 700 },\n        { y: 24, min: 510, max: 800 },\n        { y: 25, min: 570, max: 900 },\n        { y: 26, min: 610, max: 1040 },\n        { y: 27, min: 700, max: 1200 },\n        { y: 28, min: 790, max: 1340 },\n        { y: 29, min: 870, max: 1520 },\n        { y: 30, min: 1000, max: 1740 },\n        { y: 31, min: 1120, max: 2000 },\n        { y: 32, min: 1300, max: 2240 },\n        { y: 33, min: 1500, max: 2500 },\n        { y: 34, min: 1700, max: 2800 },\n        { y: 35, min: 1960, max: 3040 },\n        { y: 36, min: 2180, max: 3300 },\n        { y: 37, min: 2400, max: 3500 },\n        { y: 38, min: 2600, max: 3780 },\n        { y: 39, min: 2810, max: 3980 },\n        { y: 40, min: 3000, max: 4200 },\n        { y: 41, min: 3200, max: 4440 },\n        { y: 42, min: 3400, max: 4700 },\n        { y: 43, min: 3600, max: 5000 },\n        { y: 44, min: 3800, max: 5270 }\n    ],\n    FeMale_before: [\n        { y: 22, min: 400, max: 580 },\n        { y: 23, min: 430, max: 640 },\n        { y: 24, min: 490, max: 730 },\n        { y: 25, min: 550, max: 850 },\n        { y: 26, min: 580, max: 1000 },\n        { y: 27, min: 630, max: 1120 },\n        { y: 28, min: 700, max: 1300 },\n        { y: 29, min: 800, max: 1500 },\n        { y: 30, min: 900, max: 1700 },\n        { y: 31, min: 1050, max: 1910 },\n        { y: 32, min: 1200, max: 2180 },\n        { y: 33, min: 1400, max: 2400 },\n        { y: 34, min: 1600, max: 2680 },\n        { y: 35, min: 1850, max: 2930 },\n        { y: 36, min: 2050, max: 3200 },\n        { y: 37, min: 2300, max: 3490 },\n        { y: 38, min: 2480, max: 3700 },\n        { y: 39, min: 2680, max: 3900 },\n        { y: 40, min: 2820, max: 4100 },\n        { y: 41, min: 2980, max: 4300 },\n        { y: 42, min: 3150, max: 4520 },\n        { y: 43, min: 3300, max: 4740 },\n        { y: 44, min: 3500, max: 5000 }\n    ],\n    Male_after: [\n        { y: 0, min: 2500, max: 4300 },\n        { y: 1, min: 2600, max: 4500 },\n        { y: 2, min: 2800, max: 4900 },\n        { y: 3, min: 3100, max: 5200 },\n        { y: 4, min: 3400, max: 5600 },\n        { y: 5, min: 3600, max: 5900 },\n        { y: 6, min: 3800, max: 6300 }\n    ],\n    FeMale_after: [\n        { y: 0, min: 2400, max: 4200 },\n        { y: 1, min: 2500, max: 4400 },\n        { y: 2, min: 2700, max: 4600 },\n        { y: 3, min: 2900, max: 5000 },\n        { y: 4, min: 3100, max: 5300 },\n        { y: 5, min: 3300, max: 5600 },\n        { y: 6, min: 3500, max: 5900 }\n    ]\n}\n\nconst Note_data = [\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 }\n]\n\nconst todo_data = [\n    {\n        Time: 1566287810473,\n        Content: \"幫大明量體重\",\n        Flag: true,\n        Editor: \"修改者\"\n    },\n    {\n        Time: 1566287810473,\n        Content: \"幫大明量體重\",\n        Flag: true,\n        Editor: \"修改者\"\n    },\n    {\n        Time: 1566287810473,\n        Content: \"幫大明量體重\",\n        Flag: true,\n        Editor: \"修改者\"\n    }\n]\n\n\nexport { jsonResponse, centerrowdata, WardInfo, updatetime, ward_bed_lastData, labdata, eventdata, growdata, Note_data, todo_data };","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { growdata } from '../jsonResponse'\nimport moment from 'moment';\n\n//40週前\nclass WardlifeChart extends Component {\n    state = {\n        preWeight: null,\n    }\n    componentDidMount() {\n\n        const { weightList, svg_key, grewinfo } = this.props\n        console.log(grewinfo)\n        if (grewinfo !== undefined) {\n            if (grewinfo.WEEK_BORN !== undefined && grewinfo.DAY_BORN !== undefined) {\n                if (weightList !== undefined) {\n                    this.setState({ preWeight: weightList.length })\n                    d3.select(\"#\" + svg_key).remove()\n                    this.drawChart();\n                }\n            }\n        }\n    }\n\n    componentDidUpdate() {\n        const { weightList, svg_key, grewinfo } = this.props\n        const { preWeight } = this.state\n        console.log(grewinfo)\n        if (grewinfo !== undefined) {\n            if (grewinfo.WEEK_BORN !== undefined && grewinfo.DAY_BORN !== undefined) {\n                if (weightList !== undefined) {\n                    if (weightList.length !== preWeight) {\n                        this.setState({ preWeight: weightList.length })\n                        d3.select(\"#\" + svg_key).remove()\n                        this.drawChart();\n                    }\n                }\n            }\n        }\n\n    }\n\n    drawChart() {\n        const { gender, svg_key, weightList, grewinfo, width, height, id_key } = this.props\n        if (grewinfo === null || grewinfo === undefined) {\n            return null\n        }\n        console.log(grewinfo)\n        const bornweeks = Number(grewinfo.WEEK_BORN)\n        const borndays = Number(grewinfo.DAY_BORN)\n        const Birthday = grewinfo.BIRTHDAY\n        const pregencyTimestamp = moment(Birthday, \"YYYYMMDD\").valueOf() - ((bornweeks * 7) + borndays) * 24 * 60 * 60 * 1000\n\n\n        function tickValues(growdata, gender) {\n            if (gender === 'M' || gender === '1') {\n                const Row = growdata.Male_befor\n                return [Row[Row.length - 1].min, Row[Row.length - 1].max]\n            }\n            const Row = growdata.FeMale_before\n            return [Row[Row.length - 1].min, Row[Row.length - 1].max]\n        }\n\n        const tick = tickValues(growdata, gender)\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([0, 5500])\n            .range([height, 0])\n\n        var x = d3.scaleLinear()\n            .domain([22, 44])\n            .range([0, width])\n\n\n        var yAxis = d3.axisLeft(y)\n            .ticks(10)\n            .tickSize(0, 0)\n            .tickPadding(10)\n            .tickFormat(function (d, index) { return index === 11 ? d + \"(g)\" : d });\n\n\n        var xAxis = d3.axisTop(x)\n            .ticks(14)\n            .tickSize(0, 0)\n            .tickPadding(-15)\n            .tickFormat(function (d, index) { return d + 'W'; });\n\n        var yRightAxis = d3.axisLeft(y)\n            .tickValues(tick)\n            .tickSize(0, 0)\n            .tickPadding(-40)\n            .tickFormat(function (d, index) {\n                if (index === 0) {\n                    return \"10th%\"\n                }\n                if (index === 1) {\n                    return \"90th%\"\n                }\n                return null\n            });\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_key)\n            .style(\"height\", \"435px\")\n            .style(\"width\", \"100%\")\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 30 + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(\" + 0 + \", \" + height + \")\");\n\n        svg.append(\"g\")\n            .call(yRightAxis)\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(\" + width + \", \" + 0 + \")\");\n\n        for (let index = 0; index < 13; index++) {\n            const number = index * 500\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(number))\n                .attr('x2', width)\n                .attr('y2', y(number))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n\n        }\n\n        // for (let index = 0; index < 13; index++) {\n        //     const number = index * 500\n        //     svg.append('line')\n        //         .attr('x1', 0)\n        //         .attr('y1', y(number))\n        //         .attr('x2', width)\n        //         .attr('y2', y(number))\n        //         .style('stroke', 'rgba(187, 187, 187, 1)')\n        //         .style('stroke-width', 1)\n        //         .style('stroke-dasharray', 5.5);\n        // }\n\n        for (let index = 22; index < 45; index++) {\n            if (index % 2 == 0) {\n                svg.append('line')\n                    .attr('x1', x(index))\n                    .attr('y1', 0)\n                    .attr('x2', x(index))\n                    .attr('y2', height)\n                    .style('stroke', 'rgba(187, 187, 187, 1)')\n                    .style('stroke-width', 1)\n                    .style('stroke-dasharray', 5.5);\n            }\n        }\n\n        if (gender === 'M' || gender === '1') {\n            for (let index = 0; index < growdata.Male_befor.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_befor[index].y))\n                    .attr('y1', y(growdata.Male_befor[index].min))\n                    .attr('x2', x(growdata.Male_befor[index + 1].y))\n                    .attr('y2', y(growdata.Male_befor[index + 1].min))\n                    .style('stroke', '#001a6dbb')\n                    .style('stroke-width', 3);\n            }\n\n            for (let index = 0; index < growdata.Male_befor.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_befor[index].y))\n                    .attr('y1', y(growdata.Male_befor[index].max))\n                    .attr('x2', x(growdata.Male_befor[index + 1].y))\n                    .attr('y2', y(growdata.Male_befor[index + 1].max))\n                    .style('stroke', '#001a6dbb')\n                    .style('stroke-width', 3);\n            }\n        }\n        else {\n            for (let index = 0; index < growdata.FeMale_before.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_before[index].y))\n                    .attr('y1', y(growdata.FeMale_before[index].min))\n                    .attr('x2', x(growdata.FeMale_before[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_before[index + 1].min))\n                    .style('stroke', '#001a6dbb')\n                    .style('stroke-width', 3);\n            }\n\n            for (let index = 0; index < growdata.FeMale_before.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_before[index].y))\n                    .attr('y1', y(growdata.FeMale_before[index].max))\n                    .attr('x2', x(growdata.FeMale_before[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_before[index + 1].max))\n                    .style('stroke', '#001a6dbb')\n                    .style('stroke-width', 3);\n            }\n        }\n        const datasource = weightList\n        //x 週數 y體重 NIS\n        for (let index = 0; index < datasource.length; index++) {\n            const element = datasource[index];\n            const BornDay = element.rec_dat.toString().trim()\n            const BornTime = element.rec_tim.toString().trim()\n            const time = BornDay + BornTime\n            const weighttimestamp = moment(time, \"YYYYMMDDHHmm\").valueOf() //體重時間\n            const weeks = (weighttimestamp - pregencyTimestamp) / (7 * 24 * 60 * 60 * 1000) //體重週數\n            // console.log(weeks)\n            if (weeks < 22) {\n                continue\n            }\n            if (weeks > 44) {\n                continue\n            }\n            svg.append('circle')\n                .attr('cx', x(weeks))\n                .attr('cy', y(Number(element.value2) * 1000))\n                .attr('r', 1.5)\n                .style('fill', 'green')\n        }\n\n\n    }\n\n    render() {\n        const { id_key, svg_key } = this.props\n        return (\n            <div id={id_key}>\n\n            </div>\n        );\n    }\n}\n\nexport default WardlifeChart;\n","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { growdata } from '../jsonResponse'\nimport moment from 'moment'\n\n//40週後\nclass Wardmonthafter extends Component {\n    componentDidMount() {\n        const { weightList, svg_key } = this.props\n        this.setState({ preWeight: weightList })\n        d3.select(\"#\" + svg_key).remove()\n        this.drawChart();\n    }\n\n    componentDidUpdate() {\n        const { weightList, svg_key } = this.props\n        const { preWeight } = this.state\n        if (weightList !== preWeight) {\n            this.setState({ preWeight: weightList })\n            d3.select(\"#\" + svg_key).remove()\n            this.drawChart();\n        }\n    }\n    drawChart() {\n        const { gender, svg_key, weightList, grewinfo, width, height, id_key } = this.props\n        if (grewinfo === null || grewinfo === undefined) {\n            return null\n        }\n        const Birthday = grewinfo.BIRTHDAY\n        const pregencyTimestamp = moment(Birthday, \"YYYYMMDD\").valueOf()\n        //var vertigo = datarelease();\n\n        function tickValues(growdata, gender) {\n            if (gender === 'M' || gender === '1') {\n                const Row = growdata.Male_after\n                console.log(Row)\n                return [Row[Row.length - 1].min, Row[Row.length - 1].max]\n            }\n            const Row = growdata.FeMale_after\n            return [Row[Row.length - 1].min, Row[Row.length - 1].max]\n\n        }\n\n        const tick = tickValues(growdata, gender)\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([1500, 7000])\n            .range([height, 0])\n\n\n\n        var x = d3.scaleLinear()\n            .domain([0, 6])\n            .range([0, width])\n\n        var yAxis = d3.axisLeft(y)\n            .ticks(10)\n            .tickSize(0, 0)\n            .tickPadding(10)\n            .tickFormat(function (d, index) { return index === 11 ? d + \"(g)\" : d });\n\n        var yRightAxis = d3.axisLeft(y)\n            .tickValues(tick)\n            .tickSize(0, 0)\n            .tickPadding(-40)\n            .tickFormat(function (d, index) {\n                if (index === 0) { return \"10th%\" }\n                if (index === 1) { return \"90th%\" }\n                return null\n            });\n\n\n        var xAxis = d3.axisTop(x)\n            .ticks(6)\n            .tickSize(0, 0)\n            .tickPadding(-15)\n            .tickFormat(function (d) {\n                return d + \"m\";\n            });\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_key)\n            .style(\"height\", \"435px\")\n            .style(\"width\", \"100%\")\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 30 + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(\" + 0 + \", \" + height + \")\");\n\n\n        svg.append(\"g\")\n            .call(yRightAxis)\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(\" + width + \", \" + 0 + \")\");\n\n        for (let index = 0; index < 7; index++) {\n            svg.append('line')\n                .attr('x1', x(index))\n                .attr('y1', 0)\n                .attr('x2', x(index))\n                .attr('y2', height)\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n\n        }\n\n        for (let index = 1; index < 13; index++) {\n            const number = index * 500 + 1000\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(number))\n                .attr('x2', width)\n                .attr('y2', y(number))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n\n        }\n\n        // for (let index = 22; index < 45; index++) {\n        //     svg.append('line')\n        //         .attr('x1', x(index))\n        //         .attr('y1', 0)\n        //         .attr('x2', x(index))\n        //         .attr('y2', height)\n        //         .style('stroke', 'rgba(187, 187, 187, 1)')\n        //         .style('stroke-width', 1)\n        //         .style('stroke-dasharray', 5.5);\n        // }\n\n        if (gender === 'M' || gender === '1') {\n            for (let index = 0; index < growdata.Male_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_after[index].y))\n                    .attr('y1', y(growdata.Male_after[index].min))\n                    .attr('x2', x(growdata.Male_after[index + 1].y))\n                    .attr('y2', y(growdata.Male_after[index + 1].min))\n                    .style('stroke', '#001a6dbb')\n                    .style('stroke-width', 3);\n            }\n\n            for (let index = 0; index < growdata.Male_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_after[index].y))\n                    .attr('y1', y(growdata.Male_after[index].max))\n                    .attr('x2', x(growdata.Male_after[index + 1].y))\n                    .attr('y2', y(growdata.Male_after[index + 1].max))\n                    .style('stroke', '#001a6dbb')\n                    .style('stroke-width', 3);\n            }\n        }\n        else {\n            for (let index = 0; index < growdata.FeMale_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_after[index].y))\n                    .attr('y1', y(growdata.FeMale_after[index].min))\n                    .attr('x2', x(growdata.FeMale_after[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_after[index + 1].min))\n                    .style('stroke', '#001a6dbb')\n                    .style('stroke-width', 3);\n            }\n\n            for (let index = 0; index < growdata.FeMale_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_after[index].y))\n                    .attr('y1', y(growdata.FeMale_after[index].max))\n                    .attr('x2', x(growdata.FeMale_after[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_after[index + 1].max))\n                    .style('stroke', '#001a6dbb')\n                    .style('stroke-width', 3);\n            }\n        }\n\n        const datasource = weightList\n        //x時間 y體重\n        for (let index = 0; index < datasource.length; index++) {\n            const element = datasource[index];\n            const BornDay = element.rec_dat.toString().trim()\n            const BornTime = element.rec_tim.toString().trim()\n            const time = BornDay + BornTime\n            const weighttimestamp = moment(time, \"YYYYMMDDHHmm\").valueOf() //體重時間\n            const Month = (weighttimestamp - pregencyTimestamp) / (30 * 24 * 60 * 60 * 1000) //體重週數\n            console.log(Month)\n            if (Month < 0 || Month > 6) {\n                continue\n            }\n            if (Number(element.value2) * 1000 > 1500) {\n                svg.append('circle')\n                    .attr('cx', x(Month))\n                    .attr('cy', y(Number(element.value2) * 1000))\n                    .attr('r', 1.5)\n                    .style('fill', 'green')\n            }\n\n        }\n        // const datacustom = wardchartoncustom\n        // for (let index = 0; index < datacustom.length; index++) {\n        //     const element = datacustom[index];\n        //     svg.append('circle')\n        //         .attr('cx', x(element.x))\n        //         .attr('cy', y(element.y))\n        //         .attr('r', 3)\n        //         .style('fill', 'blue')\n        // }\n\n    }\n\n    render() {\n        const { id_key, svg_key } = this.props\n        return (\n            <div id={id_key}>\n                <svg id={svg_key}></svg>\n            </div>\n        );\n    }\n}\n\nexport default Wardmonthafter;\n","import React, { Component } from 'react';\nimport WardlifeChart from './Wardlifechart'\nimport Wardmonthafter from './Wardmonthafter'\n\n\nclass Wardgrewchart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            test_items_interval: 0,\n            preHID: null\n        };\n    }\n    componentDidMount() {\n        function WeekStatus(Week) {\n            console.log(Number(Week))\n            if (Number(Week) > 37) {\n                return 0\n            }\n            return 1\n        }\n        const { grewinfo, caseinfo } = this.props\n        if (grewinfo.WEEK_BORN !== undefined && grewinfo.DAY_BORN !== undefined && caseinfo.HISID !== undefined && caseinfo.HISID !== null) {\n            this.setState({ preHID: caseinfo.HISID, test_items_interval: WeekStatus(grewinfo.WEEK_BORN) })\n        }\n    }\n    componentDidUpdate() {\n        function WeekStatus(Week) {\n            console.log(Number(Week))\n            if (Number(Week) > 37) {\n                return 0\n            }\n            return 1\n        }\n        const { grewinfo, caseinfo } = this.props\n        const { preHID } = this.state\n        if (grewinfo.WEEK_BORN !== undefined && grewinfo.DAY_BORN !== undefined && caseinfo.HISID !== undefined && caseinfo.HISID !== null) {\n            if (preHID !== caseinfo.HISID) {\n                console.log(grewinfo)\n                this.setState({ preHID: caseinfo.HISID, test_items_interval: WeekStatus(grewinfo.WEEK_BORN) })\n            }\n        }\n    }\n    switch_monthy() {\n        const { Data, WeightList, grewinfo } = this.props\n        const switch_data = this.state.test_items_interval\n        const width = (window.screen.availWidth - 650) / 2, height = 350\n        switch (switch_data) {\n            case 0:\n                return <WardlifeChart width={width} height={height} grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife\"} svg_key={\"wardlife_svg\"} gender={Data.PSEX}></WardlifeChart>\n            case 1:\n                return <Wardmonthafter width={width} height={height} grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife_after\"} svg_key={\"wardlife_after_svg\"} gender={Data.PSEX}></Wardmonthafter>\n            default:\n                return null;\n        }\n    }\n    //測驗項目功能_區間按鈕樣式\n    SwitchTestItemInterval(testiteminterval) {\n        const time_selectbtn_style = {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"25px\",\n            padding: \"0px 5px\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#001a6dbb\",\n            color: \"white\",\n            fontSize: \"1rem\",\n            borderWidth: \"1px\",\n            borderStyle: \"solid\",\n            borderColor: \"#001a6d88\",\n            cursor: \"pointer\"\n        }\n        const time_unselectbtn_style = {\n            display: \"flex\", justifyContent: \"center\",\n            alignItems: \"center\", height: \"25px\",\n            padding: \"0px 5px\",\n            borderRadius: \"4px\", backgroundColor: \"white\",\n            color: \"#001a6d88\", fontSize: \"1rem\",\n            borderWidth: \"1px\", borderStyle: \"solid\",\n            borderColor: \"#001a6d88\",\n            cursor: \"pointer\"\n        }\n        if (testiteminterval === this.state.test_items_interval) {\n            return time_selectbtn_style\n        }\n        else return time_unselectbtn_style\n    }\n    //測驗項目功能_區間按鈕選擇\n    Onchangetimeinterval(changestate) {\n        this.setState({ test_items_interval: changestate })\n    }\n    render() {\n        // const switch_data = this.state.test_items_interval\n        return (\n            <div>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: 'center', backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>生長曲線圖</t2>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"5px\", alignItems: \"center\" }}>\n                        <div style={this.SwitchTestItemInterval(0)} onMouseUp={() => this.Onchangetimeinterval(0)}>40週前</div>\n                        <div style={this.SwitchTestItemInterval(1)} onMouseUp={() => this.Onchangetimeinterval(1)}>40週後</div>\n                    </div>\n                </div>\n                {this.switch_monthy()}\n            </div>\n        );\n    }\n}\nexport default Wardgrewchart\n","import React, { Component } from 'react';\nimport editlogo from '../../Image/svg/Edit.svg'\nimport detaillogo from '../../Image/svg/details.svg'\nimport { Tooltip, Input, Button } from 'antd';\nimport './Notice.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass Notice extends Component {\n    state = {\n        caseinfo: this.props.caseinfo,\n        EditMode: false,\n        noticeData: [],\n        inputContent: undefined,\n        powerLogin: 0,\n        preTRID: null,\n    }\n    componentDidMount() {\n        //bind function\n        this.onInputChange = this.onInputChange.bind(this);\n        //query patient notice\n        const TRID = this.props.caseinfo.TRANSINID.toString().trim()\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins, preTRID: TRID })\n        this.queryPatientImportant(TRID);\n    }\n    componentDidUpdate() {\n        const TRID = this.props.caseinfo.TRANSINID.toString().trim()\n        const preTRID = this.state.preTRID\n        if (TRID !== preTRID) {\n            this.setState({ preTRID: TRID })\n            this.queryPatientImportant(TRID);\n        }\n    }\n    queryPatientImportant(TRID) {\n        ApiProvider.getOnePatientImportantMatter(TRID)\n            .then(data => {\n                console.log(\"getOnePatientImportantMatter OK \" + JSON.stringify(data));\n                this.setState({ noticeData: data.data });\n            })\n            .catch(err => {\n                console.log(\"getOnePatientImportantMatter NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString();\n        ApiProvider.createPatientImportantMatter(this.state.inputContent, \"\", this.state.caseinfo.HISID, timeNowStr, this.state.caseinfo.TRANSINID)\n            .then(data => {\n                console.log(\"createPatientImportantMatter OK \" + JSON.stringify(data));\n                this.queryPatientImportant(this.state.preTRID);\n            })\n            .catch(err => {\n                console.log(\"createPatientImportantMatter NG \" + JSON.stringify(err));\n            });\n        this.setState(\n            {\n                EditMode: false,\n                inputContent: undefined\n            }\n        )\n    }\n    renderEditButton() {\n        if (this.props.disableEdit === true) {\n            return null;\n        } else {\n            return (\n                <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                    <img src={editlogo} alt=\"editlogo\" />\n                </div>\n            )\n        }\n    }\n\n    render() {\n        function remarkcellRender(dataList) {\n            if (Array.isArray(dataList)) {\n                if (dataList.length === 0) {\n                    return (\n                        <div style={{ height: \"50px\", paddingLeft: \"15px\", display: \"flex\", alignItems: \"center\" }}>\n                            無病人註記\n                        </div>\n                    );\n                }\n                const remarkcell = dataList.map((info, index) =>\n                    <div key={index} className='noticecontext'>\n                        <div style={{ whiteSpace: \"pre-wrap\" }}>{info.context}</div>\n                        <Tooltip placement=\"topRight\" title={tooltiptext(info.Editor, info.time)}>\n                            <img src={detaillogo} alt=\"detaillogo\" />\n                        </Tooltip>\n                    </div>\n                )\n                return remarkcell\n            }\n            return (\n                <div style={{ height: \"50px\", paddingLeft: \"15px\", display: \"flex\", alignItems: \"center\" }}>\n                    無病人註記\n                </div>\n                // <div style={{ padding: \"5px 15px\" }}>無病人註記</div>\n            );\n        }\n        function tooltiptext(editor, time) {\n            function nullvalue(value) {\n                if (value === null || value === undefined) {\n                    return \"--\"\n                }\n                return value\n            }\n            const t = moment(time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n            const localTime = moment.utc(t).toDate()\n            const displayTime = moment(localTime).format(\"MM/DD HH:mm\")\n            return nullvalue(editor) + \"醫師於\" + displayTime + \"更新\"\n        }\n\n        console.log(this.state.noticeData)\n\n        const fixData = this.state.noticeData.sort((a, b) => {\n            let tempTimeA = moment(a.time, 'YYYY-MM-DDThh:mm:ssZ').valueOf()\n            let tempTimeB = moment(b.time, 'YYYY-MM-DDThh:mm:ssZ').valueOf()\n            return tempTimeA < tempTimeB ? 1 : -1\n        })\n\n        const remarkcell = remarkcellRender(fixData)\n        const { TextArea } = Input;\n        return (\n            <div style={{ marginBottom: '10px' }}>\n                {this.props.disableEdit\n                    ?\n                    <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                        <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>病人註記</t2>\n                    </div>\n                    :\n                    <div className='noticetitle'>\n                        <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>病人註記</t2>\n                        {this.renderEditButton()}\n                    </div>}\n                <div className='noticecontextborder'>\n                    {remarkcell}\n                </div>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", backgroundColor: \"rgba(238,238,238,1)\" }}>\n                        <TextArea id=\"noticeContent\" placeholder=\"輸入當日註記內容\" value={this.state.inputContent} onChange={this.onInputChange} autoSize={true}></TextArea>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Notice\n","import React, { Component } from \"react\";\nimport { Labwarningvalue } from \"../../Function/Wardstate\";\nimport moment from \"moment\";\nimport { Tooltip } from \"antd\";\n\nclass Labviewitem extends Component {\n  TimeRender(time) {\n    function formatTime(timevalue) {\n      if (timevalue === null || time === \"--\") {\n        return \"--\"\n      }\n      return moment(time.ORRESDT.toString().trim() + time.ORRESTM.toString().trim(), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD\")\n    }\n    function formatTimeToolTip(timevalue) {\n      if (timevalue === null || time === \"--\") {\n        return \"--\"\n      }\n      return moment(time.ORRESDT.toString().trim() + time.ORRESTM.toString().trim(), \"YYYY-MM-DDHH.mm.ss\").format(\"HH:mm\")\n    }\n    // console.log(time)\n    if (time === null || time === \"--\") {\n      return (\n        <centerstyle>\n          {\"--\"}\n        </centerstyle>\n      )\n    }\n    return (\n      <centerstyle>\n        <Tooltip placement=\"bottom\" title={formatTimeToolTip(time)}>\n          {formatTime(time)}\n        </Tooltip>\n      </centerstyle>\n    );\n  }\n\n  fixtitle = title => {\n    switch (title) {\n      case \"Seg\":\n      case \"Lymp\":\n        return (\n          <div>\n            <t3>{title}</t3>\n            <t3 style={{ fontSize: \"10px\" }}>%</t3>\n          </div>\n        );\n      case \"Na\":\n        return (\n          <div>\n            <t3>{\"Na\"}</t3>\n            <sup>+</sup>\n          </div>\n        );\n      case \"K\":\n        return (\n          <div>\n            <t3>{\"K\"}</t3>\n            <sup>+</sup>\n          </div>\n        );\n      case \"Ca\":\n        return (\n          <div>\n            <t3>{\"Ca\"}</t3>\n            <sup>2+</sup>\n          </div>\n        );\n      case \"Mg\":\n        return (\n          <div>\n            <t3>{title}</t3>\n            <sup>2+</sup>\n          </div>\n        );\n      case \"PCO\":\n        return (\n          <div>\n            <t3>{title}</t3>\n            <sub>2</sub>\n          </div>\n        );\n      case \"PO\":\n        return (\n          <div>\n            <t3>{title}</t3>\n            <sub>2</sub>\n          </div>\n        );\n      default:\n        break;\n    }\n    return title;\n  };\n\n  render() {\n    function formatValue(value, title) {\n      if (title === \"FeSat\") {\n        if (value === \"--\") {\n          return \"--\"\n        }\n        return value + \"%\"\n      }\n      return value\n    }\n    function RowsGrid(source) {\n      if (source === \"Wardview\") {\n        return \"1fr 1fr 1fr\";\n      }\n      return \"1fr 1fr 1fr\";\n    }\n    function RowsHeight(source) {\n      if (source === \"Wardview\") {\n        return \"80px\";\n      }\n      return \"80px\";\n    }\n\n    const { value, title, time, Source } = this.props;\n    // console.log(time)\n    const timeCell = this.TimeRender(time)\n    const fixtitle = this.fixtitle(title);\n    return (\n      <div style={{\n        display: \"grid\",\n        gridTemplateRows: RowsGrid(Source),\n        height: RowsHeight(Source)\n      }}>\n        <centerstyle>\n          {/* <t3>{title}</t3> */}\n          {fixtitle}\n        </centerstyle>\n        <centerstyle>\n          <t2\n            style={{\n              fontSize: \"20px\",\n              color: Labwarningvalue(value, title) ? \"black\" : \"red\"\n            }}\n          >\n            {formatValue(value, title)}\n          </t2>\n        </centerstyle>\n        {timeCell}\n      </div>\n    );\n  }\n}\n\nexport default Labviewitem;\n","import React from 'react'\nimport moment from 'moment';\nexport function firstarea_Reg_IO() {\n    return [\"輸液\"];\n}\n\nexport function Secondarea_reg_IO() {\n    return [\"血品\"];\n}\n\nexport function Thirdarea_reg_IO() {\n    return [\"進食\"];\n}\n\nexport function Fourtharea_reg_IO() {\n    return [\"失血\", \"滲液\", \"嘔吐\", \"引流\", \"穿刺\", \"透析\", \"沖洗\", \"排便\", \"排尿\"];\n}\n\n\n\nexport function Feedarea_Reg_IO() {\n    return [\"進食\"];\n}\n\nexport function IVarea_reg_IO() {\n    return [\"血品\", \"輸液\"];\n}\n\nexport function UOarea_reg_IO() {\n    return [\"排尿\"];\n}\n\nexport function Otherarea_reg_IO() {\n    return [\"失血\", \"滲液\", \"嘔吐\", \"引流\", \"穿刺\", \"透析\", \"沖洗\", \"排便\"];\n}\n\nexport function Select_Main_Doc(DOCLIST) {\n    const MainDoc = DOCLIST.filter(function (value, index, array) {\n        return value.PDTYPE === \"B\"\n    })\n    if (MainDoc.length === 0) {\n        return \"\"\n    }\n    else {\n        const data = MainDoc[0]\n        return data.PDDOCNMC\n    }\n}\n\nexport function SumFeedDataMapReduce(arr) {\n    const sumlist = arr.map(function (value, index) {\n        return Number(value.inp_val2)\n    })\n    var sum = 0\n    for (let index = 0; index < sumlist.length; index++) {\n        const element = sumlist[index];\n        sum = sum + element\n    }\n    return sum\n}\n\nexport function SumIVDataMapReduce(arr) {\n    const sumlist = arr.map(function (value, index) {\n        return Number(value.inp_val1)\n    })\n    var sum = 0\n    for (let index = 0; index < sumlist.length; index++) {\n        const element = sumlist[index];\n        sum = sum + element\n    }\n    return sum\n}\n\nexport function SumUrineDataMapReduce(arr) {\n    const sumlist = arr.map(function (value, index) {\n        return Number(value.inp_val1)\n    })\n    var sum = 0\n    for (let index = 0; index < sumlist.length; index++) {\n        const element = sumlist[index];\n        sum = sum + element\n    }\n    return sum\n}\nexport function SumInOtherDataMapReduce(arr) {\n    return arr.map(el => Number(el.inp_val1)).reduce((a, b) => a + b);\n}\nexport function SumOutOtherDataMapReduce(arr) {\n    return arr.map(el => Number(el.out_val1)).reduce((a, b) => a + b);\n}\n\n\n\n//累積報告\n\nexport function ListForTime(arr, time) {\n    var DataList = []\n    const pickerTime = time + (24 * 60 * 60 * 1000)\n    for (let index = 0; index < arr.length; index++) {\n        const element = arr[index];\n        const objectTime = moment(element.ORRESDT.toString().trim() + element.ORRESTM.toString().trim(), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n        if (objectTime <= pickerTime) {\n            DataList.push(element)\n        }\n    }\n    return DataList\n}\n\nexport function ListForTimeAndTarget(arr, time, target) {\n    var DataList = []\n    arr.forEach(element => {\n        const parseTimestamp = new Date(element.ORRCPDT.split(\"-\")[0], element.ORRCPDT.split(\"-\")[1], element.ORRCPDT.split(\"-\")[2]).getTime()\n        // const nowTimestamp = new Date(time).getTime()\n        if (parseTimestamp <= new Date(time).getTime() && element.ORPROCED.indexOf(target) > -1) {\n            DataList.push(element)\n        }\n    })\n    return DataList\n}\n\nexport function CaRegString(ressectobject) {\n    var select = []\n    if (Array.isArray(ressectobject)) {\n        for (let index = 0; index < ressectobject.length; index++) {\n            const element = ressectobject[index];\n            const elementstring = element.ORPROCED.toString()\n            if (elementstring.match(\"Ca++, free\") !== null) {\n                select.push(element)\n            }\n        }\n    }\n    if (select.length === 0) {\n        return \"null\"\n    }\n\n}\n\nexport function QSPERegList(qspe) {\n    function SettingValue(mode, value) {\n        if (value === undefined || value === null) {\n            return \"\"\n        }\n        const valueList = value.split(\"/\")\n        if (mode === 'NC') {\n            return (<div>Flow:{valueList[0]}L/min</div>)\n        }\n        if (mode === 'HF') {\n            return (<div style={{ display: \"inline\" }}>FiO<sub>2</sub>:{valueList[0]}% ,PEEP:{valueList[1]}cmH<sub>2</sub>O</div>)\n        }\n        if (mode === 'UW' || mode === 'bcpap' || mode === 'CPAP') {\n            return (<div style={{ display: \"inline\" }}>FiO<sub>2</sub>:{valueList[0]}% ,PEEP:{valueList[1]}cmH<sub>2</sub>O</div>)\n        }\n        if (mode === 'NIPPV' || mode.match(\"PC\") !== null) {\n            // return (<sub>123</sub>)\n            return (<div style={{ display: \"inline\" }}>FiO<sub>2</sub>:{valueList[0]}% ,Rate:{valueList[1]}/min ,PIP:{valueList[2]}mmH<sub>2</sub>O ,PEEP:{valueList[3]}cmH<sub>2</sub>O</div>)\n        }\n        if (mode.match(\"HFOV\") !== null) {\n            return (<div style={{ display: \"inline\" }}>FiO<sub>2</sub>:{valueList[0]}% ,Amp:{valueList[1]}cmH<sub>2</sub>O ,MAP:{valueList[2]}cmH<sub>2</sub>O ,Freq:{valueList[3]}Hz</div>)\n        }\n        if (mode.match(\"HFPPV\") !== null) {\n            return (<div style={{ display: \"inline\" }}>FiO<sub>2</sub>:{valueList[0]}% ,Rate:{valueList[1]}/min ,PIP:{valueList[2]}mmH<sub>2</sub>O ,PEEP:{valueList[3]}cmH<sub>2</sub>O\"</div>)\n        }\n        return value\n    }\n\n    var qspearray = []\n    if (Array.isArray(qspe)) {\n        for (let index = 0; index < qspe.length; index++) {\n            const element = qspe[index];\n            if (element !== undefined) {\n                const SelectElement = element.special.toString()\n                if (SelectElement.match(\"@v\") !== null||SelectElement.match(\"@V\") !== null) {\n                    const DataArray = SelectElement.split(\" \")\n                    const title = DataArray[1]\n                    const value = DataArray[2]\n                    const DataJson = {\n                        \"Mode\": title,\n                        \"Setting\": SettingValue(title, value),\n                        \"Date\": element.rec_dat.toString().trim(),\n                        \"Time\": element.rec_tim,\n                    }\n                    qspearray.push(DataJson)\n                }\n            }\n        }\n    }\n    return qspearray\n}\n\nexport function QSPESetting(qspesettingarray) {\n    const regString = qspesettingarray.Mode\n    const regValue = qspesettingarray.Setting.split(\"/\")\n    if (regString.match(\"RA\") !== null) {\n        return \"\"\n    }\n    if (regString.match(\"NC\") !== null) {\n        return \"Flow:\" + regValue[0]\n    }\n    if (regString.match(\"UW\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/PEEP:\" + regValue[1]\n    }\n    if (regString.match(\"bcpap\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/PEEP:\" + regValue[1]\n    }\n    if (regString.match(\"CPAP\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/PEEP:\" + regValue[1]\n    }\n    if (regString.match(\"NIPPV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Rate:\" + regValue[1] + \"/PIP:\" + regValue[2] + \"/PEEP:\" + regValue[3]\n    }\n    if (regString.match(\"HFOV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Rate:\" + regValue[1] + \"/PIP:\" + regValue[2] + \"/PEEP:\" + regValue[3]\n    }\n    if (regString.match(\"HFOV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Amp:\" + regValue[1] + \"/MAP:\" + regValue[2] + \"/Freq:\" + regValue[3]\n    }\n    if (regString.match(\"HFPPV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Rate:\" + regValue[1] + \"/PIP:\" + regValue[2] + \"/PEEP:\" + regValue[3]\n    }\n    return qspesettingarray.value\n}\n","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport './Wardcardvitalsign.scss';\nimport { mmddformat } from '../Function/Timeformat'\nimport * as ApiProvider from '../API/ApiProvider'\nimport moment from 'moment';\nimport X2JS from 'x2js';\nimport * as WardState from '../Function/Wardstate'\n\n\n\nclass WardcardvitalsignChart extends Component {\n    state = {\n        sourcedata: [],\n        preHID: null,\n        BT: []\n    }\n    componentDidUpdate() {\n        const { HISID } = this.props\n        const HID = HISID.toString().trim()\n        const preHID = this.state.preHID\n        if (HID !== preHID) {\n            this.setState({ preHID: HISID.toString().trim() })\n            this.getCenterMonitor()\n        }\n\n    }\n    componentDidMount() {\n        const { HISID } = this.props\n        this.setState({ preHID: HISID.toString().trim() })\n        this.getCenterMonitor()\n    }\n\n    getCenterMonitor() {\n        function selectType(type) {\n            switch (type) {\n                case \"div_hr\":\n                    return \"hr\"\n                case \"div_bp\":\n                    return \"nbp\"\n                case \"div_rr\":\n                    return \"rr\"\n                case \"div_spo\":\n                    return \"spo2\"\n                case \"div_abp\":\n                    return \"abp\"\n                case \"div_bt\":\n                    return \"bt\"\n                default:\n                    break;\n            }\n        }\n        // const simdata = vitalData.simdata\n        const endTime = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").format(\"YYYYMMDDHHmmss\");\n        const startTime = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf() - (24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\");\n        const { id_key, HISID, CID } = this.props\n        const HID = HISID.toString().trim()\n        const type = selectType(id_key)\n        const et = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").format(\"YYYYMMDDHHmm\")\n        const st = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf() - (24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        if (id_key === \"div_abp\") {\n            ApiProvider.getPatientwardvalueBoxPlot(HID, startTime, endTime, type, 0)\n                .then(data => {\n                    this.setState({\n                        sourcedata: data.data\n                    })\n                    this.drawChart()\n                })\n                .catch(err => { console.log(err) })\n        }\n        if (id_key === \"div_hr\" || id_key === \"div_rr\" || id_key === \"div_spo\") {\n\n            ApiProvider.getPatientwardvalueBoxPlot(HID, startTime, endTime, type, 0)\n                .then(data => {\n                    this.setState({\n                        sourcedata: data.data\n                    })\n                    this.drawChart()\n                })\n                .catch(err => { console.log(err) })\n        }\n        if (id_key === \"div_bp\") {\n\n            ApiProvider.getVitalSignData(HID, startTime, endTime, type)\n                .then(data => {\n                    this.setState({\n                        sourcedata: data.data\n                    })\n                    this.drawChart()\n                })\n                .catch(err => {\n                    console.log(err);\n                })\n        }\n        if (id_key === \"div_bt\") {\n            console.log(CID, st, et)\n            ApiProvider.getQDVS(CID, st, et)\n                .then(data => {\n                    const BTDATA = WardState.XM2JSON(data.data)\n                    console.log(BTDATA)\n                    if (Array.isArray(BTDATA)) {\n                        const BT_Data = BTDATA.filter(function (value, index, arr) {\n                            return value.temperature !== undefined && Number(value.temperature) !== NaN && value.temperature.__text === undefined\n                        })\n                        const mapBTData = BT_Data.map(function (info, index, arr) {\n                            const time = moment(info.rec_dat.toString() + info.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                            return {\n                                Data: info.temperature,\n                                Time: time\n                            }\n                        })\n                        console.log(mapBTData)\n                        this.setState({ BT: mapBTData })\n                        // d3.select(\"#svg_bt\").remove()\n                        this.drawChart([]);\n                    }\n                })\n                .catch(err => { console.log(err) })\n        }\n    }\n    cal_svg_hight() {\n        const { axisTop, axisBot } = this.props\n        if (axisTop) {\n            if (axisBot) {\n                return 160\n            }\n            else {\n                return 145\n            }\n        }\n        else {\n            if (axisBot) {\n                return 100\n            }\n            else {\n                return 90\n            }\n        }\n    }\n\n    cal_svg_transform() {\n        const { axisTop, axisBot } = this.props\n        if (axisTop) {\n            if (axisBot) {\n                return 70\n            }\n            else {\n                return 50\n            }\n        }\n        else {\n            if (axisBot) {\n                return 20\n            }\n            else {\n                return 10\n            }\n        }\n    }\n\n    drawChart() {\n        function multiFormat(date, i, n) {\n            if ((n.length - 1) == i) {\n                return \"現在\"\n            }\n            if (formatHour(date) % 4 === 0) {\n                return formatHour(date)\n            }\n            else return null\n        }\n        function multibotformat(date) {\n            if (new Date(date).getHours() === 0) {\n                return mmddformat(date)\n            }\n            else return null\n        }\n        const { svg_key, circlrcolor, axisTop, id_key, axisBot, MAX, MIN, Upper, Lower } = this.props\n        const width = window.screen.availWidth * 0.25, height = 70, transformmargin = this.cal_svg_transform(), margin = 20\n        // const borderwidth = width / 27\n        const time_now = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf()\n        const startTime = time_now - (24 * 60 * 60 * 1000);\n\n        var time_array = []\n        var time_axis_array = []\n        for (let index = 0; index < 25; index++) {\n            time_array.push({ key: \"time\", x_axis_time: time_now - index * 60 * 60 * 1000 })\n            time_axis_array.push(time_now - index * 60 * 60 * 1000)\n        }\n        var time_array_reverse = time_array.reverse()\n        var time_axis_array_reverse = time_axis_array.reverse()\n        var formatHour = d3.timeFormat(\"%H\")\n\n        // const endTime = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf();\n\n\n        var x = d3.scaleLinear()\n            .domain([time_array_reverse[0].x_axis_time, time_array_reverse[24].x_axis_time])\n            .range([0, width - 40]);\n\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([MIN, MAX])\n            .range([height, 0])\n\n        var yAxis = d3.axisLeft(y)\n            .tickValues([MIN, MAX])\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(10);\n\n        var xAxisTop = d3.axisTop(x)\n            .tickValues(time_axis_array_reverse)\n            .tickSize(0, 0)\n            .tickPadding(margin + 15)\n            .tickFormat(function (d) { return multibotformat(d); });\n\n        var xAxis = d3.axisTop(x)\n            .tickValues(time_axis_array_reverse)\n            .tickSize(0, 0)\n            .tickPadding(margin)\n            .tickFormat(function (d, i, n) { return multiFormat(d, i, n); });\n\n        d3.select(\"#\" + svg_key).remove()\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_key)\n            .attr(\"viewBox\", [0, 0, width, this.cal_svg_hight()])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 30 + \",\" + transformmargin + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n        if (axisTop) {\n            svg.append(\"g\")\n                .call(xAxis)\n                .attr(\"class\", \"axis\");\n\n            svg.append(\"g\")\n                .call(xAxisTop)\n                .attr(\"class\", \"axis\");\n        }\n\n        // if (axisBot) {\n        //     svg.append(\"g\")\n        //         .call(xAxisBottom)\n        //         .attr(\"class\", \"axis\");\n        // }\n\n        //上下虛線\n        svg.append('line')\n            .attr('x1', 0)\n            .attr('y1', y(MAX))\n            .attr('x2', width)\n            .attr('y2', y(MAX))\n            .style('stroke', '#E0E0E0')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n        svg.append('line')\n            .attr('x1', 0)\n            .attr('y1', y(MIN))\n            .attr('x2', width)\n            .attr('y2', y(MIN))\n            .style('stroke', '#E0E0E0')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n\n        for (let index = 0; index < time_array_reverse.length; index++) {\n            svg.append('line')\n                .attr('x1', x(time_array_reverse[index].x_axis_time))\n                .attr('y1', 0)\n                .attr('x2', x(time_array_reverse[index].x_axis_time))\n                .attr('y2', height)\n                .style('stroke', '#E0E0E0')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n        }\n\n\n\n        drawshadow(startTime, 0, Lower, Upper)\n        function drawshadow(startTime, interval, lower, upper) {\n            const LimitBoxTimer = formatBox(startTime, interval, width)\n            for (let index = 0; index < LimitBoxTimer.length; index++) {\n                const boxwidth = formatBoxWidth(width, interval)\n                const element = LimitBoxTimer[index];\n                svg.append('line')\n                    .attr('x1', x(element))\n                    .attr('y1', y(lower))\n                    .attr('x2', x(element))\n                    .attr('y2', y(upper))\n                    .style('stroke', circlrcolor)\n                    .style('opacity', 0.7)\n                    .style('stroke-width', boxwidth)\n\n                if (id_key === \"div_bp\" || id_key === \"div_abp\") {\n                    svg.append('line')\n                        .attr('x1', x(element))\n                        .attr('y1', y(35))\n                        .attr('x2', x(element))\n                        .attr('y2', y(55))\n                        .style('stroke', circlrcolor)\n                        .style('opacity', 0.3)\n                        .style('stroke-width', boxwidth)\n                }\n            }\n        }\n        function formatBox(startTime, interval) {\n            function interFormat(startTime, interval) {\n                var TimeArray = []\n                for (let index = 0; index < interval; index++) {\n                    if (interval === 24) {\n                        const boxTime = startTime + (30 * 60 * 1000) + (index * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 18) {\n                        const boxTime = startTime + (2 * 60 * 60 * 60 * 1000) + (index * 4 * 60 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 21) {\n                        const boxTime = startTime + (4 * 60 * 60 * 60 * 1000) + (index * 8 * 60 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else {\n                        const boxTime = startTime + (12 * 60 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                }\n                return TimeArray\n            }\n            if (interval === 0) {\n                return interFormat(startTime, 24)\n            }\n            if (interval === 1) {\n                return interFormat(startTime, 18)\n            }\n            if (interval === 2) {\n                return interFormat(startTime, 21)\n            }\n            return interFormat(startTime, 14)\n        }\n        function formatBoxWidth(viewwidth, interval) {\n            if (interval === 0) {\n                return viewwidth / 26.5\n            }\n            if (interval === 1) {\n                return viewwidth / 18\n            }\n            if (interval === 2) {\n                return viewwidth / 21\n            }\n            return viewwidth / 14\n        }\n        // var sim_data = this.state.sourcedata\n        const BoxPlotData = this.state.sourcedata\n        console.log(id_key, BoxPlotData)\n        if (id_key === \"div_bt\") {\n            const BT_Row = this.state.BT\n            for (let index = 0; index < BT_Row.length; index++) {\n                const element = BT_Row[index];\n                console.log(element)\n                svg.append('circle')\n                    .attr('cx', x(element.Time))\n                    .attr('cy', y(element.Data))\n                    .attr('r', 3)\n                    .style('fill', circlrcolor)\n\n            }\n        }\n        if (BoxPlotData.length === 0) {\n            return null\n        }\n\n        if (id_key === \"div_abp\") {\n            const dataAbps = BoxPlotData.abps\n            const dataAbpd = BoxPlotData.abpd\n            const boxwidth = 10\n            for (let index = 0; index < dataAbpd.length; index++) {\n                const element = dataAbpd[index];\n                const q1 = element.Q1\n                const q2 = element.Q2\n                const q3 = element.Q3\n                const q4 = element.Q4\n                const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                svg.append(\"line\")\n                    .attr(\"x1\", x(Xtime))\n                    .attr(\"x2\", x(Xtime))\n                    .attr(\"y1\", y(q1))\n                    .attr(\"y2\", y(q4))\n                    .attr(\"stroke\", circlrcolor)\n                    .style('opacity', 0.5)\n                    // .attr(\"stroke\", \"blcak\")\n                    .style('stroke-width', 1)\n\n                svg.append(\"rect\")\n                    .attr(\"x\", x(Xtime) - boxwidth / 2)\n                    .attr(\"y\", y(q3))\n                    .attr(\"height\", (y(q2) - y(q3)))\n                    .attr(\"width\", boxwidth)\n                    .attr(\"stroke\", circlrcolor)\n                    .style('opacity', 0.5)\n                    .style(\"fill\", \"rgba(255,255,255,1)\")\n                    .style('stroke-width', 1);\n\n                svg\n                    .selectAll(\"toto\")\n                    .data([q1, q4])\n                    .enter()\n                    .append(\"line\")\n                    .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                    .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                    .attr(\"y1\", function (d) { return (y(d)) })\n                    .attr(\"y2\", function (d) { return (y(d)) })\n                    .attr(\"stroke\", circlrcolor)\n                    .style('opacity', 0.5)\n                    .style('stroke-width', 1);\n            }\n            for (let index = 0; index < dataAbps.length; index++) {\n                const element = dataAbps[index];\n                const q1 = element.Q1\n                const q2 = element.Q2\n                const q3 = element.Q3\n                const q4 = element.Q4\n                const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                svg.append(\"line\")\n                    .attr(\"x1\", x(Xtime))\n                    .attr(\"x2\", x(Xtime))\n                    .attr(\"y1\", y(q1))\n                    .attr(\"y2\", y(q4))\n                    .attr(\"stroke\", circlrcolor)\n                    // .attr(\"stroke\", \"blcak\")\n                    .style('stroke-width', 1)\n\n                svg.append(\"rect\")\n                    .attr(\"x\", x(Xtime) - boxwidth / 2)\n                    .attr(\"y\", y(q3))\n                    .attr(\"height\", (y(q2) - y(q3)))\n                    .attr(\"width\", boxwidth)\n                    .attr(\"stroke\", circlrcolor)\n                    .style(\"fill\", \"rgba(255,255,255,1)\")\n                    .style('stroke-width', 1);\n\n                svg\n                    .selectAll(\"toto\")\n                    .data([q1, q4])\n                    .enter()\n                    .append(\"line\")\n                    .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                    .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                    .attr(\"y1\", function (d) { return (y(d)) })\n                    .attr(\"y2\", function (d) { return (y(d)) })\n                    .attr(\"stroke\", circlrcolor)\n                    .style('stroke-width', 1);\n            }\n        }\n        if (id_key === \"div_bp\") {\n            for (let index = 0; index < BoxPlotData.length; index++) {\n                const element = BoxPlotData[index];\n                const Xtime = moment(element.Time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                const SBP = element.SBP\n                const DBP = element.DBP\n                if (SBP === 0 || DBP === 0) {\n                    continue\n                }\n                svg.append('circle')\n                    .attr('cx', x(Xtime))\n                    .attr('cy', y(SBP))\n                    .attr('r', 3)\n                    .style('fill', circlrcolor)\n\n\n                svg.append('circle')\n                    .attr('cx', x(Xtime))\n                    .attr('cy', y(DBP))\n                    .attr('r', 3)\n                    .style('opacity', 0.5)\n                    .style('fill', circlrcolor)\n            }\n        }\n\n        if (id_key === \"div_hr\" || id_key === \"div_rr\" || id_key === \"div_spo\") {\n            // for (let index = 0; index < BoxPlotData.length; index++) {\n            //     const element = BoxPlotData[index];\n            //     const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + (30 * 60 * 1000)\n            //     svg.append('line')\n            //         .attr('x1', x(Xtime))\n            //         .attr('y1', y(Lower))\n            //         .attr('x2', x(Xtime))\n            //         .attr('y2', y(Upper))\n            //         .style('stroke', circlrcolor)\n            //         .style('opacity', 0.5)\n            //         // .style('stroke', 'red')\n            //         .style('stroke-width', borderwidth)\n\n            // }\n\n            for (let index = 0; index < BoxPlotData.length; index++) {\n                const element = BoxPlotData[index];\n                const q1 = element.Q1\n                const q2 = element.Q2\n                const q3 = element.Q3\n                const q4 = element.Q4\n                const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + (30 * 60 * 1000)\n                const boxwidth = 10\n                svg.append(\"line\")\n                    .attr(\"x1\", x(Xtime))\n                    .attr(\"x2\", x(Xtime))\n                    .attr(\"y1\", y(q1))\n                    .attr(\"y2\", y(q4))\n                    .attr(\"stroke\", circlrcolor)\n                    .style('stroke-width', 1)\n\n                svg.append(\"rect\")\n                    .attr(\"x\", x(Xtime) - boxwidth / 2)\n                    .attr(\"y\", y(q3))\n                    .attr(\"height\", (y(q2) - y(q3)))\n                    .attr(\"width\", boxwidth)\n                    .attr(\"stroke\", circlrcolor)\n                    .style(\"fill\", \"rgba(255,255,255,1)\")\n                    .style('stroke-width', 1);\n\n                svg\n                    .selectAll(\"toto\")\n                    .data([q1, q4])\n                    .enter()\n                    .append(\"line\")\n                    .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                    .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                    .attr(\"y1\", function (d) { return (y(d)) })\n                    .attr(\"y2\", function (d) { return (y(d)) })\n                    .attr(\"stroke\", circlrcolor)\n                    .style('stroke-width', 1);\n\n            }\n        }\n\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default WardcardvitalsignChart;\n","import React, { Component } from 'react';\nimport WardcardvitalsignChart from './Wardcardvitalsign'\nimport { statecolor } from '../Function/Wardstate'\n// import * as ApiProvider from '../API/ApiProvider'\nimport './Wardchart.scss'\n// import moment from 'moment';\n\n\n\nclass WardChart extends Component {\n    state = {\n        data: [],\n        pbStatus: true\n    }\n\n    changePb = () => {\n        this.setState({\n            pbStatus: false\n        })\n    }\n\n    decidePB = (hr, nbpd, abpd) => {\n        const status = this.state.pbStatus\n        if (status) {\n            hr > 160 || hr < 100 && this.changePb()\n            nbpd > 75 || nbpd < 55 && this.changePb()\n            abpd > 75 || abpd < 55 && this.changePb()\n        }\n    }\n\n    render() {\n        function valueFormat(value) {\n            if (value === null || value === undefined || value === \"\" || Number(value) === 0) {\n                return \"--\"\n            }\n            return value\n        }\n        const data = this.state.data\n        const { CMvalue, HISID, CID } = this.props\n        const vitalvalue = CMvalue\n        if (vitalvalue === undefined || vitalvalue === null) {\n            return null\n        }\n\n        this.decidePB(vitalvalue.hr, vitalvalue.nbpd, vitalvalue.abpd)\n\n        function bplimitValue(bpd, bps, upper1, lower1, upper2, lower2) {\n            if (Number(bpd) > 0 || Number(bps) > 0) {\n                if (bpd > upper1 || bpd < lower1) {\n                    return false\n                }\n                if (bps > upper2 || bps < lower2) {\n                    return false\n                }\n                return true\n            }\n            return true\n\n        }\n\n        function limitValue(value, upper, lower) {\n            if (Number(value) > 0) {\n                if (value > upper || value < lower) {\n                    return false\n                }\n                return true\n            }\n            return true\n\n        }\n\n        const status = this.state.pbStatus\n        console.log(CID)\n        return (\n            <div className='Wardchartlayout'>\n                <div className='halfwardchart'>\n                    <div className='singlewardchart'>\n                        <div className='firstRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"90px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: limitValue(vitalvalue.hr, 160, 100) ? \"white\" : statecolor('HR') }}>\n                                <centerstyle>\n                                    <t3 style={{ color: limitValue(vitalvalue.hr, 160, 100) ? statecolor('HR') : \"white\" }}>HR(min)</t3>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"30px\", lineHeight: \"44px\", paddingRight: \"3px\", color: limitValue(vitalvalue.hr, 160, 100) ? statecolor('HR') : \"white\" }}>{valueFormat(vitalvalue.hr)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <div className='secondRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"90px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: bplimitValue(vitalvalue.nbpd, vitalvalue.nbps, 55, 35, 75, 55) ? \"white\" : statecolor('BP') }}>\n                                <centerstyle>\n                                    <t3 style={{ color: bplimitValue(vitalvalue.nbpd, vitalvalue.nbps, 55, 35, 75, 55) ? statecolor('BP') : \"white\" }}>NBP(mmHg)</t3>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"20px\", lineHeight: \"34px\", color: bplimitValue(vitalvalue.nbpd, vitalvalue.nbps, 55, 35, 75, 55) ? statecolor('BP') : \"white\" }}>{valueFormat(vitalvalue.nbps)}/{valueFormat(vitalvalue.nbpd)}</div>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"15px\", lineHeight: \"22px\", color: bplimitValue(vitalvalue.nbpd, vitalvalue.nbps, 55, 35, 75, 55) ? statecolor('BP') : \"white\" }}>({valueFormat(vitalvalue.nbpm)})</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <div className='thirdRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"90px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: bplimitValue(vitalvalue.abpd, vitalvalue.abps, 55, 35, 75, 55) ? \"white\" : statecolor('BP') }}>\n                                <centerstyle>\n                                    <t3 style={{ color: bplimitValue(vitalvalue.abpd, vitalvalue.abps, 55, 35, 75, 55) ? statecolor('BP') : \"white\" }}>ABP(mmHg)</t3>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"20px\", lineHeight: \"34px\", color: bplimitValue(vitalvalue.abpd, vitalvalue.abps, 55, 35, 75, 55) ? statecolor('BP') : \"white\" }}>{valueFormat(vitalvalue.abps)}/{valueFormat(vitalvalue.abpd)}</div>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"15px\", lineHeight: \"22px\", color: bplimitValue(vitalvalue.abpd, vitalvalue.abps, 55, 35, 75, 55) ? statecolor('BP') : \"white\" }}>({valueFormat(vitalvalue.abpm)})</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ position: \"relative\" }}>\n                        <WardcardvitalsignChart CID={CID} MAX={200} MIN={0} Upper={160} Lower={100} HISID={HISID} svg_key={\"svg_hr\"} id_key={\"div_hr\"} data={data} axisBot={false} axisTop={true} colorshadow={\"rgba(126, 211, 33, 0.1)\"} circlrcolor={\"#779F50\"}></WardcardvitalsignChart>\n                        <WardcardvitalsignChart CID={CID} MAX={100} MIN={0} Upper={75} Lower={55} HISID={HISID} svg_key={\"svg_bp\"} id_key={\"div_bp\"} data={data} data2={true} axisBot={false} axisTop={false} colorshadow={\"rgba(240, 144, 144, 0.1)\"} circlrcolor={\"#C12528\"} data_2_circlrcolor={\"rgba(240, 144, 144, 0.5)\"}></WardcardvitalsignChart>\n                        <WardcardvitalsignChart CID={CID} MAX={100} MIN={0} Upper={75} Lower={55} HISID={HISID} svg_key={\"svg_abp\"} id_key={\"div_abp\"} data={data} data2={true} axisBot={true} axisTop={false} colorshadow={\"rgba(240, 144, 144, 0.1)\"} circlrcolor={\"#C12528\"} data_2_circlrcolor={\"rgba(240, 144, 144, 0.5)\"}></WardcardvitalsignChart>\n                    </div>\n                </div>\n                <div className='halfwardchart'>\n                    <div className='singlewardchart'>\n                        <div className='firstRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"90px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: limitValue(vitalvalue.spo2, 100, 90) ? \"white\" : statecolor('SpO2') }}>\n                                <centerstyle>\n                                    <t3 style={{ color: limitValue(vitalvalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>\n                                        SpO\n                                        <sub >2</sub>\n                                        (%)\n                                    </t3>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"30px\", lineHeight: \"44px\", paddingRight: \"3px\", color: limitValue(vitalvalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>{valueFormat(vitalvalue.spo2)}%</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <div className='secondRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"90px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: limitValue(vitalvalue.bt, 38, 36) ? \"white\" : statecolor('BT') }}>\n                                <centerstyle>\n                                    <t3 style={{ color: limitValue(vitalvalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>BT(<sup>&ordm;</sup>C)</t3>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"30px\", lineHeight: \"44px\", paddingRight: \"3px\", color: limitValue(vitalvalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>{valueFormat(vitalvalue.bt)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <div className='thirdRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"90px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: limitValue(vitalvalue.rr, 60, 20) ? \"white\" : statecolor('RR') }}>\n                                <centerstyle>\n                                    <t3 style={{ color: limitValue(vitalvalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>RR(min)</t3>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"30px\", lineHeight: \"44px\", paddingRight: \"3px\", color: limitValue(vitalvalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>{valueFormat(vitalvalue.rr)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ position: \"relative\" }}>\n                        <WardcardvitalsignChart CID={CID} MAX={100} MIN={60} Upper={100} Lower={90} HISID={HISID} svg_key={\"svg_spo\"} id_key={\"div_spo\"} data={data} axisBot={false} axisTop={true} colorshadow={\"rgba(0, 183, 255, 0.1)\"} circlrcolor={\"#4773B8\"}></WardcardvitalsignChart>\n                        <WardcardvitalsignChart CID={CID} MAX={41} MIN={34} Upper={38} Lower={36} HISID={HISID} svg_key={\"svg_bt\"} id_key={\"div_bt\"} data={data} axisBot={false} axisTop={false} colorshadow={\"rgba(199, 162, 244,0.1)\"} circlrcolor={\"#7F3DB5\"}></WardcardvitalsignChart>\n                        <WardcardvitalsignChart CID={CID} MAX={100} MIN={0} Upper={60} Lower={20} HISID={HISID} svg_key={\"svg_rr\"} id_key={\"div_rr\"} data={data} axisBot={true} axisTop={false} colorshadow={\"rgba(255, 152, 0, 0.1)\"} circlrcolor={\"#DE7531\"}></WardcardvitalsignChart>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WardChart;\n","import React, { Component } from 'react';\nimport { Checkbox } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider'\n\nclass Wardinfousercheckbox extends Component {\n    state = {\n        checkboxselect: this.props.selectstate\n    }\n\n    updateOnePatientTodo() {\n        if (this.state.checkboxselect) {\n            ApiProvider.createTodo(this.props.item.caseid, this.props.item.context, this.props.item.time, this.props.item.transinno, '已完成')\n                .then(data => {\n                    console.log('updateOnePatientTodo ok ' + JSON.stringify(data))\n                })\n                .catch(err => {\n                    console.log('updateOnePatientTodo ng ' + JSON.stringify(err))\n                })\n        } else {\n            ApiProvider.createTodo(this.props.item.caseid, this.props.item.context, this.props.item.time, this.props.item.transinno, '未完成')\n                .then(data => {\n                    console.log('updateOnePatientTodo ok ' + JSON.stringify(data))\n                })\n                .catch(err => {\n                    console.log('updateOnePatientTodo ng ' + JSON.stringify(err))\n                })\n        }\n    }\n    selectchange() {\n        this.setState({\n            checkboxselect: !this.state.checkboxselect\n        }, this.updateOnePatientTodo)\n    }\n\n    render() {\n        const selectunstyle = {\n            fontSize: \"1rem\"\n        }\n        const selectstyle = {\n            textDecoration: \"line-through\", fontSize: \"1rem\"\n        }\n        return (\n            <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\" }}>\n                <Checkbox onChange={() => this.selectchange()} checked={this.state.checkboxselect} style={this.state.checkboxselect ? selectstyle : selectunstyle}>{this.props.item.context}</Checkbox>\n            </div>\n        )\n    }\n\n}\n\nexport default Wardinfousercheckbox;\n","import React, { Component } from 'react';\nimport './Patientviewinfo.scss'\nimport { Icon } from 'antd'\nimport * as Wardstate from '../Function/Wardstate'\nimport * as ApiProvider from '../API/ApiProvider'\nclass Patientinfo extends Component {\n\n    state = { preCID: null, QENT: [] };\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const CID = caseinfo.CASEID\n        this.setState({ preCID: CID })\n        this.getQENT(CID)\n    }\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const { preCID } = this.state\n        const CID = caseinfo.CASEID\n        if (CID !== preCID) {\n            this.setState({ preCID: CID })\n            this.getQENT(CID)\n\n        }\n    }\n    getQENT(CID) {\n        ApiProvider.getQENT(CID)\n            .then(data => {\n                const parsedata = Wardstate.QMNCXM2JSON(data.data)\n                this.setState({ QENT: parsedata })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQENT NG \" + JSON.stringify(err));\n            });\n    }\n    render() {\n        function fixpatientDate(data) {\n            const transdata = {\n                'cause': '住院原因',\n                'car_pho': '主要照顧者電話',\n                'care': '主要照顧者',\n                'con_1': '聯絡人1',\n                'con_p11': '聯絡人1電話',\n                'con_2': '聯絡人2',\n                'con_p21': '聯絡人2電話',\n                'dvs': '住院時生命徵象',\n                'habit': '飲食狀況',\n                'oxy': '住院時氧合評估',\n                'h_val': '住院時頭圍',\n                'b_val': '住院時胸圍',\n                'tall': '住院時身高',\n                'weight': '住院時體重'\n            }\n\n            const patientDate = []\n\n            for (let index in transdata) {\n                if (data[index] !== \"\") {\n                    patientDate.push([transdata[index], data[index]])\n                }\n            }\n\n            return patientDate\n        }\n\n        const patientDetail = fixpatientDate(this.state.QENT)\n        const patientData = patientDetail.map(element =>\n            <div className='context'>\n                <div className='title'>{element[0]} ：</div>\n                <div className='item'>{element[1]}</div>\n            </div>\n        )\n        if (this.state.preCID === null || patientDetail.length === 0) {\n            return (\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>\n                    <Icon type=\"loading\" />\n                </div>\n            );\n        }\n        return (\n            <div className='patientinfolayout'>\n                {patientData}\n            </div>\n        );\n    }\n}\n\nexport default Patientinfo\n","import React, { useState, useEffect } from \"react\";\nimport './Wardinfouser.scss'\nimport moment from 'moment'\nimport { Modal } from 'antd';\nimport * as Wardstate from '../Function/Wardstate'\nimport * as ApiProvider from '../API/ApiProvider'\n// import * as ApiGithub from '../API/ApiGithub'\nimport { gender } from '../Function/Wardbedfunction'\nimport Wardgrewchart from './Wardgrewchart'\nimport Notice from '../Patientview/Schedule/Notice'\nimport Labviewlayout from '../Patientview/CrossSectionView/Labview'\nimport WardChart from './Wardchart'\nimport Wardinfousercheckbox from './Wardunfousercheckbox'\nimport { Link } from \"react-router-dom\";\n// import * as Reg from '../Data/RegularData';\nimport Patientinfo from '../Patientview/Patientviewinfo';\nimport Wardcarstatus from './Wardcardstatus'\n\nfunction statusPersion(persionstatus, QMNC, QTWER, Birthday) {\n    console.log(persionstatus)\n    // console.log(QMNC)\n    if (persionstatus.length === 0) {\n        console.log(QMNC)\n        // console.log(\"000\" + Number(QMNC.weeks))\n        if (QMNC.length === 0) {\n            return {\n                BornWeight: undefined,\n                BornWeeks: undefined,\n                BornDays: undefined\n            }\n        }\n        const BornWeight = Wardstate.BornWeight(QTWER, Birthday)\n        const BornWeeks = Number(QMNC.weeks)\n        const BornDays = Number(QMNC.days)\n        return {\n            BornWeight: BornWeight,\n            BornWeeks: BornWeeks,\n            BornDays: BornDays\n        }\n    }\n    else {\n        const Weight = Number(persionstatus[0].bweight) * 1000\n        const BornWeeks = Number(persionstatus[0].bweek)\n        const BornDays = Number(persionstatus[0].bday)\n        return {\n            BornWeight: Weight,\n            BornWeeks: BornWeeks,\n            BornDays: BornDays\n        }\n    }\n}\n\nexport function Wardinfouser(props) {\n    const [Visible, setVisible] = useState(false);\n    const [CenterMonitorValue, SetCenterMonitorValue] = useState([])\n    const [scheduleList, SetScheduleList] = useState([]);\n    const [todoList, SetTodoList] = useState([]);\n    const [Timer, SetTimer] = useState(0);\n    const [Persionstatus, SetPersionstatus] = useState([]);\n\n    useEffect(() => {\n        const TimerID = setInterval(() => {\n            SetTimer(Timer + 1)\n        }, 5000)\n        return () => clearInterval(TimerID);\n    }, [Timer])\n\n\n    useEffect(() => {\n        const data = props.location.state.data\n        // const hisid = \"TEST1234\"\n        const hisid = data.PHISTNUM.toString()\n        ApiProvider.getHisidwardvalue(hisid)\n            .then(data => {\n                console.log(data.data)\n\n                SetCenterMonitorValue(data.data[0]);\n            })\n            .catch(err => {\n                console.log(\"Andy test getHisidwardvalue NG \" + JSON.stringify(err));\n            });\n    }, [Timer, props.location.state.data.PHISTNUM])\n\n    useEffect(() => {\n        const data = props.location.state.data\n        const HID = data.PHISTNUM.toString()\n        ApiProvider.getPersionalStatus(HID)\n            .then(data => {\n                console.log(data.data);\n                SetPersionstatus(data.data)\n            })\n            .catch(err => { console.log(err) })\n    }, [props.location.state.data.PHISTNUM])\n\n\n    useEffect(() => {\n        // \"query schedule list\"\n\n        const data = props.location.state.data\n        const source = data\n        const PLOC = source.PLOC\n        const TRANSINID = source.TRANSINID.toString()\n\n        const now = new Date();\n        const todayBegin = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n        const startTime = todayBegin.toISOString().split(\".\")[0];\n        const endTime = new Date(todayBegin.getTime() + 24 * 60 * 60 * 1000).toISOString().split(\".\")[0];\n        ApiProvider.getOnePatientSchedule(TRANSINID, startTime, endTime)\n            .then(result => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(result.data));\n                SetScheduleList(result.data);\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }, [props.location.state.data.TRANSINID]);\n\n    useEffect(() => {\n        // \"query todo list\"\n        const data = props.location.state.data\n        const source = data\n        const PLOC = source.PLOC\n        const TRANSINID = source.TRANSINID.toString()\n        ApiProvider.getOneTodo(TRANSINID, source.PCASENO.toString())\n            .then(result => {\n                console.log(\"getOneTodo OK \" + JSON.stringify(result.data));\n                SetTodoList(result.data);\n            })\n            .catch(err => {\n                console.log(\"getOneTodo NG \" + JSON.stringify(err));\n            });\n    }, [props.location.state.data.PCASENO]);\n\n    function renderScheduleItem() {\n        if (scheduleList.length === 0) {\n            return (\n                <div style={{ height: \"50px\", paddingLeft: \"15px\", display: \"flex\", alignItems: \"center\" }}>\n                    沒有排程\n                </div>\n                // <div>沒有排程</div>\n            )\n        } else {\n            let DataFormat = scheduleList.sort((a, b) => {\n                let tempTimeA = moment(a.time, \"YYYY-MM-DD[T]HH:mm:ss\").valueOf()\n                let tempTimeB = moment(b.time, \"YYYY-MM-DD[T]HH:mm:ss\").valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n\n            return DataFormat.map((item, index) => {\n                if (item.type === \"排程\") {\n                    // const rawDateStr = item.time;\n                    const time = moment(item.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n                    const localTime = moment.utc(time).toDate()\n                    const displayTimeStr = moment(localTime).format(\"MM/DD HH:mm\")\n                    return (\n                        <div key={index} style={{ height: \"50px\", display: 'grid', gridTemplateColumns: \"35% 65%\", borderBottomWidth: \"1px\", borderBottomColor: \"rgba(232, 232, 232, 1)\", borderBottomStyle: \"solid\", paddingLeft: \"15px\" }}>\n                            <div style={{ fontSize: \"1rem\", display: \"flex\", paddingLeft: \"15px\", alignItems: \"center\" }}>{displayTimeStr}</div>\n                            <div style={{ fontSize: \"1rem\", display: \"flex\", paddingLeft: \"15px\", alignItems: \"center\" }}>{item.context}</div>\n                        </div>\n                    )\n                }\n            })\n        }\n    }\n    function renderTodoItem() {\n        if (todoList.length === 0) {\n            return (\n                <div style={{ height: \"50px\", paddingLeft: \"15px\", display: \"flex\", alignItems: \"center\" }}>\n                    沒有待辦事項\n                </div>\n                // <div>沒有待辦事項</div>\n            )\n        } else {\n            return todoList.map((item, index) => {\n                if (item.type === \"未完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={false}></Wardinfousercheckbox>)\n                } else if (item.type === \"已完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={true}></Wardinfousercheckbox>)\n                }\n\n            });\n        }\n    }\n\n\n\n\n\n    function valueFormat(value) {\n        if (value === \"\" || value === null || value === undefined) {\n            return \"--\"\n        }\n        return value.toString()\n    }\n    function valueBornWeight(value) {\n        if (value === \"\" || value === null || value === undefined || value === 0) {\n            return \"\"\n        }\n        return value.toString() + \"g > \"\n    }\n\n    const data = props.location.state.data\n    const source = data\n    const Birthday = source.PBIRHDT\n    const QTWER = Wardstate.XM2JSON(source.QTWPER)\n    const QMNC = Wardstate.QMNCXM2JSON(source.QMNC)\n    const ListWeight = Wardstate.WeightList(QTWER)\n    const Weight = Wardstate.NewestWeight(QTWER)\n\n\n    const TRANSINID = source.TRANSINID\n    const TRANSINDT = source.TRANSINDT\n    const DOCLIST = source.PDOCNEW\n    const MainDoc = Wardstate.Doc(DOCLIST, \"B\")\n    const LiveDoc = Wardstate.Doc(DOCLIST, \"D\")\n    const MainNur = Wardstate.Doc(DOCLIST, \"N\")\n    const ICUMainDoc = Wardstate.Doc(DOCLIST, \"U\")\n\n    const BornWeight = statusPersion(Persionstatus, QMNC, QTWER, Birthday).BornWeight\n    const BornWeeks = statusPersion(Persionstatus, QMNC, QTWER, Birthday).BornWeeks\n    const BornDays = statusPersion(Persionstatus, QMNC, QTWER, Birthday).BornDays\n    const status = {\n        date: moment(Birthday, \"YYYYMMDD\").valueOf(),\n        week: BornWeeks,\n        day: BornDays\n    }\n    const AgeStatus = Wardstate.CalculateAge(status)\n\n    // const PBASINFO = data.PBASINFO\n    const caseinfo = {\n        \"HISID\": source.PHISTNUM.toString(),\n        \"CASEID\": source.PCASENO.toString(),\n        \"WEEK_BORN\": BornWeeks,\n        \"DAY_BORN\": BornDays,\n        \"TRANSINID\": TRANSINID,\n        \"TRANSINDT\": TRANSINDT,\n        \"WEIGHT\": QTWER,\n        \"PBASINGNINFO\": source\n    }\n\n    const grewinfo = {\n        \"WEEK_BORN\": BornWeeks,\n        \"DAY_BORN\": BornDays,\n        \"BIRTHDAY\": Birthday\n    }\n    // const patientDetail = fixpatientDate(QENT)\n    return (\n        <div className='wardinfouserlayout'>\n            <Modal\n                width={800}\n                title=\"入院時評估\"\n                visible={Visible}\n                onOk={() => setVisible(false)}\n                onCancel={() => setVisible(false)}\n                footer={null}>\n                <Patientinfo caseinfo={caseinfo}></Patientinfo>\n            </Modal>\n            <div className='wardinfopatient'>\n                <div style={{ height: '50px', display: 'grid', gridTemplateColumns: \"1fr 1fr 1fr\" }}>\n                    <Link to=\"/nicu/ward/wardindex\" style={{ alignItems: \"center\", display: \"flex\" }}>\n                        <t2 className='wardblacktoindex'>&larr;返回總覽</t2>\n                    </Link>\n                    <centerstyle>\n                        <t1 sytle={{ fontSize: \"22px\" }}>NICU-{Number(source.HBEDNO)} {source.PNAMEC.toString().trim()}</t1>\n                    </centerstyle>\n                    <Link to={{ pathname: \"/nicu/patient/\" + source.PHISTNUM.toString().trim(), state: { \"source\": null, \"HISID\": caseinfo.HISID, \"CASEID\": caseinfo.CASEID, \"BEDNUMBER\": Number(source.HBEDNO), \"TYPE\": true, \"TRANSINID\": caseinfo.TRANSINID } }} style={{ alignItems: \"center\", justifyContent: \"flex-end\", display: \"flex\" }}>\n                        <t2 className='wardblacktoindex'>進入病人資料頁面&rarr;</t2>\n                    </Link>\n                </div>\n                <div style={{ height: \"50px\" }}>\n                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <t2>病歷號:{source.PHISTNUM}</t2>\n                        <t2>性別:{gender(source.PSEX)}</t2>\n                        <t2>生日:{moment(Birthday, \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</t2>\n                        <t2>住院日:{source.TRANSINDT}</t2>\n                        <Wardcarstatus source={false} PCASENO={source.PCASENO} PHISTNUM={source.PHISTNUM}></Wardcarstatus>\n                    </div>\n                    <div style={{ display: 'flex', justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\" }}>\n                            <t3 style={{ color: \"rgba(0,0,0,0.7)\" }}>\n                                {valueFormat(BornWeeks)}+{valueFormat(BornDays)}&gt;<span style={{ fontWeight: \"900\" }}>{AgeStatus}</span>\n                            </t3>\n                            <t3 style={{ color: \"rgba(0,0,0,0.7)\", marginLeft: 60 }}>\n                                {valueBornWeight(BornWeight)}<span style={{ fontWeight: \"900\" }}>{valueFormat(Weight)}g</span>\n                            </t3>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,auto)\", gridColumnGap: \"10px\" }}>\n                            <t3>主治 {MainDoc}</t3>\n                            {MainDoc == ICUMainDoc || <t3>加護 {ICUMainDoc}</t3>}\n                            {MainDoc == LiveDoc || <t3>住院 {LiveDoc}</t3>}\n                            {MainNur == '' || <t3>NP {MainNur}</t3>}\n                            <div className='wardblacktoindex' onClick={() => setVisible(true)}>入院時評估</div>\n                        </div>\n                    </div>\n                </div>\n                <div className='wardinfousercontent'>\n                    <div style={{ padding: \"10px 15px\" }}>\n                        <WardChart CID={source.PCASENO} HISID={source.PHISTNUM} CMvalue={CenterMonitorValue}></WardChart>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\", padding: \"0px 3px\" }}>\n                        <div style={{ borderRadius: \"4px\" }}>\n                            <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>檢驗項目</t2>\n                            </div>\n                            <Labviewlayout Source={\"Wardview\"} PickerDate={moment(moment().format('YYYYMMDD')).valueOf()} caseinfo={caseinfo}></Labviewlayout>\n                        </div>\n                        <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\", height: 446 }}>\n                            <Wardgrewchart caseinfo={caseinfo} grewinfo={grewinfo} Data={source} WeightList={ListWeight} type={true}></Wardgrewchart>\n                        </div>\n                    </div>\n                    <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\", marginTop: \"10px\", marginRight: \"3px\" }}>\n                        {<Notice caseinfo={caseinfo} disableEdit={true}></Notice>}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\", marginTop: \"10px\", paddingRight: \"3px\" }}>\n                        <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\" }}>\n                            <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>排程</t2>\n                            </div>\n                            <div style={{ maxHeight: \"200px\", overflow: 'auto', minHeight: \"50px\" }}>\n                                {renderScheduleItem()}\n                            </div>\n                        </div>\n                        <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\" }}>\n                            <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>待辦事項</t2>\n                            </div>\n                            <div style={{ maxHeight: \"200px\", overflow: 'auto', minHeight: \"50px\" }}>\n                                {renderTodoItem()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n} \n","import React, { Component } from 'react';\nimport * as antswitch from 'antd';\nimport Wardcarddetail from '../Wardcard/Wardcarddetail';\nimport Unpreviewwardcarddetail from '../Wardcard/UnpreviewWardCardDetail'\nimport Wardinfoindex from '../Wardinfoindex'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport './Bedview.scss'\nimport moment from 'moment';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport * as WardinfouserK from '../Wardinfouser-k'\n\n\nclass Bedview extends Component {\n    state = {\n        index: true,\n        previewmode: false,\n        simplemode: true,\n        SelectHISID: null,\n        source: [],\n        prePath: null\n    };\n    HBEDApiGet() {\n        ApiProvider.getTableHBED()\n            .then(data => { this.setState({ source: data.data }) })\n            .catch(err => { console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err)); });\n    }\n    componentDidMount() {\n        this.setState({ prePath: this.props.location.pathname })\n        this.HBEDApiGet();\n    }\n\n    componentDidUpdate() {\n        const path = this.props.location.pathname\n        const { prePath } = this.state\n        if (prePath !== path) {\n            this.setState({ prePath: this.props.location.pathname })\n            if (this.props.location.pathname === \"/nicu/ward/wardindex\") {\n                this.setState({ SelectHISID: null })\n            }\n        }\n    }\n\n    onWardcardDisplay() {\n        const simple_style = { display: \"grid\", gridTemplateColumns: \"350px 1fr\", gridGap: \"5px\", marginTop: \"5px\" }\n        const Unsimple_style = { display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr 1fr\", gridTemplateRows: \"1fr 1fr 1fr\", gridGap: \"5px\", marginTop: \"5px\" }\n        const source = this.state.source;\n        if (source === null || source === undefined || source.length === 0) {\n            return null\n        }\n        const wardcarddetaillist = []\n        //simplemode true:病人摘要檢視(開) false:病人摘要檢視(關)\n        //previewmode true:床頭卡顯示(繁) flase:床頭卡顯示(簡) \n        if (this.state.simplemode) {\n            for (let index = 0; index < source.length; index++) {\n                const element = source[index]\n                const string = \"/nicu/ward/wardinfo/\" + element.PHISTNUM.toString().trim()\n                if (element.PHISTNUM.toString().trim() !== \"\") {\n                    wardcarddetaillist.push(\n                        <Link key={index} to={{ pathname: string, state: { data: element } }}\n                            style={{ border: this.state.SelectHISID === element.PHISTNUM ? \"2px solid rgb(59,151,224)\" : \"2px solid rgba(59,151,224,0.4)\", borderRadius: \"4px\" }}\n                            onClick={() => { this.setState({ SelectHISID: element.PHISTNUM }) }}>\n                            <Wardcarddetail key={index} data={element} previewmode={this.state.previewmode} hbedlist={source} />\n                        </Link>\n                    )\n                }\n            }\n            return (\n                <div style={this.state.simplemode ? simple_style : Unsimple_style}>\n                    <div className='wardcardcontent'>\n                        {wardcarddetaillist}\n                    </div>\n                    <Switch>\n                        <Route path={`${this.props.match.path}/wardindex`} component={Wardinfoindex} />\n                        <Route path={`${this.props.match.path}/wardinfo`} component={WardinfouserK.Wardinfouser} />\n                    </Switch>\n                </div>\n            );\n        }\n        else {\n            for (let index = 1; index < 15; index++) {\n                const element = source.filter(function (value, i) {\n                    return Number(value.HBEDNO) === index\n                })\n                if (index === 4 || index === 13) {\n                    //沒有4號以及13號床\n                    continue\n                }\n                if (element.length === 0) {\n                    wardcarddetaillist.push(\n                        <div style={{ border: \"1px solid rgba(59, 151, 225, 1)\" }}>\n                            <Unpreviewwardcarddetail bednumber={index} key={index} previewmode={this.state.previewmode} />\n                        </div>\n                    )\n                }\n                else {\n                    if (element[0].PHISTNUM.toString().trim() === \"\") {\n                        wardcarddetaillist.push(\n                            <div style={{ border: \"1px solid rgba(59, 151, 225, 1)\" }}>\n                                <Unpreviewwardcarddetail bednumber={index} key={index} previewmode={this.state.previewmode} />\n                            </div>\n                        )\n                    }\n                    else {\n                        wardcarddetaillist.push(\n                            <div style={{ border: \"1px solid rgba(59, 151, 225, 1)\" }}>\n                                <Wardcarddetail key={index} data={element[0]} previewmode={this.state.previewmode} hbedlist={source} />\n                            </div>\n                        )\n                    }\n                }\n            }\n            return (\n                <div style={this.state.simplemode ? simple_style : Unsimple_style}>\n                    {wardcarddetaillist}\n                </div>\n            );\n        }\n    }\n\n\n\n    render() {\n        function switch_titile_string(hisid, source) {\n            function addzero(value) {\n                if (value < 10) {\n                    return \"0\" + value\n                }\n                else return value\n            }\n            if (hisid === null) {\n                return \"NICU總覽\"\n            }\n            else {\n                const filterdata = source.filter(function (item, index, array) {\n                    return item.PHISTNUM === HISID;\n                });\n                const HBEDNUMBER = addzero(parseInt(filterdata[0].HBEDNO))\n                return \"NI-\" + HBEDNUMBER + \"病人資訊摘要\"\n            }\n        }\n        const source = this.state.source\n        const HISID = this.state.SelectHISID\n        const title = switch_titile_string(HISID, source)\n        const WardCard = this.onWardcardDisplay()\n\n        return (\n            <div>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridGap: \"5px\" }}>\n                        <div style={{ height: \"40px\", display: \"flex\", alignItems: \"center\" }}>\n                            <t2 style={{ color: \"rgba(0, 0, 0, 0.85)\" }}>住院病人資訊 > {title}</t2>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: 'center', width: \"200px\" }}>\n                            <antswitch.Switch style={{ backgroundColor: this.state.previewmode === true ? \"#001a6d\" : \"rgba(0, 0, 0, 0.25)\" }} checkedChildren=\"即時生命徵象\" unCheckedChildren=\"即時生命徵象\" defaultChecked={this.state.previewmode} onChange={(checked) => { this.setState({ previewmode: checked }) }} />\n                            <antswitch.Switch style={{ backgroundColor: this.state.simplemode === true ? \"#001a6d\" : \"rgba(0, 0, 0, 0.25)\" }} checkedChildren=\"顯示摘要\" unCheckedChildren=\"顯示摘要\" defaultChecked={this.state.simplemode} onChange={(checked) => { this.setState({ simplemode: checked }) }} />\n                        </div>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto auto\", gridColumnGap: \"10px\" }}>\n                        <t3>資料更新時間</t3>\n                        <t3>{moment().format('YYYY/MM/DD HH:mm:ss')}</t3>\n                    </div>\n                </div>\n                {WardCard}\n            </div>\n        );\n    }\n}\n\nexport default Bedview;\n","import React, { Component } from 'react';\nimport { Icon, Upload, Table, Input, DatePicker, Button } from 'antd';\nimport { Link } from 'react-router-dom';\nimport * as ApiProvider from '../API/ApiProvider';\nimport moment from 'moment';\n\nclass Historyview extends Component {\n    state = {\n        MouseClick: 0,\n        allPatientDisplayData: [],\n        allPatientUnset: [],\n        allPatientSet: [],\n        selectedRowsArray: [],\n        hospitalindex: '',\n        selectedFile: null,\n        fileList: [],\n        uploading: false,\n        name: '',\n        hisid: '',\n        doctor: '',\n        transOuttime: undefined,\n        deletedisable: true,\n        selectedRowKeys: []\n    }\n\n    componentDidMount() {\n        this.onChangeName = this.onChangeName.bind(this)\n        this.onChangeHisid = this.onChangeHisid.bind(this)\n        //this.onChangeDoctor = this.onChangeDoctor.bind(this)\n        // this.onClickSearch = this.onClickSearch.bind(this)\n        this.onChangeDate = this.onChangeDate.bind(this)\n        console.log(\"Historyview componentDidMount\")\n        ApiProvider.getAllPatient()\n            .then(result => {\n                console.log(\"getAllPatient OK \" + JSON.stringify(result));\n                console.log(result.data)\n                const setedUser = result.data.filter(item => item.patient.transouttime === \"unset\");\n                const unsetUser = result.data.filter(item => item.patient.transouttime !== \"unset\");\n                console.log(unsetUser)\n                this.setState({\n                    allPatientDisplayData: setedUser,\n                    allPatientUnset: unsetUser,\n                    allPatientSet: setedUser\n                });\n            })\n            .catch(err => {\n                console.log(\"getAllPatient NG \" + JSON.stringify(err));\n            });\n    }\n\n    MouseClickTable(record) {\n        //console.log(this.state.MouseClick)\n        this.setState({\n            MouseClick: record\n        })\n    }\n\n    EditStyle(HISID, CASEID, TRANSINID, key, transouttime) {\n        const fromHistory = !this.state.deletedisable;\n        if (key === this.state.MouseClick) {\n            return (\n                <Link to={{ pathname: \"/nicu/patient/\" + HISID, state: { fromHistory, \"source\": [], \"HISID\": HISID, \"CASEID\": CASEID, \"BEDNUMBER\": 0, \"TYPE\": false, \"TRANSINID\": TRANSINID, \"transouttime\": transouttime } }} style={{ height: \"40px\", width: \"100px\", borderRadius: \"4px\" }}>檢視</Link>\n            );\n        }\n        else return null\n    }\n\n    genderswitch(key) {\n        if (key === \"M\") {\n            return '男'\n        }\n        else {\n            return '女'\n        }\n    }\n\n    bornweeks(birthday) {\n        //console.log(Math.floor(birthday / 7))\n        //console.log(birthday % 7)\n        const weeks = Math.floor(birthday / 7)\n        const days = birthday % 7\n        if (days === 0) {\n            return weeks + '週歲'\n        }\n        else return weeks + '週' + days + '天'\n    }\n\n    exportClick() {\n        this.state.selectedRowsArray.map((data, index) => {\n            ApiProvider.exportJson(data.hospitalindex)\n                .then(result => {\n                    ApiProvider.downloadFile(result.data.filename)\n                        .then(resultD => {\n                            const url = window.URL.createObjectURL(new Blob([JSON.stringify(resultD.data)]));\n                            const link = document.createElement('a');\n                            link.href = url;\n                            link.setAttribute('download', result.data.filename);\n                            document.body.appendChild(link);\n                            link.click();\n                        }).catch(err => { })\n                })\n                .catch(err => { })\n        })\n    }\n\n    handleUpload = () => {\n        const { fileList } = this.state\n        const formData = new FormData()\n        fileList.forEach(file => {\n            formData.append('file', file)\n        })\n\n        this.setState({\n            uploading: true,\n        })\n\n        ApiProvider.uploadFile(formData)\n            .then(res => {\n                ApiProvider.importJson(res.data)\n                    .then(result => {\n                        ApiProvider.getAllPatient()\n                            .then(result => {\n                                const setedUser = result.data.filter(item => item.patient.transouttime !== \"unset\");\n                                const unsetUser = result.data.filter(item => item.patient.transouttime === \"unset\");\n                                this.setState({\n                                    allPatientDisplayData: setedUser,\n                                    allPatientUnset: unsetUser,\n                                    allPatientSet: setedUser\n                                });\n                            })\n                            .catch(err => {\n                                console.log(\"getAllPatient NG \" + JSON.stringify(err));\n                            });\n                    })\n                    .catch(err => { })\n            })\n            .catch(err => { })\n    }\n\n    deleteHistoryUser() {\n        this.state.selectedRowsArray.map((data, index) => {\n            ApiProvider.deletePatient(data.hospitalindex, data.hospitalnumber, data.id)\n                .then(res => {\n                    ApiProvider.getAllPatient()\n                        .then(result => {\n                            const setedUser = result.data.filter(item => item.patient.transouttime === \"unset\");\n                            const unsetUser = result.data.filter(item => item.patient.transouttime !== \"unset\");\n                            this.setState({\n                                allPatientDisplayData: unsetUser,\n                                allPatientUnset: unsetUser,\n                                allPatientSet: setedUser,\n                                selectedRowKeys: []\n                            });\n                        })\n                        .catch(err => {\n                            console.log(\"getAllPatient NG \" + JSON.stringify(err));\n                        });\n                })\n                .catch(err => { })\n        })\n    }\n\n    onChangeName(event) { this.setState({ name: event.target.value }) }\n    onChangeHisid(event) { this.setState({ hisid: event.target.value }) }\n    onChangeDate(date, dateString) { this.setState({ transOuttime: dateString }) }\n\n    Searchbar() {\n        const InputGroup = Input.Group;\n        const { RangePicker } = DatePicker;\n\n        return (\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        病歷號碼:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"輸入病歷號碼\" onChange={this.onChangeHisid} value={this.state.hisid}></Input>\n                    </div>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <div style={{ fontSize: '16px' }}>\n                        個案姓名:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"輸入個案姓名\" onChange={this.onChangeName} value={this.state.name}></Input>\n                    </div>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        轉入時間:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        {/* <InputGroup compact> */}\n                        {/* <DatePicker placeholder=\"選擇轉出時間\" onChange={this.onChangeDate} /> */}\n                        <RangePicker getCalendarContainer={triggerNode => triggerNode.parentNode} style={{ width: \"250px\" }} format={\"YYYY/MM/DD\"} locale={\"zh_TW\"}\n                            placeholder={[\"請輸入日期\", \"請輸入日期\"]} onChange={this.onChangeDate} allowClear={false} />\n                        {/* </InputGroup> */}\n                    </div>\n                </div>\n\n                {/*<div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        主治醫生:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"選擇主治醫師\" onChange={this.onChangeDoctor} value={this.state.doctor}></Input>\n                    </div>\n        </div>*/}\n                {/* <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <Button shape=\"circle\" icon=\"search\" onClick={this.onClickSearch} />\n                </div> */}\n            </div>\n        );\n    }\n\n    handleDisplaySwitchChange(event) {\n        this.setState({\n            allPatientDisplayData: event.target.value == 'in' ? this.state.allPatientSet : this.state.allPatientUnset,\n            deletedisable: event.target.value == 'in' ? true : false\n        })\n    }\n\n\n    render() {\n        // rowSelection object indicates the need for row selection\n        const { selectedRowKeys } = this.state\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: (selectedRowKeys, selectedRows) => {\n                //console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows)\n                this.setState({\n                    selectedRowsArray: selectedRows,\n                    selectedRowKeys: selectedRowKeys\n                })\n            },\n            getCheckboxProps: record => ({\n                disabled: record.name === 'Disabled User', // Column configuration not to be checked\n                name: record.name,\n            }),\n        };\n        const columns = [\n            {\n                title: '轉出時的床號',\n                dataIndex: 'hbedno',\n                key: 'hbedno',\n                width: \"8%\"\n            },\n            {\n                title: '病歷號碼',\n                dataIndex: 'id',\n                key: 'id',\n                width: \"8%\"\n            },\n            {\n                title: '個案名稱',\n                dataIndex: 'name',\n                key: 'name',\n                width: \"8%\"\n            },\n            {\n                title: '性別',\n                dataIndex: 'gender',\n                key: 'gender',\n                width: \"6%\"\n            },\n            {\n                title: '出生體重',\n                dataIndex: 'weight',\n                key: 'weight',\n                width: \"6%\"\n            },\n            {\n                title: '出生周數',\n                dataIndex: 'birweek',\n                key: 'birweek',\n                width: \"6%\"\n            },\n            {\n                title: '轉入時年齡',\n                dataIndex: 'transinage',\n                key: 'transinage',\n                width: \"6%\"\n            },\n            {\n                title: '轉出時年齡',\n                dataIndex: 'transoutage',\n                key: 'transoutage',\n                width: \"6%\"\n            },\n            {\n                title: '院序號',\n                dataIndex: 'hospitalnumber',\n                key: 'hospitalnumber',\n                width: \"15%\"\n            },\n            {\n                title: '索引號',\n                dataIndex: 'hospitalindex',\n                key: 'hospitalindex',\n                width: \"15%\"\n            },\n            {\n                title: '轉出ICU時間',\n                dataIndex: 'transicutime',\n                key: 'transicutime',\n                width: \"9%\"\n            },\n            {\n                dataIndex: 'clickstate',\n                key: 'clickstate',\n                width: \"7%\"\n            }\n        ];\n        function search(data, searchName) {\n            if (searchName === \"\" || searchName === undefined || searchName === null) {\n                return data\n            }\n            const filterData = data.filter(function (item, index, arr) {\n                const fn = item.patient.pnamec.toString().trim()\n                return fn.indexOf(searchName) >= 0\n            })\n            return filterData\n        }\n        function searchTime(data, searchTime) {\n            if (searchTime === \"\" || searchTime === undefined || searchTime === null) {\n                return data\n            }\n            const filterData = data.filter(function (item, index, arr) {\n                // console.log(item)\n                const fn = moment(item.patient.transintime.toString().trim(), \"YYYYMMDD\").valueOf()\n                const st = moment(searchTime[0].toString().trim(), \"YYYYMMDD\").valueOf()\n                const et = moment(searchTime[1].toString().trim(), \"YYYYMMDD\").valueOf()\n                return st <= fn && fn <= et\n            })\n            return filterData\n        }\n\n        function searchNO(data, searchNO) {\n            if (searchNO === \"\" || searchNO === undefined || searchNO === null) {\n                return data\n            }\n            const filterData = data.filter(function (item, index, arr) {\n                const HID = item.patient.hisid.toString().trim()\n                return HID.match(searchNO)\n            })\n            return filterData\n        }\n        // const dataArr = this.state.allPatientDisplayData\n        // if (dataArr.length === 0) {\n        //     return null\n        // }\n        const rowData = this.state.allPatientDisplayData\n        const d = search(rowData, this.state.name)\n        const f = searchTime(d, this.state.transOuttime)\n        const H = searchNO(f, this.state.hisid)\n        if (H === undefined || H === null) { return null }\n        const data = H.map((item, index) => {\n            return {\n                key: index,\n                id: item.patient.hisid,\n                name: item.patient.pnamec,\n                gender: this.genderswitch(item.patient.psex),\n                weight: item.patientinfo.length === 0 ? \"--\" : Number(item.patientinfo[0].bweight) * 1000,\n                birweek: item.patientinfo.length === 0 ? \"--\" : item.patientinfo[0].bweek + \"週\" + item.patientinfo[0].bday + '天',\n                transage: \"--\",\n                hospitalnumber: item.patient.caseid,\n                hospitalindex: item.patient.transinid,\n                transicutime: item.patient.transouttime,\n                maindoc: \"--\",\n                clickstate: this.EditStyle(item.patient.hisid, item.patient.caseid, item.patient.transinid, index, item.patient.transouttime)\n            }\n        });\n\n        const { uploading, fileList } = this.state;\n        const props = {\n            onRemove: file => {\n                this.setState(state => {\n                    const index = state.fileList.indexOf(file);\n                    const newFileList = state.fileList.slice();\n                    newFileList.splice(index, 1);\n                    return {\n                        fileList: newFileList,\n                    };\n                });\n            },\n            beforeUpload: file => {\n                this.setState(state => ({\n                    fileList: [...state.fileList, file],\n                }));\n                return false;\n            },\n            fileList,\n            showUploadList: false\n        };\n\n        return (\n            <div style={{ paddingLeft: \"24px\", paddingRight: \"24px\" }}>\n\n                <div style={{ display: \"flex\", marginLeft: \"20px\", alignItems: 'center' }}>\n                    <div style={{ fontSize: \"22px\", height: '50px', lineHeight: \"50px\", marginRight: 10 }}>\n                        歷史病歷管理\n                </div>\n                    <div value=\"in\" className={this.state.deletedisable ? \"vitalBtnSource\" : \"vitalBtnSelectSource\"} style={{ marginRight: 5 }} onClick={() => { this.handleDisplaySwitchChange({ target: { value: 'in' } }) }}>\n                        住院中\n                    </div>\n                    <div value=\"out\" className={!this.state.deletedisable ? \"vitalBtnSource\" : \"vitalBtnSelectSource\"} onClick={() => { this.handleDisplaySwitchChange({ target: { value: 'out' } }) }}>\n                        已轉出\n                     </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\", height: '50px', gridColumnGap: \"10px\" }}>\n                    {this.Searchbar()}\n                    {this.state.deletedisable == false ? <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gridGap: \"10px\", marginRight: this.state.deletedisable == false ? 0 : -200 }}>\n                        <div style={{ display: \"flex\", justifyContent: 'space-between', alignItems: \"center\" }}>\n                            <Upload {...props}>\n                                <Button style={{ width: \"100%\" }}>\n                                    <Icon type=\"upload\" /> 選擇檔案\n                                </Button>\n                            </Upload>\n                            <Button\n                                onClick={this.handleUpload.bind(this)}\n                                disabled={fileList.length === 0}\n                                style={{ width: \"100%\" }}\n                            >\n                                匯入\n                            </Button>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                            <Button onClick={this.exportClick.bind(this)} style={{ width: \"100%\" }}>匯出</Button>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                            <Button onClick={this.deleteHistoryUser.bind(this)} style={{ width: \"100%\" }}>刪除</Button>\n                        </div>\n                    </div> : null}\n                </div>\n                <div>\n                    <Table rowSelection={rowSelection} columns={columns} dataSource={data} onRow={record => {\n                        return {\n                            onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                            onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                        };\n                    }} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Historyview;\n","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport './Crosssectionvitalsignchart.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport X2JS from 'x2js';\n\nclass Crosssectionvitalsignchart extends Component {\n    state = {\n        change: false,\n        sourcedata: [],\n        prepickerdate: null,\n        presource: null,\n        preinterval: null,\n        prewidth: null,\n    }\n\n    centermonitorApiDataGet() {\n        function formatTimer(interval, pickerdate) {\n            const endTimeStamp = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    start: moment(endTimeStamp - (24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                    interval: 0\n                }\n            }\n            if (interval === 1) {\n                return {\n                    start: moment(endTimeStamp - (3 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                    interval: 1\n                }\n            }\n            if (interval === 2) {\n                return {\n                    start: moment(endTimeStamp - (7 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                    interval: 2\n                }\n            }\n            return {\n                start: moment(endTimeStamp - (14 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                interval: 3\n            }\n        }\n        function formatPickerDate(PickerDate) {\n            const nowDateForSeven = moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf() + (7 * 60 * 60 * 1000)\n            const newDateForZero = moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n            const now = moment().valueOf()\n            if (PickerDate === newDateForZero) {\n                if (now < nowDateForSeven) {\n                    return PickerDate - (24 * 60 * 60 * 1000)\n                }\n                return PickerDate\n            }\n            return PickerDate\n        }\n        const { type, interval, PickerDate, HID, source, CID, svg_id } = this.props\n        const PHID = HID.toString().trim()\n        const PCID = CID.toString().trim()\n        const forPicker = formatPickerDate(PickerDate)\n        const optionvalue = formatTimer(interval, forPicker)\n        if (source === \"CM\") {\n            if (type === \"abp\") {\n                ApiProvider.getPatientwardvalueBoxPlot(PHID, optionvalue.start, optionvalue.end, type, optionvalue.interval)\n                    .then(data => {\n                        d3.select(\"#\" + svg_id).remove()\n                        this.drawChart(data.data);\n                    })\n                    .catch(err => { console.log(err) })\n            }\n            if (type === \"hr\" || type === \"rr\" || type === \"spo2\") {\n                ApiProvider.getPatientwardvalueBoxPlot(PHID, optionvalue.start, optionvalue.end, type, optionvalue.interval)\n                    .then(data => {\n                        d3.select(\"#\" + svg_id).remove()\n                        this.drawChart(data.data);\n                    })\n                    .catch(err => { console.log(err) })\n            }\n            if (type === \"nbp\") {\n                ApiProvider.getVitalSignData(PHID, optionvalue.start, optionvalue.end, type)\n                    .then(data => {\n                        d3.select(\"#\" + svg_id).remove()\n                        this.drawChart(data.data);\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    })\n            }\n            if (type === \"bt\") {\n                d3.select(\"#\" + svg_id).remove()\n                this.drawChart([]);\n            }\n        }\n        if (source === \"NIS\") {\n            const xm2 = new X2JS()\n            const st = moment(optionvalue.start, \"YYYYMMDDHHmmss\").format(\"YYYYMMDDHHmm\")\n            const et = moment(optionvalue.end, \"YYYYMMDDHHmmss\").format(\"YYYYMMDDHHmm\")\n            const QDVS = ApiProvider.getQDVS(PCID, st, et)\n                .then(data => {\n                    return xm2.xml2js(data.data).outmsg.resconts.rescont\n                })\n                .catch(err => { console.log(err) })\n\n            const QOXY = ApiProvider.getQOXY(PCID, st, et)\n                .then(data => {\n                    return xm2.xml2js(data.data).outmsg.resconts.rescont\n\n                })\n                .catch(err => { console.log(err) })\n            Promise.all([QDVS, QOXY]).then(result => {\n                function FormatNISData(QDVS, QOXY, type) {\n                    var HRNISLIST = []\n                    var RRNISLIST = []\n                    var SBPNISLIST = []\n                    var DBPNISLIST = []\n                    var BTNISLIST = []\n                    var Spo2NISLIST = []\n                    if (Array.isArray(QDVS)) {\n                        for (let index = 0; index < QDVS.length; index++) {\n                            const element = QDVS[index];\n                            const hr = element.pluse\n                            const rr = element.breath\n                            const SBP = element.systolic\n                            const DBP = element.diastolic\n                            const BT = element.temperature\n                            const time = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                            // console.log(element)\n                            // console.log(Number(rr))\n                            if (hr !== undefined) {\n                                if (Number(hr) !== NaN && hr.__text === undefined) {\n                                    HRNISLIST.push({\n                                        Data: hr,\n                                        Time: time\n                                    })\n                                }\n                            }\n                            if (rr !== undefined) {\n                                if (Number(rr) !== NaN && rr.__text === undefined) {\n                                    RRNISLIST.push({\n                                        Data: rr,\n                                        Time: time\n                                    })\n                                }\n                            }\n                            if (SBP !== undefined) {\n                                if (Number(SBP) !== NaN && SBP.__text === undefined) {\n                                    SBPNISLIST.push({\n                                        Data: SBP,\n                                        Time: time\n                                    })\n                                }\n                            }\n                            if (DBP !== undefined) {\n                                if (Number(DBP) !== NaN && DBP.__text === undefined) {\n                                    DBPNISLIST.push({\n                                        Data: DBP,\n                                        Time: time\n                                    })\n                                }\n                            }\n                            if (BT !== undefined) {\n                                // console.log(Number(BT))\n                                // console.log(BT.toString().trim())\n                                if (Number(BT) !== NaN && BT.__text === undefined) {\n                                    BTNISLIST.push({\n                                        Data: BT,\n                                        Time: time\n                                    })\n                                }\n                            }\n                        }\n                    }\n                    if (Array.isArray(QOXY)) {\n                        for (let index = 0; index < QOXY.length; index++) {\n                            const element = QOXY[index];\n                            const spo2 = element.concen\n                            if (spo2 !== undefined) {\n                                if (Number(spo2) !== NaN && spo2.__text === undefined) {\n                                    const time = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                                    Spo2NISLIST.push({\n                                        Data: spo2,\n                                        Time: time\n\n                                    })\n                                }\n                            }\n                        }\n                    }\n                    if (type === \"hr\") { return HRNISLIST }\n                    if (type === \"rr\") { return RRNISLIST }\n                    if (type === \"spo2\") { return Spo2NISLIST }\n                    if (type === \"abp\") { return [SBPNISLIST, DBPNISLIST] }\n                    if (type === \"bt\") { return BTNISLIST }\n                    return []\n                }\n                d3.select(\"#\" + svg_id).remove()\n                console.log(FormatNISData(result[0], result[1], type))\n                this.drawChart(FormatNISData(result[0], result[1], type))\n            })\n        }\n    }\n    componentDidUpdate() {\n        const { interval, PickerDate, HID, source, width } = this.props\n        const PrePickerDate = this.state.prepickerdate\n        if (PrePickerDate !== PickerDate) {\n            this.setState({ prepickerdate: this.props.PickerDate })\n            this.centermonitorApiDataGet()\n        }\n        const Presource = this.state.presource\n        if (Presource !== source) {\n            this.setState({ presource: source })\n            this.centermonitorApiDataGet()\n        }\n        if (this.state.prewidth !== width) {\n            this.setState({ prewidth: width });\n            this.centermonitorApiDataGet();\n        }\n        const Preinterval = this.state.preinterval\n        if (interval !== Preinterval) {\n            this.setState({ preinterval: interval })\n            this.centermonitorApiDataGet()\n        }\n        const PreHID = this.state.prehid\n        if (HID !== PreHID) {\n            this.setState({ prehid: HID })\n            this.centermonitorApiDataGet()\n        }\n    }\n\n    componentDidMount() {\n\n        this.setState({\n            prepickerdate: this.props.PickerDate,\n            presource: this.props.source,\n            preinterval: this.props.interval,\n            prehid: this.props.prehid,\n            prewidth: this.props.width,\n        })\n        this.centermonitorApiDataGet()\n\n    }\n    drawChart(sourcedata) {\n        function formatxArray(startTime, interval) {\n            var xAxisarray = []\n            if (interval === 0) {\n                for (let index = 0; index < 25; index++) {\n                    if (index % 4 === 0) {\n                        xAxisarray.push(startTime + (index * 60 * 60 * 1000))\n                    }\n                }\n            }\n            else if (interval === 1) {\n                for (let index = 0; index < 19; index++) {\n                    if (index % 2 === 0) {\n                        xAxisarray.push(startTime + (index * 4 * 60 * 60 * 1000))\n                    }\n                }\n            }\n            else if (interval === 2) {\n                for (let index = 0; index < 21; index++) {\n                    xAxisarray.push(startTime + (index * 60 * 60 * 1000 * 8))\n                }\n            }\n            else {\n                for (let index = 0; index < 14; index++) {\n                    xAxisarray.push(startTime + (index * 60 * 60 * 1000 * 24))\n                }\n            }\n            return xAxisarray\n        }\n\n        function formatbotaxis(time, interval) {\n            var xAxisarray = []\n            if (interval === 0) {\n                xAxisarray.push(time + (17 * 60 * 60 * 1000))\n            }\n            else if (interval === 1) {\n                for (let index = 0; index < 3; index++) {\n                    xAxisarray.push(time + (17 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000))\n                }\n            }\n            else if (interval === 2) {\n                for (let index = 0; index < 21; index++) {\n                    xAxisarray.push(time + (index * 60 * 60 * 1000 * 8))\n                }\n            }\n            else {\n                for (let index = 0; index < 14; index++) {\n                    xAxisarray.push(time + (index * 60 * 60 * 1000 * 24))\n                }\n            }\n            return xAxisarray\n        }\n\n        var formatHour = d3.timeFormat(\"%H\")\n\n        function multiFormat(date) {\n            return formatHour(date)\n        }\n\n\n        //vitaldays true:threeday\n        const {\n            comein,\n            id_key,\n            svg_id,\n            height,\n            width,\n            interval, //0:1天 1:3天 2:1週 3:2週 \n            axisBot,\n            axisTop,\n            circlrcolor,\n            max,\n            min,\n            upper,\n            lower,\n            source,\n            type,\n            PickerDate,\n        } = this.props\n\n        function formatTimer(interval, pickerdate) {\n            const endTimeStamp = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    start: endTimeStamp - (24 * 60 * 60 * 1000),\n                    end: endTimeStamp,\n                    interval: 0\n                }\n            }\n            if (interval === 1) {\n                return {\n                    start: endTimeStamp - (3 * 24 * 60 * 60 * 1000),\n                    end: endTimeStamp,\n                    interval: 1\n                }\n            }\n            if (interval === 2) {\n                return {\n                    start: endTimeStamp - (7 * 24 * 60 * 60 * 1000),\n                    end: endTimeStamp,\n                    interval: 2\n                }\n            }\n            return {\n                start: endTimeStamp - (14 * 24 * 60 * 60 * 1000),\n                end: endTimeStamp,\n                interval: 3\n            }\n        }\n        function formatPickerDate(PickerDate) {\n            const nowDateForSeven = moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf() + (7 * 60 * 60 * 1000)\n            const newDateForZero = moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n            const now = moment().valueOf()\n            if (PickerDate === newDateForZero) {\n                if (now < nowDateForSeven) {\n                    return PickerDate - (24 * 60 * 60 * 1000)\n                }\n                return PickerDate\n            }\n            return PickerDate\n        }\n\n        // const width = window.screen.availWidth * 0.25, height = 100, viewwidth = width - 50, rect_width = width / 46\n        const viewwidth = width - 50\n        // const EndTime = formatendtime(defaultdate)\n        // var vital_interval = formatintervaldays(EndTime, vitaldays)\n\n        const forPicker = formatPickerDate(PickerDate)\n        const optionvalue = formatTimer(interval, forPicker)\n        console.log(optionvalue)\n        var y = d3.scaleLinear()\n            .domain([min, max])\n            .range([height, 0])\n\n        var x = d3.scaleLinear()\n            .domain([optionvalue.start, optionvalue.end])\n            .range([0, viewwidth - 1])\n\n\n        var yAxis = d3.axisLeft(y)\n            .tickValues([min, max])\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(15);\n\n\n        const xAxisvalue = formatxArray(optionvalue.start, interval)\n        const xAxisbotvalue = formatbotaxis(optionvalue.start, interval)\n\n        var xAxis = d3.axisTop(x)\n            .tickValues(xAxisvalue)\n            .tickSize(0, 0)\n            .tickPadding(0)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n        var xAxisbot = d3.axisTop(x)\n            .tickValues(xAxisbotvalue)\n            .tickSize(0, 0)\n            .tickPadding(12)\n            .tickFormat(function (d) { return moment(d).format(\"MM/DD\") });\n\n        var svg\n        if (axisTop) {\n            svg = d3.select(\"#\" + id_key)\n                .append(\"svg\")\n                .attr(\"id\", svg_id)\n                .style(\"width\", width + 40)\n                .style(\"height\", height + 25)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + 50 + \",\" + 20 + \")\");\n        }\n        else {\n            if (axisBot) {\n                svg = d3.select(\"#\" + id_key)\n                    .append(\"svg\")\n                    .attr(\"id\", svg_id)\n                    .style(\"width\", width + 40)\n                    .style(\"height\", height + 25)\n                    .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + 50 + \",\" + 5 + \")\");\n            }\n            else {\n\n                svg = d3.select(\"#\" + id_key)\n                    .append(\"svg\")\n                    .attr(\"id\", svg_id)\n                    .style(\"width\", width + 40)\n                    .style(\"height\", height + 10)\n                    .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + 50 + \",\" + 5 + \")\");\n            }\n        }\n\n        if (axisTop) {\n            svg.append(\"g\")\n                .call(xAxis)\n                .attr(\"class\", \"axis\");\n        }\n\n        if (axisBot) {\n            svg.append(\"g\")\n                .call(xAxisbot)\n                .attr(\"class\", \"axis\");\n\n        }\n\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n        //上下橫線\n        svg.append('line')\n            .attr('x1', x(optionvalue.start))\n            .attr('y1', y(max))\n            .attr('x2', x(optionvalue.end))\n            .attr('y2', y(max))\n            .style('stroke', 'rgba(220,220,220,1)')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n        svg.append('line')\n            .attr('x1', x(optionvalue.start))\n            .attr('y1', y(min))\n            .attr('x2', x(optionvalue.end))\n            .attr('y2', y(min))\n            .style('stroke', 'rgba(220,220,220,1)')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n\n        if (interval === 0) {\n            for (let index = 0; index < 25; index++) {\n                if ((index % 24) === 0) {\n                    svg.append('line')\n                        .attr('x1', x(optionvalue.start + (index * 60 * 60 * 1000)))\n                        .attr('y1', 0)\n                        .attr('x2', x(optionvalue.start + (index * 60 * 60 * 1000)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(0,0,0,0.2)')\n                        .style('stroke-width', 2);\n                } else if (index % 8 === 0) {\n                    svg.append('line')\n                        .attr('x1', x(optionvalue.start + (index * 60 * 60 * 1000)))\n                        .attr('y1', 0)\n                        .attr('x2', x(optionvalue.start + (index * 60 * 60 * 1000)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(0,0,0,0.2)')\n                        .style('stroke-width', 2);\n                }\n                else {\n                    svg.append('line')\n                        .attr('x1', x(optionvalue.start + (index * 60 * 60 * 1000)))\n                        .attr('y1', 0)\n                        .attr('x2', x(optionvalue.start + (index * 60 * 60 * 1000)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(220,220,220,1)')\n                        .style('stroke-width', 1)\n                        .style('stroke-dasharray', 5.5);\n                }\n            }\n\n            drawshadow(optionvalue.start, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n\n        }\n        if (interval === 1) {\n            for (let index = 0; index < 19; index++) {\n                if ((index % 6) === 0) {\n                    svg.append('line')\n                        .attr('x1', x(optionvalue.start + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y1', 0)\n                        .attr('x2', x(optionvalue.start + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(0,0,0,0.2)')\n                        .style('stroke-width', 2);\n                } else if (index % 2 === 0) {\n                    svg.append('line')\n                        .attr('x1', x(optionvalue.start + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y1', 0)\n                        .attr('x2', x(optionvalue.start + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(0,0,0,0.2)')\n                        .style('stroke-width', 2);\n                }\n                else {\n                    svg.append('line')\n                        .attr('x1', x(optionvalue.start + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y1', 0)\n                        .attr('x2', x(optionvalue.start + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(220,220,220,1)')\n                        .style('stroke-width', 1)\n                        .style('stroke-dasharray', 5.5);\n                }\n            }\n\n            drawshadow(optionvalue.start, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n        }\n        if (interval === 2) {\n            for (let index = 0; index < 22; index++) {\n                if ((index % 3) === 0) {\n                    svg.append('line')\n                        .attr('x1', x(optionvalue.start + (index * 60 * 60 * 1000 * 8)))\n                        .attr('y1', 0)\n                        .attr('x2', x(optionvalue.start + (index * 60 * 60 * 1000 * 8)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(0,0,0,0.2)')\n                        .style('stroke-width', 2);\n                } else {\n                    svg.append('line')\n                        .attr('x1', x(optionvalue.start + (index * 60 * 60 * 1000 * 8)))\n                        .attr('y1', 0)\n                        .attr('x2', x(optionvalue.start + (index * 60 * 60 * 1000 * 8)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(0,0,0,0.2)')\n                        .style('stroke-width', 2);\n                }\n\n            }\n\n            drawshadow(optionvalue.start, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n        }\n        if (interval === 3) {\n            for (let index = 0; index < 15; index++) {\n                svg.append('line')\n                    .attr('x1', x(optionvalue.start + (index * 60 * 60 * 1000 * 24)))\n                    .attr('y1', 0)\n                    .attr('x2', x(optionvalue.start + (index * 60 * 60 * 1000 * 24)))\n                    .attr('y2', height)\n                    .style('stroke', 'rgba(0,0,0,0.2)')\n                    .style('stroke-width', 2);\n            }\n\n            drawshadow(optionvalue.start, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n        }\n\n        function formatBox(startTime, interval) {\n            function interFormat(startTime, interval) {\n                var TimeArray = []\n                for (let index = 0; index < interval; index++) {\n                    if (interval === 24) {\n                        const boxTime = startTime + (30 * 60 * 1000) + (index * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 18) {\n                        const boxTime = startTime + (2 * 60 * 60 * 1000) + (index * 4 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 21) {\n                        const boxTime = startTime + (4 * 60 * 60 * 1000) + (index * 8 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else {\n                        const boxTime = startTime + (12 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                }\n                return TimeArray\n            }\n            if (interval === 0) {\n                return interFormat(startTime, 24)\n            }\n            if (interval === 1) {\n                return interFormat(startTime, 18)\n            }\n            if (interval === 2) {\n                return interFormat(startTime, 21)\n            }\n            return interFormat(startTime, 14)\n        }\n        function formatBoxWidth(viewwidth, interval) {\n            if (interval === 0) {\n                return comein === 'line' ? viewwidth / 27.5 : viewwidth / 25\n            }\n            if (interval === 1) {\n                return comein === 'line' ? viewwidth / 20.5 : viewwidth / 18.5\n            }\n            if (interval === 2) {\n                return comein === 'line' ? viewwidth / 21 : viewwidth / 22.5\n            }\n            return comein === 'line' ? viewwidth / 14 : viewwidth / 14.5\n        }\n        function drawshadow(startTime, interval, lower, upper, type) {\n            const LimitBoxTimer = formatBox(startTime, interval)\n            for (let index = 0; index < LimitBoxTimer.length; index++) {\n                const boxwidth = formatBoxWidth(width, interval)\n                const element = LimitBoxTimer[index];\n                svg.append('line')\n                    .attr('x1', x(element))\n                    .attr('y1', y(lower))\n                    .attr('x2', x(element))\n                    .attr('y2', y(upper))\n                    .style('stroke', circlrcolor)\n                    .style('opacity', 0.5)\n                    .style('stroke-width', boxwidth)\n\n                if (type === \"nbp\" || type === \"abp\") {\n                    svg.append('line')\n                        .attr('x1', x(element))\n                        .attr('y1', y(35))\n                        .attr('x2', x(element))\n                        .attr('y2', y(55))\n                        .style('stroke', circlrcolor)\n                        .style('opacity', 0.2)\n                        .style('stroke-width', boxwidth)\n                }\n            }\n        }\n        function drawData(type, source, sourcedata, interval, boxwidth) {\n            function formatShift(interval) {\n                if (interval === 0) {\n                    return 30 * 60 * 1000\n                }\n                if (interval === 1) {\n                    return 2 * 60 * 60 * 1000\n                }\n                if (interval === 2) {\n                    return 4 * 60 * 60 * 1000\n                }\n                return 12 * 60 * 60 * 1000\n            }\n            if (source === \"CM\") {\n                if (type === \"abp\") {\n                    const dataAbps = sourcedata.abps\n                    const dataAbpd = sourcedata.abpd\n                    for (let index = 0; index < dataAbpd.length; index++) {\n                        const element = dataAbpd[index];\n                        const q1 = element.Q1\n                        const q2 = element.Q2\n                        const q3 = element.Q3\n                        const q4 = element.Q4\n                        const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + formatShift(interval)\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(q1))\n                            .attr(\"y2\", y(q4))\n                            .attr(\"stroke\", circlrcolor)\n                            .style('opacity', 0.5)\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q2) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style('opacity', 0.5)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg\n                            .selectAll(\"toto\")\n                            .data([q1, q4])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('opacity', 0.5)\n                            .style('stroke-width', 1);\n                    }\n                    for (let index = 0; index < dataAbps.length; index++) {\n                        const element = dataAbps[index];\n                        const q1 = element.Q1\n                        const q2 = element.Q2\n                        const q3 = element.Q3\n                        const q4 = element.Q4\n                        const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + formatShift(interval)\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(q1))\n                            .attr(\"y2\", y(q4))\n                            .attr(\"stroke\", circlrcolor)\n                            // .attr(\"stroke\", \"blcak\")\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q2) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg\n                            .selectAll(\"toto\")\n                            .data([q1, q4])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1);\n                    }\n                }\n                if (type === \"hr\" || type === \"rr\" || type === \"spo2\") {\n                    for (let index = 0; index < sourcedata.length; index++) {\n                        const element = sourcedata[index];\n                        const q1 = element.Q1\n                        const q2 = element.Q2\n                        const q3 = element.Q3\n                        const q4 = element.Q4\n                        const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + formatShift(interval)\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(q1))\n                            .attr(\"y2\", y(q4))\n                            .attr(\"stroke\", circlrcolor)\n                            // .attr(\"stroke\", \"blcak\")\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q2) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg\n                            .selectAll(\"toto\")\n                            .data([q1, q4])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1);\n\n                    }\n                }\n                if (type === \"nbp\") {\n                    for (let index = 0; index < sourcedata.length; index++) {\n                        const element = sourcedata[index];\n                        const Xtime = moment(element.Time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                        const SBP = element.SBP\n                        const DBP = element.DBP\n                        if (SBP === 0 || DBP === 0) {\n                            continue\n                        }\n                        else {\n                            svg.append('circle')\n                                .attr('cx', x(Xtime))\n                                .attr('cy', y(SBP))\n                                .attr('r', 3)\n                                .style('fill', circlrcolor)\n\n\n                            svg.append('circle')\n                                .attr('cx', x(Xtime))\n                                .attr('cy', y(DBP))\n                                .attr('r', 3)\n                                .style('opacity', 0.5)\n                                .style('fill', circlrcolor)\n                        }\n\n                    }\n                }\n            }\n            else {\n                if (type === \"abp\" || type === \"nbp\") {\n                    if (sourcedata === undefined) {\n                        return null\n                    }\n                    if (sourcedata.length === 0) {\n                        return null\n                    }\n                    const SBP = sourcedata[0]\n                    const DBP = sourcedata[1]\n                    for (let index = 0; index < SBP.length; index++) {\n                        const element = SBP[index];\n                        svg.append('circle')\n                            .attr('cx', x(element.Time))\n                            .attr('cy', y(element.Data))\n                            .attr('r', 3)\n                            .style('fill', circlrcolor)\n\n                    }\n\n                    for (let index = 0; index < DBP.length; index++) {\n                        const element = DBP[index];\n                        svg.append('circle')\n                            .attr('cx', x(element.Time))\n                            .attr('cy', y(element.Data))\n                            .attr('r', 3)\n                            .style('fill', circlrcolor)\n                            .style('opacity', 0.5)\n\n                    }\n                }\n                else {\n                    console.log(type)\n                    console.log(sourcedata)\n                    for (let index = 0; index < sourcedata.length; index++) {\n                        const element = sourcedata[index];\n                        svg.append('circle')\n                            .attr('cx', x(element.Time))\n                            .attr('cy', y(element.Data))\n                            .attr('r', 3)\n                            .style('fill', circlrcolor)\n\n                    }\n                }\n\n            }\n        }\n    }\n\n    changestate() {\n        this.setState({\n            change: !this.state.change\n        })\n    }\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key} style={{ paddingTop: 10 }}></div>\n        );\n    }\n}\n\nexport default Crosssectionvitalsignchart;\n","import React, { Component } from 'react';\nimport { Select, Modal, Tabs, Icon, Button } from 'antd';\nimport Crosssectionvitalsignchart from './Crossectionvitalsignchart'\nimport Warningsetting from './Warningsettinglist'\n// import Addwarningsetting from './Addnewwaring'\nimport './Vitalsign.scss'\n// import { formatxArrayhalf, formatendtime } from '../../Function/Timeformat'\n// import { simulationCentermonitordata, simulationnisdata } from '../../Function/Wardstate'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport '../../Wardview/Wardchart.scss'\nimport { statecolor } from '../../Function/Wardstate'\n\n\nclass Vitalsign extends Component {\n\n    state = {\n        vital_days: 0, //false:一天 true:三天\n        source: \"CM\", //false:中央站 true:NIS\n        visible: false,\n        visibleConflict: false,\n        chackstate_one: 0,\n        chackstate_three: 0,\n        datasource: null,\n        addNewWarningDateStr: null,\n        addNewWarningHourStr: null,\n\n        CenterMonitorValue: null,\n        preHISID: null,\n        prePickerDate: null,\n        checkStateNumber: null,\n\n        pbStatus: true\n    }\n    componentDidUpdate() {\n        const { PickerDate } = this.props\n        const { prePickerDate } = this.state\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        const preHISID = this.state.preHISID\n        const Time = moment(this.timeCheck(PickerDate, this.state.vital_days).time).format(\"YYYYMMDDHHmmss\")\n        if (Phistnum !== preHISID || PickerDate !== prePickerDate) {\n            this.setState({ preHISID: Phistnum, prePickerDate: PickerDate, checkStateNumber: this.timeCheck(PickerDate, this.state.vital_days).checkNum })\n            this.getVitalSignData(Time.time, Phistnum)\n        }\n    }\n    componentDidMount() {\n        //選取現在時間\n        const { PickerDate } = this.props\n        const Time = moment(this.timeCheck(PickerDate, this.state.vital_days).time).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ preHISID: Phistnum, prePickerDate: PickerDate, checkStateNumber: this.timeCheck(PickerDate, this.state.vital_days).checkNum })\n        this.getVitalSignData(Time, Phistnum)\n    }\n\n    changePb = () => {\n        this.setState({\n            pbStatus: false\n        })\n    }\n\n    decidePB = (hr, nbpd, abpd) => {\n        const status = this.state.pbStatus\n        if (status) {\n            hr > 160 || hr < 100 && this.changePb()\n            nbpd > 75 || nbpd < 55 && this.changePb()\n            abpd > 75 || abpd < 55 && this.changePb()\n        }\n    }\n\n    timeCheck(PickerDate, interval) {\n        function sevenFormat(nowDaySeven) {\n            const now = moment().valueOf()\n            if (now < nowDaySeven) {\n                return nowDaySeven - (24 * 60 * 60 * 1000)\n            }\n            return nowDaySeven\n        }\n        const nowDaySeven = moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf() + (7 * 60 * 60 * 1000)\n        const time = sevenFormat(nowDaySeven)\n        const PickerDateSeven = PickerDate + (7 * 60 * 60 * 1000)\n        const hourFormat = moment().get('hours')\n        if (PickerDateSeven === time) {\n            //選取到今天\n            const EndTime = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf()\n            if (interval === 0) {\n                return {\n                    time: EndTime - (60 * 60 * 1000),\n                    checkNum: hourFormat - 7\n                }\n            }\n            const format = parseInt(hourFormat % 4) + 1\n            return {\n                time: EndTime - (format * 60 * 60 * 1000),\n                checkNum: 18 - parseInt((moment(time + (24 * 60 * 60 * 1000)).diff(moment(EndTime - (format * 60 * 60 * 1000)), \"hours\") / 4))\n            }\n\n        }\n        const EndTime = moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf() + (31 * 60 * 60 * 1000)\n        if (interval === 0) {\n            return {\n                time: EndTime - (60 * 60 * 1000),\n                checkNum: 24\n            }\n        }\n        return {\n            time: EndTime - (4 * 60 * 60 * 1000),\n            checkNum: 18\n        }\n\n    }\n\n    getVitalSignData(Time, Phistnum) {\n        const Interval = this.formatvital_daysToInterval()\n        ApiProvider.getPatientwarMidValue(Phistnum, Time, Interval)\n            .then(data => { console.log(data.data); this.setState({ CenterMonitorValue: data.data }) })\n            .catch(err => { console.log(err) })\n    }\n\n    onVitalCheck(interval) {\n        var gridarray = []\n        if (interval === 1) {\n            for (let index = 0; index < 18; index++) {\n                const checknumber = index + 1\n                if (checknumber === this.state.checkStateNumber) {\n                    gridarray.push(<div key={index} style={{ height: 370, width: \"100%\", border: \"rgba(245, 166, 35, 1) 1px solid\" }} ></div>)\n                }\n                else gridarray.push(<div key={index} style={{ height: 370, width: \"100%\", cursor: \"pointer\" }} onClick={() => this.onClickCheckgrid(checknumber, interval)}></div>)\n            }\n        }\n        else {\n            for (let index = 0; index < 24; index++) {\n                const checknumber = index + 1\n                if (checknumber === this.state.checkStateNumber) {\n                    gridarray.push(<div key={index} style={{ height: 370, width: \"100%\", border: \"rgba(245, 166, 35, 1) 1px solid\" }} ></div>)\n                }\n                else gridarray.push(<div key={index} style={{ height: 370, width: \"100%\", cursor: \"pointer\" }} onClick={() => this.onClickCheckgrid(checknumber, interval)}></div>)\n            }\n        }\n        return gridarray;\n    }\n\n    formatvital_daysToInterval() {\n        const vitaldays = this.state.vital_days\n        if (vitaldays === 0) {\n            return 0\n        }\n        return 1;\n    }\n\n    onClickCheckgrid(number, Interval) {\n        function startTime(PickerDate, Interval) {\n            const End = PickerDate + (31 * 60 * 60 * 1000)\n            if (Interval === 0) {\n                return End - (24 * 60 * 60 * 1000)\n            }\n            return End - (3 * 24 * 60 * 60 * 1000)\n        }\n        function intervalforhour(Interval) {\n            if (Interval === 0) {\n                return 1;\n            }\n            return 4;\n        }\n        const { PickerDate } = this.props\n        const time = moment(startTime(PickerDate, Interval) + (intervalforhour(Interval) * (number - 1) * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ checkStateNumber: number })\n        this.getVitalSignData(time, Phistnum)\n    }\n\n    render() {\n        function valueFormat(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"--\"\n            }\n            return value\n        }\n        function centervalueNull(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            return value\n        }\n        function centervaluetoNull(value) {\n            function FilterList(DataList, type) {\n                const filterData = DataList.filter(function (value, index, arr) {\n                    return value.type === type\n                })\n                if (filterData.length === 0) {\n                    return null\n                }\n                return filterData[0].Mid\n            }\n            if (value === undefined || value === null) {\n                return {\n                    hr: null,\n                    rr: null,\n                    bt: null,\n                    spo2: null,\n                    abpd: null,\n                    abpm: null,\n                    abps: null,\n                    nbpm: null,\n                    nbps: null,\n                    nbpd: null\n                }\n            }\n            return {\n                hr: FilterList(value, \"hr\"),\n                rr: FilterList(value, \"rr\"),\n                bt: FilterList(value, \"bt\"),\n                spo2: FilterList(value, \"spo2\"),\n                abpd: FilterList(value, \"abpd\"),\n                abpm: FilterList(value, \"abpm\"),\n                abps: FilterList(value, \"abps\"),\n                nbpd: FilterList(value, \"nbpd\"),\n                nbps: FilterList(value, \"nbps\"),\n                nbpm: FilterList(value, \"nbpm\"),\n            }\n        }\n\n        function limitValue(value, upper, lower) {\n            if (value > upper || value < lower) {\n                return false\n            }\n            return true\n        }\n\n        function vitaldaysBool(vitaldays) {\n            if (vitaldays === 3) {\n                return true\n            }\n            return false\n        }\n\n        function formatPickerTimer(pickerdate, interval) {\n            if (interval === 0) {\n                return {\n                    startTime: pickerdate + (7 * 60 * 60 * 1000),\n                    endTime: pickerdate + (31 * 60 * 60 * 1000)\n                }\n            }\n            else {\n                return {\n                    startTime: pickerdate + (31 * 60 * 60 * 1000) - (3 * 24 * 60 * 60 * 1000),\n                    endTime: pickerdate + (31 * 60 * 60 * 1000)\n                }\n\n            }\n        }\n        const width = window.screen.availWidth * 0.25\n        const centervalue = centervaluetoNull(this.state.CenterMonitorValue)\n        const pickerTimer = formatPickerTimer(this.props.PickerDate, this.state.vital_days)\n        const PickerDate = this.props.PickerDate\n\n        this.decidePB(centervalue.hr, centervalue.nbpd, centervalue.abpd)\n        const status = this.state.pbStatus\n        return (\n            <div style={{ border: '1px solid rgba(238, 238, 238, 1)' }}>\n                <div style={{ display: 'flex', alignItems: 'center', height: \"36px\", backgroundColor: \"#71b0e46e\", padding: \"0px 16px\", borderRadius: \"4px 4px 0 0\" }}>\n                    <div style={{ fontSize: \"16px\" }}>生命徵象</div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridGap: \"5px\", marginLeft: \"20px\" }}>\n                        <div className={this.state.source === \"CM\" ? \"vitalBtnSource\" : \"vitalBtnSelectSource\"} style={{ marginRight: \"1px\" }} onClick={() => { this.setState({ source: \"CM\", checkStateNumber: null }) }}>\n                            中央站資訊\n                        </div>\n                        <div className={this.state.source === \"NIS\" ? \"vitalBtnSource\" : \"vitalBtnSelectSource\"} onClick={() => { this.setState({ source: \"NIS\", checkStateNumber: null }) }}>\n                            護理系統資訊\n                        </div>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridGap: \"2px\", marginLeft: \"15px\" }}>\n                        <div className={this.state.vital_days === 0 ? \"vitalBtnInterval\" : \"vitalBtnSelectInterval\"} style={{ marginRight: \"1px\" }} onClick={() => { this.setState({ vital_days: 0, checkStateNumber: this.timeCheck(PickerDate, 0).checkNum }) }}>\n                            顯示一天\n                        </div>\n                        <div className={this.state.vital_days === 1 ? \"vitalBtnInterval\" : \"vitalBtnSelectInterval\"} onClick={() => { this.setState({ vital_days: 1, checkStateNumber: this.timeCheck(PickerDate, 1).checkNum }) }}>\n                            顯示三天\n                        </div>\n                    </div>\n                </div>\n                <div className='Wardchartlayout'>\n                    <div className=\"halfwardchart\">\n                        <div className='singlewardchart' style={{ display: 'grid', gridTemplateRows: '22px 122px 122px 123px' }}>\n                            <div></div>\n                            <div className=\"rowTitle\" >\n                                <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"100px\", height: \"100px\", backgroundColor: status ? \"white\" : statecolor('HR') }}>\n                                    <t3 style={{ color: status ? statecolor('HR') : \"white\" }}>HR</t3>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"40px\", lineHeight: \"44px\", paddingRight: \"3px\", color: status ? statecolor('HR') : \"white\" }}>{centervalueNull(centervalue.hr)}</div>\n                                </div>\n                            </div>\n                            {\n                                this.state.source === 'CM' ? (\n                                    <div className=\"rowTitle\">\n                                        <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"100px\", height: \"100px\", backgroundColor: status ? \"white\" : statecolor('BP') }}>\n                                            <div style={{ color: status ? statecolor('BP') : \"white\" }}>NBP(mmHg)</div>\n                                            <div style={{ fontWeight: \"600\", fontSize: \"30px\", lineHeight: \"34px\", color: status ? statecolor('BP') : \"white\" }}>{centervalueNull(centervalue.nbps)}/{centervalueNull(centervalue.nbpd)}</div>\n                                            <div style={{ fontWeight: \"600\", fontSize: \"20px\", lineHeight: \"22px\", color: status ? statecolor('BP') : \"white\" }}>({centervalueNull(centervalue.nbpm)})</div>\n                                        </div>\n                                    </div>\n                                ) : null\n                            }\n                            <div className=\"rowTitle\">\n                                <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"100px\", height: \"100px\", backgroundColor: status ? \"white\" : statecolor('BP') }}>\n                                    <div style={{ color: status ? statecolor('BP') : \"white\" }}>{this.state.source === 'CM' ? 'ABP' : 'BP'}(mmHg)</div>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"30px\", lineHeight: \"34px\", color: status ? statecolor('BP') : \"white\" }}>{centervalueNull(centervalue.abps)}/{centervalueNull(centervalue.abpd)}</div>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"20px\", lineHeight: \"22px\", color: status ? statecolor('BP') : \"white\" }}>({centervalueNull(centervalue.abpm)})</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ position: \"relative\" }}>\n                            {\n                                this.state.source === 'CM' ? (\n                                    <div style={{ position: \"absolute\", top: 20, left: 50, width: width - 50, height: 330 }}>\n                                        <div style={{ display: \"grid\", gridTemplateColumns: this.state.vital_days === 1 ? \"repeat(18, 1fr)\" : \"repeat(24,1fr)\" }}>\n                                            {this.onVitalCheck(this.state.vital_days)}\n                                        </div>\n                                    </div>\n                                ) : null\n                            }\n                            <Crosssectionvitalsignchart\n                                comein={'line'}\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"HR_svg\"}\n                                id_key={\"HR_div\"}\n                                type={\"hr\"}\n                                source={this.state.source}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={100}\n                                upper={160}\n                                axisBot={true}\n                                axisTop={true}\n                                circlrcolor=\"#779F50\"\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={200}>\n                            </Crosssectionvitalsignchart>\n                            {\n                                this.state.source === 'CM' ? (\n                                    <Crosssectionvitalsignchart\n                                        comein={'line'}\n                                        CID={this.props.caseinfo.CASEID}\n                                        HID={this.props.caseinfo.HISID}\n                                        PickerDate={PickerDate}\n                                        svg_id={\"NBP_svg\"}\n                                        id_key={\"NBP_div\"}\n                                        type={\"nbp\"}\n                                        source={this.state.source}\n                                        startTime={pickerTimer.startTime}\n                                        endTime={pickerTimer.endTime}\n                                        height={100}\n                                        width={width}\n                                        interval={this.state.vital_days}\n                                        lower={55}\n                                        upper={75}\n                                        axisBot={false}\n                                        axisTop={false}\n                                        circlrcolor={\"#C12528\"}\n                                        colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                        min={0}\n                                        max={100}>\n                                    </Crosssectionvitalsignchart>\n                                ) : null\n                            }\n                            <Crosssectionvitalsignchart\n                                comein={'line'}\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"ABP_svg\"}\n                                id_key={\"ABP_div\"}\n                                type={\"abp\"}\n                                source={this.state.source}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={55}\n                                upper={75}\n                                axisBot={false}\n                                axisTop={false}\n                                circlrcolor={\"#C12528\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={100}>\n                            </Crosssectionvitalsignchart>\n                        </div>\n                    </div>\n                    <div className=\"halfwardchart\">\n                        <div className='singlewardchart' style={{ display: 'grid', gridTemplateRows: '22px 122px 122px 123px' }}>\n                            <div></div>\n                            <div className=\"rowTitle\" >\n                                <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"100px\", height: \"100px\", backgroundColor: limitValue(centervalue.spo2, 100, 90) ? \"white\" : statecolor('SpO2') }}>\n                                    <t3 style={{ color: limitValue(centervalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>\n                                        SpO\n                                        <sub >2</sub>\n                                        (%)\n                                    </t3>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"40px\", lineHeight: \"44px\", paddingRight: \"3px\", color: limitValue(centervalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>{centervalueNull(centervalue.spo2)}%</div>\n                                </div>\n                            </div>\n                            <div className=\"rowTitle\" >\n                                <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"100px\", height: \"100px\", backgroundColor: limitValue(centervalue.bt, 38, 36) ? \"white\" : statecolor('BT') }}>\n                                    <div style={{ color: limitValue(centervalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>BT</div>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"40px\", lineHeight: \"44px\", paddingRight: \"3px\", color: limitValue(centervalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>{valueFormat(centervalue.bt)}</div>\n                                </div>\n                            </div>\n                            <div className=\"rowTitle\">\n                                <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"100px\", height: \"100px\", backgroundColor: limitValue(centervalue.rr, 60, 20) ? \"white\" : statecolor('RR') }}>\n                                    <div style={{ color: limitValue(centervalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>RR(min)</div>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"40px\", lineHeight: \"44px\", paddingRight: \"3px\", color: limitValue(centervalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>{centervalueNull(centervalue.rr)}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ position: \"relative\" }}>\n                            {\n                                this.state.source === 'CM' ? (\n                                    <div style={{ position: \"absolute\", top: 20, left: 50, width: width - 50, height: 330 }}>\n                                        <div style={{ display: \"grid\", gridTemplateColumns: this.state.vital_days === 1 ? \"repeat(18, 1fr)\" : \"repeat(24,1fr)\" }}>\n                                            {this.onVitalCheck(this.state.vital_days)}\n                                        </div>\n                                    </div>\n                                ) : null\n                            }\n\n                            <Crosssectionvitalsignchart\n                                comein={'line'}\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"SpO2_svg\"}\n                                id_key={\"SpO2_div\"}\n                                type={\"spo2\"}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={90}\n                                upper={100}\n                                axisBot={true}\n                                axisTop={true}\n                                circlrcolor={\"#4773B8\"}\n                                colorshadow={\"#4773B8\"}\n                                min={60}\n                                max={100}\n                                source={this.state.source}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                comein={'line'}\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"BT_svg\"}\n                                id_key={\"BT_div\"}\n                                type={\"bt\"}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                source={this.state.source}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={36}\n                                upper={38}\n                                axisBot={false}\n                                axisTop={false}\n                                circlrcolor={\"#7F3DB5\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={34}\n                                max={41}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                comein={'line'}\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"RR_svg\"}\n                                id_key={\"RR_div\"}\n                                type={\"rr\"}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={20}\n                                upper={60}\n                                axisBot={false}\n                                axisTop={false}\n                                circlrcolor={\"#DE7531\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={100}\n                                source={this.state.source}>\n                            </Crosssectionvitalsignchart>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n\n}\n\nexport default Vitalsign;\n","import React, { Component } from 'react';\nimport dragdown from '../../Image/svg/dragdown.svg'\n\nclass Warningsetting extends Component {\n    state = {\n        dragstate: false\n    }\n    onClickdrag = () => {\n        this.setState(\n            {\n                dragstate: !this.state.dragstate\n            }\n        )\n    }\n    render() {\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div style={{ height: 50, background: \"rgba(238,238,238,1)\", padding: \"10px 16px\", display: \"flex\", justifyContent: \"space-between\" }}>\n                    <div style={{ display: \"flex\" }}>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>2019-06-01 08:00</div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", marginLeft: \"20px\" }}>\n                            <div style={{ border: \"red 1px solid\", borderRadius: \"4px\", cursor: \"pointer\", color: \"red\", padding: \"5px 20px\", background: \"white\" }}>刪除</div>\n                        </div>\n                    </div>\n                    <div onClick={this.onClickdrag} style={{ transform: this.state.dragstate ? \"scaleY(1)\" : \"scaleY(-1)\" }}>\n                        <img src={dragdown} alt=\"dragdown\"></img>\n                    </div>\n                </div>\n                <div style={{ display: this.state.dragstate ? \"block\" : \"none\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 4fr 1fr 4fr\" }}>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>HR</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>ABP</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>NBP</div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>SpO2</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>BT</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>RR</div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ height: 50, padding: \"10px 16px\", display: \"flex\", alignItems: \"center\" }}>生效時間範圍:2019-06-01 08:00~2019-06-31 08:00</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Warningsetting","import React, { Component } from 'react';\nimport { Button, DatePicker, Checkbox } from 'antd';\nimport moment from 'moment';\nimport displaylogo from '../Image/svg/filter.svg'\nimport { daysdiff } from '../Function/Timeformat'\nimport { pregancyweeksanddays } from '../Function/Wardbedfunction'\nimport './Controlbar.scss'\n// import * as ApiProvider from '../API/ApiProvider';\nimport * as WardState from '../Function/Wardstate'\nimport locale from 'antd/es/date-picker/locale/zh_TW';\n\n\nclass Controlbar extends Component {\n    state = {\n        display_Mode: false,\n        item: this.props.item_array,\n        scrollstate: 0,\n    }\n    sendData = (itwm_array) => {\n        this.props.parentCallback(itwm_array);\n    }\n\n\n    sendDateData = (PickerDate) => {\n        this.props.parentDateCallback(PickerDate);\n    }\n    //快速滑動\n    scrollToAnchor = (anchorName) => {\n        if (anchorName) {\n            let anchorElement = document.getElementById(anchorName);\n            if (anchorElement) { anchorElement.scrollIntoView(); }\n        }\n    }\n    onChange = (checkedValues) => {\n        this.sendData(checkedValues)\n\n    }\n    onDateChange = (date, dateString) => {\n        this.sendDateData(date.valueOf())\n    }\n    open_display() {\n        this.setState({\n            display_Mode: !this.state.display_Mode\n        })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo, PickerDate } = this.props\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const bTemp = moment(moment(bTime).format('YYYYMMDD')).valueOf()\n                bronDate <= bTemp && this.sendDateData(bTime)\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD')).valueOf()\n                this.sendDateData(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const atemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= atemp && this.sendDateData(aTime)\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n\n        const btn_style = {\n            unclick_style: { borderRadius: \"4px\", color: \"#001a6d88\", border: \"1px solid #001a6d88\", padding: \"0px 4px\", height: \"30px\" }\n        }\n\n        function Monthformat(month) {\n            return month + 1\n        }\n        function timeformat(timestring) {\n            return new Date(timestring).getFullYear() + \"/\" + Monthformat(new Date(timestring).getMonth()) + \"/\" + new Date(timestring).getDate()\n        }\n        function valueFormat(value) {\n            if (value === \"\" || value === null || value === undefined) {\n                return \"--\"\n            }\n            return value.toString()\n        }\n        function valueBornWeight(value) {\n            if (value === \"\" || value === null || value === undefined || value === 0) {\n                return \"\"\n            }\n            return value.toString() + \"g → \"\n        }\n        const display_style = {\n            displye_mode: { position: \"absolute\", right: '0px', top: \"50px\", width: \"200px\", background: \"white\", boxShadow: \"3px 3px 12px\", zIndex: \"100\", borderRadius: \"4px\" },\n            non_display_mode: { display: \"none\" },\n            check_area: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\" },\n            check_text: { padding: \"4px\", width: \"140px\", borderRadius: \"4px\", borderColor: 'rgba(0, 0, 0, 0.15)', borderStyle: \"solid\", borderWidth: \"1px\", marginLeft: \"10px\", borderRadius: \"4px\" }\n        }\n\n        function disabledDate(current) {\n            // Can not select days before today and today\n            const endvalue = moment(caseinfo.PBASINGNINFO.PBIRTHDT, 'YYYYMMDD')\n            return endvalue.endOf('day') > current || current > moment().endOf('day')\n        }\n\n        const { caseinfo, btnlist, PickerDate, status } = this.props\n        // console.log(AgeStatus)\n        const weightList = caseinfo.WEIGHT\n        const Birthday = caseinfo.PBASINGNINFO.PBIRTHDT\n        const btn = btnlist.map(\n            (item, index) => <Button onClick={this.scrollToAnchor.bind(this, item.scrollpoint)} key={index} style={btn_style.unclick_style}>\n                <t3>{item.name}</t3>\n            </Button>\n        )\n        return (\n            // <div>\n            <div className='controlbarlayout'>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto auto\", gridColumnGap: \"30px\" }}>\n                    <DatePicker getCalendarContainer={triggerNode => triggerNode.parentNode} locale={locale} width={140} onChange={this.onDateChange} value={moment(PickerDate)} allowClear={false} showToday={false} disabledDate={(current) => { return current > moment().startOf(\"day\") || current < moment(Birthday, \"YYYYMMDD\").add(-1, \"days\").endOf(\"day\") }} />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"2px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"minus-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                    <div style={{ display: 'grid', gridTemplateColumns: \"repeat(3,auto)\", gridColumnGap: \"30px\", alignContent: \"center\" }}>\n                        {/* <t2>矯正週數：{pregancyweeksanddays(caseinfo.WEEK_BORN, caseinfo.DAY_BORN, moment(Birthday, 'YYYYMMDD').format('YYYY/MM/DD'))}</t2>\n                        <t2>體重：{valueFormat(DayWeight)}g</t2>\n                        <t2>住院第{daysdiff(moment(PickerDate).format('YYYY/MM/DD'), moment(caseinfo.TRANSINDT, 'YYYYMMDD').format('YYYY/MM/DD'))}天</t2> */}\n                    </div>\n                </div>\n                <div style={{ fontSize: \"16px\" }}>\n                    當日年齡: {WardState.bornstatusFormat(status.week,status.day)} <spam style={{ fontWeight: \"600\", color: \"black\" }}>{WardState.CalculateAgeFromPickerDate(status, PickerDate)}</spam>\n                </div>\n                <div style={{ fontSize: \"16px\" }}>\n                    當日體重: {WardState.valueFormat(status.BornWeight)}<spam style={{ fontWeight: \"600\", color: \"black\" }}>{WardState.WeightListFilter(weightList,PickerDate)}g</spam>\n                </div>\n                <div style={{ display: \"flex\", alignItems: 'center', position: \"relative\" }}>\n                    <t2>快速切換：</t2>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,auto)\", gridColumnGap: \"5px\" }}>{btn}</div>\n                    <div onClick={() => this.open_display()} style={{ cursor: \"pointer\", marginLeft: \"5px\" }}>\n                        <img src={displaylogo} alt='displaylogo' style={{ width: '15px', height: '15px' }}></img>\n                    </div>\n                    <div style={this.state.display_Mode ? display_style.displye_mode : display_style.non_display_mode}>\n                        <t2 className='controlmoduletitle'>顯示切換</t2>\n                        <div style={{ marginTop: \"10px\", marginBottom: \"20px\" }}>\n                            <Checkbox.Group defaultValue={this.state.item} id={\"checkbox_group\"} style={{ width: '100%', display: \"grid\", gridTemplateRows: \"repeat(5,1fr)\", gridRowGap: \"5px\" }} onChange={this.onChange}>\n                                <div style={display_style.check_area}>\n                                    <Checkbox value={0}></Checkbox>\n                                    <t3 style={display_style.check_text}>生命徵象</t3>\n                                </div>\n                                <div style={display_style.check_area}>\n                                    <Checkbox value={1} ></Checkbox>\n                                    <t3 style={display_style.check_text}>檢驗</t3>\n                                </div>\n                                <div style={display_style.check_area}>\n                                    <Checkbox value={2}></Checkbox>\n                                    <t3 style={display_style.check_text}>呼吸評估</t3>\n                                </div>\n                                <div style={display_style.check_area}>\n                                    <Checkbox value={3}></Checkbox>\n                                    <t3 style={display_style.check_text}>醫藥囑</t3>\n                                </div>\n                                <div style={display_style.check_area}>\n                                    <Checkbox value={4}></Checkbox>\n                                    <t3 style={display_style.check_text}>行事曆及註記</t3>\n                                </div>\n                                {/* <div style={display_style.check_area}>\n                                        <Checkbox value={5}></Checkbox>\n                                        <t3 style={display_style.check_text}>To Do List</t3>\n                                    </div> */}\n                            </Checkbox.Group>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            //     <div className='boxshadow'></div>\n            // </div >\n\n        );\n    }\n}\n\nexport default Controlbar;\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport { Icon } from 'antd'\n\nconst calcBorderLeft = (intervalStatus, index, Status) => {\n    if (Status === \"Crossection\") {\n        return '1px solid #eeeeee';\n    }\n    if (intervalStatus === 0) {\n        if (index % 24 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else if (index % 8 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else {\n            return '1px solid #eeeeee';\n        }\n    } else if (intervalStatus === 1) {\n        if (index % 6 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else if (index % 2 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else {\n            return '1px solid #eeeeee';\n        }\n    } else if (intervalStatus === 2) {\n        if (index % 3 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else {\n            return '2px solid rgba(0,0,0,0.2)';\n        }\n    } else {\n        return '2px solid rgba(0,0,0,0.2)';\n    }\n}\n\nclass IOpageCell extends Component {\n    render() {\n        function showFloat(value) {\n            if (typeof (value) === 'number' && value % 1 === 0) {\n                return value\n            }\n            return parseFloat(value).toFixed(1)\n        }\n\n        const { IntervalStatus, Status, data, weightList, index } = this.props\n        // console.log(weightList)\n        const startTime = data.start\n        const endTime = data.end\n        const element = data.element\n        const urine = data.urine\n        var weightData = 0\n        if (Array.isArray(weightList)) {\n            for (let index = 0; index < weightList.length; index++) {\n                const element = weightList[index];\n                const elementTime = moment(element.rec_dat.toString().trim() + element.rec_tim.toString().trim(), \"YYYYMMDDHHmm\").valueOf()\n                // console.log(moment(elementTime).format(\"YYYYMMDDHHmmss\"))\n                // console.log(moment(endTime).format(\"YYYYMMDDHHmmss\"))\n                if (weightData === 0) {\n                    if (elementTime <= endTime) {\n                        weightData = Number(element.value2)\n                    }\n                }\n            }\n        }\n        var urineValue = 0\n        if (Array.isArray(element)) {\n            for (let index = 0; index < element.length; index++) {\n                const info = element[index];\n                const value = Number(info.out_val2)\n                urineValue = urineValue + value\n            }\n        }\n        if (weightData !== 0 && urineValue !== 0 && urine !== 0) {\n            // console.log((urineValue / urine) / weightData)\n            const cellValue = parseFloat((urineValue / urine) / weightData).toFixed(1)\n            return (\n                <div key={index} style={{\n                    borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #eeeeee\", borderCollapse: 'collapse',\n                    borderLeft: calcBorderLeft(IntervalStatus, index, Status),\n                    backgroundColor: Status !== \"Crossection\" ?\n                        (parseFloat(cellValue) === '' ? 'white' : \"rgba(175,75,25,0.05)\")\n                        :\n                        (index === 3 ? \"rgba(175,75,25,0.2)\"\n                            :\n                            \"rgba(175,75,25,0.05)\")\n                }}>\n                    {(parseFloat(cellValue) === '' && Status !== \"Crossection\") || <div style={{\n                        fontWeight: (Status === \"Crossection\" && index === 3) ? \"600\" : \"\",\n                        color: (parseFloat(cellValue) < 0.5 || parseFloat(cellValue) > 5) ? \"#FF0000\" : \"black\"\n                    }}>\n                        {(parseFloat(cellValue) === '' || parseFloat(cellValue) === 0) ? '--'\n                            :\n                            parseFloat(cellValue) >= 0 ? `${showFloat(cellValue)}` : showFloat(cellValue)}\n                    </div>}\n                </div>\n            )\n        }\n        return (\n            <div key={index} style={{\n                borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #eeeeee\", borderCollapse: 'collapse',\n                borderLeft: calcBorderLeft(IntervalStatus, index, Status),\n                backgroundColor: Status !== \"Crossection\" ? \"white\"\n                    :\n                    index === 3 ? \"rgba(175,75,25,0.2)\"\n                        :\n                        \"rgba(175,75,25,0.05)\"\n            }}>\n                {Status === \"Crossection\" && <div style={{\n                    fontWeight: index === 3 ? \"600\" : \"\",\n                    color: \"black\"\n                }}>--</div>}\n            </div>\n        )\n    }\n\n}\n\nexport default IOpageCell\n","import React, { Component } from 'react';\nimport './iopage.scss'\nimport moment from 'moment';\nimport * as WardState from '../Function/Wardstate'\nimport * as ApiProvider from '../API/ApiProvider'\nimport * as ApiGithub from '../API/ApiGithub'\nimport X2JS from 'x2js';\nimport * as QDCList from '../Resource/QDC'\nimport * as ioDataFormat from './ioDataFormat'\nimport IOpageCell from './ioPageCell'\n\nconst calcBorderLeft = (intervalStatus, index, Status) => {\n    if (Status === \"Crossection\") {\n        return '1px solid #eeeeee';\n    }\n    if (intervalStatus === 0) {\n        if (index % 24 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else if (index % 8 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else {\n            return '1px solid #eeeeee';\n        }\n    } else if (intervalStatus === 1) {\n        if (index % 6 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else if (index % 2 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else {\n            return '1px solid #eeeeee';\n        }\n    } else if (intervalStatus === 2) {\n        if (index % 3 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else {\n            return '2px solid rgba(0,0,0,0.2)';\n        }\n    } else {\n        return '2px solid rgba(0,0,0,0.2)';\n    }\n}\n\nclass IOpage extends Component {\n    state = {\n        QDC: [],\n        PreStatus: null,\n        PreIntervalStatus: null,\n        PreCID: null,\n        PrePickerDate: null,\n        RegQDC: null,\n        CarloriesCal: []\n    }\n    getAPI(caseid, pickerdate, intervalStatus, status) {\n        if (caseid === undefined || caseid === null) {\n            return null\n        }\n        if (pickerdate === undefined || pickerdate === null) {\n            return null\n        }\n        if (intervalStatus === undefined || intervalStatus === null) {\n            return null\n        }\n        if (status === undefined || status === null) {\n            return null\n        }\n        function formatTimer(pickerdate, interstatus, status) {\n            const endTimeStamp = pickerdate + 31 * 60 * 60 * 1000\n            if (status === \"Crossection\") {\n                return {\n                    start: moment(endTimeStamp - (3 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            if (interstatus === 0) {\n                return {\n                    start: moment(endTimeStamp - (32 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            if (interstatus === 1) {\n                return {\n                    start: moment(endTimeStamp - (3 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            if (interstatus === 2) {\n                return {\n                    start: moment(endTimeStamp - (7 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            return {\n                start: moment(endTimeStamp - (14 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n            }\n        }\n        const xm2 = new X2JS()\n        const timer = formatTimer(pickerdate, intervalStatus, status)\n        ApiProvider.getQDC(caseid, timer.start, timer.end)\n            .then(data => {\n                const Result = xm2.xml2js(data.data).outmsg\n                if (Number(Result.ret) === 0) {\n                    const parsedata = Result.resconts.rescont\n                    if (Array.isArray(parsedata)) {\n                        this.setState({ QDC: parsedata })\n                    }\n                    else {\n                        this.setState({ QDC: [parsedata] })\n                    }\n                }\n\n            })\n            .catch(err => {\n                console.log(\"getQDC NG \" + JSON.stringify(err));\n            });\n        // this.setState({ QDC: QDCList.data.outmsg.resconts.rescont })\n        ApiGithub.getGitHubJson(\"IOReg_QDC.json\")\n            .then(data => {\n                this.setState({ RegQDC: data.data })\n            })\n            .catch(err => {\n                console.log(\"getGithubNG\" + JSON.stringify(err))\n            })\n    }\n    componentDidMount() {\n        const { Status, IntervalStatus, caseinfo, PickerDate } = this.props\n        this.setState({ PreStatus: Status, PreIntervalStatus: IntervalStatus, PreCID: caseinfo.CASEID, PrePickerDate: PickerDate })\n        this.getAPI(caseinfo.CASEID, PickerDate, IntervalStatus, Status)\n\n    }\n    componentDidUpdate() {\n        const { Status, IntervalStatus, caseinfo, PickerDate } = this.props\n        const prestatus = this.state.PreStatus\n        const preinterstatus = this.state.PreIntervalStatus\n        const precid = this.state.PreCID\n        const prepickerdate = this.state.PrePickerDate\n        if (prepickerdate !== PickerDate || caseinfo.CASEID !== precid || IntervalStatus !== preinterstatus || Status !== prestatus) {\n            console.log(Status, IntervalStatus, caseinfo, PickerDate)\n            this.setState({ PreStatus: Status, PreIntervalStatus: IntervalStatus, PreCID: caseinfo.CASEID, PrePickerDate: PickerDate })\n            this.getAPI(caseinfo.CASEID, PickerDate, IntervalStatus, Status)\n        }\n    }\n    cellRender(arr) {\n        const { Status, IntervalStatus } = this.props\n        const mapcell = arr.map(function (value, index, array) {\n            return (\n                <div key={index} style={{ border: \"1px solid #eeeeee\", borderCollapse: \"collapse\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <t2>{parseInt(value)}</t2>\n                </div>\n            );\n        })\n        if (Status === \"Crossection\") {\n            return (\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4,1fr)\" }}>\n                    {mapcell}\n                </div>\n            );\n        }\n        else {\n            if (IntervalStatus === 0) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(24,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n            if (IntervalStatus === 1) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(18,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n            if (IntervalStatus === 2) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(21,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n            if (IntervalStatus === 3) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(14,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n        }\n    }\n    render() {\n        function pickerTimeArray(pickerdate, intervalstatus, status) {\n            const et = pickerdate + (31 * 60 * 60 * 1000)\n            var timearray = []\n            if (status === \"Crossection\") {\n                const st = pickerdate + (7 * 60 * 60 * 1000)\n                for (let index = 0; index < 3; index++) {\n                    const time = st + (index * 8 * 60 * 60 * 1000)\n                    timearray.push(time)\n                }\n            }\n            else {\n                //IntervalStatus 0:1天 1:3天 2:一週 3:兩週\n                if (intervalstatus === 0) {\n                    const st = et - (24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 24; index++) {\n                        const time = st + (index * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (intervalstatus === 1) {\n                    const st = et - (3 * 24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 18; index++) {\n                        const time = st + (index * 4 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (intervalstatus === 2) {\n                    const st = et - (7 * 24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 21; index++) {\n                        const time = st + (index * 8 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (intervalstatus === 3) {\n                    const st = et - (14 * 24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 14; index++) {\n                        const time = st + (index * 24 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n            }\n            return timearray\n        }\n\n        function starttime(status, intervalstatus, time) {\n            if (status === \"Crossection\") {\n                return time - (24 * 60 * 60 * 1000)\n            }\n            if (intervalstatus === 0) {\n                return time - (24 * 60 * 60 * 1000)\n            }\n            if (intervalstatus === 1) {\n                return time - (3 * 24 * 60 * 60 * 1000)\n            }\n            if (intervalstatus === 2) {\n                return time - (7 * 24 * 60 * 60 * 1000)\n            }\n            return time - (14 * 24 * 60 * 60 * 1000)\n\n        }\n\n        function IntervalToDataArray(startTime, status, intervalstatus, element) {\n            if (Array.isArray(element)) {\n                if (status === 'Crossection') {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (8 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                if (intervalstatus === 0) {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (1 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                if (intervalstatus === 1) {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (4 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                if (intervalstatus === 2) {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (8 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                const filterdata = element.filter(function (value, index, arr) {\n                    const valueTimeString = value.rec_dat + value.rec_tim\n                    const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                    const endTime = startTime + (24 * 60 * 60 * 1000)\n                    return valueTime > startTime && valueTime < endTime\n                })\n                return filterdata\n            }\n            return []\n        }\n\n        // function SumforEach(arr) {\n        //     var sum = 0;\n        //     arr.forEach(function (element) {\n        //         sum += Number(element);\n        //     });\n        //     return sum;\n        // }\n\n\n        function formatQDCtoIO(QDC) {\n            function caloriesCal(lost, value) {\n                if (lost === \"配方奶\") {\n                    return Number(value) * 0.8\n                }\n                if (lost === \"母奶\") {\n                    return Number(value) * 0.7\n                }\n                return 0\n            }\n            function caloriesCalonnam(nam, value) {\n                if (nam === null || nam === undefined || nam === \"\") {\n                    return 0\n                }\n                const namstring = nam.toString()\n                const valueNumber = Number(value)\n                if (valueNumber === null || valueNumber === undefined) { return 0 }\n                if (namstring.match(\"10%TPN\") !== null) { return valueNumber * 0.34 }\n                if (namstring.match(\"SMOFliquid\") !== null) { return valueNumber * 1.8 }\n                if (namstring.match(\"D10\") !== null) { return valueNumber * 0.34 }\n                if (namstring.match(\"D12\") !== null) { return valueNumber * 0.34 * 1.2 }\n                if (namstring.match(\"D50\") !== null) { return valueNumber * 0.34 * 5 }\n                if (namstring.match(\"taita\") !== null) { return valueNumber * 0.34 }\n                return 0\n            }\n            var FormatFeedingList = []\n            var FormatIVList = []\n            var FormatUrineList = []\n            var FormatOtherInList = []\n            var FormatOtherOutList = []\n            for (let index = 0; index < QDC.length; index++) {\n                const element = QDC[index];\n                const elementItem = element.item;\n                const time = moment(element.rec_dat.toString().trim() + element.rec_tim.toString().trim(), \"YYYYMMDDHHmm\").valueOf()\n                const nam = element.nam\n                const FeedingReg = RegQDC.Feeding\n                const filterFeedingStatus = FeedingReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterFeedingStatus) {\n                    FormatFeedingList.push({\n                        time: time,\n                        value: Number(element.inp_val2),\n                        calories: caloriesCal(element.lost, element.inp_val2),\n                        element: element\n                    })\n                }\n                const IVReg = RegQDC.IV\n                const filterIVStatus = IVReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterIVStatus) {\n                    FormatIVList.push({\n                        time: time,\n                        value: Number(element.inp_val1),\n                        calories: caloriesCalonnam(nam, element.inp_val1),\n                        element: element\n                    })\n                }\n                const UrineReg = RegQDC.Urine\n                const filterUrineStatus = UrineReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterUrineStatus) {\n                    FormatUrineList.push({\n                        time: time,\n                        value: Number(element.out_val2),\n                        calories: caloriesCalonnam(nam, element.out_val2),\n                        element: element\n                    })\n                }\n                const OtherReg = RegQDC.Other\n                const filterOtherStatus = OtherReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterOtherStatus) {\n                    const input_1 = Number(element.inp_val1)\n                    const output_1 = Number(element.out_val1)\n                    if (elementItem === \"排便\") {\n                        // FormatOtherInList.push({\n                        //     time: time,\n                        //     value: 1,\n                        //     calories: 0,\n                        //     element: element\n                        // })\n                        FormatOtherOutList.push({\n                            time: time,\n                            value: 1,\n                            calories: 0,\n                            element: element\n                        })\n                    }\n                    else {\n                        if (input_1 === null || input_1 === undefined) {\n                            FormatOtherOutList.push({\n                                time: time,\n                                value: Number(element.inp_val1),\n                                calories: caloriesCalonnam(nam, element.inp_val1),\n                                element: element\n                            })\n                        }\n                        if (output_1 === null || output_1 === undefined) {\n                            FormatOtherInList.push({\n                                time: time,\n                                value: Number(element.output_1),\n                                calories: 0,\n                                element: element\n                            })\n                        }\n                    }\n                }\n\n            }\n            return {\n                Feeding: FormatFeedingList,\n                IV: FormatIVList,\n                OtherIn: FormatOtherInList,\n                Urine: FormatUrineList,\n                OtherOut: FormatOtherOutList\n            }\n        }\n        function timerFormat(PickerDate, Interval, Status) {\n            const EndTime = PickerDate + (31 * 60 * 60 * 1000)\n            if (Status === 'Crossection') {\n                return {\n                    interval: 3,\n                    hourInterval: 8,\n                    startTime: EndTime - (24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            if (Interval === 0) {\n                return {\n                    interval: 24,\n                    hourInterval: 1,\n                    startTime: EndTime - (24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            if (Interval === 1) {\n                return {\n                    interval: 18,\n                    hourInterval: 4,\n                    startTime: EndTime - (3 * 24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            if (Interval === 2) {\n                return {\n                    interval: 21,\n                    hourInterval: 8,\n                    startTime: EndTime - (7 * 24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            return {\n                interval: 14,\n                hourInterval: 24,\n                startTime: EndTime - (14 * 24 * 60 * 60 * 1000),\n                endTime: EndTime\n            }\n        }\n        function listTimerFormat(List, timer, status) {\n            const inter = timer.interval\n            var TimerList = []\n            for (let index = 0; index < inter; index++) {\n                const st = timer.startTime + (index * timer.hourInterval * 60 * 60 * 1000)\n                const et = timer.startTime + ((index + 1) * timer.hourInterval * 60 * 60 * 1000)\n                const filterList = List.filter(function (info, index, arr) {\n                    const time = info.time\n                    return st <= time && time < et\n                })\n                TimerList.push(filterList)\n            }\n            if (status === 'Crossection') {\n                const st = timer.startTime\n                const et = timer.endTime\n                const filterListALL = List.filter(function (info, index, arr) {\n                    const time = info.time\n                    return st <= time && time < et\n                })\n                TimerList.push(filterListALL)\n            }\n            return TimerList\n        }\n\n        function sumIn(arr1, arr2, arr3) {\n            var sumlist = []\n            for (let index = 0; index < arr1.length; index++) {\n                const element1 = arr1[index];\n                const element2 = arr2[index];\n                const element3 = arr3[index];\n                const sum = element1 + element2 + element3\n                sumlist.push(sum)\n            }\n            return sumlist\n        }\n        function sumOut(arr1, arr2) {\n            var sumlist = []\n            for (let index = 0; index < arr1.length; index++) {\n                const element1 = arr1[index];\n                const element2 = arr2[index];\n                const sum = element1 + element2\n                sumlist.push(sum)\n            }\n            return sumlist\n        }\n        function sumInAndOut(Input, Outout) {\n            var sumlist = []\n            for (let index = 0; index < Input.length; index++) {\n                const element1 = Input[index];\n                const element2 = Outout[index];\n                const sum = parseFloat(element1 - element2).toFixed(1)\n                sumlist.push(sum)\n            }\n            return sumlist\n        }\n        function gridNumber(interval, status) {\n            if (status === \"Crossection\") {\n                return 4\n            }\n            return interval\n        }\n        function cellsum(list) {\n            const CellSum = list.map(function (info, index, arr) {\n                var sum = 0\n                for (let index = 0; index < info.length; index++) {\n                    const element = info[index];\n                    sum = sum + element.value\n                }\n                return sum\n            })\n            return CellSum\n        }\n\n        function showFloat(value) {\n            if (typeof (value) === 'number' && value % 1 === 0) {\n                return value\n            }\n            return parseFloat(value).toFixed(1)\n        }\n\n        function cellRenderSum(Status, list, rows, type, IntervalStatus) {\n            const rowColorStyle = {\n                '0': {\n                    'SE': `rgba(15, 75, 175, 0.2)`,\n                    'Other': `rgba(15, 75, 175, 0.05)`,\n                },\n                '1': {\n                    'SE': `rgba(175,75,25,0.2)`,\n                    'Other': `rgba(175,75,25,0.05)`,\n                },\n                '2': {\n                    'SE': `rgba(100,180,200,.6)`,\n                    'Other': `rgba(100,180,200,.3)`,\n                }\n            }\n            // console.log(list)\n            const CellRender = list.map(function (info, index, arr) {\n                if (Number(info) === NaN) {\n                    return (\n                        <div key={index} style={{\n                            borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #eeeeee\", borderCollapse: 'collapse',\n                            borderLeft: calcBorderLeft(IntervalStatus, index, Status),\n                            backgroundColor: Status !== \"Crossection\" ? \"white\" : index === 3 ? rowColorStyle[rows].SE : rowColorStyle[rows].Other\n                        }}>\n                            {Status === \"Crossection\" && <div style={{\n                                fontWeight: (Status === \"Crossection\" && index === 3) ? \"600\" : \"\",\n                                color: \"black\"\n                            }}>--</div>}\n                        </div>\n\n                    );\n                }\n                return (\n                    <div key={index} style={{\n                        borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #eeeeee\", borderCollapse: 'collapse',\n                        borderLeft: calcBorderLeft(IntervalStatus, index, Status),\n                        backgroundColor: Status !== \"Crossection\" ?\n                            (parseFloat(info) === '' ? 'white' : rowColorStyle[rows].Other) : (index === 3 ? rowColorStyle[rows].SE : rowColorStyle[rows].Other)\n                    }}>\n                        {(parseFloat(info) === '' && Status !== \"Crossection\") || <div style={{\n                            fontWeight: (Status === \"Crossection\" && index === 3) ? \"600\" : \"\",\n                            color: type === 2 && parseFloat(info) < 0 ? \"red\"\n                                :\n                                type === 2 && parseFloat(info) >= 0 ? \"blue\" : \"black\"\n                        }}>\n                            {(parseFloat(info) === '' || parseFloat(info) === 0) ? '--'\n                                :\n                                parseFloat(info) >= 0 ? `+${showFloat(info)}` : showFloat(info)}\n                        </div>}\n                    </div>\n                );\n            })\n            return (\n                <div style={{ display: 'grid', gridTemplateColumns: 'repeat( ' + gridNumber(timerStruct.interval, Status) + ' ,1fr)' }}>\n                    {CellRender}\n                </div>\n            );\n        }\n\n        function cellRender(Status, list, rows, IntervalStatus) {\n            const rowColorStyle = {\n                '0': {\n                    'SE': `rgba(15, 75, 175, 0.2)`,\n                    'Other': `rgba(15, 75, 175, 0.05)`,\n                },\n                '1': {\n                    'SE': `rgba(175,75,25,0.2)`,\n                    'Other': `rgba(175,75,25,0.05)`,\n                },\n            }\n            const CellRender = list.map(function (info, index, arr) {\n                var sum = 0\n                if (info.length === 0 || info.length === undefined) {\n                    return (\n                        <div key={index} style={{\n                            borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #eeeeee\", borderCollapse: 'collapse',\n                            borderLeft: calcBorderLeft(IntervalStatus, index, Status),\n                            backgroundColor: Status !== \"Crossection\" ? \"white\"\n\n                                :\n                                index === 3 ? rowColorStyle[rows].SE\n                                    :\n                                    rowColorStyle[rows].Other\n                        }}>\n                            {Status === \"Crossection\" && <div style={{\n                                fontWeight: index === 3 ? \"600\" : \"\",\n                                color: \"black\"\n                            }}>--</div>}\n                        </div>\n                    );\n                }\n                for (let index = 0; index < info.length; index++) {\n                    const element = info[index];\n                    sum = sum + element.value\n                }\n                return (\n                    <div key={index} style={{\n                        borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #eeeeee\", borderCollapse: 'collapse',\n                        borderLeft: calcBorderLeft(IntervalStatus, index, Status),\n                        backgroundColor: Status !== \"Crossection\" ?\n                            (parseFloat(sum) === '' ? 'white' : rowColorStyle[rows].Other)\n\n                            :\n                            (index === 3 ? rowColorStyle[rows].SE : rowColorStyle[rows].Other)\n                    }}>\n                        {(parseFloat(sum) === '' && Status !== \"Crossection\") || <div style={{\n                            fontWeight: (Status === \"Crossection\" && index === 3) ? \"600\" : \"\",\n                            color: \"black\"\n                        }}>\n                            {parseFloat(info) === '' ? '--' : showFloat(sum)}\n                        </div>}\n                    </div>\n                );\n            })\n            return (\n                <div style={{ borderCollapse: \"collapse\", display: 'grid', gridTemplateColumns: 'repeat( ' + gridNumber(timerStruct.interval, Status) + ' ,1fr)' }}>\n                    {CellRender}\n                </div>\n            );\n        }\n\n\n        function stylechange(status) {\n            const chronicstyle = \"140px 1fr\"\n            const crossectionstyle = \"1fr 4fr\"\n            if (status === \"Crossection\") {\n                return crossectionstyle\n            }\n            else return chronicstyle\n        }\n\n        function urineforWeightAndHourCrossection(Urine, weight) {\n            const datamap = Urine.map(function (info, index, arr) {\n                var sum = 0\n                for (let index = 0; index < info.length; index++) {\n                    const element = info[index];\n                    sum = sum + element.value\n                }\n                if (sum === 0) {\n                    return 0\n                }\n                if (weight === null || weight === undefined) {\n                    return \"--\"\n                }\n                return parseFloat(sum / weight / 8).toFixed(1)\n            })\n            for (let index = 0; index < Urine.length; index++) {\n                const element = Urine[index];\n\n            }\n            return datamap\n        }\n        const { Status, IntervalStatus, caseinfo, PickerDate } = this.props\n        const timeInterval = pickerTimeArray(PickerDate, IntervalStatus, Status)\n        const et = PickerDate + (31 * 60 * 60 * 1000)\n        const st = starttime(Status, IntervalStatus, et)\n        const WEIGHT = caseinfo.WEIGHT\n        const dateWeoght = WardState.selectweight(WEIGHT, PickerDate)\n        const QDCLIST = this.state.QDC\n        // const Weight = 1000\n        const RegQDC = this.state.RegQDC\n        if (RegQDC === null || RegQDC === undefined) { return null }\n        const formatData = formatQDCtoIO(QDCLIST)\n        const timerStruct = timerFormat(PickerDate, IntervalStatus, Status)\n        const feed = listTimerFormat(formatData.Feeding, timerStruct, Status)\n        const IV = listTimerFormat(formatData.IV, timerStruct, Status)\n        const OtherIn = listTimerFormat(formatData.OtherIn, timerStruct, Status)\n        const sumin = sumIn(cellsum(feed), cellsum(IV), cellsum(OtherIn))\n        const Urine = listTimerFormat(formatData.Urine, timerStruct, Status)\n        const UrinForUnit = urineforWeightAndHourCrossection(Urine, 1000)\n        const OtherOut = listTimerFormat(formatData.OtherOut, timerStruct, Status)\n        const sumout = sumOut(cellsum(Urine), cellsum(OtherOut))\n        const sumInTotal = sumInAndOut(sumin, sumout)\n        //====================================================================\n\n        function formatDataUrine(urineTimer, source, interval) {\n            if (source === 'Crossection') {\n                return urineTimer\n            }\n            if (interval === 0) {\n                const celldata = urineTimer.filter(function (info, index, arr) {\n                    return index >= 8\n                })\n                return celldata\n            }\n            return urineTimer\n        }\n        // console.log(Status)\n        const urineData = ioDataFormat.UrineData(QDCLIST)\n        const urineTimer = ioDataFormat.formatTimerData(urineData, PickerDate, IntervalStatus, Status)\n        console.log(urineTimer)\n        const celldata = formatDataUrine(urineTimer, Status, IntervalStatus)\n        const cellMap = celldata.map(function (info, index, arr) {\n            return <IOpageCell IntervalStatus={IntervalStatus} Status={Status} key={index} index={index} data={info} weightList={WEIGHT} PickerDate={PickerDate}></IOpageCell>\n        })\n        const titleInarray = ['進食', '點滴', '其他', '總輸入']\n        const titleOutarray = ['排尿', 'ml/kg/hr', '其他', '總排出']\n        const TitleCellIn = titleInarray.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ border: \"1px solid #eeeeee\", borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', backgroundColor: \"rgba(15,75,175,0.2)\", paddingLeft: \"10px\" }}>\n                    <t2>{value}</t2>\n                </div>\n            );\n        })\n\n        const TitleCellOut = titleOutarray.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ border: \"1px solid #eeeeee\", borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', backgroundColor: \"rgba(175,75,25,0.2)\", paddingLeft: \"10px\" }}>\n                    <t2>{value}</t2>\n                </div>\n            );\n        })\n        return (\n            <div>\n                <div style={{ display: \"grid\", gridTemplateColumns: stylechange(Status) }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"32px 32px 32px 32px\" }}>\n                        {TitleCellIn}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"32px 32px 32px 32px\" }}>\n                        {cellRender(Status, feed, '0', IntervalStatus)}\n                        {cellRender(Status, IV, '0', IntervalStatus)}\n                        {cellRender(Status, OtherIn, '0', IntervalStatus)}\n                        {cellRenderSum(Status, sumin, '0', 0, IntervalStatus)}\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: stylechange(Status), marginTop: \"8px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"32px 32px 32px 32px\", borderCollapse: \"collapse\" }}>\n                        {TitleCellOut}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"32px 32px 32px 32px\", borderCollapse: \"collapse\" }}>\n                        {cellRender(Status, Urine, '1', IntervalStatus)}\n                        {/* 幫忙style */}\n                        <div style={{ borderCollapse: \"collapse\", display: 'grid', gridTemplateColumns: 'repeat( ' + gridNumber(timerStruct.interval, Status) + ' ,1fr)' }}>\n                            {cellMap}\n                        </div>\n                        {cellRender(Status, OtherOut, '1', IntervalStatus)}\n                        {cellRenderSum(Status, sumout, '1', 0, IntervalStatus)}\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: stylechange(Status), marginTop: \"8px\" }}>\n                    <div style={{ border: \"1px solid #eeeeee\", borderCollapse: \"collapse\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", backgroundColor: \"rgba(100,180,200,.6)\", height: \"40px\" }}>\n                        {Status === \"Crossection\" ?\n                            <t2 style={{ fontSize: \"16px\", fontWeight: \"600\" }}>IO</t2>\n                            :\n                            <t2 >IO</t2>}\n                    </div>\n                    {cellRenderSum(Status, sumInTotal, '2', 2, IntervalStatus)}\n                    {/* {totalcell} */}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default IOpage;\n","import moment from 'moment'\n\nexport function formatUringWeightTimer(weightList, pickerDate, interval) {\n    function formatStartTime(interval, endTime) {\n        if (interval === 0) {\n            return endTime - (24 * 60 * 60 * 1000)\n        }\n        if (interval === 0) {\n            return endTime - (3 * 24 * 60 * 60 * 1000)\n        }\n        if (interval === 0) {\n            return endTime - (7 * 24 * 60 * 60 * 1000)\n        }\n        return endTime - (14 * 24 * 60 * 60 * 1000)\n    }\n    const endTime = pickerDate + (31 * 60 * 60 * 1000)\n    const startTime = formatStartTime(interval, endTime)\n\n}\n\nexport function FeedData(QDC) {\n    //進食\n    if (Array.isArray(QDC)) {\n        const filter = QDC.filter(function (info, index, arr) {\n            return info.item.toString().trim() === \"進食\"\n        })\n        return filter\n    }\n    return []\n}\n\nexport function IVData(QDC) {\n    //血品&輸液 line:IV\n    if (Array.isArray(QDC)) {\n        const filter = QDC.filter(function (info, index, arr) {\n            return info.item.toString().trim() === \"血品\" || info.item.toString().trim() === \"輸液\"\n        })\n        return filter\n    }\n    return []\n}\n\nexport function UrineData(QDC) {\n    //排尿\n    if (Array.isArray(QDC)) {\n        const filter = QDC.filter(function (info, index, arr) {\n            return info.item.toString().trim() === \"排尿\"\n        })\n        return filter\n    }\n    return []\n}\n\nexport function formatTimerData(dataArray, pickerdate, interval, source) {\n    function formatStartTime(source, interval, endTime) {\n        if (source === 'Crossection') {\n            return endTime - (24 * 60 * 60 * 1000)\n        }\n        if (interval === 0) {\n            return endTime - (32 * 60 * 60 * 1000)\n        }\n        if (interval === 1) {\n            return endTime - (3 * 24 * 60 * 60 * 1000)\n        }\n        if (interval === 2) {\n            return endTime - (7 * 24 * 60 * 60 * 1000)\n        }\n        return endTime - (14 * 24 * 60 * 60 * 1000)\n    }\n    function formatInterval(source, interval) {\n        if (source === 'Crossection') { return 4 }\n        if (interval === 0) { return 32 }\n        if (interval === 1) { return 18 }\n        if (interval === 2) { return 21 }\n        return 14\n    }\n    function formatStartAndEnd(source, interval, index, StartTime) {\n        if (source === 'Crossection') {\n            return {\n                start: StartTime + (index * 8 * 60 * 60 * 1000),\n                end: StartTime + ((index + 1) * 8 * 60 * 60 * 1000)\n            }\n        }\n        if (interval === 0) {\n            return {\n                start: StartTime + ((index) * 60 * 60 * 1000),\n                end: StartTime + ((index + 1) * 60 * 60 * 1000)\n            }\n        }\n        if (interval === 1) {\n            return {\n                start: StartTime + (index * 4 * 60 * 60 * 1000),\n                end: StartTime + ((index + 1) * 4 * 60 * 60 * 1000)\n            }\n        }\n        if (interval === 2) {\n            return {\n                start: StartTime + (index * 8 * 60 * 60 * 1000),\n                end: StartTime + ((index + 1) * 8 * 60 * 60 * 1000)\n            }\n        }\n        return {\n            start: StartTime + (index * 24 * 60 * 60 * 1000),\n            end: StartTime + ((index + 1) * 24 * 60 * 60 * 1000)\n        }\n    }\n    function formatUrineforTimer(source, interval, urine, sortData, ST, ET) {\n        if (source === 'Crossection') {\n            return {\n                start: ST,\n                end: ET,\n                element: sortData,\n                urine: 8\n            }\n        }\n        if (interval === 0) {\n            return {\n                start: ST,\n                end: ET,\n                element: sortData,\n                urine: urine\n            }\n        }\n        if (interval === 1) {\n            return {\n                start: ST,\n                end: ET,\n                element: sortData,\n                urine: urine * 4\n            }\n\n        }\n        if (interval === 2) {\n            return {\n                start: ST,\n                end: ET,\n                element: sortData,\n                urine: 8\n            }\n        }\n        return {\n            start: ST,\n            end: ET,\n            element: sortData,\n            urine: 24\n        }\n    }\n    const EndTime = pickerdate + (31 * 60 * 60 * 1000)\n    const StartTime = formatStartTime(source, interval, EndTime)\n    var urine = 0\n    var filterData = []\n    if (Array.isArray(dataArray)) {\n        console.log(dataArray)\n        console.log(formatInterval(source, interval))\n        for (let index = 0; index < formatInterval(source, interval); index++) {\n            const Timer = formatStartAndEnd(source, interval, index, StartTime)\n            const ST = Timer.start\n            const ET = Timer.end\n            const SortDataArray = dataArray.filter(function (info, i, arr) {\n                const time = moment(info.rec_dat.toString().trim() + info.rec_tim.toString().trim(), \"YYYYMMDDHHmm\").valueOf()\n                if (source === 'Crossection') {\n                    if (index === 3) {\n                        return StartTime <= time && time < EndTime\n                    }\n                }\n                return ST <= time && time < ET\n            })\n            if (source === 'Crossection') {\n                if (index === 3) {\n                    filterData.push(formatUrineforTimer(source, interval, 8, SortDataArray, StartTime, EndTime))\n\n                }\n                else {\n                    filterData.push(formatUrineforTimer(source, interval, 8, SortDataArray, ST, ET))\n                }\n            }\n            else {\n                // console.log(SortDataArray)\n                // console.log(\"1233123123123\")\n                // console.log(urine)\n                if (SortDataArray.length === 0) {\n                    urine = urine + 1\n                    filterData.push(formatUrineforTimer(source, interval, 0, SortDataArray, ST, ET))\n                }\n                else {\n                    urine = urine + 1\n                    filterData.push(formatUrineforTimer(source, interval, urine, SortDataArray, ST, ET))\n                    urine = 0\n                }\n            }\n        }\n    }\n    return filterData\n}\n\nexport function OtherData(QDC) {\n    //第四區不屬於排尿\n    if (Array.isArray(QDC)) {\n        const filter = QDC.filter(function (info, index, arr) {\n            return info.item.toString().trim() === \"失血\" ||\n                info.item.toString().trim() === \"滲液\" ||\n                info.item.toString().trim() === \"嘔吐\" ||\n                info.item.toString().trim() === \"引流\" ||\n                info.item.toString().trim() === \"穿刺\" ||\n                info.item.toString().trim() === \"透析\" ||\n                info.item.toString().trim() === \"沖洗\" ||\n                info.item.toString().trim() === \"排便\"\n        })\n        return filter\n    }\n    return false\n}\n\n","import React, { Component } from 'react';\nimport IOpage from '../../Module/iopage'\nimport moment from 'moment';\n\n\nclass CrossectionIo extends Component {\n    render() {\n        const { caseinfo, title, PickerDate } = this.props\n        const titlearray = ['白班', '小夜', '大夜', '全日']\n        const titlelab = titlearray.map(function (info, index) {\n            return (\n                <centerstyle key={index}>\n                    <t2 style={{ fontWeight: index === 3 ? '600' : \"\" }}>{info}</t2>\n                </centerstyle>\n            );\n        })\n        return (\n            <div style={{ border: '1px solid rgba(238, 238, 238, 1)' }}>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t1 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t1>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr\", height: \"40px\" }}>\n                    <div style={{ display: 'flex', justifyContent: \"center\", alignItems: \"center\" }}>{moment(PickerDate).format('M/DD')}</div>\n                    {titlelab}\n                </div>\n                <IOpage PickerDate={PickerDate} caseinfo={caseinfo} Status={\"Crossection\"} IntervalStatus={0}></IOpage>\n            </div>\n        );\n    }\n}\n\nexport default CrossectionIo\n","import React, { Component } from 'react';\nimport * as ApiProvider from '../../API/ApiProvider'\nimport { Icon } from 'antd'\n\n\nexport default class NonLabReport extends Component {\n    state = {\n        RESDISP: null,\n        preCID: null,\n        preHID: null,\n        preSeq: null,\n        preMonth: null\n    }\n    componentDidMount() {\n        const { CID, HID, month, seq } = this.props\n        this.setState({ preCID: CID, preHID: HID, preMonth: month, preSeq: seq })\n        this.APIget(HID, month, CID, seq)\n    }\n\n    componentDidUpdate() {\n        const { CID, HID, month, seq } = this.props\n        const { preCID, preHID, preMonth, preSeq } = this.state\n        if (CID !== preCID || HID !== preHID || month !== preMonth || seq !== preSeq) {\n            this.setState({ preCID: CID, preHID: HID, preMonth: month, preSeq: seq })\n            this.APIget(HID, month, CID, seq)\n        }\n    }\n\n    APIget(HID, month, CID, seq) {\n        ApiProvider.getStoredProcedureRESDISP(HID, month, CID, seq)\n            .then(data => { console.log(data.data); this.setState({ RESDISP: data.data }) })\n            .catch(err => { console.log(err) })\n    }\n\n    render() {\n\n        const RESDISP_Report = this.state.RESDISP\n        console.log(RESDISP_Report)\n        if (RESDISP_Report === null) {\n            return (\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <Icon type=\"loading\" />\n                </div>);\n        }\n        const showDetail = RESDISP_Report.map((data, index) => {\n            return data.CONTENT !== \"\" ? <div key={\"ExamReportModal\" + index} style={{ whiteSpace: \"pre-wrap\" }}>{data.CONTENT}</div> : \"\"\n        })\n        return (\n            <div>{showDetail}</div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport { Modal } from 'antd';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport * as ApiGithub from '../../API/ApiGithub'\nimport './NonlabviewtableCell.scss'\nimport NonLabReport from './NonLabReport'\n\nconst STATUS_REPORT = 0\n\nexport default class NonlabviewtableCell extends Component {\n    state = {\n        Result: [],\n        parser: { \"mappings\": [] },\n        summary_str: \"--\",\n        RESDISP: [],\n        visible: false\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    componentDidMount() {\n        //call API\n        // const { caseId, hisId, month, seq, name, time, status } = this.props;\n\n        // if (caseId !== undefined && hisId !== undefined && month !== undefined && seq !== undefined) {\n        //     ApiProvider.getStoredProcedureRESDISP(hisId.trim(), month, caseId.trim(), seq)\n        //         .then(result => {\n        //             this.setState({\n        //                 RESDISP: result.data\n        //             })\n\n        //             let input = {\n        //                 item_name: name.trim(),\n        //                 content: \"\",\n        //                 sample: \"\",\n        //                 lab: \"\",\n        //                 datatime: moment(time).format(\"YYYY-MM-DD HH:mm\")\n        //             }\n\n        //             result.data.forEach(item => {\n        //                 input.content = `${input.content} \"\\n\" ${item.CONTENT}`;\n        //             });\n\n        //             //status 0:正式報告 只有0需要做parse\n        //             if (parseInt(status) === STATUS_REPORT) {\n        //                 ApiGithub.getGitHubJson(\"Summary.json\")\n        //                     .then(data => {\n        //                         console.log(\"get Summary.json OK \" + JSON.stringify(data.data));\n\n        //                         const selected_parser = this.select_parser(input, data.data)\n        //                         console.log(\"selected_parser \" + JSON.stringify(selected_parser));\n        //                         this.setState({\n        //                             parser: selected_parser\n        //                         })\n\n        //                         if (selected_parser !== undefined) {\n        //                             const result_kv_pairs = this.parse(input, selected_parser)\n        //                             console.log(\"result_kv_pairs \" + JSON.stringify(result_kv_pairs));\n\n        //                             const summary_str = this.summerize(result_kv_pairs, selected_parser)\n        //                             console.log(\"summary_str \" + JSON.stringify(summary_str));\n\n        //                             this.setState({\n        //                                 summary_str: summary_str\n        //                             })\n        //                         }\n        //                     })\n        //                     .catch(err => {\n        //                         console.log(err)\n        //                     })\n        //             }\n        //         })\n        //         .catch(err => {\n        //             console.log(\"getStoredProcedureRESDISP NG \" + JSON.stringify(err));\n        //         });\n        // }\n    }\n\n    // select_parser = (input, parsers) => {\n    //     return parsers.find(x =>\n    //         input.item_name.match(x.apply_condition.name)\n    //         && (!x.apply_condition.sample || input.sample.match(x.apply_condition.sample))\n    //         && (!x.apply_condition.lab || input.lab.match(x.apply_condition.lab))\n    //         && (!x.apply_condition.start_time || input.datetime >= x.apply_condition.start_time)\n    //         && (!x.apply_condition.end_time || input.datetime < x.apply_condition.end_time)\n    //     )\n    // }\n\n    // parse = (input, parser) => {\n    //     let mappings = parser.mappings\n    //     let content = input.content\n    //     let result = {}\n    //     mappings.forEach(mapping => {\n    //         const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n    //         const match = content.match(re)\n    //         result[mapping.key] = match && match[mapping.position]\n    //     });\n    //     return result;\n    // }\n\n    // summerize = (kv_pairs, parser) => {\n    //     let summary_str = parser.summary\n    //     for (const key in kv_pairs) {\n    //         let match_replacer = summary_str.match(RegExp(\"\\\\[\" + key + \"(;(.*?))?\\\\]\"))\n    //         let replacer = \"\"\n    //         if (match_replacer && match_replacer.length === 3) {\n    //             replacer = match_replacer[2]\n    //         }\n    //         summary_str = summary_str.replace(RegExp(\"\\\\[\" + key + \"(;.*?)?\\\\]\"), kv_pairs[key] || replacer)\n    //     }\n    //     return summary_str;\n    // }\n\n    render() {\n        function statusFormat(status) {\n            // console.log(status)\n            if (status === 0) {\n                return \"正式報告\"\n            }\n            if (status === 1) {\n                return \"已簽收\"\n\n            }\n            if (status === 2) {\n                return \"待送檢\"\n            }\n            return status\n        }\n        //status 0:正式報告 只有0需要做parse\n        const { time, name, status, come, showModal, isSameDay, caseId, hisId, month, seq } = this.props;\n        const { summary_str, RESDISP } = this.state;\n        const statusRender = statusFormat(status)\n        const canShowReport = parseInt(status) === 0\n        // console.log(caseId, hisId, month, seq)\n        return (\n            <div style={{ minHeight: \"40px\", display: \"grid\", gridTemplateColumns: \"1fr 1.5fr 1fr 1fr 1fr\", overflowY: \"auto\", borderBottom: isSameDay ? \"rgba(238, 238, 238, 1) 1px solid\" : '#989898 1px solid', borderCollapse: \"collapse\" }}>\n                <t3 className='nonlabteblecell'>{moment(time).format('MM/DD HH:mm')}</t3>\n                <t3 className='nonlabteblecell' style={{ justifyContent: \"left\" }}>{name}</t3>\n                <t3 className='nonlabteblecell'>{come}</t3>\n                <t3 className='nonlabteblecell'>{statusRender}</t3>\n                {/* {canShowReport && <t3 className='nonlabteblecell' onClick={() => showModal(RESDISP)} style={{ color: \"blue\", textDecoration: \"underline\", cursor: \"pointer\" }}>{summary_str}</t3>}\n                {!canShowReport && <t3 className='nonlabteblecell'>{summary_str}</t3>} */}\n                <t3 className='nonlabteblecell' onClick={status === 0 ? this.showModal : null} style={{ color: status === 0 ? \"blue\" : \"black\", textDecoration: status === 0 ? \"underline\" : \"none\", cursor: status === 0 ? \"pointer\" : \"auto\" }}>\n                    {status === 0 ? \"顯示\" : \"--\"}\n                </t3>\n                <Modal\n                    title=\"檢驗結果\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    width={1000}\n                    footer={null}>\n                    <NonLabReport CID={caseId.toString().trim()} HID={hisId.toString().trim()} month={month.toString().trim()} seq={seq}></NonLabReport>\n                </Modal>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nclass ExamReportModal extends Component {\n    render() {\n        const reportDetail = this.props.report\n        const showDetail = reportDetail.map((data, index) => {\n            return data.CONTENT !== \"\" ? <div key={ \"ExamReportModal\" + index } style={{ whiteSpace: \"pre-wrap\" }}>{data.CONTENT}</div> : \"\"\n        })\n        return (\n            <div>{showDetail}</div>\n        );\n    }\n}\n\nexport default ExamReportModal\n","import React, { Component } from 'react';\nimport './Nonlabviewtable.scss'\nimport NonlabviewtableCell from './NonlabviewtableCell'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider'\nimport { Modal } from 'antd';\nimport InsReportModal from '../ExamReportModal'\nimport * as ORDERLIST from '../../Resource/ORDERLIST'\n\nclass Nonlabviewtable extends Component {\n    state = {\n        visible: false,\n\n        modalVisible: false,\n        modalReport: \"\",\n        ORDLIST: [],\n        RESSECT: [],\n\n        preDate: null\n    }\n    componentDidMount() {\n        const start = this.props.PickerDateRange[0]\n        this.setState({ preDate: start })\n        this.nonLabApiGet()\n    }\n    componentDidUpdate() {\n        const start = this.props.PickerDateRange[0]\n        const { preDate } = this.state\n        if (start !== preDate) {\n            this.setState({ preDate: start })\n            this.nonLabApiGet()\n        }\n    }\n    nonLabApiGet() {\n        function selectMonthInterval(storeProcedureTime) {\n            const timestampInterval = moment() - moment(storeProcedureTime, \"YYYY-MM-DD\").valueOf()\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        // ApiProvider.getStoredProcedureRESSECT(caseinfo.HISID, MonthInterval, \"ALL\", \"DOC3924B\")\n        //     .then(data => { this.setState({ RESSECT: data.data }) })\n        //     .catch(err => { console.log(\"getStoredProcedureRESSECT NG \" + JSON.stringify(err)) });\n        const { caseinfo, PickerDateRange } = this.props\n        const storeProcedureTime = moment(PickerDateRange[0]).format(\"YYYY-MM-DD\")\n        const MonthInterval = selectMonthInterval(storeProcedureTime)\n        ApiProvider.getStoredProcedureORDLIST(caseinfo.HISID, storeProcedureTime, \"ALL\", \"DOC3924B\")\n            .then(data => { this.setState({ ORDLIST: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureORDLIST NG \" + JSON.stringify(err)) });\n        // this.setState({ ORDLIST: ORDERLIST.data })\n    }\n    showModal = (report) => {\n        this.setState({\n            modalVisible: true,\n            modalReport: report\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n    render() {\n        function ORDLISTFormat(ORDLIST, PickerDateRange) {\n            console.log(PickerDateRange[1])\n            var ORDLIST_Format = []\n            if (Array.isArray(ORDLIST)) {\n                for (let index = 0; index < ORDLIST.length; index++) {\n                    const element = ORDLIST[index];\n                    const elemetnStatus = Number(element.ORSTATUS)\n                    const elementORBGNTime = moment(element.ORBGNDT.toString().trim() + element.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n                    if (PickerDateRange[0] <= elementORBGNTime && elementORBGNTime <= PickerDateRange[1]) {\n                        if (elemetnStatus === 64) {\n                            //正式報告\n                            ORDLIST_Format.push({\n                                time: elementORBGNTime,\n                                status: 0,\n                                element: element\n                            })\n                        }\n                        else if (elemetnStatus === 38) {\n                            //已簽收 \n                            ORDLIST_Format.push({\n                                time: elementORBGNTime,\n                                status: 1,\n                                element: element\n                            })\n                        }\n                        else if (elemetnStatus === 31) {\n                            //待送檢\n                            ORDLIST_Format.push({\n                                time: elementORBGNTime,\n                                status: 2,\n                                element: element\n                            })\n                        }\n                        else if (elemetnStatus === 82 || elemetnStatus === 60 || elemetnStatus === 61) {\n                            //已取消 不顯示\n                            continue\n                        }\n                        else {\n                            //Other\n                            ORDLIST_Format.push({\n                                time: elementORBGNTime,\n                                status: elemetnStatus,\n                                element: element\n                            })\n                        }\n                    }\n                }\n            }\n            return ORDLIST_Format\n        }\n        const { modalVisible, modalReport, ORDLIST } = this.state\n        const { PickerDateRange } = this.props\n        let FormatList = ORDLISTFormat(ORDLIST, PickerDateRange)\n        const showModal = this.showModal\n        const handleOk = this.handleOk\n        const handleCancel = this.handleCancel\n\n        if (FormatList.length > 1) {\n            FormatList = FormatList.sort((a, b) => {\n                return a.time < b.time ? 1 : -1\n            })\n        }\n\n        const nonlabcell = FormatList.map(function (value, index, array) {\n            const come = value.element.ORSPCN1;\n            const time = value.time\n            const name = value.element.ORPROCED;\n            const status = value.status;\n            let isSameDay = false;\n            if (index < FormatList.length - 1) {\n                isSameDay = moment(value.time).isSame(moment(FormatList[index + 1].time), 'day');\n            }\n            if (index === FormatList.length - 1) {\n                isSameDay = true;\n            }\n\n            return (\n                <NonlabviewtableCell key={\"Nonlabviewtable\" + index} come={come} time={time} name={name} status={status} hisId={value.element.ORHISTNO} caseId={value.element.ORDSEQCN} month={value.element.ORMM} seq={value.element.ORDSEQNO} showModal={showModal} isSameDay={isSameDay}></NonlabviewtableCell>\n            );\n        })\n        const title = [\"時間\", \"檢驗項目\", \"檢體\", \"狀態\", \"報告\"]\n        const titlecell = title.map(function (value, index, arr) {\n            const tempStyle = index == 1\n            return (\n                <t3 className='nonlabtebletitlecell' style={{ justifyContent: \"center\" }}>{value}</t3>\n            );\n        })\n\n\n        return (\n            <div>\n                <div style={{ height: \"30px\", backgroundColor: \"rgba(226, 237, 243,.5)\", display: \"grid\", gridTemplateColumns: \"1fr 1.5fr 1fr 1fr 1fr\" }}>\n                    {titlecell}\n                </div>\n                <div style={{ border: \"1px solid rgba(232, 232, 232, 1)\", borderRadius: \"0 0 4px 4px\", borderCollapse: \"collapse\" }}>\n                    <div className='nonlabviewtable'>\n                        {JSON.stringify(FormatList) !== '[]' ?\n                            nonlabcell\n                            :\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1.5fr 1fr 1fr 1fr\" }}>\n                                <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                    無資料\n                                </div>\n                            </div>}\n                    </div>\n                    <Modal\n                        title={\"檢驗結果\"}\n                        visible={modalVisible}\n                        onOk={handleOk}\n                        onCancel={handleCancel}\n                        width={1000}\n                        footer={null}>\n                        <InsReportModal report={modalReport}></InsReportModal>\n                    </Modal>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Nonlabviewtable\n","import React, { Component } from 'react';\nimport Nonlabviewtable from './Nonlabviewtable'\n \n\nclass Nonlabviewlayout extends Component {\n    render() {\n        // const { PickerDate } = this.props\n        // const { modalVisible, modalReport } = this.state\n        // const showModal = this.showModal\n        // const handleOk = this.handleOk\n        // const handleCancel = this.handleCancel\n        return (\n            <div style={{ marginBottom: \"10px\" }}> \n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t1 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>近三日報告清單</t1>\n                </div>\n                <Nonlabviewtable caseinfo={this.props.caseinfo} PickerDateRange={this.props.PickerDateRange}></Nonlabviewtable>\n            </div>\n        );\n    }\n}\n\nexport default Nonlabviewlayout\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider'\n\nclass RTtable extends Component {\n    state = {\n        RESDBGAS: [],\n        PreHID: null,\n        PreTransInDate: null,\n    }\n    componentDidMount() {\n        const HID = this.props.caseinfo.HISID\n        const TRDT = this.props.caseinfo.TRANSINDT\n        this.setState({ PreHID: HID, PreTransInDate: TRDT })\n        this.getGasAPI()\n    }\n    componentDidUpdate() {\n        const HID = this.props.caseinfo.HISID\n        const TRDT = this.props.caseinfo.TRANSINDT\n        const PreHID = this.state.PreHID\n        const PreTRDT = this.state.PreTransInDate\n        if (HID !== PreHID || TRDT !== PreTRDT) {\n            this.setState({ PreHID: HID, PreTransInDate: TRDT })\n            this.getGasAPI()\n        }\n    }\n    getGasAPI() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID\n        const TransInDate = moment(caseinfo.TRANSINDT, \"YYYYMMDD\").format(\"YYYY-MM-DD\")\n        ApiProvider.getStoredProcedureRESDBGAS(HID, TransInDate)\n            .then(data => { this.setState({ RESDBGAS: data.data }) })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDBGAS NG \" + JSON.stringify(err));\n            });\n    }\n    GasListToCell = () => {\n\n        function formatGasData(GasDataList, st, et) {\n            let filterTimer = GasDataList.filter(function (element, index, arr) {\n                const timeStamp = moment(element.ORRESDT.toString().trim() + element.ORRESTM.toString().trim(), 'YYYY-MM-DDHH.mm.ss').valueOf()\n                return st <= timeStamp && timeStamp <= et\n            })\n\n            if (Object.keys(filterTimer).length > 1) {\n                filterTimer = filterTimer.sort((a, b) => {\n                    let tempTimeA = moment(a.ORRESDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n                    let tempTimeB = moment(b.ORRESDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n                    return tempTimeA < tempTimeB ? 1 : -1\n                })\n            }\n\n            const decideStyle = {\n                \"1\": { \"min\": 6.5, \"max\": 7.7 },\n                \"2\": { \"min\": 0, \"max\": 100 },\n                \"3\": { \"min\": 0, \"max\": 200 },\n                \"4\": { \"min\": 0, \"max\": 40 },\n                \"5\": { \"min\": -30, \"max\": 20 },\n                \"6\": { \"min\": 0, \"max\": 100 },\n                \"7\": { \"min\": 0, \"max\": 100 }\n            }\n\n            const cellMap = filterTimer.map(function (element, index, arr) {\n                const PHValue = element.SS07\n                const PCO2Value = element.SS06\n                const PO2Value = element.SS08\n                const HCO3Value = element.SS04\n                const BEValue = element.SS01\n                const O2SatValue = element.SS05\n                const FiO2Value = element.SS03\n                const timeStamp = moment(element.ORRESDT.toString().trim() + element.ORRESTM.toString().trim(), 'YYYY-MM-DDHH.mm.ss').valueOf()\n                const time = moment(timeStamp).format(\"MM/DD HH:mm\")\n                const reportSample = 'link'\n                const gasDataArray = [time, PHValue, PCO2Value, PO2Value, HCO3Value, BEValue, O2SatValue, FiO2Value, reportSample]\n                let isSameDay = false;\n                if (index < filterTimer.length - 1) {\n                    const day = moment(timeStamp).format('YYYY/MM/DD');\n                    const compareDay = moment(filterTimer[index + 1].ORRESDT.toString().trim() + filterTimer[index + 1].ORRESTM.toString().trim(), 'YYYY-MM-DDHH.mm.ss').format('YYYY/MM/DD')\n                    isSameDay = moment(day).isSame(compareDay, 'day');\n\n                }\n                if (index === filterTimer.length - 1) {\n                    isSameDay = true;\n                }\n\n                const GasCell = gasDataArray.map(function (value, index, array) {\n                    let tempStyle = false\n                    const tempValue = parseFloat(value)\n                    // console.log(index.toString())\n                    if (index != 0 && index != 8 && (tempValue > decideStyle[index.toString()].max || tempValue < decideStyle[index.toString()].min) || isNaN(tempValue) == true) {\n                        tempStyle = true;\n                    }\n                    return (\n                        <centerstyle key={index} style={{ borderLeft: index !== 0 ? \"rgba(238,238,238,1) 1px solid\" : \"\", borderBottom: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\" }}>\n                            <t2 style={{ color: tempStyle ? \"red\" : index !== 0 ? \"black\" : \"auto\", fontWeight: index !== 0 ? 600 : '' }}>{value}</t2>\n                        </centerstyle>\n                    );\n                })\n\n                return (\n                    <div key={index} style={{ height: \"40px\", display: \"grid\", gridTemplateColumns: \"110px repeat(8,1fr)\", borderBottom: isSameDay ? \"rgba(238, 238, 238, 1) 1px solid\" : '#989898 1px solid' }}>{GasCell}</div>\n                );\n            })\n            return cellMap\n\n        }\n        const { Timer } = this.props\n        const startTime = Timer[0]\n        const endTime = Timer[1]\n        const GasData = this.state.RESDBGAS\n        const CellRander = formatGasData(GasData, startTime, endTime)\n\n        return CellRander\n    }\n\n    render() {\n        const { searchbar } = this.props\n        const GasTitleList = ['時間', 'pH', `PCO2`, 'PO2', 'HCO3', 'BE', 'O2SAT', 'FiO2', '報告']\n        const GasTitleCell = GasTitleList.map(function (value, index, array) {\n            function formatString(value) {\n                // console.log(value)\n                if (value === \"O2SAT\") {\n                    return <div style={{ fontSize: \"14px\" }}>O<sub>2</sub>SaT</div>\n                }\n                if (value === \"PCO2\") {\n                    return <div style={{ fontSize: \"14px\" }}>PCO<sub>2</sub></div>\n                }\n                if (value === \"PO2\") {\n                    return <div style={{ fontSize: \"14px\" }}>PO<sub>2</sub></div>\n                }\n                if (value === \"HCO3\") {\n                    return <div style={{ fontSize: \"14px\" }}>HCO<sub>2</sub></div>\n                }\n                if (value === \"FiO2\") {\n                    return <div style={{ fontSize: \"14px\" }}>FiO<sub>2</sub></div>\n                }\n                return value\n            }\n            return (\n                <centerstyle key={index} style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", borderCollapse: \"collapse\" }}>\n                    <div style={{ fontSize: \"14px\" }}>{formatString(value)}</div>\n                </centerstyle>\n            );\n        })\n        const GasListToCell = this.GasListToCell()\n\n        return (\n            <div>\n                <div style={{ justifyItems: \"center\", height: \"30px\", backgroundColor: \"rgba(226, 237, 243,.5)\", display: \"grid\", gridTemplateColumns: \"110px repeat(8,1fr)\" }}>\n                    {GasTitleCell}\n                </div>\n                <div style={{ border: \"1px solid rgba(232, 232, 232, 1)\", borderRadius: \"0 0 4px 4px\", borderCollapse: \"collapse\" }}>\n                    <div style={{ minHeight: searchbar ? \"calc(100vh - 305px)\" : \"120px\", maxHeight: searchbar ? \"calc(100vh - 300px)\" : \"400px\", overflowY: \"auto\" }}>\n                        {GasListToCell.length !== 0 ?\n                            GasListToCell\n                            :\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"110px repeat(8,1fr)\" }}>\n                                <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                    無資料\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTtable\n","import React, { Component } from 'react';\nimport RTtable from './RTtable'\nclass GAS extends Component {\n\n\n    render() {\n        const { caseinfo, PickerDateRange, searchbar } = this.props\n\n        return (\n            <div >\n                <div style={{ backgroundColor: \"#71b0e46e\", borderRadius: \"4px 4px 0 0\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>\n                        {searchbar ? \"GAS累積報告\" : \"近三日血液氣體分析\"}\n                    </t2>\n                </div>\n                <RTtable Timer={PickerDateRange} caseinfo={caseinfo} searchbar={searchbar}></RTtable>\n            </div>\n        );\n    }\n}\n\nexport default GAS\n","import React, { Component } from 'react';\nimport { Modal, Input, Button } from 'antd';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nexport default class RemarkModal extends Component {\n    state = {\n        preremark: null,\n        preeditor: null,\n    }\n\n    componentDidMount() {\n        this.onInputChange = this.onInputChange.bind(this);\n        this.onOkClick = this.onOkClick.bind(this);\n        const remark = this.props.remarkValue.remark\n        console.log(this.props.remarkValue.remark)\n        this.setState({ preremark: remark })\n\n    }\n\n    componentDidUpdate() {\n        const remark = this.props.remarkValue.remark\n        const { preremark } = this.state\n        console.log(preremark)\n        if (preremark === null || preremark === \"\") {\n            if (preremark !== remark) {\n                this.setState({ preremark: remark })\n            }\n        }\n\n    }\n    onInputChange(event) {\n        // const preString = this.state.preremark + event.target.value\n        console.log(event.target.value)\n        this.setState({ preremark: event.target.value })\n    }\n\n    onOkClick(event) {\n        const { transinId, type, remarkId } = this.props.remarkValue\n        const { preremark, preeditor, } = this.state;\n        let fixTime = moment().format('YYYY-MM-DD[T]HH:mm:ss');\n        // console.log(name, remark, remarkId, fixTime, transinId, type, editor)\n        const name = \"breathSetting\"\n\n        let tempRemark = ''\n\n        if (event.target.value == '1') {\n            tempRemark = preremark\n        } else {\n            tempRemark = ''\n            this.setState({ preremark: null })\n        }\n\n        ApiProvider.createRemark(name, tempRemark, remarkId, fixTime, transinId, type, preeditor)\n            .then(result => {\n                console.log(\"createRemark OK \" + JSON.stringify(result));\n                this.props.onOk(tempRemark);\n            })\n            .catch(err => {\n                console.log(\"createRemark NG \" + JSON.stringify(err));\n            });\n    }\n\n    render() {\n        const { TextArea } = Input;\n        const { createTime, name } = this.props.remarkValue;\n        const onCancel = this.props.onCancel;\n        const onOk = this.onOkClick.bind(this);\n        console.log(this.state.preremark)\n        return (\n            <Modal\n                title=\"註記功能\"\n                visible={this.props.visible}\n                onCancel={onCancel}\n                okText=\"儲存\"\n                cancelText=\"取消\"\n                footer={[\n                    <Button style={{ float: 'left' }} onClick={onOk} value=\"0\">刪除</Button>,\n                    <Button onClick={onCancel}>取消</Button>,\n                    <Button type=\"primary\" onClick={onOk} value=\"1\">儲存</Button>\n                ]}\n            >\n                <div style={{ display: \"grid\", gridTemplateRows: \"30px 30px 30px 30px\" }}>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div>開立時間: {createTime}</div>\n                        <div>上次編輯時間: </div>\n                        {/* <div>上次編輯時間: {this.state.editTime}</div> */}\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div>處理名稱: {name}</div>\n                        <div>上次編輯者: {this.state.editor}</div>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div>頻次:</div>\n                        <div>開立醫師: {this.state.editor}</div>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>註記內容:</div>\n                    <TextArea rows={5} placeholder=\"請輸入備註內容\" value={this.state.preremark} onChange={this.onInputChange} />\n                </div>\n            </Modal>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './RTbreathtablecell.scss'\n// import * as FiliterReg from '../../Function/FiliterReg'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass RTbreathetablecell extends Component { \n    state = {\n        onCell: false,\n        onEdit: false,\n        remark: '',\n        powerLogin: 0\n    }\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n    Mouse_move() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onCell: true\n                }\n            )\n        }\n    }\n\n    Mouse_leave() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onCell: false\n                }\n            )\n        }\n    }\n\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue)\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            onEdit: false,\n        });\n    }\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    seachRemark = () => {\n        const { caseinfo, value } = this.props\n        const id = `Breath${moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").valueOf()}`\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, id, \"RTbreath\").then(result => {\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    render() {\n        const { value, caseinfo, isSameDay } = this.props\n        const id = `Breath${moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").valueOf()}`\n        const time = moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\")\n        const mode = value.Mode.toString().trim()\n        const setting = value.Setting\n\n        console.log(setting)\n\n        const remarkValue = {\n            \"createTime\": time,\n            \"name\": setting,\n            \"remarkId\": id,\n            \"remark\": this.state.remark,\n            \"transinId\": caseinfo.TRANSINID,\n            \"type\": \"RTbreath\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <div onMouseMove={() => this.Mouse_move()} onMouseLeave={() => this.Mouse_leave()} className=\"RTtablecell\" style={{ minheight: this.state.remark === '' ? '40px' : '60px', borderBottom:  isSameDay ? \"rgba(238, 238, 238, 1) 1px solid\" : '#989898 1px solid'  }}>\n                <t3 className='RTBreathDateCell' style={{ minheight: this.state.remark === '' ? '40px' : '60px' }}>{time}</t3>\n                <div style={{ display: \"grid\", gridTemplateRows: [this.state.remark === null || this.state.remark === undefined || this.state.remark === '' ? \"1fr\" : \"1fr 20px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 3fr\" }}>\n                        <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", borderCollapse: \"collapse\", borderLeft: \"rgba(238, 238, 238, 1) 1px solid\" }}>\n                            <t2 style={{ fontWeight: 600, color: 'black' }}>\n                                {mode}\n                            </t2>\n                        </div>\n                        <div style={{ display: \"flex\", alignItems: \"center\", borderCollapse: \"collapse\", borderLeft: \"rgba(238, 238, 238, 1) 1px solid\" }}>\n                            <t2 style={{ fontWeight: 600, color: 'black' }}>\n                                {setting}\n                            </t2>\n                        </div>\n                    </div>\n                    <t3 style={{ fontWeight: 600, alignItems: \"center\", borderCollapse: \"collapse\", color: \"rgb(0,120,0)\", overflow: \"hidden\", height: \"20px\", display: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"none\" : \"\"], borderLeft: \"rgba(238, 238, 238, 1) 1px solid\", borderTop: \"rgba(238, 238, 238, 1) 1px solid\" }}>{this.state.remark}</t3>\n                    <div style={this.state.onCell ?\n                        { display: this.state.powerLogin == 1 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", right: 0, height: this.state.remark === '' ? \"100%\" : \"100%\", background: \"transparent\", width: \"77px\" }\n                        :\n                        { display: \"none\" }}>\n                        <div onClick={() => this.Edit_state()} style={{ width: this.state.remark === '' ? '30px' : '40px', height: this.state.remark === '' ? '30px' : '40px', borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }}>\n                            <img src={chooseedit} alt='chooseedit'></img>\n                        </div>\n                    </div>\n                </div>\n                <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            </div>\n        );\n    }\n}\n\nexport default RTbreathetablecell\n","import React, { Component } from 'react';\nimport RTbreathetablecell from './RTbreathtablecell'\nimport moment from 'moment';\n// import * as FilterReg from '../../Function/FiliterReg'\n// import moment from 'moment'\n\nclass RTbreathetable extends Component {\n    createRTbreathetable = () => {\n        const { DataList, caseinfo, searchbar } = this.props\n\n        // const DataList = [\n        //     {Mode: \"OETT+PC\", Setting: \"30/20/24/5\",Date: \"20200304\", Time: 2000},\n        //     {Mode: \"OETT+PC\", Setting: \"30/20/24/5\",Date: \"20200304\", Time: 1709},\n        //     {Mode: \"OETT+PC\", Setting: \"30/20/24/5\",Date: \"20200304\", Time: 1500},\n        //     {Mode: \"OETT+PC\", Setting: \"30/20/24/5\",Date: \"20200304\", Time: 1400},\n        //      {Mode: \"OETT+SIMV+PS\", Setting: \"30/20/24/5\", Date: \"20200304\", Time: 1233},\n        //     {Mode: \"OETT+SIMV+PS\", Setting: \"30/20/24/5\", Date: \"20200305\", Time: 1017},\n        //      {Mode: \"OETT+PC\", Setting: \"30/20/24/5\", Date: \"20200305\", Time: \"0700\"},\n        // ]       \n        const RTbreathetable = DataList.map(\n            (value, index, array) => {\n                let isSameDay = false;\n                if (index < DataList.length - 1) {\n                    isSameDay = moment(value.Date, \"YYYYMMDD\").isSame(moment(DataList[index + 1].Date, \"YYYYMMDD\"), 'day');\n                }\n                if (index === DataList.length - 1) {\n                    isSameDay = true;\n                }\n                return <RTbreathetablecell key={index} value={value} caseinfo={caseinfo} searchbar={searchbar} isSameDay={isSameDay}></RTbreathetablecell>\n            }\n        )\n\n        return DataList.length !== 0 ? RTbreathetable :\n            <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr 3fr\" }}>\n                <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                    無資料\n                </div>\n            </div>\n    }\n\n    render() {\n        const title = [\"時間\", \"模式\", \"設定\"]\n        const { searchbar } = this.props\n        const titleCellRender = title.map(function (element, index, arr) {\n            return (\n                <div key={index} style={{ display: \"flex\", alignItems: \"center\", borderCollapse: \"collapse\", justifyContent: \"center\" }}>\n                    <div style={{ fontSize: \"14px\" }}>{element}</div>\n                </div>\n            );\n        })\n\n        return (\n            <div>\n                <div style={{ height: \"30px\", display: \"grid\", gridTemplateColumns: \"90px 1fr 3fr\", backgroundColor: \"rgba(226, 237, 243,.5)\", justifyItems: \"center\" }}>\n                    {titleCellRender}\n                </div>\n                <div style={{ border: \"1px solid rgba(232, 232, 232, 1)\", borderRadius: \"0 0 4px 4px\", borderCollapse: \"collapse\" }}>\n                    <div style={{ minHeight: searchbar ? \"calc(100vh - 305px)\" : \"120px\", maxHeight: searchbar ? \"calc(100vh - 300px)\" : \"400px\", overflow: \"auto\" }}>\n                        {this.createRTbreathetable()}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTbreathetable\n","import React, { Component } from 'react';\nimport RTbreathetable from './RTbreathetable'\n// import { DatePicker } from 'antd';\nimport * as FilterReg from '../../Function/FiliterReg'\nimport X2JS from 'x2js';\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as QSPEList from '../../Resource/QSPE'\n\nclass RTbreathe extends Component {\n    state = {\n        preCID: null,\n        QSPE: []\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDateRange } = this.props\n        this.setState({ preCID: caseinfo.CASEID, preST: PickerDateRange[0], preET: PickerDateRange[1] })\n        this.getQSPEApi(caseinfo.CASEID, PickerDateRange[0], PickerDateRange[1])\n\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDateRange } = this.props\n        const { preCID, preST, preET } = this.state\n        const CID = caseinfo.CASEID\n        const ST = PickerDateRange[0]\n        const ET = PickerDateRange[1]\n        if (CID !== preCID || ST !== preST || ET !== preET) {\n            this.setState({ preCID: caseinfo.CASEID, preST: PickerDateRange[0], preET: PickerDateRange[1] })\n            this.getQSPEApi(caseinfo.CASEID, PickerDateRange[0], PickerDateRange[1])\n        }\n    }\n    getQSPEApi(CID, st, et) {\n        const xm2 = new X2JS()\n        const start = moment(st).format(\"YYYYMMDDHHmm\")\n        const end = moment(et).format(\"YYYYMMDDHHmm\")\n        ApiProvider.getQSPE(CID, start, end)\n            .then(data => {\n                console.log(xm2.xml2js(data.data).outmsg.resconts.rescont)\n                const result = xm2.xml2js(data.data).outmsg\n                if (Number(result.ret) === 0) {\n                    const resultData = result.resconts.rescont\n                    if (Array.isArray(resultData)) {\n                        this.setState({ QSPE: resultData })\n                    }\n                    else {\n                        this.setState({ QSPE: [resultData] })\n                    }\n                }\n                return []\n            })\n            .catch(err => {\n                console.log(\"getQSPE NG \" + JSON.stringify(err))\n            });\n        // this.setState({ QSPE: QSPEList.data })\n    }\n\n    createRTbreathetable = () => {\n        const { caseinfo, PickerDateRange, searchbar } = this.props\n        const { QSPE } = this.state\n        let DataList = FilterReg.QSPERegList(QSPE)\n\n        //這邊不用再分時間\n        DataList = DataList.filter(data => {\n            let time = moment(data.Date + data.Time, \"YYYYMMDDHHmm\").valueOf()\n            return PickerDateRange[0] <= time && time <= PickerDateRange[1]\n        })\n\n        if (Object.keys(DataList).length > 1) {\n            DataList = DataList.sort((a, b) => {\n                let tempTimeA = moment(a.Date + a.Time, \"YYYYMMDDHHmm\").valueOf()\n                let tempTimeB = moment(b.Date + b.Time, \"YYYYMMDDHHmm\").valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n        }\n\n        return <RTbreathetable DataList={DataList} caseinfo={caseinfo} searchbar={searchbar}></RTbreathetable>\n    }\n\n    render() {\n        const { searchbar } = this.props\n        return (\n            <div >\n                <div style={{ backgroundColor: \"#71b0e46e\", borderRadius: \"4px 4px 0 0\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>\n                        {searchbar ? \"呼吸器設定紀錄\" : \"近三日呼吸器設定\"}\n                    </t2>\n                </div>\n                {this.createRTbreathetable()}\n            </div>\n        );\n    }\n}\n\nexport default RTbreathe\n","import React, { Component } from 'react';\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Prescriptionordertablecell.scss'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Prescriptionordertablecell extends Component {\n    state = {\n        onEdit: false,\n        onMove: false,\n        remark: '',\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { caseinfo, value } = this.props\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, value.UDORDSEQ, \"prescription\").then(result => {\n            console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    on_Mouse() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: true\n                }\n            )\n        }\n    }\n    on_leave() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: false\n                }\n            )\n        }\n    }\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = newRemarkValue => {\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    checkStatus = () => {\n        const { value } = this.props\n        const valueStatus = Number(value.UDSTATUS)\n        if (valueStatus === 80) {\n            return \"已取消\"\n        }\n        if (valueStatus === 30) {\n            return \"生效中\"\n        }\n        if (valueStatus === 60) {\n            return \"已完成\"\n        }\n        return valueStatus\n    }\n\n    render() {\n        const { caseinfo, value } = this.props\n        const Name = value.UDGNAME.toString()\n        const PName = value.UDRPNAME.toString()\n        const Unit = value.UDDOSAGE.toString().trim() + \" \" + value.UDDUNIT.toString().trim() + \"-\" + value.UDFREQN.toString().trim() + \"-\" + value.UDROUTE.toString().trim()\n        const ST = moment(value.UDBGNDT, \"YYYY-MM-DD-HH:mm:ss.000000\").format('MM/DD HH:mm')\n        const ET = moment(value.UDENDDT, \"YYYY-MM-DD-HH:mm:ss.000000\").format('MM/DD HH:mm')\n        const Status = this.checkStatus()\n\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": PName,\n            \"remarkId\": value.UDORDSEQ,\n            \"remark\": this.state.remark,\n            \"transinId\": caseinfo.TRANSINID,\n            \"type\": \"prescription\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <div onMouseMove={() => this.on_Mouse()} onMouseLeave={() => this.on_leave()} className='prescriptiontablecell' style={{ minheight: this.state.remark === '' ? '40px' : '60px', borderTop: '#989898 1px solid', borderBottom: \"#989898 1px solid\", borderCollapse: \"collapse\" }}>\n                <t3 className='prescriptiontablecellcontexttext' style={{ minheight: this.state.remark === '' ? '40px' : '1fr' }}>{ST} - {ET}</t3>\n                <div style={{ display: \"grid\", gridTemplateRows: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"1fr\" : \"1fr 20px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 140px 70px\", minHeight: \"40px\" }}>\n                        <div className='prescriptiontablecellcontext'>\n                            <t2 className='prescriptiontablecellcontexttext' style={{ color: \"black\", fontWeight: 600 }}>{Name}</t2>\n                        </div>\n                        <div className='prescriptiontablecellcontext'>\n                            <t3 className='prescriptiontablecellcontexttext'>{Unit}</t3>\n                        </div>\n                        <div className='prescriptiontablecellcontext'>\n                            <t3 className='prescriptiontablecellcontexttext'>{Status}</t3>\n                        </div>\n                    </div>\n                    <t3 style={{ fontWeight: 600, alignItems: \"center\", borderTop: \"rgba(238,238,238,1) 1px solid\", borderLeft: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\", padding: \"0px 5px\", color: \"rgb(0,120,0)\", overflow: \"hidden\", height: \"20px\", display: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"none\" : \"\"] }}>{this.state.remark}</t3>\n                    <div style={this.state.onMove ?\n                        { display: this.state.powerLogin == 1 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", right: 0, height: [this.state.remark === undefined || this.state.remark === \"\" ? \"40px\" : \"60px\"], background: \"transparent\", width: \"77px\" }\n                        :\n                        { display: \"none\" }}>\n                        <div onClick={() => this.Edit_state()} style={{ width: this.state.remark === '' ? '30px' : '40px', height: this.state.remark === '' ? '30px' : '40px', borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }}>\n                            <img src={chooseedit} alt='chooseedit'></img>\n                        </div>\n                    </div>\n                </div>\n                <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            </div>\n        );\n    }\n}\n\nexport default Prescriptionordertablecell\n","import React, { Component } from 'react';\nimport Prescriptionordertablecell from './Prescriptionordertablecell'\nimport './Prescriptionordertable.scss'\n\n\nclass Prescriptionordertable extends Component {\n    render() {\n        const { UDORDER0, caseinfo, SelectMode, searchbar } = this.props\n\n        const title = [\"時間起迄\", \"學名\", \"用法\", \"狀態\"]\n        const titlecell = title.map(function (value, index, arr) {\n            return (\n                <t3 className='title'>{value}</t3>\n            );\n        })\n        const Prescriptionordertabletable = UDORDER0.map(\n            (value, index, array) =>\n                <Prescriptionordertablecell caseinfo={caseinfo} key={index} value={value} SelectMode={SelectMode}></Prescriptionordertablecell>\n        )\n        return (\n            <div>\n                <div className='Prescriptionordertablelayout'>\n                    {titlecell}\n                </div>\n                <div style={{ border: \"1px solid rgba(232, 232, 232, 1)\", borderRadius: \"0 0 4px 4px\", borderCollapse: \"collapse\" }}>\n                    <div style={{ minHeight: searchbar ? \"calc(100vh - 300px)\" : \"120px\", maxHeight: searchbar ? \"calc(100vh - 300px)\" : \"400px\", overflowY: \"auto\" }}>\n                        {JSON.stringify(UDORDER0) !== '[]' ?\n                            Prescriptionordertabletable\n                            :\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"180px 1fr 140px 70px\" }}>\n                                <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                    {searchbar ? \"無資料\" : \"當日無資料\"}\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Prescriptionordertable\n","import React, { Component } from 'react';\nimport Prescriptionordertable from './Prescriptionordertable'\nimport { Select, Input } from 'antd';\nimport moment from 'moment'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as UDORDER from '../../Resource/UDORDER0'\n\nclass Prescriptionorderlayout extends Component {\n    state = {\n        classParser: { \"mappings\": [] },\n        class: \"全部類別\",\n        SelectMode: 0,\n        InputMode: null,\n        preHID: null,\n        preCID: null,\n        UDORDER0: []\n    }\n    componentDidMount() {\n        this.getGithub()\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        this.setState({ preHID: HID, preCID: CID })\n        this.getUDORDER0(HID, CID)\n    }\n    componentDidUpdate() {\n        const { caseinfo } = this.props\n        const { preHID, preCID } = this.state\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        if (HID !== preHID || CID !== preCID) {\n            this.setState({ preHID: HID, preCID: CID })\n            this.getUDORDER0(HID, CID)\n        }\n    }\n    getGithub() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Prescription\");\n                parser.mappings = [{ \"key\": \"全部類別\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson Prescription OK \" + JSON.stringify(parser))\n                this.setState({\n                    classParser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    getUDORDER0(HID, CID, Start, End) {\n\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                // const RowData = data.data\n                // const SortFromRangeDate = RowData.filter(function (info, index, arr) {\n                //     return\n                // })\n                this.setState({ UDORDER0: data.data })\n            })\n            .catch(err => { console.log(\"getStoredProcedureUDORDER0 NG \" + JSON.stringify(err)) });\n        // this.setState({ UDORDER0: UDORDER.data })\n    }\n\n\n    onChangeClass = (value) => {\n        this.setState({ class: value })\n    }\n    onChangeinputKey = (event) => {\n        this.setState({ InputMode: event.target.value })\n    }\n\n    ControlBarRender() {\n        const { Option } = Select;\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"120px 100px auto\", gridColumnGap: \"10px\" }}>\n                <Select defaultValue={this.state.class} style={{ width: 120 }} onChange={this.onChangeClass}>\n                    {this.state.classParser.mappings.map((mapping, index) => {\n                        return <Option value={mapping.key}>{mapping.key}</Option>\n                    })}\n                </Select>\n                <Select defaultValue={this.state.SelectMode} style={{ width: 100 }} onChange={(value) => { console.log(value); this.setState({ SelectMode: value }) }}>\n                    <Option value={0}>全部狀態</Option>\n                    <Option value={30}>生效中</Option>\n                    <Option value={60}>已完成</Option>\n                    <Option value={80}>已取消</Option>\n                </Select>\n                <Input id=\"prescriptionorderinput\" placeholder=\"輸入藥囑關鍵字\" onChange={this.onChangeinputKey} />\n            </div>\n        );\n    }\n\n    parseClass = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部類別\"] = []\n\n        inputs.forEach(input => {\n            let content = input.UDGNAME;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部類別\"].push(input)\n        });\n        return allResult;\n    }\n\n    onClickSearch = () => {\n        function formatUDORDERStatus(UDORDER0, Status) {\n            if (Status === 0) {\n                return UDORDER0\n            }\n            const filterUDORDER = UDORDER0.filter(function (info, index, arr) {\n                return Number(info.UDSTATUS) === Status\n            })\n            return filterUDORDER\n        }\n        const { searchbar } = this.props\n        const { UDORDER0 } = this.state\n        const parseClass = this.parseClass\n        const Status = this.state.SelectMode\n        const activeList = formatUDORDERStatus(UDORDER0, Status)\n        let ListData = [];\n        let clusteredData = {}\n        if (this.state.classParser !== undefined) {\n            clusteredData = parseClass(activeList, this.state.classParser)\n        }\n        let filteredData = clusteredData[this.state.class];\n        ListData = this.SortDataList(filteredData)\n        return ListData\n    }\n\n    SortDataList = (DataList) => {\n        const { PickerDateRange, searchbar } = this.props\n        const { InputMode } = this.state\n        if (InputMode !== null) {\n            const regex = new RegExp(InputMode, \"i\");\n            DataList = DataList.filter(data => {\n                return data.UDGNAME.match(regex) !== null || data.UDRPNAME.match(regex) !== null\n            })\n        }\n\n        const st = searchbar ? PickerDateRange[0] : PickerDateRange[0]\n        const et = searchbar ? PickerDateRange[1] + (24 * 60 * 60 * 1000) : PickerDateRange[1]\n\n        let filterDate = DataList.filter(function (element, index, arr) {\n            const startTime = moment(element.UDBGNDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n            const endTime = moment(element.UDENDDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n            return !(st > endTime || et < startTime)\n        })\n\n        if (Object.keys(filterDate).length > 1) {\n            filterDate = filterDate.sort((a, b) => {\n                console.log()\n                let tempTimeA = moment(a.UDBGNDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n                let tempTimeB = moment(b.UDBGNDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n        }\n        return filterDate\n    }\n\n    render() {\n        const { searchbar, caseinfo } = this.props\n        const { SelectMode } = this.state\n\n        const filterData = this.onClickSearch()\n\n        return (\n            <div >\n                <div style={{ backgroundColor: \"#71b0e46e\", borderRadius: \"4px 4px 0 0\", height: \"36px\", padding: \"0px 16px\", display: \"grid\", gridTemplateColumns: searchbar ? \"2fr 3fr\" : \"1fr\", alignItems: \"center\" }\n                }>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{searchbar ? \"藥物處方\" : \"當日處方\"}</t2>\n                    {searchbar ? this.ControlBarRender() : null}\n                </div>\n                <Prescriptionordertable caseinfo={caseinfo} UDORDER0={filterData} SelectMode={SelectMode} searchbar={searchbar}></Prescriptionordertable>\n            </div>\n        );\n    }\n}\n\nexport default Prescriptionorderlayout\n","import React, { Component } from 'react';\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Treatmentordertablecell.scss'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Treatmentordertablecell extends Component {\n    state = {\n        onEdit: false,\n        onMove: false,\n        remark: this.props.info.remark,\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { info } = this.props\n        ApiProvider.getOneRemark(this.props.caseinfo.TRANSINID, info.ORDSEQNO, \"treatment\").then(result => {\n            console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    on_Mouse() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: true\n                }\n            )\n        }\n    }\n    on_leave() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: false\n                }\n            )\n        }\n    }\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = newRemarkValue => {\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    render() {\n        function formatStatus(ORSTATUS) {\n            if (Number(ORSTATUS) === 30 || Number(ORSTATUS) === 90) {\n                return \"生效中\"\n            }\n            if (Number(ORSTATUS) === 60) {\n                return \"已完成\"\n            }\n            if (Number(ORSTATUS) === 80) {\n                return \"已取消\"\n            }\n            return ORSTATUS\n        }\n        const { info } = this.props\n\n        const Name = info.ORPROCED\n        const QD = info.ORFREQN\n        const Status = formatStatus(info.ORSTATUS)\n        const infoRemark = info[\"15\"].toString().trim()\n        const ST = moment(info.ORBGNDT.toString(), 'YYYY-MM-DD').format(\"MM/DD\")\n        const ET = moment(info.ORENDDT.toString(), 'YYYY-MM-DD').format(\"MM/DD\")\n\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": Name,\n            \"remarkId\": info.ORDSEQNO,\n            \"remark\": this.state.remark,\n            \"transinId\": this.props.caseinfo.TRANSINID,\n            \"type\": \"treatment\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <div onMouseMove={() => this.on_Mouse()} onMouseLeave={() => this.on_leave()} className=\"treatmentordercell\" style={{ minheight: this.state.remark === '' ? '40px' : '60px', borderTop: '#989898 1px solid', borderBottom: '#989898 1px solid' }}>\n                <t3 className='cellstyle' style={{ minheight: this.state.remark === '' ? '40px' : '60px' }}>{ST} - {ET}</t3>\n                <div style={{ display: \"grid\", gridTemplateRows: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"1fr\" : \"1fr 20px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px 70px\" }}>\n                        <t3 className='cellstyle' style={{ color: \"black\", fontWeight: 600, borderLeft: \"rgba(238, 238, 238, 1) 1px solid\" }}>{Name}</t3>\n                        <t3 className='textHidden' style={{ borderLeft: \"rgba(238, 238, 238, 1) 1px solid\" }}>{infoRemark}</t3>\n                        <t3 className='cellstyle' style={{ borderLeft: \"rgba(238, 238, 238, 1) 1px solid\" }}>{QD}</t3>\n                        <t3 className='cellstyle' style={{ borderLeft: \"rgba(238, 238, 238, 1) 1px solid\" }}>{Status}</t3>\n                    </div>\n                    <t3 className='cellstyle' style={{ borderTop: \"rgba(238, 238, 238, 1) 1px solid\", fontWeight: 600, color: \"rgb(0,120,0\", overflow: \"hidden\", height: \"20px\", display: [this.state.remark === undefined || this.state.remark === \"\" ? \"none\" : \"\"] }}>{this.state.remark}</t3>\n                    <div style={this.state.onMove ?\n                        { display: this.state.powerLogin == 1 ? \"flex\" : \"none\", justifyContent: \"center\", alignItems: \"center\", position: 'absolute', right: 0, height: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"100%\" : \"100%\"], background: \"transparent\", width: \"77px\" }\n                        :\n                        { display: \"none\" }}>\n                        <div onClick={() => this.Edit_state()} style={{ width: this.state.remark === '' ? '30px' : '40px', height: this.state.remark === '' ? '30px' : '40px', borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }}>\n                            <img src={chooseedit} alt='chooseedit'></img>\n                        </div>\n                    </div>\n                </div>\n                <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            </div>\n        );\n    }\n}\nexport default Treatmentordertablecell\n","import React, { Component } from 'react';\nimport Treatmentordertablecell from './Treatmentordertablecell'\nimport './Treatmentordertable.scss'\n\nclass Treatmentordertable extends Component {\n    render() {\n        const { TRTMNT01, caseinfo, PickerDate, searchbar } = this.props\n\n        if (TRTMNT01 === null || TRTMNT01 === undefined) {\n            return null\n        }\n        // const DataList = TRTMNT01 //SortDataList(TRTMNT01, PickerDate)\n        const Treatmentordertablecelllist = TRTMNT01.map(\n            (info, index) => <Treatmentordertablecell caseinfo={caseinfo} key={index} info={info}></Treatmentordertablecell>\n\n        )\n        const titlearray = ['時間起迄', '處置名稱', '備註內容', '頻次', '狀態']\n        const titlecell = titlearray.map(function (info, index) {\n            return (\n                <t3 className=\"treatmentordertablecellstyle\" key={index}>{info}</t3>\n            );\n        })\n\n        return (\n            <div>\n                <div className='treatmentordertable'>\n                    {titlecell}\n                </div>\n                <div style={{ border: \"1px solid rgba(232, 232, 232, 1)\", borderRadius: \"0 0 4px 4px\", borderCollapse: \"collapse\" }}>\n                    <div style={{ minHeight: searchbar ? \"calc(100vh - 300px)\" : \"120px\", maxHeight: searchbar ? \"calc(100vh - 300px)\" : \"400px\", overflowY: \"auto\" }}>\n                        {JSON.stringify(TRTMNT01) !== '[]' ?\n                            Treatmentordertablecelllist\n                            :\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"100px 1fr 1fr 40px 70px\" }}>\n                                <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                    {searchbar ? \"無資料\" : \"當日無資料\"}\n                                </div>\n                            </div>}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Treatmentordertable\n","import React, { Component } from 'react';\nimport Treatmentordertable from './Treatmentordertable'\nimport { Select, Input } from 'antd';\nimport * as ApiGithub from '../../API/ApiGithub'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\n\nclass Treatmentorderlayout extends Component {\n    state = {\n        // PickerDateRange: [moment().subtract(6, 'days'), moment()],\n        parser: { \"mappings\": [] },\n        DateRangeMode: {},\n        class: \"全部類別\",\n        SelectMode: 0,\n        InputMode: '',\n        preHID: null,\n        preCID: null,\n        TRTMNTQ1: []\n    }\n\n    componentDidMount() {\n        this.getGithub()\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        this.setState({ preHID: HID, preCID: CID })\n        this.getTreatmentQ1(HID, CID)\n    }\n    componentDidUpdate() {\n        const { caseinfo } = this.props\n        const { preHID, preCID } = this.state\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        if (HID !== preHID || CID !== preCID) {\n            this.setState({ preHID: HID, preCID: CID })\n            this.getTreatmentQ1(HID, CID)\n        }\n\n\n    }\n    getGithub() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Treatment\");\n                parser.mappings = [{ \"key\": \"全部類別\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson Treatment OK \" + JSON.stringify(parser))\n                this.setState({\n                    parser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    getTreatmentQ1(HID, CID) {\n        ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => { this.setState({ TRTMNTQ1: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureTRTMNTQ1 NG \" + JSON.stringify(err)) });\n    }\n\n    onChangeClass = (value) => {\n        this.setState({ class: value })\n    }\n\n    handleChange = (value) => {\n        this.setState({ SelectMode: value })\n    }\n\n    onChangeinputKey = (event) => {\n        this.setState({ InputMode: event.target.value })\n    }\n\n    Search_bar = () => {\n        // const { RangePicker } = DatePicker;\n        const { Option } = Select;\n\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"120px 100px auto\", gridColumnGap: \"10px\" }}>\n                <Select defaultValue={this.state.class} style={{ width: 120 }} onChange={this.onChangeClass}>\n                    {this.state.parser.mappings.map((mapping, index) => {\n                        return <Option key={index} value={mapping.key}>{mapping.key}</Option>\n                    })}\n                </Select>\n                <Select defaultValue={0} style={{ width: 100 }} onChange={this.handleChange}>\n                    <Option value={0}>全部狀態</Option>\n                    <Option value={1}>生效中</Option>\n                    <Option value={2}>已完成</Option>\n                    <Option value={3}>已結束</Option>\n                </Select>\n                <Input placeholder=\"輸入藥囑關鍵字\" value={this.state.InputMode} onChange={this.onChangeinputKey} />\n            </div>\n        );\n\n    }\n\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部類別\"] = []\n\n        inputs.forEach(input => {\n            let content = input.ORPROCED;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部類別\"].push(input)\n        });\n        return allResult;\n    }\n\n    onClickSearch = () => {\n        function formatTRMINQtatus(TRTMNT01, Status) {\n            if (Status === 0) {\n                return TRTMNT01\n            }\n            const filterTRTMNT01 = TRTMNT01.filter(function (info, index, arr) {\n                if (Status === 1) {\n                    return Number(info.ORSTATUS) === 30 || Number(info.ORSTATUS) === 90\n                }\n                if (Status === 2) {\n                    return Number(info.ORSTATUS) === 60\n                }\n                return Number(info.ORSTATUS) === 80\n\n            })\n            return filterTRTMNT01\n        }\n        const { TRTMNT01 } = this.props\n        const { SelectMode } = this.state\n        const parse = this.parse;\n\n        const activeList = formatTRMINQtatus(TRTMNT01, SelectMode)\n        console.log(\"activeList \" + JSON.stringify(activeList));\n\n        let clusteredData = {}\n        if (this.state.parser !== undefined) {\n            clusteredData = parse(activeList, this.state.parser)\n        }\n\n        //filter data by selected class\n        let filteredData = clusteredData[this.state.class];\n\n        const ListData = this.SortDataList(filteredData)\n\n        return ListData\n    }\n\n    SortDataList = (DataList) => {\n        const { PickerDateRange, searchbar } = this.props\n        const { InputMode } = this.state\n\n        if (InputMode !== '') {\n            const regex = new RegExp(InputMode, \"i\");\n            DataList = DataList.filter(data => {\n                return data.ORPROCED.match(regex) !== null\n            })\n        }\n\n        const st = searchbar ? PickerDateRange[0] : PickerDateRange[0]\n        const et = searchbar ? PickerDateRange[1] + (24 * 60 * 60 * 1000) : PickerDateRange[1]\n\n        let filterDate = DataList.filter(function (element, index, arr) {\n            const startTime = moment(element.ORBGNDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n            const endTime = moment(element.ORENDDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n            return !(st > endTime || et < startTime)\n        })\n\n        if (Object.keys(filterDate).length > 1) {\n            filterDate = filterDate.sort((a, b) => {\n                let tempTimeA = moment(a.ORBGNDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n                let tempTimeB = moment(b.ORBGNDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n        }\n        return filterDate\n    }\n\n    render() {\n        const { searchbar, caseinfo } = this.props\n\n        const filterData = this.onClickSearch()\n\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderRadius: \"4px 4px 0 0\", height: \"36px\", padding: \"0px 16px\", display: \"grid\", gridTemplateColumns: searchbar ? \"2fr 3fr\" : \"1fr\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{searchbar ? \"治療處置\" : \"當日處置\"}</t2>\n                    {searchbar ? this.Search_bar() : null}\n                </div>\n                <Treatmentordertable caseinfo={caseinfo} TRTMNT01={filterData} searchbar={searchbar}></Treatmentordertable>\n            </div>\n        );\n    }\n}\n\nexport default Treatmentorderlayout\n","import React, { Component } from 'react';\nimport detaillogo from '../Image/svg/details.svg'\nimport { Tooltip } from 'antd';\n\nclass Notecell extends Component {\n\n    updatetime_format(updatetime) {\n        function monthformat(month) {\n            return month + 1\n        }\n        return new Date(updatetime).getFullYear() + \"-\" + monthformat(new Date(updatetime).getMonth()) + \"-\" + new Date(updatetime).getDate() + \" \" + new Date(updatetime).getHours() + \":\" + new Date(updatetime).getMinutes()\n    }\n    render() {\n        const { info } = this.props\n        const text = info.updatedoctor + \"醫師於\" + this.updatetime_format(info.updatetime) + \"更新\"\n\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"19fr 1fr\", minHeight: \"35px\" }}>\n                <div style={{ wordBreak: \"break-all\", fontSize: \"1.3rem\", display: \"flex\", alignItems: \"center\" }}>{info.data}</div>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <Tooltip placement=\"right\" title={text}>\n                        <div>\n                            <img src={detaillogo} alt='detaillogo'></img>\n                        </div>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Notecell\n","import React, { Component } from 'react';\nimport Notecell from './Notecell'\nimport editlogo from '../Image/svg/Edit.svg'\nimport { Input, Button } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider';\nimport moment from 'moment';\nclass Note extends Component {\n    state = {\n        powerLogin: 0,\n        EditMode: false,\n        inputContent: '',\n        noteData: [],\n        PickerDate: moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.queryNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.HISID, this.state.PickerDate)\n    }\n    componentDidUpdate() {\n        const propDate = this.props.PickerDate\n        const stateDate = this.state.PickerDate\n        if (propDate !== stateDate) {\n            this.setState({ PickerDate: propDate })\n            this.queryNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.HISID, propDate)\n        }\n    }\n    queryNotice(TRANSID, HISID, pickerdate) {\n        const st = moment(moment(pickerdate).format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n        const et = moment(moment(pickerdate).format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf() + (24 * 60 * 60 * 1000)\n        ApiProvider.getOnePatientNotice(TRANSID, HISID, st, et)\n            .then(result => {\n                console.log(\"getOnePatientNotice OK \" + JSON.stringify(result));\n                this.setState({\n                    noteData: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientNotice NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n    // queryOnePatientNotice() {\n    //     ApiProvider.getOnePatientNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID)\n    //         .then(data => {\n    //             this.setState({ noteData: data.data })\n    //         }).catch(err => { })\n    // }\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString()\n        const doc = sessionStorage.getItem('user')\n        ApiProvider.createNotice(this.props.caseinfo.HISID, this.state.inputContent, timeNowStr, this.props.caseinfo.TRANSINID, doc)\n            .then(data => {\n                this.queryNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID, this.props.PickerDate)\n            })\n            .catch(err => {\n                console.log(\" Err \" + JSON.stringify(err))\n            })\n        this.setState(\n            {\n                EditMode: false,\n                inputContent: undefined\n            }\n        )\n    }\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    EditControl() {\n        const edit = this.props.editstatus\n        if (edit) {\n            return (\n                <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                    <img src={editlogo} alt=\"editlogo\" />\n                </div>\n            );\n        }\n        return null\n    }\n    render() {\n        let dataList = this.state.noteData\n\n        if (Object.keys(dataList).length > 1) {\n            dataList = dataList.sort((a, b) => {\n                let tempTimeA = moment(a.time, \"YYYY-MM-DD[T]HH:mm:ss.000+0000\").valueOf()\n                let tempTimeB = moment(b.time, \"YYYY-MM-DD[T]HH:mm:ss.000+0000\").valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n        }\n\n        const notelist = dataList.map((info, index) => {\n            const time = moment(info.time, \"YYYY-MM-DD[T]HH:mm:ss.000+0000\").format('YYYY-MM-DD HH:mm:ss')\n            const localTime = moment.utc(time).toDate()\n            const infoObj = {\n                updatedictor: info.doc,\n                updatetime: moment(localTime).format(\"YYYY/MM/DD HH:mm:ss\"),\n                data: info.context\n            }\n            return <Notecell key={index} info={infoObj}></Notecell>\n        })\n        const EditButton = this.EditControl()\n        return (\n            <div >\n                <div style={{ backgroundColor: \"#71b0e46e\", borderRadius: \"4px 4px 0 0\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\", justifyContent: 'space-between' }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{this.props.title}</t2>\n                    {EditButton}\n                </div>\n                <div style={{ border: \"1px solid rgba(232, 232, 232, 1)\", borderRadius: \"0 0 4px 4px\", borderCollapse: \"collapse\", padding: \"0px 16px\" }}>\n                    <div style={{ maxHeight: \"300px\", minHeight: \"120px\", overflowY: \"auto\" }}>\n                        {JSON.stringify(dataList) !== '[]' ? <div style={{ minHeight: \"120px\", maxHeight: \"400px\", overflow: \"auto\" }}>\n                            {notelist}\n                        </div> :\n                            <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\" }}>\n                                當日無評論\n                        </div>}\n                    </div>\n                    <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                        <div style={{ padding: \"5px 10px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <Input placeholder=\"輸入當日內容\" value={this.state.inputContent} onChange={this.onInputChange.bind(this)}></Input>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                                <Button onClick={() => this.onClickCancel()}>取消</Button>\n                                <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default Note\n","import React, { Component } from 'react';\nimport Schedule_event_list from '../../Module/Schedule_event'\nimport Note from '../../Module/Note'\nclass CrossectionSchedule extends Component {\n    render() {\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\" }}>\n                <Schedule_event_list source={this.props.source} PickerDate={this.props.PickerDate} title=\"排程\" caseinfo={this.props.caseinfo} editstatus={this.props.editstatus}></Schedule_event_list>\n                <Note title=\"評論\" PickerDate={this.props.PickerDate} caseinfo={this.props.caseinfo} data={this.props.noticeData} editstatus={this.props.editstatus}></Note>\n            </div>\n        );\n    }\n}\n\nexport default CrossectionSchedule;\n","import React, { Component } from 'react';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport Wardinfousercheckbox from '../../Wardview/Wardunfousercheckbox';\n\nclass CrosssectionTodo extends Component {\n    state = {\n        todoList: []\n    }\n\n    componentDidMount() {\n        this.queryTodo();\n    }\n\n    queryTodo() {\n        ApiProvider.getOneTodo(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID)\n            .then(result => {\n                console.log(\"getOneTodo OK \" + JSON.stringify(result.data));\n                this.setState({\n                    todoList: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getOneTodo NG \" + JSON.stringify(err));\n            });\n    }\n\n    renderTodoItem() {\n        if (this.state.todoList.length === 0) {\n            return (\n                // <div>沒有待辦事項</div>\n                <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\" }}>\n                    沒有待辦事項\n                </div>\n            )\n        } else {\n            return this.state.todoList.map((item, index) => {\n                if (item.type === \"未完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={false}></Wardinfousercheckbox>);\n                } else {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={true}></Wardinfousercheckbox>);\n                }\n\n            });\n        }\n    }\n\n    render() {\n        const renderTodoItem = this.renderTodoItem.bind(this);\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>待辦事項</t2>\n                </div>\n                <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"0 0 4px 4px\", borderCollapse: \"collapse\", padding: \"0px 16px\" }}>\n                    {renderTodoItem()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CrosssectionTodo\n","import React, { Component } from 'react';\nimport { Icon } from 'antd';\nimport Vitalsign from './Vitalsign';\nimport Controlbar from '../Controlbar';\nimport CrossectionIo from './Crossection_io'\nimport Labviewlayout from './Labview'\nimport Nonlabviewlayout from './Nonlabview'\nimport GAS from './GAS'\nimport RTbreathe from './RTbreathe'\nimport Prescriptionorderlayout from '../Prescriptionorder/Prescriptionorder'\nimport Treatmentorderlayout from '../Treatmentorder/Treatmentorder'\nimport CrossectionSchedule from './Crosssectionschedule'\nimport CrosssectionTodo from './Crosssection_todo'\nimport './Crosssectionlayout.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass Crosssectionlayout extends Component {\n    state = {\n        Cross_item: [0, 1, 2, 3, 4, 5],\n        RESDGLU1: [],\n        RESLAB02: [],\n        RESLAB01: [],\n        RESDBGAS: [],\n        RESLAB0C: [],\n        RESSECT: [],\n        UDORDER0: [],\n        TRTMNTQ1: [],\n\n        PickerDate: moment(moment().format('YYYYMMDD')).valueOf(),\n\n        SelectInterval: 1,\n\n        preCID: null,\n        preHID: null,\n        isLoading: false,\n    }\n    componentDidMount() {\n        const CID = this.props.caseinfo.CASEID\n        const HID = this.props.caseinfo.HISID\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        this.setState({\n            preCID: CID,\n            preHID: HID\n        })\n        this.NIS_API_IO(this.state.PickerDate, CID, HID, TRDT)\n    }\n    componentDidUpdate() {\n        const CID = this.props.caseinfo.CASEID\n        const HID = this.props.caseinfo.HISID\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        const { preCID, preHID } = this.state\n        if (preCID !== CID || preHID !== HID) {\n            this.setState({\n                preCID: CID,\n                preHID: HID\n            })\n            this.NIS_API_IO(this.state.PickerDate, CID, HID, TRDT)\n        }\n    }\n    NIS_API_IO(Datetime, CID, HID, TRDT) {\n        function selectMonthInterval(Datetime) {\n            const timestampInterval = new Date().getTime() - Datetime\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        const TransinDate = moment(TRDT).format(\"YYYY-MM-DD\")\n        const MonthInterval = selectMonthInterval(Datetime)\n        this.setState({ isLoading: true });\n        const apiGLU = ApiProvider.getStoredProcedureRESDGLU1(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESDGLU1: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDGLU1 NG \" + JSON.stringify(err));\n            });\n        const apiLAB2 = ApiProvider.getStoredProcedureRESLAB02(HID, TransinDate)\n            .then(data => {\n                this.setState({ RESLAB02: data.data })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESLAB02 NG \" + JSON.stringify(err));\n            });\n        const apiLAB1 = ApiProvider.getStoredProcedureRESLAB01(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESLAB01: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESLAB01 NG \" + JSON.stringify(err));\n            });\n        const apiGAS = ApiProvider.getStoredProcedureRESDBGAS(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESDBGAS: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDBGAS NG \" + JSON.stringify(err));\n            });\n        const apiLABC = ApiProvider.getStoredProcedureRESLAB0C(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESLAB0C: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESLAB0C NG \" + JSON.stringify(err));\n            });\n        const apiRESS = ApiProvider.getStoredProcedureRESSECT(HID, MonthInterval, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                this.setState({\n                    RESSECT: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESSECT NG \" + JSON.stringify(err))\n            });\n\n        const apiUDO = ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                this.setState({\n                    UDORDER0: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureUDORDER0 NG \" + JSON.stringify(err))\n            });\n        const apiTRT = ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => {\n                this.setState({\n                    TRTMNTQ1: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureTRTMNTQ1 NG \" + JSON.stringify(err))\n            });\n\n        Promise.all([apiGAS, apiGLU, apiLAB1, apiLAB2, apiLABC, apiRESS, apiTRT, apiUDO])\n            .then(() => {\n                this.setState({ isLoading: false });\n            })\n            .catch(() => {\n                this.setState({ isLoading: false });\n            })\n    }\n\n    callbackFunction = (item_array) => {\n        this.setState({ Cross_item: item_array })\n    }\n\n    callbackDateFunction = (PickerTimeStamp) => {\n        this.setState({ PickerDate: PickerTimeStamp })\n    }\n\n    display_item(number) {\n        const item = this.state.Cross_item\n        var filter = item.some(function (item, index, array) {\n            return item === number\n        });\n        return filter\n    }\n    render() {\n        const crosssectioncontrollist = [\n            {\n                \"name\": \"生命徵象\",\n                \"scrollpoint\": \"vitalsignIO\"\n            },\n            {\n                \"name\": \"檢驗\",\n                \"scrollpoint\": \"lab\"\n            },\n            {\n                \"name\": \"呼吸評估\",\n                \"scrollpoint\": \"rt\"\n            },\n            {\n                \"name\": \"醫藥囑\",\n                \"scrollpoint\": \"order\"\n            },\n            {\n                \"name\": \"行事曆及註記\",\n                \"scrollpoint\": \"schedule\"\n            }\n        ]\n        const { caseinfo, status } = this.props\n        const TimeStampPickerDate = this.state.PickerDate\n        const endTime = TimeStampPickerDate + (31 * 60 * 60 * 1000)\n        const startTime = endTime - (3 * 24 * 60 * 60 * 1000)\n        const PickerDateRange = [startTime, endTime]\n\n        const POneDayRange = [endTime - (24 * 60 * 60 * 1000), endTime]\n        const PThreeDayRange = [endTime - (3 * 24 * 60 * 60 * 1000), endTime]\n\n        return this.state.isLoading\n            ? (<Icon type=\"loading\" />)\n            : (\n                <div>\n                    <Controlbar status={status} caseinfo={caseinfo} PickerDate={this.state.PickerDate} parentDateCallback={this.callbackDateFunction} parentCallback={this.callbackFunction} btnlist={crosssectioncontrollist} item_array={this.state.Cross_item}></Controlbar>\n                    <div id=\"crossection\" className='crossectioncontent'>\n                        <div id={\"vitalsignIO\"} style={this.display_item(0) ? { display: \"grid\", gridTemplateColumns: \"1fr 400px\", gridGap: \"10px\", marginBottom: \"10px\" } : { display: \"none\" }}>\n                            <Vitalsign PickerDate={this.state.PickerDate} caseinfo={caseinfo}></Vitalsign>\n                            <CrossectionIo PickerDate={this.state.PickerDate} caseinfo={caseinfo} title=\"輸出入\"></CrossectionIo>\n                        </div>\n                        <div id={\"lab\"} style={this.display_item(1) ? { display: \"grid\", gridTemplateColumns: \"650px 650px\", gridGap: \"10px\" } : { display: \"none\" }}>\n                            <Labviewlayout PickerDate={this.state.PickerDate} caseinfo={caseinfo} RESLAB01={this.state.RESLAB01} RESLAB02={this.state.RESLAB02} RESDBGAS={this.state.RESDBGAS} RESLAB0C={this.state.RESLAB0C} RESDGLU1={this.state.RESDGLU1} RESSECT={this.state.RESSECT}></Labviewlayout>\n                            <Nonlabviewlayout caseinfo={caseinfo} PickerDateRange={PickerDateRange}></Nonlabviewlayout>\n                        </div>\n                        <div id={\"rt\"} style={this.display_item(2) ? { display: \"grid\", gridTemplateColumns: \"650px 650px\", gridGap: \"10px\", margin: \"10px 2px 0px 0px\" } : { display: \"none\" }}>\n                            <GAS caseinfo={caseinfo} PickerDateRange={PickerDateRange} searchbar={false}></GAS>\n                            <RTbreathe caseinfo={caseinfo} PickerDateRange={PThreeDayRange} searchbar={false}></RTbreathe>\n                        </div>\n                        <div id={\"order\"} style={this.display_item(3) ? { display: \"grid\", gridTemplateColumns: \"650px 650px\", gridGap: \"10px\", margin: \"10px 2px 0px 0px\" } : { display: \"none\" }}>\n                            <Prescriptionorderlayout UDORDER0={this.state.UDORDER0} caseinfo={caseinfo} searchbar={false} PickerDateRange={POneDayRange}></Prescriptionorderlayout>\n                            <Treatmentorderlayout TRTMNT01={this.state.TRTMNTQ1} caseinfo={caseinfo} searchbar={false} PickerDateRange={POneDayRange}></Treatmentorderlayout>\n                        </div>\n                        <div id={\"schedule\"} style={this.display_item(4) ? { margin: \"10px 2px 0px 0px\" } : { display: \"none\" }}>\n                            <CrossectionSchedule source={1} PickerDate={this.state.PickerDate} editstatus={false} caseinfo={caseinfo}></CrossectionSchedule>\n                        </div>\n                        <div style={this.display_item(5) ? { margin: \"10px 2px 0px 0px\" } : { display: \"none\" }}>\n                            <CrosssectionTodo caseinfo={caseinfo} ></CrosssectionTodo>\n                        </div>\n                    </div>\n                </div>\n            )\n    }\n}\n\nexport default Crosssectionlayout;\n","import React, { Component } from 'react';\nimport IOpage from '../../Module/iopage'\n\nclass Inoutonchronic extends Component {\n    render() {\n        const { title, caseinfo, IntervalStatus, PickerDate } = this.props\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                {/* 樣式修改issue10 */}\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t2>\n                </div>\n                <IOpage caseinfo={caseinfo} Status={\"Chronic\"} IntervalStatus={IntervalStatus} PickerDate={PickerDate}></IOpage>\n            </div>\n        );\n    }\n}\n\nexport default Inoutonchronic\n","import React, { Component } from 'react';\nimport { Modal } from 'antd'\nimport NonLabReport from '../CrossSectionView/NonLabReport'\n\nexport default class ChronicTableCellToolTipReport extends Component {\n    state = {\n        visible: false\n    }\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n    render() {\n        const { HID, CID, ORMM, ORDSEQNO, status } = this.props\n        console.log(status)\n        return (\n            <div style={{ cursor: \"pointer\", }}>\n                <div>\n                    <div style={{ textDecoration: \"underline\", cursor: \"pointer\" }} onClick={this.showModal}>{\"顯示\"}</div>\n                    <Modal\n                        title=\"Basic Modal\"\n                        visible={this.state.visible}\n                        onOk={this.handleOk}\n                        onCancel={this.handleCancel}>\n                        <NonLabReport CID={CID} HID={HID} month={ORMM} seq={ORDSEQNO}></NonLabReport>\n                    </Modal>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport { Spin, Icon } from 'antd';\nimport moment from 'moment'\nimport ChronicTableCellToolTipReport from './ChronicTableCellTooltipReport'\n\nclass Chronictablecelltooltip extends Component {\n    state = {\n        // preStartTimeStamp: null,\n        // loading: true,\n        // resultStr: \"--\"\n    }\n    componentDidUpdate() {\n        // const { startTimeStamp } = this.props\n        // const { preStartTimeStamp } = this.state\n        // if (startTimeStamp !== preStartTimeStamp) {\n        //     console.log(\"Chronictablecelltooltip componentDidUpdate\")\n        // }\n    }\n    componentDidMount() {\n        // const { startTimeStamp } = this.props\n        // this.setState({ preStartTimeStamp: startTimeStamp })\n        // console.log(\"Chronictablecelltooltip componentDidMount\")\n        // this.apiGet()\n    }\n    // apiGet() {\n    //     const { tooltipelement, caseinfo } = this.props\n    //     const ORMM = tooltipelement.ORMM.toString().trim()\n    //     const ORDSEQNO = tooltipelement.ORDSEQNO.toString().trim()\n    //     //RESDISP\n    //     ApiProvider.getStoredProcedureRESDISP(caseinfo.HISID, ORMM, caseinfo.CASEID, ORDSEQNO)\n    //         .then(data => {\n    //             //parse content\n    //             const parsers = this.props.summaryParse\n    //             const parser = data.data.length > 0 ? this.select_parser(\"Chronic table\", data.data[0], parsers) : undefined\n\n    //             if (parser !== undefined) {\n    //                 //concat all content\n    //                 let allContent = \"\"\n    //                 //fakeData.forEach(item => {\n    //                 data.data.forEach(item => {\n    //                     allContent = `${allContent} \"\\n\" ${item.CONTENT}`;\n    //                 });\n\n    //                 const result = this.parse(allContent, parser)\n\n    //                 const resultStr = this.summerize(result, parser)\n\n    //                 this.setState({ resultStr: resultStr })\n    //             }\n\n    //             this.setState({ loading: false })\n    //         })\n    //         .catch(err => {\n    //             console.log(\"getStoredProcedureRESDISP NG \" + JSON.stringify(err))\n    //             this.setState({ loading: false })\n    //         })\n    // }\n    // select_parser = (parserName, input, parsers) => {\n    //     const inputBeginTime = moment(input.ORBGNDT, \"YYYY-MM-DD\").valueOf()\n    //     return parsers.find(x =>\n    //         parserName.match(x.parser_name)\n    //         && (!x.apply_condition.start_time || inputBeginTime >= x.apply_condition.start_time)\n    //     )\n    // }\n    // parse = (input, parser) => {\n    //     let mappings = parser.mappings\n    //     let result = {}\n    //     mappings.forEach(mapping => {\n    //         const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n    //         const match = input.match(re)\n    //         result[mapping.key] = match && match[mapping.position]\n    //     });\n    //     return result;\n    // }\n    // summerize = (kv_pairs, parser) => {\n    //     let summary_str = parser.summary\n    //     for (const key in kv_pairs) {\n    //         let match_replacer = summary_str.match(RegExp(\"\\\\[\" + key + \"(:(.*?))?\\\\]\"))\n    //         let replacer = \"\"\n    //         if (match_replacer && match_replacer.length === 3) {\n    //             replacer = match_replacer[2]\n    //         }\n    //         const match = summary_str.match(RegExp(\"\\\\[\" + key + \":(.*?)?\\\\]\"))\n    //         summary_str = summary_str.replace(match[0], match[0].replace(match[1], kv_pairs[key] || replacer))\n    //     }\n    //     return summary_str;\n    // }\n    ReportLink() {\n        const { tooltipelement, caseinfo } = this.props\n        const ORMM = tooltipelement.ORMM.toString().trim()\n        const ORDSEQNO = tooltipelement.ORDSEQNO.toString().trim()\n        const HID = caseinfo.HISID.toString().trim()\n        const CID = caseinfo.CASEID.toString().trim()\n        const status = tooltipelement.ORSTATUS\n        return (\n            <ChronicTableCellToolTipReport status={status} HID={HID} CID={CID} ORMM={ORMM} ORDSEQNO={ORDSEQNO}></ChronicTableCellToolTipReport>\n        );\n    }\n    render() {\n        const { tooltipelement } = this.props\n        // const { loading, resultStr } = this.state\n        const infoTime = tooltipelement.ORRCPTM.toString().trim()\n        const name = tooltipelement.ORPROCED.toString().trim()\n        const reportname = tooltipelement.ORSPCN1.toString().trim()\n        const ReportLink = this.ReportLink()\n        const cellRenderData = [infoTime, name, reportname, ReportLink]\n        const Cell = cellRenderData.map(function (value, index) {\n            return (\n                <div key={index} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"0px 5px\" }}>\n                    {value}\n                </div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"100px 150px 150px 200px\" }}>{Cell}</div>\n        );\n    }\n}\n\nexport default Chronictablecelltooltip\n","import React, { Component } from 'react'\nimport { Tooltip } from 'antd'\nimport moment from 'moment'\nimport Chronictablecelltooltip from './ChronicTableCellTooltipCell'\n\nclass Chronictablecell extends Component {\n    CellText() {\n        const { element, caseinfo, summaryParse } = this.props\n        const start = moment(element.StartTime).format(\"YYYY/MM/DD HH:mm:ss\")\n        const startTimeStamp = moment(element.StartTime).valueOf()\n        const end = moment(element.EndTime).format(\"HH:mm:ss\")\n        const title = [\"採檢時間\", \"檢驗項目\", \"檢體\", \"報告\"]\n        const titleCell = title.map(function (value, index) {\n            return (\n                <div key={index} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"0px 5px\" }}>\n                    {value}\n                </div>\n            );\n        })\n        const objectElement = element.element\n        const objectElementCell = objectElement.map(function (info, index, arr) {\n            return (\n                <Chronictablecelltooltip key={index} startTimeStamp={startTimeStamp} tooltipelement={info} caseinfo={caseinfo} summaryParse={summaryParse}></Chronictablecelltooltip>\n            );\n        })\n        return (\n            <div>\n                {/* <div>{start}-{end}</div>\n                <div>檢驗檢查項目 : {element.title}類</div> */}\n                <div style={{ display: \"grid\", gridTemplateColumns: \"100px 150px 150px 200px\" }}>\n                    {titleCell}\n                </div>\n                {objectElementCell}\n            </div>\n        );\n    }\n    render() {\n        function checkLineColor(lineColor) {\n            if(lineColor === null){\n                return '';\n            }else{\n                return `${lineColor.width} solid ${lineColor.color}`;\n            }\n        }\n        function valueNull(value) {\n            if (value === null || value === undefined || value === 0) {\n                return \"\"\n            }\n            return `${value}筆`\n        }\n        const { element } = this.props\n        const TitleRender = this.CellText()\n        if (element.element.length === 0) {\n            return (\n                <div style={{ height: '40px', display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', borderLeft: checkLineColor(this.props.lineColor) }}></div>\n            );\n        }\n        return (\n            <Tooltip title={TitleRender} autoAdjustOverflow={true} overlayStyle={{ maxWidth: \"800px\" }}>\n                <div style={{ backgroundColor:'rgba(0,120,230,.1)', height: '40px',fontSize: \"16px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', cursor: \"pointer\", borderLeft: checkLineColor(this.props.lineColor) }}>\n                    {valueNull(element.element.length)}\n                </div>\n            </Tooltip>\n        );\n    }\n}\n\nexport default Chronictablecell","import React, { Component } from 'react'\nimport moment from 'moment'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport * as ApiPronider from '../../API/ApiProvider'\nimport Chronictablecell from './ChronicTableCell'\nimport * as RSData from '../../Resource/RESSECT'\n\nclass Tableonchronic extends Component {\n    state = {\n        LabParse: [],\n        SummaryParse: [{ apply_condition: \"\", mappings: [] }],\n        RESSECT: [],\n        preHID: null\n    }    \n\n    ApiGet(HID, monthly) {\n        ApiGithub.getGitHubJson(\"Chronic_Lab.json\")\n            .then(data => {\n                this.setState({\n                    LabParse: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiGithub.getGitHubJson(\"Summary.json\")\n            .then(data => {\n                this.setState({\n                    SummaryParse: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiPronider.getStoredProcedureRESSECT(HID, \"1\", \"ALL\", \"DOC3924B\")\n            .then(data => {\n                this.setState({ RESSECT: data.data })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        // this.setState({ RESSECT: RSData.data })\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDate, chronic_state } = this.props\n        const HID = caseinfo.HISID\n        const monthly = this.fotmatTimerMonthly(PickerDate)\n        this.setState({ preHID: caseinfo.HISID, prePickerDate: PickerDate, preInterval: chronic_state })\n        this.ApiGet(HID, monthly)\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDate, chronic_state } = this.props\n        const HID = caseinfo.HISID\n        const { preHID, prePickerDate, preInterval } = this.state\n        const monthly = this.fotmatTimerMonthly(PickerDate)\n        if (HID !== preHID || prePickerDate !== PickerDate || preInterval !== chronic_state) {\n            this.setState({ preHID: caseinfo.HISID, prePickerDate: PickerDate, preInterval: chronic_state })\n            this.ApiGet(HID, monthly)\n        }\n    }\n\n    fotmatTimerMonthly(pickerdate) {\n        const timestampInterval = moment().valueOf() - pickerdate\n        const timestampMonth = 30 * 24 * 60 * 60 * 1000\n        const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n        return MonthInt\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    render() {\n        function DataForTimer(dataList, interval, pickerdate) {\n            function starttime(interval, entTimeStamp) {\n                if (interval === 0) {\n                    return entTimeStamp - (24 * 60 * 60 * 1000)\n                }\n                if (interval === 1) {\n                    return entTimeStamp - (3 * 24 * 60 * 60 * 1000)\n                }\n                if (interval === 2) {\n                    return entTimeStamp - (7 * 24 * 60 * 60 * 1000)\n                }\n                return entTimeStamp - (14 * 24 * 60 * 60 * 1000)\n            }\n\n            function fotmatTimerForTimer(interval, st, list, title, grid) {\n                var TimerForList = []\n                for (let index = 0; index < interval; index++) {\n                    const StartTime = st + (index * grid * 60 * 60 * 1000)\n                    const EndTime = st + ((index + 1) * grid * 60 * 60 * 1000)\n                    const filterTimerForDataList = list.filter(function (element, index, arr) {\n                        const time = element.ORRCPDT.toString().trim() + element.ORRCPTM.toString().trim()\n                        const timestamp = moment(time, 'YYYY-MM-DDHH:mm:ss').valueOf()\n                        return StartTime <= timestamp && timestamp < EndTime\n                    })\n                    TimerForList.push({\n                        StartTime: StartTime,\n                        EndTime: EndTime,\n                        element: filterTimerForDataList,\n                        title: title\n                    })\n                }\n                return TimerForList\n            }\n            const et = pickerdate + (31 * 60 * 60 * 1000)\n            const st = starttime(interval, et)\n            const slectInt = TimeInterval(interval)\n            const DataTransForTimer = fotmatTimerForTimer(slectInt.interval, st, dataList.array, dataList.title, slectInt.grid)\n            return DataTransForTimer\n        }\n\n\n\n        function LabFormat(ressect, parsrList) {\n            var arrayBiochemical = []\n            var arrayBlood = []\n            var arrayCultivate = []\n            var arrayGAS = []\n            // var arrayGlu = []\n            var arrayRadiation = []\n            var arrayOther = []\n\n            for (let index = 0; index < ressect.length; index++) {\n                const element = ressect[index];\n                const element_ORPROCED = element.ORPROCED\n                const BioFind = parsrList.Biochemical.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const BloFind = parsrList.Blood.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const CulFind = parsrList.Cultivate.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const GasFind = parsrList.GAS.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                // const GluFind = parsrList.GAS.some(function (value, index, arr) {\n                //     return element_ORPROCED.match(value) !== null\n                // })\n                const RadFind = parsrList.Radiation.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                if (BioFind) {\n                    arrayBiochemical.push(element)\n                }\n                if (BloFind) {\n                    arrayBlood.push(element)\n                }\n                if (CulFind) {\n                    arrayCultivate.push(element)\n                }\n                if (GasFind) {\n                    arrayGAS.push(element)\n                }\n                // if (GluFind) {\n                //     arrayGlu.push(element)\n                // }\n                if (RadFind) {\n                    arrayRadiation.push(element)\n                }\n                if (BioFind === false && BloFind === false && CulFind === false && GasFind === false && RadFind === false) {\n                    arrayOther.push(element)\n                }\n            }\n            const arrayList = []\n            arrayList.push({\n                title: \"生化\",\n                array: arrayBiochemical,\n            })\n            arrayList.push({\n                title: \"血液\",\n                array: arrayBlood,\n            })\n            arrayList.push({\n                title: \"培養\",\n                array: arrayCultivate,\n            })\n            arrayList.push({\n                title: \"GAS\",\n                array: arrayGAS,\n            })\n            // arrayList.push({\n            //     title: \"Glu\",\n            //     array: arrayGlu,\n            // })\n            arrayList.push({\n                title: \"放射\",\n                array: arrayRadiation,\n            })\n            arrayList.push({\n                title: \"其他\",\n                array: arrayOther,\n            })\n            return arrayList\n        }\n        function TimeLine(interval, index) {\n            const lineStyle = {\n                width: '',\n                color: '',\n            }\n            if (interval === 0) {\n                if (index === 0 || (index % 24) === 0) {\n                    lineStyle.width = '2px';\n                    lineStyle.color = 'rgba(0,0,0,0.2)';\n                    return lineStyle;\n                } else if (index % 8 === 0) {\n                    lineStyle.width = '2px';\n                    lineStyle.color = 'rgba(0,0,0,0.2)';\n                    return lineStyle;\n                }\n                else {\n                    lineStyle.width = '1px';\n                    lineStyle.color = '#eeeeee';\n                    return lineStyle;\n                }\n            }\n            if (interval === 1) {\n                if (index === 0 || (index % 6) === 0) {\n                    lineStyle.width = '2px';\n                    lineStyle.color = 'rgba(0,0,0,0.2)';\n                    return lineStyle;\n                } else if (index % 2 === 0) {\n                    lineStyle.width = '2px';\n                    lineStyle.color = 'rgba(0,0,0,0.2)';\n                    return lineStyle;\n                }\n                else {\n                    lineStyle.width = '1px';\n                    lineStyle.color = '#eeeeee';\n                    return lineStyle;\n                }\n            }\n            if (interval === 2) {\n                if (index === 0 || (index % 3) === 0) {\n                    lineStyle.width = '2px';\n                    lineStyle.color = 'rgba(0,0,0,0.2)';\n                    return lineStyle;\n                } else {\n                    lineStyle.width = '2px';\n                    lineStyle.color = 'rgba(0,0,0,0.2)';\n                    return lineStyle;\n                }\n            }\n            if (interval === 3) {\n                lineStyle.width = '2px';\n                lineStyle.color = 'rgba(0,0,0,0.2)';\n                return lineStyle;\n            }\n        }\n        function TimeInterval(interval) {\n            if (interval === 0) {\n                return { interval: 24, grid: 1 }\n            }\n            if (interval === 1) {\n                return { interval: 18, grid: 4 }\n            }\n            if (interval === 2) {\n                return { interval: 21, grid: 8 }\n            }\n            return { interval: 14, grid: 24 }\n        }\n        const { chronic_state, caseinfo, PickerDate, title, openTimeline } = this.props\n        const { LabParse, RESSECT, SummaryParse } = this.state\n        if (LabParse === null || LabParse === undefined || LabParse.length === 0) {\n            return null\n        }\n        if (RESSECT === null || RESSECT === undefined || RESSECT.length === 0) {\n            return null\n        }\n        const data = LabFormat(RESSECT, LabParse)\n        const statestatus = TimeInterval(chronic_state)\n        const title_list = title.map((info, index) =>\n            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"40px\", border: \"1px solid rgba(238,238,238,1)\", borderCollapse: \"collapse\", backgroundColor: \"#eeeeee\" }} key={index}>\n                <t2>{info.title}</t2>\n            </div>\n        )\n        const cell_list = data.map(function (value, index, arr) {\n            const DataList = DataForTimer(value, chronic_state, PickerDate)\n            return DataList\n        })\n        const cellRender = cell_list.map(function (value, index, array) {\n            const valuecell = value.map(function (element, index, arr) {\n                const toolTipID = \"ChronicTableTootip\" + index\n                return (\n                    <Chronictablecell lineColor={openTimeline ? TimeLine(chronic_state, index) : null} key={toolTipID} element={element} caseinfo={caseinfo} summaryParse={SummaryParse}></Chronictablecell>\n                );\n            })\n            return valuecell\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\" }}>\n                <div style={{ display: \"grid\", gridTemplateRows: \"repeat(\" + title.length + \",1fr)\" }}>\n                    {title_list}\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + statestatus.interval + \",1fr)\", gridTemplateRows: \"repeat(6,1fr)\" }}>\n                    {cellRender}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Tableonchronic\n","import React, { Component } from 'react'\nimport Tableonchronic from './ChronicTable'\n\nclass Chroniclab extends Component {\n    render() {\n        const { title, caseinfo, select_interval, PickerDate } = this.props\n        const item_title = [{ title: \"生化\" }, { title: \"血液\" }, { title: \"培養\" }, { title: \"GAS\" }, { title: \"放射\" }, { title: \"其他\" }]\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                {/* 樣式修改issue10 */}\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t2>\n                </div>\n                <Tableonchronic openTimeline={true} title={item_title} caseinfo={caseinfo} chronic_state={select_interval} PickerDate={PickerDate}></Tableonchronic>\n            </div>\n        );\n    }\n}\n\nexport default Chroniclab\n","import React, { Component } from 'react'\nimport rtlogo from '../../Image/svg/RT.svg'\nimport { Tooltip } from 'antd'\nimport moment from 'moment'\n\nclass Chronicrttablecell extends Component {\n    ToolTipRender() {\n        const { cellelement } = this.props\n        const startTime = moment(cellelement.startTime).format(\"MM/DD HH:mm\")\n        const endTime = moment(cellelement.endTime).format(\"MM/DD HH:mm\")\n        const RTListRender = cellelement.element.map(function (info, index, arr) {\n            const time = moment(info.Date + info.Time, \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\")\n            const Mode = info.Mode\n            const Setting = info.Setting\n            return (\n                <div>\n                    <div>Time:{time}</div>\n                    <div>Mode:{Mode}</div>\n                    <div style={{ display: \"flex\" }}>\n                        <div>Setting:</div>\n                        <div>{Setting}</div>\n                    </div>\n                </div>\n            );\n        })\n\n        return (\n            <div>\n                <div>{startTime}~{endTime}</div>\n                {RTListRender}\n            </div>\n        );\n    }\n    render() {\n        function checkLineColor(lineColor) {\n            if(lineColor === null){\n                return '';\n            }else{\n                return `${lineColor.width} solid ${lineColor.color}`;\n            }\n        }\n        function changetext(text) {\n            if (text === 0) {\n                return '--'\n            }\n            return <img src={rtlogo} alt=\"rtlogo\" />\n        }\n        const { cellelement } = this.props\n        if (cellelement.length === 0) {\n            return <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center', border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse',borderLeft: checkLineColor(this.props.lineColor) }}>--</div>\n        }\n        return (\n            <Tooltip placement=\"right\" autoAdjustOverflow={true} title={this.ToolTipRender()} overlayStyle={{ maxWidth: \"800px\", background: \"white\" }}>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', cursor: \"pointer\", borderLeft: checkLineColor(this.props.lineColor) }}>\n                    {changetext(cellelement.length)}\n                </div>\n            </Tooltip >\n        );\n    }\n}\nexport default Chronicrttablecell","import React, { Component } from 'react'\nimport * as FilterReg from '../../Function/FiliterReg'\nimport moment from 'moment'\nimport X2JS from 'x2js';\nimport * as ApiProvider from '../../API/ApiProvider'\nimport Chronicrttablecell from './ChronicRTTableCell'\nimport * as QSPEList from '../../Resource/QSPE'\n\nconst TimeLine = (interval, index) => {\n    const lineStyle = {\n        width: '',\n        color: '',\n    }\n    if (interval === 0) {\n        if (index === 0 || (index % 24) === 0) {\n            lineStyle.width = '2px';\n            lineStyle.color = 'rgba(0,0,0,0.2)';\n            return lineStyle;\n        } else if (index % 8 === 0) {\n            lineStyle.width = '2px';\n            lineStyle.color = 'rgba(0,0,0,0.2)';\n            return lineStyle;\n        }\n        else {\n            lineStyle.width = '1px';\n            lineStyle.color = '#eeeeee';\n            return lineStyle;\n        }\n    }\n    if (interval === 1) {\n        if (index === 0 || (index % 6) === 0) {\n            lineStyle.width = '2px';\n            lineStyle.color = 'rgba(0,0,0,0.2)';\n            return lineStyle;\n        } else if (index % 2 === 0) {\n            lineStyle.width = '2px';\n            lineStyle.color = 'rgba(0,0,0,0.2)';\n            return lineStyle;\n        }\n        else {\n            lineStyle.width = '1px';\n            lineStyle.color = '#eeeeee';\n            return lineStyle;\n        }\n    }\n    if (interval === 2) {\n        if (index === 0 || (index % 3) === 0) {\n            lineStyle.width = '2px';\n            lineStyle.color = 'rgba(0,0,0,0.2)';\n            return lineStyle;\n        } else {\n            lineStyle.width = '2px';\n            lineStyle.color = 'rgba(0,0,0,0.2)';\n            return lineStyle;\n        }\n    }\n    if (interval === 3) {\n        lineStyle.width = '2px';\n        lineStyle.color = 'rgba(0,0,0,0.2)';\n        return lineStyle;\n    }\n}\n\nclass Chronicrttable extends Component {\n    state = {\n        QSPE: [],\n        preCID: null,\n        prePickerdate: null,\n        preInterval: null\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDate, select_interval } = this.props\n        this.setState({ preCID: caseinfo.CASEID, prePickerdate: PickerDate, preInterval: select_interval })\n        const timer = this.timerFormat(PickerDate, select_interval)\n        const start = moment(timer.StartTime).format(\"YYYYMMDDHHmm\")\n        const end = moment(timer.EndTime).format(\"YYYYMMDDHHmm\")\n        this.getQSPE(caseinfo.CASEID, start, end)\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDate, select_interval } = this.props\n        const { preCID, prePickerdate, preInterval } = this.state\n        if (caseinfo.CASEID !== preCID || PickerDate !== prePickerdate || preInterval !== select_interval) {\n            const { caseinfo, PickerDate } = this.props\n            this.setState({ preCID: caseinfo.CASEID, prePickerdate: PickerDate, preInterval: select_interval })\n            const timer = this.timerFormat(PickerDate, select_interval)\n            const start = moment(timer.StartTime).format(\"YYYYMMDDHHmm\")\n            const end = moment(timer.EndTime).format(\"YYYYMMDDHHmm\")\n            this.getQSPE(caseinfo.CASEID, start, end)\n        }\n\n    }\n    getQSPE(CID, st, et) {\n        const xm2 = new X2JS()\n        ApiProvider.getQSPE(CID, st, et)\n            .then(data => {\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                if (Array.isArray(parsedata)) {\n                    this.setState({ QSPE: parsedata })\n                }\n                else {\n                    this.setState({ QSPE: [parsedata] })\n                }\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        // this.setState({ QSPE: QSPEList.data })\n    }\n\n    timerFormat(PickerDate, Interval) {\n        const EndTime = PickerDate + (31 * 60 * 60 * 1000)\n        if (Interval === 0) {\n            return {\n                StartTime: EndTime - (24 * 60 * 60 * 1000),\n                EndTime: EndTime,\n                Interval: 24,\n                grid: 1\n            }\n        }\n        if (Interval === 1) {\n            return {\n                StartTime: EndTime - (3 * 24 * 60 * 60 * 1000),\n                EndTime: EndTime,\n                Interval: 18,\n                grid: 4\n            }\n\n        }\n        if (Interval === 2) {\n            return {\n                StartTime: EndTime - (7 * 24 * 60 * 60 * 1000),\n                EndTime: EndTime,\n                Interval: 21,\n                grid: 8\n            }\n\n        }\n        return {\n            StartTime: EndTime - (14 * 24 * 60 * 60 * 1000),\n            EndTime: EndTime,\n            Interval: 14,\n            grid: 24\n        }\n    }\n\n\n\n    table_content() {\n        function formatDataList(startTime, interval, list, grid) {\n            var timerList = []\n            for (let index = 0; index < interval; index++) {\n                const start = startTime + (index * grid * 60 * 60 * 1000)\n                const end = startTime + ((index + 1) * grid * 60 * 60 * 1000)\n                const listFilter = list.filter(function (info, index, arr) {\n                    const time = moment(info.Date.toString() + info.Time.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    return start <= time && time < end\n                })\n                timerList.push({\n                    length: listFilter.length,\n                    element: listFilter,\n                    startTime: start,\n                    endTime: end\n                })\n            }\n            return timerList\n        }\n\n        const { select_interval, PickerDate } = this.props\n        const QSPE = this.state.QSPE\n        const dataList = FilterReg.QSPERegList(QSPE)\n        if (dataList === null || dataList === undefined || dataList.length === 0) {\n            return null\n        }\n        const timer = this.timerFormat(PickerDate, select_interval)\n        const calldata = formatDataList(timer.StartTime, timer.Interval, dataList, timer.grid)\n        const cellRender = calldata.map(function (value, index, arr) {\n            return (\n                <Chronicrttablecell lineColor={TimeLine(select_interval, index)} key={index} cellelement={value}></Chronicrttablecell>\n            );\n        })\n        return cellRender\n    }\n    render() {\n        const { select_interval, PickerDate } = this.props\n        const timer = this.timerFormat(PickerDate, select_interval)\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\", height: \"40px\" }}>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", background: \"rgba(59, 151, 255,.4)\" }}>\n                    <t2>呼吸治療設定</t2>\n                </div>\n                {/* <div style={{ display: \"flex\", paddingLeft: \"16px\", alignItems: \"center\" }}>\n                    <t2>呼吸治療設定</t2>\n                </div> */}\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + timer.Interval + \",1fr)\" }}>\n                    {this.table_content()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chronicrttable\n","import React, { Component } from 'react'\nimport Chronicrttable from './ChronicRTTable'\n\nclass Chronicrt extends Component {\n    render() {\n        const {caseinfo, select_interval, PickerDate } = this.props\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <Chronicrttable PickerDate={PickerDate} title={{ title: \"RT\" }} caseinfo={caseinfo} select_interval={select_interval}></Chronicrttable>\n            </div>\n        );\n    }\n}\n\nexport default Chronicrt","import React, { Component } from 'react'\nimport './ChronicOrderTable.scss'\nimport moment from 'moment'\nimport { Tooltip } from 'antd'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport * as UDOR from '../../Resource/UDORDER0'\n\nclass Chronicordertable extends Component {\n    state = {\n        UDORDER: [],\n        whiteBlackListParser: [],\n        tpnParsers: [],\n        preHID: null,\n        preCID: null\n    }\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        this.setState({ preHID: HID, preCID: CID })\n        this.getUDORDER(HID, CID)\n\n    }\n    componentDidUpdate() {\n        const { caseinfo } = this.props\n        const { preHID, preCID } = this.state\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        if (preHID !== HID || preCID !== CID) {\n            this.setState({ preHID: HID, preCID: CID })\n            this.getUDORDER(HID, CID)\n        }\n    }\n    getUDORDER(HID, CID) {\n        ApiGithub.getGitHubJson(\"WhiteBlackList.json\")\n            .then(data => {\n                let parser = data.data;\n                this.setState({ whiteBlackListParser: parser })\n            })\n            .catch(err => { console.log(err) })\n        ApiGithub.getGitHubJson(\"TpnOrder.json\")\n            .then(data => {\n                let parser = data.data\n                this.setState({ tpnParsers: parser })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                this.setState({ UDORDER: data.data })\n                //this.setState({ UDORDER: fakeData })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        // this.setState({ UDORDER: UDOR.data })\n    }\n    // 0:一天 1:三天 2:一週 3:兩週\n    switch_state() {\n        const { chronic_state } = this.props\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 21\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    select_parser = (input, parser) => {\n        if (parser === undefined) return undefined;\n        return parser.find(x =>\n            input.match(x.parser_name)\n        )\n    }\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let excludeBlackListResult = [];\n        const UDGNAME_condition = mappings.find(item => item.key === \"UDGNAME\");\n        const UDRPNAME_condition = mappings.find(item => item.key === \"UDRPNAME\");\n        if (inputs === undefined) return []\n        inputs.forEach(input => {\n            const UDGNAME_re = new RegExp(UDGNAME_condition.regex_str, UDGNAME_condition.regex_flags)\n            const UDGNAME_match = input.UDGNAME.match(UDGNAME_re)\n\n            const UDRPNAME_re = new RegExp(UDRPNAME_condition.regex_str, UDRPNAME_condition.regex_flags)\n            const UDRPNAME_match = input.UDRPNAME.match(UDRPNAME_re)\n\n            if (UDGNAME_match === null || UDRPNAME_match === null) {\n                excludeBlackListResult.push(input);\n            }\n        });\n\n        return excludeBlackListResult;\n    }\n    celltable() {\n        function changegridnumber(key) {\n            switch (key) {\n                case 0:\n                    return 24\n                case 1:\n                    return 18\n                case 2:\n                    return 21\n                case 3:\n                    return 14\n                default:\n                    break;\n            }\n        }\n        const { chronic_state, openTimeLine } = this.props\n\n        function TimeLine(interval, index) {\n            if (interval === 0) {\n                if (index === 0 || (index % 24) === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                } else if (index % 8 === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                }\n                else {\n                    return '1px #eeeeee solid';\n                }\n            }\n            if (interval === 1) {\n                if (index === 0 || (index % 6) === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                } else if (index % 2 === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                }\n                else {\n                    return '1px #eeeeee solid';\n                }\n            }\n            if (interval === 2) {\n\n                if (index === 0 || (index % 3) === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                } else {\n                    return '2px rgba(0,0,0,0.2) solid';\n                }\n            }\n            if (interval === 3) {\n                return '2px rgba(0,0,0,0.2) solid';\n            }\n        }\n        function checkLineColor(openTimeLine, chronic_state, index) {\n            if (openTimeLine) {\n                return TimeLine(chronic_state, index);\n            }\n        }\n        const number = changegridnumber(chronic_state)\n        var arr = []\n        for (let index = 0; index < number; index++) {\n            arr.push(\n                <div key={index} className='cell' style={{ borderLeft: checkLineColor(openTimeLine, chronic_state, index) }}></div>\n            )\n\n        }\n        return arr\n    }\n    render() {\n        function changegridstyle(key) {\n            switch (key) {\n                case 0:\n                    return 'ordertableoneday'\n                case 1:\n                    return 'ordertablethirdday'\n                case 2:\n                    return 'ordertableoneweek'\n                case 3:\n                    return 'ordertabletwoweek'\n                default:\n                    return null\n            }\n        }\n        function ListData(UDORDER0, interval, pickerdate) {\n\n            function formatTimer(pickerdate, interval) {\n                const endTime = pickerdate + (31 * 60 * 60 * 1000)\n                if (interval === 0) {\n                    return {\n                        startTime: endTime - (24 * 60 * 60 * 1000),\n                        endTime: endTime\n                    }\n                }\n                if (interval === 1) {\n                    return {\n                        startTime: endTime - (3 * 24 * 60 * 60 * 1000),\n                        endTime: endTime\n                    }\n                }\n                if (interval === 2) {\n                    return {\n                        startTime: endTime - (7 * 24 * 60 * 60 * 1000),\n                        endTime: endTime\n                    }\n                }\n                return {\n                    startTime: endTime - (14 * 24 * 60 * 60 * 1000),\n                    endTime: endTime\n                }\n            }\n            function formatWidth(startTime, endTime, elementStart, elementEnd) {\n                function formatStart(elementStart, startTime) {\n                    if (elementStart <= startTime) {\n                        return startTime\n                    }\n                    return elementStart\n                }\n                function formatEnd(elementEnd, endTime) {\n                    if (elementEnd <= endTime) {\n                        return elementEnd\n                    }\n                    return endTime\n                }\n                const width = document.body.clientWidth - 220\n                const widthRate = width / (endTime - startTime)\n                const start = formatStart(elementStart, startTime)\n                const end = formatEnd(elementEnd, endTime)\n                return (end - start) * widthRate\n            }\n            function formatStartPosition(startTime, endTime, elementStart) {\n                const width = document.body.clientWidth - 220\n                if (elementStart <= startTime) {\n                    return 0\n                }\n                const widthRate = width / (endTime - startTime)\n                return ((elementStart - startTime) * widthRate)\n            }\n            function formatUDORDER0(UDORDER0, timer) {\n                var arraylist = []\n                const startTime = timer.startTime\n                const endTime = timer.endTime\n                for (let index = 0; index < UDORDER0.length; index++) {\n                    const element = UDORDER0[index];\n                    const elementStart = moment(element.UDBGNDT.toString(), \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n                    const elementEnd = moment(element.UDENDDT.toString(), \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n                    if (endTime < elementStart || elementEnd < startTime) {\n                        continue\n                    }\n                    const shift = formatStartPosition(startTime, endTime, elementStart)\n                    const width = formatWidth(startTime, endTime, elementStart, elementEnd)\n                    arraylist.push({\n                        \"width\": width,\n                        \"shift\": shift,\n                        \"element\": element\n                    })\n                }\n                return arraylist\n            }\n            const timer = formatTimer(pickerdate, interval)\n            if (UDORDER0 === undefined || UDORDER0 === null) {\n                return []\n            }\n            if (UDORDER0.length === 0) {\n                return []\n            }\n            const formatUDORDER = formatUDORDER0(UDORDER0, timer)\n            return formatUDORDER\n        }\n\n        const { chronic_state, PickerDate, source } = this.props\n\n\n        const rawData = this.state.UDORDER\n\n        //filter TPN items for infection page\n        let filteredRawData = []\n        if (source === \"infection\") {\n            const selected_tpn_parser = this.select_parser(\"TPN Order\", this.state.tpnParsers)\n            if (selected_tpn_parser !== undefined) {\n                rawData.forEach(item => {\n                    const found = item.UDDRGNAM.match(RegExp(selected_tpn_parser.apply_condition.name, selected_tpn_parser.apply_condition.name_regex_flags))\n                    if (found !== null && found !== \"\") filteredRawData.push(item)\n                })\n            }\n        } else {\n            filteredRawData = rawData\n        }\n\n        let filteredData = [];\n        const selected_white_black_list_parser = this.select_parser(\"Black List\", this.state.whiteBlackListParser)\n        if (selected_white_black_list_parser !== undefined) {\n            filteredData = this.parse(filteredRawData, selected_white_black_list_parser)\n        }\n\n        const datalist = ListData(filteredData, chronic_state, PickerDate)\n        // const datalist = ListData(UDORDER0, chronic_state, PickerDate)\n\n        const Tablecell = datalist.map(function (value, index, array) {\n            function formatString(value) {\n\n                if (value === undefined || value === null) {\n                    return \"--\"\n                }\n                return value.toString().trim()\n            }\n\n            function ToolTipRender(value) {\n                function statusFormat(Status) {\n                    if (Status === 30){\n                        return \"使用中\"\n                    }\n                    if (Status === 60){\n                        return \"已完成\"\n                    }\n                    if (Status === 80){\n                        return \"已取消\"\n                    }\n                    return Status\n                }\n                const startTimeFormat = moment(value.element.UDBGNDT, \"YYYY-MM-DD-HH:mm:ss.000000\").format('MM/DD HH:mm')\n                const endTimeFormat = moment(value.element.UDENDDT, \"YYYY-MM-DD-HH:mm:ss.000000\").format('MM/DD HH:mm')\n                const status = statusFormat(Number(value.element.UDSTATUS))\n                return (\n                    <div>\n                        <div>時間起迄: {`${startTimeFormat} - ${endTimeFormat}`}</div>\n                        <div>用法: {`${value.element.UDDOSAGE} - ${value.element.UDDUNIT} - ${value.element.UDFREQN} - ${value.element.UDROUTE}`}</div>\n                        <div>狀態: {status}</div>\n                    </div>\n                );\n            }\n\n            return (\n                <div key={index} style={{ padding: \"2px 0px\", paddingLeft: value.shift + 2 + \"px\", cursor: \"pointer\" }}>\n                    <Tooltip placement=\"bottom\" autoAdjustOverflow={true} title={ToolTipRender(value)} overlayStyle={{ maxWidth: \"800px\" }}>\n                        <div style={{ width: value.width + \"px\", height: \"20px\", backgroundColor: \"#71b0e46e\", color: \"black\", padding: \"0px 5px\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\", fontWeight: \"600\" }}>{formatString(value.element.UDGNAME)}</div>\n                    </Tooltip>\n                </div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\", position: 'relative' }}>\n                <div style={{ background: \"#eeeeee\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <t2>甘特圖</t2>\n                </div>\n                <div className={changegridstyle(chronic_state)} style={{ height: Tablecell.length ? Tablecell.length * 30 : 40 + \"px\" }}>{this.celltable()}</div>\n                <div style={{ position: 'absolute', left: 140, minHeight: \"40px\", overflowX: \"hidden\" }}>\n                    {Tablecell}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chronicordertable\n","import React, { Component } from 'react'\nimport Chronicordertable from './ChronicOrderTable'\n// import * as ApiGithub from '../../API/ApiGithub'\n\nclass Orderonchronic extends Component {\n    render() {\n        const { caseinfo, select_interval, UDORDER0,PickerDate, title } = this.props \n        const item_title = [{ title: \"醫藥囑\" }]\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t2>\n                </div>\n                <Chronicordertable openTimeLine={true} title={item_title} caseinfo={caseinfo} chronic_state={select_interval} UDORDER0={UDORDER0} PickerDate={PickerDate} source={this.props.source}></Chronicordertable>\n            </div>\n        );\n    }\n}\n\nexport default Orderonchronic","import React, { Component } from 'react'\nimport './ChronicWeightTable.scss'\nimport moment from 'moment'\nimport * as QTWPER from '../../Resource/QTWPER'\n// import * as ApiProvider from '../../API/ApiProvider'\n\nclass Chronicweighttable extends Component {\n    // 0:一天 1:三天 2:一週 3:兩週\n    state = { QTWPER: null }\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const weight = caseinfo.WEIGHT\n        this.setState({ QTWPER: weight })\n        // this.setState({ QTWPER: QTWPER.data.outmsg.resconts.rescont })\n    }\n\n    switch_state() {\n        const { chronic_state } = this.props\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 21\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    celltable() {\n        function changegridnumber(key) {\n            switch (key) {\n                case 0:\n                    return 24\n                case 1:\n                    return 18\n                case 2:\n                    return 21\n                case 3:\n                    return 14\n                default:\n                    break;\n            }\n        }\n        const { chronic_state, openTimeLine } = this.props\n        const number = changegridnumber(chronic_state);\n        function TimeLine(interval, index) {\n            if (interval === 0) {\n                if (index === 0 || (index % 24) === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                } else if (index % 8 === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                }\n                else {\n                    return '1px rgba(220,220,220,1) solid';\n                }\n            }\n            if (interval === 1) {\n                if (index === 0 || (index % 6) === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                } else if (index % 2 === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                }\n                else {\n                    return '1px rgba(220,220,220,1) solid';\n                }\n            }\n            if (interval === 2) {\n\n                if (index === 0 || (index % 3) === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                } else {\n                    return '2px rgba(0,0,0,0.2) solid';\n                }\n            }\n            if (interval === 3) {\n                return '2px rgba(0,0,0,0.2) solid';\n            }\n        }\n        function checkLineColor(openTimeLine, chronic_state, index) {\n            if (openTimeLine) {\n                return TimeLine(chronic_state, index);\n            }\n        }\n        var arr = []\n        for (let index = 0; index < number; index++) {\n            arr.push(\n                <div key={index} className='cell' style={{ borderLeft: checkLineColor(openTimeLine, chronic_state, index) }}></div>\n            )\n\n        }\n        return arr\n    }\n    weightRectRender() {\n        function TimerFormat(interval, pickerdate) {\n            const endTime = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    startTime: endTime - (24 * 60 * 60 * 1000),\n                    endTime: endTime,\n                    interval: 24,\n                    grid: 1\n                }\n            }\n            if (interval === 1) {\n                return {\n                    startTime: endTime - (3 * 24 * 60 * 60 * 1000),\n                    endTime: endTime,\n                    interval: 18,\n                    grid: 4\n                }\n            }\n            if (interval === 2) {\n                return {\n                    startTime: endTime - (7 * 24 * 60 * 60 * 1000),\n                    endTime: endTime,\n                    interval: 21,\n                    grid: 8\n                }\n            }\n            return {\n                startTime: endTime - (14 * 24 * 60 * 60 * 1000),\n                endTime: endTime,\n                interval: 14,\n                grid: 24\n            }\n        }\n        const { chronic_state, caseinfo, PickerDate } = this.props\n        // const QTPWERList = caseinfo.WEIGHT\n        const QTPWERList = this.state.QTWPER\n        if (QTPWERList === undefined || QTPWERList === null) {\n            return null\n        }\n        const WeightList = QTPWERList.filter(function (info, index, arr) {\n            return info.type === \"TW\"\n        })\n\n        const timer = TimerFormat(chronic_state, PickerDate)\n        const width = document.body.clientWidth - 220\n        const widthRate = width / (timer.endTime - timer.startTime)\n        var WeightListFormat = []\n        const sortWeightList = WeightList.sort(function (a, b) {\n            const aTime = moment(a.rec_dat.toString() + a.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n            const bTime = moment(b.rec_dat.toString() + b.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n            return aTime > bTime ? 1 : -1;\n        });\n        var lastelement = null\n        for (let index = 0; index < sortWeightList.length; index++) {\n            const element = WeightList[index];\n            const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n            if (timer.startTime > elementTime) {\n                const elementValue = parseInt(Number(element.value2) * 1000)\n                lastelement = { Time: elementTime, Value: elementValue }\n            }\n            console.log(lastelement)\n            if (timer.startTime <= elementTime && elementTime <= timer.endTime) {\n                const elementValue = parseInt(Number(element.value2) * 1000)\n                WeightListFormat.push({\n                    Time: elementTime,\n                    Value: elementValue\n                })\n            }\n        }\n        console.log(WeightListFormat)\n        if (lastelement !== null) {\n            WeightListFormat.splice(0,0,lastelement)\n            lastelement = null\n        }\n        console.log(WeightListFormat)\n        const sortWeight = WeightListFormat.sort(function (a, b) {\n            return a.Time > b.Time ? 1 : -1;\n        });\n        var shift = 0\n        var elementWidthList = []\n        for (let index = 0; index < sortWeight.length; index++) {\n            const element = sortWeight[index];\n            if (index === 0) {\n                if (element.Time < timer.startTime) {\n                    shift = 0\n                }\n                else {\n                    shift = (element.Time - timer.startTime) * widthRate\n                }\n            }\n            if (sortWeight.length - 1 === index) {\n                const time1 = element.Time\n                const time2 = timer.endTime\n                const elementWidth = (time2 - time1) * widthRate\n                elementWidthList.push({\n                    Value: element.Value,\n                    width: elementWidth\n                })\n            }\n            else {\n                const time1 = sortWeight[index].Time\n                const time2 = sortWeight[index + 1].Time\n                const elementWidth = (time2 - time1) * widthRate\n                elementWidthList.push({\n                    Value: element.Value,\n                    width: elementWidth\n                })\n            }\n        }\n        return {\n            shift: shift,\n            elementWidthList: elementWidthList\n        }\n    }\n    render() {\n        const { chronic_state, caseinfo, PickerDate } = this.props\n        const weight = caseinfo.WEIGHT\n        console.log(caseinfo)\n        // const weight = this.state.QTWPER\n        if (weight === null) { return null }\n        function FormatEndTimeStamp(start, interval) {\n            if (interval === 0) {\n                return start - (24 * 60 * 60 * 1000)\n            }\n            if (interval === 1) {\n                return start - (3 * 24 * 60 * 60 * 1000)\n\n            }\n            if (interval === 2) {\n                return start - (7 * 24 * 60 * 60 * 1000)\n\n            }\n            if (interval === 3) {\n                return start - (14 * 24 * 60 * 60 * 1000)\n\n            }\n        }\n        const end = PickerDate + (31 * 60 * 60 * 1000)\n        const start = FormatEndTimeStamp(end, chronic_state)\n        const datafilter = weight.filter(function (value, index, arr) {\n            const timeString = value.rec_dat.toString() + value.rec_tim.toString()\n            const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n            return start < time && time < end\n        })\n        const datafilterTime = datafilter.map(function (value, index, arr) {\n            const timeString = value.rec_dat.toString() + value.rec_tim.toString()\n            const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n            return time\n        })\n        const diff = end - start\n        var widthArray = []\n        if (datafilter.length === 0) {\n            // const element = weight[0]\n            // widthArray.push({\n            //     width: 100,\n            //     weight: (element.value2) * 1000\n            // })\n        }\n        if (datafilter.length === 1) {\n            for (let index = 0; index < datafilter.length; index++) {\n                const element = datafilter[index];\n                const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                const width = parseInt(100 * (time - start) / diff)\n                widthArray.push({\n                    width: width,\n                    weight: Number(element.value2) * 1000\n                })\n            }\n        }\n        else {\n            for (let index = 0; index < datafilter.length - 1; index++) {\n                const element = datafilter[index];\n                if (index === 0) {\n                    const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                    const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                    const width = parseInt(100 * (time - start) / diff)\n                    widthArray.push({\n                        width: width,\n                        weight: Number(element.value2) * 1000\n                    })\n                }\n                else if (index === (datafilterTime.length - 1)) {\n                    const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                    const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                    const width = parseInt(100 * (end - time) / diff)\n                    widthArray.push({\n                        width: width,\n                        weight: Number(element.value2) * 1000\n                    })\n                }\n                else {\n                    const element2 = datafilter[index + 1]\n                    const timeString2 = element2.rec_dat.toString() + element2.rec_tim.toString()\n                    const time2 = moment(timeString2, \"YYYYMMDDHHmm\").valueOf()\n                    const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                    const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                    const width = parseInt(100 * (time2 - time) / diff)\n                    widthArray.push({\n                        width: width,\n                        weight: Number(element.value2) * 1000\n                    })\n                }\n            }\n        }\n        function changegridstyle(key) {\n            switch (key) {\n                case 0:\n                    return 'chronicweighttableoneday'\n                case 1:\n                    return 'chronicweighttablethreeday'\n                case 2:\n                    return 'chronicweighttableoneweek'\n                case 3:\n                    return 'chronicweighttabletwoweek'\n                default:\n                    return null\n            }\n        }\n        const list = this.weightRectRender()\n        if (list === null || list === undefined) {\n            return null\n        }\n        const render = list.elementWidthList.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ border: \"1px black solid\", borderCollapse: \"collapse\", width: value.width + '%', height: \"20\", backgroundColor: \"#3B97E1\", color: \"white\", display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>{Math.round(value.Value)}g</div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\", position: 'relative' }}>\n                <div style={{ display: \"flex\", justifyContent: \"left\", alignItems: \"center\", background: \"rgba(59, 151, 255,.4)\", paddingLeft: \"10px\" }}>\n                    <t2>體重</t2>\n                </div>\n                <div className={changegridstyle(chronic_state)}>{this.celltable()}</div>\n                <div style={{ position: 'absolute', left: 140, paddingTop: \"15px\" }}>\n                    <div style={{ paddingLeft: list.shift + \"px\", display: \"flex\", width: 'calc(100vw - 220px)', overflow: \"hidden\" }}>\n                        {render}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chronicweighttable\n","import React, { Component } from 'react'\nimport Chronicweighttable from './ChronicWeightTable'\n\nclass Weightonchronic extends Component {\n    render() {\n        const { caseinfo, PickerDate, select_interval } = this.props\n        const item_title = [{ title: \"體重\" }] \n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <Chronicweighttable openTimeLine={true} PickerDate={PickerDate} title={item_title} caseinfo={caseinfo} chronic_state={select_interval}></Chronicweighttable>\n            </div>\n        );\n    }\n}\n\nexport default Weightonchronic","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport '../Patientview/CrossSectionView/Crosssectionvitalsignchart.scss'\n\nclass Vitalxaxis extends Component {\n    state = {\n        change: false,\n        viewwidth: window.innerWidth - 220\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n        window.addEventListener('resize', this.debounceWindowSize);\n    }\n    debounce(func, wait, immediate) {\n        var timeout;\n        return () => {\n            var context = this, args = arguments;\n            var later = function() {\n                timeout = null;\n                if (!immediate) func.apply(context, args);\n            };\n            var callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) func.apply(context, args);\n        };\n    }\n\n    debounceWindowSize = this.debounce(this.recalcWindowSize, 500);\n\n    componentWillUnmount(){\n        window.removeEventListener('resize', this.debounceWindowSize);\n    }\n\n    recalcWindowSize() {\n        this.setState({ viewwidth: window.innerWidth - 220 });\n    }\n\n    drawChart() {\n        function nowtime(time) {\n            return time + (7 * 60 * 60 * 1000)\n        }\n        function monthformat(month) {\n            return month + 1\n        }\n        function intervaldays(select_date, select_interval) {\n            switch (select_interval) {\n                //一天\n                case 0:\n                    return select_date - 86400000 * 1\n                //三天\n                case 1:\n                    return select_date - 86400000 * 3\n                //一週\n                case 2:\n                    return select_date - 86400000 * 7\n                //兩週\n                case 3:\n                    return select_date - 86400000 * 14\n                default:\n                    return null\n            }\n        }\n\n        const { id_key, svg_id,select_interval, select_date } = this.props\n        // const viewwidth = window.screen.availWidth - 220\n        //選取時間(0點)\n        const select_date_zero = new Date(new Date(select_date).getFullYear() + ',' + monthformat(new Date(select_date).getMonth()) + ',' + new Date(select_date).getDate()).getTime()\n        //選取時間(7點)\n        const select_time_format = nowtime(select_date_zero)\n        //select_intercal:0一天 1三天 2兩週\n        const Start_time = intervaldays(select_time_format, select_interval)\n        var xaxis = []\n        if (select_interval === 0) {\n            for (let index = 0; index < 24; index++) {\n                const time = Start_time + (30 * 60 * 1000) + (index * 60 * 60 * 1000)\n                xaxis.push(time)\n            }\n        }\n        if (select_interval === 1) {\n            for (let index = 0; index < 21; index++) {\n                const time = Start_time + (2 * 60 * 60 * 1000) + (index * 60 * 60 * 1000 * 4)\n                xaxis.push(time)\n            }\n        }\n\n        if (select_interval === 2) {\n            for (let index = 0; index < 21; index++) {\n                const time = Start_time + (4 * 60 * 60 * 1000) + (index * 60 * 60 * 1000 * 8)\n                xaxis.push(time)\n            }\n        }\n\n        // if (select_interval === 3) {\n        //     for (let index = 0; index < 14; index++) {\n        //         const time = Start_time + (12 * 60 * 60 * 1000) + (index * 60 * 60 * 1000 * 24)\n        //         xaxis.push(time)\n        //     }\n        // }\n        var x = d3.scaleLinear()\n            .domain([Start_time, select_time_format])\n            .range([0, this.state.viewwidth])\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            // .attr(\"viewbox\", [0, 0, viewwidth + 60, 25])\n            .style(\"width\", this.state.viewwidth + 100)\n            .style(\"height\", 25)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 15 + \")\");\n\n        var formatHour = d3.timeFormat(\"%H\")\n        var formatday = d3.timeFormat(\"%d\")\n        function multiFormat(date) {\n            if (select_interval === 0) {\n                return formatHour(date) + '~' + formatHour(date + (60 * 60 * 1000))\n            }\n            if (select_interval === 1) {\n                return formatHour(date - (2 * 60 * 60 * 1000)) + '~' + formatHour(date + (2 * 60 * 60 * 1000))\n            }\n            if (select_interval === 2) {\n                return formatHour(date - (4 * 60 * 60 * 1000)) + '~' + formatHour(date + (4 * 60 * 60 * 1000))\n            }\n            if (select_interval === 3) {\n                return monthformat(new Date(date).getMonth()) + '/' + formatday(date)\n            }\n            return formatHour(date)\n        }\n        var xAxis = d3.axisTop(x)\n            .tickValues(xaxis)\n            .tickSize(0, 0)\n            .tickPadding(5)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\");\n\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default Vitalxaxis;","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport '../Patientview/CrossSectionView/Crosssectionvitalsignchart.scss'\nimport { yyyymmddformat } from '../Function/Timeformat'\nimport moment from 'moment';\n\nclass Vitalxaxisbot extends Component {\n    state = {\n        change: false,\n        viewwidth: window.innerWidth - 221\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n        window.addEventListener('resize', this.debounceWindowSize);\n    }\n\n    debounce(func, wait, immediate) {\n        var timeout;\n        return () => {\n            var context = this, args = arguments;\n            var later = function () {\n                timeout = null;\n                if (!immediate) func.apply(context, args);\n            };\n            var callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) func.apply(context, args);\n        };\n    }\n\n    debounceWindowSize = this.debounce(this.recalcWindowSize, 500);\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.debounceWindowSize);\n    }\n\n    recalcWindowSize() {\n        this.setState({ viewwidth: window.innerWidth - 221 });\n    }\n\n    drawChart() {\n        function intervaldays(select_date, select_interval) {\n            switch (select_interval) {\n                //一天\n                case 0:\n                    return moment(select_date).add(7, 'hours').valueOf();\n                //三天\n                case 1:\n                    return moment(select_date).subtract(2, 'days').add(7, 'hours').valueOf();\n                //一週\n                case 2:\n                    return moment(select_date).subtract(6, 'days').add(7, 'hours').valueOf();\n                //兩週\n                case 3:\n                    return moment(select_date).subtract(13, 'days').add(7, 'hours').valueOf();\n                default:\n                    return null\n            }\n        }\n\n        const { id_key, svg_id, select_interval, select_date } = this.props;\n        const Start_time = intervaldays(select_date, select_interval)\n        const End_time = moment(select_date).add(1, 'day').startOf('day').add(7, 'hours').valueOf();\n        var xaxis = []\n        if (select_interval === 0) {\n            xaxis.push(Start_time);\n            const time = moment(Start_time).add(1, 'day').startOf('day').valueOf();\n            xaxis.push(time)\n        }\n        if (select_interval === 1) {\n            xaxis.push(Start_time);\n            for (let index = 1; index < 4; index++) {\n                const time = moment(Start_time).add(index, 'days').startOf('day').valueOf();\n                xaxis.push(time)\n            }\n        }\n\n        if (select_interval === 2) {\n            xaxis.push(Start_time);\n            for (let index = 1; index < 8; index++) {\n                const time = moment(Start_time).add(index, 'days').startOf('day').valueOf();\n                xaxis.push(time)\n            }\n        }\n\n        if (select_interval === 3) {\n            xaxis.push(Start_time);\n            for (let index = 1; index < 7; index++) {\n                const time = moment(Start_time).add(2*index, 'days').startOf('day').valueOf();\n                xaxis.push(time)\n            }\n        }\n        var x = d3.scaleLinear()\n            .domain([Start_time, End_time])\n            .range([0, this.state.viewwidth - 1])\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            // .attr(\"viewbox\", [0, 0, viewwidth + 60, 25])\n            .style(\"width\", this.state.viewwidth)\n            .style(\"height\", 25)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 14 + \",\" + -9 + \")\");\n\n\n        function multiFormat(date) {\n            return moment(date).format(\"MM/DD\")\n        }\n\n\n        var xAxis = d3.axisBottom(x)\n            .tickValues(xaxis)\n            .tickSize(0, 0)\n            .tickPadding(10)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .style(\"font-size\", \"11px\")\n            .attr(\"class\", \"axis\");\n\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default Vitalxaxisbot;\n","import React, { Component } from 'react'\nimport { Select, Button } from 'antd';\n// import Chronicvitalchart from './Chronic_vital_chart'\nimport { statecolor } from '../../Function/Wardstate'\nimport { formatxArrayhalf, formatendtime } from '../../Function/Timeformat'\nimport './Chronic_vital.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport Crosssectionvitalsignchart from '../CrossSectionView/Crossectionvitalsignchart'\nimport '../../Wardview/Wardchart.scss'\n\nconst Interval_grid = (number) => {\n    switch (number) {\n        case 0:\n            return 24\n        case 1:\n            return 18\n        case 2:\n            return 21\n        case 3:\n            return 14\n        default:\n            return null\n    }\n}\n\n\nconst timeCheck = (interval, pickerDate) => {\n    // 選的日期7:00距離目前時間差距\n    const duration = moment.duration(moment().diff(moment(pickerDate).startOf('day').hour(7)));\n    // \b如果選擇的日期在今天之前，那就直接選擇最後一格\n    if (moment(pickerDate).isBefore(moment().startOf('day'))) {\n        return Interval_grid(interval);\n    } else if (interval === 0) { // day 目前距離幾個小時就幾格\n        const hours = Math.floor(duration.asHours());\n        return hours > 0 ? hours : 0;\n    } else if (interval === 1) { // three day 每4小時一格，基礎 12 格是今天 7:00\n        const step = Math.floor(duration.asHours() / 4);\n        return 12 + step;\n    } else if (interval === 2) { // one week 每8小時一格，基礎 18 格是今天 7:00\n        const step = Math.floor(duration.asHours() / 8);\n        return 18 + step;\n    } else if (interval === 3) { // two week 直接看倒數第2格\n        return 13;\n    }\n}\n\n\nclass Vitalonchronic extends Component {\n    state = {\n        check_state_one: 0,\n        check_state_three: 0,\n        check_state_oneweek: 0,\n        check_state_twoweek: 0,\n        statussource: \"CM\",\n        CenterMonitorValue: [],\n        width: window.innerWidth - 171,\n        pbStatus: true,\n        preInterval: 0,\n        prePickerDate: 0,\n    }\n\n    debounce(func, wait, immediate) {\n        var timeout;\n        return () => {\n            var context = this, args = arguments;\n            var later = function () {\n                timeout = null;\n                if (!immediate) func.apply(context, args);\n            };\n            var callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) func.apply(context, args);\n        };\n    }\n\n    debounceWindowSize = this.debounce(this.recalcWindowSize, 500);\n\n    componentDidMount() {\n        const { select_interval, PickerDate } = this.props;\n        this.onClickCheckgrid_one(timeCheck(select_interval, PickerDate));\n        window.addEventListener('resize', this.debounceWindowSize);\n        this.setState({ preInterval: select_interval, prePickerDate: PickerDate });\n    }\n\n    componentDidUpdate() {\n        const { select_interval, PickerDate } = this.props;\n        const { preInterval, prePickerDate } = this.state;\n        if (select_interval !== preInterval || PickerDate !== prePickerDate) {\n            this.setState({ preInterval: select_interval, prePickerDate: PickerDate });\n            if (select_interval === 0) {\n                this.onClickCheckgrid_one(timeCheck(select_interval, PickerDate));\n            } else if (select_interval === 1) {\n                this.onClickCheckgrid_three(timeCheck(select_interval, PickerDate));\n            } else if (select_interval === 2) {\n                this.onClickCheckgrid_oneweek(timeCheck(select_interval, PickerDate));\n            } else if (select_interval === 3) {\n                this.onClickCheckgrid_twoweek(timeCheck(select_interval, PickerDate));\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.debounceWindowSize);\n    }\n\n    recalcWindowSize() {\n        this.setState({ width: window.innerWidth - 171 });\n    }\n\n    getVitalSignData(startTime, EndTime, Phistnum) {\n        ApiProvider.getPatientwardvalueMedian(Phistnum, startTime, EndTime)\n            .then(data => {\n                this.setState({\n                    CenterMonitorValue: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n                this.setState({\n                    CenterMonitorValue: null\n                })\n            })\n    }\n\n    // switchdata(value_interval, sourcefrom) {\n    //     const { defaultdate } = this.props\n    //     function changevitaldays(vitaldays) {\n    //         if (vitaldays === 3) {\n    //             return 18\n    //         }\n    //         else {\n    //             return 24\n    //         }\n    //     }\n\n    //     function Interval_switch(interval) {\n    //         if (interval === 0) {\n    //             return 1\n    //         }\n    //         if (interval === 1) {\n    //             return 3\n    //         }\n    //     }\n    //     const interval = Interval_switch(value_interval)\n    //     const starttime = formatendtime(defaultdate) - (interval * 24 * 60 * 60 * 1000)\n    //     if (sourcefrom === 'NIS') {\n    //         const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n    //         const data = simulationnisdata(datatime, changevitaldays(interval))\n    //         return data\n    //     }\n    //     else {\n\n    //         const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n    //         const data = simulationCentermonitordata(datatime, changevitaldays(interval))\n    //         return data\n    //     }\n    // }\n    Interval_grid_box() {\n        var gridarray = []\n        if (this.props.select_interval === 0) {\n            for (let index = 0; index < 24; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_one) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: '100%', border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_one(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: '100%' }} onClick={() => this.onClickCheckgrid_one(number)}></div>)\n            }\n        }\n        if (this.props.select_interval === 1) {\n            for (let index = 0; index < 18; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_three) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: '100%', border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_three(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: '100%' }} onClick={() => this.onClickCheckgrid_three(number)}></div>)\n            }\n        }\n        if (this.props.select_interval === 2) {\n            for (let index = 0; index < 21; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_oneweek) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: '100%', border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_oneweek(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: '100%' }} onClick={() => this.onClickCheckgrid_oneweek(number)}></div>)\n            }\n        }\n        if (this.props.select_interval === 3) {\n            for (let index = 0; index < 14; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_twoweek) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: '100%', border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_twoweek(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: '100%' }} onClick={() => this.onClickCheckgrid_twoweek(number)}></div>)\n            }\n        }\n        return gridarray\n    }\n\n    onClickCheckgrid_one(number) {\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (24 * 60 * 60 * 1000)\n        const endtime = ST + (number * 60 * 60 * 1000)\n        const starttime = endtime - 60 * 60 * 1000\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ check_state_one: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n    onClickCheckgrid_three(number) {\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (3 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 4) * 60 * 60 * 1000)\n        const starttime = endtime - (4 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ check_state_three: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n\n    onClickCheckgrid_oneweek(number) {\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (7 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 8) * 60 * 60 * 1000)\n        const starttime = endtime - (8 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ check_state_oneweek: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n    onClickCheckgrid_twoweek(number) {\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (14 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 24) * 60 * 60 * 1000)\n        const starttime = endtime - (24 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ check_state_twoweek: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n\n    sourcehandleChange = (value) => {\n        this.setState({ statussource: value })\n    }\n    render() {\n        function centervaluetoNull(value) {\n            function FilterList(DataList, type) {\n                const filterData = DataList.filter(function (value, index, arr) {\n                    return value.type === type\n                })\n                if (filterData.length === 0) {\n                    return null\n                }\n                return filterData[0].Mid\n            }\n            if (value === undefined || value === null) {\n                return {\n                    hr: null,\n                    rr: null,\n                    bt: null,\n                    spo2: null,\n                    abpd: null,\n                    abpm: null,\n                    abps: null,\n                    nbpm: null,\n                    nbps: null,\n                    nbpd: null\n                }\n            }\n            return {\n                hr: FilterList(value, \"hr\"),\n                rr: FilterList(value, \"rr\"),\n                bt: FilterList(value, \"bt\"),\n                spo2: FilterList(value, \"spo2\"),\n                abpd: FilterList(value, \"abpd\"),\n                abpm: FilterList(value, \"abpm\"),\n                abps: FilterList(value, \"abps\"),\n                nbpd: FilterList(value, \"nbpd\"),\n                nbps: FilterList(value, \"nbps\"),\n                nbpm: FilterList(value, \"nbpm\"),\n            }\n        }\n        function centervalueNull(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            return value\n        }\n\n        function formatPickerTimer(pickerdate, interval) {\n            const end = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    startTime: end - (24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n            if (interval === 1) {\n                return {\n                    startTime: end - (3 * 24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n            if (interval === 2) {\n                return {\n                    startTime: end - (7 * 24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n            else {\n                return {\n                    startTime: end - (14 * 24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n        }\n        function limitValue(value, upper, lower) {\n            if (value > upper || value < lower) {\n                return false\n            }\n            return true\n        }\n        function valueFormat(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"--\"\n            }\n            return value\n        }\n\n        const { Option } = Select;\n        const { source } = this.props\n        const pickerTimer = formatPickerTimer(this.props.PickerDate, this.props.select_interval)\n        const centervalue = centervaluetoNull(this.state.CenterMonitorValue)\n        const { width } = this.state;\n        const status = this.state.pbStatus\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\", marginTop: \"10px\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>生命徵象</t2>\n                    {/* <div >\n                        <Button style={{ margin: \"0px 10px\" }} value={\"CM\"} type=\"primary\" onClick={this.sourcehandleChange}>Center Monitor</Button>\n                        <Button style={{}} value={\"NIS\"} type=\"primary\" onClick={this.sourcehandleChange}>NIS</Button>\n                    </div> */}\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridGap: \"5px\", marginLeft: \"20px\" }}>\n                        <div className={this.state.statussource === \"CM\" ? \"vitalBtnSource\" : \"vitalBtnSelectSource\"} style={{ marginRight: \"1px\" }} onClick={() => this.sourcehandleChange('CM')}>\n                            中央站資訊\n                        </div>\n                        <div className={this.state.statussource === \"NIS\" ? \"vitalBtnSource\" : \"vitalBtnSelectSource\"} onClick={() => this.sourcehandleChange('NIS')}>\n                            護理系統資訊\n                        </div>\n                    </div>\n                    {\n                        this.props.fromInfection ? null\n                            :\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto auto auto\", gridGap: \"2px\", marginLeft: \"15px\" }}>\n                                <div className={this.props.select_interval === 0 ? \"vitalBtnInterval\" : \"vitalBtnSelectInterval\"} style={{ marginRight: \"1px\" }} onClick={() => this.props.onSelectchange(0)}>\n                                    顯示一天\n                                </div>\n                                <div className={this.props.select_interval === 1 ? \"vitalBtnInterval\" : \"vitalBtnSelectInterval\"} style={{ marginRight: \"1px\" }} onClick={() => this.props.onSelectchange(1)}>\n                                    顯示三天\n                                </div>\n                                <div className={this.props.select_interval === 2 ? \"vitalBtnInterval\" : \"vitalBtnSelectInterval\"} style={{ marginRight: \"1px\" }} onClick={() => this.props.onSelectchange(2)}>\n                                    顯示一週\n                                </div>\n                                <div className={this.props.select_interval === 3 ? \"vitalBtnInterval\" : \"vitalBtnSelectInterval\"} onClick={() => this.props.onSelectchange(3)}>\n                                    顯示二週\n                                </div>\n                            </div>\n                    }\n                </div>\n\n                <div className=\"halfwardchart\">\n                    <div style={{ display: \"grid\", gridTemplateRows: this.state.statussource === 'CM' ? \"repeat(6,110px)\" : \"repeat(5,110px)\" }}>\n\n                        <div className=\"chronicvitalCardTitle\" style={{ backgroundColor: status ? \"white\" : statecolor('HR') }}>\n                            <t4 style={{ color: status ? statecolor('HR') : \"white\" }}>HR</t4>\n                            <t1 style={{ lineHeight: \"44px\", color: status ? statecolor('HR') : \"white\" }}>{centervalueNull(centervalue.hr)}</t1>\n                        </div>\n\n                        {\n                            this.state.statussource === \"CM\" ? (\n                                <div className=\"chronicvitalCardTitle\" style={{ backgroundColor: status ? \"white\" : statecolor('BP') }}>\n                                    <div className=\"chronicvitalCardTitleText\" style={{ color: status ? statecolor('BP') : \"white\" }}>\n                                        <t4>NBP</t4>\n                                        <t4>(mmHg)</t4>\n                                    </div>\n                                    <div className=\"chronicvitalCardTitleVal\">\n                                        <t3 style={{ color: status ? statecolor('BP') : \"white\" }}>{centervalueNull(centervalue.nbps)}/{centervalueNull(centervalue.nbpd)}</t3>\n                                        <t3 style={{ color: status ? statecolor('BP') : \"white\" }}>({centervalueNull(centervalue.nbpm)})</t3>\n                                    </div>\n                                </div>\n                            ) : null\n                        }\n\n\n                        <div className=\"chronicvitalCardTitle\" style={{ backgroundColor: status ? \"white\" : statecolor('BP') }}>\n                            <div className=\"chronicvitalCardTitleText\" style={{ color: status ? statecolor('BP') : \"white\" }}>\n                                <t4>{this.state.statussource === \"CM\" ? 'ABP' : 'BP'}</t4>\n                                <t4>(mmHg)</t4>\n                            </div>\n                            <div className=\"chronicvitalCardTitleVal\">\n                                <t3 style={{ color: status ? statecolor('BP') : \"white\" }}>{centervalueNull(centervalue.abps)}/{centervalueNull(centervalue.abpd)}</t3>\n                                <t3 style={{ color: status ? statecolor('BP') : \"white\" }}>({centervalueNull(centervalue.abpm)})</t3>\n                            </div>\n                        </div>\n                        <div className=\"chronicvitalCardTitle\" style={{ backgroundColor: limitValue(centervalue.spo2, 100, 90) ? \"white\" : statecolor('SpO2') }}>\n                            <div className=\"chronicvitalCardTitleText\" style={{ color: limitValue(centervalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>\n                                <t4>SpO<sub >2</sub></t4>\n                                <t4>(%)</t4>\n                            </div>\n                            <t1 style={{ lineHeight: \"44px\", color: limitValue(centervalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>{centervalueNull(centervalue.spo2)}%</t1>\n                        </div>\n                        <div className=\"chronicvitalCardTitle\" style={{ backgroundColor: limitValue(centervalue.bt, 38, 36) ? \"white\" : statecolor('BT') }}>\n                            <div className=\"chronicvitalCardTitleText\" style={{ color: limitValue(centervalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>\n                                <t4>BT</t4>\n                            </div>\n                            <t1 style={{ lineHeight: \"44px\", color: limitValue(centervalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>{valueFormat(centervalue.bt)}</t1>\n                        </div>\n                        <div className=\"chronicvitalCardTitle\" style={{ backgroundColor: limitValue(centervalue.rr, 60, 20) ? \"white\" : statecolor('RR') }}>\n                            <div className=\"chronicvitalCardTitleText\" style={{ color: limitValue(centervalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>\n                                <t4>SpO<sub >2</sub></t4>\n                                <t4>(%)</t4>\n                            </div>\n                            <t1 style={{ lineHeight: \"44px\", color: limitValue(centervalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>{centervalueNull(centervalue.rr)}</t1>\n                        </div>\n\n\n                    </div>\n                    <div style={{ position: \"relative\" }}>\n                        {\n                            this.state.statussource === \"CM\" ? (\n                                <div style={{ position: \"absolute\", height: this.state.statussource === 'CM' ? 660 : 550, width: width - 50, top: 5, left: 50 }} >\n                                    <div style={{ display: \"grid\", height: '100%', gridTemplateColumns: \"repeat(\" + Interval_grid(this.props.select_interval) + \",1fr)\" }}>\n                                        {this.Interval_grid_box()}\n                                    </div>\n                                </div>\n                            ) : null\n                        }\n\n                        <Crosssectionvitalsignchart\n                            comein={'node'}\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"hr_svg_\" + source}\n                            id_key={\"hr_id_\" + source}\n                            type={\"hr\"}\n                            source={this.state.statussource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={85}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={100}\n                            upper={160}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor=\"#779F50\"\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={200}>\n                        </Crosssectionvitalsignchart>\n                        {\n                            this.state.statussource === \"CM\" ? (\n                                <Crosssectionvitalsignchart\n                                    comein={'node'}\n                                    CID={this.props.caseinfo.CASEID}\n                                    HID={this.props.caseinfo.HISID}\n                                    PickerDate={this.props.PickerDate}\n                                    svg_id={\"nbp_svg\" + source}\n                                    id_key={\"nbp_id\" + source}\n                                    type={\"nbp\"}\n                                    source={this.state.statussource}\n                                    startTime={pickerTimer.startTime}\n                                    endTime={pickerTimer.endTime}\n                                    height={85}\n                                    width={width}\n                                    interval={this.props.select_interval}\n                                    lower={55}\n                                    upper={75}\n                                    axisBot={false}\n                                    axisTop={false}\n                                    circlrcolor={\"#C12528\"}\n                                    colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                    min={0}\n                                    max={100}>\n                                </Crosssectionvitalsignchart>\n                            ) : null\n                        }\n                        <Crosssectionvitalsignchart\n                            comein={'node'}\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"abp_svg\" + source}\n                            id_key={\"abp_id\" + source}\n                            type={\"abp\"}\n                            source={this.state.statussource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={85}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={55}\n                            upper={75}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#C12528\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            comein={'node'}\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"spo2_svg_\" + source}\n                            id_key={\"spo2_id_\" + source}\n                            type={\"spo2\"}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={85}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={90}\n                            upper={100}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#4773B8\"}\n                            colorshadow={\"#4773B8\"}\n                            min={60}\n                            max={100}\n                            source={this.state.statussource}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            comein={'node'}\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"bt_svg_\" + source}\n                            id_key={\"bt_id_\" + source}\n                            type={\"bt\"}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            source={this.state.statussource}\n                            height={85}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={36}\n                            upper={38}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#7F3DB5\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={34}\n                            max={41}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            comein={'node'}\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"rr_svg_\" + source}\n                            id_key={\"rr_id_\" + source}\n                            type={\"rr\"}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={85}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={20}\n                            upper={60}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#DE7531\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}\n                            source={this.state.statussource}>\n                        </Crosssectionvitalsignchart>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default Vitalonchronic\n","import React, { Component } from 'react';\nimport { DatePicker, Button, Select, Checkbox } from 'antd';\nimport filterlogo from '../../Image/svg/filter.svg'\nimport Inoutonchronic from './Chronic_io'\nimport Chroniclab from './ChronicLab'\nimport Chronicrt from './ChronicRT'\nimport Orderonchronic from './ChronicOrder'\nimport Weightonchronic from './ChronicWeight'\nimport Vitalxaxis from '../../Module/Vitalxaxis'\nimport Vitalxaxisbot from '../../Module/Vitalxaxisbot'\nimport moment from 'moment'\nimport './Chroniclelayout.scss'\nimport Vitalonchronic from './Chronic_vital'\nimport locale from 'antd/es/date-picker/locale/zh_TW';\nimport * as WardState from '../../Function/Wardstate'\n\nclass Chroniclelayout extends Component {\n    state = {\n        display_Mode: false,\n        Cross_item: [0, 1, 2, 4],\n        scrollstate: 0,\n        PickerDate: moment(moment().format('YYYYMMDD'), \"YYYYMMDD\").valueOf(), //選擇日期\n        select_interval: 0, //選擇區間\n        statuschange: 0,\n    }\n    onChangeCross = (checkedValues) => {\n        this.setState({ Cross_item: checkedValues })\n    }\n\n    open_display() {\n        this.setState({\n            display_Mode: !this.state.display_Mode\n        })\n    }\n    scrollToAnchor = (anchorName) => {\n        if (anchorName) {\n            let anchorElement = document.getElementById(anchorName);\n            if (anchorElement) { anchorElement.scrollIntoView(); }\n        }\n    }\n    scroll_btn_style(index) {\n        if (index === this.state.scrollstate) {\n            return true\n        }\n        else return false\n    }\n    onChange = (date, dateString) => {\n\n        this.setState(\n            {\n                PickerDate: date.valueOf()\n            }\n        )\n    }\n    onSelectchange = (value) => {\n        this.setState(\n            {\n                select_interval: value\n            }\n        )\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDate } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const bTemp = moment(moment(bTime).format('YYYYMMDD')).valueOf()\n                bronDate <= bTemp && this.onChange(moment(bTime))\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD'))\n                this.onChange(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= aTemp && this.onChange(moment(aTime))\n                break;\n            default:\n                break;\n        }\n    }\n\n    display_item(number) {\n        const item = this.state.Cross_item\n        var filter = item.some(function (item, index, array) {\n            return item === number\n        });\n        return filter\n    }\n\n    render() {\n        const { Option } = Select;\n        // const dateFormat = 'YYYY/MM/DD';\n        const { caseinfo, status } = this.props\n        // const { PickerDate } = this.state\n        const crosssectioncontrollist =\n            [{ \"name\": \"生命徵象\", \"scrollpoint\": \"vital_sign_chronic\" },\n            { \"name\": \"輸出入\", \"scrollpoint\": \"input_output_chronic\" },\n            { \"name\": \"檢驗\", \"scrollpoint\": \"lab_chronic\" },\n            { \"name\": \"藥物處方\", \"scrollpoint\": \"order_chronic\" }]\n\n        const btn_style = {\n            unclick_style: { borderRadius: \"4px\", color: \"#001a6d88\", border: \"1px solid #001a6d88\", padding: \"0px 4px\", height: \"30px\" }\n        }\n\n        let button = crosssectioncontrollist.map(\n            (item, index) => <Button onClick={this.scrollToAnchor.bind(this, item.scrollpoint)} key={index} style={btn_style.unclick_style}>\n                <t3>{item.name}</t3>\n            </Button>);\n\n        const display_style = {\n            displye_mode: { position: \"absolute\", right: '0px', top: \"50px\", width: \"200px\", background: \"white\", boxShadow: \"3px 3px 12px\", zIndex: \"100\", borderRadius: \"4px\" },\n            non_display_mode: { display: \"none\" },\n            check_area: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\" },\n            check_text: { padding: \"4px\", width: \"140px\", borderRadius: \"4px\", borderColor: 'rgba(0, 0, 0, 0.15)', borderStyle: \"solid\", borderWidth: \"1px\", marginLeft: \"10px\", borderRadius: \"4px\" }\n        }\n        return (\n            <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", height: \"40px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"140px 120px\", gridColumnGap: \"5px\" }}>\n                        <DatePicker getCalendarContainer={triggerNode => triggerNode.parentNode} locale={locale} disabledDate={(current) => { return current > moment().startOf(\"day\") || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }} onChange={this.onChange} value={moment(this.state.PickerDate)} allowClear={false} />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\", marginLeft: \"10px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"minus-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                    </div>\n                    <div style={{ fontSize: \"16px\" }}>\n                        當日年齡: {WardState.bornstatusFormat(status.week, status.day)} <spam style={{ fontWeight: \"600\", color: \"black\" }}>{WardState.CalculateAgeFromPickerDate(status, this.state.PickerDate)}</spam>\n                    </div>\n                    <div style={{ fontSize: \"16px\" }}>\n                        當日體重: {WardState.valueFormat(status.BornWeight)}<spam style={{ fontWeight: \"600\", color: \"black\" }}>{WardState.WeightListFilter(caseinfo.WEIGHT, this.state.PickerDate)}g</spam>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", position: \"relative\" }}>\n                        <t2 >快速切換：</t2>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(6,auto)\", gridColumnGap: \"5px\" }}>{button}</div>\n                        <div onClick={() => this.open_display()} style={{ cursor: \"pointer\", marginLeft: \"5px\" }}>\n                            <img src={filterlogo} alt='filterlogo' style={{ width: '15px', height: '15px' }}></img>\n                        </div>\n                        <div style={this.state.display_Mode ? display_style.displye_mode : display_style.non_display_mode}>\n                            <t2 className='controlmoduletitle'>顯示切換</t2>\n                            <div style={{ marginTop: \"10px\", marginBottom: \"20px\" }}>\n                                <Checkbox.Group defaultValue={this.state.Cross_item} id={\"checkbox_group\"} style={{ width: '100%', display: \"grid\", gridTemplateRows: \"repeat(4,1fr)\", gridRowGap: \"5px\" }} onChange={this.onChangeCross}>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={0}></Checkbox>\n                                        <t3 style={display_style.check_text}>生命徵象</t3>\n                                    </div>\n                                    {/* <div style={display_style.check_area}>\n                                        <Checkbox value={3}></Checkbox>\n                                        <t3 style={display_style.check_text}>呼吸治療設定</t3>\n                                    </div> */}\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={1} ></Checkbox>\n                                        <t3 style={display_style.check_text}>輸出入</t3>\n                                    </div>\n                                    {/* <div style={display_style.check_area}>\n                                        <Checkbox value={5}></Checkbox>\n                                        <t3 style={display_style.check_text}>體重</t3>\n                                    </div> */}\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={2}></Checkbox>\n                                        <t3 style={display_style.check_text}>檢驗</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={4}></Checkbox>\n                                        <t3 style={display_style.check_text}>藥物處方</t3>\n                                    </div>\n                                </Checkbox.Group>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"150px 1fr\", height: \"10px\", marginTop: \"10px\" }}>\n                    <div></div>\n                    <Vitalxaxisbot max={200} min={0} select_interval={this.state.select_interval} select_date={this.state.PickerDate} id_key=\"xaxis_bot_chronic\" svg_id=\"xaxis_bot_svg_chronic\"></Vitalxaxisbot>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\", margin: \"10px 0px\" }}>\n                    <div></div>\n                    <Vitalxaxis max={200} min={0} select_interval={this.state.select_interval} select_date={this.state.PickerDate} id_key=\"xaxis_chronic\" svg_id=\"xaxis_svg_chronic\"></Vitalxaxis>\n                </div>\n                <div className='boxshadow'></div>\n                <div className='chroniclayout'>\n                    {/* Vital sign */}\n                    <div id=\"vital_sign_chronic\" style={{ display: this.display_item(0) ? \"block\" : \"none\" }}>\n                        <Vitalonchronic source={\"Chronic\"} PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"Vital\" onSelectchange={this.onSelectchange}></Vitalonchronic>\n                        <Chronicrt PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo}></Chronicrt>\n                    </div>\n                    {/* RT */}\n                    {/* <div id=\"rt_chronic\" style={{ display: this.display_item(3) ? \"block\" : \"none\" }}>\n                        <Chronicrt PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo}></Chronicrt>\n                    </div> */}\n                    {/* I/O */}\n                    <div id=\"input_output_chronic\" style={{ display: this.display_item(1) ? \"block\" : \"none\" }}>\n                        <Inoutonchronic PickerDate={this.state.PickerDate} Status={\"Chronic\"} IntervalStatus={this.state.select_interval} caseinfo={caseinfo} title=\"輸出入\"></Inoutonchronic>\n                        <Weightonchronic PickerDate={this.state.PickerDate} QTWPER={this.state.QTWPER} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"\"></Weightonchronic>\n                    </div>\n                    {/* 體重 */}\n                    {/* <div id=\"infection_chronic\" style={{ display: this.display_item(5) ? \"block\" : \"none\" }}>\n                    </div> */}\n                    {/* Lab */}\n                    <div id=\"lab_chronic\" style={{ display: this.display_item(2) ? \"block\" : \"none\" }}>\n                        <Chroniclab PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"檢驗\"></Chroniclab>\n                    </div>\n                    {/* Order */}\n                    <div id=\"order_chronic\" style={{ display: this.display_item(4) ? \"block\" : \"none\" }}>\n                        <Orderonchronic PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"藥物處方\"></Orderonchronic>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chroniclelayout;\n","import moment from \"moment\"\nimport React, { Component } from 'react';\n\nexport function formatIV(QDC) {\n    if (Array.isArray(QDC)) {\n        const filterIV = QDC.filter(function (info, index, arr) {\n            return info.line.toString().toUpperCase().trim() === \"IV\"\n        })\n        if (filterIV.length === 0) {\n            return false\n        }\n        return true\n    }\n    return false\n}\n\nexport function formatALUA(QDC) {\n    if (Array.isArray(QDC)) {\n        const filterIV = QDC.filter(function (info, index, arr) {\n            return info.line.toString().toUpperCase().trim() === \"A-LINE\" || info.line.toString().toUpperCase().trim() === \"UVA\"\n        })\n        console.log(filterIV)\n        if (filterIV.length === 0) {\n            return false\n        }\n        return true\n    }\n    return false\n}\n\nexport function formatCVCPICC(QDC) {\n    if (Array.isArray(QDC)) {\n        const filterIV = QDC.filter(function (info, index, arr) {\n            return info.line.toString().toUpperCase().trim() === \"CVC\" || info.line.toString().toUpperCase().trim() === \"PICC\" || info.line.toString().toUpperCase().trim() === \"UVC\"\n        })\n        if (filterIV.length === 0) {\n            return false\n        }\n        return true\n    }\n    return false\n}\n\nexport function formatIOData(QDC, filterString) {\n    if (Array.isArray(QDC)) {\n        const filter = QDC.filter(function (info, index, arr) {\n            return info.item.toString().trim() === filterString\n        })\n        return filter\n    }\n    return false\n}\n\nexport function formatData(filterData, PickerDate, filterString) {\n    function nullvalue(value) {\n        if (value === undefined || value === null || value === 0) {\n            return null\n        }\n        return value.toString().trim()\n    }\n    const end = PickerDate + (31 * 60 * 60 * 1000)\n    const start = PickerDate + (7 * 60 * 60 * 1000)\n    if (Array.isArray(filterData)) {\n        const formatTimer = filterData.filter(function (info, index, arr) {\n            const time = moment(info.rec_dat.toString().trim() + info.rec_tim.toString().trim(), \"YYYYMMDDHHmm\").valueOf()\n            return start <= time && time <= end\n        })\n        if (formatTimer.length === 0) {\n            return null\n        }\n        if (filterString === '輸液') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = nullvalue(info.line) + \"/\" + nullvalue(info.nam) + \"/\" + nullvalue(info.pos)\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '血品') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = nullvalue(info.line) + \"/\" + nullvalue(info.nam) + \"/\" + nullvalue(info.pos)\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '進食') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = nullvalue(info.nam) + \"/\" + nullvalue(info.lost)\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '失血') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"失血\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '滲液') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"滲液\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '嘔吐') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"嘔吐\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '引流') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = nullvalue(info.line) + \"/\" + nullvalue(info.pos)\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '穿刺出') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"穿刺出\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '穿刺入') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"穿刺入\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '透析入') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"穿刺入\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '透析出') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"穿刺入\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '透析總') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"穿刺入\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '沖洗出') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = nullvalue(info.line) + \"/\" + nullvalue(info.pos)\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '沖洗入') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = nullvalue(info.line) + \"/\" + nullvalue(info.pos)\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === 'Stool') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"Stool\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === 'Stimulation') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"Enema/Stimulation\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '排尿') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"Urine\" + nullvalue(info.inp_val1)\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        return null\n    }\n    return null\n}\n\nexport function groupArray(arrayList) {\n    if (Array.isArray(arrayList)) {\n        var result = arrayList.filter(function (value, index, arr) {\n            const res = arr.map(function (value, index, arr) {\n                return value.compare\n            })\n            return res.indexOf(value.compare) === index;\n        });\n        var arrList = []\n        for (let index = 0; index < result.length; index++) {\n            const element = result[index];\n            const comparevalue = element.compare\n            const filterarray = arrayList.filter(function (value, index, arr) {\n                return value.compare === comparevalue\n            })\n            arrList.push(filterarray)\n        }\n        return arrList\n    }\n    return null\n\n}\n\nexport function mapCellrender(ArrayList, PickerDate, filterString) {\n    function formatColor(filterString) {\n        if (filterString === \"輸液\") {\n            return \"rgb(160, 200, 200)\"\n        }\n        if (filterString === \"血品\") {\n            return \"rgb(210, 175, 165)\"\n        }\n        if (filterString === '進食') {\n            return \"rgb(179, 173, 50)\"\n        }\n        return \"rgb(140, 118, 162)\"\n    }\n    function formatBackgroundColor(filterString) {\n        if (filterString === \"輸液\") {\n            return \"rgb(195, 225, 225)\"\n        }\n        if (filterString === \"血品\") {\n            return \"rgb(220, 205, 200)\"\n        }\n        if (filterString === '進食') {\n            return \"rgb(230, 217, 154)\"\n        }\n        return \"rgb(212, 202, 221)\"\n    }\n    function nullvalue(value) {\n        if (value === undefined || value === null || value === 0 || value === '') {\n            return \"\"\n        }\n        if (value.toString().match(\"null\") === 0) {\n            return \"\"\n        }\n        return value.toString().trim()\n    }\n    const start = PickerDate + (7 * 60 * 60 * 1000)\n    function valueToInit(filterString) {\n        if (filterString === '嘔吐') {\n            return \"\"\n        }\n        if (filterString === '引流') {\n            return \"\"\n        }\n        if (filterString === 'Stool') {\n            return \"\"\n        }\n        if (filterString === 'Stimulation') {\n            return \"\"\n\n        }\n        if (filterString === '排尿') {\n            return \"\"\n\n        }\n        return 0\n    }\n    function valueToVar(filterString, element) {\n        function vallNull(value) {\n            if (value === null || value === undefined) {\n                return null\n            }\n            return value.toString().trim()\n        }\n        if (filterString === \"輸液\") {\n            return Number(element.inp_val1)\n        }\n        if (filterString === \"血品\") {\n            return Number(element.inp_val1)\n        }\n        if (filterString === \"進食\") {\n            return Number(element.inp_val2)\n        }\n        if (filterString === '失血') {\n            return Number(element.out_val1)\n        }\n        if (filterString === '滲液') {\n            return Number(element.out_val1)\n        }\n        if (filterString === '嘔吐') {\n            return element.out_val1.toString() + \"\\n\" + vallNull(element.nam) + \"\\n\" + vallNull(element.color)\n        }\n        if (filterString === '引流') {\n            return Number(element.out_val1) + \"\\n\" + vallNull(element.color)\n        }\n        if (filterString === '穿刺出') {\n            return Number(element.out_val1)\n        }\n        if (filterString === '穿刺入') {\n            return Number(element.inp_val1)\n        }\n        if (filterString === '透析入') {\n            return Number(element.out_val1)\n        }\n        if (filterString === '透析出') {\n            return Number(element.inp_val1)\n        }\n        if (filterString === '透析總') {\n            return Number(element.out_val1) - Number(element.inp_val1)\n        }\n        if (filterString === '沖洗出') {\n            return Number(element.out_val1)\n        }\n        if (filterString === '沖洗入') {\n            return Number(element.out_val1)\n        }\n        if (filterString === 'Stool') {\n            // console.log(element)\n            const cellStringArray = element.out_val1.toString().split(\"|\")\n            // console.log(cellStringArray)\n            if (cellStringArray[1] !== null || cellStringArray[1] !== undefined || cellStringArray[1].length === 0) {\n                // console.log(cellStringArray[1] + \"\\n\" + element.nam.toString().trim() + \"\\n\" + element.color.toString().trim())\n                console.log(element)\n                return cellStringArray[1] + \"\\n\" + vallNull(element.nam) + \"\\n\" + vallNull(element.color)\n            }\n            if (cellStringArray[0].length === 0) {\n                return element.nam.toString().trim() + \"\\n\" + element.color.toString().trim()\n            }\n            return cellStringArray[0] + \"次\" + \"\\n\" + vallNull(element.nam) + \"\\n\" + vallNull(element.color)\n        }\n        if (filterString === 'Stimulation') {\n            console.log(element)\n            if (element.inp_val1 === undefined || element.inp_val1 === null || element.inp_val1.toString().trim() === \"\") {\n                if (Number(element.out_val2) > 0) {\n                    return \"S\\n\"\n                }\n                return \"\"\n            }\n            else {\n                if (Number(element.out_val2) > 0) {\n                    return \"ES\\n\"\n                }\n                return \"E\\n\"\n            }\n\n        }\n        if (filterString === '排尿') {\n            return nullvalue(element.out_val2) + \"\\n\" + nullvalue(element.nam) + \"\\n\" + nullvalue(element.color)\n\n        }\n        return 0\n    }\n    if (Array.isArray(ArrayList) && ArrayList.length > 0) {\n        const mapList = ArrayList.map(function (info, index, arr) {\n            const title = info[0].title\n            var timeForList = []\n            for (let index = 0; index < 24; index++) {\n                const startTime = start + (index * 60 * 60 * 1000)\n                const endTime = start + ((index + 1) * 60 * 60 * 1000)\n                var sum = valueToInit(filterString)\n                var elementList = []\n                for (let index = 0; index < info.length; index++) {\n                    const element = info[index].element;\n                    const valueSum = valueToVar(filterString, element)\n                    const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    if (startTime <= elementTime && elementTime < endTime) {\n                        sum = sum + valueSum\n                        elementList.push(element)\n                    }\n                }\n                timeForList.push({\n                    value: sum,\n                    startTime: startTime,\n                    endTime: endTime,\n                    elementList: elementList\n                })\n            }\n\n            const styleList = ['輸液', '血品', '進食']\n            const decideStyle = styleList.indexOf(filterString) !== -1\n\n            const cellMap = timeForList.map(function (info, index, arr) {\n                return (\n                    <div key={index} style={{ borderRight: (index + 1) % 8 == 0 && index != 0 && index != timeForList.length - 1 ? formatColor(filterString) + ' 5px solid' : formatColor(filterString) + ' 1px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: decideStyle ? \"center\" : '', whiteSpace: \"pre-wrap\", backgroundColor: nullvalue(info.value) !== null ? \"#fffa\" : \"\", minHeight: \"50px\" }}>{nullvalue(info.value)}</div>\n                );\n            })\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", minHeight: \"50px\" }}>\n                    <div style={{ borderRight: formatColor(filterString) + ' 5px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', backgroundColor: formatBackgroundColor(filterString), display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{title}</div>\n                    {cellMap}\n                </div>\n            );\n        })\n        return mapList\n    }\n    if (filterString === \"血品\") {\n        var cell = []\n        for (let index = 0; index < 24; index++) {\n            cell.push({\n                value: 0\n            })\n        }\n        const cellMap = cell.map(function (info, index, arr) {\n            return (\n                <div key={index} style={{ borderRight: (index + 1) % 8 == 0 && index != 0 && index != cell.length - 1 ? formatColor(filterString) + ' 5px solid' : formatColor(filterString) + ' 1px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", minHeight: \"50px\" }}>\n                <div style={{ borderRight: formatColor(filterString) + ' 5px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', backgroundColor: formatBackgroundColor(filterString), display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{\"無輸血紀錄\"}</div>\n                {cellMap}\n            </div>\n        );\n    }\n    if (filterString === \"進食\") {\n        var cell = []\n        for (let index = 0; index < 24; index++) {\n            cell.push({\n                value: 0\n            })\n        }\n        const cellMap = cell.map(function (info, index, arr) {\n            return (\n                <div key={index} style={{ borderRight: (index + 1) % 8 == 0 && index != 0 && index != cell.length - 1 ? formatColor(filterString) + ' 5px solid' : formatColor(filterString) + ' 1px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", minHeight: \"50px\" }}>\n                <div style={{ borderRight: formatColor(filterString) + ' 5px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', backgroundColor: formatBackgroundColor(filterString), display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{\"無進食紀錄\"}</div>\n                {cellMap}\n            </div>\n        );\n    }\n    if (filterString === \"Stool\") {\n        var cell = []\n        for (let index = 0; index < 24; index++) {\n            cell.push({\n                value: 0\n            })\n        }\n        const cellMap = cell.map(function (info, index, arr) {\n            return (\n                <div key={index} style={{ borderRight: (index + 1) % 8 == 0 && index != 0 && index != cell.length - 1 ? formatColor(filterString) + ' 5px solid' : formatColor(filterString) + ' 1px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", minHeight: \"50px\" }}>\n                <div style={{ borderRight: formatColor(filterString) + ' 5px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', backgroundColor: formatBackgroundColor(filterString), display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{\"Stool\"}</div>\n                {cellMap}\n            </div>\n        );\n    }\n    if (filterString === \"排尿\") {\n        var cell = []\n        for (let index = 0; index < 24; index++) {\n            cell.push({\n                value: 0\n            })\n        }\n        const cellMap = cell.map(function (info, index, arr) {\n            return (\n                <div key={index} style={{ borderRight: (index + 1) % 8 == 0 && index != 0 && index != cell.length - 1 ? formatColor(filterString) + ' 5px solid' : formatColor(filterString) + ' 1px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", minHeight: \"50px\" }}>\n                <div style={{ borderRight: formatColor(filterString) + ' 5px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', backgroundColor: formatBackgroundColor(filterString), display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{\"Urine\"}</div>\n                {cellMap}\n            </div>\n        );\n    }\n    return null\n}\n","import React, { Component } from 'react';\nimport './Flootsheetio.scss'\nimport * as RegFilter from '../../Function/FiliterReg'\nimport moment from 'moment';\nimport X2JS from 'x2js';\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as QDCR from '../../Resource/QDC'\nimport * as FlootSheetDataFormat from './FlootSheetDataFormat'\nimport { QDC } from '../../Data/RegularData';\n\nconst generateDateColumn1 = () => {\n    const dateArr = Array.from(Array(24).keys()).map(d => (d + 7) % 24);\n    return (\n        <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n            <div style={{ borderRight: '5px solid transparent', borderBottom: \"1px solid transparent\", borderTop: \"1px solid transparent\", borderCollapse: 'collapse', display: \"flex\", alignItems: \"center\", justifyContent: 'flex-end', fontSize: \"12px\" }}>時間</div>\n            {dateArr.map((time, index) => (\n                <div key={index} style={{ borderRight: (index + 1) % 8 === 0 && index !== 0 && index !== dateArr.length - 1 ? '5px solid transparent' : '1px solid transparent', borderBottom: \"1px solid transparent\", borderTop: \"1px solid transparent\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{time}</div>\n            ))}\n        </div>\n    )\n}\n\n\nclass Flootsheetio extends Component {\n    state = {\n        itemNumber: \"day\",\n        preCID: null,\n        prePickerDate: null,\n        QDC: []\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDate } = this.props\n        const CID = caseinfo.CASEID\n        this.setState({ preCID: CID, prePickerDate: PickerDate })\n        this.getQDC(CID, PickerDate)\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDate } = this.props\n        const CID = caseinfo.CASEID\n        const preCID = this.state.preCID\n        const prePickerDate = this.state.prePickerDate\n        if (CID !== preCID || PickerDate !== prePickerDate) {\n            this.setState({ preCID: CID, prePickerDate: PickerDate })\n            this.getQDC(CID, PickerDate)\n        }\n    }\n\n    ToolTipRender(elementList) {\n        console.log(elementList)\n    }\n\n    getQDC(CID, PickerDate) {\n        const xm2 = new X2JS()\n        const st = moment(PickerDate + (7 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        const et = moment(PickerDate + (31 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        ApiProvider.getQDC(CID, st, et)\n            .then(data => {\n                console.log(xm2.xml2js(data.data))\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                this.setState({\n                    QDC: parsedata\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        // this.setState({ QDC: QDCR.data.outmsg.resconts.rescont })\n    }\n    render() {\n        function nullvalue(value) {\n            if (value === undefined || value === null || value === 0) {\n                return \"\"\n            }\n            return value.toString().trim()\n        }\n        function formatDayData(valueStatus, title) {\n            if (!valueStatus) {\n                var cell = []\n                for (let index = 0; index < 24; index++) {\n                    cell.push({\n                        value: 0\n                    })\n                }\n                const cellMap = cell.map(function (info, index, arr) {\n                    if (title === \"無輸血紀錄\") {\n                        return (\n                            <div key={index} style={{ borderRight: (index + 1) % 8 == 0 && index != 0 && index != cell.length - 1 ? 'rgb(210, 175, 165) 5px solid' : 'rgb(160, 200, 200) 1px solid', borderBottom: \"rgb(160, 200, 200) 1px solid\", borderTop: \"rgb(160, 200, 200) 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n                        );\n                    }\n                    return (\n                        <div key={index} style={{ borderRight: (index + 1) % 8 == 0 && index != 0 && index != cell.length - 1 ? 'rgb(160, 200, 200) 5px solid' : 'rgb(160, 200, 200) 1px solid', borderBottom: \"rgb(160, 200, 200) 1px solid\", borderTop: \"rgb(160, 200, 200) 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n                    );\n                })\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                        <div style={{ borderRight: 'rgb(160, 200, 200) 5px solid', borderBottom: \"rgb(160, 200, 200) 1px solid\", borderTop: \"rgb(160, 200, 200) 1px solid\", borderCollapse: 'collapse', backgroundColor: \"rgb(195, 225, 225)\", display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{title}</div>\n                        {cellMap}\n                    </div>\n                );\n            }\n            return null\n        }\n\n        const { PickerDate } = this.props\n        const { QDC } = this.state\n        const Infusion = FlootSheetDataFormat.formatIOData(QDC, \"輸液\")\n        const IV = FlootSheetDataFormat.formatIV(Infusion)\n        console.log(IV)\n        const ALINE = FlootSheetDataFormat.formatALUA(Infusion)\n        const PICC = FlootSheetDataFormat.formatCVCPICC(Infusion)\n        const filterInfusion = FlootSheetDataFormat.formatData(Infusion, PickerDate, \"輸液\")\n        const groupFilterInfusion = FlootSheetDataFormat.groupArray(filterInfusion)\n        const mapInfusion = FlootSheetDataFormat.mapCellrender(groupFilterInfusion, PickerDate, \"輸液\")\n        // console.log(groupFilterInfusion)\n        const Blood = FlootSheetDataFormat.formatIOData(QDC, \"血品\")\n        const filterBlood = FlootSheetDataFormat.formatData(Blood, PickerDate, \"血品\")\n        const groupFilterBlood = FlootSheetDataFormat.groupArray(filterBlood)\n        const mapBlood = FlootSheetDataFormat.mapCellrender(groupFilterBlood, PickerDate, \"血品\")\n        // console.log(mapBlood)\n        const Eat = FlootSheetDataFormat.formatIOData(QDC, \"進食\")\n        const filterEat = FlootSheetDataFormat.formatData(Eat, PickerDate, \"進食\")\n        const groupFilterEat = FlootSheetDataFormat.groupArray(filterEat)\n        const mapEat = FlootSheetDataFormat.mapCellrender(groupFilterEat, PickerDate, \"進食\")\n\n        //Fourth\n        const BloodLoss = FlootSheetDataFormat.formatIOData(QDC, \"失血\")\n        const filterBloodLoss = FlootSheetDataFormat.formatData(BloodLoss, PickerDate, \"失血\")\n        const groupFilterBloodLoss = FlootSheetDataFormat.groupArray(filterBloodLoss)\n        const mapBloodLoss = FlootSheetDataFormat.mapCellrender(groupFilterBloodLoss, PickerDate, \"失血\")\n\n        const Exudate = FlootSheetDataFormat.formatIOData(QDC, \"滲液\")\n        const filterExudate = FlootSheetDataFormat.formatData(Exudate, PickerDate, \"滲液\")\n        const groupFilterExudate = FlootSheetDataFormat.groupArray(filterExudate)\n        const mapExudate = FlootSheetDataFormat.mapCellrender(groupFilterExudate, PickerDate, \"滲液\")\n\n        const Vomit = FlootSheetDataFormat.formatIOData(QDC, \"嘔吐\")\n        const filterVomit = FlootSheetDataFormat.formatData(Vomit, PickerDate, \"嘔吐\")\n        const groupFilterVomit = FlootSheetDataFormat.groupArray(filterVomit)\n        const mapVomit = FlootSheetDataFormat.mapCellrender(groupFilterVomit, PickerDate, \"嘔吐\")\n\n        const Drainage = FlootSheetDataFormat.formatIOData(QDC, \"引流\")\n        const filterDrainage = FlootSheetDataFormat.formatData(Drainage, PickerDate, \"引流\")\n        const groupFilterDrainage = FlootSheetDataFormat.groupArray(filterDrainage)\n        const mapDrainage = FlootSheetDataFormat.mapCellrender(groupFilterDrainage, PickerDate, \"引流\")\n\n\n        const Puncture = FlootSheetDataFormat.formatIOData(QDC, \"穿刺\")\n        const filterPunctureOut = FlootSheetDataFormat.formatData(Puncture, PickerDate, \"穿刺出\")\n        const groupFilterPunctureOut = FlootSheetDataFormat.groupArray(filterPunctureOut)\n        const mapPunctureOut = FlootSheetDataFormat.mapCellrender(groupFilterPunctureOut, PickerDate, \"穿刺出\")\n\n        const filterPunctureIn = FlootSheetDataFormat.formatData(Puncture, PickerDate, \"穿刺入\")\n        const groupFilterPunctureIn = FlootSheetDataFormat.groupArray(filterPunctureIn)\n        const mapPunctureIn = FlootSheetDataFormat.mapCellrender(groupFilterPunctureIn, PickerDate, \"穿刺入\")\n\n\n        const Dialysis = FlootSheetDataFormat.formatIOData(QDC, \"透析\")\n        const filterDialysisIn = FlootSheetDataFormat.formatData(Dialysis, PickerDate, \"透析入\")\n        const groupFilterDialysisIn = FlootSheetDataFormat.groupArray(filterDialysisIn)\n        const mapDialysisIn = FlootSheetDataFormat.mapCellrender(groupFilterDialysisIn, PickerDate, \"透析入\")\n\n        const filterDialysisOut = FlootSheetDataFormat.formatData(Dialysis, PickerDate, \"透析出\")\n        const groupFilterDialysisOut = FlootSheetDataFormat.groupArray(filterDialysisOut)\n        const mapDialysisOut = FlootSheetDataFormat.mapCellrender(groupFilterDialysisOut, PickerDate, \"透析出\")\n\n        const filterDialysisTotal = FlootSheetDataFormat.formatData(Dialysis, PickerDate, \"透析總\")\n        const groupFilterDialysisTotal = FlootSheetDataFormat.groupArray(filterDialysisTotal)\n        const mapDialysisTotal = FlootSheetDataFormat.mapCellrender(groupFilterDialysisTotal, PickerDate, \"透析總\")\n\n\n\n        const Rinse = FlootSheetDataFormat.formatIOData(QDC, \"沖洗\")\n        const filterRinseIn = FlootSheetDataFormat.formatData(Rinse, PickerDate, \"沖洗入\")\n        const groupFilterRinseIn = FlootSheetDataFormat.groupArray(filterRinseIn)\n        const mapRinseIn = FlootSheetDataFormat.mapCellrender(groupFilterRinseIn, PickerDate, \"沖洗入\")\n\n\n        const filterRinseOut = FlootSheetDataFormat.formatData(Rinse, PickerDate, \"沖洗出\")\n        const groupFilterRinseOut = FlootSheetDataFormat.groupArray(filterRinseOut)\n        const mapRinseOut = FlootSheetDataFormat.mapCellrender(groupFilterRinseOut, PickerDate, \"沖洗出\")\n\n\n        const Stool = FlootSheetDataFormat.formatIOData(QDC, \"排便\")\n        const filterStool = FlootSheetDataFormat.formatData(Stool, PickerDate, \"Stool\")\n        const groupFilterStool = FlootSheetDataFormat.groupArray(filterStool)\n        const mapStool = FlootSheetDataFormat.mapCellrender(groupFilterStool, PickerDate, \"Stool\")\n\n        const filterStimulation = FlootSheetDataFormat.formatData(Stool, PickerDate, \"Stimulation\")\n        const groupFilterStimulation = FlootSheetDataFormat.groupArray(filterStimulation)\n        const mapStimulation = FlootSheetDataFormat.mapCellrender(groupFilterStimulation, PickerDate, \"Stimulation\")\n\n\n        const Urine = FlootSheetDataFormat.formatIOData(QDC, \"排尿\")\n        const filterUrine = FlootSheetDataFormat.formatData(Urine, PickerDate, \"排尿\")\n        const groupFilterUrine = FlootSheetDataFormat.groupArray(filterUrine)\n        const mapUrine = FlootSheetDataFormat.mapCellrender(groupFilterUrine, PickerDate, \"排尿\")\n\n        return (\n\n            <div>\n\n                {/* <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <div style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>I/O</div>\n                </div> */}\n\n                {/* <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>I/O</t2>\n                </div> */}\n                <div style={{ margin: \"0 auto\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", maxWidth: \"1360px\" }}>\n                    {generateDateColumn1()}\n                    {Infusion.length != 0 ? '輸液' : null}\n                    <div style={{ backgroundColor: \"rgb(195, 225, 225)\", display: \"block\", border: \"5px solid rgb(160, 200, 200)\", borderCollapse: \"collapse\" }}>\n                        {formatDayData(IV, \"IV\")}\n                        {formatDayData(ALINE, \"A-LINE/UVA\")}\n                        {formatDayData(PICC, \"CVC/PICC/UVC\")}\n                        {mapInfusion}\n                    </div>\n                    {'血品'}\n                    <div style={{ backgroundColor: \"rgb(220, 205, 200)\", display: \"block\", border: \"5px solid rgb(210, 175, 165)\", borderCollapse: \"collapse\" }}>\n                        {mapBlood}\n                    </div>\n                    {'進食'}\n                    <div style={{ backgroundColor: \"rgb(230, 217, 154)\", display: \"block\", border: \"5px solid rgb(179, 173, 50)\", borderCollapse: \"collapse\" }}>\n                        {mapEat}\n                        {/* {RV} */}\n                    </div>\n                    {'排泄引流'}\n                    <div style={{ backgroundColor: \"rgb(212, 202, 221)\", display: \"block\", border: \"5px solid rgb(140, 118, 162)\", borderCollapse: \"collapse\" }}>\n                        {mapBloodLoss}\n                        {mapExudate}\n                        {mapVomit}\n                        {mapDrainage}\n                        {mapPunctureOut}\n                        {mapPunctureIn}\n                        {mapDialysisIn}\n                        {mapDialysisOut}\n                        {mapDialysisTotal}\n                        {mapRinseIn}\n                        {mapRinseOut}\n                        {mapStool}\n                        {mapStimulation}\n                        {mapUrine}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Flootsheetio;\n","import React, { Component } from \"react\";\nimport Flootsheetio from \"./Flootsheetio\";\n// import Flowsheetvitalsign from './Flootsheetvitalsign'\nimport Vitalxaxis from \"../../Module/Vitalxaxis\";\nimport { DatePicker, Button, Icon } from \"antd\";\nimport moment from \"moment\";\nimport * as ApiProvider from \"../../API/ApiProvider\";\nimport \"./Flootsheetlayout.scss\";\nimport X2JS from \"x2js\";\nimport * as Wardstate from \"../../Function/Wardstate\";\nimport locale from \"antd/es/date-picker/locale/zh_TW\";\nimport { pregancyweeksanddays } from \"../../Function/Wardbedfunction\";\nimport { daysdiff } from \"../../Function/Timeformat\";\nimport * as WardState from \"../../Function/Wardstate\";\n\nclass Flowsheetlayout extends Component {\n  state = {\n    PickerDate: moment(moment().format(\"YYYYMMDD\")).valueOf(),\n    preCID: null,\n    QSPE: [],\n    isLoading: false,\n    // itemlist: []\n  };\n  componentDidMount() {\n    const { caseinfo } = this.props;\n    const CID = caseinfo.CASEID;\n    const date = moment(moment().format(\"YYYYMMDD\")).valueOf();\n    this.setState({ preCID: CID, PickerDate: date });\n    this.ApiData(CID, date);\n  }\n  componentDidUpdate() {\n    const CID = this.props.caseinfo.CASEID;\n    const preCID = this.state.preCID;\n    if (CID !== preCID) {\n      const date = this.state.PickerDate;\n      this.setState({ preCID: CID, PickerDate: date });\n      this.ApiData(CID, date);\n    }\n  }\n  ApiData(CID, DateTime) {\n    const st = moment(DateTime + 7 * 60 * 60 * 1000).format(\"YYYYMMDDHHmm\");\n    const et = moment(DateTime + 31 * 60 * 60 * 1000).format(\"YYYYMMDDHHmm\");\n    this.setState({ isLoading: true });\n    const apiQSPE = ApiProvider.getQSPE(CID, st, et)\n      .then(data => {\n        const dataJson = Wardstate.XM2JSON(data.data);\n        // const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n        if (Array.isArray(dataJson)) {\n          this.setState({ QSPE: dataJson });\n        } else {\n          this.setState({\n            QSPE: [dataJson]\n          });\n        }\n      })\n      .catch(err => {\n        console.log(\n          \"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err)\n        );\n      });\n\n    Promise.all([apiQSPE]).then(() => { this.setState({ isLoading: false }) }).catch(() => { this.setState({ isLoading: false }) });\n  }\n  onDateChange = (date, dateString) => {\n    const CID = this.props.caseinfo.CASEID;\n    this.setState({ preCID: CID, PickerDate: date.valueOf() });\n    this.ApiData(CID, date.valueOf());\n  };\n\n  trainDay = e => {\n    const { caseinfo } = this.props;\n    const { PickerDate } = this.state;\n    const bron = caseinfo.PBASINGNINFO.PBIRTHDT;\n    const bronDate = moment(moment(bron).format(\"YYYYMMDD\")).valueOf();\n\n    const day = 24 * 60 * 60 * 1000;\n\n    switch (e.target.value) {\n      case \"B\":\n        const bTime = PickerDate - day;\n        const bTemp = bTime - 6 * day;\n        bronDate <= bTemp && this.onDateChange(moment(bTime));\n        break;\n      case \"N\":\n        const nTime = moment(moment().format(\"YYYYMMDD\"));\n        this.onDateChange(nTime);\n        break;\n      case \"A\":\n        const aTime = PickerDate + day;\n        const aTemp = moment(moment().format(\"YYYYMMDD\")).valueOf();\n        aTime <= aTemp && this.onDateChange(moment(aTime));\n        break;\n      default:\n        break;\n    }\n  };\n\n\n  render() {\n    const { caseinfo, status } = this.props;\n    const { PickerDate } = this.state\n    const data = this.state.QSPE; //特殊護理事件\n    console.log(data)\n    const splist = data.filter(function (value, index, array) {\n      if (value === undefined) {\n        return null;\n      }\n      const str = value.special;\n      return !(str.match(\"@v\") !== null || str.match(\"@V\") !== null);\n    });\n    const specialListRender = splist.map(function (value, index, arr) {\n      const time = moment(value.rec_dat.toString().trim() + value.rec_tim.toString().trim(), \"YYYYMMDDHHmm\").format(\"HH:mm\")\n      return (\n        <div key={index} style={{ display: \"flex\", color: \"rgba(59, 151, 225, 1)\" }}>\n          {time}\n          {\" \"}\n          {value.special.toString().trim()}\n        </div>\n      );\n    });\n    function valueFormat(value) {\n      if (value === \"\" || value === null || value === undefined) {\n        return \"--\";\n      }\n      return value.toString();\n    }\n\n    const weightList = caseinfo.WEIGHT;\n    const Birthday = caseinfo.PBASINGNINFO.PBIRTHDT;\n    const BornWeight = WardState.BornWeight(weightList, Birthday);\n    const DayWeight = WardState.selectweight(weightList, PickerDate);\n    return (\n      <div>\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <DatePicker\n            getCalendarContainer={triggerNode => triggerNode.parentNode}\n            disabledDate={current => {\n              return (\n                current > moment().startOf(\"day\") ||\n                current <\n                moment(\n                  caseinfo.PBASINGNINFO.PBIRTHDT.toString(),\n                  \"YYYYMMDD\"\n                ).endOf()\n              );\n            }}\n            width={120}\n            value={moment(this.state.PickerDate)}\n            allowClear={false}\n            onChange={this.onDateChange}\n          />\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"1fr 1fr 1fr\",\n              gridColumnGap: \"1px\",\n              padding: \"2px 10px 0px 10px\"\n            }}\n          >\n            <Button\n              value=\"B\"\n              shape=\"circle\"\n              icon=\"left-circle\"\n              onClick={this.trainDay}\n            />\n            <Button\n              value=\"N\"\n              shape=\"circle\"\n              icon=\"minus-circle\"\n              onClick={this.trainDay}\n            />\n            <Button\n              value=\"A\"\n              shape=\"circle\"\n              icon=\"right-circle\"\n              onClick={this.trainDay}\n            />\n          </div>\n          <div style={{ fontSize: \"16px\" }}>\n            當日年齡: {WardState.bornstatusFormat(status.week, status.day)} <spam style={{ fontWeight: \"600\", color: \"black\" }}>{WardState.CalculateAgeFromPickerDate(status, this.state.PickerDate)}</spam>\n          </div>\n          <div style={{ fontSize: \"16px\" }}>\n            當日體重: {WardState.valueFormat(status.BornWeight)}<spam style={{ fontWeight: \"600\", color: \"black\" }}>{WardState.WeightListFilter(caseinfo.WEIGHT, this.state.PickerDate)}g</spam>\n          </div>\n        </div>\n        <div>\n          <div\n            style={{\n              backgroundColor: \"#71b0e46e\",\n              borderTopLeftRadius: \"4px\",\n              borderTopRightRadius: \"4px\",\n              height: \"36px\",\n              padding: \"0px 16px\",\n              display: \"flex\",\n              alignItems: \"center\"\n            }}\n          >\n            <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>\n              特殊護理事件：\n            </t2>\n            <t2\n              style={{\n                width: \"20px\",\n                height: \"20px\",\n                borderRadius: \"99em\",\n                background: \"black\",\n                color: \"white\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              }}\n            >\n              {splist.length}\n            </t2>\n          </div>\n          <div style={{ maxHeight: \"100px\", width: \"100%\", overflow: \"auto\", paddingLeft: \"16px\" }}>\n            {specialListRender}\n          </div>\n        </div>\n        <div className=\"flootsheetlayout\">\n          {\n            this.state.isLoading\n              ? (\n                <Icon type=\"loading\" />\n              )\n              : (\n                <Flootsheetio\n                  PickerDate={this.state.PickerDate}\n                  caseinfo={caseinfo}\n                ></Flootsheetio>\n              )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Flowsheetlayout;\n","import React, { Component } from 'react';\nimport './Examchart.scss';\nimport * as d3 from \"d3\";\nimport moment from 'moment';\n\nclass Examchart extends Component {\n    state = {\n        change: false\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\".tooltip\").remove()\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    decideValue = (value) => {\n        const tempValue = typeof (value) !== 'String' ? value.toString() : value\n        const { max, min } = this.props\n        if (tempValue === null || tempValue === undefined) {\n            return null\n        }\n        if (tempValue.indexOf('<') != -1) {\n            return min\n        } else if (tempValue.indexOf('>') != -1) {\n            return max\n        } else {\n            return tempValue\n        }\n    }\n\n    drawChart() {\n        const { id_key, svg_id, max, min, lineChart } = this.props\n\n        const sT = new Date(moment(lineChart[0].date, 'YYYYMMDD').valueOf() - 24 * 60 * 60 * 1000)\n        const endT = new Date(moment(lineChart[lineChart.length - 1].date, 'YYYYMMDD') + 24 * 60 * 60 * 1000)\n\n        const fixLineChart = lineChart.filter(data => {\n            return data.value !== \"\" && data.value !== null && data.value !== undefined\n        })\n\n        // 邊界\n        const margin = { top: 20, right: 20, bottom: 30, left: 50 },\n            width = 1000 - margin.left - margin.right,\n            height = 500 - margin.top - margin.bottom;\n\n        let x = d3.scaleTime().domain([sT, endT]).range([0, width - margin.left - margin.right])\n        let y = d3.scaleLinear().domain([min, max]).range([height, 0])\n\n        var div = d3.select(\"#\" + id_key).append(\"div\")\n            .attr(\"class\", \"tooltip\")\n            .style(\"opacity\", 0);\n\n        let svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            .style(\"height\", height + margin.top + margin.bottom)\n            .style(\"width\", width + margin.left + margin.right)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        svg.append('g')\n            .call(d3.axisBottom(x).ticks(5).tickFormat(d3.timeFormat('%m/%d')))\n            .attr(\"transform\", `translate(0,${height})`)\n            .style('stroke', 'black')\n            .style('stroke-width', 1);\n\n        svg.append('g')\n            .call(d3.axisLeft(y))\n            .style('stroke', 'black')\n            .style('stroke-width', 1);\n\n        let line = d3.line()\n            .x(d => x(moment(d.date, 'YYYYMMDDHHmm').toDate()))\n            .y(d => {\n                const tempValue = this.decideValue(d.value)\n                return y(tempValue)\n            })\n            .curve(d3.curveMonotoneX);\n\n        let lines = svg.append('g').attr('class', 'lines');\n\n        lines.selectAll(\"circle\")\n            .data(fixLineChart)\n            .enter()\n            .append('g')\n            .append(\"circle\")\n            .attr(\"class\", \"lines-circle\")\n            .attr(\"cy\", d => {\n                const tempValue = this.decideValue(d.value)\n                return y(tempValue)\n            })\n            .attr(\"cx\", d => x(moment(d.date, 'YYYYMMDDHHmm').toDate()))\n            .attr('r', 5)\n            .on(\"mouseover\", function (d) {\n                div.transition()\n                    .duration(100)\n                    .style(\"opacity\", .9);\n                div.html(`檢驗時間 : ${d.date} <br/> 檢驗數值 : ${d.value}`)\n                    .style(\"left\", (d3.event.pageX - 200) + \"px\")\n                    .style(\"top\", (d3.event.pageY - 150) + \"px\");\n            })\n            .on(\"mouseout\", function (d) {\n                div.transition()\n                    .duration(300)\n                    .style(\"opacity\", 0);\n            })\n            .style('opacity', 1)\n            .style('fill', \"blue\");\n\n        lines\n            .selectAll('.line-group')\n            .data(fixLineChart)\n            .enter()\n            .append('g')\n            .attr('class', 'line-group')\n            .append('path')\n            .attr('class', 'line')\n            .attr('d', line(fixLineChart))\n            .style('stroke', 'black')\n            .style('fill', 'none');\n    }\n\n    render() {\n        function formatString(formatString) {\n            console.log(formatString)\n            if (formatString === \"Ca++\") {\n                return <span style={{ color: \"rgba(0, 0, 0, 0.85)\", fontSize: \"20px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>Ca<sup>2+</sup></span>\n            }\n            if (formatString === \"Mg++\") {\n                return <span style={{ color: \"rgba(0, 0, 0, 0.85)\", fontSize: \"20px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>Mg<sup>2+</sup></span>\n            }\n            if (formatString === \"pCO2\") {\n                return <span style={{ color: \"rgba(0, 0, 0, 0.85)\", fontSize: \"20px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>pCO<sub>2</sub></span>\n            }\n            if (formatString === \"pO2\") {\n                return <span style={{ color: \"rgba(0, 0, 0, 0.85)\", fontSize: \"20px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>pO<sub>2</sub></span>\n            }\n            if (formatString === \"HCO3\") {\n                return <span style={{ color: \"rgba(0, 0, 0, 0.85)\", fontSize: \"20px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>HCO<sub>3</sub></span>\n            }\n            if (formatString === \"FiO2\") {\n                return <span style={{ color: \"rgba(0, 0, 0, 0.85)\", fontSize: \"20px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>FiO<sub>2</sub></span>\n            }\n            if (formatString == 'Band' || formatString == 'Seg' || formatString == 'Lym') {\n                return (\n                    <div>\n                        <span style={{ color: \"rgba(0, 0, 0, 0.85)\", fontSize: \"20px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>{formatString}</span>\n                        <span style={{ color: \"rgba(0, 0, 0, 0.65)\", fontSize: \"16px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>%</span>\n                    </div>\n                )\n            }\n            return <span style={{ color: \"rgba(0, 0, 0, 0.85)\", fontSize: \"20px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>{formatString}</span>\n        }\n        const { id_key, lineCharttitle } = this.props\n        console.log(lineCharttitle)\n        const title = lineCharttitle == 'Band' || lineCharttitle == 'Seg' || lineCharttitle == 'Lym' ? true : false\n        return (\n            <div>\n                <div style={{ padding: \"0px 24px 16px\", color: \"rgba(0, 0, 0, 0.65)\", background: \"#fff\", borderBottom: \"1px solid #e8e8e8\", borderRadius: \"4px 4px 0 0\" }}>\n                    {formatString(lineCharttitle)}\n                </div>\n                <div id={id_key}></div>\n            </div>\n        );\n    }\n}\n\nexport default Examchart;\n","import React, { Component } from 'react';\nimport { Select, Modal } from 'antd';\n// import * as ApiGithub from '../../API/ApiGithub'\nimport * as RegularData from '../../Data/RegularData'\nimport moment from 'moment'\nimport Examchart from './Examchart'\nimport { Button } from 'antd';\nimport './ExamLabview.scss';\nimport { fixControlledValue } from 'antd/lib/input/Input';\n\nclass Labview extends Component {\n    state = {\n        Selectus: this.props.SelectStatus,\n        PickerDateRange: [moment(), moment()],\n        visible: false,\n        lineCharttitle: '',\n        lineChart: [],\n        IRParse: RegularData.InspectionReportExtent()\n    }\n    componentDidMount() {\n        // ApiGithub.getExamReport()\n        //     .then(data => {\n        //         this.setState({\n        //             TitleList: data.data\n        //         })\n        //     })\n        //     .catch(err=>{\n        //         console.log(\"GithubAPI NG\" + err)\n        //     })\n        // this.setState({\n        //     TitleList: RegularData.ExamReportJson\n        // })\n    }\n\n    callbackDateFunction = (value) => {\n        this.props.parentDateCallback(value);\n    }\n    handleChange = (value) => {\n        this.callbackDateFunction(value)\n        this.setState({\n            Selectus: value\n        })\n    }\n    titleSearch = (value) => {\n        this.props.parentTitleCallback(value.target.value);\n    }\n    CellRender() {\n        const { DataList } = this.props\n        if (DataList.length === 0) {\n            return (\n                <div style={{ display: \"grid\", gridTemplateColumns: \"110px 1fr\" }}>\n                    <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        無資料\n                    </div>\n                </div>\n            )\n        }\n        const DataListCell = DataList.map(function (element, index) {\n            let isSameDay = false;\n            if (index < DataList.length - 1) {\n                isSameDay = moment(element.Time).isSame(moment(DataList[index + 1].Time), 'day');\n            }\n            if (index === DataList.length - 1) {\n                isSameDay = true;\n            }\n            const cellRender = element.Data.map(function (info, index) {\n                return (\n                    <centerstyle key={index} style={{ flex: 1, borderLeft: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\" }}>\n                        <t3>{info}</t3>\n                    </centerstyle>\n                );\n            })\n            const time = moment(element.Time, \"YYYY/MM/DDHH:mm:ss\").format(\"MM/DD HH:mm\")\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"110px 1fr\", height: \"50px\", borderBottom: isSameDay ? \"rgba(238, 238, 238, 1) 1px solid\" : '#989898 1px solid' }}>\n                    <centerstyle style={{ display: \"flex\" }}>\n                        <t3>{time}</t3>\n                    </centerstyle>\n                    <div style={{ display: \"flex\", gridTemplateColumns: \"repeat(9,1fr)\" }}>\n                        {cellRender}\n                    </div>\n                </div>\n            );\n        })\n        return DataListCell\n    }\n\n    fixLineChartData(element) {\n        const { DataList } = this.props;\n        const value = element.value;\n        console.log(value)\n        const number = element.index;\n        let showDate = DataList.map(data => {\n            let temp = {}\n            temp['date'] = data.Time;\n            temp['value'] = data.Data[number];\n            return temp\n        })\n        console.log(showDate)\n        if (showDate === null || showDate.length === 0) {\n            return null\n        }\n\n        showDate.sort((x, y) => {\n            return moment(x.date, 'YYYYMMDDHHmm').valueOf() - moment(y.date, 'YYYYMMDDHHmm').valueOf()\n        })\n\n        this.setState({\n            lineCharttitle: value,\n            lineChart: showDate,\n        }, () => { this.showModel() });\n    }\n    showModel = () => {\n        this.setState({\n            visible: true,\n        });\n    }\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    charttableview = () => {\n        const { IRParse, Selectus, lineCharttitle, lineChart } = this.state\n        console.log(lineCharttitle)\n        if (lineCharttitle === '') { return null }\n\n        const key = Object.keys(IRParse)[Selectus]\n        const rangeKey = IRParse[key]\n        const range = rangeKey[lineCharttitle]\n        const itemValue = []\n        //主要崩潰點在這 因為你會了key但是lineCharttitle還有值 這樣會變成undefined這樣就crash了 你下面定義是有range情況下的max是不是undefined 但是你本身range就是undefined 所以會找不到range中的max\n        if (range === undefined) { return null }\n        console.log(range)\n        const max = range.max !== undefined ? range.max : Math.max(...itemValue)\n        const min = range.min !== undefined ? range.min : Math.min(...itemValue)\n\n        return (\n            <div style={{ margin: \"20px 0px\" }}>\n                <Examchart lineChart={lineChart} lineCharttitle={lineCharttitle} max={max} min={min} id_key={\"svgExamID\"} svg_id={\"svgExamSVG\"}></Examchart>\n            </div>\n        );\n    }\n\n    render() {\n        const { Option } = Select;\n        const visible = this.state.visible\n        // const lineCharttitle = this.state.lineCharttitle\n        const handleOk = this.handleOk\n        const handleCancel = this.handleCancel\n        // const fixLineChartData = this.fixLineChartData\n        const charttableview = this.charttableview()\n        const LabDataList = RegularData.ExamReportJson()\n        //0:CBC 1:電解質 2:肝功能 3:心臟 4:凝血 5:GAS 6:Glucose\n        const SelectList = LabDataList.map(function (info, index) {\n            // console.log(info.index)\n            function StringFormat(formatString) {\n                if (formatString === \"電解質與腎功能檢驗:Na、K、Cl、Ca++、Ca、Mg++、P、BUN、Cr\") {\n                    return <div style={{ fontSize: \"12px\" }}>電解質與腎功能檢驗:Na、K、Cl、Ca<sup>2+</sup>、Ca、Mg<sup>2+</sup>、P、BUN、Cr</div>\n                }\n                if (formatString === \"Gas檢驗:PH、pCO2、pO2、HCO3、BE、O2Sat、FiO2\") {\n                    return <div style={{ fontSize: \"12px\" }}>Gas檢驗:pH、pCO<sub>2</sub>、pO<sub>2</sub>、HCO<sub>3</sub>、BE、O<sub>2</sub>Sat、FiO<sub>2</sub></div>\n                }\n                if (formatString === \"GAS(Additionary)檢驗:Hgb、Hct、Na、K、Ca++、BUN、Cr\") {\n                    return <div style={{ fontSize: \"12px\" }}>GAS(Additionary)檢驗:Hgb、Hct、Na、K、Ca<sup>2+</sup>、BUN、Cr</div>\n                }\n                return <div style={{ fontSize: \"12px\" }}>{formatString}</div>\n            }\n            const string = StringFormat(info.select)\n            return (\n                <Option key={info.index} value={info.index} style={{ fontSize: \"12px\" }}>{string}</Option>\n            );\n        })\n        const SelectTitlefilter = LabDataList.filter(function (element, index) {\n            const selectdata = Select\n            return element.index = selectdata\n        })\n        if (SelectTitlefilter.length === 0) {\n            return null\n        }\n        const SelectTitle = SelectTitlefilter[this.state.Selectus].title\n        const SelectTitleRender = SelectTitle.map((info, index) => {\n            function formatString(formatString) {\n                if (formatString === \"Ca++\") {\n                    return <div style={{ fontSize: \"13px\" }}>Ca<sup>2+</sup></div>\n                }\n                if (formatString === \"Mg++\") {\n                    return <div style={{ fontSize: \"13px\" }}>Mg<sup>2+</sup></div>\n                }\n                if (formatString === \"pCO2\") {\n                    return <div style={{ fontSize: \"13px\" }}>pCO<sub>2</sub></div>\n                }\n                if (formatString === \"pO2\") {\n                    return <div style={{ fontSize: \"13px\" }}>pO<sub>2</sub></div>\n                }\n                if (formatString === \"HCO3\") {\n                    return <div style={{ fontSize: \"13px\" }}>HCO<sub>3</sub></div>\n                }\n                if (formatString === \"FiO2\") {\n                    return <div style={{ fontSize: \"13px\" }}>FiO<sub>2</sub></div>\n                }\n                if (formatString === \"O2Sat\") {\n                    return <div style={{ fontSize: \"13px\" }}>O<sub>2</sub>Sat</div>\n                }\n                return formatString\n            }\n            const infoString = formatString(info)\n            const element = {\n                value: info,\n                index: index\n            }\n            return (\n                <centerstyle style={{ flex: 1 }} key={index}>\n                    <Button style={{ height: \"26px\", backgroundColor: \"transparent\", border: \"2px white solid\", display: \"flex\", gridTemplateColumns: \"repeat(9,1fr)\" }} index={index} value={info} onClick={() => { this.fixLineChartData(element) }}>{infoString}</Button>\n                </centerstyle>\n            );\n        })\n        const ExamLab = this.CellRender()\n\n        return (\n            <div>\n                <Modal\n                    visible={visible}\n                    onOk={handleOk}\n                    onCancel={handleCancel}\n                    width={1200}\n                    footer={null}>\n                    {charttableview}\n                </Modal>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderRadius: \"4px 4px 0 0\", height: \"36px\", padding: \"0px 16px\", display: \"grid\", gridTemplateColumns: \"120px 1fr\", alignItems: \"center\" }}>\n                    <div style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>累積報告</div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"100px 1fr\", gridColumnGap: \"5px\" }}>\n                        <t2 style={{ display: \"flex\", alignItems: \"center\" }}>檢驗類別：</t2>\n                        <div className=\"Select-Dropdown\" style={{ display: \"flex\", alignItems: \"center\" }}>\n                            <Select getPopupContainer={triggerNode => triggerNode.parentNode} defaultValue={this.state.Selectus} style={{ width: \"100%\" }} onChange={this.handleChange}>\n                                {SelectList}\n                            </Select>\n                        </div>\n                    </div>\n                </div>\n                <div style={{ backgroundColor: \"rgba(226, 237, 243,.5)\", height: \"30px\", display: \"grid\", gridTemplateColumns: \"110px 1fr\", alignItems: \"center\" }}>\n                    <centerstyle>\n                        <t2 style={{ display: \"flex\", justifyItems: \"center\" }}>檢驗時間</t2>\n                    </centerstyle>\n                    <div style={{ display: \"flex\" }} onClick={this.titleSearch}>\n                        {SelectTitleRender}\n                    </div>\n                </div>\n                <div style={{ border: \"1px solid rgba(232, 232, 232, 1)\", borderRadius: \"0 0 4px 4px\", borderCollapse: \"collapse\" }}>\n                    <div style={{ minHeight: \"calc(100vh - 305px)\", maxHeight: \"calc(100vh - 305px)\", overflowY: \"auto\" }}>\n                        {ExamLab}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Labview;\n","export function ExamReportJson() {\n    return [\n        {\n            \"select\": \"CBC檢驗:WBC、Band、Seg、Lymp、Hgb、Hct、PLT\",\n            \"index\": 0,\n            \"title\": [\n                \"WBC\",\n                \"Band\",\n                \"Seg\",\n                \"Lymp\",\n                \"Hgb\",\n                \"Hct\",\n                \"PLT\"\n            ]\n        },\n        {\n            \"select\": \"電解質與腎功能檢驗:Na、K、Cl、Ca++、Ca、Mg++、P、BUN、Cr\",\n            \"index\": 1,\n            \"title\": [\n                \"Na\",\n                \"K\",\n                \"Cl\",\n                \"Ca++\",\n                \"Ca\",\n                \"Mg++\",\n                \"P\",\n                \"BUN\",\n                \"Cr\"\n            ]\n        },\n        {\n            \"select\": \"肝功能檢驗:ALT、AST、TBil、DBil、r-GT、Alk-P、ALB\",\n            \"index\": 2,\n            \"title\": [\n                \"ALT\",\n                \"AST\",\n                \"TBil\",\n                \"DBil\",\n                \"r-GT\",\n                \"Alk-P\",\n                \"ALB\"\n            ]\n        },\n        {\n            \"select\": \"早產兒追蹤:Iron、TIBC、FeSat、LDH、Alk-P\",\n            \"index\": 3,\n            \"title\": [\n                \"Iron\",\n                \"TIBC\",\n                \"FeSat\",\n                \"LDH\",\n                \"Alk-P\"\n            ]\n        },\n        {\n            \"select\": \"心臟功能檢驗:CK、CK-MB、BNP、Trop-T\",\n            \"index\": 4,\n            \"title\": [\n                \"CK\",\n                \"CK-MB\",\n                \"BNP\",\n                \"Trop-T\"\n            ]\n        },\n        {\n            \"select\": \"凝血功能檢驗:PT、APTT、INR\",\n            \"index\": 5,\n            \"title\": [\n                \"PT\",\n                \"APTT\",\n                \"INR\"\n            ]\n        },\n        {\n            \"select\": \"Gas檢驗:PH、pCO2、pO2、HCO3、BE、O2Sat、FiO2\",\n            \"index\": 6,\n            \"title\": [\n                \"pH\",\n                \"pCO2\",\n                \"pO2\",\n                \"HCO3\",\n                \"BE\",\n                \"O2Sat\",\n                \"FiO2\"\n            ]\n        },\n        ,\n        {\n            \"select\": \"GAS(Additionary)檢驗:Hgb、Hct、Na、K、Ca++、BUN、Cr\",\n            \"index\": 7,\n            \"title\": [\n                \"Hgb\",\n                \"Hct\",\n                \"Na\",\n                \"K\",\n                \"Ca++\",\n                \"BUN\",\n                \"Cr\"\n            ]\n        },\n        {\n            \"select\": \"Glucose檢驗:Glu(BedSide, Lab)\",\n            \"index\": 8,\n            \"title\": [\n                \"Glu(BedSide)\",\n                \"Glu(Lab)\"\n            ]\n        },\n        {\n            \"select\": \"黃疸檢查:TCB、MicroBil、TBil、DBil\",\n            \"index\": 9,\n            \"title\": [\n                \"TCB\",\n                \"MicroBil\",\n                \"TBil\",\n                \"DBil\"\n            ]\n        },\n        {\n            \"select\": \"感染指數:WBC、Band、Seg、Lymp、PCT、CRP\",\n            \"index\": 10,\n            \"title\": [\n                \"WBC\",\n                \"Band\",\n                \"Seg\",\n                \"Lymp\",\n                \"PCT\",\n                \"CRP\"\n            ]\n        }\n    ]\n}\nexport function FlagReg() {\n    return [\n        {\n            item: \"Respirator\",\n            \"ParseValueUD\": [\n                \"Restriction\"\n            ],\n            \"ParseValueTRT\": []\n        },\n        {\n            item: \"TPN\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"NPO\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"Anti\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"Foley\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"Drain\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        }\n    ]\n}\nexport function QDC() {\n    return {\n        \"Feeding\": [\n            \"進食\"\n        ],\n        \"IV\": [\n            \"血品\",\n            \"輸液\"\n        ],\n        \"Urine\": [\n            \"排尿\"\n        ],\n        \"Other\": [\n            \"失血\",\n            \"滲液\",\n            \"嘔吐\",\n            \"引流\",\n            \"穿刺\",\n            \"透析\",\n            \"沖洗\",\n            \"排便\"\n        ]\n    }\n}\n\nexport function ChronicLab() {\n    return {\n        \"Biochemical\": [\n        ],\n        \"Blood\": [\n            \"BLOOD\"\n        ],\n        \"Cultivate\": [\n\n        ],\n        \"GAS\": [\n\n        ],\n        \"Glu\": [\n\n        ],\n        \"Radiation\": [\n        ]\n    }\n}\n\nexport function NonLabExamReportParser() {\n    return [\n        {\n            parser_name: \"CBC\",\n            apply_condition: {\n                name: \"CBC|WBC|HB|PLT\",\n                sample: null,\n                lab: null,\n                start_time: null,\n                end_time: null,\n            },\n            mappings: [\n                {\n                    key: \"Hb\",\n                    regex_str: \"HB:\\\\s+(\\\\d+(.\\\\d)?)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"WBC\",\n                    regex_str: \"wbc:\\\\s+(\\\\d+)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"PLT\",\n                    regex_str: \"plt:\\\\s+(\\\\d+)\",\n                    regex_flags: 'ism',\n                    position: 1\n                }\n            ],\n            summary: \"[WBC;-]/[Hb;]/[PLT;-]\"\n        },\n        {\n            parser_name: \"Atypical Respiratory Panel\",\n            apply_condition: {\n                name: \"Atypical Respiratory Panel|CBC|PH|HB|PO2\",\n                sample: null,\n                lab: null,\n                start_time: null,\n                end_time: null,\n            },\n            mappings: [\n                {\n                    key: \"Hb\",\n                    regex_str: \"Hb:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"PH\",\n                    regex_str: \"PH:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"PO2\",\n                    regex_str: \"PO2:\\\\s+\\\\((\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"FIO2\",\n                    regex_str: \"FIO2:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"HCO3\",\n                    regex_str: \"HCO3:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                }\n            ],\n            summary: \"[PH;-]/[Hb;-]/[PO2;-]/[FIO2;-]/[HCO3;-]\"\n        }\n    ]\n}\n\nexport function NonLabExamORDListParser() {\n    return [\n        {\n            parser_name: \"ORDLIST\",\n            apply_condition: {\n                name: \"ORDLIST\",\n                sample: null,\n                lab: null,\n                start_time: null,\n                end_time: null,\n            },\n            mappings: [\n                {\n                    key: \"飲食類別\",\n                    regex_str: \"(CHEST\\\\s+KUB\\\\s+\\\\(FOR\\\\s+BABY\\\\)\\\\s+PORTABLE)|(BRAIN\\\\s+ECHO\\\\s+\\\\(NBD\\\\))\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"管路類別\",\n                    regex_str: \"(BLOOD\\\\s+GAS)|(Atypical\\\\s+Respiratory\\\\s+Panel)|(BLOOD\\\\s+PRODUCTS\\\\s+IRRADIATION)|(Aliqot\\\\s+and\\\\s+storage\\\\s+of\\\\s+blood)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"呼吸類別\",\n                    regex_str: \"(NT-pro-BNP)|(ANTIBODY\\\\s+SCREENING)\",\n                    regex_flags: 'ism',\n                    position: 1\n                }\n            ],\n            summary: \"[CHEST KUB;-]/[BLOOD GAS;-]/[Glucose;-]\"\n        }\n    ]\n}\n\nexport function InspectionReportExtent() {\n    return {\n        \"CBC\": {\n            \"WBC\": {\n                \"min\": 0,\n                \"max\": 40000\n            },\n            \"Band\": {\n                \"min\": 0,\n                \"max\": 10\n            },\n            \"Seg\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"Lymp\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"Hgb\": {\n                \"min\": 6,\n                \"max\": 22\n            },\n            \"Hct\": {\n                \"min\": 10,\n                \"max\": 70\n            },\n            \"PLT\": {\n                \"min\": 0,\n                \"max\": 700000\n            }\n        },\n        \"電解質與腎功能\": {\n            \"Na\": {\n                \"min\": 120,\n                \"max\": 160\n            },\n            \"K\": {\n                \"min\": 0,\n                \"max\": 8\n            },\n            \"Cl\": {\n                \"min\": 80,\n                \"max\": 120\n            },\n            \"Ca++\": {\n                \"min\": 0.5,\n                \"max\": 1.8\n            },\n            \"Ca\": {\n                \"min\": 6,\n                \"max\": 12\n            },\n            \"Mg++\": {\n                \"min\": 0,\n                \"max\": 8\n            },\n            \"P\": {\n                \"min\": 0,\n                \"max\": 10\n            },\n            \"BUN\": {\n                \"min\": 0,\n                \"max\": 60\n            },\n            \"Cr\": {\n                \"min\": 0,\n                \"max\": 5\n            }\n        },\n        \"肝功能\": {\n            \"ALT\": {\n                \"min\": 0,\n                \"max\": 200\n            },\n            \"AST\": {\n                \"min\": 0,\n                \"max\": 200\n            },\n            \"TBil\": {\n                \"min\": 0,\n                \"max\": 30\n            },\n            \"DBil\": {\n                \"min\": 0,\n                \"max\": 20\n            },\n            \"r-GT\": {\n                \"min\": 0,\n                \"max\": 200\n            },\n            \"Alk-P\": {\n                \"min\": 0,\n                \"max\": 1600\n            },\n            \"ALB\": {\n                \"min\": 0,\n                \"max\": 5\n            }\n        },\n        \"早產兒追蹤\": {\n            \"Iron\": {\n                \"min\": 0,\n                \"max\": 300\n            },\n            \"TIBC\": {\n                \"min\": 0,\n                \"max\": 300\n            },\n            \"FeSat\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"LDH\": {\n                \"min\": 0,\n                \"max\": 2000\n            },\n            \"Alk-P\": {\n                \"min\": 0,\n                \"max\": 1600\n            }\n        },\n        \"心臟功能\": {\n            \"CK\": {\n                \"min\": 0,\n                \"max\": 6000\n            },\n            \"CK-MB\": {\n                \"min\": 0,\n                \"max\": 2000\n            },\n            \"BNP\": {\n                \"min\": 0,\n                \"max\": 20000\n            },\n            \"Trop-T\": {\n                \"min\": 0,\n                \"max\": 1000\n            }\n        },\n        \"凝血功能\": {\n            \"PT\": {\n                \"min\": 0,\n                \"max\": 120\n            },\n            \"APTT\": {\n                \"min\": 0,\n                \"max\": 120\n            },\n            \"INR\": {\n                \"min\": 0,\n                \"max\": 4\n            }\n        },\n        \"Gas\": {\n            \"pH\": {\n                \"min\": 6.5,\n                \"max\": 7.7\n            },\n            \"pCO2\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"pO2\": {\n                \"min\": 0,\n                \"max\": 200\n            },\n            \"HCO3\": {\n                \"min\": 0,\n                \"max\": 40\n            },\n            \"BE\": {\n                \"min\": -30,\n                \"max\": 20\n            },\n            \"O2Sat\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"FiO2\": {\n                \"min\": 0,\n                \"max\": 100\n            }\n        },\n        \"GAS(Additionary)\": {\n            \"Hgb\": {\n                \"min\": 6,\n                \"max\": 22\n            },\n            \"Hct\": {\n                \"min\": 10,\n                \"max\": 70\n            },\n            \"Na\": {\n                \"min\": 120,\n                \"max\": 160\n            },\n            \"K\": {\n                \"min\": 0,\n                \"max\": 8\n            },\n            \"Ca++\": {\n                \"min\": 0.5,\n                \"max\": 1.8\n            },\n            \"BUN\": {\n                \"min\": 0,\n                \"max\": 60\n            },\n            \"Cr\": {\n                \"min\": 0,\n                \"max\": 5\n            }\n        },\n        \"Glucose\": {\n            \"Glu(BedSide)\": {\n                \"min\": 0,\n                \"max\": 300\n            },\n            \"Glu(Lab)\": {\n                \"min\": 0,\n                \"max\": 300\n            }\n        },\n        \"黃疸\": {\n            \"TCB\": {\n                \"min\": 0,\n                \"max\": 30\n            },\n            \"MicroBil\": {\n                \"min\": 0,\n                \"max\": 30\n            },\n            \"TBil\": {\n                \"min\": 0,\n                \"max\": 30\n            },\n            \"DBil\": {\n                \"min\": 0,\n                \"max\": 20\n            }\n        },\n        \"感染指數\": {\n            \"WBC\": {\n                \"min\": 0,\n                \"max\": 40000\n            },\n            \"Band\": {\n                \"min\": 0,\n                \"max\": 10\n            },\n            \"Seg\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"Lymp\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"PCT\": {\n                \"min\": 0,\n                \"max\": 20\n            },\n            \"CRP\": {\n                \"min\": 0,\n                \"max\": 20\n            }\n        }\n    }\n\n}\n","import React, { Component } from 'react';\nimport './ExamNonlabtablecell.scss'\n// import { Nonlablist } from '../../Data/Wardviewdata'\nimport moment from 'moment'\nimport NonlabviewtableCell from '../CrossSectionView/NonlabviewtableCell'\n// import { Modal } from 'antd';\n// import InsReportModal from '../ExamReportModal'\n\nclass Examnonlabviewtable extends Component {\n    state = {\n        visible: false\n    }\n\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            const resultKey = mapping.sample ? mapping.key + \"-\" + mapping.sample : mapping.key\n            allResult[resultKey] = []\n        });\n        allResult[\"全部類別\"] = []\n        inputs.forEach(input => {\n            let content = input.ORPROCED;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\" && (mapping.sample ? input.ORSPCN1.trim() === mapping.sample : true)) {\n                    const resultKey = mapping.sample ? mapping.key + \"-\" + mapping.sample : mapping.key\n                    allResult[resultKey].push(input)\n                }\n            });\n\n            allResult[\"全部類別\"].push(input)\n        });\n\n        return allResult;\n    }\n\n    render() {\n        function listforstatus(ordlist, ressect, pickerdaterange, StateMode, InputMode) {\n            if (StateMode !== 0) {\n                /*\n                預設 \n                全部 StateMode == 0\n                已開單 StateMode == 1, data.ORSTATUS == 30\n                已簽收 StateMode == 2, data.ORSTATUS == 31\n                已發報告 StateMode == 3, data.ORSTATUS == 32\n                */\n                const changeState = { '1': '30', '2': '31', '3': '32' }\n                ordlist = ordlist.filter(data => {\n                    return data.ORSTATUS === changeState[StateMode.toString()]\n                })\n            }\n\n            if (InputMode !== null) {\n                const regex = new RegExp(InputMode, \"i\");\n                ordlist = ordlist.filter(data => {\n                    return data.ORPROCED.match(regex) !== null\n                })\n            }\n\n            let status_report = []\n            const et = pickerdaterange[1].valueOf() + (24 * 60 * 60 * 1000)\n            const st = pickerdaterange[0].valueOf()\n\n            if (Array.isArray(ordlist) && Array.isArray(ressect)) {\n                for (let index = 0; index < ordlist.length; index++) {\n                    const element = ordlist[index];\n                    const time = element.ORBGNDT.toString().trim() + element.ORBGNTM.toString().trim()\n                    const timeStamp = moment(time, 'YYYY-MM-DDHHmmss').valueOf()\n                    if (timeStamp > st && timeStamp < et) {\n                        const status = ressect.find(function (value, index, array) {\n                            return value.ORDCLNM === element.ORDCLNM\n                        })\n                        if (status) {\n                            status_report.push({\n                                \"status\": true,\n                                \"element\": element\n                            })\n                        }\n                        else {\n                            status_report.push({\n                                \"status\": false,\n                                \"element\": element\n                            })\n\n                        }\n                    }\n                }\n            }\n\n            // console.log(status_report.length)\n\n            status_report = status_report.sort((a, b) => {\n                let tempA = a.ORBGNDT.toString().trim() + a.ORBGNTM.toString().trim()\n                let tempTimeA = moment(tempA, 'YYYY-MM-DDHHmmss').valueOf()\n                let tempB = b.ORBGNDT.toString().trim() + b.ORBGNTM.toString().trim()\n                let tempTimeB = moment(tempB, 'YYYY-MM-DDHHmmss').valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n\n            return status_report\n        }\n        function formatPickerDateRangeToORDLIST(ORDLIST, PickerDateRange) {\n            const start = PickerDateRange[0]\n            const end = PickerDateRange[1]\n            if (Array.isArray(ORDLIST)) {\n                const filterORDLIST = ORDLIST.filter(function (info, index, arr) {\n                    const BGtime = moment(info.ORBGNDT.toString().trim() + info.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n                    return start <= BGtime && BGtime <= end\n                })\n                return filterORDLIST\n            }\n            return null\n\n        }\n        function formatSelectMode(data, selectMode) {\n            //StateMode 0:全部狀態 1:正式報告 2:已簽收 3:待送檢 4:其他\n            if (Array.isArray(data)) {\n                if (selectMode === 1) {\n                    const filterData = data.filter(function (info, index, arr) {\n                        return Number(info.ORSTATUS) === 64\n                    })\n                    return filterData\n                }\n                if (selectMode === 2) {\n                    const filterData = data.filter(function (info, index, arr) {\n                        return Number(info.ORSTATUS) === 38\n                    })\n                    return filterData\n                }\n                if (selectMode === 3) {\n                    const filterData = data.filter(function (info, index, arr) {\n                        return Number(info.ORSTATUS) === 31\n                    })\n                    return filterData\n                }\n                if (selectMode === 4) {\n                    const filterData = data.filter(function (info, index, arr) {\n                        return Number(info.ORSTATUS) !== 31 && Number(info.ORSTATUS) !== 64 && Number(info.ORSTATUS) !== 38\n                    })\n                    return filterData\n                }\n                return data\n            }\n            return null\n\n        }\n        function formatInputMode(data, InputMode) {\n            if (Array.isArray(data)) {\n                if (InputMode === null || InputMode === \"\" || InputMode === undefined) {\n                    return data\n                }\n                const regex = new RegExp(InputMode, \"i\");\n                const filterInputMode = data.filter(function (info, index, arr) {\n                    return info.ORPROCED.toString().toLowerCase().match(regex) !== null\n                })\n                return filterInputMode\n            }\n            return null\n        }\n        const { PickerDateRange, ORDLIST, StateMode, InputMode, selectedClass } = this.props\n\n        const filterTimer = formatPickerDateRangeToORDLIST(ORDLIST, PickerDateRange)\n        const filterStateMode = formatSelectMode(filterTimer, StateMode)\n        const filterInput = formatInputMode(filterStateMode, InputMode)\n\n        // console.log(filterTimer)\n        // console.log(filterStateMode)\n        // console.log(filterInput)\n        let clusteredData = null\n        if (this.props.parser !== undefined && this.props.parser.mappings.length !== 0) {\n            // console.log(this.props.parser.mappings.length)\n            clusteredData = this.parse(filterInput, this.props.parser)\n        }\n\n        // console.log(clusteredData, this.props.selectedClass)\n        if (clusteredData === null) {\n            return null\n        }\n        const filteredData = clusteredData[this.props.selectedClass];\n        const sortfilteredData = filteredData.sort(function (a, b) {\n            const aBGtime = moment(a.ORBGNDT.toString().trim() + a.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n            const bBGtime = moment(b.ORBGNDT.toString().trim() + b.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n            return aBGtime < bBGtime ? 1 : -1;\n        });\n        // const list = listforstatus(filteredData, RESSECT, PickerDateRange, StateMode, InputMode)\n        const showModal = this.props.showModal\n        const nonlabcell = sortfilteredData.map(function (value, index, array) {\n            function ORSTATUSToString(ORSTATUS) {\n                if (ORSTATUS === 64) {\n                    return 0\n                }\n                if (ORSTATUS === 38) {\n                    return 1\n                }\n                if (ORSTATUS === 31) {\n                    return 2\n                }\n                return ORSTATUS\n            }\n            // console.log(value)\n            const time = moment(value.ORBGNDT.toString().trim() + value.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n            const come = value.ORSPCN1\n            const name = value.ORPROCED\n            const status = ORSTATUSToString(Number(value.ORSTATUS))\n\n            let isSameDay = false;\n            if (index < filteredData.length - 1) {\n                const day = moment(time).format('YYYY/MM/DD');\n                const compareDay = moment(filteredData[index + 1].ORBGNDT.toString().trim() + value.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").format('YYYY/MM/DD');\n                isSameDay = moment(day).isSame(compareDay, 'day');\n            }\n            if (index === filteredData.length - 1) {\n                isSameDay = true;\n            }\n\n            return (\n                <NonlabviewtableCell key={\"Examnonlabviewtable\" + index} come={come} time={time} name={name} status={status} hisId={value.ORHISTNO} caseId={value.ORDSEQCN} month={value.ORMM} seq={value.ORDSEQNO} showModal={showModal} isSameDay={isSameDay}></NonlabviewtableCell>\n            );\n        })\n\n        const title = [\"時間\", \"檢驗項目\", \"檢體\", \"狀態\", \"報告\"]\n        const titlecell = title.map(function (value, index, arr) {\n            // const tempStyle = index == 1\n            return (\n                <t3 className='nonlabtebletitlecell' style={{ justifyContent: \"center\" }}>{value}</t3>\n            );\n        })\n\n        return (\n            <div >\n                <div style={{ height: \"30px\", backgroundColor: \"rgba(226, 237, 243,.5)\", display: \"grid\", gridTemplateColumns: \"1fr 1.5fr 1fr 1fr 1fr\" }}>\n                    {titlecell}\n                </div>\n                <div style={{ border: \"1px solid rgba(232, 232, 232, 1)\", borderRadius: \"0 0 4px 4px\", borderCollapse: \"collapse\" }}>\n                    <div style={{ minHeight: \"calc(100vh - 305px)\", maxHeight: \"calc(100vh - 305px)\", overflowY: \"auto\" }}>\n                        {JSON.stringify(filteredData) !== '[]' ?\n                            nonlabcell\n                            :\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1.5fr 1fr 1fr 1fr\" }}>\n                                <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                    無資料\n                                </div>\n                            </div>}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Examnonlabviewtable\n","import React, { Component } from 'react';\nimport Examnonlabviewtable from './ExamNonlabtablecell'\nimport { Input, Select, Modal } from 'antd';\n// import moment from 'moment';\n// import searchlogo from '../../Image/svg/Search.svg'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport * as Apiprovider from '../../API/ApiProvider'\nimport InsReportModal from '../ExamReportModal'\nimport moment from 'moment'\nimport * as ORDER from '../../Resource/ORDERLIST'\n\n// var mode_class, mode_state;\nclass Nonlabview extends Component {\n    state = {\n        ClassMode: \"全部類別\",\n        StateMode: 1,\n        InputMode: null,\n        parser: { \"mappings\": [] },\n        modalVisible: false,\n        modalReport: \"\",\n\n        preHID: null,\n        prestartTime: null,\n        preendTime: null,\n        ORDLIST: []\n    }\n\n    componentDidMount() {\n        const { caseinfo, PickerDateRange } = this.props\n        const HID = caseinfo.HISID\n        const startTime = moment(PickerDateRange[0]).format(\"YYYY-MM-DD\")\n        const endTime = moment(PickerDateRange[1]).format(\"YYYY-MM-DD\")\n        this.setState({ preHID: HID, prestartTime: startTime, preendTime: endTime })\n        this.getAPI(HID, startTime)\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDateRange } = this.props\n        const { preHID, prestartTime, preendTime } = this.state\n        const HID = caseinfo.HISID\n        const startTime = moment(PickerDateRange[0]).format(\"YYYY-MM-DD\")\n        const endTime = moment(PickerDateRange[1]).format(\"YYYY-MM-DD\")\n        if (HID !== preHID || startTime !== prestartTime || endTime !== preendTime) {\n            this.setState({ preHID: HID, prestartTime: startTime, preendTime: endTime })\n            this.getAPI(HID, startTime)\n        }\n    }\n    getAPI(HID, storeProcedureTime) {\n        Apiprovider.getStoredProcedureORDLIST(HID, storeProcedureTime, \"ALL\", \"DOC3924B\")\n            .then(data => this.setState({ ORDLIST: data.data }))\n            .catch(err => { console.log(err) })\n\n        // this.setState({ ORDLIST: ORDER.data })\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"NonLabExamReport\");\n                parser.mappings = [{ \"key\": \"全部類別\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson ExamReportNonLab OK \" + JSON.stringify(parser))\n                this.setState({\n                    parser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    Inputvaluesearch = (event) => {\n        this.setState({ InputMode: event.target.value })\n    }\n\n    onChangeState = (value) => {\n        this.setState({ StateMode: value })\n    }\n\n    onChangeClass = (value) => {\n        console.log(value)\n        this.setState({ ClassMode: value })\n    }\n\n    showModal = (report) => {\n        this.setState({\n            modalVisible: true,\n            modalReport: report\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    render() {\n        const { Option, caseinfo } = Select;\n        const { PickerDateRange } = this.props\n        const { modalVisible, modalReport, ORDLIST } = this.state\n        const showModal = this.showModal\n        const handleOk = this.handleOk\n        const handleCancel = this.handleCancel\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderRadius: \"4px 4px 0 0\", height: \"36px\", padding: \"0px 16px\", display: \"grid\", alignItems: \"center\", gridTemplateColumns: \"2fr 3fr\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>檢驗清單及報告</t2>\n                    <div style={{ display: 'grid', gridTemplateColumns: \"130px 100px auto\", gridColumnGap: \"5px\" }}>\n                        <Select defaultValue={this.state.ClassMode} placeholder=\"選擇檢驗類別\" style={{ width: 130 }} onChange={this.onChangeClass}>\n                            {this.state.parser.mappings.map((mapping, index) => {\n                                return <Option key={index} value={mapping.sample ? mapping.key + \"-\" + mapping.sample : mapping.key}>{mapping.sample ? mapping.key + \"-\" + mapping.sample : mapping.key}</Option>\n                            })}\n                        </Select>\n                        <Select defaultValue={this.state.StateMode} placeholder=\"選擇項目狀態\" style={{ width: 100 }} onChange={this.onChangeState}>\n                            <Option value={0}>全部狀態</Option>\n                            <Option value={1}>正式報告</Option>\n                            <Option value={2}>已簽收</Option>\n                            <Option value={3}>待送檢</Option>\n                            <Option value={4}>其他</Option>\n                        </Select>\n                        <Input id=\"keywordsearch\" placeholder=\"輸入關鍵字\" onChange={this.Inputvaluesearch} />\n                    </div>\n                </div>\n                <Examnonlabviewtable PickerDateRange={PickerDateRange} ORDLIST={ORDLIST} selectedClass={this.state.ClassMode} parser={this.state.parser} StateMode={this.state.StateMode} InputMode={this.state.InputMode} visible={modalVisible} showModal={showModal} handleOk={handleOk} handleCancel={handleCancel}></Examnonlabviewtable>\n                {/* <Nonlabviewtable caseinfo={caseinfo} StartTime={PickerDateRange[0]} EndTime={PickerDateRange[1]}></Nonlabviewtable> */}\n                <Modal\n                    title={\"檢驗結果\"}\n                    visible={modalVisible}\n                    onOk={handleOk}\n                    onCancel={handleCancel}\n                    width={1000}\n                    footer={null}>\n                    <InsReportModal report={modalReport}></InsReportModal>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Nonlabview\n","import React, { Component } from 'react';\nimport Labview from './ExamLabview'\nimport { DatePicker, Button, Icon } from 'antd';\nimport './ExamReport.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport Nonlabview from './NonLabview'\nimport locale from 'antd/es/date-picker/locale/zh_TW';\nimport Nonlabviewtable from '../CrossSectionView/Nonlabviewtable'\n// import * as RegularData from '../../Data/RegularData'\n\nclass Examreport extends Component {\n    state = {\n        selectdata: 0,\n        selectTitle: '',\n        PickerDateRange: [moment(moment().subtract(6, 'days').format('YYYYMMDD')),\n        moment(moment().format('YYYYMMDD'))],\n        RESDGLU1: [], //累積報告\n        RESLAB02: [], //累積報告\n        RESLAB01: [],  //累積報告\n        RESDBGAS: [],  //累積報告\n        RESLAB0C: [],//累積報告\n        ORDLIST: [],\n        RESSECT: [],\n        isLoading: false,\n    }\n    constructor(props) {\n        super(props)\n        this.PickerDateRangeChange = this.PickerDateRangeChange.bind(this)\n    }\n\n    SelectDataList() {\n        function vallofnull(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"\"\n            }\n            return value.toString().trim()\n        }\n        const DateRange = this.state.PickerDateRange\n        const selectData = this.state.selectdata\n        const st_timestamp = DateRange[0].valueOf()\n        const et_timestamp = DateRange[1].valueOf() + (24 * 60 * 60 * 1000)\n        // const { PickerDateRange, RESLAB02, RESDGLU1, RESLAB01, RESDBGAS, RESLAB0C, ORDLIST, RESSECT } = this.props\n        const RESLAB02 = this.state.RESLAB02\n        const RESDGLU1 = this.state.RESDGLU1\n        const RESLAB01 = this.state.RESLAB01\n        const RESDBGAS = this.state.RESDBGAS\n        const RESLAB0C = this.state.RESLAB0C\n\n\n        var CellData = []\n        if (selectData === 0) { // CBC\n            for (let index = 0; index < RESLAB02.length; index++) {\n                const element = RESLAB02[index];\n                const WBC = vallofnull(element.RSV01)\n                const Band = vallofnull(element.RSV13)\n                const Seq = vallofnull(element.RSV14)\n                const Lym = vallofnull(element.RSV15)\n                const Hb = vallofnull(element.RSV03)\n                const Hct = vallofnull(element.RSV04)\n                const Plt = vallofnull(element.RSV09)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [WBC, Band, Seq, Lym, Hb, Hct, Plt]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 1) { // 電解質與腎\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const Na = vallofnull(element.RSV13)\n                const K = vallofnull(element.RSV14)\n                const Cl = vallofnull(element.RSV15)\n                const CaFree = \"No\"\n                const CaTotal = vallofnull(element.RSV03)\n                const Mg = \"No\"\n                const P = vallofnull(element.RSV17)\n                const BUN = vallofnull(element.RSV05)\n                const Cr = vallofnull(element.RSV07)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [Na, K, Cl, CaFree, CaTotal, Mg, P, BUN, Cr]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 2) { // 肝功能\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const Alt = vallofnull(element.RSV11)\n                const AST = vallofnull(element.RSV12)\n                const TBil = vallofnull(element.RSV08)\n                const DBil = vallofnull(element.RSV25)\n                const rGGT = vallofnull(element.RSV19)\n                const Alkp = vallofnull(element.RSV09)\n                const Alb = vallofnull(element.RSV02)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [Alt, AST, TBil, DBil, rGGT, Alkp, Alb]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 3) { // 早產兒\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const Iron = vallofnull(element.RSV26)\n                const TIBC = vallofnull(element.RSV27)\n                const FeSat = Number(Iron) && Number(TIBC) > 0 ? parseFloat(Iron / TIBC).toFixed(2) : null\n                const LDH = vallofnull(element.RSV10)\n                const Alkp = vallofnull(element.RSV9)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [Iron, TIBC, FeSat, LDH, Alkp]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 4) { // 心臟\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const ck = vallofnull(element.RSV18)\n                const ckMB = vallofnull(element.RSV28)\n                const BNP = \"No\"\n                const Troponinl = vallofnull(element.RSV43)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [ck, ckMB, BNP, Troponinl]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 5) { // 凝血\n            for (let index = 0; index < RESLAB02.length; index++) {\n                const element = RESLAB02[index];\n                const PT = vallofnull(element.RSV10)\n                const APTT = vallofnull(element.RSV11)\n                const INR = vallofnull(element.RSV12)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [PT, APTT, INR]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 6) { // GAS(Acid-Base)\n            for (let index = 0; index < RESDBGAS.length; index++) {\n                const element = RESDBGAS[index];\n                const PH = vallofnull(element.SS07)\n                const pCO2 = vallofnull(element.SS06)\n                const pO2 = vallofnull(element.SS08)\n                const HCO3 = vallofnull(element.SS04)\n                const BE = vallofnull(element.SS01)\n                const O2Sat = vallofnull(element.SS05)\n                const FiO2 = vallofnull(element.SS03)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [PH, pCO2, pO2, HCO3, BE, O2Sat, FiO2]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 7) { // GAS(Additionary)\n            for (let index = 0; index < RESDBGAS.length; index++) {\n                const element = RESDBGAS[index];\n                const Hb = vallofnull(element.SS11)\n                const Hct = vallofnull(element.SS12)\n                const Na = vallofnull(element.SS13)\n                const K = vallofnull(element.SS14)\n                const CaFree = vallofnull(element.SS15)\n                const Bun = vallofnull(element.SS16)\n                const Cr = vallofnull(element.SS17)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [Hb, Hct, Na, K, CaFree, Bun, Cr]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 8) { // Glucose\n            for (let index = 0; index < RESDGLU1.length; index++) {\n                const element = RESDGLU1[index]\n                const GluBeside = vallofnull(element.GLUFAST)\n                const GluLab = vallofnull(element.RSV16)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [GluBeside, GluLab]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 9) { // 黃疸\n            for (let index = 0; index < RESLAB0C.length; index++) {\n                const element = RESLAB0C[index]\n                const TCB = vallofnull(element.RSV01)\n                const MicroBil = vallofnull(element.RSV02)\n                const TBil = vallofnull(element.RSV03)\n                const DBil = vallofnull(element.RSV04)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [TCB, MicroBil, TBil, DBil]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 10) { // 感染指數\n            for (let index = 0; index < RESLAB02.length; index++) {\n                const elementOne = RESLAB02[index]\n                const WBC = vallofnull(elementOne.RSV01)\n                const Band = vallofnull(elementOne.RSV13)\n                const Seg = vallofnull(elementOne.RSV14)\n                const Lym = vallofnull(elementOne.RSV15)\n\n                const time = moment((elementOne.ORRESDT.toString() + elementOne.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((elementOne.ORRESDT.toString() + elementOne.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [WBC, Band, Seg, Lym, null, null]\n                    })\n                }\n            }\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const elementTwo = RESLAB01[index]\n                const PCT = null\n                const CRP = vallofnull(elementTwo.RSV30)\n                const time = moment((elementTwo.ORRESDT.toString() + elementTwo.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((elementTwo.ORRESDT.toString() + elementTwo.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [null, null, null, null, PCT, CRP]\n                    })\n                }\n            }\n            return CellData\n        }\n        return null\n\n    }\n\n    componentDidMount() {\n        const { caseinfo } = this.props\n        this.setState({ preHID: caseinfo.HISID })\n        this.APIUpdate(caseinfo.TRANSINDT, caseinfo.HISID)\n        this.SelectDataList = this.SelectDataList.bind(this)\n    }\n\n    componentDidUpdate() {\n        const { caseinfo } = this.props\n        const { preHID } = this.state\n        if (preHID !== caseinfo.HISID) {\n            this.setState({ preHID: caseinfo.HISID })\n            this.APIUpdate(caseinfo.TRANSINDT, caseinfo.HISID)\n            this.SelectDataList = this.SelectDataList.bind(this)\n        }\n    }\n\n    // ChangeRangePicker(dates, datestrings) {\n\n    // }\n    APIUpdate(DateRange, HID) {\n        this.setState({ isLoading: true });\n        function selectMonthInterval(PickerDate) {\n            const timestampInterval = new Date().getTime() - new Date(PickerDate).getTime()\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n\n        const st = moment(DateRange, \"YYYYMMDD\").format(\"YYYY-MM-DD\")\n        console.log(DateRange, HID)\n        const datePick = moment(DateRange, \"YYYYMMDD\").format('YYYY/MM/DD')\n        const MonthInterval = selectMonthInterval(datePick)\n        const RESDGLU1 = ApiProvider.getStoredProcedureRESDGLU1(HID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESLAB02 = ApiProvider.getStoredProcedureRESLAB02(HID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESLAB01 = ApiProvider.getStoredProcedureRESLAB01(HID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESDBGAS = ApiProvider.getStoredProcedureRESDBGAS(HID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESLAB0C = ApiProvider.getStoredProcedureRESLAB0C(HID, st)\n            .then(data => {\n                console.log(data.data)\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const ORDLIST = ApiProvider.getStoredProcedureORDLIST(HID, st, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                console.log(data.data)\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        const RESSECT = ApiProvider.getStoredProcedureRESSECT(HID, MonthInterval, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        Promise.all([RESDGLU1, RESLAB02, RESLAB01, RESDBGAS, RESLAB0C, ORDLIST, RESSECT]).then(result => {\n            this.setState({\n                RESDGLU1: result[0], //累積報告\n                RESLAB02: result[1],  //累積報告\n                RESLAB01: result[2],  //累積報告\n                RESDBGAS: result[3],  //累積報告\n                RESLAB0C: result[4],  //累積報告\n                ORDLIST: result[5],\n                RESSECT: result[6],\n                isLoading: false,\n            })\n        }).catch(() => { this.setState({ isLoading: false }); });\n    }\n    callbackDateFunction = (select) => {\n        this.setState({\n            selectdata: select\n        })\n    }\n\n    callbackTitleFunction = (select) => {\n        this.setState({\n            selectTitle: select\n        })\n    }\n\n    PickerDateRangeChange(date, dateString) {\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDateRange } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const st = PickerDateRange[0].valueOf()\n        const et = PickerDateRange[1].valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                if (bronDate <= (st - day)) {\n                    const bTime = [moment(moment(st - day).format('YYYYMMDD')), moment(moment(et - day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(bTime)\n                }\n                break;\n            case 'N':\n                const nTime = [moment(moment().subtract(6, 'days').format('YYYYMMDD')), moment(moment().format('YYYYMMDD'))]\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                if (aTemp >= (et + day)) {\n                    const aTime = [moment(moment(st + day).format('YYYYMMDD')), moment(moment(et + day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(aTime)\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const momentDate = this.state.PickerDateRange\n        let data = this.SelectDataList()\n\n        data = data.sort((a, b) => {\n            let tempTimeA = moment(a.Time, 'YYYY-MM-DDHHmmss').valueOf()\n            let tempTimeB = moment(b.Time, 'YYYY-MM-DDHHmmss').valueOf()\n            return tempTimeA < tempTimeB ? 1 : -1\n        })\n\n        const { RangePicker } = DatePicker\n        const PickerDateRange = [momentDate[0].valueOf(), momentDate[1].valueOf()]\n\n        return (\n            <div className='examreportlayout'>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"250px 120px\", gridColumnGap: \"5px\", marginBottom: \"5px\" }}>\n                    <RangePicker\n                        // defaultValue={this.state.PickerDateRange}\n                        getCalendarContainer={triggerNode => triggerNode.parentNode}\n                        value={this.state.PickerDateRange}\n                        format={\"YYYY/MM/DD\"}\n                        allowClear={false}\n                        locale={locale}\n                        disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                        // toString={(dates, datestrings) => { this.setState({ RangePicker: dates }) }}\n                        onChange={this.PickerDateRangeChange}\n                    />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"minus-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                </div>\n                {\n                    this.state.isLoading\n                        ? (<Icon type=\"loading\" />)\n                        : (\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" }}>\n                                <Labview selectvalue={this.state.selectdata}\n                                    parentDateCallback={this.callbackDateFunction}\n                                    DataList={data}\n                                    SelectStatus={this.state.selectdata}\n                                    PickerDateRange={PickerDateRange}\n                                    parentTitleCallback={this.callbackTitleFunction}>\n                                </Labview>\n                                <Nonlabview caseinfo={caseinfo} PickerDateRange={PickerDateRange}></Nonlabview>\n                            </div>\n                        )\n                }\n                {/* {this.charttableview()} */}\n                <div style={{ display: \"flex\", justifyContent: 'center', alignItems: 'center' }}>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Examreport;\n","import React, { Component } from 'react';\nimport { DatePicker, Button, Icon } from 'antd';\nimport Prescriptionordertable from '../Prescriptionorder/Prescriptionorder'\nimport Treatmentorderlayout from '../Treatmentorder/Treatmentorder'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass Orderview extends Component {\n    state = {\n        UDORDER0: [],\n        TRTMNTQ1: [],\n        isLoading: false,\n        PickerDateRange: [moment(moment().subtract(6, 'days').format('YYYYMMDD')),\n        moment(moment().format('YYYYMMDD'))],\n    }\n    componentDidMount() {\n        this.apidata()\n    }\n    apidata() {\n        this.setState({ isLoading: true });\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID.toString().trim()\n        const CID = caseinfo.CASEID.toString().trim()\n        const UDORDER0 = ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureUDORDER0 NG \" + JSON.stringify(err))\n            });\n        const TRTMNTQ1 = ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureTRTMNTQ1 NG \" + JSON.stringify(err))\n            });\n        Promise.all([UDORDER0, TRTMNTQ1]).then(result => {\n            this.setState({\n                UDORDER0: result[0],\n                TRTMNTQ1: result[1],\n                isLoading: false,\n            });\n        }).catch(() => { this.setState({ isLoading: false }) });\n    }\n\n    PickerDateRangeChange = (date, dateString) => {\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDateRange } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const st = PickerDateRange[0].valueOf()\n        const et = PickerDateRange[1].valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                if (bronDate <= (st - day)) {\n                    const bTime = [moment(moment(st - day).format('YYYYMMDD')), moment(moment(et - day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(bTime)\n                }\n                break;\n            case 'N':\n                const nTime = [moment(moment().subtract(6, 'days').format('YYYYMMDD')), moment(moment().format('YYYYMMDD'))]\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                if (aTemp >= (et + day)) {\n                    const aTime = [moment(moment(st + day).format('YYYYMMDD')), moment(moment(et + day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(aTime)\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const udata = this.state.UDORDER0\n        const tdata = this.state.TRTMNTQ1\n        const momentDate = this.state.PickerDateRange\n\n        const { RangePicker } = DatePicker\n        const PickerDateRange = [momentDate[0].valueOf(), momentDate[1].valueOf()]\n        if (udata.length === 0 || tdata.length === 0) {\n            //Loading\n            return null\n        }\n\n        return (\n            <div>\n                <div style={{ overflowY: 'auto' }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"250px 120px\", gridColumnGap: \"5px\", marginBottom: \"5px\" }}>\n                        <RangePicker\n                            getCalendarContainer={triggerNode => triggerNode.parentNode}\n                            value={this.state.PickerDateRange}\n                            format={\"YYYY/MM/DD\"}\n                            allowClear={false}\n                            locale={\"zh_TW\"}\n                            onChange={this.PickerDateRangeChange}\n                            disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                        />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"minus-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                    </div>\n                    {\n                        this.state.isLoading\n                            ? (<Icon type=\"loading\" />)\n                            : (\n                                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" }}>\n                                    <Prescriptionordertable PickerDateRange={PickerDateRange} UDORDER0={udata} searchbar={true} caseinfo={caseinfo}></Prescriptionordertable>\n                                    <Treatmentorderlayout PickerDateRange={PickerDateRange} TRTMNT01={tdata} searchbar={true} caseinfo={caseinfo}></Treatmentorderlayout>\n                                </div>\n                            )\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Orderview;\n","export const data = {\n    \"resconts\": [\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"王琪\",\n          \"pro_not\": \"＃005潛在危險性皮膚完整性受損／局部皮膚處於浸潤風險狀態\\nE：病嬰長期臥床、使用尿布，採管灌及瓶餵飲食，抗生素治療，2020.01.10 01:00  失禁性皮膚炎：嚴重程度: 高危險群。班內目前解2次黃綠糊水便，觀察臀部皮膚完整無受損，清潔後協助塗抹凡士林避免糞便與皮膚長時間浸潤，續觀皮膚完整性。\",\n          \"rec_dat\": \"20200110\",\n          \"rec_tim\": \"0129\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"郭銘惠\",\n          \"pro_not\": \"＃009 營養改變：小於身體需要/與早產腸胃道不成熟有關\\nE：8號矽膠口胃管存，每三小時餵食SSC-30卡 34ml，餐前反抽胃管無胃餘量:0ml，協助由口餵食10-15ml，吸吞協調尚可，腹大觸摸軟，解2次中量黃糊便，16小時平均排尿量:4.24ml/kg/hr。\",\n          \"rec_dat\": \"20200109\",\n          \"rec_tim\": \"2219\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"郭銘惠\",\n          \"pro_not\": \"＃001 氣體交換障礙/與早產肺功能不成熟有關\\nE：On Nasal Prong with IMV mode，FiO2：40％、Rate：35次/分、PIP/PEEP：23/7cmH2，呼吸維持41-60次/分，血氧維持90-100％，躁動或管灌後有低血氧82-84％，可自行回復，協助抽痰1次，痰量少至中、白、稠。\",\n          \"rec_dat\": \"20200109\",\n          \"rec_tim\": \"2127\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"郭銘惠\",\n          \"pro_not\": \"＃005潛在危險性皮膚完整性受損／局部皮膚處於浸潤風險狀態\\nE：2020.01.09. 17:00  失禁性皮膚炎：嚴重程度: 高危險群 。觀察臀部皮膚完整無受損，每3小時及必要時協助更換尿布並塗抹凡士林避免尿液、糞便長時間浸潤皮膚，續觀局部皮膚變化。\",\n          \"rec_dat\": \"20200109\",\n          \"rec_tim\": \"1901\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃009 營養改變：小於身體需要/與早產腸胃道不成熟有關\\nE：病嬰目前矯齡1個月又5天大，8號矽膠口胃管存，每三小時餵食SSC30卡 34ml，於餐前反抽胃餘量：0-3ml半消化奶，因給鎮靜藥物安睡故0900、1500未給予瓶餵餵食，於1200分段瓶餵約可喝15ml，餘奶採胃管輔助灌食，管灌後無溢吐奶情形，腹部外觀脹大、觸診尚軟，班內共自解2次中至多量黃糊便，8小時平均排尿量：2.97ml/kg/hr。\",\n          \"rec_dat\": \"20200109\",\n          \"rec_tim\": \"1549\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"班內於1245協助散瞳，於1330協助林伯剛醫師行眼底檢查，口頭囑和12/26檢查結果差不多(右眼血管尚未長到zone3的位置，血塊還沒吸收，左眼血管已長到zone3的位置)，預計兩週後再追蹤。\",\n          \"rec_dat\": \"20200109\",\n          \"rec_tim\": \"1500\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃001 O：病嬰目前矯齡1個月又5天大，交接班後續Nasal prong with IMV Mode，FiO2：40％，Rate：35次/分，PIP/PEEP：23/7 cmH2O，平靜熟睡時呼吸維持46-70次/分，心跳139-165次/分，血氧大於88％，痰液黏稠。\\nA:氣體交換障礙/與早產肺功能不成熟有關\\nI:1.曹醫師診視續維持目前呼吸器設定。\\n    2.依醫囑Q8H NS 3ml IH USE。\\n    3.於1100更換鼻部人工皮。\\n    4.於1110協助抽吸口鼻分泌物。\\n    5.持續監測生命徵象及血氧變化。\\n    6.予肩下墊小毛巾，維持呼吸道通暢 。\\nE：於1130病嬰顯躁動不安、心跳174-785次/分，故依醫囑予Chloral hydrate 10％ 1ml PO USE，約15分鐘後可入睡，現呼吸維持46-60次/分，血氧維持88-94％，抽痰一次，口鼻有少量白黏稠分泌物。\",\n          \"rec_dat\": \"20200109\",\n          \"rec_tim\": \"1459\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃014 高危險性感染/與早產兒免疫功能不成熟有關\\nE：於1200測量腋溫37.2℃，觸摸膚溫暖，安睡時心跳維持139-166次/分，依醫囑口服抗生素Azithromycin 0.3ml W135 PO，服用後暫無不適情形。\",\n          \"rec_dat\": \"20200109\",\n          \"rec_tim\": \"1233\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃005 潛在危險性皮膚完整性受損／局部皮膚處於浸潤風險狀態\\nE：班內目前解一次中黃糊便，觀察臀部皮膚完整無發紅及受損，2020.01.09. 09:00  失禁性皮膚炎：嚴重程度: 高危險群。每2.5-3小時及必要時更換尿布，局部塗抹護膚膏，阻隔大小便直接接觸皮膚，續觀皮膚變化。\",\n          \"rec_dat\": \"20200109\",\n          \"rec_tim\": \"1132\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"班內協助更換衣服及包布，保持身體乾淨無異味。全身性皮膚評估：顏色: 粉紅，溫度: 溫暖，完整性: 是，病變: 否，溼度: 乾燥 。病人口腔評估 : 口腔黏膜炎等級 : 0級:正常、無異常。FLACC行為疼痛評估總分 : 0分，給予護理措施 : 否，藥物處理 : 否 。意識狀態 : 警覺 。\",\n          \"rec_dat\": \"20200109\",\n          \"rec_tim\": \"1038\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"陳誼珮\",\n          \"pro_not\": \"＃009 營養改變：小於身體需要/與早產腸胃道不成熟有關\\nE：病嬰今日測量體重：2150公克，較1/8減少13公克，8號矽膠口胃管留置，依醫囑每3小時餵食早產兒配方奶水SSC(30大卡) 34cc，餐前反抽RV：0-4cc半消化奶、32-60cc空氣予丟棄，觀察病嬰口慾強，協助以母乳實感奶嘴瓶餵，吸吞協調可，進食12-14cc後改為管灌餵食畢，暫無嗆吐奶情形，腹部外觀鼓大、觸摸微脹，於餵食後仍可抽出32-40cc空氣予丟棄，班內解2次中量黃綠糊便，24小時U/O：4.14cc/kg/hr，1/8整日攝取總熱量約125.75Kcal/kg，total I/O:+53.3cc。\",\n          \"rec_dat\": \"20200109\",\n          \"rec_tim\": \"0753\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"陳誼珮\",\n          \"pro_not\": \"＃014 高危險性感染/與早產兒免疫功能不成熟有關\\nE：腋溫：36.5℃ at 0100，心跳：132-160次/分，躁動時心跳約166-180次/分，四肢及身體變熱，故於0725依醫囑給予chloral hydrate 10％ 1ml PO ，給藥後於0735觀察病嬰可安睡，觸診膚溫暖，心跳降至150次/分及低血情形改善，預1/10抽血追蹤，已交班再協助。\",\n          \"rec_dat\": \"20200109\",\n          \"rec_tim\": \"0736\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"陳誼珮\",\n          \"pro_not\": \"＃001 氣體交換障礙/與早產肺功能不成熟有關\\nE：續On Nasal Prong with IMV mode，FiO2：40％、Rate：35次/分、PIP/PEEP：23/7cmH2O，病嬰呼吸次數約31-60次/分，偶有呼吸淺快:64-69次/分可自回，血氧約88-98％；病嬰哭鬧及灌食後會有低血氧79-84％，多可自回，偶需予暫時調高FiO2可回復；於0629扎足跟血追蹤Gas：PH  7.35，PCO2  74，HCO3  40.9，BE  12.8，SAT 78 ％，已告知李成彧醫師知gas數值；班內協助抽痰3次，口鼻少量白稠分泌物，給予蒸氣治療後抽吸分泌物黏稠情形改善，會有中量白微稠分泌物，續肩下墊小毛巾維持呼吸道通暢。\",\n          \"rec_dat\": \"20200109\",\n          \"rec_tim\": \"0648\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"陳誼珮\",\n          \"pro_not\": \"＃001 O：交接班後續on Nasal prong with IMV Mode，FiO2:37％，Rate:35次/分，PIP/PEEP:23/7cmH2O use，病嬰安睡狀態下呼吸平穩、呼吸次數為25-58次/分，血氧維持93-98％，於0112熟睡時曾1次心跳82次/分、低血氧至75％、唇色微暗紫。\\nA：氣體交換障礙/與早產肺功能不成熟有關\\nI：1.於0012更換鼻部人工皮。\\n2.於0020及視需要抽吸口鼻分泌物。\\n3.於0112協助調FiO2至40％。\\n4.肩下墊小枕維持呼吸道通暢。\\n5.持續監測生命徵象變化。\",\n          \"rec_dat\": \"20200109\",\n          \"rec_tim\": \"0303\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"陳誼珮\",\n          \"pro_not\": \"＃005潛在危險性皮膚完整性受損／局部皮膚處於浸潤風險狀態\\nE：病嬰長期臥床、使用尿布，採管灌及瓶餵飲食，抗生素治療，2020.01.09. 01:00  失禁性皮膚炎：嚴重程度: 高危險群 。班內目前解一次中量黃綠糊便，觀察臀部皮膚完整無受損，清潔後協助塗抹凡士林避免糞便與皮膚長時間浸潤，續觀皮膚完整性。\",\n          \"rec_dat\": \"20200109\",\n          \"rec_tim\": \"0134\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"楊雅璇\",\n          \"pro_not\": \"＃001 氣體交換障礙/與早產肺功能不成熟有關\\nE：On Nasal Prong with IMV mode，FiO2：40％、Rate：35次/分、PIP/PEEP：20/7cmH2，安睡時呼吸多維持35-63次/分，血氧維持88-97％，安睡間，偶有低血氧84-87％，或呼吸較快65-75次/分，可自行回復，未合併低血氧，清醒時易躁動，口鼻周圍明顯變暗，血氧70-75％，需暫時調高氧氣濃度給予支持，依醫囑蒸氣治療，協助抽痰2次，口鼻痰量中白黏稠，現予趴臥，促進氧合。\",\n          \"rec_dat\": \"20200108\",\n          \"rec_tim\": \"2325\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"楊雅璇\",\n          \"pro_not\": \"＃009 營養改變：小於身體需要/與早產腸胃道不成熟有關\\nE：清醒時口慾強，會吸吮奶嘴，8號矽膠口胃管存，每三小時餵食SSC30卡 34ml，餐前反抽0ml，腹膨大，觸診軟，於1800安睡故管灌醫囑量，於2100瓶餵7ml後睡去，剩餘量管灌，吞嚥協調較差，需協助支托抬下巴、分段餵食，班內解便1次中量黃綠糊便，自解尿液順暢，16小時平均排尿量:3.67ml/kg/hr。\",\n          \"rec_dat\": \"20200108\",\n          \"rec_tim\": \"2240\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"楊雅璇\",\n          \"pro_not\": \"＃014 高危險性感染/與早產兒免疫功能不成熟有關\\nE：班內病嬰可安睡，心跳144-167次/分，易躁動，躁動時膚色暗，且心跳偏快170-190次/分，引發膚熱，觸診膚溫暖，腋溫：37.6℃ at 2100，需多安撫，班內依醫囑給予chloral hydrate 1ml PO at 2345，給藥後可安睡，清醒時眼神明亮，哭聲大，無虛弱或嗜睡，頭部左側IV已移除，現口服抗生素治療。\",\n          \"rec_dat\": \"20200108\",\n          \"rec_tim\": \"2140\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"楊雅璇\",\n          \"pro_not\": \"＃005潛在危險性皮膚完整性受損／局部皮膚處於浸潤風險狀態\\nE：長期臥床、使用尿布，採管灌及瓶餵飲食，口服抗生素治療，止瀉藥使用，解糊便，觀察臀部皮膚完整無受損，清潔後協助塗抹凡士林避免糞便長時間浸潤皮膚。2020.01.08 17:00  失禁性皮膚炎：嚴重程度: 高危險群 。\",\n          \"rec_dat\": \"20200108\",\n          \"rec_tim\": \"1740\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃001 氣體交換障礙/與早產肺功能不成熟有關\\nE:於1559病嬰顯躁動，依醫囑給予Chloral hydrate 10％ 1ml PO USE，現已入睡，呼吸尚平穩、次數維持28-54次/分，心跳維持150-161次/分，血氧維持89-93％，偶會低血氧至80-87％、可自回，抽痰一次，口鼻抽出少至中量白微黏稠分泌物，現肩下墊一毛巾，維持呼吸道通暢。\",\n          \"rec_dat\": \"20200108\",\n          \"rec_tim\": \"1615\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃009 營養改變：小於身體需要/與早產腸胃道不成熟有關\\nE：病嬰目前矯齡1個月又5天大，8號矽膠口胃管存，每三小時餵食SSC30卡 34ml，於餐前反抽胃管無胃餘量，因給鎮靜藥物安睡故0900未給予瓶餵餵食，於1200及1500分段瓶餵約可喝10-14ml，餘奶採胃管輔助灌食，管灌後無溢吐奶情形，腹部外觀脹大、觸診尚軟，班內共自解2次中至多量黃糊便，8小時平均排尿量：3.18ml/kg/hr。\",\n          \"rec_dat\": \"20200108\",\n          \"rec_tim\": \"1553\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃014 高危險性感染/與早產兒免疫功能不成熟有關\\nE：病嬰四肢揮動有力，於1200測量腋溫36.7℃，觸摸皮膚溫暖，安睡時心跳維持148-155次/分，左頭部IV留置、推注暢，針眼外觀乾淨，無紅腫滲液，依醫囑口服抗生素Azithromycin 0.3ml W135 PO，服用後暫無不適情形。\",\n          \"rec_dat\": \"20200108\",\n          \"rec_tim\": \"1231\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃005 潛在危險性皮膚完整性受損／局部皮膚處於浸潤風險狀態\\nE：班內目前暫未解大便，觀察臀部皮膚完整無發紅及受損，2020.01.08. 09:00  失禁性皮膚炎：嚴重程度: 高危險群。每2.5-3小時及必要時更換尿布，局部塗抹護膚膏，阻隔大小便直接接觸皮膚，續觀皮膚變化。\",\n          \"rec_dat\": \"20200108\",\n          \"rec_tim\": \"1029\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃001 O：病嬰目前矯齡1個月又5天大，交接班後續Nasal prong with IMV Mode，FiO2：40％，Rate：35次/分，PIP/PEEP：20/7 cmH2O，平靜熟睡時血氧大於88％，哭鬧躁動不安時易有心跳大於180次/分、低血氧至78-86％、唇色會有發紺情形，於0804依醫囑給予Chloral hydrate 10％ 1ml PO USE，痰液黏稠。\\nA:氣體交換障礙/與早產肺功能不成熟有關\\nI:1.依醫囑Q8H NS 3ml IH USE。\\n    2.於0925曹醫師診視予PIP：20→23cmH2O，其餘設定未變。\\n    3.於1100鼻部人工皮更換。\\n    4.於1115協助抽吸口鼻分泌物。\\n    5.持續監測生命徵象及血氧變化。\\n    6.予肩下墊小毛巾，維持呼吸道通暢 。\",\n          \"rec_dat\": \"20200108\",\n          \"rec_tim\": \"1027\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"班內協助床邊沐浴、更換衣服及包布，保持身體乾淨無異味。全身性皮膚評估：顏色: 粉紅，溫度: 溫暖，完整性: 是，病變: 否，溼度: 乾燥 。病人口腔評估 : 口腔黏膜炎等級 : 0級:正常、無異常。FLACC行為疼痛評估總分 : 0分，給予護理措施 : 否，藥物處理 : 否 。意識狀態 : 警覺 。\",\n          \"rec_dat\": \"20200108\",\n          \"rec_tim\": \"0955\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"陳誼珮\",\n          \"pro_not\": \"於0804因躁動難以安撫、臉膚色暗紫，心跳:184次/分、血氧:83％，依醫囑給予Chloral hydrate 10％ 1cc STAT PO，給予後於0820已安睡，心跳可下降至150-160次/分左右，已交班續觀。\",\n          \"rec_dat\": \"20200108\",\n          \"rec_tim\": \"0828\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"陳誼珮\",\n          \"pro_not\": \"＃001 氣體交換障礙/與早產肺功能不成熟有關\\nE：續On Nasal Prong with IMV mode，FiO2：40％、Rate：35次/分、PIP/PEEP：20/7cmH2O，病嬰呼吸次數約21-50次/分，偶有呼吸淺快:62-70次/分可自回，血氧約95-100％；病嬰哭鬧及灌食後會有低血氧79-83％，多可自回，偶需予暫時調高FiO2可回復，於0226曾給予一次Chloral hydrate 10％，班內協助抽痰2次，口鼻少量白稠分泌物，給予蒸氣治療後抽吸分泌物黏稠情形改善，續肩下墊小毛巾維持呼吸道通暢。\",\n          \"rec_dat\": \"20200108\",\n          \"rec_tim\": \"0727\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"陳誼珮\",\n          \"pro_not\": \"＃009 營養改變：小於身體需要/與早產腸胃道不成熟有關\\nE：病嬰今日測量體重：2163公克，較1/7減少10公克，8號矽膠口胃管留置，依醫囑每3小時餵食早產兒配方奶水SSC(30大卡) 34cc，餐前反抽RV：0-2cc半消化奶予灌回、25-38cc空氣予丟棄，觀察病嬰口慾強，協助以母乳實感奶嘴瓶餵，吸吞協調可，進食0-12cc後改為管灌餵食畢，暫無嗆吐奶情形，腹部外觀鼓大、觸摸微脹，於胃時後仍可抽出20-30cc空氣予丟棄，班內解一次黃綠糊便，24小時U/O：3.36cc/kg/hr，1/7整日攝取總熱量約125.17Kcal/kg，total I/O:+97cc。\",\n          \"rec_dat\": \"20200108\",\n          \"rec_tim\": \"0650\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"陳誼珮\",\n          \"pro_not\": \"＃014 高危險性感染/與早產兒免疫功能不成熟有關\\nE：腋溫：36.5℃ at 0400，心跳139-150次/分，躁動時心跳約180-200次/分，四肢及身體變熱，故於0226依醫囑給予chloral hydrate 10％ 1ml PO ，給藥後班內病嬰可安睡，觸診膚溫暖，心跳及呼吸淺喘情形改善，頭部左側IV注射部位前端無紅腫滲液，以0.9％NS推注順暢，續ock中。\",\n          \"rec_dat\": \"20200108\",\n          \"rec_tim\": \"0529\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"陳誼珮\",\n          \"pro_not\": \"＃001 O：交接班後續on Nasal prong with IMV Mode，FiO2:45％，Rate:35次/分，PIP/PEEP:20/7cmH2O use，病嬰安睡狀態下呼吸平穩、呼吸次數為35-50次/分，血氧維持95-98％，於哭鬧、躁動時會有心跳180-190次/分、低血氧至79-83％、唇色微暗紫。\\nA：氣體交換障礙/與早產肺功能不成熟有關\\nI：1.於0035更換鼻部人工皮。\\n2.於0050及視需要抽吸口鼻分泌物。\\n3.於0146協助調降FiO2至40％。。\\n4.於0226依醫囑予Chloral hydrate 1ml Q4HPRN PO。\\n5.肩下墊小枕維持呼吸道通暢。\\n6.於0338協助扎足跟血追蹤Gas：PH  7.32，PCO2  81，HCO3  41.7，BE 12.5 ，SAT  56％。\\n7.於0340告知醫師關於病嬰gas數值，醫師嘱調整Ti:0.6→0.5。\\n8.持續監測生命徵象變化。\",\n          \"rec_dat\": \"20200108\",\n          \"rec_tim\": \"0411\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"陳誼珮\",\n          \"pro_not\": \"於0226因躁動難以安撫、臉膚色暗紫，心跳:185次/分、血氧:79％，依醫囑給予Chloral hydrate 10％ 1cc STAT PO，給予後於0257已安睡，心跳可下降至135-140次/分左右，已交班續觀。\",\n          \"rec_dat\": \"20200108\",\n          \"rec_tim\": \"0257\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"陳誼珮\",\n          \"pro_not\": \"＃005潛在危險性皮膚完整性受損／局部皮膚處於浸潤風險狀態\\nE：病嬰長期臥床、使用尿布，採管灌及瓶餵飲食，抗生素治療，2020.01.08. 01:00  失禁性皮膚炎：嚴重程度: 高危險群 。班內目前解一次中量黃糊便，觀察臀部皮膚完整無受損，清潔後協助塗抹凡士林避免糞便與皮膚長時間浸潤，續觀皮膚完整性。\",\n          \"rec_dat\": \"20200108\",\n          \"rec_tim\": \"0121\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"楊雅璇\",\n          \"pro_not\": \"＃001 氣體交換障礙/與早產肺功能不成熟有關\\nE：On Nasal Prong with IMV mode，FiO2：50％、Rate：35次/分、PIP/PEEP：20/7cmH2，安睡時呼吸多維持35-57次/分，血氧維持85-95％，偶依賴呼吸器，清醒時易躁動，口鼻周圍明顯變暗，且會有呼吸喘快情形，依醫囑蒸氣治療，協助抽痰2次，口鼻痰量多白黏稠，現予趴臥，促進氧合。\",\n          \"rec_dat\": \"20200107\",\n          \"rec_tim\": \"2302\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"楊雅璇\",\n          \"pro_not\": \"＃009 營養改變：小於身體需要/與早產腸胃道不成熟有關\\nE：清醒時口慾強，會吸吮奶嘴，8號矽膠口胃管存，每三小時餵食SSC30卡 34ml，餐前反抽胃管無胃餘量:0ml，腹膨大觸診柔軟，於2100瓶餵4ml後睡去，吞嚥協調較差，需協助支托抬下巴，其餘皆依醫囑量管灌，班內未解便，自解尿液順暢，16小時平均排尿量:3.48ml/kg/hr。\",\n          \"rec_dat\": \"20200107\",\n          \"rec_tim\": \"2259\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"楊雅璇\",\n          \"pro_not\": \"＃014 高危險性感染/與早產兒免疫功能不成熟有關\\nE：班內病嬰可安睡，心跳147-165次/分，觸診膚溫暖，腋溫：36.6℃ at 2100；易躁動，躁動時膚色暗，且心跳易偏快大於180次/分以上，引發膚熱，故於依醫囑給予chloral hydrate 1ml PO 1800、2212，給藥後可心跳及體溫皆穩定，清醒時眼神明亮，哭聲大，無虛弱或嗜睡，頭部左側IV注射部位前端無紅腫滲液，推注順暢。\",\n          \"rec_dat\": \"20200107\",\n          \"rec_tim\": \"2215\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"楊雅璇\",\n          \"pro_not\": \"＃005潛在危險性皮膚完整性受損／局部皮膚處於浸潤風險狀態\\nE：2020.01.07 17:00  失禁性皮膚炎：嚴重程度: 高危險群 。長期臥床、使用尿布，採管灌及瓶餵飲食，口服抗生素治療，觀察臀部皮膚完整無受損，清潔後協助塗抹凡士林避免糞便長時間浸潤皮膚。\",\n          \"rec_dat\": \"20200107\",\n          \"rec_tim\": \"1749\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"何汝娟\",\n          \"pro_not\": \"＃009 營養改變：小於身體需要/與早產腸胃道不成熟有關\\nE：病嬰目前矯齡1個月又4天大，8號矽膠口胃管存，每三小時餵食SSC30卡 34ml，於餐前反抽胃管無胃餘量，依醫囑由口限制進食約15ml，因班內給鎮靜藥物安睡中於0900及1200暫未給予瓶餵餵食，於1500病嬰清醒協助由口餵食，進食14ml、餘量胃管輔助，管灌後無溢吐奶情形，腹部脹大明顯，觸診尚軟，班內共自解三次黃糊便，8小時平均排尿量：3.22ml/kg/hr。\",\n          \"rec_dat\": \"20200107\",\n          \"rec_tim\": \"1520\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"何汝娟\",\n          \"pro_not\": \"＃001 氣體交換障礙/與早產肺功能不成熟有關\\nE:於1211協助扎足跟血追蹤Gas：PH 7.32 ，PCO2  78，HCO3 40.2 ，BE 11.2 ，SAT 60 ％ ，李成彧醫師已知，維持目前呼吸器設定，給予鎮靜藥物後約10分鐘左右入睡，呼吸尚平穩維持28-54次/分，心跳維持143-155次/分，血氧維持89-93％，偶會低血氧至83-87％可自回，抽痰一次，口鼻抽出少至中量透明微黏稠分泌物，現肩下墊一毛巾，維持呼吸道通暢。\",\n          \"rec_dat\": \"20200107\",\n          \"rec_tim\": \"1426\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"何汝娟\",\n          \"pro_not\": \"＃014 高危險性感染/與早產兒免疫功能不成熟有關\\nE：病嬰膚色呈現粉紅，於1200測量腋溫36.6℃，觸摸皮膚溫暖，心跳維持142-155次/分，左頭部IV留置、推注暢，針眼外觀乾淨，無紅腫及滲液，協助重新消毒換藥，依醫囑抗生素Azithromycin 0.3ml W135 PO USE，服用後暫無不適情形。\",\n          \"rec_dat\": \"20200107\",\n          \"rec_tim\": \"1337\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"何汝娟\",\n          \"pro_not\": \"＃005O:病嬰長期臥床、使用尿布，管灌或瓶餵飲食，採口服抗生素使用。2020.01.07. 09:00  失禁性皮膚炎：嚴重程度: 高危險群 。\\nA：潛在危險性皮膚完整性受損／局部皮膚處於浸潤風險狀態\\nI：1.每2.5-3小時及必要時更換尿布，維持臀部皮膚清潔。\\n     2.病嬰解便後，用濕紙巾沾溫水清潔肛門口及臀部皮膚。\\n     3.清潔動作溫柔，避免用力過度摩擦皮膚造成受損。\\n     4.局部塗抹護膚膏，阻隔大小便直接接觸皮膚。\\nE：班內至目前自解二次黃糊便，觀察臀部皮膚完整無受損，皮膚外觀無發紅、破皮，續觀皮膚變化。\",\n          \"rec_dat\": \"20200107\",\n          \"rec_tim\": \"1304\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"何汝娟\",\n          \"pro_not\": \"＃001 O：病嬰目前矯齡1個月又4天大，交接班後續Nasal prong with IMV Mode，FiO2：50％，Rate：35次/分，PIP/PEEP：20/7 cmH2O，平靜熟睡時血氧大於88％，哭鬧躁動不安時易有低血氧至78-86％、唇色會有發紺情形；大夜班0734追蹤Gas：PH：7.27，PCO2：82，HCO3：36.7，BE：7.5。\\nA:氣體交換障礙/與早產肺功能不成熟有關\\nI:1.持續監測生命徵象及血氧變化。\\n    2.於0842依醫囑給予Chloral hydrate 10％ 1ml PO USE。\\n    3.於0845重新黏貼鼻部人工皮。\\n    4.於0850協助清除口鼻分泌物。\\n    5.依醫囑Q8H NS 3ml IH USE。\\n    6.肩下墊小毛巾，維持呼吸道通暢 。\",\n          \"rec_dat\": \"20200107\",\n          \"rec_tim\": \"1025\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"何汝娟\",\n          \"pro_not\": \"班內協助更換衣服及包布，保持身體乾淨無異味。全身性皮膚評估：顏色: 粉紅，溫度: 溫暖，完整性: 是，病變: 否，溼度: 乾燥 。病人口腔評估 : 口腔黏膜炎等級 : 0級:正常、無異常。FLACC行為疼痛評估總分 : 0分，給予護理措施 : 否，藥物處理 : 否 。意識狀態 : 警覺 。\",\n          \"rec_dat\": \"20200107\",\n          \"rec_tim\": \"0942\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"王琪\",\n          \"pro_not\": \"＃001 O：on Naasl CPAP with IMV Mode，FiO2:50％，Rate:20次/分，PIP/PEEP:20/7cmH2O use，偶於哭鬧過程中出現低血氧至80％，偶需給予調高氧氣後可恢復，依醫囑於0141給予chloral hydrate 1cc via OG使用，約10分鐘後病嬰可入睡，於0313由足跟採血f/u Gas：PH：7.32，PCO2：81，HCO3：41.7，BE：12.3\\nA：氣體交換障礙/與早產肺功能不成熟有關\\nI：1.於0330更改Rate由20至35次/分\\n2.Suction口鼻分泌物於每次灌食前\\n3.持續監測呼吸型態變化\\n4.採側俯臥促進肺部擴張\\n5.肩下墊小枕維持呼吸道通暢\\n6.預於0700f/u GAS變化\\nE：病嬰呼吸平穩，呼吸次數為20-40次/分，血氧維持85-95％，於0734由足跟採血f/u Gas：PH：7.27，PCO2：82，HCO3：36.7，BE：7.5，值班醫師知，更改回原使用Nasal CPAP，口鼻分泌物量中-多色白微稠，續予肩下墊小枕維持呼吸道通暢。\",\n          \"rec_dat\": \"20200107\",\n          \"rec_tim\": \"0742\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"王琪\",\n          \"pro_not\": \"＃009 營養改變：小於身體需要/與早產腸胃道不成熟有關\\nE：On OG feeding SSC-30卡 34cc/q3h，RV：0cc，腹部觸診柔軟，病嬰口慾強，練習由口進食可吃5-10cc，日體重2173gm，較1/6增加6gm，偶有哭鬧情形，給予奶嘴使用輕拍安撫後可入睡，一日熱量為125.92卡/kg，班內8小時 U/O：4.57cc/kg/hr，24小時U/O：4.97cc/kg/hr。\",\n          \"rec_dat\": \"20200107\",\n          \"rec_tim\": \"0713\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"王琪\",\n          \"pro_not\": \"＃005 潛在危險性皮膚完整性受損／局部皮膚處於浸潤風險狀態\\nE：於0100評估失禁性皮膚炎顯示為高危險群。目前未解便，更換尿布後，塗抹凡士林，避免大小便直接接觸皮膚，觀察臀部皮膚完整無破損，續每3-4小時更換尿布，續觀察皮膚狀態。\",\n          \"rec_dat\": \"20200107\",\n          \"rec_tim\": \"0214\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"郭銘惠\",\n          \"pro_not\": \"＃001 氣體交換障礙/與早產肺功能不成熟有關\\nE：On Nasal Prong with IMV mode，FiO2：50％、Rate：20次/分、PIP/PEEP：20/7cmH2，呼吸維持37-58次/分，血氧維持88-96％，管灌後及躁動時偶有呼吸喘快60-80次/分、低血氧78-84％，可自行回復，協助抽痰2次，痰量少至中、白、稠。\",\n          \"rec_dat\": \"20200106\",\n          \"rec_tim\": \"2242\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"郭銘惠\",\n          \"pro_not\": \"＃009 營養改變：小於身體需要/與早產腸胃道不成熟有關\\nE：6號矽膠口胃管存，每三小時餵食SSC30卡 34ml，餐前反抽胃管無胃餘量:0ml，協助由口餵食12-14ml，吸吞協調尚可，腹大觸摸尚軟，解2次黃糊便偶含黏液血絲，16小時平均排尿量:5.16ml/kg/hr。\",\n          \"rec_dat\": \"20200106\",\n          \"rec_tim\": \"2222\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"郭銘惠\",\n          \"pro_not\": \"＃014 高危險性感染/與早產兒免疫功能不成熟有關\\nE：於2000體溫改善36.7℃，班內心跳139-169次/分，頭部左側IV留置暢，針眼外觀乾淨，無紅腫滲液。\",\n          \"rec_dat\": \"20200106\",\n          \"rec_tim\": \"2013\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"郭銘惠\",\n          \"pro_not\": \"＃005潛在危險性皮膚完整性受損／局部皮膚處於浸潤風險狀態\\nE：2020.01.06. 17:00  失禁性皮膚炎：嚴重程度: 高危險群 。觀察臀部皮膚完整無受損，每3小時及必要時協助更換尿布並塗抹凡士林避免糞便與皮膚長時間浸潤，續觀皮膚完整性。\",\n          \"rec_dat\": \"20200106\",\n          \"rec_tim\": \"1922\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃001 O：交班後續on Nasal prong with IMV Mode，FiO2:50％，Rate:20次/分，PIP/PEEP:20/7cmH2O，病嬰安睡狀態下呼吸平穩、次數為34-60次/分，血氧維持88-93％，於哭鬧時會有心跳180-200次/分、低血氧至75-80％、膚色及唇色暗情形。\\nA：氣體交換障礙/與早產肺功能不成熟有關\\nI：1.班內協助行CXR檢查。\\n2.於1050更改為鼻罩式CPAP，並觀察使用狀況。\\n3.於1206依醫囑予Azithromycin 0.3ml STAT PO。\\n4.視需要抽吸口鼻分泌物。\\n5.持續監測生命徵象變化。\\n6.肩下墊小枕維持呼吸道通暢。\\nE：CXR陳文音醫師閱片囑和12/29相同(左上肺較白)，現安睡中，呼吸維持36-48次/分，心跳維持138-153次/分，血氧88-94％，偶有低血氧80-86％，可自回，班內抽痰一次，口鼻有少至中量、白、黏稠分泌物。\",\n          \"rec_dat\": \"20200106\",\n          \"rec_tim\": \"1531\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃009 營養改變：小於身體需要/與早產腸胃道不成熟有關\\nE：6號矽膠口胃管留置，反抽無胃餘量，依醫囑餵食SSC-30大卡 34ml Q3H，病嬰口慾強烈，每餐先協助分段由口瓶餵，約可喝10-14ml，無嗆吐，餘奶採管灌餵食，腹部外觀大、觸診尚軟，班內解2次中量黃糊便，8小時U/O：5.08ml/kg/hr。\",\n          \"rec_dat\": \"20200106\",\n          \"rec_tim\": \"1508\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃014 高危險性感染/與早產兒免疫功能不成熟有關\\nE：病嬰四肢揮動有力，於1200監測腋溫：36.6℃，觸摸膚溫暖，心跳次數約152-170次/分，頭部IV留置、推注暢，針眼外觀乾淨，無紅腫及滲液，依醫囑抗生素治療，暫無不適情形，曹醫師診視後囑可停用抗生素，續觀生命徵象變化。\",\n          \"rec_dat\": \"20200106\",\n          \"rec_tim\": \"1255\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃005 潛在危險性皮膚完整性受損／局部皮膚處於浸潤風險狀態\\nE：2020.01.06. 09:00  失禁性皮膚炎：危險因子評估分數: 7，嚴重程度: 高危險群。班內目前解一次黃糊便，觀察臀部及會陰部皮膚完整無發紅及受損，每3小時及必要時更換尿布，局部塗抹凡士林，阻隔大小便直接接觸皮膚，續觀膚況變化。\",\n          \"rec_dat\": \"20200106\",\n          \"rec_tim\": \"1154\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"班內協助更換衣服及包布，保持身體乾淨無異味。全身性皮膚評估：顏色: 粉紅，溫度: 溫暖，完整性: 是，病變: 否，溼度: 乾燥 。病人口腔評估 : 口腔黏膜炎等級 : 0級:正常、無異常。FLACC行為疼痛評估總分 : 0分，給予護理措施 : 否，藥物處理 : 否 。意識狀態 : 警覺 。\",\n          \"rec_dat\": \"20200106\",\n          \"rec_tim\": \"1053\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"陳誼珮\",\n          \"pro_not\": \"＃009 營養改變：小於身體需要/與早產腸胃道不成熟有關\\nE：病嬰今日測量體重：2176公克，較1/5增加22公克，8號矽膠口胃管留置，依醫囑每3小時餵食早產兒配方奶水SSC(30大卡) 34cc，餐前反抽RV：0-2cc半消化奶予灌回、18-30cc空氣予丟棄，觀察病嬰口慾強，協助以母乳實感奶嘴瓶餵，吸吞協調可，進食0-9cc後改為管灌餵食畢，暫無嗆吐奶情形，腹部外觀鼓大、觸摸微脹，班內未解便，24小時U/O：3.99cc/kg/hr，1/4整日攝取總熱量約126.81Kcal/kg，total I/O:+78.5cc。\",\n          \"rec_dat\": \"20200106\",\n          \"rec_tim\": \"0718\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"陳誼珮\",\n          \"pro_not\": \"＃001 氣體交換障礙/與早產肺功能不成熟有關\\nE：醫師調動呼吸器設定後，表示不需追蹤GAS；續On Nasal Prong with IMV mode，FiO2：50％、Rate：20次/分、PIP/PEEP：20/7cmH2O，病嬰呼吸次數約44-61次/分，偶有呼吸淺快:66-78次/分可自回，血氧約91-98％；病嬰哭鬧及灌食後會有低血氧79-84％，予暫時調高FiO2可回復，協助抽痰1次，口鼻少量白稠分泌物，續肩下墊小毛巾維持呼吸道通暢。\",\n          \"rec_dat\": \"20200106\",\n          \"rec_tim\": \"0611\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"陳誼珮\",\n          \"pro_not\": \"＃001 O：交接班後續on Nasal prong with IMV Mode，FiO2:50％，Rate:18次/分，PIP/PEEP:20/7cmH2O use，病嬰安睡狀態下呼吸平穩、呼吸次數為48-61次/分，血氧維持88-98％，於哭鬧時會有心跳180-195次/分、低血氧至79-84％、唇色微暗紫。\\nA：氣體交換障礙/與早產肺功能不成熟有關\\nI：1.於0045更換鼻部人工皮。\\n2.於0326依醫囑予Chloral hydrate 1ml Q4HPRN PO。\\n3.於0050及視需要抽吸口鼻分泌物。\\n4.持續監測生命徵象變化。\\n5.肩下墊小枕維持呼吸道通暢。\\n6.於0322協助扎足跟血追蹤Gas：PH  7.29，PCO2 78 ，HCO3 37.5 ，BE  8.8，SAT  75％。\\n7.於0330醫師診視病嬰gas數值，調整呼吸器設定rate:18→20次/分。\",\n          \"rec_dat\": \"20200106\",\n          \"rec_tim\": \"0405\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"陳誼珮\",\n          \"pro_not\": \"於0326因躁動難以安撫、臉膚色暗紫，心跳:185次/分、呼吸72次/分、血氧:79％，依醫囑給予Chloral hydrate 10％ 1cc STAT PO，給予後於0345已安睡，心跳可下降至140-150次/分左右，已交班續觀。\",\n          \"rec_dat\": \"20200106\",\n          \"rec_tim\": \"0355\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"陳誼珮\",\n          \"pro_not\": \"＃005潛在危險性皮膚完整性受損／局部皮膚處於浸潤風險狀態\\nE：病嬰長期臥床、使用尿布，採管灌及瓶餵飲食，抗生素治療，2020.01.06 01:00  失禁性皮膚炎：嚴重程度: 高危險群 。班內目前未解便，觀察臀部皮膚完整無受損，清潔後協助塗抹凡士林避免糞便與皮膚長時間浸潤，續觀皮膚完整性。\",\n          \"rec_dat\": \"20200106\",\n          \"rec_tim\": \"0206\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"楊雅璇\",\n          \"pro_not\": \"＃001 氣體交換障礙/與早產肺功能不成熟有關\\nE：On Nasal Prong with IMV mode，FiO2：50％、Rate：18次/分、PIP/PEEP：20/7cmH2，安睡時呼吸多維持30-60次/分，偶有呼吸喘快60-75次/分，協助抽痰2次，口鼻痰量中白黏稠，大多時間血氧可達88-94％，續觀。\",\n          \"rec_dat\": \"20200105\",\n          \"rec_tim\": \"2328\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"楊雅璇\",\n          \"pro_not\": \"＃009 營養改變：小於身體需要/與早產腸胃道不成熟有關\\nE：病嬰口慾強，給予奶嘴可安撫，6號矽膠口胃管存，每三小時餵食SSC30卡 34ml，餐前反抽胃管無胃餘量:0ml，腹膨大觸診柔軟，班內皆以管灌餵食SC-30 34ml Q3H，班內未解便，自解尿液順暢，16小時平均排尿量:4.22ml/kg/hr。\",\n          \"rec_dat\": \"20200105\",\n          \"rec_tim\": \"2250\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"楊雅璇\",\n          \"pro_not\": \"＃014 高危險性感染/與早產兒免疫功能不成熟有關\\nE：易躁動，躁動時心跳易偏快180次/分以上，且膚熱，故於依醫囑給予chloral hydrate 1ml PO at 1905、2306，給藥後可安睡，體溫改善36.9-37.5℃，心跳145-170次/分，予喚醒時眼神明亮，四肢揮動有力，頭部左側IV注射部位前端無紅腫滲液，推注順暢，依醫囑給予Soonmelt 70mg Q8H IVA治療，無不適，未有其他感染徵象。\",\n          \"rec_dat\": \"20200105\",\n          \"rec_tim\": \"2121\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"楊雅璇\",\n          \"pro_not\": \"＃005潛在危險性皮膚完整性受損／局部皮膚處於浸潤風險狀態\\nE：長期臥床、使用尿布，採管灌及瓶餵飲食，抗生素治療，解便性狀黃稀糊，觀察臀部皮膚完整無受損，清潔後協助塗抹凡士林避免糞便與皮膚長時間浸潤，續觀。2020.01.05 17:00  失禁性皮膚炎：嚴重程度: 高危險群 。\",\n          \"rec_dat\": \"20200105\",\n          \"rec_tim\": \"1718\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"病嬰躁動難以安撫，唇色及膚色微暗，於1457依醫囑予Chloral hydrate 10％ 1cc STAT PO，於1515已安睡。\",\n          \"rec_dat\": \"20200105\",\n          \"rec_tim\": \"1542\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃001 氣體交換障礙/與早產肺功能不成熟有關\\nE：On N-P with IMV mode，FiO2:50％、rate:18次/分、PIP/PEEP:20/7cmH2O使用，呼吸維持41-50次/分，心跳維持140-163次/分，血氧88-95％，抽痰一次，有少量、白、微稠分泌物，予肩下墊小毛巾維持呼吸道通暢。\",\n          \"rec_dat\": \"20200105\",\n          \"rec_tim\": \"1408\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃009 O：病嬰目前矯正年齡1個月又2天大，體重2145克，較1/4增加30克，位於生長曲線低於10百分位，8號矽膠口胃管留置，反抽無胃餘量，依醫囑餵食SSC-30大卡 34ml Q3H，腹部外觀大、觸診尚軟、無腸紋。\\nA：營養改變：小於身體需要/與早產腸胃道不成熟有關\\nI：1.經曹醫師診視後囑不增加奶量。\\n     2.餐前反抽胃餘量評估消化情形。\\n     3.詳細記錄輸出入量變化。\\nE：餐前反抽無胃餘量，病嬰口慾強烈，每餐先協助由口分段瓶餵，約可喝10-14ml，無嗆吐，餘奶採管灌餵食，腹部外觀大、觸診尚軟，班內解一次中量黃糊便，8小時U/O：3.96ml/kg/hr。\",\n          \"rec_dat\": \"20200105\",\n          \"rec_tim\": \"1401\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃014 高危險性感染/與早產兒免疫功能不成熟有關\\nE：於1200監測腋溫：36.7℃，觸摸皮膚溫暖，心跳次數約140-163次/分，頭部IV留置、推注暢，針眼外觀乾淨，無紅腫及滲液，依醫囑抗生素治療，暫無不適情形。\",\n          \"rec_dat\": \"20200105\",\n          \"rec_tim\": \"1254\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃005  O：2020.01.05. 09:00  失禁性皮膚炎：危險因子評估分數: 7，嚴重程度: 高危險群。病嬰長期臥床、尿布使用，依醫囑管灌餵食，抗生素使用，觀察臀部及會陰部皮膚完整無發紅及受損。\\nA：潛在危險性皮膚完整性受損／局部皮膚處於浸潤風險狀態\\nI：1.每3小時及必要時更換尿布，維持臀部皮膚清潔。\\n     2.病嬰解便後，用濕紙巾沾溫水清潔肛門口及臀部皮膚。\\n     3.清潔動作溫柔，避免用力過度摩擦皮膚造成受損。\\n     4.局部塗抹凡士林，阻隔大小便直接接觸皮膚。\\nE：班內目前一次黃糊便，每3小時及必要時更換尿布，續觀膚況變化。\",\n          \"rec_dat\": \"20200105\",\n          \"rec_tim\": \"1153\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"班內協助床邊沐浴、更換衣服及包布，保持身體乾淨無異味。全身性皮膚評估：顏色: 粉紅，溫度: 溫暖，完整性: 是，病變: 否，溼度: 乾燥 。病人口腔評估 : 口腔黏膜炎等級 : 0級:正常、無異常。FLACC行為疼痛評估總分 : 0分，給予護理措施 : 否，藥物處理 : 否 。意識狀態 : 警覺 。\",\n          \"rec_dat\": \"20200105\",\n          \"rec_tim\": \"1028\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"陳誼珮\",\n          \"pro_not\": \"＃001 氣體交換障礙/與早產肺功能不成熟有關\\nE：On Nasal Prong with IMV mode，FiO2：50％、Rate：18次/分、PIP/PEEP：20/7cmH2O，病嬰呼吸次數約40-60次/分，血氧約90-98％，於0319採足跟血監測Gas：PH  7.32，PCO2  73，HCO3  37.6，BE  9.4，SAT  62％，已告知醫師囑續觀；病嬰哭鬧及灌食後會有低血氧79-84％，予暫時調高FiO2可回復，協助抽痰2次，口鼻少至中量白稠分泌物，續肩下墊小毛巾維持呼吸道通暢。\",\n          \"rec_dat\": \"20200105\",\n          \"rec_tim\": \"0732\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"陳誼珮\",\n          \"pro_not\": \"＃009 營養改變：小於身體需要/與早產腸胃道不成熟有關\\nE：病嬰今日測量體重：2145公克，較1/4增加30公克，8號矽膠口胃管留置，依醫囑每3小時餵食早產兒配方奶水SSC(30大卡) 34cc，餐前反抽RV：0-7cc半消化奶予灌回、35-60cc空氣予丟棄，觀察病嬰口慾強，協助以母乳實感奶嘴瓶餵，吸吞協調可，進食7-15cc後改為管灌餵食畢，暫無嗆吐奶情形，腹部外觀鼓大、觸摸微脹，班內自解1次中量黃綠糊便，24小時U/O：3.61cc/kg/hr，1/4整日攝取總熱量約128.61Kcal/kg，total I/O:100.5cc。\",\n          \"rec_dat\": \"20200105\",\n          \"rec_tim\": \"0626\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"陳誼珮\",\n          \"pro_not\": \"於0519因躁動難以安撫，全身熱，臉、唇膚色暗紫，腋溫38℃，脈搏186次/分鐘，呼吸88次/分、SPO2 : 87％，依醫囑給予Chloral hydrate 10％ 1cc STAT PO，給予後於0600已安睡，心跳可下降至150-166次/分左右，已交班續觀。\",\n          \"rec_dat\": \"20200105\",\n          \"rec_tim\": \"0610\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"陳誼珮\",\n          \"pro_not\": \"＃014 高危險性感染/與早產兒免疫功能不成熟有關\\nE：0400監測腋溫：37℃，觸摸病嬰皮膚溫熱，四肢揮動有力，精神食慾佳，心跳次數約145-174次/分，躁動哭泣時心跳次數偏快約180-195次/分，頭部靜脈留置針存，針眼乾淨無紅腫滲液，依醫囑給予Soonmelt 70mg Q8H IVA治療，抗生素使用後暫無不適，續觀有無其他感染徵象。\",\n          \"rec_dat\": \"20200105\",\n          \"rec_tim\": \"0438\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"陳誼珮\",\n          \"pro_not\": \"於0100因躁動難以安撫、臉膚色暗紫，心跳:174次/分、呼吸68次/分、血氧:81％，依醫囑給予Chloral hydrate 10％ 1cc STAT PO，給予後於0110已安睡，心跳可下降至150-165次/分左右，已交班續觀。\",\n          \"rec_dat\": \"20200105\",\n          \"rec_tim\": \"0201\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"陳誼珮\",\n          \"pro_not\": \"＃005  O：2020.01.05. 01:00  失禁性皮膚炎：危險因子評估分數: 7，嚴重程度: 高危險群。病嬰長期臥床、尿布使用，依醫囑管灌餵食，抗生素使用，觀察臀部及會陰部皮膚完整無發紅及受損。\\nA：潛在危險性皮膚完整性受損／局部皮膚處於浸潤風險狀態\\nI：1.每3小時及必要時更換尿布，維持臀部皮膚清潔。\\n     2.病嬰解便後，用濕紙巾沾溫水清潔肛門口及臀部皮膚。\\n     3.清潔動作溫柔，避免用力過度摩擦皮膚造成受損。\\n     4.局部塗抹凡士林，阻隔大小便直接接觸皮膚。\\nE：班內目前解一次中量黃綠糊便，每3小時及必要時更換尿布，續觀膚況變化。\",\n          \"rec_dat\": \"20200105\",\n          \"rec_tim\": \"0131\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"楊雅璇\",\n          \"pro_not\": \"＃001 氣體交換障礙/與早產肺功能不成熟有關\\nE：On Nasal Prong with IMV mode，FiO2：50％、Rate：18次/分、PIP/PEEP：20/7cmH2，安睡時呼吸多維持42-56次/分，偶有呼吸喘快70-80次/分，協助抽痰2次，口鼻痰量多白黏稠，左側鼻腔黏膜有輕微出血，大多時間血氧可達90-94％，躁動或暫時移開NP膚色瞬間灰暗，約63-70％，安撫或戴回呼吸器即可改善，續觀。\",\n          \"rec_dat\": \"20200104\",\n          \"rec_tim\": \"2353\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"楊雅璇\",\n          \"pro_not\": \"＃009 營養改變：小於身體需要/與早產腸胃道不成熟有關\\nE：病嬰口慾強，6號矽膠口胃管存，每三小時餵食SSC30卡 34ml，餐前反抽胃管無胃餘量:0ML，腹膨大觸診柔軟，因熟睡中，於1800全奶量以管灌餵食，於2100瓶餵約8ML後即顯疲累，進食過程，吸吞動作協調需再加強，協助支托口腔周圍，班內未解便，自解尿液順暢，16小時平均排尿量:3.46ml/kg/hr。\",\n          \"rec_dat\": \"20200104\",\n          \"rec_tim\": \"2251\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"楊雅璇\",\n          \"pro_not\": \"＃014 高危險性感染/與早產兒免疫功能不成熟有關\\nE：難以熟睡，易躁動，心跳易偏快180次/分以上，膚熱腋溫37.5-37.9℃，眼神明亮，四肢揮動有力，未有其他感染徵象，故依醫囑給予chloral hydrate 1ml PO at 1758，可放鬆安睡，體溫改善37-37.1℃，心跳160-170次/分，餐前仍會自行清醒，口慾強，無嗜睡或軟弱，頭部左側IV注射部位前端無紅腫滲液，推注順暢，依醫囑給予Soonmelt 70mg Q8H IVA治療，無不適。\",\n          \"rec_dat\": \"20200104\",\n          \"rec_tim\": \"2246\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"楊雅璇\",\n          \"pro_not\": \"＃003 O：案母：想到回家要照顧她，感覺很害怕。\\nO：家屬住花蓮，這幾天案母前來學習照護，住麥當勞之家，案父晚上前來探視，病嬰極度早產兒，從出生開始病況欠穩，須長期使用呼吸器，慢性肺部疾病。\\nA：焦慮/與疾病進展有關\\nI：1.請案母回覆示教：灌食前確認管路位置的方式、如何評估消化情性 at 1800。\\n2.讓案父彈性探視 since 2010。\\n3.傾聽家屬擔心。\\nE：於提醒及講解下，案母了解如何確認口胃管的位置及消化，案父前來探視約10分鐘後，即帶著案姊，跟著媽媽一起回麥當勞之家，可再慢慢加入居家照護的內容，並列入交班。\",\n          \"rec_dat\": \"20200104\",\n          \"rec_tim\": \"2101\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"楊雅璇\",\n          \"pro_not\": \"＃005潛在危險性皮膚完整性受損／局部皮膚處於浸潤風險狀態\\nE：長期臥床、使用尿布，採管灌及瓶餵飲食，解便性狀黃稀糊，觀察臀部皮膚完整無受損，清潔後協助塗抹凡士林避免糞便與皮膚長時間浸潤，續觀。2020.01.04. 17:00  失禁性皮膚炎：嚴重程度: 高危險群 。\",\n          \"rec_dat\": \"20200104\",\n          \"rec_tim\": \"1741\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃009 營養改變：小於身體需要/與早產腸胃道不成熟有關\\nE：6號矽膠口胃管留置，反抽無胃餘量，依醫囑餵食SSC-30大卡 34ml Q3H，病嬰口慾強烈，每餐先協助分段由口瓶餵，約可喝10ml，無嗆吐，餘奶採管灌餵食，腹部外觀大、觸診尚軟，班內解一次中量黃糊便含少量黏液，8小時U/O：2.78ml/kg/hr。\",\n          \"rec_dat\": \"20200104\",\n          \"rec_tim\": \"1542\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃001 O：on Nasal prong with IMV Mode，FiO2:50％，Rate:18次/分，PIP/PEEP:20/7cmH2O use，病嬰安睡狀態下呼吸平穩、次數為42-59次/分，血氧維持88-94％，於哭鬧時會有心跳180-200次/分、低血氧至78-80％、唇色暗。\\nA：氣體交換障礙/與早產肺功能不成熟有關\\nI：1.於0930更換鼻部人工皮。\\n2.於1210依醫囑予Chloral hydrate 1ml Q6HPRN PO。\\n3.視需要抽吸口鼻分泌物。\\n4.持續監測生命徵象變化。\\n5.肩下墊小枕維持呼吸道通暢。\\nE：現安睡中，心跳維持168-175次/分，血氧93-95％，班內抽痰一次，口鼻有少至中量、白、黏稠分泌物。\",\n          \"rec_dat\": \"20200104\",\n          \"rec_tim\": \"1341\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃014 高危險性感染/與早產兒免疫功能不成熟有關\\nE：於1200監測腋溫：37.4℃，觸摸皮膚溫熱，心跳次數約166-188次/分，頭部IV留置、推注暢，班內更換IV敷料及T型連接管，針眼外觀乾淨，無紅腫及滲液，依醫囑抗生素治療，暫無不適情形。\",\n          \"rec_dat\": \"20200104\",\n          \"rec_tim\": \"1213\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃005 潛在危險性皮膚完整性受損／局部皮膚處於浸潤風險狀態\\nE：2020.01.04. 09:00  失禁性皮膚炎：危險因子評估分數: 7，嚴重程度: 高危險群。班內目前暫未解大便，觀察臀部及會陰部皮膚完整無發紅及受損，每3小時及必要時更換尿布，局部塗抹凡士林，阻隔大小便直接接觸皮膚，續觀膚況變化。\",\n          \"rec_dat\": \"20200104\",\n          \"rec_tim\": \"1047\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"班內更換衣服及包布，保持身體乾淨無異味。全身性皮膚評估：顏色: 粉紅，溫度: 溫暖，完整性: 是，病變: 否，溼度: 乾燥 。病人口腔評估 : 口腔黏膜炎等級 : 0級:正常、無異常。FLACC行為疼痛評估總分 : 0分，給予護理措施 : 否，藥物處理 : 否 。意識狀態 : 警覺 。\",\n          \"rec_dat\": \"20200104\",\n          \"rec_tim\": \"1032\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"陳誼珮\",\n          \"pro_not\": \"於0649因躁動難以安撫、臉膚色暗紫，心跳:183次/分、血氧:79％，依醫囑給予Chloral hydrate 10％ 1cc STAT PO，給予後於0710已安睡，心跳可下降至163-170次/分左右，已交班續觀。\",\n          \"rec_dat\": \"20200104\",\n          \"rec_tim\": \"0720\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"陳誼珮\",\n          \"pro_not\": \"＃009 營養改變：小於身體需要/與早產腸胃道不成熟有關\\nE：病嬰今日測量體重：2115公克，較1/3增加8公克，8號矽膠口胃管留置，依醫囑每3小時餵食早產兒配方奶水SSC(30大卡) 34cc，餐前反抽RV：0-4cc半消化奶，觀察病嬰口慾強，協助以母乳實感奶嘴瓶餵，吸吞協調可，進食10cc後改為管灌餵食畢，暫無嗆吐奶情形，腹部外觀鼓大、觸摸微脹，班內自解1次中量黃糊便，24小時U/O：3.75cc/kg/hr，1/3整日攝取總熱量約129.09Kcal/kg。\",\n          \"rec_dat\": \"20200104\",\n          \"rec_tim\": \"0652\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"陳誼珮\",\n          \"pro_not\": \"＃001 氣體交換障礙/與早產肺功能不成熟有關\\nE：On Nasal Prong with IMV mode，FiO2：50％、Rate：18次/分、PIP/PEEP：20/7cmH2O，病嬰呼吸次數約34-67次/分，血氧約95-98％，於0416採足跟血監測Gas：PH  7.35，PCO2  72，HCO3  39.7，BE 11.6 ，SAT  72％，已告知醫師囑續觀；病嬰哭鬧及灌食後偶有低血氧82-84％，予暫時調高FiO2可回復，協助抽痰1次，口鼻中量白稠分泌物，續肩下墊小毛巾維持呼吸道通暢。\",\n          \"rec_dat\": \"20200104\",\n          \"rec_tim\": \"0600\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"陳誼珮\",\n          \"pro_not\": \"＃014 高危險性感染/與早產兒免疫功能不成熟有關\\nE：0400監測腋溫：37.1℃，觸摸病嬰皮膚溫熱，四肢揮動有力，精神食慾佳，心跳次數約156-178次/分，躁動哭泣時心跳次數偏快約180-190次/分，頭部靜脈留置針存，針眼乾淨無紅腫滲液，依醫囑給予Soonmelt 70mg Q8H IVA治療，抗生素使用後暫無不適，續觀有無其他感染徵象。\",\n          \"rec_dat\": \"20200104\",\n          \"rec_tim\": \"0401\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"陳誼珮\",\n          \"pro_not\": \"＃005  O：2020.01.04. 01:00  失禁性皮膚炎：危險因子評估分數: 7，嚴重程度: 高危險群。病嬰長期臥床、尿布使用，依醫囑管灌餵食，抗生素使用，觀察臀部及會陰部皮膚完整無發紅及受損。\\nA：潛在危險性皮膚完整性受損／局部皮膚處於浸潤風險狀態\\nI：1.每3小時及必要時更換尿布，維持臀部皮膚清潔。\\n     2.病嬰解便後，用濕紙巾沾溫水清潔肛門口及臀部皮膚。\\n     3.清潔動作溫柔，避免用力過度摩擦皮膚造成受損。\\n     4.局部塗抹凡士林，阻隔大小便直接接觸皮膚。\\nE：班內目前解一次中量黃糊便，每3小時及必要時更換尿布，續觀膚況變化。\",\n          \"rec_dat\": \"20200104\",\n          \"rec_tim\": \"0146\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"楊雅璇\",\n          \"pro_not\": \"＃001 氣體交換障礙/與早產肺功能不成熟有關\\nE：On Nasal Prong with IMV mode，FiO2：50％、Rate：18次/分、PIP/PEEP：20/7cmH2，呼吸多維持45-60次/分，哭鬧時易呼吸喘快至70-80次/分，協助抽痰一次，口鼻痰量多白黏稠，安靜時血氧可達95％以上，躁動或暫時移開NP膚色灰暗，約65-70％，安撫或戴回呼吸器即可改善，續觀。\",\n          \"rec_dat\": \"20200103\",\n          \"rec_tim\": \"2332\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"楊雅璇\",\n          \"pro_not\": \"＃009 營養改變：小於身體需要/與早產腸胃道不成熟有關\\nE：病嬰會提早哭泣想吃，口慾強，6號矽膠口胃管存，每三小時餵食SSC30卡 34ml，餐前反抽胃管無胃餘量:0ML，瓶餵可急促吃完10ml，吸吞較不確實，續協助上抬下巴，及緩慢其吸吞動作，右嘴角溢奶情形才會改善，剩餘量管灌吸，腹部膨大，觸診尚軟，班內自解一次多量黃稀糊便，16小時平均排尿量:3.35ml/kg/hr。\",\n          \"rec_dat\": \"20200103\",\n          \"rec_tim\": \"2255\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"楊雅璇\",\n          \"pro_not\": \"＃014 高危險性感染/與早產兒免疫功能不成熟有關\\nE：難以熟睡，觸碰或睡到一半就會哭泣、扭動，全身皮膚溫熱，眼神明亮，四肢揮動有力，心跳偏快164-183次/分，班內體溫：37.6-37.9℃，予減少被蓋維持身體舒適，多拍哄安撫，已告知值班醫師李苡萱，評估後囑若體溫大於38℃，需抽血檢查，予列入交班；班內因躁動難以安撫，依醫囑給予chloral hydrate 1ml PO at 1719、2310，給予後較能安睡，心跳可下降至165次/分左右，頭部左側IV注射部位前端無紅腫滲液，推注順暢，依醫囑給予Soonmelt 70mg Q8H IVA治療，無不適。\",\n          \"rec_dat\": \"20200103\",\n          \"rec_tim\": \"2129\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"楊雅璇\",\n          \"pro_not\": \"＃005潛在危險性皮膚完整性受損／局部皮膚處於浸潤風險狀態\\nE：長期臥床、使用尿布，採管灌及瓶餵飲食，解便性狀黃稀糊，觀察臀部皮膚完整無受損，清潔後協助塗抹自備凡士林避免糞便與皮膚直接接觸，續觀。\",\n          \"rec_dat\": \"20200103\",\n          \"rec_tim\": \"1708\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃009 營養改變：小於身體需要/與早產腸胃道不成熟有關\\nE：6號矽膠口胃管留置，反抽無胃餘量，依醫囑餵食SSC-30大卡 34ml Q3H，病嬰口慾強烈，每餐先協助分段由口瓶餵，約可喝2-10ml，無嗆吐，餘奶採管灌餵食，腹部外觀大、觸診尚軟、無腸紋，班內解一次中量綠糊便含少量黏液，8小時U/O：1.84ml/kg/hr。\",\n          \"rec_dat\": \"20200103\",\n          \"rec_tim\": \"1508\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃001 氣體交換障礙/與早產肺功能不成熟有關\\nE：續維持目前呼吸器設定，病嬰現安睡狀態下呼吸維持35-65次/分，心跳維持159-172次/分，血氧維持92-98％，班內抽痰一次，口鼻有少量黏稠分泌物，，續肩下墊小毛巾維持呼吸道通暢。\",\n          \"rec_dat\": \"20200103\",\n          \"rec_tim\": \"1447\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃003 焦慮/與疾病進展有關\\nE：於1115案母前來，協助案母抱撫病嬰，之後示教瓶餵及管灌技巧，案母可執行瓶餵、技巧可，床邊陪伴並與病嬰互動良好，於1230離開病室，待明天下午1400前來瓶餵及管灌。\",\n          \"rec_dat\": \"20200103\",\n          \"rec_tim\": \"1333\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃014 高危險性感染/與早產兒免疫功能不成熟有關\\nE：於1200監測腋溫：37.2℃，觸摸皮膚溫熱，心跳次數約159-172次/分，頭部IV留置、推注暢，針眼外觀乾淨，無紅腫及滲液，依醫囑抗生素治療，暫無不適情形。\",\n          \"rec_dat\": \"20200103\",\n          \"rec_tim\": \"1259\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃001 O：On N-P with IMV mode，FiO2:50％、rate:25次/分、PIP/PEEP:20/7cmH2O使用，病嬰哭鬧躁動時呼吸陣喘約68-79次/分、微肋凹，血氧約80-85％，予抽痰少量、黏稠。\\nA：氣體交換障礙/與早產肺功能不成熟有關\\nI：1.依醫囑Budesonide 0.33BG+NS 3ml IH Q8H。\\n2.於0943曹珮真醫師診視予呼吸器Rate:25→18次/分，其餘設定未變。\\n3.於1050更換鼻部人工皮。\\n4.肩下墊小毛巾維持呼吸道通暢。\\n5.視需要抽吸口鼻分泌物。\\n6.持續監測生命徵象變化。\",\n          \"rec_dat\": \"20200103\",\n          \"rec_tim\": \"1239\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃005  O：2020.01.03. 09:00  失禁性皮膚炎：危險因子評估分數: 7，嚴重程度: 高危險群。病嬰長期臥床、尿布使用，依醫囑管灌餵食，抗生素使用，觀察臀部及會陰部皮膚完整無發紅及受損。\\nA：潛在危險性皮膚完整性受損／局部皮膚處於浸潤風險狀態\\nI：1.每3小時及必要時更換尿布，維持臀部皮膚清潔。\\n     2.病嬰解便後，用濕紙巾沾溫水清潔肛門口及臀部皮膚。\\n     3.清潔動作溫柔，避免用力過度摩擦皮膚造成受損。\\n     4.局部塗抹凡士林，阻隔大小便直接接觸皮膚。\\nE：班內目前暫未解大便，每3小時及必要時更換尿布，續觀膚況變化。\",\n          \"rec_dat\": \"20200103\",\n          \"rec_tim\": \"1137\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"班內協助床邊沐浴、更換衣服及包布，保持身體乾淨無異味。全身性皮膚評估：顏色: 粉紅，溫度: 溫暖，完整性: 是，病變: 否，溼度: 乾燥 。病人口腔評估 : 口腔黏膜炎等級 : 0級:正常、無異常。FLACC行為疼痛評估總分 : 0分，給予護理措施 : 否，藥物處理 : 否 。意識狀態 : 警覺 。\",\n          \"rec_dat\": \"20200103\",\n          \"rec_tim\": \"1100\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"彭惠玲\",\n          \"pro_not\": \"＃009 營養改變：小於身體需要/與早產腸胃道不成熟有關\\nE：今日測量體重：2107公克，較1/2增加8公克，8號矽膠口胃管留置，依醫囑每3小時餵食早產兒配方奶水SSC(30大卡) 34cc，每餐協助以母乳實感奶嘴瓶餵，吸吞協調可，可進食5cc，因顯疲累餘奶以管灌餵回，餐前反抽RV：0-1cc半消化奶，暫無嗆吐奶情形，腹大、觸摸尚軟，解2次中至多量褐糊黏液便，8小時U/O：5.84cc/kg/hr，24小時U/O：4.14cc/kg/hr，1/2整日攝取總熱量約135.35Kcal/kg。\",\n          \"rec_dat\": \"20200103\",\n          \"rec_tim\": \"0722\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"彭惠玲\",\n          \"pro_not\": \"＃001O:交接班續On Nasal Prong with IMV mode，FiO2：50％\\n、Rate：18次/分、PIP/PEEP：20/7cmH2O， 偶哭鬧，血氧不穩75-85％。\\nA:氣體交換障礙/與早產肺功能不成熟有關\\nI:1.監測生命徵象及血氧變化。\\n2.協助抽痰觀察痰液性值變化。\\n3.協助更換鼻部人工皮。\\n4.於0341由足跟血監測Gas：PH 7.35，PO2 34，PCO2 72，HCO3 39.7，BE 11.2，SAT 62％。\\n5.肩下置小毛巾維持呼吸道通暢。\\nE：病嬰呼吸約41-77次/分，血氧約88-94％，躁動或灌食後仍有低血氧82-85％，喝完奶後呼吸淺快70-78次/分，可自行回復，協助抽痰1次，痰少量、白、微稠，於0400 Rate：18→25次/分，續肩下墊小毛巾維持呼吸道通暢。\",\n          \"rec_dat\": \"20200103\",\n          \"rec_tim\": \"0517\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"彭惠玲\",\n          \"pro_not\": \"因病嬰顯躁動，呼吸淺喘70-80次/分，難安撫，心跳持續180-210次/分，依醫囑於0441給予chloral hydrate 1cc via OG使用，約10分鐘後病嬰可入睡。\",\n          \"rec_dat\": \"20200103\",\n          \"rec_tim\": \"0444\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"彭惠玲\",\n          \"pro_not\": \"＃014 高危險性感染/與早產兒免疫功能不成熟有關\\nE：病嬰管路有OG、頭部iv留置暢，針眼外觀乾淨，無紅腫及滲液，於0400監測腋溫：36.6℃，觸摸病嬰皮膚溫熱，心跳次數約155-165次/分，哭鬧時心跳165-175次/分，續依醫囑抗生素給予，暫無不適，今協助扎足跟血送CBC檢查李醫師已知報告予交班。\",\n          \"rec_dat\": \"20200103\",\n          \"rec_tim\": \"0405\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"彭惠玲\",\n          \"pro_not\": \"＃005 潛在危險性皮膚完整性受損／局部皮膚處於浸潤風險狀態\\nE：2020.01.03. 01:00  失禁性皮膚炎：嚴重程度: 高危險群 。\\n於0040解尿協助更換尿布，並塗抹護膚膏，保護臀部皮膚，觀察臀部皮膚完整，無發紅、破損，續每三小時及必要時協助更換尿布，再觀皮膚變化。\",\n          \"rec_dat\": \"20200103\",\n          \"rec_tim\": \"0220\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"王舒羿\",\n          \"pro_not\": \"＃009 營養改變：小於身體需要/與早產腸胃道不成熟有關\\nE：6號矽膠口胃管存，每三小時餵食SSC30卡 34ml，病嬰哭聲大，口慾強烈，餐前反抽胃管無胃餘量:0ML，班內由口進食約9-10ml，吸吞協調尚可，可喝完全部奶量，進食過程無嗆吐奶，餘量管灌輔助餵食，腹部脹大，觸診尚軟，班內未解便，8小時平均排尿量:3.9ml/kg/hr，16小時平均排尿量:3.2ml/kg/hr。\",\n          \"rec_dat\": \"20200102\",\n          \"rec_tim\": \"2254\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"王舒羿\",\n          \"pro_not\": \"＃001 氣體交換障礙/與早產肺功能不成熟有關\\nE：On Nasal Prong with IMV mode，FiO2：50％、Rate：18次/分、PIP/PEEP：20/7cmH2，已協助更換鼻部人工皮，病嬰眼神明亮，四肢揮舞有力，協助抽痰一次，痰量少白黏稠，哭鬧時易呼吸陣喘至70-80次/分，血氧約75-85％，唇色發紺，需10分鐘左右才能調節平順，提供安撫後呼吸可回復平順，班內平均呼吸:46-66次/分，血氧:88-97％，續觀。\",\n          \"rec_dat\": \"20200102\",\n          \"rec_tim\": \"2122\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"王舒羿\",\n          \"pro_not\": \"＃014 高危險性感染/與早產兒免疫功能不成熟有關\\nE：於2000監測腋溫：37.3℃，觸摸病嬰全身皮膚溫熱，眼神明亮，四肢揮動有力，協助溫水擦拭軀幹及四肢，並減少被蓋維持身體舒適，後可平靜入睡，平均心跳:154-179次/分，頭部左側IV注射部位前端無紅腫滲液，續依醫囑給予Soonmelt 70mg Q8H IVA治療，滴注順暢，續觀。\",\n          \"rec_dat\": \"20200102\",\n          \"rec_tim\": \"2020\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"王舒羿\",\n          \"pro_not\": \"＃005O:病嬰長期臥床、使用尿布，採管灌及瓶餵飲食。觀察臀部皮膚完整無受損。\\nA：潛在危險性皮膚完整性受損／局部皮膚處於浸潤風險狀態\\nI：1.每2.5-3小時及必要時更換尿布，維持臀部皮膚清潔。\\n     2.病嬰解便後，用濕紙巾沾溫水清潔肛門口及臀部皮膚。\\n     3.清潔動作溫柔，避免用力過度摩擦皮膚造成受損。\\n     4.局部塗抹護膚膏，阻隔大小便直接接觸皮膚。\\nE：班內至目前尚未解便，觀察臀部皮膚完整無受損，尿布包裹時協助塗抹自備凡士林避免糞便與皮膚直接接觸，續觀。\",\n          \"rec_dat\": \"20200102\",\n          \"rec_tim\": \"1920\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃009 O：病嬰目前矯正年齡29天大，體重2099克，較1/1增加4克，位於生長曲線低於10百分位，8號矽膠口胃管留置，反抽無胃餘量，依醫囑管灌SSC-30大卡 34ml Q3H，腹部外觀大、觸診尚軟、無腸紋。\\nA：營養改變：小於身體需要/與早產腸胃道不成熟有關\\nI：1.經曹醫師診視後囑不增加奶量。\\n     2.餐前反抽胃餘量評估消化情形。\\n     3.詳細記錄輸出入量變化。\\nE：依醫囑灌食該設定量，無溢吐，班內解2次少至中量黃糊便，8小時U/O：2.38ml/kg/hr。\",\n          \"rec_dat\": \"20200102\",\n          \"rec_tim\": \"1547\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃001 氣體交換障礙/與早產肺功能不成熟有關\\nE：On N-P with IMV mode，FiO2:50％、rate:18次/分、PIP/PEEP:20/7cmH2O使用，病嬰躁動不安、於1331依醫囑予10％Chloral hydrate 1ml管灌，約10分鐘後可入睡，呼吸維持56-78次/分，心跳維持178-182次/分，血氧90-96％，抽痰一次，有少量、白、微稠分泌物。\",\n          \"rec_dat\": \"20200102\",\n          \"rec_tim\": \"1455\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃014 高危險性感染/與早產兒免疫功能不成熟有關\\nE：於1200監測腋溫：37.9℃，病嬰顯躁動、觸摸皮膚溫熱，心跳次數約178-182次/分，於1331依醫囑予10％Chloral hydrate 1ml管灌，約10分鐘後可入睡；頭部IV留置、推注暢，針眼外觀乾淨，無紅腫及滲液，依醫囑抗生素治療，暫無不適情形。\",\n          \"rec_dat\": \"20200102\",\n          \"rec_tim\": \"1353\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"＃005 潛在危險性皮膚完整性受損／局部皮膚處於浸潤風險狀態\\nE：2020.01.03. 01:00  失禁性皮膚炎：嚴重程度: 高危險群。班內目前解一次少量黃糊便，觀察臀部皮膚完整，無發紅、破損，每三小時及必要時協助更換尿布，並塗抹護膚膏，保護臀部皮膚，續觀皮膚變化。\",\n          \"rec_dat\": \"20200102\",\n          \"rec_tim\": \"1152\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"賴玉珠\",\n          \"pro_not\": \"班內更換衣服及包布，保持身體乾淨無異味。全身性皮膚評估：顏色: 粉紅，溫度: 溫暖，完整性: 是，病變: 否，溼度: 乾燥 。病人口腔評估 : 口腔黏膜炎等級 : 0級:正常、無異常。FLACC行為疼痛評估總分 : 0分，給予護理措施 : 否，藥物處理 : 否 。意識狀態 : 警覺 。\",\n          \"rec_dat\": \"20200102\",\n          \"rec_tim\": \"1047\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"郭銘惠\",\n          \"pro_not\": \"因病嬰顯躁動，難安撫，心跳持續190-210次/分，呼吸喘70-80次/分，依醫囑於0745給予chloral hydrate 1cc via OG使用，約10分鐘後病嬰可入睡。\",\n          \"rec_dat\": \"20200102\",\n          \"rec_tim\": \"0756\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"郭銘惠\",\n          \"pro_not\": \"＃009 營養改變：小於身體需要/與早產腸胃道不成熟有關\\nE：今日測量體重：2099公克，較1/1增加4公克，8號矽膠口胃管留置，依醫囑每3小時餵食早產兒配方奶水SSC(30大卡) 34cc，餐前反抽RV：1-5cc半消化奶，每餐協助以母乳實感奶嘴瓶餵，吸吞協調可，可進食4-10cc，暫無嗆吐奶情形，腹大、觸摸尚軟，解2次中至多量綠糊黏液便，24小時U/O：3.68cc/kg/hr，1/1整日攝取總熱量約129.83Kcal/kg。\",\n          \"rec_dat\": \"20200102\",\n          \"rec_tim\": \"0653\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"郭銘惠\",\n          \"pro_not\": \"＃001 氣體交換障礙/與早產肺功能不成熟有關\\nE：病嬰呼吸約41-75次/分，血氧約91-94％，躁動或灌食後有低血氧82-85％，呼吸淺快70-90次/分，多可自行回復，協助抽痰1次，痰少量、白、微稠，於0317由足跟血監測Gas：PH 7.35，PO2 27，PCO2 70，HCO3 38.6，BE 10.4，SAT 47％。續肩下墊小毛巾維持呼吸道通暢。\",\n          \"rec_dat\": \"20200102\",\n          \"rec_tim\": \"0638\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"郭銘惠\",\n          \"pro_not\": \"＃014 高危險性感染/與早產兒免疫功能不成熟有關\\nE：於0400監測腋溫：37℃，觸摸病嬰皮膚溫熱，心跳次數約169-189次/分，頭部iv留置暢，針眼外觀乾淨，無紅腫及滲液，依醫囑抗生素給予，暫無不適。\",\n          \"rec_dat\": \"20200102\",\n          \"rec_tim\": \"0421\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"郭銘惠\",\n          \"pro_not\": \"＃008 O：病嬰今為矯齡29天大，四肢溫暖，現睡小床中，採巢式臥位。\\nA：正常子宮內生長發展剝削/與早產環境壓力有關\\nI：1.續採巢式臥位。\\n2.用布捲軸支托，使四肢趨向身體中線。\\n3.集中護理，提供長時間睡眠。\\nE：現趴臥，四肢趨向身體中線擺位，病嬰安睡中。\",\n          \"rec_dat\": \"20200102\",\n          \"rec_tim\": \"0405\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"郭銘惠\",\n          \"pro_not\": \"＃005 潛在危險性皮膚完整性受損／局部皮膚處於浸潤風險狀態\\nE：2020.01.02. 01:00  失禁性皮膚炎：嚴重程度: 高危險群 。\\n每三小時及必要時協助更換尿布，並塗抹護膚膏，保護臀部皮膚，觀察臀部皮膚完整，無發紅、破損，續觀皮膚變化。\",\n          \"rec_dat\": \"20200102\",\n          \"rec_tim\": \"0350\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"王舒羿\",\n          \"pro_not\": \"＃009 營養改變：小於身體需要/與早產腸胃道不成熟有關\\nE：6號矽膠口胃管存，每三小時餵食SSC30卡 34ml，病嬰哭聲大，口慾強烈，餐前反抽胃管無胃餘量:0ML，班內由口進食約9ml，吸吞協調尚可，可喝完全部奶量，進食過程無嗆吐奶，餘量管灌輔助餵食，腹部脹大，觸診尚軟，班內未解便，8小時平均排尿量:3.8ml/kg/hr，16小時平均排尿量:3.7ml/kg/hr。\",\n          \"rec_dat\": \"20200101\",\n          \"rec_tim\": \"2232\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"王舒羿\",\n          \"pro_not\": \"＃001 氣體交換障礙/與早產肺功能不成熟有關\\nE：On Nasal Prong with IMV mode，FiO2：50％、Rate：18次/分、PIP/PEEP：20/7cmH2，已協助更換鼻部人工皮，病嬰眼神明亮，四肢揮舞有力，協助抽痰一次，痰量少白黏稠，哭鬧時易呼吸陣喘至70-80次/分，血氧約75-85％，唇色發紺，需20分鐘左右才能調節平順，提供安撫後呼吸可回復平順，班內平均呼吸:38-56次/分，血氧:83-91％，續觀。\",\n          \"rec_dat\": \"20200101\",\n          \"rec_tim\": \"2200\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"王舒羿\",\n          \"pro_not\": \"＃014 高危險性感染/與早產兒免疫功能不成熟有關\\nE：於2000監測腋溫：36.5℃，觸摸病嬰皮膚溫暖，末梢微涼，眼神明亮，四肢揮動有力，精神食慾佳，平均心跳:158-176次/分，頭部左側IV注射部位前端無紅腫滲液，續依醫囑給予Soonmelt 70mg Q8H IVA治療，滴注順暢，續觀。\",\n          \"rec_dat\": \"20200101\",\n          \"rec_tim\": \"2132\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"王舒羿\",\n          \"pro_not\": \"＃005O:病嬰長期臥床、使用尿布，採管灌及瓶餵飲食。觀察臀部皮膚完整無受損。\\nA：潛在危險性皮膚完整性受損／局部皮膚處於浸潤風險狀態\\nI：1.每2.5-3小時及必要時更換尿布，維持臀部皮膚清潔。\\n     2.病嬰解便後，用濕紙巾沾溫水清潔肛門口及臀部皮膚。\\n     3.清潔動作溫柔，避免用力過度摩擦皮膚造成受損。\\n     4.局部塗抹護膚膏，阻隔大小便直接接觸皮膚。\\nE：班內至目前尚未解便，觀察臀部皮膚完整無受損，尿布包裹時協助塗抹自備凡士林避免糞便與皮膚直接接觸，續觀。\",\n          \"rec_dat\": \"20200101\",\n          \"rec_tim\": \"1831\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"王琪\",\n          \"pro_not\": \"＃001氣體交換障礙/與早產肺功能不成熟有關\\nE：on Naasl CPAP with IMV Mode，FiO2:50％，Rate:18次/分，PIP/PEEP:20/7cmH2O use，病嬰呼吸平穩，呼吸次數為20-40次/分，血氧維持85-95％，偶於哭鬧後有低血氧至75-78％，偶需給予調高氧氣後可恢復，依醫囑於1442給予chloral hydrate 1cc via OG使用，約10分鐘後病嬰可入睡，口鼻分泌物量少到中色白稀，續予肩下墊小枕維持呼吸道通暢。\",\n          \"rec_dat\": \"20200101\",\n          \"rec_tim\": \"1551\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"王琪\",\n          \"pro_not\": \"＃009 營養改變：小於身體需要/與早產腸胃道不成熟有關\\nE：On OG feeding SSC-30卡 34cc/q3h，RV：0cc，腹部觸診柔軟，病嬰口慾強，練習由口進食可吃10cc，班內8小時U/O：3.54c/hr，病童於班內共解4次黃綠糊水便內含黏液，吳政宏醫師知，留stool/R：OB2+，待留Stool/c。\",\n          \"rec_dat\": \"20200101\",\n          \"rec_tim\": \"1543\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"王琪\",\n          \"pro_not\": \"＃001 O：on Nasal CPAP with IMV Mode，FiO2:50％，Rate:18次/分，PIP/PEEP:20/7cmH2O use，病嬰呼吸平穩，呼吸次數為20-40次/分，血氧維持85-95％，偶於哭鬧後有低血氧至78％，予Suction及調高FiO2後可恢復\\nA：氣體交換障礙/與早產肺功能不成熟有關\\nI：1.協助重新固定CPAP\\n    2.給予奶嘴使用安撫情緒\\n    3.Suction口鼻分泌物\\n    4.持續監測生命徵象變化\\n    5.肩下墊小枕維持呼吸道通暢\",\n          \"rec_dat\": \"20200101\",\n          \"rec_tim\": \"1035\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"王琪\",\n          \"pro_not\": \"協助床邊沐浴更換衣物包布，現身體乾淨無異味。全身性皮膚評估：顏色: 粉紅，溫度: 溫暖，完整性: 是，病變: 否，溼度: 乾燥 。病人口腔評估 : 口腔黏膜炎等級 : 0級:正常、無異常。FLACC行為疼痛評估總分 : 0分，給予護理措施 : 否，藥物處理 : 否 。意識狀態 : 警覺 。\",\n          \"rec_dat\": \"20200101\",\n          \"rec_tim\": \"1032\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"王琪\",\n          \"pro_not\": \"＃005 潛在危險性皮膚完整性受損／局部皮膚處於浸潤風險狀態\\nE：於0900評估失禁性皮膚炎顯示為高危險群。目前未解便，更換尿布後，塗抹凡士林，避免大小便直接接觸皮膚，觀察臀部皮膚完整無破損，續每3-4小時更換尿布，續觀察皮膚狀態。\",\n          \"rec_dat\": \"20200101\",\n          \"rec_tim\": \"0943\",\n          \"ser_num\": \"25026885\"\n       },\n       {\n          \"@type\": \"nispnot\",\n          \"cre_nam\": \"郭銘惠\",\n          \"pro_not\": \"＃009 營養改變：小於身體需要/與早產腸胃道不成熟有關\\nE：今日測量體重：2095公克，較12/31減少48公克，8號矽膠口胃管留置，依醫囑每3小時餵食早產兒配方奶水SSC(30大卡) 34cc，餐前反抽RV：0-3cc半消化奶，每餐協助以母乳實感奶嘴瓶餵，吸吞協調可，可進食8c at 0300、0600，暫無嗆吐奶情形，腹大、觸摸尚軟，暫未解便，8小時U/O：1.75cc/kg/hr，24小時U/O：3.25cc/kg/hr，12/31整日攝取總熱量約126.92Kcal/kg。\",\n          \"rec_dat\": \"20200101\",\n          \"rec_tim\": \"0719\",\n          \"ser_num\": \"25026885\"\n       }\n    ],\n    \"ret\": \"0\",\n    \"retMsg\": \"Success\"\n }","export const data = [\n    {\n        \"ADMDATA\": \"　　臺　　　北　　　榮　　　民　　　總　　　醫　　　院                                                                                                                                                \"\n    },\n    {\n        \"ADMDATA\": \"        住 　院 　病 　歷( ADMISSION NOTE )                                                                                                                                                 \"\n    },\n    {\n        \"ADMDATA\": \"基本資料(GENERAL DATA)                                                                                                                                                                                \"\n    },\n    {\n        \"ADMDATA\": \"    病歷號碼:45440311  姓名　　:楊錦華女Ａ  住院日期:20191203住院時間:2004                                                                                                                    \"\n    },\n    {\n        \"ADMDATA\": \"    住院號　:25435270住院科別:NBD 病房床號:NICU02 身分　　:06                                                                                                                                   \"\n    },\n    {\n        \"ADMDATA\": \"    性別　　:F生日　　:20191203問診日期:20191203問診時間:2300                                                                                                                                   \"\n    },\n    {\n        \"ADMDATA\": \"    職業　　:N/A             血型　　:N/A轉診醫院:N/A                                                                                                                                             \"\n    },\n    {\n        \"ADMDATA\": \"    婚姻狀況:未婚  抽煙習慣:無抽煙習慣                                                                                                                                                          \"\n    },\n    {\n        \"ADMDATA\": \"主訴 (CHIEF COMPLAINT)                                                                                                                                                                                \"\n    },\n    {\n        \"ADMDATA\": \"    Respiratory distress after birth                                                                                                                                                                    \"\n    },\n    {\n        \"ADMDATA\": \"                                                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \"現在疾病 (PRESENT ILLNESS)                                                                                                                                                                            \"\n    },\n    {\n        \"ADMDATA\": \"    This is a just born baby girl (twin A) with birth history of G1P1A0, GA 28+3 weeks, BBW 11                                                                                                          \"\n    },\n    {\n        \"ADMDATA\": \"    53g, via C/S due to preterm labor, apgar score 8->9. The prenatal examinaiton showed: HBsA                                                                                                          \"\n    },\n    {\n        \"ADMDATA\": \"    g(-), HBeAg(-), VDRL(-), HIV(-), blood type:A+, borderline GDM on diet control. The prenat                                                                                                          \"\n    },\n    {\n        \"ADMDATA\": \"    al screening for down syndrome was low. Level II ultrasound showed no evidence of major an                                                                                                          \"\n    },\n    {\n        \"ADMDATA\": \"    omalies. However, mother developed abdominal pain and contraction since three days ago and                                                                                                          \"\n    },\n    {\n        \"ADMDATA\": \"     exaggeration was noted today. There's no fever, premature preterm rupture of membrane, or                                                                                                          \"\n    },\n    {\n        \"ADMDATA\": \"     vaginal bleeding. Preterm labor was diagnosed. Tocolytics and decadron one dose were admi                                                                                                          \"\n    },\n    {\n        \"ADMDATA\": \"    nistered. Patient was transferred from 金門 to our hospital. Because of birth process pr                                                                                                          \"\n    },\n    {\n        \"ADMDATA\": \"    ogression, baby was deliveried via urgent C/S. After birth, poor crying was noted. Suction                                                                                                          \"\n    },\n    {\n        \"ADMDATA\": \"    , stimulation, warming, and positive pressure ventilation were given. Heart rate was >100/                                                                                                          \"\n    },\n    {\n        \"ADMDATA\": \"    min. Early CPAP was administered and patient was sent to NICU for further evaluation and t                                                                                                          \"\n    },\n    {\n        \"ADMDATA\": \"    reatment.                                                                                                                                                                                           \"\n    },\n    {\n        \"ADMDATA\": \"                                                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \"過去病史 (PAST HISTORY)                                                                                                                                                                               \"\n    },\n    {\n        \"ADMDATA\": \"    No hereditary nor congenital disease in previous examination.                                                                                                                                       \"\n    },\n    {\n        \"ADMDATA\": \"                                                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \"個人習慣及過敏史 (PERSONAL HISTORY)                                                                                                                                                                   \"\n    },\n    {\n        \"ADMDATA\": \"    1. Birth history: G1P1A0, GA 28+3 weeks, BBW 1153g, via C/S due to preterm labor, apgar sc                                                                                                          \"\n    },\n    {\n        \"ADMDATA\": \"    ore 8->9 (twin A)\\r\\n                                                                                                                                                                                 \"\n    },\n    {\n        \"ADMDATA\": \"    2. Maternal history:\\r\\n                                                                                                                                                                              \"\n    },\n    {\n        \"ADMDATA\": \"     - 31-year-old GPA; blood type A type, Rh +;\\r\\n                                                                                                                                                      \"\n    },\n    {\n        \"ADMDATA\": \"     - HIV(-), Syphilis RPR(-), Rubella IgG(+), HBsAg(-), HBeAg(-), borderline GDM on diet con                                                                                                          \"\n    },\n    {\n        \"ADMDATA\": \"    trol\\r\\n                                                                                                                                                                                              \"\n    },\n    {\n        \"ADMDATA\": \"    3. Allergy : nil\\r\\n                                                                                                                                                                                  \"\n    },\n    {\n        \"ADMDATA\": \"    4. Vaccination: Nil                                                                                                                                                                                 \"\n    },\n    {\n        \"ADMDATA\": \"                                                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \"母嬰周產期病史 (PERINATAL HISTORY)                                                                                                                                                                    \"\n    },\n    {\n        \"ADMDATA\": \"    31-year-old GPA; blood type A type, Rh +;\\r\\n                                                                                                                                                         \"\n    },\n    {\n        \"ADMDATA\": \"    HIV(-), Syphilis RPR(-), Rubella IgG(+), HBsAg(-), HBeAg(-), borderline GDM on diet contro                                                                                                          \"\n    },\n    {\n        \"ADMDATA\": \"    l\\r\\n                                                                                                                                                                                                 \"\n    },\n    {\n        \"ADMDATA\": \"    No fever, no URI symptoms, no PPROM                                                                                                                                                                 \"\n    },\n    {\n        \"ADMDATA\": \"                                                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \"家族病史 (FAMILY HISTORY)                                                                                                                                                                             \"\n    },\n    {\n        \"ADMDATA\": \"    No remarkable congenital nor hereditary disease                                                                                                                                                     \"\n    },\n    {\n        \"ADMDATA\": \"                                                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \" REVIEW OF SYSTEM                                                                                                                                                                                       \"\n    },\n    {\n        \"ADMDATA\": \"理學檢查 (PHYSICAL EXAMINATION)                                                                                                                                                                       \"\n    },\n    {\n        \"ADMDATA\": \" GENERAL                                                                                                                                                                                                \"\n    },\n    {\n        \"ADMDATA\": \"    Pink color and active, mild respiraory distress under CPAP                                                                                                                                          \"\n    },\n    {\n        \"ADMDATA\": \"                                                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \" HEAD                                                                                                                                                                                                   \"\n    },\n    {\n        \"ADMDATA\": \"    Fontanelle not bulging, 2 FB                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \"                                                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \" EYES                                                                                                                                                                                                   \"\n    },\n    {\n        \"ADMDATA\": \"    no leukocoria, no pale conjunctiva, no congested conjunctiva, non-icteric sclera                                                                                                                    \"\n    },\n    {\n        \"ADMDATA\": \"                                                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \" EARS                                                                                                                                                                                                   \"\n    },\n    {\n        \"ADMDATA\": \"    no low set ear                                                                                                                                                                                      \"\n    },\n    {\n        \"ADMDATA\": \"                                                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \" NOSE                                                                                                                                                                                                   \"\n    },\n    {\n        \"ADMDATA\": \"    no nasal flaring, patent nostril                                                                                                                                                                    \"\n    },\n    {\n        \"ADMDATA\": \"                                                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \" THROAT & MOUTH                                                                                                                                                                                         \"\n    },\n    {\n        \"ADMDATA\": \"     Tonsil not injected, no ulceration, no blister, no vesicle\\r\\n                                                                                                                                       \"\n    },\n    {\n        \"ADMDATA\": \"     Palate: no cleft\\r\\n                                                                                                                                                                                 \"\n    },\n    {\n        \"ADMDATA\": \"     Lips: no cleft\\r\\n                                                                                                                                                                                   \"\n    },\n    {\n        \"ADMDATA\": \"     Face: no asymmetric                                                                                                                                                                                \"\n    },\n    {\n        \"ADMDATA\": \"                                                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \" NECK                                                                                                                                                                                                   \"\n    },\n    {\n        \"ADMDATA\": \"    symmetric, no palpated mass, no clavicle fracture, no Webbed neck, no torticollis                                                                                                                   \"\n    },\n    {\n        \"ADMDATA\": \"                                                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \" SKIN                                                                                                                                                                                                   \"\n    },\n    {\n        \"ADMDATA\": \"    Pink, no acrocyanosis, non-icteric, no greenish-yellow discolorization, normal turgor, no                                                                                                           \"\n    },\n    {\n        \"ADMDATA\": \"     peeling                                                                                                                                                                                            \"\n    },\n    {\n        \"ADMDATA\": \"                                                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \" CHEST & LUNGS                                                                                                                                                                                          \"\n    },\n    {\n        \"ADMDATA\": \"    Clear breathing sound without crackles, rales or wheezing\\r\\n                                                                                                                                         \"\n    },\n    {\n        \"ADMDATA\": \"    Sbcostal retractions(+), grunting(+)                                                                                                                                                                \"\n    },\n    {\n        \"ADMDATA\": \"                                                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \" HEART                                                                                                                                                                                                  \"\n    },\n    {\n        \"ADMDATA\": \"    regular heart beats, no audible murmur                                                                                                                                                              \"\n    },\n    {\n        \"ADMDATA\": \"                                                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \" ABDOMEN                                                                                                                                                                                                \"\n    },\n    {\n        \"ADMDATA\": \"    soft, globular, no distention, no visible loops\\r\\n                                                                                                                                                   \"\n    },\n    {\n        \"ADMDATA\": \"    umbilical cord: 2A1V, dry, no discharge\\r\\n                                                                                                                                                           \"\n    },\n    {\n        \"ADMDATA\": \"    normoactive bowel sound, no palpated mass                                                                                                                                                           \"\n    },\n    {\n        \"ADMDATA\": \"                                                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \" BACK & SPINE                                                                                                                                                                                           \"\n    },\n    {\n        \"ADMDATA\": \"    no scoliosis, no mass or dimping over sacrum area, no tufts of hair                                                                                                                                 \"\n    },\n    {\n        \"ADMDATA\": \"                                                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \" EXTREMITIES                                                                                                                                                                                            \"\n    },\n    {\n        \"ADMDATA\": \"    freely movable                                                                                                                                                                                      \"\n    },\n    {\n        \"ADMDATA\": \"                                                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \" NEUROLOGIC                                                                                                                                                                                             \"\n    },\n    {\n        \"ADMDATA\": \"    Motor：tone (posture), power (motility)\\r\\n                                                                                                                                                         \"\n    },\n    {\n        \"ADMDATA\": \"    Primitive Reflexes: Moro (+), Rooting (+), sucking (+), Grasp (+)                                                                                                                                   \"\n    },\n    {\n        \"ADMDATA\": \"                                                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \" DRE                                                                                                                                                                                                    \"\n    },\n    {\n        \"ADMDATA\": \"    Patent anus\\r\\n                                                                                                                                                                                       \"\n    },\n    {\n        \"ADMDATA\": \"    Grossly normal male exogenitalia, descended testis                                                                                                                                                  \"\n    },\n    {\n        \"ADMDATA\": \"                                                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \"                                                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \"MENTAL AND NUTRITIONAL CONDITIONS                                                                                                                                                                       \"\n    },\n    {\n        \"ADMDATA\": \"MENTAL CONDITION EVALUATION                                                                                                                                                                             \"\n    },\n    {\n        \"ADMDATA\": \"    1.ANXIETY (NERVOUSNESS) : NIL                                                                                                                                                                       \"\n    },\n    {\n        \"ADMDATA\": \"    2. DEPRESSIVE MOOD : NIL                                                                                                                                                                            \"\n    },\n    {\n        \"ADMDATA\": \"NUTRITIONAL STATUS EVALUATION(MUST SCORE)                                                                                                                                                               \"\n    },\n    {\n        \"ADMDATA\": \"    TOTAL SCORE : 0                                                                                                                                                                                     \"\n    },\n    {\n        \"ADMDATA\": \"    RISK OF MALNUTRITION : LOW RISK (=0)                                                                                                                                                                \"\n    },\n    {\n        \"ADMDATA\": \"    MANAGEMENT : ROUTINE CLINICAL CARE                                                                                                                                                                  \"\n    },\n    {\n        \"ADMDATA\": \"                                                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \"臆斷 (IMPRESSION)                                                                                                                                                                                     \"\n    },\n    {\n        \"ADMDATA\": \"    1. Prematurity GA 28+3 weeks, very low birth weight 1153g (twin A)\\r\\n                                                                                                                                \"\n    },\n    {\n        \"ADMDATA\": \"    2. Respiratory distress syndrome grade I\\r\\n                                                                                                                                                          \"\n    },\n    {\n        \"ADMDATA\": \"       s/p early CPAP and NIPPV 12/3-\\r\\n                                                                                                                                                                 \"\n    },\n    {\n        \"ADMDATA\": \"    3. Suspect perinatal infection\\r\\n                                                                                                                                                                    \"\n    },\n    {\n        \"ADMDATA\": \"       s/p empirical ampicillin and claforan 12/3-                                                                                                                                                      \"\n    },\n    {\n        \"ADMDATA\": \"                                                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \"計劃與目標 (PLAN TO DO & GOAL)                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \"    [Ventilation] NIPPV 30/30/18/5, follow CXR and gas Q8H\\r\\n                                                                                                                                            \"\n    },\n    {\n        \"ADMDATA\": \"    [Circulation] Stable\\r\\n                                                                                                                                                                              \"\n    },\n    {\n        \"ADMDATA\": \"    [Infection] Empirical ampicillin and claforan, collect blood culture and gastric lavage cu                                                                                                          \"\n    },\n    {\n        \"ADMDATA\": \"    lture\\r\\n                                                                                                                                                                                             \"\n    },\n    {\n        \"ADMDATA\": \"    [Brain] Check brain echo\\r\\n                                                                                                                                                                          \"\n    },\n    {\n        \"ADMDATA\": \"    [Heart] Check heart echo at 24hr\\r\\n                                                                                                                                                                  \"\n    },\n    {\n        \"ADMDATA\": \"    [Nutrition] Daily 80cc/kg/day, D10W, NPO                                                                                                                                                            \"\n    },\n    {\n        \"ADMDATA\": \"                                                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \"                                                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \"                                                                                                                                                                                                        \"\n    },\n    {\n        \"ADMDATA\": \"主治醫師：曹珮真               住院醫師：侯明欣               病歷輔助紀錄者：侯明欣                                                                                                        \"\n    }\n]\n\n","import React, { Component } from \"react\";\nimport { Select, Button, Icon } from \"antd\";\nimport * as ApiProvider from \"../../API/ApiProvider\";\nimport moment from \"moment\";\n// import Notelist from './Notelist'\n// import searchlogo from '../../Image/svg/Search.svg'\n\nimport * as Wardstate from \"../../Function/Wardstate\";\nimport \"./Note.scss\";\nimport * as timeFormat from './NoteTimeFormat'\nimport * as QPNOT_List from '../../Resource/QPNOT'\nimport * as ADMDISP_Data from '../../Resource/ADMDISP'\n// import X2JS from 'x2js';\n// import * as PR from '../../Resource/PRGTXQRY'\n\nvar dataRange = [];\n// var Loading = false;\nclass Noteview extends Component {\n  state = {\n    StartTime: null,\n    EndTime: null,\n    display_data: null,\n    context: null,\n    contentdisplay: false,\n\n    ADMDISP: [],\n    ADMLIST: null,\n    DISLIST: null,\n    DISDISP: [],\n    DTAROTQ4: [],\n    DTASOAPQ: [],\n    PCASELIST: [],\n    ERDISP: [],\n    PRGTXQRY: [],\n    PRGTXQRYDIS: [],\n    CPSLIST: [],\n    CPSDISP: [],\n    QPNOT: null,\n    QPNOTDIS: [],\n    OPSORAQ1: null,\n    OPSORAQ2: [],\n    SelectClass: 0,\n    isLoading: false,\n    groupdata: null\n  };\n  componentDidMount() {\n    this.apiData();\n  }\n\n\n  SelectADMDISP(ADISTNO, ADICASE) {\n    // ApiProvider.getStoredProcedureADMDISP(ADISTNO, ADICASE)\n    //   .then(data => { this.setState({ ADMDISP: data.data }); })\n    //   .catch(err => { console.log(\"Andy test getStoredProcedureADMDISP NG \" + JSON.stringify(err)); });\n    this.setState({ ADMDISP: ADMDISP_Data.data })\n  }\n  SelectDISDISP(CID) {\n    const { caseinfo } = this.props;\n    ApiProvider.getStoredProcedureDISDISP(caseinfo.HISID, CID)\n      .then(data => {\n        this.setState({\n          DISDISP: data.data\n        });\n      })\n      .catch(err => {\n        console.log(\n          \"Andy test getStoredProcedureADMDISP NG \" + JSON.stringify(err)\n        );\n      });\n  }\n\n  SelectERDISP(CID) {\n    const { caseinfo } = this.props;\n    ApiProvider.getStoredProcedureERDISP(caseinfo.HISID, CID)\n      .then(data => {\n        this.setState({\n          ERDISP: data.data\n        });\n      })\n      .catch(err => {\n        console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n      });\n  }\n  SelectDTASOAPQ(date, dpt) {\n    const { caseinfo } = this.props;\n    //門診紀錄內容 需要時間和醫生編號\n    ApiProvider.getStoredProcedureDTASOAPQ(caseinfo.HISID, date, dpt)\n      .then(data => {\n        this.setState({\n          DTASOAPQ: data.data\n        });\n      })\n      .catch(err => {\n        console.log(\n          \"Andy test getStoredProcedureDTASOAPQ NG \" + JSON.stringify(err)\n        );\n      });\n  }\n  SelectPRGTXQRYDIS(List) {\n    this.setState({ PRGTXQRYDIS: List });\n  }\n  SelectCPSDISP(HID, CID, SEQ) {\n    ApiProvider.getStoredProcedureCPSDISP(HID, CID, SEQ)\n      .then(data => {\n        this.setState({\n          CPSDISP: data.data\n        });\n      })\n      .catch(err => {\n        console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n      });\n  }\n  SelectQPNOTDIS(data) {\n    this.setState({\n      QPNOTDIS: data\n    });\n  }\n\n  SelectOPSORAQ1(OPABGNDT, OPATIMES) {\n    const { caseinfo } = this.props;\n    //門診紀錄內容 需要時間和醫生編號\n    ApiProvider.getStoredProcedureOPSORAQ2(caseinfo.HISID.toString().trim(), OPABGNDT.toString().trim(), OPATIMES.toString().trim())\n      .then(data => {\n        this.setState({\n          OPSORAQ2: data.data\n        });\n      })\n      .catch(err => {\n        console.log(\n          \"Andy test getStoredProcedureDTASOAPQ NG \" + JSON.stringify(err)\n        );\n      });\n  }\n  //==========================================================================\n\n  getADMLIST(HID) {\n    //門診紀錄列表\n    ApiProvider.getStoredProcedureADMLIST(HID, \"DOC3924B\")\n      .then(data => { this.setState({ ADMLIST: data.data }) })\n      .catch(err => {\n        console.log(\"Andy test getStoredProcedureADMLIST NG \" + JSON.stringify(err));\n      });\n  }\n\n  getDISLIST(HID) {\n    //出院並摘列表\n    ApiProvider.getStoredProcedureDISLIST(HID, \"DOC3924B\")\n      .then(data => {\n        this.setState({ DISLIST: data.data })\n      })\n      .catch(err => {\n        console.log(\n          \"Andy test getStoredProcedureDISLIST NG \" + JSON.stringify(err)\n        );\n      });\n  }\n  getDTAROTQ4(HID) {\n    //門診紀錄清單\n    ApiProvider.getStoredProcedureDTAROTQ4(HID)\n      .then(data => {\n        this.setState({ DTAROTQ4: data.data })\n      })\n      .catch(err => {\n        console.log(\n          \"Andy test getStoredProcedureDTAROTQ4 NG \" + JSON.stringify(err)\n        );\n      });\n  }\n\n  getPCASELIST(HID) {\n    //急診紀錄清單\n    ApiProvider.getStoredProcedurePCASELIST(HID, \"DOC3924B\", \"E\")\n      .then(data => {\n        this.setState({ PCASELIST: data.data })\n      })\n      .catch(err => {\n        console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n      });\n  }\n\n  getCPSLIST(HID) {\n    //會診紀錄清單\n    ApiProvider.getStoredProcedureCPSLIST(HID, \"DOC3924B\")\n      .then(data => {\n        this.setState({ CPSLIST: data.data })\n      })\n      .catch(err => {\n        console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n      });\n  }\n  getPRGTXQRY(HID, CID, ICUinTime) {\n    //病程紀錄清單\n    function nullvalue(value) {\n      if (value === null) {\n        return \"911\";\n      }\n      const PRGTXQRYDATE = moment(value.PLOCDT, \"YYYYMMDD\").format(\"YYYYMM\");\n      const D = PRGTXQRYDATE.substr(3, 3);\n      return D;\n    }\n\n    const LIVEPLOC = nullvalue(ICUinTime);\n    ApiProvider.getStoredProcedurePRGTXQRY(HID, LIVEPLOC, CID)\n      .then(data => { this.setState({ PRGTXQRY: data.data }); this.groupfirstarray(data.data); })\n      .catch(err => {\n        console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n      });\n  }\n  getQPNOT(CID, ICUinTime) {\n    //護理紀錄清單\n    // const transdt = caseinfo.TRANSINDT;\n    const ST = moment(ICUinTime, \"YYYYMMDD\").format(\"YYYYMMDDHHmm\");\n    const ET = moment().format(\"YYYYMMDDHHmm\");\n    ApiProvider.getQPNOT(CID, ST, ET)\n      .then(data => {\n        const parseSource = Wardstate.XM2JSON(data.data);\n        this.setState({ QPNOT: parseSource })\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    // this.setState({ QPNOT: QPNOT_List.data.resconts })\n  }\n  getOPSORAQ1(HID) {\n    ApiProvider.getStoredProcedureOPSORAQ1(HID)\n      .then(data => { this.setState({ OPSORAQ1: data.data }) })\n      .catch(err => { console.log(err); });\n  }\n  apiData() {\n    const { caseinfo } = this.props\n    const HID = caseinfo.HISID\n    const CID = caseinfo.CASEID\n    const PLOCinTime = caseinfo.PLOCSTART\n    const ICUinTime = caseinfo.TRANSINDT\n\n    this.getADMLIST(HID)\n    this.getDISLIST(HID)\n    this.getDTAROTQ4(HID)\n    this.getPCASELIST(HID)\n    this.getCPSLIST(HID)\n    this.getPRGTXQRY(HID, CID, PLOCinTime)\n    this.getQPNOT(CID, ICUinTime)\n    this.getOPSORAQ1(HID)\n    // this.setState({ isLoading: true });\n    // const { caseinfo } = this.props;\n    // //入院並摘\n    // const ADMLIST = ApiProvider.getStoredProcedureADMLIST(caseinfo.HISID, \"DOC3924B\")\n    //   .then(data => {\n    //     return data.data;\n    //   })\n    //   .catch(err => {\n    //     console.log(\n    //       \"Andy test getStoredProcedureADMLIST NG \" + JSON.stringify(err)\n    //     );\n    //   });\n    // //出院並摘\n    // const DISLIST = ApiProvider.getStoredProcedureDISLIST(\n    //   caseinfo.HISID,\n    //   \"DOC3924B\"\n    // )\n    //   .then(data => {\n    //     return data.data;\n    //   })\n    //   .catch(err => {\n    //     console.log(\n    //       \"Andy test getStoredProcedureDISLIST NG \" + JSON.stringify(err)\n    //     );\n    //   });\n\n    // //門診紀錄清單\n    // const DTAROTQ4 = ApiProvider.getStoredProcedureDTAROTQ4(caseinfo.HISID)\n    //   .then(data => {\n    //     return data.data;\n    //   })\n    //   .catch(err => {\n    //     console.log(\n    //       \"Andy test getStoredProcedureDTAROTQ4 NG \" + JSON.stringify(err)\n    //     );\n    //   });\n\n    // //急診紀錄清單\n    // const PCASELIST = ApiProvider.getStoredProcedurePCASELIST(\n    //   caseinfo.HISID,\n    //   \"DOC3924B\",\n    //   \"E\"\n    // )\n    //   .then(data => {\n    //     return data.data;\n    //   })\n    //   .catch(err => {\n    //     console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n    //   });\n\n    // const CPSLIST = ApiProvider.getStoredProcedureCPSLIST(\n    //   caseinfo.HISID,\n    //   \"DOC3924B\"\n    // )\n    //   .then(data => {\n    //     return data.data;\n    //   })\n    //   .catch(err => {\n    //     console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n    //   });\n\n    // function nullvalue(value) {\n    //   if (value === null) {\n    //     return \"911\";\n    //   }\n    //   const PRGTXQRYDATE = moment(value.PLOCDT, \"YYYYMMDD\").format(\"YYYYMM\");\n    //   const D = PRGTXQRYDATE.substr(3, 3);\n    //   return D;\n    // }\n\n    // const LIVEPLOC = nullvalue(caseinfo.PLOCSTART);\n    // const PRGTXQRY = ApiProvider.getStoredProcedurePRGTXQRY(\n    //   caseinfo.HISID,\n    //   LIVEPLOC,\n    //   caseinfo.CASEID\n    // ).then(data => {\n    //   return data.data;\n    // }).catch(err => {\n    //   console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n    // });\n    // const transdt = caseinfo.TRANSINDT;\n    // const ST = moment(transdt, \"YYYYMMDD\").format(\"YYYYMMDDHHmm\");\n    // const ET = moment().format(\"YYYYMMDDHHmm\");\n\n    // const QPNOT = ApiProvider.getQPNOT(caseinfo.CASEID, ST, ET)\n    //   .then(data => {\n    //     const parseSource = Wardstate.XM2JSON(data.data);\n    //     return parseSource;\n    //   })\n    //   .catch(err => {\n    //     console.log(err);\n    //   });\n    // const OPSORAQ1 = ApiProvider.getStoredProcedureOPSORAQ1(caseinfo.HISID)\n    //   .then(data => {\n    //     return data.data;\n    //   })\n    //   .catch(err => {\n    //     console.log(err);\n    //   });\n    // Promise.all([\n    //   ADMLIST,\n    //   DISLIST,\n    //   DTAROTQ4,\n    //   PCASELIST,\n    //   PRGTXQRY,\n    //   CPSLIST,\n    //   QPNOT,\n    //   OPSORAQ1\n    // ]).then(result => {\n    //   this.setState({\n    //     ADMLIST: result[0],\n    //     DISLIST: result[1],\n    //     DTAROTQ4: result[2],\n    //     PCASELIST: result[3],\n    //     PRGTXQRY: result[4],\n    //     CPSLIST: result[5],\n    //     QPNOT: result[6],\n    //     OPSORAQ1: result[7],\n    //     isLoading: false,\n    //   });\n    // }).catch(() => { this.setState({ isLoading: false }) });\n  }\n\n  // callbackFunction = item_array => {\n  //   this.setState({\n  //     display_data: item_array.NoteTime,\n  //     context: item_array.Content,\n  //     contentdisplay: true\n  //   });\n  // };\n\n  // onClickSearch() {\n  //   if (dataRange.length !== 0) {\n  //     this.setState({\n  //       StartTime: dataRange[0],\n  //       EndTime: dataRange[1]\n  //     });\n  //   }\n  // }\n\n  // onDateChange = (date, dateString) => {\n  // };\n\n\n  handleChange = e => {\n    let value = parseInt(e, 10);\n    if (value === 4) {\n      this.setState({ SelectClass: value });\n    }\n    this.setState({ SelectClass: value });\n  };\n\n\n\n  NotecontrolBar() {\n    const select_data = [\n      { item: \"入院病摘\", value: 0 },\n      { item: \"出院病摘\", value: 1 },\n      { item: \"門診紀錄\", value: 2 },\n      { item: \"急診紀錄\", value: 3 },\n      { item: \"病程紀錄\", value: 4 },\n      { item: \"會診紀錄\", value: 5 },\n      { item: \"護理紀錄\", value: 6 },\n      { item: \"手術記錄\", value: 7 }\n    ];\n\n    const items = (\n      <div\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"100px 100px 100px 100px\",\n          columnGap: \"10px\",\n          marginBottom: \"10px\",\n          gridAutoColumns: \"100px\",\n          gridAutoFlow: \"column\"\n        }}>\n        {select_data.map(info => {\n          return (\n            <Button\n              onClick={e => this.handleChange(e.target.value)}\n              className=\"topMenu\"\n              style={{\n                borderRadius: \"4px\",\n                color: \"#001a6d88\",\n                border: \"1px solid #001a6d88\",\n                paddingLeft: \"4px\",\n                paddingRight: \"4px\",\n                height: \"30px\",\n                gridTemplateColumns: \"column\",\n                cursor: \"pointer\"\n              }}\n              value={info.value}\n            >\n              {info.item}\n            </Button>\n          );\n        })}\n      </div>\n    );\n\n    return items;\n  }\n\n  renderContentArray() {\n    const source = this.state.SelectClass;\n    if (source === 0) {\n      const data = this.state.ADMDISP;\n      if (data.length === 0) {\n        return null;\n      } else {\n        const fakeADMData = data;\n        return fakeADMData.map(row => (\n          <div style={{ whiteSpace: \"pre-wrap\" }}>{row.ADMDATA}</div>\n        ));\n      }\n    }\n    if (source === 1) {\n      const data = this.state.DISDISP;\n      if (data.length === 0) {\n        return null;\n      } else {\n        const fakeADMData = data;\n        return fakeADMData.map(row => (\n          <div style={{ whiteSpace: \"pre-wrap\" }}>{row[\"1\"]}</div>\n        ));\n      }\n    }\n    if (source === 2) {\n      const data = this.state.DTASOAPQ;\n      if (data.length === 0) {\n        return null;\n      } else {\n        let textType = [];\n        let textObj = [];\n        for (var i = 0; i < data.length; i++) {\n          //find type\n          const type = data[i].DTSOAPTY;\n          const lines = data[i].DTSOAPSQ;\n          const content = data[i].DTSOAPTX;\n          if (textType.indexOf(type) === -1) {\n            //new type\n            const newObj = {\n              type: type,\n              lines: lines,\n              content: content\n            };\n            textObj.push(newObj);\n            textType.push(type);\n          } else {\n            //old type\n            const idx = textObj.findIndex(item => item.type === type);\n            textObj[idx].lines = lines;\n            textObj[idx].content = textObj[idx].content + \"\\n\" + content;\n          }\n        }\n        let textResult = [];\n        for (let index = 0; index < textObj.length; index++) {\n          textResult.push(textObj[index].type);\n          textResult.push(textObj[index].content);\n          textResult.push(\"\\n\");\n        }\n\n        return textResult.map(row => (\n          <div style={{ whiteSpace: \"pre-wrap\" }}>{row}</div>\n        ));\n      }\n    }\n    if (source === 3) {\n      const data = this.state.ERDISP;\n      if (data.length === 0) {\n        return null;\n      } else {\n        const fakeADMData = data;\n        return fakeADMData.map(function (info, index) {\n          const infoKey = Object.keys(info)\n          const infoKeyMap = infoKey.map(function (v, i, a) {\n            return (\n              <div key={i}>\n                {info[v]}\n              </div>\n            )\n          })\n          return infoKeyMap\n        })\n      }\n    }\n    if (source === 4) {\n      const data = this.state.PRGTXQRYDIS;\n      if (data.length === 0) {\n        return null;\n      } else {\n        var newList = [];\n        for (let index = 0; index < 5; index++) {\n          if (index === 0) {\n            const dataFilter = data.filter(function (info, index, arr) {\n              return info.PRGTYPE.toString().trim() === \"D\";\n            });\n            if (dataFilter.length !== 0) {\n              newList.push(dataFilter[0]);\n            }\n          }\n\n          if (index === 1) {\n            const dataFilter = data.filter(function (info, index, arr) {\n              return info.PRGTYPE.toString().trim() === \"S\";\n            });\n            if (dataFilter.length !== 0) {\n              newList.push(dataFilter[0]);\n            }\n          }\n\n          if (index === 2) {\n            const dataFilter = data.filter(function (info, index, arr) {\n              return info.PRGTYPE.toString().trim() === \"O\";\n            });\n            if (dataFilter.length !== 0) {\n              newList.push(dataFilter[0]);\n            }\n          }\n\n          if (index === 3) {\n            const dataFilter = data.filter(function (info, index, arr) {\n              return info.PRGTYPE.toString().trim() === \"A\";\n            });\n            if (dataFilter.length !== 0) {\n              newList.push(dataFilter[0]);\n            }\n          }\n\n          if (index === 4) {\n            const dataFilter = data.filter(function (info, index, arr) {\n              return info.PRGTYPE.toString().trim() === \"P\";\n            });\n            if (dataFilter.length !== 0) {\n              newList.push(dataFilter[0]);\n            }\n          }\n        }\n        const dataMap = newList.map(function (info, index, arr) {\n          return (\n            <div key={index} style={{ marginBottom: \"10px\" }}>\n              <div style={{ whiteSpace: \"pre-wrap\" }}>{info.PRGTYPE}</div>\n              <div style={{ whiteSpace: \"pre-wrap\" }}>{info.PRGTX}</div>\n            </div>\n          );\n        });\n        return dataMap;\n      }\n    }\n    if (source === 5) {\n      const data = this.state.CPSDISP;\n      if (data.length === 0) {\n        return null;\n      } else {\n        const fakeADMData = data;\n        return fakeADMData.map(row => (\n          <div style={{ whiteSpace: \"pre-wrap\" }}>{row[\"1\"]}</div>\n        ));\n      }\n    }\n    if (source === 6) {\n      const data = this.state.QPNOTDIS;\n      if (data.length === 0) {\n        return null;\n      } else {\n        // Time: moment(v.rec_dat.toString() + v.rec_tim.toString(), \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\"),\n        // special: v.special,\n        // a: v.cre_nam,\n        // b: v.pro_not\n        const fakeADMData = data.map(function (info, index, arr) {\n          const time = info.Time;\n          const cre_nam = info.cre_nam;\n          const pro_not = info.pro_not;\n          return (\n            <div style={{ marginBottom: \"10px\" }}>\n              <div>{time}</div>\n              <div>{cre_nam === undefined ? \"--\" : cre_nam}</div>\n              <div>{pro_not === undefined ? \"--\" : pro_not}</div>\n            </div>\n          );\n        });\n        return fakeADMData;\n      }\n    }\n    if (source === 7) {\n      const data = this.state.OPSORAQ2;\n      if (data.length === 0) {\n        return null;\n      } else {\n        const fakeADMData = data;\n        return fakeADMData.map(row => (\n          <div style={{ whiteSpace: \"pre-wrap\" }}>{row.CONTENT}</div>\n        ));\n      }\n    } else {\n      return null;\n    }\n  }\n\n  groupfirstarray(arrayList) {\n    console.log(arrayList)\n    var result = arrayList.filter(function (value, index, arr) {\n      const res = arr.map(function (value, index, arr) {\n        return moment(\n          value.PRGDT.toString() + value.PRGTM.toString(),\n          \"YYYY-MM-DDHH:mm:ss\"\n        ).valueOf();\n      });\n      return (\n        res.indexOf(\n          moment(\n            value.PRGDT.toString() + value.PRGTM.toString(),\n            \"YYYY-MM-DDHH:mm:ss\"\n          ).valueOf()\n        ) === index\n      );\n    });\n    var arrList = [];\n    for (let index = 0; index < result.length; index++) {\n      const element = result[index];\n      const comparevalue = moment(\n        element.PRGDT.toString() + element.PRGTM.toString(),\n        \"YYYY-MM-DDHH:mm:ss\"\n      ).valueOf();\n      const filterarray = arrayList.filter(function (value, index, arr) {\n        return (\n          moment(\n            value.PRGDT.toString() + value.PRGTM.toString(),\n            \"YYYY-MM-DDHH:mm:ss\"\n          ).valueOf() === comparevalue\n        );\n      });\n      arrList.push(filterarray);\n    }\n    this.setState({ groupdata: arrList })\n  }\n  switchListRender() {\n    function grouparray(arrayList) {\n      console.log(arrayList)\n      var result = arrayList.filter(function (value, index, arr) {\n        const res = arr.map(function (value, index, arr) {\n          return moment(value.rec_dat.toString(), \"YYYYMMDD\").valueOf();\n        });\n        return (\n          res.indexOf(\n            moment(value.rec_dat.toString(), \"YYYYMMDD\").valueOf()\n          ) === index\n        );\n      });\n      var arrList = [];\n      for (let index = 0; index < result.length; index++) {\n        const element = result[index];\n        const comparevalue = moment(\n          element.rec_dat.toString(),\n          \"YYYYMMDD\"\n        ).valueOf();\n        const filterarray = arrayList.filter(function (value, index, arr) {\n          return (\n            moment(value.rec_dat.toString(), \"YYYYMMDD\").valueOf() ===\n            comparevalue\n          );\n        });\n        arrList.push(filterarray);\n      }\n      return arrList;\n    }\n    const select = this.state.SelectClass;\n    if (select === 0) {\n      const data = this.state.ADMLIST;\n      if (data === null || data === undefined) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n            <Icon type=\"loading\" />\n          </div>\n        );\n      } else {\n        const cellRander = data.map((object, index, arr) => {\n          const HID = object.ADISTNO.toString().trim();\n          const CID = object.ADICASE.toString().trim();\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\",\n              }}\n              onClick={() => this.SelectADMDISP(HID, CID)}\n            >\n              <div style={{ fontSize: \"14px\" }}>\n                住院日:{moment(object.ADIDATE.toString().trim(), \"YYYYMMDD\").format(\"YYYY/MM/DD\")}\n              </div>\n              <div style={{ fontSize: \"14px\" }}>科別:{object.ADISECT}</div>\n            </div>\n          );\n        });\n        return (\n          // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n          <div>{cellRander}</div>\n        );\n      }\n    }\n    if (select === 1) {\n      const data = this.state.DISLIST;\n      if (data === null || data === undefined) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n            <Icon type=\"loading\" />\n          </div>\n        );\n      } else {\n        const cellRander = data.map((object, index, arr) => {\n          // const HID = object.ADISTNO.toString().trim()\n          const CID = object.DCASENO.toString().trim();\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectDISDISP(CID)}\n            >\n              <div style={{ fontSize: \"14px\" }}>\n                出院日:{moment(object.DDATEOUT.toString().trim(), \"YYYY-MM-DD\").format(\n                \"YYYY/MM/DD\"\n              )}\n              </div>\n              <div style={{ fontSize: \"14px\" }}>\n                科別:{object.DADMSECT.toString().trim()}\n              </div>\n            </div>\n          );\n        });\n        return (\n          <div>{cellRander}</div>\n        );\n      }\n    }\n    if (select === 2) {\n      const data = this.state.DTAROTQ4;\n      if (data === null || data === undefined) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n            <Icon type=\"loading\" />\n          </div>\n        );\n      } else {\n        const cellRander = data.map((object, index, arr) => {\n          const DPT = object.DTPDEPT.toString().trim();\n          const DTPDATE = object.DTPDATE.toString().trim();\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectDTASOAPQ(DTPDATE, DPT)}\n            >\n              <div style={{ fontSize: \"14px\" }}>\n                門診日期:{moment(object.DTPDATE.toString().trim(), \"YYYY-MM-DD\").format(\n                \"YYYY/MM/DD\"\n              )}\n              </div>\n              <div style={{ fontSize: \"14px\" }}>\n                科別:{object.SECTNM.toString().trim() + object.DTPDEPT.toString().trim()}\n              </div>\n              <div style={{ fontSize: \"14px\" }}>\n                醫師:{object.DTPDOCNM.toString().trim() + object.DTPDOCID.toString().trim()}\n              </div>\n            </div>\n          );\n        });\n        return (\n          <div>{cellRander}</div>\n        );\n      }\n    }\n    if (select === 3) {\n      const data = this.state.PCASELIST;\n      if (data === null || data === undefined) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n            <Icon type=\"loading\" />\n          </div>\n        );\n      } else {\n        const cellRander = data.map((object, index, arr) => {\n          const CID = object.PCASENO.toString().trim();\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectERDISP(CID)}\n            >\n              <div style={{ fontSize: \"14px\" }}>\n                看診日:{moment(object.PDISDT.toString().trim(), \"YYYYMMDD\").format(\n                \"YYYY/MM/DD\"\n              )}\n              </div>\n              {/* //修改 */}\n              <div style={{ fontSize: \"14px\" }}>\n                科別:{object.PPSECT.toString().trim()}\n              </div>\n            </div>\n          );\n        });\n        return (\n          <div>{cellRander}</div>\n        );\n      }\n    }\n    if (select === 4) {\n      const predata = this.state.PRGTXQRY\n      const data = this.state.groupdata\n      console.log(\"123123123123\")\n      if (data === null || data === undefined || predata.length === 0) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n            <Icon type=\"loading\" />\n          </div>\n        );\n      }\n      // if (this.state.isLoading) {\n      //   return (\n      //     <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n      //       <Icon type=\"loading\" />\n      //     </div>\n      //   );\n      // }\n      else {\n        const List = data.map(function (info, index, arr) {\n          const mapList = info.map(function (v, i, a) {\n            return {\n              PRGTX: v.PRGTX,\n              PRGTYPE: v.PRGTYPE,\n            };\n          });\n          return {\n            List: mapList,\n            DT: info[0].PRGDT,\n            TN: info[0].PRGTM,\n            Time: moment(info[0].PRGDT.toString().trim() + info[0].PRGTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf(),\n            PRGWARD: info[0].PRGWARD,\n            PRGBEDNO: info[0].PRGBEDNO,\n            PRGSECT: info[0].PRGSECT,\n            PRGENTNM: info[0].PRGENTNM\n          };\n        });\n        // console.log(List)\n        const sortList = List.sort(function (a, b) {\n          return a.Time < b.Time ? 1 : -1;\n        });\n        // console.log(sortList)\n        const cellRander = sortList.map((object, index, arr) => {\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectPRGTXQRYDIS(object.List)}\n            >\n              <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                <div style={{ fontSize: \"14px\" }}>\n                  時間:{moment(\n                  object.DT.toString() + object.TN.toString(),\n                  \"YYYY-MM-DDHH:mm:ss\"\n                ).format(\"MM/DD HH:mm\")}\n                </div>\n                <div style={{ fontSize: \"14px\" }}>\n                  {object.PRGWARD.toString().trim() + \"-\" + Number(object.PRGBEDNO)}\n                </div>\n              </div>\n              <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                <div style={{ fontSize: \"14px\" }}>\n                  科別:{object.PRGSECT.toString().trim()}\n                </div>\n                <div style={{ fontSize: \"14px\" }}>\n                  {object.PRGENTNM.toString().trim() + \"醫師\"}\n                </div>\n              </div>\n\n            </div>\n          );\n        });\n        return (\n          <div>{cellRander}</div>\n        );\n      }\n    }\n    if (select === 5) {\n      const data = this.state.CPSLIST;\n      if (data === null || data === undefined) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n            <Icon type=\"loading\" />\n          </div>\n        );\n      } else {\n        const cellRander = data.map((object, index, arr) => {\n          const CID = object.CPSCASE.toString().trim();\n          const SEQ = object.CPSOSEQ.toString().trim();\n          const HID = object.CPSHIST.toString().trim();\n          const DOC1 = object.CPKDOCN1.toString().trim();\n          const DOC2 = object.CPKDOCN2.toString().trim();\n          const DOC3 = object.CPKDOCN3.toString().trim();\n          console.log(object)\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectCPSDISP(HID, CID, SEQ)}\n            >\n              <div style={{ fontSize: \"14px\" }}>\n                會診日期:{moment(object.CPSENTDT.toString().trim(), \"YYYYMMDD\").format(\"YYYY/MM/DD\")}\n              </div>\n              <div style={{ fontSize: \"14px\" }}>\n                會診科別:{object.CPKSECT.toString().trim() + \"-\" + object.CPSOSECT.toString().trim()}\n              </div>\n              <div style={{ fontSize: \"14px\" }}>\n                會診醫師:{DOC1}{DOC2 === \"\" ? \"\" : \",\" + DOC2}{DOC3 === \"\" ? \"\" : \",\" + DOC3}\n              </div>\n            </div>\n          );\n        });\n        return (\n          <div>{cellRander}</div>\n        );\n      }\n    }\n    if (select === 6) {\n      const data = this.state.QPNOT\n      if (data === null || data === undefined) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n            <Icon type=\"loading\" />\n          </div>\n        );\n      } else {\n        console.log(data)\n        const List = grouparray(data);\n        const mapList = List.map(function (info, index, arr) {\n          const mapList = info.map(function (v, i, a) {\n            return {\n              Time: moment(\n                v.rec_dat.toString() + v.rec_tim.toString(),\n                \"YYYYMMDDHHmm\"\n              ).format(\"MM/DD HH:mm\"),\n              cre_nam: v.cre_nam,\n              pro_not: v.pro_not\n            };\n          });\n          return {\n            List: mapList,\n            DT: info[0].rec_dat.toString().trim()\n          };\n        });\n        const cellRander = mapList.map((object, index, arr) => {\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectQPNOTDIS(object.List)}\n            >\n              <div style={{ fontSize: \"14px\" }}>\n                日期:{moment(object.DT, \"YYYYMMDD\").format(\"YYYY/MM/DD\")}\n              </div>\n            </div>\n          );\n        });\n        return (\n          <div>{cellRander}</div>\n        );\n      }\n    }\n    if (select === 7) {\n      const data = this.state.OPSORAQ1\n      if (data === null || data === undefined) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n            <Icon type=\"loading\" />\n          </div>\n        );\n      } else {\n        console.log(data)\n        const cellRander = data.map((object, index, arr) => {\n          //OPABGNDT民國\n          console.log(object.OPABGNDT)\n          const OPABGNDT = timeFormat.OPABGNDTtimeformat(Number(object.OPABGNDT));\n          const OPAMANNM = object.OPAMANNM.toString().trim();\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectOPSORAQ1(object.OPABGNDT, object.OPATIMES)}\n            >\n              <div style={{ fontSize: \"14px\" }}>手術日期:{OPABGNDT}</div>\n              <div style={{ fontSize: \"14px\" }}>醫師:{OPAMANNM}</div>\n            </div>\n          );\n        });\n        return (\n          <div>{cellRander}</div>\n        );\n      }\n    }\n  }\n  render() {\n    const control = this.NotecontrolBar();\n    const renderContentArray = this.renderContentArray();\n    const listRender = this.switchListRender();\n    return (\n      <div>\n        {control}\n        <div>\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"240px 1fr\",\n              gridGap: \"10px\"\n            }}\n          >\n            <div>\n              <div\n                style={{\n                  backgroundColor: \"#71b0e46e\",\n                  height: \"36px\",\n                  paddingLeft: \"4px\",\n                  borderTopRightRadius: \"4px\",\n                  borderTopLeftRadius: \"4px\",\n                  color: \"rgba(0,0,0,0.7)\",\n                  alignItems: \"center\",\n                  width: \"240px\"\n                }}\n              >\n                <div\n                  style={{\n                    fontSize: \"16px\",\n                    color: \"rgba(0,0,0,0.8)\",\n                    lineHeight: \"36px\"\n                  }}\n                >\n                  資料清單\n                </div>\n              </div>\n              <div className=\"Notelayout\">\n                {listRender}\n              </div>\n            </div>\n            <div>\n              <div\n                style={{\n                  backgroundColor: \"#71b0e46e\",\n                  height: \"36px\",\n                  paddingLeft: \"4px\",\n                  borderTopRightRadius: \"4px\",\n                  borderTopLeftRadius: \"4px\",\n                  fontSize: \"16px\",\n                  color: \"rgba(0,0,0,0.7)\",\n                  alignItems: \"center\"\n                }}\n              >\n                <div\n                  style={{\n                    fontSize: \"16px\",\n                    color: \"rgba(0,0,0,0.8)\",\n                    lineHeight: \"36px\"\n                  }}\n                >\n                  文件內容\n                </div>\n              </div>\n              <div className=\"Notelayout\">\n                {renderContentArray}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Noteview;\n","import moment from \"moment\"\n\nexport function OPABGNDTtimeformat(OPABGNDT) {\n    function valueten(value) {\n        if (value < 10) {\n            return \"0\" + value\n        }\n        return value\n    }\n    if (OPABGNDT === NaN || OPABGNDT === null || OPABGNDT === undefined) {\n        return \"--\"\n    }\n    const year = parseInt(OPABGNDT / 10000) + 1911\n    const month = parseInt((OPABGNDT % 10000) / 100)\n    const day = parseInt(OPABGNDT % 100)\n    const date = year.toString() + valueten(month) + valueten(day)\n    return moment(date, \"YYYYMMDD\").format(\"YYYY/MM/DD\")\n}","import React, { Component } from 'react';\nimport { DatePicker, Button } from 'antd';\nimport GAS from '../CrossSectionView/GAS'\nimport RTbreathe from '../CrossSectionView/RTbreathe'\nimport './RTview.scss'\n// import X2JS from 'x2js';\n// import * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass RTview extends Component {\n    state = {\n        QSPE: [],\n        PickerDateRange: [moment(moment().subtract(6, 'days').format('YYYYMMDD')),\n        moment(moment().format('YYYYMMDD'))],\n    }\n\n    PickerDateRangeChange = (date, dateString) => {\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDateRange } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n        const st = PickerDateRange[0].valueOf()\n        const et = PickerDateRange[1].valueOf()\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                if (bronDate <= (st - day)) {\n                    const bTime = [moment(moment(st - day)), moment(moment(et - day))]\n                    this.PickerDateRangeChange(bTime)\n                }\n                break;\n            case 'N':\n                const nTime = [moment(moment().subtract(6, 'days').format('YYYYMMDD')), moment()]\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTemp = moment(moment()).valueOf()\n                if (aTemp >= (et + day)) {\n                    const aTime = [moment(moment(st + day)), moment(moment(et + day))]\n                    this.PickerDateRangeChange(aTime)\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const { RangePicker } = DatePicker\n        const momentDate = this.state.PickerDateRange\n\n        const PickerDateRange = [momentDate[0].valueOf(), momentDate[1].valueOf()]\n\n        return (\n            <div className='rtviewlayout'>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"250px 120px\", gridColumnGap: \"5px\", marginBottom: \"5px\" }}>\n                    <RangePicker\n                        getCalendarContainer={triggerNode => triggerNode.parentNode}\n                        value={this.state.PickerDateRange}\n                        format={\"YYYY/MM/DD\"}\n                        allowClear={false}\n                        locale={\"zh_TW\"}\n                        onChange={this.PickerDateRangeChange}\n                        disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                    />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"minus-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: '1fr 1fr', gridColumnGap: \"5px\" }}>\n                    <GAS PickerDateRange={PickerDateRange} caseinfo={caseinfo} searchbar={true} ></GAS>\n                    <RTbreathe PickerDateRange={PickerDateRange} caseinfo={caseinfo} searchbar={true} ></RTbreathe>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTview\n","import React, { Component } from 'react'\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Nurtionfeedingcell.scss'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Nurtionfeedingcell extends Component {\n    state = {\n        EditMode: false,\n        onEdit: false,\n        powerLogin: 0,\n        remark: '',\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { caseinfo, data } = this.props\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, data.ORDSEQNO, \"nurtionfeeding\").then(result => {\n            console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    onMouseEnter() {\n        this.setState(\n            {\n                EditMode: true\n            }\n        )\n    }\n    onMouseLeave() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    showModal = () => {\n        this.setState({\n            onEdit: true,\n        });\n    };\n\n    handleOk = newRemarkValue => {\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            onEdit: false,\n        });\n    };\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    Moduledisplay(PName, ST) {\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": PName,\n            \"remarkId\": this.props.data.ORDSEQNO,\n            \"remark\": this.state.remark,\n            \"transinId\": this.props.caseinfo.TRANSINID,\n            \"type\": \"nurtionfeeding\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n        );\n    }\n\n    render() {\n        const { data } = this.props\n        const startTime = moment(data.ORBGNDT.toString().trim(), \"YYYY-MM-DD\").format(\"MM/DD\")\n        const endTime = moment(data.ORENDDT.toString().trim(), \"YYYY-MM-DD\").format(\"MM/DD\")\n        const name = data.ORPROCED.toString().trim()\n\n        return (\n            <div onMouseEnter={() => this.onMouseEnter()} onMouseLeave={() => this.onMouseLeave()} className=\"remark\">\n                <div className='nurtionfeedingcell' style={{ gridTemplateRows: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"1fr\" : \"1fr 1fr\"] }}>\n                    <div className='cellforstate'>\n                        <div className='celllayout'>\n                            <t3>{startTime}</t3>\n                        </div>\n                        <div className='celllayout'>\n                            <t3>{endTime}</t3>\n                        </div>\n                        <div className='celllayout'>\n                            <t3>{name}</t3>\n                        </div>\n                    </div>\n                    <div className='cellforremark' style={{ display: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"none\" : \"flex\"] }}>\n                        <t3>{this.state.remark}</t3>\n                    </div>\n                </div>\n                <div style={this.state.EditMode ? {\n                    display: this.state.powerLogin == 1 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", top: 0, right: 0, height: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"50px\" : \"100px\"], background: \"white\", width: \"77px\", border: \"rgba(232, 232, 232, 1) 1px solid\"\n                } : { display: \"none\" }}>\n                    < div onClick={() => this.showModal()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }} >\n                        <img src={chooseedit} alt='chooseedit'></img>\n                    </div>\n                </div>\n                {this.Moduledisplay(name, startTime)}\n            </div >\n        );\n    }\n}\n\nexport default Nurtionfeedingcell\n","import React, { Component } from 'react'\nimport * as ApiProvider from '../../API/ApiProvider'\n// import { DatePicker, Input } from 'antd';\n// import searchlogo from '../../Image/svg/Search.svg'\nimport Nurtionfeedingcell from './Nurtionfeedingcell'\nimport moment from 'moment';\nimport * as ApiGithub from '../../API/ApiGithub'\n\n\nclass Nurtionfeedingorder extends Component {\n    state = {\n        TRTMNTQ1: [],\n        parser: { \"mappings\": [] },\n        class: \"飲食類別\"\n    }\n    componentDidMount() {\n        this.getAPIFeedingData()\n        this.getTreatmentOrderFilter()\n    }\n    getAPIFeedingData() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID.toString().trim()\n        const CID = caseinfo.CASEID.toString().trim()\n        ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => {\n                console.log(\"getAPIFeedingData OK \" + JSON.stringify(data.data))\n                this.setState({\n                    TRTMNTQ1: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n    }\n    getTreatmentOrderFilter() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Treatment\");\n                parser.mappings = [{ \"key\": \"全部\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson Treatment OK \" + JSON.stringify(parser))\n                this.setState({\n                    parser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部\"] = []\n\n        inputs.forEach(input => {\n            let content = input.ORPROCED;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部\"].push(input)\n        });\n        return allResult;\n    }\n\n    render() {\n        const { caseinfo, PickerDateRange } = this.props\n        const title = [\"開始時間\", \"結束時間\", \"處置名稱\"]\n        const titleCellRender = title.map(function (element, index, arr) {\n            return (\n                <div key={index} style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", borderCollapse: \"collapse\" }}>\n                    <div style={{ fontSize: \"14px\" }}>{element}</div>\n                </div>\n            );\n        })\n\n        const parse = this.parse;\n        let clusteredData = {}\n        if (this.state.parser !== undefined) {\n            clusteredData = parse(this.state.TRTMNTQ1, this.state.parser)\n        }\n        //filter data by selected class\n        let filteredData = clusteredData[this.state.class];\n        let filterData = []\n        if (filteredData !== undefined) {\n            let ListCellData = filteredData\n            filterData = ListCellData.filter((element, index, arr) => {\n                const time = moment(element.ORBGNDT, 'YYYY-MM-DD').valueOf()\n                return PickerDateRange[0] <= time && time <= PickerDateRange[1]\n            })\n\n            filterData = filterData.sort((a, b) => {\n                let tempTimeA = moment(a.ORBGNDT, 'YYYY-MM-DD').valueOf()\n                let tempTimeB = moment(b.ORBGNDT, 'YYYY-MM-DD').valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n        }\n\n        const DataCellRender = filterData.map(function (element, index, arr) {\n            return (\n                <Nurtionfeedingcell key={index} data={element} caseinfo={caseinfo} ></Nurtionfeedingcell>\n            );\n        })\n\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>Feeding Order</t2>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \" 1fr 1fr 2fr \", height: \"30px\", border: \"rgba(238,238,238,1) 1px solid\", backgroundColor: \"rgba(226, 237, 243,.5)\", justifyItems: \"center\" }}>\n                    {titleCellRender}\n                </div>\n                {filterData.length !== 0 &&\n                    <div style={{ minHeight: \"120px\", maxHeight: \"400px\", overflowY: \"auto\" }}>\n                        {DataCellRender}\n                    </div>}\n                {filterData.length === 0 &&\n                    <div style={{ height: \"50px\", paddingLeft: \"7.5%\", display: \"flex\", alignItems: \"center\" }}>\n                        今日無資料\n                    </div>}\n            </div>\n        );\n    }\n}\n\nexport default Nurtionfeedingorder\n","import React, { Component } from 'react'\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Nurtion_TPN_cell.scss'\nimport moment from 'moment'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Nurtiontpncell extends Component {\n    state = {\n        EditMode: false,\n        onEdit: false,\n        remark: null,\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { caseinfo, data } = this.props\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, data.UDORDSEQ, \"nurtiontpn\").then(result => {\n            console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    onMouseEnter() { this.setState({ EditMode: true }) }\n\n    onMouseLeave() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    showModal = () => {\n        this.setState({\n            onEdit: true,\n        });\n    };\n\n    handleOk = newRemarkValue => {\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    Moduledisplay(PName, ST) {\n\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": PName,\n            \"remarkId\": this.props.data.UDORDSEQ,\n            \"remark\": this.state.remark,\n            \"transinId\": this.props.caseinfo.TRANSINID,\n            \"type\": \"nurtiontpn\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            // <RemarkModal caseinfo={caseinfo} type=\"nurtiontpn\" name={title} visible={this.state.onEdit} remark={this.state.remark} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n        );\n    }\n    render() {\n        const { data } = this.props\n        const TPNList = [\"VOL.\", \"AA\", \"Glu\", \"Na\", \"K\", \"Ca\", \"P\", \"Mg\"]\n        const TPNListcellRender = TPNList.map(function (info, index) {\n            return (\n                <centerstyle key={index} style={{ border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                    <t2>{info}</t2>\n                </centerstyle>\n            );\n        })\n        function TPNSubDataMap(data, TPNDATA) {\n            if (TPNDATA === undefined || TPNDATA === null) {\n                return []\n            }\n            const TPNSubData = [data.UDDOSAGE, data.TPNDATA.AA, data.TPNDATA.Glu, data.TPNDATA.Na, data.TPNDATA.K, data.TPNDATA.Ca, data.TPNDATA.P, data.TPNDATA.Mg]\n            const TPNSubDatacellRender = TPNSubData.map(function (info, index) {\n                return (\n                    <centerstyle key={index} style={{ border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                        <t2>{info}</t2>\n                    </centerstyle>\n                );\n            })\n            return TPNSubDatacellRender\n\n        }\n        const TPNSubDatacellRender = TPNSubDataMap(data, data.TPNDATA)\n        const RemarkData = this.state.remark\n\n        const startTime = moment(data.UDBGNDT.toString().trim(), \"YYYY-MM-DD-HH.mm.ss.00.000000\").format(\"MM/DD HH:mm:ss\")\n        const endTime = moment(data.UDENDDT.toString().trim(), \"YYYY-MM-DD-HH.mm.ss.00.000000\").format(\"MM/DD HH:mm:ss\")\n        const name = data.UDGNAME.toString().trim()\n        const status = \"生效中\"\n        return (\n            <div onMouseEnter={() => this.onMouseEnter()} onMouseLeave={() => this.onMouseLeave()} className='nurtiontpntablelayout'>\n                <div style={{ height: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"100px\" : \"130px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \" 1fr 1fr 60px 450px\", height: \"100px\" }} >\n                        <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                            <t3>{startTime}</t3>\n                        </div>\n                        <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                            <t3>{endTime}</t3>\n                        </div>\n                        <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                            <t3>{status}</t3>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"30px 70px\" }}>\n                            <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                                <t3>{name}</t3>\n                            </div>\n                            <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(8,1fr)\" }}>\n                                    {TPNListcellRender}\n                                </div>\n                                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(8,1fr)\" }}>\n                                    {TPNSubDatacellRender}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ fontWeight: \"600\", color: \"rgb(0,120,0)\", display: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"none\" : \"flex\"], border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\", padding: \"0px 5px\", alignItems: \"center\", height: \"30px\", width: \"100%\" }}>\n                        <t3>{RemarkData}</t3>\n                    </div>\n                </div>\n                <div style={this.state.EditMode ? {\n                    display: this.state.powerLogin == 1 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", top: 0, right: 0, height: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"100px\" : \"130px\"], background: \"white\", width: \"77px\", border: \"rgba(232, 232, 232, 1) 1px solid\"\n                } : { display: \"none\" }}>\n                    < div onClick={() => this.showModal()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }} >\n                        <img src={chooseedit} alt='chooseedit'></img>\n                    </div>\n                </div>\n                {this.Moduledisplay(name, startTime)}\n            </div >\n        );\n    }\n}\n\nexport default Nurtiontpncell\n","import React, { Component } from 'react'\nimport * as d3 from \"d3\";\nimport './Watervaluechart.scss'\nimport { Modal } from 'antd'\n// import { getRandomfornumber } from '../../Function/Wardstate'\nimport moment from 'moment';\n\nclass Watervaluechart extends Component {\n    state = {\n        visible: false,\n        select: null,\n        rowdata: null\n    };\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: true,\n            select: null,\n            rowdata: null\n        });\n    };\n    componentDidUpdate() {\n        const { svg_key } = this.props\n        d3.select(\"#\" + svg_key).remove()\n        this.drawChart()\n\n    }\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentWillUnmount() {\n    }\n\n    cal_svg_hight() {\n        const { axisTop, axisBot } = this.props\n        if (axisTop) {\n            if (axisBot) {\n                return 160\n            }\n            else {\n                return 130\n            }\n        }\n        else {\n            if (axisBot) {\n                return 130\n            }\n            else {\n                return 90\n            }\n        }\n    }\n\n    cal_svg_transform() {\n        const { axisTop, axisBot } = this.props\n        if (axisTop) {\n            if (axisBot) {\n                return 70\n            }\n            else {\n                return 50\n            }\n        }\n        else {\n            if (axisBot) {\n                return 5\n            }\n            else {\n                return 5\n            }\n        }\n    }\n\n    drawChart() {\n        function formatShiftDays(startTime, endTime) {\n            const shiftDays = parseInt((endTime - startTime) / (24 * 60 * 60 * 1000))\n            return shiftDays\n        }\n        const { svg_key, id_key, startTime, watervalueData } = this.props\n        const width = (window.screen.availWidth - 50) / 2 - 50, height = 400\n        const max = 500, min = 0\n        const shiftDays = formatShiftDays(moment(startTime, \"YYYYMMDD\").valueOf(), moment().valueOf())\n\n        if (watervalueData.length === 0) {\n            return null\n        }\n        const rectwidth = (width / shiftDays) - 2\n        var x = d3.scaleLinear()\n            .domain([0, watervalueData.length])\n            .range([0, width]);\n\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([min, max])\n            .range([height, 0])\n\n\n\n        var yAxis = d3.axisLeft(y)\n            .ticks(11)\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(10);\n\n        var xAxisBottom = d3.axisBottom(x)\n            .ticks(watervalueData.length)\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(height + 10)\n            .tickFormat(function (d) {\n                if (d % 10 === 0) {\n                    if (d > 0) {\n                        return 'D' + d\n                    }\n                    return null\n                }\n                else return null;\n            });\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_key)\n            .attr(\"viewBox\", [0, 0, width + 80, height + 50])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 30 + \")\"); \n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n        svg.append(\"g\")\n            .call(xAxisBottom)\n            .attr(\"class\", \"axis\");\n\n\n        for (let index = 0; index < 11; index++) {\n            //上下虛線\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(index * 50))\n                .attr('x2', width)\n                .attr('y2', y(index * 50))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n        }\n\n        for (let index = 0; index < watervalueData.length; index++) {\n            //上下虛線\n            if (index % 10 === 0 && index > 0) {\n                svg.append('line')\n                    .attr('x1', x(0.5 + index))\n                    .attr('y1', y(min))\n                    .attr('x2', x(0.5 + index))\n                    .attr('y2', y(max))\n                    .style('stroke', 'rgba(187, 187, 187, 1)')\n                    .style('stroke-width', 1)\n                    .style('stroke-dasharray', 5.5);\n            }\n        }\n\n\n\n\n        // function rowdatageneral(number) {\n        //     const rowdata = {\n        //         'IV': {\n        //             \"max\": getRandomfornumber(number),\n        //             \"min\": 0\n        //         },\n        //         'feeding': {\n        //             \"max\": getRandomfornumber(number),\n        //             \"min\": 0\n        //         },\n        //         'Other': {\n        //             \"max\": getRandomfornumber(number),\n        //             \"min\": 0\n        //         }\n        //     }\n        //     return rowdata\n        // }\n        const select = this.state.select\n        if (select === null || select === undefined || select === \"\") {\n            d3.selectAll(\"rect#A123\").remove()\n        }\n        for (let index = 0; index < watervalueData.length; index++) {\n            const rowdata = watervalueData[index]\n            const orindex = index + 0.5\n            var svgrect = svg.append('g').on('click', () => {\n                if (rowdata === null) {\n\n                }\n                else {\n                    this.setState({\n                        visible: true,\n                        select: index,\n                        rowdata: rowdata\n                    });\n\n                }\n            })\n            if (index === select) {\n                svgrect.append('rect')\n                    .attr('id', 'A123')\n                    .attr('width', rectwidth + 2)\n                    .attr('height', y(0) - y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .attr('x', x(orindex) - (rectwidth / 2) - 1)\n                    .attr('y', y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .style('fill', 'rgba(0,0,0,0)')\n                    .style('stroke', '#F5A623')\n                    .style('stroke-width', 2)\n                    .style('cursor', 'pointer');\n            }\n            else {\n                svgrect.append('rect')\n                    .attr('id', 'A123')\n                    .attr('width', rectwidth + 2)\n                    .attr('height', y(0) - y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .attr('x', x(orindex) - (rectwidth / 2) - 1)\n                    .attr('y', y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .style('fill', 'rgba(0,0,0,0)')\n                    .style('stroke', 'rgba(0,0,0,0)')\n                    .style('stroke-width', 2)\n                    .style('cursor', 'pointer')\n                    .style('opacity', 1);\n            }\n            svgrect.append('line')\n                .attr('x1', x(orindex))\n                .attr('y1', y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                .attr('x2', x(orindex))\n                .attr('y2', y(rowdata.IV + rowdata.Other))\n                .style('stroke', '#2E64A4')\n                .style('stroke-width', rectwidth)\n\n            svgrect.append('line')\n                .attr('x1', x(orindex))\n                .attr('y1', y(rowdata.IV + rowdata.Other))\n                .attr('x2', x(orindex))\n                .attr('y2', y(rowdata.Other))\n                .style('stroke', '#C3EFFF')\n                .style('stroke-width', rectwidth)\n\n\n            svgrect.append('line')\n                .attr('x1', x(orindex))\n                .attr('y1', y(rowdata.Other))\n                .attr('x2', x(orindex))\n                .attr('y2', y(0))\n                .style('stroke', '#3B97E1')\n                // .style('stroke', 'red')\n                .style('stroke-width', rectwidth)\n        }\n    }\n\n    ModalRender() {\n        function nulldata(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return 0\n            }\n            return value\n        }\n        const data = this.state.rowdata\n        if (data === null || data === undefined) {\n            return null\n        }\n        // function sumRowdata(data) {\n        //     if (data === null || data === undefined) {\n        //         return 0\n        //     }\n        //     return data * 0.8\n        // }\n        const select = this.state.select\n        const waterdata = this.props.watervalueData\n        const car = waterdata[select].Caloriessum\n        return (\n            <Modal\n                title=\"Basic Modal\"\n                visible={this.state.visible}\n                onOk={this.handleOk}\n                onCancel={this.handleCancel}\n                footer={null}\n            >\n                <div>IV:{nulldata(data.IV)}</div>\n                <div>Feeding:{nulldata(data.Feeding)}</div>\n                <div>Other:{nulldata(data.Other)}</div>\n                <div>總熱量:{car}kcal</div>\n            </Modal>\n        );\n    }\n    render() {\n        const { id_key } = this.props\n        const model = this.ModalRender()\n        return (\n            <div id={id_key}>\n                {model}\n            </div>\n        );\n    }\n}\n\nexport default Watervaluechart\n","import React, { Component } from 'react'\nimport Nurtiontpncell from './Nurtion_TPN_cell'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as ApiGithub from '../../API/ApiGithub'\n\nclass Nurtiontpnorder extends Component {\n    state = {\n        onEdit: false,\n        tpndata: [],\n        UDORDER0: [],\n        tpnParsers: []\n    }\n    componentDidMount() {\n        const getAPITPNData = this.getAPITPNData.bind(this)\n        ApiGithub.getGitHubJson(\"TpnOrder.json\")\n            .then(data => {\n                let parser = data.data\n                console.log(\"getGitHubJson TPN Order OK \" + JSON.stringify(parser))\n                this.setState({\n                    tpnParsers: parser\n                }, () => {\n                    getAPITPNData()\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n    }\n    getAPITPNData() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID.toString().trim()\n        const CID = caseinfo.CASEID.toString().trim()\n        const { tpnParsers } = this.state\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                //create list need to do search\n                let tpnList = [] // All TPN data\n                let selected_parser = undefined\n                //fakeData.forEach(item => {\n                data.data.forEach(item => {\n                    //get parser\n                    selected_parser = this.select_parser(item, tpnParsers)\n                    if (selected_parser !== undefined) {\n                        const found = item.UDDRGNAM.match(RegExp(selected_parser.apply_condition.name, selected_parser.apply_condition.name_regex_flags))\n                        if (found !== null && found !== \"\") tpnList.push(item)\n                    }\n                });\n\n                if (selected_parser !== undefined) {\n                    //parser 7 value from each TPN document （AA, Glu, Na, K, Ca, P, Mg）\n                    tpnList.forEach((item, index) => {\n                        ApiProvider.getStoredProcedureUDTEXTQ1(CID, item.UDORDSEQ)\n                            .then(data => {\n                                console.log(\"getStoredProcedureUDTEXTQ1 OK \" + JSON.stringify(data.data))\n\n                                //parse every line\n                                const result = this.parse(data.data, selected_parser)\n                                item.TPNDATA = result;\n                                tpnList.splice(index, 1, item)\n                                this.setState({\n                                    tpndata: tpnList\n                                })\n                            })\n                            .catch(err => {\n                                console.log(\"getStoredProcedureUDTEXTQ1 NG \" + err)\n                            });\n                    });\n                }\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureUDORDER0 NG \" + err)\n            });\n    }\n    select_parser = (input, parsers) => {\n        const inputBeginTime = moment(input.UDBGNDT, \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n        const inputEndTime = moment(input.UDENDDT, \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n        return parsers.find(x =>\n            input.UDDRGNAM.match(x.apply_condition.name)\n            && (!x.apply_condition.start_time || inputBeginTime >= x.apply_condition.start_time)\n            && (!x.apply_condition.end_time || inputEndTime < x.apply_condition.end_time)\n        )\n    }\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = \"\"\n        });\n\n        inputs.forEach(input => {\n            let content = input.UDWORD;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key] = match[mapping.position]\n                }\n            });\n        });\n        return allResult;\n    }\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = e => {\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    render() {\n        const { caseinfo, PickerDateRange } = this.props\n        const title = [\"開始時間\", \"結束時間\", \"狀態\", \"處置名稱\"]\n        const titilecell = title.map(function (info, index) {\n            return (\n                <div key={index} style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", borderCollapse: \"collapse\" }}>\n                    <div style={{ fontSize: \"14px\" }}>{info}</div>\n                </div>\n            );\n        })\n        const ListCellData = this.state.tpndata\n        let filterData = ListCellData.filter((element, index, arr) => {\n            const time = moment(moment(element.UDBGNDT, 'YYYY-MM-DD-HH.mm.ss.000000').format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n            return PickerDateRange[0] <= time && time <= PickerDateRange[1]\n        })\n\n        filterData = filterData.sort((a, b) => {\n            let tempTimeA = moment(moment(a.UDBGNDT, 'YYYY-MM-DD-HH.mm.ss.000000').format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n            let tempTimeB = moment(moment(b.UDBGNDT, 'YYYY-MM-DD-HH.mm.ss.000000').format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n            return tempTimeA < tempTimeB ? 1 : -1\n        })\n\n        const DataCellRender = filterData.map(function (element, index, arr) {\n            return (\n                <Nurtiontpncell key={index} data={element} caseinfo={caseinfo} ></Nurtiontpncell>\n            );\n        })\n\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>TPN order</t2>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \" 1fr 1fr 60px 450px\", height: \"30px\", border: \"rgba(238,238,238,1) 1px solid\", backgroundColor: \"rgba(226, 237, 243,.5)\", justifyItems: \"center\" }}>\n                    {titilecell}\n                </div>\n                {filterData.length !== 0 && <div style={{ minHeight: \"120px\", maxHeight: \"400px\", overflowY: \"auto\" }}>\n                    {DataCellRender}\n                </div>}\n                {filterData.length === 0 &&\n                    <div style={{ height: \"50px\", paddingLeft: \"1.5%\", display: \"flex\", alignItems: \"center\" }}>\n                        今日無資料\n                    </div>}\n            </div>\n        );\n    }\n}\n\nexport default Nurtiontpnorder\n","import React, { Component } from 'react'\nimport Nurtionfeedingorder from './Nurtionfeeding'\nimport { Select, Button, DatePicker, Modal, Icon } from 'antd';\nimport WardlifeChart from '../../Wardview/Wardlifechart'\nimport Wardmonthafter from '../../Wardview/Wardmonthafter'\nimport Nurtiontpnorder from './Nurtion_TPN'\nimport Watervaluechart from './Watervaluechart'\nimport { gender } from '../../Function/Wardbedfunction'\nimport X2JS from 'x2js';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\nimport * as FiliterReg from '../../Function/FiliterReg'\nimport './Nurtion.scss'\nimport * as QDCData from '../../Resource/QDC'\nimport * as ioDataFormat from '../../Module/ioDataFormat'\n\nclass Nurtionview extends Component {\n    state = {\n        visible: false,\n        test_items_interval: 0,\n        UDORDER0: [],\n        QDC: [],\n        QTWER: [],\n        isLoading: false,\n        PickerDateRange: moment(moment().format('YYYYMMDD'))\n    }\n    componentDidMount() {\n        this.API_DATA()\n    }\n    API_DATA() {\n        const { caseinfo } = this.props\n        const xm2 = new X2JS()\n        const st = moment(caseinfo.TRANSINDT.toString(), 'YYYYMMDD').format('YYYYMMDDHHmm')\n        const et = moment().format(\"YYYYMMDDHHmm\")\n        ApiProvider.getQDC(caseinfo.CASEID, st, et)\n            .then(data => {\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                console.log(parsedata)\n                this.setState({\n                    QDC: parsedata\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        // this.setState({ QDC: QDCData.data.outmsg.resconts.rescont })\n        ApiProvider.getStoredProcedureUDORDER0(caseinfo.HISID, caseinfo.CASEID, \"123\")\n            .then(data => {\n                this.setState({\n                    isLoading: false,\n                    UDORDER0: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n                this.setState({ isLoading: false });\n            });\n    }\n    switch_monthy() {\n        const { caseinfo } = this.props\n        const grewinfo = {\n            \"WEEK_BORN\": Number(caseinfo.WEEK_BORN),\n            \"DAY_BORN\": Number(caseinfo.DAY_BORN),\n            \"BIRTHDAY\": caseinfo.PBASINGNINFO.PBIRTHDT\n        }\n        const WeightList = caseinfo.WEIGHT\n        const sex = gender(caseinfo.PBASINGNINFO.PSEX)\n        const switch_data = this.state.test_items_interval\n        const width = (window.screen.availWidth - 300) / 2, height = 350\n        switch (switch_data) {\n            case 0:\n                return <WardlifeChart width={width} height={height} grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife\"} svg_key={\"wardlife_svg\"} gender={sex}></WardlifeChart>\n            case 1:\n                return <Wardmonthafter width={width} height={height} grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife_after\"} svg_key={\"wardlife_after_svg\"} gender={sex}></Wardmonthafter>\n            default:\n                return null;\n        }\n    }\n\n    handleChange = (checkedValues) => {\n        this.setState(\n            {\n                test_items_interval: checkedValues\n            }\n        )\n\n    }\n    onOk = (value) => {\n    }\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n    WaterValueControlBar() {\n        return (\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", marginRight: \"10px\" }}>\n                    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        <div style={{ height: \"10px\", width: \"10px\", background: \"#C3EFFF\", marginRight: \"5px\" }}></div>\n                        <t3>IV</t3>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        <div style={{ height: \"10px\", width: \"10px\", background: \"#2E64A4\", marginRight: \"5px\" }}></div>\n                        <t3>Feed</t3>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        <div style={{ height: \"10px\", width: \"10px\", background: \"#3B97E1\", marginRight: \"5px\" }}></div>\n                        <t3>Other</t3>\n                    </div>\n                </div>\n                {/* <Button type=\"primary\" onClick={this.showModal}>設定營養項目</Button> */}\n            </div>\n        );\n    }\n    SwitchTestItemInterval(testiteminterval) {\n        const time_selectbtn_style = {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"25px\",\n            padding: \"0px 5px\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#001a6dbb\",\n            color: \"white\",\n            fontSize: \"1rem\",\n            borderWidth: \"1px\",\n            borderStyle: \"solid\",\n            borderColor: \"#001a6d88\",\n            cursor: \"pointer\"\n        }\n        const time_unselectbtn_style = {\n            display: \"flex\", justifyContent: \"center\",\n            alignItems: \"center\", height: \"25px\",\n            padding: \"0px 5px\",\n            borderRadius: \"4px\", backgroundColor: \"white\",\n            color: \"#001a6d88\", fontSize: \"1rem\",\n            borderWidth: \"1px\", borderStyle: \"solid\",\n            borderColor: \"#001a6d88\",\n            cursor: \"pointer\"\n        }\n        if (testiteminterval === this.state.test_items_interval) {\n            return time_selectbtn_style\n        }\n        else return time_unselectbtn_style\n    }\n    GrowthCurveControlBar() {\n        const { Option } = Select;\n        return (\n            <div className='titlebutton'>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"5px\" }}>\n                    <div style={this.SwitchTestItemInterval(0)} onMouseUp={() => this.handleChange(0)}>40週前</div>\n                    <div style={this.SwitchTestItemInterval(1)} onMouseUp={() => this.handleChange(1)}>40週後</div>\n                </div>\n                {/* <Select defaultValue={1} style={{ width: 120 }} onChange={this.handleChange}>\n                    <Option value={0}>滿足月</Option>\n                    <Option value={1}>不滿足月</Option>\n                </Select> */}\n                {/* <Button type=\"primary\" onClick={this.showModal}>新增體重</Button>\n                <Modal\n                    title=\"手動新增體重紀錄\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                        <div style={{ display: \"flex\", alignItems: \"center\" }}>選擇時間:</div>\n                        <DatePicker getCalendarContainer={triggerNode => triggerNode.parentNode} id=\"nurtion_datepicker\" style={{ width: \"400px\" }} showTime placeholder=\"選擇時間\" onOk={this.onOk} />\n                    </div>\n                </Modal> */}\n            </div>\n        );\n    }\n    WaterValueRender() {\n        function formatTimeArray(startTime) {\n            const shiftTimer = parseInt((moment().valueOf() - moment(startTime, \"YYYYMMDD\").valueOf()) / (23 * 60 * 60 * 1000))\n            var TimerArray = []\n            for (let index = 0; index < shiftTimer; index++) {\n                const Time = moment(moment(startTime, \"YYYYMMDD\").valueOf() + (index * 24 * 60 * 60 * 1000)).format(\"YYYY/MM/DD\")\n                TimerArray.push(Time)\n            }\n            return TimerArray\n        }\n        const { caseinfo } = this.props\n        const QDC = this.state.QDC\n        if (QDC.length === 0) {\n            return null\n        }\n        const feed = ioDataFormat.FeedData(QDC)\n        const IV = ioDataFormat.IVData(QDC)\n        const Other = ioDataFormat.OtherData(QDC)\n        const OtherFilterInput = formatOtherInput(Other)\n\n        console.log(feed)\n\n\n        function formatOtherInput(OtherData) {\n            if (Array.isArray(OtherData)) {\n                const OtherFilterInput = OtherData.filter(function (info, index, arr) {\n                    return info.inp_val1 !== undefined && Number(info.inp_val1) !== NaN\n                })\n                return OtherFilterInput\n            }\n            return []\n        }\n\n\n\n        var Calories = 0\n\n        function sumcar(List) {\n            var Calories = 0\n            for (let index = 0; index < List.length; index++) {\n                const element = List[index];\n                if (element.item === \"進食\") {\n                    if (element.lost === \"配方奶\") {\n                        Calories = Calories + Number(element.inp_val2) * 0.8\n                    }\n                    if (element.lost === \"母奶\") {\n                        Calories = Calories + Number(element.inp_val2) * 0.7\n\n                    }\n                }\n                if (element.nam !== undefined) {\n                    if (element.nam.toString().match(\"10%TPN\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                    if (element.nam.toString().match(\"15%TPN\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34 * 1.5\n                    }\n                    if (element.nam.toString().match(\"SMOFliquid\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                    if (element.nam.toString().match(\"D10\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                    if (element.nam.toString().match(\"D12\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34 * 1.2\n                    }\n                    if (element.nam.toString().match(\"D5W\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34 * 5\n                    }\n                    if (element.nam.toString().match(\"taita\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                }\n\n            }\n            return parseInt(Calories)\n\n        }\n        const startTime = caseinfo.TRANSINDT.toString()\n        const TimerList = formatTimeArray(startTime)\n        var watervalueDataList = []\n        for (let index = 0; index < TimerList.length; index++) {\n            const element = TimerList[index];\n            const filterFeedind = feed.filter(function (value, index, arr) {\n                return moment(element, \"YYYY/MM/DD\").valueOf() === moment(value.rec_dat.toString().trim(), \"YYYY/MM/DD\").valueOf()\n            })\n            const filterIV = IV.filter(function (value, index, arr) {\n                return moment(element, \"YYYY/MM/DD\").valueOf() === moment(value.rec_dat.toString().trim(), \"YYYY/MM/DD\").valueOf()\n            })\n            const filterOther = OtherFilterInput.filter(function (value, index, arr) {\n                return moment(element, \"YYYY/MM/DD\").valueOf() === moment(value.rec_dat.toString().trim(), \"YYYY/MM/DD\").valueOf()\n            })\n\n            const feedingSum = SumData2(filterFeedind)\n            const IVSum = SumData(filterIV)\n            const OtherSum = SumData(filterOther)\n\n            const Caloriessum = sumcar(filterFeedind) + sumcar(filterIV) + sumcar(filterOther)\n            watervalueDataList.push({\n                Feeding: feedingSum,\n                IV: IVSum,\n                Other: OtherSum,\n                Time: element,\n                Caloriessum\n            })\n\n        }\n        function SumData(arr) {\n            var sum = 0;\n            for (var i = 0; i < arr.length; i++) {\n                sum += Number(arr[i].inp_val1);\n            };\n            return parseInt(sum);\n        }\n\n        function SumData2(arr) {\n            var sum = 0;\n            for (var i = 0; i < arr.length; i++) {\n                sum += Number(arr[i].inp_val2);\n            };\n            return parseInt(sum);\n        }\n\n        return (\n            <Watervaluechart Calories={Calories} watervalueData={watervalueDataList} startTime={caseinfo.TRANSINDT} id_key={\"water_id\"} svg_key={\"water_svg\"} caseiddays='2019/11/11'></Watervaluechart>\n        );\n    }\n\n    PickerDateRangeChange = (date, dateString) => {\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const PickerDate = this.state.PickerDateRange.valueOf()\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const bTemp = bTime - (6 * day)\n                bronDate <= bTemp && this.PickerDateRangeChange(moment(bTime))\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD'))\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= aTemp && this.PickerDateRangeChange(moment(aTime))\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const GrowthCurve = this.switch_monthy()\n        const GrowthCurveControl = this.GrowthCurveControlBar()\n        const WaterValueControl = this.WaterValueControlBar()\n        const tpndata = this.state.UDORDER0\n        const feeddata = this.state.TRTMNTQ1\n        const TimeStampPickerDate = this.state.PickerDateRange.valueOf()\n        const { caseinfo } = this.props\n\n        if (tpndata.length === 0 || feeddata === 0) {\n            return null\n        }\n\n        const waterRender = this.WaterValueRender()\n        const PickerDateRange = [TimeStampPickerDate - (6 * 24 * 60 * 60 * 1000), TimeStampPickerDate]\n\n        return (\n            <div className='nurtionheight'>\n                <div className='nurtionlayout'>\n                    <div>\n                        <div className='nurtioncomponmentboxtitle'>\n                            <t1>生長曲線圖</t1>\n                            {this.state.isLoading ? (<Icon type=\"loading\" />) : (GrowthCurveControl)}\n                        </div>\n                        <div className='nurtioncomponmentboxcontent'>{GrowthCurve}</div>\n                    </div>\n                    <div>\n                        <div className='nurtioncomponmentboxtitle'>\n                            <t1>水量表</t1>\n                            <div className='titlebutton'>\n                                {WaterValueControl}\n                            </div>\n                        </div>\n                        <div className='nurtioncomponmentboxcontent'>\n                            {this.state.isLoading ? (<Icon type=\"loading\" />) : (waterRender)}\n                        </div>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"140px 120px\", gridColumnGap: \"5px\", margin: \"10px 0px 5px 0px\" }}>\n                    <DatePicker\n                        getCalendarContainer={triggerNode => triggerNode.parentNode}\n                        value={this.state.PickerDateRange}\n                        format={\"YYYY/MM/DD\"}\n                        allowClear={false}\n                        locale={\"zh_TW\"}\n                        onChange={this.PickerDateRangeChange}\n                    />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"minus-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: '1fr 1fr', gridColumnGap: \"10px\", marginBottom: \"20px\" }}>\n                    {\n                        this.state.isLoading ? (<Icon type=\"loading\" />) : (<Nurtionfeedingorder PickerDateRange={PickerDateRange} caseinfo={caseinfo}></Nurtionfeedingorder>)\n                    }\n                    {/* <Nurtiontpnorder PickerDateRange={PickerDateRange} caseinfo={caseinfo}></Nurtiontpnorder> */}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Nurtionview\n","import React, { Component } from 'react'\nimport './Infectionlabtable.scss'\n// import { chronicladdataoneday, chroniclabdatathird } from '../../Data/Wardviewdata'\n// import { arraychange } from '../../Function/Wardstate'\n\nclass Infectionlabtable extends Component {\n    switch_state() {\n        const chronic_state = 2\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 18\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    table_content() {\n        function FormatList(Datalist, st) {\n            var Render = []\n            for (let index = 0; index < 21; index++) {\n                const start = st + (index * 8 * 60 * 60 * 1000)\n                const end = st + ((index + 1) * 8 * 60 * 60 * 1000)\n                const FilterData = Datalist.filter(function (value, index, arr) {\n                    return value.Time > start && value.Time < end\n                })\n                var sum = 0\n                for (let index = 0; index < FilterData.length; index++) {\n                    const element = FilterData[index];\n                    sum = sum + Number(element.Data)\n                }\n                Render.push(sum)\n            }\n            return Render\n        }\n        function CellRander(List) {\n            function checkLineColor(lineColor) {\n                if (lineColor === null) {\n                    return '';\n                } else {\n                    return `${lineColor.width} solid ${lineColor.color}`;\n                }\n            }\n            function valueFormat(value) {\n                if (value === 0 || value === undefined || value === null || value === \"\") {\n                    return \"\"\n                }\n                return `${value}`\n            }\n            function TimeLine(interval, index) {\n                const lineStyle = {\n                    width: '',\n                    color: '',\n                }\n                if (interval === 0) {\n                    if (index === 0 || (index % 24) === 0) {\n                        lineStyle.width = '2px';\n                        lineStyle.color = 'rgba(0,0,0,0.2)';\n                        return lineStyle;\n                    } else if (index % 8 === 0) {\n                        lineStyle.width = '2px';\n                        lineStyle.color = 'rgba(0,0,0,0.2)';\n                        return lineStyle;\n                    }\n                    else {\n                        lineStyle.width = '1px';\n                        lineStyle.color = '#eeeeee';\n                        return lineStyle;\n                    }\n                }\n                if (interval === 1) {\n                    if (index === 0 || (index % 6) === 0) {\n                        lineStyle.width = '2px';\n                        lineStyle.color = 'rgba(0,0,0,0.2)';\n                        return lineStyle;\n                    } else if (index % 2 === 0) {\n                        lineStyle.width = '2px';\n                        lineStyle.color = 'rgba(0,0,0,0.2)';\n                        return lineStyle;\n                    }\n                    else {\n                        lineStyle.width = '1px';\n                        lineStyle.color = '#eeeeee';\n                        return lineStyle;\n                    }\n                }\n                if (interval === 2) {\n                    if (index === 0 || (index % 3) === 0) {\n                        lineStyle.width = '2px';\n                        lineStyle.color = 'rgba(0,0,0,0.2)';\n                        return lineStyle;\n                    } else {\n                        lineStyle.width = '2px';\n                        lineStyle.color = 'rgba(0,0,0,0.2)';\n                        return lineStyle;\n                    }\n                }\n                if (interval === 3) {\n                    lineStyle.width = '2px';\n                    lineStyle.color = 'rgba(0,0,0,0.2)';\n                    return lineStyle;\n                }\n            }\n            const cellR = List.map(function (info, index) {\n                const lineColoe = TimeLine(3, index)\n                if (info === 0) {\n                    return (\n                        <div style={{ height: '40px', display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', borderLeft: checkLineColor(lineColoe) }}></div>\n                    )\n                }\n                return (\n                    <div style={{ backgroundColor: 'rgba(0,120,230,.1)', height: '40px', fontSize: \"16px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', cursor: \"pointer\", borderLeft: checkLineColor(lineColoe) }}>\n                        <t2>{valueFormat(info)}</t2>\n                    </div>\n                );\n            })\n            return cellR\n        }\n        const { PickerDate, WBCList, BandList, SegList, LymList, PCTList, CRPList, title } = this.props\n        const st = PickerDate + (31 * 60 * 60 * 1000) - (7 * 24 * 60 * 60 * 1000)\n        var WBCRender = FormatList(WBCList, st)\n        var BandRender = FormatList(BandList, st)\n        var SegRender = FormatList(SegList, st)\n        var LymRender = FormatList(LymList, st)\n        var PCTRender = FormatList(PCTList, st)\n        var CRPRender = FormatList(CRPList, st)\n        const WBCcell = CellRander(WBCRender)\n        const Bandcell = CellRander(BandRender)\n        const Segcell = CellRander(SegRender)\n        const Lymcell = CellRander(LymRender)\n        const PCTcell = CellRander(PCTRender)\n        const CRPcell = CellRander(CRPRender)\n        return (\n            <div style={{ display: \"grid\", gridTemplateRows: \"repeat(\" + title.length + \",1fr)\" }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{WBCcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{Bandcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{Segcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{Lymcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{PCTcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{CRPcell}</div>\n            </div>\n        );\n    }\n    render() {\n        const { userdata, title } = this.props\n        const title_list = title.map((info, index) => <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"40px\", border: \"1px solid rgba(238,238,238,1)\", borderCollapse: \"collapse\", backgroundColor: \"#eeeeee\" }} key={index}><t2>{info.title}</t2></div>)\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\" }}>\n                <div style={{ display: \"grid\", gridTemplateRows: \"repeat(\" + title.length + \",1fr)\" }}>\n                    {title_list}\n                </div>\n                {this.table_content()}\n            </div>\n        );\n    }\n}\n\nexport default Infectionlabtable\n","import React, { Component } from 'react'\nimport Infectionlabtable from './Infectionlabtable'\n\nclass Infectionlab extends Component { \n    render() {\n        const { WBCList, BandList, SegList, LymList, PCTList, CRPList,PickerDate,title } = this.props\n        const item_title = [{ title: \"WBC\" }, { title: \"Band\" }, { title: \"Seg\" }, { title: \"Lymp\" }, { title: \"PCT\" }, { title: \"CRP\" }]\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n            <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t2>\n            </div>\n                <Infectionlabtable PickerDate={PickerDate} title={item_title}  WBCList={WBCList} BandList={BandList} SegList={SegList} LymList={LymList} PCTList={PCTList} CRPList={CRPList}></Infectionlabtable>\n            </div>\n        );\n    }\n}\n\nexport default Infectionlab   ","import React, { Component } from 'react'\nimport { DatePicker, Icon, Button } from 'antd'\nimport Vitalxaxis from '../../Module/Vitalxaxis'\n// import Infectionvitalsign from './Infectionvitalsign'\nimport Infectionlab from './Infectionlab'\nimport Orderonchronic from '../ChronicleView/ChronicOrder'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport './Infection.scss'\nimport Vitalxaxisbot from '../../Module/Vitalxaxisbot'\nimport Vitalonchronic from '../ChronicleView/Chronic_vital'\n\nclass Infectionview extends Component {\n    state = {\n        datasource: [],\n        statussource: \"CM\",\n        intervalselect: 2,\n        PickerDate: moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf(),\n        UDORDER0: [],\n        RESLAB02: [],\n        RESLAB01: [],\n        classParser: undefined,\n        isLoading: false,\n        hrdatasource: [],\n        rrdatasource: [],\n        spo2datasource: [],\n        abpdatasource: [],\n        nbpdatasource: [],\n        btdatasource: [],\n        QDVS: [],\n        QOXY: [],\n    }\n    componentDidMount() {\n        this.apidata()\n    }\n\n    apidata() {\n        const { caseinfo } = this.props\n        this.setState({ isLoading: true });\n        const dateTime = this.state.PickerDate\n        const et = dateTime + (31 * 60 * 60 * 1000)\n        const st = moment(et - (7 * 24 * 60 * 60 * 1000)).format(\"YYYY-MM-DD\")\n        const apiClass = ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Prescription\");\n                console.log(\"getGitHubJson Prescription OK \" + JSON.stringify(parser))\n                this.setState({\n                    classParser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        const apiUDO = ApiProvider.getStoredProcedureUDORDER0(caseinfo.HISID, caseinfo.CASEID, \"123\")\n            .then(data => {\n                this.setState({\n                    UDORDER0: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        const apiLAB2 = ApiProvider.getStoredProcedureRESLAB02(caseinfo.HISID, st)\n            .then(data => {\n                this.setState({\n                    RESLAB02: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const apiLAB1 = ApiProvider.getStoredProcedureRESLAB01(caseinfo.HISID, st)\n            .then(data => {\n                this.setState({\n                    RESLAB01: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n\n        Promise.all([apiClass, apiUDO, apiLAB2, apiLAB1]).then(() => { this.setState({ isLoading: false }) }).catch(() => { this.setState({ isLoading: false }) });\n    }\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n\n        inputs.forEach(input => {\n            let content = input.UDGNAME;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n        });\n        return allResult;\n    }\n    sourcehandleChange = (value) => {\n        this.setState({\n            statussource: value\n        })\n\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const PickerDate = this.state.PickerDate\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const bTemp = bTime - (6 * day)\n                bronDate <= bTemp && this.setState({ PickerDate: bTime })\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD'))\n                this.setState({ PickerDate: nTime })\n                // this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= aTemp && this.setState({ PickerDate: aTime })\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        function vallofnull(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"\"\n            }\n            return value.toString().trim()\n        }\n        // const { Option } = Select;\n        const { caseinfo } = this.props\n        const { classParser, UDORDER0 } = this.state\n        const LabData = this.state.RESLAB02\n        const LabData2 = this.state.RESLAB01\n        const dateTime = this.state.PickerDate\n        const et = dateTime + (31 * 60 * 60 * 1000)\n        const st = et - (7 * 24 * 60 * 60 * 1000)\n        var WBCList = []\n        var BandList = []\n        var SegList = []\n        var LymList = []\n        var PCTList = []\n        var CRPList = []\n        if (Array.isArray(LabData)) {\n            if (LabData.length !== 0) {\n                for (let index = 0; index < LabData.length; index++) {\n                    const element = LabData[index];\n                    const WBC = vallofnull(element.RSV01)\n                    const Band = vallofnull(element.RSV13)\n                    const Seg = vallofnull(element.RSV14)\n                    const Lym = vallofnull(element.RSV15)\n                    const PCT = null\n                    const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                    if (st < time && time < et) {\n                        if (WBC !== null || WBC !== \"\" || WBC !== undefined) {\n                            WBCList.push({\n                                Time: time,\n                                Data: WBC\n                            })\n                        }\n                        if (Band !== null || Band !== \"\" || Band !== undefined) {\n                            BandList.push({\n                                Time: time,\n                                Data: Band\n                            })\n                        }\n                        if (Seg !== null || Seg !== \"\" || Seg !== undefined) {\n                            SegList.push({\n                                Time: time,\n                                Data: Seg\n                            })\n                        }\n                        if (Lym !== null || Lym !== \"\" || Lym !== undefined) {\n                            LymList.push({\n                                Time: time,\n                                Data: Lym\n                            })\n                        }\n                        if (PCT !== null || PCT !== \"\" || PCT !== undefined) {\n                            PCTList.push({\n                                Time: time,\n                                Data: PCT\n                            })\n                        }\n                    }\n                }\n            }\n        }\n        if (Array.isArray(LabData2)) {\n            if (LabData2.length !== 0) {\n                for (let index = 0; index < LabData2.length; index++) {\n                    const element = LabData2[index];\n                    const CRP = vallofnull(element.RSV30)\n                    const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                    if (st < time && time < et) {\n                        if (CRP !== null || CRP !== \"\" || CRP !== undefined) {\n                            CRPList.push({\n                                Time: time,\n                                Data: CRP\n                            })\n                        }\n                    }\n                }\n            }\n        }\n\n        let clusteredData = {}\n        if (classParser !== undefined) {\n            clusteredData = this.parse(UDORDER0, classParser)\n        }\n\n        //filter data by selected class\n        const filteredData = clusteredData[\"抗生素類別\"];\n\n        return (\n            <div style={{ padding: \"0px 20px\" }}><div style={{ display: \"grid\", gridTemplateColumns: \"140px 120px\", gridColumnGap: \"5px\" }}>\n                <DatePicker\n                    getCalendarContainer={triggerNode => triggerNode.parentNode}\n                    disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                    value={moment(this.state.PickerDate)}\n                    onChange={(date, datestring) => { this.setState({ PickerDate: date.valueOf() }) }}\n                    allowClear={false} />\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                    <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                    <Button value=\"N\" shape=\"circle\" icon=\"minus-circle\" onClick={this.trainDay} />\n                    <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                </div>\n            </div>\n                <div style={{ margin: \"10px 0px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"150px 1fr\", height: \"10px\", marginTop: \"10px\" }}>\n                        <div></div>\n                        <Vitalxaxisbot max={200} min={0} select_interval={2} select_date={new Date().getTime()} id_key=\"xaxis_bot_chronic\" svg_id=\"xaxis_bot_svg_chronic\"></Vitalxaxisbot>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\" }}>\n                        <div></div>\n                        <Vitalxaxis max={200} min={0} select_interval={2} select_date={new Date().getTime()} id_key=\"xaxis_infect\" svg_id=\"xaxis_svg_infect\"></Vitalxaxis>\n                    </div>\n                </div>\n                <div className='boxshadow'></div>\n                {\n                    this.state.isLoading\n                        ? (\n                            <Icon type=\"loading\" />\n                        )\n                        : (\n                            <div className='Infectionlayout'>\n                                <Vitalonchronic PickerDate={this.state.PickerDate} select_interval={2} fromInfection={true} caseinfo={caseinfo} source={\"infection\"} title=\"Vital\"></Vitalonchronic>\n                                {/* <Infectionvitalsign caseinfo={caseinfo} StatusSource={this.state.statussource} PickerDate={this.state.PickerDate}></Infectionvitalsign> */}\n                                {/* Order */}\n                                <Orderonchronic PickerDate={this.state.PickerDate} UDORDER0={filteredData} select_interval={2} caseinfo={caseinfo} source={\"infection\"} title=\"藥物處方\"></Orderonchronic>\n                                <Infectionlab PickerDate={this.state.PickerDate} WBCList={WBCList} BandList={BandList} SegList={SegList} LymList={LymList} PCTList={PCTList} CRPList={CRPList} title=\"檢驗結果\"></Infectionlab>\n                            </div>\n                        )\n                }\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\" }}>\n                    <div></div>\n                    <Vitalxaxis max={200} min={0} select_interval={2} select_date={new Date().getTime()} id_key=\"xaxis_flootsheet_bot\" svg_id=\"xaxis_svg_flootsheet_bot\"></Vitalxaxis>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Infectionview\n","import React, { Component } from 'react';\nimport editlogo from '../../Image/svg/Edit.svg'\n// import detaillogo from '../../Image/svg/details.svg'\nimport { Input, Button } from 'antd';\nimport './Bedsidecard.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Bedsidecard extends Component {\n    state = {\n        caseinfo: this.props.caseinfo,\n        EditMode: false,\n        remarkContent: \"\",\n        inputContent: \"\",\n        powerLogin: 0\n    }\n    componentDidMount() {\n        //bind function\n        this.onInputChange = this.onInputChange.bind(this);\n\n        //query patient remark\n        this.queryPatientRemark();\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    queryPatientRemark() {\n        ApiProvider.getOnePatientRemark(this.state.caseinfo.TRANSINID)\n            .then(data => {\n                console.log(\"queryPatientRemark OK \" + JSON.stringify(data));\n                this.setState({\n                    remarkContent: data.data[0].context\n                });\n            })\n            .catch(err => {\n                console.log(\"queryPatientRemark NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    onClickEnter() {\n        ApiProvider.createPatientRemark(this.state.inputContent, this.state.caseinfo.HISID, this.state.caseinfo.TRANSINID)\n            .then(data => {\n                console.log(\"createPatientRemark OK \" + JSON.stringify(data));\n                this.setState(\n                    {\n                        inputContent: \"\"\n                    }\n                )\n                this.queryPatientRemark();\n            })\n            .catch(err => {\n                console.log(\"createPatientRemark NG \" + JSON.stringify(err));\n            });\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    render() {\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div className='bedsidecardtitle'>\n                    <t1 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>床頭卡註記</t1>\n                    <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                        <img src={editlogo} alt=\"editlogo\" />\n                    </div>\n                </div>\n                <div className='bedsidecardcontext'>\n                    <t2>{this.state.remarkContent}</t2>\n                </div>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", backgroundColor: \"rgba(238,238,238,1)\" }}>\n                        <Input placeholder=\"輸入當日註記內容\" value={this.state.inputContent} onChange={this.onInputChange}></Input>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Bedsidecard\n","import React, { Component } from 'react';\nimport editlogo from '../../Image/svg/Edit.svg'\nimport { Checkbox, Input, Button } from 'antd';\nimport './Scheduletodo.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nconst TODO_DONE = \"已完成\";\nconst TODO_UNFINISH = \"未完成\";\n\nclass Scheduletodo extends Component {\n    state = {\n        EditMode: false,\n        displayMode: true, //true已完成 flase未完成\n        todolist: [],\n        caseinfo: this.props.caseinfo,\n        inputContent: undefined,\n        powerLogin: 0\n    }\n    componentDidMount() {\n        //bind function\n        this.onInputChange = this.onInputChange.bind(this);\n\n        //query patient notice\\\n        this.queryPatientTodo();\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    queryPatientTodo() {\n        ApiProvider.getOneTodo(this.state.caseinfo.TRANSINID, this.state.caseinfo.CASEID)\n            .then(data => {\n                console.log(\"queryPatientTodo OK \" + JSON.stringify(data));\n                this.setState({\n                    todolist: data.data\n                });\n            })\n            .catch(err => {\n                console.log(\"queryPatientTodo NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString()\n        ApiProvider.createTodo(this.state.caseinfo.CASEID, this.state.inputContent, timeNowStr, this.state.caseinfo.TRANSINID, TODO_UNFINISH)\n            .then(data => {\n                console.log(\"createTodo OK \" + JSON.stringify(data));\n                this.queryPatientTodo();\n            })\n            .catch(err => {\n                console.log(\"createTodo NG \" + JSON.stringify(err));\n            });\n        this.setState(\n            {\n                EditMode: false,\n                inputContent: undefined\n            }\n        )\n    }\n    onClickfinish() {\n        this.setState(\n            {\n                displayMode: true\n            }\n        )\n    }\n    onClickunfisish() {\n        this.setState(\n            {\n                displayMode: false\n            }\n        )\n    }\n\n    onChange = (checkedValues) => {\n    }\n    onItemCheck = (event) => {\n\n        const itemToUpdate = this.state.todolist.find(item => item.time === event.target.value);\n\n        if ((this.state.displayMode === true && event.target.checked === false) || (this.state.displayMode === false && event.target.checked === true)) {\n            ApiProvider.createTodo(itemToUpdate.caseid, itemToUpdate.context, itemToUpdate.time, itemToUpdate.transinno, (itemToUpdate.type === TODO_DONE) ? TODO_UNFINISH : TODO_DONE)\n                .then(data => {\n                    console.log(\"updateTodo OK \" + JSON.stringify(data));\n                    this.queryPatientTodo();\n                })\n                .catch(err => {\n                    console.log(\"updateTodo NG \" + JSON.stringify(err));\n                });\n        }\n    }\n    render() {\n        // const button_style = {\n        //     finish: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\", borderRadius: \"16px\", border: \"rgba(245, 166, 35, 1) 1px solid\", color: \"rgba(245, 166, 35, 1)\" },\n        //     unfinish: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\", borderRadius: \"16px\", border: \"rgba(245, 166, 35, 1) 1px solid\", background: \"rgba(245, 166, 35, 1)\", color: \"white\" }\n        // }\n\n        const todolist_data = this.state.todolist\n        const finish_data = todolist_data.filter(function (item, index, array) {\n            return item.type === TODO_DONE;\n        });\n        const finish_value = finish_data.map(function (item, index, array) {\n            return item.time;\n        });\n        const unfinish_data = todolist_data.filter(function (item, index, array) {\n            return item.type === TODO_UNFINISH;\n        });\n\n        const onItemCheck = this.onItemCheck;\n        const finish_checkbox = finish_data.map(function (item, index, array) {\n            return (\n                <div key={index} className='scheduletodocell'>\n                    <Checkbox value={item.time} checked={true} onChange={onItemCheck} style={{ textDecoration: \"line-through\" }}>{item.context}</Checkbox>\n                </div>\n            );\n        });\n        const unfinish_checkbox = unfinish_data.map(function (item, index, array) {\n            return (\n                <div key={index} className='scheduletodocell'>\n                    <Checkbox value={item.time} checked={false} onChange={onItemCheck}>{item.context}</Checkbox>\n                </div>\n            );\n        });\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div className='scheduletodotitle'>\n                    <t1 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>待辦事項</t1>\n                    <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                        <img src={editlogo} alt=\"editlogo\" />\n                    </div>\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"10px 0px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"115px 115px\", gridColumnGap: \"10px\" }}>\n                        <div style={{ cursor: \"pointer\" }} className={this.state.displayMode ? 'finishbutton' : 'todobutton'} onClick={() => this.onClickunfisish()}>未完成</div>\n                        <div style={{ cursor: \"pointer\" }} onClick={() => this.onClickfinish()} className={this.state.displayMode ? 'todobutton' : 'finishbutton'}>已完成</div>\n                    </div>\n                </div>\n                <Checkbox.Group defaultValue={finish_value} style={{ width: '100%' }} onChange={this.onChange}>\n                    <div style={{ overflowY: \"auto\", maxHeight: \"200px\" }}>\n                        {this.state.displayMode ? finish_checkbox : unfinish_checkbox}\n                    </div>\n                </Checkbox.Group>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <Input placeholder=\"輸入當日註記內容\" value={this.state.inputContent} onChange={this.onInputChange}></Input>\n                        <Button type=\"primary\">新增</Button>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Scheduletodo\n","import React, { Component } from 'react';\nimport calenderlogo from '../../Image/svg/calender.svg'\nimport calenderwhitelogo from '../../Image/svg/calenderwhite.svg'\nimport pingcheck from '../../Image/svg/ping.svg'\nimport pingwhite from '../../Image/svg/pingwhite.svg'\nimport './Calendercell.scss'\nimport { mmddformat, weekdateformatcalender } from '../../Function/Timeformat'\nimport { Col, Row } from \"antd\"\nclass Calendercell extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            status: false,\n        }\n\n    }\n\n\n    sendcallback(timestamp, clickindex) {\n        this.props.parentCallback(timestamp, clickindex);\n    }\n    onClickCheck(timestamp, clickindex) {\n        this.sendcallback(timestamp, clickindex)\n        this.onClick1()\n    }\n    onClick1 = () => {\n        if (this.state.status === false) {\n            this.setState({ status: true }, () => {\n                this.props.CancelModule(true)\n            })\n\n        } else {\n            this.setState({ status: false }, () => {\n                this.props.CancelModule(false)\n            })\n\n        }\n    }\n\n\n    render() {\n        const { clickindex, state, newDate, timestamp, clickdate, data, today } = this.props;\n        function disableday(state) {\n            const scheduleArray = data.scheduleList.filter(item => item.type === \"排程\");\n            if (state) {\n                return (\n                    <div className='calendersubcontexticon'>\n                        <img src={calenderlogo} alt='calenderlogo' />\n                        <t1>{scheduleArray.length}</t1>\n                    </div>\n                );\n            }\n            else {\n                return (\n                    <div className='calendersubcontexticon'>\n                        <img src={calenderwhitelogo} alt='calenderlogo' />\n                        <t1 className='displayinfo'>{scheduleArray.length}</t1>\n                    </div>\n                );\n            }\n        }\n        function locl(state) {\n            if (timestamp === today) return '當日'\n            else return null\n        }\n        function stateswitch() {\n\n            if (mmddformat(clickdate) === mmddformat(timestamp)) {\n                return true\n            }\n            return false\n        }\n        return (\n            <Row >\n                <Row type=\"flex\" justify=\"center\" >\n                    <Col span={24}>\n                        <div className={stateswitch() ? 'calendersubcontextclick' : 'calendersubcontext'}\n                            onClick={() =>\n                                this.onClickCheck(timestamp, clickindex)\n                            }>\n                            <div className={stateswitch() ? 'calendersubcontexttitleclick' : 'calendersubcontexttitle'}>\n                                <t2 className='calendersubcontexttitletoday'>{mmddformat(timestamp)}({weekdateformatcalender(timestamp)}){locl(newDate)}</t2>\n\n                            </div>\n                            {disableday(state)}\n                        </div>\n                    </Col></Row>\n                <Row type=\"flex\" justify=\"center\" >\n                    <Col >\n                        {stateswitch() && this.state.status ?\n                            <div style={{ width: 0, height: 0, borderStyle: \"solid\", borderWidth: \"17.3px 10px 0 10px\", borderColor: \"#ffbe59 transparent transparent transparent\" }}></div>\n                            : \"\"}</Col>\n                </Row>\n            </Row>\n        );\n    }\n}\n\nexport default Calendercell\n","import React, { Component } from 'react';\nimport { DatePicker } from 'antd';\nimport { Select } from 'antd';\nimport './Calender.scss'\nimport { mmddformat, compareday, yyyymmfirstweeksate } from '../../Function/Timeformat'\nimport Calendercell from './Calendercell'\nimport { Icon } from 'antd'\nimport CrossectionSchedule from '../CrossSectionView/Crosssectionschedule'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment';\n\nconst SCHEDULE_TYPE_EVENT = \"事件\";\n// const SCHEDULE_TYPE_SCHEDULE = \"排程\";\nconst timeZoneOffset = 8 * 60 * 60 * 1000;\n\nclass Calender extends Component {\n    state = {\n        calendermode: 'week',\n        Clickdays: null,\n        ClickDate: null,\n        displayinfo: null,\n        scheduleRawData: [],\n        scheduleData: [],\n        startTimestamp: 0,\n        endTimestamp: 0,\n        todayBegin: 0,\n        noticeRawData: [],\n        open: false,\n\n    }\n    componentDidMount() {\n        const { startTimestamp, endTimestamp, todayBegin } = this.getStartEndTime();\n        this.setState({\n            startTimestamp: startTimestamp,\n            endTimestamp: endTimestamp,\n            todayBegin: todayBegin,\n            ClickDate: todayBegin\n        });\n        this.querySchedule(new Date(startTimestamp).toISOString().split('.')[0], new Date(endTimestamp).toISOString().split('.')[0]);\n        this.queryNotice();\n    }\n    getStartEndTime() {\n        const today = new Date();\n        const monthfirstweekday = new Date(today.getFullYear(), today.getMonth(), 1).getDay();\n        const firstCellBegin = new Date(today.getFullYear(), today.getMonth(), 1).getTime() - (monthfirstweekday * 24 * 60 * 60 * 1000) + timeZoneOffset;\n        const todayBegin = new Date(today.getFullYear(), today.getMonth(), today.getDate()).getTime() + timeZoneOffset;\n\n        const startTimestamp = (this.state.calendermode === 'week') ? todayBegin - 3 * 24 * 60 * 60 * 1000 : firstCellBegin;\n        const endTimestamp = (this.state.calendermode === 'week') ? startTimestamp + 7 * 24 * 60 * 60 * 1000 : startTimestamp + 35 * 24 * 60 * 60 * 1000;\n\n        return { startTimestamp, endTimestamp, todayBegin };\n    }\n    querySchedule(startTimestampStr, endTimestampStr) {\n        ApiProvider.getOnePatientSchedule(this.props.caseinfo.TRANSINID, startTimestampStr, endTimestampStr)\n            .then(data => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n\n                const itemList = data.data;\n                let refactoredList = [];\n                itemList.forEach(item => {\n                    const itemTimeStr = item.time.split('T')[0];\n                    let foundItemIndex = refactoredList.findIndex(element => element.time === itemTimeStr);\n                    if (foundItemIndex === -1) {\n                        //not found, create one\n                        let newItem = {\n                            time: itemTimeStr,\n                            timestamp: item.time,\n                            scheduleList: []\n                        }\n                        let newEvent = {\n                            type: item.type,\n                            timestamp: new Date(item.time).getTime(),\n                            writer: (item.type === SCHEDULE_TYPE_EVENT) ? \"林醫師\" : \"張醫師\",\n                            name: item.name,//this.props.caseinfo.PBASINGNINFO.PNAMEC,//(item.type === SCHEDULE_TYPE_EVENT) ? \"林ＯＯ\" : \"黃ＯＯ\",\n                            content: item.context,\n                            bednumber: item.bednumber\n                        }\n                        newItem.scheduleList.push(newEvent);\n                        refactoredList.push(newItem);\n                    } else {\n                        //found, update item\n                        let newEvent = {\n                            type: item.type,\n                            timestamp: new Date(item.time).getTime(),\n                            writer: (item.type === SCHEDULE_TYPE_EVENT) ? \"林醫師\" : \"張醫師\",\n                            name: item.name,//this.props.caseinfo.PBASINGNINFO.PNAMEC,//(item.type === SCHEDULE_TYPE_EVENT) ? \"林ＯＯ\" : \"黃ＯＯ\",\n                            content: item.context,\n                            bednumber: item.bednumber\n                        }\n                        refactoredList[foundItemIndex].scheduleList.push(newEvent);\n                    }\n                });\n                this.setState({\n                    scheduleRawData: data.data,\n                    scheduleData: refactoredList\n                });\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }\n    queryNotice() {\n        ApiProvider.getOnePatientNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID)\n            .then(result => {\n                console.log(\"getOnePatientNotice OK \" + JSON.stringify(result));\n                this.setState({\n                    noticeRawData: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientNotice NG \" + JSON.stringify(err));\n            });\n    }\n    callbackFunction = (timestamp, clickindex) => {\n        console.log(timestamp)\n        this.setState({\n            ClickDate: timestamp,\n            displayinfo: clickindex\n        })\n    }\n    onCancelClick() {\n        this.setState({\n            ClickDate: this.state.todayBegin,\n            displayinfo: null\n        }, () => { console.log(this.state) })\n    }\n    CancelModule = (value) => {\n\n        if (value === true) {\n            this.setState({ open: true }, () => { console.log(\"oepn true\", this.state) })\n        } else {\n            this.setState({ open: false }, () => { console.log(\"oepn false\", this.state) })\n        }\n    }\n    handleChange = (value) => {\n        console.log(value)\n        this.setState({\n            calendermode: value,\n            displayinfo: null,\n            Clickdays: null\n        })\n    }\n    onChange = (timestamp) => {\n        console.log('changestate')\n    }\n    onClickCheck(timestampdate) {\n        this.setState({\n            onClickdays: timestampdate\n        })\n    }\n    getDataFromTimestamp(timestamp) {\n        const dateStr = new Date(timestamp).toISOString().split('T')[0];\n        const dataOfDayIndex = this.state.scheduleData.findIndex(element => element.time === dateStr);\n        const dataOfDay = (dataOfDayIndex === -1) ? { scheduleList: [] } : this.state.scheduleData[dataOfDayIndex];\n        return dataOfDay;\n    }\n    getNoticeFromTimestamp(timestamp) {\n        const dateStr = new Date(timestamp).toISOString().split('T')[0];\n        const noticeOfDayArray = this.state.noticeRawData.filter(element => element.time.indexOf(dateStr) > -1);\n        return noticeOfDayArray;\n    }\n    weekmode() {\n        var weekcontext = []\n        for (let index = 0; index < 7; index++) {\n            const timestampdate = this.state.startTimestamp + (index * 24 * 60 * 60 * 1000);\n            const date = mmddformat(timestampdate)\n            const dataOfDay = this.getDataFromTimestamp(timestampdate);\n            // 接 len api\n            if (index - 3 === 0) {\n                weekcontext.push(\n                    <Calendercell CancelModule={this.CancelModule} clickindex={'week'} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={true} newDate={true} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n                );\n            }\n            else {\n                weekcontext.push(\n\n                    <Calendercell CancelModule={this.CancelModule} clickindex={'week'} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={compareday(timestampdate)} newDate={false} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n\n                );\n\n            }\n        }\n        return weekcontext\n    }\n    weekmonthmode(weeknumber, firstMonthWeekDay) {\n        var weekcontext = []\n        for (let index = 0; index < 7; index++) {\n            const timestampdate = new Date(firstMonthWeekDay).getTime() + (index * 24 * 60 * 60 * 1000) + timeZoneOffset;\n            const date = mmddformat(timestampdate)\n            const dataOfDay = this.getDataFromTimestamp(timestampdate)\n\n            if (new Date(mmddformat(new Date().getTime())).getTime() <= new Date(mmddformat(new Date(timestampdate).getTime())).getTime()) {\n                weekcontext.push(\n\n\n                    <Calendercell CancelModule={this.CancelModule} clickindex={weeknumber} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={true} newDate={true} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}>\n                    </Calendercell>\n                );\n            }\n            else {\n                weekcontext.push(\n\n                    <Calendercell CancelModule={this.CancelModule} clickindex={weeknumber} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={false} newDate={true} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}>\n\n                    </Calendercell>\n                );\n            }\n        }\n        return weekcontext\n    }\n\n    ShowModule(rowIndex) {\n        if (rowIndex === undefined) rowIndex = 0;\n        console.log(\"this.state.ClickDate\" + this.state.ClickDate);\n\n        const dataOfDay = this.getDataFromTimestamp(this.state.ClickDate);\n        const noticeOfDay = this.getNoticeFromTimestamp(this.state.ClickDate);\n\n        function checkmode(state) {\n            if (state === 'week') {\n                return 'calenderdisplayinformation'\n            }\n            if (state === rowIndex) {\n                return 'calenderdisplayinformation'\n            }\n            return 'calenderdisplayinformationnone'\n        }\n        // console.log(moment(this.state.ClickDate).format(\"YYYYMMDDHHmmss\"))\n        return (\n            <div>\n                {this.state.open ?\n                    <div className={checkmode(this.state.displayinfo)} >\n\n                        <div className='calenderModule'>\n                            <t1>詳細資訊</t1>\n                            {/* <Icon type=\"close\" onClick={()=>this.onCancelClick()} /> */}\n                        </div>\n                        <div className='Modulelayout'>\n                            <CrossectionSchedule PickerDate={this.state.ClickDate} source={1} caseinfo={this.props.caseinfo} noticeData={noticeOfDay} scheduleData={dataOfDay} editstatus={true}></CrossectionSchedule>\n                        </div>\n                    </div>\n                    : \"\"}\n            </div>\n        );\n    }\n\n\n    setgroup() {\n        var calendermonthgroup = []\n        const monthfirstweekdate = new Date(yyyymmfirstweeksate(new Date())).getDay()\n        const firstMonthWeekDay = new Date(yyyymmfirstweeksate(new Date())).getTime() - (monthfirstweekdate * 24 * 60 * 60 * 1000)\n\n        for (let index = 0; index < 5; index++) {\n            calendermonthgroup.push(\n                <div className='calendercontextMonthRows'>\n                    {this.weekmonthmode(index, firstMonthWeekDay + (index * 7 * 24 * 60 * 60 * 1000))}\n                    {this.ShowModule(index)}\n                </div>\n            );\n\n        }\n        return calendermonthgroup\n    }\n    modechange(state) {\n        if (state === 'week') {\n            return (\n                <div className='calendercontext'>\n                    {this.weekmode()}\n                    {this.ShowModule()}\n                </div>\n            );\n        }\n        else {\n            // return (\n            //     <div>\n            //         {this.setgroup()}\n            //     </div>\n            // );\n            return this.setgroup()\n        }\n    }\n\n    SelectDatepickertype() {\n        const { MonthPicker } = DatePicker;\n        if (this.state.calendermode === 'month') {\n            return (\n                <MonthPicker getCalendarContainer={triggerNode => triggerNode.parentNode} placeholder=\"請選擇月份\" />\n            );\n        }\n        else {\n            return (\n                <DatePicker getCalendarContainer={triggerNode => triggerNode.parentNode} placeholder={['請選擇時間']} />\n            );\n        }\n    }\n    render() {\n        const { Option } = Select;\n        // const localday = new Date().getTime()\n        // function compareday(days) {\n        //     if (new Date(days).getTime() > new Date().getTime()) {\n        //         return true\n        //     }\n        //     return false\n        // }\n        return (\n            <div>\n                <t1 className='calendertitle'>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>行事曆</t2>\n                </t1>\n                <div className='calendercontrol'>\n                    {this.SelectDatepickertype()}\n                    <Select defaultValue={this.state.calendermode} onChange={this.handleChange}>\n                        <Option value=\"week\">週</Option>\n                        <Option value=\"month\">月</Option>\n                    </Select>\n                </div>\n                {this.modechange(this.state.calendermode)}\n            </div>\n        );\n    }\n}\n\nexport default Calender\n","import React, { Component } from 'react';\nimport Notice from './Notice'\nimport Bedsidecard from './Bedsidecard'\nimport Scheduletodo from './Scheduletodo'\nimport Calender from './Calender'\nimport './Scheduleview.scss'\n\nclass Scheduleview extends Component {\n    render() {\n        function monthformat(month) {\n            return month + 1\n        }\n        function dateformat(time) {\n            return new Date(time).getFullYear() + \"-\" + monthformat(new Date(time).getMonth()) + \"-\" + new Date(time).getDate()\n        }\n        function exporttime(time) {\n            if (time === null) {\n                return \"--\"\n            }\n            else {\n                return dateformat(time)\n            }\n        }\n        const { caseinfo } = this.props\n        const time = new Date().getTime()\n\n        return (\n            <div>\n                <div style={{ marginBottom: \"5px\" }}>\n                    <centerstyle>\n                        <div className='scheduletitle'>轉入時間:{dateformat(time)}/轉出時間\b:{exporttime(null)}</div>\n                    </centerstyle>\n                    <div className='boxshadow'></div>\n                </div>\n                <div className='schedulelayout'>\n                    <Bedsidecard caseinfo={caseinfo}></Bedsidecard>\n                    <Notice caseinfo={caseinfo}></Notice>\n                    <Calender caseinfo={caseinfo}></Calender>\n                    <Scheduletodo caseinfo={caseinfo}></Scheduletodo>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Scheduleview\n","import React, { Component } from 'react';\nimport Patientinfo from './Patientviewinfo'\nimport { Select, Modal } from 'antd';\nimport { bednumberformat } from '../Function/Wardbedfunction'\nimport { Tabs, Icon } from 'antd';\nimport Crosssectionlayout from './CrossSectionView/Crosssectionlayout'\nimport Chroniclelayout from './ChronicleView/Chroniclelayout'\nimport Flowsheetlayout from './FlootSheetView/Flootsheetlayout'\nimport Examreport from './ExamReport/ExamReport'\nimport Orderview from './Orderview/Orderview'\nimport Noteview from './NoteView/Note'\nimport RTview from './RT/RTview'\nimport Nurtionview from './Nurtion/Nurtion'\nimport Infectionview from './Infection/Infection'\nimport Scheduleview from './Schedule/Scheduleview'\nimport * as ApiProvider from '../API/ApiProvider'\nimport X2JS from 'x2js';\nimport moment from 'moment';\nimport * as WardState from '../Function/Wardstate'\nimport * as WeightList from '../Resource/QTWPER'\nimport * as Wardstate from '../Function/Wardstate'\n\nclass Patientviewlayout extends Component {\n    state = {\n        TYPE: this.props.location.TYPE,\n        PBASINGNINFO: [],\n        PDOCNEW: [],\n        REMARK: [],\n        QMNC: [],\n        QENT: [],\n        QTWER: [],\n        tabstring: \"時間點檢視\",\n        visible: false,\n        PLOCSTART: null,\n        PLOC: null,\n        persionstatus: []\n    }\n    componentDidMount() {\n        const CASEID = this.props.location.state.CASEID\n        const HISID = this.props.location.state.HISID\n        if (HISID !== undefined && CASEID !== undefined) {\n            this.getPersonStatus(HISID, CASEID)\n        }\n    }\n    getPersonStatus(HID, CID) {\n        ApiProvider.getTablePLOC(CID)\n            .then(data => {\n                console.log(data.data)\n                const result = data.data\n                this.setState({ PLOC: result[result.length - 1], PLOCSTART: result[0] })\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getTablePDOCNEW(CID)\n            .then(data => { this.setState({ PDOCNEW: data.data }) })\n            .catch(err => { console.log(\"Andy test getTablePDOCNEW NG \" + JSON.stringify(err)); });\n        ApiProvider.getTablePBASINFO(HID)\n            .then(data => {\n                this.setState({ PBASINGNINFO: data.data })\n                const PBASINGNINFO = data.data\n                const starttime = moment(PBASINGNINFO.PBIRTHDT, 'YYYYMMDD').format(\"YYYYMMDDHHmm\")\n                const endtime = moment().format('YYYYMMDDHHmm')\n                ApiProvider.getQTWPER(CID, starttime, endtime)\n                    .then(result => {\n                        const QTWER = WardState.XM2JSON(result.data)\n                        this.setState({ QTWER: QTWER })\n                    })\n                    .catch(err => {\n                        console.log(\"Andy test getQTWPER NG \" + JSON.stringify(err));\n                    });\n            })\n            .catch(err => { console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err)); });\n        ApiProvider.getPersionalStatus(HID)\n            .then(data => { console.log(data.data); this.setState({ persionstatus: data.data }) })\n            .catch(err => { console.log(err) })\n        ApiProvider.getQENT(CID)\n            .then(data => { this.setState({ QENT: WardState.XM2JSON(data.data) }) })\n            .catch(err => { console.log(err) })\n        ApiProvider.getQMNC(CID)\n            .then(data => { this.setState({ QMNC: WardState.XM2JSON(data.data) }) })\n            .catch(err => { console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err)); })\n\n        // this.setState({ QTWER: WeightList.data.outmsg.resconts.rescont })\n    }\n    // selectchange = (HBEDNUMBER) => {\n    //     const datalist = this.state.HBEDLIST\n    //     const filterdata = datalist.filter(function (info, index, array) {\n    //         return parseInt(info.HBEDNO) === HBEDNUMBER\n    //     })\n    //     if (filterdata.length === 0) {\n    //         return null\n    //     }\n    //     else {\n    //         const source = filterdata[0]\n    //         const HISID = source.PHISTNUM\n    //         const CASEID = source.PCASENO\n    //         const PBASINFO = ApiProvider.getTablePBASINFO(HISID)\n    //             .then(data => {\n    //                 return {\n    //                     PBASINGNINFO: data.data,\n    //                 }\n    //             })\n    //             .catch(err => {\n    //                 console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n    //             });\n    //         const PDOCNEW = ApiProvider.getTablePDOCNEW(CASEID)\n    //             .then(data => {\n    //                 return data.data\n    //             })\n    //             .catch(err => {\n    //                 console.log(\"Andy test getTablePDOCNEW NG \" + JSON.stringify(err));\n    //             });\n    //         const PLOC = ApiProvider.getTablePLOC(CASEID)\n    //             .then(data => {\n    //                 const matadata = data.data\n    //                 return matadata[matadata.length - 1]\n    //             })\n    //             .catch(err => {\n    //                 console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n    //             });\n    //         Promise.all([PBASINFO, PDOCNEW, PLOC])\n    //             .then(result => {\n    //                 this.nis_status_shange(CASEID, result[0].PBASINGNINFO);\n    //                 return {\n    //                     PBASINGNINFO: result[0].PBASINGNINFO,\n    //                     // BEDNUMBER: result[0].BEDNUMBER,\n    //                     PDOCNEW: result[1],\n    //                     PLOC: result[2]\n    //                 }\n    //             })\n    //             .then(result => {\n    //                 this.setState({\n    //                     PBASINGNINFO: result.PBASINGNINFO,\n    //                     PDOCNEW: result.PDOCNEW,\n    //                     PLOC: result.PLOC\n    //                 })\n    //             })\n    //             .catch(err => {\n    //                 console.log(\"error\")\n    //             })\n\n    //     }\n    // }\n\n    // nis_status_shange(CASEID, PBASINGNINFO) {\n    //     const xm2 = new X2JS()\n    //     ApiProvider.getQENT(CASEID)\n    //         .then(data => {\n    //             this.setState({\n    //                 QENT: WardState.XM2JSON(data.data)\n    //             })\n    //         })\n    //         .catch(err => { console.log(err) })\n    //     ApiProvider.getQMNC(CASEID)\n    //         .then(data => {\n    //             // const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n    //             this.setState({\n    //                 QMNC: WardState.XM2JSON(data.data)\n    //             })\n    //             const starttime = moment(PBASINGNINFO.PBIRTHDT, 'YYYYMMDD').format(\"YYYYMMDDHHmm\")\n    //             const endtime = moment().format('YYYYMMDDHHmm')\n    //             ApiProvider.getQTWPER(CASEID, starttime, endtime)\n    //                 .then(data => {\n    //                     const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n    //                     var weightlist = []\n    //                     for (let index = 0; index < parsedata.length; index++) {\n    //                         const element = parsedata[index];\n    //                         if (element.type === 'TW') {\n    //                             weightlist.push(element)\n    //                         }\n    //                     }\n    //                     this.setState({ QTWER: weightlist })\n    //                 })\n    //                 .catch(err => {\n    //                     console.log(\"Andy test getQTWPER NG \" + JSON.stringify(err));\n    //                 });\n    //         })\n    //         .catch(err => {\n    //             console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n    //         });\n    //     // this.setState({ QTWER: WeightList.data.outmsg.resconts.rescont })\n    // }\n\n\n    onChange = (activkey) => {\n        this.setState({\n            tabstring: activkey\n        }\n        )\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    // OptionSelectRender() {\n    //     function addzero(value) {\n    //         if (value < 10) {\n    //             return \"0\" + value\n    //         }\n    //         return value\n    //     }\n    //     function optionselect(LISTBED) {\n    //         const dataoption = LISTBED.map(function (info, index, array) {\n    //             return (\n    //                 <Option key={index} value={Number(info.HBEDNO)}>病床{addzero(parseInt(info.HBEDNO))}</Option>\n    //             );\n    //         })\n    //         return dataoption\n\n    //     }\n    //     const BedList = this.props.location.state.source\n    //     const { Option } = Select;\n    //     const BEDNUMBER = Number(this.props.location.state.BEDNUMBER)\n    //     if (BedList !== null) {\n    //         return (\n    //             <Select defaultValue={Number(BEDNUMBER)} style={{ width: 120 }} onChange={this.selectchange}>\n    //                 {optionselect(BedList)}\n    //             </Select>\n    //         );\n    //     }\n    //     return null\n    // }\n    fixpatientDate = (data) => {\n        const transdata = {\n            'cause': '住院原因',\n            'car_pho': '主要照顧者電話',\n            'care': '主要照顧者',\n            'con_1': '聯絡人1',\n            'con_p11': '聯絡人1電話',\n            'con_2': '聯絡人2',\n            'con_p21': '聯絡人2電話',\n            'dvs': '住院時生命徵象',\n            'habit': '飲食狀況',\n            'oxy': '住院時氧和評估',\n            'h_val': '住院時頭圍',\n            'b_val': '住院時胸圍',\n            'tall': '住院時身高',\n            'weight': '住院時體重'\n        }\n\n        const patientDate = []\n\n        for (let index in transdata) {\n            if (data[index] !== \"\") {\n                patientDate.push([transdata[index], data[index]])\n            }\n        }\n\n        return patientDate\n    }\n    render() {\n        function apiStatus(value) {\n            if (Array.isArray(value)) {\n                if (value.length === 0) {\n                    return false\n                }\n                return true\n            }\n            if (value === null || value === undefined || value === \"\") {\n                return false\n            }\n            return true\n        }\n        const { PLOC, PLOCSTART } = this.state\n        if (!apiStatus(PLOCSTART) || !apiStatus(PLOC)) {\n            return <Icon type=\"loading\" />\n        }\n\n\n\n\n        function statusPersion(persionstatus, QMNC, QTWER, Birthday) {\n            console.log(persionstatus)\n            // console.log(QMNC)\n            if (persionstatus.length === 0) {\n                console.log(QMNC)\n                // console.log(\"000\" + Number(QMNC.weeks))\n                if (QMNC.length === 0) {\n                    return {\n                        BornWeight: undefined,\n                        BornWeeks: undefined,\n                        BornDays: undefined\n                    }\n                }\n                const BornWeight = Wardstate.BornWeight(QTWER, Birthday)\n                const BornWeeks = Number(QMNC[0].weeks)\n                const BornDays = Number(QMNC[0].days)\n                return {\n                    BornWeight: BornWeight,\n                    BornWeeks: BornWeeks,\n                    BornDays: BornDays\n                }\n            }\n            else {\n                const Weight = Number(persionstatus[0].bweight) * 1000\n                const BornWeeks = Number(persionstatus[0].bweek)\n                const BornDays = Number(persionstatus[0].bday)\n                return {\n                    BornWeight: Weight,\n                    BornWeeks: BornWeeks,\n                    BornDays: BornDays\n                }\n            }\n        }\n        function valueFormat(value) {\n            if (value === \"\" || value === null || value === undefined) {\n                return \"--\"\n            }\n            return value.toString()\n        }\n        function valueBornWeight(value) {\n            if (value === \"\" || value === null || value === undefined || value === 0) {\n                return \"\"\n            }\n            return value.toString() + \"g > \"\n        }\n        const USERDATA = this.state.PBASINGNINFO\n        if (USERDATA.length === 0) {\n            return <Icon type=\"loading\" />\n        }\n        const BEDNUMBER = Number(this.props.location.state.BEDNUMBER)\n        const CASEID = this.props.location.state.CASEID\n        const HISID = this.props.location.state.HISID\n        const DOCLIST = this.state.PDOCNEW\n        const ploc = this.state.PLOC\n        const transintime = ploc.PLOCTM.toString()\n        const transindt = ploc.PLOCDT.toString()\n        const transinid = \"NICU\" + transindt + transintime\n        const { TabPane } = Tabs;\n        // const selectrender = this.OptionSelectRender()\n        const Birthday = USERDATA.PBIRTHDT\n        const { persionstatus, QMNC, QTWER } = this.state\n        const BornWeight = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornWeight\n        const BornWeeks = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornWeeks\n        const BornDays = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornDays\n        const Weight = WardState.NewestWeight(QTWER)\n\n\n\n\n        // console.log(this.props.location.state.fromHistory)\n        //true:fromHistory\n\n        const weightList = QTWER.filter(function (info, index, arr) {\n            return info.type === \"TW\"\n        })\n        const caseinfo = {\n            \"HISID\": HISID,\n            \"CASEID\": CASEID,\n            \"WEEK_BORN\": BornWeeks,\n            \"DAY_BORN\": BornDays,\n            \"TRANSINID\": transinid,\n            \"TRANSINDT\": transindt,\n            \"WEIGHT\": weightList,\n            \"PBASINGNINFO\": USERDATA,\n            \"PLOCSTART\": this.state.PLOCSTART\n        }\n        // console.log(QTWER)\n        const patientDetail = this.fixpatientDate(this.state.QENT)\n        const status = {\n            date: moment(Birthday, \"YYYYMMDD\").valueOf(),\n            week: BornWeeks,\n            day: BornDays,\n            BornWeight:BornWeight\n        }\n        const AgeStatus = WardState.CalculateAge(status)\n\n        function formatICUDays(fromHistory, transoutTime, transindt) {\n            if (fromHistory === true) {\n                if (transoutTime !== undefined || transoutTime !== null) {\n                    console.log(transindt)\n                    const end = moment(transoutTime, \"YYYYMMDD\")\n                    const start = moment(transindt, \"YYYYMMDD\")\n                    const ICUDays = end.diff(start, 'days')\n                    return \"轉出時入住ICU第\" + ICUDays + \"天\"\n                }\n                return \"--\"\n            }\n            const end = moment()\n            const start = moment(transindt, \"YYYYMMDD\")\n            const ICUDays = end.diff(start, 'days')\n            return \"入住ICU第\" + ICUDays + \"天\"\n        }\n        const ICUDays = formatICUDays(this.props.location.state.fromHistory, this.props.location.state.transouttime, transindt)\n        return (\n            <div>\n                <div style={{ display: 'flex', justifyContent: \"space-between\", alignItems: 'center', height: \"40px\", marginTop: \"10px\", padding: \"8px\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", backgroundColor: \"#71b0e46e\" }}>\n                    {/* <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(6,auto)\", gridColumnGap: \"10px\", alignItems: \"center\" }}> */}\n                    <div style={{ fontWeight: \"600\", color: \"black\", fontSize: \"16px\" }}>\n                        NICU-{bednumberformat(Number(BEDNUMBER))}\n                        <span style={{ lineHeight: \"30px\", fontSize: \"20px\", padding: \"0px 4px\" }}>{USERDATA.PNAMEC.toString().trim()}</span>\n                        {HISID}\n                    </div>\n                    <t2 >\n                        生日：<span style={{ fontWeight: \"600\", color: \"black\" }}>{moment(Birthday, \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</span>\n                    </t2>\n                    <t2>\n                        實際年齡： {valueFormat(BornWeeks)}+{valueFormat(BornDays)} > <spam style={{ fontWeight: \"600\", color: \"black\" }}>{AgeStatus}</spam>\n                    </t2>\n                    <t2>\n                        實際體重： {valueBornWeight(BornWeight)}<spam style={{ fontWeight: \"600\", color: \"black\" }}>{valueFormat(Weight)}g</spam>\n                    </t2>\n                    <t2 style={{ fontWeight: \"600\", color: \"black\" }}>{ICUDays}</t2>\n                    <t2 style={{ color: \"blue\", textDecoration: \"underline\", cursor: \"pointer\" }} onClick={this.showModal}>入院評估</t2>\n                    <Modal\n                        title=\"病人基本資料\"\n                        visible={this.state.visible}\n                        onOk={this.handleOk}\n                        onCancel={this.handleCancel}\n                        width={800}\n                        footer={null}>\n                        <Patientinfo caseinfo={caseinfo} patientDetail={patientDetail}></Patientinfo>\n                    </Modal>\n                    {/* </div> */}\n                </div>\n                <Tabs defaultActiveKey={this.state.tabstring} tabPosition={'top'} onChange={this.onChange}>\n                    <TabPane tab=\"時間點檢視\" key=\"時間點檢視\">\n                        <Crosssectionlayout status={status} parentDateCallback={this.callback} caseinfo={caseinfo}></Crosssectionlayout>\n                    </TabPane>\n                    <TabPane tab=\"時間軸檢視\" key=\"時間軸檢視\">\n                        <Chroniclelayout status={status} caseinfo={caseinfo}></Chroniclelayout>\n                    </TabPane>\n                    <TabPane tab=\"輸出入細節\" key=\"輸出入細節\">\n                        <Flowsheetlayout status={status} caseinfo={caseinfo}></Flowsheetlayout>\n                    </TabPane>\n                    <TabPane tab=\"檢驗及報告\" key=\"檢驗及報告\">\n                        <Examreport caseinfo={caseinfo}>></Examreport>\n                    </TabPane>\n                    <TabPane tab=\"醫囑及藥囑\" key=\"醫囑及藥囑\">\n                        <Orderview caseinfo={caseinfo}>></Orderview>\n                    </TabPane>\n                    <TabPane tab=\"跨團隊紀錄\" key=\"跨團隊紀錄\">\n                        <Noteview caseinfo={caseinfo}>></Noteview>\n                    </TabPane>\n                    <TabPane tab=\"呼吸評估\" key=\"呼吸評估\">\n                        <RTview caseinfo={caseinfo}>></RTview>\n                    </TabPane>\n                    <TabPane tab=\"營養評估\" key=\"營養評估\">\n                        <Nurtionview caseinfo={caseinfo}>></Nurtionview>\n                    </TabPane>\n                    <TabPane tab=\"感染評估\" key=\"感染評估\">\n                        <Infectionview caseinfo={caseinfo}>></Infectionview>\n                    </TabPane>\n                    <TabPane tab=\"行事曆及註記\" key=\"行事曆及註記\">\n                        <Scheduleview caseinfo={caseinfo}>></Scheduleview>\n                    </TabPane>\n                </Tabs>\n            </div>\n        );\n    }\n}\n\nexport default Patientviewlayout;\n","import React, { Component } from 'react';\nimport { Table, Input, Select, Button, Modal, Icon } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider';\nconst { confirm } = Modal;\n\nclass Powersetting extends Component {\n    constructor(props) {\n        super();\n\n        this.addUserdata = this.addUserdata.bind(this)\n        this.adduserhandleChange = this.adduserhandleChange.bind(this)\n    }\n\n    state = {\n        MouseClick: 0,\n        name: '',\n        role: 0,\n        adduser: undefined,\n        userList: [],\n        power: ['僅可瀏覽病房總覽、歷史資料查詢', '可瀏覽和編輯病房總覽、歷史資料查詢', '可瀏覽和編輯權限設定、系統摘要'],\n        powerName: ['唯讀使用者', '一般使用者', '系統管理者'],\n        visible: false,\n        radioValue: 0,\n        pwdRadio: true,\n        inputUsername: '',\n        inputPassword: '',\n        inputName: '',\n        inputDoctorid: '',\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        this.nameChange = this.nameChange.bind(this)\n        this.queryUserdata = this.queryUserdata.bind(this)\n        this.inputuserName = this.inputuserName.bind(this)\n        this.inputPassword = this.inputPassword.bind(this)\n        this.inputName = this.inputName.bind(this)\n        this.inputDoctorid = this.inputDoctorid.bind(this)\n\n        ApiProvider.getAlluser()\n            .then(data => {\n                this.setState({ userList: data.data })\n            })\n            .catch(err => { })\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n\n    radioOnChange = e => {\n        this.setState({\n            radioValue: e.target.value,\n        }, () => {\n            if (this.state.radioValue === 1) {\n                this.setState({\n                    pwdRadio: true,\n                })\n            } else if (this.state.radioValue === 0) {\n                this.setState({\n                    pwdRadio: false,\n                })\n            }\n        })\n    };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    MouseClickTable(record) {\n        this.setState({\n            MouseClick: record\n        })\n    }\n\n    queryUserdata() {\n        const { userList, role } = this.state\n        let fixData = userList\n\n        if (role != 0) {\n            fixData = fixData.filter(data => data.role == (role - 1))\n        }\n\n        if (this.state.name !== '') {\n            fixData = fixData.filter(data => data.name.match(this.state.name) != null)\n        }\n        return fixData\n    }\n\n    addUserdata() {//sso 只剩下4種角色 其他先傳空直\n        ApiProvider.register(this.state.inputName, '', this.state.adduser, this.state.inputUsername, 'none')\n            .then(data => {\n                ApiProvider.getAlluser()\n                    .then(data => {\n                        this.setState({ userList: data.data, inputUsername: '', inputPassword: '', inputName: '', inputDoctorid: '' })\n                    })\n                    .catch(err => { })\n            })\n            .catch(err => { })\n        this.setState({\n            visible: false,\n        });\n    }\n\n\n    showDeleteConfirm(name, account, role, roleString) {\n        const set_State = this.setState.bind(this)\n        confirm({\n            title: '請問您確定要刪除此帳號嗎?',\n            content: <div>姓名：{name}<br />角色：{roleString}<br />帳號：{account}</div>,\n            okText: 'Yes',\n            okType: 'danger',\n            cancelText: 'No',\n            onOk() {\n                ApiProvider.deleteUser(name, role, account).then(data => {\n                    ApiProvider.getAlluser()\n                        .then(data => {\n                            set_State({ userList: data.data })\n                        })\n                        .catch(err => { })\n                }).catch(err => { })\n            },\n            onCancel() {\n            },\n        });\n    }\n\n    EditStyle(key, name, account, role, roleString) {\n        if (key === this.state.MouseClick) {\n            return (\n                <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gridColumnGap: '10px' }}>\n                    <div>\n                        <Button onClick={this.showDeleteConfirm.bind(this, name, account, role, roleString)} type=\"dashed\">\n                            刪除\n                        </Button>\n                    </div>\n                </div>\n            );\n        }\n        else return null\n    }\n\n    handleChange = (value) => {\n        this.setState({ role: value })\n    }\n\n    adduserhandleChange(value) {\n        this.setState({ adduser: value })\n    }\n\n    nameChange(event) {\n        this.setState({ name: event.target.value })\n    }\n\n    inputuserName(event) {\n        this.setState({ inputUsername: event.target.value })\n    }\n\n    inputPassword(event) {\n        this.setState({ inputPassword: event.target.value })\n    }\n\n    inputName(event) {\n        this.setState({ inputName: event.target.value })\n    }\n\n    inputDoctorid(event) {\n        this.setState({ inputDoctorid: event.target.value })\n    }\n\n    Searchbar = () => {\n        const { Option } = Select;\n\n        return (\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <div style={{ fontSize: '16px' }}>\n                        角色:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Select defaultValue={this.state.role} style={{ width: 150 }} onChange={this.handleChange}>\n                            <Option value={0}>全部使用者</Option>\n                            <Option value={1}>唯讀使用者</Option>\n                            <Option value={2}>一般使用者</Option>\n                        </Select>\n                    </div>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        姓名:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"輸入個案姓名\" onChange={this.nameChange}></Input>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n    render() {\n\n        const columns = [\n            {\n                title: '編號',\n                dataIndex: 'id',\n                key: 'id',\n                width: \"10%\"\n            },\n            {\n                title: '姓名',\n                dataIndex: 'name',\n                key: 'name',\n                width: \"10%\"\n            },\n            {\n                title: '醫師帳號',\n                dataIndex: 'account',\n                key: 'account',\n                width: \"12%\"\n            },\n            {\n                title: '角色',\n                dataIndex: 'role',\n                key: 'role',\n                width: \"10%\"\n            },\n            {\n                title: '權限',\n                dataIndex: 'power',\n                key: 'power',\n                width: \"40%\"\n            },\n            {\n                dataIndex: 'clickstate',\n                key: 'clickstate',\n                width: \"7%\"\n            }\n        ];\n\n        const fixData = this.queryUserdata()\n\n        const userData = fixData.map((data, index) => {\n            let roleString = ''\n            let powerString = ''\n\n            roleString = this.state.powerName[data.role]\n            powerString = this.state.power[data.role]\n\n            return [\n                {\n                    key: ++index,\n                    id: index,\n                    name: data.name,\n                    role: roleString,\n                    power: powerString,\n                    account: data.username,\n                    doctorid: data.doctorid,\n                    clickstate: this.EditStyle(index, data.name, data.username, data.role, roleString)\n                }\n            ]\n        })\n\n        let myNewArray = [].concat.apply([], userData);\n        const { Option } = Select;\n\n        // if (this.state.userList.length === 0) {\n        //     return (\n        //         <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>\n        //             <Icon type=\"loading\" />\n        //         </div>\n        //     );\n        // }\n\n        return (\n            <div>\n                <div style={{ display: \"flex\", justifyContent: 'space-between', alignItems: 'center' }}>\n                    {this.Searchbar()}\n                    <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                        <Button style={{ width: \"100%\" }} onClick={this.showModal}>新增帳號</Button>\n                        <Modal\n                            title=\"新增帳號\"\n                            visible={this.state.visible}\n                            onOk={this.addUserdata}\n                            onCancel={this.handleCancel}\n                            width=\"570px\"\n                        >\n                            <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n\n                            </div>\n                            <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\", marginTop: \"10px\" }}>\n                                <div style={{ marginLeft: \"10px\" }}>\n                                    醫師帳號：\n                                <Input id=\"username\" value={this.state.inputUsername} onChange={this.inputuserName} placeholder=\"輸入帳號\" style={{ width: '120px' }} />\n                                </div>\n                                <div style={{ marginLeft: \"10px\" }}>\n                                    姓名：\n                                <Input id=\"name\" placeholder=\"輸入姓名\" value={this.state.inputName} onChange={this.inputName} style={{ width: '120px' }} />\n                                </div>\n                            </div>\n                            <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\", marginTop: \"10px\", marginLeft: \"13px\" }}>\n                                <div style={{ marginLeft: \"0px\" }}>\n                                    角色：{this.state.pwdRadio ?\n                                        <Select placeholder='選擇角色' style={{ width: 150 }} onChange={this.adduserhandleChange.bind(this)}>\n                                            <Option value={0}>唯讀使用者</Option>\n                                            <Option value={1}>一般使用者</Option>\n                                        </Select> :\n                                        <Select placeholder='選擇角色' style={{ width: 150 }} onChange={this.adduserhandleChange.bind(this)}>\n                                            <Option value={2}>系統設定管理員</Option>\n                                        </Select>}\n                                </div>\n                            </div>\n                            <div>\n                            </div>\n                        </Modal>\n                    </div>\n                </div>\n                <div style={{ marginTop: '20px' }}>\n                    <Table columns={columns} dataSource={myNewArray} onRow={record => {\n                        return {\n                            onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                            onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                        };\n                    }} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Powersetting;\n","import React, { Component } from 'react';\nimport { Table, Icon } from 'antd';\n\nclass Systemlogtable extends Component {\n    state = {\n        MouseClick: 0\n    }\n\n    MouseClickTable(record) {\n        this.setState({\n            MouseClick: record\n        })\n    }\n\n    render() {\n\n        const powerName = ['唯讀使用者', '一般使用者', '系統管理員']\n        const loginlog_table = this.props.loginlogList.map(\n            (info, index) => {\n                let managerName = ''\n                let dateTime = info.time.split(\"T\")[0] + ' ' + info.time.split(\"T\")[1].split(\".\")[0]\n\n                managerName = powerName[info.role]\n\n                return {\n                    key: index,\n                    time: dateTime,\n                    event: 'User ' + info.name + '(' + managerName + ') login system'\n                }\n            }\n        )\n\n        const apilog_table = this.props.apilogList.map((data, index) => {\n            if (data !== null) {\n                let date = data.split(\"- -\")[1].split(\"]\")[0].split(\"[\")[1].split(\" \")[0].split(\"/\")\n                const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n                for (let j = 0; j < months.length; j++) {\n                    if (date[1] === months[j]) {\n                        date[1] = months.indexOf(months[j]) + 1\n                    }\n                }\n                if (date[1] < 10) {\n                    date[1] = '0' + date[1]\n                }\n                let time = date[2].split(\":\")[0] + \"-\" + date[1] + \"-\" + date[0] + \" \" + date[2].split(\":\")[1] + \":\" + date[2].split(\":\")[2] + \":\" + date[2].split(\":\")[3]\n                let content = data.split(\"- -\")[1].split(\"]\")[1]\n\n                return {\n                    key: index,\n                    time: time,\n                    event: content\n                }\n            }\n            return null\n        })\n\n        const columns = [\n            {\n                title: '記錄時間',\n                dataIndex: 'time',\n                key: 'time',\n                width: \"1%\"\n            },\n            {\n                title: '事件',\n                dataIndex: 'event',\n                key: 'event',\n                width: \"10%\"\n            }\n        ]\n\n        // if (loginlog_table.length === 0 || apilog_table.length === 0) {\n        //     return (\n        //         <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>\n        //             <Icon type=\"loading\" />\n        //         </div>\n        //     );\n        // }\n\n        return (\n            <div style={{ marginTop: '20px' }}>\n                {\n                    this.props.optionValue ? <Table columns={columns} dataSource={apilog_table} onRow={record => {\n                        return {\n                            onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                            onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                        }\n                    }} pagination={{\n                        onChange: (page, pageSize) => {\n                            this.props.getPages(page)\n                        }\n                    }} /> :\n                        <Table columns={columns} dataSource={loginlog_table} onRow={record => {\n                            return {\n                                onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                                onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                            }\n                        }} pagination={{\n                            onChange: (page, pageSize) => {\n                                this.props.getPages(page)\n                            }\n                        }} />\n                }\n            </div>\n        )\n    }\n}\n\nexport default Systemlogtable\n","import React, { Component } from 'react';\nimport { Progress, Select, DatePicker } from 'antd';\nimport Systemlogtable from './Systemlogtable'\nimport * as ApiProvider from '../API/ApiProvider';\n\nclass Systemlog extends Component {\n\n    state = { startTime: \"\", endTime: \"\", totalSpace: 0, usingSpace: 0, percent: 0, option: 0, loginlogList: [], apilogList: [], page: 1 }\n\n    componentDidMount() {\n        ApiProvider.getSpace()\n            .then(data => {\n                const totalSpace = data.data[0].total / 1024 / 1024 / 1024\n                const usingSpace = (data.data[0].total - data.data[0].unuse) / 1024 / 1024 / 1024\n                const percent = (usingSpace / totalSpace) * 100\n                this.setState({ totalSpace: totalSpace.toFixed(2), usingSpace: usingSpace.toFixed(2), percent: percent.toFixed(2) })\n            })\n            .catch(err => { })\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    onChange(date, dateString) {\n        this.setState({ startTime: dateString[0], endTime: dateString[1] }, () => {\n            if (this.state.option === 0) {\n                this.queryLoginLogdata()\n            } else if (this.state.option === 1) {\n                this.queryApiLogdata()\n            }\n        });\n    }\n\n    queryLoginLogdata() {\n        if (this.state.startTime !== \"\" && this.state.endTime !== \"\") {\n            const st = new Date(this.state.startTime.split('-')[0], this.state.startTime.split('-')[1] - 1, this.state.startTime.split('-')[2]).toISOString().split('.')[0];\n            const et = new Date(this.state.endTime.split('-')[0], this.state.endTime.split('-')[1] - 1, this.state.endTime.split('-')[2]).toISOString().split('.')[0];\n\n            ApiProvider.getLoginlog(st, et)\n                .then(data => {\n                    this.setState({ loginlogList: data.data, apilogList: [] })\n                })\n                .catch(err => { })\n        }\n    }\n\n    queryApiLogdata() {\n        if (this.state.startTime !== \"\" && this.state.endTime !== \"\") {\n            ApiProvider.getApilog(this.state.startTime)\n                .then(data => {\n                    this.setState({ apilogList: data.data, loginlogList: [] })\n                })\n                .catch(err => { })\n        }\n    }\n\n    getPages(pages) {\n        this.setState({ page: pages })\n    }\n\n    handleChange(value) {\n        this.setState({ option: value })\n    }\n    render() {\n        const { Option } = Select;\n        const { RangePicker } = DatePicker;\n        const onChange = this.onChange.bind(this);\n\n        return (\n            <div>\n                <div style={{ fontSize: '22px' }}>系統空間使用狀況</div>\n                <div style={{ marginTop: \"10px\" }}><Progress percent={this.state.percent} showInfo={false} /></div>\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginTop: \"10px\" }}>\n                    <div>\n                        <div>已使用空間/總空間</div>\n                        <div>{this.state.usingSpace}GB({this.state.percent}%)/{this.state.totalSpace}GB</div>\n                    </div>\n                    <div>\n                        <div>收案中的個案資料0.9GB(10.5%)</div>\n                        <div>0.9GB(10.5%)</div>\n                    </div>\n                </div>\n                <div style={{ marginTop: '20px' }}>\n                    <div style={{ fontSize: '22px' }}>Event Log</div>\n                    <div style={{ marginTop: \"10px\" }}>\n                        <Select placeholder='選擇log' style={{ width: 200 }} onChange={this.handleChange.bind(this)}>\n                            <Option value={0}>Login log</Option>\n                            <Option value={1}>API access log</Option>\n                        </Select>\n                        <RangePicker getCalendarContainer={triggerNode => triggerNode.parentNode} onChange={onChange} style={{ marginLeft: \"10px\", width: \"250px\" }} />\n                    </div>\n                    <div style={{ marginTop: '10px' }}>\n                        <Systemlogtable loginlogList={this.state.loginlogList} apilogList={this.state.apilogList} optionValue={this.state.option} getPages={this.getPages.bind(this)} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Systemlog\n","import React, { Component } from 'react';\nimport { Tabs } from 'antd';\nimport Powersetting from '../Systemgroup/powersetting'\nimport Systemlog from '../Systemgroup/Systemlog'\n// import Warningmanage from '../Systemgroup/Warningmanage'\n\n\nclass Systemcontrol extends Component {\n    state = {\n        powerLogin: 0\n    }\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    render() {\n\n        const { TabPane } = Tabs;\n        const bollogin = this.state.powerLogin == 2\n        return (\n            <div style={{ paddingLeft: \"24px\", paddingRight: \"24px\" }}>\n                <div style={{ fontSize: \"22px\", height: '50px', lineHeight: \"50px\" }}>系統設定</div>\n                <Tabs defaultActiveKey=\"5\">\n                    <TabPane tab=\"權限設定\" key=\"1\" >\n                        <Powersetting />\n                    </TabPane>\n                    {\n                        bollogin && <TabPane tab=\"系統摘要\" key=\"2\" >\n                            <Systemlog />\n                        </TabPane>\n                    }\n                    {/*<TabPane tab=\"裝置連線狀態管理\" key=\"3\">\n                    </TabPane> \n                    <TabPane tab=\"病人資料狀態管理\" key=\"3\">\n                    </TabPane>                  \n                    <TabPane tab=\"警示管理\" key=\"5\">\n                        <Warningmanage/>\n                    </TabPane>*/}\n                </Tabs>\n            </div>\n        );\n    }\n}\n\nexport default Systemcontrol;\n","import React, { Component } from 'react';\nimport './Layout.scss';\nimport Sidermenu from './Sidermenu';\nimport Bedview from '../Wardview/Bedinfo/Bedview'\nimport Historyview from '../Content/Historyview'\nimport Patientviewlayout from '../Patientview/Patientviewlayout'\nimport Systemcontrol from '../Content/Systemcontrol'\nimport { Route, Switch, Link } from 'react-router-dom';\nimport { yyyymmddformat, weekdateformat } from '../Function/Timeformat'\nimport { Icon } from 'antd'\n\nclass Layoutframe extends Component {\n    onClickLogout() {\n        sessionStorage.clear();\n    }\n    render() {\n        const UsrName = sessionStorage.getItem('user');\n        const url_path = this.props.location.pathname\n        return (\n            <div style={{ height: \"100vh\" }}>\n                <div className=\"header\">\n                    {/*eslint-disable-next-line*/}\n                    <div style={{ display: 'flex', alignItems: 'center', }}>\n                        <div style={{ fontSize: \"20px\", fontWeight: \"default\" }}>北榮NICU智慧醫療系統</div>\n                        <Sidermenu path={url_path} routes={this.props.route}></Sidermenu>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"10px\" }}>\n                        <t3 style={{ color: 'white' }}>{UsrName}醫師 {yyyymmddformat(new Date())} {weekdateformat(new Date())}</t3>\n                        <Link to=\"/Login\" onClick={() => this.onClickLogout()}>\n                            <Icon style={{ color: \"white\" }} type=\"logout\" />\n                        </Link>\n                    </div>\n                </div>\n                <div className=\"content\">\n                    <Switch>\n                        <Route path={`${this.props.match.path}/ward`} component={Bedview} />\n                        <Route path={`${this.props.match.path}/history`} component={Historyview} />\n                        <Route path={`${this.props.match.path}/system`} component={Systemcontrol} />\n                        <Route path={`${this.props.match.path}/patient`} component={Patientviewlayout} />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Layoutframe;\n","import React, { Component, cloneElement } from 'react';\nimport { Button, Icon } from 'antd';\nimport { Redirect } from 'react-router-dom'\nimport { Input } from 'antd'\nimport * as ApiProvider from '../API/ApiProvider';\nimport logo from '../Image/Logo/1200px-Taipei_Veterans_General_Hospital_Emblem.svg.png'\n\n\nclass Loginview extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: false,\n            permission: true,\n            statusstring: null\n        }\n        this.setRedirect = this.setRedirect.bind(this);   //把元件中的this繫結到handleClick方法中，這樣就會保持this一致          \n    };\n\n    componentDidMount() {\n        const account = document.querySelector('#account')\n        const password = document.querySelector('#password')\n        account.addEventListener('focus', () => {\n            account.addEventListener('keyup', e => {\n                if (e.keyCode === 13) {\n                    account.blur();\n                    password.focus();\n                }\n            })\n        })\n\n        password.addEventListener('focus', () => {\n            password.addEventListener('keyup', e => {\n                e.keyCode === 13 && this.setRedirect()\n            })\n        })\n    }\n\n    setRedirect = () => {\n        const account = document.getElementById(\"account\").value;\n        const password = document.getElementById(\"password\").value;\n        ApiProvider.login(account, password)\n            .then(result => {\n                console.log(\"login OK \" + JSON.stringify(result));\n                const userData = result.data\n                const user = account\n                const role = userData[0].role\n                sessionStorage.setItem('user', user);\n                sessionStorage.setItem('role', role);\n                this.setState({\n                    redirect: true\n                })\n            })\n            .catch(err => {\n                console.log(\"login NG \" + JSON.stringify(err));\n                this.setState({\n                    permission: false,\n                    statusstring: \"帳號或密碼錯誤\"\n                })\n            });\n    }\n    renderRedirect = () => {\n        const login = sessionStorage.getItem('user');\n        const role = sessionStorage.getItem('role');\n        if (login !== null) {\n            if (Number(role) === 2) {\n                return <Redirect from={\"/login\"} to={\"/nicu/system\"} />\n            }\n            return <Redirect from={\"/login\"} to={\"/nicu/ward/wardindex\"} />\n        }\n    }\n\n\n    render() {\n        return (\n            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"100vh\", width: \"100vw\", background: 'linear-gradient(to bottom, rgba(195, 239, 255, 1), rgba(46, 100, 164, 1))' }}>\n                {this.renderRedirect()}\n                <div style={{ textAlign: \"center\" }}>\n                    <img style={{ width: \"200px\" }} src={logo} alt='logo'></img>\n                    <div style={{ display: 'flex', justifyContent: \"center\", alignItems: \"center\", flexWrap: \"wrap\" }}>\n                        <div style={{ color: \"white\", fontSize: \"20px\", textAlign: \"center\", width: \"100%\" }}>台北榮民總醫院 NICU智慧醫療系統</div>\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div style={{ width: \"350px\", height: \"250px\", borderRadius: \"4px\", backgroundColor: \"white\", textAlign: \"center\", padding: '25px', position: \"relative\" }}>\n                                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                                    <div style={{ height: \"32px\", width: \"32px\", borderRadius: \"2px\", backgroundColor: \"rgba(46,100,164,1)\", color: \"white\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                        <Icon type=\"user\" style={{ color: \"white\" }} />\n                                    </div>\n                                    <Input id=\"account\" style={{ marginLeft: \"20px\" }} placeholder=\"請輸入3270主機帳號\"></Input>\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginTop: \"25px\" }}>\n                                    <div style={{ height: \"32px\", width: \"32px\", borderRadius: \"2px\", backgroundColor: \"rgba(46,100,164,1)\", color: \"white\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                        <Icon type=\"lock\" style={{ color: \"white\" }} />\n                                    </div>\n                                    <Input type=\"password\" id=\"password\" style={{ marginLeft: \"20px\" }} placeholder=\"請輸入密碼\"></Input>\n                                </div>\n                                <Button style={{ width: \"280px\", backgroundColor: \"rgba(46, 100, 164, 1)\", color: \"white\", marginTop: \"70px\" }} onClick={this.setRedirect}>登入</Button>\n                                <div style={{ display: this.state.permission ? \"none\" : \"block\", color: \"red\", fontSize: \"1rem\" }}>{this.state.statusstring}</div>\n                            </div>\n                        </div>\n                        <div style={{ width: \"100%\", justifyContent: \"center\", alignItems: \"center\", display: \"flex\" }}>200310.007-T</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Loginview\n","import React from 'react';\nimport Homepage from './Homepage'\nimport './App.scss';\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\nimport Layoutframe from './Layout/Layout'\nimport Loginview from './Layout/Loginview'\nimport 'antd/dist/antd.css';\nimport { ConfigProvider } from 'antd';\nimport zhTW from 'antd/es/locale/zh_TW';\nimport moment from 'moment';\nimport 'moment/locale/zh-tw';\nmoment.locale('zh-tw');\n\n\n\nfunction App() {\n  document.documentElement.style.fontSize = '14px'\n  return (\n    <div className=\"AllPage\">\n      <ConfigProvider locale={zhTW}>\n        <BrowserRouter>\n          <Route exact path=\"/\" component={Homepage} />\n          <Redirect from={'/'} to={\"/login\"} />\n          <Route path=\"/nicu\" component={Layoutframe} />\n          <Route path=\"/login\" component={Loginview} />\n        </BrowserRouter>\n      </ConfigProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Chooseedit.def74a6e.svg\";","module.exports = __webpack_public_path__ + \"static/media/details.bc0482ca.svg\";"],"sourceRoot":""}