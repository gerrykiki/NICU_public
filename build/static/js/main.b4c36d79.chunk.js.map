{"version":3,"sources":["Image/svg/edit2.svg","Image/svg/filter.svg","Image/svg/file1.svg","Image/svg/file2.svg","Image/svg/Wardview.svg","Image/svg/Historyview.svg","Image/svg/Control.svg","Image/svg/delete.svg","Image/svg/dragdown.svg","Image/svg/RT.svg","Image/svg/calender.svg","Image/svg/calenderwhite.svg","Image/svg/ping.svg","Image/svg/pingwhite.svg","Image/svg/Edit.svg","Homepage.js","Layout/Sidermenu.js","Function/Wardstate.js","API/ApiProvider.js","API/ApiGithub.js","Wardview/Wardcardstatus.js","Wardview/WardCardvalue-k.js","Function/Wardbedfunction.js","Wardview/Wardcard/Wardcarddetail.js","Wardview/Wardcard/UnpreviewWardCardDetail.js","Commonfunction.js","Wardview/Wardnote.js","Wardview/Bedinfo.js","Function/Timeformat.js","Patientview/CrossSectionView/Labview.js","Wardview/WardBedinformation.js","Module/Schedule_event.js","Wardview/Wardschedule.js","Wardview/Wardinfoindex.js","jsonResponse.js","Wardview/Wardlifechart.js","Wardview/Wardmonthafter.js","Wardview/Wardgrewchart.js","Patientview/Schedule/Notice.js","Patientview/CrossSectionView/Labviewitem.js","Function/FiliterReg.js","Wardview/Wardcardvitalsign.js","Wardview/Wardchart.js","Wardview/Wardunfousercheckbox.js","Patientview/Patientviewinfo.js","Wardview/Wardinfouser-k.js","Wardview/Bedinfo/Bedview.js","Content/Historyview.js","Patientview/CrossSectionView/Crossectionvitalsignchart.js","Patientview/CrossSectionView/Vitalsign.js","Patientview/CrossSectionView/Warningsettinglist.js","Patientview/Controlbar.js","Module/iopage.js","Patientview/CrossSectionView/Crossection_io.js","Patientview/CrossSectionView/NonlabviewtableCell.js","Patientview/ExamReportModal.js","Patientview/CrossSectionView/Nonlabviewtable.js","Patientview/CrossSectionView/Nonlabview.js","Patientview/CrossSectionView/RTtable.js","Patientview/CrossSectionView/GAS.js","Patientview/CrossSectionView/RemarkModal.js","Patientview/CrossSectionView/RTbreathtablecell.js","Patientview/CrossSectionView/RTbreathetable.js","Resource/QSPE.js","Patientview/CrossSectionView/RTbreathe.js","Patientview/Prescriptionorder/Prescriptionordertablecell.js","Patientview/Prescriptionorder/Prescriptionordertable.js","Patientview/Prescriptionorder/Prescriptionorder.js","Patientview/Treatmentorder/Treatmentordertablecell.js","Patientview/Treatmentorder/Treatmentordertable.js","Patientview/Treatmentorder/Treatmentorder.js","Module/Notecell.js","Module/Note.js","Patientview/CrossSectionView/Crosssectionschedule.js","Patientview/CrossSectionView/Crosssection_todo.js","Patientview/CrossSectionView/Crosssectionlayout.js","Patientview/ChronicleView/Chronic_io.js","Patientview/ChronicleView/ChronicTableCellTooltipCell.js","Patientview/ChronicleView/ChronicTableCell.js","Patientview/ChronicleView/ChronicTable.js","Patientview/ChronicleView/ChronicLab.js","Patientview/ChronicleView/ChronicRTTableCell.js","Patientview/ChronicleView/ChronicRTTable.js","Patientview/ChronicleView/ChronicRT.js","Patientview/ChronicleView/ChronicOrderTable.js","Patientview/ChronicleView/ChronicOrder.js","Patientview/ChronicleView/ChronicWeightTable.js","Patientview/ChronicleView/ChronicWeight.js","Module/Vitalxaxis.js","Module/Vitalxaxisbot.js","Patientview/ChronicleView/Chronic_vital.js","Patientview/ChronicleView/Chroniclelayout.js","Patientview/FlootSheetView/Flootsheetio.js","Patientview/FlootSheetView/Flootsheetlayout.js","Patientview/ExamReport/Examchart.js","Patientview/ExamReport/ExamLabview.js","Data/RegularData.js","Patientview/ExamReport/ExamNonlabtablecell.js","Patientview/ExamReport/NonLabview.js","Patientview/ExamReport/ExamReport.js","Patientview/Orderview/Orderview.js","Patientview/NoteView/Note.js","Patientview/RT/RTview.js","Patientview/Nurtion/Nurtionfeedingcell.js","Patientview/Nurtion/Nurtionfeeding.js","Patientview/Nurtion/Nurtion_TPN_cell.js","Patientview/Nurtion/Nurtion_TPN.js","Patientview/Nurtion/Watervaluechart.js","Patientview/Nurtion/Nurtion.js","Patientview/Infection/Infectionlabtable.js","Patientview/Infection/Infectionlab.js","Patientview/Infection/Infection.js","Patientview/Schedule/Bedsidecard.js","Patientview/Schedule/Scheduletodo.js","Patientview/Schedule/Calendercell.js","Patientview/Schedule/Calender.js","Patientview/Schedule/Scheduleview.js","Patientview/Patientviewlayout.js","Systemgroup/powersetting.js","Systemgroup/Systemlogtable.js","Systemgroup/Systemlog.js","Content/Systemcontrol.js","Layout/Layout.js","Layout/Loginview.js","App.js","serviceWorker.js","index.js","Image/svg/Chooseedit.svg","Image/svg/details.svg"],"names":["module","exports","Homepage","Component","Sidermenu","state","powerLogin","Number","sessionStorage","getItem","powerLogins","this","setState","key","match","value","path","props","Selectkeynumber","rule","console","log","style","display","alignItems","marginLeft","height","gridTemplateColumns","gridColumnGap","to","class","select_hover","src","wardviewlogo","alt","historylogo","controllogo","CalculateAge","BornStatus","startDate","moment","date","minus","diff","undefined","week","day","Math","floor","month","statecolor","Labwarningvalue","title","BornWeight","weightlist","birthday","Array","isArray","findata","filter","index","rec_dat","type","length","parseInt","value2","NewestWeight","XM2JSON","data","xm2","X2JS","status","xml2js","outmsg","ret","parsedata","resconts","rescont","QMNCXM2JSON","Doc","DocList","Main","element","PDTYPE","PDDOCNMC","toString","trim","selectweight","List","array","valueOf","push","axios","defaults","baseURL","config","headers","getAlluser","get","getQDC","caseno","st","et","getQENT","getQSPE","getOnePatientNotice","transinno","HISID","getAllPatient","getOnePatientRemark","transid","getOneRemark","remarkid","getOnePatientSchedule","starttime","endtime","getStoredProcedureORDLIST","hisid","dpt","docid","getStoredProcedureRESDBGAS","getStoredProcedureRESDGLU1","getStoredProcedureRESDISP","seq","getStoredProcedureRESLAB01","getStoredProcedureRESLAB02","getStoredProcedureRESLAB0C","getStoredProcedureRESSECT","getStoredProcedureTRTMNTQ1","getStoredProcedureUDORDER0","getTablePBASINFO","PHISTNUM","getTablePDOCNEW","PCASENO","getTablePLOC","createTodo","caseid","context","time","body","post","getOneTodo","getPatientwardvalueBoxPlot","startTime","endTime","interval","getVitalSignData","getHisidwardvalue","axiosGithub","create","timeout","getGitHubJson","string","Wardcarstatus","TRTMNTQ1","UDORDER0","FlagReg","TRQ1","ApiProvider","then","info","arr","ORSTATUS","catch","err","UDORDER","dataList","UDSTATUS","Reg","ApiGithub","Promise","all","result","parseFlagData","Flag","item","StatusUDORDER","some","UDDRGNAM","toLowerCase","UDGNAME","ParseValueUD","indexOf","StatusTRTMNTQ1","ORPROCED","ParseValueTRT","statusspan","source","style_change","AntiStatus","TPNStatus","NP0Status","FoleyStatus","DrainStatus","statuslist","InvasiveRespiratorStatus","NonInvasiveRespiratorStatus","RespiratorStatusParse","map","className","Respirator","wardstatestringformat","WardCard","useState","CenterMonitorValue","SetCenterMonitorValue","SetHID","Timer","SetTimer","InitCenterData","useEffect","TimerID","setInterval","clearInterval","HID","phistnum","JSON","stringify","color","hr","spo2","fontWeight","fontSize","abpd","abps","abpm","gridColumnsGap","rr","bt","bednumberformat","number","gender","BornChangeWeek","BornChangeDay","BornChangeWeight","Wardcarddetail","hoverstate","clickstate","mouse_hover","edit_hover","visible","pbasignfo","birthdayweight","weight","bornweek","bornday","nowweight","report","nonreport","remark","TRANSINID","TRANSINDT","TRANSINTM","modatstatus","persionstatus","handleCancel","e","showModal","add","format","TRID","API_DATA","mapList","ORRCPDT","ORRCPTM","name","sex","parseFloat","toFixed","pname","psex","bweight","bweek","bday","personstatus","typefrom","from","PNAMEC","PSEX","Birthday","PBIRHDT","BornWeeks","BornDays","BornWeekAndDay","viewstatus","dataArrayRender","HBEDNO","defaultValue","onChange","margin","width","onCancel","footer","justifyContent","border","onClick","handleOk","valueFormat","statusPersion","QMNC","QTWER","Wardstate","weeks","days","previewmode","hbedlist","QTWPER","Weight","AgeStatus","role","cursor","editlogo","fileLogo","file2Logo","borderBottomWidth","borderBottomColor","borderBottomStyle","centerdata","centerMonitorData","padding","position","overflow","textOverflow","whiteSpace","pathname","Modelrender","Unpreviewwardcarddetail","databool","statedata","document","getElementById","mode","bednumber","marginBottom","backgroundColor","format_bednumber","onOk","gridTemplateRows","gridRowGap","id","placeholder","marginRight","WardcardNote","_isMounted","editstate","AnnoceRawData","AnnoceDisplayData","inputContent","onInputChange","bind","queryAllAnnounce","parse","announceArray","event","target","announce","doc","newAnnounce","Date","editor","findIndex","splice","announcelist","list","editstatus","localTime","utc","toDate","deleteimg","ondeleteannounce","placement","detail","annData","sort","a","b","marginTop","onMouseUp","editlist","borderCollapse","AddNewannouce","canceledit","okeditlist","Bedinformation","tableselect","sendReturnSelect","selectkey","idkey","localtime","select","Selectswitch","parentCallback","weekdatformat","weekday","Month_format","getMonth","getDate","getDay","Unselect_tablestyle","borderLeftWidth","textAlign","borderStyle","borderWidth","borderColor","hbedcount","transoutcount","transincount","rtcount","nonrtcount","tpncount","yyyymmddformat","timestamp","getFullYear","formatmonth","Monthformat","yyyymmfirstweeksate","mmddformat","compareday","getTime","MG_VALUE","PROC_VALUE","Wardbedinformation","subselectdate","selectid","PickerDate","bedinfo","onChangeDate","datestring","apiData","callbackFunction","idnumber","trainDay","bTime","nTime","aTime","trans","RenderCell","pnamec","selectDateitem","filterdate","inType","transoutIncountperson","outType","transoutOutcountperson","transIn","transOut","transferListlayout","infolist","infoList","dateTime","i","Bedinfo","reverse","fontStyle","paddingLeft","showToday","disabledDate","current","startOf","allowClear","shape","icon","bedinfotitle","weekbedinfo","infoitem","Schedule_event_list","detailstate","items_interval","EditMode","selSchedule","Scheduledata","ID","caseinfo","querySchedule","queryALLSchedule","propsDate","stateDate","timeNowStr","toISOString","writter","PBASINGNINFO","PLOCSTART","getHours","getMinutes","scheduleData","ScheduleList","text","borderRadius","detaillogo","changestate","onChangeEditMode","EditButton","EditControl","listevent","onClickCancel","onClickEnter","Wardschedule","Wardinfoindex","growdata","Male_befor","y","min","max","FeMale_before","Male_after","FeMale_after","WardlifeChart","drawChart","svg_key","weightList","grewinfo","window","screen","availWidth","bornweeks","WEEK_BORN","borndays","DAY_BORN","BIRTHDAY","pregencyTimestamp","tick","Row","tickValues","d3","domain","range","x","yAxis","ticks","tickSize","tickPadding","tickFormat","d","xAxis","yRightAxis","svg","append","attr","call","datasource","rec_tim","id_key","Wardmonthafter","Month","Wardgrewchart","test_items_interval","Data","WeightList","testiteminterval","paddingRight","borderTopLeftRadius","borderTopRightRadius","SwitchTestItemInterval","Onchangetimeinterval","switch_monthy","Notice","noticeData","preTRID","queryPatientImportant","transinid","updateTime","disableEdit","tooltiptext","t","displayTime","fixData","remarkcell","Editor","TextArea","Input","renderEditButton","autoSize","Labviewitem","fixtitle","TimeR","Source","TimeRender","ListForTime","DataList","ORRESDT","ListForTimeAndTarget","forEach","split","QSPERegList","qspe","SettingValue","valueList","qspearray","SelectElement","special","DataArray","DataJson","Labviewlayout","parser","dummy_mg","dummy_pct","RESDGLU1","RESLAB02","RESLAB01","RESDBGAS","RESLAB0C","RESSECT","prePickerDate","preHID","preTRDT","TRDT","getLabData","TransinDate","MonthInterval","timestampInterval","selectMonthInterval","latestvalue","selected_parser","find","apply_condition","arrayLength","ORMM","CASEID","ORDSEQNO","RESDISP","selected_mapping","mappings","mapping","re","RegExp","regex_str","regex_flags","CONTENT","currentTimeStr","currentItemTimestamp","matchValue","updateLabviewIfNeed","currentIdx","ListEndData","RESDGLU1LIST","FiliterReg","RESLAB02LIST","RESLAB01LIST","RESDBGASLIST","RESSECT_MG_LIST","findLastestTargetValue","RESSECT_PROC_LIST","GLUFAST","WBC","RSV01","SEG","RSV14","LYMP","RSV15","HGB","RSV03","PLATELET","RSV09","NA","RSV13","K","CA","P","RSV17","ALB","RSV02","CRP","RSV32","PH","SS07","PCO2","SS06","BE","SS01","PO2","SS08","BUN","RSV05","CR","RSV06","ALT","RSV11","AST","RSV12","TBIL","RSV08","DBIL","RSV25","ALKP","TOTALCA","IRON","RSV26","TIBC","RSV27","FERRITIN","areainterval","nullvalue","TitleR","TitleRender","ORBGNDT","WardcardvitalsignChart","sourcedata","getCenterMonitor","selectType","axisTop","axisBot","circlrcolor","MAX","MIN","Upper","Lower","transformmargin","cal_svg_transform","time_now","time_array","time_axis_array","x_axis_time","time_array_reverse","time_axis_array_reverse","formatHour","n","xAxisBottom","remove","cal_svg_hight","formatBoxWidth","viewwidth","lower","upper","LimitBoxTimer","interFormat","TimeArray","boxTime","formatBox","boxwidth","drawshadow","BoxPlotData","dataAbps","dataAbpd","q1","Q1","q2","Q2","q3","Q3","q4","Q4","Xtime","selectAll","enter","Time","SBP","DBP","WardChart","pbStatus","changePb","decidePB","nbpd","CMvalue","vitalvalue","limitValue","flexDirection","lineHeight","colorshadow","nbps","nbpm","data2","data_2_circlrcolor","Wardinfousercheckbox","checkboxselect","selectstate","updateOnePatientTodo","selectchange","checked","textDecoration","Patientinfo","preCID","QENT","CID","patientDetail","transdata","patientDate","fixpatientDate","patientData","Wardinfouser","Visible","setVisible","scheduleList","SetScheduleList","todoList","SetTodoList","location","PLOC","now","todayBegin","ListWeight","DOCLIST","PDOCNEW","MainDoc","LiveDoc","MainNur","ICUMainDoc","maxHeight","minHeight","displayTimeStr","Bedview","simplemode","SelectHISID","HBEDApiGet","simple_style","gridGap","Unsimple_style","wardcarddetaillist","component","WardinfouserK","filterdata","switch_titile_string","onWardcardDisplay","checkedChildren","unCheckedChildren","defaultChecked","Historyview","MouseClick","allPatientDisplayData","allPatientUnset","allPatientSet","selectedRowsArray","hospitalindex","selectedFile","fileList","uploading","doctor","transOuttime","handleUpload","fileData","formData","FormData","file","res","filename","setedUser","transouttime","unsetUser","onChangeName","onChangeHisid","onClickSearch","record","resultD","url","URL","createObjectURL","Blob","link","createElement","href","setAttribute","appendChild","click","hospitalnumber","delete","dateString","Group","RangePicker","DatePicker","locale","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","disabled","searchNO","searchTime","fn","transintime","searchName","search","genderswitch","birweek","transage","transicutime","maindoc","EditStyle","onRemove","newFileList","slice","beforeUpload","showUploadList","handleDisplaySwitchChange","Searchbar","exportClick","deleteHistoryUser","columns","dataIndex","dataSource","onRow","onMouseEnter","MouseClickTable","onMouseLeave","Crosssectionvitalsignchart","change","prepickerdate","presource","preinterval","svg_id","PHID","PCID","optionvalue","pickerdate","endTimeStamp","start","end","formatTimer","nowDateForSeven","newDateForZero","formatPickerDate","QDVS","QOXY","HRNISLIST","RRNISLIST","SBPNISLIST","DBPNISLIST","BTNISLIST","Spo2NISLIST","pluse","breath","systolic","diastolic","BT","temperature","concen","FormatNISData","centermonitorApiDataGet","prehid","xAxisvalue","xAxisarray","formatxArray","xAxisbotvalue","formatbotaxis","xAxisbot","drawData","formatShift","Vitalsign","vital_days","visibleConflict","chackstate_one","chackstate_three","addNewWarningDateStr","addNewWarningHourStr","preHISID","PickerTime","nowDate","Phistnum","nowTimeStamp","Interval","formatvital_daysToInterval","gridarray","checknumber","onClickCheckgrid","End","intervalforhour","centervalueNull","vitaldays","centervalue","FilterList","filterData","Mid","centervaluetoNull","pickerTimer","top","left","onVitalCheck","bottom","Controlbar","display_Mode","item_array","scrollstate","sendData","itwm_array","sendDateData","parentDateCallback","scrollToAnchor","anchorName","anchorElement","scrollIntoView","checkedValues","onDateChange","bron","PBIRTHDT","bronDate","btn_style","unclick_style","display_style","displye_mode","right","background","boxShadow","zIndex","non_display_mode","check_area","check_text","btnlist","WEIGHT","WardState","DayWeight","btn","scrollpoint","endOf","alignContent","birthdays","localtoborndays","pregancyweeksanddays","newtime","oldtime","timestampdiff","daysdiff","open_display","displaylogo","IOpage","QDC","PreStatus","PreIntervalStatus","PreCID","PrePickerDate","RegQDC","CarloriesCal","intervalStatus","timer","interstatus","Result","Status","IntervalStatus","getAPI","prestatus","preinterstatus","precid","mapcell","listTimerFormat","inter","TimerList","hourInterval","filterList","filterListALL","gridNumber","cellsum","sum","cellRenderSum","CellRender","timerStruct","cellRender","stylechange","intervalstatus","QDCLIST","timearray","pickerTimeArray","formatData","caloriesCalonnam","nam","namstring","valueNumber","FormatFeedingList","FormatIVList","FormatUrineList","FormatOtherInList","FormatOtherOutList","lost","elementItem","Feeding","inp_val2","calories","IV","inp_val1","Urine","out_val2","Other","input_1","output_1","out_val1","OtherIn","OtherOut","formatQDCtoIO","EndTime","timerFormat","feed","sumin","arr1","arr2","arr3","sumlist","sumIn","UrinForUnit","datamap","urineforWeightAndHourCrossection","sumout","sumOut","sumInTotal","Outout","element1","element2","sumInAndOut","TitleCellIn","TitleCellOut","CrossectionIo","titlelab","NonlabviewtableCell","summary_str","select_parser","input","parsers","item_name","sample","lab","start_time","datetime","end_time","content","summerize","kv_pairs","summary","match_replacer","replacer","replace","caseId","hisId","datatime","result_kv_pairs","come","statusRender","statusFormat","canShowReport","ExamReportModal","showDetail","Nonlabviewtable","modalVisible","modalReport","ORDLIST","nonLabApiGet","storeProcedureTime","FormatList","StartTime","ORDLIST_Format","elemetnStatus","elementORBGNTime","ORBGNTM","ORDLISTFormat","nonlabcell","ORSPCN1","statis","ORHISTNO","ORDSEQCN","Nonlabviewlayout","RTtable","PreHID","PreTransInDate","GasListToCell","GasDataList","filterTimer","timeStamp","ORRESTM","decideStyle","PHValue","PCO2Value","PO2Value","HCO3Value","SS04","BEValue","O2SatValue","SS05","FiO2Value","SS03","GasCell","tempStyle","tempValue","isNaN","formatGasData","getGasAPI","PreTRDT","GasTitleCell","temp","GAS","PickerDateRange","RemarkModal","remarkValue","onOkClick","transinId","remarkId","createTime","rows","RTbreathetablecell","onCell","onEdit","newRemarkValue","setRemark","seachRemark","Mode","setting","Setting","onMouseMove","Mouse_move","Mouse_leave","Edit_state","chooseedit","RTbreathetable","createRTbreathetable","RTbreathe","QSPE","FilterReg","preST","preET","getQSPEApi","ST","ET","QSPEList","Prescriptionordertablecell","onMove","UDORDSEQ","checkStatus","SelectMode","UDENDDT","Name","PName","UDRPNAME","Unit","UDDOSAGE","UDDUNIT","UDFREQN","UDROUTE","UDBGNDT","on_Mouse","on_leave","Prescriptionordertable","titlecell","Prescriptionordertabletable","overflowY","Prescriptionorderlayout","classParser","InputMode","onChangeClass","handleChange","onChangeinputKey","parseClass","inputs","allResult","activeList","clusteredData","filteredData","SortDataList","createST","createET","regex","DataFormat","getGithub","getUDORDER0","Start","Option","Select","searchbar","ControlBarRender","Treatmentordertablecell","QD","ORFREQN","ORENDDT","Treatmentordertable","TRTMNT01","Treatmentordertablecelllist","Treatmentorderlayout","DateRangeMode","Search_bar","getTreatmentQ1","Notecell","updatetime","updatedoctor","updatetime_format","wordBreak","Note","noteData","queryNotice","propDate","TRANSID","notelist","infoObj","updatedictor","CrossectionSchedule","CrosssectionTodo","queryTodo","renderTodoItem","Crosssectionlayout","Cross_item","SelectInterval","callbackDateFunction","PickerTimeStamp","NIS_API_IO","Datetime","TimeStampPickerDate","display_item","Prescriptionorder","Treatmentorder","Inoutonchronic","Chronictablecelltooltip","preStartTimeStamp","loading","resultStr","parserName","inputBeginTime","parser_name","startTimeStamp","apiGet","tooltipelement","summaryParse","allContent","Cell","antIcon","spin","indicator","Chronictablecell","titleCell","objectElementCell","CellText","autoAdjustOverflow","overlayStyle","maxWidth","Tableonchronic","LabParse","SummaryParse","monthly","ApiPronider","chronic_state","fotmatTimerMonthly","preInterval","ApiGet","TimeInterval","grid","ressect","parsrList","arrayBiochemical","arrayBlood","arrayCultivate","arrayGAS","arrayGlu","arrayRadiation","arrayOther","element_ORPROCED","BioFind","Biochemical","BloFind","Blood","CulFind","Cultivate","GasFind","GluFind","RadFind","Radiation","arrayList","LabFormat","statestatus","title_list","cell_list","entTimeStamp","slectInt","TimerForList","filterTimerForDataList","fotmatTimerForTimer","DataForTimer","toolTipID","Chroniclab","select_interval","Chronicrttablecell","cellelement","RTListRender","ToolTipRender","rtlogo","Chronicrttable","prePickerdate","timerList","listFilter","formatDataList","table_content","Chronicrt","Chronicordertable","whiteBlackListParser","tpnParsers","excludeBlackListResult","UDGNAME_condition","UDRPNAME_condition","UDGNAME_re","UDGNAME_match","UDRPNAME_re","UDRPNAME_match","getUDORDER","changegridnumber","rawData","filteredRawData","selected_tpn_parser","found","name_regex_flags","selected_white_black_list_parser","Tablecell","formatWidth","elementStart","elementEnd","widthRate","clientWidth","formatStart","formatEnd","formatStartPosition","arraylist","shift","formatUDORDER0","ListData","formatString","changegridstyle","celltable","Orderonchronic","Chronicweighttable","QTPWERList","TimerFormat","WeightListFormat","elementTime","elementValue","Value","sortWeight","elementWidthList","time1","elementWidth","time2","FormatEndTimeStamp","datafilter","timeString","datafilterTime","widthArray","timeString2","weightRectRender","render","paddingTop","Weightonchronic","Vitalxaxis","monthformat","select_date","select_time_format","nowtime","Start_time","intervaldays","xaxis","formatday","Vitalxaxisbot","select_date_zero","Vitalonchronic","check_state_one","check_state_three","check_state_oneweek","check_state_twoweek","statussource","sourcehandleChange","onClickCheckgrid_one","onClickCheckgrid_three","onClickCheckgrid_oneweek","onClickCheckgrid_twoweek","formatPickerTimer","Interval_grid","Interval_grid_box","Chroniclelayout","statuschange","onChangeCross","onSelectchange","button","filterlogo","Flootsheetio","itemNumber","dataJson","Title","timeObjectString","cell","groupfirstarray","compare","arrList","comparevalue","filterarray","FirstArray","SecondArray","ThirdArray","FourthArray","line","pos","formatQDC","FlootSheetFirstAreaData","FlootSheetSecondAreaData","FlootSheetThirdAreaData","FlootSheetFourthAreaData","stringElement","groupelement","Firstdata","timeForList","elementList","valueSum","cellMap","Secondedata","Thirddata","formatRV","RV","RVList","FourdataCellRender","datajson","FourthDataCell","Flowsheetlayout","ApiData","DateTime","splist","specialListRender","Examchart","lineChart","sT","endT","fixLineChart","div","curve","lines","on","transition","duration","html","pageX","pageY","lineCharttitle","borderBottom","wordWrap","Labview","Selectus","SelectStatus","IRParse","titleSearch","parentTitleCallback","fixLineChartData","getAttribute","showDate","showModel","charttableview","Object","keys","itemValue","flex","LabDataList","SelectList","SelectTitlefilter","selectdata","SelectTitleRender","ExamLab","justifycontent","Examnonlabviewtable","resultKey","StateMode","ordlist","pickerdaterange","changeState","status_report","ORDCLNM","tempA","tempTimeA","tempB","listforstatus","selectedClass","ORDATE","ORTIME","Nonlabview","ClassMode","Inputvaluesearch","onChangeState","Examreport","selectTitle","subtract","callbackTitleFunction","PickerDateRangeChange","vallofnull","DateRange","selectData","st_timestamp","et_timestamp","CellData","Band","Seq","Lym","Hb","Hct","RSV04","Plt","Na","Cl","CaTotal","Cr","Alt","TBil","DBil","rGGT","RSV19","Alkp","Alb","Iron","RSV28","FeSat","LDH","RSV10","RSV9","ck","RSV18","ckMB","Troponinl","RSV30","PT","APTT","INR","pCO2","pO2","HCO3","O2Sat","FiO2","SS11","SS12","SS13","SS14","CaFree","SS15","Bun","SS16","SS17","GluBeside","GluLab","RSV16","TCB","MicroBil","elementOne","elementTwo","Seg","APIUpdate","SelectDataList","datePick","momentDate","selectvalue","Orderview","apidata","udata","tdata","dataRange","Noteview","display_data","contentdisplay","ADMDISP","ADMLIST","DISLIST","DISDISP","DTAROTQ4","DTASOAPQ","PCASELIST","ERDISP","PRGTXQRY","PRGTXQRYDIS","CPSLIST","CPSDISP","QPNOT","QPNOTDIS","OPSORAQ1","OPSORAQ2","SelectClass","NoteTime","Content","ADISTNO","ADICASE","SEQ","OPABGNDT","OPATIMES","times","ttype","LIVEPLOC","PLOCDT","substr","transdt","select_option","row","ADMDATA","textType","textObj","DTSOAPTY","DTSOAPSQ","DTSOAPTX","newObj","idx","textResult","newList","dataFilter","PRGTYPE","PRGTX","cre_nam","pro_not","cellRander","object","SelectADMDISP","ADIDATE","DCASENO","SelectDISDISP","DDATEIN","DDATEOUT","DPT","DTPDEPT","DTPDATE","SelectDTASOAPQ","DTPTIME","SelectERDISP","PDISDT","PRGDT","PRGTM","v","DT","TN","SelectPRGTXQRYDIS","CPSCASE","CPSOSEQ","CPSHIST","SelectCPSDISP","CPSENTDT","CPSENTTM","grouparray","SelectQPNOTDIS","OPACOD1","OPAMANNM","SelectOPSORAQ1","control","NotecontrolBar","renderContentArray","listRender","switchListRender","RTview","Nurtionfeedingcell","Moduledisplay","Nurtionfeedingorder","getAPIFeedingData","getTreatmentOrderFilter","titleCellRender","DataCellRender","Nurtiontpncell","TPNListcellRender","TPNSubDatacellRender","TPNDATA","AA","Glu","Ca","Mg","TPNSubDataMap","RemarkData","Nurtiontpnorder","tpndata","inputEndTime","UDWORD","getAPITPNData","tpnList","titilecell","Watervaluechart","rowdata","watervalueData","shiftDays","formatShiftDays","rectwidth","svgrect","nulldata","car","Caloriessum","model","ModalRender","Nurtionview","showTime","FeedinfData","IVData","OtherData","sumcar","Calories","shiftTimer","TimerArray","formatTimeArray","watervalueDataList","filterFeedind","filterIV","filterOther","feedingSum","SumData2","IVSum","SumData","OtherSum","caseiddays","GrowthCurve","GrowthCurveControl","GrowthCurveControlBar","WaterValueControl","WaterValueControlBar","feeddata","waterRender","WaterValueRender","Nurtionfeeding","Infectionlabtable","Datalist","Render","FilterData","CellRander","WBCList","BandList","SegList","LymList","PCTList","CRPList","WBCRender","BandRender","SegRender","LymRender","PCTRender","CRPRender","WBCcell","Bandcell","Segcell","Lymcell","PCTcell","CRPcell","switch_state","userdata","Infectionlab","Infectionview","intervalselect","hrdatasource","rrdatasource","spo2datasource","abpdatasource","nbpdatasource","btdatasource","LabData","LabData2","Bedsidecard","remarkContent","queryPatientRemark","TODO_DONE","TODO_UNFINISH","Scheduletodo","displayMode","todolist","onItemCheck","itemToUpdate","queryPatientTodo","todolist_data","finish_data","finish_value","unfinish_data","finish_checkbox","unfinish_checkbox","onClickunfisish","onClickfinish","Calendercell","clickindex","sendcallback","newDate","clickdate","today","stateswitch","onClickCheck","weekdateformatcalender","calenderlogo","pingcheck","calenderwhitelogo","pingwhite","disableday","scheduleArray","eventArray","disabledayinfo","Calender","calendermode","Clickdays","ClickDate","displayinfo","scheduleRawData","startTimestamp","endTimestamp","noticeRawData","getStartEndTime","monthfirstweekday","firstCellBegin","startTimestampStr","endTimestampStr","itemList","refactoredList","itemTimeStr","foundItemIndex","newItem","newEvent","writer","timestampdate","onClickdays","dateStr","dataOfDayIndex","weekcontext","dataOfDay","getDataFromTimestamp","weeknumber","firstMonthWeekDay","rowIndex","noticeOfDay","getNoticeFromTimestamp","onCancelClick","calendermonthgroup","monthfirstweekdate","weekmonthmode","ShowModule","weekmode","setgroup","MonthPicker","SelectDatepickertype","modechange","Scheduleview","dateformat","exporttime","Patientviewlayout","TYPE","REMARK","tabstring","HBEDNUMBER","HBEDLIST","PBASINFO","matadata","nis_status_shange","activkey","PLOCLIST","PLOCTR","BedList","BEDNUMBER","USERDATA","ploc","PLOCTM","transindt","qmnc","bornWeeks","bornDays","wetghtList","TabPane","Tabs","OptionSelectRender","defaultActiveKey","tabPosition","tab","callback","confirm","Modal","Powersetting","adduser","userList","power","powerName","radioValue","pwdRadio","inputUsername","inputPassword","inputName","inputDoctorid","radioOnChange","nameChange","addUserdata","adduserhandleChange","queryUserdata","inputuserName","password","username","doctorid","account","roleString","set_State","okText","okType","cancelText","showDeleteConfirm","userData","powerString","myNewArray","concat","apply","Systemlogtable","loginlog_table","loginlogList","managerName","apilog_table","apilogList","months","j","optionValue","pagination","page","pageSize","getPages","Systemlog","totalSpace","usingSpace","percent","option","total","unuse","queryLoginLogdata","queryApiLogdata","pages","showInfo","Systemcontrol","bollogin","å","Layoutframe","clear","UsrName","url_path","fontweight","fontsize","routes","route","onClickLogout","Loginview","setRedirect","user","setItem","redirect","permission","statusstring","renderRedirect","login","querySelector","addEventListener","keyCode","blur","focus","flexWrap","App","documentElement","zhTW","exact","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b4c36d79.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/edit2.8fc62700.svg\";","module.exports = __webpack_public_path__ + \"static/media/filter.43b66bba.svg\";","module.exports = __webpack_public_path__ + \"static/media/file1.6f94c891.svg\";","module.exports = __webpack_public_path__ + \"static/media/file2.2b64f736.svg\";","module.exports = __webpack_public_path__ + \"static/media/Wardview.6c75f5a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/Historyview.0467b7bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Control.aa66ed95.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.870c0c52.svg\";","module.exports = __webpack_public_path__ + \"static/media/dragdown.0cdfe02a.svg\";","module.exports = __webpack_public_path__ + \"static/media/RT.41b174eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/calender.da91395a.svg\";","module.exports = __webpack_public_path__ + \"static/media/calenderwhite.d66bfce7.svg\";","module.exports = __webpack_public_path__ + \"static/media/ping.c2141b87.svg\";","module.exports = __webpack_public_path__ + \"static/media/pingwhite.0f1e8cfb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Edit.a7d4c3ff.svg\";","import React, { Component } from 'react';\n\nclass Homepage extends Component {\n    render() {\n        return (\n            <div></div>\n        );\n    }\n}\n\nexport default Homepage","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport wardviewlogo from '../Image/svg/Wardview.svg'\nimport historylogo from '../Image/svg/Historyview.svg'\nimport controllogo from '../Image/svg/Control.svg'\nimport './Sidermenu.scss';\n\n\nclass Sidermenu extends Component {\n\n    state = {\n        powerLogin: Number(sessionStorage.getItem('role'))\n    }\n\n    componentDidMount() {\n        const powerLogins = Number(sessionStorage.getItem('role'))\n        this.setState({ powerLogin: powerLogins })\n    }\n\n    Selectkeynumber(key) {\n\n        switch (key) {\n            case '/nicu':\n                return 0;\n            case '/nicu/history':\n                return 1;\n            case '/nicu/system':\n                return 2;\n            default:\n                if (key.match('patient') != null) {\n                    return 0;\n                }\n                if (key.match('ward') != null) {\n                    return 0;\n                }\n                return '';\n        }\n    }\n\n    select_hover(value) {\n        const { path } = this.props\n        const keynumber = this.Selectkeynumber(path)\n        if (keynumber === value) {\n            return true\n        }\n        return false\n    }\n    render() {\n        // const linkstate = {\n        //     backgroundColor: \"rgba(59, 151, 225, 1)\",\n        //     display: 'flex',\n        //     paddingLeft: '15px',\n        //     paddingRight: '15px',\n        //     height: \"40px\"\n        // }\n        // const dislinkstate = {\n        //     backgroundColor: \"rgba(0, 0, 0, 0)\",\n        //     display: 'flex',\n        //     paddingLeft: '15px',\n        //     paddingRight: '15px',\n        //     height: \"40px\"\n        // }\n        // const linkfont = { color: \"rgba(25, 70,90, 1)\", fontweight: \"500px\", fontsize: \"18px\", margin: \"0px 10px 0px 2px\" }\n        // const dislinkfont = { color: \"rgba(46, 100, 164, 1)\", fontweight: \"500px\", fontsize: \"18px\", margin: \"0px 10px 0px 2px\" }\n        const rule = this.state.powerLogin\n        console.log(rule)\n        // const rule = 5\n        console.log(rule == 2)\n        //sso custom => custom\n        return (\n            <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"20px\", height: '100%' }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto auto\", gridColumnGap: \"10px\" }}>\n                    <Link to=\"/nicu/ward/wardindex\" class={this.select_hover(0) ? \"linkstate\" : \"dislinkstate\"} style={{ display: rule == 2 ? \"none\" : \"flex\" }}>\n                        <img src={wardviewlogo} alt='wardviewlogo'></img>\n                        <centerstyle>\n                            <t2 class={this.select_hover(0) ? \"linkfont\" : \"dislinkfont\"}>住院病人資訊</t2>\n                        </centerstyle>\n                    </Link>\n                    <Link to=\"/nicu/history\" class={this.select_hover(1) ? \"linkstate\" : \"dislinkstate\"} style={{ display: rule == 1 ? \"flex\" : \"none\" }}>\n                        <img src={historylogo} alt='historyviewlogo'></img>\n                        <centerstyle>\n                            <t2 class={this.select_hover(1) ? \"linkfont\" : \"dislinkfont\"} >歷史病歷管理</t2>\n                        </centerstyle>\n                    </Link>\n                    <Link to='/nicu/system' class={this.select_hover(2) ? \"linkstate\" : \"dislinkstate\"} style={{ display: rule == 2 ? \"flex\" : \"none\" }}>\n                        <img src={controllogo} alt='systemviewlogo'></img>\n                        <centerstyle>\n                            <t2 class={this.select_hover(2) ? \"linkfont\" : \"dislinkfont\"}>系統設定</t2>\n                        </centerstyle>\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Sidermenu\n","import X2JS from \"x2js\"\nimport moment from 'moment';\n\n\nexport function CalculateAge(BornStatus) {\n    const startDate = moment(BornStatus.date);\n    const endDate = moment();\n    const minus = endDate.diff(startDate, 'days');\n    // console.log(BornStatus.date)\n    // console.log(BornStatus.week, BornStatus.day)\n    // console.log(Math.floor(BornStatus.week + (BornStatus.day + minus) / 7))\n    if (BornStatus.week === undefined || BornStatus.day === undefined || BornStatus.date === undefined) {\n        return \"--\"\n    }\n    if (BornStatus.week < 37) {\n        const week = Math.floor(BornStatus.week + (BornStatus.day + minus) / 7);\n        const day = Math.floor((BornStatus.day + minus) % 7);\n        // console.log(BornStatus.day, minus)\n        return week < 40 ? `${week}週+${day}天` : day > 30 ? `矯齡${Math.floor(day / 30)}月${Math.floor(day % 30)}天` : `矯齡${day}天大`\n    }\n    const month = Math.floor((minus) / 30);\n    const day = Math.floor(minus % 30);\n    return month > 0 ? `${month}月+${day}天` : `${day}天大`\n}\n\n\nexport function statecolor(state) {\n    if (state === 'HR') {\n        return \"rgb(100,140,60)\"\n    }\n    if (state === 'BP') {\n        return \"rgb(193,37,40) \"\n    }\n\n    if (state === 'ABP') {\n        return \"#C12528\"\n    }\n    if (state === 'NBP') {\n        return \"#C12528\"\n    }\n    if (state === 'SpO2') {\n        return \"rgb(60,105,160) \"\n    }\n    if (state === 'BT') {\n        return \"rgb(127,61,181)\"\n    }\n    if (state === 'RR') {\n        return \"rgb(200,110,40) \"\n    }\n    return null\n}\n\n//parse flag\nexport function Respiratorswitch(Respirator) {\n    if (Respirator === '呼(非侵入)') {\n        return '呼(非侵入)'\n    }\n    if (Respirator === '呼(侵入)') {\n        return '呼吸'\n    }\n    return '呼吸器'\n}\n\nexport function wardstatestringformat(item) {\n    //console.log(item);\n    switch (item.item) {\n        case \"Respirator\":\n            return Respiratorswitch(item.data)\n        case \"TPN\":\n            return \"TPN\"\n        case \"NPO\":\n            return \"NPO\"\n        case \"HD\":\n            return \"HD\"\n        case \"Abx\":\n            return \"Abx\"\n        case \"CVC\":\n            return \"CVC\"\n        case \"Xanth\":\n            return \"Xanth\"\n        case \"照光\":\n            return \"照光\"\n        case \"DRN\":\n            return \"DRN\"\n        default:\n            return item\n    }\n}\n\nexport function Labwarningvalue(value, title) {\n    if (title === \"Glucose\") {\n        if (value > 120 || value < 50) {\n            return false\n        }\n    }\n    if (title === \"WBC\") {\n        if (value < 10000 || value > 30000) {\n            return false\n        }\n    }\n    if (title === \"Hgb\") {\n        if (value < 10 || value > 18) {\n            return false\n        }\n    }\n    if (title === \"Platelet\") {\n        if (value < 100000 || value > 450000) {\n            return false\n        }\n    }\n    if (title === \"Na+\") {\n        if (value < 135 || value > 145) {\n            return false\n        }\n    }\n    if (title === \"K+\") {\n        if (value < 3.5 || value > 5.5) {\n            return false\n        }\n    }\n    if (title === \"Ca2+\") {\n        if (value < 0.8 || value > 1.4) {\n            return false\n        }\n    }\n    if (title === \"P\") {\n        if (value < 4.5 || value > 6.0) {\n            return false\n        }\n    }\n    if (title === \"Mg2+\") {\n        if (value < -1.5 || value > 4.5) {\n            return false\n        }\n    }\n    if (title === \"Alb\") {\n        if (value > 3) {\n            return false\n        }\n    }\n    if (title === \"CRP\") {\n        if (value < 1) {\n            return false\n        }\n    }\n    if (title === \"Procalcitionin\") {\n        if (value < 0.5) {\n            return false\n        }\n    }\n    if (title === \"pH\") {\n        if (value < 7.25 || value > 7.4) {\n            return false\n        }\n    }\n    if (title === \"PCO2\") {\n        if (value < 40 || value > 60) {\n            return false\n        }\n    }\n    if (title === \"BE\") {\n        if (value < -7 || value > 6) {\n            return false\n        }\n    }\n    if (title === \"PO2\") {\n        if (value < 40 || value > 90) {\n            return false\n        }\n    }\n    if (title === \"BUN\") {\n        if (value < 1) {\n            return false\n        }\n    }\n    if (title === \"Cr\") {\n        if (value < 1) {\n            return false\n        }\n    }\n    if (title === \"ALT\") {\n        if (value < 45) {\n            return false\n        }\n    }\n    if (title === \"AST\") {\n        if (value < 45) {\n            return false\n        }\n    }\n    if (title === \"TBil\") {\n        if (value < 2) {\n            return false\n        }\n    }\n    if (title === \"DBil\") {\n        if (value < 0.5) {\n            return false\n        }\n    }\n    if (title === \"ALKP\") {\n        if (value < 450) {\n            return false\n        }\n    }\n    if (title === \"Total Ca\") {\n        if (value < 8 || value > 12) {\n            return false\n        }\n    }\n    if (title === \"FeSat\") {\n        if (value < 0.15) {\n            return false\n        }\n    }\n    return true\n}\n\n\nexport function getRandom(number) {\n    return Math.floor(Math.random() * 5) + number;\n};\n\nexport function getRandomfornumber(number) {\n    return Math.floor(Math.random() * number);\n};\n\nexport function arraychange(list) {\n    var myNewArray = []\n    for (var i = 0; i < list.length; ++i) {\n        for (var j = 0; j < list[i].length; ++j) {\n            myNewArray.push(list[i][j]);\n        }\n    }\n    return myNewArray\n}\n\nexport function WeightList(weightlist) {\n    if (weightlist === undefined || weightlist === null) {\n        return \"--\"\n    }\n    const findata = weightlist.filter(function (value, index) {\n        return value.type === \"TW\"\n    })\n    if (findata.length === 0) {\n        return 0\n    }\n    else return findata\n}\n\nexport function BornWeight(weightlist, birthday) {\n    console.log(weightlist)\n    if (weightlist === undefined || weightlist === null) {\n        return \"--\"\n    }\n    if (Array.isArray(weightlist)) {\n        const findata = weightlist.filter(function (value, index) {\n            return value.rec_dat === birthday && value.type === \"TW\"\n        })\n        if (findata.length === 0) {\n            return 0\n        }\n        else return parseInt(Number(findata[0].value2) * 1000)\n    }\n    else {\n        return parseInt(Number(weightlist.value2) * 1000)\n    }\n}\n\nexport function NewestWeight(weightlist) {\n    if (weightlist === undefined) {\n        return \"--\"\n    }\n    if (weightlist.length === 0) {\n        return 0\n    }\n    if (Array.isArray(weightlist)) {\n        const findata = weightlist.filter(function (value, index) {\n            return value.type === \"TW\"\n        })\n        if (findata.length === 0) {\n            return \"--\"\n        }\n        return parseInt(Number(findata[0].value2) * 1000)\n    }\n    else {\n        return parseInt(Number(weightlist.value2) * 1000)\n    }\n\n}\n\nexport function XM2JSON(data) {\n    const xm2 = new X2JS()\n    if (data === undefined) {\n        return []\n    }\n    const status = xm2.xml2js(data).outmsg.ret\n    if (Number(status) === 0) {\n        const parsedata = xm2.xml2js(data).outmsg.resconts.rescont\n        if (!Array.isArray(parsedata)) {\n            return [parsedata]\n        }\n        return parsedata\n    }\n    return []\n}\n\nexport function QMNCXM2JSON(data) {\n    const xm2 = new X2JS()\n    if (data === undefined) {\n        return []\n    }\n    const status = xm2.xml2js(data).outmsg.ret\n    if (Number(status) === 0) {\n        const parsedata = xm2.xml2js(data).outmsg.resconts.rescont\n        console.log(parsedata)\n        return parsedata\n    }\n    return []\n}\n\nexport function Doc(DocList, type) {\n    if (DocList === undefined || DocList === null || DocList === \"\") {\n        return \"\"\n    }\n    const Main = DocList.filter(function (element, index) {\n        return element.PDTYPE === type\n    })\n    if (Main.length === 0) {\n        return \"\"\n    }\n    return Main[0].PDDOCNMC.toString().trim()\n}\n\nexport function selectweight(List, date) {\n    if (List === undefined || List === null) {\n        return \"--\"\n    }\n    var array = []\n    for (let index = 0; index < List.length; index++) {\n        const element = List[index];\n        if (moment(element.rec_dat, 'YYYYMMDD').valueOf() < date) {\n            array.push(element)\n        }\n    }\n    if (array.length === 0) {\n        return 0\n    }\n    return Number(array[0].value2) * 1000\n}\n\n\n","import axios from 'axios';\n\n\n// axios.defaults.baseURL = \"http://10.97.241.48/deploy/\";\n// axios.defaults.baseURL = \"http://172.24.7.33/deploy/\";\naxios.defaults.baseURL = \"http://127.0.0.1:8888/deploy/\";\n\n//----------------------------------------------\n// announcement-controller 病房公告(Ward View)\n//----------------------------------------------\n//建立公告資訊\n/*\nexport function createAnnounce(context, editor, transinno, time) {\n  const body = {\n    context: context,\n    editor: editor,\n    transinno: transinno,\n    time: time\n  }\n  return axios.post(\"Announcement/createAnnouncement\", body);\n}*/\n\n//Create bweek bday bweight\nexport function createPatientInfo(hisid, pname, psex, bweight, bweek, bday) {\n  const body = {\n    \"bday\": bday,\n    \"bweek\": bweek,\n    \"bweight\": bweight,\n    \"hisid\": hisid,\n    \"pname\": pname,\n    \"psex\": psex\n  }\n  return axios.post(\"patientinfo/createPatientInfo\", body)\n}\n\nexport function getPersionalStatus(hisid) {\n  return axios.get(\"patientinfo/getOnePatientInfo/\" + hisid);\n}\n\nexport function createAnnounce(announceArray) {\n  return axios.post(\"Announcement/createAnnouncement\", announceArray);\n}\n\n//刪除某天公告資訊\nexport function deleteAnnounce(transinno, dateTime) {\n  return axios.delete(\"Announcement/delannouncement/\" + transinno + \"/\" + dateTime);\n}\n\n//取得全部資訊\nexport function getAllAnnounce() {\n  return axios.get(\"Announcement/getAllannounce\");\n}\n\n//取得某位病人某天資訊\nexport function getOneAnnounce(transinno, dateTime) {\n  return axios.get(\"Announcement/getOneannouncement/\" + transinno + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// export/import-controller 匯入匯出\n//----------------------------------------------\n//匯出\nexport function exportJson(transinno) {\n  return axios.get(\"exportJson/\" + transinno);\n}\n\n//匯入\nexport function importJson(filename) {\n  return axios.get(\"importJson/\" + filename);\n}\n\n//下載檔案\nexport function downloadFile(filename) {\n  return axios.get(\"downloadFile/\" + filename);\n}\n\n//上傳檔案\nconst config = { headers: { 'Content-Type': 'multipart/form-data' } }\nexport function uploadFile(fileData) {\n  return axios.post(\"uploadFile\", fileData, config);\n}\n//----------------------------------------------\n// login-controller 登入與權限設定\n//----------------------------------------------\n//刪除帳號\nexport function deleteUser(name, role, username) {\n  return axios.delete(\"delUser/\" + name + \"/\" + role + \"/\" + username);\n}\n\n//查詢某帳號權限：1->read only 2->general user 3->general manager 4->system manager 5->super user\nexport function getAuth(username) {\n  return axios.get(\"getAuth/\" + username);\n}\n\n//取得系統空間\nexport function getSpace() {\n  return axios.get(\"getSpace\");\n}\n\n//登入\nexport function login(username, password) {\n  const body = {\n    username: username,\n    password: password\n  }\n  return axios.post(\"login\", body);\n}\n\nexport function getSSOLogin(username, password) {\n  return axios.get(\"LoginInSSO/\" + username + \"/\" + password);\n}\n\n//新增帳號與權限\nexport function register(name, password, role, username, doctorid) {\n  const body = {\n    name: name,\n    password: password,\n    role: role,\n    username: username,\n    doctorid: doctorid\n  }\n  return axios.post(\"register\", body);\n}\n\n//取得全部資訊\nexport function getAlluser() {\n  return axios.get(\"getAlluser\")\n}\n\n//角色、姓名搜尋其內容\nexport function searchUser(name, role) {\n  return axios.get(\"searchUser/\" + name + \"/\" + role);\n}\n\n//----------------------------------------------\n// log-controller 顯示Log日誌\n//----------------------------------------------\n\n//Show login log(根據起始時間查詢成功登入記錄)(time格式為yyyy-MM-ddTHH:mm:ss)\nexport function getLoginlog(startTime, endTime) {\n  return axios.get(\"getLoginlog/\" + startTime + \"/\" + endTime);\n}\n\n//Show API access log (date格式為yyyy-MM-dd)\nexport function getApilog(Time) {\n  return axios.get(\"getApilog/\" + Time)\n}\n\n//Show Debug log (date格式為yyyy-MM-dd)\nexport function getDebuglog(Time) {\n  return axios.get(\"getDebuglog/\" + Time)\n}\n\n//----------------------------------------------\n// breath-controller 呼吸RT\n//----------------------------------------------\n//createBreath\nexport function createBreath(editTime, hisid, model, note, setting) {\n  const body = {\n    editTime: editTime,\n    hisid: hisid,\n    model: model,\n    note: note,\n    setting: setting\n  }\n  return axios.post(\"breath/createBreath\", body);\n}\n\n//getBreath\nexport function getAllBreath() {\n  return axios.get(\"breath/getAllbreath\");\n}\n\n//updateNote\nexport function updateNote(editTime, hisid, model, note, setting) {\n  const body = {\n    editTime: editTime,\n    hisid: hisid,\n    model: model,\n    note: note,\n    setting: setting\n  }\n  return axios.put(\"breath/updatebnote/\" + editTime, body);\n}\n\n//----------------------------------------------\n// exam-cbc-controller Exam CBC Controller\n//----------------------------------------------\n//寫入CBC資訊\nexport function createExamCbc(band, hb, hct, hisid, lym, plt, seg, updateTime, wbc) {\n  const body = {\n    band: band,\n    hb: hb,\n    hct: hct,\n    hisid: hisid,\n    lym: lym,\n    plt: plt,\n    seg: seg,\n    updateTime: updateTime,\n    wbc: wbc\n  }\n  return axios.post(\"examcbc/createexamcbc\", body);\n}\n\n//取得全部資訊\nexport function getAllExamCbc() {\n  return axios.get(\"examcbc/getAllexamcbc\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamCbcOfPatient(hisid, dateTime) {\n  return axios.get(\"examcbc/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-cbc-two-controller Exam CBC Two Controller\n//----------------------------------------------\n//寫入CBC資訊\nexport function createExamCbcTwo(band, crp, hisid, lym, ptc, seg, updateTime, wbc) {\n  const body = {\n    band: band,\n    crp: crp,\n    hisid: hisid,\n    lym: lym,\n    ptc: ptc,\n    seg: seg,\n    updateTime: updateTime,\n    wbc: wbc\n  }\n  return axios.post(\"examcbctwo/createexamcbctwo\", body);\n}\n\n//取得全部資訊\nexport function getAllExamCbcTwo() {\n  return axios.get(\"examcbctwo/getAllexamcbctwo\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamCbcTwoOfPatient(hisid, dateTime) {\n  return axios.get(\"examcbctwo/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-cruor-controller Exam Cruor Controller\n//----------------------------------------------\n//createExamCruor\nexport function createExamCruor(apiT, hisid, inr, pt, updateTime) {\n  const body = {\n    apiT: apiT,\n    hisid: hisid,\n    inr: inr,\n    pt: pt,\n    updateTime: updateTime\n  }\n  return axios.post(\"examcruor/createexamcruor\", body);\n}\n\n//getExamCruor\nexport function getAllExamCruor() {\n  return axios.get(\"examcruor/getAllexamcruor\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamCruorOfPatient(hisid, dateTime) {\n  return axios.get(\"examcruor/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-electrolyte-controller Exam Electrolyte Controller\n//----------------------------------------------\n//createExamEletrolyte\nexport function createExamElectrolyte(bun, caFree, caTotal, caseid, cl, cr, hisid, k, mg, na, p, updateTime) {\n  const body = {\n    bun: bun,\n    caFree: caFree,\n    caTotal: caTotal,\n    caseid: caseid,\n    cl: cl,\n    cr: cr,\n    hisid: hisid,\n    k: k,\n    mg: mg,\n    na: na,\n    p: p,\n    updateTime: updateTime\n  }\n  return axios.post(\"examelectrolyte/createexamelectrolyte\", body);\n}\n\n//getExamElectrolyte\nexport function getAllExamElectrolyte() {\n  return axios.get(\"examelectrolyte/getAllexamelectrolyte\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamElectrolyteOfPatient(hisid, dateTime) {\n  return axios.get(\"examcruor/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-gas-addi-controller Exam GAS Addi Controller\n//----------------------------------------------\n//createExamGasAddi\nexport function createExamGasAddi(bun, caFree, cr, hb, hct, hisid, k, na, updateTime) {\n  const body = {\n    bun: bun,\n    caFree: caFree,\n    cr: cr,\n    hb: hb,\n    hct: hct,\n    hisid: hisid,\n    k: k,\n    na: na,\n    updateTime: updateTime\n  }\n  return axios.post(\"examgasaddi/createexamgasaddi\", body);\n}\n\n//getExamGasAddi\nexport function getAllExamGasAddi() {\n  return axios.get(\"examgasaddi/getAllexamgasaddi\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamGasAddiOfPatient(hisid, dateTime) {\n  return axios.get(\"examgasaddi/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-gas-controller Exam GAS Controller\n//----------------------------------------------\n//createExamGas\nexport function createExamGas(be, fiO2, hco3, hisid, o2Sat, pco2, ph, po2, sample, updateTime) {\n  const body = {\n    be: be,\n    fiO2: fiO2,\n    hco3: hco3,\n    hisid: hisid,\n    o2Sat: o2Sat,\n    pco2: pco2,\n    ph: ph,\n    po2: po2,\n    sample: sample,\n    updateTime: updateTime\n  }\n  return axios.post(\"examgas/createexamgas\", body);\n}\n\n//getExamGas\nexport function getAllExamGas() {\n  return axios.get(\"examgas/getAllexamgas\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamGasOfPatient(hisid, dateTime) {\n  return axios.get(\"examgas/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-glu-controller Exam Glu Controller\n//----------------------------------------------\n//createExamGlu\nexport function createExamGlu(gluBedside, gluLab, hisid, updateTime) {\n  const body = {\n    gluBedside: gluBedside,\n    gluLab: gluLab,\n    hisid: hisid,\n    updateTime: updateTime\n  }\n  return axios.post(\"examglu/createexamglu\", body);\n}\n\n//getExamGlu\nexport function getAllExamGlu() {\n  return axios.get(\"examglu/getAllexamglu\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamGluOfPatient(hisid, dateTime) {\n  return axios.get(\"examglu/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-heart-controller Exam Heart Controller\n//----------------------------------------------\n//createExamHeart\nexport function createExamHeart(bnp, caseid, ck, ckMB, hisid, tropoin, updateTime) {\n  const body = {\n    bnp: bnp,\n    caseid: caseid,\n    ck: ck,\n    ckMB: ckMB,\n    hisid: hisid,\n    tropoin: tropoin,\n    updateTime: updateTime\n  }\n  return axios.post(\"examheart/createexamheart\", body);\n}\n\n//getExamGlu\nexport function getAllExamHeart() {\n  return axios.get(\"examheart/getAllexamheart\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamHeartOfPatient(hisid, dateTime) {\n  return axios.get(\"examheart/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-jaundice-controller Exam Jaundice Controller\n//----------------------------------------------\n//createExamJaundice\nexport function createExamJaundice(dbil, hisid, microBil, tbil, tcb, updateTime) {\n  const body = {\n    dbil: dbil,\n    hisid: hisid,\n    microBil: microBil,\n    tbil: tbil,\n    tcb: tcb,\n    updateTime: updateTime\n  }\n  return axios.post(\"examjaundice/createexamjaundice\", body);\n}\n\n//getExamJaundice\nexport function getAllExamJaundice() {\n  return axios.get(\"examjaundice/getAllexamjaundice\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamJaundiceOfPatient(hisid, dateTime) {\n  return axios.get(\"examjaundice/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-liver-controller Exam Liver Controller\n//----------------------------------------------\n//createExamLiver\nexport function createExamLiver(alKp, alb, alt, ast, dbil, hisid, rggt, tbil, updateTime) {\n  const body = {\n    alKp: alKp,\n    alb: alb,\n    alt: alt,\n    ast: ast,\n    dbil: dbil,\n    hisid: hisid,\n    rggt: rggt,\n    tbil: tbil,\n    updateTime: updateTime\n  }\n  return axios.post(\"examliver/createexamliver\", body);\n}\n\n//getExamLiver\nexport function getAllExamLiver() {\n  return axios.get(\"examliver/getAllexamliver\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamLiverOfPatient(hisid, dateTime) {\n  return axios.get(\"examliver/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-premature-baby-controller Exam Premature Baby Controller\n//----------------------------------------------\n//createExamPrematureBaby\nexport function createExamPrematureBaby(alkp, feSat, hisid, iron, ldh, tibc, updateTime) {\n  const body = {\n    alkp: alkp,\n    feSat: feSat,\n    hisid: hisid,\n    iron: iron,\n    ldh: ldh,\n    tibc: tibc,\n    updateTime: updateTime\n  }\n  return axios.post(\"examprematurebaby/createexamprematurebaby\", body);\n}\n\n//getExamPrematureBaby\nexport function getAllExamPrematureBaby() {\n  return axios.get(\"examprematurebaby/getAllexamprematurebaby\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamPrematureBabyOfPatient(hisid, dateTime) {\n  return axios.get(\"examprematurebaby/getOnepatient\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-unstructured-controller Exam Unstructured Controller\n//----------------------------------------------\n//createExamUnstructured\nexport function createExamUnstructured(hisid, item, result, state, time) {\n  const body = {\n    hisid: hisid,\n    item: item,\n    result: result,\n    state: state,\n    time: time\n  }\n  return axios.post(\"examunstructured/createexamunstructured\", body);\n}\n\n//getExamUnstructured\nexport function getAllExamUnstructured() {\n  return axios.get(\"examunstructured/getAllexamunstructured\");\n}\n\n//----------------------------------------------\n// feeding-controller Feeding Controller\n//----------------------------------------------\n//createExamFeeding\nexport function createExamFeeding(editDoctor, editTime, endTime, hisid, name, notice, startTime) {\n  const body = {\n    editDoctor: editDoctor,\n    editTime: editTime,\n    endTime: endTime,\n    hisid: hisid,\n    name: name,\n    notice: notice,\n    startTime: startTime\n  }\n  return axios.post(\"feeding/createfeeding\", body);\n}\n\n//getExamFeeding\nexport function getAllExamFeeding() {\n  return axios.get(\"feeding/getAllfeeding\");\n}\n\n//----------------------------------------------\n// hospitalization-record-controller Hospitalization Record Controller\n//----------------------------------------------\n//createHospitalizationRecord\nexport function createHospitalizationRecord(hisid, hospitalDoctor, tricuactiveue, mainDoctor, nonReport, note, report, updateTime) {\n  const body = {\n    hisid: hisid,\n    hospitalDoctor: hospitalDoctor,\n    icuactive: tricuactiveue,\n    mainDoctor: mainDoctor,\n    nonReport: nonReport,\n    note: note,\n    report: report,\n    updateTime: updateTime\n  }\n  return axios.post(\"hospitalizationrecord/createhospitalizationrecord\", body);\n}\n\n//getHospitalizationRecord\nexport function getHospitalizationRecord() {\n  return axios.get(\"hospitalizationrecord/getAllhospitalizationrecord\");\n}\n\n//----------------------------------------------\n// io-controller IO Controller\n//----------------------------------------------\n//createIO\nexport function createIO(caseid, hisid, item, updateTime) {\n  const body = {\n    caseid: caseid,\n    hisid: hisid,\n    item: item,\n    updateTime: updateTime\n  }\n  return axios.post(\"io/createio\", body);\n}\n\n//getIO\nexport function getIO() {\n  return axios.get(\"io/getAllio\");\n}\n\n//----------------------------------------------\n// nis-controller NIS Controller\n//----------------------------------------------\n//getQDC\nexport function getQDC(caseno, st, et) {\n  return axios.get(\"QDC/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQENT\nexport function getQENT(caseno) {\n  return axios.get(\"QENT/\" + caseno);\n}\n\n//getQDVS\nexport function getQDVS(caseno, st, et) {\n  return axios.get(\"QDVS/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQMNC\nexport function getQMNC(caseno) {\n  return axios.get(\"QMNC/\" + caseno);\n}\n\n//getQOXY\nexport function getQOXY(caseno, st, et) {\n  return axios.get(\"QOXY/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQPNOT\nexport function getQPNOT(caseno, st, et) {\n  return axios.get(\"QPNOT/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQSPE\nexport function getQSPE(caseno, st, et) {\n  return axios.get(\"QSPE/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQTWPER\nexport function getQTWPER(caseno, st, et) {\n  return axios.get(\"QTWPER/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//----------------------------------------------\n// note-controller Note Controller\n//----------------------------------------------\n//createNote\nexport function createNote(caseid, context, editTime, hisid, type) {\n  const body = {\n    caseid: caseid,\n    context: context,\n    editTime: editTime,\n    hisid: hisid,\n    type: type\n  }\n  return axios.post(\"note/createnote\", body);\n}\n\n//getNote\nexport function getNote() {\n  return axios.get(\"note/getAllnote\");\n}\n\n//----------------------------------------------\n// notice-controller 待辦事項 Notice (Ward/Patient View)\n//----------------------------------------------\n//建立資訊\nexport function createNotice(hisid, context, time, transinno, doc) {\n  const body = {\n    hisid: hisid,\n    context: context,\n    time: time,\n    transinno: transinno,\n    doc: doc\n  }\n  return axios.post(\"notice/createNotice\", body);\n}\n\n//刪除某人某件資訊\nexport function deleteNotice(transinno, date) {\n  return axios.delete(\"notice/delnotice/\" + transinno + \"/\" + date);\n}\n\n//取得全部資訊\nexport function getAllNotice() {\n  return axios.get(\"notice/getAllnotice\");\n}\n\n//取得某位病人資訊\nexport function getOnePatientNotice(transinno, HISID, st, et) {\n  return axios.get(\"notice/getOnePatientNotice/\" + transinno + \"/\" + HISID + \"/\" + st + \"/\" + et);\n}\n\n//----------------------------------------------\n// patient-controller 基本資料(Ward View)\n//----------------------------------------------\n//填寫基本資料\nexport function createPatient(nonreport, pacseno, pbirthdt, pbirthweight, pblood, pday, phistnum, pnamec, psex, pweek, report, transinid) {\n  const body = {\n    nonreport: nonreport,\n    pacseno: pacseno,\n    pbirthdt: pbirthdt,\n    pbirthweight: pbirthweight,\n    pblood: pblood,\n    pday: pday,\n    phistnum: phistnum,\n    pnamec: pnamec,\n    psex: psex,\n    pweek: pweek,\n    report: report,\n    transinid: transinid\n  }\n  return axios.post(\"patient/createpatient\", body);\n}\n\n//刪除某位病人\nexport function deletePatient(transinid, caseid, hisid) {\n  return axios.delete(\"patient/delpatient/\" + transinid + \"/\" + caseid + \"/\" + hisid);\n}\n\n//取得全部資訊\nexport function getAllPatient() {\n  return axios.get(\"patient/getAllpatient\");\n}\n\n//取得某位病人資訊\nexport function getOnePatient(hisid) {\n  return axios.get(\"patient/getOnepatient/\" + hisid);\n}\n\n\n//----------------------------------------------\n// patient-important-matter-controller 病人重要注意事項(Patient View)\n//----------------------------------------------\n//建立事項資訊\nexport function createPatientImportantMatter(context, editor, hisid, updateTime, transinid) {\n  const body = {\n    context: context,\n    editor: editor,\n    hisid: hisid.trim(),\n    time: updateTime,\n    transinid: transinid\n  }\n  return axios.post(\"patientimportantmatter/createpatientimportantmatter\", body);\n}\n\n//刪除某日資訊\nexport function deletePatientImportantMatter(date) {\n  return axios.delete(\"patientimportantmatter/delpatientimportantmatter/\" + date);\n}\n\n//取得全部資訊\nexport function getAllPatientImportantMatter() {\n  return axios.get(\"patientimportantmatter/getAllpatientimportantmatter\");\n}\n\n//取得某位病人資訊\nexport function getOnePatientImportantMatter(transinid) {\n  return axios.get(\"patientimportantmatter/getOnepatient/\" + transinid);\n}\n\n//----------------------------------------------\n// patient-remark-controller 病人註記(Patient View)\n//----------------------------------------------\n//createPatientRemark\nexport function createPatientRemark(context, hisid, transid) {\n  const body = {\n    context: context,\n    hisid: hisid,\n    transid: transid\n  }\n  return axios.post(\"patientremark/createpatientremark\", body);\n}\n\n//delPatientremark\nexport function deletePatientRemark(transid) {\n  return axios.delete(\"patientremark/delpatientremark/\" + transid);\n}\n\n//getPatientRemark\nexport function getAllPatientRemark() {\n  return axios.get(\"patientremark/getAllpatientremark\");\n}\n\n//getOnePatientRemark\nexport function getOnePatientRemark(transid) {\n  return axios.get(\"patientremark/getOnepatientremark/\" + transid);\n}\n\n//----------------------------------------------\n// remark-controller 註記\n//----------------------------------------------\n//建立註記\n\nexport function createRemark(name, remark, remarkId, time, transinId, type, editor) {\n  const body = {\n    name: name,\n    remark: remark,\n    remarkid: remarkId,\n    time: time,\n    transinid: transinId,\n    type: type,\n    editor: editor\n  }\n  return axios.post(\"Remark/createremark\", body);\n}\n\n//取得全部註記\nexport function getAllRemark() {\n  return axios.get(\"Remark/getAllremark\");\n}\n\n//取得某一類型註記\nexport function getOneRemark(transid, remarkid, type) {\n  return axios.get(\"Remark/getOneremark/\" + transid + \"/\" + remarkid + \"/\" + type);\n}\n\n//----------------------------------------------\n// patient-weight-controller 基本資料-體重(Ward View)\n//----------------------------------------------\n//填寫體重資訊\nexport function createPatientWeight(hisid, updateTime, weight) {\n  const body = {\n    hisid: hisid,\n    updateTime: updateTime,\n    weight: weight\n  }\n  return axios.post(\"patientweight/createpatientweight\", body);\n}\n\n//刪除某位病人體重資訊\nexport function deletePatientWeight(date) {\n  return axios.delete(\"patientweight/delpatientweight/\" + date);\n}\n\n//取得全部資訊\nexport function getAllPatientWeight() {\n  return axios.get(\"patientweight/getAllpatientweight\");\n}\n\n//取得某位病人體重資訊\nexport function getOnePatientWeight(hisid) {\n  return axios.get(\"patientweight/getOnepatientweight/\" + hisid);\n}\n\n//----------------------------------------------\n// prescription-order-controller Prescription Order\n//----------------------------------------------\n//建立Prescription Order資訊\nexport function createPrescriptionOrder(caseid, dosage, editTime, endTime, frequency, hisid, name, note, route, scientificName, startTime, state, unit) {\n  const body = {\n    caseid: caseid,\n    dosage: dosage,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    route: route,\n    scientificName: scientificName,\n    startTime: startTime,\n    state: state,\n    unit: unit\n  }\n  return axios.post(\"prescriptionorder/createprescriptionorder\", body);\n}\n\n//取得全部資訊\nexport function getAllPrescriptionOrder() {\n  return axios.get(\"prescriptionorder/getAllprescriptionorder\");\n}\n\n//更新Prescription Order備註\nexport function updatePrescriptionOrder(updateTime, caseid, dosage, editTime, endTime, frequency, hisid, name, note, route, scientificName, startTime, state, unit) {\n  const body = {\n    caseid: caseid,\n    dosage: dosage,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    route: route,\n    scientificName: scientificName,\n    startTime: startTime,\n    state: state,\n    unit: unit\n  }\n  return axios.put(\"prescriptionorder/updateponote/\" + updateTime, body);\n}\n\n//----------------------------------------------\n// schedule-controller 排程與事件(Ward/Patient View)\n//----------------------------------------------\n//建立排程資訊\nexport function createPatientSchedule(bednumber, context, time, transinno, type, writter, name, hisid) {\n  const body = {\n    bednumber: bednumber,\n    context: context,\n    time: time,\n    transinno: transinno,\n    type: type,\n    writter: writter,\n    name: name,\n    hisid: hisid\n  }\n  return axios.post(\"schedule/createschedule\", body);\n}\n\n//刪除某人某天排程資訊\nexport function deletePatientSchedule(transinno, date) {\n  return axios.delete(\"schedule/delschedule/\" + transinno + \"/\" + date);\n}\n\n//取得全部資訊\nexport function getAllSchedule() {\n  return axios.get(\"schedule/getAllschedule\");\n}\n\n//取得某位某時段病人資訊\nexport function getOnePatientSchedule(transinno, starttime, endtime) {\n  return axios.get(\"schedule/getOnepatient/\" + transinno + \"/\" + starttime + \"/\" + endtime);\n}\n\n//----------------------------------------------\n// sso-controller SSO Controller\n//----------------------------------------------\n//get_user_profile\nexport function ssoUserProfile(app_COMPANY_UUID, app_USER_BASIC_PROFILE, app_USER_NODE_UUID, privileged_APP_SSO_TOKEN, public_APP_USER_SSO_TOKEN_TO_QUERY) {\n  const body = {\n    app_COMPANY_UUID: app_COMPANY_UUID,\n    app_USER_BASIC_PROFILE: app_USER_BASIC_PROFILE,\n    app_USER_NODE_UUID: app_USER_NODE_UUID,\n    privileged_APP_SSO_TOKEN: privileged_APP_SSO_TOKEN,\n    public_APP_USER_SSO_TOKEN_TO_QUERY: public_APP_USER_SSO_TOKEN_TO_QUERY\n  }\n  return axios.post(\"nicu/get_user_profile\", body);\n}\n\n//get_uuid\nexport function ssoUuid(privileged_APP_SSO_TOKEN, public_APP_USER_SSO_TOKEN_TO_QUERY) {\n  const body = {\n    privileged_APP_SSO_TOKEN: privileged_APP_SSO_TOKEN,\n    public_APP_USER_SSO_TOKEN_TO_QUERY: public_APP_USER_SSO_TOKEN_TO_QUERY\n  }\n  return axios.post(\"nicu/get_uuid\", body);\n}\n\n//Login\nexport function ssoLogin(app_PRIVATE_ID, app_PRIVATE_PASSWD) {\n  const body = {\n    app_PRIVATE_ID: app_PRIVATE_ID,\n    app_PRIVATE_PASSWD: app_PRIVATE_PASSWD\n  }\n  return axios.post(\"nicu/login\", body);\n}\n\n//login_action\nexport function ssoLoginAction(login_name, password) {\n  const body = {\n    login_name: login_name,\n    password: password\n  }\n  return axios.post(\"nicu/login_a\", body);\n}\n\n//----------------------------------------------\n// stored-procedure-controller Stored Procedure Controller\n//----------------------------------------------\n//getADMDISP\nexport function getStoredProcedureADMDISP(hisid, caseno) {\n  return axios.get(\"ADMDISP/\" + hisid + \"/\" + caseno);\n}\n\n//getADMLIST\nexport function getStoredProcedureADMLIST(hisid, docid) {\n  return axios.get(\"ADMLIST/\" + hisid + \"/\" + docid);\n}\n\n//getCPSDISP\nexport function getStoredProcedureCPSDISP(hisid, caseno, seq) {\n  return axios.get(\"CPSDISP/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//getCPSLIST\nexport function getStoredProcedureCPSLIST(hisid, docid) {\n  return axios.get(\"CPSLIST/\" + hisid + \"/\" + docid);\n}\n\n//getDISDISP\nexport function getStoredProcedureDISDISP(hisid, caseno) {\n  return axios.get(\"DISDISP/\" + hisid + \"/\" + caseno);\n}\n\n//getDISLIST\nexport function getStoredProcedureDISLIST(hisid, docid) {\n  return axios.get(\"DISLIST/\" + hisid + \"/\" + docid);\n}\n\n//getDTAROTQ4\nexport function getStoredProcedureDTAROTQ4(hisid) {\n  return axios.get(\"DTAROTQ4/\" + hisid);\n}\n\n//getDTASOAPQ\nexport function getStoredProcedureDTASOAPQ(hisid, date, dpt) {\n  return axios.get(\"DTASOAPQ/\" + hisid + \"/\" + date + \"/\" + dpt);\n}\n\n//getERDISP\nexport function getStoredProcedureERDISP(hisid, caseno) {\n  return axios.get(\"ERDISP/\" + hisid + \"/\" + caseno);\n}\n\n//getOPSORAQ1\nexport function getStoredProcedureOPSORAQ1(hisid) {\n  return axios.get(\"OPSORAQ1/\" + hisid);\n}\n\n//getOPSORAQ2\nexport function getStoredProcedureOPSORAQ2(hisid, date, times) {\n  return axios.get(\"OPSORAQ2/\" + hisid + \"/\" + date + \"/\" + times);\n}\n\n//getORDLIST\nexport function getStoredProcedureORDLIST(hisid, date, dpt, docid) {\n  return axios.get(\"ORDLIST/\" + hisid + \"/\" + date + \"/\" + dpt + \"/\" + docid);\n}\n\n//getPCASELIST\nexport function getStoredProcedurePCASELIST(hisid, docid, ttype) {\n  return axios.get(\"PCASELIST/\" + hisid + \"/\" + docid + \"/\" + ttype);\n}\n\n//getPRGTXQRY\nexport function getStoredProcedurePRGTXQRY(hisid, date, caseno) {\n  return axios.get(\"PRGTXQRY/\" + date + \"/\" + hisid + \"/\" + caseno);\n}\n\n//getRESDBGAS\nexport function getStoredProcedureRESDBGAS(hisid, date) {\n  return axios.get(\"RESDBGAS/\" + hisid + \"/\" + date);\n}\n\n//getRESDGLU1\nexport function getStoredProcedureRESDGLU1(hisid, date) {\n  return axios.get(\"RESDGLU1/\" + hisid + \"/\" + date);\n}\n\n//getRESDISP\nexport function getStoredProcedureRESDISP(hisid, month, caseno, seq) {\n  return axios.get(\"RESDISP/\" + month + \"/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//getRESDNM2\nexport function getStoredProcedureRESDNM2(hisid, date) {\n  return axios.get(\"RESDNM2/\" + hisid + \"/\" + date);\n}\n\n//getRESLAB01\nexport function getStoredProcedureRESLAB01(hisid, date) {\n  return axios.get(\"RESLAB01/\" + hisid + \"/\" + date);\n}\n\n//getRESLAB02\nexport function getStoredProcedureRESLAB02(hisid, date) {\n  return axios.get(\"RESLAB02/\" + hisid + \"/\" + date);\n}\n\n//getRESLAB0C\nexport function getStoredProcedureRESLAB0C(hisid, date) {\n  return axios.get(\"RESLAB0C/\" + hisid + \"/\" + date);\n}\n\n//getRESSECT\nexport function getStoredProcedureRESSECT(hisid, month, dpt, docid) {\n  return axios.get(\"RESSECT/\" + month + \"/\" + hisid + \"/\" + dpt + \"/\" + docid);\n}\n\n//getTRTMNTQ1\nexport function getStoredProcedureTRTMNTQ1(hisid, caseno) {\n  return axios.get(\"TRTMNTQ1/\" + hisid + \"/\" + caseno);\n}\n\n//getUDORDER0\nexport function getStoredProcedureUDORDER0(hisid, caseno, seq) {\n  return axios.get(\"UDORDER0/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//getUDTEXTQ1\nexport function getStoredProcedureUDTEXTQ1(caseno, seq) {\n  return axios.get(\"UDTEXTQ1/\" + caseno + \"/\" + seq);\n}\n\n//getWARDFLAG\nexport function getStoredProcedureWARDFLAG(hisid, caseno, seq) {\n  return axios.get(\"WARDFLAG/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//----------------------------------------------\n// table-controller Table Controller\n//----------------------------------------------\n//getTableHBED\nexport function getTableHBED() {\n  return axios.get(\"HBED\");\n}\n\n//getTablePBASINFO\nexport function getTablePBASINFO(PHISTNUM) {\n  return axios.get(\"PBASINFO/\" + PHISTNUM);\n}\n\n//getTablePDOCNEW\nexport function getTablePDOCNEW(PCASENO) {\n  return axios.get(\"PDOCNEW/\" + PCASENO);\n}\n\n//getTablePLOC\nexport function getTablePLOC(PCASENO) {\n  return axios.get(\"PLOC/\" + PCASENO);\n}\n\n//----------------------------------------------\n// to-do-controller 待辦事項To Do List(Ward/Patient View)\n//----------------------------------------------\n//建立待辦資訊\nexport function createTodo(caseid, context, time, transinno, type) {\n  const body = {\n    caseid: caseid,\n    context: context,\n    time: time,\n    transinno: transinno,\n    type: type\n  }\n  return axios.post(\"todo/createtodo\", body);\n}\n\n//刪除某件待辦資訊\nexport function deleteTodo(index) {\n  return axios.delete(\"todo/deltodo/\" + index);\n}\n\n//取得全部資訊\nexport function getAllTodo() {\n  return axios.get(\"todo/getAlltodo\");\n}\n\n//取得某位病人資訊\nexport function getOneTodo(transinno, caseid) {\n  return axios.get(\"todo/getOnepatient/\" + transinno + \"/\" + caseid);\n}\n\n//----------------------------------------------\n// tpn-controller TPN Controller\n//----------------------------------------------\n//createTPN\nexport function createTPN(aa, ca, editTime, endTime, frequency, glu, hisid, k, mg, na, name, notice, p, startTime, state, tpn) {\n  const body = {\n    aa: aa,\n    ca: ca,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    glu: glu,\n    hisid: hisid,\n    k: k,\n    mg: mg,\n    na: na,\n    name: name,\n    notice: notice,\n    p: p,\n    startTime: startTime,\n    state: state,\n    tpn: tpn\n  }\n  return axios.post(\"tpn/createtpn\", body);\n}\n\n//getTPN\nexport function getAllTPN() {\n  return axios.get(\"tpn/getAlltpn\");\n}\n\n//----------------------------------------------\n// treatment-order-controller Treatment Order\n//----------------------------------------------\n//建立Treatment Order資訊\nexport function createTreatmentOrder(caseid, editTime, endTime, frequency, hisid, name, note, startTime, state) {\n  const body = {\n    caseid: caseid,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    startTime: startTime,\n    state: state\n  }\n  return axios.post(\"treatmentorder/createtreatmentorder\", body);\n}\n\n//取得全部資訊\nexport function getAllTreatmentOrder() {\n  return axios.get(\"treatmentorder/getAlltreatmentorder\");\n}\n\n//更新Treatment Order備註\nexport function updateTreatmentOrder(EditTime, caseid, editTime, endTime, frequency, hisid, name, note, startTime, state) {\n  const body = {\n    caseid: caseid,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    startTime: startTime,\n    state: state\n  }\n  return axios.put(\"treatmentorder/updatetonote/\" + EditTime, body);\n}\n\n//----------------------------------------------\n// ward-bed-information-history-controller 歷史病床資訊(Ward View)\n//----------------------------------------------\n//建立床位歷史資訊\nexport function createWardbedInformation(breath, hisid, nonBreath, onBedNumber, tpn, updateTime) {\n  const body = {\n    breath: breath,\n    hisid: hisid,\n    nonBreath: nonBreath,\n    onBedNumber: onBedNumber,\n    tpn: tpn,\n    updateTime: updateTime\n  }\n  return axios.post(\"wardbedinformation/createwardbedinformation\", body);\n}\n\n//取得全部資訊\nexport function getAllWardbedInformation() {\n  return axios.get(\"wardbedinformation/getAllwardbedinformation\");\n}\n\n//當日床位資訊\nexport function getOneWardbedInformation(date) {\n  return axios.get(\"wardbedinformation/getOnewardbedinformation/\" + date);\n}\n\n//近兩週床位資訊\nexport function getWeekWardbedInformation(date) {\n  return axios.get(\"wardbedinformation/getWeekswardbedinformation/\" + date);\n}\n\n//----------------------------------------------\n// ward-information-controller Ward Information Controller\n//----------------------------------------------\n//建立WardInformation資訊\nexport function createWardInformation(bednumber, caseid, hisid, indexId, today, transformintime, transformouttime) {\n  const body = {\n    bednumber: bednumber,\n    caseid: caseid,\n    hisid: hisid,\n    indexId: indexId,\n    today: today,\n    transformintime: transformintime,\n    transformouttime: transformouttime\n  }\n  return axios.post(\"wardinformation/createwardinformation\", body);\n}\n\n//取得全部資訊\nexport function getAllWardInformation() {\n  return axios.get(\"wardinformation/getAllwardinformation\");\n}\n\n//取得當日資訊\nexport function getOneWardInformation(date) {\n  return axios.get(\"wardinformation/getTodaywardinformation/\" + date);\n}\n\n//----------------------------------------------\n// ward-state-controller 病床狀態(Ward View)\n//----------------------------------------------\n//建立床位狀態資訊\nexport function createWardState(anti, breath, drain, foley, hd, hisid, npo, tpn) {\n  const body = {\n    anti: anti,\n    breath: breath,\n    drain: drain,\n    foley: foley,\n    hd: hd,\n    hisid: hisid,\n    npo: npo,\n    tpn: tpn\n  }\n  return axios.post(\"wardstate/createwardstate\", body);\n}\n\n//取得全部資訊\nexport function getAllWardState() {\n  return axios.get(\"wardstate/getAllwardstate\");\n}\n\n//取得某人床位狀態資訊\nexport function getOneWardState(hisid) {\n  return axios.get(\"wardstate/getOnewardstate/\" + hisid);\n}\n\n//----------------------------------------------\n// ward-value-controller 生命跡象(Ward/Patient View)\n//----------------------------------------------\n//建立生命跡象資訊\nexport function createWardValue(abpd, abpm, abps, bt, hr, nbpd, nbpm, nbps, phistnum, rr, spO2, time) {\n  const body = {\n    abpd: abpd,\n    abpm: abpm,\n    abps: abps,\n    bt: bt,\n    hr: hr,\n    nbpd: nbpd,\n    nbpm: nbpm,\n    nbps: nbps,\n    phistnum: phistnum,\n    rr: rr,\n    spO2: spO2,\n    time: time\n  }\n  return axios.post(\"wardvalue/createwardvalue\", body);\n}\n\nexport function getWardDebInfo(date) {\n  return axios.get(\"patient/getWardDebInfo/\" + date);\n}\n\nexport function getPatientwarMidValue(hisid, time, interval) {\n  return axios.get(\"wardvalue/getPatientwarMidValue/\" + hisid + \"/\" + time + \"/\" + interval);\n}\n\nexport function getPatientwardvalueMedian(hisid, startTime, endTime) {\n  return axios.get(\"wardvalue/getPatientwardvalueMedian/\" + hisid + \"/\" + startTime + \"/\" + endTime);\n}\n\n\nexport function getPatientwardvalueBoxPlot(hisid, startTime, endTime, type, interval) {\n  return axios.get(\"wardvalue/getPatientwardvalueBoxPlot/\" + hisid + \"/\" + startTime + \"/\" + endTime + \"/\" + type + \"/\" + interval);\n}\n\nexport function getVitalSignData(hisid, startTime, endTime, type) {\n  return axios.get(\"wardvalue/getVitalSignData/\" + hisid + \"/\" + startTime + \"/\" + endTime + \"/\" + type);\n}\n\n//取得全部資訊\nexport function getAllWardValue() {\n  return axios.get(\"wardvalue/getAllwardvalue\");\n}\n\n//取得全部資訊\nexport function getHisidwardvalue(hisid) {\n  return axios.get(\"wardvalue/getHisidwardvalue/\" + hisid);\n}\n\n//取得某一段時間某一個人生命跡象(原始資料)\nexport function getPatientWardValue(endTime, hisid, startTime, interval, type) {\n  return axios.get(\"wardvalue/getPatientwardvalue/\" + hisid + \"/\" + startTime + \"/\" + endTime + \"/\" + type + \"/\" + interval);\n}\n\n//----------------------------------------------\n// water-volume-controller Water Volume Controller\n//----------------------------------------------\n//createWaterVolume\nexport function createWaterVolume(endTime, feed, hisid, iv, other, startTime, updateTime) {\n  const body = {\n    endTime: endTime,\n    feed: feed,\n    hisid: hisid,\n    iv: iv,\n    other: other,\n    startTime: startTime,\n    updateTime: updateTime\n  }\n  return axios.post(\"watervolume/createwatervolume\", body);\n}\n\n//取得全部資訊\nexport function getAllWaterVolume() {\n  return axios.get(\"watervolume/getAllwatervolume\");\n}\n","import axios from 'axios';\n\nconst githubApiUrl = \"https://raw.githubusercontent.com/gerrykiki/JsonRegObject/master/\";\n\n//create new instance of github API\nvar axiosGithub = axios.create({\n    baseURL: githubApiUrl,\n    timeout: 1000,\n    //headers: {'X-Custom-Header': 'foobar'}\n});\n\nexport function getGitHubJson(string) {\n    return axiosGithub.get(string);\n}\n\n// export function getExamReport() {\n//     return axios.get(\"ExamRepor.json\");\n// }\n\n","import React, { Component } from 'react';\nimport { wardstatestringformat } from '../Function/Wardstate'\nimport './Wardcardstatus.scss'\nimport * as ApiProvider from '../API/ApiProvider'\nimport * as ApiGithub from '../API/ApiGithub'\n// import moment from 'moment';\n// import * as RegularData from '../Data/RegularData'\n\nclass Wardcarstatus extends Component {\n    state = {\n        TRTMNTQ1: [],\n        UDORDER0: [],\n        FlagReg: []\n    }\n    componentDidMount() {\n        const { PCASENO, PHISTNUM } = this.props\n        console.log(PCASENO, PHISTNUM)\n        const TRQ1 = ApiProvider.getStoredProcedureTRTMNTQ1(PHISTNUM, PCASENO)\n            .then(data => {\n                console.log(data.data)\n                const rowList = data.data\n                const filterStatusList = rowList.filter(function (info, index, arr) {\n                    return Number(info.ORSTATUS) === 30\n                })\n                return filterStatusList\n            })\n            .catch(err => {\n\n            })\n        const UDORDER = ApiProvider.getStoredProcedureUDORDER0(PHISTNUM, PCASENO, \"123\")\n            .then(data => {\n                console.log(data.data)\n                var List = []\n                const dataList = data.data\n                if (Array.isArray(dataList)) {\n                    for (let index = 0; index < dataList.length; index++) {\n                        const status = Number(dataList[index].UDSTATUS)\n                        if (status === 80) {\n                            List.push(dataList[index])\n                        }\n                    }\n                }\n                return List\n            })\n            .catch(err => {\n\n            })\n        const Reg = ApiGithub.getGitHubJson(\"FlagReg.json\")\n            .then(data => {\n                console.log(data.data)\n                return data.data\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        Promise.all([TRQ1, UDORDER, Reg])\n            .then(result => {\n                this.setState({\n                    TRTMNTQ1: result[0],\n                    UDORDER0: result[1],\n                    FlagReg: result[2]\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    render() {\n        function RespiratorStatusParse(InvasiveRespiratorStatus, NonInvasiveRespiratorStatus) {\n            if (InvasiveRespiratorStatus === false && NonInvasiveRespiratorStatus === false) {\n                return \"false\"\n            }\n            if (InvasiveRespiratorStatus === true && NonInvasiveRespiratorStatus === true) {\n                return \"false\"\n            }\n            if (InvasiveRespiratorStatus === true) {\n                return '呼(侵入)'\n            }\n            if (NonInvasiveRespiratorStatus === true) {\n                return \"呼(非侵入)\"\n            }\n            return \"--\"\n        }\n\n        function parseFlagData(TRTMNTQ1, UDORDER, FlagReg, type) {\n            //filter  status 生效中\n            console.log(FlagReg, type)\n            if (FlagReg === undefined || FlagReg === null) { return null }\n            const Flag = FlagReg.filter(function (value, index, arr) {\n                return value.item === type\n            })\n            if (Flag.length === 0) {\n                return null\n            }\n            const StatusUDORDER = UDORDER.some(function (value, index, arr) {\n                const UDDRGNAM = value.UDDRGNAM.toLowerCase()\n                const UDGNAME = value.UDGNAME.toLowerCase()\n                const findFlag = Flag[0].ParseValueUD.some(function (value, index, arr) {\n                    return UDDRGNAM.indexOf(value) >= 0 || UDGNAME.indexOf(value)\n                })\n                return findFlag\n            })\n            const StatusTRTMNTQ1 = TRTMNTQ1.some(function (value, index, arr) {\n                const ORPROCED = value.ORPROCED.toLowerCase()\n                const findFlag = Flag[0].ParseValueTRT.some(function (value, index, arr) {\n                    console.log(value)\n                    // return ORPROCED.match(value) !== null\n                    return value\n                })\n                return findFlag\n            })\n            if (StatusUDORDER === false && StatusTRTMNTQ1 === false) {\n                return false\n            }\n            return true\n        }\n\n        function statusspan(source) {\n            if (source.item === 'Respirator') {\n                return 'gridtwocoltwo'\n            }\n            else return 'gridtwocolone'\n        }\n        function style_change(source) {\n            if (source.item === 'Respirator') {\n                if (source.data === '呼(侵入)') {\n                    return 'statustrue'\n                }\n                if (source.data === '呼(非侵入)') {\n                    return 'statusfalse'\n                }\n                if (source.data === 'true') {\n                    return 'statustrue'\n                }\n                return 'statusfalse'\n\n            }\n            else {\n                if (source.data) {\n                    return 'statustrue'\n                }\n                else {\n                    return 'statusfalse'\n                }\n            }\n        }\n\n        const UDORDER = this.state.UDORDER0\n        const TRTMNTQ1 = this.state.TRTMNTQ1\n        const Flag = this.state.FlagReg\n        const AntiStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"Anti\")\n        const TPNStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"TPN\")\n        const NP0Status = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"NPO\")\n        const FoleyStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"Foley\")\n        const DrainStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"Drain\")\n        const InvasiveRespiratorStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"InvasiveRespirator\")\n        const NonInvasiveRespiratorStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"NonInvasiveRespirator\")\n        const RespiratorStatus = RespiratorStatusParse(InvasiveRespiratorStatus, NonInvasiveRespiratorStatus)\n\n        const StatusArray = [\n            { \"item\": \"Respirator\", \"data\": RespiratorStatus },\n            { \"item\": \"CVC\", \"data\": FoleyStatus },\n            { \"item\": \"NPO\", \"data\": NP0Status },\n            { \"item\": \"TPN\", \"data\": TPNStatus },\n            { \"item\": \"Abx\", \"data\": AntiStatus },\n            { \"item\": \"Xanth\", \"data\": [] },\n            { \"item\": \"照光\", \"data\": [] },\n            { \"item\": \"DRN\", \"data\": DrainStatus }\n        ]\n\n        const statuslist = StatusArray.map(function (info, index, arr) {\n            return (\n                <div key={index} className={statusspan(info)}>\n                    <t4 className={style_change(info)}>{wardstatestringformat(info)}</t4>\n                </div>\n            );\n        })\n        const source = this.props.source\n        return (\n            <div className={source ? \"warscardstatusgrid\" : \"wardinfouserstatusgrid\"}>\n                {statuslist}\n            </div >\n        );\n    }\n}\n\nexport default Wardcarstatus\n","import React, { useState, useEffect } from \"react\";\nimport { statecolor } from '../Function/Wardstate'\nimport Wardcarstatus from './Wardcardstatus'\nimport * as ApiProvider from '../API/ApiProvider'\nimport './Wardcardvalue.scss'\n\nexport function WardCard(props) {\n    const [CenterMonitorValue, SetCenterMonitorValue] = useState(null)\n    const [HID, SetHID] = useState(\"\")\n    const [Timer, SetTimer] = useState(0)\n    useEffect(() => {\n        const TimerID = setInterval(() => {\n            SetTimer(Timer + 1)\n        }, 5000)\n        return () => clearInterval(TimerID);\n    }, [Timer])\n\n    useEffect(() => {\n        const hisid = props.PHISTNUM.toString().trim()\n        // const hisid = \"TEST1234\"\n        ApiProvider.getHisidwardvalue(hisid)\n            .then(data => {\n                console.log(data.data)\n                const source = data.data\n                const HID = source.phistnum\n                SetCenterMonitorValue(source[0]);\n                SetHID(HID)\n            })\n            .catch(err => {\n                console.log(\"Andy test getHisidwardvalue NG \" + JSON.stringify(err));\n            });\n    }, [Timer]);\n    function InitCenterData(value) {\n        console.log(value)\n        if (value === undefined || value === null || value === \"\") {\n            return \"--\"\n        }\n        else return value\n    }\n    console.log(CenterMonitorValue)\n    if (CenterMonitorValue === null || CenterMonitorValue === undefined) {\n        return null\n    }\n    return (\n        <div className='Wardcardvaluelayout'>\n            <div className='Wardcardvitalvalue'>\n                <div className='valueRows'>\n                    <div >\n                        <t4 style={{ display: \"block\", color: statecolor('HR'), }}>HR</t4>\n                        <t2 className=\"bothWordValue\" style={{ color: statecolor('HR') }}>{InitCenterData(CenterMonitorValue.hr)}</t2>\n                    </div>\n                    <div >\n                        <t4 style={{ display: \"block\", color: statecolor('SpO2') }}>SpO<sub>2</sub></t4>\n                        <t2 className=\"bothWordValue\" style={{ color: statecolor('SpO2') }}>\n                            {InitCenterData(CenterMonitorValue.spo2)}\n                            <span style={{ fontWeight: \"400\", fontSize: \"12px\" }}>%</span>\n                        </t2>\n                    </div>\n                </div>\n                <div className='valueRows'>\n                    <div >\n                        <t4 style={{ display: \"block\", color: statecolor('BP') }}>ABP</t4>\n                        <t2 className=\"bothWordValue\" style={{ color: statecolor('BP') }}>{InitCenterData(CenterMonitorValue.abpd)}/{InitCenterData(CenterMonitorValue.abps)}({InitCenterData(CenterMonitorValue.abpm)})</t2>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnsGap: \"5px\" }}>\n                        <div >\n                            <t4 style={{ display: \"block\", color: statecolor('RR') }}>RR</t4>\n                            <t2 className=\"bothWordValue\" style={{ color: statecolor('RR') }}>{InitCenterData(CenterMonitorValue.rr)}</t2>\n                        </div>\n                        <div >\n                            <t4 style={{ display: \"block\", color: statecolor('BT') }}>BT</t4>\n                            <t2 className=\"bothWordValue\" style={{ color: statecolor('BT') }}>\n                                {InitCenterData(CenterMonitorValue.bt)}\n                                <span style={{ fontWeight: \"400\", fontSize: \"12px\" }}>&deg;C</span>\n                            </t2>\n                        </div>\n                    </div>\n                </div>\n            </div >\n            <Wardcarstatus source={true} PCASENO={props.PCASENO} PHISTNUM={props.PHISTNUM}></Wardcarstatus>\n        </div >\n    );\n}\n","function bednumberformat(number) {\n    if (number < 10) {\n        return '0' + number\n    }\n    return number\n}\n\nfunction gender(gender) {\n    if (gender === \"1\") {\n        return '男'\n    }\n    return '女'\n}\n\nfunction WardCardgender(gender) {\n    console.log(gender)\n    if (gender === \"M\") {\n        return '男'\n    }\n    return '女'\n}\n\nfunction pregancybirthdayweekday(pregancy, birthday) {\n    const pregancydays = (new Date(birthday).getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    const pregancyweeks = pregancydays / 7\n    const pregancyweeksdays = pregancydays % 7\n    return '[' + parseInt(pregancyweeks) + '+' + parseInt(pregancyweeksdays) + ']'\n}\n\nfunction pregancynowweek(pregancy) {\n    const pregancydays = (new Date().getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    console.log(pregancydays)\n    const pregancyweeks = pregancydays / 7\n    const pregancyweeksdays = pregancydays % 7\n    console.log(pregancyweeksdays)\n    return '[' + parseInt(pregancyweeks) + '+' + parseInt(pregancyweeksdays) + ']'\n}\n\nfunction pregancytoloaclweeks(pregancy) {\n    const pregancydays = (new Date().getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    console.log(pregancydays)\n    return parseInt(pregancydays / 7)\n}\n\nfunction pregancytolocaldays(pregancy) {\n    const pregancydays = (new Date().getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n\n    return parseInt(pregancydays % 7)\n}\n\nfunction pregancyweek(pregancy, birthday) {\n    const pregancydays = (new Date(birthday).getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    const pregancyweeks = pregancydays / 7\n    return parseInt(pregancyweeks)\n}\n\nfunction pregancydays(pregancy, birthday) {\n    const pregancydays = (new Date(birthday).getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    const pregancyweekdays = pregancydays % 7\n    return parseInt(pregancyweekdays)\n}\n\nfunction birthdayweeks(birthday) {\n    const birthdays = (new Date().getTime() - new Date(birthday).getTime()) / (24 * 60 * 60 * 1000)\n    return parseInt(birthdays / 7)\n}\n\nfunction pregancyweeksanddays(bornweeks, borndays, birthdays) {\n    if (bornweeks === null || bornweeks === undefined || bornweeks === \"\") {\n        return \"-- + --\"\n    }\n    if (borndays === null || borndays === undefined || borndays === \"\") {\n        return \"-- + --\"\n    }\n    if (birthdays === null || birthdays === undefined || birthdays === \"\") {\n        return \"-- + --\"\n    }\n    const localtoborndays = parseInt((new Date().getTime() - new Date(birthdays).getTime()) / (24 * 60 * 60 * 1000)) + parseInt(borndays) + 1\n    const localweeks = parseInt(localtoborndays / 7) + parseInt(bornweeks)\n    const localdays = parseInt(localtoborndays % 7)\n    return localweeks + \"+\" + localdays\n\n}\n\nfunction WeightFormat(BornWeight, Weight) {\n    return BornWeight + \"g -> \" + Weight + \"g\"\n\n}\nexport { bednumberformat, gender, pregancybirthdayweekday, pregancynowweek, pregancyweek, pregancydays, birthdayweeks, pregancytoloaclweeks, pregancytolocaldays, pregancyweeksanddays, WardCardgender, WeightFormat }\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n//Component\nimport * as Wardstate from '../../Function/Wardstate'\nimport * as Wardcardvalue from '../WardCardvalue-k'\nimport { bednumberformat, WardCardgender } from '../../Function/Wardbedfunction'\nimport './Wardcarddetail.scss'\n//image\nimport editlogo from '../../Image/svg/edit2.svg'\nimport fileLogo from '../../Image/svg/file1.svg'\nimport file2Logo from '../../Image/svg/file2.svg'\n//antdesign\nimport { Modal, InputNumber, Button } from 'antd';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment';\n\nvar BornChangeWeek = 0\nvar BornChangeDay = 0\nvar BornChangeWeight = 0\nclass Wardcarddetail extends Component {\n    state = {\n        hoverstate: \"none\",\n        clickstate: false,\n        mouse_hover: false,\n        edit_hover: false,\n        visible: false,\n        pbasignfo: null,\n        birthdayweight: \"N\",\n        weight: 0,\n        bornweek: 0,\n        bornday: 0,\n        nowweight: 0,\n        report: 0,\n        nonreport: 0,\n        remark: \"\",\n        TRANSINID: \"\",\n        TRANSINDT: \"\",\n        TRANSINTM: \"\",\n\n        modatstatus: true,\n        persionstatus: []\n    };\n\n    componentDidMount() {\n        const { data } = this.props\n        const HID = data.PHISTNUM\n        const date = moment().add(-1, \"days\")\n        console.log(date.format(\"YYYY-MM-DD HH:mm:ss\"))\n        const TRID = data.TRID\n        this.API_DATA(HID, date, TRID)\n    }\n\n    API_DATA(HID, date, TRID) {\n        ApiProvider.getStoredProcedureRESSECT(HID, 1, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                const ReportList = data.data\n                const mapList = ReportList.filter(function (value, index, array) {\n                    const DTstring = value.ORRCPDT.toString()\n                    const TMstring = value.ORRCPTM.toString()\n                    const time = DTstring + TMstring\n                    return moment(time, 'YYYY-MM-DDHH:mm:ss').valueOf() > date.valueOf()\n                })\n                this.setState({ report: mapList.length })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureRESSECT NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureORDLIST(HID, date.format('YYYY-MM-DD'), \"ALL\", \"DOC3924B\")\n            .then(data => {\n                const filter = data.data.filter(function (info, index, arr) {\n                    return info.ORSTATUS === \"31\"\n                })\n                this.setState({ nonreport: filter.length })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getOnePatientRemark(TRID)\n            .then(data => {\n                this.setState({\n                    remark: data.data[0].context\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getOnePatientRemark NG \" + JSON.stringify(err));\n            })\n        ApiProvider.getPersionalStatus(HID)\n            .then(data => { console.log(data.data); this.setState({ persionstatus: data.data }) })\n            .catch(err => { console.log(err) })\n    }\n\n    //Module show\n    handleOk(HID, name, sex) {\n        console.log(HID, name, sex)\n        const week = Number(BornChangeWeek)\n        const day = Number(BornChangeDay)\n        const weight = parseFloat(Number(BornChangeWeight) / 1000).toFixed(3)\n        if (weight === undefined || weight === 0 || weight === null || week === 0 || day === 0 || week === undefined || week === null || day === null || day === undefined) {\n            console.log(\"No Input\")\n            this.setState({ modatstatus: false })\n\n        }\n        else if (Number(day) > 6) {\n            this.setState({ modatstatus: false })\n        }\n        else {\n            console.log(\"Create\")\n            ApiProvider.createPatientInfo(HID, name, sex, weight, week, day)\n                .then(data => { console.log(data.data); this.setState({ visible: false, modatstatus: true }) })\n                .catch(err => { console.log(err) })\n        }\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n            modatstatus: true\n        });\n    };\n    showModal = () => { this.setState({ visible: true }); };\n\n    Modelrender(personstatus) {\n        function typefrom(from) {\n            if (from === 'Custom') {\n                return true\n            }\n            return false\n        }\n        function BornWeekAndDay(BornWeeks, BornDays) {\n            if (BornWeeks === null || BornWeeks === undefined || BornWeeks === \"\") {\n                return []\n            }\n            return [BornWeeks, BornDays]\n        }\n        const { data } = this.props\n        const source = data\n        const HID = source.PHISTNUM.toString().trim()\n        const name = source.PNAMEC.toString().trim()\n        const sex = source.PSEX.toString().trim()\n        const Birthday = source.PBIRHDT\n        const BornWeight = personstatus.BornWeight\n        const BornWeeks = personstatus.BornWeeks\n        const BornWdays = personstatus.BornDays\n        const BornStatus = BornWeekAndDay(BornWeeks, BornWdays)\n        console.log(personstatus)\n        const viewstatus = this.state.modatstatus\n        const dataArray = [\n            { item: \"病床號碼:\", value: bednumberformat(parseInt(source.HBEDNO)) },\n            { item: \"病歷號碼:\", value: source.PHISTNUM.toString().trim() },\n            { item: \"出生週數:\", value: BornStatus },\n            { item: \"生日:\", value: moment(Birthday, 'YYYYMMDD').format('YYYY/MM/DD') },\n            { item: \"出生體重:\", value: BornWeight }\n        ]\n        const dataArrayRender = dataArray.map(function (info, index, arr) {\n            if (info.item === \"出生體重:\") {\n                return (\n                    <div key={index} >\n                        <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\", height: \"50px\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                                {info.item}\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                                <InputNumber defaultValue={info.value} onChange={(value) => { BornChangeWeight = value }}></InputNumber>\n                                <div style={{ margin: \"0px 5px\" }}>g</div>\n                            </div>\n                        </div>\n                        <div style={{ display: viewstatus ? \"none\" : \"block\", color: \"red\" }}>輸入錯誤</div>\n                    </div>\n                );\n            }\n            if (info.item === \"出生週數:\") {\n                if (info.value.length === 0) {\n                    return (\n                        <div key={index}>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\", height: \"50px\" }}>\n                                <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                                    {info.item}\n                                </div>\n                                <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                                    <InputNumber onChange={(value) => { BornChangeWeek = value }}></InputNumber>\n                                    <div style={{ margin: \"0px 5px\" }}>週</div>\n                                    <InputNumber onChange={(value) => { BornChangeDay = value }}></InputNumber>\n                                    <div style={{ margin: \"0px 5px\" }}>日</div>\n                                </div>\n                            </div>\n                            <div style={{ display: viewstatus ? \"none\" : \"block\", color: \"red\" }}>輸入錯誤</div>\n                        </div>\n                    );\n                }\n                return (\n                    <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\", height: \"50px\" }}>\n                        <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                            {info.item}\n                        </div>\n                        <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                            {info.value[0]}\n                            <div style={{ margin: \"0px 5px\" }}>週</div>\n                            {info.value[1]}\n                            <div style={{ margin: \"0px 5px\" }}>日</div>\n                        </div>\n                    </div>\n                );\n            }\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\", height: \"50px\" }}>\n                    <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                        {info.item}\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                        {info.value}\n                    </div>\n                </div>\n            );\n        })\n        return (\n            <Modal\n                width={400}\n                title=\"填寫病床資訊\"\n                visible={this.state.visible}\n                onCancel={this.handleCancel}\n                footer={\n                    <div style={{ display: \"flex\", justifyContent: typefrom(source.type) ? 'space-between' : 'flex-end', alignItems: \"center\" }}>\n                        <Button key=\"delete\" style={typefrom(source.type) ? { border: \"1px solid rgba(208,2,27,1)\", color: \"rgba(208,2,27,1)\" } : { display: \"none\" }} onClick={this.handleCancel}>清床</Button>\n                        <div>\n                            <Button key=\"cancel\" onClick={this.handleCancel}>取消</Button>\n                            <Button key=\"ok\" type=\"primary\" onClick={() => { console.log(HID, name, sex); this.handleOk(HID, name, sex) }}>儲存</Button>\n                        </div>\n                    </div>}>\n                {dataArrayRender}\n            </Modal>\n        );\n    }\n    render() {\n        function valueFormat(value) {\n            if (value === \"\" || value === null || value === undefined) {\n                return \"--\"\n            }\n            return value.toString()\n        }\n        function valueBornWeight(value) {\n            if (value === \"\" || value === null || value === undefined || value === 0) {\n                return \"\"\n            }\n            return value.toString()\n        }\n        function statusPersion(persionstatus, QMNC, QTWER, Birthday) {\n            console.log(persionstatus)\n            if (persionstatus.length === 0) {\n                const BornWeight = Wardstate.BornWeight(QTWER, Birthday)\n                const BornWeeks = QMNC.weeks\n                const BornDays = QMNC.days\n                return {\n                    BornWeight: BornWeight,\n                    BornWeeks: BornWeeks,\n                    BornDays: BornDays\n                }\n            }\n            const Weight = Number(persionstatus[0].bweight) * 1000\n            const BornWeeks = Number(persionstatus[0].bweek)\n            const BornDays = Number(persionstatus[0].bday)\n            return {\n                BornWeight: Weight,\n                BornWeeks: BornWeeks,\n                BornDays: BornDays\n            }\n        }\n        const { data, previewmode, hbedlist } = this.props\n        const { persionstatus } = this.state\n        const source = data\n        const Birthday = source.PBIRHDT\n        const QTWER = Wardstate.XM2JSON(source.QTWPER)\n        const QMNC = Wardstate.QMNCXM2JSON(source.QMNC)\n        const Weight = Wardstate.NewestWeight(QTWER)\n        const BornWeight = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornWeight\n        const BornWeeks = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornWeeks\n        const BornDays = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornDays\n        const remark = this.state.remark\n        if (source === undefined) { return null }\n        const status = {\n            date: moment(Birthday, \"YYYYMMDD\").valueOf(),\n            week: BornWeeks,\n            day: BornDays\n        }\n        console.log(source)\n        console.log(status)\n        const AgeStatus = Wardstate.CalculateAge(status)\n        const role = Number(sessionStorage.getItem('role'))\n        console.log(role)\n        return (\n            <div>\n                <div className='wardcarddetailtitle'>\n                    <t3 style={{ color: \"rgba(0, 26, 109)\", fontSize: \"14px\", fontWeight: \"600\" }}>{bednumberformat(Number(source.HBEDNO))}</t3>\n                    <t3 style={{ color: \"rgba(0, 26, 109)\", fontSize: \"16px\", fontWeight: \"600\" }}>{source.PNAMEC.toString().trim()}</t3>\n                    <t3 style={{ color: \"rgba(0, 26, 109)\", fontSize: \"14px\", fontWeight: \"600\" }}>{source.PHISTNUM}</t3>\n                    <t3 style={{ color: \"rgba(0, 26, 109, .7)\", fontSize: \"12px\" }}>{WardCardgender(source.PSEX)}</t3>\n                    <t3 style={{ color: \"rgba(0, 26, 109, .7)\", fontSize: \"12px\" }}>{moment(Birthday, 'YYYYMMDD').format('MM/DD')}</t3>\n\n                    {/* <t3 style={{ color: \"rgba(61, 119, 181, 1)\" }}>{bednumberformat(Number(source.HBEDNO))},{source.PNAMEC.toString().trim()},{WardCardgender(source.PSEX)},{moment(Birthday, 'YYYYMMDD').format('YYYY/MM/DD')},{source.PHISTNUM}</t3> */}\n                    {role == 1 && <div onClick={this.showModal} className='wardcarddetileditbutton' style={{ cursor: \"pointer\" }}>\n                        <img src={editlogo} alt='editlogo'></img>\n                    </div>}\n                </div>\n                <div>\n                    <div className='wardinfoweeks'>\n                        <t3 style={{ color: \"rgba(0, 26, 109)\" }}>\n                            {valueFormat(BornWeeks)}+{valueFormat(BornDays)}&gt;<span style={{ fontWeight: \"900\" }}>{AgeStatus}</span>\n                        </t3>\n                        <t3 style={{ color: \"rgba(0, 26, 109)\" }}>\n                            {valueBornWeight(BornWeight)}g&gt;\n                            <span style={{ fontWeight: \"900\" }}>{valueFormat(Weight)}g</span>\n                        </t3>\n\n                        {/* <div style={{ color: \"rgba(59, 151, 225, 1)\",fontSize: \"16px\"  }}>{valueFormat(BornWeeks)}+{valueFormat(BornDays)}&rarr;{AgeStatus}</div>\n                        <div style={{ fontSize: \"12px\" }}>{valueBornWeight(BornWeight)}{valueFormat(Weight)}g</div> */}\n                        <div className='wardinforeportgroup'>\n                            <img src={fileLogo} alt='fileLogo'></img>\n                            <div style={{ fontSize: \"12px\" }}>{this.state.report}</div>\n                            <img src={file2Logo} alt='file2Logo'></img>\n                            <div style={{ fontSize: \"12px\" }}>{this.state.nonreport}</div>\n                        </div>\n                    </div>\n                    <div style={{ display: previewmode ? \"block\" : \"none\", borderBottomWidth: \"0.5px\", borderBottomColor: \"rgba(215, 238, 255, 1)\", borderBottomStyle: \"solid\" }}>\n                        <Wardcardvalue.WardCard centerdata={source.centerMonitorData} previewmode={previewmode} PHISTNUM={source.PHISTNUM} PCASENO={source.PCASENO}></Wardcardvalue.WardCard>\n                    </div>\n                    <div style={{ height: '30px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: \"0px 10px\", position: 'relative' }}>\n                        <div style={{ overflow: \"hidden\", fontSize: \"12px\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\", width: \"250px\" }}>{remark}</div>\n                        <Link className='patientviewbutton' to={{ pathname: \"/nicu/patient/\" + source.PHISTNUM, state: { \"source\": hbedlist, \"HISID\": source.PHISTNUM, \"CASEID\": source.PCASENO, \"BEDNUMBER\": source.HBEDNO, \"TYPE\": true, \"TRANSINID\": this.state.TRANSINID } }}>\n                            <centerstyle>\n                                <div style={{ fontSize: \"12px\" }}>進入病人資料頁面</div>\n                            </centerstyle>\n                        </Link>\n                    </div>\n                </div>\n                {this.Modelrender(statusPersion(persionstatus, QMNC, QTWER, Birthday))}\n            </div>\n        );\n    }\n}\n\nexport default Wardcarddetail;\n","import React, { Component } from 'react';\nimport { format_bednumber } from '../../Commonfunction'\nimport editlogo from '../../Image/svg/edit2.svg'\nimport { Modal, Input, DatePicker } from 'antd';\nimport './UnpreviewWardCardDetail.scss'\nimport { bednumberformat } from '../../Function/Wardbedfunction'\n\nclass Unpreviewwardcarddetail extends Component {\n    state = { visible: false, powerLogin: 0 };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n            databool: false,\n            data: null\n        });\n    };\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n\n    handleOk(string) {\n        console.log(string);\n\n        const bednumber = document.getElementById(\"bednumber\").value;\n        const hisnumber = document.getElementById(\"hisid\").value;\n        const birweek = document.getElementById(\"birweek\").value;\n        const birthday = string;\n        const weight = document.getElementById(\"weight\").value;\n        const statedata = {\n            \"BedNumber\": bednumber,\n            \"id\": hisnumber,\n            \"birweek\": birweek,\n            \"birthday\": birthday,\n            \"weight\": weight\n        }\n        console.log(statedata)\n        this.setState({\n            visible: false,\n            data: statedata,\n            databool: false\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    savestatus(string) {\n        console.log(string)\n    }\n\n    render() {\n        function modedisplay(mode) {\n            if (mode) {\n                return \"none\"\n            }\n            else {\n                return \"block\"\n            }\n        }\n        const number = this.props.bednumber\n        const { previewmode } = this.props\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div style={{ height: '40px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', backgroundColor: \"rgba(215, 238, 255, 1)\", padding: \"9px 10px\" }}>\n                    <t3 style={{ color: \"rgba(61, 119, 181, 1)\" }}>{format_bednumber(number)}/--</t3>\n                    <div className='wardcardeditbtn' onClick={this.showModal} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                        <img src={editlogo} alt='editlogo'></img>\n                    </div>\n                    <Modal\n                        width={270}\n                        title=\"填寫病床資訊\"\n                        visible={this.state.visible}\n                        onOk={() => this.handleOk(\"2019/12/12\")}\n                        onCancel={this.handleCancel}\n                    >\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr\", gridRowGap: \"10px\" }}>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>病床號碼:</t2>\n                                </centerstyle>\n                                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                    <div>{bednumberformat(number)}</div>\n                                </div>\n                            </div>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>病歷號碼:</t2>\n                                </centerstyle>\n                                <Input id=\"hisid_wardcard\" />\n                            </div>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>出生週數:</t2>\n                                </centerstyle>\n                                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                    <Input id='week' placeholder=\"20\" style={{ marginRight: \"5px\" }}></Input>\n                                    <t2 style={{ marginRight: \"5px\" }}>週</t2>\n                                    <Input id='days' placeholder=\"20\" style={{ marginRight: \"5px\" }}></Input>\n                                    <t2>日</t2>\n                                </div>\n                            </div>\n                            <div className='modulecontent'>\n                                <div style={{ display: 'flex', justifyContent: \"space-between\", alignItems: \"cneter\", width: \"69px\" }}>\n                                    <t2>生</t2>\n                                    <t2>日:</t2>\n                                </div>\n                                <DatePicker placeholder=\"選擇日期\" id=\"birthday\" />\n                            </div>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>出生體重:</t2>\n                                </centerstyle>\n                                <div style={{ display: 'flex' }}><Input placeholder=\"120\" id=\"weight\" />&nbsp;g</div>\n                            </div>\n                        </div>\n                    </Modal>\n                </div>\n                <div style={{ height: '30px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: \"10px\" }}>\n                    <div style={{ fontSize: '14px', color: \"black\" }}>\n                        \"無資料\"\n                    </div>\n                </div>\n                <div style={{ display: modedisplay(previewmode) }}>\n                    <div style={{ height: '30px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: \"10px\" }}></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Unpreviewwardcarddetail;\n","\nconst Month_format = (time) => {\n    switch (time) {\n        case 0:\n            return \"1\";\n        case 1:\n            return \"2\";\n        case 2:\n            return \"3\";\n        case 3:\n            return \"4\";\n        case 4:\n            return \"5\";\n        case 5:\n            return \"6\";\n        case 6:\n            return \"7\";\n        case 7:\n            return \"8\";\n        case 8:\n            return \"9\";\n        case 9:\n            return \"10\";\n        case 10:\n            return \"11\";\n        case 11:\n            return \"12\";\n        default:\n            return null;\n    }\n};\nconst format_bednumber = (number) => {\n    if (number < 10) {\n        return \"0\" + number;\n    }\n    return number;\n}\n\nexport { Month_format, format_bednumber }\n","import React, { Component } from 'react';\nimport { Input, Button } from 'antd';\nimport editlogo from '../Image/svg/Edit.svg'\nimport './Wardnote.scss'\nimport deleteimg from '../Image/svg/delete.svg'\nimport detail from '../Image/svg/details.svg'\nimport { Tooltip } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider';\nimport moment from 'moment'\n\nclass WardcardNote extends Component {\n    _isMounted = false;\n    state = {\n        editstate: false,\n        AnnoceRawData: [],\n        AnnoceDisplayData: [],\n        inputContent: undefined,\n        powerLogin: 0\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n    componentDidMount() {\n        this.onInputChange = this.onInputChange.bind(this);\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.queryAllAnnounce();\n    }\n    queryAllAnnounce() {\n        ApiProvider.getAllAnnounce()\n            .then(result => {\n                console.log(\"getAllAnnounce OK \" + JSON.stringify(result));\n                this.setState({\n                    AnnoceRawData: result.data,\n                    AnnoceDisplayData: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getAllAnnounce NG \" + JSON.stringify(err));\n            });\n    }\n    canceledit() {\n        //取消前先拿取server資料\n        this._isMounted = true\n        this.setState({\n            editstate: false,\n            AnnoceDisplayData: JSON.parse(JSON.stringify(this.state.AnnoceRawData))\n        });\n    }\n\n    okeditlist() {\n        //確定上傳\n        this.setState({\n            editstate: false\n        });\n        ApiProvider.createAnnounce(this.state.AnnoceDisplayData)\n            .then(result => {\n                console.log(\"createAnnounce OK \" + JSON.stringify(result));\n                this.queryAllAnnounce();\n            })\n            .catch(err => {\n                console.log(\"createAnnounce NG \" + JSON.stringify(err));\n            });\n    }\n\n    editlist() {\n        this.setState({\n            editstate: !this.state.editstate,\n            AnnoceDisplayData: (this.state.editstate) ? JSON.parse(JSON.stringify(this.state.AnnoceDisplayData)) : JSON.parse(JSON.stringify(this.state.AnnoceRawData))\n        });\n    }\n\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n\n    AddNewannouce() {\n        const announce = this.state.AnnoceDisplayData;\n\n        const doc = sessionStorage.getItem('user')\n        const newAnnounce = {\n            context: this.state.inputContent,\n            time: +(new Date()),\n            editor: doc + \"醫生\",\n            transinno: doc + moment().format(\"YYYYMMDDHHmmss\").toString()\n        }\n        announce.push(newAnnounce)\n        this.setState({\n            AnnoceDisplayData: announce,\n            inputContent: undefined\n        });\n    }\n\n    ondeleteannounce(element) {\n        const announce = this.state.AnnoceDisplayData;\n        const index = announce.findIndex(item => item === element);\n        announce.splice(index, 1);\n        this.setState({ AnnoceDisplayData: announce });\n    }\n    announcelist(announcelist, status) {\n        var list = []\n        if (announcelist === null || announcelist.length === 0) {\n            list.push(\n                <div className='announcelistcontext'>無公告</div>\n            )\n        }\n        for (let index = 0; index < announcelist.length; index++) {\n            const element = announcelist[index];\n            list.push(\n                <div className='announcelistcontext'>\n                    <t2>{index + 1}.{element.context}</t2>\n                    {this.editstatus(element, status)}\n                </div>\n            )\n        }\n        return list\n    }\n    editstatus(element, status) {\n        console.log(element)\n        const time = moment(element.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n        const localTime = moment.utc(time).toDate()\n        const string = element.editor + '醫師於' + moment(localTime).format(\"MM/DD HH:mm\") + '更新'\n        if (status) {\n            return (\n                <img src={deleteimg} alt='deletelogo' onClick={() => this.ondeleteannounce(element)}></img>\n            );\n        }\n        return (\n            <Tooltip placement=\"top\" title={string}>\n                <img src={detail} alt='detaillogo'></img>\n            </Tooltip>\n        );\n    }\n    render() {\n\n        function changehight(state) {\n            if (!state) {\n                return 'wardnotecontextdisedit'\n            }\n            else {\n                return 'wardnotecontextonedit'\n\n            }\n        }\n        let annData = this.state.AnnoceDisplayData\n\n        annData = annData.sort((a, b) => {\n            let tempTimeA = moment(a.time, \"YYYY-MM-DD[T]HH:mm:ss\").valueOf()\n            let tempTimeB = moment(b.time, \"YYYY-MM-DD[T]HH:mm:ss\").valueOf()\n            return tempTimeA < tempTimeB ? 1 : -1\n        })\n\n        return (\n            <div style={{ marginTop: '10px' }}>\n                <div className='wardnotetitle'>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>病房公告</t2>\n                    <div onMouseUp={() => this.editlist()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", width: \"18px\", cursor: \"pointer\" }}>\n                        <img src={editlogo} alt='editlogo'></img>\n                    </div>\n                </div>\n                <div>\n                    <div className={changehight(this.state.editstate)}>\n                        {this.announcelist(annData, this.state.editstate)}\n                    </div>\n                    <div style={{ display: this.state.editstate ? \"block\" : \"none\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"c\" }}>\n                        <div style={{ height: \"50px\", backgroundColor: \"rgba(238,238,238,1)\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                            <Input placeholder=\"新增公告內容\" style={{ marginLeft: \"16px\", width: \"315px\" }} value={this.state.inputContent} onChange={this.onInputChange} />\n                            <Button type=\"primary\" style={{ marginRight: \"16px\" }} onClick={() => this.AddNewannouce()}>\n                                新增\n                            </Button>\n                        </div>\n                        <div style={{ height: \"50px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <Button style={{ margin: \"10px\", width: \"90px\" }} onClick={() => this.canceledit()}>取消</Button>\n                            <Button type=\"primary\" style={{ margin: \"10px\", width: \"90px\" }} onClick={() => this.okeditlist()}>儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WardcardNote;\n","import React, { Component } from 'react';\nimport { Month_format } from '../Commonfunction'\n\nclass Bedinformation extends Component {\n    state = {\n        tableselect: false\n    }\n\n    SelectTruechange() {\n        this.setState({\n            tableselect: true\n        })\n    }\n\n    SelectFalsechange() {\n        this.setState({\n            tableselect: false\n        })\n    }\n\n    sendReturnSelect = (id) => {\n        const { selectkey, idkey, localtime } = this.props\n        const select = this.Selectswitch(idkey, selectkey)\n        console.log(id)\n        if (select) {\n            const data = { \"idkey\": null, \"time\": localtime }\n            this.props.parentCallback(data);\n        }\n        else {\n            this.props.parentCallback(id);\n        }\n    }\n\n    Selectswitch(id, select) {\n        console.log(id, select)\n        if (id === select) {\n            return true\n        }\n        else return false\n    }\n    render() {\n        function weekdatformat(weekday) {\n            switch (weekday) {\n                case 0:\n                    return \"日\"\n                case 1:\n                    return \"一\"\n                case 2:\n                    return \"二\"\n                case 3:\n                    return \"三\"\n                case 4:\n                    return \"四\"\n                case 5:\n                    return \"五\"\n                case 6:\n                    return \"六\"\n                default:\n                    return null\n            }\n        }\n        const { selectkey, idkey, localtime, data } = this.props\n        const day = Month_format(new Date(localtime).getMonth()) + \"/\" + new Date(localtime).getDate()\n        const weekday = new Date(localtime).getDay()\n        const Unselect_tablestyle = { height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"1px solid rgba(238,238,238,1)\", borderLeftWidth: \"0px\" }\n        const select = this.Selectswitch(idkey, selectkey)\n        console.log(select)\n        if (data === null) {\n            return (\n                <div>\n                    <div style={select ? { border: \"1px solid rgba(59, 151, 225, 1)\", backgroundColor: \"#ffe1c499\", marginTop: '-2px' } : { cursor: \"pointer\" }} onMouseUp={() => this.sendReturnSelect({ \"idkey\": idkey, \"time\": localtime })}>\n                        <div style={Unselect_tablestyle}>\n                            <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                <t2 style={{ textAlign: \"center\" }}>{day}</t2>\n                                <t2 style={{ textAlign: \"center\" }}>{weekdatformat(weekday)}</t2>\n                            </div>\n                        </div>\n                        <div style={Unselect_tablestyle}>\n                            <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                <t2 style={{ textAlign: \"center\" }}>0(12)</t2>\n                                <t2 style={{ textAlign: \"center\" }}>0%</t2>\n                            </div>\n                        </div>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                    </div>\n                    <div style={{ display: select ? \"flex\" : \"none\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ width: 0, height: 0, borderStyle: \"solid\", borderWidth: \"17.3px 10px 0 10px\", borderColor: \"rgba(59,151,225,1) transparent transparent transparent\" }}></div>\n                    </div>\n                </div>\n            );\n\n        }\n        return (\n            <div>\n                <div style={select ? { border: \"1px solid rgba(59, 151, 225, 1)\", backgroundColor: \"#ffe1c499\", marginTop: '-2px' } : { cursor: \"pointer\" }} onMouseUp={() => this.sendReturnSelect({ \"idkey\": idkey, \"time\": localtime })}>\n                    <div style={Unselect_tablestyle}>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                            <t2 style={{ textAlign: \"center\" }}>{day}</t2>\n                            <t2 style={{ textAlign: \"center\" }}>{weekdatformat(weekday)}</t2>\n                        </div>\n                    </div>\n                    <div style={Unselect_tablestyle}>\n                        <div style={{ display: \"grid\" }}>\n                            <t2 style={{ textAlign: \"center\" }}>{data.hbedcount}({parseInt(parseInt(data.hbedcount) * 100 / 12)}%)</t2>\n                        </div>\n                    </div>\n                    <t2 style={Unselect_tablestyle}>{data.transoutcount}</t2>\n                    <t2 style={Unselect_tablestyle}>{data.transincount}</t2>\n                    <t2 style={Unselect_tablestyle}>{data.rtcount}</t2>\n                    <t2 style={Unselect_tablestyle}>{data.nonrtcount}</t2>\n                    <t2 style={Unselect_tablestyle}>{data.tpncount}</t2>\n                </div>\n                <div style={{ display: select ? \"flex\" : \"none\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <div style={{ width: 0, height: 0, borderStyle: \"solid\", borderWidth: \"17.3px 10px 0 10px\", borderColor: \"rgba(59,151,225,1) transparent transparent transparent\" }}></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Bedinformation\n","import moment from 'moment';\n\nfunction HISAPI_stringtodate(datestring) {\n    function addzero(value){\n        if (value < 10) {\n            return \"0\"+value\n        }\n        return value\n    }\n    console.log(datestring)\n    const datenumber = Number(datestring)\n    console.log(datenumber)\n    const dateformat = parseInt(datenumber / 10000) + '-' + parseInt(parseInt(datenumber / 100) % 100) + '-' + addzero(parseInt(datenumber % 100))\n    // console.log(\"dateformat = \" + dateformat)\n    return dateformat\n}\n\nfunction yyyymmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + \"/\" + Monthformat(new Date(timestamp).getMonth()) + \"/\" + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction yyyymmddstring(timestamp){\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + Monthformat(new Date(timestamp).getMonth()) + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction yyyymmfirstweeksate(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    return new Date(timestamp).getFullYear() + \"/\" + Monthformat(new Date(timestamp).getMonth()) + \"/1\"\n}\n\n\n\nfunction mmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return Monthformat(new Date(timestamp).getMonth()) + '/' + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction weekdateformat(timestamp) {\n    const param = new Date(timestamp).getDay()\n    const weekarray = ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六']\n    return weekarray[param]\n}\n\nfunction weekdateformatcalender(timestamp) {\n    const param = new Date(timestamp).getDay()\n    const weekarray = ['日', '一', '二', '三', '四', '五', '六']\n    return weekarray[param]\n}\n\nfunction hhmmssformat(timestamp) {\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return addZero(new Date(timestamp).getHours()) + ':' + addZero(new Date(timestamp).getMinutes())\n}\n\nfunction hhmmssformattohalf(timestamp) {\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return addZero(new Date(timestamp).getHours()) + ':30:00'\n}\n\n\nfunction yyyymmddHHmmfromat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return new Date(timestamp).getFullYear().toString() + Monthformat(new Date(timestamp).getMonth()).toString() + Dateformat(new Date(timestamp).getDate()).toString() + addZero(new Date(timestamp).getHours()).toString() + addZero(new Date(timestamp).getMinutes()).toString()\n}\n\nfunction MMDDhhmmfromat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return Monthformat(new Date(timestamp).getMonth()) + '/' + Dateformat(new Date(timestamp).getDate()) + ' ' + addZero(new Date(timestamp).getHours()) + ':' + addZero(new Date(timestamp).getMinutes())\n}\n\n\nfunction daysdiff(newtime, oldtime) {\n    const timestampdiff = new Date(newtime).getTime() - new Date(oldtime).getTime()\n    const dissdays = timestampdiff / (24 * 60 * 60 * 1000)\n    return parseInt(dissdays)\n}\n\n\nfunction disabledDate(current) {\n    // Can not select days before today and today\n    console.log(current)\n    return current && current < moment().endOf('day');\n}\n\nfunction compareday(date) {\n    console.log(new Date(date).getTime(), new Date().getTime())\n    if (new Date(date).getTime() > new Date().getTime()) {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunction formatxArrayhalf(time, interval) {\n    var xAxisarray = []\n    if (interval === 24) {\n        for (let index = 0; index < 144; index++) {\n            xAxisarray.push(time + (index * 10 * 60 * 1000))\n        }\n    }\n    if (interval === 18) {\n        for (let index = 0; index < 18; index++) {\n            xAxisarray.push(time + (60 * 60 * 1000 * 2) + (index * 60 * 60 * 1000 * 4))\n        }\n    }\n\n    if (interval === 21) {\n        for (let index = 0; index < 21; index++) {\n            xAxisarray.push(time + (60 * 60 * 1000 * 4) + (index * 60 * 60 * 1000 * 8))\n        }\n    }\n    if (interval === 14) {\n        for (let index = 0; index < 14; index++) {\n            xAxisarray.push(time + (60 * 60 * 1000 * 12) + (index * 60 * 60 * 1000 * 24))\n        }\n    }\n    return xAxisarray\n}\n\n\nfunction formatendtime(time) {\n    const endtime = new Date(yyyymmddformat(time)).getTime() + (31 * 60 * 60 * 1000)\n    return endtime\n}\n\nfunction formatintervaldays(days, interval) {\n    //false:一天 true:三天\n    if (interval === 1) {\n        return days - (24 * 60 * 60 * 1000) * 1\n\n    }\n    if (interval === 3) {\n        return days - (24 * 60 * 60 * 1000) * 3\n\n    }\n    else {\n        return null\n    }\n}\n\nfunction datestringformat(datestring) {\n    function addzero(value){\n        if (value < 10) {\n            return \"0\"+value\n        }\n        return value\n    }\n    const datenumber = Number(datestring)\n    const dateformat = parseInt(datenumber / 10000) + '/' + parseInt(parseInt(datenumber / 100) % 100) + '/' + addzero(parseInt(datenumber % 100))\n    // console.log(\"dateformat = \" + dateformat)\n    return dateformat\n}\n\nfunction apiyyyymmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + \"-\" + Monthformat(new Date(timestamp).getMonth()) + \"-\" + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction nisapiyyyymmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + Monthformat(new Date(timestamp).getMonth()) + Dateformat(new Date(timestamp).getDate())\n}\nexport {\n    yyyymmddformat,\n    weekdateformat,\n    hhmmssformat,\n    mmddformat,\n    MMDDhhmmfromat,\n    daysdiff,\n    disabledDate,\n    compareday,\n    weekdateformatcalender,\n    yyyymmfirstweeksate,\n    hhmmssformattohalf,\n    formatxArrayhalf,\n    formatendtime,\n    formatintervaldays,\n    datestringformat,\n    yyyymmddHHmmfromat,\n    yyyymmddstring,\n    apiyyyymmddformat,\n    nisapiyyyymmddformat,\n    HISAPI_stringtodate\n}","import React, { Component } from 'react';\nimport Labviewitem from './Labviewitem'\n// import { labdata } from '../../Data/Wardviewdata'\nimport * as FiliterReg from '../../Function/FiliterReg'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport moment from 'moment'\nimport * as ApiGithub from '../../API/ApiGithub'\n\nvar MG_VALUE, PROC_VALUE;\nclass Labviewlayout extends Component {\n    state = {\n        parser: [{ \"apply_condition\": { \"name\": \"\" }, \"mappings\": [] }],\n        dummy_mg: 0,\n        dummy_pct: 0,\n\n        RESDGLU1: [],\n        RESLAB02: [],\n        RESLAB01: [],\n        RESDBGAS: [],\n        RESLAB0C: [],\n        RESSECT: [],\n\n        prePickerDate: null,\n        preHID: null,\n        preTRDT: null\n    }\n    componentDidMount() {\n        ApiGithub.getGitHubJson(\"Labview.json\")\n            .then(result => {\n                console.log(\"getGitHubJson Labview.json OK \" + JSON.stringify(result.data));\n                this.setState({\n                    parser: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getGitHubJson Labview.json NG \" + JSON.stringify(err));\n            })\n        const { PickerDate, caseinfo } = this.props\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        this.setState({ prePickerDate: PickerDate, preHID: caseinfo.HISID, preTRDT: TRDT })\n        this.getLabData(PickerDate, caseinfo.HISID, TRDT)\n    }\n\n    componentDidUpdate() {\n        const { PickerDate, caseinfo } = this.props\n        const { prePickerDate, preHID, preTRDT } = this.state\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        if (prePickerDate !== PickerDate || preHID !== caseinfo.HISID || preTRDT !== TRDT) {\n            this.setState({ prePickerDate: PickerDate, preHID: caseinfo.HISID, preTRDT: TRDT })\n            this.getLabData(PickerDate, caseinfo.HISID, TRDT)\n        }\n    }\n    getLabData(PickerDate, HID, TRDT) {\n        function selectMonthInterval(PickerDate) {\n            const timestampInterval = new Date().getTime() - PickerDate\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        const TransinDate = moment(TRDT).format(\"YYYY-MM-DD\")\n        const MonthInterval = selectMonthInterval(PickerDate)\n        ApiProvider.getStoredProcedureRESDGLU1(HID, TransinDate)\n            .then(data => { this.setState({ RESDGLU1: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESDGLU1 NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESLAB02(HID, TransinDate)\n            .then(data => { this.setState({ RESLAB02: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESLAB02 NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESLAB01(HID, TransinDate)\n            .then(data => { this.setState({ RESLAB01: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESLAB01 NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESDBGAS(HID, TransinDate)\n            .then(data => { this.setState({ RESDBGAS: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESDBGAS NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESLAB0C(HID, TransinDate)\n            .then(data => { this.setState({ RESLAB0C: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESLAB0C NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESSECT(HID, MonthInterval, \"ALL\", \"DOC3924B\")\n            .then(data => { this.setState({ RESSECT: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESSECT NG \" + JSON.stringify(err)) });\n    }\n    findLastestTargetValue(arr, target) {\n        const { caseinfo } = this.props\n        const { parser } = this.state\n        let latestTimestamp = 0;\n        let latestvalue = undefined;\n        const selected_parser = parser.find(item => item.apply_condition.name.match(target) !== null);\n        const arrayLength = arr.length;\n        arr.forEach((item, index) => {\n            ApiProvider.getStoredProcedureRESDISP(caseinfo.HISID, item.ORMM, caseinfo.CASEID, item.ORDSEQNO)\n                .then(data => {\n                    console.log(\"getStoredProcedureRESDISP OK \" + JSON.stringify(data.data));\n                    const RESDISP = data.data\n                    //const RESDISP = [{\"RECNO\":\"1\",\"PARTNO\":\"11 \",\"HISTNO\":\"45305666  \",\"ORBGNDT\":\"2019-11-12\",\"CONTENT\":\"    MG++:  (20.00)\",\"ORDSEQ\":\"1\",\"CASENO\":\"25358448\"},{\"RECNO\":\"2\",\"PARTNO\":\"11 \",\"HISTNO\":\"45305666  \",\"ORBGNDT\":\"2019-11-12\",\"CONTENT\":\"    Procalcitonin:  (25.00)\",\"ORDSEQ\":\"1\",\"CASENO\":\"25358448\"}]\n\n                    //search for target\n                    const selected_mapping = selected_parser.mappings.find(mapping => mapping.key === target)\n                    const re = new RegExp(selected_mapping.regex_str, selected_mapping.regex_flags)\n\n                    RESDISP.forEach(element => {\n                        const match = element.CONTENT.match(re)\n                        if (match !== null) {\n                            const currentTimeStr = item.ORRCPDT + \"-\" + item.ORRCPTM\n                            const currentItemTimestamp = moment(currentTimeStr.trim(), \"YYYY-MM-DD-HH.mm.ss\").valueOf()\n                            const matchValue = match[selected_mapping.position]\n\n                            if (matchValue !== \"\" && matchValue !== undefined && matchValue !== null && currentItemTimestamp > latestTimestamp) {\n                                latestvalue = matchValue\n                                if (target === \"mg\") {\n                                    MG_VALUE = latestvalue\n                                } else if (target === \"pct\") {\n                                    PROC_VALUE = latestvalue\n                                }\n                            }\n                        }\n                    })\n                    this.updateLabviewIfNeed(arrayLength, index, target)\n                })\n                .catch(err => {\n                    console.log(\"getStoredProcedureRESDISP NG \" + JSON.stringify(err));\n                    this.updateLabviewIfNeed(arrayLength, index, target)\n                });\n        })\n    }\n    updateLabviewIfNeed(arrayLength, currentIdx, target) {\n        const retryMax = 3\n        if (currentIdx === arrayLength - 1) {\n            if (target === \"mg\" && this.state.dummy_mg < retryMax) {\n                this.setState({ dummy_mg: this.state.dummy_mg + 1 })\n            } else if (target === \"pct\" && this.state.dummy_pct < retryMax) {\n                this.setState({ dummy_pct: this.state.dummy_pct + 1 })\n            }\n        }\n    }\n    TitleRender() {\n        const { Source } = this.props\n        if (Source === \"Wardview\") {\n            return null\n        }\n        else return (\n            <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                <t1 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>檢驗報告</t1>\n            </div>\n        );\n    }\n    render() {\n        function ListEndData(array) {\n            if (array.length === 0) {\n                return \"--\"\n            }\n            return array[array.length - 1]\n        }\n        // const data = labdata.data\n        const { PickerDate, Source } = this.props\n        const { RESDGLU1, RESLAB02, RESLAB01, RESDBGAS, RESSECT } = this.state\n        console.log(RESDGLU1)\n\n        const RESDGLU1LIST = FiliterReg.ListForTime(RESDGLU1, PickerDate)\n        const RESLAB02LIST = FiliterReg.ListForTime(RESLAB02, PickerDate)\n        const RESLAB01LIST = FiliterReg.ListForTime(RESLAB01, PickerDate)\n        const RESDBGASLIST = FiliterReg.ListForTime(RESDBGAS, PickerDate)\n        // const RESLAB0CLIST = FiliterReg.ListForTime(RESLAB0C, PickerDate)\n\n        const RESSECT_MG_LIST = FiliterReg.ListForTimeAndTarget(RESSECT, PickerDate, \"Mg\")\n        this.findLastestTargetValue(RESSECT_MG_LIST, \"mg\")\n\n        const RESSECT_PROC_LIST = FiliterReg.ListForTimeAndTarget(RESSECT, PickerDate, \"Procalcitonin\")\n        this.findLastestTargetValue(RESSECT_PROC_LIST, \"pct\")\n\n        const GLUFAST = ListEndData(RESDGLU1LIST.filter(function (value, index, array) {\n            return value.GLUFAST !== null\n        }))\n        const WBC = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV01 !== null\n        }))\n        const SEG = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV14 !== null\n        }))\n        const LYMP = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV15 !== null\n        }))\n        const HGB = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV03 !== null\n        }))\n        const PLATELET = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV09 !== null\n        }))\n        const NA = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV13 !== null\n        }))\n        const K = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV14 !== null\n        }))\n        const CA = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            // console.log(value.RSV15)\n            return value.RSV15 !== null\n        }))\n        const P = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV17 !== null\n        }))\n        const ALB = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV02 !== null\n        }))\n        const CRP = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV32 !== null\n        }))\n        const PH = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS07 !== null\n        }))\n        const PCO2 = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS06 !== null\n        }))\n        const BE = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS01 !== null\n        }))\n        const PO2 = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS08 !== null\n        }))\n        const BUN = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV05 !== null\n        }))\n        //02\n        const CR = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV06 !== null\n        }))\n        const ALT = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV11 !== null\n        }))\n        const AST = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV12 !== null\n        }))\n        const TBIL = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV08 !== null\n        }))\n        const DBIL = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV25 !== null\n        }))\n        const ALKP = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV09 !== null\n        }))\n        const TOTALCA = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV03 !== null\n        }))\n        const IRON = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV26 !== null\n        }))\n        const TIBC = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV27 !== null\n        }))\n        const FERRITIN = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV03 !== null\n        }))\n\n        function areainterval(source) {\n            if (source === \"Wardview\") {\n                return \"0px\"\n            }\n            else return \"10px\"\n        }\n\n        function nullvalue(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            return value.toString().trim()\n        }\n        const TitleR = this.TitleRender()\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                {TitleR}\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", gridColumnGap: areainterval(Source) }}>\n                    <div style={{ border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(GLUFAST.GLUFAST)} title={\"Glucose\"} time={GLUFAST.ORBGNDT}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(WBC.RSV01)} title={\"WBC\"} time={WBC.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(SEG.RSV14)} title={\"Seg\"} time={SEG.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(LYMP.RSV15)} title={\"Lymp\"} time={LYMP.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(HGB.RSV03)} title={\"Hgb\"} time={HGB.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PLATELET.RSV09)} title={\"Platelet\"} time={PLATELET.ORBGNDT}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"5fr 1fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(NA.RSV13)} title={\"Na\"} time={NA.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(K.RSV14)} title={\"K\"} time={K.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(CA.RSV15)} title={\"Ca\"} time={CA.ORBGNDT}></Labviewitem> {/*parse*/}\n                        <Labviewitem Source={Source} value={nullvalue(P.RSV17)} title={\"P\"} time={P.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(MG_VALUE)} title={\"Mg\"} time={\"2019-12-12\"}></Labviewitem> {/*parse*/}\n                    </div>\n                    <div style={{ border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(ALB.RSV02)} title={\"ALB\"} time={ALB.ORBGNDT}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 4fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(CRP.RSV32)} title={\"CRP\"} time={CRP.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PROC_VALUE)} title={\"PCT\"} time={\"2019-12-12\"}></Labviewitem>  {/*parse*/}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(PH.SS07)} title={\"pH\"} time={PH.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PCO2.SS06)} title={\"PCO\"} time={PCO2.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(BE.SS01)} title={\"BE\"} time={BE.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PO2.SS08)} title={\"PO\"} time={PO2.ORBGNDT}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 2fr 2fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(BUN.RSV05)} title={\"BUN\"} time={BUN.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(CR.RSV06)} title={\"Cr\"} time={CR.ORBGNDT}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(ALT.RSV11)} title={\"ALT\"} time={ALT.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(AST.RSV12)} title={\"AST\"} time={AST.ORBGNDT}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(TBIL.RSV08)} title={\"TBil\"} time={TBIL.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(DBIL.RSV25)} title={\"DBil\"} time={DBIL.ORBGNDT}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 4fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(ALKP.RSV09)} title={\"ALK-P\"} time={ALKP.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(TOTALCA.RSV03)} title={\"Total Ca\"} time={TOTALCA.ORBGNDT}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(IRON.RSV26)} title={\"Iron\"} time={IRON.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(TIBC.RSV27)} title={\"TIBC\"} time={TIBC.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={\"--\"} title={\"FeSat\"} time={\"2019-12-12\"}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(FERRITIN.RSV03)} title={\"Ferritin\"} time={FERRITIN.ORBGNDT}></Labviewitem> {/* No Data */}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Labviewlayout\n","import React, { Component } from 'react';\nimport Bedinformation from './Bedinfo'\nimport { DatePicker, Button } from 'antd';\nimport moment from 'moment';\nimport * as apiProvide from '../API/ApiProvider'\nimport { yyyymmddformat } from '../Function/Timeformat'\nimport './WardBedinformation.scss'\n\nclass Wardbedinformation extends Component {\n    state = {\n        subselectdate: null,\n        selectid: null,\n        PickerDate: moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf(),\n        bedinfo: []\n    }\n    componentDidMount() {\n        this.apiData(this.state.PickerDate)\n    }\n    apiData(PickerDate) {\n        apiProvide.getWardDebInfo(moment(PickerDate).format(\"YYYY-MM-DD\"))\n            .then(data => { console.log(data.data); this.setState({ bedinfo: data.data }) })\n            .catch(err => { console.log(err) })\n    }\n    onChangeDate = (date, datestring) => {\n        this.setState({\n            PickerDate: date.valueOf(),\n            selectid: null\n        })\n        this.apiData(this.state.PickerDate)\n    }\n    callbackFunction = (idnumber) => {\n        console.log(idnumber)\n        this.setState({\n            selectid: idnumber.idkey,\n            subselectdate: idnumber.time\n        })\n    }\n    transferListlayout(trans) {\n        const RenderCell = trans.map(function (element, index, arr) {\n            return (\n                <div className='wardbedinfoitemcontextgridRow'>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>{element.caseid}</t2>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>{element.pnamec}</t2>\n                </div>\n            );\n        })\n        return (\n            <div>\n                <div className='wardbedinfoitemcontextgridRow'>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>病歷號碼</t2>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>姓名</t2>\n                </div>\n                {RenderCell}\n            </div>\n        );\n    }\n    infoitem() {\n        const selectDateitem = this.state.subselectdate\n        const bedinfo = this.state.bedinfo\n        const filterdate = bedinfo.filter(function (info, index) {\n            const tempDate = moment(info.Date, 'YYYYMMDD')\n            return yyyymmddformat(tempDate) === yyyymmddformat(selectDateitem)\n        })\n        console.log(filterdate)\n\n        if (this.state.selectid === null) {\n            return null\n        }\n        else {\n            const inType = filterdate.length === 0 ? 0 : filterdate[0].transoutIncountperson.length\n            const outType = filterdate.length === 0 ? 0 : filterdate[0].transoutOutcountperson.length\n\n            const transIn = filterdate.length === 0 ? 0 : filterdate[0].transoutIncountperson\n            const transOut = filterdate.length === 0 ? 0 : filterdate[0].transoutOutcountperson\n            // console.log(inType)\n            // console.log(outType)\n            // console.log(transIn)\n            // console.log(transOut)\n            return (\n                <div>\n                    {/* <div className='wardbedinfoitemtriangle'>\n                        <div className='triangle'></div>\n                    </div> */}\n                    <div className='wardbedinfoitemcontext'>\n                        <div className='wardbedinfoitemcontextgrid'>\n                            <div>\n                                <t2 className='wardbedinfoitemcontexttitle'>轉入病人清單</t2>\n                                <div className='wardbedinfoitemcontextgridlayout'>\n                                    {inType === 0 ? <div className='nopatient'>無病人</div> : this.transferListlayout(transIn)}\n                                </div>\n                            </div>\n                            <div>\n                                <t2 className='wardbedinfoitemcontexttitle'>轉出病人清單</t2>\n                                <div className='wardbedinfoitemcontextgridlayout'>\n                                    {outType === 0 ? <div className='nopatient'>無病人</div> : this.transferListlayout(transOut)}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n            // }\n        }\n\n    }\n    bedinfotitle() {\n        const maparray = ['日期', '佔床數', '轉出', '轉入', '侵入式呼吸器', '非侵入式呼吸器', '開立PN']\n        const title = maparray.map(function (info, index) {\n            return (\n                <div className='wardbedinfotablerowtitle'>\n                    <t2>{info}</t2>\n                </div>\n            );\n        })\n        return title\n    }\n    weekbedinfo() {\n        var infolist = []\n        const infoList = this.state.bedinfo\n        const dateTime = this.state.PickerDate\n        console.log(infoList)\n        for (let i = 0; i < 7; i++) {\n            const localtime = dateTime - (i * 24 * 60 * 60 * 1000);\n            const filterdate = infoList.filter(function (info, index) {\n                const tempDate = moment(info.Date, 'YYYYMMDD').valueOf()\n                return tempDate === localtime\n            })\n            if (filterdate.length === 0) {\n                infolist.push(\n                    <div onClick={() => { console.log(i) }}>\n                        <Bedinformation data={null} key={i} localtime={localtime} selectkey={this.state.selectid} idkey={i} parentCallback={this.callbackFunction}></Bedinformation>\n                    </div>\n                )\n            }\n            else {\n                infolist.push(\n                    <div onClick={() => { console.log(i) }}>\n                        <Bedinformation data={filterdate[0]} key={i} localtime={localtime} selectkey={this.state.selectid} idkey={i} parentCallback={this.callbackFunction}></Bedinformation>\n                    </div>\n                )\n            }\n        }\n        infolist.reverse()\n        return infolist\n\n    }\n\n    trainDay = (e) => {\n        // const { caseinfo } = this.props\n        const { PickerDate } = this.state\n        // const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        // const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                // const bTemp = bTime - (6 * day)\n                // bronDate <= bTemp && this.onChange(moment(bTime))\n                this.onChangeDate(moment(bTime))\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD'))\n                this.onChangeDate(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= aTemp && this.onChangeDate(moment(aTime))\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        return (\n            <div style={{ marginTop: \"10px\" }}>\n                <div className='wardbrdinfomationtitle'>\n                    <centerstyle>\n                        <t2 style={{ fontSize: \"16px\", color: \"rgba(0, 0, 0, .7)\" }}>病房每日統計</t2>\n                        <t2 style={{ fontSize: \"16px\", fontStyle: \"italic\", color: \"rgba(0, 0, 0, .7)\", paddingLeft: \"10px\" }}>每日上午七點統計</t2>\n                    </centerstyle>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"140px 120px\", gridColumnGap: \"5px\" }}>\n                        <DatePicker showToday={true} disabledDate={(current) => { return current && current > moment().startOf('day') }} value={moment(this.state.PickerDate)} format={\"YYYY/MM/DD\"} onChange={this.onChangeDate} allowClear={false} />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\", marginLeft: \"10px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                    </div>\n                </div>\n                <div className='wardbedinformationcontext'>\n                    <div>\n                        {this.bedinfotitle()}\n                    </div>\n                    {this.weekbedinfo()}\n                </div>\n                {this.infoitem()}\n            </div>\n        );\n    }\n}\n\nexport default Wardbedinformation;\n","import React, { Component } from 'react';\nimport detaillogo from '../Image/svg/details.svg'\nimport editlogo from '../Image/svg/Edit.svg'\nimport { Tooltip, Input, Button } from 'antd';\nimport './Schedule_event.scss'\nimport * as ApiProvider from '../API/ApiProvider';\n//資料\n// import { eventdata } from '../jsonResponse'\nimport moment from 'moment';\n\nclass Schedule_event_list extends Component {\n    state = {\n        detailstate: \"none\",\n        // pressitemstate: \"all\",\n        items_interval: 0,\n        powerLogin: 0,\n        EditMode: false,\n        inputContent: '',\n        selSchedule: '排程',\n\n        Scheduledata: [],\n        status: false,\n        PickerDate: moment().valueOf(),\n        TRANSINID: null\n    }\n\n    querySchedule(time, ID) {\n        const st = moment(moment(time).format(\"YYYY/MM/DD\"), \"YYYY/MM/DD\").valueOf()\n        const et = moment(moment(time).format(\"YYYY/MM/DD\"), \"YYYY/MM/DD\").valueOf() + (24 * 60 * 60 * 1000)\n        console.log(ID, st, et)\n        ApiProvider.getOnePatientSchedule(ID, st, et)\n            .then(data => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n                this.setState({ Scheduledata: data.data })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }\n\n    queryALLSchedule() {\n        ApiProvider.getAllSchedule()\n            .then(data => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n                this.setState({ Scheduledata: data.data })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }\n    componentDidMount() {\n        this.onInputChange = this.onInputChange.bind(this);\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        const source = this.props.source\n        if (source === 1) {\n            const ID = this.props.caseinfo.TRANSINID\n            const date = this.props.PickerDate\n            console.log(this.props.caseinfo)\n            if (ID === null) {\n\n            }\n            else {\n                this.setState({\n                    PickerDate: date,\n                    TRANSINID: ID\n                })\n                this.querySchedule(date, ID)\n            }\n        }\n        else {\n            //get ALL\n            this.queryALLSchedule()\n        }\n\n    }\n\n    componentDidUpdate() {\n        const source = this.props.source\n        if (this.state.status) {\n            this.setState({ status: false })\n            if (source === 1) {\n                const ID = this.props.caseinfo.TRANSINID\n                this.querySchedule(this.state.PickerDate, ID)\n            }\n            else {\n                //get ALL\n                this.queryALLSchedule()\n            }\n        }\n        const propsDate = this.props.PickerDate\n        const stateDate = this.state.PickerDate\n        if (propsDate !== stateDate) {\n            this.setState({ PickerDate: propsDate })\n            if (source === 1) {\n                const ID = this.props.caseinfo.TRANSINID\n                console.log(moment(propsDate).format(\"YYYYMMDDHHmmss\"))\n                console.log(moment(stateDate).format(\"YYYYMMDDHHmmss\"))\n                this.querySchedule(propsDate, ID)\n            }\n            else {\n                //get ALL\n            }\n        }\n    }\n    selSchedule(value) {\n        this.setState({ selSchedule: value })\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString()\n        const writter = sessionStorage.getItem(\"user\")\n        const name = this.props.caseinfo.PBASINGNINFO.PNAMEC\n        const hisid = this.props.caseinfo.HISID\n        ApiProvider.createPatientSchedule(this.props.caseinfo.PLOCSTART.HBEDNO, this.state.inputContent, timeNowStr, this.props.caseinfo.TRANSINID, this.state.selSchedule, writter, name, hisid)\n            .then(data => {\n                console.log(\" OK \" + JSON.stringify(data.data))\n                this.setState(\n                    {\n                        EditMode: false,\n                        inputContent: undefined,\n                        status: true\n                    })\n            })\n            .catch(err => {\n                console.log(\" Err \" + JSON.stringify(err))\n            })\n    }\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    timechange(timestamp) {\n        const changetime = new Date(timestamp).getHours() + \":\" + new Date(timestamp).getMinutes()\n        return changetime\n    }\n\n    // pressbtn(pressitem) {\n    //     this.setState(\n    //         {\n    //             pressitemstate: pressitem\n    //         }\n    //     );\n    // }\n    listevent() {\n        // var eventdatalist = eventdata\n        const scheduleData = this.props.data;\n        console.log(scheduleData)\n\n\n        // function itemchange(changeitem) {\n        //     switch (changeitem) {\n        //         case \"事件\":\n        //             return \"事\"\n        //         case \"排程\":\n        //             return \"排\"\n        //         default:\n        //             return \"\"\n        //     }\n        // }\n\n        // function checkbackground(string) {\n        //     switch (string) {\n        //         case \"排程\":\n        //             return \"rgba(124,179,5,1)\"\n        //         case \"事件\":\n        //             return \"rgba(124,179,5,1)\"\n        //         default:\n        //             return \"rgba(124,179,5,1)\"\n        //     }\n        // }\n\n        // function scheduleList(BtnType) {\n        //     if (BtnType === \"all\") {\n        //         return ScheduleList\n        //     }\n        //     const scheduleListFilter = ScheduleList.filter(function (info, index, arr) {\n        //         return info.type === BtnType\n        //     })\n        //     return scheduleListFilter\n        // }\n        // const eventstate = this.state.pressitemstate\n        let ScheduleList = this.state.Scheduledata\n        // const patientdata = this.props.caseinfo\n        // console.log(this.props)\n        if (ScheduleList.length === 0) {\n            return (<div>本日無排程</div>);\n        }\n        // const RenderData = scheduleList(eventstate)\n\n        ScheduleList = ScheduleList.sort((a, b) => {\n            let tempTimeA = moment(moment(a.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss'), \"YYYYMMDD\").valueOf()\n            let tempTimeB = moment(moment(b.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss'), \"YYYYMMDD\").valueOf()\n            return tempTimeA < tempTimeB ? 1 : -1\n        })\n\n        const CellRender = ScheduleList.map(function (info, index, arr) {\n            const time = moment(info.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n            const localTime = moment.utc(time).toDate()\n            const text = <div>{info.writter}醫師於{moment(localTime).format(\"YYYY/MM/DD HH:mm:ss\")}更新</div>\n            return (\n                <div key={index} className='CellLayout'>\n                    <div className='Context'>\n                        <div style={{ height: '30px', width: \"60px\", borderRadius: \"4px\", backgroundColor: \"rgba(124,179,5,1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <t2 style={{ color: 'white' }}>床{info.bednumber}</t2>\n                            {/* itemchange(info.type) */}\n                        </div>\n                        <div style={{ fontSize: \"16px\" }}>{info.name} {moment(localTime).format(\"HH:mm\")} {info.context}</div>\n                    </div>\n                    <Tooltip placement=\"right\" title={text}>\n                        <div>\n                            <img src={detaillogo} alt='detaillogo'></img>\n                        </div>\n                    </Tooltip>\n                </div>\n            );\n        })\n        return CellRender\n    }\n\n\n    //測驗項目功能_區間按鈕樣式\n    // SwitchTestItemInterval(testiteminterval) {\n    //     const stylestate = this.state.pressitemstate\n    //     if (testiteminterval === stylestate) {\n    //         return 'buttonselect'\n    //     }\n    //     else return 'buttonUnselect'\n    // }\n    //測驗項目功能_區間按鈕選擇\n    Onchangetimeinterval(changestate) { this.setState({ items_interval: changestate }) }\n    EditControl() {\n        const edit = this.props.editstatus\n        if (edit) {\n            return (\n                <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                    <img src={editlogo} alt=\"editlogo\" />\n                </div>\n            );\n        }\n        return null\n    }\n    render() {\n        const { title } = this.props\n        const EditButton = this.EditControl()\n        return (\n            <div className='ScheduleEventLayout'>\n                <div className='ScheduleEventTitle'>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t2>\n                    {EditButton}\n                </div>\n                <div className='ScheduleEventContext'>\n                    <div className='ContextList'>\n                        {this.listevent()}\n                    </div>\n                </div>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        {/* <Select defaultValue={this.state.selSchedule} placeholder='選擇' style={{ width: 150 }} onChange={this.selSchedule.bind(this)}>\n                            <Option value='排程'>排程</Option>\n                            <Option value='事件'>事件</Option>\n                        </Select> */}\n                        <div value='排程' style={{ display: \"grid\", width: 150, height: \"32px\", justifyContent: \"center\", alignItems: \"center\", border: \"1px solid #d9d9d9\", borderRadius: \"4px\", marginRight: \"5px\" }}>排程</div>\n                        <Input placeholder=\"輸入當日內容\" value={this.state.inputContent} onChange={this.onInputChange}></Input>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Schedule_event_list\n","import React, { Component } from 'react';\nimport Schedule_event_list from '../Module/Schedule_event'\n\nclass Wardschedule extends Component {\n\n    render() {\n        return (\n            <Schedule_event_list source={this.props.source} title=\"今日排程\" data={this.props.scheduleData} editstatus={this.props.editstatus} />\n        );\n    }\n}\n\n\nexport default Wardschedule\n","import React, { Component } from 'react';\nimport WardcardNote from './Wardnote'\nimport Wardbedinformation from './WardBedinformation'\nimport Wardschedule from './Wardschedule'\nimport './Wardinfoindex.scss'\n// import * as ApiProvider from '../API/ApiProvider';\n\n// const SCHEDULE_TYPE_EVENT = \"事件\";\n\nclass Wardinfoindex extends Component {\n    render() {\n        return (\n            <div className='Wardinfoindexcontent'>\n                <div style={{ fontSize: \"18px\", color: \"rgba(0, 0, 0, .7)\", fontWeight: \"600\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>NICU總覽</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"5px\" }}>\n                    <WardcardNote></WardcardNote>\n                    <Wardschedule source={0} editstatus={false}></Wardschedule>\n                </div>\n                <Wardbedinformation></Wardbedinformation>\n            </div>\n        );\n    }\n}\n\nexport default Wardinfoindex;\n","// Get api\n\n\n\n//資料更新時間\nconst updatetime = {\n    'time': 1567051200000\n}\n\nconst eventdata = [\n    {\n        \"item\": \"schedule\",\n        \"time\": 1565748000000,\n        \"result\": \"手術前檢查\",\n        \"name\": \"林博偉\",\n        \"bednumber\": \"01\",\n        \"writter\": \"林天財\"\n    },\n    {\n        \"item\": \"event\",\n        \"time\": 1565748000000,\n        \"result\": \"傷口變大了\",\n        \"name\": \"王添財\",\n        \"bednumber\": \"02\",\n        \"writter\": \"林天財\"\n    }\n]\n\n//Ward_bed_vitalData_last POST\nconst ward_bed_lastData = [\n    {\n        \"MedicalNumber\": \"123456789\",\n        \"Data\": {\n            \"HR\": 120,\n            \"ABP1\": 45,\n            \"ABP2\": 30,\n            \"ABP3\": 35,\n            \"SpO2\": 96,\n            \"BT\": 37.5,\n            \"RR\": 22\n        },\n        \"Status\": {\n            \"Ventilator\": false,\n            \"TPN\": true,\n            \"NPO\": false,\n            \"ECMO\": false,\n            \"Antibiotics\": false,\n            \"Hemodialysis\": false,\n            \"Foley\": false,\n            \"Drain\": false\n        }\n    },\n    {\n        \"MedicalNumber\": \"987654321\",\n        \"Data\": {\n            \"HR\": 120,\n            \"ABP1\": 45,\n            \"ABP2\": 30,\n            \"ABP3\": 35,\n            \"SpO2\": 96,\n            \"BT\": 37.5,\n            \"RR\": 22\n        }\n    },\n    {\n        \"MedicalNumber\": \"123454321\",\n        \"Data\": {\n            \"HR\": 120,\n            \"ABP1\": 45,\n            \"ABP2\": 30,\n            \"ABP3\": 35,\n            \"SpO2\": 96,\n            \"BT\": 37.5,\n            \"RR\": 22\n        }\n    }\n]\n\nconst WardInfo = {\n    UpdateTime: 1567051200000,\n    Director: \"林又新\",\n    HeadNurse: \"鄭麗貞\",\n    BedTotal: 12,\n    SignBed: 7,\n    EmptyBed: 9,\n    TransferBed: 8,\n    NewPatient: 2,\n    Ventilator: 1,\n    NPO: 7,\n    TPN: 4,\n    ECMO: 8,\n    Antibiotics: 6,\n    Hemodialysis: 1,\n    Announcement: [\n        {\n            time: 1567051200000,\n            text: \"7/10 王大明醫師請假，下午請李小華醫師cover ，6/30XXX醫師留\",\n            writter: \"張大帥\"\n        },\n        {\n            time: 1567051250000,\n            text: \"「超音波用完請記得歸還原位」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        }\n    ]\n}\nconst labdata = [\n    [{ title: \"Glucose\", score: 77, date: \"2019/01/01\" }],\n    [{ title: \"WBC\", score: 19647, date: \"Seg 59%2019/01/01\" }],\n    [{ title: \"WBC\", score: 14.8, date: \"2019/01/01\" }],\n    [{ title: \"Platelet\", score: 125, date: \"2019/01/01\" }],\n    [\n        { title: \"Na+\", score: 125, date: \"2019/01/01\" },\n        { title: \"K+\", score: 125, date: \"2019/01/01\" },\n        { title: \"Ca2+\", score: 125, date: \"2019/01/01\" },\n        { title: \"P\", score: 125, date: \"2019/01/01\" },\n        { title: \"Mg2+\", score: 125, date: \"2019/01/01\" },\n    ],\n    [\n        { title: \"CRP\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Procalcitionin\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Current Antibiotics\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Bun\", score: 125, date: \"2019/01/01\" },\n        { title: \"Cr\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"ALT\", score: 125, date: \"2019/01/01\" },\n        { title: \"AST\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"TBIL\", score: 125, date: \"2019/01/01\" },\n        { title: \"D.Bil\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"ALKP\", score: 125, date: \"2019/01/01\" },\n        { title: \"Total Ca\", score: 125, date: \"2019/01/01\" },\n        { title: \"LDH\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Iron\", score: 125, date: \"2019/01/01\" },\n        { title: \"TIBC\", score: 125, date: \"2019/01/01\" },\n        { title: \"FeSat\", score: 125, date: \"2019/01/01\" },\n        { title: \"Ferritin\", score: 125, date: \"2019/01/01\" }\n    ]\n]\nconst jsonResponse = [\n    {\n        \"HISID\": \"H1234567\",\n        \"CASEID\": \"C1234567\",\n        \"name\": \"吳大胖之女\",\n        \"gender\": 1,\n        \"birthday\": \"2019/11/11\",\n        \"bednumber\": 1,\n        \"pregnancy\": \"2019/11/10\",\n        \"weightbirth\": 1400,\n        \"weight\": 2300,\n        'report': 3,\n        'nonreport': 3,\n        'note': '隨時注意病人血壓狀態隨時注意病人血壓狀態',\n        'type':'NIS',\n        'MainDoctor':'張大春',\n        'IcuInTime':'2019/11/11'\n    },\n    {\n        \"HISID\": \"H9876543\",\n        \"CASEID\": \"C12345622\",\n        \"name\": \"吳大胖之女\",\n        \"gender\": 1,\n        \"birthday\": \"2019/11/11\",\n        \"bednumber\": 2,\n        \"pregnancy\": \"2019/11/10\",\n        \"weightbirth\": 1400,\n        \"weight\": 2300,\n        'report': 3,\n        'nonreport': 3,\n        'note': '隨時注意病人血壓狀態隨時注意病人血壓狀態',\n        'type':'Custom',\n        'MainDoctor':'張大春',\n        'IcuInTime':'2019/11/11'\n    }\n]\n\n//Wardview TCP data\nconst centerrowdata = {\n    \"id\": 20190817001,\n    \"data\": {\n        \"Weight\": 5000,\n        \"WeightDif\": 700,\n        \"BP\": [\n            {\n                \"time\": 1565395200,\n                \"DBP\": 60,\n                \"SBP\": 90\n            }\n        ],\n        \"HR\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"RR\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"BT\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"Urine\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"Suger\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"SP\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ]\n    }\n}\n\nconst growdata = {\n    Male_befor: [\n        { y: 22, min: 420, max: 600 },\n        { y: 23, min: 470, max: 700 },\n        { y: 24, min: 510, max: 800 },\n        { y: 25, min: 570, max: 900 },\n        { y: 26, min: 610, max: 1040 },\n        { y: 27, min: 700, max: 1200 },\n        { y: 28, min: 790, max: 1340 },\n        { y: 29, min: 870, max: 1520 },\n        { y: 30, min: 1000, max: 1740 },\n        { y: 31, min: 1120, max: 2000 },\n        { y: 32, min: 1300, max: 2240 },\n        { y: 33, min: 1500, max: 2500 },\n        { y: 34, min: 1700, max: 2800 },\n        { y: 35, min: 1960, max: 3040 },\n        { y: 36, min: 2180, max: 3300 },\n        { y: 37, min: 2400, max: 3500 },\n        { y: 38, min: 2600, max: 3780 },\n        { y: 39, min: 2810, max: 3980 },\n        { y: 40, min: 3000, max: 4200 },\n        { y: 41, min: 3200, max: 4440 },\n        { y: 42, min: 3400, max: 4700 },\n        { y: 43, min: 3600, max: 5000 },\n        { y: 44, min: 3800, max: 5270 }\n    ],\n    FeMale_before: [\n        { y: 22, min: 400, max: 580 },\n        { y: 23, min: 430, max: 640 },\n        { y: 24, min: 490, max: 730 },\n        { y: 25, min: 550, max: 850 },\n        { y: 26, min: 580, max: 1000 },\n        { y: 27, min: 630, max: 1120 },\n        { y: 28, min: 700, max: 1300 },\n        { y: 29, min: 800, max: 1500 },\n        { y: 30, min: 900, max: 1700 },\n        { y: 31, min: 1050, max: 1910 },\n        { y: 32, min: 1200, max: 2180 },\n        { y: 33, min: 1400, max: 2400 },\n        { y: 34, min: 1600, max: 2680 },\n        { y: 35, min: 1850, max: 2930 },\n        { y: 36, min: 2050, max: 3200 },\n        { y: 37, min: 2300, max: 3490 },\n        { y: 38, min: 2480, max: 3700 },\n        { y: 39, min: 2680, max: 3900 },\n        { y: 40, min: 2820, max: 4100 },\n        { y: 41, min: 2980, max: 4300 },\n        { y: 42, min: 3150, max: 4520 },\n        { y: 43, min: 3300, max: 4740 },\n        { y: 44, min: 3500, max: 5000 }\n    ],\n    Male_after: [\n        { y: 0, min: 2500, max: 4300 },\n        { y: 1, min: 2600, max: 4500 },\n        { y: 2, min: 2800, max: 4900 },\n        { y: 3, min: 3100, max: 5200 },\n        { y: 4, min: 3400, max: 5600 },\n        { y: 5, min: 3600, max: 5900 },\n        { y: 6, min: 3800, max: 6300 }\n    ],\n    FeMale_after: [\n        { y: 0, min: 2400, max: 4200 },\n        { y: 1, min: 2500, max: 4400 },\n        { y: 2, min: 2700, max: 4600 },\n        { y: 3, min: 2900, max: 5000 },\n        { y: 4, min: 3100, max: 5300 },\n        { y: 5, min: 3300, max: 5600 },\n        { y: 6, min: 3500, max: 5900 }\n    ]\n}\n\nconst Note_data = [\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 }\n]\n\nconst todo_data = [\n    {\n        Time: 1566287810473,\n        Content: \"幫大明量體重\",\n        Flag: true,\n        Editor: \"修改者\"\n    },\n    {\n        Time: 1566287810473,\n        Content: \"幫大明量體重\",\n        Flag: true,\n        Editor: \"修改者\"\n    },\n    {\n        Time: 1566287810473,\n        Content: \"幫大明量體重\",\n        Flag: true,\n        Editor: \"修改者\"\n    }\n]\n\n\nexport { jsonResponse, centerrowdata, WardInfo, updatetime, ward_bed_lastData, labdata, eventdata, growdata, Note_data, todo_data };","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { growdata } from '../jsonResponse'\nimport moment from 'moment';\n\n//40週後\nclass WardlifeChart extends Component {\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    drawChart() {\n        const { gender, svg_key, weightList, grewinfo } = this.props\n        const width = (window.screen.availWidth - 650) / 2, height = 350\n        //var d = new Date('2014,12,01,12:16:05');\n        //var vertigo = datarelease();\n        console.log(grewinfo)\n        if (grewinfo === null || grewinfo === undefined) {\n            return null\n        }\n        const bornweeks = Number(grewinfo.WEEK_BORN)\n        const borndays = Number(grewinfo.DAY_BORN)\n        const Birthday = grewinfo.BIRTHDAY\n        const pregencyTimestamp = moment(Birthday, \"YYYYMMDD\").valueOf() - ((bornweeks * 7) + borndays) * 24 * 60 * 60 * 1000\n\n\n        function tickValues(growdata, gender) {\n            if (gender === 'M' || gender === '1') {\n                console.log(Row)\n                const Row = growdata.Male_befor\n                return [Row[Row.length - 1].min, Row[Row.length - 1].max]\n            }\n            const Row = growdata.FeMale_before\n            console.log(Row)\n            return [Row[Row.length - 1].min, Row[Row.length - 1].max]\n        }\n\n        const tick = tickValues(growdata, gender)\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([1500, 7000])\n            .range([height, 0])\n\n        var x = d3.scaleLinear()\n            .domain([22, 44])\n            .range([0, width])\n\n\n        var yAxis = d3.axisLeft(y)\n            .ticks(10)\n            .tickSize(0, 0)\n            .tickPadding(10)\n            .tickFormat(function (d, index) { return index === 11 ? d + \"(g)\" : d });\n\n\n        var xAxis = d3.axisTop(x)\n            .ticks(14)\n            .tickSize(0, 0)\n            .tickPadding(-15)\n            .tickFormat(function (d, index) { return d + 'W'; });\n\n        var yRightAxis = d3.axisLeft(y)\n            .tickValues(tick)\n            .tickSize(0, 0)\n            .tickPadding(-40)\n            .tickFormat(function (d, index) {\n                console.log(index)\n                if (index === 0) {\n                    return \"10th%\"\n                }\n                if (index === 1) {\n                    return \"90th%\"\n                }\n                return null\n            });\n        var svg = d3\n            .select(\"#\" + svg_key)\n            .style(\"height\", \"400px\")\n            .style(\"width\", \"100%\")\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 20 + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(\" + 0 + \", \" + height + \")\");\n\n        svg.append(\"g\")\n            .call(yRightAxis)\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(\" + width + \", \" + 0 + \")\");\n\n        for (let index = 0; index < 13; index++) {\n            const number = index * 500 + 1000\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(number))\n                .attr('x2', width)\n                .attr('y2', y(number))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n\n        }\n\n        // for (let index = 0; index < 13; index++) {\n        //     const number = index * 500\n        //     svg.append('line')\n        //         .attr('x1', 0)\n        //         .attr('y1', y(number))\n        //         .attr('x2', width)\n        //         .attr('y2', y(number))\n        //         .style('stroke', 'rgba(187, 187, 187, 1)')\n        //         .style('stroke-width', 1)\n        //         .style('stroke-dasharray', 5.5);\n        // }\n\n        for (let index = 22; index < 45; index++) {\n            if (index % 2 == 0) {\n                svg.append('line')\n                    .attr('x1', x(index))\n                    .attr('y1', 0)\n                    .attr('x2', x(index))\n                    .attr('y2', height)\n                    .style('stroke', 'rgba(187, 187, 187, 1)')\n                    .style('stroke-width', 1)\n                    .style('stroke-dasharray', 5.5);\n            }\n        }\n\n        if (gender === 'M' || gender === '1') {\n            for (let index = 0; index < growdata.Male_befor.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_befor[index].y))\n                    .attr('y1', y(growdata.Male_befor[index].min))\n                    .attr('x2', x(growdata.Male_befor[index + 1].y))\n                    .attr('y2', y(growdata.Male_befor[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 1.5);\n            }\n\n            for (let index = 0; index < growdata.Male_befor.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_befor[index].y))\n                    .attr('y1', y(growdata.Male_befor[index].max))\n                    .attr('x2', x(growdata.Male_befor[index + 1].y))\n                    .attr('y2', y(growdata.Male_befor[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 1.5);\n            }\n        }\n        else {\n            for (let index = 0; index < growdata.FeMale_before.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_before[index].y))\n                    .attr('y1', y(growdata.FeMale_before[index].min))\n                    .attr('x2', x(growdata.FeMale_before[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_before[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 1.5);\n            }\n\n            for (let index = 0; index < growdata.FeMale_before.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_before[index].y))\n                    .attr('y1', y(growdata.FeMale_before[index].max))\n                    .attr('x2', x(growdata.FeMale_before[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_before[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 1.5);\n            }\n        }\n        const datasource = weightList\n        console.log(datasource)\n        //x 週數 y體重 NIS\n        for (let index = 0; index < datasource.length; index++) {\n            const element = datasource[index];\n            const BornDay = element.rec_dat.toString().trim()\n            const BornTime = element.rec_tim.toString().trim()\n            const time = BornDay + BornTime\n            const weighttimestamp = moment(time, \"YYYYMMDDHHmm\").valueOf() //體重時間\n            const weeks = (weighttimestamp - pregencyTimestamp) / (7 * 24 * 60 * 60 * 1000) //體重週數\n            if (weeks < 22) {\n                continue\n            }\n            if (weeks > 44) {\n                continue\n            }\n            svg.append('circle')\n                .attr('cx', x(weeks))\n                .attr('cy', y(Number(element.value2) * 1000))\n                .attr('r', 3)\n                .style('fill', 'green')\n        }\n\n\n    }\n\n    render() {\n        const { id_key, svg_key } = this.props\n        return (\n            <div id={id_key}>\n                <svg id={svg_key}></svg>\n            </div>\n        );\n    }\n}\n\nexport default WardlifeChart;","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { growdata } from '../jsonResponse'\nimport moment from 'moment'\n\n//40週前\nclass Wardmonthafter extends Component {\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    drawChart() {\n        const { gender, svg_key, weightList, grewinfo } = this.props\n        const width = (window.screen.availWidth - 650) / 2, height = 350\n        console.log(grewinfo)\n        if (grewinfo === null || grewinfo === undefined) {\n            return null\n        }\n        const Birthday = grewinfo.BIRTHDAY\n        const pregencyTimestamp = moment(Birthday, \"YYYYMMDD\").valueOf()\n        //var vertigo = datarelease();\n\n        function tickValues(growdata, gender) {\n            if (gender === 'M' || gender === '1') {\n                console.log(Row)\n                const Row = growdata.Male_after\n                return [Row[Row.length - 1].min, Row[Row.length - 1].max]\n            }\n            const Row = growdata.FeMale_after\n            console.log(Row)\n            return [Row[Row.length - 1].min, Row[Row.length - 1].max]\n\n        }\n\n        const tick = tickValues(growdata, gender)\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([1500, 7000])\n            .range([height, 0])\n\n\n\n        var x = d3.scaleLinear()\n            .domain([0, 6])\n            .range([0, width])\n\n        var yAxis = d3.axisLeft(y)\n            .ticks(10)\n            .tickSize(0, 0)\n            .tickPadding(10)\n            .tickFormat(function (d, index) { return index === 11 ? d + \"(g)\" : d });\n\n        var yRightAxis = d3.axisLeft(y)\n            .tickValues(tick)\n            .tickSize(0, 0)\n            .tickPadding(-40)\n            .tickFormat(function (d, index) {\n                if (index === 0) {return \"10th%\"}\n                if (index === 1) {return \"90th%\"}\n                return null\n            });\n\n\n        var xAxis = d3.axisTop(x)\n            .ticks(6)\n            .tickSize(0, 0)\n            .tickPadding(-15)\n            .tickFormat(function (d) {\n                return d + \"m\";\n            });\n\n\n        var svg = d3\n            .select(\"#\" + svg_key)\n            .style(\"height\", \"400px\")\n            .style(\"width\", \"100%\")\n            // .select(\"svg\")\n            // .attr(\"viewBox\", [0, 0, width, height])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 20 + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(\" + 0 + \", \" + height + \")\");\n\n\n        svg.append(\"g\")\n            .call(yRightAxis)\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(\" + width + \", \" + 0 + \")\");\n\n        for (let index = 0; index < 7; index++) {\n            svg.append('line')\n                .attr('x1', x(index))\n                .attr('y1', 0)\n                .attr('x2', x(index))\n                .attr('y2', height)\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n\n        }\n\n        for (let index = 0; index < 13; index++) {\n            const number = index * 500 + 1000\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(number))\n                .attr('x2', width)\n                .attr('y2', y(number))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n\n        }\n\n        // for (let index = 22; index < 45; index++) {\n        //     svg.append('line')\n        //         .attr('x1', x(index))\n        //         .attr('y1', 0)\n        //         .attr('x2', x(index))\n        //         .attr('y2', height)\n        //         .style('stroke', 'rgba(187, 187, 187, 1)')\n        //         .style('stroke-width', 1)\n        //         .style('stroke-dasharray', 5.5);\n        // }\n\n        if (gender === 'M' || gender === '1') {\n            for (let index = 0; index < growdata.Male_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_after[index].y))\n                    .attr('y1', y(growdata.Male_after[index].min))\n                    .attr('x2', x(growdata.Male_after[index + 1].y))\n                    .attr('y2', y(growdata.Male_after[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 1.5);\n            }\n\n            for (let index = 0; index < growdata.Male_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_after[index].y))\n                    .attr('y1', y(growdata.Male_after[index].max))\n                    .attr('x2', x(growdata.Male_after[index + 1].y))\n                    .attr('y2', y(growdata.Male_after[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 1.5);\n            }\n        }\n        else {\n            for (let index = 0; index < growdata.FeMale_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_after[index].y))\n                    .attr('y1', y(growdata.FeMale_after[index].min))\n                    .attr('x2', x(growdata.FeMale_after[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_after[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 1.5);\n            }\n\n            for (let index = 0; index < growdata.FeMale_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_after[index].y))\n                    .attr('y1', y(growdata.FeMale_after[index].max))\n                    .attr('x2', x(growdata.FeMale_after[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_after[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 1.5);\n            }\n        }\n\n        const datasource = weightList\n        //x時間 y體重\n        for (let index = 0; index < datasource.length; index++) {\n            const element = datasource[index];\n            const BornDay = element.rec_dat.toString().trim()\n            const BornTime = element.rec_tim.toString().trim()\n            const time = BornDay + BornTime\n            const weighttimestamp = moment(time, \"YYYYMMDDHHmm\").valueOf() //體重時間\n            const Month = (weighttimestamp - pregencyTimestamp) / (30 * 24 * 60 * 60 * 1000) //體重週數\n            if (Month < 0 || Month > 6) {\n                continue\n            }\n            console.log(Month, Number(element.value2) * 1000)\n            svg.append('circle')\n                .attr('cx', x(Month))\n                .attr('cy', y(Number(element.value2) * 1000))\n                .attr('r', 3)\n                .style('fill', 'green')\n        }\n        // const datacustom = wardchartoncustom\n        // for (let index = 0; index < datacustom.length; index++) {\n        //     const element = datacustom[index];\n        //     svg.append('circle')\n        //         .attr('cx', x(element.x))\n        //         .attr('cy', y(element.y))\n        //         .attr('r', 3)\n        //         .style('fill', 'blue')\n        // }\n\n    }\n\n    render() {\n        const { id_key, svg_key } = this.props\n        return (\n            <div id={id_key}>\n                <svg id={svg_key}></svg>\n            </div>\n        );\n    }\n}\n\nexport default Wardmonthafter;\n","import React, { Component } from 'react';\nimport WardlifeChart from './Wardlifechart'\nimport Wardmonthafter from './Wardmonthafter'\n\n\nclass Wardgrewchart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            test_items_interval: 0\n        };\n    }\n    switch_monthy() {\n        const { Data, WeightList, grewinfo } = this.props\n        console.log(Data)\n        const switch_data = this.state.test_items_interval\n        switch (switch_data) {\n            case 1:\n                return <WardlifeChart grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife\"} svg_key={\"wardlife_svg\"} gender={Data.PSEX}></WardlifeChart>\n            case 0:\n                return <Wardmonthafter grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife_after\"} svg_key={\"wardlife_after_svg\"} gender={Data.PSEX}></Wardmonthafter>\n            default:\n                return null;\n        }\n    }\n    //測驗項目功能_區間按鈕樣式\n    SwitchTestItemInterval(testiteminterval) {\n        const time_selectbtn_style = {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"32px\",\n            padding: \"0px 5px\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#001a6dbb\",\n            color: \"white\",\n            fontSize: \"1rem\",\n            borderWidth: \"1px\",\n            borderStyle: \"solid\",\n            borderColor: \"rgba(245,166,35,1)\",\n            cursor: \"pointer\"\n        }\n        const time_unselectbtn_style = {\n            display: \"flex\", justifyContent: \"center\",\n            alignItems: \"center\", height: \"32px\",\n            paddingRight: \"10px\", paddingLeft: \"10px\",\n            borderRadius: \"4px\", backgroundColor: \"white\",\n            color: \"#001a6d88\", fontSize: \"1rem\",\n            borderWidth: \"1px\", borderStyle: \"solid\",\n            borderColor: \"#001a6d88\",\n            cursor: \"pointer\"\n        }\n        if (testiteminterval === this.state.test_items_interval) {\n            return time_selectbtn_style\n        }\n        else return time_unselectbtn_style\n    }\n    //測驗項目功能_區間按鈕選擇\n    Onchangetimeinterval(changestate) {\n        this.setState(\n            {\n                test_items_interval: changestate\n            }\n        )\n    }\n    render() {\n        return (\n            <div>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: 'center', backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>生長曲線圖</t2>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"5px\", alignItems: \"center\" }}>\n                        <div style={this.SwitchTestItemInterval(0)} onMouseUp={() => this.Onchangetimeinterval(0)}>40週後</div>\n                        <div style={this.SwitchTestItemInterval(1)} onMouseUp={() => this.Onchangetimeinterval(1)}>40週前</div>\n                    </div>\n                </div>\n                {this.switch_monthy()}\n            </div>\n        );\n    }\n}\nexport default Wardgrewchart\n","import React, { Component } from 'react';\nimport editlogo from '../../Image/svg/Edit.svg'\nimport detaillogo from '../../Image/svg/details.svg'\nimport { Tooltip, Input, Button } from 'antd';\nimport './Notice.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass Notice extends Component {\n    state = {\n        caseinfo: this.props.caseinfo,\n        EditMode: false,\n        noticeData: [],\n        inputContent: undefined,\n        powerLogin: 0\n    }\n    componentDidMount() {\n        //bind function\n        this.onInputChange = this.onInputChange.bind(this);\n        //query patient notice\n        console.log(\"caseinfo: \" + JSON.stringify(this.props.caseinfo));\n        const TRID = this.props.caseinfo.TRANSINID.toString().trim()\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins, preTRID: TRID })\n        this.queryPatientImportant(TRID);\n    }\n    componentDidUpdate() {\n        const TRID = this.props.caseinfo.TRANSINID.toString().trim()\n        const preTRID = this.state.preTRID\n        if (TRID !== preTRID) {\n            this.setState({ preTRID: TRID })\n            this.queryPatientImportant(TRID);\n        }\n    }\n    queryPatientImportant(TRID) {\n        ApiProvider.getOnePatientImportantMatter(TRID)\n            .then(data => {\n                console.log(\"getOnePatientImportantMatter OK \" + JSON.stringify(data));\n                this.setState({ noticeData: data.data });\n            })\n            .catch(err => {\n                console.log(\"getOnePatientImportantMatter NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString();\n        ApiProvider.createPatientImportantMatter(this.state.inputContent, \"\", this.state.caseinfo.HISID, timeNowStr, this.state.caseinfo.TRANSINID)\n            .then(data => {\n                console.log(\"createPatientImportantMatter OK \" + JSON.stringify(data));\n                this.queryPatientImportant();\n            })\n            .catch(err => {\n                console.log(\"createPatientImportantMatter NG \" + JSON.stringify(err));\n            });\n        this.setState(\n            {\n                EditMode: false,\n                inputContent: undefined\n            }\n        )\n    }\n    renderEditButton() {\n        if (this.props.disableEdit === true) {\n            return null;\n        } else {\n            return (\n                <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                    <img src={editlogo} alt=\"editlogo\" />\n                </div>\n            )\n        }\n    }\n\n    render() {\n        function remarkcellRender(dataList) {\n            if (Array.isArray(dataList)) {\n                if (dataList.length === 0) {\n                    return (\n                        <div style={{ height: \"50px\", paddingLeft: \"15px\", display: \"flex\", alignItems: \"center\" }}>\n                            無病人註記\n                        </div>\n                    );\n                }\n                const remarkcell = dataList.map((info, index) =>\n                    <div key={index} className='noticecontext'>\n                        <div style={{ whiteSpace: \"pre-wrap\" }}>{info.context}</div>\n                        <Tooltip placement=\"topRight\" title={tooltiptext(info.Editor, info.time)}>\n                            <img src={detaillogo} alt=\"detaillogo\" />\n                        </Tooltip>\n                    </div>\n                )\n                return remarkcell\n            }\n            return (\n                <div style={{ height: \"50px\", paddingLeft: \"15px\", display: \"flex\", alignItems: \"center\" }}>\n                    無病人註記\n                </div>\n                // <div style={{ padding: \"5px 15px\" }}>無病人註記</div>\n            );\n        }\n        function tooltiptext(editor, time) {\n            function nullvalue(value) {\n                if (value === null || value === undefined) {\n                    return \"--\"\n                }\n                return value\n            }\n            console.log(time)\n            const t = moment(time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n            const localTime = moment.utc(t).toDate()\n            const displayTime = moment(localTime).format(\"MM/DD HH:mm\")\n            return nullvalue(editor) + \"醫師於\" + displayTime + \"更新\"\n        }\n\n        const fixData = this.state.noticeData.sort((a, b) => {\n            let tempTimeA = moment(a.time, 'YYYY-MM-DD').valueOf()\n            let tempTimeB = moment(b.time, 'YYYY-MM-DD').valueOf()\n            return tempTimeA < tempTimeB ? 1 : -1\n        })\n\n        const remarkcell = remarkcellRender(fixData)\n        const { TextArea } = Input;\n        return (\n            <div style={{ marginBottom: '10px' }}>\n                {this.props.disableEdit\n                    ?\n                    <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                        <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>病人註記</t2>\n                    </div>\n                    :\n                    <div className='noticetitle'>\n                        <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>病人註記</t2>\n                        {this.renderEditButton()}\n                    </div>}\n                <div className='noticecontextborder'>\n                    {remarkcell}\n                </div>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", backgroundColor: \"rgba(238,238,238,1)\" }}>\n                        <TextArea id=\"noticeContent\" placeholder=\"輸入當日註記內容\" value={this.state.inputContent} onChange={this.onInputChange} autoSize={true}></TextArea>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Notice\n","import React, { Component } from 'react';\nimport { Labwarningvalue } from '../../Function/Wardstate'\nimport moment from 'moment'\n\nclass Labviewitem extends Component {\n    TimeRender(time) {\n        return (\n            <centerstyle>\n                <t3 style={{ color: \"rgba(0,0,0,0.4)\" }}>{moment(time, \"YYYY-MM-DD\").format(\"MM/DD\")}</t3>\n            </centerstyle>\n        );\n    }\n\n    fixtitle = (title) => {\n        switch (title) {\n            case 'Seg':\n            case 'Lymp':\n                return (\n                    <div>\n                        <t3>{title}</t3>\n                        <t3 style={{ fontSize: \"10px\" }}>%</t3>\n                    </div>\n                );\n            case 'Na':\n            case 'K':\n            case 'Ca':\n                return (\n                    <div>\n                        <t3>{title}</t3>\n                        <sup>+</sup>\n                    </div>\n                );\n            case 'Mg':\n                return (\n                    <div>\n                        <t3>{title}</t3>\n                        <sup>2+</sup>\n                    </div>\n                );\n            case 'PCO':\n            case 'PO':\n                return (\n                    <div>\n                        <t3>{title}</t3>\n                        <sub>2</sub>\n                    </div>\n                );\n            default:\n                break\n\n        }\n        // if (title.includes('+')) {\n        //     const temptitle = title.replace('+', '')\n        //     return (\n        //         <div>\n        //             <t3>{temptitle}</t3>\n        //             <sup>+</sup>\n        //         </div>\n        //     );\n        // }\n        // if (title == 'Seg' || title == 'Lymp') {\n        //     return (\n        //         <div>\n        //             <t3>{title}</t3>\n        //             <t3 style={{ fontSize: \"10px\" }}>%</t3>\n        //         </div>\n        //     );\n        // }\n        // if (title == 'PCO2' || title == 'PO2') {\n        //     const temptitle = title.replace('2', '')\n        //     return (\n        //         <div>\n        //             <t3>{temptitle}</t3>\n        //             <sub>2</sub>\n        //         </div>\n        //     );\n        // }\n        return title\n    }\n\n    render() {\n        function RowsGrid(source) {\n            if (source === \"Wardview\") {\n                return \"1fr 1fr 1fr\"\n            }\n            return \"1fr 1fr 1fr\"\n        }\n        function RowsHeight(source) {\n            if (source === \"Wardview\") {\n                return \"80px\"\n            }\n            return \"80px\"\n        }\n        const { value, title, time, Source } = this.props\n        const TimeR = this.TimeRender(time)\n\n        const fixtitle = this.fixtitle(title)\n\n        return (\n            <div style={{ display: \"grid\", gridTemplateRows: RowsGrid(Source), height: RowsHeight(Source) }}>\n                <centerstyle>\n                    {/* <t3>{title}</t3> */}\n                    {fixtitle}\n                </centerstyle>\n                <centerstyle>\n                    <t2 style={{ fontSize: \"20px\", color: Labwarningvalue(value, title) ? \"black\" : \"red\" }}>{value}</t2>\n                </centerstyle>\n                {value == '--' || TimeR}\n            </div>\n        );\n    }\n}\n\nexport default Labviewitem\n","import React from 'react'\nexport function firstarea_Reg_IO() {\n    return [\"輸液\"];\n}\n\nexport function Secondarea_reg_IO() {\n    return [\"血品\"];\n}\n\nexport function Thirdarea_reg_IO() {\n    return [\"進食\"];\n}\n\nexport function Fourtharea_reg_IO() {\n    return [\"失血\", \"滲液\", \"嘔吐\", \"引流\", \"穿刺\", \"透析\", \"沖洗\", \"排便\", \"排尿\"];\n}\n\n\n\nexport function Feedarea_Reg_IO() {\n    return [\"進食\"];\n}\n\nexport function IVarea_reg_IO() {\n    return [\"血品\", \"輸液\"];\n}\n\nexport function UOarea_reg_IO() {\n    return [\"排尿\"];\n}\n\nexport function Otherarea_reg_IO() {\n    return [\"失血\", \"滲液\", \"嘔吐\", \"引流\", \"穿刺\", \"透析\", \"沖洗\", \"排便\"];\n}\n\nexport function Select_Main_Doc(DOCLIST) {\n    console.log(DOCLIST)\n    const MainDoc = DOCLIST.filter(function (value, index, array) {\n        return value.PDTYPE === \"B\"\n    })\n    if (MainDoc.length === 0) {\n        return \"\"\n    }\n    else {\n        const data = MainDoc[0]\n        return data.PDDOCNMC\n    }\n}\n\nexport function SumFeedDataMapReduce(arr) {\n    const sumlist = arr.map(function (value, index) {\n        return Number(value.inp_val2)\n    })\n    var sum = 0\n    for (let index = 0; index < sumlist.length; index++) {\n        const element = sumlist[index];\n        sum = sum + element\n    }\n    return sum\n}\n\nexport function SumIVDataMapReduce(arr) {\n    const sumlist = arr.map(function (value, index) {\n        return Number(value.inp_val1)\n    })\n    var sum = 0\n    for (let index = 0; index < sumlist.length; index++) {\n        const element = sumlist[index];\n        sum = sum + element\n    }\n    return sum\n}\n\nexport function SumUrineDataMapReduce(arr) {\n    const sumlist = arr.map(function (value, index) {\n        return Number(value.inp_val1)\n    })\n    var sum = 0\n    for (let index = 0; index < sumlist.length; index++) {\n        const element = sumlist[index];\n        sum = sum + element\n    }\n    return sum\n}\nexport function SumInOtherDataMapReduce(arr) {\n    return arr.map(el => Number(el.inp_val1)).reduce((a, b) => a + b);\n}\nexport function SumOutOtherDataMapReduce(arr) {\n    return arr.map(el => Number(el.out_val1)).reduce((a, b) => a + b);\n}\n\n\n\n//累積報告\n\nexport function ListForTime(arr, time) {\n    var DataList = []\n    for (let index = 0; index < arr.length; index++) {\n        const element = arr[index];\n        if (new Date(element.ORRESDT).getTime() <= new Date(time).getTime()) {\n            DataList.push(element)\n        }\n    }\n    return DataList\n}\n\nexport function ListForTimeAndTarget(arr, time, target) {\n    var DataList = []\n    arr.forEach(element => {\n        const parseTimestamp = new Date(element.ORRCPDT.split(\"-\")[0], element.ORRCPDT.split(\"-\")[1], element.ORRCPDT.split(\"-\")[2]).getTime()\n        // const nowTimestamp = new Date(time).getTime()\n        //console.log(\"parseTimestamp: \" + parseTimestamp + \"\\nnowTimestamp: \" + nowTimestamp)\n        //console.log(element.ORPROCED.indexOf(target))\n        if (parseTimestamp <= new Date(time).getTime() && element.ORPROCED.indexOf(target) > -1) {\n            DataList.push(element)\n        }\n    })\n    return DataList\n}\n\nexport function CaRegString(ressectobject) {\n    var select = []\n    if (Array.isArray(ressectobject)) {\n        for (let index = 0; index < ressectobject.length; index++) {\n            const element = ressectobject[index];\n            const elementstring = element.ORPROCED.toString()\n            if (elementstring.match(\"Ca++, free\") !== null) {\n                select.push(element)\n            }\n        }\n    }\n    if (select.length === 0) {\n        return \"null\"\n    }\n\n}\n\nexport function QSPERegList(qspe) {\n    function SettingValue(mode, value) {\n        if (value === undefined || value === null) {\n            return \"\"\n        }\n        const valueList = value.split(\"/\")\n        if (mode === 'NC') {\n            return (<div>Flow:{valueList[0]}L/min</div>)\n        }\n        if (mode === 'HF') {\n            return (<div style={{ display: \"inline\" }}>FiO<sub>2</sub>:{valueList[0]}% ,PEEP:{valueList[1]}cmH<sub>2</sub>O</div>)\n        }\n        if (mode === 'UW' || mode === 'bcpap' || mode === 'CPAP') {\n            return (<div style={{ display: \"inline\" }}>FiO<sub>2</sub>:{valueList[0]}% ,PEEP:{valueList[1]}cmH<sub>2</sub>O</div>)\n        }\n        if (mode === 'NIPPV' || mode.match(\"PC\") !== null) {\n            // return (<sub>123</sub>)\n            return (<div style={{ display: \"inline\" }}>FiO<sub>2</sub>:{valueList[0]}% ,Rate:{valueList[1]}/min ,PIP:{valueList[2]}mmH<sub>2</sub>O ,PEEP:{valueList[3]}cmH<sub>2</sub>O</div>)\n        }\n        if (mode.match(\"HFOV\") !== null) {\n            return (<div style={{ display: \"inline\" }}>FiO<sub>2</sub>:{valueList[0]}% ,Amp:{valueList[1]}cmH<sub>2</sub>O ,MAP:{valueList[2]}cmH<sub>2</sub>O ,Freq:{valueList[3]}Hz</div>)\n        }\n        if (mode.match(\"HFPPV\") !== null) {\n            return (<div style={{ display: \"inline\" }}>FiO<sub>2</sub>:{valueList[0]}% ,Rate:{valueList[1]}/min ,PIP:{valueList[2]}mmH<sub>2</sub>O ,PEEP:{valueList[3]}cmH<sub>2</sub>O\"</div>)\n        }\n        return value\n    }\n\n    var qspearray = []\n    if (Array.isArray(qspe)) {\n        for (let index = 0; index < qspe.length; index++) {\n            const element = qspe[index];\n            console.log(element)\n            if (element !== undefined) {\n                const SelectElement = element.special.toString()\n                if (SelectElement.match(\"@v\") !== null) {\n                    const DataArray = SelectElement.split(\" \")\n                    const title = DataArray[1]\n                    const value = DataArray[2]\n                    const DataJson = {\n                        \"Mode\": title,\n                        \"Setting\": SettingValue(title, value),\n                        \"Date\": element.rec_dat.toString().trim(),\n                        \"Time\": element.rec_tim,\n                    }\n                    console.log(element.rec_tim)\n                    qspearray.push(DataJson)\n                }\n            }\n            console.log(qspearray)\n        }\n    }\n    return qspearray\n}\n\nexport function QSPESetting(qspesettingarray) {\n    console.log(qspesettingarray)\n    const regString = qspesettingarray.Mode\n    const regValue = qspesettingarray.Setting.split(\"/\")\n    if (regString.match(\"RA\") !== null) {\n        return \"\"\n    }\n    if (regString.match(\"NC\") !== null) {\n        return \"Flow:\" + regValue[0]\n    }\n    if (regString.match(\"UW\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/PEEP:\" + regValue[1]\n    }\n    if (regString.match(\"bcpap\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/PEEP:\" + regValue[1]\n    }\n    if (regString.match(\"CPAP\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/PEEP:\" + regValue[1]\n    }\n    if (regString.match(\"NIPPV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Rate:\" + regValue[1] + \"/PIP:\" + regValue[2] + \"/PEEP:\" + regValue[3]\n    }\n    if (regString.match(\"HFOV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Rate:\" + regValue[1] + \"/PIP:\" + regValue[2] + \"/PEEP:\" + regValue[3]\n    }\n    if (regString.match(\"HFOV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Amp:\" + regValue[1] + \"/MAP:\" + regValue[2] + \"/Freq:\" + regValue[3]\n    }\n    if (regString.match(\"HFPPV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Rate:\" + regValue[1] + \"/PIP:\" + regValue[2] + \"/PEEP:\" + regValue[3]\n    }\n    return qspesettingarray.value\n}\n","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport './Wardcardvitalsign.scss';\nimport { mmddformat } from '../Function/Timeformat'\nimport * as ApiProvider from '../API/ApiProvider'\nimport moment from 'moment';\n\n\n\nclass WardcardvitalsignChart extends Component {\n    state = {\n        sourcedata: [],\n        preHID: null\n    }\n    componentDidUpdate() {\n        const { HISID } = this.props\n        const HID = HISID.toString().trim()\n        const preHID = this.state.preHID\n        if (HID !== preHID) {\n            this.setState({ preHID: HISID.toString().trim() })\n            this.getCenterMonitor()\n        }\n\n    }\n    componentDidMount() {\n        const { HISID } = this.props\n        this.setState({ preHID: HISID.toString().trim() })\n        this.getCenterMonitor()\n    }\n\n    getCenterMonitor() {\n        function selectType(type) {\n            switch (type) {\n                case \"div_hr\":\n                    return \"hr\"\n                case \"div_bp\":\n                    return \"nbp\"\n                case \"div_rr\":\n                    return \"rr\"\n                case \"div_spo\":\n                    return \"spo2\"\n                case \"div_abp\":\n                    return \"abp\"\n                case \"div_bt\":\n                    return \"bt\"\n                default:\n                    break;\n            }\n        }\n        // const simdata = vitalData.simdata\n        const endTime = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").format(\"YYYYMMDDHHmmss\");\n        const startTime = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf() - (24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\");\n        const { id_key, HISID } = this.props\n        const HID = HISID.toString().trim()\n        const type = selectType(id_key)\n        if (id_key === \"div_abp\") {\n            ApiProvider.getPatientwardvalueBoxPlot(HID, startTime, endTime, type, 0)\n                .then(data => {\n                    this.setState({\n                        sourcedata: data.data\n                    })\n                    this.drawChart()\n                })\n                .catch(err => { console.log(err) })\n        }\n        if (id_key === \"div_hr\" || id_key === \"div_rr\" || id_key === \"div_spo\") {\n\n            ApiProvider.getPatientwardvalueBoxPlot(HID, startTime, endTime, type, 0)\n                .then(data => {\n                    this.setState({\n                        sourcedata: data.data\n                    })\n                    this.drawChart()\n                })\n                .catch(err => { console.log(err) })\n        }\n        if (id_key === \"div_bp\") {\n\n            ApiProvider.getVitalSignData(HID, startTime, endTime, type)\n                .then(data => {\n                    this.setState({\n                        sourcedata: data.data\n                    })\n                    this.drawChart()\n                })\n                .catch(err => {\n                    console.log(err);\n                })\n        }\n    }\n    cal_svg_hight() {\n        const { axisTop, axisBot } = this.props\n        if (axisTop) {\n            if (axisBot) {\n                return 160\n            }\n            else {\n                return 130\n            }\n        }\n        else {\n            if (axisBot) {\n                return 100\n            }\n            else {\n                return 90\n            }\n        }\n    }\n\n    cal_svg_transform() {\n        const { axisTop, axisBot } = this.props\n        console.log(axisTop)\n        if (axisTop) {\n            if (axisBot) {\n                return 70\n            }\n            else {\n                return 50\n            }\n        }\n        else {\n            if (axisBot) {\n                return 5\n            }\n            else {\n                return 5\n            }\n        }\n    }\n\n    drawChart() {\n        function multiFormat(date) {\n            if (formatHour(date) % 4 === 0) {\n                return formatHour(date)\n            }\n            else return null\n        }\n        function multibotformat(date) {\n            if (new Date(date).getHours() === 0) {\n                return mmddformat(date)\n            }\n            else return null\n        }\n        const { svg_key, circlrcolor, axisTop, id_key, axisBot, MAX, MIN, Upper, Lower } = this.props\n        const width = window.screen.availWidth * 0.25, height = 70, transformmargin = this.cal_svg_transform(), margin = 20\n        // const borderwidth = width / 27\n        const time_now = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf()\n        const startTime = time_now - (24 * 60 * 60 * 1000);\n        console.log(time_now)\n\n        var time_array = []\n        var time_axis_array = []\n        for (let index = 0; index < 25; index++) {\n            time_array.push({ key: \"time\", x_axis_time: time_now - index * 60 * 60 * 1000 })\n            time_axis_array.push(time_now - index * 60 * 60 * 1000)\n        }\n        var time_array_reverse = time_array.reverse()\n        var time_axis_array_reverse = time_axis_array.reverse()\n        var formatHour = d3.timeFormat(\"%H\")\n\n        // const endTime = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf();\n\n\n        var x = d3.scaleLinear()\n            .domain([time_array_reverse[0].x_axis_time, time_array_reverse[24].x_axis_time])\n            .range([0, width - 40]);\n\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([MIN, MAX])\n            .range([height, 0])\n\n\n\n        var yAxis = d3.axisLeft(y)\n            .tickValues([MIN, MAX])\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(10);\n\n        var xAxisBottom = d3.axisBottom(x)\n            .tickValues(time_axis_array_reverse)\n            .tickSize(0, 0)\n            .tickPadding(height + 10)\n            .tickFormat(function (d) { return multibotformat(d); });\n\n\n        var xAxis = d3.axisTop(x)\n            .tickValues(time_axis_array_reverse)\n            .tickSize(0, 0)\n            .tickPadding(margin)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n        d3.select(\"#\" + svg_key).remove()\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_key)\n            .attr(\"viewBox\", [0, 0, width, this.cal_svg_hight()])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 30 + \",\" + transformmargin + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n        if (axisTop) {\n            svg.append(\"g\")\n                .call(xAxis)\n                .attr(\"class\", \"axis\");\n        }\n\n        if (axisBot) {\n            svg.append(\"g\")\n                .call(xAxisBottom)\n                .attr(\"class\", \"axis\");\n        }\n\n        //上下虛線\n        svg.append('line')\n            .attr('x1', 0)\n            .attr('y1', y(MAX))\n            .attr('x2', width)\n            .attr('y2', y(MAX))\n            .style('stroke', '#E0E0E0')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n        svg.append('line')\n            .attr('x1', 0)\n            .attr('y1', y(MIN))\n            .attr('x2', width)\n            .attr('y2', y(MIN))\n            .style('stroke', '#E0E0E0')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n\n        for (let index = 0; index < time_array_reverse.length; index++) {\n            svg.append('line')\n                .attr('x1', x(time_array_reverse[index].x_axis_time))\n                .attr('y1', 0)\n                .attr('x2', x(time_array_reverse[index].x_axis_time))\n                .attr('y2', height)\n                .style('stroke', '#E0E0E0')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n        }\n\n\n\n        drawshadow(startTime, 0, Lower, Upper)\n        function drawshadow(startTime, interval, lower, upper) {\n            const LimitBoxTimer = formatBox(startTime, interval, width)\n            for (let index = 0; index < LimitBoxTimer.length; index++) {\n                const boxwidth = formatBoxWidth(width, interval)\n                const element = LimitBoxTimer[index];\n                console.log(startTime)\n                svg.append('line')\n                    .attr('x1', x(element))\n                    .attr('y1', y(lower))\n                    .attr('x2', x(element))\n                    .attr('y2', y(upper))\n                    .style('stroke', circlrcolor)\n                    .style('opacity', 0.7)\n                    .style('stroke-width', boxwidth)\n\n                if (id_key === \"div_bp\" || id_key === \"div_abp\") {\n                    svg.append('line')\n                        .attr('x1', x(element))\n                        .attr('y1', y(35))\n                        .attr('x2', x(element))\n                        .attr('y2', y(55))\n                        .style('stroke', circlrcolor)\n                        .style('opacity', 0.3)\n                        .style('stroke-width', boxwidth)\n                }\n            }\n        }\n        function formatBox(startTime, interval) {\n            function interFormat(startTime, interval) {\n                var TimeArray = []\n                for (let index = 0; index < interval; index++) {\n                    if (interval === 24) {\n                        const boxTime = startTime + (30 * 60 * 1000) + (index * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 18) {\n                        const boxTime = startTime + (2 * 60 * 60 * 60 * 1000) + (index * 4 * 60 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 21) {\n                        const boxTime = startTime + (4 * 60 * 60 * 60 * 1000) + (index * 8 * 60 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else {\n                        const boxTime = startTime + (12 * 60 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                }\n                return TimeArray\n            }\n            if (interval === 0) {\n                return interFormat(startTime, 24)\n            }\n            if (interval === 1) {\n                return interFormat(startTime, 18)\n            }\n            if (interval === 2) {\n                return interFormat(startTime, 21)\n            }\n            return interFormat(startTime, 14)\n        }\n        function formatBoxWidth(viewwidth, interval) {\n            if (interval === 0) {\n                return viewwidth / 24\n            }\n            if (interval === 1) {\n                return viewwidth / 18\n            }\n            if (interval === 2) {\n                return viewwidth / 21\n            }\n            return viewwidth / 14\n        }\n        // var sim_data = this.state.sourcedata\n        const BoxPlotData = this.state.sourcedata\n        if (BoxPlotData.length === 0) {\n            return null\n        }\n\n        if (id_key === \"div_abp\") {\n            const dataAbps = BoxPlotData.abps\n            const dataAbpd = BoxPlotData.abpd\n            const boxwidth = 10\n            for (let index = 0; index < dataAbpd.length; index++) {\n                const element = dataAbpd[index];\n                const q1 = element.Q1\n                const q2 = element.Q2\n                const q3 = element.Q3\n                const q4 = element.Q4\n                const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                svg.append(\"line\")\n                    .attr(\"x1\", x(Xtime))\n                    .attr(\"x2\", x(Xtime))\n                    .attr(\"y1\", y(q1))\n                    .attr(\"y2\", y(q4))\n                    .attr(\"stroke\", circlrcolor)\n                    .style('opacity', 0.5)\n                    // .attr(\"stroke\", \"blcak\")\n                    .style('stroke-width', 1)\n\n                svg.append(\"rect\")\n                    .attr(\"x\", x(Xtime) - boxwidth / 2)\n                    .attr(\"y\", y(q3))\n                    .attr(\"height\", (y(q2) - y(q3)))\n                    .attr(\"width\", boxwidth)\n                    .attr(\"stroke\", circlrcolor)\n                    .style('opacity', 0.5)\n                    .style(\"fill\", \"rgba(255,255,255,1)\")\n                    .style('stroke-width', 1);\n\n                svg\n                    .selectAll(\"toto\")\n                    .data([q1, q4])\n                    .enter()\n                    .append(\"line\")\n                    .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                    .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                    .attr(\"y1\", function (d) { return (y(d)) })\n                    .attr(\"y2\", function (d) { return (y(d)) })\n                    .attr(\"stroke\", circlrcolor)\n                    .style('opacity', 0.5)\n                    .style('stroke-width', 1);\n            }\n            for (let index = 0; index < dataAbps.length; index++) {\n                const element = dataAbps[index];\n                const q1 = element.Q1\n                const q2 = element.Q2\n                const q3 = element.Q3\n                const q4 = element.Q4\n                const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                svg.append(\"line\")\n                    .attr(\"x1\", x(Xtime))\n                    .attr(\"x2\", x(Xtime))\n                    .attr(\"y1\", y(q1))\n                    .attr(\"y2\", y(q4))\n                    .attr(\"stroke\", circlrcolor)\n                    // .attr(\"stroke\", \"blcak\")\n                    .style('stroke-width', 1)\n\n                svg.append(\"rect\")\n                    .attr(\"x\", x(Xtime) - boxwidth / 2)\n                    .attr(\"y\", y(q3))\n                    .attr(\"height\", (y(q2) - y(q3)))\n                    .attr(\"width\", boxwidth)\n                    .attr(\"stroke\", circlrcolor)\n                    .style(\"fill\", \"rgba(255,255,255,1)\")\n                    .style('stroke-width', 1);\n\n                svg\n                    .selectAll(\"toto\")\n                    .data([q1, q4])\n                    .enter()\n                    .append(\"line\")\n                    .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                    .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                    .attr(\"y1\", function (d) { return (y(d)) })\n                    .attr(\"y2\", function (d) { return (y(d)) })\n                    .attr(\"stroke\", circlrcolor)\n                    .style('stroke-width', 1);\n            }\n        }\n        if (id_key === \"div_bp\") {\n            for (let index = 0; index < BoxPlotData.length; index++) {\n                const element = BoxPlotData[index];\n                const Xtime = moment(element.Time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                const SBP = element.SBP\n                const DBP = element.DBP\n                if (SBP === 0 || DBP === 0) {\n                    continue\n                }\n                svg.append('circle')\n                    .attr('cx', x(Xtime))\n                    .attr('cy', y(SBP))\n                    .attr('r', 3)\n                    .style('fill', circlrcolor)\n\n\n                svg.append('circle')\n                    .attr('cx', x(Xtime))\n                    .attr('cy', y(DBP))\n                    .attr('r', 3)\n                    .style('opacity', 0.5)\n                    .style('fill', circlrcolor)\n            }\n        }\n        if (id_key === \"div_hr\" || id_key === \"div_rr\" || id_key === \"div_spo\") {\n            // for (let index = 0; index < BoxPlotData.length; index++) {\n            //     const element = BoxPlotData[index];\n            //     const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + (30 * 60 * 1000)\n            //     svg.append('line')\n            //         .attr('x1', x(Xtime))\n            //         .attr('y1', y(Lower))\n            //         .attr('x2', x(Xtime))\n            //         .attr('y2', y(Upper))\n            //         .style('stroke', circlrcolor)\n            //         .style('opacity', 0.5)\n            //         // .style('stroke', 'red')\n            //         .style('stroke-width', borderwidth)\n\n            // }\n            for (let index = 0; index < BoxPlotData.length; index++) {\n                const element = BoxPlotData[index];\n                console.log(element)\n                const q1 = element.Q1\n                const q2 = element.Q2\n                const q3 = element.Q3\n                const q4 = element.Q4\n                const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + (30 * 60 * 1000)\n                console.log(q1, q2, q3, q4)\n                const boxwidth = 10\n                svg.append(\"line\")\n                    .attr(\"x1\", x(Xtime))\n                    .attr(\"x2\", x(Xtime))\n                    .attr(\"y1\", y(q1))\n                    .attr(\"y2\", y(q4))\n                    .attr(\"stroke\", circlrcolor)\n                    // .attr(\"stroke\", \"blcak\")\n                    .style('stroke-width', 1)\n\n                svg.append(\"rect\")\n                    .attr(\"x\", x(Xtime) - boxwidth / 2)\n                    .attr(\"y\", y(q3))\n                    .attr(\"height\", (y(q2) - y(q3)))\n                    .attr(\"width\", boxwidth)\n                    .attr(\"stroke\", circlrcolor)\n                    .style(\"fill\", \"rgba(255,255,255,1)\")\n                    .style('stroke-width', 1);\n\n                svg\n                    .selectAll(\"toto\")\n                    .data([q1, q4])\n                    .enter()\n                    .append(\"line\")\n                    .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                    .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                    .attr(\"y1\", function (d) { return (y(d)) })\n                    .attr(\"y2\", function (d) { return (y(d)) })\n                    .attr(\"stroke\", circlrcolor)\n                    .style('stroke-width', 1);\n\n            }\n        }\n\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default WardcardvitalsignChart;","import React, { Component } from 'react';\nimport WardcardvitalsignChart from './Wardcardvitalsign'\nimport { statecolor } from '../Function/Wardstate'\n// import * as ApiProvider from '../API/ApiProvider'\nimport './Wardchart.scss'\n// import moment from 'moment';\n\n\n\nclass WardChart extends Component {\n    state = {\n        data: [],\n        pbStatus: true\n    }\n\n    changePb = () => {\n        this.setState({\n            pbStatus: false\n        })\n    }\n\n    decidePB = (hr, nbpd, abpd) => {\n        const status = this.state.pbStatus\n        if (status) {\n            hr > 160 || hr < 100 && this.changePb()\n            nbpd > 75 || nbpd < 55 && this.changePb()\n            abpd > 75 || abpd < 55 && this.changePb()\n        }\n    }\n\n    render() {\n        function valueFormat(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"--\"\n            }\n            return value\n        }\n        const data = this.state.data\n        const { CMvalue, HISID } = this.props\n        const vitalvalue = CMvalue\n        if (vitalvalue === undefined || vitalvalue === null) {\n            return null\n        }\n\n        this.decidePB(vitalvalue.hr, vitalvalue.nbpd, vitalvalue.abpd)\n\n        function limitValue(value, upper, lower) {\n            if (value > upper || value < lower) {\n                return false\n            }\n            return true\n        }\n\n        const status = this.state.pbStatus\n        return (\n            <div className='Wardchartlayout'>\n                <div className='halfwardchart'>\n                    <div className='singlewardchart'>\n                        <div className='firstRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", width: \"120px\", height: \"90px\", backgroundColor: status ? \"white\" : statecolor('HR'), paddingRight: \"3px\" }}>\n                                <centerstyle>\n                                    <t4 style={{ color: status ? statecolor('HR') : \"white\" }}>HR(min)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"40px\", color: status ? statecolor('HR') : \"white\", lineHeight: \"44px\" }}>{valueFormat(vitalvalue.hr)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <WardcardvitalsignChart MAX={200} MIN={0} Upper={160} Lower={100} HISID={HISID} svg_key={\"svg_hr\"} id_key={\"div_hr\"} data={data} axisBot={false} axisTop={true} colorshadow={\"rgba(126, 211, 33, 0.1)\"} circlrcolor={\"#779F50\"}></WardcardvitalsignChart>\n                    </div>\n                    <div className='singlewardchart'>\n                        <div className='secondRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", width: \"120px\", height: \"90px\", backgroundColor: status ? \"white\" : statecolor('BP'), padding: \"0px 2px\" }}>\n                                <centerstyle>\n                                    <t4 style={{ color: status ? statecolor('BP') : \"white\" }}>NBP(mmHg)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"30px\", color: status ? statecolor('BP') : \"white\", lineHeight: \"34px\" }}>{valueFormat(vitalvalue.nbps)}/{valueFormat(vitalvalue.nbpd)}</div>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"20px\", color: status ? statecolor('BP') : \"white\", lineHeight: \"22px\" }}>({valueFormat(vitalvalue.nbpm)})</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <WardcardvitalsignChart MAX={100} MIN={0} Upper={75} Lower={55} HISID={HISID} svg_key={\"svg_bp\"} id_key={\"div_bp\"} data={data} data2={true} axisBot={false} axisTop={false} colorshadow={\"rgba(240, 144, 144, 0.1)\"} circlrcolor={\"#C12528\"} data_2_circlrcolor={\"rgba(240, 144, 144, 0.5)\"}></WardcardvitalsignChart>\n                    </div>\n                    <div className='singlewardchart'>\n                        <div className='thirdRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", width: \"120px\", height: \"90px\", backgroundColor: status ? \"white\" : statecolor('BP'), padding: \"0px 2px\" }}>\n                                <centerstyle>\n                                    <t4 style={{ color: status ? statecolor('BP') : \"white\" }}>BP(mmHg)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"30px\", color: status ? statecolor('BP') : \"white\", lineHeight: \"34px\" }}>{valueFormat(vitalvalue.abps)}/{valueFormat(vitalvalue.abpd)}</div>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"20px\", color: status ? statecolor('BP') : \"white\", lineHeight: \"22px\" }}>({valueFormat(vitalvalue.abpm)})</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <WardcardvitalsignChart MAX={100} MIN={0} Upper={75} Lower={55} HISID={HISID} svg_key={\"svg_abp\"} id_key={\"div_abp\"} data={data} data2={true} axisBot={true} axisTop={false} colorshadow={\"rgba(240, 144, 144, 0.1)\"} circlrcolor={\"#C12528\"} data_2_circlrcolor={\"rgba(240, 144, 144, 0.5)\"}></WardcardvitalsignChart>\n                    </div>\n                </div>\n                <div className='halfwardchart'>\n                    <div className='singlewardchart'>\n                        <div className='firstRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", width: \"120px\", height: \"90px\", backgroundColor: limitValue(vitalvalue.spo2, 100, 90) ? \"white\" : statecolor('SpO2'), paddingRight: \"3px\" }}>\n                                <centerstyle>\n                                    <t4 style={{ color: limitValue(vitalvalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>SpO2(%)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"40px\", color: limitValue(vitalvalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\", lineHeight: \"44px\" }}>{valueFormat(vitalvalue.spo2)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <div>\n                            <WardcardvitalsignChart MAX={100} MIN={60} Upper={100} Lower={90} HISID={HISID} svg_key={\"svg_spo\"} id_key={\"div_spo\"} data={data} axisBot={false} axisTop={true} colorshadow={\"rgba(0, 183, 255, 0.1)\"} circlrcolor={\"#4773B8\"}></WardcardvitalsignChart>\n                        </div>\n                    </div>\n                    <div className='singlewardchart'>\n                        <div className='secondRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", width: \"120px\", height: \"90px\", backgroundColor: limitValue(vitalvalue.bt, 38, 36) ? \"white\" : statecolor('BT'), paddingRight: \"3px\" }}>\n                                <centerstyle>\n                                    <t4 style={{ color: limitValue(vitalvalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>BT(<sup>&ordm;</sup>C)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"40px\", color: limitValue(vitalvalue.bt, 38, 36) ? statecolor('BT') : \"white\", lineHeight: \"44px\" }}>{valueFormat(vitalvalue.bt)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <WardcardvitalsignChart MAX={43} MIN={33} Upper={38} Lower={36} HISID={HISID} svg_key={\"svg_bt\"} id_key={\"div_bt\"} data={data} axisBot={false} axisTop={false} colorshadow={\"rgba(199, 162, 244,0.1)\"} circlrcolor={\"#7F3DB5\"}></WardcardvitalsignChart>\n                    </div>\n                    <div className='singlewardchart'>\n                        <div className='thirdRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", width: \"120px\", height: \"90px\", backgroundColor: limitValue(vitalvalue.rr, 60, 20) ? \"white\" : statecolor('RR'), paddingRight: \"3px\" }}>\n                                <centerstyle>\n                                    <t4 style={{ color: limitValue(vitalvalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>RR(min)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"40px\", color: limitValue(vitalvalue.rr, 60, 20) ? statecolor('RR') : \"white\", lineHeight: \"44px\" }}>{valueFormat(vitalvalue.rr)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <WardcardvitalsignChart MAX={100} MIN={0} Upper={60} Lower={20} HISID={HISID} svg_key={\"svg_rr\"} id_key={\"div_rr\"} data={data} axisBot={true} axisTop={false} colorshadow={\"rgba(255, 152, 0, 0.1)\"} circlrcolor={\"#DE7531\"}></WardcardvitalsignChart>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WardChart;\n","import React, { Component } from 'react';\nimport { Checkbox } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider'\n\nclass Wardinfousercheckbox extends Component {\n    state = {\n        checkboxselect: this.props.selectstate\n    }\n\n    updateOnePatientTodo() {\n        if (this.state.checkboxselect) {\n            ApiProvider.createTodo(this.props.item.caseid, this.props.item.context, this.props.item.time, this.props.item.transinno, '已完成')\n                .then(data => {\n                    console.log('updateOnePatientTodo ok ' + JSON.stringify(data))\n                })\n                .catch(err => {\n                    console.log('updateOnePatientTodo ng ' + JSON.stringify(err))\n                })\n        } else {\n            ApiProvider.createTodo(this.props.item.caseid, this.props.item.context, this.props.item.time, this.props.item.transinno, '未完成')\n                .then(data => {\n                    console.log('updateOnePatientTodo ok ' + JSON.stringify(data))\n                })\n                .catch(err => {\n                    console.log('updateOnePatientTodo ng ' + JSON.stringify(err))\n                })\n        }\n    }\n    selectchange() {\n        this.setState({\n            checkboxselect: !this.state.checkboxselect\n        }, this.updateOnePatientTodo)\n    }\n\n    render() {\n        const selectunstyle = {\n            fontSize: \"1rem\"\n        }\n        const selectstyle = {\n            textDecoration: \"line-through\", fontSize: \"1rem\"\n        }\n        return (\n            <div style={{ height: \"50px\", paddingLeft: \"15px\", display: \"flex\", alignItems: \"center\" }}>\n                <Checkbox onChange={() => this.selectchange()} checked={this.state.checkboxselect} style={this.state.checkboxselect ? selectstyle : selectunstyle}>{this.props.item.context}</Checkbox>\n            </div>\n        )\n    }\n\n}\n\nexport default Wardinfousercheckbox;","import React, { Component } from 'react';\nimport './Patientviewinfo.scss'\nimport { Icon } from 'antd'\nimport * as Wardstate from '../Function/Wardstate'\nimport * as ApiProvider from '../API/ApiProvider'\nclass Patientinfo extends Component {\n\n    state = { preCID: null, QENT: [] };\n    componentDidMount() {\n        const { caseinfo } = this.props\n        console.log(caseinfo)\n        const CID = caseinfo.CASEID\n        this.setState({ preCID: CID })\n        this.getQENT(CID)\n    }\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const { preCID } = this.state\n        const CID = caseinfo.CASEID\n        if (CID !== preCID) {\n            this.setState({ preCID: CID })\n            this.getQENT(CID)\n\n        }\n    }\n    getQENT(CID) {\n        console.log(CID)\n        ApiProvider.getQENT(CID)\n            .then(data => {\n                const parsedata = Wardstate.QMNCXM2JSON(data.data)\n                console.log(parsedata)\n                this.setState({ QENT: parsedata })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQENT NG \" + JSON.stringify(err));\n            });\n    }\n    render() {\n        function fixpatientDate(data) {\n            const transdata = {\n                'cause': '住院原因',\n                'car_pho': '主要照顧者電話',\n                'care': '主要照顧者',\n                'con_1': '聯絡人1',\n                'con_p11': '聯絡人1電話',\n                'con_2': '聯絡人2',\n                'con_p21': '聯絡人2電話',\n                'dvs': '住院時生命徵象',\n                'habit': '飲食狀況',\n                'oxy': '住院時氧和評估',\n                'h_val': '住院時頭圍',\n                'b_val': '住院時胸圍',\n                'tall': '住院時身高',\n                'weight': '住院時體重'\n            }\n\n            const patientDate = []\n\n            for (let index in transdata) {\n                if (data[index] !== \"\") {\n                    patientDate.push([transdata[index], data[index]])\n                }\n            }\n\n            return patientDate\n        }\n\n        const patientDetail = fixpatientDate(this.state.QENT)\n        const patientData = patientDetail.map(element =>\n            <div className='context'>\n                <div className='title'>{element[0]} ：</div>\n                <div className='item'>{element[1]}</div>\n            </div>\n        )\n        if (this.state.preCID === null || patientDetail.length === 0) {\n            return (\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>\n                    <Icon type=\"loading\" />\n                </div>\n            );\n        }\n        return (\n            <div className='patientinfolayout'>\n                {patientData}\n            </div>\n        );\n    }\n}\n\nexport default Patientinfo\n","import React, { useState, useEffect } from \"react\";\nimport './Wardinfouser.scss'\nimport moment from 'moment'\nimport { Modal } from 'antd';\nimport * as Wardstate from '../Function/Wardstate'\nimport * as ApiProvider from '../API/ApiProvider'\n// import * as ApiGithub from '../API/ApiGithub'\nimport { pregancyweeksanddays, gender } from '../Function/Wardbedfunction'\nimport fileLogo from '../Image/svg/file1.svg'\nimport file2Logo from '../Image/svg/file2.svg'\nimport Wardgrewchart from './Wardgrewchart'\nimport Notice from '../Patientview/Schedule/Notice'\nimport Labviewlayout from '../Patientview/CrossSectionView/Labview'\nimport WardChart from './Wardchart'\nimport Wardinfousercheckbox from './Wardunfousercheckbox'\nimport { Link } from \"react-router-dom\";\n// import * as Reg from '../Data/RegularData';\nimport Patientinfo from '../Patientview/Patientviewinfo';\nimport Wardcarstatus from './Wardcardstatus'\n\n\nexport function Wardinfouser(props) {\n    const [Visible, setVisible] = useState(false);\n    const [Report, SetReport] = useState(0);\n    const [Nonreport, SetNonreport] = useState(0);\n    const [CenterMonitorValue, SetCenterMonitorValue] = useState([])\n    const [scheduleList, SetScheduleList] = useState([]);\n    const [todoList, SetTodoList] = useState([]);\n    // const [QENT, SetQENT] = useState([]);\n    // const [CID, SetCID] = useState(null);\n    // const [HID, SetHID] = useState(null);\n    // const [TransInDt, SetTransInDt] = useState(null);\n    const [Timer, SetTimer] = useState(0)\n\n    useEffect(() => {\n        const TimerID = setInterval(() => {\n            SetTimer(Timer + 1)\n        }, 5000)\n        return () => clearInterval(TimerID);\n    }, [Timer])\n\n\n    useEffect(() => {\n        const data = props.location.state.data\n        // const hisid = \"TEST1234\"\n        const hisid = data.PHISTNUM.toString()\n        ApiProvider.getHisidwardvalue(hisid)\n            .then(data => {\n                console.log(data.data)\n\n                SetCenterMonitorValue(data.data[0]);\n            })\n            .catch(err => {\n                console.log(\"Andy test getHisidwardvalue NG \" + JSON.stringify(err));\n            });\n    }, [Timer, props.location.state.data.PHISTNUM]);\n\n\n\n    useEffect(() => {\n        console.log(\"query schedule list\")\n\n        const data = props.location.state.data\n        const source = data\n        const PLOC = source.PLOC\n        const TRANSINID = source.TRANSINID.toString()\n\n        const now = new Date();\n        const todayBegin = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n        const startTime = todayBegin.toISOString().split(\".\")[0];\n        const endTime = new Date(todayBegin.getTime() + 24 * 60 * 60 * 1000).toISOString().split(\".\")[0];\n        ApiProvider.getOnePatientSchedule(TRANSINID, startTime, endTime)\n            .then(result => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(result.data));\n                SetScheduleList(result.data);\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }, [props.location.state.data.TRANSINID]);\n\n    useEffect(() => {\n        console.log(\"query todo list\")\n\n        const data = props.location.state.data\n        const source = data\n        const PLOC = source.PLOC\n        const TRANSINID = source.TRANSINID.toString()\n\n\n        ApiProvider.getOneTodo(TRANSINID, source.PCASENO.toString())\n            .then(result => {\n                console.log(\"getOneTodo OK \" + JSON.stringify(result.data));\n                SetTodoList(result.data);\n            })\n            .catch(err => {\n                console.log(\"getOneTodo NG \" + JSON.stringify(err));\n            });\n    }, [props.location.state.data.PCASENO]);\n\n    function renderScheduleItem() {\n        if (scheduleList.length === 0) {\n            return (\n                <div style={{ height: \"50px\", paddingLeft: \"15px\", display: \"flex\", alignItems: \"center\" }}>\n                    沒有排程\n                </div>\n                // <div>沒有排程</div>\n            )\n        } else {\n            return scheduleList.map((item, index) => {\n                if (item.type === \"排程\") {\n                    // const rawDateStr = item.time;\n                    const time = moment(item.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n                    const localTime = moment.utc(time).toDate()\n                    const displayTimeStr = moment(localTime).format(\"MM/DD HH:mm\")\n                    return (\n                        <div key={index} style={{ height: \"50px\", display: 'grid', gridTemplateColumns: \"35% 65%\", borderBottomWidth: \"1px\", borderBottomColor: \"rgba(232, 232, 232, 1)\", borderBottomStyle: \"solid\", paddingLeft: \"15px\" }}>\n                            <div style={{ fontSize: \"1rem\", display: \"flex\", paddingLeft: \"15px\", alignItems: \"center\" }}>{displayTimeStr}</div>\n                            <div style={{ fontSize: \"1rem\", display: \"flex\", paddingLeft: \"15px\", alignItems: \"center\" }}>{item.context}</div>\n                        </div>\n                    )\n                }\n            })\n        }\n    }\n    function renderTodoItem() {\n        if (todoList.length === 0) {\n            return (\n                <div style={{ height: \"50px\", paddingLeft: \"15px\", display: \"flex\", alignItems: \"center\" }}>\n                    沒有待辦事項\n                </div>\n                // <div>沒有待辦事項</div>\n            )\n        } else {\n            return todoList.map((item, index) => {\n                if (item.type === \"未完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={false}></Wardinfousercheckbox>)\n                } else if (item.type === \"已完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={true}></Wardinfousercheckbox>)\n                }\n\n            });\n        }\n    }\n\n\n\n\n\n    function valueFormat(value) {\n        if (value === \"\" || value === null || value === undefined) {\n            return \"--\"\n        }\n        return value.toString()\n    }\n    function valueBornWeight(value) {\n        if (value === \"\" || value === null || value === undefined || value === 0) {\n            return \"\"\n        }\n        return value.toString() + \"g → \"\n    }\n\n\n    const data = props.location.state.data\n    const source = data\n    const Birthday = source.PBIRHDT\n    const QTWER = Wardstate.XM2JSON(source.QTWPER)\n    const QMNC = Wardstate.XM2JSON(source.QMNC)\n    const ListWeight = Wardstate.WeightList(QTWER)\n    const BornWeight = Wardstate.BornWeight(QTWER, Birthday)\n    const Weight = Wardstate.NewestWeight(QTWER)\n    const BornWeeks = QMNC.weeks\n    const BornDays = QMNC.days\n    const TRANSINID = source.TRANSINID\n    const DOCLIST = source.PDOCNEW\n    const MainDoc = Wardstate.Doc(DOCLIST, \"B\")\n    const LiveDoc = Wardstate.Doc(DOCLIST, \"D\")\n    const MainNur = Wardstate.Doc(DOCLIST, \"N\")\n    const ICUMainDoc = Wardstate.Doc(DOCLIST, \"U\")\n    // function arrayForDoc(MainDoc, LiveDoc, MainNur, ICUMainDoc){\n    //     if (condition) {\n\n    //     }\n    // }\n    const status = {\n        date: moment(Birthday, \"YYYYMMDD\").valueOf(),\n        week: BornWeeks,\n        day: BornDays\n    }\n    console.log(status)\n    const AgeStatus = Wardstate.CalculateAge(status)\n\n    // const PBASINFO = data.PBASINFO\n    const caseinfo = {\n        \"HISID\": source.PHISTNUM.toString(),\n        \"CASEID\": source.PCASENO.toString(),\n        \"WEEK_BORN\": BornWeeks,\n        \"DAY_BORN\": BornDays,\n        \"TRANSINID\": TRANSINID,\n        \"TRANSINDT\": TRANSINID,\n        \"WEIGHT\": QTWER,\n        \"PBASINGNINFO\": source\n    }\n\n    const grewinfo = {\n        \"WEEK_BORN\": BornWeeks,\n        \"DAY_BORN\": BornDays,\n        \"BIRTHDAY\": Birthday\n    }\n    // const patientDetail = fixpatientDate(QENT)\n    return (\n        <div className='wardinfouserlayout'>\n            <Modal\n                width={800}\n                title=\"入院時評估\"\n                visible={Visible}\n                onOk={() => setVisible(false)}\n                onCancel={() => setVisible(false)}\n                footer={null}>\n                <Patientinfo caseinfo={caseinfo}></Patientinfo>\n            </Modal>\n            <div className='wardinfopatient'>\n                <div style={{ height: '50px', display: 'grid', gridTemplateColumns: \"1fr 1fr 1fr\" }}>\n                    <Link to=\"/nicu/ward/wardindex\" style={{ alignItems: \"center\", display: \"flex\" }}>\n                        <t2 className='wardblacktoindex'>&larr;返回總覽</t2>\n                    </Link>\n                    <centerstyle>\n                        <t1>NICU-{Number(source.HBEDNO)} {source.PNAMEC.toString().trim()}</t1>\n                    </centerstyle>\n                    <Link to=\"/nicu/ward/wardindex\" style={{ alignItems: \"center\", justifyContent: \"flex-end\", display: \"flex\" }}>\n                        <t2 className='wardblacktoindex'>進入病人頁面&rarr;</t2>\n                    </Link>\n                </div>\n                <div style={{ height: \"50px\" }}>\n                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <t2>病例號:{Number(source.HBEDNO)}</t2>\n                        <t2>性別:{gender(source.PSEX)}</t2>\n                        <t2>生日:{moment(Birthday, \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</t2>\n                        <t2>住院:{source.PHISTNUM.toString().trim()}</t2>\n                        <Wardcarstatus source={false} PCASENO={source.PCASENO} PHISTNUM={source.PHISTNUM}></Wardcarstatus>\n                    </div>\n                    <div style={{ display: 'flex', justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\" }}>\n                            <t3 style={{ color: \"rgba(0,0,0,0.7)\" }}>\n                                {valueFormat(BornWeeks)}+{valueFormat(BornDays)}&gt;\n                                <span style={{ fontWeight: \"900\" }}>{AgeStatus}</span>\n                            </t3>\n                            <t3 style={{ color: \"rgba(0,0,0,0.7)\" }}>\n                                {valueBornWeight(BornWeight)}g&gt;\n                            <span style={{ fontWeight: \"900\" }}>{valueFormat(Weight)}g</span>\n                            </t3>\n                            {/* <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", width: \"70px\" }}>\n                                <img src={fileLogo} alt='fileLogo'></img>\n                                <t4>{Report}</t4>\n                                <img src={file2Logo} alt='file2Logo'></img>\n                                <t4>{Nonreport}</t4>\n                            </div> */}\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,auto)\", gridColumnGap: \"10px\" }}>\n                            <t3>主治 {MainDoc}</t3>\n                            {MainDoc == ICUMainDoc || <t3>加護 {ICUMainDoc}</t3>}\n                            {MainDoc == LiveDoc || <t3>住院 {LiveDoc}</t3>}\n                            {MainNur == '' || <t3>NP {MainNur}</t3>}\n                            <div className='wardblacktoindex' onClick={() => setVisible(true)}>入院時評估</div>\n                        </div>\n                    </div>\n                </div>\n                <div className='wardinfousercontent'>\n                    <div style={{ padding: \"10px 15px\" }}>\n                        <WardChart HISID={source.PHISTNUM} CMvalue={CenterMonitorValue}></WardChart>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\", padding: \"0px 3px\" }}>\n                        <div style={{ borderRadius: \"4px\" }}>\n                            <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>檢驗項目</t2>\n                            </div>\n                            <Labviewlayout Source={\"Wardview\"} PickerDate={moment(moment().format('YYYYMMDD')).valueOf()} caseinfo={caseinfo}></Labviewlayout>\n                        </div>\n                        <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\" }}>\n                            <Wardgrewchart grewinfo={grewinfo} Data={source} WeightList={ListWeight} type={true}></Wardgrewchart>\n                        </div>\n                    </div>\n                    <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\", marginTop: \"10px\", marginRight: \"3px\" }}>\n                        {<Notice caseinfo={caseinfo} disableEdit={true}></Notice>}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\", marginTop: \"10px\", paddingRight: \"3px\" }}>\n                        <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\" }}>\n                            <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>排程</t2>\n                            </div>\n                            <div style={{ maxHeight: \"200px\", overflow: 'auto', minHeight: \"50px\" }}>\n                                {renderScheduleItem()}\n                            </div>\n                        </div>\n                        <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\" }}>\n                            <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>待辦事項</t2>\n                            </div>\n                            <div style={{ maxHeight: \"200px\", overflow: 'auto', minHeight: \"50px\" }}>\n                                {renderTodoItem()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div >\n    );\n} \n","import React, { Component } from 'react';\nimport * as antswitch from 'antd';\nimport Wardcarddetail from '../Wardcard/Wardcarddetail';\nimport Unpreviewwardcarddetail from '../Wardcard/UnpreviewWardCardDetail'\nimport Wardinfoindex from '../Wardinfoindex'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport './Bedview.scss'\nimport moment from 'moment';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport * as WardinfouserK from '../Wardinfouser-k'\n\n\nclass Bedview extends Component {\n    state = {\n        index: true,\n        previewmode: false,\n        simplemode: true,\n        SelectHISID: null,\n        source: []\n    };\n    HBEDApiGet() {\n        ApiProvider.getTableHBED()\n            .then(data => { this.setState({ source: data.data }) })\n            .catch(err => { console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err)); });\n    }\n    componentDidMount() { this.HBEDApiGet() }\n\n    onWardcardDisplay() {\n        const simple_style = { display: \"grid\", gridTemplateColumns: \"350px 1fr\", gridGap: \"5px\", marginTop: \"5px\" }\n        const Unsimple_style = { display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr 1fr\", gridTemplateRows: \"1fr 1fr 1fr\", gridGap: \"5px\", marginTop: \"5px\" }\n        const source = this.state.source;\n        if (source === null || source === undefined || source.length === 0) {\n            return null\n        }\n        const wardcarddetaillist = []\n        //simplemode true:病人摘要檢視(開) false:病人摘要檢視(關)\n        //previewmode true:床頭卡顯示(繁) flase:床頭卡顯示(簡) \n        if (this.state.simplemode) {\n            for (let index = 0; index < source.length; index++) {\n                const element = source[index]\n                const string = \"/nicu/ward/wardinfo/\" + element.HBEDNO\n                if (element.PHISTNUM.toString().trim() !== \"\") {\n                    wardcarddetaillist.push(\n                        <Link to={{ pathname: string, state: { data: element } }}\n                            style={{ border: this.state.SelectHISID === element.PHISTNUM ? \"2px solid rgb(59,151,224)\" : \"1px solid rgba(59,151,224,0.4)\", borderRadius: \"4px\" }}\n                            onClick={() => { this.setState({ SelectHISID: element.PHISTNUM }) }}>\n                            <Wardcarddetail key={index} data={element} previewmode={this.state.previewmode} hbedlist={source} />\n                        </Link>\n                    )\n                }\n            }\n            return (\n                <div style={this.state.simplemode ? simple_style : Unsimple_style}>\n                    <div className='wardcardcontent'>\n                        {wardcarddetaillist}\n                    </div>\n                    <Switch>\n                        <Route path={`${this.props.match.path}/wardindex`} component={Wardinfoindex} />\n                        <Route path={`${this.props.match.path}/wardinfo`} component={WardinfouserK.Wardinfouser} />\n                    </Switch>\n                </div>\n            );\n        }\n        else {\n            for (let index = 1; index < 15; index++) {\n                const element = source.filter(function (value, i) {\n                    return Number(value.HBEDNO) === index\n                })\n                if (index === 4 || index === 13) {\n                    //沒有4號以及13號床\n                    continue\n                }\n                if (element.length === 0) {\n                    wardcarddetaillist.push(\n                        <div style={{ border: \"1px solid rgba(59, 151, 225, 1)\" }}>\n                            <Unpreviewwardcarddetail bednumber={index} key={index} previewmode={this.state.previewmode} />\n                        </div>\n                    )\n                }\n                else {\n                    if (element[0].PHISTNUM.toString().trim() === \"\") {\n                        wardcarddetaillist.push(\n                            <div style={{ border: \"1px solid rgba(59, 151, 225, 1)\" }}>\n                                <Unpreviewwardcarddetail bednumber={index} key={index} previewmode={this.state.previewmode} />\n                            </div>\n                        )\n                    }\n                    else {\n                        wardcarddetaillist.push(\n                            <div style={{ border: \"1px solid rgba(59, 151, 225, 1)\" }}>\n                                <Wardcarddetail key={index} data={element[0]} previewmode={this.state.previewmode} hbedlist={source} />\n                            </div>\n                        )\n                    }\n                }\n            }\n            return (\n                <div style={this.state.simplemode ? simple_style : Unsimple_style}>\n                    {wardcarddetaillist}\n                </div>\n            );\n        }\n    }\n\n\n\n    render() {\n        function switch_titile_string(hisid, source) {\n            function addzero(value) {\n                if (value < 10) {\n                    return \"0\" + value\n                }\n                else return value\n            }\n            if (hisid === null) {\n                return \"NICU總覽\"\n            }\n            else {\n                const filterdata = source.filter(function (item, index, array) {\n                    return item.PHISTNUM === HISID;\n                });\n                const HBEDNUMBER = addzero(parseInt(filterdata[0].HBEDNO))\n                return \"床號\" + HBEDNUMBER + \"病人資訊摘要\"\n            }\n        }\n        const source = this.state.source\n        const HISID = this.state.SelectHISID\n        const title = switch_titile_string(HISID, source)\n        const WardCard = this.onWardcardDisplay()\n\n        return (\n            <div>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridGap: \"5px\" }}>\n                        <div style={{ height: \"40px\", display: \"flex\", alignItems: \"center\" }}>\n                            <t2 style={{ color: \"rgba(0, 0, 0, 0.85)\" }}>住院病人資訊 > {title}</t2>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: 'center', width: \"200px\" }}>\n                            <antswitch.Switch style={{ backgroundColor: this.state.previewmode === true ? \"#001a6d\" : \"rgba(0, 0, 0, 0.25)\" }} checkedChildren=\"即時生命徵象\" unCheckedChildren=\"即時生命徵象\" defaultChecked={this.state.previewmode} onChange={(checked) => { this.setState({ previewmode: checked }) }} />\n                            <antswitch.Switch style={{ backgroundColor: this.state.simplemode === true ? \"#001a6d\" : \"rgba(0, 0, 0, 0.25)\" }} checkedChildren=\"顯示摘要\" unCheckedChildren=\"顯示摘要\" defaultChecked={this.state.simplemode} onChange={(checked) => { this.setState({ simplemode: checked }) }} />\n                        </div>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto auto\", gridColumnGap: \"10px\" }}>\n                        <t3>資料更新時間</t3>\n                        <t3>{moment().format('YYYY/MM/DD HH:mm:ss')}</t3>\n                    </div>\n                </div>\n                {WardCard}\n            </div>\n        );\n    }\n}\n\nexport default Bedview;\n","import React, { Component } from 'react';\nimport { Icon, Upload, Table, Input, DatePicker, Button } from 'antd';\nimport { Link } from 'react-router-dom';\nimport * as ApiProvider from '../API/ApiProvider';\nimport moment from 'moment';\n\nclass Historyview extends Component {\n    state = {\n        MouseClick: 0,\n        allPatientDisplayData: [],\n        allPatientUnset: [],\n        allPatientSet: [],\n        selectedRowsArray: [],\n        hospitalindex: '',\n        selectedFile: null,\n        fileList: [],\n        uploading: false,\n        name: '',\n        hisid: '',\n        doctor: '',\n        transOuttime: undefined\n    }\n\n    componentDidMount() {\n        this.onChangeName = this.onChangeName.bind(this)\n        this.onChangeHisid = this.onChangeHisid.bind(this)\n        //this.onChangeDoctor = this.onChangeDoctor.bind(this)\n        this.onClickSearch = this.onClickSearch.bind(this)\n        this.onChangeDate = this.onChangeDate.bind(this)\n        console.log(\"Historyview componentDidMount\")\n        ApiProvider.getAllPatient()\n            .then(result => {\n                console.log(\"getAllPatient OK \" + JSON.stringify(result));\n                const setedUser = result.data.filter(item => item.transouttime === \"unset\");\n                const unsetUser = result.data.filter(item => item.transouttime !== \"unset\");\n                this.setState({\n                    allPatientDisplayData: setedUser,\n                    allPatientUnset: unsetUser,\n                    allPatientSet: setedUser\n                });\n            })\n            .catch(err => {\n                console.log(\"getAllPatient NG \" + JSON.stringify(err));\n            });\n    }\n\n    MouseClickTable(record) {\n        //console.log(this.state.MouseClick)\n        this.setState({\n            MouseClick: record\n        })\n    }\n\n    EditStyle(HISID, CASEID, TRANSINID, key) {\n        if (key === this.state.MouseClick) {\n            return (\n                <Link to={{ pathname: \"/nicu/patient/\" + HISID, state: { \"source\": [], \"HISID\": HISID, \"CASEID\": CASEID, \"BEDNUMBER\": 0, \"TYPE\": false, \"TRANSINID\": TRANSINID } }} style={{ height: \"40px\", width: \"100px\", borderRadius: \"4px\" }}>檢視</Link>\n            );\n        }\n        else return null\n    }\n\n    genderswitch(key) {\n        if (key === \"M\") {\n            return '男'\n        }\n        else {\n            return '女'\n        }\n    }\n\n    bornweeks(birthday) {\n        //console.log(Math.floor(birthday / 7))\n        //console.log(birthday % 7)\n        const weeks = Math.floor(birthday / 7)\n        const days = birthday % 7\n        if (days === 0) {\n            return weeks + '週歲'\n        }\n        else return weeks + '週' + days + '天'\n    }\n\n    exportClick() {\n        this.state.selectedRowsArray.map((data, index) => {\n            ApiProvider.exportJson(data.hospitalindex)\n                .then(result => {\n                    ApiProvider.downloadFile(result.data.filename)\n                        .then(resultD => {\n                            const url = window.URL.createObjectURL(new Blob([JSON.stringify(resultD.data)]));\n                            const link = document.createElement('a');\n                            link.href = url;\n                            link.setAttribute('download', result.data.filename);\n                            document.body.appendChild(link);\n                            link.click();\n                        }).catch(err => { })\n                })\n                .catch(err => { })\n        })\n    }\n\n    handleUpload = () => {\n        const { fileList } = this.state\n        const formData = new FormData()\n        fileList.forEach(file => {\n            formData.append('file', file)\n        })\n\n        this.setState({\n            uploading: true,\n        })\n\n        ApiProvider.uploadFile(formData)\n            .then(res => {\n                ApiProvider.importJson(res.data)\n                    .then(result => {\n                        ApiProvider.getAllPatient()\n                            .then(result => {\n                                const setedUser = result.data.filter(item => item.transouttime !== \"unset\");\n                                const unsetUser = result.data.filter(item => item.transouttime === \"unset\");\n                                this.setState({\n                                    allPatientDisplayData: setedUser,\n                                    allPatientUnset: unsetUser,\n                                    allPatientSet: setedUser\n                                });\n                            })\n                            .catch(err => {\n                                console.log(\"getAllPatient NG \" + JSON.stringify(err));\n                            });\n                    })\n                    .catch(err => { })\n            })\n            .catch(err => { })\n    }\n\n    deleteHistoryUser() {\n        this.state.selectedRowsArray.map((data, index) => {\n            ApiProvider.deletePatient(data.hospitalindex, data.hospitalnumber, data.id)\n                .then(res => {\n                    ApiProvider.getAllPatient()\n                        .then(result => {\n                            const setedUser = result.data.filter(item => item.transouttime !== \"unset\");\n                            const unsetUser = result.data.filter(item => item.transouttime === \"unset\");\n                            this.setState({\n                                allPatientDisplayData: setedUser,\n                                allPatientUnset: unsetUser,\n                                allPatientSet: setedUser\n                            });\n                        })\n                        .catch(err => {\n                            console.log(\"getAllPatient NG \" + JSON.stringify(err));\n                        });\n                })\n                .catch(err => { })\n        })\n    }\n\n    onChangeName(event) {\n        this.setState({ name: event.target.value })\n    }\n    onChangeHisid(event) {\n        this.setState({ hisid: event.target.value })\n    }\n    //onChangeDoctor(event) {\n    //this.setState({ doctor: event.target.value })\n    //}\n    onClickSearch() {\n        // ApiProvider.getAllPatient()\n        //     .then(result => {\n        //         const setedUser = result.data.filter(item => item.transouttime !== \"unset\" && item.hisid === this.state.hisid && item.pnamec === this.state.name);\n        //         const unsetUser = result.data.filter(item => item.transouttime === \"unset\" && item.hisid === this.state.hisid && item.pnamec === this.state.name);\n        //         console.log(this.state.transOuttime)\n        //         this.setState({\n        //             allPatientDisplayData: setedUser,\n        //             allPatientUnset: unsetUser,\n        //             allPatientSet: setedUser\n        //         });\n        //     })\n        //     .catch(err => {\n        //         console.log(\"getAllPatient NG \" + JSON.stringify(err));\n        //     });\n    }\n    onChangeDate(date, dateString) {\n        this.setState({ transOuttime: dateString })\n    }\n\n    Searchbar() {\n        const InputGroup = Input.Group;\n        const { RangePicker } = DatePicker;\n\n        return (\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <div style={{ fontSize: '16px' }}>\n                        個案姓名:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"輸入個案姓名\" onChange={this.onChangeName} value={this.state.name}></Input>\n                    </div>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        轉入時間:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        {/* <InputGroup compact> */}\n                        {/* <DatePicker placeholder=\"選擇轉出時間\" onChange={this.onChangeDate} /> */}\n                        <RangePicker style={{ width: \"250px\" }} format={\"YYYY/MM/DD\"} locale={\"zh_TW\"}\n                            placeholder={[\"請輸入日期\", \"請輸入日期\"]} onChange={this.onChangeDate} allowClear={false} />\n                        {/* </InputGroup> */}\n                    </div>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        病歷號碼:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"輸入病歷號碼\" onChange={this.onChangeHisid} value={this.state.hisid}></Input>\n                    </div>\n                </div>\n                {/*<div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        主治醫生:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"選擇主治醫師\" onChange={this.onChangeDoctor} value={this.state.doctor}></Input>\n                    </div>\n        </div>*/}\n                {/* <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <Button shape=\"circle\" icon=\"search\" onClick={this.onClickSearch} />\n                </div> */}\n            </div>\n        );\n    }\n\n    handleDisplaySwitchChange(event) {\n        // console.log(event.target.value)\n        console.log(this.state.allPatientSet)\n        console.log(this.state.allPatientUnset)\n        this.setState({\n            allPatientDisplayData: event.target.value == 'in' ? this.state.allPatientSet : this.state.allPatientUnset\n        })\n    }\n\n\n    render() {\n        // rowSelection object indicates the need for row selection\n        const rowSelection = {\n            onChange: (selectedRowKeys, selectedRows) => {\n                //console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows)\n                this.setState({ selectedRowsArray: selectedRows })\n            },\n            getCheckboxProps: record => ({\n                disabled: record.name === 'Disabled User', // Column configuration not to be checked\n                name: record.name,\n            }),\n        };\n        const columns = [\n            {\n                title: '病歷號碼',\n                dataIndex: 'id',\n                key: 'id',\n                width: \"10%\"\n            },\n            {\n                title: '個案名稱',\n                dataIndex: 'name',\n                key: 'name',\n                width: \"13%\"\n            },\n            {\n                title: '性別',\n                dataIndex: 'gender',\n                key: 'gender',\n                width: \"7%\"\n            },\n            {\n                title: '出生體重',\n                dataIndex: 'weight',\n                key: 'weight',\n                width: \"8%\"\n            },\n            {\n                title: '出生周數',\n                dataIndex: 'birweek',\n                key: 'birweek',\n                width: \"8%\"\n            },\n            {\n                title: '轉入時年齡',\n                dataIndex: 'transage',\n                key: 'transage',\n                width: \"10%\"\n            },\n            {\n                title: '院序號',\n                dataIndex: 'hospitalnumber',\n                key: 'hospitalnumber',\n                width: \"10%\"\n            },\n            {\n                title: '索引號',\n                dataIndex: 'hospitalindex',\n                key: 'hospitalindex',\n                width: \"17%\"\n            },\n            {\n                title: '轉入ICU時間',\n                dataIndex: 'transicutime',\n                key: 'transicutime',\n                width: \"10%\"\n            },\n            //{\n            //title: '主治醫師',\n            //dataIndex: 'maindoc',\n            //key: 'maindoc',\n            //width: \"10%\"\n            //},\n            {\n                dataIndex: 'clickstate',\n                key: 'clickstate',\n                width: \"7%\"\n            }\n        ];\n        function search(data, searchName) {\n            if (searchName === \"\" || searchName === undefined || searchName === null) {\n                return data\n            }\n            const filterData = data.filter(function (item, index, arr) {\n                console.log(item)\n                const fn = item.pnamec.toString().trim()\n                return fn.indexOf(searchName) >= 0\n            })\n            return filterData\n        }\n        function searchTime(data, searchTime) {\n            if (searchTime === \"\" || searchTime === undefined || searchTime === null) {\n                return data\n            }\n            const filterData = data.filter(function (item, index, arr) {\n                // console.log(item)\n                const fn = moment(item.transintime.toString().trim(), \"YYYYMMDD\").valueOf()\n                const st = moment(searchTime[0].toString().trim(), \"YYYYMMDD\").valueOf()\n                const et = moment(searchTime[1].toString().trim(), \"YYYYMMDD\").valueOf()\n                return st <= fn && fn <= et\n            })\n            return filterData\n        }\n\n        function searchNO(data, searchNO) {\n            if (searchNO === \"\" || searchNO === undefined || searchNO === null) {\n                return data\n            }\n            const filterData = data.filter(function (item, index, arr) {\n                console.log(item)\n                const HID = item.hisid.toString().trim()\n                return HID.match(searchNO)\n            })\n            return filterData\n        }\n        const rowData = this.state.allPatientDisplayData\n        const d = search(rowData, this.state.name)\n        const f = searchTime(d, this.state.transOuttime)\n        const H = searchNO(f, this.state.hisid)\n        const data = H.map((item, index) => {\n            return {\n                key: index,\n                id: item.hisid,\n                name: item.pnamec,\n                gender: this.genderswitch(item.psex),\n                weight: \"--\",\n                birweek: \"--\",\n                transage: \"--\",\n                hospitalnumber: item.caseid,\n                hospitalindex: item.transinid,\n                transicutime: item.transouttime,\n                maindoc: \"--\",\n                clickstate: this.EditStyle(item.hisid, item.caseid, item.transinid, index)\n            }\n        });\n\n        const { uploading, fileList } = this.state;\n        const props = {\n            onRemove: file => {\n                this.setState(state => {\n                    const index = state.fileList.indexOf(file);\n                    const newFileList = state.fileList.slice();\n                    newFileList.splice(index, 1);\n                    return {\n                        fileList: newFileList,\n                    };\n                });\n            },\n            beforeUpload: file => {\n                this.setState(state => ({\n                    fileList: [...state.fileList, file],\n                }));\n                return false;\n            },\n            fileList,\n            showUploadList: false\n        };\n        const handleDisplaySwitchChange = this.handleDisplaySwitchChange.bind(this);\n\n        return (\n            <div style={{ paddingLeft: \"24px\", paddingRight: \"24px\" }}>\n                <div style={{ fontSize: \"22px\", height: '50px', lineHeight: \"50px\" }}>\n                    歷史病歷管理\n                    <Button type=\"primary\" value=\"in\" style={{ borderRadius: \"50px\", fontSize: \"10px\", marginLeft: \"10px\" }} onClick={handleDisplaySwitchChange}>住院中</Button>\n                    <Button type=\"primary\" value=\"out\" style={{ borderRadius: \"50px\", fontSize: \"10px\", marginLeft: \"10px\" }} onClick={handleDisplaySwitchChange}>已轉出</Button>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\", height: '50px', gridColumnGap: \"10px\" }}>\n                    {this.Searchbar()}\n                    <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gridGap: \"10px\" }}>\n                        <div style={{ display: \"flex\", justifyContent: 'space-between', alignItems: \"center\" }}>\n                            <Upload {...props}>\n                                <Button style={{ width: \"100%\" }}>\n                                    <Icon type=\"upload\" /> 選擇檔案\n                                </Button>\n                            </Upload>\n                            <Button\n                                onClick={this.handleUpload.bind(this)}\n                                disabled={fileList.length === 0}\n                                style={{ width: \"100%\" }}\n                            >\n                                匯入\n                            </Button>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                            <Button onClick={this.exportClick.bind(this)} style={{ width: \"100%\" }}>匯出</Button>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                            <Button onClick={this.deleteHistoryUser.bind(this)} style={{ width: \"100%\" }}>刪除</Button>\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <Table rowSelection={rowSelection} columns={columns} dataSource={data} onRow={record => {\n                        return {\n                            onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                            onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                        };\n                    }} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Historyview;\n","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport './Crosssectionvitalsignchart.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport X2JS from 'x2js';\n\nclass Crosssectionvitalsignchart extends Component {\n    state = {\n        change: false,\n        sourcedata: [],\n        prepickerdate: null,\n        presource: null,\n        preinterval: null\n    }\n\n    centermonitorApiDataGet() {\n        function formatTimer(interval, pickerdate) {\n            const endTimeStamp = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    start: moment(endTimeStamp - (24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                    interval: 0\n                }\n            }\n            if (interval === 1) {\n                return {\n                    start: moment(endTimeStamp - (3 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                    interval: 1\n                }\n            }\n            if (interval === 2) {\n                return {\n                    start: moment(endTimeStamp - (7 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                    interval: 2\n                }\n            }\n            return {\n                start: moment(endTimeStamp - (14 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                interval: 3\n            }\n        }\n        function formatPickerDate(PickerDate) {\n            const nowDateForSeven = moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf() + (7 * 60 * 60 * 1000)\n            const newDateForZero = moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n            const now = moment().valueOf()\n            if (PickerDate === newDateForZero) {\n                if (now < nowDateForSeven) {\n                    return PickerDate - (24 * 60 * 60 * 1000)\n                }\n                return PickerDate\n            }\n            return PickerDate\n        }\n        const { type, interval, PickerDate, HID, source, CID, svg_id } = this.props\n        const PHID = HID.toString().trim()\n        const PCID = CID.toString().trim()\n        // console.log(interval, PickerDate)\n        const forPicker = formatPickerDate(PickerDate)\n        const optionvalue = formatTimer(interval, forPicker)\n        if (source === \"CM\") {\n            if (type === \"abp\") {\n                ApiProvider.getPatientwardvalueBoxPlot(PHID, optionvalue.start, optionvalue.end, type, optionvalue.interval)\n                    .then(data => {\n                        console.log(data.data)\n                        d3.select(\"#\" + svg_id).remove()\n                        this.drawChart(data.data);\n                    })\n                    .catch(err => { console.log(err) })\n            }\n            if (type === \"hr\" || type === \"rr\" || type === \"spo2\") {\n                ApiProvider.getPatientwardvalueBoxPlot(PHID, optionvalue.start, optionvalue.end, type, optionvalue.interval)\n                    .then(data => {\n                        console.log(data.data)\n                        d3.select(\"#\" + svg_id).remove()\n                        this.drawChart(data.data);\n                    })\n                    .catch(err => { console.log(err) })\n            }\n            if (type === \"nbp\") {\n                ApiProvider.getVitalSignData(PHID, optionvalue.start, optionvalue.end, type)\n                    .then(data => {\n                        console.log(data.data)\n                        d3.select(\"#\" + svg_id).remove()\n                        this.drawChart(data.data);\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    })\n            }\n            if (type === \"bt\") {\n                d3.select(\"#\" + svg_id).remove()\n                this.drawChart([]);\n            }\n        }\n        if (source === \"NIS\") {\n            const xm2 = new X2JS()\n            const st = moment(optionvalue.start, \"YYYYMMDDHHmmss\").format(\"YYYYMMDDHHmm\")\n            const et = moment(optionvalue.end, \"YYYYMMDDHHmmss\").format(\"YYYYMMDDHHmm\")\n            const QDVS = ApiProvider.getQDVS(PCID, st, et)\n                .then(data => {\n                    return xm2.xml2js(data.data).outmsg.resconts.rescont\n                })\n                .catch(err => { console.log(err) })\n\n            const QOXY = ApiProvider.getQOXY(PCID, st, et)\n                .then(data => {\n                    return xm2.xml2js(data.data).outmsg.resconts.rescont\n\n                })\n                .catch(err => { console.log(err) })\n            Promise.all([QDVS, QOXY]).then(result => {\n                function FormatNISData(QDVS, QOXY, type) {\n                    var HRNISLIST = []\n                    var RRNISLIST = []\n                    var SBPNISLIST = []\n                    var DBPNISLIST = []\n                    var BTNISLIST = []\n                    var Spo2NISLIST = []\n                    if (Array.isArray(QDVS)) {\n                        for (let index = 0; index < QDVS.length; index++) {\n                            const element = QDVS[index];\n                            const hr = element.pluse\n                            const rr = element.breath\n                            const SBP = element.systolic\n                            const DBP = element.diastolic\n                            const BT = element.temperature\n                            const time = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                            HRNISLIST.push({\n                                Data: hr,\n                                Time: time\n                            })\n                            RRNISLIST.push({\n                                Data: rr,\n                                Time: time\n                            })\n                            SBPNISLIST.push({\n                                Data: SBP,\n                                Time: time\n                            })\n                            DBPNISLIST.push({\n                                Data: DBP,\n                                Time: time\n                            })\n                            BTNISLIST.push({\n                                Data: BT,\n                                Time: time\n                            })\n                        }\n                    }\n                    if (Array.isArray(QOXY)) {\n                        for (let index = 0; index < QOXY.length; index++) {\n                            const element = QOXY[index];\n                            const spo2 = element.concen\n                            const time = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                            Spo2NISLIST.push({\n                                Data: spo2,\n                                Time: time\n\n                            })\n                        }\n                    }\n                    console.log(Spo2NISLIST)\n                    if (type === \"hr\") { return HRNISLIST }\n                    if (type === \"rr\") { return RRNISLIST }\n                    if (type === \"spo2\") { return Spo2NISLIST }\n                    if (type === \"abp\") { return [SBPNISLIST, DBPNISLIST] }\n                    if (type === \"bt\") { return BTNISLIST }\n                    return []\n                }\n                // console.log(FormatNISData(result[0], result[1], type))\n                d3.select(\"#\" + svg_id).remove()\n                this.drawChart(FormatNISData(result[0], result[1], type))\n            })\n        }\n    }\n    componentDidUpdate() {\n        const { interval, PickerDate, HID, source } = this.props\n        const PrePickerDate = this.state.prepickerdate\n        if (PrePickerDate !== PickerDate) {\n            this.setState({ prepickerdate: this.props.PickerDate })\n            this.centermonitorApiDataGet()\n        }\n        const Presource = this.state.presource\n        if (Presource !== source) {\n            this.setState({ presource: source })\n            this.centermonitorApiDataGet()\n        }\n        const Preinterval = this.state.preinterval\n        if (interval !== Preinterval) {\n            this.setState({ preinterval: interval })\n            this.centermonitorApiDataGet()\n        }\n        const PreHID = this.state.prehid\n        if (HID !== PreHID) {\n            this.setState({ prehid: HID })\n            this.centermonitorApiDataGet()\n        }\n    }\n\n    componentDidMount() {\n\n        this.setState({\n            prepickerdate: this.props.PickerDate,\n            presource: this.props.source,\n            preinterval: this.props.interval,\n            prehid: this.props.prehid\n        })\n        this.centermonitorApiDataGet()\n\n    }\n    drawChart(sourcedata) {\n        function formatxArray(startTime, interval) {\n            var xAxisarray = []\n            if (interval === 0) {\n                for (let index = 0; index < 25; index++) {\n                    if (index % 4 === 0) {\n                        xAxisarray.push(startTime + (index * 60 * 60 * 1000))\n                    }\n                }\n            }\n            else if (interval === 1) {\n                for (let index = 0; index < 19; index++) {\n                    if (index % 2 === 0) {\n                        xAxisarray.push(startTime + (index * 4 * 60 * 60 * 1000))\n                    }\n                }\n            }\n            else if (interval === 2) {\n                for (let index = 0; index < 21; index++) {\n                    xAxisarray.push(startTime + (index * 60 * 60 * 1000 * 8))\n                }\n            }\n            else {\n                for (let index = 0; index < 14; index++) {\n                    xAxisarray.push(startTime + (index * 60 * 60 * 1000 * 24))\n                }\n            }\n            return xAxisarray\n        }\n\n        function formatbotaxis(time, interval) {\n            var xAxisarray = []\n            if (interval === 0) {\n                xAxisarray.push(startTime + (17 * 60 * 60 * 1000))\n            }\n            else if (interval === 1) {\n                for (let index = 0; index < 3; index++) {\n                    xAxisarray.push(startTime + (17 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000))\n                }\n            }\n            else if (interval === 2) {\n                for (let index = 0; index < 21; index++) {\n                    xAxisarray.push(time + (index * 60 * 60 * 1000 * 8))\n                }\n            }\n            else {\n                for (let index = 0; index < 14; index++) {\n                    xAxisarray.push(time + (index * 60 * 60 * 1000 * 24))\n                }\n            }\n            return xAxisarray\n        }\n\n        var formatHour = d3.timeFormat(\"%H\")\n\n        function multiFormat(date) {\n            return formatHour(date)\n        }\n\n\n        //vitaldays true:threeday\n        const {\n            id_key,\n            svg_id,\n            startTime,\n            endTime,\n            height,\n            width,\n            interval, //0:1天 1:3天 2:1週 3:2週 \n            axisBot,\n            axisTop,\n            circlrcolor,\n            max,\n            min,\n            upper,\n            lower,\n            source,\n            type\n        } = this.props\n\n        // const width = window.screen.availWidth * 0.25, height = 100, viewwidth = width - 50, rect_width = width / 46\n        const viewwidth = width - 50\n        // const EndTime = formatendtime(defaultdate)\n        // var vital_interval = formatintervaldays(EndTime, vitaldays)\n\n        var y = d3.scaleLinear()\n            .domain([min, max])\n            .range([height, 0])\n\n        var x = d3.scaleLinear()\n            .domain([startTime, endTime])\n            .range([0, viewwidth - 1])\n\n\n        var yAxis = d3.axisLeft(y)\n            .tickValues([min, max])\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(15);\n\n\n        const xAxisvalue = formatxArray(startTime, interval)\n        const xAxisbotvalue = formatbotaxis(startTime, interval)\n\n        var xAxis = d3.axisTop(x)\n            .tickValues(xAxisvalue)\n            .tickSize(0, 0)\n            .tickPadding(5)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n        var xAxisbot = d3.axisBottom(x)\n            .tickValues(xAxisbotvalue)\n            .tickSize(0, 0)\n            .tickPadding(height + 10)\n            .tickFormat(function (d) { return moment(d).format(\"MM/DD\") });\n\n        var svg\n        if (axisTop) {\n            svg = d3.select(\"#\" + id_key)\n                .append(\"svg\")\n                .attr(\"id\", svg_id)\n                .style(\"width\", width + 10)\n                .style(\"height\", height + 25)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + 50 + \",\" + 20 + \")\");\n        }\n        else {\n            if (axisBot) {\n                svg = d3.select(\"#\" + id_key)\n                    .append(\"svg\")\n                    .attr(\"id\", svg_id)\n                    .style(\"width\", width)\n                    .style(\"height\", height + 25)\n                    .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + 50 + \",\" + 5 + \")\");\n            }\n            else {\n\n                svg = d3.select(\"#\" + id_key)\n                    .append(\"svg\")\n                    .attr(\"id\", svg_id)\n                    .style(\"width\", width)\n                    .style(\"height\", height + 10)\n                    .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + 50 + \",\" + 5 + \")\");\n            }\n        }\n\n        if (axisTop) {\n            svg.append(\"g\")\n                .call(xAxis)\n                .attr(\"class\", \"axis\");\n        }\n\n        if (axisBot) {\n            svg.append(\"g\")\n                .call(xAxisbot)\n                .attr(\"class\", \"axis\");\n\n        }\n\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n        //上下橫線\n        svg.append('line')\n            .attr('x1', x(startTime))\n            .attr('y1', y(max))\n            .attr('x2', x(endTime))\n            .attr('y2', y(max))\n            .style('stroke', 'rgba(220,220,220,1)')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n        svg.append('line')\n            .attr('x1', x(startTime))\n            .attr('y1', y(min))\n            .attr('x2', x(endTime))\n            .attr('y2', y(min))\n            .style('stroke', 'rgba(220,220,220,1)')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n\n        if (interval === 0) {\n            for (let index = 0; index < 25; index++) {\n                if (index % 8 === 0) {\n                    svg.append('line')\n                        .attr('x1', x(startTime + (index * 60 * 60 * 1000)))\n                        .attr('y1', 0)\n                        .attr('x2', x(startTime + (index * 60 * 60 * 1000)))\n                        .attr('y2', height)\n                        .style('stroke', 'black')\n                        .style('stroke-width', 2);\n                }\n                else {\n                    svg.append('line')\n                        .attr('x1', x(startTime + (index * 60 * 60 * 1000)))\n                        .attr('y1', 0)\n                        .attr('x2', x(startTime + (index * 60 * 60 * 1000)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(220,220,220,1)')\n                        .style('stroke-width', 1)\n                        .style('stroke-dasharray', 5.5);\n                }\n            }\n\n            drawshadow(startTime, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n\n        }\n        if (interval === 1) {\n            for (let index = 0; index < 19; index++) {\n                if (index % 2 === 0) {\n                    svg.append('line')\n                        .attr('x1', x(startTime + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y1', 0)\n                        .attr('x2', x(startTime + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y2', height)\n                        .style('stroke', 'black')\n                        .style('stroke-width', 2);\n                }\n                else {\n                    svg.append('line')\n                        .attr('x1', x(startTime + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y1', 0)\n                        .attr('x2', x(startTime + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(220,220,220,1)')\n                        .style('stroke-width', 1)\n                        .style('stroke-dasharray', 5.5);\n                }\n            }\n\n            drawshadow(startTime, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n        }\n        if (interval === 2) {\n            for (let index = 0; index < 22; index++) {\n                svg.append('line')\n                    .attr('x1', x(startTime + (index * 60 * 60 * 1000 * 8)))\n                    .attr('y1', 0)\n                    .attr('x2', x(startTime + (index * 60 * 60 * 1000 * 8)))\n                    .attr('y2', height)\n                    .style('stroke', 'black')\n                    .style('stroke-width', 1);\n            }\n\n            drawshadow(startTime, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n        }\n        if (interval === 3) {\n            for (let index = 0; index < 15; index++) {\n                svg.append('line')\n                    .attr('x1', x(startTime + (index * 60 * 60 * 1000 * 24)))\n                    .attr('y1', 0)\n                    .attr('x2', x(startTime + (index * 60 * 60 * 1000 * 24)))\n                    .attr('y2', height)\n                    .style('stroke', 'black')\n                    .style('stroke-width', 1);\n            }\n\n            drawshadow(startTime, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n        }\n\n        function formatBox(startTime, interval) {\n            function interFormat(startTime, interval) {\n                var TimeArray = []\n                for (let index = 0; index < interval; index++) {\n                    if (interval === 24) {\n                        const boxTime = startTime + (30 * 60 * 1000) + (index * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 18) {\n                        const boxTime = startTime + (2 * 60 * 60 * 1000) + (index * 4 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 21) {\n                        const boxTime = startTime + (4 * 60 * 60 * 1000) + (index * 8 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else {\n                        const boxTime = startTime + (12 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                }\n                return TimeArray\n            }\n            if (interval === 0) {\n                return interFormat(startTime, 24)\n            }\n            if (interval === 1) {\n                return interFormat(startTime, 18)\n            }\n            if (interval === 2) {\n                return interFormat(startTime, 21)\n            }\n            return interFormat(startTime, 14)\n        }\n        function formatBoxWidth(viewwidth, interval) {\n            if (interval === 0) {\n                return viewwidth / 24\n            }\n            if (interval === 1) {\n                return viewwidth / 18\n            }\n            if (interval === 2) {\n                return viewwidth / 21\n            }\n            return viewwidth / 14\n        }\n        function drawshadow(startTime, interval, lower, upper, type) {\n            const LimitBoxTimer = formatBox(startTime, interval)\n            for (let index = 0; index < LimitBoxTimer.length; index++) {\n                const boxwidth = formatBoxWidth(width, interval)\n                // console.log(boxwidth)\n                const element = LimitBoxTimer[index];\n                svg.append('line')\n                    .attr('x1', x(element))\n                    .attr('y1', y(lower))\n                    .attr('x2', x(element))\n                    .attr('y2', y(upper))\n                    .style('stroke', circlrcolor)\n                    .style('opacity', 0.5)\n                    .style('stroke-width', boxwidth)\n\n                if (type === \"nbp\" || type === \"abp\") {\n                    svg.append('line')\n                        .attr('x1', x(element))\n                        .attr('y1', y(35))\n                        .attr('x2', x(element))\n                        .attr('y2', y(55))\n                        .style('stroke', circlrcolor)\n                        .style('opacity', 0.2)\n                        .style('stroke-width', boxwidth)\n                }\n            }\n        }\n        function drawData(type, source, sourcedata, interval, boxwidth) {\n            function formatShift(interval) {\n                if (interval === 0) {\n                    return 30 * 60 * 1000\n                }\n                if (interval === 1) {\n                    return 2 * 60 * 60 * 1000\n                }\n                if (interval === 2) {\n                    return 4 * 60 * 60 * 1000\n                }\n                return 12 * 60 * 60 * 1000\n            }\n            // console.log(source)\n            if (source === \"CM\") {\n                if (type === \"abp\") {\n                    const dataAbps = sourcedata.abps\n                    const dataAbpd = sourcedata.abpd\n                    for (let index = 0; index < dataAbpd.length; index++) {\n                        const element = dataAbpd[index];\n                        const q1 = element.Q1\n                        const q2 = element.Q2\n                        const q3 = element.Q3\n                        const q4 = element.Q4\n                        const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + formatShift(interval)\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(q1))\n                            .attr(\"y2\", y(q4))\n                            .attr(\"stroke\", circlrcolor)\n                            .style('opacity', 0.5)\n                            // .attr(\"stroke\", \"blcak\")\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q2) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style('opacity', 0.5)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg\n                            .selectAll(\"toto\")\n                            .data([q1, q4])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('opacity', 0.5)\n                            .style('stroke-width', 1);\n                    }\n                    for (let index = 0; index < dataAbps.length; index++) {\n                        const element = dataAbps[index];\n                        const q1 = element.Q1\n                        const q2 = element.Q2\n                        const q3 = element.Q3\n                        const q4 = element.Q4\n                        const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + formatShift(interval)\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(q1))\n                            .attr(\"y2\", y(q4))\n                            .attr(\"stroke\", circlrcolor)\n                            // .attr(\"stroke\", \"blcak\")\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q2) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg\n                            .selectAll(\"toto\")\n                            .data([q1, q4])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1);\n                    }\n                }\n                if (type === \"hr\" || type === \"rr\" || type === \"spo2\") {\n                    for (let index = 0; index < sourcedata.length; index++) {\n                        const element = sourcedata[index];\n                        const q1 = element.Q1\n                        const q2 = element.Q2\n                        const q3 = element.Q3\n                        const q4 = element.Q4\n                        const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + formatShift(interval)\n                        console.log(Xtime)\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(q1))\n                            .attr(\"y2\", y(q4))\n                            .attr(\"stroke\", circlrcolor)\n                            // .attr(\"stroke\", \"blcak\")\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q2) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg\n                            .selectAll(\"toto\")\n                            .data([q1, q4])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1);\n\n                    }\n                }\n                if (type === \"nbp\") {\n                    for (let index = 0; index < sourcedata.length; index++) {\n                        const element = sourcedata[index];\n                        const Xtime = moment(element.Time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                        const SBP = element.SBP\n                        const DBP = element.DBP\n                        // console.log(SBP)\n                        if (SBP === 0 || DBP === 0) {\n                            continue\n                        }\n                        else {\n                            // console.log(element)\n                            svg.append('circle')\n                                .attr('cx', x(Xtime))\n                                .attr('cy', y(SBP))\n                                .attr('r', 3)\n                                .style('fill', circlrcolor)\n\n\n                            svg.append('circle')\n                                .attr('cx', x(Xtime))\n                                .attr('cy', y(DBP))\n                                .attr('r', 3)\n                                .style('opacity', 0.5)\n                                .style('fill', circlrcolor)\n                        }\n\n                    }\n                }\n            }\n            else {\n                if (type === \"abp\" || type === \"nbp\") {\n                    if (sourcedata === undefined) {\n                        return null\n                    }\n                    if (sourcedata.length === 0) {\n                        return null\n                    }\n                    const SBP = sourcedata[0]\n                    const DBP = sourcedata[1]\n                    for (let index = 0; index < SBP.length; index++) {\n                        const element = SBP[index];\n                        svg.append('circle')\n                            .attr('cx', x(element.Time))\n                            .attr('cy', y(element.Data))\n                            .attr('r', 3)\n                            .style('fill', circlrcolor)\n\n                    }\n\n                    for (let index = 0; index < DBP.length; index++) {\n                        const element = DBP[index];\n                        svg.append('circle')\n                            .attr('cx', x(element.Time))\n                            .attr('cy', y(element.Data))\n                            .attr('r', 3)\n                            .style('fill', circlrcolor)\n                            .style('opacity', 0.5)\n\n                    }\n                }\n                else {\n                    for (let index = 0; index < sourcedata.length; index++) {\n                        const element = sourcedata[index];\n                        svg.append('circle')\n                            .attr('cx', x(element.Time))\n                            .attr('cy', y(element.Data))\n                            .attr('r', 3)\n                            .style('fill', circlrcolor)\n\n                    }\n                }\n\n            }\n        }\n    }\n\n    changestate() {\n        this.setState({\n            change: !this.state.change\n        })\n    }\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default Crosssectionvitalsignchart;","import React, { Component } from 'react';\nimport { Select, Modal, Tabs, Icon, Button } from 'antd';\nimport Crosssectionvitalsignchart from './Crossectionvitalsignchart'\nimport Warningsetting from './Warningsettinglist'\n// import Addwarningsetting from './Addnewwaring'\nimport './Vitalsign.scss'\n// import { formatxArrayhalf, formatendtime } from '../../Function/Timeformat'\n// import { simulationCentermonitordata, simulationnisdata } from '../../Function/Wardstate'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\n\nclass Vitalsign extends Component {\n\n    state = {\n        vital_days: 0, //false:一天 true:三天\n        source: \"CM\", //false:中央站 true:NIS\n        visible: false,\n        visibleConflict: false,\n        chackstate_one: 0,\n        chackstate_three: 0,\n        datasource: null,\n        addNewWarningDateStr: null,\n        addNewWarningHourStr: null,\n\n        CenterMonitorValue: null,\n        preHISID: null,\n        prePickerDate: null\n\n    }\n    componentDidUpdate() {\n\n        const { PickerDate } = this.props\n        const { prePickerDate } = this.state\n        const Time = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf()).format(\"YYYYMMDDHHmmss\")\n        const PickerTime = moment(PickerDate + (30 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\")\n        const nowDate = moment(moment(moment().valueOf() - (60 * 60 * 10000)).format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        const preHISID = this.state.preHISID\n        if (Phistnum !== preHISID || PickerDate !== prePickerDate) {\n            if (nowDate === PickerDate) {\n                this.setState({ preHISID: Phistnum, prePickerDate: PickerDate })\n                this.getVitalSignData(Time, Phistnum)\n            }\n            else {\n                this.setState({ preHISID: Phistnum, prePickerDate: PickerDate })\n                this.getVitalSignData(PickerTime, Phistnum)\n            }\n        }\n    }\n    componentDidMount() {\n        //選取現在時間\n        const nowTimeStamp = moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf() + (30 * 60 * 60 * 1000)\n        const Time = moment(nowTimeStamp).format(\"YYYYMMDDHHmmss\")\n        const { PickerDate } = this.props\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ preHISID: Phistnum, prePickerDate: PickerDate })\n        this.getVitalSignData(Time, Phistnum)\n    }\n\n    getVitalSignData(Time, Phistnum) {\n        const Interval = this.formatvital_daysToInterval()\n        console.log(Interval, Time, Phistnum)\n        ApiProvider.getPatientwarMidValue(Phistnum, Time, Interval)\n            .then(data => { console.log(data.data); this.setState({ CenterMonitorValue: data.data }) })\n            .catch(err => { console.log(err) })\n    }\n\n    onVitalCheck(interval) {\n        console.log(interval)\n        var gridarray = []\n        if (interval === 1) {\n            for (let index = 0; index < 18; index++) {\n                const checknumber = index + 1\n                if (checknumber === this.state.chackstate_three) {\n                    gridarray.push(<div key={index} style={{ height: 330, width: \"100%\", border: \"rgba(245, 166, 35, 1) 1px solid\", cursor: \"pointer\" }}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ height: 330, width: \"100%\", cursor: \"pointer\" }} onClick={() => this.onClickCheckgrid(checknumber, interval)}></div>)\n            }\n        }\n        else {\n            for (let index = 0; index < 24; index++) {\n                const checknumber = index + 1\n                if (checknumber === this.state.chackstate_one) {\n                    gridarray.push(<div key={index} style={{ height: 330, width: \"100%\", border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => { console.log(index) }}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ height: 330, width: \"100%\", cursor: \"pointer\" }} onClick={() => this.onClickCheckgrid(checknumber, interval)}></div>)\n            }\n        }\n        return gridarray;\n    }\n\n    formatvital_daysToInterval() {\n        const vitaldays = this.state.vital_days\n        if (vitaldays === 0) {\n            return 0\n        }\n        return 1;\n    }\n\n    onClickCheckgrid(number, Interval) {\n        function startTime(PickerDate, Interval) {\n            const End = PickerDate + (31 * 60 * 60 * 1000)\n            if (Interval === 0) {\n                return End - (24 * 60 * 60 * 1000)\n            }\n            return End - (3 * 24 * 60 * 60 * 1000)\n        }\n        function intervalforhour(Interval) {\n            if (Interval === 0) {\n                return 1;\n            }\n            return 4;\n        }\n        const { PickerDate } = this.props\n        const time = moment(startTime(PickerDate, Interval) + (intervalforhour(Interval) * (number - 1) * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.getVitalSignData(time, Phistnum)\n    }\n\n    // showModal = () => { this.setState({ visible: true, }); };\n\n    // handleSelectDate = dataStrings => { this.setState({ addNewWarningDateStr: dataStrings }) }\n\n    // handleSelectHour = hourString => { this.setState({ addNewWarningHourStr: hourString }) }\n\n    // handleOk = e => { this.setState({ visibleConflict: true }); };\n\n    // handleOkConflict = e => {\n    //     this.setState({\n    //         visible: false,\n    //         visibleConflict: false\n    //     });\n    // };\n\n    // handleCancel = e => {\n    //     this.setState({\n    //         visible: false,\n    //     });\n    // };\n\n    // handleCancelConflict = e => {\n    //     this.setState({\n    //         visible: true,\n    //         visibleConflict: false,\n    //     });\n    // };\n\n    // sourcehandleChange = (e) => {\n    //     this.setState({ source: e.target.value })\n    // }\n\n\n    // intervalhandleChange = (e) => {\n    //     // this.vitalDataGet(value, PickerDate)\n    //     this.setState({\n    //         vital_days: parseInt(e.target.value),\n    //         chackstate_one: 0,\n    //         chackstate_three: 0,\n    //         // datasource: this.switchdata(value, this.state.source)\n\n    //     })\n\n    // }\n\n\n    render() {\n        function centervalueNull(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            return value\n        }\n        function centervaluetoNull(value) {\n            function FilterList(DataList, type) {\n                const filterData = DataList.filter(function (value, index, arr) {\n                    return value.type === type\n                })\n                if (filterData.length === 0) {\n                    return null\n                }\n                return filterData[0].Mid\n            }\n            if (value === undefined || value === null) {\n                return {\n                    hr: null,\n                    rr: null,\n                    bt: null,\n                    spo2: null,\n                    abpd: null,\n                    abpm: null,\n                    abps: null,\n                    nbpm: null,\n                    nbps: null,\n                    nbpd: null\n                }\n            }\n            return {\n                hr: FilterList(value, \"hr\"),\n                rr: FilterList(value, \"rr\"),\n                bt: FilterList(value, \"bt\"),\n                spo2: FilterList(value, \"spo2\"),\n                abpd: FilterList(value, \"abpd\"),\n                abpm: FilterList(value, \"abpm\"),\n                abps: FilterList(value, \"abps\"),\n                nbpd: FilterList(value, \"nbpd\"),\n                nbps: FilterList(value, \"nbps\"),\n                nbpm: FilterList(value, \"nbpm\"),\n            }\n        }\n\n        function vitaldaysBool(vitaldays) {\n            if (vitaldays === 3) {\n                return true\n            }\n            return false\n        }\n\n        function formatPickerTimer(pickerdate, interval) {\n            if (interval === 0) {\n                return {\n                    startTime: pickerdate + (7 * 60 * 60 * 1000),\n                    endTime: pickerdate + (31 * 60 * 60 * 1000)\n                }\n            }\n            else {\n                return {\n                    startTime: pickerdate + (31 * 60 * 60 * 1000) - (3 * 24 * 60 * 60 * 1000),\n                    endTime: pickerdate + (31 * 60 * 60 * 1000)\n                }\n\n            }\n        }\n        // const { Option } = Select;\n        // const { TabPane } = Tabs;\n        // const handleSelectDate = this.handleSelectDate;\n        // const handleSelectHour = this.handleSelectHour;\n\n\n\n\n        // const waringsettingarray = []\n        // for (let index = 0; index < 20; index++) {\n        //     waringsettingarray.push(<Warningsetting key={index}></Warningsetting>)\n\n        // }\n        const width = window.screen.availWidth * 0.25\n        const centervalue = centervaluetoNull(this.state.CenterMonitorValue)\n        const pickerTimer = formatPickerTimer(this.props.PickerDate, this.state.vital_days)\n        const PickerDate = this.props.PickerDate\n        console.log(this.state.CenterMonitorValue)\n        return (\n            <div>\n                {/* <Modal\n                    title=\"生命徵象警示範圍設定\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    width={1000}>\n                    <Tabs defaultActiveKey=\"1\">\n                        <TabPane tab=\"新增警示設定\" key=\"1\">\n                            <Addwarningsetting dateCallback={handleSelectDate} hourCallback={handleSelectHour}></Addwarningsetting>\n                        </TabPane>\n                        <TabPane tab=\"警示設定清單\" key=\"2\">\n                            <div style={{ maxHeight: \"400px\", overflow: \"auto\" }}>\n                                {waringsettingarray}\n                            </div>\n                        </TabPane>\n                    </Tabs>\n                </Modal>\n                <Modal\n                    title=\"您設定的生效時間範圍與以下的歷史變更紀錄時間衝突，是否確定要覆蓋？\"\n                    visible={this.state.visibleConflict}\n                    onOk={this.handleOkConflict}\n                    onCancel={this.handleCancelConflict}\n                    width={1000}>\n                    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                        <Icon type=\"info-circle\" style={{ color: \"darkorange\", width: \"24px\", height: \"24px\" }} />\n                        <div style={{ marginLeft: \"8px\" }}>\n                            <p>點選\"確定\"將覆蓋資料，點選\"取消\"回到設定頁面</p>\n                            <p>1. HR：</p>\n                            <p>舊設定值：2019-08-01 ~ 2019-08-11</p>\n                            <p>新設定值：2019-08-01 ~ 2019-08-20</p>\n                        </div>\n                    </div>\n                </Modal> */}\n                <div style={{ display: 'flex', alignItems: 'center', height: \"36px\", backgroundColor: \"#71b0e46e\", padding: \"0px 16px\" }}>\n                    <div style={{ fontSize: \"16px\" }}>生命徵象</div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridGap: \"5px\", marginLeft: \"20px\" }}>\n                        <div className={this.state.source === \"CM\" ? \"vitalBtnSource\" : \"vitalBtnSelectSource\"} style={{ marginRight: \"1px\" }} onClick={() => { this.setState({ source: \"CM\" }) }}>\n                            中央站資訊\n                        </div>\n                        <div className={this.state.source === \"NIS\" ? \"vitalBtnSource\" : \"vitalBtnSelectSource\"} onClick={() => { this.setState({ source: \"NIS\" }) }}>\n                            護理系統資訊\n                        </div>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridGap: \"2px\", marginLeft: \"15px\" }}>\n                        <div className={this.state.vital_days === 0 ? \"vitalBtnInterval\" : \"vitalBtnSelectInterval\"} style={{ marginRight: \"1px\" }} onClick={() => { this.setState({ vital_days: 0 }) }}>\n                            顯示一天\n                        </div>\n                        <div className={this.state.vital_days === 1 ? \"vitalBtnInterval\" : \"vitalBtnSelectInterval\"} onClick={() => { this.setState({ vital_days: 1 }) }}>\n                            顯示三天\n                        </div>\n                    </div>\n                    {/* <Button width={90} type=\"primary\" onClick={this.showModal}>閾值調整</Button> */}\n                </div>\n                <div style={{ borderRadius: \"4px\", border: \"rgba(232,232,232,1) 1px solid\", height: \"400px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"80px 1fr 80px 1fr\" }}>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#779F50\", display: \"flex\", justifyContent: \"center\" }}>HR</div>\n                                    <div style={{ fontSize: \"2rem\", color: \"#779F50\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.hr)}</div>\n                                </div>\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>NBP</div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.nbpd)}/{centervalueNull(centervalue.nbps)}</div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>({centervalueNull(centervalue.nbpm)})</div>\n                                </div>\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>ABP</div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.abpd)}/{centervalueNull(centervalue.abps)}</div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>({centervalueNull(centervalue.abpm)})</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ position: \"relative\" }}>\n                            <div style={{ position: \"absolute\", top: 20, left: 50, width: width - 50, height: 330 }}>\n                                <div style={{ display: \"grid\", gridTemplateColumns: this.state.vital_days === 1 ? \"repeat(18, 1fr)\" : \"repeat(24,1fr)\" }}>\n                                    {this.onVitalCheck(this.state.vital_days)}\n                                </div>\n                            </div>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"HR_svg\"}\n                                id_key={\"HR_div\"}\n                                type={\"hr\"}\n                                source={this.state.source}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={100}\n                                upper={160}\n                                axisBot={false}\n                                axisTop={true}\n                                circlrcolor=\"#779F50\"\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={200}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"NBP_svg\"}\n                                id_key={\"NBP_div\"}\n                                type={\"nbp\"}\n                                source={this.state.source}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={55}\n                                upper={75}\n                                axisBot={false}\n                                axisTop={false}\n                                circlrcolor={\"#C12528\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={100}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"ABP_svg\"}\n                                id_key={\"ABP_div\"}\n                                type={\"abp\"}\n                                source={this.state.source}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={55}\n                                upper={75}\n                                axisBot={true}\n                                axisTop={false}\n                                circlrcolor={\"#C12528\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={100}>\n                            </Crosssectionvitalsignchart>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#4773B8\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>\n                                        SpO<sub style={{ bottom: \"-1em\" }}>2</sub>\n                                    </div>\n                                    <div style={{ fontSize: \"2rem\", color: \"#4773B8\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.spo2)}%</div>\n                                </div>\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#7F3DB5\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>BT</div>\n                                    <div style={{ fontSize: \"2rem\", color: \"#7F3DB5\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>--</div>\n                                </div>\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#DE7531\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>RR</div>\n                                    <div style={{ fontSize: \"2rem\", color: \"#DE7531\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.rr)}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ position: \"relative\" }}>\n                            <div style={{ position: \"absolute\", top: 20, left: 50, width: width - 50, height: 330 }}>\n                                <div style={{ display: \"grid\", gridTemplateColumns: vitaldaysBool(this.state.vital_days) ? \"repeat(18, 1fr)\" : \"repeat(24,1fr)\" }}>\n                                    {this.onVitalCheck(this.state.vital_days)}\n                                </div>\n                            </div>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"SpO2_svg\"}\n                                id_key={\"SpO2_div\"}\n                                type={\"spo2\"}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={90}\n                                upper={100}\n                                axisBot={false}\n                                axisTop={true}\n                                circlrcolor={\"#4773B8\"}\n                                colorshadow={\"#4773B8\"}\n                                min={60}\n                                max={100}\n                                source={this.state.source}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"BT_svg\"}\n                                id_key={\"BT_div\"}\n                                type={\"bt\"}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                source={this.state.source}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={36}\n                                upper={38}\n                                axisBot={false}\n                                axisTop={false}\n                                circlrcolor={\"#7F3DB5\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={33}\n                                max={48}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"RR_svg\"}\n                                id_key={\"RR_div\"}\n                                type={\"spo2\"}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={20}\n                                upper={60}\n                                axisBot={true}\n                                axisTop={false}\n                                circlrcolor={\"#DE7531\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={100}\n                                source={this.state.source}>\n                            </Crosssectionvitalsignchart>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n\n}\n\nexport default Vitalsign;\n","import React, { Component } from 'react';\nimport dragdown from '../../Image/svg/dragdown.svg'\n\nclass Warningsetting extends Component {\n    state = {\n        dragstate: false\n    }\n    onClickdrag = () => {\n        this.setState(\n            {\n                dragstate: !this.state.dragstate\n            }\n        )\n    }\n    render() {\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div style={{ height: 50, background: \"rgba(238,238,238,1)\", padding: \"10px 16px\", display: \"flex\", justifyContent: \"space-between\" }}>\n                    <div style={{ display: \"flex\" }}>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>2019-06-01 08:00</div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", marginLeft: \"20px\" }}>\n                            <div style={{ border: \"red 1px solid\", borderRadius: \"4px\", cursor: \"pointer\", color: \"red\", padding: \"5px 20px\", background: \"white\" }}>刪除</div>\n                        </div>\n                    </div>\n                    <div onClick={this.onClickdrag} style={{ transform: this.state.dragstate ? \"scaleY(1)\" : \"scaleY(-1)\" }}>\n                        <img src={dragdown} alt=\"dragdown\"></img>\n                    </div>\n                </div>\n                <div style={{ display: this.state.dragstate ? \"block\" : \"none\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 4fr 1fr 4fr\" }}>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>HR</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>ABP</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>NBP</div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>SpO2</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>BT</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>RR</div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ height: 50, padding: \"10px 16px\", display: \"flex\", alignItems: \"center\" }}>生效時間範圍:2019-06-01 08:00~2019-06-31 08:00</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Warningsetting","import React, { Component } from 'react';\nimport { Button, DatePicker, Checkbox } from 'antd';\nimport moment from 'moment';\nimport displaylogo from '../Image/svg/filter.svg'\nimport { daysdiff } from '../Function/Timeformat'\nimport { pregancyweeksanddays } from '../Function/Wardbedfunction'\nimport './Controlbar.scss'\n// import * as ApiProvider from '../API/ApiProvider';\nimport * as WardState from '../Function/Wardstate'\nimport locale from 'antd/es/date-picker/locale/zh_TW';\n\n\nclass Controlbar extends Component {\n    state = {\n        display_Mode: false,\n        item: this.props.item_array,\n        scrollstate: 0,\n    }\n    sendData = (itwm_array) => {\n        this.props.parentCallback(itwm_array);\n    }\n\n\n    sendDateData = (PickerDate) => {\n        this.props.parentDateCallback(PickerDate);\n    }\n    //快速滑動\n    scrollToAnchor = (anchorName) => {\n        if (anchorName) {\n            let anchorElement = document.getElementById(anchorName);\n            if (anchorElement) { anchorElement.scrollIntoView(); }\n        }\n    }\n    onChange = (checkedValues) => {\n        this.sendData(checkedValues)\n\n    }\n    onDateChange = (date, dateString) => {\n        this.sendDateData(date.valueOf())\n    }\n    open_display() {\n        this.setState({\n            display_Mode: !this.state.display_Mode\n        })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo, PickerDate } = this.props\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const btemp = bTime - (6 * day)\n                bronDate <= btemp && this.sendDateData(bTime)\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD')).valueOf()\n                this.sendDateData(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const atemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= atemp && this.sendDateData(aTime)\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n\n        const btn_style = {\n            unclick_style: { borderRadius: \"4px\", color: \"#001a6d88\", border: \"1px solid #001a6d88\", padding: \"0px 4px\", height: \"30px\" }\n        }\n\n        function Monthformat(month) {\n            return month + 1\n        }\n        function timeformat(timestring) {\n            return new Date(timestring).getFullYear() + \"/\" + Monthformat(new Date(timestring).getMonth()) + \"/\" + new Date(timestring).getDate()\n        }\n        function valueFormat(value) {\n            if (value === \"\" || value === null || value === undefined) {\n                return \"--\"\n            }\n            return value.toString()\n        }\n        function valueBornWeight(value) {\n            if (value === \"\" || value === null || value === undefined || value === 0) {\n                return \"\"\n            }\n            return value.toString() + \"g → \"\n        }\n        const display_style = {\n            displye_mode: { position: \"absolute\", right: '0px', top: \"50px\", width: \"200px\", background: \"white\", boxShadow: \"3px 3px 12px\", zIndex: \"100\", borderRadius: \"4px\" },\n            non_display_mode: { display: \"none\" },\n            check_area: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\" },\n            check_text: { padding: \"4px\", width: \"140px\", borderRadius: \"4px\", borderColor: 'rgba(0, 0, 0, 0.15)', borderStyle: \"solid\", borderWidth: \"1px\", marginLeft: \"10px\", borderRadius: \"4px\" }\n        }\n\n        function disabledDate(current) {\n            // Can not select days before today and today\n            const endvalue = moment(caseinfo.PBASINGNINFO.PBIRTHDT, 'YYYYMMDD')\n            return endvalue.endOf('day') > current || current > moment().endOf('day')\n        }\n\n        const { caseinfo, btnlist, PickerDate } = this.props\n        const weightList = caseinfo.WEIGHT\n        const Birthday = caseinfo.PBASINGNINFO.PBIRTHDT\n        console.log(Birthday)\n        const BornWeight = WardState.BornWeight(weightList, Birthday)\n        const DayWeight = WardState.selectweight(weightList, PickerDate)\n        const btn = btnlist.map(\n            (item, index) => <Button onClick={this.scrollToAnchor.bind(this, item.scrollpoint)} key={index} style={btn_style.unclick_style}>\n                <t3>{item.name}</t3>\n            </Button>\n        )\n        console.log(moment(PickerDate))\n        return (\n            // <div>\n            <div className='controlbarlayout'>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto auto\", gridColumnGap: \"30px\" }}>\n                    <DatePicker locale={locale} width={140} onChange={this.onDateChange} value={moment(PickerDate)} allowClear={false} showToday={false} disabledDate={(current) => { return current > moment().startOf(\"day\") || current < moment(Birthday, \"YYYYMMDD\").add(-1, \"days\").endOf(\"day\") }} />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"2px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                    <div style={{ display: 'grid', gridTemplateColumns: \"repeat(3,auto)\", gridColumnGap: \"30px\", alignContent: \"center\" }}>\n                        <t2>矯正週數：{pregancyweeksanddays(caseinfo.WEEK_BORN, caseinfo.DAY_BORN, moment(Birthday, 'YYYYMMDD').format('YYYY/MM/DD'))}</t2>\n                        <t2>體重：{valueFormat(DayWeight)}g</t2>\n                        <t2>住院第{daysdiff(moment(PickerDate).format('YYYY/MM/DD'), moment(caseinfo.TRANSINDT, 'YYYYMMDD').format('YYYY/MM/DD'))}天</t2>\n                    </div>\n                </div>\n                <div style={{ display: \"flex\", alignItems: 'center', position: \"relative\" }}>\n                    <t2>項目切換：</t2>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,auto)\", gridColumnGap: \"5px\" }}>{btn}</div>\n                    <div onClick={() => this.open_display()} style={{ cursor: \"pointer\", marginLeft: \"5px\" }}>\n                        <img src={displaylogo} alt='displaylogo' style={{ width: '15px', height: '15px' }}></img>\n                    </div>\n                    <div style={this.state.display_Mode ? display_style.displye_mode : display_style.non_display_mode}>\n                        <t2 className='controlmoduletitle'>顯示切換</t2>\n                        <div style={{ marginTop: \"10px\", marginBottom: \"20px\" }}>\n                            <Checkbox.Group defaultValue={this.state.item} id={\"checkbox_group\"} style={{ width: '100%', display: \"grid\", gridTemplateRows: \"repeat(5,1fr)\", gridRowGap: \"5px\" }} onChange={this.onChange}>\n                                <div style={display_style.check_area}>\n                                    <Checkbox value={0}></Checkbox>\n                                    <t3 style={display_style.check_text}>生命徵象</t3>\n                                </div>\n                                <div style={display_style.check_area}>\n                                    <Checkbox value={1} ></Checkbox>\n                                    <t3 style={display_style.check_text}>檢驗</t3>\n                                </div>\n                                <div style={display_style.check_area}>\n                                    <Checkbox value={2}></Checkbox>\n                                    <t3 style={display_style.check_text}>呼吸評估</t3>\n                                </div>\n                                <div style={display_style.check_area}>\n                                    <Checkbox value={3}></Checkbox>\n                                    <t3 style={display_style.check_text}>醫藥囑</t3>\n                                </div>\n                                <div style={display_style.check_area}>\n                                    <Checkbox value={4}></Checkbox>\n                                    <t3 style={display_style.check_text}>行事曆及註記</t3>\n                                </div>\n                                {/* <div style={display_style.check_area}>\n                                        <Checkbox value={5}></Checkbox>\n                                        <t3 style={display_style.check_text}>To Do List</t3>\n                                    </div> */}\n                            </Checkbox.Group>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            //     <div className='boxshadow'></div>\n            // </div >\n\n        );\n    }\n}\n\nexport default Controlbar;\n","import React, { Component } from 'react';\nimport './iopage.scss'\nimport moment from 'moment';\nimport * as WardState from '../Function/Wardstate'\nimport * as ApiProvider from '../API/ApiProvider'\nimport * as ApiGithub from '../API/ApiGithub'\nimport X2JS from 'x2js';\nimport * as QDCList from '../Resource/QDC'\n\nclass IOpage extends Component {\n    state = {\n        QDC: [],\n        PreStatus: null,\n        PreIntervalStatus: null,\n        PreCID: null,\n        PrePickerDate: null,\n        RegQDC: null,\n        CarloriesCal: []\n    }\n    getAPI(caseid, pickerdate, intervalStatus, status) {\n        if (caseid === undefined || caseid === null) {\n            return null\n        }\n        if (pickerdate === undefined || pickerdate === null) {\n            return null\n        }\n        if (intervalStatus === undefined || intervalStatus === null) {\n            return null\n        }\n        if (status === undefined || status === null) {\n            return null\n        }\n        function formatTimer(pickerdate, interstatus, status) {\n            const endTimeStamp = pickerdate + 31 * 60 * 60 * 1000\n            if (status === \"Crossection\") {\n                return {\n                    start: moment(endTimeStamp - (3 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            if (interstatus === 0) {\n                return {\n                    start: moment(endTimeStamp - (24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            if (interstatus === 1) {\n                return {\n                    start: moment(endTimeStamp - (3 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            if (interstatus === 2) {\n                return {\n                    start: moment(endTimeStamp - (7 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            return {\n                start: moment(endTimeStamp - (14 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n            }\n        }\n        const xm2 = new X2JS()\n        const timer = formatTimer(pickerdate, intervalStatus, status)\n        ApiProvider.getQDC(caseid, timer.start, timer.end)\n            .then(data => {\n                const Result = xm2.xml2js(data.data).outmsg\n                if (Number(Result.ret) === 0) {\n                    const parsedata = Result.resconts.rescont\n                    if (Array.isArray(parsedata)) {\n                        this.setState({ QDC: parsedata })\n                    }\n                    else {\n                        this.setState({ QDC: [parsedata] })\n                    }\n                }\n\n            })\n            .catch(err => {\n                console.log(\"getQDC NG \" + JSON.stringify(err));\n            });\n        // this.setState({ QDC: QDCList.data.outmsg.resconts.rescont })\n        ApiGithub.getGitHubJson(\"IOReg_QDC.json\")\n            .then(data => {\n                this.setState({ RegQDC: data.data })\n            })\n            .catch(err => {\n                console.log(\"getGithubNG\" + JSON.stringify(err))\n            })\n    }\n    componentDidMount() {\n        const { Status, IntervalStatus, caseinfo, PickerDate } = this.props\n        this.setState({ PreStatus: Status, PreIntervalStatus: IntervalStatus, PreCID: caseinfo.CASEID, PrePickerDate: PickerDate })\n        this.getAPI(caseinfo.CASEID, PickerDate, IntervalStatus, Status)\n\n    }\n    componentDidUpdate() {\n        const { Status, IntervalStatus, caseinfo, PickerDate } = this.props\n        const prestatus = this.state.PreStatus\n        const preinterstatus = this.state.PreIntervalStatus\n        const precid = this.state.PreCID\n        const prepickerdate = this.state.PrePickerDate\n        if (prepickerdate !== PickerDate || caseinfo.CASEID !== precid || IntervalStatus !== preinterstatus || Status !== prestatus) {\n            console.log(Status, IntervalStatus, caseinfo, PickerDate)\n            this.setState({ PreStatus: Status, PreIntervalStatus: IntervalStatus, PreCID: caseinfo.CASEID, PrePickerDate: PickerDate })\n            this.getAPI(caseinfo.CASEID, PickerDate, IntervalStatus, Status)\n        }\n    }\n    cellRender(arr) {\n        const { Status, IntervalStatus } = this.props\n        const mapcell = arr.map(function (value, index, array) {\n            return (\n                <div key={index} style={{ border: \"1px solid #cccccc\", borderCollapse: \"collapse\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <t2>{parseInt(value)}</t2>\n                </div>\n            );\n        })\n        if (Status === \"Crossection\") {\n            return (\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4,1fr)\" }}>\n                    {mapcell}\n                </div>\n            );\n        }\n        else {\n            if (IntervalStatus === 0) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(24,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n            if (IntervalStatus === 1) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(18,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n            if (IntervalStatus === 2) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(21,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n            if (IntervalStatus === 3) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(14,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n        }\n    }\n    render() {\n        function pickerTimeArray(pickerdate, intervalstatus, status) {\n            const et = pickerdate + (31 * 60 * 60 * 1000)\n            var timearray = []\n            if (status === \"Crossection\") {\n                const st = pickerdate + (7 * 60 * 60 * 1000)\n                for (let index = 0; index < 3; index++) {\n                    const time = st + (index * 8 * 60 * 60 * 1000)\n                    timearray.push(time)\n                }\n            }\n            else {\n                //IntervalStatus 0:1天 1:3天 2:一週 3:兩週\n                if (intervalstatus === 0) {\n                    const st = et - (24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 24; index++) {\n                        const time = st + (index * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (intervalstatus === 1) {\n                    const st = et - (3 * 24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 18; index++) {\n                        const time = st + (index * 4 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (intervalstatus === 2) {\n                    const st = et - (7 * 24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 21; index++) {\n                        const time = st + (index * 8 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (intervalstatus === 3) {\n                    const st = et - (14 * 24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 14; index++) {\n                        const time = st + (index * 24 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n            }\n            return timearray\n        }\n\n        function starttime(status, intervalstatus, time) {\n            if (status === \"Crossection\") {\n                return time - (24 * 60 * 60 * 1000)\n            }\n            if (intervalstatus === 0) {\n                return time - (24 * 60 * 60 * 1000)\n            }\n            if (intervalstatus === 1) {\n                return time - (3 * 24 * 60 * 60 * 1000)\n            }\n            if (intervalstatus === 2) {\n                return time - (7 * 24 * 60 * 60 * 1000)\n            }\n            return time - (14 * 24 * 60 * 60 * 1000)\n\n        }\n\n        function IntervalToDataArray(startTime, status, intervalstatus, element) {\n            if (Array.isArray(element)) {\n                if (status === 'Crossection') {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (8 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                if (intervalstatus === 0) {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (1 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                if (intervalstatus === 1) {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (4 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                if (intervalstatus === 2) {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (8 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                const filterdata = element.filter(function (value, index, arr) {\n                    const valueTimeString = value.rec_dat + value.rec_tim\n                    const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                    const endTime = startTime + (24 * 60 * 60 * 1000)\n                    return valueTime > startTime && valueTime < endTime\n                })\n                return filterdata\n            }\n            return []\n        }\n\n        function SumforEach(arr) {\n            var sum = 0;\n            arr.forEach(function (element) {\n                sum += Number(element);\n            });\n            return sum;\n        }\n\n\n        function formatQDCtoIO(QDC) {\n            function caloriesCal(lost, value) {\n                if (lost === \"配方奶\") {\n                    return Number(value) * 0.8\n                }\n                if (lost === \"母奶\") {\n                    return Number(value) * 0.7\n                }\n                return 0\n            }\n            function caloriesCalonnam(nam, value) {\n                if (nam === null || nam === undefined || nam === \"\") {\n                    return 0\n                }\n                const namstring = nam.toString()\n                const valueNumber = Number(value)\n                if (valueNumber === null || valueNumber === undefined) { return 0 }\n                if (namstring.match(\"10%TPN\") !== null) { return valueNumber * 0.34 }\n                if (namstring.match(\"SMOFliquid\") !== null) { return valueNumber * 1.8 }\n                if (namstring.match(\"D10\") !== null) { return valueNumber * 0.34 }\n                if (namstring.match(\"D12\") !== null) { return valueNumber * 0.34 * 1.2 }\n                if (namstring.match(\"D50\") !== null) { return valueNumber * 0.34 * 5 }\n                if (namstring.match(\"taita\") !== null) { return valueNumber * 0.34 }\n                return 0\n            }\n            var FormatFeedingList = []\n            var FormatIVList = []\n            var FormatUrineList = []\n            var FormatOtherInList = []\n            var FormatOtherOutList = []\n            for (let index = 0; index < QDC.length; index++) {\n                const element = QDC[index];\n                const elementItem = element.item;\n                const time = moment(element.rec_dat.toString().trim() + element.rec_tim.toString().trim(), \"YYYYMMDDHHmm\").valueOf()\n                const nam = element.nam\n                const FeedingReg = RegQDC.Feeding\n                const filterFeedingStatus = FeedingReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterFeedingStatus) {\n                    FormatFeedingList.push({\n                        time: time,\n                        value: Number(element.inp_val2),\n                        calories: caloriesCal(element.lost, element.inp_val2),\n                        element: element\n                    })\n                }\n                const IVReg = RegQDC.IV\n                const filterIVStatus = IVReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterIVStatus) {\n                    FormatIVList.push({\n                        time: time,\n                        value: Number(element.inp_val1),\n                        calories: caloriesCalonnam(nam, element.inp_val1),\n                        element: element\n                    })\n                }\n                const UrineReg = RegQDC.Urine\n                const filterUrineStatus = UrineReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterUrineStatus) {\n                    FormatUrineList.push({\n                        time: time,\n                        value: Number(element.out_val2),\n                        calories: caloriesCalonnam(nam, element.out_val2),\n                        element: element\n                    })\n                }\n                const OtherReg = RegQDC.Other\n                const filterOtherStatus = OtherReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterOtherStatus) {\n                    const input_1 = Number(element.inp_val1)\n                    const output_1 = Number(element.out_val1)\n                    if (elementItem === \"排便\") {\n                        // FormatOtherInList.push({\n                        //     time: time,\n                        //     value: 1,\n                        //     calories: 0,\n                        //     element: element\n                        // })\n                        FormatOtherOutList.push({\n                            time: time,\n                            value: 1,\n                            calories: 0,\n                            element: element\n                        })\n                    }\n                    else {\n                        if (input_1 === null || input_1 === undefined) {\n                            FormatOtherOutList.push({\n                                time: time,\n                                value: Number(element.inp_val1),\n                                calories: caloriesCalonnam(nam, element.inp_val1),\n                                element: element\n                            })\n                        }\n                        if (output_1 === null || output_1 === undefined) {\n                            FormatOtherInList.push({\n                                time: time,\n                                value: Number(element.output_1),\n                                calories: 0,\n                                element: element\n                            })\n                        }\n                    }\n                }\n\n            }\n            return {\n                Feeding: FormatFeedingList,\n                IV: FormatIVList,\n                OtherIn: FormatOtherInList,\n                Urine: FormatUrineList,\n                OtherOut: FormatOtherOutList\n            }\n        }\n        function timerFormat(PickerDate, Interval, Status) {\n            const EndTime = PickerDate + (31 * 60 * 60 * 1000)\n            console.log(Status)\n            if (Status === 'Crossection') {\n                return {\n                    interval: 3,\n                    hourInterval: 8,\n                    startTime: EndTime - (24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            if (Interval === 0) {\n                return {\n                    interval: 24,\n                    hourInterval: 1,\n                    startTime: EndTime - (24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            if (Interval === 1) {\n                return {\n                    interval: 18,\n                    hourInterval: 4,\n                    startTime: EndTime - (3 * 24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            if (Interval === 2) {\n                return {\n                    interval: 21,\n                    hourInterval: 8,\n                    startTime: EndTime - (7 * 24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            return {\n                interval: 14,\n                hourInterval: 24,\n                startTime: EndTime - (14 * 24 * 60 * 60 * 1000),\n                endTime: EndTime\n            }\n        }\n        function listTimerFormat(List, timer, status) {\n            const inter = timer.interval\n            var TimerList = []\n            for (let index = 0; index < inter; index++) {\n                const st = timer.startTime + (index * timer.hourInterval * 60 * 60 * 1000)\n                const et = timer.startTime + ((index + 1) * timer.hourInterval * 60 * 60 * 1000)\n                const filterList = List.filter(function (info, index, arr) {\n                    const time = info.time\n                    return st <= time && time < et\n                })\n                TimerList.push(filterList)\n            }\n            if (status === 'Crossection') {\n                const st = timer.startTime\n                const et = timer.endTime\n                const filterListALL = List.filter(function (info, index, arr) {\n                    const time = info.time\n                    return st <= time && time < et\n                })\n                TimerList.push(filterListALL)\n            }\n            return TimerList\n        }\n\n        function sumIn(arr1, arr2, arr3) {\n            var sumlist = []\n            for (let index = 0; index < arr1.length; index++) {\n                const element1 = arr1[index];\n                const element2 = arr2[index];\n                const element3 = arr3[index];\n                const sum = element1 + element2 + element3\n                sumlist.push(sum)\n            }\n            return sumlist\n        }\n        function sumOut(arr1, arr2) {\n            var sumlist = []\n            for (let index = 0; index < arr1.length; index++) {\n                const element1 = arr1[index];\n                const element2 = arr2[index];\n                const sum = element1 + element2\n                sumlist.push(sum)\n            }\n            return sumlist\n        }\n        function sumInAndOut(Input, Outout) {\n            var sumlist = []\n            for (let index = 0; index < Input.length; index++) {\n                const element1 = Input[index];\n                const element2 = Outout[index];\n                const sum = parseFloat(element1 - element2).toFixed(1)\n                sumlist.push(sum)\n            }\n            return sumlist\n        }\n        function gridNumber(interval, status) {\n            if (status === \"Crossection\") {\n                return 4\n            }\n            return interval\n        }\n        function cellsum(list) {\n            const CellSum = list.map(function (info, index, arr) {\n                var sum = 0\n                for (let index = 0; index < info.length; index++) {\n                    const element = info[index];\n                    sum = sum + element.value\n                }\n                return sum\n            })\n            return CellSum\n        }\n        function cellRenderSum(list, type) {\n            const CellRender = list.map(function (info, index, arr) {\n                if (info.length === 0) {\n                    return (\n                        <div key={index} style={{ borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #cccccc\", borderCollapse: 'collapse' }}>--</div>\n\n                    );\n                }\n                return (\n                    <div key={index} style={{ borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #cccccc\", borderCollapse: 'collapse', color: (type == 1) && (parseFloat(info) < 0.5 || parseFloat(info) > 5 ? \"red\" : \"rgba(0, 0, 0, 0.65)\") }}>{parseFloat(info) == 0 ? '--' : parseFloat(info).toFixed(1)}</div>\n                );\n            })\n            return (\n                <div style={{ display: 'grid', gridTemplateColumns: 'repeat( ' + gridNumber(timerStruct.interval, Status) + ' ,1fr)' }}>\n                    {CellRender}\n                </div>\n            );\n        }\n        function cellRender(list) {\n            const CellRender = list.map(function (info, index, arr) {\n                var sum = 0\n                if (info.length === 0) {\n                    return (\n                        <div key={index} style={{ borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #cccccc\", borderCollapse: 'collapse' }}>--</div>\n                    );\n                }\n                for (let index = 0; index < info.length; index++) {\n                    const element = info[index];\n                    sum = sum + element.value\n                }\n                return (\n                    <div key={index} style={{ borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #cccccc\", borderCollapse: 'collapse' }}>{parseFloat(sum) == 0 ? parseFloat(sum) : parseFloat(sum).toFixed(1)}</div>\n                );\n            })\n            return (\n                <div style={{ display: 'grid', gridTemplateColumns: 'repeat( ' + gridNumber(timerStruct.interval, Status) + ' ,1fr)' }}>\n                    {CellRender}\n                </div>\n            );\n        }\n\n\n        function formatTime(time) {\n            if (Number(time) / 1000 >= 1) {\n                return time.toString().trim()\n            }\n            return \"0\" + time.toString().trim()\n        }\n\n        function stylechange(status) {\n            const chronicstyle = \"140px 1fr\"\n            const crossectionstyle = \"1fr 4fr\"\n            if (status === \"Crossection\") {\n                return crossectionstyle\n            }\n            else return chronicstyle\n        }\n\n        function urineforWeightAndHourCrossection(Urine, weight) {\n            const datamap = Urine.map(function (info, index, arr) {\n                var sum = 0\n                for (let index = 0; index < info.length; index++) {\n                    const element = info[index];\n                    sum = sum + element.value\n                }\n                if (sum === 0) {\n                    return 0\n                }\n                if (weight === null || weight === undefined) {\n                    return \"--\"\n                }\n                return parseFloat(sum / weight / 8).toFixed(1)\n            })\n            for (let index = 0; index < Urine.length; index++) {\n                const element = Urine[index];\n                console.log(element)\n\n            }\n            return datamap\n        }\n        const { Status, IntervalStatus, caseinfo, PickerDate } = this.props\n        const timeInterval = pickerTimeArray(PickerDate, IntervalStatus, Status)\n        const et = PickerDate + (31 * 60 * 60 * 1000)\n        const st = starttime(Status, IntervalStatus, et)\n        const WEIGHT = caseinfo.WEIGHT\n        const dateWeoght = WardState.selectweight(WEIGHT, PickerDate)\n        const QDCLIST = this.state.QDC\n        const Weight = 1000\n        const RegQDC = this.state.RegQDC\n        console.log(RegQDC, PickerDate)\n        if (RegQDC === null || RegQDC === undefined) { return null }\n        const formatData = formatQDCtoIO(QDCLIST)\n        const timerStruct = timerFormat(PickerDate, IntervalStatus, Status)\n        const feed = listTimerFormat(formatData.Feeding, timerStruct, Status)\n        const IV = listTimerFormat(formatData.IV, timerStruct, Status)\n        const OtherIn = listTimerFormat(formatData.OtherIn, timerStruct, Status)\n        const sumin = sumIn(cellsum(feed), cellsum(IV), cellsum(OtherIn))\n        const Urine = listTimerFormat(formatData.Urine, timerStruct, Status)\n        const UrinForUnit = urineforWeightAndHourCrossection(Urine, 1000)\n        const OtherOut = listTimerFormat(formatData.OtherOut, timerStruct, Status)\n        const sumout = sumOut(cellsum(Urine), cellsum(OtherOut))\n        console.log(Urine)\n        const sumInTotal = sumInAndOut(sumin, sumout)\n        //====================================================================\n\n\n        const titleInarray = ['Feed', 'IV', 'Other', 'In:Sum']\n        const titleOutarray = ['U/O', 'ml/kg/hr', 'Other', 'Out:Sum']\n        const TitleCellIn = titleInarray.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ border: \"1px solid #cccccc\", borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', backgroundColor: Status === \"Crossection\" ? \"white\" : \"#cccccc\" }}>\n                    <t2>{value}</t2>\n                </div>\n            );\n        })\n\n        const TitleCellOut = titleOutarray.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ border: \"1px solid #cccccc\", borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', backgroundColor: Status === \"Crossection\" ? \"white\" : \"#cccccc\" }}>\n                    <t2>{value}</t2>\n                </div>\n            );\n        })\n        return (\n            <div>\n                <div style={{ display: \"grid\", gridTemplateColumns: stylechange(Status) }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"32px 32px 32px 32px\" }}>\n                        {TitleCellIn}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"32px 32px 32px 32px\" }}>\n                        {cellRender(feed, 0)}\n                        {cellRender(IV, 0)}\n                        {cellRender(OtherIn, 0)}\n                        {cellRenderSum(sumin)}\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: stylechange(Status), marginTop: \"8px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"32px 32px 32px 32px\" }}>\n                        {TitleCellOut}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"32px 32px 32px 32px\" }}>\n                        {cellRender(Urine, 0)}\n                        {cellRenderSum(UrinForUnit, 1)}\n                        {cellRender(OtherOut, 0)}\n                        {cellRenderSum(sumout)}\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: stylechange(Status), marginTop: \"8px\" }}>\n                    <div style={{ border: \"1px solid #cccccc\", borderCollapse: \"collapse\", display: \"flex\", alignItems: \"center\", backgroundColor: Status === \"Crossection\" ? \"white\" : \"#cccccc\", height: \"40px\" }}>\n                        <t2>I-O</t2>\n                    </div>\n                    {cellRenderSum(sumInTotal)}\n                    {/* {totalcell} */}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default IOpage;\n","import React, { Component } from 'react';\nimport IOpage from '../../Module/iopage'\n\nclass CrossectionIo extends Component {\n    render() {\n        const { caseinfo, title, PickerDate } = this.props\n        const titlearray = ['白班', '小夜', '大夜', '全日']\n        const titlelab = titlearray.map(function (info, index) {\n            return (\n                <centerstyle key={index}>\n                    <t2>{info}</t2>\n                </centerstyle>\n            );\n        })\n        return (\n            //510\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t1 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t1>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr\", height: \"40px\" }}>\n                    <div></div>\n                    {titlelab}\n                </div>\n                <IOpage PickerDate={PickerDate} caseinfo={caseinfo} Status={\"Crossection\"} IntervalStatus={0}></IOpage>\n            </div>\n        );\n    }\n}\n\nexport default CrossectionIo\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport * as ApiGithub from '../../API/ApiGithub'\nimport './NonlabviewtableCell.scss'\n\nconst STATUS_REPORT = 0\n\nexport default class NonlabviewtableCell extends Component {\n    state = {\n        Result: [],\n        parser: { \"mappings\": [] },\n        summary_str: \"--\",\n        RESDISP: []\n    }\n\n    componentDidMount() {\n        //call API\n        const { caseId, hisId, month, seq, name, time, status } = this.props;\n\n        if (caseId !== undefined && hisId !== undefined && month !== undefined && seq !== undefined) {\n            ApiProvider.getStoredProcedureRESDISP(hisId.trim(), month, caseId.trim(), seq)\n                .then(result => {\n                    console.log(\"getStoredProcedureRESDISP OK \" + JSON.stringify(result.data));\n                    //const fakeData = [{\"RECNO\":\"1\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"正式報告\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"2\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"                                臺北榮民總醫院兒童醫學部報告\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"3\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  病患資訊：      新生兒加護病房 - 1 黃苡齊 4565531-0 女性 5月大 NBD\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"4\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  申請序號 / 工作號：  0ANWCEA/            開立時間：   20200115    0304\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"5\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  開醫囑者：                     簽收時間：   20200115    0305\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"6\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  報告人 ：       NUR2325 袁藝榛         報告時間：   20200115    0305\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"7\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  檢體 ：        Blood\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"8\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  醫囑名稱：      BLOOD GAS\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"9\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   Sample:(Capillary)\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"10\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   PH:  (7.37)      Hb:   ()       BUN: ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"11\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   PO2:  (43)  mmHg   Hct:  (39)  %     Cr:  ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"12\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   PCO2: (59)  mmHg   FIO2:  (40.0) %\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"13\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   HCO3: (34.1) mmol/L  NA+:  (151)  mmol/L\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"14\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   BE:  (7.1)  mmol/L  K+:   (6.0)  mmol/L\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"15\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   SAT:  (77)  %     Cl-:  ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"16\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   TCO2: (35.9) mmol/L  iCA++: (1.44) mmol/L\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"17\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"                AnGap: ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"18\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"                MG++:  ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"19\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"20\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   COMMENT:\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"}];\n\n                    this.setState({\n                        RESDISP: result.data\n                        //RESDISP: fakeData\n                    })\n\n                    let input = {\n                        item_name: name.trim(),\n                        content: \"\",\n                        sample: \"\",\n                        lab: \"\",\n                        datatime: moment(time).format(\"YYYY-MM-DD HH:mm\")\n                    }\n\n                    //fakeData.forEach(item => {\n                    result.data.forEach(item => {\n                        input.content = `${input.content} \"\\n\" ${item.CONTENT}`;\n                    });\n\n                    //status 0:正式報告 只有0需要做parse\n                    //console.log(\"status: \" + JSON.stringify(status));\n                    if(parseInt(status) === STATUS_REPORT) {\n                        ApiGithub.getGitHubJson(\"Summary.json\")\n                        .then(data => {\n                            console.log(\"get Summary.json OK \" + JSON.stringify(data.data));\n\n                            const selected_parser = this.select_parser(input, data.data)\n                            console.log(\"selected_parser \" + JSON.stringify(selected_parser));\n                            this.setState({\n                                parser: selected_parser\n                            })\n\n                            if (selected_parser !== undefined) {\n                                const result_kv_pairs = this.parse(input, selected_parser)\n                                console.log(\"result_kv_pairs \" + JSON.stringify(result_kv_pairs));\n\n                                const summary_str = this.summerize(result_kv_pairs, selected_parser)\n                                console.log(\"summary_str \" + JSON.stringify(summary_str));\n\n                                this.setState({\n                                    summary_str: summary_str\n                                })\n                            }\n                        })\n                        .catch(err => {\n                            console.log(err)\n                        })\n                    }\n                })\n                .catch(err => {\n                    console.log(\"getStoredProcedureRESDISP NG \" + JSON.stringify(err));\n                });\n        }\n    }\n\n    select_parser = (input, parsers) => {\n        return parsers.find(x =>\n            input.item_name.match(x.apply_condition.name)\n            && (!x.apply_condition.sample || input.sample.match(x.apply_condition.sample))\n            && (!x.apply_condition.lab || input.lab.match(x.apply_condition.lab))\n            && (!x.apply_condition.start_time || input.datetime >= x.apply_condition.start_time)\n            && (!x.apply_condition.end_time || input.datetime < x.apply_condition.end_time)\n        )\n    }\n\n    parse = (input, parser) => {\n        let mappings = parser.mappings\n        let content = input.content\n        let result = {}\n        mappings.forEach(mapping => {\n            const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n            const match = content.match(re)\n            result[mapping.key] = match && match[mapping.position]\n        });\n        return result;\n    }\n\n    summerize = (kv_pairs, parser) => {\n        let summary_str = parser.summary\n        for (const key in kv_pairs) {\n            let match_replacer = summary_str.match(RegExp(\"\\\\[\" + key + \"(;(.*?))?\\\\]\"))\n            let replacer = \"\"\n            if (match_replacer && match_replacer.length === 3) {\n                replacer = match_replacer[2]\n            }\n            summary_str = summary_str.replace(RegExp(\"\\\\[\" + key + \"(;.*?)?\\\\]\"), kv_pairs[key] || replacer)\n        }\n        return summary_str;\n    }\n\n    render() {\n        function statusFormat(status) {\n            if (status === 0) {\n                return \"正式報告\"\n            }\n            if (status === 1) {\n                return \"已簽收\"\n\n            }\n            if (status === 2) {\n                return \"待送檢\"\n            }\n            return status\n        }\n        //status 0:正式報告 只有0需要做parse\n        const { time, name, status, come, showModal } = this.props;\n        const { summary_str, RESDISP } = this.state;\n        const statusRender = statusFormat(status)\n        const canShowReport = parseInt(status) === 0\n        return (\n            <div style={{ height: \"50px\", display: \"grid\", gridTemplateColumns: \"1fr 200px 1fr 1fr 1fr\" }}>\n                <t3 className='nonlabteblecell'>{moment(time).format('MM/DD HH:mm')}</t3>\n                <t3 className='nonlabteblecell'>{name}</t3>\n                <t3 className='nonlabteblecell'>{come}</t3>\n                <t3 className='nonlabteblecell'>{statusRender}</t3>\n                {canShowReport  && <t3 className='nonlabteblecell' onClick={() => showModal(RESDISP)} style={{ color: \"blue\", textDecoration: \"underline\", cursor: \"pointer\" }}>{summary_str}</t3>}\n                {!canShowReport && <t3 className='nonlabteblecell'>{summary_str}</t3>}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nclass ExamReportModal extends Component {\n    render() {\n        const reportDetail = this.props.report\n        const showDetail = reportDetail.map((data, index) => {\n            return data.CONTENT !== \"\" ? <div key={ \"ExamReportModal\" + index } style={{ whiteSpace: \"pre-wrap\" }}>{data.CONTENT}</div> : \"\"\n        })\n        return (\n            <div>{showDetail}</div>\n        );\n    }\n}\n\nexport default ExamReportModal\n","import React, { Component } from 'react';\nimport './Nonlabviewtable.scss'\nimport NonlabviewtableCell from './NonlabviewtableCell'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider'\nimport { Modal } from 'antd';\nimport InsReportModal from '../ExamReportModal'\n\nclass Nonlabviewtable extends Component {\n    state = {\n        visible: false,\n\n        modalVisible: false,\n        modalReport: \"\",\n        ORDLIST: [],\n        RESSECT: []\n    }\n    componentDidMount() {\n        this.nonLabApiGet()\n    }\n    nonLabApiGet() {\n        // function selectMonthInterval(storeProcedureTime) {\n        //     const timestampInterval = moment() - moment(storeProcedureTime, \"YYYY-MM-DD\").valueOf()\n        //     const timestampMonth = 30 * 24 * 60 * 60 * 1000\n        //     const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n        //     return MonthInt\n        // }\n        const { caseinfo } = this.props\n        const storeProcedureTime = moment(caseinfo.TRANSINDT, \"YYYYMMDD\").format(\"YYYY-MM-DD\")\n        // const MonthInterval = selectMonthInterval(storeProcedureTime)\n        ApiProvider.getStoredProcedureORDLIST(caseinfo.HISID, storeProcedureTime, \"ALL\", \"DOC3924B\")\n            .then(data => { this.setState({ ORDLIST: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureORDLIST NG \" + JSON.stringify(err)) });\n        // ApiProvider.getStoredProcedureRESSECT(caseinfo.HISID, MonthInterval, \"ALL\", \"DOC3924B\")\n        //     .then(data => { this.setState({ RESSECT: data.data }) })\n        //     .catch(err => { console.log(\"getStoredProcedureRESSECT NG \" + JSON.stringify(err)) });\n    }\n    showModal = (report) => {\n        console.log(\"showModal :\" + JSON.stringify(report))\n        this.setState({\n            modalVisible: true,\n            modalReport: report\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n    render() {\n        function ORDLISTFormat(ORDLIST, StartTime, EndTime) {\n            var ORDLIST_Format = []\n            if (Array.isArray(ORDLIST)) {\n                for (let index = 0; index < ORDLIST.length; index++) {\n                    const element = ORDLIST[index];\n                    const elemetnStatus = Number(element.ORSTATUS)\n                    const elementORBGNTime = moment(element.ORBGNDT.toString().trim() + element.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n                    if (StartTime <= elementORBGNTime && elementORBGNTime <= EndTime) {\n                        if (elemetnStatus === 64) {\n                            //正式報告\n                            ORDLIST_Format.push({\n                                time: elementORBGNTime,\n                                status: 0,\n                                element: element\n                            })\n                        }\n                        if (elemetnStatus === 38) {\n                            //已簽收 \n                            ORDLIST_Format.push({\n                                time: elementORBGNTime,\n                                status: 1,\n                                element: element\n                            })\n                        }\n                        if (elemetnStatus === 31) {\n                            //待送檢\n                            ORDLIST_Format.push({\n                                time: elementORBGNTime,\n                                status: 2,\n                                element: element\n                            })\n                        }\n                        if (elemetnStatus === 82 || elemetnStatus === 60 || elemetnStatus === 61) {\n                            //已取消 不顯示\n                            continue\n                        }\n                        //Other\n                        ORDLIST_Format.push({\n                            time: elementORBGNTime,\n                            status: elemetnStatus,\n                            element: element\n                        })\n                    }\n                }\n            }\n            return ORDLIST_Format\n        }\n        const { modalVisible, modalReport, ORDLIST } = this.state\n        const { StartTime, EndTime } = this.props\n        const FormatList = ORDLISTFormat(ORDLIST, StartTime, EndTime)\n\n        const showModal = this.showModal\n        const handleOk = this.handleOk\n        const handleCancel = this.handleCancel\n        const nonlabcell = FormatList.map(function (value, index, array) {\n            const come = value.element.ORSPCN1;\n            const time = value.time\n            const name = value.element.ORPROCED;\n            const status = value.status;\n            return (\n                <NonlabviewtableCell key={\"Nonlabviewtable\" + index} come={come} time={time} name={name} statis={status} hisId={value.element.ORHISTNO} caseId={value.element.ORDSEQCN} month={value.element.ORMM} seq={value.element.ORDSEQNO} showModal={showModal}></NonlabviewtableCell>\n            );\n        })\n        return (\n            <div>\n                <div style={{ height: \"50px\", border: \"#E2EDF3 1px solid\", backgroundColor: \"#E2EDF3\", display: \"grid\", gridTemplateColumns: \"1fr 1.5fr 1fr 1fr 1fr\" }}>\n                    <t3 className='nonlabtebletitlecell'>檢驗日期</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗項目名稱</t3>\n                    <t3 className='nonlabtebletitlecell'>檢體來源</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗項目狀態</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗結果</t3>\n                </div>\n                <div className='nonlabviewtable'>\n                    {nonlabcell}\n                </div>\n                <Modal\n                    title={\"檢驗結果\"}\n                    visible={modalVisible}\n                    onOk={handleOk}\n                    onCancel={handleCancel}\n                    width={1000}\n                    footer={null}>\n                    <InsReportModal report={modalReport}></InsReportModal>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Nonlabviewtable\n","import React, { Component } from 'react';\nimport Nonlabviewtable from './Nonlabviewtable'\n\n\nclass Nonlabviewlayout extends Component {\n    render() {\n        // const { PickerDate } = this.props\n        // const { modalVisible, modalReport } = this.state\n        // const showModal = this.showModal\n        // const handleOk = this.handleOk\n        // const handleCancel = this.handleCancel\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t1 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>報告清單</t1>\n                </div>\n                <Nonlabviewtable caseinfo={this.props.caseinfo} StartTime={this.props.StartTime} EndTime={this.props.EndTime}></Nonlabviewtable>\n            </div>\n        );\n    }\n}\n\nexport default Nonlabviewlayout\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider'\n\nclass RTtable extends Component {\n    state = {\n        RESDBGAS: [],\n        PreHID: null,\n        PreTransInDate: null,\n    }\n    componentDidMount() {\n        const HID = this.props.caseinfo.HISID\n        const TRDT = this.props.caseinfo.TRANSINDT\n        this.setState({ PreHID: HID, PreTransInDate: TRDT })\n        this.getGasAPI()\n    }\n    componentDidUpdate() {\n        const HID = this.props.caseinfo.HISID\n        const TRDT = this.props.caseinfo.TRANSINDT\n        const PreHID = this.state.PreHID\n        const PreTRDT = this.state.PreTransInDate\n        if (HID !== PreHID || TRDT !== PreTRDT) {\n            this.setState({ PreHID: HID, PreTransInDate: TRDT })\n            this.getGasAPI()\n        }\n    }\n    getGasAPI() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID\n        const TransInDate = moment(caseinfo.TRANSINDT, \"YYYYMMDD\").format(\"YYYY-MM-DD\")\n        ApiProvider.getStoredProcedureRESDBGAS(HID, TransInDate)\n            .then(data => { this.setState({ RESDBGAS: data.data }) })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDBGAS NG \" + JSON.stringify(err));\n            });\n    }\n    GasListToCell = () => {\n        function formatGasData(GasDataList, st, et) {\n            let filterTimer = GasDataList.filter(function (element, index, arr) {\n                const timeStamp = moment(element.ORRESDT.toString().trim() + element.ORRESTM.toString().trim(), 'YYYY-MM-DDHH.mm.ss').valueOf()\n                return st <= timeStamp && timeStamp <= et\n            })\n\n            filterTimer = filterTimer.sort((a, b) => {\n                let tempTimeA = moment(a.ORRESDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n                let tempTimeB = moment(b.ORRESDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n\n            const decideStyle = {\n                \"1\": { \"min\": 6.5, \"max\": 7.7 },\n                \"2\": { \"min\": 0, \"max\": 100 },\n                \"3\": { \"min\": 0, \"max\": 200 },\n                \"4\": { \"min\": 0, \"max\": 40 },\n                \"5\": { \"min\": -30, \"max\": 20 },\n                \"6\": { \"min\": 0, \"max\": 100 },\n                \"7\": { \"min\": 0, \"max\": 100 }\n            }\n\n            const cellMap = filterTimer.map(function (element, index, arr) {\n                const PHValue = element.SS07\n                const PCO2Value = element.SS06\n                const PO2Value = element.SS08\n                const HCO3Value = element.SS04\n                const BEValue = element.SS01\n                const O2SatValue = element.SS05\n                const FiO2Value = element.SS03\n                const timeStamp = moment(element.ORRESDT.toString().trim() + element.ORRESTM.toString().trim(), 'YYYY-MM-DDHH.mm.ss').valueOf()\n                const time = moment(timeStamp).format(\"MM/DD HH:mm\")\n                const gasDataArray = [time, PHValue, PCO2Value, PO2Value, HCO3Value, BEValue, O2SatValue, FiO2Value]\n                const GasCell = gasDataArray.map(function (value, index, array) {\n                    let tempStyle = false\n                    const tempValue = parseFloat(value)\n\n                    if (index != 0 && (tempValue > decideStyle[index.toString()].max || tempValue < decideStyle[index.toString()].min) || isNaN(tempValue) == true) {\n                        tempStyle = true;\n                    }\n\n                    return (\n                        <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\" }}>\n                            <t3 style={{ color: tempStyle ? \"red\" : \"black\", fontWeight: 600 }}>{value}</t3>\n                        </centerstyle>\n                    );\n                })\n                return (\n                    <div key={index} style={{ height: \"50px\", display: \"grid\", gridTemplateColumns: \"110px repeat(7,1fr)\" }}>{GasCell}</div>\n                );\n            })\n            return cellMap\n\n        }\n        const { Timer } = this.props\n        const startTime = Timer[0]\n        const endTime = Timer[1]\n        const GasData = this.state.RESDBGAS\n        const CellRander = formatGasData(GasData, startTime, endTime)\n        //for loop filter three days\n\n        return CellRander\n    }\n\n    render() {\n        const GasTitleList = ['時間', 'pH', `PCO`, 'PO', 'HCO', 'BE', 'O2SAT', 'FiO2']\n        const GasTitleCell = GasTitleList.map(function (value, index, array) {\n            let temp = value == 'PCO' || value == 'PO' || value == 'HCO' ? true : false\n            return (\n                <centerstyle key={index} style={{ borderCollapse: \"collapse\" }}>\n                    <t3>{value}</t3>\n                    {temp && <sub>2</sub>}\n                </centerstyle>\n            );\n        })\n\n        return (\n            <div>\n                <div style={{ height: \"50px\", border: \"rgba(238,238,238,1) 1px solid\", backgroundColor: \"#E2EDF3\", display: \"grid\", gridTemplateColumns: \"110px repeat(7,1fr)\" }}>\n                    {GasTitleCell}\n                </div>\n                <div style={{ maxHeight: \"400px\", overflow: \"auto\" }}>\n                    {this.GasListToCell()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTtable\n","import React, { Component } from 'react';\nimport RTtable from './RTtable'\nclass GAS extends Component {\n\n\n    render() {\n        const { caseinfo, PickerDateRange } = this.props\n\n        return (\n            <div style={{ marginBottom: \"20px\" }}>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>GAS累積報告</t2>\n                </div>\n                <RTtable Timer={PickerDateRange} caseinfo={caseinfo}></RTtable>\n            </div>\n        );\n    }\n}\n\nexport default GAS\n","import React, { Component } from 'react';\nimport { Modal, Input } from 'antd';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nexport default class RemarkModal extends Component {\n    state = {\n        remark: this.props.remarkValue.remark,\n        editor: this.props.remarkValue.editor,\n    }\n\n\n    \n    componentDidMount() {\n        console.log(\"RemarkModal componentDidMount\");\n        console.log(\"RemarkModal caseinfo: \" + JSON.stringify(this.props.caseinfo));\n        this.onInputChange = this.onInputChange.bind(this);\n        this.onOkClick = this.onOkClick.bind(this);\n    }\n\n    onInputChange(event) {\n        this.setState({ remark: event.target.value })\n    }\n\n    onOkClick() {\n        const { name, transinId, type, remarkId } = this.props.remarkValue\n        const { remark, editor, } = this.state;\n        let fixTime = moment().format('X');\n\n\n        // console.log(`editor : ${editor}`)\n        // console.log(`name : ${name}`)\n        // console.log(`remark : ${remark}`)\n        // console.log(`remarkId : ${remarkId}`)\n        // console.log(`fixTime: ${fixTime}`)\n        // console.log(`transinId : ${transinId}`)\n        // console.log(`type : ${type}`)\n\n        ApiProvider.createRemark(name, remark, remarkId, fixTime, transinId, type, editor)\n            .then(result => {\n                console.log(\"createRemark OK \" + JSON.stringify(result));\n                this.props.onOk(result.data.remark);\n            })\n            .catch(err => {\n                console.log(\"createRemark NG \" + JSON.stringify(err));\n            });\n    }\n\n    render() {\n        const { TextArea } = Input;\n        const { createTime, name } = this.props.remarkValue;\n        const onCancel = this.props.onCancel;\n        const onOk = this.onOkClick.bind(this);\n\n        return (\n            <Modal\n                title=\"備註\"\n                visible={this.props.visible}\n                onOk={onOk}\n                onCancel={onCancel}>\n                <div style={{ display: \"grid\", gridTemplateRows: \"30px 30px 30px 30px\" }}>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div>開立時間: {createTime}</div>\n                        <div>上次編輯時間: </div>\n                        {/* <div>上次編輯時間: {this.state.editTime}</div> */}\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div>處理名稱: {name}</div>\n                        <div>上次編輯人: {this.state.editor}</div>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div>頻次:</div>\n                        <div>開立醫師: {this.state.editor}</div>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>備註內容:</div>\n                    <TextArea rows={5} placeholder=\"請輸入備註內容\" value={this.state.remark} onChange={this.onInputChange} />\n                </div>\n            </Modal>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './RTbreathtablecell.scss'\n// import * as FiliterReg from '../../Function/FiliterReg'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass RTbreathetablecell extends Component {\n    state = {\n        onCell: false,\n        onEdit: false,\n        remark: '',\n        powerLogin: 0\n    }\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n    Mouse_move() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onCell: true\n                }\n            )\n        }\n    }\n\n    Mouse_leave() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onCell: false\n                }\n            )\n        }\n    }\n\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    }\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    seachRemark = () => {\n        const { caseinfo, value } = this.props\n        console.log(value)\n        const id = `Breath${moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").valueOf()}`\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, id, \"RTbreath\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    render() {\n        const { value, caseinfo } = this.props\n        console.log(value)\n        const id = `Breath${moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").valueOf()}`\n        const time = moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\")\n        const mode = value.Mode.toString().trim()\n        const setting = value.Setting\n\n        const remarkValue = {\n            \"createTime\": time,\n            \"name\": setting,\n            \"remarkId\": id,\n            \"remark\": this.state.remark,\n            \"transinId\": caseinfo.TRANSINID,\n            \"type\": \"RTbreath\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <div>\n                <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n                <div onMouseMove={() => this.Mouse_move()} onMouseLeave={() => this.Mouse_leave()} className=\"RTtablecell\">\n                    <t3 className='RTBreathDateCell'>{time}</t3>\n                    <div style={{ display: \"grid\", gridTemplateRows: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"100px\" : \"50px 50px\"] }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\", padding: \"0px 5px\" }}>{mode}</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\", padding: \"0px 5px\" }}>{setting}</div>\n                        </div>\n                        <t3 style={{ alignItems: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\", padding: \"0px 5px\", display: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"none\" : \"\"] }}>{this.state.remark}</t3>\n                    </div>\n                    <div style={this.state.onCell ? { display: this.state.powerLogin == 1 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", right: 0, height: \"100px\", background: \"white\", width: \"77px\", border: \"rgba(238,238,238,1) 1px solid\" } : { display: \"none\" }}>\n                        <div onClick={() => this.Edit_state()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }}>\n                            <img src={chooseedit} alt='chooseedit'></img>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default RTbreathetablecell\n","import React, { Component } from 'react';\nimport RTbreathetablecell from './RTbreathtablecell'\n// import * as FilterReg from '../../Function/FiliterReg'\n// import moment from 'moment'\n\nclass RTbreathetable extends Component {\n\n    createRTbreathetable = () => {\n        const { DataList, caseinfo } = this.props\n\n        const RTbreathetable = DataList.map(\n            (value, index, array) =>\n                <RTbreathetablecell key={index} value={value} caseinfo={caseinfo}></RTbreathetablecell>\n        )\n        return RTbreathetable\n    }\n\n    render() {\n        return (\n            <div>\n                <div style={{ height: \"50px\", display: \"grid\", gridTemplateColumns: \"1fr 3fr 6fr\", backgroundColor: \"#E2EDF3\", border: \"rgba(238,238,238,1) 1px solid\" }}>\n                    <t3 style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>紀錄日期</t3>\n                    <t3 style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>Mode</t3>\n                    <t3 style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>Setting</t3>\n                </div>\n                <div style={{ maxHeight: \"400px\", overflow: \"auto\" }}>\n                    {this.createRTbreathetable()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTbreathetable\n","export const data = [{\n    \"rec_dat\": 20200218,\n    \"rec_tim\": 2000,\n    \"ser_num\": 25491463,\n    \"special\": \"@v OETT+PC 38/20/24/5\",\n    \"@xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n    \"@xsi:type\": \"nisdspe\"\n}, {\n    \"rec_dat\": 20200218,\n    \"rec_tim\": 1500,\n    \"ser_num\": 25491463,\n    \"special\": \"@v OETT+PC 40/20/24/5\",\n    \"@xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n    \"@xsi:type\": \"nisdspe\"\n}, {\n    \"rec_dat\": 20200218,\n    \"rec_tim\": 700,\n    \"ser_num\": 25491463,\n    \"special\": \"@v OETT+PC 40/25/24/5\",\n    \"@xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n    \"@xsi:type\": \"nisdspe\"\n}, {\n    \"rec_dat\": 20200218,\n    \"rec_tim\": 400,\n    \"ser_num\": 25491463,\n    \"special\": \"@v OETT+PC 50/25/24/5\",\n    \"@xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n    \"@xsi:type\": \"nisdspe\"\n}, {\n    \"rec_dat\": 20200218,\n    \"rec_tim\": 233,\n    \"ser_num\": 25491463,\n    \"special\": \"@v OETT+SIMV+PS 30/20/24/5\",\n    \"@xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n    \"@xsi:type\": \"nisdspe\"\n}, {\n    \"rec_dat\": 20200218,\n    \"rec_tim\": 100,\n    \"ser_num\": 25491463,\n    \"special\": \"箱溫29度\",\n    \"@xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n    \"@xsi:type\": \"nisdspe\"\n}, {\n    \"rec_dat\": 20200218,\n    \"rec_tim\": 1017,\n    \"ser_num\": 25491463,\n    \"special\": \"@v OETT+SIMV+PS 30/20/24/5\",\n    \"@xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n    \"@xsi:type\": \"nisdspe\"\n}, {\n    \"rec_dat\": 20200218,\n    \"rec_tim\": 709,\n    \"ser_num\": 25491463,\n    \"special\": \"@v OETT+PC 30/20/24/5\",\n    \"@xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n    \"@xsi:type\": \"nisdspe\"\n}, {\n    \"rec_dat\": 20200218,\n    \"rec_tim\": 600,\n    \"ser_num\": 25491463,\n    \"special\": \"箱溫29度\",\n    \"@xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n    \"@xsi:type\": \"nisdspe\"\n}, {\n    \"rec_dat\": 20200218,\n    \"rec_tim\": 100,\n    \"ser_num\": 25491463,\n    \"special\": \"箱溫28.8度\",\n    \"@xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n    \"@xsi:type\": \"nisdspe\"\n}]","import React, { Component } from 'react';\nimport RTbreathetable from './RTbreathetable'\n// import { DatePicker } from 'antd';\nimport * as FilterReg from '../../Function/FiliterReg'\nimport X2JS from 'x2js';\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as QSPEList from '../../Resource/QSPE'\n\nclass RTbreathe extends Component {\n    state = {\n        preCID: null,\n        QSPE: []\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDateRange } = this.props\n        this.setState({ preCID: caseinfo.CASEID, preST: PickerDateRange[0], preET: PickerDateRange[1] })\n        this.getQSPEApi(caseinfo.CASEID, PickerDateRange[0], PickerDateRange[1])\n\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDateRange } = this.props\n        const { preCID, preST, preET } = this.state\n        const CID = caseinfo.CASEID\n        const ST = PickerDateRange[0]\n        const ET = PickerDateRange[1]\n        if (CID !== preCID || ST !== preST || ET !== preET) {\n            this.setState({ preCID: caseinfo.CASEID, preST: PickerDateRange[0], preET: PickerDateRange[1] })\n            this.getQSPEApi(caseinfo.CASEID, PickerDateRange[0], PickerDateRange[1])\n        }\n    }\n    getQSPEApi(CID, st, et) {\n        const xm2 = new X2JS()\n        console.log(CID, st, et)\n        const start = moment(st).format(\"YYYYMMDDHHmm\")\n        const end = moment(et).format(\"YYYYMMDDHHmm\")\n        // ApiProvider.getQSPE(CID, start, end)\n        //     .then(data => {\n        //         console.log(xm2.xml2js(data.data).outmsg.resconts.rescont)\n        //         const result = xm2.xml2js(data.data).outmsg\n        //         if (Number(result.ret) === 0) {\n        //             const resultData = result.resconts.rescont\n        //             if (Array.isArray(resultData)) {\n        //                 this.setState({ QSPE: resultData })\n        //             }\n        //             else {\n        //                 this.setState({ QSPE: [resultData] })\n        //             }\n        //         }\n        //         return []\n        //     })\n        //     .catch(err => {\n        //         console.log(\"getQSPE NG \" + JSON.stringify(err))\n        //     });\n        this.setState({ QSPE: QSPEList.data })\n        console.log(this.state.QSPE)\n    }\n\n    createRTbreathetable = () => {\n        const { caseinfo, PickerDateRange } = this.props\n        const QSPE = this.state.QSPE\n        let DataList = FilterReg.QSPERegList(QSPE)\n        DataList = DataList.filter(data => {\n            let time = moment(data.Date + data.Time, \"YYYYMMDDHHmm\").valueOf()\n            return PickerDateRange[0] <= time && time <= PickerDateRange[1]\n        })\n\n        DataList = DataList.sort((a, b) => {\n            let tempTimeA = moment(a.Date + a.Time, \"YYYYMMDDHHmm\").valueOf()\n            let tempTimeB = moment(b.Date + b.Time, \"YYYYMMDDHHmm\").valueOf()\n            return tempTimeA < tempTimeB ? 1 : -1\n        })\n\n        return <RTbreathetable DataList={DataList} caseinfo={caseinfo}></RTbreathetable>\n    }\n\n    render() {\n        return (\n            <div style={{ marginBottom: \"20px\" }}>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>呼吸器設定紀錄</t2>\n                </div>\n                {this.createRTbreathetable()}\n            </div>\n        );\n    }\n}\n\nexport default RTbreathe\n","import React, { Component } from 'react';\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Prescriptionordertablecell.scss'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Prescriptionordertablecell extends Component {\n    state = {\n        onEdit: false,\n        onMove: false,\n        remark: '',\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { caseinfo, value } = this.props\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, value.UDORDSEQ, \"prescription\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    on_Mouse() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: true\n                }\n            )\n        }\n    }\n    on_leave() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: false\n                }\n            )\n        }\n    }\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    checkStatus = () => {\n        const { value, SelectMode } = this.props\n        const ET = moment(value.UDENDDT, \"YYYY-MM-DD-HH:mm:ss.000000\").valueOf()\n\n        if (SelectMode !== 0) {\n            const Status = SelectMode === 0 || SelectMode === 1 ? \"生效中\" : \"已結束\";\n            return Status\n        } else {\n            const nowT = moment().valueOf()\n            const Status = ET < nowT ? \"已結束\" : \"生效中\";\n            return Status\n        }\n    }\n\n    render() {\n        const { caseinfo, value } = this.props\n        const Name = value.UDGNAME.toString()\n        const PName = value.UDRPNAME.toString()\n        const Unit = value.UDDOSAGE.toString() + \"/\" + value.UDDUNIT.toString() + \"/\" + value.UDFREQN.toString() + \"/\" + value.UDROUTE.toString()\n        const ST = moment(value.UDBGNDT, \"YYYY-MM-DD-HH:mm:ss.000000\").format('MM/DD HH:mm')\n        const ET = moment(value.UDENDDT, \"YYYY-MM-DD-HH:mm:ss.000000\").format('MM/DD HH:mm')\n        const Status = this.checkStatus()\n\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": PName,\n            \"remarkId\": value.UDORDSEQ,\n            \"remark\": this.state.remark,\n            \"transinId\": caseinfo.TRANSINID,\n            \"type\": \"prescription\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <div onMouseMove={() => this.on_Mouse()} onMouseLeave={() => this.on_leave()} className='prescriptiontablecell'>\n                <div style={{ display: \"grid\", gridTemplateRows: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"100px\" : \"80px 50px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 2fr 1fr 1fr 1fr\" }}>\n                        <div className='prescriptiontablecellcontext'><t4 className='prescriptiontablecellcontexttext'>{Name}</t4></div>\n                        <div className='prescriptiontablecellcontext'><t4 className='prescriptiontablecellcontexttext'>{PName}</t4></div>\n                        <div className='prescriptiontablecellcontext'><t3 className='prescriptiontablecellcontexttext'>{Unit}</t3></div>\n                        <div className='prescriptiontablecellcontext'><t3 className='prescriptiontablecellcontexttext'>{Status}</t3></div>\n                        <div className='prescriptiontablecellcontext'><t3 className='prescriptiontablecellcontexttext'>{ST}</t3></div>\n                        <div className='prescriptiontablecellcontext'><t3 className='prescriptiontablecellcontexttext'>{ET}</t3></div>\n                    </div>\n                    <t3 style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\", padding: \"0px 5px\", display: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"none\" : \"\"] }}>{this.state.remark}</t3>\n                    <div style={this.state.onMove ?\n                        { display: this.state.powerLogin == 1 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", right: 0, height: [this.state.remark === undefined || this.state.remark === \"\" ? \"100px\" : \"130px\"], background: \"white\", width: \"77px\", border: \"rgba(238,238,238,1) 1px solid\" }\n                        :\n                        { display: \"none\" }}>\n                        <div onClick={() => this.Edit_state()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }}>\n                            <img src={chooseedit} alt='chooseedit'></img>\n                        </div>\n                    </div>\n                </div>\n                <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            </div >\n        );\n    }\n}\n\nexport default Prescriptionordertablecell\n","import React, { Component } from 'react';\nimport Prescriptionordertablecell from './Prescriptionordertablecell'\nimport './Prescriptionordertable.scss'\n\n\nclass Prescriptionordertable extends Component {\n    render() {\n        const { UDORDER0, caseinfo, SelectMode } = this.props\n        const title = [\"學名\", \"商品名\", \"劑量/單位/途徑/頻次\", \"狀態\", \"開始日期\", \"結束日期\"]\n        const titlecell = title.map(function (value, index, arr) {\n            return (\n                <t3 className='title'>{value}</t3>\n            );\n        })\n        const Prescriptionordertabletable = UDORDER0.map(\n            (value, index, array) =>\n                <Prescriptionordertablecell caseinfo={caseinfo} key={index} value={value} SelectMode={SelectMode}></Prescriptionordertablecell>\n        )\n        return (\n            <div>\n                <div className='Prescriptionordertablelayout'>\n                    {titlecell}\n                </div>\n                <div style={{ maxHeight: \"400px\", overflowY: \"auto\" }}>\n                    {Prescriptionordertabletable}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Prescriptionordertable\n","import React, { Component } from 'react';\nimport Prescriptionordertable from './Prescriptionordertable'\nimport { Select, Input } from 'antd';\nimport moment from 'moment'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport * as ApiProvider from '../../API/ApiProvider'\n\nclass Prescriptionorderlayout extends Component {\n    state = {\n        classParser: { \"mappings\": [] },\n        class: \"全部類別\",\n        SelectMode: 0,\n        InputMode: null,\n        preHID: null,\n        preCID: null,\n        UDORDER0: []\n    }\n    componentDidMount() {\n        this.getGithub()\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        this.setState({ preHID: HID, preCID: CID })\n        this.getUDORDER0(HID, CID)\n    }\n    componentDidUpdate() {\n        const { caseinfo } = this.props\n        const { preHID, preCID } = this.state\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        if (HID !== preHID || CID !== preCID) {\n            this.setState({ preHID: HID, preCID: CID })\n            this.getUDORDER0(HID, CID)\n        }\n    }\n    getGithub() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Prescription\");\n                parser.mappings = [{ \"key\": \"全部類別\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson Prescription OK \" + JSON.stringify(parser))\n                this.setState({\n                    classParser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    getUDORDER0(HID, CID, Start, End) {\n\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                // const RowData = data.data\n                // const SortFromRangeDate = RowData.filter(function (info, index, arr) {\n                //     return\n                // })\n                this.setState({ UDORDER0: data.data })\n            })\n            .catch(err => { console.log(\"getStoredProcedureUDORDER0 NG \" + JSON.stringify(err)) });\n    }\n\n\n    onChangeClass = (value) => {\n        this.setState({ class: value })\n    }\n\n    handleChange = (value) => {\n        this.setState({ SelectMode: value })\n    }\n\n    onChangeinputKey = (event) => {\n        this.setState({ InputMode: event.target.value })\n    }\n\n    ControlBarRender() {\n        const { Option } = Select;\n        return (\n            <div class=\"searchBar\" style={{ display: \"grid\", gridTemplateColumns: \"140px 140px auto\", gridColumnGap: \"10px\", marginBottom: \"5px\" }}>\n                <Select defaultValue={this.state.class} style={{ width: 140 }} onChange={this.onChangeClass}>\n                    {this.state.classParser.mappings.map((mapping, index) => {\n                        return <Option value={mapping.key}>{mapping.key}</Option>\n                    })}\n                </Select>\n                <Select defaultValue={this.state.SelectMode} style={{ width: 140 }} onChange={this.handleChange}>\n                    <Option value={0}>全部狀態</Option>\n                    <Option value={1}>生效中</Option>\n                    <Option value={2}>失效/已結束/取消</Option>\n                </Select>\n                <Input id=\"prescriptionorderinput\" placeholder=\"輸入藥囑關鍵字\" onChange={this.onChangeinputKey} />\n            </div >\n        );\n    }\n\n    parseClass = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部類別\"] = []\n\n        inputs.forEach(input => {\n            let content = input.UDGNAME;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部類別\"].push(input)\n        });\n        return allResult;\n    }\n\n    onClickSearch = () => {\n        // const { UDORDER0 } = this.props\n        const { UDORDER0 } = this.state\n        const parseClass = this.parseClass\n\n        let ListData = [];\n        const activeList = UDORDER0.filter(element => element.UDSTATUS === \"80\")\n        console.log(\"activeList \" + JSON.stringify(activeList));\n\n        let clusteredData = {}\n        if (this.state.classParser !== undefined) {\n            clusteredData = parseClass(activeList, this.state.classParser)\n        }\n        console.log(\"clusteredData \" + JSON.stringify(clusteredData));\n\n        //filter data by selected class\n        let filteredData = clusteredData[this.state.class];\n\n        ListData = this.SortDataList(filteredData)\n        return ListData\n    }\n\n    SortDataList = (DataList) => {\n        const { PickerDateRange } = this.props\n        const { InputMode, SelectMode } = this.state\n        console.log(moment(PickerDateRange[0]).format('YYYYMMDD'), moment(PickerDateRange[1]).format('YYYYMMDD'))\n\n        if (SelectMode !== 0) {\n            console.log(SelectMode)\n            /*\n            預設\n            全部 SelectMode == 0\n            已生效 SelectMode == 1, < 現在時間 <\n            失效 SelectMode == 2, < 現在時間\n            */\n            DataList = DataList.filter(data => {\n                const createST = moment(data.UDBGNDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n                const createET = moment(data.UDENDDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n                const nowDate = moment().valueOf()\n\n                switch (SelectMode) {\n                    case 1:\n                        return createST <= nowDate && nowDate <= createET\n                    case 2:\n                        // console.log(createET, nowDate)\n                        return createET < nowDate\n                    default: return null;\n                }\n            })\n        }\n\n        if (InputMode !== null) {\n            // console.log(InputMode)\n            const regex = new RegExp(InputMode, \"i\");\n            DataList = DataList.filter(data => {\n                return data.UDGNAME.match(regex) !== null || data.UDRPNAME.match(regex) !== null\n            })\n        }\n\n        let DataFormat = []\n\n        const st = PickerDateRange[0]\n        const et = PickerDateRange[1] + (24 * 60 * 60 * 1000)\n\n        DataList.forEach(element => {\n            const time = moment(element.UDBGNDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n            console.log(time)\n            if (st <= time && time <= et) {\n                DataFormat.push(element)\n            }\n        })\n\n        DataFormat = DataFormat.sort((a, b) => {\n            let tempTimeA = moment(a.ORBGNDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n            let tempTimeB = moment(b.ORBGNDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n            return tempTimeA < tempTimeB ? 1 : -1\n        })\n\n        return DataFormat\n    }\n\n    render() {\n        const { searchbar, caseinfo } = this.props\n        const { SelectMode } = this.state\n\n        const filterData = this.onClickSearch()\n\n        return (\n            <div>\n                <div>\n                    <t1>Prescription Order</t1>\n                </div>\n                {searchbar ? this.ControlBarRender() : null}\n                <Prescriptionordertable caseinfo={caseinfo} UDORDER0={filterData} SelectMode={SelectMode} ></Prescriptionordertable>\n            </div>\n        );\n    }\n}\n\nexport default Prescriptionorderlayout\n","import React, { Component } from 'react';\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Treatmentordertablecell.scss'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Treatmentordertablecell extends Component {\n    state = {\n        onEdit: false,\n        onMove: false,\n        remark: this.props.info.remark,\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { info } = this.props\n        ApiProvider.getOneRemark(this.props.caseinfo.TRANSINID, info.ORDSEQNO, \"treatment\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    on_Mouse() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: true\n                }\n            )\n        }\n    }\n    on_leave() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: false\n                }\n            )\n        }\n    }\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    render() {\n        const { info } = this.props\n        // console.log(info)\n        const Name = info.ORPROCED\n        const QD = info.ORFREQN\n        const Status = info.ORSTATUS\n        const ST = moment(info.ORBGNDT.toString(), 'YYYY-MM-DD').format(\"MM/DD\")\n        const ET = moment(info.ORENDDT.toString(), 'YYYY-MM-DD').format(\"MM/DD\")\n\n\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": Name,\n            \"remarkId\": info.ORDSEQNO,\n            \"remark\": this.state.remark,\n            \"transinId\": this.props.caseinfo.TRANSINID,\n            \"type\": \"treatment\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <div onMouseMove={() => this.on_Mouse()} onMouseLeave={() => this.on_leave()} className=\"treatmentordercell\">\n                <div style={{ display: \"grid\", gridTemplateRows: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"100px\" : \"80px 50px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 3fr 1fr 1fr\" }}>\n                        <t3 className='cellstyle'>{ST}</t3>\n                        <t3 className='cellstyle'>{ET}</t3>\n                        <t3 className='cellstyle'>{Name}</t3>\n                        <t3 className='cellstyle'>{QD}</t3>\n                        <t3 className='cellstyle'>{Status}</t3>\n                    </div>\n                    <t3 className='cellstyle' style={{ display: [this.state.remark === undefined || this.state.remark === \"\" ? \"none\" : \"\"] }}>{this.state.remark}</t3>\n                    <div style={this.state.onMove ? { display: this.state.powerLogin == 1 ? \"flex\" : \"none\", justifyContent: \"center\", alignItems: \"center\", position: 'absolute', right: 0, height: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"100px\" : \"130px\"], background: \"white\", width: \"77px\", border: \"rgba(238,238,238,1) 1px solid\" } : { display: \"none\" }}>\n                        <div onClick={() => this.Edit_state()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }}>\n                            <img src={chooseedit} alt='chooseedit'></img>\n                        </div>\n                    </div>\n                </div>\n                <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            </div>\n        );\n    }\n}\nexport default Treatmentordertablecell\n","import React, { Component } from 'react';\nimport Treatmentordertablecell from './Treatmentordertablecell'\nimport './Treatmentordertable.scss'\n\nclass Treatmentordertable extends Component {\n    render() {\n        const { TRTMNT01, caseinfo, PickerDate } = this.props\n\n        if (TRTMNT01 === null || TRTMNT01 === undefined) {\n            return null\n        }\n        const DataList = TRTMNT01 //SortDataList(TRTMNT01, PickerDate)\n        const Treatmentordertablecelllist = DataList.map(\n            (info, index) => <Treatmentordertablecell caseinfo={caseinfo} key={index} info={info}></Treatmentordertablecell>\n\n        )\n        const titlearray = ['開始日期', '結束日期', '處置名稱', '頻次', '狀態']\n        function titlecell(array) {\n            const result = array.map(function (info, index) {\n                return (\n                    <t3 className=\"treatmentordertablecellstyle\" key={index}>{info}</t3>\n                );\n            })\n            return result\n        }\n        return (\n            <div>\n                <div className='treatmentordertable'>\n                    {titlecell(titlearray)}\n                </div>\n                <div style={{ maxHeight: \"400px\", overflowY: \"auto\" }}>\n                    {Treatmentordertablecelllist}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Treatmentordertable\n","import React, { Component } from 'react';\nimport Treatmentordertable from './Treatmentordertable'\nimport { Select, Input } from 'antd';\nimport * as ApiGithub from '../../API/ApiGithub'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\n\nclass Treatmentorderlayout extends Component {\n    state = {\n        // PickerDateRange: [moment().subtract(6, 'days'), moment()],\n        parser: { \"mappings\": [] },\n        DateRangeMode: {},\n        class: \"全部類別\",\n        SelectMode: 0,\n        InputMode: '',\n        preHID: null,\n        preCID: null,\n        TRTMNTQ1: []\n    }\n\n    componentDidMount() {\n        this.getGithub()\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        this.setState({ preHID: HID, preCID: CID })\n        this.getTreatmentQ1(HID, CID)\n    }\n    componentDidUpdate() {\n        const { caseinfo } = this.props\n        const { preHID, preCID } = this.state\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        if (HID !== preHID || CID !== preCID) {\n            this.setState({ preHID: HID, preCID: CID })\n            this.getTreatmentQ1(HID, CID)\n        }\n\n\n    }\n    getGithub() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Treatment\");\n                parser.mappings = [{ \"key\": \"全部類別\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson Treatment OK \" + JSON.stringify(parser))\n                this.setState({\n                    parser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    getTreatmentQ1(HID, CID) {\n        ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => { this.setState({ TRTMNTQ1: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureTRTMNTQ1 NG \" + JSON.stringify(err)) });\n    }\n\n    onChangeClass = (value) => {\n        this.setState({ class: value })\n    }\n\n    handleChange = (value) => {\n        this.setState({ SelectMode: value })\n    }\n\n    onChangeinputKey = (event) => {\n        this.setState({ InputMode: event.target.value })\n    }\n\n    Search_bar = () => {\n        // const { RangePicker } = DatePicker;\n        const { Option } = Select;\n\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 140px auto\", gridColumnGap: \"10px\", marginBottom: \"5px\" }}>\n                {/* <RangePicker defaultValue={this.state.PickerDateRange} format={\"YYYY/MM/DD\"}\n                    locale={\"zh_TW\"} placeholder={[\"請輸入日期\", \"請輸入日期\"]} onChange={this.onChange} allowClear={false} /> */}\n                <Select defaultValue={this.state.class} style={{ width: 140 }} onChange={this.onChangeClass}>\n                    {this.state.parser.mappings.map((mapping, index) => {\n                        return <Option key={index} value={mapping.key}>{mapping.key}</Option>\n                    })}\n                </Select>\n                <Select defaultValue={0} style={{ width: 140 }} onChange={this.handleChange}>\n                    <Option value={0}>全部狀態</Option>\n                    <Option value={1}>生效中</Option>\n                    <Option value={2}>失效/已結束/取消</Option>\n                </Select>\n                <Input placeholder=\"輸入藥囑關鍵字\" value={this.state.InputMode} onChange={this.onChangeinputKey} />\n            </div >\n        );\n\n    }\n\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部類別\"] = []\n\n        inputs.forEach(input => {\n            let content = input.ORPROCED;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部類別\"].push(input)\n        });\n        return allResult;\n    }\n\n    onClickSearch = () => {\n        const { TRTMNT01 } = this.props\n        const parse = this.parse;\n\n        const activeList = TRTMNT01.filter(element => element.ORSTATUS === \"80\")\n        console.log(\"activeList \" + JSON.stringify(activeList));\n\n        let clusteredData = {}\n        if (this.state.parser !== undefined) {\n            clusteredData = parse(activeList, this.state.parser)\n        }\n\n        //filter data by selected class\n        let filteredData = clusteredData[this.state.class];\n\n        const ListData = this.SortDataList(filteredData)\n\n        return ListData\n    }\n\n    SortDataList = (DataList) => {\n        // console.log(JSON.stringify(DataList))\n        const { PickerDateRange } = this.props\n        const { InputMode, SelectMode } = this.state\n\n        if (SelectMode !== 0) {\n            /*\n            預設\n            全部 SelectMode == 0\n            已生效 SelectMode == 1, < 現在時間 <\n            失效 SelectMode == 2, < 現在時間\n            */\n            DataList = DataList.filter(data => {\n                const createST = moment(data.ORBGNDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n                const createET = moment(data.ORENDDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n                const nowDate = moment().valueOf()\n\n                switch (SelectMode) {\n                    case 1:\n                        return createST <= nowDate && nowDate <= createET\n\n                    case 2:\n                        return createET < nowDate\n\n                    default: return null;\n                }\n            })\n        }\n\n        if (InputMode !== '') {\n            const regex = new RegExp(InputMode, \"i\");\n            DataList = DataList.filter(data => {\n                return data.ORPROCED.match(regex) !== null\n            })\n        }\n\n        let DataFormat = []\n\n        const st = PickerDateRange[0]\n        const et = PickerDateRange[1] + (24 * 60 * 60 * 1000)\n\n        DataList.forEach(element => {\n            console.log(element)\n            const time = moment(element.ORBGNDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n            console.log(time)\n            if (st <= time && time <= et) {\n                DataFormat.push(element)\n            }\n        })\n\n        DataFormat = DataFormat.sort((a, b) => {\n            let tempTimeA = moment(a.ORBGNDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n            let tempTimeB = moment(b.ORBGNDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n            return tempTimeA < tempTimeB ? 1 : -1\n        })\n\n        return DataFormat\n    }\n\n    render() {\n        const { searchbar, caseinfo } = this.props\n\n        const filterData = this.onClickSearch()\n\n        return (\n            <div>\n                <div>\n                    <t1>Treatment Order</t1>\n                </div>\n                {searchbar ? this.Search_bar() : null}\n                <Treatmentordertable caseinfo={caseinfo} TRTMNT01={filterData} ></Treatmentordertable>\n            </div>\n        );\n    }\n}\n\nexport default Treatmentorderlayout\n","import React, { Component } from 'react';\nimport detaillogo from '../Image/svg/details.svg'\nimport { Tooltip } from 'antd';\n\nclass Notecell extends Component {\n    \n    updatetime_format(updatetime){\n        function monthformat(month){\n            return month + 1\n        }\n        return new Date(updatetime).getFullYear() + \"-\" + monthformat(new Date(updatetime).getMonth()) + \"-\" +new Date(updatetime).getDate() + \" \" + new Date(updatetime).getHours() + \":\" + new Date(updatetime).getMinutes()\n    }\n    render() {\n        const { info } = this.props\n        const text = info.updatedoctor + \"醫師於\" + this.updatetime_format(info.updatetime) + \"更新\"   \n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"19fr 1fr\", minHeight: \"50px\" }}>\n                <div style={{ wordBreak: \"break-all\", fontSize: \"1.3rem\", display: \"flex\", alignItems: \"center\" }}>{info.data}</div>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <Tooltip placement=\"right\" title={text}>\n                        <div>\n                            <img src={detaillogo} alt='detaillogo'></img>\n                        </div>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Notecell","import React, { Component } from 'react';\nimport Notecell from './Notecell'\nimport editlogo from '../Image/svg/Edit.svg'\nimport { Input, Button } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider';\nimport moment from 'moment';\nclass Note extends Component {\n    state = {\n        powerLogin: 0,\n        EditMode: false,\n        inputContent: '',\n        noteData: [],\n        PickerDate: moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.queryNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.HISID, this.state.PickerDate)\n    }\n    componentDidUpdate() {\n        const propDate = this.props.PickerDate\n        const stateDate = this.state.PickerDate\n        if (propDate !== stateDate) {\n            this.setState({ PickerDate: propDate })\n            this.queryNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.HISID, propDate)\n        }\n    }\n    queryNotice(TRANSID, HISID, pickerdate) {\n        const st = moment(moment(pickerdate).format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n        const et = moment(moment(pickerdate).format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf() + (24 * 60 * 60 * 1000)\n        console.log(TRANSID, HISID, st, et)\n        console.log(moment(st).format(\"YYYY/MM/DD\"))\n        console.log(moment(et).format(\"YYYY/MM/DD\"))\n        ApiProvider.getOnePatientNotice(TRANSID, HISID, st, et)\n            .then(result => {\n                console.log(\"getOnePatientNotice OK \" + JSON.stringify(result));\n                this.setState({\n                    noteData: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientNotice NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n    // queryOnePatientNotice() {\n    //     ApiProvider.getOnePatientNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID)\n    //         .then(data => {\n    //             console.log(\" OK \" + JSON.stringify(data))\n    //             this.setState({ noteData: data.data })\n    //         }).catch(err => { })\n    // }\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString()\n        const doc = sessionStorage.getItem('user')\n        ApiProvider.createNotice(this.props.caseinfo.HISID, this.state.inputContent, timeNowStr, this.props.caseinfo.TRANSINID, doc)\n            .then(data => {\n                this.queryNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID, this.props.PickerDate)\n            })\n            .catch(err => {\n                console.log(\" Err \" + JSON.stringify(err))\n            })\n        this.setState(\n            {\n                EditMode: false,\n                inputContent: undefined\n            }\n        )\n    }\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    EditControl() {\n        const edit = this.props.editstatus\n        if (edit) {\n            return (\n                <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                    <img src={editlogo} alt=\"editlogo\" />\n                </div>\n            );\n        }\n        return null\n    }\n    render() {\n        const List = this.state.noteData\n        console.log(List)\n        const notelist = List.map((info, index) => {\n            const time = moment(info.time, \"YYYY-MM-DD[T]HH:mm:ss.000+0000\").format('YYYY-MM-DD HH:mm:ss')\n            const localTime = moment.utc(time).toDate()\n            const infoObj = {\n                updatedictor: info.doc,\n                updatetime: moment(localTime).format(\"YYYY/MM/DD HH:mm:ss\"),\n                data: info.context\n            }\n            return <Notecell key={index} info={infoObj}></Notecell>\n        })\n        const EditButton = this.EditControl()\n        return (\n            <div style={{ marginTop: \"10px\", borderRadius: \"4px\" }}>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\", justifyContent: 'space-between' }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{this.props.title}</t2>\n                    {EditButton}\n                </div>\n                <div style={{ height: \"300px\" }}>\n                    <div style={{ maxHeight: \"300px\", overflow: \"auto\" }}>\n                        {notelist}\n                    </div>\n                    <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                        <div style={{ padding: \"5px 10px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <Input placeholder=\"輸入當日內容\" value={this.state.inputContent} onChange={this.onInputChange.bind(this)}></Input>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                                <Button onClick={() => this.onClickCancel()}>取消</Button>\n                                <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default Note\n","import React, { Component } from 'react';\nimport Schedule_event_list from '../../Module/Schedule_event'\nimport Note from '../../Module/Note'\nclass CrossectionSchedule extends Component {\n    render() {\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\" }}>\n                <Schedule_event_list source={this.props.source} PickerDate={this.props.PickerDate} title=\"排程\" caseinfo={this.props.caseinfo} editstatus={this.props.editstatus}></Schedule_event_list>\n                <Note title=\"當日評論Comment\" PickerDate={this.props.PickerDate} caseinfo={this.props.caseinfo} data={this.props.noticeData} editstatus={this.props.editstatus}></Note>\n            </div>\n        );\n    }\n}\n\nexport default CrossectionSchedule;\n","import React, { Component } from 'react';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport Wardinfousercheckbox from '../../Wardview/Wardunfousercheckbox';\n\nclass CrosssectionTodo extends Component {\n    state = {\n        todoList: []\n    }\n\n    componentDidMount() {\n        this.queryTodo();\n    }\n\n    queryTodo() {\n        ApiProvider.getOneTodo(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID)\n            .then(result => {\n                console.log(\"getOneTodo OK \" + JSON.stringify(result.data));\n                this.setState({\n                    todoList: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getOneTodo NG \" + JSON.stringify(err));\n            });\n    }\n\n    renderTodoItem() {\n        if (this.state.todoList.length === 0) {\n            return (\n                <div>沒有待辦事項</div>\n            )\n        } else {\n            return this.state.todoList.map((item, index) => {\n                if (item.type === \"未完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={false}></Wardinfousercheckbox>);\n                } else {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={true}></Wardinfousercheckbox>);\n                }\n\n            });\n        }\n    }\n\n    render() {\n        const renderTodoItem = this.renderTodoItem.bind(this);\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\", marginTop: \"10px\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>待辦排程</t2>\n                </div>\n                {renderTodoItem()}\n            </div>\n        );\n    }\n}\n\nexport default CrosssectionTodo\n","import React, { Component } from 'react';\nimport Vitalsign from './Vitalsign';\nimport Controlbar from '../Controlbar';\nimport CrossectionIo from './Crossection_io'\nimport Labviewlayout from './Labview'\nimport Nonlabviewlayout from './Nonlabview'\nimport GAS from './GAS'\nimport RTbreathe from './RTbreathe'\nimport Prescriptionorderlayout from '../Prescriptionorder/Prescriptionorder'\nimport Treatmentorderlayout from '../Treatmentorder/Treatmentorder'\nimport CrossectionSchedule from './Crosssectionschedule'\nimport CrosssectionTodo from './Crosssection_todo'\nimport './Crosssectionlayout.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass Crosssectionlayout extends Component {\n    state = {\n        Cross_item: [0, 1, 2, 3, 4, 5],\n        RESDGLU1: [],\n        RESLAB02: [],\n        RESLAB01: [],\n        RESDBGAS: [],\n        RESLAB0C: [],\n        RESSECT: [],\n        UDORDER0: [],\n        TRTMNTQ1: [],\n\n        PickerDate: moment(moment().format('YYYYMMDD')).valueOf(),\n\n        SelectInterval: 1,\n\n        preCID: null,\n        preHID: null\n    }\n    componentDidMount() {\n        const CID = this.props.caseinfo.CASEID\n        const HID = this.props.caseinfo.HISID\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        this.setState({\n            preCID: CID,\n            preHID: HID\n        })\n        this.NIS_API_IO(this.state.PickerDate, CID, HID, TRDT)\n    }\n    componentDidUpdate() {\n        const CID = this.props.caseinfo.CASEID\n        const HID = this.props.caseinfo.HISID\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        const { preCID, preHID } = this.state\n        if (preCID !== CID || preHID !== HID) {\n            this.setState({\n                preCID: CID,\n                preHID: HID\n            })\n            this.NIS_API_IO(this.state.PickerDate, CID, HID, TRDT)\n        }\n    }\n    NIS_API_IO(Datetime, CID, HID, TRDT) {\n        function selectMonthInterval(Datetime) {\n            const timestampInterval = new Date().getTime() - Datetime\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        const TransinDate = moment(TRDT).format(\"YYYY-MM-DD\")\n        const MonthInterval = selectMonthInterval(Datetime)\n        ApiProvider.getStoredProcedureRESDGLU1(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESDGLU1: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDGLU1 NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESLAB02(HID, TransinDate)\n            .then(data => {\n                this.setState({ RESLAB02: data.data })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESLAB02 NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESLAB01(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESLAB01: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESLAB01 NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESDBGAS(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESDBGAS: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDBGAS NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESLAB0C(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESLAB0C: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESLAB0C NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESSECT(HID, MonthInterval, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                this.setState({\n                    RESSECT: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESSECT NG \" + JSON.stringify(err))\n            });\n\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                this.setState({\n                    UDORDER0: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureUDORDER0 NG \" + JSON.stringify(err))\n            });\n        ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => {\n                this.setState({\n                    TRTMNTQ1: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureTRTMNTQ1 NG \" + JSON.stringify(err))\n            });\n    }\n\n    callbackFunction = (item_array) => {\n        this.setState({ Cross_item: item_array })\n    }\n\n    callbackDateFunction = (PickerTimeStamp) => {\n        console.log(PickerTimeStamp)\n        this.setState({ PickerDate: PickerTimeStamp })\n    }\n\n    display_item(number) {\n        const item = this.state.Cross_item\n        var filter = item.some(function (item, index, array) {\n            return item === number\n        });\n        return filter\n    }\n    render() {\n        const crosssectioncontrollist = [\n            {\n                \"name\": \"生命徵象/輸出入\",\n                \"scrollpoint\": \"vitalsignIO\"\n            },\n            {\n                \"name\": \"檢驗結果\",\n                \"scrollpoint\": \"lab\"\n            },\n            {\n                \"name\": \"呼吸評估\",\n                \"scrollpoint\": \"rt\"\n            },\n            {\n                \"name\": \"醫藥囑\",\n                \"scrollpoint\": \"order\"\n            },\n            {\n                \"name\": \"行事曆及註記\",\n                \"scrollpoint\": \"schedule\"\n            }\n        ]\n        const { caseinfo } = this.props\n        const TimeStampPickerDate = this.state.PickerDate\n        const endTime = TimeStampPickerDate + (31 * 60 * 60 * 1000)\n        const startTime = endTime - (3 * 24 * 60 * 60 * 1000)\n        const PickerDateRange = [TimeStampPickerDate - (6 * 24 * 60 * 60 * 1000), TimeStampPickerDate]\n        // console.log(moment(PickerDateRange[0]).format('YYYYMMDD'), moment(PickerDateRange[1]).format('YYYYMMDD'))\n\n        return (\n            <div>\n                <Controlbar caseinfo={caseinfo} PickerDate={this.state.PickerDate} parentDateCallback={this.callbackDateFunction} parentCallback={this.callbackFunction} btnlist={crosssectioncontrollist} item_array={this.state.Cross_item}></Controlbar>\n                <div id=\"crossection\" className='crossectioncontent'>\n                    <div id={\"vitalsignIO\"} style={this.display_item(0) ? { display: \"grid\", gridTemplateColumns: \"2fr 1fr\", gridGap: \"10px\", marginBottom: \"10px\" } : { display: \"none\" }}>\n                        <Vitalsign PickerDate={this.state.PickerDate} caseinfo={caseinfo}></Vitalsign>\n                        <CrossectionIo PickerDate={this.state.PickerDate} caseinfo={caseinfo} title=\"輸出入\"></CrossectionIo>\n                    </div>\n                    <div id={\"lab\"} style={this.display_item(1) ? { display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" } : { display: \"none\" }}>\n                        <Labviewlayout PickerDate={this.state.PickerDate} caseinfo={caseinfo} RESLAB01={this.state.RESLAB01} RESLAB02={this.state.RESLAB02} RESDBGAS={this.state.RESDBGAS} RESLAB0C={this.state.RESLAB0C} RESDGLU1={this.state.RESDGLU1} RESSECT={this.state.RESSECT}></Labviewlayout>\n                        <Nonlabviewlayout caseinfo={caseinfo} StartTime={startTime} EndTime={endTime}></Nonlabviewlayout>\n                    </div>\n                    <div id={\"rt\"} style={this.display_item(2) ? { display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" } : { display: \"none\" }}>\n                        <GAS caseinfo={caseinfo} PickerDateRange={PickerDateRange} searchbar={false}></GAS>\n                        <RTbreathe caseinfo={caseinfo} PickerDateRange={PickerDateRange} searchbar={false}></RTbreathe>\n                    </div>\n                    <div id={\"order\"} style={this.display_item(3) ? { display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" } : { display: \"none\" }}>\n                        <Prescriptionorderlayout UDORDER0={this.state.UDORDER0} caseinfo={caseinfo} searchbar={false} PickerDateRange={PickerDateRange}></Prescriptionorderlayout>\n                        <Treatmentorderlayout TRTMNT01={this.state.TRTMNTQ1} caseinfo={caseinfo} searchbar={false} PickerDateRange={PickerDateRange}></Treatmentorderlayout>\n                    </div>\n                    <div id={\"schedule\"} style={this.display_item(4) ? null : { display: \"none\" }}>\n                        <CrossectionSchedule source={1} PickerDate={this.state.PickerDate} editstatus={false} caseinfo={caseinfo}></CrossectionSchedule>\n                    </div>\n                    <div style={this.display_item(5) ? null : { display: \"none\" }}>\n                        <CrosssectionTodo caseinfo={caseinfo} ></CrosssectionTodo>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Crosssectionlayout;\n","import React, { Component } from 'react';\nimport IOpage from '../../Module/iopage'\n\nclass Inoutonchronic extends Component {\n    render() {\n        const { title, caseinfo, IntervalStatus, PickerDate } = this.props\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t2>\n                </div>\n                <IOpage caseinfo={caseinfo} Status={\"Chronic\"} IntervalStatus={IntervalStatus} PickerDate={PickerDate}></IOpage>\n            </div>\n        );\n    }\n}\n\nexport default Inoutonchronic\n","import React, { Component } from 'react'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport { Spin, Icon } from 'antd';\nimport moment from 'moment'\n\nclass Chronictablecelltooltip extends Component {\n    state = {\n        preStartTimeStamp: null,\n        loading: true,\n        resultStr: \"--\"\n    }\n    componentDidUpdate() {\n        const { startTimeStamp } = this.props\n        const { preStartTimeStamp } = this.state\n        if (startTimeStamp !== preStartTimeStamp) {\n            console.log(\"Chronictablecelltooltip componentDidUpdate\")\n        }\n    }\n    componentDidMount() {\n        const { startTimeStamp } = this.props\n        this.setState({ preStartTimeStamp: startTimeStamp })\n        console.log(\"Chronictablecelltooltip componentDidMount\")\n        this.apiGet()\n    }\n    apiGet() {\n        const { tooltipelement, caseinfo } = this.props\n        const ORMM = tooltipelement.ORMM.toString().trim()\n        const ORDSEQNO = tooltipelement.ORDSEQNO.toString().trim()\n        //RESDISP\n        ApiProvider.getStoredProcedureRESDISP(caseinfo.HISID, ORMM, caseinfo.CASEID, ORDSEQNO)\n            .then(data => {\n                console.log(\"getStoredProcedureRESDISP OK \" + JSON.stringify(data.data))\n                //const fakeData = [{\"RECNO\":\"1\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"正式報告\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"2\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"                                臺北榮民總醫院病理檢驗部報告\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"3\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  病患資訊：         新生兒加護病房 - 8 張恩慈之男 4599819-4 男性 3天大 NBD\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"4\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  申請序號 / 工作號：     0APKHTG/2502091284       開立時間：    20200207  0809\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"5\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  開醫囑者：         DOC3915L 李苡萱         簽收時間：    20200209  1850\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"6\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  報告人 ：          LABE1523 林宜慧         報告時間：    20200209  1850\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"7\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  檢體 ：           Blood\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"8\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  醫囑名稱：         Crea,ALT,Mg,NA,K,P,\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"9\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"   項目     H/L  結果   前次結果 單位     參考值\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"10\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"   BUN            ()\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"11\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"   Na        145  ()   mmol/L   136~145 mmol/L\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"12\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"   K         4.0   ()   mmol/L   3.5~5.1 mmol/L\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"}]\n\n                //parse content\n                const parsers = this.props.summaryParse\n                const parser = data.data.length > 0 ? this.select_parser(\"Chronic table\", data.data[0], parsers) : undefined\n\n                if (parser !== undefined) {\n                    //concat all content\n                    let allContent = \"\"\n                    //fakeData.forEach(item => {\n                    data.data.forEach(item => {\n                        allContent = `${allContent} \"\\n\" ${item.CONTENT}`;\n                    });\n                    //console.log(\"allContent\" + JSON.stringify(allContent))\n\n                    const result = this.parse(allContent, parser)\n                    //console.log(\"result\" + JSON.stringify(result))\n\n                    const resultStr = this.summerize(result, parser)\n                    //console.log(\"resultStr\" + JSON.stringify(resultStr))\n\n                    this.setState({ resultStr: resultStr })\n                }\n\n                this.setState({ loading: false })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDISP NG \" + JSON.stringify(err))\n                this.setState({ loading: false })\n            })\n    }\n    select_parser = (parserName, input, parsers) => {\n        const inputBeginTime = moment(input.ORBGNDT, \"YYYY-MM-DD\").valueOf()\n        return parsers.find(x =>\n            parserName.match(x.parser_name)\n            && (!x.apply_condition.start_time || inputBeginTime >= x.apply_condition.start_time)\n        )\n    }\n    parse = (input, parser) => {\n        let mappings = parser.mappings\n        let result = {}\n        mappings.forEach(mapping => {\n            const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n            const match = input.match(re)\n            result[mapping.key] = match && match[mapping.position]\n        });\n        return result;\n    }\n    summerize = (kv_pairs, parser) => {\n        let summary_str = parser.summary\n        for (const key in kv_pairs) {\n            let match_replacer = summary_str.match(RegExp(\"\\\\[\" + key + \"(:(.*?))?\\\\]\"))\n            let replacer = \"\"\n            if (match_replacer && match_replacer.length === 3) {\n                replacer = match_replacer[2]\n            }\n            const match = summary_str.match(RegExp(\"\\\\[\" + key + \":(.*?)?\\\\]\"))\n            summary_str = summary_str.replace(match[0], match[0].replace(match[1], kv_pairs[key] || replacer))\n        }\n        return summary_str;\n    }\n    render() {\n        const { tooltipelement } = this.props\n        const { loading, resultStr } = this.state\n        const infoTime = tooltipelement.ORRCPTM.toString().trim()\n        const name = tooltipelement.ORPROCED.toString().trim()\n        const reportname = tooltipelement.ORSPCN1.toString().trim()\n        const cellRenderData = [infoTime, name, reportname, resultStr]\n        const Cell = cellRenderData.map(function (value, index) {\n            if (loading) {\n                const antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n                return (\n                    <Spin key={index} indicator={antIcon} />\n                );\n            } else {\n                return (\n                    <div key={index} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"0px 5px\" }}>\n                        {value}\n                    </div>\n                );\n            }\n\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"100px 150px 150px 200px\" }}>{Cell}</div>\n        );\n    }\n}\n\nexport default Chronictablecelltooltip","import React, { Component } from 'react'\nimport { Tooltip } from 'antd'\nimport moment from 'moment'\nimport Chronictablecelltooltip from './ChronicTableCellTooltipCell'\n\nclass Chronictablecell extends Component {\n    CellText() {\n        const { element, caseinfo, summaryParse } = this.props\n        const start = moment(element.StartTime).format(\"YYYY/MM/DD HH:mm:ss\")\n        const startTimeStamp = moment(element.StartTime).valueOf()\n        const end = moment(element.EndTime).format(\"HH:mm:ss\")\n        const title = [\"採檢時間\", \"檢驗項目\", \"檢體\", \"報告\"]\n        const titleCell = title.map(function (value, index) {\n            return (\n                <div key={index} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"0px 5px\" }}>\n                    {value}\n                </div>\n            );\n        })\n        const objectElement = element.element\n        const objectElementCell = objectElement.map(function (info, index, arr) {\n            return (\n                <Chronictablecelltooltip key={index} startTimeStamp={startTimeStamp} tooltipelement={info} caseinfo={caseinfo} summaryParse={summaryParse}></Chronictablecelltooltip>\n            );\n        })\n        return (\n            <div>\n                {/* <div>{start}-{end}</div>\n                <div>檢驗檢查項目 : {element.title}類</div> */}\n                <div style={{ display: \"grid\", gridTemplateColumns: \"100px 150px 150px 200px\" }}>\n                    {titleCell}\n                </div>\n                {objectElementCell}\n            </div>\n        );\n    }\n    render() {\n        function valueNull(value) {\n            if (value === null || value === undefined || value === 0) {\n                return \"--\"\n            }\n            return value\n        }\n        const { element } = this.props\n        const TitleRender = this.CellText()\n        if (element.element.length === 0) {\n            return (\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>--</div>\n            );\n        }\n        return (\n            <Tooltip title={TitleRender} autoAdjustOverflow={true} overlayStyle={{ maxWidth: \"800px\"}}>\n                <div style={{ fontSize: \"16px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' , cursor: \"pointer\" }}>\n                    {valueNull(element.element.length)}\n                </div>\n            </Tooltip>\n        );\n    }\n}\n\nexport default Chronictablecell","import React, { Component } from 'react'\nimport moment from 'moment'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport * as ApiPronider from '../../API/ApiProvider'\nimport Chronictablecell from './ChronicTableCell'\nimport * as RSData from '../../Resource/RESSECT'\n\nclass Tableonchronic extends Component {\n    state = {\n        LabParse: [],\n        SummaryParse: [{apply_condition: \"\", mappings: []}],\n        RESSECT: [],\n        preHID: null\n    }\n\n    ApiGet(HID, monthly) {\n        ApiGithub.getGitHubJson(\"Chronic_Lab.json\")\n            .then(data => {\n                this.setState({\n                    LabParse: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiGithub.getGitHubJson(\"Summary.json\")\n            .then(data => {\n                this.setState({\n                    SummaryParse: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiPronider.getStoredProcedureRESSECT(HID, \"1\", \"ALL\", \"DOC3924B\")\n            .then(data => {\n                this.setState({ RESSECT: data.data })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        // this.setState({ RESSECT: RSData.data })\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDate, chronic_state } = this.props\n        const HID = caseinfo.HISID\n        const monthly = this.fotmatTimerMonthly(PickerDate)\n        this.setState({ preHID: caseinfo.HISID, prePickerDate: PickerDate, preInterval: chronic_state })\n        this.ApiGet(HID, monthly)\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDate, chronic_state } = this.props\n        const HID = caseinfo.HISID\n        const { preHID, prePickerDate, preInterval } = this.state\n        const monthly = this.fotmatTimerMonthly(PickerDate)\n        if (HID !== preHID || prePickerDate !== PickerDate || preInterval !== chronic_state) {\n            this.setState({ preHID: caseinfo.HISID, prePickerDate: PickerDate, preInterval: chronic_state })\n            this.ApiGet(HID, monthly)\n        }\n    }\n\n    fotmatTimerMonthly(pickerdate) {\n        const timestampInterval = moment().valueOf() - pickerdate\n        const timestampMonth = 30 * 24 * 60 * 60 * 1000\n        const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n        return MonthInt\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    render() {\n        function DataForTimer(dataList, interval, pickerdate) {\n            function starttime(interval, entTimeStamp) {\n                if (interval === 0) {\n                    return entTimeStamp - (24 * 60 * 60 * 1000)\n                }\n                if (interval === 1) {\n                    return entTimeStamp - (3 * 24 * 60 * 60 * 1000)\n                }\n                if (interval === 2) {\n                    return entTimeStamp - (7 * 24 * 60 * 60 * 1000)\n                }\n                return entTimeStamp - (14 * 24 * 60 * 60 * 1000)\n            }\n\n            function fotmatTimerForTimer(interval, st, list, title, grid) {\n                var TimerForList = []\n                for (let index = 0; index < interval; index++) {\n                    const StartTime = st + (index * grid * 60 * 60 * 1000)\n                    const EndTime = st + ((index + 1) * grid * 60 * 60 * 1000)\n                    const filterTimerForDataList = list.filter(function (element, index, arr) {\n                        const time = element.ORRCPDT.toString().trim() + element.ORRCPTM.toString().trim()\n                        const timestamp = moment(time, 'YYYY-MM-DDHH:mm:ss').valueOf()\n                        return StartTime <= timestamp && timestamp < EndTime\n                    })\n                    TimerForList.push({\n                        StartTime: StartTime,\n                        EndTime: EndTime,\n                        element: filterTimerForDataList,\n                        title: title\n                    })\n                }\n                return TimerForList\n            }\n            console.log(dataList.array)\n            const et = pickerdate + (31 * 60 * 60 * 1000)\n            const st = starttime(interval, et)\n            const slectInt = TimeInterval(interval)\n            const DataTransForTimer = fotmatTimerForTimer(slectInt.interval, st, dataList.array, dataList.title, slectInt.grid)\n            return DataTransForTimer\n        }\n\n\n\n        function LabFormat(ressect, parsrList) {\n            var arrayBiochemical = []\n            var arrayBlood = []\n            var arrayCultivate = []\n            var arrayGAS = []\n            var arrayGlu = []\n            var arrayRadiation = []\n            var arrayOther = []\n\n            console.log(parsrList)\n            for (let index = 0; index < ressect.length; index++) {\n                const element = ressect[index];\n                const element_ORPROCED = element.ORPROCED\n                const BioFind = parsrList.Biochemical.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const BloFind = parsrList.Blood.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const CulFind = parsrList.Cultivate.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const GasFind = parsrList.GAS.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const GluFind = parsrList.GAS.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const RadFind = parsrList.Radiation.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                if (BioFind) {\n                    arrayBiochemical.push(element)\n                }\n                if (BloFind) {\n                    arrayBlood.push(element)\n                }\n                if (CulFind) {\n                    arrayCultivate.push(element)\n                }\n                if (GasFind) {\n                    arrayGAS.push(element)\n                }\n                if (GluFind) {\n                    arrayGlu.push(element)\n                }\n                if (RadFind) {\n                    arrayRadiation.push(element)\n                }\n                if (BioFind === false && BloFind === false && CulFind === false && GasFind === false && RadFind === false) {\n                    arrayOther.push(element)\n                }\n            }\n            const arrayList = []\n            arrayList.push({\n                title: \"生化\",\n                array: arrayBiochemical,\n            })\n            arrayList.push({\n                title: \"血液\",\n                array: arrayBlood,\n            })\n            arrayList.push({\n                title: \"培養\",\n                array: arrayCultivate,\n            })\n            arrayList.push({\n                title: \"GAS\",\n                array: arrayGAS,\n            })\n            arrayList.push({\n                title: \"Glu\",\n                array: arrayGlu,\n            })\n            arrayList.push({\n                title: \"放射\",\n                array: arrayRadiation,\n            })\n            arrayList.push({\n                title: \"其他\",\n                array: arrayOther,\n            })\n            return arrayList\n        }\n        function TimeInterval(interval) {\n            if (interval === 0) {\n                return { interval: 24, grid: 1 }\n            }\n            if (interval === 1) {\n                return { interval: 18, grid: 4 }\n            }\n            if (interval === 2) {\n                return { interval: 21, grid: 8 }\n            }\n            return { interval: 14, grid: 24 }\n        }\n        const { chronic_state, caseinfo, PickerDate, title } = this.props\n        const { LabParse, RESSECT, SummaryParse } = this.state\n        if (LabParse === null || LabParse === undefined || LabParse.length === 0) {\n            return null\n        }\n        if (RESSECT === null || RESSECT === undefined || RESSECT.length === 0) {\n            return null\n        }\n        const data = LabFormat(RESSECT, LabParse)\n        const statestatus = TimeInterval(chronic_state)\n        const title_list = title.map((info, index) =>\n            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"40px\", border: \"1px solid rgba(238,238,238,1)\", borderCollapse: \"collapse\", backgroundColor: \"#cccccc\" }} key={index}>\n                <t2>{info.title}</t2>\n            </div>\n        )\n        const cell_list = data.map(function (value, index, arr) {\n            const DataList = DataForTimer(value, chronic_state, PickerDate)\n            return DataList\n        })\n        console.log(data)\n        const cellRender = cell_list.map(function (value, index, array) {\n            const valuecell = value.map(function (element, index, arr) {\n                const toolTipID = \"ChronicTableTootip\" + index\n                return (\n                    <Chronictablecell key={toolTipID} element={element} caseinfo={caseinfo} summaryParse={SummaryParse}></Chronictablecell>\n                );\n            })\n            return valuecell\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\" }}>\n                <div style={{ display: \"grid\", gridTemplateRows: \"repeat(\" + title.length + \",1fr)\" }}>\n                    {title_list}\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + statestatus.interval + \",1fr)\", gridTemplateRows: \"repeat(7,1fr)\" }}>\n                    {cellRender}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Tableonchronic","import React, { Component } from 'react'\nimport Tableonchronic from './ChronicTable'\n\nclass Chroniclab extends Component {\n    render() {\n        const { title, caseinfo, select_interval, PickerDate } = this.props\n        const item_title = [{ title: \"生化\" }, { title: \"血液\" }, { title: \"培養\" }, { title: \"GAS\" }, { title: \"Glu\" }, { title: \"放射\" }, { title: \"其他\" }]\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t2>\n                </div>\n                <Tableonchronic title={item_title} caseinfo={caseinfo} chronic_state={select_interval} PickerDate={PickerDate}></Tableonchronic>\n            </div>\n        );\n    }\n}\n\nexport default Chroniclab\n","import React, { Component } from 'react'\nimport rtlogo from '../../Image/svg/RT.svg'\nimport { Tooltip } from 'antd'\nimport moment from 'moment'\n\nclass Chronicrttablecell extends Component {\n    ToolTipRender() {\n        const { cellelement } = this.props\n        const startTime = moment(cellelement.startTime).format(\"MM/DD HH:mm\")\n        const endTime = moment(cellelement.endTime).format(\"MM/DD HH:mm\")\n        const RTListRender = cellelement.element.map(function (info, index, arr) {\n            const time = moment(info.Date + info.Time, \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\")\n            const Mode = info.Mode\n            const Setting = info.Setting\n            return (\n                <div>\n                    <div>Time:{time}</div>\n                    <div>Mode:{Mode}</div>\n                    <div style={{ display: \"flex\" }}>\n                        <div>Setting:</div>\n                        <div>{Setting}</div>\n                    </div>\n                </div>\n            );\n        })\n\n        return (\n            <div>\n                <div>{startTime}~{endTime}</div>\n                {RTListRender}\n            </div>\n        );\n    }\n    render() {\n        function changetext(text) {\n            if (text === 0) {\n                return '--'\n            }\n            return <img src={rtlogo} alt=\"rtlogo\" />\n        }\n        const { cellelement } = this.props\n        if (cellelement.length === 0) {\n            return <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center', border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>--</div>\n        }\n        return (\n            <Tooltip placement=\"right\" autoAdjustOverflow={true} title={this.ToolTipRender()} overlayStyle={{ maxWidth: \"800px\", background: \"white\" }}>\n                <centerstyle style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', cursor: \"pointer\"  }}>\n                    {changetext(cellelement.length)}\n                </centerstyle>\n            </Tooltip>\n        );\n    }\n}\nexport default Chronicrttablecell","import React, { Component } from 'react'\nimport * as FilterReg from '../../Function/FiliterReg'\nimport moment from 'moment'\nimport X2JS from 'x2js';\nimport * as ApiProvider from '../../API/ApiProvider'\nimport Chronicrttablecell from './ChronicRTTableCell'\nimport * as QSPEList from '../../Resource/QSPE'\n\nclass Chronicrttable extends Component {\n    state = {\n        QSPE: [],\n        preCID: null,\n        prePickerdate: null,\n        preInterval: null\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDate, select_interval } = this.props\n        this.setState({ preCID: caseinfo.CASEID, prePickerdate: PickerDate, preInterval: select_interval })\n        const timer = this.timerFormat(PickerDate, select_interval)\n        const start = moment(timer.StartTime).format(\"YYYYMMDDHHmm\")\n        const end = moment(timer.EndTime).format(\"YYYYMMDDHHmm\")\n        this.getQSPE(caseinfo.CASEID, start, end)\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDate, select_interval } = this.props\n        const { preCID, prePickerdate, preInterval } = this.state\n        if (caseinfo.CASEID !== preCID || PickerDate !== prePickerdate || preInterval !== select_interval) {\n            const { caseinfo, PickerDate } = this.props\n            this.setState({ preCID: caseinfo.CASEID, prePickerdate: PickerDate, preInterval: select_interval })\n            const timer = this.timerFormat(PickerDate, select_interval)\n            const start = moment(timer.StartTime).format(\"YYYYMMDDHHmm\")\n            const end = moment(timer.EndTime).format(\"YYYYMMDDHHmm\")\n            this.getQSPE(caseinfo.CASEID, start, end)\n        }\n\n    }\n    getQSPE(CID, st, et) {\n        const xm2 = new X2JS()\n        ApiProvider.getQSPE(CID, st, et)\n            .then(data => {\n                console.log(xm2.xml2js(data.data).outmsg.resconts.rescont)\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                if (Array.isArray(parsedata)) {\n                    this.setState({ QSPE: parsedata })\n                }\n                else {\n                    this.setState({ QSPE: [parsedata] })\n                }\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        // this.setState({ QSPE: QSPEList.data })\n    }\n\n    timerFormat(PickerDate, Interval) {\n        const EndTime = PickerDate + (31 * 60 * 60 * 1000)\n        if (Interval === 0) {\n            return {\n                StartTime: EndTime - (24 * 60 * 60 * 1000),\n                EndTime: EndTime,\n                Interval: 24,\n                grid: 1\n            }\n        }\n        if (Interval === 1) {\n            return {\n                StartTime: EndTime - (3 * 24 * 60 * 60 * 1000),\n                EndTime: EndTime,\n                Interval: 18,\n                grid: 4\n            }\n\n        }\n        if (Interval === 2) {\n            return {\n                StartTime: EndTime - (7 * 24 * 60 * 60 * 1000),\n                EndTime: EndTime,\n                Interval: 21,\n                grid: 8\n            }\n\n        }\n        return {\n            StartTime: EndTime - (14 * 24 * 60 * 60 * 1000),\n            EndTime: EndTime,\n            Interval: 14,\n            grid: 24\n        }\n    }\n\n\n\n    table_content() {\n        function formatDataList(startTime, interval, list, grid) {\n            var timerList = []\n            for (let index = 0; index < interval; index++) {\n                const start = startTime + (index * grid * 60 * 60 * 1000)\n                const end = startTime + ((index + 1) * grid * 60 * 60 * 1000)\n                const listFilter = list.filter(function (info, index, arr) {\n                    const time = moment(info.Date.toString() + info.Time.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    return start <= time && time < end\n                })\n                timerList.push({\n                    length: listFilter.length,\n                    element: listFilter,\n                    startTime: start,\n                    endTime: end\n                })\n            }\n            return timerList\n        }\n\n        const { select_interval, PickerDate } = this.props\n        const QSPE = this.state.QSPE\n        const dataList = FilterReg.QSPERegList(QSPE)\n        if (dataList === null || dataList === undefined || dataList.length === 0) {\n            return null\n        }\n        const timer = this.timerFormat(PickerDate, select_interval)\n        const calldata = formatDataList(timer.StartTime, timer.Interval, dataList, timer.grid)\n        const cellRender = calldata.map(function (value, index, arr) {\n            return (\n                <Chronicrttablecell key={index} cellelement={value}></Chronicrttablecell>\n            );\n        })\n        return cellRender\n    }\n    render() {\n        const { select_interval, PickerDate } = this.props\n        const timer = this.timerFormat(PickerDate, select_interval)\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\", height: \"40px\" }}>\n                <div style={{ backgroundColor: \"#cccccc\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <t2>呼吸評估</t2>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + timer.Interval + \",1fr)\" }}>\n                    {this.table_content()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chronicrttable","import React, { Component } from 'react'\nimport Chronicrttable from './ChronicRTTable'\n\nclass Chronicrt extends Component {\n    render() {\n        const {caseinfo, select_interval, PickerDate } = this.props\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <Chronicrttable PickerDate={PickerDate} title={{ title: \"RT\" }} caseinfo={caseinfo} select_interval={select_interval}></Chronicrttable>\n            </div>\n        );\n    }\n}\n\nexport default Chronicrt","import React, { Component } from 'react'\nimport './ChronicOrderTable.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as ApiGithub from '../../API/ApiGithub'\n// import * as UDOR from '../../Resource/UDORDER0'\n\nclass Chronicordertable extends Component {\n    state = {\n        UDORDER: [],\n        whiteBlackListParser: [],\n        tpnParsers: [],\n        preHID: null,\n        preCID: null\n    }\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        this.setState({ preHID: HID, preCID: CID })\n        this.getUDORDER(HID, CID)\n\n    }\n    componentDidUpdate() {\n        const { caseinfo } = this.props\n        const { preHID, preCID } = this.state\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        if (preHID !== HID || preCID !== CID) {\n            this.setState({ preHID: HID, preCID: CID })\n            this.getUDORDER(HID, CID)\n        }\n    }\n    getUDORDER(HID, CID) {\n        ApiGithub.getGitHubJson(\"WhiteBlackList.json\")\n            .then(data => {\n                let parser = data.data;\n                this.setState({ whiteBlackListParser: parser })\n            })\n            .catch(err => { console.log(err) })\n        ApiGithub.getGitHubJson(\"TpnOrder.json\")\n            .then(data => {\n                let parser = data.data\n                this.setState({ tpnParsers: parser })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                this.setState({ UDORDER: data.data })\n                //const fakeData = [{\"UDDCPRSN\":\"DOC3948A\",\"UDDURAT\":\"014\",\"UDSUMQTY\":\"0\",\"UDDRGNAM\":\"TPN Dextrose sod for inj 500 mg   \",\"UDGNAME\":\"Dextrose sod for inj 500 mg   \",\"UDORSIGN\":\"DOC3948A\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"蔡欣璉　　\",\"UDENDDT\":\"2020-02-27-09.00.00.000000\",\"UDDCPNAM\":\"蔡欣璉　　\",\"UDDOSAGE\":\"95      \",\"UDORDSEQ\":\"0004\",\"UDDRGNO\":\"04604\",\"UDBGNDT\":\"2020-02-20-09.00.00.000000\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"MG    \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"Dextrose inj inj 500 mg \\\"YF\\\"\",\"UDFREQN\":\"Q8H     \"},{\"UDDCPRSN\":\"DOC3948A\",\"UDDURAT\":\"014\",\"UDSUMQTY\":\"0\",\"UDDRGNAM\":\"TPN MechanicalVentilator sod for inj 500 mg   \",\"UDGNAME\":\"MechanicalVentilator sod for inj 500 mg   \",\"UDORSIGN\":\"DOC3948A\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"蔡欣璉　　\",\"UDENDDT\":\"2020-02-23-09.00.00.000000\",\"UDDCPNAM\":\"蔡欣璉　　\",\"UDDOSAGE\":\"95      \",\"UDORDSEQ\":\"0004\",\"UDDRGNO\":\"04604\",\"UDBGNDT\":\"2020-02-21-09.00.00.000000\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"MG    \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"MechanicalVentilator inj 500 mg \\\"YF\\\"\",\"UDFREQN\":\"Q8H     \"},{\"UDDCPRSN\":\"DOC3948A\",\"UDDURAT\":\"014\",\"UDSUMQTY\":\"0\",\"UDDRGNAM\":\"TPN Ampalininin sod for inj 500 mg   \",\"UDGNAME\":\"Ampalininin sod for inj 500 mg   \",\"UDORSIGN\":\"DOC3948A\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"蔡欣璉　　\",\"UDENDDT\":\"2020-02-25-09.00.00.000000\",\"UDDCPNAM\":\"蔡欣璉　　\",\"UDDOSAGE\":\"95      \",\"UDORDSEQ\":\"0004\",\"UDDRGNO\":\"04604\",\"UDBGNDT\":\"2020-02-22-09.00.00.000000\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"MG    \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"侵入性氧療設備 inj 500 mg \\\"YF\\\"\",\"UDFREQN\":\"Q8H     \"}]\n                //this.setState({ UDORDER: fakeData })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        // this.setState({ UDORDER: UDOR.data })\n    }\n    // 0:一天 1:三天 2:一週 3:兩週\n    switch_state() {\n        const { chronic_state } = this.props\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 21\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    select_parser = (input, parser) => {\n        if (parser === undefined) return undefined;\n        return parser.find(x =>\n            input.match(x.parser_name)\n        )\n    }\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let excludeBlackListResult = [];\n        const UDGNAME_condition = mappings.find(item => item.key === \"UDGNAME\");\n        const UDRPNAME_condition = mappings.find(item => item.key === \"UDRPNAME\");\n        if (inputs === undefined) return []\n        inputs.forEach(input => {\n            const UDGNAME_re = new RegExp(UDGNAME_condition.regex_str, UDGNAME_condition.regex_flags)\n            const UDGNAME_match = input.UDGNAME.match(UDGNAME_re)\n\n            const UDRPNAME_re = new RegExp(UDRPNAME_condition.regex_str, UDRPNAME_condition.regex_flags)\n            const UDRPNAME_match = input.UDRPNAME.match(UDRPNAME_re)\n\n            if (UDGNAME_match === null || UDRPNAME_match === null) {\n                excludeBlackListResult.push(input);\n            }\n        });\n\n        return excludeBlackListResult;\n    }\n    celltable() {\n        function changegridnumber(key) {\n            switch (key) {\n                case 0:\n                    return 24\n                case 1:\n                    return 18\n                case 2:\n                    return 21\n                case 3:\n                    return 14\n                default:\n                    break;\n            }\n        }\n        const { chronic_state } = this.props\n        const number = changegridnumber(chronic_state)\n        var arr = []\n        for (let index = 0; index < number; index++) {\n            arr.push(\n                <div key={index} className='cell'></div>\n            )\n\n        }\n        return arr\n    }\n    render() {\n        function changegridstyle(key) {\n            switch (key) {\n                case 0:\n                    return 'ordertableoneday'\n                case 1:\n                    return 'ordertablethirdday'\n                case 2:\n                    return 'ordertableoneweek'\n                case 3:\n                    return 'ordertabletwoweek'\n                default:\n                    return null\n            }\n        }\n        function ListData(UDORDER0, interval, pickerdate) {\n            // function startTimeFormat(st, sttimeString) {\n            //     if (sttimeString < st) {\n            //         return st\n            //     }\n            //     return sttimeString\n            // }\n            // function endTimeFormat(et, ettimestring) {\n            //     if (et < ettimestring) {\n            //         return et\n            //     }\n            //     return ettimestring\n            // }\n            // function shiftWeight(startTime, st, et) {\n            //     const width = document.body.clientWidth - 220\n            //     const shiftTimeStampWidth = width * (startTime - st) / (et - st)\n            //     return shiftTimeStampWidth\n\n            // }\n            // function WeightWidth(startTime, EndTime, st, et) {\n            //     const width = document.body.clientWidth - 220\n            //     const TimeStampWidth = width * (EndTime - startTime) / (et - st)\n            //     return TimeStampWidth\n            // }\n\n            function formatTimer(pickerdate, interval) {\n                const endTime = pickerdate + (31 * 60 * 60 * 1000)\n                if (interval === 0) {\n                    return {\n                        startTime: endTime - (24 * 60 * 60 * 1000),\n                        endTime: endTime\n                    }\n                }\n                if (interval === 1) {\n                    return {\n                        startTime: endTime - (3 * 24 * 60 * 60 * 1000),\n                        endTime: endTime\n                    }\n                }\n                if (interval === 2) {\n                    return {\n                        startTime: endTime - (7 * 24 * 60 * 60 * 1000),\n                        endTime: endTime\n                    }\n                }\n                return {\n                    startTime: endTime - (14 * 24 * 60 * 60 * 1000),\n                    endTime: endTime\n                }\n            }\n            function formatWidth(startTime, endTime, elementStart, elementEnd) {\n                function formatStart(elementStart, startTime) {\n                    if (elementStart <= startTime) {\n                        return startTime\n                    }\n                    return elementStart\n                }\n                function formatEnd(elementEnd, endTime) {\n                    if (elementEnd <= endTime) {\n                        return elementEnd\n                    }\n                    return endTime\n                }\n                const width = document.body.clientWidth - 220\n                const widthRate = width / (endTime - startTime)\n                const start = formatStart(elementStart, startTime)\n                const end = formatEnd(elementEnd, endTime)\n                return (end - start) * widthRate\n            }\n            function formatStartPosition(startTime, endTime, elementStart) {\n                const width = document.body.clientWidth - 220\n                if (elementStart <= startTime) {\n                    return 0\n                }\n                const widthRate = width / (endTime - startTime)\n                return (elementStart - startTime) * widthRate\n            }\n            function formatUDORDER0(UDORDER0, timer) {\n                var arraylist = []\n                const startTime = timer.startTime\n                const endTime = timer.endTime\n                for (let index = 0; index < UDORDER0.length; index++) {\n                    const element = UDORDER0[index];\n                    const elementStart = moment(element.UDBGNDT.toString(), \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n                    const elementEnd = moment(element.UDENDDT.toString(), \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n                    if (endTime < elementStart || elementEnd < startTime) {\n                        continue\n                    }\n                    const shift = formatStartPosition(startTime, endTime, elementStart)\n                    const width = formatWidth(startTime, endTime, elementStart, elementEnd)\n                    arraylist.push({\n                        \"width\": width,\n                        \"shift\": shift,\n                        \"element\": element\n                    })\n                }\n                return arraylist\n            }\n            const timer = formatTimer(pickerdate, interval)\n            if (UDORDER0 === undefined || UDORDER0 === null) {\n                return []\n            }\n            if (UDORDER0.length === 0) {\n                return []\n            }\n            const formatUDORDER = formatUDORDER0(UDORDER0, timer)\n            return formatUDORDER\n        }\n\n\n\n        const { chronic_state, PickerDate, source } = this.props\n        // console.log(UDORDER0)\n        // console.log(ListData(UDORDER0, chronic_state, PickerDate))\n\n        //filter white list\n\n        const rawData = this.state.UDORDER\n\n        //filter TPN items for infection page\n        let filteredRawData = []\n        if(source === \"infection\") {\n            const selected_tpn_parser = this.select_parser(\"TPN Order\", this.state.tpnParsers)\n            console.log(\"selected_tpn_parser: \" + JSON.stringify(selected_tpn_parser))\n            if (selected_tpn_parser !== undefined) {\n                rawData.forEach(item => {\n                    const found = item.UDDRGNAM.match(RegExp(selected_tpn_parser.apply_condition.name, selected_tpn_parser.apply_condition.name_regex_flags))\n                    if (found !== null && found !== \"\") filteredRawData.push(item)\n                })\n            }\n        } else {\n            filteredRawData = rawData\n        }\n\n        let filteredData = [];\n        const selected_white_black_list_parser = this.select_parser(\"Black List\", this.state.whiteBlackListParser)\n        if (selected_white_black_list_parser !== undefined) {\n            filteredData = this.parse(filteredRawData, selected_white_black_list_parser)\n        }\n\n        const datalist = ListData(filteredData, chronic_state, PickerDate)\n        // const datalist = ListData(UDORDER0, chronic_state, PickerDate)\n\n        const Tablecell = datalist.map(function (value, index, array) {\n            function formatString(value) {\n                if (value === undefined || value === null) {\n                    return \"--\"\n                }\n                return value.toString().trim()\n            }\n            // console.log(value.width)\n            return (\n                <div key={index} style={{ padding: \"10px 0px\", paddingLeft: value.shift + \"px\" }}>\n                    <div style={{ width: value.width + \"px\", height: \"20px\", backgroundColor: \"#3B97E1\", color: \"black\", padding: \"0px 5px\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\" }}>{formatString(value.element.UDGNAME)}</div>\n                </div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\", position: 'relative' }}>\n                <div style={{ background: \"#CCCCCC\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <t2>醫藥囑</t2>\n                </div>\n                <div className={changegridstyle(chronic_state)}>{this.celltable()}</div>\n                <div style={{ position: 'absolute', left: 140, height: \"250px\", overflow: \"hidden\" }}>\n                    {Tablecell}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chronicordertable","import React, { Component } from 'react'\nimport Chronicordertable from './ChronicOrderTable'\n// import * as ApiGithub from '../../API/ApiGithub'\n\nclass Orderonchronic extends Component {\n    render() {\n        const { caseinfo, select_interval, UDORDER0,PickerDate } = this.props\n        const item_title = [{ title: \"醫藥囑\" }]\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <Chronicordertable title={item_title} caseinfo={caseinfo} chronic_state={select_interval} UDORDER0={UDORDER0} PickerDate={PickerDate} source={this.props.source}></Chronicordertable>\n            </div>\n        );\n    }\n}\n\nexport default Orderonchronic","import React, { Component } from 'react'\nimport './ChronicWeightTable.scss'\nimport moment from 'moment'\n// import * as QTWPER from '../../Resource/QTWPER'\n// import * as ApiProvider from '../../API/ApiProvider'\n\nclass Chronicweighttable extends Component {\n    // 0:一天 1:三天 2:一週 3:兩週\n    state = { QTWPER: null }\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const weight = caseinfo.WEIGHT\n        console.log(caseinfo)\n        this.setState({ QTWPER: weight })\n        // this.setState({ QTWPER: QTWPER.data.outmsg.resconts.rescont })\n    }\n\n    switch_state() {\n        const { chronic_state } = this.props\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 21\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    celltable() {\n        function changegridnumber(key) {\n            switch (key) {\n                case 0:\n                    return 24\n                case 1:\n                    return 18\n                case 2:\n                    return 21\n                case 3:\n                    return 14\n                default:\n                    break;\n            }\n        }\n        const { chronic_state } = this.props\n        const number = changegridnumber(chronic_state)\n        var arr = []\n        for (let index = 0; index < number; index++) {\n            arr.push(\n                <div key={index} className='cell'></div>\n            )\n\n        }\n        return arr\n    }\n    weightRectRender() {\n        function TimerFormat(interval, pickerdate) {\n            const endTime = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    startTime: endTime - (24 * 60 * 60 * 1000),\n                    endTime: endTime,\n                    interval: 24,\n                    grid: 1\n                }\n            }\n            if (interval === 1) {\n                return {\n                    startTime: endTime - (3 * 24 * 60 * 60 * 1000),\n                    endTime: endTime,\n                    interval: 18,\n                    grid: 4\n                }\n            }\n            if (interval === 2) {\n                return {\n                    startTime: endTime - (7 * 24 * 60 * 60 * 1000),\n                    endTime: endTime,\n                    interval: 21,\n                    grid: 8\n                }\n            }\n            return {\n                startTime: endTime - (14 * 24 * 60 * 60 * 1000),\n                endTime: endTime,\n                interval: 14,\n                grid: 24\n            }\n        }\n        const { chronic_state, caseinfo, PickerDate } = this.props\n        const QTPWERList = caseinfo.WEIGHT\n        console.log(QTPWERList)\n        if (QTPWERList === undefined || QTPWERList === null) {\n            return null\n        }\n        const WeightList = QTPWERList.filter(function (info, index, arr) {\n            return info.type === \"TW\"\n        })\n\n        const timer = TimerFormat(chronic_state, PickerDate)\n        const width = document.body.clientWidth - 220\n        const widthRate = width / (timer.endTime - timer.startTime)\n        var WeightListFormat = []\n        for (let index = 0; index < WeightList.length; index++) {\n            const element = WeightList[index];\n            const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n            // if (timer.startTime > elementTime) {\n            //     const elementValue = parseInt(Number(element.value2) * 1000)\n            //     WeightListFormat.splice(0, 1, {\n            //         Time: elementTime,\n            //         Value: elementValue\n            //     })\n            // }\n            if (timer.startTime <= elementTime && elementTime <= timer.endTime) {\n                const elementValue = parseInt(Number(element.value2) * 1000)\n                WeightListFormat.push({\n                    Time: elementTime,\n                    Value: elementValue\n                })\n            }\n        }\n        const sortWeight = WeightListFormat.sort(function (a, b) {\n            return a.Value > b.Value ? 1 : -1;\n        });\n        console.log(sortWeight)\n        var shift = 0\n        var elementWidthList = []\n        for (let index = 0; index < sortWeight.length; index++) {\n            const element = sortWeight[index];\n            if (index === 0) {\n                shift = (element.Time - timer.startTime) * widthRate\n            }\n            if (sortWeight.length - 1 === index) {\n                const time1 = element.Time\n                const time2 = timer.endTime\n                const elementWidth = (time2 - time1) * widthRate\n                elementWidthList.push({\n                    Value: element.Value,\n                    width: elementWidth\n                })\n            }\n            else {\n                const time1 = sortWeight[index].Time\n                const time2 = sortWeight[index + 1].Time\n                console.log(time2 - time1)\n                const elementWidth = (time2 - time1) * widthRate\n                elementWidthList.push({\n                    Value: element.Value,\n                    width: elementWidth\n                })\n            }\n        }\n        return {\n            shift: shift,\n            elementWidthList: elementWidthList\n        }\n    }\n    render() {\n        const { chronic_state, caseinfo, PickerDate } = this.props\n        console.log(chronic_state)\n        const weight = caseinfo.WEIGHT\n        console.log(caseinfo.WEIGHT)\n        function FormatEndTimeStamp(start, interval) {\n            if (interval === 0) {\n                return start - (24 * 60 * 60 * 1000)\n            }\n            if (interval === 1) {\n                return start - (3 * 24 * 60 * 60 * 1000)\n\n            }\n            if (interval === 2) {\n                return start - (7 * 24 * 60 * 60 * 1000)\n\n            }\n            if (interval === 3) {\n                return start - (14 * 24 * 60 * 60 * 1000)\n\n            }\n        }\n        const end = PickerDate + (31 * 60 * 60 * 1000)\n        const start = FormatEndTimeStamp(end, chronic_state)\n        const datafilter = weight.filter(function (value, index, arr) {\n            const timeString = value.rec_dat.toString() + value.rec_tim.toString()\n            const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n            // console.log(start, time, end)\n            return start < time && time < end\n        })\n        const datafilterTime = datafilter.map(function (value, index, arr) {\n            const timeString = value.rec_dat.toString() + value.rec_tim.toString()\n            const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n            return time\n        })\n        console.log(weight, datafilter, datafilterTime)\n        const diff = end - start\n        var widthArray = []\n        if (datafilter.length === 0) {\n            // const element = weight[0]\n            // widthArray.push({\n            //     width: 100,\n            //     weight: (element.value2) * 1000\n            // })\n        }\n        if (datafilter.length === 1) {\n            for (let index = 0; index < datafilter.length; index++) {\n                const element = datafilter[index];\n                const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                const width = parseInt(100 * (time - start) / diff)\n                widthArray.push({\n                    width: width,\n                    weight: Number(element.value2) * 1000\n                })\n            }\n        }\n        else {\n            for (let index = 0; index < datafilter.length - 1; index++) {\n                const element = datafilter[index];\n                if (index === 0) {\n                    const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                    const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                    const width = parseInt(100 * (time - start) / diff)\n                    widthArray.push({\n                        width: width,\n                        weight: Number(element.value2) * 1000\n                    })\n                }\n                else if (index === (datafilterTime.length - 1)) {\n                    const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                    const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                    const width = parseInt(100 * (end - time) / diff)\n                    widthArray.push({\n                        width: width,\n                        weight: Number(element.value2) * 1000\n                    })\n                }\n                else {\n                    const element2 = datafilter[index + 1]\n                    const timeString2 = element2.rec_dat.toString() + element2.rec_tim.toString()\n                    const time2 = moment(timeString2, \"YYYYMMDDHHmm\").valueOf()\n                    const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                    const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                    const width = parseInt(100 * (time2 - time) / diff)\n                    widthArray.push({\n                        width: width,\n                        weight: Number(element.value2) * 1000\n                    })\n                }\n            }\n        }\n        console.log(widthArray)\n        function changegridstyle(key) {\n            switch (key) {\n                case 0:\n                    return 'chronicweighttableoneday'\n                case 1:\n                    return 'chronicweighttablethreeday'\n                case 2:\n                    return 'chronicweighttableoneweek'\n                case 3:\n                    return 'chronicweighttabletwoweek'\n                default:\n                    return null\n            }\n        }\n        const list = this.weightRectRender()\n        if (list === null || list === undefined) {\n            return null\n        }\n        const render = list.elementWidthList.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ border: \"1px black solid\", borderCollapse: \"collapse\", width: value.width + '%', height: \"20\", backgroundColor: \"#3B97E1\", color: \"white\", display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>{value.Value}g</div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\", position: 'relative' }}>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", background: \"#cccccc\" }}>\n                    <t2>體重</t2>\n                </div>\n                <div className={changegridstyle(chronic_state)}>{this.celltable()}</div>\n                <div style={{ position: 'absolute', left: 140, paddingTop: \"15px\" }}>\n                    <div style={{ paddingLeft: list.shift + \"px\", display: \"flex\", width: 'calc(100vw - 220px)', overflow: \"hidden\" }}>\n                        {render}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chronicweighttable\n","import React, { Component } from 'react'\nimport Chronicweighttable from './ChronicWeightTable'\n\nclass Weightonchronic extends Component {\n    render() {\n        const { caseinfo, PickerDate, select_interval } = this.props\n        const item_title = [{ title: \"體重\" }]\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <Chronicweighttable PickerDate={PickerDate} title={item_title} caseinfo={caseinfo} chronic_state={select_interval}></Chronicweighttable>\n            </div>\n        );\n    }\n}\n\nexport default Weightonchronic","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport '../Patientview/CrossSectionView/Crosssectionvitalsignchart.scss'\n\nclass Vitalxaxis extends Component {\n    state = {\n        change: false\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n    drawChart() {\n        function nowtime(time) {\n            return time + (7 * 60 * 60 * 1000)\n        }\n        function monthformat(month) {\n            return month + 1\n        }\n        function intervaldays(select_date, select_interval) {\n            switch (select_interval) {\n                //一天\n                case 0:\n                    return select_date - 86400000 * 1\n                //三天\n                case 1:\n                    return select_date - 86400000 * 3\n                //一週\n                case 2:\n                    return select_date - 86400000 * 7\n                //兩週\n                case 3:\n                    return select_date - 86400000 * 14\n                default:\n                    return null\n            }\n        }\n\n        const { id_key, svg_id,select_interval, select_date } = this.props\n        const viewwidth = window.screen.availWidth - 220\n        //選取時間(0點)\n        const select_date_zero = new Date(new Date(select_date).getFullYear() + ',' + monthformat(new Date(select_date).getMonth()) + ',' + new Date(select_date).getDate()).getTime()\n        //選取時間(7點)\n        const select_time_format = nowtime(select_date_zero)\n        //select_intercal:0一天 1三天 2兩週\n        const Start_time = intervaldays(select_time_format, select_interval)\n        var xaxis = []\n        if (select_interval === 0) {\n            for (let index = 0; index < 24; index++) {\n                const time = Start_time + (30 * 60 * 1000) + (index * 60 * 60 * 1000)\n                xaxis.push(time)\n            }\n        }\n        if (select_interval === 1) {\n            for (let index = 0; index < 21; index++) {\n                const time = Start_time + (2 * 60 * 60 * 1000) + (index * 60 * 60 * 1000 * 4)\n                xaxis.push(time)\n            }\n        }\n\n        if (select_interval === 2) {\n            for (let index = 0; index < 21; index++) {\n                const time = Start_time + (4 * 60 * 60 * 1000) + (index * 60 * 60 * 1000 * 8)\n                xaxis.push(time)\n            }\n        }\n\n        if (select_interval === 3) {\n            for (let index = 0; index < 14; index++) {\n                const time = Start_time + (12 * 60 * 60 * 1000) + (index * 60 * 60 * 1000 * 24)\n                xaxis.push(time)\n            }\n        }\n        var x = d3.scaleLinear()\n            .domain([Start_time, select_time_format])\n            .range([0, viewwidth])\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            // .attr(\"viewbox\", [0, 0, viewwidth + 60, 25])\n            .style(\"width\", viewwidth + 100)\n            .style(\"height\", 25)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 15 + \")\");\n\n        var formatHour = d3.timeFormat(\"%H\")\n        var formatday = d3.timeFormat(\"%d\")\n        function multiFormat(date) {\n            if (select_interval === 0) {\n                return formatHour(date) + '~' + formatHour(date + (60 * 60 * 1000))\n            }\n            if (select_interval === 1) {\n                return formatHour(date - (2 * 60 * 60 * 1000)) + '~' + formatHour(date + (2 * 60 * 60 * 1000))\n            }\n            if (select_interval === 2) {\n                return formatHour(date - (4 * 60 * 60 * 1000)) + '~' + formatHour(date + (4 * 60 * 60 * 1000))\n            }\n            if (select_interval === 3) {\n                return monthformat(new Date(date).getMonth()) + '/' + formatday(date)\n            }\n            return formatHour(date)\n        }\n        var xAxis = d3.axisTop(x)\n            .tickValues(xaxis)\n            .tickSize(0, 0)\n            .tickPadding(5)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\");\n\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default Vitalxaxis;","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport '../Patientview/CrossSectionView/Crosssectionvitalsignchart.scss'\nimport { yyyymmddformat } from '../Function/Timeformat'\nimport moment from 'moment';\n\nclass Vitalxaxisbot extends Component {\n    state = {\n        change: false\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n    drawChart() {\n        function intervaldays(select_date, select_interval) {\n            switch (select_interval) {\n                //一天\n                case 0:\n                    return select_date - 86400000 * 1\n                //三天\n                case 1:\n                    return select_date - 86400000 * 3\n                //一週\n                case 2:\n                    return select_date - 86400000 * 7\n                //兩週\n                case 3:\n                    return select_date - 86400000 * 14\n                default:\n                    return null\n            }\n        }\n\n        const { id_key, svg_id, select_interval, select_date } = this.props\n        const viewwidth = window.screen.availWidth - 228\n        //選取時間(0點)\n        const select_date_zero = yyyymmddformat(select_date)\n        //選取時間(7點)\n        const select_time_format = new Date(select_date_zero).getTime() + (31 * 60 * 60 * 1000)\n        //select_intercal:0一天 1三天 2兩週\n        const Start_time = intervaldays(select_time_format, select_interval)\n        console.log(Start_time)\n        var xaxis = []\n        if (select_interval === 0) {\n            const time = Start_time + (17 * 60 * 60 * 1000)\n            console.log(time)\n            xaxis.push(time)\n        }\n        if (select_interval === 1) {\n            for (let index = 0; index < 3; index++) {\n                const time = Start_time + (12 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000)\n                xaxis.push(time)\n            }\n        }\n\n        if (select_interval === 2) {\n            for (let index = 0; index < 7; index++) {\n                const time = Start_time + (12 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000)\n                xaxis.push(time)\n            }\n        }\n\n\n        if (select_interval === 3) {\n            for (let index = 0; index < 14; index++) {\n                const time = Start_time + (12 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000)\n                xaxis.push(time)\n            }\n        }\n        var x = d3.scaleLinear()\n            .domain([Start_time, select_time_format])\n            .range([0, viewwidth - 1])\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            // .attr(\"viewbox\", [0, 0, viewwidth + 60, 25])\n            .style(\"width\", viewwidth)\n            .style(\"height\", 25)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + -10 + \")\");\n\n\n        function multiFormat(date) {\n            return moment(date).format(\"MM/DD\")\n        }\n\n\n        var xAxis = d3.axisBottom(x)\n            .tickValues(xaxis)\n            .tickSize(0, 0)\n            .tickPadding(10)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\");\n\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default Vitalxaxisbot;","import React, { Component } from 'react'\nimport { Select, Button } from 'antd';\n// import Chronicvitalchart from './Chronic_vital_chart'\nimport { statecolor } from '../../Function/Wardstate'\nimport { formatxArrayhalf, formatendtime } from '../../Function/Timeformat'\nimport './Chronic_vital.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport Crosssectionvitalsignchart from '../CrossSectionView/Crossectionvitalsignchart'\n\n\nclass Vitalonchronic extends Component {\n    state = {\n        check_state_one: 0,\n        check_state_three: 0,\n        check_state_oneweek: 0,\n        check_state_twoweek: 0,\n        statussource: \"CM\",\n        CenterMonitorValue: []\n    }\n\n    componentDidMount() {\n        const startTime = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf() - (60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\")\n        const endTime = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf()).format(\"YYYYMMDDHHmmss\")\n        const PHISTNUM = this.props.caseinfo.HISID.toString().trim()\n        this.getVitalSignData(startTime, endTime, PHISTNUM)\n    }\n\n    getVitalSignData(startTime, EndTime, Phistnum) {\n        ApiProvider.getPatientwardvalueMedian(Phistnum, startTime, EndTime)\n            .then(data => {\n                console.log(data.data)\n                this.setState({\n                    CenterMonitorValue: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n                this.setState({\n                    CenterMonitorValue: null\n                })\n            })\n    }\n\n    // switchdata(value_interval, sourcefrom) {\n    //     console.log(sourcefrom)\n    //     const { defaultdate } = this.props\n    //     function changevitaldays(vitaldays) {\n    //         if (vitaldays === 3) {\n    //             return 18\n    //         }\n    //         else {\n    //             return 24\n    //         }\n    //     }\n\n    //     function Interval_switch(interval) {\n    //         if (interval === 0) {\n    //             return 1\n    //         }\n    //         if (interval === 1) {\n    //             return 3\n    //         }\n    //     }\n    //     const interval = Interval_switch(value_interval)\n    //     const starttime = formatendtime(defaultdate) - (interval * 24 * 60 * 60 * 1000)\n    //     if (sourcefrom === 'NIS') {\n    //         const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n    //         const data = simulationnisdata(datatime, changevitaldays(interval))\n    //         console.log(data)\n    //         return data\n    //     }\n    //     else {\n\n    //         const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n    //         const data = simulationCentermonitordata(datatime, changevitaldays(interval))\n    //         return data\n    //     }\n    // }\n    Interval_grid_box() {\n        var gridarray = []\n        console.log(this.props.select_interval)\n        if (this.props.select_interval === 0) {\n            for (let index = 0; index < 24; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_one) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: 360, border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_one(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: 360 }} onClick={() => this.onClickCheckgrid_one(number)}></div>)\n            }\n        }\n        if (this.props.select_interval === 1) {\n            for (let index = 0; index < 18; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_three) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: 360, border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_three(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: 360 }} onClick={() => this.onClickCheckgrid_three(number)}></div>)\n            }\n        }\n        if (this.props.select_interval === 2) {\n            for (let index = 0; index < 21; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_oneweek) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: 360, border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_oneweek(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: 360 }} onClick={() => this.onClickCheckgrid_oneweek(number)}></div>)\n            }\n        }\n        if (this.props.select_interval === 3) {\n            for (let index = 0; index < 14; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_twoweek) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: 360, border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_twoweek(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: 360 }} onClick={() => this.onClickCheckgrid_twoweek(number)}></div>)\n            }\n        }\n        return gridarray\n    }\n\n    onClickCheckgrid_one(number) {\n        console.log(number)\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (24 * 60 * 60 * 1000)\n        const endtime = ST + (number * 60 * 60 * 1000)\n        const starttime = endtime - 60 * 60 * 1000\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ check_state_one: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n    onClickCheckgrid_three(number) {\n        console.log(number)\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (3 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 4) * 60 * 60 * 1000)\n        const starttime = endtime - (4 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ chackstate_three: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n\n    onClickCheckgrid_oneweek(number) {\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (7 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 8) * 60 * 60 * 1000)\n        const starttime = endtime - (8 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ check_state_oneweek: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n    onClickCheckgrid_twoweek(number) {\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (14 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 24) * 60 * 60 * 1000)\n        const starttime = endtime - (24 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ check_state_twoweek: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n\n    sourcehandleChange = (e) => {\n        this.setState({ statussource: e.target.value })\n    }\n    render() {\n        function centervaluetoNull(value) {\n            function FilterList(DataList, type) {\n                const filterData = DataList.filter(function (value, index, arr) {\n                    return value.type === type\n                })\n                if (filterData.length === 0) {\n                    return null\n                }\n                console.log(filterData)\n                return filterData[0].Mid\n            }\n            if (value === undefined || value === null) {\n                return {\n                    hr: null,\n                    rr: null,\n                    bt: null,\n                    spo2: null,\n                    abpd: null,\n                    abpm: null,\n                    abps: null,\n                    nbpm: null,\n                    nbps: null,\n                    nbpd: null\n                }\n            }\n            return {\n                hr: FilterList(value, \"hr\"),\n                rr: FilterList(value, \"rr\"),\n                bt: FilterList(value, \"bt\"),\n                spo2: FilterList(value, \"spo2\"),\n                abpd: FilterList(value, \"abpd\"),\n                abpm: FilterList(value, \"abpm\"),\n                abps: FilterList(value, \"abps\"),\n                nbpd: FilterList(value, \"nbpd\"),\n                nbps: FilterList(value, \"nbps\"),\n                nbpm: FilterList(value, \"nbpm\"),\n            }\n        }\n        function centervalueNull(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            return value\n        }\n        function Interval_grid(number) {\n            switch (number) {\n                case 0:\n                    return 24\n                case 1:\n                    return 18\n                case 2:\n                    return 21\n                case 3:\n                    return 14\n                default:\n                    return null\n            }\n        }\n        function formatPickerTimer(pickerdate, interval) {\n            const end = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    startTime: end - (24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n            if (interval === 1) {\n                return {\n                    startTime: end - (3 * 24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n            if (interval === 2) {\n                return {\n                    startTime: end - (7 * 24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n            else {\n                return {\n                    startTime: end - (14 * 24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n        }\n\n        const { Option } = Select;\n        const { source } = this.props\n        const pickerTimer = formatPickerTimer(this.props.PickerDate, this.props.select_interval)\n        const width = window.screen.availWidth - 171\n        const centervalue = centervaluetoNull(this.state.CenterMonitorValue)\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\", marginTop: \"10px\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>生命徵象</t2>\n                    <div >\n                        <Button style={{ margin: \"0px 10px\" }} value={\"CM\"} type=\"primary\" onClick={this.sourcehandleChange}>Center Monitor</Button>\n                        <Button style={{}} value={\"NIS\"} type=\"primary\" onClick={this.sourcehandleChange}>NIS</Button>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\" }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"repeat(6,60px)\" }}>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <t4 style={{ display: \"flex\", justifyContent: \"center\", color: statecolor(\"HR\") }}>{\"HR\"}</t4>\n                                <t1 style={{ display: \"flex\", justifyContent: \"center\", color: statecolor(\"HR\") }}>{centervalueNull(centervalue.hr)}</t1>\n                            </div>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>NBP</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.nbpd)}/{centervalueNull(centervalue.nbps)}</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>({centervalueNull(centervalue.nbpm)})</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>ABP</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.abpd)}/{centervalueNull(centervalue.abps)}</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>({centervalueNull(centervalue.abpm)})</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <div style={{ fontSize: \"1rem\", color: \"#4773B8\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>\n                                    SpO<sub style={{ bottom: \"-1em\" }}>2</sub>\n                                </div>\n                                <div style={{ fontSize: \"1rem\", color: \"#4773B8\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.spo2)}%</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <div style={{ fontSize: \"1rem\", color: \"#7F3DB5\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>BT</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#7F3DB5\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>--</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <div style={{ fontSize: \"1rem\", color: \"#DE7531\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>RR</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#DE7531\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.rr)}</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"repeat(6,60px)\", position: \"relative\" }}>\n                        <div style={{ position: \"absolute\", height: \"340px\", width: width - 50, top: 5, left: 50 }} >\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + Interval_grid(this.props.select_interval) + \",1fr)\" }}>\n                                {this.Interval_grid_box()}\n                            </div>\n                        </div>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"hr_svg_\" + source}\n                            id_key={\"hr_id_\" + source}\n                            type={\"hr\"}\n                            source={this.state.statussource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={100}\n                            upper={160}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor=\"#779F50\"\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={200}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"nbp_svg\" + source}\n                            id_key={\"nbp_id\" + source}\n                            type={\"nbp\"}\n                            source={this.state.statussource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={55}\n                            upper={75}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#C12528\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"abp_svg\" + source}\n                            id_key={\"abp_id\" + source}\n                            type={\"abp\"}\n                            source={this.state.statussource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={55}\n                            upper={75}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#C12528\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"spo2_svg_\" + source}\n                            id_key={\"spo2_id_\" + source}\n                            type={\"spo2\"}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={90}\n                            upper={100}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#4773B8\"}\n                            colorshadow={\"#4773B8\"}\n                            min={60}\n                            max={100}\n                            source={this.state.statussource}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"bt_svg_\" + source}\n                            id_key={\"bt_id_\" + source}\n                            type={\"bt\"}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            source={this.state.statussource}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={36}\n                            upper={38}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#7F3DB5\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={33}\n                            max={43}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"rr_svg_\" + source}\n                            id_key={\"rr_id_\" + source}\n                            type={\"rr\"}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={20}\n                            upper={60}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#DE7531\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}\n                            source={this.state.statussource}>\n                        </Crosssectionvitalsignchart>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Vitalonchronic\n","import React, { Component } from 'react';\nimport { DatePicker, Button, Select, Checkbox } from 'antd';\nimport filterlogo from '../../Image/svg/filter.svg'\nimport Inoutonchronic from './Chronic_io'\nimport Chroniclab from './ChronicLab'\nimport Chronicrt from './ChronicRT'\nimport Orderonchronic from './ChronicOrder'\nimport Weightonchronic from './ChronicWeight'\nimport Vitalxaxis from '../../Module/Vitalxaxis'\nimport Vitalxaxisbot from '../../Module/Vitalxaxisbot'\nimport moment from 'moment'\nimport './Chroniclelayout.scss'\nimport Vitalonchronic from './Chronic_vital'\nimport locale from 'antd/es/date-picker/locale/zh_TW';\n\nclass Chroniclelayout extends Component {\n    state = {\n        display_Mode: false,\n        Cross_item: [0, 1, 2, 3, 4, 5],\n        scrollstate: 0,\n        PickerDate: moment(moment().format('YYYYMMDD'), \"YYYYMMDD\").valueOf(), //選擇日期\n        select_interval: 0, //選擇區間\n        statuschange: 0,\n    }\n    onChangeCross = (checkedValues) => {\n        this.setState({ Cross_item: checkedValues })\n    }\n\n    open_display() {\n        this.setState({\n            display_Mode: !this.state.display_Mode\n        })\n    }\n    scrollToAnchor = (anchorName) => {\n        console.log(anchorName)\n        if (anchorName) {\n            let anchorElement = document.getElementById(anchorName);\n            if (anchorElement) { anchorElement.scrollIntoView(); }\n        }\n    }\n    scroll_btn_style(index) {\n        console.log(index, this.state.scrollstate)\n        if (index === this.state.scrollstate) {\n            return true\n        }\n        else return false\n    }\n    onChange = (date, dateString) => {\n        console.log(date, dateString);\n\n        this.setState(\n            {\n                PickerDate: date.valueOf()\n            }\n        )\n    }\n    onSelectchange = (value) => {\n        this.setState(\n            {\n                select_interval: value\n            }\n        )\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDate } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const bTemp = bTime - (6 * day)\n                bronDate <= bTemp && this.onChange(moment(bTime))\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD'))\n                this.onChange(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= aTemp && this.onChange(moment(aTime))\n                break;\n            default:\n                break;\n        }\n    }\n\n    display_item(number) {\n        const item = this.state.Cross_item\n        var filter = item.some(function (item, index, array) {\n            return item === number\n        });\n        return filter\n    }\n\n    render() {\n        const { Option } = Select;\n        // const dateFormat = 'YYYY/MM/DD';\n        const { caseinfo } = this.props\n        const crosssectioncontrollist =\n            [{ \"name\": \"生命徵象\", \"scrollpoint\": \"vital_sign_chronic\" },\n            { \"name\": \"輸出入\", \"scrollpoint\": \"input_output_chronic\" },\n            { \"name\": \"檢驗結果\", \"scrollpoint\": \"lab_chronic\" },\n            { \"name\": \"呼吸評估\", \"scrollpoint\": \"rt_chronic\" },\n            { \"name\": \"醫藥囑\", \"scrollpoint\": \"order_chronic\" },\n            { \"name\": \"體重\", \"scrollpoint\": \"infection_chronic\" }]\n        console.log(caseinfo.PBASINGNINFO.PBIRTHDT.toString())\n\n        const btn_style = {\n            unclick_style: { borderRadius: \"4px\", color: \"#001a6d88\", border: \"1px solid #001a6d88\", padding: \"0px 4px\", height: \"30px\" }\n        }\n\n        let button = crosssectioncontrollist.map(\n            (item, index) => <Button onClick={this.scrollToAnchor.bind(this, item.scrollpoint)} key={index} style={btn_style.unclick_style}>\n                <t3>{item.name}</t3>\n            </Button >);\n\n        const display_style = {\n            displye_mode: { position: \"absolute\", right: '0px', top: \"50px\", width: \"200px\", background: \"white\", boxShadow: \"3px 3px 12px\", zIndex: \"100\", borderRadius: \"4px\" },\n            non_display_mode: { display: \"none\" },\n            check_area: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\" },\n            check_text: { padding: \"4px\", width: \"140px\", borderRadius: \"4px\", borderColor: 'rgba(0, 0, 0, 0.15)', borderStyle: \"solid\", borderWidth: \"1px\", marginLeft: \"10px\", borderRadius: \"4px\" }\n        }\n        return (\n            <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", height: \"40px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"140px 120px auto\", gridColumnGap: \"5px\" }}>\n                        <DatePicker locale={locale} disabledDate={(current) => { return current > moment().startOf(\"day\") || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }} onChange={this.onChange} value={moment(this.state.PickerDate)} allowClear={false} />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\", marginLeft: \"10px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                        <Select defaultValue={this.state.select_interval} style={{ width: 120, marginLeft: \"10px\" }} onChange={this.onSelectchange}>\n                            <Option value={0}>一天</Option>\n                            <Option value={1}>三天</Option>\n                            <Option value={2}>一週</Option>\n                            <Option value={3}>兩週</Option>\n                        </Select>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", position: \"relative\" }}>\n                        <t2 >項目切換：</t2>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(6,auto)\", gridColumnGap: \"5px\" }}>{button}</div>\n                        <div onClick={() => this.open_display()} style={{ cursor: \"pointer\", marginLeft: \"5px\" }}>\n                            <img src={filterlogo} alt='filterlogo' style={{ width: '15px', height: '15px' }}></img>\n                        </div>\n                        <div style={this.state.display_Mode ? display_style.displye_mode : display_style.non_display_mode}>\n                            <t2 className='controlmoduletitle'>顯示切換</t2>\n                            <div style={{ marginTop: \"10px\", marginBottom: \"20px\" }}>\n                                <Checkbox.Group defaultValue={this.state.Cross_item} id={\"checkbox_group\"} style={{ width: '100%', display: \"grid\", gridTemplateRows: \"repeat(6,1fr)\", gridRowGap: \"5px\" }} onChange={this.onChangeCross}>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={0}></Checkbox>\n                                        <t3 style={display_style.check_text}>生命徵象</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={1} ></Checkbox>\n                                        <t3 style={display_style.check_text}>輸出入</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={2}></Checkbox>\n                                        <t3 style={display_style.check_text}>檢驗結果</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={3}></Checkbox>\n                                        <t3 style={display_style.check_text}>呼吸評估</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={4}></Checkbox>\n                                        <t3 style={display_style.check_text}>醫藥囑</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={5}></Checkbox>\n                                        <t3 style={display_style.check_text}>體重</t3>\n                                    </div>\n                                </Checkbox.Group>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\", margin: \"10px 0px\" }}>\n                    <div></div>\n                    <Vitalxaxis max={200} min={0} select_interval={this.state.select_interval} select_date={this.state.PickerDate} id_key=\"xaxis_chronic\" svg_id=\"xaxis_svg_chronic\"></Vitalxaxis>\n                </div>\n                <div className='boxshadow'></div>\n                <div className='chroniclayout'>\n                    {/* Vital sign */}\n                    <div id=\"vital_sign_chronic\" style={{ display: this.display_item(0) ? \"grid\" : \"none\" }}>\n                        <Vitalonchronic source={\"Chronic\"} PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"Vital\"></Vitalonchronic>\n                    </div>\n                    {/* I/O */}\n                    <div id=\"input_output_chronic\" style={{ display: this.display_item(1) ? \"grid\" : \"none\" }}>\n                        <Inoutonchronic PickerDate={this.state.PickerDate} Status={\"Chronic\"} IntervalStatus={this.state.select_interval} caseinfo={caseinfo} title=\"輸出入\"></Inoutonchronic>\n                    </div>\n                    {/* Lab */}\n                    <div id=\"lab_chronic\" style={{ display: this.display_item(2) ? \"grid\" : \"none\" }}>\n                        <Chroniclab PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"檢驗結果\"></Chroniclab>\n                    </div>\n                    {/* RT */}\n                    <div id=\"rt_chronic\" style={{ display: this.display_item(3) ? \"grid\" : \"none\" }}>\n                        <Chronicrt PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo}></Chronicrt>\n                    </div>\n                    {/* Order */}\n                    <div id=\"order_chronic\" style={{ display: this.display_item(4) ? \"grid\" : \"none\" }}>\n                        <Orderonchronic PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"\"></Orderonchronic>\n                    </div>\n                    {/* 體重 */}\n                    <div id=\"infection_chronic\" style={{ display: this.display_item(5) ? \"grid\" : \"none\" }}>\n                        <Weightonchronic PickerDate={this.state.PickerDate} QTWPER={this.state.QTWPER} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"\"></Weightonchronic>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\", marginTop: \"30px\" }}>\n                    <div></div>\n                    <Vitalxaxisbot max={200} min={0} select_interval={this.state.select_interval} select_date={this.state.PickerDate} id_key=\"xaxis_bot_chronic\" svg_id=\"xaxis_bot_svg_chronic\"></Vitalxaxisbot>\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default Chroniclelayout;\n","import React, { Component } from 'react';\nimport './Flootsheetio.scss'\nimport * as RegFilter from '../../Function/FiliterReg'\nimport moment from 'moment';\nimport X2JS from 'x2js';\nimport * as ApiProvider from '../../API/ApiProvider'\n// import * as QDCR from '../../Resource/QDC'\n\nclass Flootsheetio extends Component {\n    state = {\n        itemNumber: \"day\",\n        preCID: null,\n        prePickerDate: null,\n        QDC: []\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDate } = this.props\n        const CID = caseinfo.CASEID\n        this.setState({ preCID: CID, prePickerDate: PickerDate })\n        this.getQDC(CID, PickerDate)\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDate } = this.props\n        const CID = caseinfo.CASEID\n        const preCID = this.state.preCID\n        const prePickerDate = this.state.prePickerDate\n        console.log(prePickerDate, PickerDate)\n        if (CID !== preCID || PickerDate !== prePickerDate) {\n            this.setState({ preCID: CID, prePickerDate: PickerDate })\n            this.getQDC(CID, PickerDate)\n        }\n    }\n    getQDC(CID, PickerDate) {\n        const xm2 = new X2JS()\n        const st = moment(PickerDate + (7 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        const et = moment(PickerDate + (31 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        ApiProvider.getQDC(CID, st, et)\n            .then(data => {\n                console.log(xm2.xml2js(data.data))\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                this.setState({\n                    QDC: parsedata\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n    }\n    SecondDataCell(dataJson, Title) {\n        const { PickerDate } = this.props\n        const st = PickerDate + (7 * 60 * 60 * 1000)\n        var cellRender = []\n        for (let index = 0; index < 24; index++) {\n            const startTime = st + (index * 60 * 60 * 1000)\n            const endTime = st + ((index + 1) * 60 * 60 * 1000)\n            const timeObjectString = dataJson.rec_dat.toString() + dataJson.rec_tim.toString()\n            const time = moment(timeObjectString, 'YYYYMMDDHHmm').valueOf()\n            if (time > startTime && time < endTime) {\n                cellRender.push(dataJson.value)\n            }\n            else {\n                cellRender.push(\"--\")\n            }\n        }\n        const data = cellRender.map((info, index) =>\n            <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                <t2>{info}</t2>\n            </centerstyle>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <centerstyle style={{ background: \"#cccccc\" }}>\n                    <t4>{Title}</t4>\n                </centerstyle>\n                {data}\n            </div>\n        );\n    }\n    FourthDataCell(dataJson, Title) {\n        function nullvalue(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            if (value === 0) {\n                return \"##\"\n            }\n            return value.toString().trim()\n        }\n        const { PickerDate } = this.props\n        const st = PickerDate + (7 * 60 * 60 * 1000)\n        var cellRender = []\n        for (let index = 0; index < 24; index++) {\n            const startTime = st + (index * 60 * 60 * 1000)\n            const endTime = st + ((index + 1) * 60 * 60 * 1000)\n            const filterData = dataJson.filter(function (value, index, arr) {\n                const timeObjectString = value.rec_dat.toString() + value.rec_tim.toString()\n                const time = moment(timeObjectString, 'YYYYMMDDHHmm').valueOf()\n                return time > startTime && time < endTime\n            })\n            if (filterData.length === 0) {\n                cellRender.push(\"--\")\n            }\n            // var sum = 0\n            for (let index = 0; index < filterData.length; index++) {\n                const element = filterData[index];\n                if (Title === \"滲液\") {\n                    cellRender.push(element.out_val1)\n                }\n                if (Title === \"嘔吐\") {\n                    const string = element.out_val1.toString() + \"/\" + element.nam.toString() + \"/\" + element.color.toString()\n                    cellRender.push(string)\n                }\n                if (Title === \"引流\") {\n                    const string = element.out_val1.toString() + \"/\" + element.nam.toString() + \"/\" + element.color.toString()\n                    cellRender.push(string)\n                }\n                if (Title === \"穿刺出\") {\n                    cellRender.push(element.out_val1)\n\n                }\n                if (Title === \"穿刺入\") {\n                    cellRender.push(element.inp_val1)\n\n                }\n                if (Title === \"透析出\") {\n                    cellRender.push(element.out_val1)\n\n                }\n                if (Title === \"透析入\") {\n                    cellRender.push(element.inp_val1)\n\n                }\n                if (Title === \"透析加總\") {\n                    const sum = Number(element.out_val1) - Number(element.inp_val1)\n                    cellRender.push(sum)\n\n                }\n                if (Title === \"沖洗出\") {\n                    cellRender.push(element.out_val1)\n\n                }\n                if (Title === \"沖洗入\") {\n                    cellRender.push(element.inp_val1)\n\n                }\n                if (Title === \"排尿\") {\n                    cellRender.push(element.inp_val1)\n\n                }\n            }\n\n        }\n        const data = cellRender.map((info, index) =>\n            <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                <t2>{nullvalue(info)}</t2>\n            </centerstyle>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <centerstyle style={{ background: \"#cccccc\" }}>\n                    <t4>{Title}</t4>\n                </centerstyle>\n                {data}\n            </div>\n        );\n    }\n\n    Thirdtablecell(dataJson, Title) {\n        const { PickerDate } = this.props\n        const st = PickerDate + (7 * 60 * 60 * 1000)\n        var cellRender = []\n\n        for (let index = 0; index < 24; index++) {\n            const startTime = st + (index * 60 * 60 * 1000)\n            const endTime = st + ((index + 1) * 60 * 60 * 1000)\n            const time = moment(dataJson.time, 'YYYYMMDDHHmm').valueOf()\n            if (time > startTime && time < endTime) {\n                cellRender.push(dataJson.value)\n            }\n            else {\n                cellRender.push(\"--\")\n            }\n        }\n\n        const data = cellRender.map((info, index) =>\n            <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                <t2>{info}</t2>\n            </centerstyle>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <centerstyle style={{ background: \"#cccccc\" }}>\n                    <t4>{Title}</t4>\n                </centerstyle>\n                {data}\n            </div>\n        );\n    }\n\n    Firsttablecell(dataList, Title) {\n        const { PickerDate } = this.props\n        const st = PickerDate + (7 * 60 * 60 * 1000)\n        var cellRender = []\n\n        for (let index = 0; index < 24; index++) {\n            const startTime = st + (index * 60 * 60 * 1000)\n            const endTime = st + ((index + 1) * 60 * 60 * 1000)\n            console.log(dataList)\n            const datafilter = dataList.filter(function (value, index, arr) {\n                const time = moment(value.rec_dat.toString() + value.rec_tim.toString(), 'YYYYMMDDHHmm').valueOf()\n                return time > startTime && time < endTime\n            })\n            var sum = 0\n            for (let index = 0; index < datafilter.length; index++) {\n                const element = datafilter[index];\n                sum = sum + Number(element.inp_val1)\n            }\n            cellRender.push(sum)\n        }\n\n        const data = cellRender.map((info, index) =>\n            <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                <t2>{info}</t2>\n            </centerstyle>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <centerstyle style={{ background: \"#cccccc\" }}>\n                    <t4>{Title}</t4>\n                </centerstyle>\n                {data}\n            </div>\n        );\n    }\n\n    RVList(cell) {\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <div style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', backgroundColor: \"#cccccc\", display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{\"RV\"}</div>\n                {cell}\n            </div>\n        );\n    }\n    render() {\n        function groupelement(array) {\n            function groupvalue(arr) {\n                const mapvalue = arr.map(function (value, index, arr) {\n                    return value.element\n                })\n                return mapvalue\n            }\n            var dataList = []\n            for (let index = 0; index < array.length; index++) {\n                const element = array[index];\n                const data = groupvalue(element)\n                if (element.length !== 0) {\n                    if (element[0].title === \"滲液\") {\n                        dataList.push({\n                            \"title\": element[0].title,\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"嘔吐\") {\n                        dataList.push({\n                            \"title\": element[0].title,\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"引流\") {\n                        const stringElement = element[0].element\n                        const string = stringElement.line + \"/\" + stringElement.pos\n                        dataList.push({\n                            \"title\": string,\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"穿刺\") {\n                        const stringElement = element[0].element\n                        if (stringElement.out_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"穿刺出\",\n                                \"element\": data\n                            })\n                        }\n                        if (stringElement.inp_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"穿刺入\",\n                                \"element\": data\n                            })\n                        }\n                    }\n                    if (element[0].title === \"透析\") {\n                        const stringElement = element[0].element\n                        if (stringElement.out_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"透析出\",\n                                \"element\": data\n                            })\n                        }\n                        if (stringElement.inp_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"透析入\",\n                                \"element\": data\n                            })\n                        }\n                        dataList.push({\n                            \"title\": \"透析加總\",\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"沖洗\") {\n                        const stringElement = element[0].element\n                        if (stringElement.out_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"沖洗出\",\n                                \"element\": data\n                            })\n                        }\n                        if (stringElement.inp_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"沖洗入\",\n                                \"element\": data\n                            })\n                        }\n                    }\n                    if (element[0].title === \"排便\") {\n                        dataList.push({\n                            \"title\": \"Stool\",\n                            \"element\": data\n                        })\n                        dataList.push({\n                            \"title\": \"Enema/Stimulation\",\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"排尿\") {\n                        const stringElement = element[0].element\n                        const string = stringElement.inp_val1\n                        dataList.push({\n                            \"title\": \"Urine\" + string,\n                            \"element\": data\n                        })\n                    }\n                }\n            }\n            return dataList\n        }\n        function groupfirstarray(arrayList) {\n            var result = arrayList.filter(function (value, index, arr) {\n                const res = arr.map(function (value, index, arr) {\n                    return value.compare\n                })\n                return res.indexOf(value.compare) === index;\n            });\n            var arrList = []\n            for (let index = 0; index < result.length; index++) {\n                const element = result[index];\n                const comparevalue = element.compare\n                const filterarray = arrayList.filter(function (value, index, arr) {\n                    return value.compare === comparevalue\n                })\n                arrList.push(filterarray)\n            }\n            return arrList\n        }\n        function nullvalue(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            if (value === 0) {\n                return \"#\"\n            }\n            return value.toString().trim()\n        }\n        function formatQDC(QDC) {\n            var FirstArray = []\n            var SecondArray = []\n            var ThirdArray = []\n            var FourthArray = []\n            if (Array.isArray(QDC)) {\n                for (let index = 0; index < QDC.length; index++) {\n                    const element = QDC[index];\n                    if (RegFilter.firstarea_Reg_IO().find(function (value, index, array) {\n                        return value === element.item\n                    })) {\n                        FirstArray.push({\n                            title: nullvalue(element.line) + \"/\" + nullvalue(element.nam) + \"/\" + nullvalue(element.pos),\n                            compare: nullvalue(element.line) + \"/\" + nullvalue(element.nam),\n                            element: element\n                        })\n                    }\n                    if (RegFilter.Secondarea_reg_IO().find(function (value, index, array) {\n                        return value === element.item\n                    })) {\n                        SecondArray.push({\n                            title: nullvalue(element.line) + \"/\" + nullvalue(element.nam) + \"/\" + nullvalue(element.pos),\n                            compare: nullvalue(element.line) + \"/\" + nullvalue(element.nam) + \"/\" + nullvalue(element.pos),\n                            element: element\n                        })\n                    }\n                    if (RegFilter.Thirdarea_reg_IO().find(function (value, index, array) {\n                        return value === element.item\n                    })) {\n                        ThirdArray.push({\n                            title: nullvalue(element.nam) + \"/\" + nullvalue(element.lost),\n                            compare: nullvalue(element.nam) + \"/\" + nullvalue(element.lost),\n                            element: element\n                        })\n                    }\n                    if (RegFilter.Fourtharea_reg_IO().find(function (value, index, array) {\n                        return value === element.item\n                    })) {\n                        FourthArray.push({\n                            title: element.item,\n                            compare: element.item,\n                            element: element\n                        })\n                    }\n                }\n            }\n            return {\n                \"FirstArray\": FirstArray,\n                \"SecondArray\": SecondArray,\n                \"ThirdArray\": ThirdArray,\n                \"FourthArray\": FourthArray\n            }\n        }\n\n\n\n        const { PickerDate } = this.props\n        const { QDC } = this.state\n        const dataList = formatQDC(QDC)\n        console.log(dataList.ThirdArray)\n        // const DataFirst = dataList.FirstArray\n        const FlootSheetFirstAreaData = groupfirstarray(dataList.FirstArray)\n        const FlootSheetSecondAreaData = groupfirstarray(dataList.SecondArray)\n        const FlootSheetThirdAreaData = groupfirstarray(dataList.ThirdArray)\n        const FlootSheetFourthAreaData = groupelement(groupfirstarray(dataList.FourthArray))\n        console.log(FlootSheetFirstAreaData)\n        console.log(FlootSheetSecondAreaData)\n        console.log(FlootSheetThirdAreaData)\n        console.log(FlootSheetFourthAreaData)\n        const start = PickerDate + 7 * 60 * 60 * 1000\n        const Firstdata = FlootSheetFirstAreaData.map(function (value, index, arr) {\n            const title = value[0].title\n            var timeForList = []\n            for (let index = 0; index < 24; index++) {\n                const startTime = start + (index * 60 * 60 * 1000)\n                const endTime = start + ((index + 1) * 60 * 60 * 1000)\n                var sum = 0\n                var elementList = []\n                for (let index = 0; index < value.length; index++) {\n                    const element = value[index].element;\n                    const valueSum = Number(element.inp_val1)\n                    const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    if (startTime <= elementTime && elementTime < endTime) {\n                        sum = sum + valueSum\n                        elementList.push(element)\n                    }\n                }\n                timeForList.push({\n                    value: sum,\n                    startTime: startTime,\n                    endTime: endTime,\n                    elementList: elementList\n                })\n            }\n            console.log(timeForList)\n            const cellMap = timeForList.map(function (info, index, arr) {\n                return (\n                    <div key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n                );\n            })\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                    <div style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', backgroundColor: \"#cccccc\", display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{title}</div>\n                    {cellMap}\n                </div>\n            );\n        })\n        const Secondedata = FlootSheetSecondAreaData.map(function (value, index, arr) {\n            const title = value[0].title\n            var timeForList = []\n            for (let index = 0; index < 24; index++) {\n                const startTime = start + (index * 60 * 60 * 1000)\n                const endTime = start + ((index + 1) * 60 * 60 * 1000)\n                var sum = 0\n                var elementList = []\n                for (let index = 0; index < value.length; index++) {\n                    const element = value[index].element;\n                    const valueSum = Number(element.inp_val1)\n                    const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    if (startTime <= elementTime && elementTime < endTime) {\n                        sum = sum + valueSum\n                        elementList.push(element)\n                    }\n                }\n                timeForList.push({\n                    value: sum,\n                    startTime: startTime,\n                    endTime: endTime,\n                    elementList: elementList\n                })\n            }\n            const cellMap = timeForList.map(function (info, index, arr) {\n                return (\n                    <div key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n                );\n            })\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                    <div style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', backgroundColor: \"#cccccc\", display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{title}</div>\n                    {cellMap}\n                </div>\n            );\n        })\n\n        const Thirddata = FlootSheetThirdAreaData.map(function (value, index, arr) {\n            const title = value[0].title\n            var timeForList = []\n            for (let index = 0; index < 24; index++) {\n                const startTime = start + (index * 60 * 60 * 1000)\n                const endTime = start + ((index + 1) * 60 * 60 * 1000)\n                var sum = 0\n                var elementList = []\n                for (let index = 0; index < value.length; index++) {\n                    const element = value[index].element;\n                    const valueSum = Number(element.inp_val1)\n                    const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    if (startTime <= elementTime && elementTime < endTime) {\n                        sum = sum + valueSum\n                        elementList.push(element)\n                    }\n                }\n                timeForList.push({\n                    value: sum,\n                    startTime: startTime,\n                    endTime: endTime,\n                    elementList: elementList\n                })\n            }\n            const cellMap = timeForList.map(function (info, index, arr) {\n                return (\n                    <div key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n                );\n            })\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                    <div style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', backgroundColor: \"#cccccc\", display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{title}</div>\n                    {cellMap}\n                </div>\n            );\n        })\n        function formatRV(List) {\n            var timeForList = []\n            for (let index = 0; index < 24; index++) {\n                const startTime = start + (index * 60 * 60 * 1000)\n                const endTime = start + ((index + 1) * 60 * 60 * 1000)\n                var sum = 0\n                var elementList = []\n                for (let index = 0; index < List.length; index++) {\n                    const element = List[index].element;\n                    const valueSum = Number(element.inp_val1)\n                    const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    if (startTime <= elementTime && elementTime < endTime) {\n                        sum = sum + valueSum\n                        elementList.push(element)\n                    }\n                }\n                timeForList.push({\n                    value: sum,\n                    startTime: startTime,\n                    endTime: endTime,\n                    elementList: elementList\n                })\n            }\n            return timeForList\n        }\n        const RVCellRender = formatRV(dataList.ThirdArray)\n        const cellMap = RVCellRender.map(function (info, index, arr) {\n            return (\n                <div key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n            );\n        })\n        const RV = this.RVList(cellMap)\n        const FourdataCellRender = FlootSheetFourthAreaData.map((value, index, arr) => {\n            const datajson = value.element\n            const title = value.title\n            return this.FourthDataCell(datajson, title)\n        })\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>I/O</t2>\n                </div>\n                <div style={{ display: Firstdata.length === 0 ? \"none\" : \"block\", border: \"1px solid black\", borderCollapse: \"collapse\" }}>\n                    {Firstdata}\n                </div>\n                <div style={{ display: Secondedata.length === 0 ? \"none\" : \"block\", border: \"1px solid black\", borderCollapse: \"collapse\" }}>\n                    {Secondedata}\n                </div>\n                <div style={{ display: Thirddata.length === 0 ? \"none\" : \"block\", border: \"1px solid black\", borderCollapse: \"collapse\" }}>\n                    {Thirddata}\n                    {RV}\n                </div>\n                <div style={{ display: FourdataCellRender.length === 0 ? \"none\" : \"block\", border: \"1px solid black\", borderCollapse: \"collapse\" }}>\n                    {FourdataCellRender}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Flootsheetio;\n","import React, { Component } from 'react';\nimport Flootsheetio from './Flootsheetio'\n// import Flowsheetvitalsign from './Flootsheetvitalsign'\nimport Vitalxaxis from '../../Module/Vitalxaxis'\nimport { DatePicker, Button } from 'antd';\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport './Flootsheetlayout.scss'\nimport X2JS from 'x2js';\nimport * as Wardstate from '../../Function/Wardstate'\nimport locale from 'antd/es/date-picker/locale/zh_TW';\n\nclass Flowsheetlayout extends Component {\n    state = {\n        PickerDate: moment(moment().format('YYYYMMDD')).valueOf(),\n        preCID: null,\n        QSPE: [],\n        // itemlist: []\n    }\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const CID = caseinfo.CASEID\n        const date = moment(moment().format('YYYYMMDD')).valueOf()\n        this.setState({ preCID: CID, PickerDate: date })\n        this.ApiData(CID, date)\n    }\n    componentDidUpdate() {\n        const CID = this.props.caseinfo.CASEID\n        const preCID = this.state.preCID\n        if (CID !== preCID) {\n            const date = this.state.PickerDate\n            this.setState({ preCID: CID, PickerDate: date })\n            this.ApiData(CID, date)\n        }\n    }\n    ApiData(CID, DateTime) {\n        const st = moment(DateTime + (7 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        const et = moment(DateTime + (31 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        ApiProvider.getQSPE(CID, st, et)\n            .then(data => {\n                const dataJson = Wardstate.XM2JSON(data.data)\n                // const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                if (Array.isArray(dataJson)) {\n                    this.setState({ QSPE: dataJson })\n                }\n                else {\n                    this.setState({\n                        QSPE: [dataJson]\n                    })\n                }\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n    }\n    onDateChange = (date, dateString) => {\n        const CID = this.props.caseinfo.CASEID\n        this.setState({ preCID: CID, PickerDate: date.valueOf() })\n        this.ApiData(date.valueOf())\n\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDate } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const bTemp = bTime - (6 * day)\n                bronDate <= bTemp && this.onDateChange(moment(bTime))\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD'))\n                this.onDateChange(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= aTemp && this.onDateChange(moment(aTime))\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const data = this.state.QSPE || [] //特殊護理事件\n        const splist = data.filter(function (value, index, array) {\n            if (value === undefined) {\n                return null\n            }\n            console.log(value)\n            const str = value.special\n            return str.match(\"@v\") === null\n        })\n        const specialListRender = splist.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ display: \"flex\", color: \"rgba(59, 151, 225, 1)\" }}>{value.special.toString().trim()}</div>\n            );\n        })\n        return (\n            <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\n                <div>\n                    <div style={{ padding: \"0px 10px\", display: \"flex\" }}>\n                        <DatePicker disabledDate={(current) => { return current > moment().startOf(\"day\") || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }} width={120} value={moment(this.state.PickerDate)} allowClear={false} onChange={this.onDateChange} />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\", padding: \"2px 10px 0px 10px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                    </div>\n                    <div style={{ display: splist.length === 0 ? \"none\" : \"block\", border: \"rgba(238,238,238,1) 1px solid\", borderRadius: \"4px\" }}>\n                        <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\", marginTop: \"10px\" }}>\n                            <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>特殊護理事件：</t2>\n                            <t2 style={{ width: \"20px\", height: \"20px\", borderRadius: \"99em\", background: \"black\", color: \"white\", display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>\n                                {splist.length}\n                            </t2>\n                        </div>\n                        <div style={{ maxHeight: \"100px\", width: \"100%\", overflow: \"auto\" }}>\n                            {specialListRender}\n                        </div>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"20px\" }}>\n                    <div></div>\n                    <Vitalxaxis max={200} min={0} select_interval={0} select_date={this.state.PickerDate} id_key=\"xaxis_flootsheet\" svg_id=\"xaxis_svg_flootsheet\"></Vitalxaxis>\n                </div>\n                <div className='boxshadow'></div>\n                <div className='flootsheetlayout'>\n                    <Flootsheetio PickerDate={this.state.PickerDate} caseinfo={caseinfo}></Flootsheetio>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\" }}>\n                    <div></div>\n                    <Vitalxaxis max={200} min={0} select_interval={0} select_date={this.state.PickerDate} id_key=\"xaxis_flootsheet_bot\" svg_id=\"xaxis_svg_flootsheet_bot\"></Vitalxaxis>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Flowsheetlayout;\n","import React, { Component } from 'react';\nimport './Examchart.scss';\nimport * as d3 from \"d3\";\nimport moment from 'moment';\n\nclass Examchart extends Component {\n    state = {\n        change: false\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\".tooltip\").remove()\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n    drawChart() {\n\n        const { id_key, svg_id, max, min, lineChart } = this.props\n        const sT = new Date(moment(lineChart[0].date, 'YYYYMMDD').valueOf() - 24 * 60 * 60 * 1000)\n        const endT = new Date(moment(lineChart[lineChart.length - 1].date, 'YYYYMMDD') + 24 * 60 * 60 * 1000)\n\n        const fixLineChart = lineChart.filter(data => {\n            return data.value !== \"\"\n        })\n\n        // 邊界\n        const margin = { top: 20, right: 20, bottom: 30, left: 50 },\n            width = 1000 - margin.left - margin.right,\n            height = 500 - margin.top - margin.bottom;\n\n        let x = d3.scaleTime().domain([sT, endT]).range([0, width - margin.left - margin.right])\n        let y = d3.scaleLinear().domain([min, max]).range([height, 0])\n\n        var div = d3.select(\"#\" + id_key).append(\"div\")\n            .attr(\"class\", \"tooltip\")\n            .style(\"opacity\", 0);\n\n        let svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            .style(\"height\", height + margin.top + margin.bottom)\n            .style(\"width\", width + margin.left + margin.right)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        svg.append('g')\n            .call(d3.axisBottom(x).ticks(5).tickFormat(d3.timeFormat('%m/%d')))\n            .attr(\"transform\", `translate(0,${height})`)\n            .style('stroke', 'black')\n            .style('stroke-width', 1);\n\n        svg.append('g')\n            .call(d3.axisLeft(y))\n            .style('stroke', 'black')\n            .style('stroke-width', 1);\n\n        let line = d3.line()\n            .x(d => x(moment(d.date, 'YYYYMMDDHHmm').toDate()))\n            .y(d => y(d.value))\n            .curve(d3.curveMonotoneX);\n\n        let lines = svg.append('g').attr('class', 'lines');\n\n        lines.selectAll(\"circle\")\n            .data(fixLineChart)\n            .enter()\n            .append('g')\n            .append(\"circle\")\n            .attr(\"class\", \"lines-circle\")\n            .attr(\"cy\", d => y(d.value))\n            .attr(\"cx\", d => x(moment(d.date, 'YYYYMMDDHHmm').toDate()))\n            .attr('r', 5)\n            .on(\"mouseover\", function (d) {\n                div.transition()\n                    .duration(100)\n                    .style(\"opacity\", .9);\n                div.html(`檢驗時間 : ${d.date} <br/> 檢驗數值 : ${d.value}`)\n                    .style(\"left\", (d3.event.pageX - 200) + \"px\")\n                    .style(\"top\", (d3.event.pageY - 150) + \"px\");\n            })\n            .on(\"mouseout\", function (d) {\n                div.transition()\n                    .duration(300)\n                    .style(\"opacity\", 0);\n            })\n            .style('opacity', 1)\n            .style('fill', \"blue\");\n\n        lines\n            .selectAll('.line-group')\n            .data(fixLineChart)\n            .enter()\n            .append('g')\n            .attr('class', 'line-group')\n            .append('path')\n            .attr('class', 'line')\n            .attr('d', line(fixLineChart))\n            .style('stroke', 'black')\n            .style('fill', 'none');\n    }\n\n    render() {\n        const { id_key, lineCharttitle } = this.props\n\n        const title = lineCharttitle == 'Band' || lineCharttitle == 'Seg' || lineCharttitle == 'Lym' ? true : false\n\n        return (\n            <div>\n                <div style={{ padding: \"0px 24px 16px\", color: \"rgba(0, 0, 0, 0.65)\", background: \"#fff\", borderBottom: \"1px solid #e8e8e8\", borderRadius: \"4px 4px 0 0\" }}>\n                    <span style={{ color: \"rgba(0, 0, 0, 0.85)\", fontSize: \"20px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>{lineCharttitle}</span>\n                    {title && <span style={{ color: \"rgba(0, 0, 0, 0.65)\", fontSize: \"16px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>%</span>}\n                </div>\n                <div id={id_key}></div>\n            </div>\n        );\n    }\n}\n\nexport default Examchart;\n","import React, { Component } from 'react';\nimport { Select, Modal } from 'antd';\n// import * as ApiGithub from '../../API/ApiGithub'\nimport * as RegularData from '../../Data/RegularData'\nimport moment from 'moment'\nimport Examchart from './Examchart'\nimport { Button } from 'antd';\n\nclass Labview extends Component {\n    state = {\n        Selectus: this.props.SelectStatus,\n        PickerDateRange: [moment(), moment()],\n        visible: false,\n        lineCharttitle: '',\n        lineChart: [],\n        IRParse: RegularData.InspectionReportExtent()\n    }\n    componentDidMount() {\n        // ApiGithub.getExamReport()\n        //     .then(data => {\n        //         this.setState({\n        //             TitleList: data.data\n        //         })\n        //     })\n        //     .catch(err=>{\n        //         console.log(\"GithubAPI NG\" + err)\n        //     })\n        // this.setState({\n        //     TitleList: RegularData.ExamReportJson\n        // })\n    }\n\n    callbackDateFunction = (value) => {\n        this.props.parentDateCallback(value);\n    }\n    handleChange = (value) => {\n        this.callbackDateFunction(value)\n        this.setState({\n            Selectus: value\n        })\n    }\n    titleSearch = (value) => {\n        this.props.parentTitleCallback(value.target.value);\n    }\n    CellRender() {\n        const { DataList } = this.props\n        // console.log(DataList)\n        if (DataList.length === 0) {\n            return null\n        }\n        const DataListCell = DataList.map(function (element, index) {\n            const cellRender = element.Data.map(function (info, index) {\n                return (\n                    <centerstyle key={index} style={{ flex: 1, border: \"1px solid #cccccc\", borderCollapse: 'collapse' }}>\n                        <t3>{info}</t3>\n                    </centerstyle>\n                );\n            })\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"110px 1fr\", height: \"50px\" }}>\n                    <centerstyle style={{ border: \"1px solid #cccccc\", borderCollapse: 'collapse', paddingLeft: \"15px\" }}>\n                        <t3>{element.Time}</t3>\n                    </centerstyle>\n                    <div style={{ display: \"flex\", gridTemplateColumns: \"repeat(9,1fr)\" }}>\n                        {cellRender}\n                    </div>\n                </div >\n            );\n        })\n        return DataListCell\n    }\n\n    fixLineChartData = (e) => {\n        const { DataList } = this.props;\n        const value = e.target.value;\n        const number = e.target.getAttribute('index');\n\n        let showDate = DataList.map(data => {\n            let temp = {}\n            temp['date'] = data.Time;\n            temp['value'] = data.Data[number];\n            return temp\n        })\n\n        showDate.sort((x, y) => {\n            return moment(x.date, 'YYYYMMDDHHmm').valueOf() - moment(y.date, 'YYYYMMDDHHmm').valueOf()\n        })\n\n        this.setState({\n            lineCharttitle: value,\n            lineChart: showDate,\n        }, () => { this.showModel() });\n    }\n    showModel = () => {\n        this.setState({\n            visible: true,\n        });\n    }\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    charttableview = () => {\n        const { IRParse, Selectus, lineCharttitle, lineChart } = this.state\n\n        if (lineCharttitle === '') { return null }\n\n        const key = Object.keys(IRParse)[Selectus]\n        const range = IRParse[key][lineCharttitle]\n\n        const itemValue = []\n\n        const max = range.max !== undefined ? range.max : Math.max(...itemValue)\n        const min = range.min !== undefined ? range.min : Math.min(...itemValue)\n\n        return (\n            <div style={{ margin: \"20px 0px\" }}>\n                <Examchart lineChart={lineChart} lineCharttitle={lineCharttitle} max={max} min={min} id_key={\"svgExamID\"} svg_id={\"svgExamSVG\"}></Examchart>\n            </div>\n        );\n    }\n\n    render() {\n        const { Option } = Select;\n        const visible = this.state.visible\n        const lineCharttitle = this.state.lineCharttitle\n        const handleOk = this.handleOk\n        const handleCancel = this.handleCancel\n        const fixLineChartData = this.fixLineChartData\n        const charttableview = this.charttableview()\n        const LabDataList = RegularData.ExamReportJson()\n        //0:CBC 1:電解質 2:肝功能 3:心臟 4:凝血 5:GAS 6:Glucose\n        const SelectList = LabDataList.map(function (info, index) {\n            // console.log(info.index)\n            return (\n                <Option key={info.index} value={info.index} >{info.select}</Option>\n            );\n        })\n        const SelectTitlefilter = LabDataList.filter(function (element, index) {\n            const selectdata = Select\n            return element.index = selectdata\n        })\n        if (SelectTitlefilter.length === 0) {\n            return null\n        }\n        const SelectTitle = SelectTitlefilter[this.state.Selectus].title\n        const SelectTitleRender = SelectTitle.map(function (info, index) {\n            return (\n                <centerstyle style={{ flex: 1 }} key={index}>\n                    <Button style={{ height: \"26px\", width: \"70px\", backgroundColor: \"transparent\", border: \"2px white solid\" }} index={index} value={info} onClick={fixLineChartData}>{info}</Button>\n                </centerstyle >\n            );\n        })\n        const ExamLab = this.CellRender()\n\n        return (\n            <div>\n                <Modal\n                    visible={visible}\n                    onOk={handleOk}\n                    onCancel={handleCancel}\n                    width={1200}\n                    footer={null}>\n                    {charttableview}\n                </Modal>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>LAB(常規檢驗)</t2>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"auto 1fr\", marginTop: \"10px\", gridColumnGap: \"5px\" }}>\n                    <t2 style={{ display: \"flex\", alignItems: \"center\" }}>檢驗類別：</t2>\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                        <Select defaultValue={this.state.Selectus} style={{ width: \"90%\" }} onChange={this.handleChange}>\n                            {SelectList}\n                        </Select>\n                    </div>\n                </div>\n                <div style={{ marginTop: \"10px\", backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"30px\", display: \"grid\", gridTemplateColumns: \"110px 1fr\", alignItems: \"center\" }}>\n                    {/* <div style={{ marginTop: \"10px\", display: \"grid\", gridTemplateColumns: \"110px 1fr\", height: \"50px\", backgroundColor: \"#E2EDF3\" }}> */}\n                    <centerstyle>\n                        <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>檢驗項目</t2>\n                    </centerstyle>\n                    <div style={{ display: \"flex\", gridTemplateColumns: \"repeat(9,1fr)\", justifycontent: \"space-between\" }} onClick={this.titleSearch}>\n                        {SelectTitleRender}\n                    </div>\n                </div>\n                {/* <div>{this.state.Title}</div> */}\n                {ExamLab}\n            </div >\n        );\n    }\n}\n\nexport default Labview;\n","export function ExamReportJson() {\n    return [\n        {\n            \"select\": \"CBC檢驗:WBC、Band、Seg、Lym、Hgb、Hct、PLT\",\n            \"index\": 0,\n            \"title\": [\n                \"WBC\",\n                \"Band\",\n                \"Seg\",\n                \"Lym\",\n                \"Hgb\",\n                \"Hct\",\n                \"PLT\"\n            ]\n        },\n        {\n            \"select\": \"電解質與腎功能檢驗:Na、K、Cl、Ca++、Ca、Mg++、P、BUN、Cr\",\n            \"index\": 1,\n            \"title\": [\n                \"Na\",\n                \"K\",\n                \"Cl\",\n                \"Ca++\",\n                \"Ca\",\n                \"Mg++\",\n                \"P\",\n                \"BUN\",\n                \"Cr\"\n            ]\n        },\n        {\n            \"select\": \"肝功能檢驗:ALT、AST、TBil、DBil、r-GT、Alk-P、ALB\",\n            \"index\": 2,\n            \"title\": [\n                \"ALT\",\n                \"AST\",\n                \"TBil\",\n                \"DBil\",\n                \"r-GT\",\n                \"Alk-P\",\n                \"ALB\"\n            ]\n        },\n        {\n            \"select\": \"早產兒追蹤:Iron、TIBC、FeSat、LDH、Alk-P\",\n            \"index\": 3,\n            \"title\": [\n                \"Iron\",\n                \"TIBC\",\n                \"FeSat\",\n                \"LDH\",\n                \"Alk-P\"\n            ]\n        },\n        {\n            \"select\": \"心臟功能檢驗:CK、CK-MB、BNP、Trop-T\",\n            \"index\": 4,\n            \"title\": [\n                \"CK\",\n                \"CK-MB\",\n                \"BNP\",\n                \"Trop-T\"\n            ]\n        },\n        {\n            \"select\": \"凝血功能檢驗:PT、APTT、INR\",\n            \"index\": 5,\n            \"title\": [\n                \"PT\",\n                \"APTT\",\n                \"INR\"\n            ]\n        },\n        {\n            \"select\": \"Gas檢驗:PH、pCO2、pO2、HCO3、BE、O2Sat、FiO2\",\n            \"index\": 6,\n            \"title\": [\n                \"PH\",\n                \"pCO2\",\n                \"pO2\",\n                \"HCO3\",\n                \"BE\",\n                \"O2Sat\",\n                \"FiO2\"\n            ]\n        },\n        ,\n        {\n            \"select\": \"GAS(Additionary)檢驗:Hgb、Hct、Na、K、Ca++、BUN、Cr\",\n            \"index\": 7,\n            \"title\": [\n                \"Hgb\",\n                \"Hct\",\n                \"Na\",\n                \"K\",\n                \"Ca(Free)\",\n                \"BUN\",\n                \"Cr\"\n            ]\n        },\n        {\n            \"select\": \"Glucose檢驗:Glu(BedSide, Lab)\",\n            \"index\": 8,\n            \"title\": [\n                \"Glu(BedSide)\",\n                \"Glu(Lab)\"\n            ]\n        },\n        {\n            \"select\": \"黃疸檢查:TCB、MicroBil、TBil、DBil\",\n            \"index\": 9,\n            \"title\": [\n                \"TCB\",\n                \"MicroBil\",\n                \"TBil\",\n                \"DBil\"\n            ]\n        },\n        {\n            \"select\": \"感染指數:WBC、Band、Seg、Lym、PCT、CRP\",\n            \"index\": 10,\n            \"title\": [\n                \"WBC\",\n                \"Band\",\n                \"Seg\",\n                \"Lym\",\n                \"PCT\",\n                \"CRP\"\n            ]\n        }\n    ]\n}\nexport function FlagReg() {\n    return [\n        {\n            item: \"Respirator\",\n            \"ParseValueUD\": [\n                \"Restriction\"\n            ],\n            \"ParseValueTRT\": []\n        },\n        {\n            item: \"TPN\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"NPO\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"Anti\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"Foley\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"Drain\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        }\n    ]\n}\nexport function QDC() {\n    return {\n        \"Feeding\": [\n            \"進食\"\n        ],\n        \"IV\": [\n            \"血品\",\n            \"輸液\"\n        ],\n        \"Urine\": [\n            \"排尿\"\n        ],\n        \"Other\": [\n            \"失血\",\n            \"滲液\",\n            \"嘔吐\",\n            \"引流\",\n            \"穿刺\",\n            \"透析\",\n            \"沖洗\",\n            \"排便\"\n        ]\n    }\n}\n\nexport function ChronicLab() {\n    return {\n        \"Biochemical\": [\n        ],\n        \"Blood\": [\n            \"BLOOD\"\n        ],\n        \"Cultivate\": [\n\n        ],\n        \"GAS\": [\n\n        ],\n        \"Glu\": [\n\n        ],\n        \"Radiation\": [\n        ]\n    }\n}\n\nexport function NonLabExamReportParser() {\n    return [\n        {\n            parser_name: \"CBC\",\n            apply_condition: {\n                name: \"CBC|WBC|HB|PLT\",\n                sample: null,\n                lab: null,\n                start_time: null,\n                end_time: null,\n            },\n            mappings: [\n                {\n                    key: \"Hb\",\n                    regex_str: \"HB:\\\\s+(\\\\d+(.\\\\d)?)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"WBC\",\n                    regex_str: \"wbc:\\\\s+(\\\\d+)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"PLT\",\n                    regex_str: \"plt:\\\\s+(\\\\d+)\",\n                    regex_flags: 'ism',\n                    position: 1\n                }\n            ],\n            summary: \"[WBC;-]/[Hb;]/[PLT;-]\"\n        },\n        {\n            parser_name: \"Atypical Respiratory Panel\",\n            apply_condition: {\n                name: \"Atypical Respiratory Panel|CBC|PH|HB|PO2\",\n                sample: null,\n                lab: null,\n                start_time: null,\n                end_time: null,\n            },\n            mappings: [\n                {\n                    key: \"Hb\",\n                    regex_str: \"Hb:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"PH\",\n                    regex_str: \"PH:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"PO2\",\n                    regex_str: \"PO2:\\\\s+\\\\((\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"FIO2\",\n                    regex_str: \"FIO2:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"HCO3\",\n                    regex_str: \"HCO3:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                }\n            ],\n            summary: \"[PH;-]/[Hb;-]/[PO2;-]/[FIO2;-]/[HCO3;-]\"\n        }\n    ]\n}\n\nexport function NonLabExamORDListParser() {\n    return [\n        {\n            parser_name: \"ORDLIST\",\n            apply_condition: {\n                name: \"ORDLIST\",\n                sample: null,\n                lab: null,\n                start_time: null,\n                end_time: null,\n            },\n            mappings: [\n                {\n                    key: \"飲食類別\",\n                    regex_str: \"(CHEST\\\\s+KUB\\\\s+\\\\(FOR\\\\s+BABY\\\\)\\\\s+PORTABLE)|(BRAIN\\\\s+ECHO\\\\s+\\\\(NBD\\\\))\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"管路類別\",\n                    regex_str: \"(BLOOD\\\\s+GAS)|(Atypical\\\\s+Respiratory\\\\s+Panel)|(BLOOD\\\\s+PRODUCTS\\\\s+IRRADIATION)|(Aliqot\\\\s+and\\\\s+storage\\\\s+of\\\\s+blood)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"呼吸類別\",\n                    regex_str: \"(NT-pro-BNP)|(ANTIBODY\\\\s+SCREENING)\",\n                    regex_flags: 'ism',\n                    position: 1\n                }\n            ],\n            summary: \"[CHEST KUB;-]/[BLOOD GAS;-]/[Glucose;-]\"\n        }\n    ]\n}\n\nexport function InspectionReportExtent() {\n    return {\n        \"CBC\": {\n            \"WBC\": {\n                \"min\": 10000,\n                \"max\": 30000\n            },\n            \"Band\": {\n                \"min\": 0,\n                \"max\": 10\n            },\n            \"Seg\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"Lym\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"Hgb\": {\n                \"min\": 10,\n                \"max\": 18\n            },\n            \"Hct\": {\n                \"min\": 30,\n                \"max\": 55\n            },\n            \"PLT\": {\n                \"min\": 100000,\n                \"max\": 450000\n            }\n        },\n        \"電解質與腎功能\": {\n            \"Na\": {\n                \"min\": 120,\n                \"max\": 160\n            },\n            \"K\": {\n                \"min\": 0,\n                \"max\": 8\n            },\n            \"Cl\": {\n                \"min\": 80,\n                \"max\": 120\n            },\n            \"Ca++\": {\n                \"min\": 0.5,\n                \"max\": 1.8\n            },\n            \"Ca\": {\n                \"min\": 6,\n                \"max\": 12\n            },\n            \"Mg++\": {\n                \"min\": 0,\n                \"max\": 8\n            },\n            \"P\": {\n                \"min\": 0,\n                \"max\": 10\n            },\n            \"BUN\": {\n                \"min\": 0,\n                \"max\": 60\n            },\n            \"Cr\": {\n                \"min\": 0,\n                \"max\": 5\n            }\n        },\n        \"肝功能\": {\n            \"ALT\": {\n                \"min\": 0,\n                \"max\": 200\n            },\n            \"AST\": {\n                \"min\": 0,\n                \"max\": 200\n            },\n            \"TBil\": {\n                \"min\": 0,\n                \"max\": 30\n            },\n            \"DBil\": {\n                \"min\": 0,\n                \"max\": 20\n            },\n            \"r-GT\": {\n                \"min\": 0,\n                \"max\": 200\n            },\n            \"Alk-P\": {\n                \"min\": 0,\n                \"max\": 1600\n            },\n            \"ALB\": {\n                \"min\": 0,\n                \"max\": 5\n            }\n        },\n        \"早產兒追蹤\": {\n            \"Iron\": {\n                \"min\": 0,\n                \"max\": 300\n            },\n            \"TIBC\": {\n                \"min\": 0,\n                \"max\": 300\n            },\n            \"FeSat\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"LDH\": {\n                \"min\": 0,\n                \"max\": 2000\n            },\n            \"Alk-P\": {\n                \"min\": 0,\n                \"max\": 1600\n            }\n        },\n        \"心臟功能\": {\n            \"CK\": {\n                \"min\": 0,\n                \"max\": 6000\n            },\n            \"CK-MB\": {\n                \"min\": 0,\n                \"max\": 2000\n            },\n            \"BNP\": {\n                \"min\": 0,\n                \"max\": 20000\n            },\n            \"Trop-T\": {\n                \"min\": 0,\n                \"max\": 1000\n            }\n        },\n        \"凝血功能\": {\n            \"PT\": {\n                \"min\": 0,\n                \"max\": 120\n            },\n            \"APTT\": {\n                \"min\": 0,\n                \"max\": 120\n            },\n            \"INR\": {\n                \"min\": 0,\n                \"max\": 4\n            }\n        },\n        \"Gas\": {\n            \"pH\": {\n                \"min\": 6.5,\n                \"max\": 7.7\n            },\n            \"pCO2\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"pO2\": {\n                \"min\": 0,\n                \"max\": 200\n            },\n            \"HCO3\": {\n                \"min\": 0,\n                \"max\": 40\n            },\n            \"BE\": {\n                \"min\": -30,\n                \"max\": 20\n            },\n            \"O2Sat\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"FiO2\": {\n                \"min\": 0,\n                \"max\": 100\n            }\n        },\n        \"GAS(Additionary)\": {\n            \"Hgb\": {\n                \"min\": 6,\n                \"max\": 22\n            },\n            \"Hct\": {\n                \"min\": 10,\n                \"max\": 70\n            },\n            \"Na\": {\n                \"min\": 120,\n                \"max\": 160\n            },\n            \"K\": {\n                \"min\": 0,\n                \"max\": 8\n            },\n            \"Ca++\": {\n                \"min\": 0.5,\n                \"max\": 1.8\n            },\n            \"BUN\": {\n                \"min\": 0,\n                \"max\": 60\n            },\n            \"Cr\": {\n                \"min\": 0,\n                \"max\": 5\n            }\n        },\n        \"Glucose\": {\n            \"Glu (BedSide)\": {\n                \"min\": 0,\n                \"max\": 300\n            },\n            \"Glu (Lab)\": {\n                \"min\": 0,\n                \"max\": 300\n            }\n        },\n        \"黃疸\": {\n            \"TCB\": {\n                \"min\": 0,\n                \"max\": 30\n            },\n            \"MicroBil\": {\n                \"min\": 0,\n                \"max\": 30\n            },\n            \"TBil\": {\n                \"min\": 0,\n                \"max\": 30\n            },\n            \"DBil\": {\n                \"min\": 0,\n                \"max\": 20\n            }\n        },\n        \"感染指數\": {\n            \"WBC\": {\n                \"min\": 10000,\n                \"max\": 30000\n            },\n            \"Band\": {\n                \"min\": 0,\n                \"max\": 0.05\n            },\n            \"Seg\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"Lym\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"PCT\": {\n                \"min\": 0,\n                \"max\": 20\n            },\n            \"CRP\": {\n                \"min\": 0,\n                \"max\": 20\n            }\n        }\n    }\n\n}\n","import React, { Component } from 'react';\nimport './ExamNonlabtablecell.scss'\n// import { Nonlablist } from '../../Data/Wardviewdata'\nimport moment from 'moment'\nimport NonlabviewtableCell from '../CrossSectionView/NonlabviewtableCell'\n// import { Modal } from 'antd';\n// import InsReportModal from '../ExamReportModal'\n\nclass Examnonlabviewtable extends Component {\n    state = {\n        visible: false\n    }\n\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            const resultKey = mapping.sample ? mapping.key + \"-\" + mapping.sample : mapping.key\n            allResult[resultKey] = []\n        });\n        allResult[\"全部\"] = []\n        inputs.forEach(input => {\n            let content = input.ORPROCED;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\" && (mapping.sample ? input.ORSPCN1.trim() === mapping.sample : true)) {\n                    const resultKey = mapping.sample ? mapping.key + \"-\" + mapping.sample : mapping.key\n                    allResult[resultKey].push(input)\n                }\n            });\n\n            allResult[\"全部\"].push(input)\n        });\n\n        return allResult;\n    }\n\n    render() {\n        function listforstatus(ordlist, ressect, pickerdaterange, StateMode, InputMode) {\n            if (StateMode !== 0) {\n                /*\n                預設 \n                全部 StateMode == 0\n                已開單 StateMode == 1, data.ORSTATUS == 30\n                已簽收 StateMode == 2, data.ORSTATUS == 31\n                已發報告 StateMode == 3, data.ORSTATUS == 32\n                */\n                const changeState = { '1': '30', '2': '31', '3': '32' }\n                ordlist = ordlist.filter(data => {\n                    return data.ORSTATUS === changeState[StateMode.toString()]\n                })\n            }\n\n            if (InputMode !== null) {\n                const regex = new RegExp(InputMode, \"i\");\n                ordlist = ordlist.filter(data => {\n                    return data.ORPROCED.match(regex) !== null\n                })\n            }\n\n            let status_report = []\n            console.log(ordlist, ressect, pickerdaterange)\n            const et = pickerdaterange[1].valueOf() + (24 * 60 * 60 * 1000)\n            const st = pickerdaterange[0].valueOf()\n            if (Array.isArray(ordlist) && Array.isArray(ressect)) {\n                for (let index = 0; index < ordlist.length; index++) {\n                    const element = ordlist[index];\n                    const time = element.ORBGNDT.toString().trim() + element.ORBGNTM.toString().trim()\n                    const timeStamp = moment(time, 'YYYY-MM-DDHHmmss').valueOf()\n                    if (timeStamp > st && timeStamp < et) {\n                        const status = ressect.find(function (value, index, array) {\n                            return value.ORDCLNM === element.ORDCLNM\n                        })\n                        if (status) {\n                            status_report.push({\n                                \"status\": true,\n                                \"element\": element\n                            })\n                        }\n                        else {\n                            status_report.push({\n                                \"status\": false,\n                                \"element\": element\n                            })\n\n                        }\n                    }\n                }\n            }\n\n            status_report = status_report.sort((a, b) => {\n                let tempA = a.ORBGNDT.toString().trim() + a.ORBGNTM.toString().trim()\n                let tempTimeA = moment(tempA, 'YYYY-MM-DDHHmmss').valueOf()\n                let tempB = b.ORBGNDT.toString().trim() + b.ORBGNTM.toString().trim()\n                let tempTimeB = moment(tempB, 'YYYY-MM-DDHHmmss').valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n\n            return status_report\n        }\n\n        const { PickerDateRange, ORDLIST, RESSECT, StateMode, InputMode } = this.props\n\n        let clusteredData = {}\n        if (this.props.parser !== undefined) {\n            clusteredData = this.parse(ORDLIST, this.props.parser)\n        }\n\n        //filter data by selected class\n        let filteredData = clusteredData[this.props.selectedClass];\n\n        //Picker Date 前三天\n        const list = listforstatus(filteredData, RESSECT, PickerDateRange, StateMode, InputMode)\n        console.log(list)\n        const showModal = this.props.showModal\n        const nonlabcell = list.map(function (value, index, array) {\n            // console.log(value)\n            const time = moment(value.element.ORDATE.toString().trim() + value.element.ORTIME.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n            const come = value.element.ORSPCN1\n            const name = value.element.ORPROCED\n            const status = value.element.ORSTATUS\n\n            return (\n                <NonlabviewtableCell key={\"Examnonlabviewtable\" + index} come={come} time={time} name={name} status={status} hisId={value.element.ORHISTNO} caseId={value.element.ORDSEQCN} month={value.element.ORMM} seq={value.element.ORDSEQNO} showModal={showModal}></NonlabviewtableCell>\n            );\n        })\n\n        return (\n            <div style={{ marginTop: \"10px\" }}>\n                <div style={{ height: \"50px\", border: \"#E2EDF3 1px solid\", backgroundColor: \"#E2EDF3\", display: \"grid\", gridTemplateColumns: \"1fr 1.5fr 1fr 1fr 1fr\" }}>\n                    <t3 className='nonlabtebletitlecell'>檢驗日期</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗項目名稱</t3>\n                    <t3 className='nonlabtebletitlecell'>檢體來源</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗項目狀態</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗結果</t3>\n                </div>\n                <div className='nonlabviewtable'>\n                    {nonlabcell}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Examnonlabviewtable\n","import React, { Component } from 'react';\nimport Examnonlabviewtable from './ExamNonlabtablecell'\nimport { Input, Select, Modal } from 'antd';\n// import moment from 'moment';\n// import searchlogo from '../../Image/svg/Search.svg'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport InsReportModal from '../ExamReportModal'\n\n// var mode_class, mode_state;\nclass Nonlabview extends Component {\n    state = {\n        ClassMode: \"全部類別\",\n        StateMode: 0,\n        InputMode: null,\n        parser: { \"mappings\": [] },\n        modalVisible: false,\n        modalReport: \"\"\n    }\n\n    componentDidMount() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"NonLabExamReport\");\n                parser.mappings = [{ \"key\": \"全部類別\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson ExamReportNonLab OK \" + JSON.stringify(parser))\n                this.setState({\n                    parser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    Inputvaluesearch = (event) => {\n        this.setState({ InputMode: event.target.value })\n    }\n\n    onChangeState = (value) => {\n        this.setState({ StateMode: value })\n    }\n\n    onChangeClass = (value) => {\n        this.setState({ ClassMode: value })\n    }\n\n    showModal = (report) => {\n        console.log(\"showModal :\" + JSON.stringify(report))\n        this.setState({\n            modalVisible: true,\n            modalReport: report\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    render() {\n        // var statetime = {\n        //     \"Starttime\": (+new Date()),\n        //     \"Endtime\": (+new Date())\n        // }\n        // const datearray = []\n        const { Option } = Select;\n        // function onChange(value, dateString) {\n        //     statetime.Starttime = (+new Date(dateString[0]))\n        //     statetime.Endtime = (+new Date(dateString[1]))\n        //     datearray.push(statetime.Starttime)\n        //     datearray.push(statetime.Endtime)\n        // }\n        // function Inputchange() {\n        //     const value = {\n        //         \"date\": datearray,\n        //         \"keyword\": document.getElementById(\"keywordsearch\").value\n        //     }\n        //     console.log(value)\n        // }\n        const { PickerDateRange, ORDLIST, RESSECT } = this.props\n        const { modalVisible, modalReport } = this.state\n        const showModal = this.showModal\n        const handleOk = this.handleOk\n        const handleCancel = this.handleCancel\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>報告清單</t2>\n                </div>\n                <div style={{ display: 'grid', gridTemplateColumns: \"130px 130px auto\", gridColumnGap: \"5px\", marginTop: \"10px\" }}>\n                    <Select defaultValue={this.state.ClassMode} placeholder=\"選擇檢驗類別\" style={{ width: 120 }} onChange={this.onChangeClass}>\n                        {this.state.parser.mappings.map((mapping, index) => {\n                            return <Option key={index} value={mapping.sample ? mapping.key + \"-\" + mapping.sample : mapping.key}>{mapping.sample ? mapping.key + \"-\" + mapping.sample : mapping.key}</Option>\n                        })}\n                    </Select>\n                    <Select defaultValue={this.state.StateMode} placeholder=\"選擇項目狀態\" style={{ width: 120 }} onChange={this.onChangeState}>\n                        <Option value={0}>全部狀態</Option>\n                        <Option value={1}>已開單</Option>\n                        <Option value={2}>已簽收</Option>\n                        <Option value={3}>已發報告</Option>\n                    </Select>\n                    <Input id=\"keywordsearch\" placeholder=\"輸入關鍵字\" onChange={this.Inputvaluesearch} />\n                    {/* <div onClick={() => this.Inputvaluesearch()} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <img src={searchlogo} alt=\"searchlogo\" />\n                    </div> */}\n                </div>\n                <Examnonlabviewtable PickerDateRange={PickerDateRange} ORDLIST={ORDLIST} RESSECT={RESSECT} selectedClass={this.state.ClassMode} parser={this.state.parser} StateMode={this.state.StateMode} InputMode={this.state.InputMode} visible={modalVisible} showModal={showModal} handleOk={handleOk} handleCancel={handleCancel}></Examnonlabviewtable>\n                <Modal\n                    title={\"檢驗結果\"}\n                    visible={modalVisible}\n                    onOk={handleOk}\n                    onCancel={handleCancel}\n                    width={1000}\n                    footer={null}>\n                    <InsReportModal report={modalReport}></InsReportModal>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Nonlabview\n","import React, { Component } from 'react';\nimport Labview from './ExamLabview'\nimport { DatePicker, Button } from 'antd';\nimport './ExamReport.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport Nonlabview from './NonLabview'\nimport locale from 'antd/es/date-picker/locale/zh_TW';\n// import * as RegularData from '../../Data/RegularData'\n\nclass Examreport extends Component {\n    state = {\n        selectdata: 0,\n        selectTitle: '',\n        PickerDateRange: [moment(moment().subtract(6, 'days').format('YYYYMMDD')),\n        moment(moment().format('YYYYMMDD'))],\n        RESDGLU1: [], //累積報告\n        RESLAB02: [], //累積報告\n        RESLAB01: [],  //累積報告\n        RESDBGAS: [],  //累積報告\n        RESLAB0C: [],//累積報告\n        ORDLIST: [],\n        RESSECT: []\n    }\n    constructor(props) {\n        super(props)\n        this.PickerDateRangeChange = this.PickerDateRangeChange.bind(this)\n    }\n\n    SelectDataList() {\n        function vallofnull(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"\"\n            }\n            return value.toString().trim()\n        }\n        const DateRange = this.state.PickerDateRange\n        console.log(`show DataRange : ${DateRange}`)\n        const selectData = this.state.selectdata\n        const st_timestamp = DateRange[0].valueOf()\n        const et_timestamp = DateRange[1].valueOf() + (24 * 60 * 60 * 1000)\n        // const { PickerDateRange, RESLAB02, RESDGLU1, RESLAB01, RESDBGAS, RESLAB0C, ORDLIST, RESSECT } = this.props\n        const RESLAB02 = this.state.RESLAB02\n        const RESDGLU1 = this.state.RESDGLU1\n        const RESLAB01 = this.state.RESLAB01\n        const RESDBGAS = this.state.RESDBGAS\n        const RESLAB0C = this.state.RESLAB0C\n\n\n        var CellData = []\n        console.log(selectData, RESLAB02, RESDGLU1, RESLAB01, RESDBGAS)\n        if (selectData === 0) { // CBC\n            for (let index = 0; index < RESLAB02.length; index++) {\n                const element = RESLAB02[index];\n                const WBC = vallofnull(element.RSV01)\n                const Band = vallofnull(element.RSV13)\n                const Seq = vallofnull(element.RSV14)\n                const Lym = vallofnull(element.RSV15)\n                const Hb = vallofnull(element.RSV03)\n                const Hct = vallofnull(element.RSV04)\n                const Plt = vallofnull(element.RSV09)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                console.log(\"time \" + time + \" st_timestamp \" + st_timestamp + \" et_timestamp \" + et_timestamp)\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [WBC, Band, Seq, Lym, Hb, Hct, Plt]\n                    })\n                }\n            }\n            console.log(\"CellData => \" + JSON.stringify(CellData))\n            return CellData\n        }\n        if (selectData === 1) { // 電解質與腎\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const Na = vallofnull(element.RSV13)\n                const K = vallofnull(element.RSV14)\n                const Cl = vallofnull(element.RSV15)\n                const CaFree = \"No\"\n                const CaTotal = vallofnull(element.RSV03)\n                const Mg = \"No\"\n                const P = vallofnull(element.RSV17)\n                const BUN = vallofnull(element.RSV05)\n                const Cr = vallofnull(element.RSV06)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [Na, K, Cl, CaFree, CaTotal, Mg, P, BUN, Cr]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 2) { // 肝功能\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const Alt = vallofnull(element.RSV11)\n                const AST = vallofnull(element.RSV12)\n                const TBil = vallofnull(element.RSV08)\n                const DBil = vallofnull(element.RSV25)\n                const rGGT = vallofnull(element.RSV19)\n                const Alkp = vallofnull(element.RSV09)\n                const Alb = vallofnull(element.RSV02)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [Alt, AST, TBil, DBil, rGGT, Alkp, Alb]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 3) { // 早產兒\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const Iron = vallofnull(element.RSV26)\n                const TIBC = vallofnull(element.RSV28)\n                const FeSat = parseInt(vallofnull(element.RSV26)) / parseInt(vallofnull(element.RSV26))\n                const LDH = vallofnull(element.RSV10)\n                const Alkp = vallofnull(element.RSV9)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [Iron, TIBC, FeSat, LDH, Alkp]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 4) { // 心臟\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const ck = vallofnull(element.RSV18)\n                const ckMB = vallofnull(element.RSV28)\n                const BNP = \"No\"\n                const Troponinl = vallofnull(element.RSV30)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [ck, ckMB, BNP, Troponinl]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 5) { // 凝血\n            for (let index = 0; index < RESLAB02.length; index++) {\n                const element = RESLAB02[index];\n                const PT = vallofnull(element.RSV10)\n                const APTT = vallofnull(element.RSV11)\n                const INR = vallofnull(element.RSV12)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [PT, APTT, INR]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 6) { // GAS(Acid-Base)\n            for (let index = 0; index < RESDBGAS.length; index++) {\n                const element = RESDBGAS[index];\n                const PH = vallofnull(element.SS07)\n                const pCO2 = vallofnull(element.SS06)\n                const pO2 = vallofnull(element.SS08)\n                const HCO3 = vallofnull(element.SS04)\n                const BE = vallofnull(element.SS01)\n                const Sample = \"No\"\n                const O2Sat = vallofnull(element.SS05)\n                const FiO2 = vallofnull(element.SS03)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [PH, pCO2, pO2, HCO3, BE, Sample, O2Sat, FiO2]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 7) { // GAS(Additionary)\n            for (let index = 0; index < RESDBGAS.length; index++) {\n                const element = RESDBGAS[index];\n                const Hb = vallofnull(element.SS11)\n                const Hct = vallofnull(element.SS12)\n                const Na = vallofnull(element.SS13)\n                const K = vallofnull(element.SS14)\n                const CaFree = vallofnull(element.SS15)\n                const Bun = vallofnull(element.SS16)\n                const Cr = vallofnull(element.SS17)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [Hb, Hct, Na, K, CaFree, Bun, Cr]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 8) { // Glucose\n            for (let index = 0; index < RESDGLU1.length; index++) {\n                const element = RESDGLU1[index]\n                const GluBeside = vallofnull(element.GLUFAST)\n                const GluLab = vallofnull(element.RSV16)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [GluBeside, GluLab]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 9) { // 黃疸\n            for (let index = 0; index < RESLAB0C.length; index++) {\n                const element = RESLAB0C[index]\n                const TCB = vallofnull(element.RSV01)\n                const MicroBil = vallofnull(element.RSV02)\n                const TBil = vallofnull(element.RSV03)\n                const DBil = vallofnull(element.RSV04)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [TCB, MicroBil, TBil, DBil]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 10) { // 感染指數\n            for (let index = 0; index < RESLAB02.length; index++) {\n                const elementOne = RESLAB02[index]\n                const elementTwo = RESLAB01[index]\n                const WBC = vallofnull(elementOne.RSV01)\n                const Band = vallofnull(elementOne.RSV13)\n                const Seg = vallofnull(elementOne.RSV14)\n                const Lym = vallofnull(elementOne.RSV15)\n                const PCT = \"NO\"\n                const CRP = vallofnull(elementTwo.RSV32)\n                const time = moment((elementOne.ORRESDT.toString() + elementOne.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((elementOne.ORRESDT.toString() + elementOne.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [WBC, Band, Seg, Lym, PCT, CRP]\n                    })\n                }\n            }\n            return CellData\n        }\n        return null\n\n    }\n\n    componentDidMount() {\n        this.APIUpdate(this.state.PickerDateRange)\n        this.SelectDataList = this.SelectDataList.bind(this)\n    }\n\n    // ChangeRangePicker(dates, datestrings) {\n\n    // }\n    APIUpdate(DateRange) {\n        console.log(DateRange)\n        function selectMonthInterval(PickerDate) {\n            const timestampInterval = new Date().getTime() - new Date(PickerDate).getTime()\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        const { caseinfo } = this.props\n\n        const st = DateRange[0].format(\"YYYY-MM-DD\")\n        const datePick = DateRange[0].format('YYYY/MM/DD')\n        console.log(DateRange, st, datePick)\n        // const TRANSDate = moment(caseinfo.TRANSINDT, 'YYYYMMDD').format('YYYY-MM-DD')\n        const MonthInterval = selectMonthInterval(datePick)\n        const RESDGLU1 = ApiProvider.getStoredProcedureRESDGLU1(caseinfo.HISID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESLAB02 = ApiProvider.getStoredProcedureRESLAB02(caseinfo.HISID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESLAB01 = ApiProvider.getStoredProcedureRESLAB01(caseinfo.HISID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESDBGAS = ApiProvider.getStoredProcedureRESDBGAS(caseinfo.HISID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESLAB0C = ApiProvider.getStoredProcedureRESLAB0C(caseinfo.HISID, st)\n            .then(data => {\n                console.log(data.data)\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const ORDLIST = ApiProvider.getStoredProcedureORDLIST(caseinfo.HISID, st, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                console.log(data.data)\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        const RESSECT = ApiProvider.getStoredProcedureRESSECT(caseinfo.HISID, MonthInterval, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        Promise.all([RESDGLU1, RESLAB02, RESLAB01, RESDBGAS, RESLAB0C, ORDLIST, RESSECT]).then(result => {\n            console.log(result)\n            this.setState({\n                RESDGLU1: result[0], //累積報告\n                RESLAB02: result[1],  //累積報告\n                RESLAB01: result[2],  //累積報告\n                RESDBGAS: result[3],  //累積報告\n                RESLAB0C: result[4],  //累積報告\n                ORDLIST: result[5],\n                RESSECT: result[6],\n            })\n        })\n    }\n    callbackDateFunction = (select) => {\n        // console.log(select)\n        this.setState({\n            selectdata: select\n        })\n    }\n\n    callbackTitleFunction = (select) => {\n        // console.log(select)\n        this.setState({\n            selectTitle: select\n        })\n    }\n\n    PickerDateRangeChange(date, dateString) {\n        console.log(date)\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDateRange } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const st = PickerDateRange[0].valueOf()\n        const et = PickerDateRange[1].valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                if (bronDate <= (st - day)) {\n                    const bTime = [moment(moment(st - day).format('YYYYMMDD')), moment(moment(et - day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(bTime)\n                }\n                break;\n            case 'N':\n                const nTime = [moment(moment().subtract(6, 'days').format('YYYYMMDD')), moment(moment().format('YYYYMMDD'))]\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                if (aTemp >= (et + day)) {\n                    const aTime = [moment(moment(st + day).format('YYYYMMDD')), moment(moment(et + day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(aTime)\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const momentDate = this.state.PickerDateRange\n        let data = this.SelectDataList()\n\n        data = data.sort((a, b) => {\n            let tempTimeA = moment(a.Time, 'YYYY-MM-DDHHmmss').valueOf()\n            let tempTimeB = moment(b.Time, 'YYYY-MM-DDHHmmss').valueOf()\n            return tempTimeA < tempTimeB ? 1 : -1\n        })\n\n        console.log(\"SelectDataList => \" + data)\n        const { RangePicker } = DatePicker\n        const PickerDateRange = [momentDate[0].valueOf(), momentDate[1].valueOf()]\n\n        return (\n            <div className='examreportlayout'>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"250px 120px\", gridColumnGap: \"5px\", marginBottom: \"5px\" }}>\n                    <RangePicker\n                        // defaultValue={this.state.PickerDateRange}\n                        value={this.state.PickerDateRange}\n                        format={\"YYYY/MM/DD\"}\n                        allowClear={false}\n                        locale={locale}\n                        disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                        // toString={(dates, datestrings) => { this.setState({ RangePicker: dates }) }}\n                        onChange={this.PickerDateRangeChange}\n                    />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" }}>\n                    <Labview selectvalue={this.state.selectdata}\n                        parentDateCallback={this.callbackDateFunction}\n                        DataList={data}\n                        SelectStatus={this.state.selectdata}\n                        PickerDateRange={PickerDateRange}\n                        parentTitleCallback={this.callbackTitleFunction}>\n                    </Labview>\n                    <Nonlabview ORDLIST={this.state.ORDLIST} RESSECT={this.state.RESSECT} caseinfo={caseinfo} PickerDateRange={PickerDateRange}></Nonlabview>\n                </div>\n                {/* {this.charttableview()} */}\n                <div style={{ display: \"flex\", justifyContent: 'center', alignItems: 'center' }}>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Examreport;\n","import React, { Component } from 'react';\nimport { DatePicker, Button } from 'antd';\nimport Prescriptionordertable from '../Prescriptionorder/Prescriptionorder'\nimport Treatmentorderlayout from '../Treatmentorder/Treatmentorder'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass Orderview extends Component {\n    state = {\n        UDORDER0: [],\n        TRTMNTQ1: [],\n        PickerDateRange: [moment(moment().subtract(6, 'days').format('YYYYMMDD')),\n        moment(moment().format('YYYYMMDD'))],\n    }\n    componentDidMount() {\n        this.apidata()\n    }\n    apidata() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID.toString().trim()\n        const CID = caseinfo.CASEID.toString().trim()\n        const UDORDER0 = ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureUDORDER0 NG \" + JSON.stringify(err))\n            });\n        const TRTMNTQ1 = ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureTRTMNTQ1 NG \" + JSON.stringify(err))\n            });\n        Promise.all([UDORDER0, TRTMNTQ1]).then(result => {\n            console.log(result)\n            this.setState({\n                UDORDER0: result[0],\n                TRTMNTQ1: result[1]\n            })\n        })\n    }\n\n    PickerDateRangeChange = (date, dateString) => {\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDateRange } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const st = PickerDateRange[0].valueOf()\n        const et = PickerDateRange[1].valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                if (bronDate <= (st - day)) {\n                    const bTime = [moment(moment(st - day).format('YYYYMMDD')), moment(moment(et - day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(bTime)\n                }\n                break;\n            case 'N':\n                const nTime = [moment(moment().subtract(6, 'days').format('YYYYMMDD')), moment(moment().format('YYYYMMDD'))]\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                if (aTemp >= (et + day)) {\n                    const aTime = [moment(moment(st + day).format('YYYYMMDD')), moment(moment(et + day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(aTime)\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const udata = this.state.UDORDER0\n        const tdata = this.state.TRTMNTQ1\n        const momentDate = this.state.PickerDateRange\n\n        const { RangePicker } = DatePicker\n        const PickerDateRange = [momentDate[0].valueOf(), momentDate[1].valueOf()]\n        if (udata.length === 0 || tdata.length === 0) {\n            //Loading\n            return null\n        }\n        // console.log(udata)\n        // console.log(PickerDateRange)\n\n        return (\n            <div>\n                <div style={{ maxHeight: '75vh', overflowY: 'auto' }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"250px 120px\", gridColumnGap: \"5px\", marginBottom: \"5px\" }}>\n                        <RangePicker\n                            value={this.state.PickerDateRange}\n                            format={\"YYYY/MM/DD\"}\n                            allowClear={false}\n                            locale={\"zh_TW\"}\n                            onChange={this.PickerDateRangeChange}\n                            disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                        />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" }}>\n                        <Prescriptionordertable PickerDateRange={PickerDateRange} UDORDER0={udata} searchbar={true} caseinfo={caseinfo}></Prescriptionordertable>\n                        <Treatmentorderlayout PickerDateRange={PickerDateRange} TRTMNT01={tdata} searchbar={true} caseinfo={caseinfo}></Treatmentorderlayout>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Orderview;\n","import React, { Component } from 'react';\nimport { Select } from 'antd';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n// import Notelist from './Notelist'\n// import searchlogo from '../../Image/svg/Search.svg'\n// import { Button } from 'antd'\nimport * as Wardstate from '../../Function/Wardstate'\nimport './Note.scss'\n// import X2JS from 'x2js';\n// import * as PR from '../../Resource/PRGTXQRY'\n\n\nvar dataRange = [];\nclass Noteview extends Component {\n    state = {\n        StartTime: null,\n        EndTime: null,\n        display_data: null,\n        context: null,\n        contentdisplay: false,\n\n\n        ADMDISP: [],\n        ADMLIST: [],\n        DISLIST: [],\n        DISDISP: [],\n        DTAROTQ4: [],\n        DTASOAPQ: [],\n        PCASELIST: [],\n        ERDISP: [],\n        PRGTXQRY: [],\n        PRGTXQRYDIS: [],\n        CPSLIST: [],\n        CPSDISP: [],\n        QPNOT: [],\n        QPNOTDIS: [],\n        OPSORAQ1: [],\n        OPSORAQ2: [],\n        SelectClass: 0\n\n    }\n    componentDidMount() {\n        this.apiData()\n    }\n\n    SelectADMDISP(ADISTNO, ADICASE) {\n        console.log(ADISTNO, ADICASE)\n        ApiProvider.getStoredProcedureADMDISP(ADISTNO, ADICASE)\n            .then(data => {\n                // console.log(data.data)\n                this.setState({\n                    ADMDISP: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureADMDISP NG \" + JSON.stringify(err));\n            });\n    }\n    SelectDISDISP(CID) {\n        // console.log(ADISTNO, ADICASE)\n        const { caseinfo } = this.props\n        ApiProvider.getStoredProcedureDISDISP(caseinfo.HISID, CID)\n            .then(data => {\n                // console.log(data.data)\n                this.setState({\n                    DISDISP: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureADMDISP NG \" + JSON.stringify(err));\n            });\n    }\n\n    SelectERDISP(CID) {\n        const { caseinfo } = this.props\n        ApiProvider.getStoredProcedureERDISP(caseinfo.HISID, CID)\n            .then(data => {\n                this.setState({\n                    ERDISP: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n    }\n    SelectDTASOAPQ(date, dpt) {\n        const { caseinfo } = this.props\n        //門診紀錄內容 需要時間和醫生編號\n        ApiProvider.getStoredProcedureDTASOAPQ(caseinfo.HISID, date, dpt)\n            .then(data => {\n                this.setState({\n                    DTASOAPQ: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureDTASOAPQ NG \" + JSON.stringify(err));\n            });\n    }\n    SelectPRGTXQRYDIS(List) {\n        this.setState({\n            PRGTXQRYDIS: List\n        })\n    }\n    SelectCPSDISP(HID, CID, SEQ) {\n        ApiProvider.getStoredProcedureCPSDISP(HID, CID, SEQ)\n            .then(data => {\n                console.log(data.data)\n                this.setState({\n                    CPSDISP: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n    }\n    SelectQPNOTDIS(data) {\n        this.setState({\n            QPNOTDIS: data\n        })\n    }\n\n    SelectOPSORAQ1(OPABGNDT, OPATIMES) {\n        const { caseinfo } = this.props\n        //門診紀錄內容 需要時間和醫生編號\n        ApiProvider.getStoredProcedureOPSORAQ2(caseinfo.HISID, OPABGNDT, OPATIMES)\n            .then(data => {\n                this.setState({\n                    OPSORAQ2: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureDTASOAPQ NG \" + JSON.stringify(err));\n            });\n    }\n    apiData() {\n        const { caseinfo } = this.props\n        //入院並摘\n        const ADMLIST = ApiProvider.getStoredProcedureADMLIST(caseinfo.HISID, \"DOC3924B\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureADMLIST NG \" + JSON.stringify(err));\n            });\n        //出院並摘\n        const DISLIST = ApiProvider.getStoredProcedureDISLIST(caseinfo.HISID, \"DOC3924B\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureDISLIST NG \" + JSON.stringify(err));\n            });\n\n        //門診紀錄清單\n        const DTAROTQ4 = ApiProvider.getStoredProcedureDTAROTQ4(caseinfo.HISID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureDTAROTQ4 NG \" + JSON.stringify(err));\n            });\n\n\n        //急診紀錄清單\n        const PCASELIST = ApiProvider.getStoredProcedurePCASELIST(caseinfo.HISID, \"DOC3924B\", \"E\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n\n\n\n\n        const CPSLIST = ApiProvider.getStoredProcedureCPSLIST(caseinfo.HISID, \"DOC3924B\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n\n        function nullvalue(value) {\n            if (value === null) {\n                return \"911\"\n            }\n            console.log(value)\n            const PRGTXQRYDATE = moment(value.PLOCDT, 'YYYYMMDD').format(\"YYYYMM\")\n            const D = PRGTXQRYDATE.substr(3, 3)\n            return D\n        }\n\n        const LIVEPLOC = nullvalue(caseinfo.PLOCSTART)\n        console.log(LIVEPLOC)\n        const PRGTXQRY = ApiProvider.getStoredProcedurePRGTXQRY(caseinfo.HISID, LIVEPLOC, caseinfo.CASEID)\n            .then(data => {\n                console.log(data.data)\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n        const transdt = caseinfo.TRANSINDT\n        const ST = moment(transdt, \"YYYYMMDD\").format(\"YYYYMMDDHHmm\")\n        const ET = moment().format(\"YYYYMMDDHHmm\")\n        console.log(caseinfo.CASEID, ST, ET)\n        const QPNOT = ApiProvider.getQPNOT(caseinfo.CASEID, ST, ET)\n            .then(data => {\n                const parseSource = Wardstate.XM2JSON(data.data)\n                return parseSource\n            })\n            .catch(err => { console.log(err) })\n        const OPSORAQ1 = ApiProvider.getStoredProcedureOPSORAQ1(caseinfo.HISID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => { console.log(err) })\n        Promise.all([ADMLIST, DISLIST, DTAROTQ4, PCASELIST, PRGTXQRY, CPSLIST, QPNOT, OPSORAQ1]).then(result => {\n            console.log(result)\n            this.setState({\n                ADMLIST: result[0],\n                DISLIST: result[1],\n                DTAROTQ4: result[2],\n                PCASELIST: result[3],\n                PRGTXQRY: result[4],\n                CPSLIST: result[5],\n                QPNOT: result[6],\n                OPSORAQ1: result[7]\n            })\n        })\n    }\n\n\n\n    callbackFunction = (item_array) => {\n        console.log(item_array)\n        this.setState(\n            {\n                display_data: item_array.NoteTime,\n                context: item_array.Content,\n                contentdisplay: true\n            }\n        )\n\n    }\n    handleChange = (value) => {\n\n        console.log(`selected ${value}`);\n        this.setState({\n            SelectClass: value,\n        });\n\n    }\n    onClickSearch() {\n        if (dataRange.length !== 0) {\n            this.setState(\n                {\n                    StartTime: dataRange[0],\n                    EndTime: dataRange[1]\n\n                }\n            )\n        }\n\n    }\n    onDateChange = (date, dateString) => {\n        console.log(date, dateString);\n    }\n    NotecontrolBar() {\n        const select_data = [\n            { item: \"入院病摘\", value: 0 },\n            { item: \"出院病摘\", value: 1 },\n            { item: \"門診紀錄\", value: 2 },\n            { item: \"急診紀錄\", value: 3 },\n            { item: \"病程紀錄\", value: 4 },\n            { item: \"會診紀錄\", value: 5 },\n            { item: \"護理紀錄\", value: 6 },\n            { item: \"手術記錄\", value: 7 }\n        ]\n        // const { RangePicker } = DatePicker;\n        const { Option } = Select;\n        const select_option = select_data.map((info, index) =>\n            <Option key={index} value={info.value}>{info.item}</Option>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"200px 220px 25px\", marginBottom: \"10px\" }}>\n                <Select defaultValue={0} style={{ width: 190 }} onChange={this.handleChange}>\n                    {select_option}\n                </Select>\n                {/* <RangePicker id=\"note_Range\" placeholder={[\"請輸入日期\", \"請輸入日期\"]} onChange={this.onDateChange} allowClear={false} />\n                <div onClick={() => this.onClickSearch()} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <img src={searchlogo} alt=\"searchlogo\" />\n                </div> */}\n            </div>\n        );\n    }\n\n    renderContentArray() {\n        const source = this.state.SelectClass\n        if (source === 0) {\n            const data = this.state.ADMDISP\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const fakeADMData = data\n                return fakeADMData.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{row.ADMDATA}</div>);\n\n            }\n        }\n        if (source === 1) {\n            const data = this.state.DISDISP\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const fakeADMData = data\n                return fakeADMData.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{row[\"1\"]}</div>);\n            }\n\n        }\n        if (source === 2) {\n\n            const data = this.state.DTASOAPQ\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                let textType = [];\n                let textObj = [];\n                for (var i = 0; i < data.length; i++) {\n                    console.log(data[i])\n                    //find type\n                    const type = data[i].DTSOAPTY;\n                    const lines = data[i].DTSOAPSQ;\n                    const content = data[i].DTSOAPTX;\n                    if (textType.indexOf(type) === -1) {\n                        //new type\n                        const newObj = {\n                            \"type\": type,\n                            \"lines\": lines,\n                            \"content\": content\n                        }\n                        textObj.push(newObj);\n                        textType.push(type);\n                    } else {\n                        //old type\n                        const idx = textObj.findIndex(item => item.type === type)\n                        textObj[idx].lines = lines;\n                        textObj[idx].content = textObj[idx].content + \"\\n\" + content\n                    }\n                }\n                let textResult = [];\n                for (let index = 0; index < textObj.length; index++) {\n                    textResult.push(textObj[index].type);\n                    textResult.push(textObj[index].content);\n                    textResult.push(\"\\n\");\n                }\n\n                return textResult.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{row}</div>);\n\n            }\n\n        }\n        if (source === 3) {\n            const data = this.state.ERDISP\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const fakeADMData = data\n                return fakeADMData.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{JSON.stringify(row, null, '\\t')}</div>);\n            }\n\n        }\n        if (source === 4) {\n            const data = this.state.PRGTXQRYDIS\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                var newList = []\n                console.log(data)\n                for (let index = 0; index < 5; index++) {\n                    if (index === 0) {\n                        const dataFilter = data.filter(function (info, index, arr) {\n                            return info.PRGTYPE.toString().trim() === \"D\"\n                        })\n                        if (dataFilter.length !== 0) {\n                            newList.push(dataFilter[0])\n                        }\n                    }\n\n                    if (index === 1) {\n                        const dataFilter = data.filter(function (info, index, arr) {\n                            return info.PRGTYPE.toString().trim() === \"S\"\n                        })\n                        if (dataFilter.length !== 0) {\n                            newList.push(dataFilter[0])\n                        }\n                    }\n\n                    if (index === 2) {\n                        const dataFilter = data.filter(function (info, index, arr) {\n                            return info.PRGTYPE.toString().trim() === \"O\"\n                        })\n                        if (dataFilter.length !== 0) {\n                            newList.push(dataFilter[0])\n                        }\n                    }\n\n                    if (index === 3) {\n                        const dataFilter = data.filter(function (info, index, arr) {\n                            return info.PRGTYPE.toString().trim() === \"A\"\n                        })\n                        if (dataFilter.length !== 0) {\n                            newList.push(dataFilter[0])\n                        }\n                    }\n\n                    if (index === 4) {\n                        const dataFilter = data.filter(function (info, index, arr) {\n                            return info.PRGTYPE.toString().trim() === \"P\"\n                        })\n                        if (dataFilter.length !== 0) {\n                            newList.push(dataFilter[0])\n                        }\n                    }\n\n                }\n                console.log(newList)\n                const dataMap = newList.map(function (info, index, arr) {\n                    return (\n                        <div key={index} style={{ marginBottom: \"10px\" }}>\n                            <div style={{ whiteSpace: \"pre-wrap\" }}>{info.PRGTYPE}</div>\n                            <div style={{ whiteSpace: \"pre-wrap\" }}>{info.PRGTX}</div>\n                        </div>\n                    );\n                })\n                return dataMap\n            }\n\n        }\n        if (source === 5) {\n            const data = this.state.CPSDISP\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const fakeADMData = data\n                return fakeADMData.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{row[\"1\"]}</div>);\n            }\n\n        }\n        if (source === 6) {\n            const data = this.state.QPNOTDIS\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                // Time: moment(v.rec_dat.toString() + v.rec_tim.toString(), \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\"),\n                // special: v.special,\n                // a: v.cre_nam,\n                // b: v.pro_not\n                const fakeADMData = data.map(function (info, index, arr) {\n                    const time = info.Time\n                    const cre_nam = info.cre_nam\n                    const pro_not = info.pro_not\n                    return (\n                        <div style={{ marginBottom: \"10px\" }}>\n                            <div>{time}</div>\n                            <div>{cre_nam === undefined ? \"--\" : cre_nam}</div>\n                            <div>{pro_not === undefined ? \"--\" : pro_not}</div>\n                        </div>\n                    );\n                })\n                return fakeADMData\n            }\n\n        }\n        if (source === 7) {\n            const data = this.state.OPSORAQ2\n            console.log(data)\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const fakeADMData = data\n                return fakeADMData.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{row.CONTENT}</div>);\n            }\n\n        }\n        else {\n            return null;\n\n        }\n\n\n\n    }\n    switchListRender() {\n        function groupfirstarray(arrayList) {\n            var result = arrayList.filter(function (value, index, arr) {\n                const res = arr.map(function (value, index, arr) {\n                    return moment(value.PRGDT.toString() + value.PRGTM.toString(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n                })\n                return res.indexOf(moment(value.PRGDT.toString() + value.PRGTM.toString(), \"YYYY-MM-DDHH:mm:ss\").valueOf()) === index;\n            });\n            var arrList = []\n            for (let index = 0; index < result.length; index++) {\n                const element = result[index];\n                const comparevalue = moment(element.PRGDT.toString() + element.PRGTM.toString(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n                const filterarray = arrayList.filter(function (value, index, arr) {\n                    return moment(value.PRGDT.toString() + value.PRGTM.toString(), \"YYYY-MM-DDHH:mm:ss\").valueOf() === comparevalue\n                })\n                arrList.push(filterarray)\n            }\n            return arrList\n        }\n        function grouparray(arrayList) {\n            var result = arrayList.filter(function (value, index, arr) {\n                const res = arr.map(function (value, index, arr) {\n                    return moment(value.rec_dat.toString(), \"YYYYMMDD\").valueOf()\n                })\n                return res.indexOf(moment(value.rec_dat.toString(), \"YYYYMMDD\").valueOf()) === index;\n            });\n            var arrList = []\n            for (let index = 0; index < result.length; index++) {\n                const element = result[index];\n                const comparevalue = moment(element.rec_dat.toString(), \"YYYYMMDD\").valueOf()\n                const filterarray = arrayList.filter(function (value, index, arr) {\n                    return moment(value.rec_dat.toString(), \"YYYYMMDD\").valueOf() === comparevalue\n                })\n                arrList.push(filterarray)\n            }\n            return arrList\n        }\n        const select = this.state.SelectClass\n        if (select === 0) {\n            const data = this.state.ADMLIST\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    const HID = object.ADISTNO.toString().trim()\n                    const CID = object.ADICASE.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", cursor: \"pointer\", textAlign: \"center\" }} onClick={() => this.SelectADMDISP(HID, CID)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.ADIDATE.toString().trim(), \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</div>\n                            <div style={{ fontSize: \"14px\" }}>{object.ADICASE}</div>\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 1) {\n            const data = this.state.DISLIST\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    const CID = object.DCASENO.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", cursor: \"pointer\" }} onClick={() => this.SelectDISDISP(CID)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.DDATEIN.toString().trim(), \"YYYY-MM-DD\").format(\"YYYY/MM/DD\")}</div>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.DDATEOUT.toString().trim(), \"YYYY-MM-DD\").format(\"YYYY/MM/DD\")}</div>\n                            {/* <div style={{ fontSize: \"14px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 2) {\n            const data = this.state.DTAROTQ4\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    const DPT = object.DTPDEPT.toString().trim()\n                    const DTPDATE = object.DTPDATE.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\", cursor: \"pointer\" }} onClick={() => this.SelectDTASOAPQ(DTPDATE, DPT)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.DTPDATE.toString().trim(), \"YYYY-MM-DD\").format(\"YYYY/MM/DD\")}</div>\n                            <div style={{ fontSize: \"14px\" }}>{object.DTPTIME.toString().trim()}</div>\n                            <div style={{ fontSize: \"14px\" }}>{object.DTPDEPT.toString().trim()}</div>\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 3) {\n            const data = this.state.PCASELIST\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    const CID = object.PCASENO.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\", cursor: \"pointer\" }} onClick={() => this.SelectERDISP(CID)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.PDISDT.toString().trim(), \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</div>\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 4) {\n            const data = groupfirstarray(this.state.PRGTXQRY)\n            console.log(data)\n            // const data = groupfirstarray(PR.data)\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const List = data.map(function (info, index, arr) {\n                    const mapList = info.map(function (v, i, a) {\n                        return {\n                            PRGTX: v.PRGTX,\n                            PRGTYPE: v.PRGTYPE\n                        }\n                    })\n                    return {\n                        List: mapList,\n                        DT: info[0].PRGDT,\n                        TN: info[0].PRGTM\n                    }\n                })\n                const cellRander = List.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\", cursor: \"pointer\" }} onClick={() => this.SelectPRGTXQRYDIS(object.List)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.DT.toString() + object.TN.toString(), \"YYYY-MM-DD HH:mm:ss\").format(\"MM/DD HH:mm\")}</div>\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 5) {\n            const data = this.state.CPSLIST\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    const CID = object.CPSCASE.toString().trim()\n                    const SEQ = object.CPSOSEQ.toString().trim()\n                    const HID = object.CPSHIST.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\", cursor: \"pointer\" }} onClick={() => this.SelectCPSDISP(HID, CID, SEQ)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.CPSENTDT.toString().trim(), \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</div>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.CPSENTTM.toString().trim(), \"HHmm\").format(\"HH:mm\")}</div>\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 6) {\n            const data = this.state.QPNOT\n            const List = grouparray(data)\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const mapList = List.map(function (info, index, arr) {\n                    console.log(info)\n                    const mapList = info.map(function (v, i, a) {\n                        return {\n                            Time: moment(v.rec_dat.toString() + v.rec_tim.toString(), \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\"),\n                            cre_nam: v.cre_nam,\n                            pro_not: v.pro_not\n                        }\n                    })\n                    return {\n                        List: mapList,\n                        DT: info[0].rec_dat.toString().trim()\n                    }\n                })\n                const cellRander = mapList.map((object, index, arr) => {\n                    console.log(object)\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\", cursor: \"pointer\" }} onClick={() => this.SelectQPNOTDIS(object.List)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.DT, \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</div>\n                            {/* 檢查 */}\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 7) {\n            const data = this.state.OPSORAQ1\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    // const DIS1 = object\n                    const OPABGNDT = object.OPABGNDT.toString().trim()\n                    const OPACOD1 = object.OPACOD1.toString().trim()\n                    const OPAMANNM = object.OPAMANNM.toString().trim()\n                    const OPATIMES = object.OPATIMES.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\", cursor: \"pointer\" }} onClick={() => this.SelectOPSORAQ1(OPABGNDT, OPATIMES)}>\n                            <div style={{ fontSize: \"14px\" }}>{OPABGNDT}</div>\n                            <div style={{ fontSize: \"14px\" }}>{OPACOD1}</div>\n                            <div style={{ fontSize: \"14px\" }}>{OPAMANNM}</div>\n                            {/* 檢查 */}\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n    }\n    render() {\n        const control = this.NotecontrolBar()\n        const renderContentArray = this.renderContentArray()\n        const listRender = this.switchListRender()\n        return (\n            <div className='Notelayout'>\n                {control}\n                <div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 7fr\", gridGap: \"10px\" }}>\n                        <div>\n                            <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>開立日期</t2>\n                            </div>\n                            <div style={{ padding: \"10px\", maxHeight: '700px', overflow: \"auto\" }}>\n                                {listRender}\n                            </div>\n                        </div>\n                        <div style={{ overflow: \"auto\" }}>\n                            <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>內容</t2>\n                            </div>\n                            <div style={{ maxHeight: '700px', overflow: \"auto\" }}>\n                                {renderContentArray}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Noteview;\n","import React, { Component } from 'react';\nimport { DatePicker, Button } from 'antd';\nimport GAS from '../CrossSectionView/GAS'\nimport RTbreathe from '../CrossSectionView/RTbreathe'\nimport './RTview.scss'\n// import X2JS from 'x2js';\n// import * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass RTview extends Component {\n    state = {\n        QSPE: [],\n        PickerDateRange: [moment(moment().subtract(6, 'days').format('YYYYMMDD')),\n        moment(moment().format('YYYYMMDD'))],\n    }\n    // componentDidMount() {\n    //     this.API_DATA(this.state.PickerDate)\n    // }\n    // API_DATA(Datetime) {\n    //     const xm2 = new X2JS()\n    //     const { caseinfo } = this.props\n    //     const st = moment(Datetime + (7 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n    //     const et = moment(Datetime + (31 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n    //     ApiProvider.getQSPE(caseinfo.CASEID, st, et)\n    //         .then(data => {\n    //             console.log(xm2.xml2js(data.data).outmsg.resconts.rescont)\n    //             const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n    //             console.log(parsedata)\n    //             if (Array.isArray(parsedata)) {\n    //                 this.setState({\n    //                     QSPE: parsedata\n    //                 })\n    //             }\n    //             else {\n    //                 const arr = []\n    //                 arr.push(parsedata)\n    //                 this.setState({\n    //                     QSPE: arr\n    //                 })\n    //             }\n    //         })\n    //         .catch(err => {\n    //             console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n    //         });\n    // }\n\n    PickerDateRangeChange = (date, dateString) => {\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDateRange } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n        console.log(bronDate)\n        const st = PickerDateRange[0].valueOf()\n        const et = PickerDateRange[1].valueOf()\n        console.log(bronDate,st)\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                if (bronDate <= (st - day)) {\n                    const bTime = [moment(moment(st - day)), moment(moment(et - day))]\n                    this.PickerDateRangeChange(bTime)\n                }\n                break;\n            case 'N':\n                const nTime = [moment(moment().subtract(6, 'days').format('YYYYMMDD')), moment()]\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTemp = moment(moment()).valueOf()\n                if (aTemp >= (et + day)) {\n                    const aTime = [moment(moment(st + day)), moment(moment(et + day))]\n                    this.PickerDateRangeChange(aTime)\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const { RangePicker } = DatePicker\n        const momentDate = this.state.PickerDateRange\n\n        const PickerDateRange = [momentDate[0].valueOf(), momentDate[1].valueOf()]\n\n        return (\n            <div className='rtviewlayout'>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"250px 120px\", gridColumnGap: \"5px\", marginBottom: \"5px\" }}>\n                    <RangePicker\n                        value={this.state.PickerDateRange}\n                        format={\"YYYY/MM/DD\"}\n                        allowClear={false}\n                        locale={\"zh_TW\"}\n                        onChange={this.PickerDateRangeChange}\n                        disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                    />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: '1fr 1fr', gridColumnGap: \"5px\" }}>\n                    <GAS PickerDateRange={PickerDateRange} caseinfo={caseinfo} searchbar={true} ></GAS>\n                    <RTbreathe PickerDateRange={PickerDateRange} caseinfo={caseinfo} searchbar={true} ></RTbreathe>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTview\n","import React, { Component } from 'react'\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Nurtionfeedingcell.scss'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Nurtionfeedingcell extends Component {\n    state = {\n        EditMode: false,\n        onEdit: false,\n        powerLogin: 0,\n        remark: '',\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { caseinfo, data } = this.props\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, data.ORDSEQNO, \"nurtionfeeding\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    onMouseEnter() {\n        this.setState(\n            {\n                EditMode: true\n            }\n        )\n    }\n    onMouseLeave() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    showModal = () => {\n        this.setState({\n            onEdit: true,\n        });\n    };\n\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    Moduledisplay(PName, ST) {\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": PName,\n            \"remarkId\": this.props.data.ORDSEQNO,\n            \"remark\": this.state.remark,\n            \"transinId\": this.props.caseinfo.TRANSINID,\n            \"type\": \"nurtionfeeding\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n        );\n    }\n\n    render() {\n        const { data } = this.props\n        console.log(data)\n        const startTime = moment(data.ORBGNDT.toString().trim(), \"YYYY-MM-DD\").format(\"MM/DD\")\n        const endTime = moment(data.ORENDDT.toString().trim(), \"YYYY-MM-DD\").format(\"MM/DD\")\n        const name = data.ORPROCED.toString().trim()\n\n        console.log(this.state.remark)\n\n        return (\n            <div onMouseEnter={() => this.onMouseEnter()} onMouseLeave={() => this.onMouseLeave()} style={{ position: \"relative\", height: \"100px\" }}>\n                <div className='nurtionfeedingcell' style={{ gridTemplateRows: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"1fr\" : \"1fr 1fr\"] }}>\n                    <div className='cellforstate'>\n                        <div className='celllayout'>\n                            <t3>{startTime}</t3>\n                        </div>\n                        <div className='celllayout'>\n                            <t3>{endTime}</t3>\n                        </div>\n                        <div className='celllayout'>\n                            <t3>{name}</t3>\n                        </div>\n                    </div>\n                    <div className='cellforremark' style={{ display: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"none\" : \"\"] }}>\n                        <t3>{this.state.remark}</t3>\n                    </div>\n                </div>\n                <div style={this.state.EditMode ? {\n                    display: this.state.powerLogin == 1 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", top: 0, right: 0, height: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"50px\" : \"100px\"], background: \"white\", width: \"77px\", border: \"rgba(232, 232, 232, 1) 1px solid\"\n                } : { display: \"none\" }}>\n                    < div onClick={() => this.showModal()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }} >\n                        <img src={chooseedit} alt='chooseedit'></img>\n                    </div>\n                </div>\n                {this.Moduledisplay(name, startTime)}\n            </div >\n        );\n    }\n}\n\nexport default Nurtionfeedingcell\n","import React, { Component } from 'react'\nimport * as ApiProvider from '../../API/ApiProvider'\n// import { DatePicker, Input } from 'antd';\n// import searchlogo from '../../Image/svg/Search.svg'\nimport Nurtionfeedingcell from './Nurtionfeedingcell'\nimport moment from 'moment';\nimport * as ApiGithub from '../../API/ApiGithub'\n\n\nclass Nurtionfeedingorder extends Component {\n    state = {\n        TRTMNTQ1: [],\n        parser: { \"mappings\": [] },\n        class: \"飲食類別\"\n    }\n    componentDidMount() {\n        this.getAPIFeedingData()\n        this.getTreatmentOrderFilter()\n    }\n    getAPIFeedingData() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID.toString().trim()\n        const CID = caseinfo.CASEID.toString().trim()\n        ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => {\n                console.log(\"getAPIFeedingData OK \" + JSON.stringify(data.data))\n                this.setState({\n                    TRTMNTQ1: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n    }\n    getTreatmentOrderFilter() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Treatment\");\n                parser.mappings = [{ \"key\": \"全部\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson Treatment OK \" + JSON.stringify(parser))\n                this.setState({\n                    parser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部\"] = []\n\n        inputs.forEach(input => {\n            let content = input.ORPROCED;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部\"].push(input)\n        });\n        return allResult;\n    }\n\n    render() {\n        const { caseinfo, PickerDateRange } = this.props\n        const title = [\"開始時間\", \"結束時間\", \"處置名稱\"]\n        const titleCellRender = title.map(function (element, index, arr) {\n            return (\n                <div key={index} style={{ padding: \"0px 10px\", display: \"flex\", alignItems: \"center\" }}>\n                    <div style={{ fontSize: \"14px\" }}>{element}</div>\n                </div>\n            );\n        })\n\n        const parse = this.parse;\n        let clusteredData = {}\n        if (this.state.parser !== undefined) {\n            clusteredData = parse(this.state.TRTMNTQ1, this.state.parser)\n        }\n        //filter data by selected class\n        let filteredData = clusteredData[this.state.class];\n        // console.log(`filteredData : ${JSON.stringify(filteredData)} , filteredData type : ${typeof (filteredData)}`)\n        let filterData = []\n        if (filteredData !== undefined) {\n            let ListCellData = filteredData\n            filterData = ListCellData.filter((element, index, arr) => {\n                const time = moment(element.ORBGNDT, 'YYYY-MM-DD').valueOf()\n                return PickerDateRange[0] <= time && time <= PickerDateRange[1]\n            })\n\n            filterData = filterData.sort((a, b) => {\n                let tempTimeA = moment(a.ORBGNDT, 'YYYY-MM-DD').valueOf()\n                let tempTimeB = moment(b.ORBGNDT, 'YYYY-MM-DD').valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n        }\n\n        const DataCellRender = filterData.map(function (element, index, arr) {\n            return (\n                <Nurtionfeedingcell key={index} data={element} caseinfo={caseinfo} ></Nurtionfeedingcell>\n            );\n        })\n\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>Feeding Order</t2>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \" 1fr 1fr 2fr \", background: \"#cccccc\", height: \"50px\", marginTop: \"10px\" }}>\n                    {titleCellRender}\n                </div>\n                {filterData.length !== 0 && <div style={{ minHeight: \"120px\", maxHeight: \"400px\", overflowY: \"auto\" }}>\n                    {DataCellRender}\n                </div>}\n                {filterData.length === 0 && <div>今日無資料</div>}\n            </div>\n        );\n    }\n}\n\nexport default Nurtionfeedingorder\n","import React, { Component } from 'react'\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Nurtion_TPN_cell.scss'\nimport moment from 'moment'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Nurtiontpncell extends Component {\n    state = {\n        EditMode: false,\n        onEdit: false,\n        remark: null,\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { caseinfo, data } = this.props\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, data.UDORDSEQ, \"nurtiontpn\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    onMouseEnter() { this.setState({ EditMode: true }) }\n\n    onMouseLeave() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    showModal = () => {\n        this.setState({\n            onEdit: true,\n        });\n    };\n\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    Moduledisplay(PName, ST) {\n\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": PName,\n            \"remarkId\": this.props.data.UDORDSEQ,\n            \"remark\": this.state.remark,\n            \"transinId\": this.props.caseinfo.TRANSINID,\n            \"type\": \"nurtiontpn\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            // <RemarkModal caseinfo={caseinfo} type=\"nurtiontpn\" name={title} visible={this.state.onEdit} remark={this.state.remark} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n        );\n    }\n    render() {\n        const { data } = this.props\n        const TPNList = [\"VOL.\", \"AA\", \"Glu\", \"Na\", \"K\", \"Ca\", \"P\", \"Mg\"]\n        const TPNListcellRender = TPNList.map(function (info, index) {\n            return (\n                <centerstyle key={index} style={{ border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                    <t2>{info}</t2>\n                </centerstyle>\n            );\n        })\n        function TPNSubDataMap(data, TPNDATA) {\n            if (TPNDATA === undefined || TPNDATA === null) {\n                return []\n            }\n            const TPNSubData = [data.UDDOSAGE, data.TPNDATA.AA, data.TPNDATA.Glu, data.TPNDATA.Na, data.TPNDATA.K, data.TPNDATA.Ca, data.TPNDATA.P, data.TPNDATA.Mg]\n            const TPNSubDatacellRender = TPNSubData.map(function (info, index) {\n                return (\n                    <centerstyle key={index} style={{ border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                        <t2>{info}</t2>\n                    </centerstyle>\n                );\n            })\n            return TPNSubDatacellRender\n\n        }\n        const TPNSubDatacellRender = TPNSubDataMap(data, data.TPNDATA)\n        const RemarkData = this.state.remark\n        // function RemarkNull(value) {\n        //     // console.log(value)\n        //     if (value === null || value === undefined || value === \"\") {\n        //         return \"none\"\n        //     }\n        //     return \"flex\"\n        // }\n        // function RemarkNullheight(value) {\n        //     // console.log(value)\n        //     if (value === null || value === undefined || value === \"\") {\n        //         return \"90px\"\n        //     }\n        //     return \"120px\"\n        // }\n        // function statusstate(st, et, pt) {\n\n        // }\n        const startTime = moment(data.UDBGNDT.toString().trim(), \"YYYY-MM-DD-HH.mm.ss.00.000000\").format(\"MM/DD HH:mm:ss\")\n        const endTime = moment(data.UDENDDT.toString().trim(), \"YYYY-MM-DD-HH.mm.ss.00.000000\").format(\"MM/DD HH:mm:ss\")\n        const name = data.UDGNAME.toString().trim()\n        const status = \"生效中\"\n        return (\n            <div onMouseEnter={() => this.onMouseEnter()} onMouseLeave={() => this.onMouseLeave()} className='nurtiontpntablelayout'>\n                <div style={{ height: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"100px\" : \"130px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \" 1fr 1fr 60px 450px\", height: \"100px\" }} >\n                        <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                            <t3>{startTime}</t3>\n                        </div>\n                        <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                            <t3>{endTime}</t3>\n                        </div>\n                        <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                            <t3>{status}</t3>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"30px 70px\" }}>\n                            <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                                <t3>{name}</t3>\n                            </div>\n                            <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(8,1fr)\" }}>\n                                    {TPNListcellRender}\n                                </div>\n                                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(8,1fr)\" }}>\n                                    {TPNSubDatacellRender}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ display: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"none\" : \"block\"], border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\", padding: \"0px 5px\", alignItems: \"center\", height: \"30px\", width: \"100%\" }}>\n                        <t3>{RemarkData}</t3>\n                    </div>\n                </div>\n                <div style={this.state.EditMode ? {\n                    display: this.state.powerLogin == 1 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", top: 0, right: 0, height: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"100px\" : \"130px\"], background: \"white\", width: \"77px\", border: \"rgba(232, 232, 232, 1) 1px solid\"\n                } : { display: \"none\" }}>\n                    < div onClick={() => this.showModal()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }} >\n                        <img src={chooseedit} alt='chooseedit'></img>\n                    </div>\n                </div>\n                {this.Moduledisplay(name, startTime)}\n            </div >\n        );\n    }\n}\n\nexport default Nurtiontpncell\n","import React, { Component } from 'react'\nimport Nurtiontpncell from './Nurtion_TPN_cell'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as ApiGithub from '../../API/ApiGithub'\n\nclass Nurtiontpnorder extends Component {\n    state = {\n        onEdit: false,\n        tpndata: [],\n        UDORDER0: [],\n        tpnParsers: []\n    }\n    componentDidMount() {\n        const getAPITPNData = this.getAPITPNData.bind(this)\n        ApiGithub.getGitHubJson(\"TpnOrder.json\")\n            .then(data => {\n                let parser = data.data\n                console.log(\"getGitHubJson TPN Order OK \" + JSON.stringify(parser))\n                this.setState({\n                    tpnParsers: parser\n                }, () => {\n                    getAPITPNData()\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n    }\n    getAPITPNData() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID.toString().trim()\n        const CID = caseinfo.CASEID.toString().trim()\n        const { tpnParsers } = this.state\n        // console.log(HID, CID)\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                //const fakeData = [{\"UDDCPRSN\":\"DOC3941E\",\"UDDURAT\":\"007\",\"UDSUMQTY\":\"55\",\"UDDRGNAM\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDGNAME\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-14-09.17.00.000000\",\"UDDCPNAM\":\"何正尹　　\",\"UDDOSAGE\":\"55      \",\"UDORDSEQ\":\"0043\",\"UDBGNDT\":\"2019-08-13-08.50.00.000000\",\"UDDRGNO\":\"02145\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\"                                                                                                    \",\"UDDUNIT\":\"CC    \",\"UDROUTE\":\"IVD\",\"UDRPNAME\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDFREQN\":\"QD-TPN  \"},{\"UDDCPRSN\":\"DOC3964C\",\"UDDURAT\":\"014\",\"UDSUMQTY\":\"7\",\"UDDRGNAM\":\"Peditrace \\\"TPN\\\" sol for inj 10ml\",\"UDGNAME\":\"Peditrace \\\"TPN\\\" sol for inj 10ml\",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-20-10.22.00.000000\",\"UDDCPNAM\":\"李成彧　　\",\"UDDOSAGE\":\"1       \",\"UDORDSEQ\":\"0044\",\"UDBGNDT\":\"2019-08-13-08.50.00.000000\",\"UDDRGNO\":\"05208\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\"                                                                                                    \",\"UDDUNIT\":\"AMP   \",\"UDROUTE\":\"MSC\",\"UDRPNAME\":\"Peditrace \\\"TPN\\\" sol for inj 10ml\",\"UDFREQN\":\"QD-TPN  \"},{\"UDDCPRSN\":\"        \",\"UDDURAT\":\"001\",\"UDSUMQTY\":\"1\",\"UDDRGNAM\":\"Immunoglobulin *inj 60mg/ml 50ml\",\"UDGNAME\":\"Immunoglobulin *inj 60mg/ml 50ml\",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"Y\",\"UDSTATUS\":\"60\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-14-15.00.00.000000\",\"UDDCPNAM\":\"　　　　　\",\"UDDOSAGE\":\"1       \",\"UDORDSEQ\":\"0045\",\"UDBGNDT\":\"2019-08-13-15.17.00.000000\",\"UDDRGNO\":\"03852\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"BOT   \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"HM.imm.globulin *inj60mg/ml 50ml\",\"UDFREQN\":\"ST      \"},{\"UDDCPRSN\":\"DOC3941E\",\"UDDURAT\":\"007\",\"UDSUMQTY\":\"110\",\"UDDRGNAM\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDGNAME\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-16-10.44.00.000000\",\"UDDCPNAM\":\"何正尹　　\",\"UDDOSAGE\":\"55      \",\"UDORDSEQ\":\"0055\",\"UDBGNDT\":\"2019-08-14-09.17.00.000000\",\"UDDRGNO\":\"02145\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\"                                                                                                    \",\"UDDUNIT\":\"CC    \",\"UDROUTE\":\"IVD\",\"UDRPNAME\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDFREQN\":\"QD-TPN  \"}]\n\n                //create list need to do search\n                let tpnList = [] // All TPN data\n                let selected_parser = undefined\n                //fakeData.forEach(item => {\n                data.data.forEach(item => {\n                    //get parser\n                    selected_parser = this.select_parser(item, tpnParsers)\n                    if (selected_parser !== undefined) {\n                        const found = item.UDDRGNAM.match(RegExp(selected_parser.apply_condition.name, selected_parser.apply_condition.name_regex_flags))\n                        if (found !== null && found !== \"\") tpnList.push(item)\n                    }\n                });\n\n                console.log(\"tpnList\" + JSON.stringify(tpnList))\n                if (selected_parser !== undefined) {\n                    //parser 7 value from each TPN document （AA, Glu, Na, K, Ca, P, Mg）\n                    tpnList.forEach((item, index) => {\n                        ApiProvider.getStoredProcedureUDTEXTQ1(CID, item.UDORDSEQ)\n                            .then(data => {\n                                console.log(\"getStoredProcedureUDTEXTQ1 OK \" + JSON.stringify(data.data))\n\n                                //parse every line\n                                const result = this.parse(data.data, selected_parser)\n                                item.TPNDATA = result;\n                                //console.log(\"parse result: \" + JSON.stringify(item))\n                                tpnList.splice(index, 1, item)\n                                this.setState({\n                                    tpndata: tpnList\n                                })\n                            })\n                            .catch(err => {\n                                console.log(\"getStoredProcedureUDTEXTQ1 NG \" + err)\n                            });\n                    });\n                }\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureUDORDER0 NG \" + err)\n            });\n    }\n    select_parser = (input, parsers) => {\n        const inputBeginTime = moment(input.UDBGNDT, \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n        const inputEndTime = moment(input.UDENDDT, \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n        return parsers.find(x =>\n            input.UDDRGNAM.match(x.apply_condition.name)\n            && (!x.apply_condition.start_time || inputBeginTime >= x.apply_condition.start_time)\n            && (!x.apply_condition.end_time || inputEndTime < x.apply_condition.end_time)\n        )\n    }\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = \"\"\n        });\n\n        inputs.forEach(input => {\n            let content = input.UDWORD;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key] = match[mapping.position]\n                }\n            });\n        });\n        return allResult;\n    }\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    render() {\n        const { caseinfo, PickerDateRange } = this.props\n        const title = [\"開始時間\", \"結束時間\", \"狀態\", \"處置名稱\"]\n        const titilecell = title.map(function (info, index) {\n            return (\n                <div key={index} style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t4>{info}</t4>\n                </div>\n            );\n        })\n        const ListCellData = this.state.tpndata\n        let filterData = ListCellData.filter((element, index, arr) => {\n            const time = moment(moment(element.UDBGNDT, 'YYYY-MM-DD-HH.mm.ss.000000').format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n            return PickerDateRange[0] <= time && time <= PickerDateRange[1]\n        })\n\n        filterData = filterData.sort((a, b) => {\n            let tempTimeA = moment(moment(a.UDBGNDT, 'YYYY-MM-DD-HH.mm.ss.000000').format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n            let tempTimeB = moment(moment(b.UDBGNDT, 'YYYY-MM-DD-HH.mm.ss.000000').format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n            return tempTimeA < tempTimeB ? 1 : -1\n        })\n\n        const DataCellRender = filterData.map(function (element, index, arr) {\n            return (\n                <Nurtiontpncell key={index} data={element} caseinfo={caseinfo} ></Nurtiontpncell>\n            );\n        })\n\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>TPN order</t2>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \" 1fr 1fr 60px 450px\", background: \"#cccccc\", height: \"50px\", marginTop: \"10px\" }}>\n                    {titilecell}\n                </div>\n                <div style={{ minHeight: \"120px\", maxHeight: \"400px\", overflowY: \"auto\" }}>\n                    {DataCellRender}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Nurtiontpnorder\n","import React, { Component } from 'react'\nimport * as d3 from \"d3\";\nimport './Watervaluechart.scss'\nimport { Modal } from 'antd'\n// import { getRandomfornumber } from '../../Function/Wardstate'\nimport moment from 'moment';\n\nclass Watervaluechart extends Component {\n    state = {\n        visible: false,\n        select: null,\n        rowdata: null\n    };\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: true,\n            select: null,\n            rowdata: null\n        });\n    };\n    componentDidUpdate() {\n        const { svg_key } = this.props\n        d3.select(\"#\" + svg_key).remove()\n        this.drawChart()\n\n    }\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentWillUnmount() {\n    }\n\n    cal_svg_hight() {\n        const { axisTop, axisBot } = this.props\n        if (axisTop) {\n            if (axisBot) {\n                return 160\n            }\n            else {\n                return 130\n            }\n        }\n        else {\n            if (axisBot) {\n                return 130\n            }\n            else {\n                return 90\n            }\n        }\n    }\n\n    cal_svg_transform() {\n        const { axisTop, axisBot } = this.props\n        console.log(axisTop)\n        if (axisTop) {\n            if (axisBot) {\n                return 70\n            }\n            else {\n                return 50\n            }\n        }\n        else {\n            if (axisBot) {\n                return 5\n            }\n            else {\n                return 5\n            }\n        }\n    }\n\n    drawChart() {\n        function formatShiftDays(startTime, endTime) {\n            const shiftDays = parseInt((endTime - startTime) / (24 * 60 * 60 * 1000))\n            return shiftDays\n        }\n        const { svg_key, id_key, startTime, watervalueData } = this.props\n        const width = (window.screen.availWidth - 50) / 2 - 50, height = 400\n        const max = 500, min = 0\n        const shiftDays = formatShiftDays(moment(startTime, \"YYYYMMDD\").valueOf(), moment().valueOf())\n\n        if (watervalueData.length === 0) {\n            return null\n        }\n        const rectwidth = (width / shiftDays) - 2\n        var x = d3.scaleLinear()\n            .domain([0, watervalueData.length])\n            .range([0, width]);\n\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([min, max])\n            .range([height, 0])\n\n\n\n        var yAxis = d3.axisLeft(y)\n            .ticks(11)\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(10);\n\n        var xAxisBottom = d3.axisBottom(x)\n            .ticks(watervalueData.length)\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(height + 10)\n            .tickFormat(function (d) {\n                if (d % 10 === 0) {\n                    if (d > 0) {\n                        return 'D' + d\n                    }\n                    return null\n                }\n                else return null;\n            });\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_key)\n            .attr(\"viewBox\", [0, 0, width + 80, height + 50])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 30 + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n        svg.append(\"g\")\n            .call(xAxisBottom)\n            .attr(\"class\", \"axis\");\n\n\n        for (let index = 0; index < 11; index++) {\n            //上下虛線\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(index * 50))\n                .attr('x2', width)\n                .attr('y2', y(index * 50))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n        }\n\n        for (let index = 0; index < watervalueData.length; index++) {\n            //上下虛線\n            if (index % 10 === 0 && index > 0) {\n                svg.append('line')\n                    .attr('x1', x(0.5 + index))\n                    .attr('y1', y(min))\n                    .attr('x2', x(0.5 + index))\n                    .attr('y2', y(max))\n                    .style('stroke', 'rgba(187, 187, 187, 1)')\n                    .style('stroke-width', 1)\n                    .style('stroke-dasharray', 5.5);\n            }\n        }\n\n\n\n\n        // function rowdatageneral(number) {\n        //     const rowdata = {\n        //         'IV': {\n        //             \"max\": getRandomfornumber(number),\n        //             \"min\": 0\n        //         },\n        //         'feeding': {\n        //             \"max\": getRandomfornumber(number),\n        //             \"min\": 0\n        //         },\n        //         'Other': {\n        //             \"max\": getRandomfornumber(number),\n        //             \"min\": 0\n        //         }\n        //     }\n        //     return rowdata\n        // }\n        const select = this.state.select\n        if (select === null || select === undefined || select === \"\") {\n            d3.selectAll(\"rect#A123\").remove()\n        }\n        for (let index = 0; index < watervalueData.length; index++) {\n            const rowdata = watervalueData[index]\n            var svgrect = svg.append('g').on('click', () => {\n                if (rowdata === null) {\n\n                }\n                else {\n                    this.setState({\n                        visible: true,\n                        select: index,\n                        rowdata: rowdata\n                    });\n\n                }\n            })\n            console.log(select)\n            if (index === select) {\n                svgrect.append('rect')\n                    .attr('id', 'A123')\n                    .attr('width', rectwidth + 2)\n                    .attr('height', y(0) - y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .attr('x', x(index) - (rectwidth / 2) - 1)\n                    .attr('y', y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .style('fill', 'rgba(0,0,0,0)')\n                    .style('stroke', '#F5A623')\n                    .style('stroke-width', 2)\n                    .style('cursor', 'pointer');\n            }\n            else {\n                svgrect.append('rect')\n                    .attr('id', 'A123')\n                    .attr('width', rectwidth + 2)\n                    .attr('height', y(0) - y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .attr('x', x(index) - (rectwidth / 2) - 1)\n                    .attr('y', y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .style('fill', 'rgba(0,0,0,0)')\n                    .style('stroke', 'rgba(0,0,0,0)')\n                    .style('stroke-width', 2)\n                    .style('cursor', 'pointer')\n                    .style('opacity', 1);\n            }\n            svgrect.append('line')\n                .attr('x1', x(index))\n                .attr('y1', y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                .attr('x2', x(index))\n                .attr('y2', y(rowdata.IV + rowdata.Other))\n                .style('stroke', '#2E64A4')\n                .style('stroke-width', rectwidth)\n\n            svgrect.append('line')\n                .attr('x1', x(index))\n                .attr('y1', y(rowdata.IV + rowdata.Other))\n                .attr('x2', x(index))\n                .attr('y2', y(rowdata.Other))\n                .style('stroke', '#C3EFFF')\n                .style('stroke-width', rectwidth)\n\n\n            svgrect.append('line')\n                .attr('x1', x(index))\n                .attr('y1', y(rowdata.Other))\n                .attr('x2', x(index))\n                .attr('y2', y(0))\n                .style('stroke', '#3B97E1')\n                // .style('stroke', 'red')\n                .style('stroke-width', rectwidth)\n        }\n    }\n\n    ModalRender() {\n        function nulldata(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return 0\n            }\n            return value\n        }\n        const data = this.state.rowdata\n        if (data === null || data === undefined) {\n            return null\n        }\n        // function sumRowdata(data) {\n        //     if (data === null || data === undefined) {\n        //         return 0\n        //     }\n        //     return data * 0.8\n        // }\n        const select = this.state.select\n        const waterdata = this.props.watervalueData\n        const car = waterdata[select].Caloriessum\n        return (\n            <Modal\n                title=\"Basic Modal\"\n                visible={this.state.visible}\n                onOk={this.handleOk}\n                onCancel={this.handleCancel}\n                footer={null}\n            >\n                <div>IV:{nulldata(data.IV)}</div>\n                <div>Feeding:{nulldata(data.Feeding)}</div>\n                <div>Other:{nulldata(data.Other)}</div>\n                <div>總熱量:{car}kcal</div>\n            </Modal>\n        );\n    }\n    render() {\n        const { id_key } = this.props\n        const model = this.ModalRender()\n        return (\n            <div id={id_key}>\n                {model}\n            </div>\n        );\n    }\n}\n\nexport default Watervaluechart","import React, { Component } from 'react'\nimport Nurtionfeedingorder from './Nurtionfeeding'\nimport { Select, Button, DatePicker, Modal } from 'antd';\nimport WardlifeChart from '../../Wardview/Wardlifechart'\nimport Wardmonthafter from '../../Wardview/Wardmonthafter'\nimport Nurtiontpnorder from './Nurtion_TPN'\nimport Watervaluechart from './Watervaluechart'\nimport { gender } from '../../Function/Wardbedfunction'\nimport X2JS from 'x2js';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\nimport * as FiliterReg from '../../Function/FiliterReg'\nimport './Nurtion.scss'\n\nclass Nurtionview extends Component {\n    state = {\n        visible: false,\n        test_items_interval: 1,\n        UDORDER0: [],\n        QDC: [],\n        QTWER: [],\n        PickerDateRange: moment(moment().format('YYYYMMDD'))\n    }\n    componentDidMount() {\n        this.API_DATA()\n    }\n    API_DATA() {\n        const { caseinfo } = this.props\n        const xm2 = new X2JS()\n        const st = moment(caseinfo.TRANSINDT.toString(), 'YYYYMMDD').format('YYYYMMDDHHmm')\n        const et = moment().format(\"YYYYMMDDHHmm\")\n        // ApiProvider.getQDC(caseinfo.CASEID, st, et)\n        ApiProvider.getQDC(caseinfo.CASEID, st, et)\n            .then(data => {\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                console.log(parsedata)\n                this.setState({\n                    QDC: parsedata\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureUDORDER0(caseinfo.HISID, caseinfo.CASEID, \"123\")\n            .then(data => {\n                this.setState({\n                    UDORDER0: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n    }\n    switch_monthy() {\n        const { caseinfo } = this.props\n        console.log(caseinfo)\n        const grewinfo = {\n            \"WEEK_BORN\": Number(caseinfo.WEEK_BORN),\n            \"DAY_BORN\": Number(caseinfo.DAY_BORN),\n            \"BIRTHDAY\": caseinfo.PBASINGNINFO.PBIRTHDT\n        }\n        const WeightList = caseinfo.WEIGHT\n        const sex = gender(caseinfo.PBASINGNINFO.PSEX)\n        const switch_data = this.state.test_items_interval\n        switch (switch_data) {\n            case 1:\n                return <WardlifeChart grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife\"} svg_key={\"wardlife_svg\"} gender={sex}></WardlifeChart>\n            case 0:\n                return <Wardmonthafter grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife_after\"} svg_key={\"wardlife_after_svg\"} gender={sex}></Wardmonthafter>\n            default:\n                return null;\n        }\n    }\n\n    handleChange = (checkedValues) => {\n        console.log('checked = ', checkedValues);\n        this.setState(\n            {\n                test_items_interval: checkedValues\n            }\n        )\n\n    }\n    onOk = (value) => {\n        console.log('onOk: ', value);\n    }\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n    WaterValueControlBar() {\n        return (\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", marginRight: \"10px\" }}>\n                    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        <div style={{ height: \"10px\", width: \"10px\", background: \"#C3EFFF\", marginRight: \"5px\" }}></div>\n                        <t3>IV</t3>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        <div style={{ height: \"10px\", width: \"10px\", background: \"#2E64A4\", marginRight: \"5px\" }}></div>\n                        <t3>Feed</t3>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        <div style={{ height: \"10px\", width: \"10px\", background: \"#3B97E1\", marginRight: \"5px\" }}></div>\n                        <t3>Other</t3>\n                    </div>\n                </div>\n                {/* <Button type=\"primary\" onClick={this.showModal}>設定營養項目</Button> */}\n            </div>\n        );\n    }\n    SwitchTestItemInterval(testiteminterval) {\n        const time_selectbtn_style = {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"32px\",\n            padding: \"0px 5px\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#001a6dbb\",\n            color: \"white\",\n            fontSize: \"1rem\",\n            borderWidth: \"1px\",\n            borderStyle: \"solid\",\n            borderColor: \"rgba(245,166,35,1)\",\n            cursor: \"pointer\"\n        }\n        const time_unselectbtn_style = {\n            display: \"flex\", justifyContent: \"center\",\n            alignItems: \"center\", height: \"32px\",\n            paddingRight: \"10px\", paddingLeft: \"10px\",\n            borderRadius: \"4px\", backgroundColor: \"white\",\n            color: \"#001a6d88\", fontSize: \"1rem\",\n            borderWidth: \"1px\", borderStyle: \"solid\",\n            borderColor: \"#001a6d88\",\n            cursor: \"pointer\"\n        }\n        if (testiteminterval === this.state.test_items_interval) {\n            return time_selectbtn_style\n        }\n        else return time_unselectbtn_style\n    }\n    GrowthCurveControlBar() {\n        const { Option } = Select;\n        return (\n            <div className='titlebutton'>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"5px\" }}>\n                    <div style={this.SwitchTestItemInterval(0)} onMouseUp={() => this.handleChange(0)}>40週後</div>\n                    <div style={this.SwitchTestItemInterval(1)} onMouseUp={() => this.handleChange(1)}>40週前</div>\n                </div>\n                {/* <Select defaultValue={1} style={{ width: 120 }} onChange={this.handleChange}>\n                    <Option value={0}>滿足月</Option>\n                    <Option value={1}>不滿足月</Option>\n                </Select> */}\n                <Button type=\"primary\" onClick={this.showModal}>新增體重</Button>\n                <Modal\n                    title=\"手動新增體重紀錄\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                        <div style={{ display: \"flex\", alignItems: \"center\" }}>選擇時間:</div>\n                        <DatePicker id=\"nurtion_datepicker\" style={{ width: \"400px\" }} showTime placeholder=\"選擇時間\" onOk={this.onOk} />\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n    WaterValueRender() {\n        function formatTimeArray(startTime) {\n            const shiftTimer = parseInt((moment().valueOf() - moment(startTime, \"YYYYMMDD\").valueOf()) / (23 * 60 * 60 * 1000))\n            console.log(startTime, shiftTimer)\n            var TimerArray = []\n            for (let index = 0; index < shiftTimer; index++) {\n                const Time = moment(moment(startTime, \"YYYYMMDD\").valueOf() + (index * 24 * 60 * 60 * 1000)).format(\"YYYY/MM/DD\")\n                TimerArray.push(Time)\n            }\n            return TimerArray\n        }\n        const { caseinfo } = this.props\n        const QDC = this.state.QDC\n        if (QDC.length === 0) {\n            return null\n        }\n        var FeedinfData = []\n        var IVData = []\n        var OtherData = []\n        var Calories = 0\n        for (let index = 0; index < QDC.length; index++) {\n            const element = QDC[index];\n            const feedstatus = FiliterReg.Feedarea_Reg_IO().find(function (value, index, array) {\n                return element.item === value\n            })\n            if (feedstatus) {\n                FeedinfData.push(element)\n            }\n            const IVstatus = FiliterReg.IVarea_reg_IO().find(function (value, index, array) {\n                return element.item === value\n            })\n            if (IVstatus) {\n                IVData.push(element)\n            }\n            const Otherstatus = FiliterReg.Otherarea_reg_IO().find(function (value, index, array) {\n                return element.item === value\n            })\n            if (Otherstatus) {\n                const invalue = element.inp_val1\n                if (invalue !== undefined) {\n                    OtherData.push(element)\n                }\n            }\n            console.log(element)\n\n\n        }\n\n        console.log(FeedinfData)\n        console.log(IVData)\n        console.log(OtherData)\n        function sumcar(List) {\n            var Calories = 0\n            for (let index = 0; index < List.length; index++) {\n                const element = List[index];\n                if (element.item === \"進食\") {\n                    if (element.lost === \"配方奶\") {\n                        Calories = Calories + Number(element.inp_val2) * 0.8\n                    }\n                    if (element.lost === \"母奶\") {\n                        Calories = Calories + Number(element.inp_val2) * 0.7\n\n                    }\n                }\n                if (element.nam !== undefined) {\n                    if (element.nam.toString().match(\"10%TPN\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                    if (element.nam.toString().match(\"15%TPN\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34 * 1.5\n                    }\n                    if (element.nam.toString().match(\"SMOFliquid\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                    if (element.nam.toString().match(\"D10\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                    if (element.nam.toString().match(\"D12\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34 * 1.2\n                    }\n                    if (element.nam.toString().match(\"D5W\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34 * 5\n                    }\n                    if (element.nam.toString().match(\"taita\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                }\n\n            }\n            return Calories\n\n        }\n        const startTime = caseinfo.TRANSINDT.toString()\n        const TimerList = formatTimeArray(startTime)\n        var watervalueDataList = []\n        for (let index = 0; index < TimerList.length; index++) {\n            const element = TimerList[index];\n            const filterFeedind = FeedinfData.filter(function (value, index, arr) {\n                return moment(element, \"YYYY/MM/DD\").valueOf() === moment(value.rec_dat.toString().trim(), \"YYYY/MM/DD\").valueOf()\n            })\n            const filterIV = IVData.filter(function (value, index, arr) {\n                return moment(element, \"YYYY/MM/DD\").valueOf() === moment(value.rec_dat.toString().trim(), \"YYYY/MM/DD\").valueOf()\n            })\n            const filterOther = OtherData.filter(function (value, index, arr) {\n                return moment(element, \"YYYY/MM/DD\").valueOf() === moment(value.rec_dat.toString().trim(), \"YYYY/MM/DD\").valueOf()\n            })\n\n            const feedingSum = SumData2(filterFeedind)\n            const IVSum = SumData(filterIV)\n            const OtherSum = SumData(filterOther)\n\n            const Caloriessum = sumcar(filterFeedind) + sumcar(filterIV) + sumcar(filterOther)\n            watervalueDataList.push({\n                Feeding: feedingSum,\n                IV: IVSum,\n                Other: OtherSum,\n                Time: element,\n                Caloriessum\n            })\n\n        }\n        function SumData(arr) {\n            var sum = 0;\n            for (var i = 0; i < arr.length; i++) {\n                sum += Number(arr[i].inp_val1);\n            };\n            return sum;\n        }\n\n        function SumData2(arr) {\n            var sum = 0;\n            for (var i = 0; i < arr.length; i++) {\n                sum += Number(arr[i].inp_val2);\n            };\n            return sum;\n        }\n\n\n        console.log(watervalueDataList)\n        return (\n            <Watervaluechart Calories={Calories} watervalueData={watervalueDataList} startTime={caseinfo.TRANSINDT} id_key={\"water_id\"} svg_key={\"water_svg\"} caseiddays='2019/11/11'></Watervaluechart>\n        );\n    }\n\n    PickerDateRangeChange = (date, dateString) => {\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const PickerDate = this.state.PickerDateRange.valueOf()\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const bTemp = bTime - (6 * day)\n                bronDate <= bTemp && this.PickerDateRangeChange(moment(bTime))\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD'))\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= aTemp && this.PickerDateRangeChange(moment(aTime))\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const GrowthCurve = this.switch_monthy()\n        const GrowthCurveControl = this.GrowthCurveControlBar()\n        const WaterValueControl = this.WaterValueControlBar()\n        const tpndata = this.state.UDORDER0\n        const feeddata = this.state.TRTMNTQ1\n        const TimeStampPickerDate = this.state.PickerDateRange.valueOf()\n        const { caseinfo } = this.props\n\n        if (tpndata.length === 0 || feeddata === 0) {\n            return null\n        }\n\n        const waterRender = this.WaterValueRender()\n        const PickerDateRange = [TimeStampPickerDate - (6 * 24 * 60 * 60 * 1000), TimeStampPickerDate]\n\n        return (\n            <div className='nurtionheight'>\n                <div className='nurtionlayout'>\n                    <div>\n                        <div className='nurtioncomponmentboxtitle'>\n                            <t1>生長曲線圖</t1>\n                            {GrowthCurveControl}\n                        </div>\n                        <div className='nurtioncomponmentboxcontent'>{GrowthCurve}</div>\n                    </div>\n                    <div>\n                        <div className='nurtioncomponmentboxtitle'>\n                            <t1>水量表</t1>\n                            <div className='titlebutton'>\n                                {WaterValueControl}\n                            </div>\n                        </div>\n                        <div className='nurtioncomponmentboxcontent'>\n                            {waterRender}\n                        </div>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"140px 120px\", gridColumnGap: \"5px\", margin: \"10px 0px 5px 0px\" }}>\n                    <DatePicker\n                        value={this.state.PickerDateRange}\n                        format={\"YYYY/MM/DD\"}\n                        allowClear={false}\n                        locale={\"zh_TW\"}\n                        onChange={this.PickerDateRangeChange}\n                    />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: '1fr 1fr', gridColumnGap: \"10px\", marginBottom: \"20px\" }}>\n                    <Nurtionfeedingorder PickerDateRange={PickerDateRange} caseinfo={caseinfo}></Nurtionfeedingorder>\n                    <Nurtiontpnorder PickerDateRange={PickerDateRange} caseinfo={caseinfo}></Nurtiontpnorder>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Nurtionview\n","import React, { Component } from 'react'\nimport './Infectionlabtable.scss'\n// import { chronicladdataoneday, chroniclabdatathird } from '../../Data/Wardviewdata'\n// import { arraychange } from '../../Function/Wardstate'\n\nclass Infectionlabtable extends Component {\n    switch_state() {\n        const chronic_state = 2\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 18\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    table_content() {\n        function FormatList(Datalist, st) {\n            var Render = []\n            for (let index = 0; index < 21; index++) {\n                const start = st + (index * 8 * 60 * 60 * 1000)\n                const end = st + ((index + 1) * 8 * 60 * 60 * 1000)\n                const FilterData = Datalist.filter(function (value, index, arr) {\n                    return value.Time > start && value.Time < end\n                })\n                var sum = 0\n                console.log(FilterData)\n                for (let index = 0; index < FilterData.length; index++) {\n                    const element = FilterData[index];\n                    sum = sum + Number(element.Data)\n                }\n                Render.push(sum)\n            }\n            return Render\n        }\n        function CellRander(List) {\n            const cellR = List.map(function (info, index) {\n                return (\n                    <centerstyle style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }} key={index}>\n                        <t2>{info}</t2>\n                    </centerstyle>\n                );\n            })\n            return cellR\n        }\n        const { PickerDate, WBCList, BandList, SegList, LymList, PCTList, CRPList, title } = this.props\n        console.log(PickerDate)\n        const st = PickerDate + (31 * 60 * 60 * 1000) - (7 * 24 * 60 * 60 * 1000)\n        var WBCRender = FormatList(WBCList, st)\n        var BandRender = FormatList(BandList, st)\n        var SegRender = FormatList(SegList, st)\n        var LymRender = FormatList(LymList, st)\n        var PCTRender = FormatList(PCTList, st)\n        var CRPRender = FormatList(CRPList, st)\n        const WBCcell = CellRander(WBCRender)\n        const Bandcell = CellRander(BandRender)\n        const Segcell = CellRander(SegRender)\n        const Lymcell = CellRander(LymRender)\n        const PCTcell = CellRander(PCTRender)\n        const CRPcell = CellRander(CRPRender)\n        return (\n            <div style={{ display: \"grid\", gridTemplateRows: \"repeat(\" + title.length + \",1fr)\" }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{WBCcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{Bandcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{Segcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{Lymcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{PCTcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{CRPcell}</div>\n            </div>\n        );\n    }\n    render() {\n        const { userdata, title } = this.props\n        const title_list = title.map((info, index) => <div className='Chronictabletitlelist' key={index}><t2>{info.title}</t2></div>)\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\" }}>\n                <div style={{ display: \"grid\", gridTemplateRows: \"repeat(\" + title.length + \",1fr)\" }}>\n                    {title_list}\n                </div>\n                {this.table_content()}\n            </div>\n        );\n    }\n}\n\nexport default Infectionlabtable","import React, { Component } from 'react'\nimport Infectionlabtable from './Infectionlabtable'\n\nclass Infectionlab extends Component {\n    render() {\n        const { WBCList, BandList, SegList, LymList, PCTList, CRPList,PickerDate } = this.props\n        const item_title = [{ title: \"WBC\" }, { title: \"Band\" }, { title: \"Seg\" }, { title: \"Lym\" }, { title: \"PCT\" }, { title: \"CRP\" }]\n        return (\n            <div style={{margin:\"10px 0px\"}}>\n                <Infectionlabtable PickerDate={PickerDate} title={item_title}  WBCList={WBCList} BandList={BandList} SegList={SegList} LymList={LymList} PCTList={PCTList} CRPList={CRPList}></Infectionlabtable>\n            </div>\n        );\n    }\n}\n\nexport default Infectionlab","import React, { Component } from 'react'\nimport { DatePicker } from 'antd'\nimport Vitalxaxis from '../../Module/Vitalxaxis'\n// import Infectionvitalsign from './Infectionvitalsign'\nimport Infectionlab from './Infectionlab'\nimport Orderonchronic from '../ChronicleView/ChronicOrder'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport './Infection.scss'\nimport Vitalonchronic from '../ChronicleView/Chronic_vital'\n\nclass Infectionview extends Component {\n    state = {\n        datasource: [],\n        statussource: \"CM\",\n        intervalselect: 2,\n        PickerDate: moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf(),\n        UDORDER0: [],\n        RESLAB02: [],\n        RESLAB01: [],\n        classParser: undefined,\n\n        hrdatasource: [],\n        rrdatasource: [],\n        spo2datasource: [],\n        abpdatasource: [],\n        nbpdatasource: [],\n        btdatasource: [],\n        QDVS: [],\n        QOXY: [],\n    }\n    componentDidMount() {\n        this.apidata()\n    }\n\n    apidata() {\n        const { caseinfo } = this.props\n        const dateTime = this.state.PickerDate\n        const et = dateTime + (31 * 60 * 60 * 1000)\n        const st = moment(et - (7 * 24 * 60 * 60 * 1000)).format(\"YYYY-MM-DD\")\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Prescription\");\n                console.log(\"getGitHubJson Prescription OK \" + JSON.stringify(parser))\n                this.setState({\n                    classParser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiProvider.getStoredProcedureUDORDER0(caseinfo.HISID, caseinfo.CASEID, \"123\")\n            .then(data => {\n                this.setState({\n                    UDORDER0: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        ApiProvider.getStoredProcedureRESLAB02(caseinfo.HISID, st)\n            .then(data => {\n                this.setState({\n                    RESLAB02: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESLAB01(caseinfo.HISID, st)\n            .then(data => {\n                this.setState({\n                    RESLAB01: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n    }\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        console.log(\"mappings\" + mappings)\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n\n        inputs.forEach(input => {\n            let content = input.UDGNAME;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n        });\n        return allResult;\n    }\n    sourcehandleChange = (value) => {\n        this.setState({\n            statussource: value\n        })\n\n    }\n\n\n    render() {\n        function vallofnull(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"\"\n            }\n            return value.toString().trim()\n        }\n        // const { Option } = Select;\n        const { caseinfo } = this.props\n        const { classParser, UDORDER0 } = this.state\n        const LabData = this.state.RESLAB02\n        const LabData2 = this.state.RESLAB01\n        const dateTime = this.state.PickerDate\n        const et = dateTime + (31 * 60 * 60 * 1000)\n        const st = et - (7 * 24 * 60 * 60 * 1000)\n        var WBCList = []\n        var BandList = []\n        var SegList = []\n        var LymList = []\n        var PCTList = []\n        var CRPList = []\n        if (Array.isArray(LabData)) {\n            if (LabData.length !== 0) {\n                for (let index = 0; index < LabData.length; index++) {\n                    const element = LabData[index];\n                    const WBC = vallofnull(element.RSV01)\n                    const Band = vallofnull(element.RSV13)\n                    const Seg = vallofnull(element.RSV14)\n                    const Lym = vallofnull(element.RSV15)\n                    const PCT = null\n                    const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                    if (st < time && time < et) {\n                        if (WBC !== null || WBC !== \"\" || WBC !== undefined) {\n                            WBCList.push({\n                                Time: time,\n                                Data: WBC\n                            })\n                        }\n                        if (Band !== null || Band !== \"\" || Band !== undefined) {\n                            BandList.push({\n                                Time: time,\n                                Data: Band\n                            })\n                        }\n                        if (Seg !== null || Seg !== \"\" || Seg !== undefined) {\n                            SegList.push({\n                                Time: time,\n                                Data: Seg\n                            })\n                        }\n                        if (Lym !== null || Lym !== \"\" || Lym !== undefined) {\n                            LymList.push({\n                                Time: time,\n                                Data: Lym\n                            })\n                        }\n                        if (PCT !== null || PCT !== \"\" || PCT !== undefined) {\n                            PCTList.push({\n                                Time: time,\n                                Data: PCT\n                            })\n                        }\n                    }\n                }\n            }\n        }\n        if (Array.isArray(LabData2)) {\n            if (LabData2.length !== 0) {\n                for (let index = 0; index < LabData2.length; index++) {\n                    const element = LabData2[index];\n                    const CRP = vallofnull(element.RSV30)\n                    const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                    if (st < time && time < et) {\n                        if (CRP !== null || CRP !== \"\" || CRP !== undefined) {\n                            CRPList.push({\n                                Time: time,\n                                Data: CRP\n                            })\n                        }\n                    }\n                }\n            }\n        }\n        console.log(WBCList, BandList, SegList, LymList, PCTList, CRPList)\n\n        let clusteredData = {}\n        if (classParser !== undefined) {\n            clusteredData = this.parse(UDORDER0, classParser)\n        }\n\n        //filter data by selected class\n        const filteredData = clusteredData[\"抗生素類別\"];\n\n        return (\n            <div style={{ padding: \"0px 20px\" }}>\n                <div className='Infectioncontrol'>\n                    <DatePicker\n                        disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                        defaultValue={moment(this.state.PickerDate)}\n                        onChange={(date, datestring) => { this.setState({ PickerDate: date.valueOf() }) }}\n                        allowClear={false} />\n                </div>\n                <div style={{ margin: \"10px 0px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\" }}>\n                        <div></div>\n                        <Vitalxaxis max={200} min={0} select_interval={2} select_date={new Date().getTime()} id_key=\"xaxis_infect\" svg_id=\"xaxis_svg_infect\"></Vitalxaxis>\n                    </div>\n                </div>\n                <div className='boxshadow'></div>\n                <div className='Infectionlayout'>\n                    <Vitalonchronic PickerDate={this.state.PickerDate} select_interval={2} caseinfo={caseinfo} source={\"infection\"} title=\"Vital\"></Vitalonchronic>\n                    {/* <Infectionvitalsign caseinfo={caseinfo} StatusSource={this.state.statussource} PickerDate={this.state.PickerDate}></Infectionvitalsign> */}\n                    {/* Order */}\n                    <Orderonchronic PickerDate={this.state.PickerDate} UDORDER0={filteredData} select_interval={2} caseinfo={caseinfo} source={\"infection\"}></Orderonchronic>\n                    <Infectionlab PickerDate={this.state.PickerDate} WBCList={WBCList} BandList={BandList} SegList={SegList} LymList={LymList} PCTList={PCTList} CRPList={CRPList}></Infectionlab>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\" }}>\n                    <div></div>\n                    <Vitalxaxis max={200} min={0} select_interval={2} select_date={new Date().getTime()} id_key=\"xaxis_flootsheet_bot\" svg_id=\"xaxis_svg_flootsheet_bot\"></Vitalxaxis>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Infectionview","import React, { Component } from 'react';\nimport editlogo from '../../Image/svg/Edit.svg'\n// import detaillogo from '../../Image/svg/details.svg'\nimport { Input, Button } from 'antd';\nimport './Bedsidecard.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Bedsidecard extends Component {\n    state = {\n        caseinfo: this.props.caseinfo,\n        EditMode: false,\n        remarkContent: \"\",\n        inputContent: \"\",\n        powerLogin: 0\n    }\n    componentDidMount() {\n        //bind function\n        this.onInputChange = this.onInputChange.bind(this);\n\n        //query patient remark\n        this.queryPatientRemark();\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    queryPatientRemark() {\n        ApiProvider.getOnePatientRemark(this.state.caseinfo.TRANSINID)\n            .then(data => {\n                console.log(\"queryPatientRemark OK \" + JSON.stringify(data));\n                this.setState({\n                    remarkContent: data.data[0].context\n                });\n            })\n            .catch(err => {\n                console.log(\"queryPatientRemark NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    onClickEnter() {\n        ApiProvider.createPatientRemark(this.state.inputContent, this.state.caseinfo.HISID, this.state.caseinfo.TRANSINID)\n            .then(data => {\n                console.log(\"createPatientRemark OK \" + JSON.stringify(data));\n                this.setState(\n                    {\n                        inputContent: \"\"\n                    }\n                )\n                this.queryPatientRemark();\n            })\n            .catch(err => {\n                console.log(\"createPatientRemark NG \" + JSON.stringify(err));\n            });\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    render() {\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div className='bedsidecardtitle'>\n                    <t1 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>床頭卡註記</t1>\n                    <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                        <img src={editlogo} alt=\"editlogo\" />\n                    </div>\n                </div>\n                <div className='bedsidecardcontext'>\n                    <t2>{this.state.remarkContent}</t2>\n                </div>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", backgroundColor: \"rgba(238,238,238,1)\" }}>\n                        <Input placeholder=\"輸入當日註記內容\" value={this.state.inputContent} onChange={this.onInputChange}></Input>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Bedsidecard\n","import React, { Component } from 'react';\nimport editlogo from '../../Image/svg/Edit.svg'\nimport { Checkbox, Input, Button } from 'antd';\nimport './Scheduletodo.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nconst TODO_DONE = \"已完成\";\nconst TODO_UNFINISH = \"未完成\";\n\nclass Scheduletodo extends Component {\n    state = {\n        EditMode: false,\n        displayMode: true, //true已完成 flase未完成\n        todolist: [],\n        caseinfo: this.props.caseinfo,\n        inputContent: undefined,\n        powerLogin: 0\n    }\n    componentDidMount() {\n        //bind function\n        this.onInputChange = this.onInputChange.bind(this);\n\n        //query patient notice\\\n        this.queryPatientTodo();\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    queryPatientTodo() {\n        ApiProvider.getOneTodo(this.state.caseinfo.TRANSINID, this.state.caseinfo.CASEID)\n            .then(data => {\n                console.log(\"queryPatientTodo OK \" + JSON.stringify(data));\n                this.setState({\n                    todolist: data.data\n                });\n            })\n            .catch(err => {\n                console.log(\"queryPatientTodo NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString()\n        ApiProvider.createTodo(this.state.caseinfo.CASEID, this.state.inputContent, timeNowStr, this.state.caseinfo.TRANSINID, TODO_UNFINISH)\n            .then(data => {\n                console.log(\"createTodo OK \" + JSON.stringify(data));\n                this.queryPatientTodo();\n            })\n            .catch(err => {\n                console.log(\"createTodo NG \" + JSON.stringify(err));\n            });\n        this.setState(\n            {\n                EditMode: false,\n                inputContent: undefined\n            }\n        )\n    }\n    onClickfinish() {\n        console.log(\"finish\")\n        this.setState(\n            {\n                displayMode: true\n            }\n        )\n    }\n    onClickunfisish() {\n        this.setState(\n            {\n                displayMode: false\n            }\n        )\n    }\n\n    onChange = (checkedValues) => {\n        console.log('checked = ', document.getElementById(\"finish\"));\n    }\n    onItemCheck = (event) => {\n        console.log('onItemCheck ' + JSON.stringify(event.target));\n\n        const itemToUpdate = this.state.todolist.find(item => item.time === event.target.value);\n        console.log('find item ' + JSON.stringify(itemToUpdate));\n\n        if ((this.state.displayMode === true && event.target.checked === false) || (this.state.displayMode === false && event.target.checked === true)) {\n            ApiProvider.createTodo(itemToUpdate.caseid, itemToUpdate.context, itemToUpdate.time, itemToUpdate.transinno, (itemToUpdate.type === TODO_DONE) ? TODO_UNFINISH : TODO_DONE)\n                .then(data => {\n                    console.log(\"updateTodo OK \" + JSON.stringify(data));\n                    this.queryPatientTodo();\n                })\n                .catch(err => {\n                    console.log(\"updateTodo NG \" + JSON.stringify(err));\n                });\n        }\n    }\n    render() {\n        // const button_style = {\n        //     finish: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\", borderRadius: \"16px\", border: \"rgba(245, 166, 35, 1) 1px solid\", color: \"rgba(245, 166, 35, 1)\" },\n        //     unfinish: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\", borderRadius: \"16px\", border: \"rgba(245, 166, 35, 1) 1px solid\", background: \"rgba(245, 166, 35, 1)\", color: \"white\" }\n        // }\n\n        const todolist_data = this.state.todolist\n        const finish_data = todolist_data.filter(function (item, index, array) {\n            return item.type === TODO_DONE;\n        });\n        const finish_value = finish_data.map(function (item, index, array) {\n            return item.time;\n        });\n        const unfinish_data = todolist_data.filter(function (item, index, array) {\n            return item.type === TODO_UNFINISH;\n        });\n\n        const onItemCheck = this.onItemCheck;\n        const finish_checkbox = finish_data.map(function (item, index, array) {\n            return (\n                <div key={index} className='scheduletodocell'>\n                    <Checkbox value={item.time} checked={true} onChange={onItemCheck} style={{ textDecoration: \"line-through\" }}>{item.context}</Checkbox>\n                </div>\n            );\n        });\n        const unfinish_checkbox = unfinish_data.map(function (item, index, array) {\n            return (\n                <div key={index} className='scheduletodocell'>\n                    <Checkbox value={item.time} checked={false} onChange={onItemCheck}>{item.context}</Checkbox>\n                </div>\n            );\n        });\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div className='scheduletodotitle'>\n                    <t1 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>待辦排程</t1>\n                    <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                        <img src={editlogo} alt=\"editlogo\" />\n                    </div>\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"10px 0px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"115px 115px\", gridColumnGap: \"10px\" }}>\n                        <div style={{ cursor: \"pointer\" }} className={this.state.displayMode ? 'finishbutton' : 'todobutton'} onClick={() => this.onClickunfisish()}>未完成</div>\n                        <div style={{ cursor: \"pointer\" }} onClick={() => this.onClickfinish()} className={this.state.displayMode ? 'todobutton' : 'finishbutton'}>已完成</div>\n                    </div>\n                </div>\n                <Checkbox.Group defaultValue={finish_value} style={{ width: '100%' }} onChange={this.onChange}>\n                    <div style={{ overflowY: \"auto\", maxHeight: \"200px\" }}>\n                        {this.state.displayMode ? finish_checkbox : unfinish_checkbox}\n                    </div>\n                </Checkbox.Group>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <Input placeholder=\"輸入當日註記內容\" value={this.state.inputContent} onChange={this.onInputChange}></Input>\n                        <Button type=\"primary\">新增</Button>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Scheduletodo\n","import React, { Component } from 'react';\nimport calenderlogo from '../../Image/svg/calender.svg'\nimport calenderwhitelogo from '../../Image/svg/calenderwhite.svg'\nimport pingcheck from '../../Image/svg/ping.svg'\nimport pingwhite from '../../Image/svg/pingwhite.svg'\nimport './Calendercell.scss'\nimport { mmddformat, weekdateformatcalender } from '../../Function/Timeformat'\n\nclass Calendercell extends Component {\n\n    sendcallback(timestamp, clickindex) {\n        this.props.parentCallback(timestamp, clickindex);\n    }\n    onClickCheck(timestamp, clickindex) {\n        this.sendcallback(timestamp, clickindex)\n    }\n\n    render() {\n        const { clickindex, state, newDate, timestamp, clickdate, data, today } = this.props;\n        function disableday(state) {\n            if (state) {\n                return (\n                    <div className='calendersubcontexticonsecond'>\n                        <img src={calenderlogo} alt='calenderlogo' />\n                        <img src={pingcheck} alt='pingcheck' />\n                    </div>\n                );\n            }\n            else {\n                return (\n                    <div className='calendersubcontexticonsecond'>\n                        <img src={calenderwhitelogo} alt='calenderlogo' />\n                        <img src={pingwhite} alt='pingcheck' />\n                    </div>\n                );\n            }\n        }\n        function disabledayinfo(state) {\n            const scheduleArray = data.scheduleList.filter(item => item.type === \"排程\");\n            const eventArray    = data.scheduleList.filter(item => item.type === \"事件\");\n\n            if (state) {\n                return (\n                    <div className='calendersubcontexticonsecond'>\n                        <t1>{scheduleArray.length}</t1>\n                        <t1>{eventArray.length}</t1>\n                    </div>\n                );\n            }\n            else {\n                return (\n                    <div className='calendersubcontexticonsecond'>\n                        <t1 className='displayinfo'>{scheduleArray.length}</t1>\n                        <t1 className='displayinfo'>{eventArray.length}</t1>\n                    </div>\n                );\n            }\n        }\n        function locl(state) {\n            /*if (state) {\n                return '當日'\n            }\n            else return null\n            */\n            if(timestamp === today) return  '當日'\n            else return null\n        }\n        function stateswitch() {\n\n            console.log(timestamp, clickdate)\n            if (mmddformat(clickdate) === mmddformat(timestamp)) {\n                return true\n            }\n            return false\n        }\n        return (\n            <div className={stateswitch() ? 'calendersubcontextclick' : 'calendersubcontext'} onClick={() => this.onClickCheck(timestamp, clickindex)}>\n                <div className={stateswitch() ? 'calendersubcontexttitleclick' : 'calendersubcontexttitle'}>\n                    <t2 className='calendersubcontexttitletoday'>{mmddformat(timestamp)}({weekdateformatcalender(timestamp)}){locl(newDate)}</t2>\n                </div>\n                <div className='calendersubcontexticon'>\n                    {disableday(state)}\n                </div>\n                <div className='calendersubcontexticon'>\n                    {disabledayinfo(state)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Calendercell","import React, { Component } from 'react';\nimport { DatePicker } from 'antd';\nimport { Select } from 'antd';\nimport './Calender.scss'\nimport { mmddformat, compareday, yyyymmfirstweeksate } from '../../Function/Timeformat'\nimport Calendercell from './Calendercell'\nimport { Icon } from 'antd'\nimport CrossectionSchedule from '../CrossSectionView/Crosssectionschedule'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment';\n\nconst SCHEDULE_TYPE_EVENT = \"事件\";\n// const SCHEDULE_TYPE_SCHEDULE = \"排程\";\nconst timeZoneOffset = 8 * 60 * 60 * 1000;\n\nclass Calender extends Component {\n    state = {\n        calendermode: 'week',\n        Clickdays: null,\n        ClickDate: null,\n        displayinfo: null,\n        scheduleRawData: [],\n        scheduleData: [],\n        startTimestamp: 0,\n        endTimestamp: 0,\n        todayBegin: 0,\n        noticeRawData: []\n    }\n    componentDidMount() {\n        const { startTimestamp, endTimestamp, todayBegin } = this.getStartEndTime();\n        this.setState({\n            startTimestamp: startTimestamp,\n            endTimestamp: endTimestamp,\n            todayBegin: todayBegin,\n            ClickDate: todayBegin\n        });\n        this.querySchedule(new Date(startTimestamp).toISOString().split('.')[0], new Date(endTimestamp).toISOString().split('.')[0]);\n        this.queryNotice();\n    }\n    getStartEndTime() {\n        const today = new Date();\n        const monthfirstweekday = new Date(today.getFullYear(), today.getMonth(), 1).getDay();\n        const firstCellBegin = new Date(today.getFullYear(), today.getMonth(), 1).getTime() - (monthfirstweekday * 24 * 60 * 60 * 1000) + timeZoneOffset;\n        const todayBegin = new Date(today.getFullYear(), today.getMonth(), today.getDate()).getTime() + timeZoneOffset;\n\n        const startTimestamp = (this.state.calendermode === 'week') ? todayBegin - 3 * 24 * 60 * 60 * 1000 : firstCellBegin;\n        const endTimestamp = (this.state.calendermode === 'week') ? startTimestamp + 7 * 24 * 60 * 60 * 1000 : startTimestamp + 35 * 24 * 60 * 60 * 1000;\n\n        return { startTimestamp, endTimestamp, todayBegin };\n    }\n    querySchedule(startTimestampStr, endTimestampStr) {\n        ApiProvider.getOnePatientSchedule(this.props.caseinfo.TRANSINID, startTimestampStr, endTimestampStr)\n            .then(data => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n\n                const itemList = data.data;\n                let refactoredList = [];\n                itemList.forEach(item => {\n                    const itemTimeStr = item.time.split('T')[0];\n                    let foundItemIndex = refactoredList.findIndex(element => element.time === itemTimeStr);\n                    if (foundItemIndex === -1) {\n                        //not found, create one\n                        let newItem = {\n                            time: itemTimeStr,\n                            timestamp: item.time,\n                            scheduleList: []\n                        }\n                        let newEvent = {\n                            type: item.type,\n                            timestamp: new Date(item.time).getTime(),\n                            writer: (item.type === SCHEDULE_TYPE_EVENT) ? \"林醫師\" : \"張醫師\",\n                            name: item.name,//this.props.caseinfo.PBASINGNINFO.PNAMEC,//(item.type === SCHEDULE_TYPE_EVENT) ? \"林ＯＯ\" : \"黃ＯＯ\",\n                            content: item.context,\n                            bednumber: item.bednumber\n                        }\n                        newItem.scheduleList.push(newEvent);\n                        refactoredList.push(newItem);\n                    } else {\n                        //found, update item\n                        let newEvent = {\n                            type: item.type,\n                            timestamp: new Date(item.time).getTime(),\n                            writer: (item.type === SCHEDULE_TYPE_EVENT) ? \"林醫師\" : \"張醫師\",\n                            name: item.name,//this.props.caseinfo.PBASINGNINFO.PNAMEC,//(item.type === SCHEDULE_TYPE_EVENT) ? \"林ＯＯ\" : \"黃ＯＯ\",\n                            content: item.context,\n                            bednumber: item.bednumber\n                        }\n                        refactoredList[foundItemIndex].scheduleList.push(newEvent);\n                    }\n                });\n                this.setState({\n                    scheduleRawData: data.data,\n                    scheduleData: refactoredList\n                });\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }\n    queryNotice() {\n        ApiProvider.getOnePatientNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID)\n            .then(result => {\n                console.log(\"getOnePatientNotice OK \" + JSON.stringify(result));\n                this.setState({\n                    noticeRawData: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientNotice NG \" + JSON.stringify(err));\n            });\n    }\n    callbackFunction = (timestamp, clickindex) => {\n        console.log(timestamp)\n        this.setState({\n            ClickDate: timestamp,\n            displayinfo: clickindex\n        })\n    }\n    onCancelClick() {\n        this.setState({\n            ClickDate: this.state.todayBegin,\n            displayinfo: null\n        })\n    }\n    handleChange = (value) => {\n        console.log(value)\n        this.setState({\n            calendermode: value,\n            displayinfo: null,\n            Clickdays: null\n        })\n    }\n    onChange = (timestamp) => {\n        console.log('changestate')\n    }\n    onClickCheck(timestampdate) {\n        this.setState({\n            onClickdays: timestampdate\n        })\n    }\n    getDataFromTimestamp(timestamp) {\n        const dateStr = new Date(timestamp).toISOString().split('T')[0];\n        const dataOfDayIndex = this.state.scheduleData.findIndex(element => element.time === dateStr);\n        const dataOfDay = (dataOfDayIndex === -1) ? { scheduleList: [] } : this.state.scheduleData[dataOfDayIndex];\n        return dataOfDay;\n    }\n    getNoticeFromTimestamp(timestamp) {\n        const dateStr = new Date(timestamp).toISOString().split('T')[0];\n        const noticeOfDayArray = this.state.noticeRawData.filter(element => element.time.indexOf(dateStr) > -1);\n        return noticeOfDayArray;\n    }\n    weekmode() {\n        var weekcontext = []\n        for (let index = 0; index < 7; index++) {\n            const timestampdate = this.state.startTimestamp + (index * 24 * 60 * 60 * 1000);\n            const date = mmddformat(timestampdate)\n            const dataOfDay = this.getDataFromTimestamp(timestampdate);\n            if (index - 3 === 0) {\n                weekcontext.push(\n                    <Calendercell clickindex={'week'} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={true} newDate={true} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n                );\n            }\n            else {\n                weekcontext.push(\n                    <Calendercell clickindex={'week'} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={compareday(timestampdate)} newDate={false} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n                );\n\n            }\n        }\n        return weekcontext\n    }\n    weekmonthmode(weeknumber, firstMonthWeekDay) {\n        var weekcontext = []\n        for (let index = 0; index < 7; index++) {\n            const timestampdate = new Date(firstMonthWeekDay).getTime() + (index * 24 * 60 * 60 * 1000) + timeZoneOffset;\n            const date = mmddformat(timestampdate)\n            const dataOfDay = this.getDataFromTimestamp(timestampdate)\n\n            if (new Date(mmddformat(new Date().getTime())).getTime() <= new Date(mmddformat(new Date(timestampdate).getTime())).getTime()) {\n                weekcontext.push(\n                    <Calendercell clickindex={weeknumber} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={true} newDate={true} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n                );\n            }\n            else {\n                weekcontext.push(\n                    <Calendercell clickindex={weeknumber} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={false} newDate={true} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n                );\n            }\n        }\n        return weekcontext\n    }\n\n    ShowModule(rowIndex) {\n        if (rowIndex === undefined) rowIndex = 0;\n        console.log(\"this.state.ClickDate\" + this.state.ClickDate);\n\n        const dataOfDay = this.getDataFromTimestamp(this.state.ClickDate);\n        const noticeOfDay = this.getNoticeFromTimestamp(this.state.ClickDate);\n\n        function checkmode(state) {\n            if (state === 'week') {\n                return 'calenderdisplayinformation'\n            }\n            if (state === rowIndex) {\n                return 'calenderdisplayinformation'\n            }\n            return 'calenderdisplayinformationnone'\n        }\n        console.log(moment(this.state.ClickDate).format(\"YYYYMMDDHHmmss\"))\n        return (\n            <div className={checkmode(this.state.displayinfo)}>\n                <div className='calenderModule'>\n                    <t1>詳細資訊</t1>\n                    <Icon type=\"close\" onClick={() => this.onCancelClick()} />\n                </div>\n                <div className='Modulelayout'>\n                    <CrossectionSchedule PickerDate={this.state.ClickDate} source={1} caseinfo={this.props.caseinfo} noticeData={noticeOfDay} scheduleData={dataOfDay} editstatus={true}></CrossectionSchedule>\n                </div>\n            </div>\n        );\n    }\n\n\n    setgroup() {\n        var calendermonthgroup = []\n        const monthfirstweekdate = new Date(yyyymmfirstweeksate(new Date())).getDay()\n        const firstMonthWeekDay = new Date(yyyymmfirstweeksate(new Date())).getTime() - (monthfirstweekdate * 24 * 60 * 60 * 1000)\n\n        for (let index = 0; index < 5; index++) {\n            calendermonthgroup.push(\n                <div className='calendercontextMonthRows'>\n                    {this.weekmonthmode(index, firstMonthWeekDay + (index * 7 * 24 * 60 * 60 * 1000))}\n                    {this.ShowModule(index)}\n                </div>\n            );\n\n        }\n        return calendermonthgroup\n    }\n    modechange(state) {\n        if (state === 'week') {\n            return (\n                <div className='calendercontext'>\n                    {this.weekmode()}\n                    {this.ShowModule()}\n                </div>\n            );\n        }\n        else {\n            // return (\n            //     <div>\n            //         {this.setgroup()}\n            //     </div>\n            // );\n            return this.setgroup()\n        }\n    }\n\n    SelectDatepickertype() {\n        const { MonthPicker } = DatePicker;\n        if (this.state.calendermode === 'month') {\n            return (\n                <MonthPicker placeholder=\"請選擇月份\" />\n            );\n        }\n        else {\n            return (\n                <DatePicker placeholder={['請選擇時間']} />\n            );\n        }\n    }\n    render() {\n        const { Option } = Select;\n        // const localday = new Date().getTime()\n        // function compareday(days) {\n        //     if (new Date(days).getTime() > new Date().getTime()) {\n        //         return true\n        //     }\n        //     return false\n        // }\n        return (\n            <div>\n                <t1 className='calendertitle'>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>行事曆</t2>\n                </t1>\n                <div className='calendercontrol'>\n                    {this.SelectDatepickertype()}\n                    <Select defaultValue={this.state.calendermode} onChange={this.handleChange}>\n                        <Option value=\"week\">週</Option>\n                        <Option value=\"month\">月</Option>\n                    </Select>\n                </div>\n                {this.modechange(this.state.calendermode)}\n            </div>\n        );\n    }\n}\n\nexport default Calender\n","import React, { Component } from 'react';\nimport Notice from './Notice'\nimport Bedsidecard from './Bedsidecard'\nimport Scheduletodo from './Scheduletodo'\nimport Calender from './Calender'\nimport './Scheduleview.scss'\n\nclass Scheduleview extends Component {\n    render() {\n        function monthformat(month) {\n            return month + 1\n        }\n        function dateformat(time) {\n            return new Date(time).getFullYear() + \"-\" + monthformat(new Date(time).getMonth()) + \"-\" + new Date(time).getDate()\n        }\n        function exporttime(time) {\n            if (time === null) {\n                return \"--\"\n            }\n            else {\n                return dateformat(time)\n            }\n        }\n        const { caseinfo } = this.props\n        const time = new Date().getTime()\n\n        console.log(caseinfo)\n        return (\n            <div>\n                <div style={{ marginBottom: \"5px\" }}>\n                    <centerstyle>\n                        <div className='scheduletitle'>轉入時間:{dateformat(time)}/轉出時間\b:{exporttime(null)}</div>\n                    </centerstyle>\n                    <div className='boxshadow'></div>\n                </div>\n                <div className='schedulelayout'>\n                    <Bedsidecard caseinfo={caseinfo}></Bedsidecard>\n                    <Notice caseinfo={caseinfo}></Notice>\n                    <Calender caseinfo={caseinfo}></Calender>\n                    <Scheduletodo caseinfo={caseinfo}></Scheduletodo>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Scheduleview\n","import React, { Component } from 'react';\nimport Patientinfo from './Patientviewinfo'\nimport { Select, Modal } from 'antd';\nimport { bednumberformat, gender, birthdayweeks } from '../Function/Wardbedfunction'\nimport { Tabs } from 'antd';\nimport Crosssectionlayout from './CrossSectionView/Crosssectionlayout'\nimport Chroniclelayout from './ChronicleView/Chroniclelayout'\nimport Flowsheetlayout from './FlootSheetView/Flootsheetlayout'\nimport Examreport from './ExamReport/ExamReport'\nimport Orderview from './Orderview/Orderview'\nimport Noteview from './NoteView/Note'\nimport RTview from './RT/RTview'\nimport Nurtionview from './Nurtion/Nurtion'\nimport Infectionview from './Infection/Infection'\nimport Scheduleview from './Schedule/Scheduleview'\nimport * as ApiProvider from '../API/ApiProvider'\nimport X2JS from 'x2js';\nimport moment from 'moment';\nimport * as WardState from '../Function/Wardstate'\n\nclass Patientviewlayout extends Component {\n    state = {\n        TYPE: this.props.location.TYPE,\n        PBASINGNINFO: [],\n        PDOCNEW: [],\n        REMARK: [],\n        PLOC: [],\n        QMNC: [],\n        QENT: [],\n        QTWER: [],\n        tabstring: \"時間點檢視\",\n        visible: false,\n        PLOCSTART: null\n        // TYPE: this.props.location.TYPE,\n        // PBASINGNINFO: SimData.PBASIGNINFO,\n        // PDOCNEW: SimData.PDOCNEW,\n        // REMARK: SimData.REMARK,\n        // PLOC: SimData.PLOC,\n        // QMNC: SimData.QMNC,\n        // QTWER: SimData.QTWER,\n        // tabstring: \"時間點檢視\",\n        // visible: false,\n    }\n    componentDidMount() {\n        // const BEDNUMBER = Number(this.props.location.state.BEDNUMBER)\n        const CASEID = this.props.location.state.CASEID\n        const HISID = this.props.location.state.HISID\n        const PBASINFO = ApiProvider.getTablePBASINFO(HISID)\n            .then(data => {\n                return {\n                    PBASINGNINFO: data.data,\n                }\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n        const PDOCNEW = ApiProvider.getTablePDOCNEW(CASEID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getTablePDOCNEW NG \" + JSON.stringify(err));\n            });\n        const PLOC = ApiProvider.getTablePLOC(CASEID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n        // const pcaslist = ApiProvider.getStoredProcedurePCASELIST(HISID,\"DOC3924B\",\"E\")\n        Promise.all([PBASINFO, PDOCNEW, PLOC])\n            .then(result => {\n                console.log(\"API DATA = \" + result)\n                this.nis_status_shange(CASEID, result[0].PBASINGNINFO);\n                const PLOCLIST = result[2]\n                const PLOCTR = PLOCLIST[PLOCLIST.length - 1]\n                const PLOCSTART = PLOCLIST[0]\n                return {\n                    PBASINGNINFO: result[0].PBASINGNINFO,\n                    PDOCNEW: result[1],\n                    PLOC: PLOCTR,\n                    PLOCSTART: PLOCSTART\n                }\n            })\n            .then(result => {\n                this.setState({\n                    PBASINGNINFO: result.PBASINGNINFO,\n                    PDOCNEW: result.PDOCNEW,\n                    PLOC: result.PLOC,\n                    PLOCSTART: result.PLOCSTART\n                })\n            })\n    }\n\n    selectchange = (HBEDNUMBER) => {\n        const datalist = this.state.HBEDLIST\n        const filterdata = datalist.filter(function (info, index, array) {\n            return parseInt(info.HBEDNO) === HBEDNUMBER\n        })\n        if (filterdata.length === 0) {\n            return null\n        }\n        else {\n            const source = filterdata[0]\n            const HISID = source.PHISTNUM\n            const CASEID = source.PCASENO\n            const PBASINFO = ApiProvider.getTablePBASINFO(HISID)\n                .then(data => {\n                    return {\n                        PBASINGNINFO: data.data,\n                    }\n                })\n                .catch(err => {\n                    console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n                });\n            const PDOCNEW = ApiProvider.getTablePDOCNEW(CASEID)\n                .then(data => {\n                    return data.data\n                })\n                .catch(err => {\n                    console.log(\"Andy test getTablePDOCNEW NG \" + JSON.stringify(err));\n                });\n            const PLOC = ApiProvider.getTablePLOC(CASEID)\n                .then(data => {\n                    const matadata = data.data\n                    return matadata[matadata.length - 1]\n                })\n                .catch(err => {\n                    console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n                });\n            Promise.all([PBASINFO, PDOCNEW, PLOC])\n                .then(result => {\n                    this.nis_status_shange(CASEID, result[0].PBASINGNINFO);\n                    return {\n                        PBASINGNINFO: result[0].PBASINGNINFO,\n                        // BEDNUMBER: result[0].BEDNUMBER,\n                        PDOCNEW: result[1],\n                        PLOC: result[2]\n                    }\n                })\n                .then(result => {\n                    this.setState({\n                        PBASINGNINFO: result.PBASINGNINFO,\n                        PDOCNEW: result.PDOCNEW,\n                        PLOC: result.PLOC\n                    })\n                })\n                .catch(err => {\n                    console.log(\"error\")\n                })\n\n        }\n    }\n\n    nis_status_shange(CASEID, PBASINGNINFO) {\n        const xm2 = new X2JS()\n        ApiProvider.getQENT(CASEID)\n            .then(data => {\n                this.setState({\n                    QENT: WardState.XM2JSON(data.data)\n                })\n            })\n            .catch(err => { console.log(err) })\n        ApiProvider.getQMNC(CASEID)\n            .then(data => {\n                // const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                this.setState({\n                    QMNC: WardState.XM2JSON(data.data)\n                })\n                const starttime = moment(PBASINGNINFO.PBIRTHDT, 'YYYYMMDD').format(\"YYYYMMDDHHmm\")\n                const endtime = moment().format('YYYYMMDDHHmm')\n                ApiProvider.getQTWPER(CASEID, starttime, endtime)\n                    .then(data => {\n                        const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                        var weightlist = []\n                        for (let index = 0; index < parsedata.length; index++) {\n                            const element = parsedata[index];\n                            if (element.type === 'TW') {\n                                weightlist.push(element)\n                            }\n                        }\n                        this.setState({ QTWER: weightlist })\n                    })\n                    .catch(err => {\n                        console.log(\"Andy test getQTWPER NG \" + JSON.stringify(err));\n                    });\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n    }\n\n\n\n\n    onChange = (activkey) => {\n        this.setState({\n            tabstring: activkey\n        }\n        )\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    OptionSelectRender() {\n        function addzero(value) {\n            if (value < 10) {\n                return \"0\" + value\n            }\n            return value\n        }\n        function optionselect(LISTBED) {\n            const dataoption = LISTBED.map(function (info, index, array) {\n                return (\n                    <Option key={index} value={Number(info.HBEDNO)}>病床{addzero(parseInt(info.HBEDNO))}</Option>\n                );\n            })\n            return dataoption\n\n        }\n        const BedList = this.props.location.state.source\n        console.log(BedList)\n        const { Option } = Select;\n        const BEDNUMBER = Number(this.props.location.state.BEDNUMBER)\n        if (BedList !== null) {\n            return (\n                <Select defaultValue={Number(BEDNUMBER)} style={{ width: 120 }} onChange={this.selectchange}>\n                    {optionselect(BedList)}\n                </Select>\n            );\n        }\n        return null\n    }\n    fixpatientDate = (data) => {\n        const transdata = {\n            'cause': '住院原因',\n            'car_pho': '主要照顧者電話',\n            'care': '主要照顧者',\n            'con_1': '聯絡人1',\n            'con_p11': '聯絡人1電話',\n            'con_2': '聯絡人2',\n            'con_p21': '聯絡人2電話',\n            'dvs': '住院時生命徵象',\n            'habit': '飲食狀況',\n            'oxy': '住院時氧和評估',\n            'h_val': '住院時頭圍',\n            'b_val': '住院時胸圍',\n            'tall': '住院時身高',\n            'weight': '住院時體重'\n        }\n\n        const patientDate = []\n\n        for (let index in transdata) {\n            if (data[index] !== \"\") {\n                patientDate.push([transdata[index], data[index]])\n            }\n        }\n\n        return patientDate\n    }\n    render() {\n\n        const USERDATA = this.state.PBASINGNINFO\n        if (USERDATA.length === 0) {\n            return null\n        }\n        const BEDNUMBER = Number(this.props.location.state.BEDNUMBER)\n        const CASEID = this.props.location.state.CASEID\n        const HISID = this.props.location.state.HISID\n        const DOCLIST = this.state.PDOCNEW\n        const MainDoc = WardState.Doc(DOCLIST, \"B\")\n        const remark = this.state.REMARK.context\n        const ploc = this.state.PLOC\n        const transintime = ploc.PLOCTM.toString()\n        const transindt = ploc.PLOCDT.toString()\n        const transinid = \"NICU\" + transindt + transintime\n        const qmnc = this.state.QMNC\n        const bornWeeks = qmnc.weeks\n        const bornDays = qmnc.days\n        const wetghtList = this.state.QTWER\n        const { TabPane } = Tabs;\n        const selectrender = this.OptionSelectRender()\n        const caseinfo = {\n            \"HISID\": HISID,\n            \"CASEID\": CASEID,\n            \"WEEK_BORN\": bornWeeks,\n            \"DAY_BORN\": bornDays,\n            \"TRANSINID\": transinid,\n            \"TRANSINDT\": transindt,\n            \"WEIGHT\": wetghtList,\n            \"PBASINGNINFO\": USERDATA,\n            \"PLOCSTART\": this.state.PLOCSTART\n        }\n        const patientDetail = this.fixpatientDate(this.state.QENT)\n\n        return (\n            <div>\n                {/* <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: 'center', height: \"40px\" }}>\n                    <t2>住院病人資訊 > 病床{bednumberformat(BEDNUMBER)} > {this.state.tabstring}</t2>\n                    {selectrender}\n                </div> */}\n                <div style={{ display: 'flex', justifyContent: \"space-between\", alignItems: 'center', height: \"40px\", marginTop: \"10px\", padding: \"8px\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", backgroundColor: \"#71b0e46e\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(6,auto)\", gridColumnGap: \"10px\", alignItems: \"center\" }}>\n                        <t2 style={{ fontWeight: \"600\", padding: \"0px 4px\", color: \"black\" }}>\n                            NICU-{bednumberformat(Number(BEDNUMBER))}\n                            <span style={{ lineHeight: \"30px\", fontSize: \"20px\", padding: \"0px 4px\" }}>{USERDATA.PNAMEC.toString().trim()}</span>\n                            {HISID}\n                            {/* <t2>{birthdayweeks(moment(USERDATA.PBIRTHDT, \"YYYYMMDD\").format(\"YYYY/MM/DD\"))}週歲</t2> */}\n                        </t2>\n                        <t2 style={{ alignItems: \"center\" }}>\n                            生日：\n                                <span style={{ fontWeight: \"600\", color: \"black\" }}></span>\n                        </t2>\n                        <t2>\n                            週數： >\n                                <spam style={{ fontWeight: \"600\", color: \"black\" }}></spam>\n                        </t2>\n                        <t2>\n                            體重： g >\n                                <spam style={{ fontWeight: \"600\", color: \"black\" }}></spam>\n                        </t2>\n                        <t2 style={{ fontWeight: \"600\", color: \"black\" }}>住院第 天</t2>\n                        <t2 style={{ color: \"blue\", textDecoration: \"underline\", cursor: \"pointer\" }} onClick={this.showModal}>入院評估</t2>\n                        <Modal\n                            title=\"病人基本資料\"\n                            visible={this.state.visible}\n                            onOk={this.handleOk}\n                            onCancel={this.handleCancel}\n                            width={800}\n                            footer={null}>\n                            <Patientinfo caseinfo={caseinfo} patientDetail={patientDetail}></Patientinfo>\n                        </Modal>\n                    </div>\n                </div>\n                <Tabs defaultActiveKey={this.state.tabstring} tabPosition={'top'} onChange={this.onChange}>\n                    <TabPane tab=\"時間點檢視\" key=\"時間點檢視\">\n                        <Crosssectionlayout parentDateCallback={this.callback} caseinfo={caseinfo}></Crosssectionlayout>\n                    </TabPane>\n                    <TabPane tab=\"時間軸檢視\" key=\"時間軸檢視\">\n                        <Chroniclelayout caseinfo={caseinfo}></Chroniclelayout>\n                    </TabPane>\n                    <TabPane tab=\"輸出入細節\" key=\"輸出入細節\">\n                        <Flowsheetlayout caseinfo={caseinfo}></Flowsheetlayout>\n                    </TabPane>\n                    <TabPane tab=\"檢驗及報告\" key=\"檢驗及報告\">\n                        <Examreport caseinfo={caseinfo}>></Examreport>\n                    </TabPane>\n                    <TabPane tab=\"醫囑及藥囑\" key=\"醫囑及藥囑\">\n                        <Orderview caseinfo={caseinfo}>></Orderview>\n                    </TabPane>\n                    <TabPane tab=\"跨團隊紀錄\" key=\"跨團隊紀錄\">\n                        <Noteview caseinfo={caseinfo}>></Noteview>\n                    </TabPane>\n                    <TabPane tab=\"呼吸評估\" key=\"呼吸評估\">\n                        <RTview caseinfo={caseinfo}>></RTview>\n                    </TabPane>\n                    <TabPane tab=\"營養評估\" key=\"營養評估\">\n                        <Nurtionview caseinfo={caseinfo}>></Nurtionview>\n                    </TabPane>\n                    <TabPane tab=\"感染評估\" key=\"感染評估\">\n                        <Infectionview caseinfo={caseinfo}>></Infectionview>\n                    </TabPane>\n                    <TabPane tab=\"行事曆及註記\" key=\"行事曆及註記\">\n                        <Scheduleview caseinfo={caseinfo}>></Scheduleview>\n                    </TabPane>\n                </Tabs>\n            </div >\n        );\n    }\n}\n\nexport default Patientviewlayout;\n","import React, { Component } from 'react';\nimport { Table, Input, Select, Button, Modal, Icon } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider';\nconst { confirm } = Modal;\n\nclass Powersetting extends Component {\n    constructor(props) {\n        super();\n\n        this.addUserdata = this.addUserdata.bind(this)\n        this.adduserhandleChange = this.adduserhandleChange.bind(this)\n    }\n\n    state = {\n        MouseClick: 0,\n        name: '',\n        role: 0,\n        adduser: undefined,\n        userList: [],\n        power: ['僅可瀏覽病房總覽、歷史資料查詢', '可瀏覽和編輯病房總覽、歷史資料查詢', '可瀏覽和編輯權限設定、系統摘要'],\n        powerName: ['唯讀使用者', '一般使用者', '系統管理者'],\n        visible: false,\n        radioValue: 0,\n        pwdRadio: true,\n        inputUsername: '',\n        inputPassword: '',\n        inputName: '',\n        inputDoctorid: '',\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        this.nameChange = this.nameChange.bind(this)\n        this.queryUserdata = this.queryUserdata.bind(this)\n        this.inputuserName = this.inputuserName.bind(this)\n        this.inputPassword = this.inputPassword.bind(this)\n        this.inputName = this.inputName.bind(this)\n        this.inputDoctorid = this.inputDoctorid.bind(this)\n\n        ApiProvider.getAlluser()\n            .then(data => {\n                this.setState({ userList: data.data })\n            })\n            .catch(err => { })\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n\n    radioOnChange = e => {\n        this.setState({\n            radioValue: e.target.value,\n        }, () => {\n            if (this.state.radioValue === 1) {\n                this.setState({\n                    pwdRadio: true,\n                })\n                console.log(this.state.radioValue)\n            } else if (this.state.radioValue === 0) {\n                this.setState({\n                    pwdRadio: false,\n                })\n                console.log(this.state.radioValue)\n            }\n        })\n    };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    MouseClickTable(record) {\n        this.setState({\n            MouseClick: record\n        })\n    }\n\n    queryUserdata() {\n        const { userList, role } = this.state\n        let fixData = userList\n\n        if (role != 0) {\n            fixData = fixData.filter(data => data.role == (role - 1))\n        }\n\n        if (this.state.name !== '') {\n            console.log(this.state.name)\n            fixData = fixData.filter(data => data.name.match(this.state.name) != null)\n        }\n        return fixData\n    }\n\n    addUserdata() {//sso 只剩下4種角色 其他先傳空直\n        ApiProvider.register(this.state.inputName, '', this.state.adduser, this.state.inputUsername, 'none')\n            .then(data => {\n                ApiProvider.getAlluser()\n                    .then(data => {\n                        this.setState({ userList: data.data, inputUsername: '', inputPassword: '', inputName: '', inputDoctorid: '' })\n                    })\n                    .catch(err => { })\n            })\n            .catch(err => { })\n        this.setState({\n            visible: false,\n        });\n    }\n\n\n    showDeleteConfirm(name, account, role, roleString) {\n        const set_State = this.setState.bind(this)\n        confirm({\n            title: '請問您確定要刪除此帳號嗎?',\n            content: <div>姓名：{name}<br />角色：{roleString}<br />帳號：{account}</div>,\n            okText: 'Yes',\n            okType: 'danger',\n            cancelText: 'No',\n            onOk() {\n                ApiProvider.deleteUser(name, role, account).then(data => {\n                    ApiProvider.getAlluser()\n                        .then(data => {\n                            set_State({ userList: data.data })\n                        })\n                        .catch(err => { })\n                }).catch(err => { })\n            },\n            onCancel() {\n            },\n        });\n    }\n\n    EditStyle(key, name, account, role, roleString) {\n        if (key === this.state.MouseClick) {\n            return (\n                <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gridColumnGap: '10px' }}>\n                    <div>\n                        <Button onClick={this.showDeleteConfirm.bind(this, name, account, role, roleString)} type=\"dashed\">\n                            刪除\n                        </Button>\n                    </div>\n                </div>\n            );\n        }\n        else return null\n    }\n\n    handleChange = (value) => {\n        this.setState({ role: value })\n    }\n\n    adduserhandleChange(value) {\n        this.setState({ adduser: value })\n    }\n\n    nameChange(event) {\n        this.setState({ name: event.target.value })\n    }\n\n    inputuserName(event) {\n        this.setState({ inputUsername: event.target.value })\n    }\n\n    inputPassword(event) {\n        this.setState({ inputPassword: event.target.value })\n    }\n\n    inputName(event) {\n        this.setState({ inputName: event.target.value })\n    }\n\n    inputDoctorid(event) {\n        this.setState({ inputDoctorid: event.target.value })\n    }\n\n    Searchbar = () => {\n        const { Option } = Select;\n\n        return (\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <div style={{ fontSize: '16px' }}>\n                        角色:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Select defaultValue={this.state.role} style={{ width: 150 }} onChange={this.handleChange}>\n                            <Option value={0}>全部使用者</Option>\n                            <Option value={1}>唯讀使用者</Option>\n                            <Option value={2}>一般使用者</Option>\n                        </Select>\n                    </div>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        姓名:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"輸入個案姓名\" onChange={this.nameChange}></Input>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n    render() {\n\n        const columns = [\n            {\n                title: '編號',\n                dataIndex: 'id',\n                key: 'id',\n                width: \"10%\"\n            },\n            {\n                title: '姓名',\n                dataIndex: 'name',\n                key: 'name',\n                width: \"10%\"\n            },\n            {\n                title: '醫師帳號',\n                dataIndex: 'account',\n                key: 'account',\n                width: \"12%\"\n            },\n            {\n                title: '角色',\n                dataIndex: 'role',\n                key: 'role',\n                width: \"10%\"\n            },\n            {\n                title: '權限',\n                dataIndex: 'power',\n                key: 'power',\n                width: \"40%\"\n            },\n            {\n                dataIndex: 'clickstate',\n                key: 'clickstate',\n                width: \"7%\"\n            }\n        ];\n\n        const fixData = this.queryUserdata()\n\n        const userData = fixData.map((data, index) => {\n            let roleString = ''\n            let powerString = ''\n\n            roleString = this.state.powerName[data.role]\n            powerString = this.state.power[data.role]\n\n            return [\n                {\n                    key: ++index,\n                    id: index,\n                    name: data.name,\n                    role: roleString,\n                    power: powerString,\n                    account: data.username,\n                    doctorid: data.doctorid,\n                    clickstate: this.EditStyle(index, data.name, data.username, data.role, roleString)\n                }\n            ]\n        })\n\n        let myNewArray = [].concat.apply([], userData);\n        const { Option } = Select;\n\n        // if (this.state.userList.length === 0) {\n        //     return (\n        //         <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>\n        //             <Icon type=\"loading\" />\n        //         </div>\n        //     );\n        // }\n\n        return (\n            <div>\n                <div style={{ display: \"flex\", justifyContent: 'space-between', alignItems: 'center' }}>\n                    {this.Searchbar()}\n                    <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                        <Button style={{ width: \"100%\" }} onClick={this.showModal}>新增帳號</Button>\n                        <Modal\n                            title=\"新增帳號\"\n                            visible={this.state.visible}\n                            onOk={this.addUserdata}\n                            onCancel={this.handleCancel}\n                            width=\"570px\"\n                        >\n                            <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n\n                            </div>\n                            <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\", marginTop: \"10px\" }}>\n                                <div style={{ marginLeft: \"10px\" }}>\n                                    醫師帳號：\n                                <Input id=\"username\" value={this.state.inputUsername} onChange={this.inputuserName} placeholder=\"輸入帳號\" style={{ width: '120px' }} />\n                                </div>\n                                <div style={{ marginLeft: \"10px\" }}>\n                                    姓名：\n                                <Input id=\"name\" placeholder=\"輸入姓名\" value={this.state.inputName} onChange={this.inputName} style={{ width: '120px' }} />\n                                </div>\n                            </div>\n                            <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\", marginTop: \"10px\", marginLeft: \"13px\" }}>\n                                <div style={{ marginLeft: \"0px\" }}>\n                                    角色：{this.state.pwdRadio ?\n                                        <Select placeholder='選擇角色' style={{ width: 150 }} onChange={this.adduserhandleChange.bind(this)}>\n                                            <Option value={0}>唯讀使用者</Option>\n                                            <Option value={1}>一般使用者</Option>\n                                        </Select> :\n                                        <Select placeholder='選擇角色' style={{ width: 150 }} onChange={this.adduserhandleChange.bind(this)}>\n                                            <Option value={2}>系統設定管理員</Option>\n                                        </Select>}\n                                </div>\n                            </div>\n                            <div>\n                            </div>\n                        </Modal>\n                    </div>\n                </div>\n                <div style={{ marginTop: '20px' }}>\n                    <Table columns={columns} dataSource={myNewArray} onRow={record => {\n                        return {\n                            onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                            onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                        };\n                    }} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Powersetting;\n","import React, { Component } from 'react';\nimport { Table, Icon } from 'antd';\n\nclass Systemlogtable extends Component {\n    state = {\n        MouseClick: 0\n    }\n\n    MouseClickTable(record) {\n        this.setState({\n            MouseClick: record\n        })\n    }\n\n    render() {\n\n        const powerName = ['唯讀使用者', '一般使用者', '系統管理員']\n        const loginlog_table = this.props.loginlogList.map(\n            (info, index) => {\n                let managerName = ''\n                let dateTime = info.time.split(\"T\")[0] + ' ' + info.time.split(\"T\")[1].split(\".\")[0]\n\n                managerName = powerName[info.role]\n\n                return {\n                    key: index,\n                    time: dateTime,\n                    event: 'User ' + info.name + '(' + managerName + ') login system'\n                }\n            }\n        )\n\n        const apilog_table = this.props.apilogList.map((data, index) => {\n            if (data !== null) {\n                let date = data.split(\"- -\")[1].split(\"]\")[0].split(\"[\")[1].split(\" \")[0].split(\"/\")\n                const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n                for (let j = 0; j < months.length; j++) {\n                    if (date[1] === months[j]) {\n                        date[1] = months.indexOf(months[j]) + 1\n                    }\n                }\n                if (date[1] < 10) {\n                    date[1] = '0' + date[1]\n                }\n                let time = date[2].split(\":\")[0] + \"-\" + date[1] + \"-\" + date[0] + \" \" + date[2].split(\":\")[1] + \":\" + date[2].split(\":\")[2] + \":\" + date[2].split(\":\")[3]\n                let content = data.split(\"- -\")[1].split(\"]\")[1]\n\n                return {\n                    key: index,\n                    time: time,\n                    event: content\n                }\n            }\n            return null\n        })\n\n        const columns = [\n            {\n                title: '記錄時間',\n                dataIndex: 'time',\n                key: 'time',\n                width: \"1%\"\n            },\n            {\n                title: '事件',\n                dataIndex: 'event',\n                key: 'event',\n                width: \"10%\"\n            }\n        ]\n\n        // if (loginlog_table.length === 0 || apilog_table.length === 0) {\n        //     return (\n        //         <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>\n        //             <Icon type=\"loading\" />\n        //         </div>\n        //     );\n        // }\n\n        return (\n            <div style={{ marginTop: '20px' }}>\n                {\n                    this.props.optionValue ? <Table columns={columns} dataSource={apilog_table} onRow={record => {\n                        return {\n                            onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                            onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                        }\n                    }} pagination={{\n                        onChange: (page, pageSize) => {\n                            //console.log('current page: ', page)\n                            this.props.getPages(page)\n                        }\n                    }} /> :\n                        <Table columns={columns} dataSource={loginlog_table} onRow={record => {\n                            return {\n                                onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                                onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                            }\n                        }} pagination={{\n                            onChange: (page, pageSize) => {\n                                //console.log('current page: ', page)\n                                this.props.getPages(page)\n                            }\n                        }} />\n                }\n            </div>\n        )\n    }\n}\n\nexport default Systemlogtable\n","import React, { Component } from 'react';\nimport { Progress, Select, DatePicker } from 'antd';\nimport Systemlogtable from './Systemlogtable'\nimport * as ApiProvider from '../API/ApiProvider';\n\nclass Systemlog extends Component {\n\n    state = { startTime: \"\", endTime: \"\", totalSpace: 0, usingSpace: 0, percent: 0, option: 0, loginlogList: [], apilogList: [], page: 1 }\n\n    componentDidMount() {\n        ApiProvider.getSpace()\n            .then(data => {\n                const totalSpace = data.data[0].total / 1024 / 1024 / 1024\n                const usingSpace = (data.data[0].total - data.data[0].unuse) / 1024 / 1024 / 1024\n                const percent = (usingSpace / totalSpace) * 100\n                this.setState({ totalSpace: totalSpace.toFixed(2), usingSpace: usingSpace.toFixed(2), percent: percent.toFixed(2) })\n            })\n            .catch(err => { })\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    onChange(date, dateString) {\n        this.setState({ startTime: dateString[0], endTime: dateString[1] }, () => {\n            if (this.state.option === 0) {\n                this.queryLoginLogdata()\n            } else if (this.state.option === 1) {\n                this.queryApiLogdata()\n            }\n        });\n    }\n\n    queryLoginLogdata() {\n        if (this.state.startTime !== \"\" && this.state.endTime !== \"\") {\n            const st = new Date(this.state.startTime.split('-')[0], this.state.startTime.split('-')[1] - 1, this.state.startTime.split('-')[2]).toISOString().split('.')[0];\n            const et = new Date(this.state.endTime.split('-')[0], this.state.endTime.split('-')[1] - 1, this.state.endTime.split('-')[2]).toISOString().split('.')[0];\n\n            ApiProvider.getLoginlog(st, et)\n                .then(data => {\n                    this.setState({ loginlogList: data.data, apilogList: [] })\n                })\n                .catch(err => { })\n        }\n    }\n\n    queryApiLogdata() {\n        if (this.state.startTime !== \"\" && this.state.endTime !== \"\") {\n            ApiProvider.getApilog(this.state.startTime)\n                .then(data => {\n                    this.setState({ apilogList: data.data, loginlogList: [] })\n                })\n                .catch(err => { })\n        }\n    }\n\n    getPages(pages) {\n        this.setState({ page: pages }, () => {\n            //console.log('current page: ', this.state.page)\n        })\n    }\n\n    handleChange(value) {\n        this.setState({ option: value })\n    }\n    render() {\n        const { Option } = Select;\n        const { RangePicker } = DatePicker;\n        const onChange = this.onChange.bind(this);\n\n        return (\n            <div>\n                <div style={{ fontSize: '22px' }}>系統空間使用狀況</div>\n                <div style={{ marginTop: \"10px\" }}><Progress percent={this.state.percent} showInfo={false} /></div>\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginTop: \"10px\" }}>\n                    <div>\n                        <div>已使用空間/總空間</div>\n                        <div>{this.state.usingSpace}GB({this.state.percent}%)/{this.state.totalSpace}GB</div>\n                    </div>\n                    <div>\n                        <div>收案中的個案資料0.9GB(10.5%)</div>\n                        <div>0.9GB(10.5%)</div>\n                    </div>\n                </div>\n                <div style={{ marginTop: '20px' }}>\n                    <div style={{ fontSize: '22px' }}>Event Log</div>\n                    <div style={{ marginTop: \"10px\" }}>\n                        <Select placeholder='選擇log' style={{ width: 200 }} onChange={this.handleChange.bind(this)}>\n                            <Option value={0}>Login log</Option>\n                            <Option value={1}>API access log</Option>\n                        </Select>\n                        <RangePicker onChange={onChange} style={{ marginLeft: \"10px\", width: \"250px\" }} />\n                    </div>\n                    <div style={{ marginTop: '10px' }}>\n                        <Systemlogtable loginlogList={this.state.loginlogList} apilogList={this.state.apilogList} optionValue={this.state.option} getPages={this.getPages.bind(this)} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Systemlog\n","import React, { Component } from 'react';\nimport { Tabs } from 'antd';\nimport Powersetting from '../Systemgroup/powersetting'\nimport Systemlog from '../Systemgroup/Systemlog'\n// import Warningmanage from '../Systemgroup/Warningmanage'\n\n\nclass Systemcontrol extends Component {\n    state = {\n        powerLogin: 0\n    }\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    render() {\n\n        const { TabPane } = Tabs;\n        const bollogin = this.state.powerLogin == 2\n        return (\n            <div style={{ paddingLeft: \"24px\", paddingRight: \"24px\" }}>\n                <div style={{ fontSize: \"22px\", height: '50px', lineHeight: \"50px\" }}>系統設定</div>\n                <Tabs defaultActiveKey=\"5\" onChange={console.log(\"click\")} å>\n                    <TabPane tab=\"權限設定\" key=\"1\" >\n                        <Powersetting />\n                    </TabPane>\n                    {\n                        bollogin && <TabPane tab=\"系統摘要\" key=\"2\" >\n                            <Systemlog />\n                        </TabPane>\n                    }\n                    {/*<TabPane tab=\"裝置連線狀態管理\" key=\"3\">\n                    </TabPane> \n                    <TabPane tab=\"病人資料狀態管理\" key=\"3\">\n                    </TabPane>                  \n                    <TabPane tab=\"警示管理\" key=\"5\">\n                        <Warningmanage/>\n                    </TabPane>*/}\n                </Tabs>\n            </div>\n        );\n    }\n}\n\nexport default Systemcontrol;\n","import React, { Component } from 'react';\nimport './Layout.scss';\nimport Sidermenu from './Sidermenu';\nimport Bedview from '../Wardview/Bedinfo/Bedview'\nimport Historyview from '../Content/Historyview'\nimport Patientviewlayout from '../Patientview/Patientviewlayout'\nimport Systemcontrol from '../Content/Systemcontrol'\nimport { Route, Switch, Link } from 'react-router-dom';\nimport { yyyymmddformat, weekdateformat } from '../Function/Timeformat'\nimport { Icon } from 'antd'\n\nclass Layoutframe extends Component {\n    onClickLogout() {\n        sessionStorage.clear();\n    }\n    render() {\n        const UsrName = sessionStorage.getItem('user');\n        const url_path = this.props.location.pathname\n        return (\n            <div style={{ height: \"100vh\" }}>\n                <div className=\"header\">\n                    {/*eslint-disable-next-line*/}\n                    <div style={{ display: 'flex', alignItems: 'center', fontweight: \"default\", fontsize: \"20px\" }}>\n                        <t1>北榮NICU智慧醫療系統</t1>\n                        <Sidermenu path={url_path} routes={this.props.route}></Sidermenu>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"10px\" }}>\n                        <t3 style={{ color: 'white' }}>{UsrName}醫師 {yyyymmddformat(new Date())} {weekdateformat(new Date())}</t3>\n                        <Link to=\"/Login\" onClick={() => this.onClickLogout()}>\n                            <Icon style={{ color: \"white\" }} type=\"logout\" />\n                        </Link>\n                    </div>\n                </div>\n                <div className=\"content\">\n                    <Switch>\n                        <Route path={`${this.props.match.path}/ward`} component={Bedview} />\n                        <Route path={`${this.props.match.path}/history`} component={Historyview} />\n                        <Route path={`${this.props.match.path}/system`} component={Systemcontrol} />\n                        <Route path={`${this.props.match.path}/patient`} component={Patientviewlayout} />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Layoutframe;\n","import React, { Component, cloneElement } from 'react';\nimport { Button } from 'antd';\nimport { Redirect } from 'react-router-dom'\nimport { Input } from 'antd'\nimport * as ApiProvider from '../API/ApiProvider';\n\n\nclass Loginview extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: false,\n            permission: true,\n            statusstring: null\n        }\n        this.setRedirect = this.setRedirect.bind(this);   //把元件中的this繫結到handleClick方法中，這樣就會保持this一致          \n    };\n\n    componentDidMount() {\n        const account = document.querySelector('#account')\n        const password = document.querySelector('#password')\n        account.addEventListener('focus', () => {\n            account.addEventListener('keyup', e => {\n                if (e.keyCode === 13) {\n                    account.blur();\n                    password.focus();\n                }\n            })\n        })\n\n        password.addEventListener('focus', () => {\n            password.addEventListener('keyup', e => {\n                e.keyCode === 13 && this.setRedirect()\n            })\n        })\n    }\n\n    setRedirect = () => {\n        const account = document.getElementById(\"account\").value;\n        const password = document.getElementById(\"password\").value;\n        // const data = { username: account, password: password }\n        console.log(account, password)\n        ApiProvider.login(account, password)\n            .then(result => {\n                console.log(\"login OK \" + JSON.stringify(result));\n                const userData = result.data\n                const user = account\n                const role = userData[0].role\n                sessionStorage.setItem('user', user);\n                sessionStorage.setItem('role', role);\n                this.setState({\n                    redirect: true\n                })\n            })\n            .catch(err => {\n                console.log(\"login NG \" + JSON.stringify(err));\n                this.setState({\n                    permission: false,\n                    statusstring: \"帳號或密碼錯誤\"\n                })\n            });\n    }\n    renderRedirect = () => {\n        const login = sessionStorage.getItem('user');\n        const role = sessionStorage.getItem('role');\n        console.log(role)\n        if (login !== null) {\n            if (Number(role) === 2) {\n                return <Redirect from={\"/login\"} to={\"/nicu/system\"} />\n            }\n            return <Redirect from={\"/login\"} to={\"/nicu/ward/wardindex\"} />\n        }\n    }\n\n\n    render() {\n        return (\n            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"100vh\", width: \"100vw\", background: 'linear-gradient(to bottom, rgba(195, 239, 255, 1), rgba(46, 100, 164, 1))' }}>\n                {this.renderRedirect()}\n                <div style={{ display: 'flex', justifyContent: \"center\", alignItems: \"center\", flexWrap: \"wrap\" }}>\n                    <div style={{ color: \"white\", fontSize: \"26px\", textAlign: \"center\", width: \"100%\" }}>台北榮民總醫院 NICU智慧醫療系統</div>\n                    <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ width: \"350px\", height: \"250px\", borderRadius: \"4px\", backgroundColor: \"white\", textAlign: \"center\", padding: '25px', position: \"relative\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                                <div style={{ height: \"32px\", width: \"32px\", borderRadius: \"2px\", backgroundColor: \"rgba(46,100,164,1)\", color: \"white\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>L</div>\n                                <Input id=\"account\" style={{ marginLeft: \"20px\" }} placeholder=\"請輸入3270主機帳號\"></Input>\n                            </div>\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginTop: \"25px\" }}>\n                                <div style={{ height: \"32px\", width: \"32px\", borderRadius: \"2px\", backgroundColor: \"rgba(46,100,164,1)\", color: \"white\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>P</div>\n                                <Input type=\"password\" id=\"password\" style={{ marginLeft: \"20px\" }} placeholder=\"請輸入密碼\"></Input>\n                            </div>\n                            <Button style={{ width: \"280px\", backgroundColor: \"rgba(46, 100, 164, 1)\", color: \"white\", marginTop: \"70px\" }} onClick={this.setRedirect}>登入</Button>\n                            <div style={{ display: this.state.permission ? \"none\" : \"block\", color: \"red\", fontSize: \"1rem\" }}>{this.state.statusstring}</div>\n                        </div>\n                    </div>\n                    <div style={{ width: \"100%\", justifyContent: \"center\", alignItems: \"center\", display: \"flex\" }}>200206.005-T</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Loginview\n","import React from 'react';\nimport Homepage from './Homepage'\nimport './App.scss';\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\nimport Layoutframe from './Layout/Layout'\nimport Loginview from './Layout/Loginview'\nimport 'antd/dist/antd.css';\nimport { ConfigProvider } from 'antd';\nimport zhTW from 'antd/es/locale/zh_TW';\nimport moment from 'moment';\nimport 'moment/locale/zh-tw';\nmoment.locale('zh-cn');\n\n\n\nfunction App() {\n  document.documentElement.style.fontSize = '14px'\n  return (\n    <ConfigProvider locale={zhTW}>\n      <BrowserRouter>\n        <Route exact path=\"/\" component={Homepage} />\n        <Redirect from={'/'} to={\"/login\"} />\n        <Route path=\"/nicu\" component={Layoutframe} />\n        <Route path=\"/login\" component={Loginview} />\n      </BrowserRouter>\n    </ConfigProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Chooseedit.def74a6e.svg\";","module.exports = __webpack_public_path__ + \"static/media/details.bc0482ca.svg\";"],"sourceRoot":""}