{"version":3,"sources":["Image/svg/edit2.svg","Image/svg/filter.svg","Image/svg/Wardview.svg","Image/svg/Historyview.svg","Image/svg/Control.svg","Image/svg/file1.svg","Image/svg/file2.svg","Image/svg/delete.svg","Image/svg/dragdown.svg","Image/svg/RT.svg","Image/svg/calender.svg","Image/svg/calenderwhite.svg","Image/Logo/1200px-Taipei_Veterans_General_Hospital_Emblem.svg.png","Image/svg/Edit.svg","Image/svg/ping.svg","Image/svg/pingwhite.svg","Image/svg/Chooseedit.svg","Homepage.js","Layout/Sidermenu.js","Function/Wardstate.js","API/ApiProvider.js","API/ApiGithub.js","Wardview/Wardcardstatus.js","Wardview/WardCardvalue-k.js","Function/Wardbedfunction.js","Wardview/Wardcard/Wardcarddetail.js","Wardview/Wardcard/UnpreviewWardCardDetail.js","Commonfunction.js","Wardview/Wardnote.js","Wardview/Bedinfo.js","Function/Timeformat.js","Patientview/CrossSectionView/Labview.js","Wardview/WardBedinformation.js","Module/Schedule_event.js","Wardview/Wardschedule.js","Wardview/Wardinfoindex.js","jsonResponse.js","Wardview/Wardlifechart.js","Wardview/Wardmonthafter.js","Wardview/Wardgrewchart.js","Patientview/Schedule/Notice.js","Patientview/CrossSectionView/Labviewitem.js","Function/FiliterReg.js","Wardview/Wardcardvitalsign.js","Wardview/Wardchart.js","Wardview/Wardunfousercheckbox.js","Patientview/Patientviewinfo.js","Wardview/Wardinfouser-k.js","Wardview/Bedinfo/Bedview.js","Content/Historyview.js","Patientview/CrossSectionView/Crossectionvitalsignchart.js","Patientview/CrossSectionView/Vitalsign.js","Patientview/CrossSectionView/Warningsettinglist.js","Patientview/Controlbar.js","Module/ioPageCell.js","Module/iopage.js","Module/ioDataFormat.js","Patientview/CrossSectionView/Crossection_io.js","Patientview/CrossSectionView/NonlabviewtableCell.js","Patientview/ExamReportModal.js","Patientview/CrossSectionView/Nonlabviewtable.js","Patientview/CrossSectionView/Nonlabview.js","Patientview/CrossSectionView/RTtable.js","Patientview/CrossSectionView/GAS.js","Patientview/CrossSectionView/RemarkModal.js","Patientview/CrossSectionView/RTbreathtablecell.js","Patientview/CrossSectionView/RTbreathetable.js","Patientview/CrossSectionView/RTbreathe.js","Patientview/Prescriptionorder/Prescriptionordertablecell.js","Patientview/Prescriptionorder/Prescriptionordertable.js","Patientview/Prescriptionorder/Prescriptionorder.js","Patientview/Treatmentorder/Treatmentordertablecell.js","Patientview/Treatmentorder/Treatmentordertable.js","Patientview/Treatmentorder/Treatmentorder.js","Module/Notecell.js","Module/Note.js","Patientview/CrossSectionView/Crosssectionschedule.js","Patientview/CrossSectionView/Crosssection_todo.js","Patientview/CrossSectionView/Crosssectionlayout.js","Patientview/ChronicleView/Chronic_io.js","Patientview/ChronicleView/ChronicTableCellTooltipCell.js","Patientview/ChronicleView/ChronicTableCell.js","Patientview/ChronicleView/ChronicTable.js","Patientview/ChronicleView/ChronicLab.js","Patientview/ChronicleView/ChronicRTTableCell.js","Patientview/ChronicleView/ChronicRTTable.js","Patientview/ChronicleView/ChronicRT.js","Patientview/ChronicleView/ChronicOrderTable.js","Patientview/ChronicleView/ChronicOrder.js","Resource/QTWPER.js","Patientview/ChronicleView/ChronicWeightTable.js","Patientview/ChronicleView/ChronicWeight.js","Module/Vitalxaxis.js","Module/Vitalxaxisbot.js","Patientview/ChronicleView/Chronic_vital.js","Patientview/ChronicleView/Chroniclelayout.js","Patientview/FlootSheetView/FlootSheetDataFormat.js","Patientview/FlootSheetView/Flootsheetio.js","Patientview/FlootSheetView/Flootsheetlayout.js","Patientview/ExamReport/Examchart.js","Patientview/ExamReport/ExamLabview.js","Data/RegularData.js","Patientview/ExamReport/ExamNonlabtablecell.js","Patientview/ExamReport/NonLabview.js","Patientview/ExamReport/ExamReport.js","Patientview/Orderview/Orderview.js","Patientview/NoteView/Note.js","Patientview/NoteView/NoteTimeFormat.js","Patientview/RT/RTview.js","Patientview/Nurtion/Nurtionfeedingcell.js","Patientview/Nurtion/Nurtionfeeding.js","Patientview/Nurtion/Nurtion_TPN_cell.js","Patientview/Nurtion/Watervaluechart.js","Patientview/Nurtion/Nurtion_TPN.js","Patientview/Nurtion/Nurtion.js","Patientview/Infection/Infectionlabtable.js","Patientview/Infection/Infectionlab.js","Patientview/Infection/Infection.js","Patientview/Schedule/Bedsidecard.js","Patientview/Schedule/Scheduletodo.js","Patientview/Schedule/Calendercell.js","Patientview/Schedule/Calender.js","Patientview/Schedule/Scheduleview.js","Patientview/Patientviewlayout.js","Systemgroup/powersetting.js","Systemgroup/Systemlogtable.js","Systemgroup/Systemlog.js","Content/Systemcontrol.js","Layout/Layout.js","Layout/Loginview.js","App.js","serviceWorker.js","index.js","Image/svg/details.svg"],"names":["module","exports","Homepage","Component","Sidermenu","state","powerLogin","Number","sessionStorage","getItem","powerLogins","this","setState","key","match","props","location","fromHistory","value","path","Selectkeynumber","rule","style","display","alignItems","marginLeft","height","gridTemplateColumns","gridColumnGap","to","class","select_hover","src","wardviewlogo","alt","historylogo","controllogo","withRouter","CalculateAge","BornStatus","startDate","moment","date","minus","diff","console","log","undefined","week","day","month","Math","floor","tempWeek","tempDay","overDay","statecolor","Labwarningvalue","title","BornWeight","weightlist","birthday","Array","isArray","findata","filter","index","rec_dat","type","length","parseInt","value2","NewestWeight","XM2JSON","data","xm2","X2JS","status","xml2js","outmsg","ret","parsedata","resconts","rescont","QMNCXM2JSON","Doc","DocList","Main","element","PDTYPE","PDDOCNMC","toString","trim","selectweight","List","array","valueOf","push","getPersionalStatus","hisid","axios","get","defaults","baseURL","config","headers","getAlluser","getQDC","caseno","st","et","getQENT","getQDVS","getQSPE","getOnePatientNotice","transinno","HISID","getAllPatient","getOnePatientRemark","transid","getOneRemark","remarkid","getOnePatientSchedule","starttime","endtime","getStoredProcedureORDLIST","dpt","docid","getStoredProcedureRESDBGAS","getStoredProcedureRESDGLU1","getStoredProcedureRESDISP","seq","getStoredProcedureRESLAB01","getStoredProcedureRESLAB02","getStoredProcedureRESLAB0C","getStoredProcedureRESSECT","getStoredProcedureTRTMNTQ1","getStoredProcedureUDORDER0","getTablePBASINFO","PHISTNUM","getTablePDOCNEW","PCASENO","getTablePLOC","createTodo","caseid","context","time","body","post","getOneTodo","getPatientwardvalueBoxPlot","startTime","endTime","interval","getVitalSignData","getHisidwardvalue","axiosGithub","create","timeout","getGitHubJson","string","Wardcarstatus","TRTMNTQ1","UDORDER0","FlagReg","TRQ1","ApiProvider","then","info","arr","ORSTATUS","catch","err","UDORDER","dataList","UDSTATUS","Reg","ApiGithub","Promise","all","result","parseFlagData","Flag","item","StatusUDORDER","some","UDDRGNAM","toLowerCase","UDGNAME","ParseValueUD","indexOf","StatusTRTMNTQ1","ORPROCED","ParseValueTRT","statusspan","source","style_change","AntiStatus","TPNStatus","NP0Status","FoleyStatus","DrainStatus","statuslist","InvasiveRespiratorStatus","NonInvasiveRespiratorStatus","RespiratorStatusParse","map","className","Respirator","wardstatestringformat","WardCard","useState","CenterMonitorValue","SetCenterMonitorValue","SetHID","Timer","SetTimer","ChangeAN","SetChangeAN","CenterNisValue","SetCenterNisValue","TimerNIS","SetTimerNIS","InitCenterData","useEffect","TimerID","setInterval","clearInterval","HID","phistnum","JSON","stringify","pd","abpd","ps","abps","pm","abpm","subtract","format","tempData","Wardstate","rec_tim","diastolic","systolic","sort","a","b","marginRight","color","hr","spo2","fontWeight","fontSize","gridColumnsGap","rr","bt","bednumberformat","number","gender","BornChangeWeek","BornChangeDay","BornChangeWeight","Wardcarddetail","hoverstate","clickstate","mouse_hover","edit_hover","visible","pbasignfo","birthdayweight","weight","bornweek","bornday","nowweight","report","nonreport","remark","TRANSINID","TRANSINDT","TRANSINTM","modatstatus","persionstatus","handleCancel","e","showModal","TRID","API_DATA","ORBGNDT","ORBGNTM","Reportfilter","name","sex","parseFloat","toFixed","pname","psex","bweight","bweek","bday","personstatus","from","PNAMEC","PSEX","Birthday","PBIRHDT","BornWeeks","BornDays","BornWeekAndDay","viewstatus","dataArrayRender","HBEDNO","defaultValue","onChange","margin","width","onCancel","footer","justifyContent","onClick","handleOk","valueFormat","statusPersion","QMNC","QTWER","weeks","days","previewmode","hbedlist","QTWPER","Weight","AgeStatus","role","cursor","editlogo","fileLogo","file2Logo","borderBottomWidth","borderBottomColor","borderBottomStyle","centerdata","centerMonitorData","padding","position","overflow","textOverflow","whiteSpace","pathname","Modelrender","Unpreviewwardcarddetail","databool","statedata","document","getElementById","bednumber","backgroundColor","format_bednumber","onOk","gridTemplateRows","gridRowGap","id","placeholder","getCalendarContainer","triggerNode","parentNode","WardcardNote","_isMounted","editstate","AnnoceRawData","AnnoceDisplayData","inputContent","onInputChange","bind","queryAllAnnounce","parse","announceArray","event","target","announce","doc","newAnnounce","Date","editor","findIndex","splice","announcelist","list","editstatus","localTime","utc","toDate","deleteimg","ondeleteannounce","placement","detail","annData","onMouseUp","editlist","border","borderCollapse","AddNewannouce","canceledit","okeditlist","Bedinformation","tableselect","sendReturnSelect","selectkey","idkey","localtime","Selectswitch","parentCallback","select","weekdatformat","weekday","Month_format","getMonth","getDate","getDay","Unselect_tablestyle","borderLeftWidth","marginTop","textAlign","borderStyle","borderWidth","borderColor","hbedcount","transoutcount","transincount","rtcount","nonrtcount","tpncount","yyyymmddformat","timestamp","getFullYear","formatmonth","Monthformat","yyyymmfirstweeksate","mmddformat","compareday","getTime","MG_VALUE","PROC_VALUE","CA_VALUE","Wardbedinformation","subselectdate","selectid","PickerDate","bedinfo","onChangeDate","datestring","apiData","callbackFunction","idnumber","trainDay","bTime","nTime","aTime","trans","RenderCell","pnamec","selectDateitem","filterdate","inType","outType","transIn","transoutIncountperson","transOut","transoutOutcountperson","transferListlayout","infolist","infoList","dateTime","i","Bedinfo","reverse","fontStyle","paddingLeft","showToday","disabledDate","current","startOf","allowClear","shape","icon","bedinfotitle","weekbedinfo","infoitem","Schedule_event_list","detailstate","items_interval","EditMode","selSchedule","Scheduledata","ID","caseinfo","querySchedule","queryALLSchedule","propsDate","stateDate","timeNowStr","toISOString","writter","PBASINGNINFO","PLOCSTART","getHours","getMinutes","ScheduleList","bedNumber","text","borderRadius","isInteger","detaillogo","changestate","onChangeEditMode","EditButton","EditControl","listevent","onClickCancel","onClickEnter","Wardschedule","scheduleData","Wardinfoindex","growdata","Male_befor","y","min","max","FeMale_before","Male_after","FeMale_after","WardlifeChart","drawChart","svg_key","weightList","grewinfo","bornweeks","WEEK_BORN","borndays","DAY_BORN","BIRTHDAY","pregencyTimestamp","tick","Row","tickValues","d3","domain","range","x","yAxis","ticks","tickSize","tickPadding","tickFormat","d","xAxis","yRightAxis","svg","append","attr","call","datasource","id_key","Wardmonthafter","Month","Wardgrewchart","test_items_interval","Data","WeightList","switch_data","window","screen","availWidth","testiteminterval","borderTopLeftRadius","borderTopRightRadius","SwitchTestItemInterval","Onchangetimeinterval","switch_monthy","Notice","noticeData","preTRID","queryPatientImportant","transinid","updateTime","disableEdit","tooltiptext","t","displayTime","fixData","remarkcell","Editor","TextArea","Input","marginBottom","renderEditButton","autoSize","Labviewitem","fixtitle","timevalue","ORRESDT","ORRESTM","formatTime","timeCell","Source","TimeRender","formatValue","ListForTime","DataList","pickerTime","ListForTimeAndTarget","forEach","ORRCPDT","split","QSPERegList","qspe","SettingValue","mode","valueList","qspearray","SelectElement","special","DataArray","DataJson","Labviewlayout","parser","dummy_mg","dummy_pct","dummy_ca","RESDGLU1","RESLAB02","RESLAB01","RESDBGAS","RESLAB0C","RESSECT","prePickerDate","preHID","preTRDT","TRDT","getLabData","TransinDate","MonthInterval","timestampInterval","selectMonthInterval","latestvalue","selected_parser","find","apply_condition","arrayLength","ORMM","CASEID","ORDSEQNO","RESDISP","selected_mapping","mappings","mapping","re","RegExp","regex_str","regex_flags","CONTENT","currentTimeStr","ORRCPTM","currentItemTimestamp","matchValue","updateLabviewIfNeed","currentIdx","ListEndData","RESDGLU1LIST","FiliterReg","RESLAB02LIST","RESLAB01LIST","RESDBGASLIST","RESSECT_CA_LIST","findLastestTargetValue","RESSECT_MG_LIST","RESSECT_PROC_LIST","GLUFAST","WBC","RSV01","SEG","RSV14","LYMP","RSV15","HGB","RSV03","PLATELET","RSV09","NA","RSV13","K","CA","P","RSV17","ALB","RSV02","CRP","RSV30","PH","SS07","PCO2","SS06","BE","SS01","PO2","SS08","BUN","RSV05","CR","RSV06","ALT","RSV11","AST","RSV12","TBIL","RSV08","DBIL","RSV25","ALKP","TOTALCA","IRON","RSV26","TIBC","RSV27","FERRITIN","FeSat","feSatformat","areainterval","nullvalue","NaN","TitleR","TitleRender","RSV32","WardcardvitalsignChart","sourcedata","getCenterMonitor","selectType","remove","axisTop","axisBot","circlrcolor","MAX","MIN","Upper","Lower","transformmargin","cal_svg_transform","time_now","time_array","time_axis_array","x_axis_time","time_array_reverse","time_axis_array_reverse","formatHour","n","xAxisTop","multiFormat","cal_svg_hight","formatBoxWidth","viewwidth","lower","upper","LimitBoxTimer","interFormat","TimeArray","boxTime","formatBox","boxwidth","drawshadow","BoxPlotData","dataAbps","dataAbpd","q1","Q1","q2","Q2","q3","Q3","q4","Q4","Xtime","selectAll","enter","Time","SBP","DBP","WardChart","pbStatus","changePb","decidePB","nbpd","CMvalue","vitalvalue","limitValue","flexDirection","lineHeight","paddingRight","nbps","nbpm","colorshadow","data2","data_2_circlrcolor","Wardinfousercheckbox","checkboxselect","selectstate","updateOnePatientTodo","selectchange","checked","textDecoration","Patientinfo","preCID","QENT","CID","patientDetail","transdata","patientDate","fixpatientDate","patientData","Wardinfouser","Visible","setVisible","scheduleList","SetScheduleList","todoList","SetTodoList","Persionstatus","SetPersionstatus","PLOC","now","todayBegin","ListWeight","DOCLIST","PDOCNEW","MainDoc","LiveDoc","MainNur","ICUMainDoc","sytle","maxHeight","minHeight","displayTimeStr","Bedview","simplemode","SelectHISID","prePath","HBEDApiGet","simple_style","gridGap","Unsimple_style","wardcarddetaillist","component","WardinfouserK","filterdata","switch_titile_string","onWardcardDisplay","checkedChildren","unCheckedChildren","defaultChecked","Historyview","MouseClick","allPatientDisplayData","allPatientUnset","allPatientSet","selectedRowsArray","hospitalindex","selectedFile","fileList","uploading","doctor","transOuttime","deletedisable","selectedRowKeys","handleUpload","fileData","formData","FormData","file","res","filename","setedUser","patient","transouttime","unsetUser","onChangeName","onChangeHisid","record","resultD","url","URL","createObjectURL","Blob","link","createElement","href","setAttribute","appendChild","click","hospitalnumber","delete","dateString","Group","RangePicker","DatePicker","locale","rowSelection","selectedRows","getCheckboxProps","disabled","H","searchNO","searchTime","fn","transintime","searchName","search","genderswitch","patientinfo","birweek","transage","transicutime","maindoc","EditStyle","onRemove","newFileList","slice","beforeUpload","showUploadList","handleDisplaySwitchChange","Searchbar","exportClick","deleteHistoryUser","columns","dataIndex","dataSource","onRow","onMouseEnter","MouseClickTable","onMouseLeave","Crosssectionvitalsignchart","change","prepickerdate","presource","preinterval","prewidth","svg_id","PHID","PCID","optionvalue","pickerdate","endTimeStamp","start","end","formatTimer","nowDateForSeven","newDateForZero","formatPickerDate","QDVS","QOXY","HRNISLIST","RRNISLIST","SBPNISLIST","DBPNISLIST","BTNISLIST","Spo2NISLIST","pluse","breath","BT","temperature","concen","FormatNISData","centermonitorApiDataGet","prehid","comein","xAxisvalue","xAxisarray","formatxArray","xAxisbotvalue","formatbotaxis","xAxisbot","drawData","formatShift","paddingTop","Vitalsign","vital_days","visibleConflict","chackstate_one","chackstate_three","addNewWarningDateStr","addNewWarningHourStr","preHISID","checkStateNumber","Phistnum","timeCheck","checkNum","nowDaySeven","sevenFormat","PickerDateSeven","hourFormat","EndTime","Interval","formatvital_daysToInterval","gridarray","checknumber","onClickCheckgrid","End","intervalforhour","centervalueNull","centervalue","FilterList","filterData","Mid","centervaluetoNull","pickerTimer","top","left","onVitalCheck","Controlbar","display_Mode","item_array","scrollstate","sendData","itwm_array","sendDateData","parentDateCallback","scrollToAnchor","anchorName","anchorElement","scrollIntoView","checkedValues","onDateChange","bron","PBIRTHDT","bronDate","btn_style","unclick_style","display_style","displye_mode","right","background","boxShadow","zIndex","non_display_mode","check_area","check_text","btnlist","WEIGHT","btn","WardState","scrollpoint","add","endOf","alignContent","open_display","displaylogo","calcBorderLeft","intervalStatus","Status","IOpageCell","IntervalStatus","urine","weightData","urineValue","out_val2","cellValue","IOpage","QDC","PreStatus","PreIntervalStatus","PreCID","PrePickerDate","RegQDC","CarloriesCal","timer","interstatus","Result","getAPI","prestatus","preinterstatus","precid","mapcell","listTimerFormat","inter","TimerList","hourInterval","filterList","filterListALL","gridNumber","cellsum","sum","cellRenderSum","rows","rowColorStyle","CellRender","SE","Other","timerStruct","cellRender","stylechange","intervalstatus","timearray","pickerTimeArray","QDCLIST","formatData","caloriesCalonnam","nam","namstring","valueNumber","FormatFeedingList","FormatIVList","FormatUrineList","FormatOtherInList","FormatOtherOutList","lost","elementItem","Feeding","inp_val2","calories","IV","inp_val1","Urine","input_1","output_1","out_val1","OtherIn","OtherOut","formatQDCtoIO","timerFormat","feed","sumin","arr1","arr2","arr3","sumlist","sumIn","datamap","urineforWeightAndHourCrossection","sumout","sumOut","sumInTotal","Outout","element1","element2","sumInAndOut","cellMap","dataArray","formatInterval","formatUrineforTimer","sortData","ST","ET","StartTime","formatStartTime","formatStartAndEnd","SortDataArray","ioDataFormat","TitleCellIn","TitleCellOut","CrossectionIo","titlelab","NonlabviewtableCell","summary_str","select_parser","input","parsers","item_name","sample","lab","start_time","datetime","end_time","content","summerize","kv_pairs","summary","match_replacer","replacer","replace","caseId","hisId","datatime","result_kv_pairs","come","isSameDay","statusRender","statusFormat","canShowReport","overflowY","borderTop","borderBottom","borderLeft","ExamReportModal","showDetail","Nonlabviewtable","modalVisible","modalReport","ORDLIST","nonLabApiGet","storeProcedureTime","FormatList","PickerDateRange","ORDLIST_Format","elemetnStatus","elementORBGNTime","ORDLISTFormat","nonlabcell","ORSPCN1","isSame","ORHISTNO","ORDSEQCN","titlecell","Nonlabviewlayout","RTtable","PreHID","PreTransInDate","GasListToCell","GasDataList","filterTimer","timeStamp","Object","keys","decideStyle","PHValue","PCO2Value","PO2Value","HCO3Value","SS04","BEValue","O2SatValue","SS05","FiO2Value","SS03","GasCell","tempStyle","tempValue","isNaN","formatGasData","getGasAPI","PreTRDT","searchbar","GasTitleCell","formatString","justifyItems","GAS","RemarkModal","preremark","preeditor","onOkClick","remarkValue","transinId","remarkId","fixTime","tempRemark","createTime","okText","cancelText","float","RTbreathetablecell","onCell","onEdit","newRemarkValue","setRemark","seachRemark","Mode","setting","Setting","onMouseMove","Mouse_move","Mouse_leave","minheight","Edit_state","chooseedit","RTbreathetable","createRTbreathetable","titleCellRender","RTbreathe","QSPE","FilterReg","preST","preET","getQSPEApi","resultData","Prescriptionordertablecell","onMove","UDORDSEQ","checkStatus","valueStatus","Name","PName","UDRPNAME","Unit","UDDOSAGE","UDDUNIT","UDFREQN","UDROUTE","UDBGNDT","UDENDDT","on_Mouse","on_leave","Prescriptionordertable","SelectMode","Prescriptionordertabletable","Prescriptionorderlayout","classParser","InputMode","onChangeClass","onChangeinputKey","parseClass","inputs","allResult","onClickSearch","activeList","formatUDORDERStatus","clusteredData","filteredData","SortDataList","regex","filterDate","getGithub","getUDORDER0","Start","Option","Select","ControlBarRender","Treatmentordertablecell","QD","ORFREQN","infoRemark","ORENDDT","Treatmentordertable","TRTMNT01","Treatmentordertablecelllist","Treatmentorderlayout","DateRangeMode","handleChange","Search_bar","formatTRMINQtatus","getTreatmentQ1","Notecell","updatetime","updatedoctor","updatetime_format","wordBreak","Note","noteData","queryNotice","propDate","TRANSID","notelist","infoObj","updatedictor","CrossectionSchedule","CrosssectionTodo","queryTodo","renderTodoItem","Crosssectionlayout","Cross_item","SelectInterval","callbackDateFunction","PickerTimeStamp","NIS_API_IO","Datetime","TimeStampPickerDate","PThreeDayRange","display_item","Prescriptionorder","Treatmentorder","Inoutonchronic","Chronictablecelltooltip","preStartTimeStamp","loading","resultStr","parserName","inputBeginTime","parser_name","startTimeStamp","apiGet","tooltipelement","summaryParse","allContent","Cell","antIcon","spin","indicator","Chronictablecell","titleCell","objectElementCell","checkLineColor","lineColor","CellText","autoAdjustOverflow","overlayStyle","maxWidth","Tableonchronic","LabParse","SummaryParse","monthly","ApiPronider","chronic_state","fotmatTimerMonthly","preInterval","ApiGet","TimeLine","lineStyle","TimeInterval","grid","openTimeline","ressect","parsrList","arrayBiochemical","arrayBlood","arrayCultivate","arrayGAS","arrayRadiation","arrayOther","element_ORPROCED","BioFind","Biochemical","BloFind","Blood","CulFind","Cultivate","GasFind","RadFind","Radiation","arrayList","LabFormat","statestatus","title_list","entTimeStamp","slectInt","TimerForList","filterTimerForDataList","fotmatTimerForTimer","DataForTimer","toolTipID","Chroniclab","select_interval","Chronicrttablecell","cellelement","RTListRender","ToolTipRender","rtlogo","Chronicrttable","prePickerdate","timerList","listFilter","formatDataList","table_content","Chronicrt","Chronicordertable","whiteBlackListParser","tpnParsers","excludeBlackListResult","UDGNAME_condition","UDRPNAME_condition","UDGNAME_re","UDGNAME_match","UDRPNAME_re","UDRPNAME_match","getUDORDER","openTimeLine","changegridnumber","rawData","filteredRawData","selected_tpn_parser","found","name_regex_flags","selected_white_black_list_parser","Tablecell","formatWidth","elementStart","elementEnd","widthRate","clientWidth","formatStart","formatEnd","formatStartPosition","arraylist","shift","formatUDORDER0","ListData","startTimeFormat","endTimeFormat","changegridstyle","celltable","overflowX","Orderonchronic","Chronicweighttable","QTPWERList","TimerFormat","WeightListFormat","sortWeightList","lastelement","elementTime","Value","elementValue","sortWeight","elementWidthList","time1","elementWidth","FormatEndTimeStamp","datafilter","timeString","datafilterTime","widthArray","timeString2","time2","weightRectRender","render","round","Weightonchronic","Vitalxaxis","innerWidth","debounceWindowSize","debounce","recalcWindowSize","addEventListener","func","wait","immediate","args","arguments","callNow","clearTimeout","setTimeout","apply","removeEventListener","monthformat","select_date","select_time_format","nowtime","Start_time","intervaldays","xaxis","formatday","Vitalxaxisbot","End_time","Interval_grid","pickerDate","duration","hour","isBefore","hours","asHours","Vitalonchronic","check_state_one","check_state_three","check_state_oneweek","check_state_twoweek","statussource","sourcehandleChange","onClickCheckgrid_one","onClickCheckgrid_three","onClickCheckgrid_oneweek","onClickCheckgrid_twoweek","formatPickerTimer","fromInfection","onSelectchange","Interval_grid_box","Chroniclelayout","statuschange","onChangeCross","button","filterlogo","formatIOData","filterString","line","pos","compare","groupArray","arrList","comparevalue","filterarray","mapCellrender","ArrayList","formatColor","formatBackgroundColor","valueToInit","valueToVar","vallNull","cellStringArray","timeForList","elementList","valueSum","borderRight","cell","Flootsheetio","itemNumber","formatDayData","Infusion","FlootSheetDataFormat","toUpperCase","ALINE","filterIV","PICC","mapInfusion","mapBlood","mapEat","mapBloodLoss","mapExudate","mapVomit","mapDrainage","Puncture","mapPunctureOut","mapPunctureIn","Dialysis","mapDialysisIn","mapDialysisOut","mapDialysisTotal","Rinse","mapRinseIn","mapRinseOut","Stool","mapStool","mapStimulation","mapUrine","dateArr","generateDateColumn1","Flowsheetlayout","ApiData","DateTime","dataJson","splist","specialListRender","Examchart","decideValue","lineChart","sT","endT","fixLineChart","div","curve","lines","on","transition","html","pageX","pageY","lineCharttitle","wordWrap","Labview","Selectus","SelectStatus","IRParse","titleSearch","parentTitleCallback","showModel","charttableview","itemValue","flex","showDate","temp","LabDataList","SelectList","SelectTitlefilter","selectdata","SelectTitleRender","infoString","fixLineChartData","ExamLab","getPopupContainer","Examnonlabviewtable","resultKey","selectMode","StateMode","selectedClass","BGtime","formatPickerDateRangeToORDLIST","filterStateMode","filterInput","formatInputMode","sortfilteredData","Nonlabview","ClassMode","prestartTime","preendTime","Inputvaluesearch","onChangeState","Apiprovider","Examreport","selectTitle","callbackTitleFunction","PickerDateRangeChange","vallofnull","DateRange","selectData","st_timestamp","et_timestamp","CellData","Band","Seq","Lym","Hb","Hct","RSV04","Plt","Na","Cl","CaTotal","Cr","Alt","TBil","DBil","rGGT","RSV19","Alkp","Alb","Iron","RSV28","LDH","RSV10","RSV9","ck","RSV18","ckMB","Troponinl","PT","APTT","INR","pCO2","pO2","HCO3","O2Sat","FiO2","SS11","SS12","SS13","SS14","CaFree","SS15","Bun","SS16","SS17","GluBeside","GluLab","RSV16","TCB","MicroBil","elementOne","Seg","elementTwo","APIUpdate","SelectDataList","momentDate","selectvalue","Orderview","apidata","udata","tdata","dataRange","Noteview","display_data","contentdisplay","ADMDISP","ADMLIST","DISLIST","DISDISP","DTAROTQ4","DTASOAPQ","PCASELIST","ERDISP","PRGTXQRY","PRGTXQRYDIS","CPSLIST","CPSDISP","QPNOT","QPNOTDIS","OPSORAQ1","OPSORAQ2","SelectClass","NoteTime","Content","ADISTNO","ADICASE","SEQ","OPABGNDT","OPATIMES","times","ttype","LIVEPLOC","PLOCDT","substr","transdt","columnGap","gridAutoColumns","gridAutoFlow","row","ADMDATA","textType","textObj","DTSOAPTY","DTSOAPSQ","DTSOAPTX","newObj","idx","textResult","newList","dataFilter","PRGTYPE","PRGTX","cre_nam","pro_not","cellRander","object","tabIndex","SelectADMDISP","ADIDATE","ADISECT","DCASENO","SelectDISDISP","DDATEOUT","DADMSECT","DPT","DTPDEPT","DTPDATE","SelectDTASOAPQ","SECTNM","DTPDOCNM","DTPDOCID","SelectERDISP","PDISDT","PRGDT","PRGTM","groupfirstarray","v","DT","TN","PRGWARD","PRGBEDNO","PRGSECT","PRGENTNM","SelectPRGTXQRYDIS","CPSCASE","CPSOSEQ","CPSHIST","SelectCPSDISP","CPSENTDT","CPKSECT","CPSOSECT","CPKDOCN1","CPKDOCN2","CPKDOCN3","grouparray","SelectQPNOTDIS","valueten","year","timeFormat","OPAMANNM","OPACOD1","SelectOPSORAQ1","control","NotecontrolBar","renderContentArray","listRender","switchListRender","RTview","Nurtionfeedingcell","Moduledisplay","Nurtionfeedingorder","getAPIFeedingData","getTreatmentOrderFilter","DataCellRender","Nurtiontpncell","TPNListcellRender","TPNSubDatacellRender","TPNDATA","AA","Glu","Ca","Mg","TPNSubDataMap","RemarkData","Watervaluechart","rowdata","watervalueData","shiftDays","formatShiftDays","rectwidth","xAxisBottom","svgrect","nulldata","car","Caloriessum","model","ModalRender","Nurtionview","OtherFilterInput","OtherData","formatOtherInput","sumcar","Calories","shiftTimer","TimerArray","formatTimeArray","watervalueDataList","filterFeedind","filterOther","feedingSum","SumData2","IVSum","SumData","OtherSum","caseiddays","GrowthCurve","GrowthCurveControl","GrowthCurveControlBar","WaterValueControl","WaterValueControlBar","tpndata","feeddata","waterRender","WaterValueRender","Nurtionfeeding","Infectionlabtable","Datalist","Render","FilterData","CellRander","lineColoe","WBCList","BandList","SegList","LymList","PCTList","CRPList","WBCRender","BandRender","SegRender","LymRender","PCTRender","CRPRender","WBCcell","Bandcell","Segcell","Lymcell","PCTcell","CRPcell","switch_state","userdata","Infectionlab","Infectionview","intervalselect","hrdatasource","rrdatasource","spo2datasource","abpdatasource","nbpdatasource","btdatasource","LabData","LabData2","Bedsidecard","remarkContent","queryPatientRemark","TODO_DONE","TODO_UNFINISH","Scheduletodo","displayMode","todolist","onItemCheck","itemToUpdate","queryPatientTodo","todolist_data","finish_data","finish_value","unfinish_data","finish_checkbox","unfinish_checkbox","onClickunfisish","onClickfinish","Calendercell","onClick1","CancelModule","clickindex","sendcallback","newDate","clickdate","today","stateswitch","justify","span","onClickCheck","weekdateformatcalender","scheduleArray","calenderlogo","calenderwhitelogo","disableday","Calender","calendermode","Clickdays","ClickDate","displayinfo","scheduleRawData","startTimestamp","endTimestamp","noticeRawData","open","getStartEndTime","monthfirstweekday","firstCellBegin","startTimestampStr","endTimestampStr","itemList","refactoredList","itemTimeStr","foundItemIndex","newItem","newEvent","writer","timestampdate","onClickdays","dateStr","dataOfDayIndex","weekcontext","dataOfDay","getDataFromTimestamp","weeknumber","firstMonthWeekDay","rowIndex","noticeOfDay","getNoticeFromTimestamp","calendermonthgroup","monthfirstweekdate","weekmonthmode","ShowModule","weekmode","setgroup","MonthPicker","SelectDatepickertype","modechange","Scheduleview","dateformat","exporttime","Patientviewlayout","TYPE","REMARK","tabstring","HBEDNUMBER","HBEDLIST","PBASINFO","matadata","nis_status_shange","activkey","getPersonStatus","BedList","BEDNUMBER","apiStatus","USERDATA","ploc","PLOCTM","transindt","TabPane","Tabs","ICUDays","transoutTime","formatICUDays","defaultActiveKey","tabPosition","tab","callback","confirm","Modal","Powersetting","adduser","userList","power","powerName","radioValue","pwdRadio","inputUsername","inputPassword","inputName","inputDoctorid","radioOnChange","nameChange","addUserdata","adduserhandleChange","queryUserdata","inputuserName","password","username","doctorid","account","roleString","set_State","okType","showDeleteConfirm","userData","powerString","myNewArray","concat","Systemlogtable","loginlog_table","loginlogList","managerName","apilog_table","apilogList","months","j","optionValue","pagination","page","pageSize","getPages","Systemlog","totalSpace","usingSpace","percent","option","total","unuse","queryLoginLogdata","queryApiLogdata","pages","showInfo","Systemcontrol","bollogin","Layoutframe","clear","UsrName","url_path","routes","route","onClickLogout","Loginview","setRedirect","user","setItem","redirect","permission","statusstring","renderRedirect","login","querySelector","keyCode","blur","focus","logo","flexWrap","App","documentElement","zhTW","exact","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.632dc913.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/edit2.8fc62700.svg\";","module.exports = __webpack_public_path__ + \"static/media/filter.43b66bba.svg\";","module.exports = __webpack_public_path__ + \"static/media/Wardview.6c75f5a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/Historyview.0467b7bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Control.aa66ed95.svg\";","module.exports = __webpack_public_path__ + \"static/media/file1.6f94c891.svg\";","module.exports = __webpack_public_path__ + \"static/media/file2.2b64f736.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.870c0c52.svg\";","module.exports = __webpack_public_path__ + \"static/media/dragdown.0cdfe02a.svg\";","module.exports = __webpack_public_path__ + \"static/media/RT.41b174eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/calender.da91395a.svg\";","module.exports = __webpack_public_path__ + \"static/media/calenderwhite.d66bfce7.svg\";","module.exports = __webpack_public_path__ + \"static/media/1200px-Taipei_Veterans_General_Hospital_Emblem.svg.b744f9a1.png\";","module.exports = __webpack_public_path__ + \"static/media/Edit.a7d4c3ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/ping.c2141b87.svg\";","module.exports = __webpack_public_path__ + \"static/media/pingwhite.0f1e8cfb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Chooseedit.def74a6e.svg\";","import React, { Component } from 'react';\n\nclass Homepage extends Component {\n    render() {\n        return (\n            <div></div>\n        );\n    }\n}\n\nexport default Homepage","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport wardviewlogo from '../Image/svg/Wardview.svg'\nimport historylogo from '../Image/svg/Historyview.svg'\nimport controllogo from '../Image/svg/Control.svg'\nimport './Sidermenu.scss';\n\n\nclass Sidermenu extends Component {\n\n    state = {\n        powerLogin: Number(sessionStorage.getItem('role'))\n    }\n\n    componentDidMount() {\n        const powerLogins = Number(sessionStorage.getItem('role'))\n        this.setState({ powerLogin: powerLogins })\n    }\n\n    Selectkeynumber(key) {\n\n        switch (key) {\n            case '/nicu':\n                return 0;\n            case '/nicu/history':\n                return 1;\n            case '/nicu/system':\n                return 2;\n            default:\n                if (key.match('patient') != null) {\n                    if(this.props.location.state && this.props.location.state.fromHistory){\n                        return 1;\n                    }\n                    return 0;\n                }\n                if (key.match('ward') != null) {\n                    return 0;\n                }\n                return '';\n        }\n    }\n\n    select_hover(value) {\n        const { path } = this.props\n        const keynumber = this.Selectkeynumber(path)\n        if (keynumber === value) {\n            return true\n        }\n        return false\n    }\n    render() {\n        const rule = this.state.powerLogin\n        return (\n            <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"20px\", height: '100%' }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto auto\", gridColumnGap: \"10px\" }}>\n                    <Link to=\"/nicu/ward/wardindex\" class={this.select_hover(0) ? \"linkstate\" : \"dislinkstate\"} style={{ display: rule == 2 ? \"none\" : \"flex\" }}>\n                        <img src={wardviewlogo} alt='wardviewlogo'></img>\n                        <centerstyle>\n                            <t2 class={this.select_hover(0) ? \"linkfont\" : \"dislinkfont\"}>住院病人資訊</t2>\n                        </centerstyle>\n                    </Link>\n                    <Link to=\"/nicu/history\" class={this.select_hover(1) ? \"linkstate\" : \"dislinkstate\"} style={{ display: rule == 1 ? \"flex\" : \"none\" }}>\n                        <img src={historylogo} alt='historyviewlogo'></img>\n                        <centerstyle>\n                            <t2 class={this.select_hover(1) ? \"linkfont\" : \"dislinkfont\"} >歷史病歷管理</t2>\n                        </centerstyle>\n                    </Link>\n                    <Link to='/nicu/system' class={this.select_hover(2) ? \"linkstate\" : \"dislinkstate\"} style={{ display: rule == 2 ? \"flex\" : \"none\" }}>\n                        <img src={controllogo} alt='systemviewlogo'></img>\n                        <centerstyle>\n                            <t2 class={this.select_hover(2) ? \"linkfont\" : \"dislinkfont\"}>系統設定</t2>\n                        </centerstyle>\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Sidermenu);\n","import X2JS from \"x2js\"\nimport moment from 'moment';\n\n\nexport function CalculateAge(BornStatus) {\n    const startDate = moment(BornStatus.date);\n    const endDate = moment();\n    const minus = endDate.diff(startDate, 'days');\n    console.log(BornStatus)\n    if (BornStatus === undefined || BornStatus.date === undefined || BornStatus.week === undefined || BornStatus.day === undefined) {\n        return \"未知年齡\"\n    }\n    if (BornStatus.week >= 37) {\n        const month = Math.floor((minus) / 30);\n        const day = Math.floor((minus) % 30);\n        return month > 0 ? `${month}月+${day}天` : `${day}天`\n    }\n\n    const tempWeek = Math.floor(BornStatus.week + (BornStatus.day + minus) / 7);\n    const tempDay = Math.floor((BornStatus.day + minus) % 7);\n    if (tempWeek >= 40) {\n        const overDay = (tempWeek - 40) * 7 + tempDay\n        const month = Math.floor(overDay / 30)\n        const day = overDay % 30\n        return month > 0 ? `矯齡${month}月${day}天` : `矯齡${day}天`\n    } else {\n        const week = tempWeek\n        const day = tempDay\n        return `${week}+${day}`\n    }\n}\n\n\nexport function statecolor(state) {\n    if (state === 'HR') {\n        return \"rgb(100,140,60)\"\n    }\n    if (state === 'BP') {\n        return \"rgb(193,37,40) \"\n    }\n\n    if (state === 'ABP') {\n        return \"#C12528\"\n    }\n    if (state === 'NBP') {\n        return \"#C12528\"\n    }\n    if (state === 'SpO2') {\n        return \"rgb(60,105,160) \"\n    }\n    if (state === 'BT') {\n        return \"rgb(127,61,181)\"\n    }\n    if (state === 'RR') {\n        return \"rgb(200,110,40) \"\n    }\n    return null\n}\n\n//parse flag\nexport function Respiratorswitch(Respirator) {\n    if (Respirator === '呼(非侵入)') {\n        return '非侵入呼吸器'\n    }\n    if (Respirator === '呼(侵入)') {\n        return '侵入性呼吸器'\n    }\n    return '呼吸器'\n}\n\nexport function wardstatestringformat(item) {\n    switch (item.item) {\n        case \"Respirator\":\n            return Respiratorswitch(item.data)\n        case \"TPN\":\n            return \"TPN\"\n        case \"NPO\":\n            return \"NPO\"\n        case \"HD\":\n            return \"HD\"\n        case \"Abx\":\n            return \"Abx\"\n        case \"CVC\":\n            return \"CVC\"\n        case \"Xanth\":\n            return \"Xanth\"\n        case \"Phototherapy\":\n            return \"照光\"\n        case \"DNR\":\n            return \"DNR\"\n        default:\n            return item.item\n    }\n}\n\nexport function Labwarningvalue(value, title) {\n    if (title === \"Glucose\") {\n        if (value > 120 || value < 50) {\n            return false\n        }\n    }\n    if (title === \"WBC\") {\n        if (value < 10000 || value > 30000) {\n            return false\n        }\n    }\n    if (title === \"Hgb\") {\n        if (value < 10 || value > 18) {\n            return false\n        }\n    }\n    if (title === \"Platelet\") {\n        if (value < 100000 || value > 450000) {\n            return false\n        }\n    }\n    if (title === \"Na+\") {\n        if (value < 135 || value > 145) {\n            return false\n        }\n    }\n    if (title === \"K+\") {\n        if (value < 3.5 || value > 5.5) {\n            return false\n        }\n    }\n    if (title === \"Ca2+\") {\n        if (value < 0.8 || value > 1.4) {\n            return false\n        }\n    }\n    if (title === \"P\") {\n        if (value < 4.5 || value > 6.0) {\n            return false\n        }\n    }\n    if (title === \"Mg2+\") {\n        if (value < -1.5 || value > 4.5) {\n            return false\n        }\n    }\n    if (title === \"Alb\") {\n        if (value > 3) {\n            return false\n        }\n    }\n    if (title === \"CRP\") {\n        if (value < 1) {\n            return false\n        }\n    }\n    if (title === \"Procalcitionin\") {\n        if (value < 0.5) {\n            return false\n        }\n    }\n    if (title === \"pH\") {\n        if (value < 7.25 || value > 7.4) {\n            return false\n        }\n    }\n    if (title === \"PCO2\") {\n        if (value < 40 || value > 60) {\n            return false\n        }\n    }\n    if (title === \"BE\") {\n        if (value < -7 || value > 6) {\n            return false\n        }\n    }\n    if (title === \"PO2\") {\n        if (value < 40 || value > 90) {\n            return false\n        }\n    }\n    if (title === \"BUN\") {\n        if (value < 1) {\n            return false\n        }\n    }\n    if (title === \"Cr\") {\n        if (value < 1) {\n            return false\n        }\n    }\n    if (title === \"ALT\") {\n        if (value < 45) {\n            return false\n        }\n    }\n    if (title === \"AST\") {\n        if (value < 45) {\n            return false\n        }\n    }\n    if (title === \"TBil\") {\n        if (value < 2) {\n            return false\n        }\n    }\n    if (title === \"DBil\") {\n        if (value < 0.5) {\n            return false\n        }\n    }\n    if (title === \"ALKP\") {\n        if (value < 450) {\n            return false\n        }\n    }\n    if (title === \"Total Ca\") {\n        if (value < 8 || value > 12) {\n            return false\n        }\n    }\n    if (title === \"FeSat\") {\n        if (value < 0.15) {\n            return false\n        }\n    }\n    return true\n}\n\n\nexport function getRandom(number) {\n    return Math.floor(Math.random() * 5) + number;\n};\n\nexport function getRandomfornumber(number) {\n    return Math.floor(Math.random() * number);\n};\n\nexport function arraychange(list) {\n    var myNewArray = []\n    for (var i = 0; i < list.length; ++i) {\n        for (var j = 0; j < list[i].length; ++j) {\n            myNewArray.push(list[i][j]);\n        }\n    }\n    return myNewArray\n}\n\nexport function WeightList(weightlist) {\n    if (weightlist === undefined || weightlist === null) {\n        return \"--\"\n    }\n    const findata = weightlist.filter(function (value, index) {\n        return value.type === \"TW\"\n    })\n    if (findata.length === 0) {\n        return 0\n    }\n    else return findata\n}\n\nexport function BornWeight(weightlist, birthday) {\n    if (weightlist === undefined || weightlist === null) {\n        return \"--\"\n    }\n    if (Array.isArray(weightlist)) {\n        const findata = weightlist.filter(function (value, index) {\n            return value.rec_dat === birthday && value.type === \"TW\"\n        })\n        if (findata.length === 0) {\n            return 0\n        }\n        else return parseInt(Number(findata[findata.length - 1].value2) * 1000)\n    }\n    else {\n        return parseInt(Number(weightlist.value2) * 1000)\n    }\n}\n\nexport function NewestWeight(weightlist) {\n    if (weightlist === undefined) {\n        return \"--\"\n    }\n    if (weightlist.length === 0) {\n        return 0\n    }\n    if (Array.isArray(weightlist)) {\n        const findata = weightlist.filter(function (value, index) {\n            return value.type === \"TW\"\n        })\n        if (findata.length === 0) {\n            return \"--\"\n        }\n        return parseInt(Number(findata[0].value2) * 1000)\n    }\n    else {\n        return parseInt(Number(weightlist.value2) * 1000)\n    }\n\n}\n\nexport function XM2JSON(data) {\n    const xm2 = new X2JS()\n    if (data === undefined) {\n        return []\n    }\n    const status = xm2.xml2js(data).outmsg.ret\n    if (Number(status) === 0) {\n        const parsedata = xm2.xml2js(data).outmsg.resconts.rescont\n        if (!Array.isArray(parsedata)) {\n            return [parsedata]\n        }\n        return parsedata\n    }\n    return []\n}\n\nexport function QMNCXM2JSON(data) {\n    const xm2 = new X2JS()\n    if (data === undefined) {\n        return []\n    }\n    const status = xm2.xml2js(data).outmsg.ret\n    if (Number(status) === 0) {\n        const parsedata = xm2.xml2js(data).outmsg.resconts.rescont\n        return parsedata\n    }\n    return []\n}\n\nexport function Doc(DocList, type) {\n    if (DocList === undefined || DocList === null || DocList === \"\") {\n        return \"\"\n    }\n    const Main = DocList.filter(function (element, index) {\n        return element.PDTYPE === type\n    })\n    if (Main.length === 0) {\n        return \"\"\n    }\n    return Main[0].PDDOCNMC.toString().trim()\n}\n\nexport function selectweight(List, date) {\n    if (List === undefined || List === null) {\n        return \"--\"\n    }\n    var array = []\n    for (let index = 0; index < List.length; index++) {\n        const element = List[index];\n        if (moment(element.rec_dat, 'YYYYMMDD').valueOf() < date) {\n            array.push(element)\n        }\n    }\n    if (array.length === 0) {\n        return 0\n    }\n    return Number(array[0].value2) * 1000\n}\n\n\n","import axios from 'axios';\n\n\naxios.defaults.baseURL = \"http://10.97.241.48/deploy/\";\n// axios.defaults.baseURL = \"http://172.24.7.33/deploy/\";\n// axios.defaults.baseURL = \"http://127.0.0.1:8888/deploy/\";\n\n//----------------------------------------------\n// announcement-controller 病房公告(Ward View)\n//----------------------------------------------\n//建立公告資訊\n/*\nexport function createAnnounce(context, editor, transinno, time) {\n  const body = {\n    context: context,\n    editor: editor,\n    transinno: transinno,\n    time: time\n  }\n  return axios.post(\"Announcement/createAnnouncement\", body);\n}*/\n\n//Create bweek bday bweight\nexport function createPatientInfo(hisid, pname, psex, bweight, bweek, bday) {\n  const body = {\n    \"bday\": bday,\n    \"bweek\": bweek,\n    \"bweight\": bweight,\n    \"hisid\": hisid,\n    \"pname\": pname,\n    \"psex\": psex\n  }\n  return axios.post(\"patientinfo/createPatientInfo\", body)\n}\n\nexport function getPersionalStatus(hisid) {\n  return axios.get(\"patientinfo/getOnePatientInfo/\" + hisid);\n}\n\nexport function createAnnounce(announceArray) {\n  return axios.post(\"Announcement/createAnnouncement\", announceArray);\n}\n\n//刪除某天公告資訊\nexport function deleteAnnounce(transinno, dateTime) {\n  return axios.delete(\"Announcement/delannouncement/\" + transinno + \"/\" + dateTime);\n}\n\n//取得全部資訊\nexport function getAllAnnounce() {\n  return axios.get(\"Announcement/getAllannounce\");\n}\n\n//取得某位病人某天資訊\nexport function getOneAnnounce(transinno, dateTime) {\n  return axios.get(\"Announcement/getOneannouncement/\" + transinno + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// export/import-controller 匯入匯出\n//----------------------------------------------\n//匯出\nexport function exportJson(transinno) {\n  return axios.get(\"exportJson/\" + transinno);\n}\n\n//匯入\nexport function importJson(filename) {\n  return axios.get(\"importJson/\" + filename);\n}\n\n//下載檔案\nexport function downloadFile(filename) {\n  return axios.get(\"downloadFile/\" + filename);\n}\n\n//上傳檔案\nconst config = { headers: { 'Content-Type': 'multipart/form-data' } }\nexport function uploadFile(fileData) {\n  return axios.post(\"uploadFile\", fileData, config);\n}\n//----------------------------------------------\n// login-controller 登入與權限設定\n//----------------------------------------------\n//刪除帳號\nexport function deleteUser(name, role, username) {\n  return axios.delete(\"delUser/\" + name + \"/\" + role + \"/\" + username);\n}\n\n//查詢某帳號權限：1->read only 2->general user 3->general manager 4->system manager 5->super user\nexport function getAuth(username) {\n  return axios.get(\"getAuth/\" + username);\n}\n\n//取得系統空間\nexport function getSpace() {\n  return axios.get(\"getSpace\");\n}\n\n//登入\nexport function login(username, password) {\n  const body = {\n    username: username,\n    password: password\n  }\n  return axios.post(\"login\", body);\n}\n\nexport function getSSOLogin(username, password) {\n  return axios.get(\"LoginInSSO/\" + username + \"/\" + password);\n}\n\n//新增帳號與權限\nexport function register(name, password, role, username, doctorid) {\n  const body = {\n    name: name,\n    password: password,\n    role: role,\n    username: username,\n    doctorid: doctorid\n  }\n  return axios.post(\"register\", body);\n}\n\n//取得全部資訊\nexport function getAlluser() {\n  return axios.get(\"getAlluser\")\n}\n\n//角色、姓名搜尋其內容\nexport function searchUser(name, role) {\n  return axios.get(\"searchUser/\" + name + \"/\" + role);\n}\n\n//----------------------------------------------\n// log-controller 顯示Log日誌\n//----------------------------------------------\n\n//Show login log(根據起始時間查詢成功登入記錄)(time格式為yyyy-MM-ddTHH:mm:ss)\nexport function getLoginlog(startTime, endTime) {\n  return axios.get(\"getLoginlog/\" + startTime + \"/\" + endTime);\n}\n\n//Show API access log (date格式為yyyy-MM-dd)\nexport function getApilog(Time) {\n  return axios.get(\"getApilog/\" + Time)\n}\n\n//Show Debug log (date格式為yyyy-MM-dd)\nexport function getDebuglog(Time) {\n  return axios.get(\"getDebuglog/\" + Time)\n}\n\n//----------------------------------------------\n// breath-controller 呼吸RT\n//----------------------------------------------\n//createBreath\nexport function createBreath(editTime, hisid, model, note, setting) {\n  const body = {\n    editTime: editTime,\n    hisid: hisid,\n    model: model,\n    note: note,\n    setting: setting\n  }\n  return axios.post(\"breath/createBreath\", body);\n}\n\n//getBreath\nexport function getAllBreath() {\n  return axios.get(\"breath/getAllbreath\");\n}\n\n//updateNote\nexport function updateNote(editTime, hisid, model, note, setting) {\n  const body = {\n    editTime: editTime,\n    hisid: hisid,\n    model: model,\n    note: note,\n    setting: setting\n  }\n  return axios.put(\"breath/updatebnote/\" + editTime, body);\n}\n\n//----------------------------------------------\n// exam-cbc-controller Exam CBC Controller\n//----------------------------------------------\n//寫入CBC資訊\nexport function createExamCbc(band, hb, hct, hisid, lym, plt, seg, updateTime, wbc) {\n  const body = {\n    band: band,\n    hb: hb,\n    hct: hct,\n    hisid: hisid,\n    lym: lym,\n    plt: plt,\n    seg: seg,\n    updateTime: updateTime,\n    wbc: wbc\n  }\n  return axios.post(\"examcbc/createexamcbc\", body);\n}\n\n//取得全部資訊\nexport function getAllExamCbc() {\n  return axios.get(\"examcbc/getAllexamcbc\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamCbcOfPatient(hisid, dateTime) {\n  return axios.get(\"examcbc/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-cbc-two-controller Exam CBC Two Controller\n//----------------------------------------------\n//寫入CBC資訊\nexport function createExamCbcTwo(band, crp, hisid, lym, ptc, seg, updateTime, wbc) {\n  const body = {\n    band: band,\n    crp: crp,\n    hisid: hisid,\n    lym: lym,\n    ptc: ptc,\n    seg: seg,\n    updateTime: updateTime,\n    wbc: wbc\n  }\n  return axios.post(\"examcbctwo/createexamcbctwo\", body);\n}\n\n//取得全部資訊\nexport function getAllExamCbcTwo() {\n  return axios.get(\"examcbctwo/getAllexamcbctwo\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamCbcTwoOfPatient(hisid, dateTime) {\n  return axios.get(\"examcbctwo/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-cruor-controller Exam Cruor Controller\n//----------------------------------------------\n//createExamCruor\nexport function createExamCruor(apiT, hisid, inr, pt, updateTime) {\n  const body = {\n    apiT: apiT,\n    hisid: hisid,\n    inr: inr,\n    pt: pt,\n    updateTime: updateTime\n  }\n  return axios.post(\"examcruor/createexamcruor\", body);\n}\n\n//getExamCruor\nexport function getAllExamCruor() {\n  return axios.get(\"examcruor/getAllexamcruor\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamCruorOfPatient(hisid, dateTime) {\n  return axios.get(\"examcruor/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-electrolyte-controller Exam Electrolyte Controller\n//----------------------------------------------\n//createExamEletrolyte\nexport function createExamElectrolyte(bun, caFree, caTotal, caseid, cl, cr, hisid, k, mg, na, p, updateTime) {\n  const body = {\n    bun: bun,\n    caFree: caFree,\n    caTotal: caTotal,\n    caseid: caseid,\n    cl: cl,\n    cr: cr,\n    hisid: hisid,\n    k: k,\n    mg: mg,\n    na: na,\n    p: p,\n    updateTime: updateTime\n  }\n  return axios.post(\"examelectrolyte/createexamelectrolyte\", body);\n}\n\n//getExamElectrolyte\nexport function getAllExamElectrolyte() {\n  return axios.get(\"examelectrolyte/getAllexamelectrolyte\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamElectrolyteOfPatient(hisid, dateTime) {\n  return axios.get(\"examcruor/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-gas-addi-controller Exam GAS Addi Controller\n//----------------------------------------------\n//createExamGasAddi\nexport function createExamGasAddi(bun, caFree, cr, hb, hct, hisid, k, na, updateTime) {\n  const body = {\n    bun: bun,\n    caFree: caFree,\n    cr: cr,\n    hb: hb,\n    hct: hct,\n    hisid: hisid,\n    k: k,\n    na: na,\n    updateTime: updateTime\n  }\n  return axios.post(\"examgasaddi/createexamgasaddi\", body);\n}\n\n//getExamGasAddi\nexport function getAllExamGasAddi() {\n  return axios.get(\"examgasaddi/getAllexamgasaddi\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamGasAddiOfPatient(hisid, dateTime) {\n  return axios.get(\"examgasaddi/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-gas-controller Exam GAS Controller\n//----------------------------------------------\n//createExamGas\nexport function createExamGas(be, fiO2, hco3, hisid, o2Sat, pco2, ph, po2, sample, updateTime) {\n  const body = {\n    be: be,\n    fiO2: fiO2,\n    hco3: hco3,\n    hisid: hisid,\n    o2Sat: o2Sat,\n    pco2: pco2,\n    ph: ph,\n    po2: po2,\n    sample: sample,\n    updateTime: updateTime\n  }\n  return axios.post(\"examgas/createexamgas\", body);\n}\n\n//getExamGas\nexport function getAllExamGas() {\n  return axios.get(\"examgas/getAllexamgas\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamGasOfPatient(hisid, dateTime) {\n  return axios.get(\"examgas/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-glu-controller Exam Glu Controller\n//----------------------------------------------\n//createExamGlu\nexport function createExamGlu(gluBedside, gluLab, hisid, updateTime) {\n  const body = {\n    gluBedside: gluBedside,\n    gluLab: gluLab,\n    hisid: hisid,\n    updateTime: updateTime\n  }\n  return axios.post(\"examglu/createexamglu\", body);\n}\n\n//getExamGlu\nexport function getAllExamGlu() {\n  return axios.get(\"examglu/getAllexamglu\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamGluOfPatient(hisid, dateTime) {\n  return axios.get(\"examglu/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-heart-controller Exam Heart Controller\n//----------------------------------------------\n//createExamHeart\nexport function createExamHeart(bnp, caseid, ck, ckMB, hisid, tropoin, updateTime) {\n  const body = {\n    bnp: bnp,\n    caseid: caseid,\n    ck: ck,\n    ckMB: ckMB,\n    hisid: hisid,\n    tropoin: tropoin,\n    updateTime: updateTime\n  }\n  return axios.post(\"examheart/createexamheart\", body);\n}\n\n//getExamGlu\nexport function getAllExamHeart() {\n  return axios.get(\"examheart/getAllexamheart\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamHeartOfPatient(hisid, dateTime) {\n  return axios.get(\"examheart/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-jaundice-controller Exam Jaundice Controller\n//----------------------------------------------\n//createExamJaundice\nexport function createExamJaundice(dbil, hisid, microBil, tbil, tcb, updateTime) {\n  const body = {\n    dbil: dbil,\n    hisid: hisid,\n    microBil: microBil,\n    tbil: tbil,\n    tcb: tcb,\n    updateTime: updateTime\n  }\n  return axios.post(\"examjaundice/createexamjaundice\", body);\n}\n\n//getExamJaundice\nexport function getAllExamJaundice() {\n  return axios.get(\"examjaundice/getAllexamjaundice\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamJaundiceOfPatient(hisid, dateTime) {\n  return axios.get(\"examjaundice/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-liver-controller Exam Liver Controller\n//----------------------------------------------\n//createExamLiver\nexport function createExamLiver(alKp, alb, alt, ast, dbil, hisid, rggt, tbil, updateTime) {\n  const body = {\n    alKp: alKp,\n    alb: alb,\n    alt: alt,\n    ast: ast,\n    dbil: dbil,\n    hisid: hisid,\n    rggt: rggt,\n    tbil: tbil,\n    updateTime: updateTime\n  }\n  return axios.post(\"examliver/createexamliver\", body);\n}\n\n//getExamLiver\nexport function getAllExamLiver() {\n  return axios.get(\"examliver/getAllexamliver\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamLiverOfPatient(hisid, dateTime) {\n  return axios.get(\"examliver/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-premature-baby-controller Exam Premature Baby Controller\n//----------------------------------------------\n//createExamPrematureBaby\nexport function createExamPrematureBaby(alkp, feSat, hisid, iron, ldh, tibc, updateTime) {\n  const body = {\n    alkp: alkp,\n    feSat: feSat,\n    hisid: hisid,\n    iron: iron,\n    ldh: ldh,\n    tibc: tibc,\n    updateTime: updateTime\n  }\n  return axios.post(\"examprematurebaby/createexamprematurebaby\", body);\n}\n\n//getExamPrematureBaby\nexport function getAllExamPrematureBaby() {\n  return axios.get(\"examprematurebaby/getAllexamprematurebaby\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamPrematureBabyOfPatient(hisid, dateTime) {\n  return axios.get(\"examprematurebaby/getOnepatient\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-unstructured-controller Exam Unstructured Controller\n//----------------------------------------------\n//createExamUnstructured\nexport function createExamUnstructured(hisid, item, result, state, time) {\n  const body = {\n    hisid: hisid,\n    item: item,\n    result: result,\n    state: state,\n    time: time\n  }\n  return axios.post(\"examunstructured/createexamunstructured\", body);\n}\n\n//getExamUnstructured\nexport function getAllExamUnstructured() {\n  return axios.get(\"examunstructured/getAllexamunstructured\");\n}\n\n//----------------------------------------------\n// feeding-controller Feeding Controller\n//----------------------------------------------\n//createExamFeeding\nexport function createExamFeeding(editDoctor, editTime, endTime, hisid, name, notice, startTime) {\n  const body = {\n    editDoctor: editDoctor,\n    editTime: editTime,\n    endTime: endTime,\n    hisid: hisid,\n    name: name,\n    notice: notice,\n    startTime: startTime\n  }\n  return axios.post(\"feeding/createfeeding\", body);\n}\n\n//getExamFeeding\nexport function getAllExamFeeding() {\n  return axios.get(\"feeding/getAllfeeding\");\n}\n\n//----------------------------------------------\n// hospitalization-record-controller Hospitalization Record Controller\n//----------------------------------------------\n//createHospitalizationRecord\nexport function createHospitalizationRecord(hisid, hospitalDoctor, tricuactiveue, mainDoctor, nonReport, note, report, updateTime) {\n  const body = {\n    hisid: hisid,\n    hospitalDoctor: hospitalDoctor,\n    icuactive: tricuactiveue,\n    mainDoctor: mainDoctor,\n    nonReport: nonReport,\n    note: note,\n    report: report,\n    updateTime: updateTime\n  }\n  return axios.post(\"hospitalizationrecord/createhospitalizationrecord\", body);\n}\n\n//getHospitalizationRecord\nexport function getHospitalizationRecord() {\n  return axios.get(\"hospitalizationrecord/getAllhospitalizationrecord\");\n}\n\n//----------------------------------------------\n// io-controller IO Controller\n//----------------------------------------------\n//createIO\nexport function createIO(caseid, hisid, item, updateTime) {\n  const body = {\n    caseid: caseid,\n    hisid: hisid,\n    item: item,\n    updateTime: updateTime\n  }\n  return axios.post(\"io/createio\", body);\n}\n\n//getIO\nexport function getIO() {\n  return axios.get(\"io/getAllio\");\n}\n\n//----------------------------------------------\n// nis-controller NIS Controller\n//----------------------------------------------\n//getQDC\nexport function getQDC(caseno, st, et) {\n  return axios.get(\"QDC/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQENT\nexport function getQENT(caseno) {\n  return axios.get(\"QENT/\" + caseno);\n}\n\n//getQDVS\nexport function getQDVS(caseno, st, et) {\n  return axios.get(\"QDVS/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQMNC\nexport function getQMNC(caseno) {\n  return axios.get(\"QMNC/\" + caseno);\n}\n\n//getQOXY\nexport function getQOXY(caseno, st, et) {\n  return axios.get(\"QOXY/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQPNOT\nexport function getQPNOT(caseno, st, et) {\n  return axios.get(\"QPNOT/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQSPE\nexport function getQSPE(caseno, st, et) {\n  return axios.get(\"QSPE/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQTWPER\nexport function getQTWPER(caseno, st, et) {\n  return axios.get(\"QTWPER/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//----------------------------------------------\n// note-controller Note Controller\n//----------------------------------------------\n//createNote\nexport function createNote(caseid, context, editTime, hisid, type) {\n  const body = {\n    caseid: caseid,\n    context: context,\n    editTime: editTime,\n    hisid: hisid,\n    type: type\n  }\n  return axios.post(\"note/createnote\", body);\n}\n\n//getNote\nexport function getNote() {\n  return axios.get(\"note/getAllnote\");\n}\n\n//----------------------------------------------\n// notice-controller 待辦事項 Notice (Ward/Patient View)\n//----------------------------------------------\n//建立資訊\nexport function createNotice(hisid, context, time, transinno, doc) {\n  const body = {\n    hisid: hisid,\n    context: context,\n    time: time,\n    transinno: transinno,\n    doc: doc\n  }\n  return axios.post(\"notice/createNotice\", body);\n}\n\n//刪除某人某件資訊\nexport function deleteNotice(transinno, date) {\n  return axios.delete(\"notice/delnotice/\" + transinno + \"/\" + date);\n}\n\n//取得全部資訊\nexport function getAllNotice() {\n  return axios.get(\"notice/getAllnotice\");\n}\n\n//取得某位病人資訊\nexport function getOnePatientNotice(transinno, HISID, st, et) {\n  return axios.get(\"notice/getOnePatientNotice/\" + transinno + \"/\" + HISID + \"/\" + st + \"/\" + et);\n}\n\n//----------------------------------------------\n// patient-controller 基本資料(Ward View)\n//----------------------------------------------\n//填寫基本資料\nexport function createPatient(nonreport, pacseno, pbirthdt, pbirthweight, pblood, pday, phistnum, pnamec, psex, pweek, report, transinid) {\n  const body = {\n    nonreport: nonreport,\n    pacseno: pacseno,\n    pbirthdt: pbirthdt,\n    pbirthweight: pbirthweight,\n    pblood: pblood,\n    pday: pday,\n    phistnum: phistnum,\n    pnamec: pnamec,\n    psex: psex,\n    pweek: pweek,\n    report: report,\n    transinid: transinid\n  }\n  return axios.post(\"patient/createpatient\", body);\n}\n\n//刪除某位病人\nexport function deletePatient(transinid, caseid, hisid) {\n  return axios.delete(\"patient/delpatient/\" + transinid + \"/\" + caseid + \"/\" + hisid);\n}\n\n//取得全部資訊\nexport function getAllPatient() {\n  return axios.get(\"patientinfo/getAllpatient\");\n}\n\n//取得某位病人資訊\nexport function getOnePatient(hisid) {\n  return axios.get(\"patient/getOnepatient/\" + hisid);\n}\n\n\n//----------------------------------------------\n// patient-important-matter-controller 病人重要注意事項(Patient View)\n//----------------------------------------------\n//建立事項資訊\nexport function createPatientImportantMatter(context, editor, hisid, updateTime, transinid) {\n  const body = {\n    context: context,\n    editor: editor,\n    hisid: hisid.trim(),\n    time: updateTime,\n    transinid: transinid\n  }\n  return axios.post(\"patientimportantmatter/createpatientimportantmatter\", body);\n}\n\n//刪除某日資訊\nexport function deletePatientImportantMatter(date) {\n  return axios.delete(\"patientimportantmatter/delpatientimportantmatter/\" + date);\n}\n\n//取得全部資訊\nexport function getAllPatientImportantMatter() {\n  return axios.get(\"patientimportantmatter/getAllpatientimportantmatter\");\n}\n\n//取得某位病人資訊\nexport function getOnePatientImportantMatter(transinid) {\n  return axios.get(\"patientimportantmatter/getOnepatient/\" + transinid);\n}\n\n//----------------------------------------------\n// patient-remark-controller 病人註記(Patient View)\n//----------------------------------------------\n//createPatientRemark\nexport function createPatientRemark(context, hisid, transid) {\n  const body = {\n    context: context,\n    hisid: hisid,\n    transid: transid\n  }\n  return axios.post(\"patientremark/createpatientremark\", body);\n}\n\n//delPatientremark\nexport function deletePatientRemark(transid) {\n  return axios.delete(\"patientremark/delpatientremark/\" + transid);\n}\n\n//getPatientRemark\nexport function getAllPatientRemark() {\n  return axios.get(\"patientremark/getAllpatientremark\");\n}\n\n//getOnePatientRemark\nexport function getOnePatientRemark(transid) {\n  return axios.get(\"patientremark/getOnepatientremark/\" + transid);\n}\n\n//----------------------------------------------\n// remark-controller 註記\n//----------------------------------------------\n//建立註記\n\nexport function createRemark(name, remark, remarkId, time, transinId, type, editor) {\n  const body = {\n    name: name,\n    remark: remark,\n    remarkid: remarkId,\n    time: time,\n    transinid: transinId,\n    type: type,\n    editor: editor\n  }\n  return axios.post(\"Remark/createremark\", body);\n}\n\n//取得全部註記\nexport function getAllRemark() {\n  return axios.get(\"Remark/getAllremark\");\n}\n\n//取得某一類型註記\nexport function getOneRemark(transid, remarkid, type) {\n  return axios.get(\"Remark/getOneremark/\" + transid + \"/\" + remarkid + \"/\" + type);\n}\n\n//----------------------------------------------\n// patient-weight-controller 基本資料-體重(Ward View)\n//----------------------------------------------\n//填寫體重資訊\nexport function createPatientWeight(hisid, updateTime, weight) {\n  const body = {\n    hisid: hisid,\n    updateTime: updateTime,\n    weight: weight\n  }\n  return axios.post(\"patientweight/createpatientweight\", body);\n}\n\n//刪除某位病人體重資訊\nexport function deletePatientWeight(date) {\n  return axios.delete(\"patientweight/delpatientweight/\" + date);\n}\n\n//取得全部資訊\nexport function getAllPatientWeight() {\n  return axios.get(\"patientweight/getAllpatientweight\");\n}\n\n//取得某位病人體重資訊\nexport function getOnePatientWeight(hisid) {\n  return axios.get(\"patientweight/getOnepatientweight/\" + hisid);\n}\n\n//----------------------------------------------\n// prescription-order-controller Prescription Order\n//----------------------------------------------\n//建立Prescription Order資訊\nexport function createPrescriptionOrder(caseid, dosage, editTime, endTime, frequency, hisid, name, note, route, scientificName, startTime, state, unit) {\n  const body = {\n    caseid: caseid,\n    dosage: dosage,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    route: route,\n    scientificName: scientificName,\n    startTime: startTime,\n    state: state,\n    unit: unit\n  }\n  return axios.post(\"prescriptionorder/createprescriptionorder\", body);\n}\n\n//取得全部資訊\nexport function getAllPrescriptionOrder() {\n  return axios.get(\"prescriptionorder/getAllprescriptionorder\");\n}\n\n//更新Prescription Order備註\nexport function updatePrescriptionOrder(updateTime, caseid, dosage, editTime, endTime, frequency, hisid, name, note, route, scientificName, startTime, state, unit) {\n  const body = {\n    caseid: caseid,\n    dosage: dosage,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    route: route,\n    scientificName: scientificName,\n    startTime: startTime,\n    state: state,\n    unit: unit\n  }\n  return axios.put(\"prescriptionorder/updateponote/\" + updateTime, body);\n}\n\n//----------------------------------------------\n// schedule-controller 排程與事件(Ward/Patient View)\n//----------------------------------------------\n//建立排程資訊\nexport function createPatientSchedule(bednumber, context, time, transinno, type, writter, name, hisid) {\n  const body = {\n    bednumber: bednumber,\n    context: context,\n    time: time,\n    transinno: transinno,\n    type: type,\n    writter: writter,\n    name: name,\n    hisid: hisid\n  }\n  return axios.post(\"schedule/createschedule\", body);\n}\n\n//刪除某人某天排程資訊\nexport function deletePatientSchedule(transinno, date) {\n  return axios.delete(\"schedule/delschedule/\" + transinno + \"/\" + date);\n}\n\n//取得全部資訊\nexport function getAllSchedule() {\n  return axios.get(\"schedule/getAllschedule\");\n}\n\n//取得某位某時段病人資訊\nexport function getOnePatientSchedule(transinno, starttime, endtime) {\n  return axios.get(\"schedule/getOnepatient/\" + transinno + \"/\" + starttime + \"/\" + endtime);\n}\n\n//----------------------------------------------\n// sso-controller SSO Controller\n//----------------------------------------------\n//get_user_profile\nexport function ssoUserProfile(app_COMPANY_UUID, app_USER_BASIC_PROFILE, app_USER_NODE_UUID, privileged_APP_SSO_TOKEN, public_APP_USER_SSO_TOKEN_TO_QUERY) {\n  const body = {\n    app_COMPANY_UUID: app_COMPANY_UUID,\n    app_USER_BASIC_PROFILE: app_USER_BASIC_PROFILE,\n    app_USER_NODE_UUID: app_USER_NODE_UUID,\n    privileged_APP_SSO_TOKEN: privileged_APP_SSO_TOKEN,\n    public_APP_USER_SSO_TOKEN_TO_QUERY: public_APP_USER_SSO_TOKEN_TO_QUERY\n  }\n  return axios.post(\"nicu/get_user_profile\", body);\n}\n\n//get_uuid\nexport function ssoUuid(privileged_APP_SSO_TOKEN, public_APP_USER_SSO_TOKEN_TO_QUERY) {\n  const body = {\n    privileged_APP_SSO_TOKEN: privileged_APP_SSO_TOKEN,\n    public_APP_USER_SSO_TOKEN_TO_QUERY: public_APP_USER_SSO_TOKEN_TO_QUERY\n  }\n  return axios.post(\"nicu/get_uuid\", body);\n}\n\n//Login\nexport function ssoLogin(app_PRIVATE_ID, app_PRIVATE_PASSWD) {\n  const body = {\n    app_PRIVATE_ID: app_PRIVATE_ID,\n    app_PRIVATE_PASSWD: app_PRIVATE_PASSWD\n  }\n  return axios.post(\"nicu/login\", body);\n}\n\n//login_action\nexport function ssoLoginAction(login_name, password) {\n  const body = {\n    login_name: login_name,\n    password: password\n  }\n  return axios.post(\"nicu/login_a\", body);\n}\n\n//----------------------------------------------\n// stored-procedure-controller Stored Procedure Controller\n//----------------------------------------------\n//getADMDISP\nexport function getStoredProcedureADMDISP(hisid, caseno) {\n  return axios.get(\"ADMDISP/\" + hisid + \"/\" + caseno);\n}\n\n//getADMLIST\nexport function getStoredProcedureADMLIST(hisid, docid) {\n  return axios.get(\"ADMLIST/\" + hisid + \"/\" + docid);\n}\n\n//getCPSDISP\nexport function getStoredProcedureCPSDISP(hisid, caseno, seq) {\n  return axios.get(\"CPSDISP/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//getCPSLIST\nexport function getStoredProcedureCPSLIST(hisid, docid) {\n  return axios.get(\"CPSLIST/\" + hisid + \"/\" + docid);\n}\n\n//getDISDISP\nexport function getStoredProcedureDISDISP(hisid, caseno) {\n  return axios.get(\"DISDISP/\" + hisid + \"/\" + caseno);\n}\n\n//getDISLIST\nexport function getStoredProcedureDISLIST(hisid, docid) {\n  return axios.get(\"DISLIST/\" + hisid + \"/\" + docid);\n}\n\n//getDTAROTQ4\nexport function getStoredProcedureDTAROTQ4(hisid) {\n  return axios.get(\"DTAROTQ4/\" + hisid);\n}\n\n//getDTASOAPQ\nexport function getStoredProcedureDTASOAPQ(hisid, date, dpt) {\n  return axios.get(\"DTASOAPQ/\" + hisid + \"/\" + date + \"/\" + dpt);\n}\n\n//getERDISP\nexport function getStoredProcedureERDISP(hisid, caseno) {\n  return axios.get(\"ERDISP/\" + hisid + \"/\" + caseno);\n}\n\n//getOPSORAQ1\nexport function getStoredProcedureOPSORAQ1(hisid) {\n  return axios.get(\"OPSORAQ1/\" + hisid);\n}\n\n//getOPSORAQ2\nexport function getStoredProcedureOPSORAQ2(hisid, date, times) {\n  return axios.get(\"OPSORAQ2/\" + hisid + \"/\" + date + \"/\" + times);\n}\n\n//getORDLIST\nexport function getStoredProcedureORDLIST(hisid, date, dpt, docid) {\n  return axios.get(\"ORDLIST/\" + hisid + \"/\" + date + \"/\" + dpt + \"/\" + docid);\n}\n\n//getPCASELIST\nexport function getStoredProcedurePCASELIST(hisid, docid, ttype) {\n  return axios.get(\"PCASELIST/\" + hisid + \"/\" + docid + \"/\" + ttype);\n}\n\n//getPRGTXQRY\nexport function getStoredProcedurePRGTXQRY(hisid, date, caseno) {\n  return axios.get(\"PRGTXQRY/\" + date + \"/\" + hisid + \"/\" + caseno);\n}\n\n//getRESDBGAS\nexport function getStoredProcedureRESDBGAS(hisid, date) {\n  return axios.get(\"RESDBGAS/\" + hisid + \"/\" + date);\n}\n\n//getRESDGLU1\nexport function getStoredProcedureRESDGLU1(hisid, date) {\n  return axios.get(\"RESDGLU1/\" + hisid + \"/\" + date);\n}\n\n//getRESDISP\nexport function getStoredProcedureRESDISP(hisid, month, caseno, seq) {\n  return axios.get(\"RESDISP/\" + month + \"/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//getRESDNM2\nexport function getStoredProcedureRESDNM2(hisid, date) {\n  return axios.get(\"RESDNM2/\" + hisid + \"/\" + date);\n}\n\n//getRESLAB01\nexport function getStoredProcedureRESLAB01(hisid, date) {\n  return axios.get(\"RESLAB01/\" + hisid + \"/\" + date);\n}\n\n//getRESLAB02\nexport function getStoredProcedureRESLAB02(hisid, date) {\n  return axios.get(\"RESLAB02/\" + hisid + \"/\" + date);\n}\n\n//getRESLAB0C\nexport function getStoredProcedureRESLAB0C(hisid, date) {\n  return axios.get(\"RESLAB0C/\" + hisid + \"/\" + date);\n}\n\n//getRESSECT\nexport function getStoredProcedureRESSECT(hisid, month, dpt, docid) {\n  return axios.get(\"RESSECT/\" + month + \"/\" + hisid + \"/\" + dpt + \"/\" + docid);\n}\n\n//getTRTMNTQ1\nexport function getStoredProcedureTRTMNTQ1(hisid, caseno) {\n  return axios.get(\"TRTMNTQ1/\" + hisid + \"/\" + caseno);\n}\n\n//getUDORDER0\nexport function getStoredProcedureUDORDER0(hisid, caseno, seq) {\n  return axios.get(\"UDORDER0/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//getUDTEXTQ1\nexport function getStoredProcedureUDTEXTQ1(caseno, seq) {\n  return axios.get(\"UDTEXTQ1/\" + caseno + \"/\" + seq);\n}\n\n//getWARDFLAG\nexport function getStoredProcedureWARDFLAG(hisid, caseno, seq) {\n  return axios.get(\"WARDFLAG/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//----------------------------------------------\n// table-controller Table Controller\n//----------------------------------------------\n//getTableHBED\nexport function getTableHBED() {\n  return axios.get(\"HBED\");\n}\n\n//getTablePBASINFO\nexport function getTablePBASINFO(PHISTNUM) {\n  return axios.get(\"PBASINFO/\" + PHISTNUM);\n}\n\n//getTablePDOCNEW\nexport function getTablePDOCNEW(PCASENO) {\n  return axios.get(\"PDOCNEW/\" + PCASENO);\n}\n\n//getTablePLOC\nexport function getTablePLOC(PCASENO) {\n  return axios.get(\"PLOC/\" + PCASENO);\n}\n\n//----------------------------------------------\n// to-do-controller 待辦事項To Do List(Ward/Patient View)\n//----------------------------------------------\n//建立待辦資訊\nexport function createTodo(caseid, context, time, transinno, type) {\n  const body = {\n    caseid: caseid,\n    context: context,\n    time: time,\n    transinno: transinno,\n    type: type\n  }\n  return axios.post(\"todo/createtodo\", body);\n}\n\n//刪除某件待辦資訊\nexport function deleteTodo(index) {\n  return axios.delete(\"todo/deltodo/\" + index);\n}\n\n//取得全部資訊\nexport function getAllTodo() {\n  return axios.get(\"todo/getAlltodo\");\n}\n\n//取得某位病人資訊\nexport function getOneTodo(transinno, caseid) {\n  return axios.get(\"todo/getOnepatient/\" + transinno + \"/\" + caseid);\n}\n\n//----------------------------------------------\n// tpn-controller TPN Controller\n//----------------------------------------------\n//createTPN\nexport function createTPN(aa, ca, editTime, endTime, frequency, glu, hisid, k, mg, na, name, notice, p, startTime, state, tpn) {\n  const body = {\n    aa: aa,\n    ca: ca,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    glu: glu,\n    hisid: hisid,\n    k: k,\n    mg: mg,\n    na: na,\n    name: name,\n    notice: notice,\n    p: p,\n    startTime: startTime,\n    state: state,\n    tpn: tpn\n  }\n  return axios.post(\"tpn/createtpn\", body);\n}\n\n//getTPN\nexport function getAllTPN() {\n  return axios.get(\"tpn/getAlltpn\");\n}\n\n//----------------------------------------------\n// treatment-order-controller Treatment Order\n//----------------------------------------------\n//建立Treatment Order資訊\nexport function createTreatmentOrder(caseid, editTime, endTime, frequency, hisid, name, note, startTime, state) {\n  const body = {\n    caseid: caseid,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    startTime: startTime,\n    state: state\n  }\n  return axios.post(\"treatmentorder/createtreatmentorder\", body);\n}\n\n//取得全部資訊\nexport function getAllTreatmentOrder() {\n  return axios.get(\"treatmentorder/getAlltreatmentorder\");\n}\n\n//更新Treatment Order備註\nexport function updateTreatmentOrder(EditTime, caseid, editTime, endTime, frequency, hisid, name, note, startTime, state) {\n  const body = {\n    caseid: caseid,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    startTime: startTime,\n    state: state\n  }\n  return axios.put(\"treatmentorder/updatetonote/\" + EditTime, body);\n}\n\n//----------------------------------------------\n// ward-bed-information-history-controller 歷史病床資訊(Ward View)\n//----------------------------------------------\n//建立床位歷史資訊\nexport function createWardbedInformation(breath, hisid, nonBreath, onBedNumber, tpn, updateTime) {\n  const body = {\n    breath: breath,\n    hisid: hisid,\n    nonBreath: nonBreath,\n    onBedNumber: onBedNumber,\n    tpn: tpn,\n    updateTime: updateTime\n  }\n  return axios.post(\"wardbedinformation/createwardbedinformation\", body);\n}\n\n//取得全部資訊\nexport function getAllWardbedInformation() {\n  return axios.get(\"wardbedinformation/getAllwardbedinformation\");\n}\n\n//當日床位資訊\nexport function getOneWardbedInformation(date) {\n  return axios.get(\"wardbedinformation/getOnewardbedinformation/\" + date);\n}\n\n//近兩週床位資訊\nexport function getWeekWardbedInformation(date) {\n  return axios.get(\"wardbedinformation/getWeekswardbedinformation/\" + date);\n}\n\n//----------------------------------------------\n// ward-information-controller Ward Information Controller\n//----------------------------------------------\n//建立WardInformation資訊\nexport function createWardInformation(bednumber, caseid, hisid, indexId, today, transformintime, transformouttime) {\n  const body = {\n    bednumber: bednumber,\n    caseid: caseid,\n    hisid: hisid,\n    indexId: indexId,\n    today: today,\n    transformintime: transformintime,\n    transformouttime: transformouttime\n  }\n  return axios.post(\"wardinformation/createwardinformation\", body);\n}\n\n//取得全部資訊\nexport function getAllWardInformation() {\n  return axios.get(\"wardinformation/getAllwardinformation\");\n}\n\n//取得當日資訊\nexport function getOneWardInformation(date) {\n  return axios.get(\"wardinformation/getTodaywardinformation/\" + date);\n}\n\n//----------------------------------------------\n// ward-state-controller 病床狀態(Ward View)\n//----------------------------------------------\n//建立床位狀態資訊\nexport function createWardState(anti, breath, drain, foley, hd, hisid, npo, tpn) {\n  const body = {\n    anti: anti,\n    breath: breath,\n    drain: drain,\n    foley: foley,\n    hd: hd,\n    hisid: hisid,\n    npo: npo,\n    tpn: tpn\n  }\n  return axios.post(\"wardstate/createwardstate\", body);\n}\n\n//取得全部資訊\nexport function getAllWardState() {\n  return axios.get(\"wardstate/getAllwardstate\");\n}\n\n//取得某人床位狀態資訊\nexport function getOneWardState(hisid) {\n  return axios.get(\"wardstate/getOnewardstate/\" + hisid);\n}\n\n//----------------------------------------------\n// ward-value-controller 生命跡象(Ward/Patient View)\n//----------------------------------------------\n//建立生命跡象資訊\nexport function createWardValue(abpd, abpm, abps, bt, hr, nbpd, nbpm, nbps, phistnum, rr, spO2, time) {\n  const body = {\n    abpd: abpd,\n    abpm: abpm,\n    abps: abps,\n    bt: bt,\n    hr: hr,\n    nbpd: nbpd,\n    nbpm: nbpm,\n    nbps: nbps,\n    phistnum: phistnum,\n    rr: rr,\n    spO2: spO2,\n    time: time\n  }\n  return axios.post(\"wardvalue/createwardvalue\", body);\n}\n\nexport function getWardDebInfo(date) {\n  return axios.get(\"patient/getWardDebInfo/\" + date);\n}\n\nexport function getPatientwarMidValue(hisid, time, interval) {\n  return axios.get(\"wardvalue/getPatientwarMidValue/\" + hisid + \"/\" + time + \"/\" + interval);\n}\n\nexport function getPatientwardvalueMedian(hisid, startTime, endTime) {\n  return axios.get(\"wardvalue/getPatientwardvalueMedian/\" + hisid + \"/\" + startTime + \"/\" + endTime);\n}\n\n\nexport function getPatientwardvalueBoxPlot(hisid, startTime, endTime, type, interval) {\n  return axios.get(\"wardvalue/getPatientwardvalueBoxPlot/\" + hisid + \"/\" + startTime + \"/\" + endTime + \"/\" + type + \"/\" + interval);\n}\n\nexport function getVitalSignData(hisid, startTime, endTime, type) {\n  return axios.get(\"wardvalue/getVitalSignData/\" + hisid + \"/\" + startTime + \"/\" + endTime + \"/\" + type);\n}\n\n//取得全部資訊\nexport function getAllWardValue() {\n  return axios.get(\"wardvalue/getAllwardvalue\");\n}\n\n//取得全部資訊\nexport function getHisidwardvalue(hisid) {\n  return axios.get(\"wardvalue/getHisidwardvalue/\" + hisid);\n}\n\n//取得某一段時間某一個人生命跡象(原始資料)\nexport function getPatientWardValue(endTime, hisid, startTime, interval, type) {\n  return axios.get(\"wardvalue/getPatientwardvalue/\" + hisid + \"/\" + startTime + \"/\" + endTime + \"/\" + type + \"/\" + interval);\n}\n\n//取得某一個人某類型最新生命跡象\nexport function getWardvalueByType(hisid, type) {\n  return axios.get(\"wardvalue/getWardvalueByType/\" + hisid + \"/\" + type);\n}\n\n\n//----------------------------------------------\n// water-volume-controller Water Volume Controller\n//----------------------------------------------\n//createWaterVolume\nexport function createWaterVolume(endTime, feed, hisid, iv, other, startTime, updateTime) {\n  const body = {\n    endTime: endTime,\n    feed: feed,\n    hisid: hisid,\n    iv: iv,\n    other: other,\n    startTime: startTime,\n    updateTime: updateTime\n  }\n  return axios.post(\"watervolume/createwatervolume\", body);\n}\n\n//取得全部資訊\nexport function getAllWaterVolume() {\n  return axios.get(\"watervolume/getAllwatervolume\");\n}\n","import axios from 'axios';\n\nconst githubApiUrl = \"https://raw.githubusercontent.com/gerrykiki/JsonRegObject/master/\";\n\n//create new instance of github API\nvar axiosGithub = axios.create({\n    baseURL: githubApiUrl,\n    timeout: 1000,\n    //headers: {'X-Custom-Header': 'foobar'}\n});\n\nexport function getGitHubJson(string) {\n    return axiosGithub.get(string);\n}\n\n// export function getExamReport() {\n//     return axios.get(\"ExamRepor.json\");\n// }\n\n","import React, { Component } from 'react';\nimport { wardstatestringformat } from '../Function/Wardstate'\nimport './Wardcardstatus.scss'\nimport * as ApiProvider from '../API/ApiProvider'\nimport * as ApiGithub from '../API/ApiGithub'\n// import moment from 'moment';\n// import * as RegularData from '../Data/RegularData'\n\nclass Wardcarstatus extends Component {\n    state = {\n        TRTMNTQ1: [],\n        UDORDER0: [],\n        FlagReg: []\n    }\n    componentDidMount() {\n        const { PCASENO, PHISTNUM } = this.props\n        const TRQ1 = ApiProvider.getStoredProcedureTRTMNTQ1(PHISTNUM, PCASENO)\n            .then(data => {\n                const rowList = data.data\n                const filterStatusList = rowList.filter(function (info, index, arr) {\n                    return Number(info.ORSTATUS) === 30 || Number(info.ORSTATUS) === 90\n                })\n                return filterStatusList\n            })\n            .catch(err => {\n\n            })\n        const UDORDER = ApiProvider.getStoredProcedureUDORDER0(PHISTNUM, PCASENO, \"123\")\n            .then(data => {\n                var List = []\n                const dataList = data.data\n                if (Array.isArray(dataList)) {\n                    for (let index = 0; index < dataList.length; index++) {\n                        const status = Number(dataList[index].UDSTATUS)\n                        if (status === 30) {\n                            List.push(dataList[index])\n                        }\n                    }\n                }\n                return List\n            })\n            .catch(err => {\n\n            })\n        const Reg = ApiGithub.getGitHubJson(\"FlagReg.json\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        Promise.all([TRQ1, UDORDER, Reg])\n            .then(result => {\n                this.setState({\n                    TRTMNTQ1: result[0],\n                    UDORDER0: result[1],\n                    FlagReg: result[2]\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    render() {\n        function RespiratorStatusParse(InvasiveRespiratorStatus, NonInvasiveRespiratorStatus) {\n            if (InvasiveRespiratorStatus === false && NonInvasiveRespiratorStatus === false) {\n                return \"false\"\n            }\n            if (InvasiveRespiratorStatus === true && NonInvasiveRespiratorStatus === true) {\n                return \"false\"\n            }\n            if (InvasiveRespiratorStatus === true) {\n                return '呼(侵入)'\n            }\n            if (NonInvasiveRespiratorStatus === true) {\n                return \"呼(非侵入)\"\n            }\n            return \"--\"\n        }\n\n        function parseFlagData(TRTMNTQ1, UDORDER, FlagReg, type) {\n            //filter  status 生效中\n            if (FlagReg === undefined || FlagReg === null) { return null }\n            const Flag = FlagReg.filter(function (value, index, arr) {\n                return value.item === type\n            })\n            if (Flag.length === 0) {\n                return null\n            }\n            const StatusUDORDER = UDORDER.some(function (value, index, arr) {\n                const UDDRGNAM = value.UDDRGNAM.toLowerCase()\n                const UDGNAME = value.UDGNAME.toLowerCase()\n                const findFlag = Flag[0].ParseValueUD.some(function (value, index, arr) {\n                    return UDDRGNAM.indexOf(value) >= 0 || UDGNAME.indexOf(value)\n                })\n                return findFlag\n            })\n            const StatusTRTMNTQ1 = TRTMNTQ1.some(function (value, index, arr) {\n                const ORPROCED = value.ORPROCED.toLowerCase()\n                const findFlag = Flag[0].ParseValueTRT.some(function (value, index, arr) {\n                    return ORPROCED.match(value) !== null\n                    // return value\n                })\n                return findFlag\n            })\n            if (StatusUDORDER === false && StatusTRTMNTQ1 === false) {\n                return false\n            }\n            return true\n        }\n\n        function statusspan(source) {\n            if (source.item === 'Respirator') {\n                return 'gridtwocoltwo'\n            }\n            else return 'gridtwocolone'\n        }\n        function style_change(source) {\n            if (source.item === 'Respirator') {\n                if (source.data === '呼(侵入)') {\n                    return 'statustrue'\n                }\n                if (source.data === '呼(非侵入)') {\n                    return 'statusfalse'\n                }\n                if (source.data === 'true') {\n                    return 'statustrue'\n                }\n                return 'statusfalse'\n\n            }\n            else {\n                if (source.data) {\n                    return 'statustrue'\n                }\n                else {\n                    return 'statusfalse'\n                }\n            }\n        }\n\n        const UDORDER = this.state.UDORDER0\n        const TRTMNTQ1 = this.state.TRTMNTQ1\n\n\n        const Flag = this.state.FlagReg\n\n\n        const AntiStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"Anti\")\n        const TPNStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"TPN\")\n        const NP0Status = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"NPO\")\n        const FoleyStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"Foley\")\n        const DrainStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"Drain\")\n        const InvasiveRespiratorStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"InvasiveRespirator\")\n        const NonInvasiveRespiratorStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"NonInvasiveRespirator\")\n        const RespiratorStatus = RespiratorStatusParse(InvasiveRespiratorStatus, NonInvasiveRespiratorStatus)\n\n        const StatusArray = [\n            { \"item\": \"Respirator\", \"data\": RespiratorStatus },\n            { \"item\": \"CVC\", \"data\": FoleyStatus },\n            { \"item\": \"NPO\", \"data\": NP0Status },\n            { \"item\": \"TPN\", \"data\": TPNStatus },\n            { \"item\": \"Abx\", \"data\": AntiStatus },\n            { \"item\": \"Xanth\", \"data\": [] },\n            { \"item\": \"照光\", \"data\": [] },\n            { \"item\": \"DNR\", \"data\": DrainStatus }\n        ]\n\n        const statuslist = StatusArray.map(function (info, index, arr) {\n            return (\n                <div key={index} className={statusspan(info)}>\n                    <t4 className={style_change(info)}>{wardstatestringformat(info)}</t4>\n                </div>\n            );\n        })\n        const source = this.props.source\n        return (\n            <div className={source ? \"warscardstatusgrid\" : \"wardinfouserstatusgrid\"}>\n                {statuslist}\n            </div >\n        );\n    }\n}\n\nexport default Wardcarstatus\n","import React, { useState, useEffect } from \"react\";\nimport { statecolor } from '../Function/Wardstate'\nimport Wardcarstatus from './Wardcardstatus'\nimport * as Wardstate from \"../Function/Wardstate\";\nimport * as ApiProvider from '../API/ApiProvider'\nimport './Wardcardvalue.scss'\nimport moment from 'moment';\nimport { Icon } from 'antd';\n\n\nexport function WardCard(props) {\n    const [CenterMonitorValue, SetCenterMonitorValue] = useState(null)\n    const [HID, SetHID] = useState(\"\")\n    const [Timer, SetTimer] = useState(0)\n    const [ChangeAN, SetChangeAN] = useState(false)\n    const [CenterNisValue, SetCenterNisValue] = useState(null)\n    const [TimerNIS, SetTimerNIS] = useState(0)\n\n    useEffect(() => {\n        const TimerID = setInterval(() => {\n            SetTimer(Timer + 1)\n        }, 5000)\n        return () => clearInterval(TimerID);\n    }, [Timer])\n\n    useEffect(() => {\n        const TimerNIS = setInterval(() => {\n            SetTimerNIS(TimerNIS + 1)\n        }, 1000 * 60 * 5)\n        return () => clearInterval(TimerNIS);\n    }, [TimerNIS])\n\n    useEffect(() => {\n        const hisid = props.PHISTNUM.toString().trim()\n        ApiProvider.getHisidwardvalue(hisid)\n            .then(data => {\n                const source = data.data\n                const HID = source.phistnum\n                SetCenterMonitorValue(source[0]);\n                SetHID(HID)\n            })\n            .catch(err => {\n                console.log(\"Andy test getHisidwardvalue NG \" + JSON.stringify(err));\n            });\n    }, [Timer]);\n\n\n    useEffect(() => {\n        if (CenterMonitorValue !== null && CenterMonitorValue !== undefined) {\n            const pd = InitCenterData(CenterMonitorValue.abpd)\n            const ps = InitCenterData(CenterMonitorValue.abps)\n            const pm = InitCenterData(CenterMonitorValue.abpm)\n\n            if (pd === \"--\" && ps === \"--\" && pm === \"--\") {\n                SetChangeAN(true)\n                const st = moment().subtract(5, 'm').format(\"YYYYMMDDHHmm\");\n                const et = moment().format(\"YYYYMMDDHHmm\");\n                const caseno = props.PCASENO\n\n                ApiProvider.getQDVS(caseno, st, et)\n                    .then(data => {\n                        let tempData = Wardstate.XM2JSON(data.data)\n                        tempData = tempData.map(data => {\n                            const tempTime = data.rec_dat + data.rec_tim\n                            return { \"time\": tempTime, \"diastolic\": data.diastolic, \"systolic\": data.systolic }\n                        })\n                        tempData = tempData.sort((a, b) => {\n                            const tempAtime = moment(a.time, \"YYYYMMDDHHmm\").valueOf()\n                            const tempBtime = moment(b.time, \"YYYYMMDDHHmm\").valueOf()\n                            return tempAtime < tempBtime ? 1 : -1\n                        })\n                        SetCenterNisValue(tempData[0])\n                    })\n                    .catch(err => {\n                        console.log(\"Andy test getHisidwardvalue NG \" + JSON.stringify(err));\n                    });\n            }\n        }\n    }, [TimerNIS]);\n\n    function decideABP() {\n        if (ChangeAN) {\n            return CenterNisValue !== null ? `${CenterNisValue.systolic}/${CenterNisValue.diastolic}`\n                :\n                <Icon type=\"loading\" />\n        }\n        return `${CenterMonitorValue.abps}/${CenterMonitorValue.abpd}(${CenterMonitorValue.abpm})`\n    }\n\n    function InitCenterData(value) {\n        if (value === undefined || value === null || value === \"\") {\n            return \"--\"\n        }\n        else return value\n    }\n    if (CenterMonitorValue === null || CenterMonitorValue === undefined) {\n        return null\n    }\n    return (\n        <div className='Wardcardvaluelayout'>\n            <div className='Wardcardvitalvalue'>\n                <div className='valueRows' style={{ marginRight: \"16px\" }}>\n                    <div >\n                        <t4 style={{ display: \"block\", color: statecolor('HR'), }}>HR</t4>\n                        <t2 className=\"bothWordValue\" style={{ color: statecolor('HR') }}>{InitCenterData(CenterMonitorValue.hr)}</t2>\n                    </div>\n                    <div >\n                        <t4 style={{ display: \"block\", color: statecolor('SpO2') }}>SpO<sub>2</sub></t4>\n                        <t2 className=\"bothWordValue\" style={{ color: statecolor('SpO2') }}>\n                            {InitCenterData(CenterMonitorValue.spo2)}\n                            <span style={{ fontWeight: \"400\", fontSize: \"12px\" }}>%</span>\n                        </t2>\n                    </div>\n                </div>\n                <div className='valueRows'>\n                    <div >\n                        <t4 style={{ display: \"block\", color: statecolor('BP') }}>{ChangeAN ? \"BP\" : \"ABP\"}</t4>\n                        <t2 className=\"bothWordValue\" style={{ color: statecolor('BP') }}>{decideABP()}</t2>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnsGap: \"5px\" }}>\n                        <div >\n                            <t4 style={{ display: \"block\", color: statecolor('RR') }}>RR</t4>\n                            <t2 className=\"bothWordValue\" style={{ color: statecolor('RR') }}>{InitCenterData(CenterMonitorValue.rr)}</t2>\n                        </div>\n                        <div >\n                            <t4 style={{ display: \"block\", color: statecolor('BT') }}>BT</t4>\n                            <t2 className=\"bothWordValue\" style={{ color: statecolor('BT') }}>\n                                {InitCenterData(CenterMonitorValue.bt)}\n                                <span style={{ fontWeight: \"400\", fontSize: \"12px\" }}>&deg;C</span>\n                            </t2>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Wardcarstatus source={true} PCASENO={props.PCASENO} PHISTNUM={props.PHISTNUM}></Wardcarstatus>\n        </div>\n    );\n}\n","function bednumberformat(number) {\n    if (number < 10) {\n        return '0' + number\n    }\n    return number\n}\n\nfunction gender(gender) {\n    if (gender === \"1\") {\n        return '男'\n    }\n    return '女'\n}\n\nfunction WardCardgender(gender) {\n    console.log(gender)\n    if (gender === \"M\") {\n        return '男'\n    }\n    return '女'\n}\n\nfunction pregancybirthdayweekday(pregancy, birthday) {\n    const pregancydays = (new Date(birthday).getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    const pregancyweeks = pregancydays / 7\n    const pregancyweeksdays = pregancydays % 7\n    return '[' + parseInt(pregancyweeks) + '+' + parseInt(pregancyweeksdays) + ']'\n}\n\nfunction pregancynowweek(pregancy) {\n    const pregancydays = (new Date().getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    console.log(pregancydays)\n    const pregancyweeks = pregancydays / 7\n    const pregancyweeksdays = pregancydays % 7\n    console.log(pregancyweeksdays)\n    return '[' + parseInt(pregancyweeks) + '+' + parseInt(pregancyweeksdays) + ']'\n}\n\nfunction pregancytoloaclweeks(pregancy) {\n    const pregancydays = (new Date().getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    console.log(pregancydays)\n    return parseInt(pregancydays / 7)\n}\n\nfunction pregancytolocaldays(pregancy) {\n    const pregancydays = (new Date().getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n\n    return parseInt(pregancydays % 7)\n}\n\nfunction pregancyweek(pregancy, birthday) {\n    const pregancydays = (new Date(birthday).getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    const pregancyweeks = pregancydays / 7\n    return parseInt(pregancyweeks)\n}\n\nfunction pregancydays(pregancy, birthday) {\n    const pregancydays = (new Date(birthday).getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    const pregancyweekdays = pregancydays % 7\n    return parseInt(pregancyweekdays)\n}\n\nfunction birthdayweeks(birthday) {\n    const birthdays = (new Date().getTime() - new Date(birthday).getTime()) / (24 * 60 * 60 * 1000)\n    return parseInt(birthdays / 7)\n}\n\nfunction pregancyweeksanddays(bornweeks, borndays, birthdays) {\n    if (bornweeks === null || bornweeks === undefined || bornweeks === \"\") {\n        return \"-- + --\"\n    }\n    if (borndays === null || borndays === undefined || borndays === \"\") {\n        return \"-- + --\"\n    }\n    if (birthdays === null || birthdays === undefined || birthdays === \"\") {\n        return \"-- + --\"\n    }\n    const localtoborndays = parseInt((new Date().getTime() - new Date(birthdays).getTime()) / (24 * 60 * 60 * 1000)) + parseInt(borndays) + 1\n    const localweeks = parseInt(localtoborndays / 7) + parseInt(bornweeks)\n    const localdays = parseInt(localtoborndays % 7)\n    return localweeks + \"+\" + localdays\n\n}\n\nfunction WeightFormat(BornWeight, Weight) {\n    return BornWeight + \"g -> \" + Weight + \"g\"\n\n}\nexport { bednumberformat, gender, pregancybirthdayweekday, pregancynowweek, pregancyweek, pregancydays, birthdayweeks, pregancytoloaclweeks, pregancytolocaldays, pregancyweeksanddays, WardCardgender, WeightFormat }\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n//Component\nimport * as Wardstate from '../../Function/Wardstate'\nimport * as Wardcardvalue from '../WardCardvalue-k'\nimport { bednumberformat, WardCardgender } from '../../Function/Wardbedfunction'\nimport './Wardcarddetail.scss'\n//image\nimport editlogo from '../../Image/svg/edit2.svg'\nimport fileLogo from '../../Image/svg/file1.svg'\nimport file2Logo from '../../Image/svg/file2.svg'\n//antdesign\nimport { Modal, InputNumber, Button } from 'antd';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment';\n\nvar BornChangeWeek = 0\nvar BornChangeDay = 0\nvar BornChangeWeight = 0\nclass Wardcarddetail extends Component {\n    state = {\n        hoverstate: \"none\",\n        clickstate: false,\n        mouse_hover: false,\n        edit_hover: false,\n        visible: false,\n        pbasignfo: null,\n        birthdayweight: \"N\",\n        weight: 0,\n        bornweek: 0,\n        bornday: 0,\n        nowweight: 0,\n        report: 0,\n        nonreport: 0,\n        remark: \"\",\n        TRANSINID: \"\",\n        TRANSINDT: \"\",\n        TRANSINTM: \"\",\n\n        modatstatus: true,\n        persionstatus: []\n    };\n\n    componentDidMount() {\n        const { data } = this.props\n        // console.log(data)\n        const HID = data.PHISTNUM\n        const date = moment(moment().valueOf() - 24 * 60 * 60 * 1000)\n        const TRID = data.TRANSINID\n        this.API_DATA(HID, date, TRID)\n    }\n\n    API_DATA(HID, date, TRID) {\n        // ApiProvider.getStoredProcedureRESSECT(HID, 1, \"ALL\", \"DOC3924B\")\n        //     .then(data => {\n        //         const ReportList = data.data\n        //         const mapList = ReportList.filter(function (value, index, array) {\n        //             const DTstring = value.ORRCPDT.toString()\n        //             const TMstring = value.ORRCPTM.toString()\n        //             const time = DTstring + TMstring\n        //             return moment(time, 'YYYY-MM-DDHH:mm:ss').valueOf() > date.valueOf()\n        //         })\n        //         this.setState({ report: mapList.length })\n        //     })\n        //     .catch(err => {\n        //         console.log(\"Andy test getStoredProcedureRESSECT NG \" + JSON.stringify(err));\n        //     });\n        ApiProvider.getStoredProcedureORDLIST(HID, date.format('YYYY-MM-DD'), \"ALL\", \"DOC3924B\")\n            .then(data => {\n                const filter = data.data.filter(function (info, index, arr) {\n                    const time = moment(info.ORBGNDT.toString().trim() + info.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n                    console.log(moment(time).format(\"YYYYMMDD HHmmss\"))\n                    console.log(moment(date.valueOf()).format(\"YYYYMMDD HHmmss\"))\n                    return info.ORSTATUS === \"31\" && time > date.valueOf() && time < date.valueOf() + (24 * 60 * 60 * 1000)\n                })\n                console.log(filter)\n                const Reportfilter = data.data.filter(function (info, index, arr) {\n                    const time = moment(info.ORBGNDT.toString().trim() + info.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n                    return info.ORSTATUS === \"64\" && time > date.valueOf() && time < date.valueOf() + (24 * 60 * 60 * 1000)\n                })\n                this.setState({ nonreport: filter.length, report: Reportfilter.length })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getOnePatientRemark(TRID)\n            .then(data => {\n                this.setState({\n                    remark: data.data[0].context\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getOnePatientRemark NG \" + JSON.stringify(err));\n            })\n        ApiProvider.getPersionalStatus(HID)\n            .then(data => { console.log(data.data); this.setState({ persionstatus: data.data }) })\n            .catch(err => { console.log(err) })\n    }\n\n    //Module show\n    handleOk(HID, name, sex) {\n        const week = Number(BornChangeWeek)\n        const day = Number(BornChangeDay)\n        const weight = parseFloat(Number(BornChangeWeight) / 1000).toFixed(3)\n        if (weight === undefined || weight === 0 || weight === null || week === 0 || day === 0 || week === undefined || week === null || day === null || day === undefined) {\n            this.setState({ modatstatus: false })\n        }\n        else if (Number(day) > 6) {\n            this.setState({ modatstatus: false })\n        }\n        else {\n            ApiProvider.createPatientInfo(HID, name, sex, weight, week, day)\n                .then(data => {\n                    console.log(data.data);\n                    ApiProvider.getPersionalStatus(HID)\n                        .then(data => { console.log(data.data); this.setState({ persionstatus: data.data, visible: false, modatstatus: true }) })\n                        .catch(err => { console.log(err) })\n                })\n                .catch(err => { console.log(err) })\n        }\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n            modatstatus: true\n        });\n    };\n    showModal = () => { this.setState({ visible: true }); };\n\n    Modelrender(personstatus) {\n        function typefrom(from) {\n            if (from === 'Custom') {\n                return true\n            }\n            return false\n        }\n        function BornWeekAndDay(BornWeeks, BornDays) {\n            if (BornWeeks === null || BornWeeks === undefined || BornWeeks === \"\") {\n                return []\n            }\n            return [BornWeeks, BornDays]\n        }\n        const { data } = this.props\n        const source = data\n        const HID = source.PHISTNUM.toString().trim()\n        const name = source.PNAMEC.toString().trim()\n        const sex = source.PSEX.toString().trim()\n        const Birthday = source.PBIRHDT\n        const BornWeight = personstatus.BornWeight\n        const BornWeeks = personstatus.BornWeeks\n        const BornWdays = personstatus.BornDays\n        const BornStatus = BornWeekAndDay(BornWeeks, BornWdays)\n        const viewstatus = this.state.modatstatus\n        const dataArray = [\n            { item: \"病床號碼:\", value: bednumberformat(parseInt(source.HBEDNO)) },\n            { item: \"病歷號碼:\", value: source.PHISTNUM.toString().trim() },\n            { item: \"出生週數:\", value: BornStatus },\n            { item: \"生日:\", value: moment(Birthday, 'YYYYMMDD').format('YYYY/MM/DD') },\n            { item: \"出生體重:\", value: BornWeight }\n        ]\n        const dataArrayRender = dataArray.map(function (info, index, arr) {\n            if (info.item === \"出生體重:\") {\n                return (\n                    <div key={index} >\n                        <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\", height: \"50px\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                                {info.item}\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                                <InputNumber defaultValue={info.value} onChange={(value) => { BornChangeWeight = value }}></InputNumber>\n                                <div style={{ margin: \"0px 5px\" }}>g</div>\n                            </div>\n                        </div>\n                        <div style={{ display: viewstatus ? \"none\" : \"block\", color: \"red\" }}>輸入錯誤</div>\n                    </div>\n                );\n            }\n            if (info.item === \"出生週數:\") {\n                return (\n                    <div key={index}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\", height: \"50px\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                                {info.item}\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                                <InputNumber defaultValue={info.value} onChange={(value) => { BornChangeWeek = value }}></InputNumber>\n                                <div style={{ margin: \"0px 5px\" }}>週</div>\n                                <InputNumber defaultValue={info.value} onChange={(value) => { BornChangeDay = value }}></InputNumber>\n                                <div style={{ margin: \"0px 5px\" }}>日</div>\n                            </div>\n                        </div>\n                        <div style={{ display: viewstatus ? \"none\" : \"block\", color: \"red\" }}>輸入錯誤</div>\n                    </div>\n                );\n            }\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\", height: \"50px\" }}>\n                    <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                        {info.item}\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                        {info.value}\n                    </div>\n                </div>\n            );\n        })\n        return (\n            <Modal\n                width={400}\n                title=\"填寫病床資訊\"\n                visible={this.state.visible}\n                onCancel={this.handleCancel}\n                footer={\n                    <div style={{ display: \"flex\", justifyContent: typefrom(source.type) ? 'space-between' : 'flex-end', alignItems: \"center\" }}>\n                        {/* <Button key=\"delete\" style={typefrom(source.type) ? { border: \"1px solid rgba(208,2,27,1)\", color: \"rgba(208,2,27,1)\" } : { display: \"none\" }} onClick={this.handleCancel}>清床</Button> */}\n                        <div>\n                            <Button key=\"cancel\" onClick={this.handleCancel}>取消</Button>\n                            <Button key=\"ok\" type=\"primary\" onClick={() => { this.handleOk(HID, name, sex) }}>儲存</Button>\n                        </div>\n                    </div>}>\n                {dataArrayRender}\n            </Modal>\n        );\n    }\n    render() {\n        function valueFormat(value) {\n            if (value === \"\" || value === null || value === undefined) {\n                return \"--\"\n            }\n            return value.toString()\n        }\n        function valueBornWeight(value) {\n            if (value === \"\" || value === null || value === undefined || value === 0) {\n                return \"\"\n            }\n            return value.toString() + \"g → \"\n        }\n        function statusPersion(persionstatus, QMNC, QTWER, Birthday) {\n            console.log(persionstatus)\n            // console.log(QMNC)\n            if (persionstatus.length === 0) {\n                console.log(QMNC)\n                // console.log(\"000\" + Number(QMNC.weeks))\n                if (QMNC.length === 0) {\n                    return {\n                        BornWeight: undefined,\n                        BornWeeks: undefined,\n                        BornDays: undefined\n                    }\n                }\n                const BornWeight = Wardstate.BornWeight(QTWER, Birthday)\n                const BornWeeks = Number(QMNC.weeks)\n                const BornDays = Number(QMNC.days)\n                return {\n                    BornWeight: BornWeight,\n                    BornWeeks: BornWeeks,\n                    BornDays: BornDays\n                }\n            }\n            else {\n                const Weight = Number(persionstatus[0].bweight) * 1000\n                const BornWeeks = Number(persionstatus[0].bweek)\n                const BornDays = Number(persionstatus[0].bday)\n                return {\n                    BornWeight: Weight,\n                    BornWeeks: BornWeeks,\n                    BornDays: BornDays\n                }\n            }\n        }\n        const { data, previewmode, hbedlist } = this.props\n        const { persionstatus } = this.state\n        const source = data\n        const Birthday = source.PBIRHDT\n        const QTWER = Wardstate.XM2JSON(source.QTWPER)\n        const QMNC = Wardstate.QMNCXM2JSON(source.QMNC)\n        const Weight = Wardstate.NewestWeight(QTWER)\n        const BornWeight = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornWeight\n        const BornWeeks = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornWeeks\n        const BornDays = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornDays\n        const remark = this.state.remark\n        if (source === undefined) { return null }\n        const status = {\n            date: moment(Birthday, \"YYYYMMDD\").valueOf(),\n            week: BornWeeks,\n            day: BornDays\n        }\n        const AgeStatus = Wardstate.CalculateAge(status)\n        const role = Number(sessionStorage.getItem('role'))\n\n        return (\n            <div>\n                <div className='wardcarddetailtitle'>\n                    <t3 style={{ color: \"rgba(0, 26, 109)\", fontSize: \"14px\", fontWeight: \"600\" }}>NI-{bednumberformat(Number(source.HBEDNO))}</t3>\n                    <t3 style={{ color: \"rgba(0, 26, 109)\", fontSize: \"16px\", fontWeight: \"600\" }}>{source.PNAMEC.toString().trim()}</t3>\n                    <t3 style={{ color: \"rgba(0, 26, 109)\", fontSize: \"14px\", fontWeight: \"600\" }}>{source.PHISTNUM}</t3>\n                    <t3 style={{ color: \"rgba(0, 26, 109, .7)\", fontSize: \"12px\" }}>{WardCardgender(source.PSEX)}</t3>\n                    <t3 style={{ color: \"rgba(0, 26, 109, .7)\", fontSize: \"12px\" }}>{moment(Birthday, 'YYYYMMDD').format('MM/DD')}生</t3>\n                    {role == 1 && <div onClick={this.showModal} className='wardcarddetileditbutton' style={{ cursor: \"pointer\" }}>\n                        <img src={editlogo} alt='editlogo'></img>\n                    </div>}\n                </div>\n                <div>\n                    <div className='wardinfoweeks'>\n                        <t3 style={{ color: \"rgba(0, 26, 109)\" }}>\n                            {valueFormat(BornWeeks)}+{valueFormat(BornDays)}&gt;<span style={{ fontWeight: \"900\" }}>{AgeStatus}</span>\n                        </t3>\n                        <t3 style={{ color: \"rgba(0, 26, 109)\" }}>\n                            {valueBornWeight(BornWeight)}<span style={{ fontWeight: \"900\" }}>{valueFormat(Weight)}g</span>\n                        </t3>\n                        <div className='wardinforeportgroup'>\n                            <img src={fileLogo} alt='fileLogo'></img>\n                            <div style={{ fontSize: \"12px\" }}>{this.state.report}</div>\n                            <img src={file2Logo} alt='file2Logo'></img>\n                            <div style={{ fontSize: \"12px\" }}>{this.state.nonreport}</div>\n                        </div>\n                    </div>\n                    <div style={{ display: previewmode ? \"block\" : \"none\", borderBottomWidth: \"0.5px\", borderBottomColor: \"rgba(215, 238, 255, 1)\", borderBottomStyle: \"solid\" }}>\n                        <Wardcardvalue.WardCard centerdata={source.centerMonitorData} previewmode={previewmode} PHISTNUM={source.PHISTNUM} PCASENO={source.PCASENO}></Wardcardvalue.WardCard>\n                    </div>\n                    <div style={{ height: '30px', display: 'grid', justifyContent: 'space-between', alignItems: 'center', padding: \"0px 10px\", position: 'relative', gridTemplateColumns: \"2fr 1fr\" }}>\n                        <div style={{ overflow: \"hidden\", fontSize: \"12px\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\" }}>{remark}</div>\n                        <Link className='patientviewbutton' to={{ pathname: \"/nicu/patient/\" + source.PHISTNUM.toString().trim(), state: { \"source\": hbedlist, \"HISID\": source.PHISTNUM, \"CASEID\": source.PCASENO, \"BEDNUMBER\": source.HBEDNO, \"TYPE\": true, \"TRANSINID\": this.state.TRANSINID } }}>\n                            <centerstyle>\n                                <div style={{ fontSize: \"12px\" }}>進入病人資料頁面</div>\n                            </centerstyle>\n                        </Link>\n                    </div>\n                </div>\n                {this.Modelrender(statusPersion(persionstatus, QMNC, QTWER, Birthday))}\n            </div>\n        );\n    }\n}\n\nexport default Wardcarddetail;\n","import React, { Component } from 'react';\nimport { format_bednumber } from '../../Commonfunction'\nimport editlogo from '../../Image/svg/edit2.svg'\nimport { Modal, Input, DatePicker } from 'antd';\nimport './UnpreviewWardCardDetail.scss'\nimport { bednumberformat } from '../../Function/Wardbedfunction'\n\nclass Unpreviewwardcarddetail extends Component {\n    state = { visible: false, powerLogin: 0 };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n            databool: false,\n            data: null\n        });\n    };\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n\n    handleOk(string) {\n\n        const bednumber = document.getElementById(\"bednumber\").value;\n        const hisnumber = document.getElementById(\"hisid\").value;\n        const birweek = document.getElementById(\"birweek\").value;\n        const birthday = string;\n        const weight = document.getElementById(\"weight\").value;\n        const statedata = {\n            \"BedNumber\": bednumber,\n            \"id\": hisnumber,\n            \"birweek\": birweek,\n            \"birthday\": birthday,\n            \"weight\": weight\n        }\n        this.setState({\n            visible: false,\n            data: statedata,\n            databool: false\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    // savestatus(string) {\n    // }\n\n    render() {\n        function modedisplay(mode) {\n            if (mode) {\n                return \"none\"\n            }\n            else {\n                return \"block\"\n            }\n        }\n        const number = this.props.bednumber\n        const { previewmode } = this.props\n        return (\n            <div style={{ height: '100%' }}>\n                <div style={{ height: '40px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', backgroundColor: \"rgba(215, 238, 255, 1)\", padding: \"9px 10px\" }}>\n                    <t3 style={{ color: \"rgba(61, 119, 181, 1)\" }}>NI-{format_bednumber(number)}</t3>\n                    <div className='wardcardeditbtn' onClick={this.showModal} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                        <img src={editlogo} alt='editlogo'></img>\n                    </div>\n                    <Modal\n                        width={270}\n                        title=\"填寫病床資訊\"\n                        visible={this.state.visible}\n                        onOk={() => this.handleOk(\"2019/12/12\")}\n                        onCancel={this.handleCancel}\n                    >\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr\", gridRowGap: \"10px\" }}>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>病床號碼:</t2>\n                                </centerstyle>\n                                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                    <div>{bednumberformat(number)}</div>\n                                </div>\n                            </div>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>病歷號碼:</t2>\n                                </centerstyle>\n                                <Input id=\"hisid_wardcard\" />\n                            </div>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>出生週數:</t2>\n                                </centerstyle>\n                                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                    <Input id='week' placeholder=\"20\" style={{ marginRight: \"5px\" }}></Input>\n                                    <t2 style={{ marginRight: \"5px\" }}>週</t2>\n                                    <Input id='days' placeholder=\"20\" style={{ marginRight: \"5px\" }}></Input>\n                                    <t2>日</t2>\n                                </div>\n                            </div>\n                            <div className='modulecontent'>\n                                <div style={{ display: 'flex', justifyContent: \"space-between\", alignItems: \"cneter\", width: \"69px\" }}>\n                                    <t2>生</t2>\n                                    <t2>日:</t2>\n                                </div>\n                                <DatePicker getCalendarContainer={triggerNode => triggerNode.parentNode} placeholder=\"選擇日期\" id=\"birthday\" />\n                            </div>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>出生體重:</t2>\n                                </centerstyle>\n                                <div style={{ display: 'flex' }}><Input placeholder=\"120\" id=\"weight\" />&nbsp;g</div>\n                            </div>\n                        </div>\n                    </Modal>\n                </div>\n                <div style={{ height: 'calc(100% - 40px)',display: 'flex', justifyContent: 'center', alignItems: 'center', padding: \"10px\" }}>\n                    <div style={{ fontSize: '28px', color: \"rgba(0,0,0,0.1)\" }}>\n                        空床\n                    </div>\n                </div>\n                {/* <div style={{ display: modedisplay(previewmode) }}>\n                    <div style={{ height: '30px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: \"10px\" }}></div>\n                </div> */}\n            </div>\n        );\n    }\n}\n\nexport default Unpreviewwardcarddetail;\n","\nconst Month_format = (time) => {\n    switch (time) {\n        case 0:\n            return \"1\";\n        case 1:\n            return \"2\";\n        case 2:\n            return \"3\";\n        case 3:\n            return \"4\";\n        case 4:\n            return \"5\";\n        case 5:\n            return \"6\";\n        case 6:\n            return \"7\";\n        case 7:\n            return \"8\";\n        case 8:\n            return \"9\";\n        case 9:\n            return \"10\";\n        case 10:\n            return \"11\";\n        case 11:\n            return \"12\";\n        default:\n            return null;\n    }\n};\nconst format_bednumber = (number) => {\n    if (number < 10) {\n        return \"0\" + number;\n    }\n    return number;\n}\n\nexport { Month_format, format_bednumber }\n","import React, { Component } from 'react';\nimport { Input, Button } from 'antd';\nimport editlogo from '../Image/svg/Edit.svg'\nimport './Wardnote.scss'\nimport deleteimg from '../Image/svg/delete.svg'\nimport detail from '../Image/svg/details.svg'\nimport { Tooltip } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider';\nimport moment from 'moment'\n\nclass WardcardNote extends Component {\n    _isMounted = false;\n    state = {\n        editstate: false,\n        AnnoceRawData: [],\n        AnnoceDisplayData: [],\n        inputContent: undefined,\n        powerLogin: 0\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n    componentDidMount() {\n        this.onInputChange = this.onInputChange.bind(this);\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.queryAllAnnounce();\n    }\n    queryAllAnnounce() {\n        ApiProvider.getAllAnnounce()\n            .then(result => {\n                console.log(\"getAllAnnounce OK \" + JSON.stringify(result));\n                this.setState({\n                    AnnoceRawData: result.data,\n                    AnnoceDisplayData: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getAllAnnounce NG \" + JSON.stringify(err));\n            });\n    }\n    canceledit() {\n        //取消前先拿取server資料\n        this._isMounted = true\n        this.setState({\n            inputContent: undefined,\n            editstate: false,\n            AnnoceDisplayData: JSON.parse(JSON.stringify(this.state.AnnoceRawData))\n        });\n    }\n\n    okeditlist() {\n        //確定上傳\n        this.setState({\n            editstate: false\n        });\n        ApiProvider.createAnnounce(this.state.AnnoceDisplayData)\n            .then(result => {\n                console.log(\"createAnnounce OK \" + JSON.stringify(result));\n                this.queryAllAnnounce();\n            })\n            .catch(err => {\n                console.log(\"createAnnounce NG \" + JSON.stringify(err));\n            });\n    }\n\n    editlist() {\n        this.setState({\n            editstate: !this.state.editstate,\n            AnnoceDisplayData: (this.state.editstate) ? JSON.parse(JSON.stringify(this.state.AnnoceDisplayData)) : JSON.parse(JSON.stringify(this.state.AnnoceRawData))\n        });\n    }\n\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n\n    AddNewannouce() {\n        const announce = this.state.AnnoceDisplayData;\n\n        const doc = sessionStorage.getItem('user')\n        const newAnnounce = {\n            context: this.state.inputContent,\n            time: +(new Date()),\n            editor: doc + \"醫生\",\n            transinno: doc + moment().format(\"YYYYMMDDHHmmss\").toString()\n        }\n        announce.push(newAnnounce)\n        this.setState({\n            AnnoceDisplayData: announce,\n            inputContent: undefined\n        });\n    }\n\n    ondeleteannounce(element) {\n        const announce = this.state.AnnoceDisplayData;\n        const index = announce.findIndex(item => item === element);\n        announce.splice(index, 1);\n        this.setState({ AnnoceDisplayData: announce });\n    }\n    announcelist(announcelist, status) {\n        var list = []\n        if (announcelist === null || announcelist.length === 0) {\n            list.push(\n                <div className='announcelistcontext'>無公告</div>\n            )\n        }\n        for (let index = 0; index < announcelist.length; index++) {\n            const element = announcelist[index];\n            list.push(\n                <div className='announcelistcontext'>\n                    <t2>{index + 1}.{element.context}</t2>\n                    {this.editstatus(element, status)}\n                </div>\n            )\n        }\n        return list\n    }\n    editstatus(element, status) {\n        const time = moment(element.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n        const localTime = moment.utc(time).toDate()\n        const string = element.editor + '醫師於' + moment(localTime).format(\"MM/DD HH:mm\") + '更新'\n        if (status) {\n            return (\n                <img src={deleteimg} alt='deletelogo' onClick={() => this.ondeleteannounce(element)}></img>\n            );\n        }\n        return (\n            <Tooltip placement=\"top\" title={string}>\n                <img src={detail} alt='detaillogo'></img>\n            </Tooltip>\n        );\n    }\n    render() {\n\n        function changehight(state) {\n            if (!state) {\n                return 'wardnotecontextdisedit'\n            }\n            else {\n                return 'wardnotecontextonedit'\n\n            }\n        }\n        let annData = this.state.AnnoceDisplayData\n\n        annData = annData.sort((a, b) => {\n            let tempTimeA = moment(a.time, \"YYYY-MM-DD[T]HH:mm:ss\").valueOf()\n            let tempTimeB = moment(b.time, \"YYYY-MM-DD[T]HH:mm:ss\").valueOf()\n            return tempTimeA < tempTimeB ? 1 : -1\n        })\n\n        return (\n            <div>\n                <div className='wardnotetitle'>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>病房公告</t2>\n                    <div onMouseUp={() => this.editlist()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", width: \"18px\", cursor: \"pointer\" }}>\n                        <img src={editlogo} alt='editlogo'></img>\n                    </div>\n                </div>\n                <div>\n                    <div className={changehight(this.state.editstate)}>\n                        {this.announcelist(annData, this.state.editstate)}\n                    </div>\n                    <div style={{ display: this.state.editstate ? \"block\" : \"none\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"c\" }}>\n                        <div style={{ height: \"50px\", backgroundColor: \"rgba(238,238,238,1)\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                            <Input placeholder=\"新增公告內容\" style={{ marginLeft: \"16px\", width: \"315px\" }} value={this.state.inputContent} onChange={this.onInputChange} />\n                            <Button type=\"primary\" style={{ marginRight: \"16px\" }} onClick={() => this.AddNewannouce()}>\n                                新增\n                            </Button>\n                        </div>\n                        <div style={{ height: \"50px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <Button style={{ margin: \"10px\", width: \"90px\" }} onClick={() => this.canceledit()}>取消</Button>\n                            <Button type=\"primary\" style={{ margin: \"10px\", width: \"90px\" }} onClick={() => this.okeditlist()}>儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WardcardNote;\n","import React, { Component } from 'react';\nimport { Month_format } from '../Commonfunction'\n\nclass Bedinformation extends Component {\n    state = {\n        tableselect: false\n    }\n\n    SelectTruechange() {\n        this.setState({\n            tableselect: true\n        })\n    }\n\n    SelectFalsechange() {\n        this.setState({\n            tableselect: false\n        })\n    }\n\n    sendReturnSelect = (id) => {\n        const { selectkey, idkey, localtime } = this.props\n        const select = this.Selectswitch(idkey, selectkey)\n        if (select) {\n            const data = { \"idkey\": null, \"time\": localtime }\n            this.props.parentCallback(data);\n        }\n        else {\n            this.props.parentCallback(id);\n        }\n    }\n\n    Selectswitch(id, select) {\n        if (id === select) {\n            return true\n        }\n        else return false\n    }\n    render() {\n        function weekdatformat(weekday) {\n            switch (weekday) {\n                case 0:\n                    return \"日\"\n                case 1:\n                    return \"一\"\n                case 2:\n                    return \"二\"\n                case 3:\n                    return \"三\"\n                case 4:\n                    return \"四\"\n                case 5:\n                    return \"五\"\n                case 6:\n                    return \"六\"\n                default:\n                    return null\n            }\n        }\n        const { selectkey, idkey, localtime, data } = this.props\n        const day = Month_format(new Date(localtime).getMonth()) + \"/\" + new Date(localtime).getDate()\n        const weekday = new Date(localtime).getDay()\n        const Unselect_tablestyle = { height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"1px solid rgba(238,238,238,1)\", borderLeftWidth: \"0px\" }\n        const select = this.Selectswitch(idkey, selectkey)\n        if (data === null) {\n            return (\n                <div>\n                    <div style={select ? { border: \"1px solid rgba(59, 151, 225, 1)\", backgroundColor: \"#ffe1c499\", marginTop: '-2px' } : { cursor: \"pointer\" }} onMouseUp={() => this.sendReturnSelect({ \"idkey\": idkey, \"time\": localtime })}>\n                        <div style={Unselect_tablestyle}>\n                            <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                <t2 style={{ textAlign: \"center\" }}>{day}</t2>\n                                <t2 style={{ textAlign: \"center\" }}>{weekdatformat(weekday)}</t2>\n                            </div>\n                        </div>\n                        <div style={Unselect_tablestyle}>\n                            <t2 style={{ textAlign: \"center\" }}>0(12)</t2>\n                        </div>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                    </div>\n                    <div style={{ display: select ? \"flex\" : \"none\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ width: 0, height: 0, borderStyle: \"solid\", borderWidth: \"17.3px 10px 0 10px\", borderColor: \"#ffbe59 transparent transparent transparent\" }}></div>\n                    </div>\n                </div>\n            );\n\n        }\n        return (\n            <div>\n                <div style={select ? { border: \"1px solid rgba(59, 151, 225, 1)\", backgroundColor: \"#ffe1c499\", marginTop: '-2px' } : { cursor: \"pointer\" }} onMouseUp={() => this.sendReturnSelect({ \"idkey\": idkey, \"time\": localtime })}>\n                    <div style={Unselect_tablestyle}>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                            <t2 style={{ textAlign: \"center\" }}>{day}</t2>\n                            <t2 style={{ textAlign: \"center\" }}>{weekdatformat(weekday)}</t2>\n                        </div>\n                    </div>\n                    <div style={Unselect_tablestyle}>\n                        <t2 style={{ textAlign: \"center\" }}>{data.hbedcount}({parseInt(parseInt(data.hbedcount) * 100 / 12)}%)</t2>\n                    </div>\n                    <t2 style={Unselect_tablestyle}>{data.transoutcount}</t2>\n                    <t2 style={Unselect_tablestyle}>{data.transincount}</t2>\n                    <t2 style={Unselect_tablestyle}>{data.rtcount}</t2>\n                    <t2 style={Unselect_tablestyle}>{data.nonrtcount}</t2>\n                    <t2 style={Unselect_tablestyle}>{data.tpncount}</t2>\n                </div>\n                <div style={{ display: select ? \"flex\" : \"none\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <div style={{ width: 0, height: 0, borderStyle: \"solid\", borderWidth: \"17.3px 10px 0 10px\", borderColor: \"rgba(255,190,5,1) transparent transparent transparent\" }}></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Bedinformation\n","import moment from 'moment';\n\nfunction HISAPI_stringtodate(datestring) {\n    function addzero(value) {\n        if (value < 10) {\n            return \"0\" + value\n        }\n        return value\n    }\n    const datenumber = Number(datestring)\n    const dateformat = parseInt(datenumber / 10000) + '-' + parseInt(parseInt(datenumber / 100) % 100) + '-' + addzero(parseInt(datenumber % 100))\n    return dateformat\n}\n\nfunction yyyymmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + \"/\" + Monthformat(new Date(timestamp).getMonth()) + \"/\" + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction yyyymmddstring(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + Monthformat(new Date(timestamp).getMonth()) + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction yyyymmfirstweeksate(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    return new Date(timestamp).getFullYear() + \"/\" + Monthformat(new Date(timestamp).getMonth()) + \"/1\"\n}\n\n\n\nfunction mmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return Monthformat(new Date(timestamp).getMonth()) + '/' + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction weekdateformat(timestamp) {\n    const param = new Date(timestamp).getDay()\n    const weekarray = ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六']\n    return weekarray[param]\n}\n\nfunction weekdateformatcalender(timestamp) {\n    const param = new Date(timestamp).getDay()\n    const weekarray = ['日', '一', '二', '三', '四', '五', '六']\n    return weekarray[param]\n}\n\nfunction hhmmssformat(timestamp) {\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return addZero(new Date(timestamp).getHours()) + ':' + addZero(new Date(timestamp).getMinutes())\n}\n\nfunction hhmmssformattohalf(timestamp) {\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return addZero(new Date(timestamp).getHours()) + ':30:00'\n}\n\n\nfunction yyyymmddHHmmfromat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return new Date(timestamp).getFullYear().toString() + Monthformat(new Date(timestamp).getMonth()).toString() + Dateformat(new Date(timestamp).getDate()).toString() + addZero(new Date(timestamp).getHours()).toString() + addZero(new Date(timestamp).getMinutes()).toString()\n}\n\nfunction MMDDhhmmfromat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return Monthformat(new Date(timestamp).getMonth()) + '/' + Dateformat(new Date(timestamp).getDate()) + ' ' + addZero(new Date(timestamp).getHours()) + ':' + addZero(new Date(timestamp).getMinutes())\n}\n\n\nfunction daysdiff(newtime, oldtime) {\n    const timestampdiff = new Date(newtime).getTime() - new Date(oldtime).getTime()\n    const dissdays = timestampdiff / (24 * 60 * 60 * 1000)\n    return parseInt(dissdays)\n}\n\n\nfunction disabledDate(current) {\n    // Can not select days before today and today\n    return current && current < moment().endOf('day');\n}\n\nfunction compareday(date) {\n    if (new Date(date).getTime() > new Date().getTime()) {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunction formatxArrayhalf(time, interval) {\n    var xAxisarray = []\n    if (interval === 24) {\n        for (let index = 0; index < 144; index++) {\n            xAxisarray.push(time + (index * 10 * 60 * 1000))\n        }\n    }\n    if (interval === 18) {\n        for (let index = 0; index < 18; index++) {\n            xAxisarray.push(time + (60 * 60 * 1000 * 2) + (index * 60 * 60 * 1000 * 4))\n        }\n    }\n\n    if (interval === 21) {\n        for (let index = 0; index < 21; index++) {\n            xAxisarray.push(time + (60 * 60 * 1000 * 4) + (index * 60 * 60 * 1000 * 8))\n        }\n    }\n    if (interval === 14) {\n        for (let index = 0; index < 14; index++) {\n            xAxisarray.push(time + (60 * 60 * 1000 * 12) + (index * 60 * 60 * 1000 * 24))\n        }\n    }\n    return xAxisarray\n}\n\n\nfunction formatendtime(time) {\n    const endtime = new Date(yyyymmddformat(time)).getTime() + (31 * 60 * 60 * 1000)\n    return endtime\n}\n\nfunction formatintervaldays(days, interval) {\n    //false:一天 true:三天\n    if (interval === 1) {\n        return days - (24 * 60 * 60 * 1000) * 1\n\n    }\n    if (interval === 3) {\n        return days - (24 * 60 * 60 * 1000) * 3\n\n    }\n    else {\n        return null\n    }\n}\n\nfunction datestringformat(datestring) {\n    function addzero(value) {\n        if (value < 10) {\n            return \"0\" + value\n        }\n        return value\n    }\n    const datenumber = Number(datestring)\n    const dateformat = parseInt(datenumber / 10000) + '/' + parseInt(parseInt(datenumber / 100) % 100) + '/' + addzero(parseInt(datenumber % 100))\n    return dateformat\n}\n\nfunction apiyyyymmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + \"-\" + Monthformat(new Date(timestamp).getMonth()) + \"-\" + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction nisapiyyyymmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + Monthformat(new Date(timestamp).getMonth()) + Dateformat(new Date(timestamp).getDate())\n}\nexport {\n    yyyymmddformat,\n    weekdateformat,\n    hhmmssformat,\n    mmddformat,\n    MMDDhhmmfromat,\n    daysdiff,\n    disabledDate,\n    compareday,\n    weekdateformatcalender,\n    yyyymmfirstweeksate,\n    hhmmssformattohalf,\n    formatxArrayhalf,\n    formatendtime,\n    formatintervaldays,\n    datestringformat,\n    yyyymmddHHmmfromat,\n    yyyymmddstring,\n    apiyyyymmddformat,\n    nisapiyyyymmddformat,\n    HISAPI_stringtodate\n}\n","import React, { Component } from 'react';\nimport Labviewitem from './Labviewitem'\n// import { labdata } from '../../Data/Wardviewdata'\nimport * as FiliterReg from '../../Function/FiliterReg'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport moment from 'moment'\nimport * as ApiGithub from '../../API/ApiGithub'\n\nvar MG_VALUE, PROC_VALUE, CA_VALUE;\nclass Labviewlayout extends Component {\n    state = {\n        parser: [{ \"apply_condition\": { \"name\": \"\" }, \"mappings\": [] }],\n        dummy_mg: 0,\n        dummy_pct: 0,\n        dummy_ca: 0,\n\n        RESDGLU1: [],\n        RESLAB02: [],\n        RESLAB01: [],\n        RESDBGAS: [],\n        RESLAB0C: [],\n        RESSECT: [],\n\n        prePickerDate: null,\n        preHID: null,\n        preTRDT: null\n    }\n    componentDidMount() {\n        ApiGithub.getGitHubJson(\"Labview.json\")\n            .then(result => {\n                console.log(\"getGitHubJson Labview.json OK \" + JSON.stringify(result.data));\n                this.setState({\n                    parser: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getGitHubJson Labview.json NG \" + JSON.stringify(err));\n            })\n        const { PickerDate, caseinfo } = this.props\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        this.setState({ prePickerDate: PickerDate, preHID: caseinfo.HISID, preTRDT: TRDT })\n        this.getLabData(PickerDate, caseinfo.HISID, TRDT)\n    }\n\n    componentDidUpdate() {\n        const { PickerDate, caseinfo } = this.props\n        const { prePickerDate, preHID, preTRDT } = this.state\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        if (prePickerDate !== PickerDate || preHID !== caseinfo.HISID || preTRDT !== TRDT) {\n            this.setState({ prePickerDate: PickerDate, preHID: caseinfo.HISID, preTRDT: TRDT })\n            this.getLabData(PickerDate, caseinfo.HISID, TRDT)\n        }\n    }\n    getLabData(PickerDate, HID, TRDT) {\n        function selectMonthInterval(PickerDate) {\n            const timestampInterval = new Date().getTime() - PickerDate\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        const TransinDate = moment(TRDT).format(\"YYYY-MM-DD\")\n        const MonthInterval = selectMonthInterval(PickerDate)\n        ApiProvider.getStoredProcedureRESDGLU1(HID, TransinDate)\n            .then(data => { this.setState({ RESDGLU1: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESDGLU1 NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESLAB02(HID, TransinDate)\n            .then(data => { this.setState({ RESLAB02: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESLAB02 NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESLAB01(HID, TransinDate)\n            .then(data => { this.setState({ RESLAB01: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESLAB01 NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESDBGAS(HID, TransinDate)\n            .then(data => { this.setState({ RESDBGAS: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESDBGAS NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESLAB0C(HID, TransinDate)\n            .then(data => { this.setState({ RESLAB0C: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESLAB0C NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESSECT(HID, MonthInterval, \"ALL\", \"DOC3924B\")\n            .then(data => { this.setState({ RESSECT: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESSECT NG \" + JSON.stringify(err)) });\n    }\n    findLastestTargetValue(arr, target) {\n        const { caseinfo } = this.props\n        const { parser } = this.state\n        let latestTimestamp = 0;\n        let latestvalue = undefined;\n        const selected_parser = parser.find(item => item.apply_condition.name.match(target) !== null);\n        const arrayLength = arr.length;\n        arr.forEach((item, index) => {\n            ApiProvider.getStoredProcedureRESDISP(caseinfo.HISID, item.ORMM, caseinfo.CASEID, item.ORDSEQNO)\n                .then(data => {\n                    console.log(\"getStoredProcedureRESDISP OK \" + JSON.stringify(data.data));\n                    const RESDISP = data.data\n\n                    //search for target\n                    const selected_mapping = selected_parser.mappings.find(mapping => mapping.key === target)\n                    const re = new RegExp(selected_mapping.regex_str, selected_mapping.regex_flags)\n\n                    RESDISP.forEach(element => {\n                        const match = element.CONTENT.match(re)\n                        if (match !== null) {\n                            const currentTimeStr = item.ORRCPDT + \"-\" + item.ORRCPTM\n                            const currentItemTimestamp = moment(currentTimeStr.trim(), \"YYYY-MM-DD-HH.mm.ss\").valueOf()\n                            const matchValue = match[selected_mapping.position]\n\n                            if (matchValue !== \"\" && matchValue !== undefined && matchValue !== null && currentItemTimestamp > latestTimestamp) {\n                                latestvalue = matchValue\n                                if (target === \"mg\") {\n                                    MG_VALUE = latestvalue\n                                } else if (target === \"pct\") {\n                                    PROC_VALUE = latestvalue\n                                } else if (target === \"ca\") {\n                                    CA_VALUE = latestvalue\n                                }\n                            }\n                        }\n                    })\n                    this.updateLabviewIfNeed(arrayLength, index, target)\n                })\n                .catch(err => {\n                    console.log(\"getStoredProcedureRESDISP NG \" + JSON.stringify(err));\n                    this.updateLabviewIfNeed(arrayLength, index, target)\n                });\n        })\n    }\n    updateLabviewIfNeed(arrayLength, currentIdx, target) {\n        const retryMax = 3\n        if (currentIdx === arrayLength - 1) {\n            if (target === \"mg\" && this.state.dummy_mg < retryMax) {\n                this.setState({ dummy_mg: this.state.dummy_mg + 1 })\n            } else if (target === \"pct\" && this.state.dummy_pct < retryMax) {\n                this.setState({ dummy_pct: this.state.dummy_pct + 1 })\n            } else if (target === \"ca++\" && this.state.dummy_ca < retryMax) {\n                this.setState({ dummy_ca: this.state.dummy_ca + 1 })\n            }\n        }\n    }\n    TitleRender() {\n        const { Source } = this.props\n        if (Source === \"Wardview\") {\n            return null\n        }\n        else return (\n            <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                <t1 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>最近實驗室數據</t1>\n            </div>\n        );\n    }\n    render() {\n        function ListEndData(array) {\n            if (array.length === 0) {\n                return \"--\"\n            }\n            return array[array.length - 1]\n        }\n        // const data = labdata.data\n        const { PickerDate, Source } = this.props\n        const { RESDGLU1, RESLAB02, RESLAB01, RESDBGAS, RESSECT } = this.state\n\n        const RESDGLU1LIST = FiliterReg.ListForTime(RESDGLU1, PickerDate)\n        const RESLAB02LIST = FiliterReg.ListForTime(RESLAB02, PickerDate)\n        const RESLAB01LIST = FiliterReg.ListForTime(RESLAB01, PickerDate)\n        const RESDBGASLIST = FiliterReg.ListForTime(RESDBGAS, PickerDate)\n        // const RESLAB0CLIST = FiliterReg.ListForTime(RESLAB0C, PickerDate)\n\n        const RESSECT_CA_LIST = FiliterReg.ListForTimeAndTarget(RESSECT, PickerDate, \"Ca\")\n        this.findLastestTargetValue(RESSECT_CA_LIST, \"ca\")\n\n        const RESSECT_MG_LIST = FiliterReg.ListForTimeAndTarget(RESSECT, PickerDate, \"Mg\")\n        this.findLastestTargetValue(RESSECT_MG_LIST, \"mg\")\n\n        const RESSECT_PROC_LIST = FiliterReg.ListForTimeAndTarget(RESSECT, PickerDate, \"Procalcitonin\")\n        this.findLastestTargetValue(RESSECT_PROC_LIST, \"pct\")\n\n        const GLUFAST = ListEndData(RESDGLU1LIST.filter(function (value, index, array) {\n            return value.GLUFAST !== null\n        }))\n        const WBC = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV01 !== null\n        }))\n        const SEG = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV14 !== null\n        }))\n        const LYMP = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV15 !== null\n        }))\n        const HGB = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV03 !== null\n        }))\n        const PLATELET = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV09 !== null\n        }))\n        const NA = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV13 !== null\n        }))\n        const K = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV14 !== null\n        }))\n        const CA = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV15 !== null\n        }))\n        const P = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV17 !== null\n        }))\n        const ALB = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV02 !== null\n        }))\n        const CRP = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV30 !== null\n        }))\n        const PH = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS07 !== null\n        }))\n        const PCO2 = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS06 !== null\n        }))\n        const BE = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS01 !== null\n        }))\n        const PO2 = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS08 !== null\n        }))\n        const BUN = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV05 !== null\n        }))\n        //02\n        const CR = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV06 !== null\n        }))\n        const ALT = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV11 !== null\n        }))\n        const AST = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV12 !== null\n        }))\n        const TBIL = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV08 !== null\n        }))\n        const DBIL = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV25 !== null\n        }))\n        const ALKP = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV09 !== null\n        }))\n        const TOTALCA = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV03 !== null\n        }))\n        const IRON = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV26 !== null\n        }))\n        const TIBC = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV27 !== null\n        }))\n        const FERRITIN = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV03 !== null\n        }))\n        const FeSat = feSatformat(IRON, TIBC)\n        function feSatformat(IRON, TIBC) {\n            console.log(IRON)\n            if (IRON === null || IRON.RSV26 === null || IRON.RSV26 === undefined || Number(IRON.RSV26) === 0) {\n                return null\n            }\n            if (TIBC === null || TIBC.RSV27 === null || TIBC.RSV27 === undefined || Number(TIBC.RSV27) === 0) {\n                return null\n            }\n            return parseFloat(Number(IRON.RSV26) / Number(TIBC.RSV27)).toFixed(1)\n        }\n        function areainterval(source) {\n            if (source === \"Wardview\") {\n                return \"0px\"\n            }\n            else return \"10px\"\n        }\n\n        function nullvalue(value) {\n            if (value === undefined || value === null || value === NaN) {\n                return null\n            }\n            return value.toString().trim()\n        }\n        const TitleR = this.TitleRender()\n        return (\n            <div >\n                {TitleR}\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", gridColumnGap: areainterval(Source) }}>\n                    <div style={{ border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(GLUFAST.GLUFAST)} title={\"Glucose\"} time={(GLUFAST)}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(WBC.RSV01)} title={\"WBC\"} time={WBC}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(SEG.RSV14)} title={\"Seg\"} time={SEG}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(LYMP.RSV15)} title={\"Lymp\"} time={LYMP}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(HGB.RSV03)} title={\"Hgb\"} time={HGB}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PLATELET.RSV09)} title={\"Platelet\"} time={PLATELET}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"5fr 1fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(NA.RSV13)} title={\"Na\"} time={NA}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(K.RSV14)} title={\"K\"} time={K}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(CA_VALUE)} title={\"Ca\"} time={CA}></Labviewitem> {/*parse*/}\n                        <Labviewitem Source={Source} value={nullvalue(P.RSV17)} title={\"P\"} time={P}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(MG_VALUE)} title={\"Mg\"} time={null}></Labviewitem> {/*parse*/}\n                    </div>\n                    <div style={{ border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(ALB.RSV02)} title={\"ALB\"} time={ALB}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 4fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(CRP.RSV32)} title={\"CRP\"} time={CRP}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PROC_VALUE)} title={\"PCT\"} time={null}></Labviewitem>  {/*parse*/}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(PH.SS07)} title={\"pH\"} time={PH}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PCO2.SS06)} title={\"PCO\"} time={PCO2}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(BE.SS01)} title={\"BE\"} time={BE}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PO2.SS08)} title={\"PO\"} time={PO2}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 2fr 2fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(BUN.RSV05)} title={\"BUN\"} time={BUN}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(CR.RSV06)} title={\"Cr\"} time={CR}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(ALT.RSV11)} title={\"ALT\"} time={ALT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(AST.RSV12)} title={\"AST\"} time={AST}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(TBIL.RSV08)} title={\"TBil\"} time={TBIL}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(DBIL.RSV25)} title={\"DBil\"} time={DBIL}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 4fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(ALKP.RSV09)} title={\"ALK-P\"} time={ALKP}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(TOTALCA.RSV03)} title={\"Total Ca\"} time={TOTALCA}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(IRON.RSV26)} title={\"Iron\"} time={IRON}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(TIBC.RSV27)} title={\"TIBC\"} time={TIBC}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(FeSat * 100)} title={\"FeSat\"} time={null}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(FERRITIN.RSV03)} title={\"Ferritin\"} time={FERRITIN}></Labviewitem> {/* No Data */}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Labviewlayout\n","import React, { Component } from 'react';\nimport Bedinformation from './Bedinfo'\nimport { DatePicker, Button } from 'antd';\nimport moment from 'moment';\nimport * as apiProvide from '../API/ApiProvider'\nimport { yyyymmddformat } from '../Function/Timeformat'\nimport './WardBedinformation.scss'\n\nclass Wardbedinformation extends Component {\n    state = {\n        subselectdate: null,\n        selectid: null,\n        PickerDate: moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf(),\n        bedinfo: []\n    }\n    componentDidMount() {\n        this.apiData(this.state.PickerDate)\n    }\n    apiData(PickerDate) {\n        apiProvide.getWardDebInfo(moment(PickerDate).format(\"YYYY-MM-DD\"))\n            .then(data => {\n                this.setState({ bedinfo: data.data })\n            })\n            .catch(err => { console.log(err) })\n    }\n    onChangeDate = (date, datestring) => {\n        this.setState({\n            PickerDate: date.valueOf(),\n            selectid: null\n        }, () => { this.apiData(this.state.PickerDate) })\n    }\n    callbackFunction = (idnumber) => {\n        this.setState({\n            selectid: idnumber.idkey,\n            subselectdate: idnumber.time\n        })\n    }\n    transferListlayout(trans) {\n        const RenderCell = trans.map(function (element, index, arr) {\n            return (\n                <div className='wardbedinfoitemcontextgridRow'>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>{element.caseid}</t2>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>{element.pnamec}</t2>\n                </div>\n            );\n        })\n        return (\n            <div>\n                <div className='wardbedinfoitemcontextgridRow'>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>病歷號碼</t2>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>姓名</t2>\n                </div>\n                {RenderCell}\n            </div>\n        );\n    }\n    infoitem() {\n        const selectDateitem = this.state.subselectdate\n        const bedinfo = this.state.bedinfo\n        const filterdate = bedinfo.filter(function (info, index) {\n            const tempDate = moment(info.Date, 'YYYYMMDD')\n            return yyyymmddformat(tempDate) === yyyymmddformat(selectDateitem)\n        })\n\n        if (this.state.selectid === null) {\n            return null\n        }\n        else {\n            const inType = filterdate.length === 0\n            const outType = filterdate.length === 0\n\n            const transIn = filterdate.length === 0 ? 0 : filterdate[0].transoutIncountperson\n            const transOut = filterdate.length === 0 ? 0 : filterdate[0].transoutOutcountperson\n\n            return (\n                <div>\n                    <div className='wardbedinfoitemcontext'>\n                        <div className='wardbedinfoitemcontextgrid'>\n                            <div>\n                                <t2 className='wardbedinfoitemcontexttitle'>轉入病人清單</t2>\n                                <div className='wardbedinfoitemcontextgridlayout'>\n                                    {inType ? <div className='nopatient'>無病人</div> : this.transferListlayout(transIn)}\n                                </div>\n                            </div>\n                            <div>\n                                <t2 className='wardbedinfoitemcontexttitle'>轉出病人清單</t2>\n                                <div className='wardbedinfoitemcontextgridlayout'>\n                                    {outType ? <div className='nopatient'>無病人</div> : this.transferListlayout(transOut)}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n            // }\n        }\n\n    }\n    bedinfotitle() {\n        const maparray = ['日期', '佔床數', '轉出', '轉入', '侵入式呼吸器', '非侵入式呼吸器', '開立PN']\n        const title = maparray.map(function (info, index) {\n            return (\n                <div className='wardbedinfotablerowtitle'>\n                    <t2>{info}</t2>\n                </div>\n            );\n        })\n        return title\n    }\n    weekbedinfo() {\n        var infolist = []\n        const infoList = this.state.bedinfo\n        const dateTime = this.state.PickerDate\n        for (let i = 0; i < 7; i++) {\n            const localtime = dateTime - (i * 24 * 60 * 60 * 1000);\n            const filterdate = infoList.filter(function (info, index) {\n                const tempDate = moment(info.Date, 'YYYYMMDD').valueOf()\n                return tempDate === localtime\n            })\n            // console.log(filterdate)\n            if (filterdate.length === 0) {\n                infolist.push(\n                    <div >\n                        <Bedinformation data={null} key={i} localtime={localtime} selectkey={this.state.selectid} idkey={i} parentCallback={this.callbackFunction}></Bedinformation>\n                    </div>\n                )\n            }\n            else {\n                infolist.push(\n                    <div >\n                        <Bedinformation data={filterdate[0]} key={i} localtime={localtime} selectkey={this.state.selectid} idkey={i} parentCallback={this.callbackFunction}></Bedinformation>\n                    </div>\n                )\n            }\n        }\n        infolist.reverse()\n        return infolist\n\n    }\n\n    trainDay = (e) => {\n        // const { caseinfo } = this.props\n        const { PickerDate } = this.state\n        // const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        // const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                // const bTemp = bTime - (6 * day)\n                // bronDate <= bTemp && this.onChange(moment(bTime))\n                this.onChangeDate(moment(bTime))\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD'))\n                this.onChangeDate(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= aTemp && this.onChangeDate(moment(aTime))\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        return (\n            <div style={{ marginTop: \"10px\" }}>\n                <div className='wardbrdinfomationtitle'>\n                    <centerstyle>\n                        <t2 style={{ fontSize: \"16px\", color: \"rgba(0, 0, 0, .7)\" }}>病房每日統計</t2>\n                        <t2 style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"rgba(0, 0, 0, .7)\", paddingLeft: \"10px\" }}>每日上午七點統計</t2>\n                    </centerstyle>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"140px 120px\", gridColumnGap: \"5px\" }}>\n                        <DatePicker getCalendarContainer={triggerNode => triggerNode.parentNode} showToday={true} disabledDate={(current) => { return current && current > moment().startOf('day') }} value={moment(this.state.PickerDate)} format={\"YYYY/MM/DD\"} onChange={this.onChangeDate} allowClear={false} />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\", marginLeft: \"10px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"minus-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                    </div>\n                </div>\n                <div className='wardbedinformationcontext'>\n                    <div>\n                        {this.bedinfotitle()}\n                    </div>\n                    {this.weekbedinfo()}\n                </div>\n                {this.infoitem()}\n            </div>\n        );\n    }\n}\n\nexport default Wardbedinformation;\n","import React, { Component } from 'react';\nimport detaillogo from '../Image/svg/details.svg'\nimport editlogo from '../Image/svg/Edit.svg'\nimport { Tooltip, Input, Button } from 'antd';\nimport './Schedule_event.scss'\nimport * as ApiProvider from '../API/ApiProvider';\n//資料\n// import { eventdata } from '../jsonResponse'\nimport moment from 'moment';\n\nconst parseBedNumber = (bedNumber) => {\n    if(Number.isInteger(bedNumber)){\n        return bedNumber > 9 ? bedNumber : `0${bedNumber.toString()}`;\n    }\n\n    return '00'\n}\n\nclass Schedule_event_list extends Component {\n    state = {\n        detailstate: \"none\",\n        // pressitemstate: \"all\",\n        items_interval: 0,\n        powerLogin: 0,\n        EditMode: false,\n        inputContent: '',\n        selSchedule: '排程',\n\n        Scheduledata: [],\n        status: false,\n        PickerDate: moment().valueOf(),\n        TRANSINID: null\n    }\n\n    querySchedule(time, ID) {\n        const st = moment(moment(time).format(\"YYYY/MM/DD\"), \"YYYY/MM/DD\").valueOf()\n        const et = moment(moment(time).format(\"YYYY/MM/DD\"), \"YYYY/MM/DD\").valueOf() + (24 * 60 * 60 * 1000)\n        // console.log(ID, st, et)\n        ApiProvider.getOnePatientSchedule(ID, st, et)\n            .then(data => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n                this.setState({ Scheduledata: data.data })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }\n\n    queryALLSchedule() {\n        ApiProvider.getAllSchedule()\n            .then(data => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n                this.setState({ Scheduledata: data.data })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }\n    componentDidMount() {\n        this.onInputChange = this.onInputChange.bind(this);\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        const source = this.props.source\n        if (source === 1) {\n            const ID = this.props.caseinfo.TRANSINID\n            const date = this.props.PickerDate\n            console.log(this.props.caseinfo)\n            if (ID === null) {\n\n            }\n            else {\n                this.setState({\n                    PickerDate: date,\n                    TRANSINID: ID\n                })\n                this.querySchedule(date, ID)\n            }\n        }\n        else {\n            //get ALL\n            this.queryALLSchedule()\n        }\n\n    }\n\n    componentDidUpdate() {\n        const source = this.props.source\n        if (this.state.status) {\n            this.setState({ status: false })\n            if (source === 1) {\n                const ID = this.props.caseinfo.TRANSINID\n                this.querySchedule(this.state.PickerDate, ID)\n            }\n            else {\n                //get ALL\n                this.queryALLSchedule()\n            }\n        }\n        const propsDate = this.props.PickerDate\n        const stateDate = this.state.PickerDate\n        if (propsDate !== stateDate) {\n            this.setState({ PickerDate: propsDate })\n            if (source === 1) {\n                const ID = this.props.caseinfo.TRANSINID\n                console.log(moment(propsDate).format(\"YYYYMMDDHHmmss\"))\n                console.log(moment(stateDate).format(\"YYYYMMDDHHmmss\"))\n                this.querySchedule(propsDate, ID)\n            }\n            else {\n                //get ALL\n            }\n        }\n    }\n    selSchedule(value) {\n        this.setState({ selSchedule: value })\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n    onClickEnter() {\n        console.log(this.state.PickerDate)\n        const timeNowStr = new Date().toISOString()\n        console.log(timeNowStr)\n        const writter = sessionStorage.getItem(\"user\")\n        const name = this.props.caseinfo.PBASINGNINFO.PNAMEC\n        const hisid = this.props.caseinfo.HISID\n        ApiProvider.createPatientSchedule(this.props.caseinfo.PLOCSTART.HBEDNO, this.state.inputContent, timeNowStr, this.props.caseinfo.TRANSINID, this.state.selSchedule, writter, name, hisid)\n            .then(data => {\n                console.log(\" OK \" + JSON.stringify(data.data))\n                this.setState(\n                    {\n                        EditMode: false,\n                        inputContent: undefined,\n                        status: true\n                    })\n            })\n            .catch(err => {\n                console.log(\" Err \" + JSON.stringify(err))\n            })\n    }\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    timechange(timestamp) {\n        const changetime = new Date(timestamp).getHours() + \":\" + new Date(timestamp).getMinutes()\n        return changetime\n    }\n\n    // pressbtn(pressitem) {\n    //     this.setState(\n    //         {\n    //             pressitemstate: pressitem\n    //         }\n    //     );\n    // }\n    listevent() {\n        let ScheduleList = this.state.Scheduledata\n        console.log(ScheduleList)\n        if (ScheduleList.length === 0) {\n            return <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\" }}>\n                當日無排程\n                    </div>\n        }\n        // const RenderData = scheduleList(eventstate)\n\n        if (ScheduleList.length > 1) {\n            ScheduleList = ScheduleList.sort((a, b) => {\n                let tempTimeA = moment(moment(a.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss'), \"YYYYMMDD\").valueOf()\n                let tempTimeB = moment(moment(b.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss'), \"YYYYMMDD\").valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n        }\n\n        const CellRender = ScheduleList.map(function (info, index, arr) {\n            const time = moment(info.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n            const localTime = moment.utc(time).toDate()\n            const text = <div>{info.writter}醫師於{moment(localTime).format(\"YYYY/MM/DD HH:mm:ss\")}更新</div>\n            return (\n                <div key={index} className='CellLayout'>\n                    <div className='Context'>\n                        <div style={{ height: '30px', width: \"60px\", borderRadius: \"4px\", backgroundColor: \"rgba(124,179,5,1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <t2 style={{ color: 'white' }}>NI-{parseBedNumber(info.bednumber)}</t2>\n                            {/* itemchange(info.type) */}\n                        </div>\n                        <div style={{ fontSize: \"16px\" }}>\n                            {info.name}\n                            {/* {moment(localTime).format(\"HH:mm\")}  */}\n                            {info.context}\n                        </div>\n                    </div>\n                    <Tooltip placement=\"right\" title={text}>\n                        <div>\n                            <img src={detaillogo} alt='detaillogo'></img>\n                        </div>\n                    </Tooltip>\n                </div>\n            );\n        })\n        return CellRender\n    }\n\n\n    //測驗項目功能_區間按鈕樣式\n    // SwitchTestItemInterval(testiteminterval) {\n    //     const stylestate = this.state.pressitemstate\n    //     if (testiteminterval === stylestate) {\n    //         return 'buttonselect'\n    //     }\n    //     else return 'buttonUnselect'\n    // }\n    //測驗項目功能_區間按鈕選擇\n    Onchangetimeinterval(changestate) { this.setState({ items_interval: changestate }) }\n    EditControl() {\n        const edit = this.props.editstatus\n        if (edit) {\n            return (\n                <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                    <img src={editlogo} alt=\"editlogo\" />\n                </div>\n            );\n        }\n        return null\n    }\n    render() {\n        const { title } = this.props\n        const EditButton = this.EditControl()\n        return (\n            <div className='ScheduleEventLayout'>\n                <div className='ScheduleEventTitle'>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t2>\n                    {EditButton}\n                </div>\n                <div className='ScheduleEventContext'>\n                    <div className='ContextList'>\n                        {this.listevent()}\n                    </div>\n                </div>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div value='排程' style={{ display: \"grid\", width: 150, height: \"32px\", justifyContent: \"center\", alignItems: \"center\", border: \"1px solid #d9d9d9\", borderRadius: \"4px\", marginRight: \"5px\" }}>排程</div>\n                        <Input placeholder=\"輸入當日內容\" value={this.state.inputContent} onChange={this.onInputChange}></Input>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Schedule_event_list\n","import React, { Component } from 'react';\nimport Schedule_event_list from '../Module/Schedule_event'\nimport moment from 'moment';\n\nclass Wardschedule extends Component {\n\n    render() {\n        return (\n            <Schedule_event_list  PickerDate={moment(moment().format(\"YYYYMMDD\"),\"YYYYMMDD\").valueOf()}  source={this.props.source} title=\"今日排程\" data={this.props.scheduleData} editstatus={this.props.editstatus} />\n        );\n    }\n}\n\n\nexport default Wardschedule\n","import React, { Component } from 'react';\nimport WardcardNote from './Wardnote'\nimport Wardbedinformation from './WardBedinformation'\nimport Wardschedule from './Wardschedule'\nimport './Wardinfoindex.scss'\n// import * as ApiProvider from '../API/ApiProvider';\n\n// const SCHEDULE_TYPE_EVENT = \"事件\";\n\nclass Wardinfoindex extends Component {\n    render() {\n        return (\n            <div className='Wardinfoindexcontent'>\n                <div style={{ fontSize: \"22px\", color: \"rgba(0, 0, 0, .7)\", fontWeight: \"600\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>NICU總覽</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"5px\", marginTop: \"10px\" }}>\n                    <WardcardNote></WardcardNote>\n                    <Wardschedule source={0} editstatus={false}></Wardschedule>\n                </div>\n                <Wardbedinformation></Wardbedinformation>\n            </div>\n        );\n    }\n}\n\nexport default Wardinfoindex;\n","// Get api\n\n\n\n//資料更新時間\nconst updatetime = {\n    'time': 1567051200000\n}\n\nconst eventdata = [\n    {\n        \"item\": \"schedule\",\n        \"time\": 1565748000000,\n        \"result\": \"手術前檢查\",\n        \"name\": \"林博偉\",\n        \"bednumber\": \"01\",\n        \"writter\": \"林天財\"\n    },\n    {\n        \"item\": \"event\",\n        \"time\": 1565748000000,\n        \"result\": \"傷口變大了\",\n        \"name\": \"王添財\",\n        \"bednumber\": \"02\",\n        \"writter\": \"林天財\"\n    }\n]\n\n//Ward_bed_vitalData_last POST\nconst ward_bed_lastData = [\n    {\n        \"MedicalNumber\": \"123456789\",\n        \"Data\": {\n            \"HR\": 120,\n            \"ABP1\": 45,\n            \"ABP2\": 30,\n            \"ABP3\": 35,\n            \"SpO2\": 96,\n            \"BT\": 37.5,\n            \"RR\": 22\n        },\n        \"Status\": {\n            \"Ventilator\": false,\n            \"TPN\": true,\n            \"NPO\": false,\n            \"ECMO\": false,\n            \"Antibiotics\": false,\n            \"Hemodialysis\": false,\n            \"Foley\": false,\n            \"Drain\": false\n        }\n    },\n    {\n        \"MedicalNumber\": \"987654321\",\n        \"Data\": {\n            \"HR\": 120,\n            \"ABP1\": 45,\n            \"ABP2\": 30,\n            \"ABP3\": 35,\n            \"SpO2\": 96,\n            \"BT\": 37.5,\n            \"RR\": 22\n        }\n    },\n    {\n        \"MedicalNumber\": \"123454321\",\n        \"Data\": {\n            \"HR\": 120,\n            \"ABP1\": 45,\n            \"ABP2\": 30,\n            \"ABP3\": 35,\n            \"SpO2\": 96,\n            \"BT\": 37.5,\n            \"RR\": 22\n        }\n    }\n]\n\nconst WardInfo = {\n    UpdateTime: 1567051200000,\n    Director: \"林又新\",\n    HeadNurse: \"鄭麗貞\",\n    BedTotal: 12,\n    SignBed: 7,\n    EmptyBed: 9,\n    TransferBed: 8,\n    NewPatient: 2,\n    Ventilator: 1,\n    NPO: 7,\n    TPN: 4,\n    ECMO: 8,\n    Antibiotics: 6,\n    Hemodialysis: 1,\n    Announcement: [\n        {\n            time: 1567051200000,\n            text: \"7/10 王大明醫師請假，下午請李小華醫師cover ，6/30XXX醫師留\",\n            writter: \"張大帥\"\n        },\n        {\n            time: 1567051250000,\n            text: \"「超音波用完請記得歸還原位」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        }\n    ]\n}\nconst labdata = [\n    [{ title: \"Glucose\", score: 77, date: \"2019/01/01\" }],\n    [{ title: \"WBC\", score: 19647, date: \"Seg 59%2019/01/01\" }],\n    [{ title: \"WBC\", score: 14.8, date: \"2019/01/01\" }],\n    [{ title: \"Platelet\", score: 125, date: \"2019/01/01\" }],\n    [\n        { title: \"Na+\", score: 125, date: \"2019/01/01\" },\n        { title: \"K+\", score: 125, date: \"2019/01/01\" },\n        { title: \"Ca2+\", score: 125, date: \"2019/01/01\" },\n        { title: \"P\", score: 125, date: \"2019/01/01\" },\n        { title: \"Mg2+\", score: 125, date: \"2019/01/01\" },\n    ],\n    [\n        { title: \"CRP\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Procalcitionin\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Current Antibiotics\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Bun\", score: 125, date: \"2019/01/01\" },\n        { title: \"Cr\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"ALT\", score: 125, date: \"2019/01/01\" },\n        { title: \"AST\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"TBIL\", score: 125, date: \"2019/01/01\" },\n        { title: \"D.Bil\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"ALKP\", score: 125, date: \"2019/01/01\" },\n        { title: \"Total Ca\", score: 125, date: \"2019/01/01\" },\n        { title: \"LDH\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Iron\", score: 125, date: \"2019/01/01\" },\n        { title: \"TIBC\", score: 125, date: \"2019/01/01\" },\n        { title: \"FeSat\", score: 125, date: \"2019/01/01\" },\n        { title: \"Ferritin\", score: 125, date: \"2019/01/01\" }\n    ]\n]\nconst jsonResponse = [\n    {\n        \"HISID\": \"H1234567\",\n        \"CASEID\": \"C1234567\",\n        \"name\": \"吳大胖之女\",\n        \"gender\": 1,\n        \"birthday\": \"2019/11/11\",\n        \"bednumber\": 1,\n        \"pregnancy\": \"2019/11/10\",\n        \"weightbirth\": 1400,\n        \"weight\": 2300,\n        'report': 3,\n        'nonreport': 3,\n        'note': '隨時注意病人血壓狀態隨時注意病人血壓狀態',\n        'type':'NIS',\n        'MainDoctor':'張大春',\n        'IcuInTime':'2019/11/11'\n    },\n    {\n        \"HISID\": \"H9876543\",\n        \"CASEID\": \"C12345622\",\n        \"name\": \"吳大胖之女\",\n        \"gender\": 1,\n        \"birthday\": \"2019/11/11\",\n        \"bednumber\": 2,\n        \"pregnancy\": \"2019/11/10\",\n        \"weightbirth\": 1400,\n        \"weight\": 2300,\n        'report': 3,\n        'nonreport': 3,\n        'note': '隨時注意病人血壓狀態隨時注意病人血壓狀態',\n        'type':'Custom',\n        'MainDoctor':'張大春',\n        'IcuInTime':'2019/11/11'\n    }\n]\n\n//Wardview TCP data\nconst centerrowdata = {\n    \"id\": 20190817001,\n    \"data\": {\n        \"Weight\": 5000,\n        \"WeightDif\": 700,\n        \"BP\": [\n            {\n                \"time\": 1565395200,\n                \"DBP\": 60,\n                \"SBP\": 90\n            }\n        ],\n        \"HR\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"RR\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"BT\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"Urine\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"Suger\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"SP\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ]\n    }\n}\n\nconst growdata = {\n    Male_befor: [\n        { y: 22, min: 420, max: 600 },\n        { y: 23, min: 470, max: 700 },\n        { y: 24, min: 510, max: 800 },\n        { y: 25, min: 570, max: 900 },\n        { y: 26, min: 610, max: 1040 },\n        { y: 27, min: 700, max: 1200 },\n        { y: 28, min: 790, max: 1340 },\n        { y: 29, min: 870, max: 1520 },\n        { y: 30, min: 1000, max: 1740 },\n        { y: 31, min: 1120, max: 2000 },\n        { y: 32, min: 1300, max: 2240 },\n        { y: 33, min: 1500, max: 2500 },\n        { y: 34, min: 1700, max: 2800 },\n        { y: 35, min: 1960, max: 3040 },\n        { y: 36, min: 2180, max: 3300 },\n        { y: 37, min: 2400, max: 3500 },\n        { y: 38, min: 2600, max: 3780 },\n        { y: 39, min: 2810, max: 3980 },\n        { y: 40, min: 3000, max: 4200 },\n        { y: 41, min: 3200, max: 4440 },\n        { y: 42, min: 3400, max: 4700 },\n        { y: 43, min: 3600, max: 5000 },\n        { y: 44, min: 3800, max: 5270 }\n    ],\n    FeMale_before: [\n        { y: 22, min: 400, max: 580 },\n        { y: 23, min: 430, max: 640 },\n        { y: 24, min: 490, max: 730 },\n        { y: 25, min: 550, max: 850 },\n        { y: 26, min: 580, max: 1000 },\n        { y: 27, min: 630, max: 1120 },\n        { y: 28, min: 700, max: 1300 },\n        { y: 29, min: 800, max: 1500 },\n        { y: 30, min: 900, max: 1700 },\n        { y: 31, min: 1050, max: 1910 },\n        { y: 32, min: 1200, max: 2180 },\n        { y: 33, min: 1400, max: 2400 },\n        { y: 34, min: 1600, max: 2680 },\n        { y: 35, min: 1850, max: 2930 },\n        { y: 36, min: 2050, max: 3200 },\n        { y: 37, min: 2300, max: 3490 },\n        { y: 38, min: 2480, max: 3700 },\n        { y: 39, min: 2680, max: 3900 },\n        { y: 40, min: 2820, max: 4100 },\n        { y: 41, min: 2980, max: 4300 },\n        { y: 42, min: 3150, max: 4520 },\n        { y: 43, min: 3300, max: 4740 },\n        { y: 44, min: 3500, max: 5000 }\n    ],\n    Male_after: [\n        { y: 0, min: 2500, max: 4300 },\n        { y: 1, min: 2600, max: 4500 },\n        { y: 2, min: 2800, max: 4900 },\n        { y: 3, min: 3100, max: 5200 },\n        { y: 4, min: 3400, max: 5600 },\n        { y: 5, min: 3600, max: 5900 },\n        { y: 6, min: 3800, max: 6300 }\n    ],\n    FeMale_after: [\n        { y: 0, min: 2400, max: 4200 },\n        { y: 1, min: 2500, max: 4400 },\n        { y: 2, min: 2700, max: 4600 },\n        { y: 3, min: 2900, max: 5000 },\n        { y: 4, min: 3100, max: 5300 },\n        { y: 5, min: 3300, max: 5600 },\n        { y: 6, min: 3500, max: 5900 }\n    ]\n}\n\nconst Note_data = [\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 }\n]\n\nconst todo_data = [\n    {\n        Time: 1566287810473,\n        Content: \"幫大明量體重\",\n        Flag: true,\n        Editor: \"修改者\"\n    },\n    {\n        Time: 1566287810473,\n        Content: \"幫大明量體重\",\n        Flag: true,\n        Editor: \"修改者\"\n    },\n    {\n        Time: 1566287810473,\n        Content: \"幫大明量體重\",\n        Flag: true,\n        Editor: \"修改者\"\n    }\n]\n\n\nexport { jsonResponse, centerrowdata, WardInfo, updatetime, ward_bed_lastData, labdata, eventdata, growdata, Note_data, todo_data };","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { growdata } from '../jsonResponse'\nimport moment from 'moment';\n\n//40週前\nclass WardlifeChart extends Component {\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    drawChart() {\n        const { gender, svg_key, weightList, grewinfo, width, height } = this.props\n        if (grewinfo === null || grewinfo === undefined) {\n            return null\n        }\n        const bornweeks = Number(grewinfo.WEEK_BORN)\n        const borndays = Number(grewinfo.DAY_BORN)\n        const Birthday = grewinfo.BIRTHDAY\n        const pregencyTimestamp = moment(Birthday, \"YYYYMMDD\").valueOf() - ((bornweeks * 7) + borndays) * 24 * 60 * 60 * 1000\n\n\n        function tickValues(growdata, gender) {\n            if (gender === 'M' || gender === '1') {\n                const Row = growdata.Male_befor\n                return [Row[Row.length - 1].min, Row[Row.length - 1].max]\n            }\n            const Row = growdata.FeMale_before\n            return [Row[Row.length - 1].min, Row[Row.length - 1].max]\n        }\n\n        const tick = tickValues(growdata, gender)\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([0, 5500])\n            .range([height, 0])\n\n        var x = d3.scaleLinear()\n            .domain([22, 44])\n            .range([0, width])\n\n\n        var yAxis = d3.axisLeft(y)\n            .ticks(10)\n            .tickSize(0, 0)\n            .tickPadding(10)\n            .tickFormat(function (d, index) { return index === 11 ? d + \"(g)\" : d });\n\n\n        var xAxis = d3.axisTop(x)\n            .ticks(14)\n            .tickSize(0, 0)\n            .tickPadding(-15)\n            .tickFormat(function (d, index) { return d + 'W'; });\n\n        var yRightAxis = d3.axisLeft(y)\n            .tickValues(tick)\n            .tickSize(0, 0)\n            .tickPadding(-40)\n            .tickFormat(function (d, index) {\n                if (index === 0) {\n                    return \"10th%\"\n                }\n                if (index === 1) {\n                    return \"90th%\"\n                }\n                return null\n            });\n        var svg = d3\n            .select(\"#\" + svg_key)\n            .style(\"height\", \"435px\")\n            .style(\"width\", \"100%\")\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 30 + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(\" + 0 + \", \" + height + \")\");\n\n        svg.append(\"g\")\n            .call(yRightAxis)\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(\" + width + \", \" + 0 + \")\");\n\n        for (let index = 0; index < 13; index++) {\n            const number = index * 500\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(number))\n                .attr('x2', width)\n                .attr('y2', y(number))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n\n        }\n\n        // for (let index = 0; index < 13; index++) {\n        //     const number = index * 500\n        //     svg.append('line')\n        //         .attr('x1', 0)\n        //         .attr('y1', y(number))\n        //         .attr('x2', width)\n        //         .attr('y2', y(number))\n        //         .style('stroke', 'rgba(187, 187, 187, 1)')\n        //         .style('stroke-width', 1)\n        //         .style('stroke-dasharray', 5.5);\n        // }\n\n        for (let index = 22; index < 45; index++) {\n            if (index % 2 == 0) {\n                svg.append('line')\n                    .attr('x1', x(index))\n                    .attr('y1', 0)\n                    .attr('x2', x(index))\n                    .attr('y2', height)\n                    .style('stroke', 'rgba(187, 187, 187, 1)')\n                    .style('stroke-width', 1)\n                    .style('stroke-dasharray', 5.5);\n            }\n        }\n\n        if (gender === 'M' || gender === '1') {\n            for (let index = 0; index < growdata.Male_befor.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_befor[index].y))\n                    .attr('y1', y(growdata.Male_befor[index].min))\n                    .attr('x2', x(growdata.Male_befor[index + 1].y))\n                    .attr('y2', y(growdata.Male_befor[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 3);\n            }\n\n            for (let index = 0; index < growdata.Male_befor.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_befor[index].y))\n                    .attr('y1', y(growdata.Male_befor[index].max))\n                    .attr('x2', x(growdata.Male_befor[index + 1].y))\n                    .attr('y2', y(growdata.Male_befor[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 3);\n            }\n        }\n        else {\n            for (let index = 0; index < growdata.FeMale_before.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_before[index].y))\n                    .attr('y1', y(growdata.FeMale_before[index].min))\n                    .attr('x2', x(growdata.FeMale_before[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_before[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 3);\n            }\n\n            for (let index = 0; index < growdata.FeMale_before.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_before[index].y))\n                    .attr('y1', y(growdata.FeMale_before[index].max))\n                    .attr('x2', x(growdata.FeMale_before[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_before[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 3);\n            }\n        }\n        const datasource = weightList\n        //x 週數 y體重 NIS\n        for (let index = 0; index < datasource.length; index++) {\n            const element = datasource[index];\n            const BornDay = element.rec_dat.toString().trim()\n            const BornTime = element.rec_tim.toString().trim()\n            const time = BornDay + BornTime\n            const weighttimestamp = moment(time, \"YYYYMMDDHHmm\").valueOf() //體重時間\n            const weeks = (weighttimestamp - pregencyTimestamp) / (7 * 24 * 60 * 60 * 1000) //體重週數\n            console.log(weeks)\n            if (weeks < 22) {\n                continue\n            }\n            if (weeks > 44) {\n                continue\n            }\n            svg.append('circle')\n                .attr('cx', x(weeks))\n                .attr('cy', y(Number(element.value2) * 1000))\n                .attr('r', 3)\n                .style('fill', 'green')\n        }\n\n\n    }\n\n    render() {\n        const { id_key, svg_key } = this.props\n        return (\n            <div id={id_key}>\n                <svg id={svg_key}></svg>\n            </div>\n        );\n    }\n}\n\nexport default WardlifeChart;\n","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { growdata } from '../jsonResponse'\nimport moment from 'moment'\n\n//40週後\nclass Wardmonthafter extends Component {\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    drawChart() {\n        const { gender, svg_key, weightList, grewinfo, width, height } = this.props\n        if (grewinfo === null || grewinfo === undefined) {\n            return null\n        }\n        const Birthday = grewinfo.BIRTHDAY\n        const pregencyTimestamp = moment(Birthday, \"YYYYMMDD\").valueOf()\n        //var vertigo = datarelease();\n\n        function tickValues(growdata, gender) {\n            if (gender === 'M' || gender === '1') {\n                const Row = growdata.Male_after\n                console.log(Row)\n                return [Row[Row.length - 1].min, Row[Row.length - 1].max]\n            }\n            const Row = growdata.FeMale_after\n            return [Row[Row.length - 1].min, Row[Row.length - 1].max]\n\n        }\n\n        const tick = tickValues(growdata, gender)\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([1500, 7000])\n            .range([height, 0])\n\n\n\n        var x = d3.scaleLinear()\n            .domain([0, 6])\n            .range([0, width])\n\n        var yAxis = d3.axisLeft(y)\n            .ticks(10)\n            .tickSize(0, 0)\n            .tickPadding(10)\n            .tickFormat(function (d, index) { return index === 11 ? d + \"(g)\" : d });\n\n        var yRightAxis = d3.axisLeft(y)\n            .tickValues(tick)\n            .tickSize(0, 0)\n            .tickPadding(-40)\n            .tickFormat(function (d, index) {\n                if (index === 0) { return \"10th%\" }\n                if (index === 1) { return \"90th%\" }\n                return null\n            });\n\n\n        var xAxis = d3.axisTop(x)\n            .ticks(6)\n            .tickSize(0, 0)\n            .tickPadding(-15)\n            .tickFormat(function (d) {\n                return d + \"m\";\n            });\n\n\n        var svg = d3\n            .select(\"#\" + svg_key)\n            .style(\"height\", \"435px\")\n            .style(\"width\", \"100%\")\n            // .select(\"svg\")\n            // .attr(\"viewBox\", [0, 0, width, height])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 30 + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(\" + 0 + \", \" + height + \")\");\n\n\n        svg.append(\"g\")\n            .call(yRightAxis)\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(\" + width + \", \" + 0 + \")\");\n\n        for (let index = 0; index < 7; index++) {\n            svg.append('line')\n                .attr('x1', x(index))\n                .attr('y1', 0)\n                .attr('x2', x(index))\n                .attr('y2', height)\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n\n        }\n\n        for (let index = 1; index < 13; index++) {\n            const number = index * 500 + 1000\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(number))\n                .attr('x2', width)\n                .attr('y2', y(number))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n\n        }\n\n        // for (let index = 22; index < 45; index++) {\n        //     svg.append('line')\n        //         .attr('x1', x(index))\n        //         .attr('y1', 0)\n        //         .attr('x2', x(index))\n        //         .attr('y2', height)\n        //         .style('stroke', 'rgba(187, 187, 187, 1)')\n        //         .style('stroke-width', 1)\n        //         .style('stroke-dasharray', 5.5);\n        // }\n\n        if (gender === 'M' || gender === '1') {\n            for (let index = 0; index < growdata.Male_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_after[index].y))\n                    .attr('y1', y(growdata.Male_after[index].min))\n                    .attr('x2', x(growdata.Male_after[index + 1].y))\n                    .attr('y2', y(growdata.Male_after[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 3);\n            }\n\n            for (let index = 0; index < growdata.Male_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_after[index].y))\n                    .attr('y1', y(growdata.Male_after[index].max))\n                    .attr('x2', x(growdata.Male_after[index + 1].y))\n                    .attr('y2', y(growdata.Male_after[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 3);\n            }\n        }\n        else {\n            for (let index = 0; index < growdata.FeMale_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_after[index].y))\n                    .attr('y1', y(growdata.FeMale_after[index].min))\n                    .attr('x2', x(growdata.FeMale_after[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_after[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 3);\n            }\n\n            for (let index = 0; index < growdata.FeMale_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_after[index].y))\n                    .attr('y1', y(growdata.FeMale_after[index].max))\n                    .attr('x2', x(growdata.FeMale_after[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_after[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 3);\n            }\n        }\n\n        const datasource = weightList\n        //x時間 y體重\n        for (let index = 0; index < datasource.length; index++) {\n            const element = datasource[index];\n            const BornDay = element.rec_dat.toString().trim()\n            const BornTime = element.rec_tim.toString().trim()\n            const time = BornDay + BornTime\n            const weighttimestamp = moment(time, \"YYYYMMDDHHmm\").valueOf() //體重時間\n            const Month = (weighttimestamp - pregencyTimestamp) / (30 * 24 * 60 * 60 * 1000) //體重週數\n            if (Month < 0 || Month > 6) {\n                continue\n            }\n            svg.append('circle')\n                .attr('cx', x(Month))\n                .attr('cy', y(Number(element.value2) * 1000))\n                .attr('r', 3)\n                .style('fill', 'green')\n        }\n        // const datacustom = wardchartoncustom\n        // for (let index = 0; index < datacustom.length; index++) {\n        //     const element = datacustom[index];\n        //     svg.append('circle')\n        //         .attr('cx', x(element.x))\n        //         .attr('cy', y(element.y))\n        //         .attr('r', 3)\n        //         .style('fill', 'blue')\n        // }\n\n    }\n\n    render() {\n        const { id_key, svg_key } = this.props\n        return (\n            <div id={id_key}>\n                <svg id={svg_key}></svg>\n            </div>\n        );\n    }\n}\n\nexport default Wardmonthafter;\n","import React, { Component } from 'react';\nimport WardlifeChart from './Wardlifechart'\nimport Wardmonthafter from './Wardmonthafter'\n\n\nclass Wardgrewchart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            test_items_interval: 0\n        };\n    }\n    switch_monthy() {\n        const { Data, WeightList, grewinfo } = this.props\n        const switch_data = this.state.test_items_interval\n        const width = (window.screen.availWidth - 650) / 2, height = 350\n        switch (switch_data) {\n            case 0:\n                return <WardlifeChart width={width} height={height} grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife\"} svg_key={\"wardlife_svg\"} gender={Data.PSEX}></WardlifeChart>\n            case 1:\n                return <Wardmonthafter width={width} height={height} grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife_after\"} svg_key={\"wardlife_after_svg\"} gender={Data.PSEX}></Wardmonthafter>\n            default:\n                return null;\n        }\n    }\n    //測驗項目功能_區間按鈕樣式\n    SwitchTestItemInterval(testiteminterval) {\n        const time_selectbtn_style = {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"25px\",\n            padding: \"0px 5px\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#001a6dbb\",\n            color: \"white\",\n            fontSize: \"1rem\",\n            borderWidth: \"1px\",\n            borderStyle: \"solid\",\n            borderColor: \"#001a6d88\",\n            cursor: \"pointer\"\n        }\n        const time_unselectbtn_style = {\n            display: \"flex\", justifyContent: \"center\",\n            alignItems: \"center\", height: \"25px\",\n            padding: \"0px 5px\",\n            borderRadius: \"4px\", backgroundColor: \"white\",\n            color: \"#001a6d88\", fontSize: \"1rem\",\n            borderWidth: \"1px\", borderStyle: \"solid\",\n            borderColor: \"#001a6d88\",\n            cursor: \"pointer\"\n        }\n        if (testiteminterval === this.state.test_items_interval) {\n            return time_selectbtn_style\n        }\n        else return time_unselectbtn_style\n    }\n    //測驗項目功能_區間按鈕選擇\n    Onchangetimeinterval(changestate) {\n        this.setState(\n            {\n                test_items_interval: changestate\n            }\n        )\n    }\n    render() {\n        return (\n            <div>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: 'center', backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>生長曲線圖</t2>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"5px\", alignItems: \"center\" }}>\n                        <div style={this.SwitchTestItemInterval(1)} onMouseUp={() => this.Onchangetimeinterval(0)}>40週前</div>\n                        <div style={this.SwitchTestItemInterval(0)} onMouseUp={() => this.Onchangetimeinterval(1)}>40週後</div>\n                    </div>\n                </div>\n                {this.switch_monthy()}\n            </div>\n        );\n    }\n}\nexport default Wardgrewchart\n","import React, { Component } from 'react';\nimport editlogo from '../../Image/svg/Edit.svg'\nimport detaillogo from '../../Image/svg/details.svg'\nimport { Tooltip, Input, Button } from 'antd';\nimport './Notice.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass Notice extends Component {\n    state = {\n        caseinfo: this.props.caseinfo,\n        EditMode: false,\n        noticeData: [],\n        inputContent: undefined,\n        powerLogin: 0,\n        preTRID: null,\n    }\n    componentDidMount() {\n        //bind function\n        this.onInputChange = this.onInputChange.bind(this);\n        //query patient notice\n        const TRID = this.props.caseinfo.TRANSINID.toString().trim()\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins, preTRID: TRID })\n        this.queryPatientImportant(TRID);\n    }\n    componentDidUpdate() {\n        const TRID = this.props.caseinfo.TRANSINID.toString().trim()\n        const preTRID = this.state.preTRID\n        if (TRID !== preTRID) {\n            this.setState({ preTRID: TRID })\n            this.queryPatientImportant(TRID);\n        }\n    }\n    queryPatientImportant(TRID) {\n        ApiProvider.getOnePatientImportantMatter(TRID)\n            .then(data => {\n                console.log(\"getOnePatientImportantMatter OK \" + JSON.stringify(data));\n                this.setState({ noticeData: data.data });\n            })\n            .catch(err => {\n                console.log(\"getOnePatientImportantMatter NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString();\n        ApiProvider.createPatientImportantMatter(this.state.inputContent, \"\", this.state.caseinfo.HISID, timeNowStr, this.state.caseinfo.TRANSINID)\n            .then(data => {\n                console.log(\"createPatientImportantMatter OK \" + JSON.stringify(data));\n                this.queryPatientImportant(this.state.preTRID);\n            })\n            .catch(err => {\n                console.log(\"createPatientImportantMatter NG \" + JSON.stringify(err));\n            });\n        this.setState(\n            {\n                EditMode: false,\n                inputContent: undefined\n            }\n        )\n    }\n    renderEditButton() {\n        if (this.props.disableEdit === true) {\n            return null;\n        } else {\n            return (\n                <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                    <img src={editlogo} alt=\"editlogo\" />\n                </div>\n            )\n        }\n    }\n\n    render() {\n        function remarkcellRender(dataList) {\n            if (Array.isArray(dataList)) {\n                if (dataList.length === 0) {\n                    return (\n                        <div style={{ height: \"50px\", paddingLeft: \"15px\", display: \"flex\", alignItems: \"center\" }}>\n                            無病人註記\n                        </div>\n                    );\n                }\n                const remarkcell = dataList.map((info, index) =>\n                    <div key={index} className='noticecontext'>\n                        <div style={{ whiteSpace: \"pre-wrap\" }}>{info.context}</div>\n                        <Tooltip placement=\"topRight\" title={tooltiptext(info.Editor, info.time)}>\n                            <img src={detaillogo} alt=\"detaillogo\" />\n                        </Tooltip>\n                    </div>\n                )\n                return remarkcell\n            }\n            return (\n                <div style={{ height: \"50px\", paddingLeft: \"15px\", display: \"flex\", alignItems: \"center\" }}>\n                    無病人註記\n                </div>\n                // <div style={{ padding: \"5px 15px\" }}>無病人註記</div>\n            );\n        }\n        function tooltiptext(editor, time) {\n            function nullvalue(value) {\n                if (value === null || value === undefined) {\n                    return \"--\"\n                }\n                return value\n            }\n            const t = moment(time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n            const localTime = moment.utc(t).toDate()\n            const displayTime = moment(localTime).format(\"MM/DD HH:mm\")\n            return nullvalue(editor) + \"醫師於\" + displayTime + \"更新\"\n        }\n\n        console.log(this.state.noticeData)\n\n        const fixData = this.state.noticeData.sort((a, b) => {\n            let tempTimeA = moment(a.time, 'YYYY-MM-DDThh:mm:ssZ').valueOf()\n            let tempTimeB = moment(b.time, 'YYYY-MM-DDThh:mm:ssZ').valueOf()\n            return tempTimeA < tempTimeB ? 1 : -1\n        })\n\n        const remarkcell = remarkcellRender(fixData)\n        const { TextArea } = Input;\n        return (\n            <div style={{ marginBottom: '10px' }}>\n                {this.props.disableEdit\n                    ?\n                    <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                        <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>病人註記</t2>\n                    </div>\n                    :\n                    <div className='noticetitle'>\n                        <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>病人註記</t2>\n                        {this.renderEditButton()}\n                    </div>}\n                <div className='noticecontextborder'>\n                    {remarkcell}\n                </div>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", backgroundColor: \"rgba(238,238,238,1)\" }}>\n                        <TextArea id=\"noticeContent\" placeholder=\"輸入當日註記內容\" value={this.state.inputContent} onChange={this.onInputChange} autoSize={true}></TextArea>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Notice\n","import React, { Component } from \"react\";\nimport { Labwarningvalue } from \"../../Function/Wardstate\";\nimport moment from \"moment\";\nimport { Tooltip } from \"antd\";\n\nclass Labviewitem extends Component {\n  TimeRender(time) {\n    function formatTime(timevalue) {\n      if (timevalue === null || time === \"--\") {\n        return \"--\"\n      }\n      return moment(time.ORRESDT.toString().trim() + time.ORRESTM.toString().trim(), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD\")\n    }\n    function formatTimeToolTip(timevalue) {\n      if (timevalue === null || time === \"--\") {\n        return \"--\"\n      }\n      return moment(time.ORRESDT.toString().trim() + time.ORRESTM.toString().trim(), \"YYYY-MM-DDHH.mm.ss\").format(\"HH:mm\")\n    }\n    // console.log(time)\n    if (time === null || time === \"--\") {\n      return (\n        <centerstyle>\n          {\"--\"}\n        </centerstyle>\n      )\n    }\n    return (\n      <centerstyle>\n        <Tooltip placement=\"bottom\" title={formatTimeToolTip(time)}>\n          {formatTime(time)}\n        </Tooltip>\n      </centerstyle>\n    );\n  }\n\n  fixtitle = title => {\n    switch (title) {\n      case \"Seg\":\n      case \"Lymp\":\n        return (\n          <div>\n            <t3>{title}</t3>\n            <t3 style={{ fontSize: \"10px\" }}>%</t3>\n          </div>\n        );\n      case \"Na\":\n        return (\n          <div>\n            <t3>{\"Na\"}</t3>\n            <sup>+</sup>\n          </div>\n        );\n      case \"K\":\n        return (\n          <div>\n            <t3>{\"K\"}</t3>\n            <sup>+</sup>\n          </div>\n        );\n      case \"Ca\":\n        return (\n          <div>\n            <t3>{\"Ca\"}</t3>\n            <sup>2+</sup>\n          </div>\n        );\n      case \"Mg\":\n        return (\n          <div>\n            <t3>{title}</t3>\n            <sup>2+</sup>\n          </div>\n        );\n      case \"PCO\":\n        return (\n          <div>\n            <t3>{title}</t3>\n            <sub>2</sub>\n          </div>\n        );\n      case \"PO\":\n        return (\n          <div>\n            <t3>{title}</t3>\n            <sub>2</sub>\n          </div>\n        );\n      default:\n        break;\n    }\n    return title;\n  };\n\n  render() {\n    function formatValue(value, title) {\n      if (title === \"FeSat\") {\n        if (value === \"--\") {\n          return \"--\"\n        }\n        return value + \"%\"\n      }\n      return value\n    }\n    function RowsGrid(source) {\n      if (source === \"Wardview\") {\n        return \"1fr 1fr 1fr\";\n      }\n      return \"1fr 1fr 1fr\";\n    }\n    function RowsHeight(source) {\n      if (source === \"Wardview\") {\n        return \"80px\";\n      }\n      return \"80px\";\n    }\n\n    const { value, title, time, Source } = this.props;\n    // console.log(time)\n    const timeCell = this.TimeRender(time)\n    const fixtitle = this.fixtitle(title);\n    return (\n      <div style={{\n        display: \"grid\",\n        gridTemplateRows: RowsGrid(Source),\n        height: RowsHeight(Source)\n      }}>\n        <centerstyle>\n          {/* <t3>{title}</t3> */}\n          {fixtitle}\n        </centerstyle>\n        <centerstyle>\n          <t2\n            style={{\n              fontSize: \"20px\",\n              color: Labwarningvalue(value, title) ? \"black\" : \"red\"\n            }}\n          >\n            {formatValue(value, title)}\n          </t2>\n        </centerstyle>\n        {timeCell}\n      </div>\n    );\n  }\n}\n\nexport default Labviewitem;\n","import React from 'react'\nimport moment from 'moment';\nexport function firstarea_Reg_IO() {\n    return [\"輸液\"];\n}\n\nexport function Secondarea_reg_IO() {\n    return [\"血品\"];\n}\n\nexport function Thirdarea_reg_IO() {\n    return [\"進食\"];\n}\n\nexport function Fourtharea_reg_IO() {\n    return [\"失血\", \"滲液\", \"嘔吐\", \"引流\", \"穿刺\", \"透析\", \"沖洗\", \"排便\", \"排尿\"];\n}\n\n\n\nexport function Feedarea_Reg_IO() {\n    return [\"進食\"];\n}\n\nexport function IVarea_reg_IO() {\n    return [\"血品\", \"輸液\"];\n}\n\nexport function UOarea_reg_IO() {\n    return [\"排尿\"];\n}\n\nexport function Otherarea_reg_IO() {\n    return [\"失血\", \"滲液\", \"嘔吐\", \"引流\", \"穿刺\", \"透析\", \"沖洗\", \"排便\"];\n}\n\nexport function Select_Main_Doc(DOCLIST) {\n    const MainDoc = DOCLIST.filter(function (value, index, array) {\n        return value.PDTYPE === \"B\"\n    })\n    if (MainDoc.length === 0) {\n        return \"\"\n    }\n    else {\n        const data = MainDoc[0]\n        return data.PDDOCNMC\n    }\n}\n\nexport function SumFeedDataMapReduce(arr) {\n    const sumlist = arr.map(function (value, index) {\n        return Number(value.inp_val2)\n    })\n    var sum = 0\n    for (let index = 0; index < sumlist.length; index++) {\n        const element = sumlist[index];\n        sum = sum + element\n    }\n    return sum\n}\n\nexport function SumIVDataMapReduce(arr) {\n    const sumlist = arr.map(function (value, index) {\n        return Number(value.inp_val1)\n    })\n    var sum = 0\n    for (let index = 0; index < sumlist.length; index++) {\n        const element = sumlist[index];\n        sum = sum + element\n    }\n    return sum\n}\n\nexport function SumUrineDataMapReduce(arr) {\n    const sumlist = arr.map(function (value, index) {\n        return Number(value.inp_val1)\n    })\n    var sum = 0\n    for (let index = 0; index < sumlist.length; index++) {\n        const element = sumlist[index];\n        sum = sum + element\n    }\n    return sum\n}\nexport function SumInOtherDataMapReduce(arr) {\n    return arr.map(el => Number(el.inp_val1)).reduce((a, b) => a + b);\n}\nexport function SumOutOtherDataMapReduce(arr) {\n    return arr.map(el => Number(el.out_val1)).reduce((a, b) => a + b);\n}\n\n\n\n//累積報告\n\nexport function ListForTime(arr, time) {\n    var DataList = []\n    const pickerTime = time + (24 * 60 * 60 * 1000)\n    for (let index = 0; index < arr.length; index++) {\n        const element = arr[index];\n        const objectTime = moment(element.ORRESDT.toString().trim() + element.ORRESTM.toString().trim(), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n        if (objectTime <= pickerTime) {\n            DataList.push(element)\n        }\n    }\n    return DataList\n}\n\nexport function ListForTimeAndTarget(arr, time, target) {\n    var DataList = []\n    arr.forEach(element => {\n        const parseTimestamp = new Date(element.ORRCPDT.split(\"-\")[0], element.ORRCPDT.split(\"-\")[1], element.ORRCPDT.split(\"-\")[2]).getTime()\n        // const nowTimestamp = new Date(time).getTime()\n        if (parseTimestamp <= new Date(time).getTime() && element.ORPROCED.indexOf(target) > -1) {\n            DataList.push(element)\n        }\n    })\n    return DataList\n}\n\nexport function CaRegString(ressectobject) {\n    var select = []\n    if (Array.isArray(ressectobject)) {\n        for (let index = 0; index < ressectobject.length; index++) {\n            const element = ressectobject[index];\n            const elementstring = element.ORPROCED.toString()\n            if (elementstring.match(\"Ca++, free\") !== null) {\n                select.push(element)\n            }\n        }\n    }\n    if (select.length === 0) {\n        return \"null\"\n    }\n\n}\n\nexport function QSPERegList(qspe) {\n    function SettingValue(mode, value) {\n        if (value === undefined || value === null) {\n            return \"\"\n        }\n        const valueList = value.split(\"/\")\n        if (mode === 'NC') {\n            return (<div>Flow:{valueList[0]}L/min</div>)\n        }\n        if (mode === 'HF') {\n            return (<div style={{ display: \"inline\" }}>FiO<sub>2</sub>:{valueList[0]}% ,PEEP:{valueList[1]}cmH<sub>2</sub>O</div>)\n        }\n        if (mode === 'UW' || mode === 'bcpap' || mode === 'CPAP') {\n            return (<div style={{ display: \"inline\" }}>FiO<sub>2</sub>:{valueList[0]}% ,PEEP:{valueList[1]}cmH<sub>2</sub>O</div>)\n        }\n        if (mode === 'NIPPV' || mode.match(\"PC\") !== null) {\n            // return (<sub>123</sub>)\n            return (<div style={{ display: \"inline\" }}>FiO<sub>2</sub>:{valueList[0]}% ,Rate:{valueList[1]}/min ,PIP:{valueList[2]}mmH<sub>2</sub>O ,PEEP:{valueList[3]}cmH<sub>2</sub>O</div>)\n        }\n        if (mode.match(\"HFOV\") !== null) {\n            return (<div style={{ display: \"inline\" }}>FiO<sub>2</sub>:{valueList[0]}% ,Amp:{valueList[1]}cmH<sub>2</sub>O ,MAP:{valueList[2]}cmH<sub>2</sub>O ,Freq:{valueList[3]}Hz</div>)\n        }\n        if (mode.match(\"HFPPV\") !== null) {\n            return (<div style={{ display: \"inline\" }}>FiO<sub>2</sub>:{valueList[0]}% ,Rate:{valueList[1]}/min ,PIP:{valueList[2]}mmH<sub>2</sub>O ,PEEP:{valueList[3]}cmH<sub>2</sub>O\"</div>)\n        }\n        return value\n    }\n\n    var qspearray = []\n    if (Array.isArray(qspe)) {\n        for (let index = 0; index < qspe.length; index++) {\n            const element = qspe[index];\n            if (element !== undefined) {\n                const SelectElement = element.special.toString()\n                if (SelectElement.match(\"@v\") !== null) {\n                    const DataArray = SelectElement.split(\" \")\n                    const title = DataArray[1]\n                    const value = DataArray[2]\n                    const DataJson = {\n                        \"Mode\": title,\n                        \"Setting\": SettingValue(title, value),\n                        \"Date\": element.rec_dat.toString().trim(),\n                        \"Time\": element.rec_tim,\n                    }\n                    qspearray.push(DataJson)\n                }\n            }\n        }\n    }\n    return qspearray\n}\n\nexport function QSPESetting(qspesettingarray) {\n    const regString = qspesettingarray.Mode\n    const regValue = qspesettingarray.Setting.split(\"/\")\n    if (regString.match(\"RA\") !== null) {\n        return \"\"\n    }\n    if (regString.match(\"NC\") !== null) {\n        return \"Flow:\" + regValue[0]\n    }\n    if (regString.match(\"UW\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/PEEP:\" + regValue[1]\n    }\n    if (regString.match(\"bcpap\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/PEEP:\" + regValue[1]\n    }\n    if (regString.match(\"CPAP\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/PEEP:\" + regValue[1]\n    }\n    if (regString.match(\"NIPPV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Rate:\" + regValue[1] + \"/PIP:\" + regValue[2] + \"/PEEP:\" + regValue[3]\n    }\n    if (regString.match(\"HFOV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Rate:\" + regValue[1] + \"/PIP:\" + regValue[2] + \"/PEEP:\" + regValue[3]\n    }\n    if (regString.match(\"HFOV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Amp:\" + regValue[1] + \"/MAP:\" + regValue[2] + \"/Freq:\" + regValue[3]\n    }\n    if (regString.match(\"HFPPV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Rate:\" + regValue[1] + \"/PIP:\" + regValue[2] + \"/PEEP:\" + regValue[3]\n    }\n    return qspesettingarray.value\n}\n","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport './Wardcardvitalsign.scss';\nimport { mmddformat } from '../Function/Timeformat'\nimport * as ApiProvider from '../API/ApiProvider'\nimport moment from 'moment';\n\n\n\nclass WardcardvitalsignChart extends Component {\n    state = {\n        sourcedata: [],\n        preHID: null\n    }\n    componentDidUpdate() {\n        const { HISID } = this.props\n        const HID = HISID.toString().trim()\n        const preHID = this.state.preHID\n        if (HID !== preHID) {\n            this.setState({ preHID: HISID.toString().trim() })\n            this.getCenterMonitor()\n        }\n\n    }\n    componentDidMount() {\n        const { HISID } = this.props\n        this.setState({ preHID: HISID.toString().trim() })\n        this.getCenterMonitor()\n    }\n\n    getCenterMonitor() {\n        function selectType(type) {\n            switch (type) {\n                case \"div_hr\":\n                    return \"hr\"\n                case \"div_bp\":\n                    return \"nbp\"\n                case \"div_rr\":\n                    return \"rr\"\n                case \"div_spo\":\n                    return \"spo2\"\n                case \"div_abp\":\n                    return \"abp\"\n                case \"div_bt\":\n                    return \"bt\"\n                default:\n                    break;\n            }\n        }\n        // const simdata = vitalData.simdata\n        const endTime = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").format(\"YYYYMMDDHHmmss\");\n        const startTime = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf() - (24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\");\n        const { id_key, HISID } = this.props\n        const HID = HISID.toString().trim()\n        const type = selectType(id_key)\n        if (id_key === \"div_abp\") {\n            ApiProvider.getPatientwardvalueBoxPlot(HID, startTime, endTime, type, 0)\n                .then(data => {\n                    this.setState({\n                        sourcedata: data.data\n                    })\n                    this.drawChart()\n                })\n                .catch(err => { console.log(err) })\n        }\n        if (id_key === \"div_hr\" || id_key === \"div_rr\" || id_key === \"div_spo\") {\n\n            ApiProvider.getPatientwardvalueBoxPlot(HID, startTime, endTime, type, 0)\n                .then(data => {\n                    this.setState({\n                        sourcedata: data.data\n                    })\n                    this.drawChart()\n                })\n                .catch(err => { console.log(err) })\n        }\n        if (id_key === \"div_bp\") {\n\n            ApiProvider.getVitalSignData(HID, startTime, endTime, type)\n                .then(data => {\n                    this.setState({\n                        sourcedata: data.data\n                    })\n                    this.drawChart()\n                })\n                .catch(err => {\n                    console.log(err);\n                })\n        }\n        if (id_key === \"div_bt\") {\n            d3.select(\"#svg_bt\").remove()\n            this.drawChart([]);\n        }\n    }\n    cal_svg_hight() {\n        const { axisTop, axisBot } = this.props\n        if (axisTop) {\n            if (axisBot) {\n                return 160\n            }\n            else {\n                return 145\n            }\n        }\n        else {\n            if (axisBot) {\n                return 100\n            }\n            else {\n                return 90\n            }\n        }\n    }\n\n    cal_svg_transform() {\n        const { axisTop, axisBot } = this.props\n        if (axisTop) {\n            if (axisBot) {\n                return 70\n            }\n            else {\n                return 50\n            }\n        }\n        else {\n            if (axisBot) {\n                return 20\n            }\n            else {\n                return 10\n            }\n        }\n    }\n\n    drawChart() {\n        function multiFormat(date, i, n) {\n            if ((n.length - 1) == i) {\n                return \"現在\"\n            }\n            if (formatHour(date) % 4 === 0) {\n                return formatHour(date)\n            }\n            else return null\n        }\n        function multibotformat(date) {\n            if (new Date(date).getHours() === 0) {\n                return mmddformat(date)\n            }\n            else return null\n        }\n        const { svg_key, circlrcolor, axisTop, id_key, axisBot, MAX, MIN, Upper, Lower } = this.props\n        const width = window.screen.availWidth * 0.25, height = 70, transformmargin = this.cal_svg_transform(), margin = 20\n        // const borderwidth = width / 27\n        const time_now = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf()\n        const startTime = time_now - (24 * 60 * 60 * 1000);\n\n        var time_array = []\n        var time_axis_array = []\n        for (let index = 0; index < 25; index++) {\n            time_array.push({ key: \"time\", x_axis_time: time_now - index * 60 * 60 * 1000 })\n            time_axis_array.push(time_now - index * 60 * 60 * 1000)\n        }\n        var time_array_reverse = time_array.reverse()\n        var time_axis_array_reverse = time_axis_array.reverse()\n        var formatHour = d3.timeFormat(\"%H\")\n\n        // const endTime = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf();\n\n\n        var x = d3.scaleLinear()\n            .domain([time_array_reverse[0].x_axis_time, time_array_reverse[24].x_axis_time])\n            .range([0, width - 40]);\n\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([MIN, MAX])\n            .range([height, 0])\n\n        var yAxis = d3.axisLeft(y)\n            .tickValues([MIN, MAX])\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(10);\n\n        var xAxisTop = d3.axisTop(x)\n            .tickValues(time_axis_array_reverse)\n            .tickSize(0, 0)\n            .tickPadding(margin + 15)\n            .tickFormat(function (d) { return multibotformat(d); });\n\n        var xAxis = d3.axisTop(x)\n            .tickValues(time_axis_array_reverse)\n            .tickSize(0, 0)\n            .tickPadding(margin)\n            .tickFormat(function (d, i, n) { return multiFormat(d, i, n); });\n\n        d3.select(\"#\" + svg_key).remove()\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_key)\n            .attr(\"viewBox\", [0, 0, width, this.cal_svg_hight()])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 30 + \",\" + transformmargin + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n        if (axisTop) {\n            svg.append(\"g\")\n                .call(xAxis)\n                .attr(\"class\", \"axis\");\n\n            svg.append(\"g\")\n                .call(xAxisTop)\n                .attr(\"class\", \"axis\");\n        }\n\n        // if (axisBot) {\n        //     svg.append(\"g\")\n        //         .call(xAxisBottom)\n        //         .attr(\"class\", \"axis\");\n        // }\n\n        //上下虛線\n        svg.append('line')\n            .attr('x1', 0)\n            .attr('y1', y(MAX))\n            .attr('x2', width)\n            .attr('y2', y(MAX))\n            .style('stroke', '#E0E0E0')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n        svg.append('line')\n            .attr('x1', 0)\n            .attr('y1', y(MIN))\n            .attr('x2', width)\n            .attr('y2', y(MIN))\n            .style('stroke', '#E0E0E0')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n\n        for (let index = 0; index < time_array_reverse.length; index++) {\n            svg.append('line')\n                .attr('x1', x(time_array_reverse[index].x_axis_time))\n                .attr('y1', 0)\n                .attr('x2', x(time_array_reverse[index].x_axis_time))\n                .attr('y2', height)\n                .style('stroke', '#E0E0E0')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n        }\n\n\n\n        drawshadow(startTime, 0, Lower, Upper)\n        function drawshadow(startTime, interval, lower, upper) {\n            const LimitBoxTimer = formatBox(startTime, interval, width)\n            for (let index = 0; index < LimitBoxTimer.length; index++) {\n                const boxwidth = formatBoxWidth(width, interval)\n                const element = LimitBoxTimer[index];\n                svg.append('line')\n                    .attr('x1', x(element))\n                    .attr('y1', y(lower))\n                    .attr('x2', x(element))\n                    .attr('y2', y(upper))\n                    .style('stroke', circlrcolor)\n                    .style('opacity', 0.7)\n                    .style('stroke-width', boxwidth)\n\n                if (id_key === \"div_bp\" || id_key === \"div_abp\") {\n                    svg.append('line')\n                        .attr('x1', x(element))\n                        .attr('y1', y(35))\n                        .attr('x2', x(element))\n                        .attr('y2', y(55))\n                        .style('stroke', circlrcolor)\n                        .style('opacity', 0.3)\n                        .style('stroke-width', boxwidth)\n                }\n            }\n        }\n        function formatBox(startTime, interval) {\n            function interFormat(startTime, interval) {\n                var TimeArray = []\n                for (let index = 0; index < interval; index++) {\n                    if (interval === 24) {\n                        const boxTime = startTime + (30 * 60 * 1000) + (index * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 18) {\n                        const boxTime = startTime + (2 * 60 * 60 * 60 * 1000) + (index * 4 * 60 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 21) {\n                        const boxTime = startTime + (4 * 60 * 60 * 60 * 1000) + (index * 8 * 60 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else {\n                        const boxTime = startTime + (12 * 60 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                }\n                return TimeArray\n            }\n            if (interval === 0) {\n                return interFormat(startTime, 24)\n            }\n            if (interval === 1) {\n                return interFormat(startTime, 18)\n            }\n            if (interval === 2) {\n                return interFormat(startTime, 21)\n            }\n            return interFormat(startTime, 14)\n        }\n        function formatBoxWidth(viewwidth, interval) {\n            if (interval === 0) {\n                return viewwidth / 26.5\n            }\n            if (interval === 1) {\n                return viewwidth / 18\n            }\n            if (interval === 2) {\n                return viewwidth / 21\n            }\n            return viewwidth / 14\n        }\n        // var sim_data = this.state.sourcedata\n        const BoxPlotData = this.state.sourcedata\n        console.log(id_key, BoxPlotData)\n        if (BoxPlotData.length === 0) {\n            return null\n        }\n\n        if (id_key === \"div_abp\") {\n            const dataAbps = BoxPlotData.abps\n            const dataAbpd = BoxPlotData.abpd\n            const boxwidth = 10\n            for (let index = 0; index < dataAbpd.length; index++) {\n                const element = dataAbpd[index];\n                const q1 = element.Q1\n                const q2 = element.Q2\n                const q3 = element.Q3\n                const q4 = element.Q4\n                const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                svg.append(\"line\")\n                    .attr(\"x1\", x(Xtime))\n                    .attr(\"x2\", x(Xtime))\n                    .attr(\"y1\", y(q1))\n                    .attr(\"y2\", y(q4))\n                    .attr(\"stroke\", circlrcolor)\n                    .style('opacity', 0.5)\n                    // .attr(\"stroke\", \"blcak\")\n                    .style('stroke-width', 1)\n\n                svg.append(\"rect\")\n                    .attr(\"x\", x(Xtime) - boxwidth / 2)\n                    .attr(\"y\", y(q3))\n                    .attr(\"height\", (y(q2) - y(q3)))\n                    .attr(\"width\", boxwidth)\n                    .attr(\"stroke\", circlrcolor)\n                    .style('opacity', 0.5)\n                    .style(\"fill\", \"rgba(255,255,255,1)\")\n                    .style('stroke-width', 1);\n\n                svg\n                    .selectAll(\"toto\")\n                    .data([q1, q4])\n                    .enter()\n                    .append(\"line\")\n                    .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                    .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                    .attr(\"y1\", function (d) { return (y(d)) })\n                    .attr(\"y2\", function (d) { return (y(d)) })\n                    .attr(\"stroke\", circlrcolor)\n                    .style('opacity', 0.5)\n                    .style('stroke-width', 1);\n            }\n            for (let index = 0; index < dataAbps.length; index++) {\n                const element = dataAbps[index];\n                const q1 = element.Q1\n                const q2 = element.Q2\n                const q3 = element.Q3\n                const q4 = element.Q4\n                const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                svg.append(\"line\")\n                    .attr(\"x1\", x(Xtime))\n                    .attr(\"x2\", x(Xtime))\n                    .attr(\"y1\", y(q1))\n                    .attr(\"y2\", y(q4))\n                    .attr(\"stroke\", circlrcolor)\n                    // .attr(\"stroke\", \"blcak\")\n                    .style('stroke-width', 1)\n\n                svg.append(\"rect\")\n                    .attr(\"x\", x(Xtime) - boxwidth / 2)\n                    .attr(\"y\", y(q3))\n                    .attr(\"height\", (y(q2) - y(q3)))\n                    .attr(\"width\", boxwidth)\n                    .attr(\"stroke\", circlrcolor)\n                    .style(\"fill\", \"rgba(255,255,255,1)\")\n                    .style('stroke-width', 1);\n\n                svg\n                    .selectAll(\"toto\")\n                    .data([q1, q4])\n                    .enter()\n                    .append(\"line\")\n                    .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                    .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                    .attr(\"y1\", function (d) { return (y(d)) })\n                    .attr(\"y2\", function (d) { return (y(d)) })\n                    .attr(\"stroke\", circlrcolor)\n                    .style('stroke-width', 1);\n            }\n        }\n        if (id_key === \"div_bp\") {\n            for (let index = 0; index < BoxPlotData.length; index++) {\n                const element = BoxPlotData[index];\n                const Xtime = moment(element.Time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                const SBP = element.SBP\n                const DBP = element.DBP\n                if (SBP === 0 || DBP === 0) {\n                    continue\n                }\n                svg.append('circle')\n                    .attr('cx', x(Xtime))\n                    .attr('cy', y(SBP))\n                    .attr('r', 3)\n                    .style('fill', circlrcolor)\n\n\n                svg.append('circle')\n                    .attr('cx', x(Xtime))\n                    .attr('cy', y(DBP))\n                    .attr('r', 3)\n                    .style('opacity', 0.5)\n                    .style('fill', circlrcolor)\n            }\n        }\n        if (id_key === \"div_hr\" || id_key === \"div_rr\" || id_key === \"div_spo\" || id_key === \"div_bt\") {\n            // for (let index = 0; index < BoxPlotData.length; index++) {\n            //     const element = BoxPlotData[index];\n            //     const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + (30 * 60 * 1000)\n            //     svg.append('line')\n            //         .attr('x1', x(Xtime))\n            //         .attr('y1', y(Lower))\n            //         .attr('x2', x(Xtime))\n            //         .attr('y2', y(Upper))\n            //         .style('stroke', circlrcolor)\n            //         .style('opacity', 0.5)\n            //         // .style('stroke', 'red')\n            //         .style('stroke-width', borderwidth)\n\n            // }\n            for (let index = 0; index < BoxPlotData.length; index++) {\n                const element = BoxPlotData[index];\n                const q1 = element.Q1\n                const q2 = element.Q2\n                const q3 = element.Q3\n                const q4 = element.Q4\n                const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + (30 * 60 * 1000)\n                const boxwidth = 10\n                svg.append(\"line\")\n                    .attr(\"x1\", x(Xtime))\n                    .attr(\"x2\", x(Xtime))\n                    .attr(\"y1\", y(q1))\n                    .attr(\"y2\", y(q4))\n                    .attr(\"stroke\", circlrcolor)\n                    .style('stroke-width', 1)\n\n                svg.append(\"rect\")\n                    .attr(\"x\", x(Xtime) - boxwidth / 2)\n                    .attr(\"y\", y(q3))\n                    .attr(\"height\", (y(q2) - y(q3)))\n                    .attr(\"width\", boxwidth)\n                    .attr(\"stroke\", circlrcolor)\n                    .style(\"fill\", \"rgba(255,255,255,1)\")\n                    .style('stroke-width', 1);\n\n                svg\n                    .selectAll(\"toto\")\n                    .data([q1, q4])\n                    .enter()\n                    .append(\"line\")\n                    .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                    .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                    .attr(\"y1\", function (d) { return (y(d)) })\n                    .attr(\"y2\", function (d) { return (y(d)) })\n                    .attr(\"stroke\", circlrcolor)\n                    .style('stroke-width', 1);\n\n            }\n        }\n\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default WardcardvitalsignChart;\n","import React, { Component } from 'react';\nimport WardcardvitalsignChart from './Wardcardvitalsign'\nimport { statecolor } from '../Function/Wardstate'\n// import * as ApiProvider from '../API/ApiProvider'\nimport './Wardchart.scss'\n// import moment from 'moment';\n\n\n\nclass WardChart extends Component {\n    state = {\n        data: [],\n        pbStatus: true\n    }\n\n    changePb = () => {\n        this.setState({\n            pbStatus: false\n        })\n    }\n\n    decidePB = (hr, nbpd, abpd) => {\n        const status = this.state.pbStatus\n        if (status) {\n            hr > 160 || hr < 100 && this.changePb()\n            nbpd > 75 || nbpd < 55 && this.changePb()\n            abpd > 75 || abpd < 55 && this.changePb()\n        }\n    }\n\n    render() {\n        function valueFormat(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"--\"\n            }\n            return value\n        }\n        const data = this.state.data\n        const { CMvalue, HISID } = this.props\n        const vitalvalue = CMvalue\n        if (vitalvalue === undefined || vitalvalue === null) {\n            return null\n        }\n\n        this.decidePB(vitalvalue.hr, vitalvalue.nbpd, vitalvalue.abpd)\n\n        function limitValue(value, upper, lower) {\n            if (value > upper || value < lower) {\n                return false\n            }\n            return true\n        }\n\n        const status = this.state.pbStatus\n        return (\n            <div className='Wardchartlayout'>\n                <div className='halfwardchart'>\n                    <div className='singlewardchart'>\n                        <div className='firstRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"90px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: status ? \"white\" : statecolor('HR') }}>\n                                <centerstyle>\n                                    <t3 style={{ color: status ? statecolor('HR') : \"white\" }}>HR(min)</t3>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"30px\", lineHeight: \"44px\", paddingRight: \"3px\", color: status ? statecolor('HR') : \"white\" }}>{valueFormat(vitalvalue.hr)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <div className='secondRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"90px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: status ? \"white\" : statecolor('BP') }}>\n                                <centerstyle>\n                                    <t3 style={{ color: status ? statecolor('BP') : \"white\" }}>NBP(mmHg)</t3>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"30px\", lineHeight: \"34px\", color: status ? statecolor('BP') : \"white\" }}>{valueFormat(vitalvalue.nbps)}/{valueFormat(vitalvalue.nbpd)}</div>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"20px\", lineHeight: \"22px\", color: status ? statecolor('BP') : \"white\" }}>({valueFormat(vitalvalue.nbpm)})</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <div className='thirdRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"90px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: status ? \"white\" : statecolor('BP') }}>\n                                <centerstyle>\n                                    <t3 style={{ color: status ? statecolor('BP') : \"white\" }}>ABP(mmHg)</t3>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"30px\", lineHeight: \"34px\", color: status ? statecolor('BP') : \"white\" }}>{valueFormat(vitalvalue.abps)}/{valueFormat(vitalvalue.abpd)}</div>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"20px\", lineHeight: \"22px\", color: status ? statecolor('BP') : \"white\" }}>({valueFormat(vitalvalue.abpm)})</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ position: \"relative\" }}>\n                        <WardcardvitalsignChart MAX={200} MIN={0} Upper={160} Lower={100} HISID={HISID} svg_key={\"svg_hr\"} id_key={\"div_hr\"} data={data} axisBot={false} axisTop={true} colorshadow={\"rgba(126, 211, 33, 0.1)\"} circlrcolor={\"#779F50\"}></WardcardvitalsignChart>\n                        <WardcardvitalsignChart MAX={100} MIN={0} Upper={75} Lower={55} HISID={HISID} svg_key={\"svg_bp\"} id_key={\"div_bp\"} data={data} data2={true} axisBot={false} axisTop={false} colorshadow={\"rgba(240, 144, 144, 0.1)\"} circlrcolor={\"#C12528\"} data_2_circlrcolor={\"rgba(240, 144, 144, 0.5)\"}></WardcardvitalsignChart>\n                        <WardcardvitalsignChart MAX={100} MIN={0} Upper={75} Lower={55} HISID={HISID} svg_key={\"svg_abp\"} id_key={\"div_abp\"} data={data} data2={true} axisBot={true} axisTop={false} colorshadow={\"rgba(240, 144, 144, 0.1)\"} circlrcolor={\"#C12528\"} data_2_circlrcolor={\"rgba(240, 144, 144, 0.5)\"}></WardcardvitalsignChart>\n                    </div>\n                </div>\n                <div className='halfwardchart'>\n                    <div className='singlewardchart'>\n                        <div className='firstRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"90px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: limitValue(vitalvalue.spo2, 100, 90) ? \"white\" : statecolor('SpO2') }}>\n                                <centerstyle>\n                                    <t3 style={{ color: limitValue(vitalvalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>\n                                        SpO\n                                        <sub >2</sub>\n                                        (%)\n                                    </t3>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"30px\", lineHeight: \"44px\", paddingRight: \"3px\", color: limitValue(vitalvalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>{valueFormat(vitalvalue.spo2)}%</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <div className='secondRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"90px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: limitValue(vitalvalue.bt, 38, 36) ? \"white\" : statecolor('BT') }}>\n                                <centerstyle>\n                                    <t3 style={{ color: limitValue(vitalvalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>BT(<sup>&ordm;</sup>C)</t3>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"30px\", lineHeight: \"44px\", paddingRight: \"3px\", color: limitValue(vitalvalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>{valueFormat(vitalvalue.bt)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <div className='thirdRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"90px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: limitValue(vitalvalue.rr, 60, 20) ? \"white\" : statecolor('RR') }}>\n                                <centerstyle>\n                                    <t3 style={{ color: limitValue(vitalvalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>RR(min)</t3>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"30px\", lineHeight: \"44px\", paddingRight: \"3px\", color: limitValue(vitalvalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>{valueFormat(vitalvalue.rr)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ position: \"relative\" }}>\n                        <WardcardvitalsignChart MAX={100} MIN={60} Upper={100} Lower={90} HISID={HISID} svg_key={\"svg_spo\"} id_key={\"div_spo\"} data={data} axisBot={false} axisTop={true} colorshadow={\"rgba(0, 183, 255, 0.1)\"} circlrcolor={\"#4773B8\"}></WardcardvitalsignChart>\n                        <WardcardvitalsignChart MAX={41} MIN={34} Upper={38} Lower={36} HISID={HISID} svg_key={\"svg_bt\"} id_key={\"div_bt\"} data={data} axisBot={false} axisTop={false} colorshadow={\"rgba(199, 162, 244,0.1)\"} circlrcolor={\"#7F3DB5\"}></WardcardvitalsignChart>\n                        <WardcardvitalsignChart MAX={100} MIN={0} Upper={60} Lower={20} HISID={HISID} svg_key={\"svg_rr\"} id_key={\"div_rr\"} data={data} axisBot={true} axisTop={false} colorshadow={\"rgba(255, 152, 0, 0.1)\"} circlrcolor={\"#DE7531\"}></WardcardvitalsignChart>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WardChart;\n","import React, { Component } from 'react';\nimport { Checkbox } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider'\n\nclass Wardinfousercheckbox extends Component {\n    state = {\n        checkboxselect: this.props.selectstate\n    }\n\n    updateOnePatientTodo() {\n        if (this.state.checkboxselect) {\n            ApiProvider.createTodo(this.props.item.caseid, this.props.item.context, this.props.item.time, this.props.item.transinno, '已完成')\n                .then(data => {\n                    console.log('updateOnePatientTodo ok ' + JSON.stringify(data))\n                })\n                .catch(err => {\n                    console.log('updateOnePatientTodo ng ' + JSON.stringify(err))\n                })\n        } else {\n            ApiProvider.createTodo(this.props.item.caseid, this.props.item.context, this.props.item.time, this.props.item.transinno, '未完成')\n                .then(data => {\n                    console.log('updateOnePatientTodo ok ' + JSON.stringify(data))\n                })\n                .catch(err => {\n                    console.log('updateOnePatientTodo ng ' + JSON.stringify(err))\n                })\n        }\n    }\n    selectchange() {\n        this.setState({\n            checkboxselect: !this.state.checkboxselect\n        }, this.updateOnePatientTodo)\n    }\n\n    render() {\n        const selectunstyle = {\n            fontSize: \"1rem\"\n        }\n        const selectstyle = {\n            textDecoration: \"line-through\", fontSize: \"1rem\"\n        }\n        return (\n            <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\" }}>\n                <Checkbox onChange={() => this.selectchange()} checked={this.state.checkboxselect} style={this.state.checkboxselect ? selectstyle : selectunstyle}>{this.props.item.context}</Checkbox>\n            </div>\n        )\n    }\n\n}\n\nexport default Wardinfousercheckbox;\n","import React, { Component } from 'react';\nimport './Patientviewinfo.scss'\nimport { Icon } from 'antd'\nimport * as Wardstate from '../Function/Wardstate'\nimport * as ApiProvider from '../API/ApiProvider'\nclass Patientinfo extends Component {\n\n    state = { preCID: null, QENT: [] };\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const CID = caseinfo.CASEID\n        this.setState({ preCID: CID })\n        this.getQENT(CID)\n    }\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const { preCID } = this.state\n        const CID = caseinfo.CASEID\n        if (CID !== preCID) {\n            this.setState({ preCID: CID })\n            this.getQENT(CID)\n\n        }\n    }\n    getQENT(CID) {\n        ApiProvider.getQENT(CID)\n            .then(data => {\n                const parsedata = Wardstate.QMNCXM2JSON(data.data)\n                this.setState({ QENT: parsedata })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQENT NG \" + JSON.stringify(err));\n            });\n    }\n    render() {\n        function fixpatientDate(data) {\n            const transdata = {\n                'cause': '住院原因',\n                'car_pho': '主要照顧者電話',\n                'care': '主要照顧者',\n                'con_1': '聯絡人1',\n                'con_p11': '聯絡人1電話',\n                'con_2': '聯絡人2',\n                'con_p21': '聯絡人2電話',\n                'dvs': '住院時生命徵象',\n                'habit': '飲食狀況',\n                'oxy': '住院時氧合評估',\n                'h_val': '住院時頭圍',\n                'b_val': '住院時胸圍',\n                'tall': '住院時身高',\n                'weight': '住院時體重'\n            }\n\n            const patientDate = []\n\n            for (let index in transdata) {\n                if (data[index] !== \"\") {\n                    patientDate.push([transdata[index], data[index]])\n                }\n            }\n\n            return patientDate\n        }\n\n        const patientDetail = fixpatientDate(this.state.QENT)\n        const patientData = patientDetail.map(element =>\n            <div className='context'>\n                <div className='title'>{element[0]} ：</div>\n                <div className='item'>{element[1]}</div>\n            </div>\n        )\n        if (this.state.preCID === null || patientDetail.length === 0) {\n            return (\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>\n                    <Icon type=\"loading\" />\n                </div>\n            );\n        }\n        return (\n            <div className='patientinfolayout'>\n                {patientData}\n            </div>\n        );\n    }\n}\n\nexport default Patientinfo\n","import React, { useState, useEffect } from \"react\";\nimport './Wardinfouser.scss'\nimport moment from 'moment'\nimport { Modal } from 'antd';\nimport * as Wardstate from '../Function/Wardstate'\nimport * as ApiProvider from '../API/ApiProvider'\n// import * as ApiGithub from '../API/ApiGithub'\nimport { gender } from '../Function/Wardbedfunction'\nimport Wardgrewchart from './Wardgrewchart'\nimport Notice from '../Patientview/Schedule/Notice'\nimport Labviewlayout from '../Patientview/CrossSectionView/Labview'\nimport WardChart from './Wardchart'\nimport Wardinfousercheckbox from './Wardunfousercheckbox'\nimport { Link } from \"react-router-dom\";\n// import * as Reg from '../Data/RegularData';\nimport Patientinfo from '../Patientview/Patientviewinfo';\nimport Wardcarstatus from './Wardcardstatus'\n\nfunction statusPersion(persionstatus, QMNC, QTWER, Birthday) {\n    console.log(persionstatus)\n    // console.log(QMNC)\n    if (persionstatus.length === 0) {\n        console.log(QMNC)\n        // console.log(\"000\" + Number(QMNC.weeks))\n        if (QMNC.length === 0) {\n            return {\n                BornWeight: undefined,\n                BornWeeks: undefined,\n                BornDays: undefined\n            }\n        }\n        const BornWeight = Wardstate.BornWeight(QTWER, Birthday)\n        const BornWeeks = Number(QMNC.weeks)\n        const BornDays = Number(QMNC.days)\n        return {\n            BornWeight: BornWeight,\n            BornWeeks: BornWeeks,\n            BornDays: BornDays\n        }\n    }\n    else {\n        const Weight = Number(persionstatus[0].bweight) * 1000\n        const BornWeeks = Number(persionstatus[0].bweek)\n        const BornDays = Number(persionstatus[0].bday)\n        return {\n            BornWeight: Weight,\n            BornWeeks: BornWeeks,\n            BornDays: BornDays\n        }\n    }\n}\n\nexport function Wardinfouser(props) {\n    const [Visible, setVisible] = useState(false);\n    const [CenterMonitorValue, SetCenterMonitorValue] = useState([])\n    const [scheduleList, SetScheduleList] = useState([]);\n    const [todoList, SetTodoList] = useState([]);\n    const [Timer, SetTimer] = useState(0);\n    const [Persionstatus, SetPersionstatus] = useState([]);\n\n    useEffect(() => {\n        const TimerID = setInterval(() => {\n            SetTimer(Timer + 1)\n        }, 5000)\n        return () => clearInterval(TimerID);\n    }, [Timer])\n\n\n    useEffect(() => {\n        const data = props.location.state.data\n        // const hisid = \"TEST1234\"\n        const hisid = data.PHISTNUM.toString()\n        ApiProvider.getHisidwardvalue(hisid)\n            .then(data => {\n                console.log(data.data)\n\n                SetCenterMonitorValue(data.data[0]);\n            })\n            .catch(err => {\n                console.log(\"Andy test getHisidwardvalue NG \" + JSON.stringify(err));\n            });\n    }, [Timer, props.location.state.data.PHISTNUM])\n\n    useEffect(() => {\n        const data = props.location.state.data\n        const HID = data.PHISTNUM.toString()\n        ApiProvider.getPersionalStatus(HID)\n            .then(data => {\n                console.log(data.data);\n                SetPersionstatus(data.data)\n            })\n            .catch(err => { console.log(err) })\n    }, [props.location.state.data.PHISTNUM])\n\n\n    useEffect(() => {\n        // \"query schedule list\"\n\n        const data = props.location.state.data\n        const source = data\n        const PLOC = source.PLOC\n        const TRANSINID = source.TRANSINID.toString()\n\n        const now = new Date();\n        const todayBegin = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n        const startTime = todayBegin.toISOString().split(\".\")[0];\n        const endTime = new Date(todayBegin.getTime() + 24 * 60 * 60 * 1000).toISOString().split(\".\")[0];\n        ApiProvider.getOnePatientSchedule(TRANSINID, startTime, endTime)\n            .then(result => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(result.data));\n                SetScheduleList(result.data);\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }, [props.location.state.data.TRANSINID]);\n\n    useEffect(() => {\n        // \"query todo list\"\n        const data = props.location.state.data\n        const source = data\n        const PLOC = source.PLOC\n        const TRANSINID = source.TRANSINID.toString()\n        ApiProvider.getOneTodo(TRANSINID, source.PCASENO.toString())\n            .then(result => {\n                console.log(\"getOneTodo OK \" + JSON.stringify(result.data));\n                SetTodoList(result.data);\n            })\n            .catch(err => {\n                console.log(\"getOneTodo NG \" + JSON.stringify(err));\n            });\n    }, [props.location.state.data.PCASENO]);\n\n    function renderScheduleItem() {\n        if (scheduleList.length === 0) {\n            return (\n                <div style={{ height: \"50px\", paddingLeft: \"15px\", display: \"flex\", alignItems: \"center\" }}>\n                    沒有排程\n                </div>\n                // <div>沒有排程</div>\n            )\n        } else {\n            let DataFormat = scheduleList.sort((a, b) => {\n                let tempTimeA = moment(a.time, \"YYYY-MM-DD[T]HH:mm:ss\").valueOf()\n                let tempTimeB = moment(b.time, \"YYYY-MM-DD[T]HH:mm:ss\").valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n\n            return DataFormat.map((item, index) => {\n                if (item.type === \"排程\") {\n                    // const rawDateStr = item.time;\n                    const time = moment(item.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n                    const localTime = moment.utc(time).toDate()\n                    const displayTimeStr = moment(localTime).format(\"MM/DD HH:mm\")\n                    return (\n                        <div key={index} style={{ height: \"50px\", display: 'grid', gridTemplateColumns: \"35% 65%\", borderBottomWidth: \"1px\", borderBottomColor: \"rgba(232, 232, 232, 1)\", borderBottomStyle: \"solid\", paddingLeft: \"15px\" }}>\n                            <div style={{ fontSize: \"1rem\", display: \"flex\", paddingLeft: \"15px\", alignItems: \"center\" }}>{displayTimeStr}</div>\n                            <div style={{ fontSize: \"1rem\", display: \"flex\", paddingLeft: \"15px\", alignItems: \"center\" }}>{item.context}</div>\n                        </div>\n                    )\n                }\n            })\n        }\n    }\n    function renderTodoItem() {\n        if (todoList.length === 0) {\n            return (\n                <div style={{ height: \"50px\", paddingLeft: \"15px\", display: \"flex\", alignItems: \"center\" }}>\n                    沒有待辦事項\n                </div>\n                // <div>沒有待辦事項</div>\n            )\n        } else {\n            return todoList.map((item, index) => {\n                if (item.type === \"未完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={false}></Wardinfousercheckbox>)\n                } else if (item.type === \"已完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={true}></Wardinfousercheckbox>)\n                }\n\n            });\n        }\n    }\n\n\n\n\n\n    function valueFormat(value) {\n        if (value === \"\" || value === null || value === undefined) {\n            return \"--\"\n        }\n        return value.toString()\n    }\n    function valueBornWeight(value) {\n        if (value === \"\" || value === null || value === undefined || value === 0) {\n            return \"\"\n        }\n        return value.toString() + \"g → \"\n    }\n\n    const data = props.location.state.data\n    const source = data\n    const Birthday = source.PBIRHDT\n    const QTWER = Wardstate.XM2JSON(source.QTWPER)\n    const QMNC = Wardstate.QMNCXM2JSON(source.QMNC)\n    const ListWeight = Wardstate.WeightList(QTWER)\n    const Weight = Wardstate.NewestWeight(QTWER)\n\n\n    const TRANSINID = source.TRANSINID\n    const TRANSINDT = source.TRANSINDT\n    const DOCLIST = source.PDOCNEW\n    const MainDoc = Wardstate.Doc(DOCLIST, \"B\")\n    const LiveDoc = Wardstate.Doc(DOCLIST, \"D\")\n    const MainNur = Wardstate.Doc(DOCLIST, \"N\")\n    const ICUMainDoc = Wardstate.Doc(DOCLIST, \"U\")\n\n    const BornWeight = statusPersion(Persionstatus, QMNC, QTWER, Birthday).BornWeight\n    const BornWeeks = statusPersion(Persionstatus, QMNC, QTWER, Birthday).BornWeeks\n    const BornDays = statusPersion(Persionstatus, QMNC, QTWER, Birthday).BornDays\n    const status = {\n        date: moment(Birthday, \"YYYYMMDD\").valueOf(),\n        week: BornWeeks,\n        day: BornDays\n    }\n    const AgeStatus = Wardstate.CalculateAge(status)\n\n    // const PBASINFO = data.PBASINFO\n    const caseinfo = {\n        \"HISID\": source.PHISTNUM.toString(),\n        \"CASEID\": source.PCASENO.toString(),\n        \"WEEK_BORN\": BornWeeks,\n        \"DAY_BORN\": BornDays,\n        \"TRANSINID\": TRANSINID,\n        \"TRANSINDT\": TRANSINDT,\n        \"WEIGHT\": QTWER,\n        \"PBASINGNINFO\": source\n    }\n\n    const grewinfo = {\n        \"WEEK_BORN\": BornWeeks,\n        \"DAY_BORN\": BornDays,\n        \"BIRTHDAY\": Birthday\n    }\n    // const patientDetail = fixpatientDate(QENT)\n    return (\n        <div className='wardinfouserlayout'>\n            <Modal\n                width={800}\n                title=\"入院時評估\"\n                visible={Visible}\n                onOk={() => setVisible(false)}\n                onCancel={() => setVisible(false)}\n                footer={null}>\n                <Patientinfo caseinfo={caseinfo}></Patientinfo>\n            </Modal>\n            <div className='wardinfopatient'>\n                <div style={{ height: '50px', display: 'grid', gridTemplateColumns: \"1fr 1fr 1fr\" }}>\n                    <Link to=\"/nicu/ward/wardindex\" style={{ alignItems: \"center\", display: \"flex\" }}>\n                        <t2 className='wardblacktoindex'>&larr;返回總覽</t2>\n                    </Link>\n                    <centerstyle>\n                        <t1 sytle={{ fontSize: \"22px\" }}>NICU-{Number(source.HBEDNO)} {source.PNAMEC.toString().trim()}</t1>\n                    </centerstyle>\n                    <Link to={{ pathname: \"/nicu/patient/\" + source.PHISTNUM.toString().trim(), state: { \"source\": null, \"HISID\": caseinfo.HISID, \"CASEID\": caseinfo.CASEID, \"BEDNUMBER\": Number(source.HBEDNO), \"TYPE\": true, \"TRANSINID\": caseinfo.TRANSINID } }} style={{ alignItems: \"center\", justifyContent: \"flex-end\", display: \"flex\" }}>\n                        <t2 className='wardblacktoindex'>進入病人資料頁面&rarr;</t2>\n                    </Link>\n                </div>\n                <div style={{ height: \"50px\" }}>\n                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <t2>病歷號:{source.PHISTNUM}</t2>\n                        <t2>性別:{gender(source.PSEX)}</t2>\n                        <t2>生日:{moment(Birthday, \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</t2>\n                        <t2>住院日:{source.TRANSINDT}</t2>\n                        <Wardcarstatus source={false} PCASENO={source.PCASENO} PHISTNUM={source.PHISTNUM}></Wardcarstatus>\n                    </div>\n                    <div style={{ display: 'flex', justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\" }}>\n                            <t3 style={{ color: \"rgba(0,0,0,0.7)\" }}>\n                                {valueFormat(BornWeeks)}+{valueFormat(BornDays)}&gt;<span style={{ fontWeight: \"900\" }}>{AgeStatus}</span>\n                            </t3>\n                            <t3 style={{ color: \"rgba(0,0,0,0.7)\", marginLeft: 60 }}>\n                                {valueBornWeight(BornWeight)}<span style={{ fontWeight: \"900\" }}>{valueFormat(Weight)}g</span>\n                            </t3>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,auto)\", gridColumnGap: \"10px\" }}>\n                            <t3>主治 {MainDoc}</t3>\n                            {MainDoc == ICUMainDoc || <t3>加護 {ICUMainDoc}</t3>}\n                            {MainDoc == LiveDoc || <t3>住院 {LiveDoc}</t3>}\n                            {MainNur == '' || <t3>NP {MainNur}</t3>}\n                            <div className='wardblacktoindex' onClick={() => setVisible(true)}>入院時評估</div>\n                        </div>\n                    </div>\n                </div>\n                <div className='wardinfousercontent'>\n                    <div style={{ padding: \"10px 15px\" }}>\n                        <WardChart HISID={source.PHISTNUM} CMvalue={CenterMonitorValue}></WardChart>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\", padding: \"0px 3px\" }}>\n                        <div style={{ borderRadius: \"4px\" }}>\n                            <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>檢驗項目</t2>\n                            </div>\n                            <Labviewlayout Source={\"Wardview\"} PickerDate={moment(moment().format('YYYYMMDD')).valueOf()} caseinfo={caseinfo}></Labviewlayout>\n                        </div>\n                        <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\", height: 446 }}>\n                            <Wardgrewchart grewinfo={grewinfo} Data={source} WeightList={ListWeight} type={true}></Wardgrewchart>\n                        </div>\n                    </div>\n                    <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\", marginTop: \"10px\", marginRight: \"3px\" }}>\n                        {<Notice caseinfo={caseinfo} disableEdit={true}></Notice>}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\", marginTop: \"10px\", paddingRight: \"3px\" }}>\n                        <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\" }}>\n                            <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>排程</t2>\n                            </div>\n                            <div style={{ maxHeight: \"200px\", overflow: 'auto', minHeight: \"50px\" }}>\n                                {renderScheduleItem()}\n                            </div>\n                        </div>\n                        <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\" }}>\n                            <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>待辦事項</t2>\n                            </div>\n                            <div style={{ maxHeight: \"200px\", overflow: 'auto', minHeight: \"50px\" }}>\n                                {renderTodoItem()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n} \n","import React, { Component } from 'react';\nimport * as antswitch from 'antd';\nimport Wardcarddetail from '../Wardcard/Wardcarddetail';\nimport Unpreviewwardcarddetail from '../Wardcard/UnpreviewWardCardDetail'\nimport Wardinfoindex from '../Wardinfoindex'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport './Bedview.scss'\nimport moment from 'moment';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport * as WardinfouserK from '../Wardinfouser-k'\n\n\nclass Bedview extends Component {\n    state = {\n        index: true,\n        previewmode: false,\n        simplemode: true,\n        SelectHISID: null,\n        source: [],\n        prePath: null\n    };\n    HBEDApiGet() {\n        ApiProvider.getTableHBED()\n            .then(data => { this.setState({ source: data.data }) })\n            .catch(err => { console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err)); });\n    }\n    componentDidMount() {\n        this.setState({ prePath: this.props.location.pathname })\n        this.HBEDApiGet();\n    }\n\n    componentDidUpdate() {\n        const path = this.props.location.pathname\n        const { prePath } = this.state\n        if (prePath !== path) {\n            this.setState({ prePath: this.props.location.pathname })\n            if (this.props.location.pathname === \"/nicu/ward/wardindex\") {\n                this.setState({ SelectHISID: null })\n            }\n        }\n    }\n\n    onWardcardDisplay() {\n        const simple_style = { display: \"grid\", gridTemplateColumns: \"350px 1fr\", gridGap: \"5px\", marginTop: \"5px\" }\n        const Unsimple_style = { display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr 1fr\", gridTemplateRows: \"1fr 1fr 1fr\", gridGap: \"5px\", marginTop: \"5px\" }\n        const source = this.state.source;\n        if (source === null || source === undefined || source.length === 0) {\n            return null\n        }\n        const wardcarddetaillist = []\n        //simplemode true:病人摘要檢視(開) false:病人摘要檢視(關)\n        //previewmode true:床頭卡顯示(繁) flase:床頭卡顯示(簡) \n        if (this.state.simplemode) {\n            for (let index = 0; index < source.length; index++) {\n                const element = source[index]\n                const string = \"/nicu/ward/wardinfo/\" + element.PHISTNUM.toString().trim()\n                if (element.PHISTNUM.toString().trim() !== \"\") {\n                    wardcarddetaillist.push(\n                        <Link to={{ pathname: string, state: { data: element } }}\n                            style={{ border: this.state.SelectHISID === element.PHISTNUM ? \"2px solid rgb(59,151,224)\" : \"2px solid rgba(59,151,224,0.4)\", borderRadius: \"4px\" }}\n                            onClick={() => { this.setState({ SelectHISID: element.PHISTNUM }) }}>\n                            <Wardcarddetail key={index} data={element} previewmode={this.state.previewmode} hbedlist={source} />\n                        </Link>\n                    )\n                }\n            }\n            return (\n                <div style={this.state.simplemode ? simple_style : Unsimple_style}>\n                    <div className='wardcardcontent'>\n                        {wardcarddetaillist}\n                    </div>\n                    <Switch>\n                        <Route path={`${this.props.match.path}/wardindex`} component={Wardinfoindex} />\n                        <Route path={`${this.props.match.path}/wardinfo`} component={WardinfouserK.Wardinfouser} />\n                    </Switch>\n                </div>\n            );\n        }\n        else {\n            for (let index = 1; index < 15; index++) {\n                const element = source.filter(function (value, i) {\n                    return Number(value.HBEDNO) === index\n                })\n                if (index === 4 || index === 13) {\n                    //沒有4號以及13號床\n                    continue\n                }\n                if (element.length === 0) {\n                    wardcarddetaillist.push(\n                        <div style={{ border: \"1px solid rgba(59, 151, 225, 1)\" }}>\n                            <Unpreviewwardcarddetail bednumber={index} key={index} previewmode={this.state.previewmode} />\n                        </div>\n                    )\n                }\n                else {\n                    if (element[0].PHISTNUM.toString().trim() === \"\") {\n                        wardcarddetaillist.push(\n                            <div style={{ border: \"1px solid rgba(59, 151, 225, 1)\" }}>\n                                <Unpreviewwardcarddetail bednumber={index} key={index} previewmode={this.state.previewmode} />\n                            </div>\n                        )\n                    }\n                    else {\n                        wardcarddetaillist.push(\n                            <div style={{ border: \"1px solid rgba(59, 151, 225, 1)\" }}>\n                                <Wardcarddetail key={index} data={element[0]} previewmode={this.state.previewmode} hbedlist={source} />\n                            </div>\n                        )\n                    }\n                }\n            }\n            return (\n                <div style={this.state.simplemode ? simple_style : Unsimple_style}>\n                    {wardcarddetaillist}\n                </div>\n            );\n        }\n    }\n\n\n\n    render() {\n        function switch_titile_string(hisid, source) {\n            function addzero(value) {\n                if (value < 10) {\n                    return \"0\" + value\n                }\n                else return value\n            }\n            if (hisid === null) {\n                return \"NICU總覽\"\n            }\n            else {\n                const filterdata = source.filter(function (item, index, array) {\n                    return item.PHISTNUM === HISID;\n                });\n                const HBEDNUMBER = addzero(parseInt(filterdata[0].HBEDNO))\n                return \"NI-\" + HBEDNUMBER + \"病人資訊摘要\"\n            }\n        }\n        const source = this.state.source\n        const HISID = this.state.SelectHISID\n        const title = switch_titile_string(HISID, source)\n        const WardCard = this.onWardcardDisplay()\n\n        return (\n            <div>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridGap: \"5px\" }}>\n                        <div style={{ height: \"40px\", display: \"flex\", alignItems: \"center\" }}>\n                            <t2 style={{ color: \"rgba(0, 0, 0, 0.85)\" }}>住院病人資訊 > {title}</t2>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: 'center', width: \"200px\" }}>\n                            <antswitch.Switch style={{ backgroundColor: this.state.previewmode === true ? \"#001a6d\" : \"rgba(0, 0, 0, 0.25)\" }} checkedChildren=\"即時生命徵象\" unCheckedChildren=\"即時生命徵象\" defaultChecked={this.state.previewmode} onChange={(checked) => { this.setState({ previewmode: checked }) }} />\n                            <antswitch.Switch style={{ backgroundColor: this.state.simplemode === true ? \"#001a6d\" : \"rgba(0, 0, 0, 0.25)\" }} checkedChildren=\"顯示摘要\" unCheckedChildren=\"顯示摘要\" defaultChecked={this.state.simplemode} onChange={(checked) => { this.setState({ simplemode: checked }) }} />\n                        </div>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto auto\", gridColumnGap: \"10px\" }}>\n                        <t3>資料更新時間</t3>\n                        <t3>{moment().format('YYYY/MM/DD HH:mm:ss')}</t3>\n                    </div>\n                </div>\n                {WardCard}\n            </div>\n        );\n    }\n}\n\nexport default Bedview;\n","import React, { Component } from 'react';\nimport { Icon, Upload, Table, Input, DatePicker, Button } from 'antd';\nimport { Link } from 'react-router-dom';\nimport * as ApiProvider from '../API/ApiProvider';\nimport moment from 'moment';\n\nclass Historyview extends Component {\n    state = {\n        MouseClick: 0,\n        allPatientDisplayData: [],\n        allPatientUnset: [],\n        allPatientSet: [],\n        selectedRowsArray: [],\n        hospitalindex: '',\n        selectedFile: null,\n        fileList: [],\n        uploading: false,\n        name: '',\n        hisid: '',\n        doctor: '',\n        transOuttime: undefined,\n        deletedisable: true,\n        selectedRowKeys: []\n    }\n\n    componentDidMount() {\n        this.onChangeName = this.onChangeName.bind(this)\n        this.onChangeHisid = this.onChangeHisid.bind(this)\n        //this.onChangeDoctor = this.onChangeDoctor.bind(this)\n        // this.onClickSearch = this.onClickSearch.bind(this)\n        this.onChangeDate = this.onChangeDate.bind(this)\n        console.log(\"Historyview componentDidMount\")\n        ApiProvider.getAllPatient()\n            .then(result => {\n                console.log(\"getAllPatient OK \" + JSON.stringify(result));\n                console.log(result.data)\n                const setedUser = result.data.filter(item => item.patient.transouttime === \"unset\");\n                const unsetUser = result.data.filter(item => item.patient.transouttime !== \"unset\");\n                console.log(unsetUser)\n                this.setState({\n                    allPatientDisplayData: setedUser,\n                    allPatientUnset: unsetUser,\n                    allPatientSet: setedUser\n                });\n            })\n            .catch(err => {\n                console.log(\"getAllPatient NG \" + JSON.stringify(err));\n            });\n    }\n\n    MouseClickTable(record) {\n        //console.log(this.state.MouseClick)\n        this.setState({\n            MouseClick: record\n        })\n    }\n\n    EditStyle(HISID, CASEID, TRANSINID, key, transouttime) {\n        const fromHistory = !this.state.deletedisable;\n        if (key === this.state.MouseClick) {\n            return (\n                <Link to={{ pathname: \"/nicu/patient/\" + HISID, state: { fromHistory, \"source\": [], \"HISID\": HISID, \"CASEID\": CASEID, \"BEDNUMBER\": 0, \"TYPE\": false, \"TRANSINID\": TRANSINID, \"transouttime\": transouttime } }} style={{ height: \"40px\", width: \"100px\", borderRadius: \"4px\" }}>檢視</Link>\n            );\n        }\n        else return null\n    }\n\n    genderswitch(key) {\n        if (key === \"M\") {\n            return '男'\n        }\n        else {\n            return '女'\n        }\n    }\n\n    bornweeks(birthday) {\n        //console.log(Math.floor(birthday / 7))\n        //console.log(birthday % 7)\n        const weeks = Math.floor(birthday / 7)\n        const days = birthday % 7\n        if (days === 0) {\n            return weeks + '週歲'\n        }\n        else return weeks + '週' + days + '天'\n    }\n\n    exportClick() {\n        this.state.selectedRowsArray.map((data, index) => {\n            ApiProvider.exportJson(data.hospitalindex)\n                .then(result => {\n                    ApiProvider.downloadFile(result.data.filename)\n                        .then(resultD => {\n                            const url = window.URL.createObjectURL(new Blob([JSON.stringify(resultD.data)]));\n                            const link = document.createElement('a');\n                            link.href = url;\n                            link.setAttribute('download', result.data.filename);\n                            document.body.appendChild(link);\n                            link.click();\n                        }).catch(err => { })\n                })\n                .catch(err => { })\n        })\n    }\n\n    handleUpload = () => {\n        const { fileList } = this.state\n        const formData = new FormData()\n        fileList.forEach(file => {\n            formData.append('file', file)\n        })\n\n        this.setState({\n            uploading: true,\n        })\n\n        ApiProvider.uploadFile(formData)\n            .then(res => {\n                ApiProvider.importJson(res.data)\n                    .then(result => {\n                        ApiProvider.getAllPatient()\n                            .then(result => {\n                                const setedUser = result.data.filter(item => item.patient.transouttime !== \"unset\");\n                                const unsetUser = result.data.filter(item => item.patient.transouttime === \"unset\");\n                                this.setState({\n                                    allPatientDisplayData: setedUser,\n                                    allPatientUnset: unsetUser,\n                                    allPatientSet: setedUser\n                                });\n                            })\n                            .catch(err => {\n                                console.log(\"getAllPatient NG \" + JSON.stringify(err));\n                            });\n                    })\n                    .catch(err => { })\n            })\n            .catch(err => { })\n    }\n\n    deleteHistoryUser() {\n        this.state.selectedRowsArray.map((data, index) => {\n            ApiProvider.deletePatient(data.hospitalindex, data.hospitalnumber, data.id)\n                .then(res => {\n                    ApiProvider.getAllPatient()\n                        .then(result => {\n                            const setedUser = result.data.filter(item => item.patient.transouttime === \"unset\");\n                            const unsetUser = result.data.filter(item => item.patient.transouttime !== \"unset\");\n                            this.setState({\n                                allPatientDisplayData: unsetUser,\n                                allPatientUnset: unsetUser,\n                                allPatientSet: setedUser,\n                                selectedRowKeys: []\n                            });\n                        })\n                        .catch(err => {\n                            console.log(\"getAllPatient NG \" + JSON.stringify(err));\n                        });\n                })\n                .catch(err => { })\n        })\n    }\n\n    onChangeName(event) { this.setState({ name: event.target.value }) }\n    onChangeHisid(event) { this.setState({ hisid: event.target.value }) }\n    onChangeDate(date, dateString) { this.setState({ transOuttime: dateString }) }\n\n    Searchbar() {\n        const InputGroup = Input.Group;\n        const { RangePicker } = DatePicker;\n\n        return (\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        病歷號碼:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"輸入病歷號碼\" onChange={this.onChangeHisid} value={this.state.hisid}></Input>\n                    </div>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <div style={{ fontSize: '16px' }}>\n                        個案姓名:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"輸入個案姓名\" onChange={this.onChangeName} value={this.state.name}></Input>\n                    </div>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        轉入時間:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        {/* <InputGroup compact> */}\n                        {/* <DatePicker placeholder=\"選擇轉出時間\" onChange={this.onChangeDate} /> */}\n                        <RangePicker getCalendarContainer={triggerNode => triggerNode.parentNode} style={{ width: \"250px\" }} format={\"YYYY/MM/DD\"} locale={\"zh_TW\"}\n                            placeholder={[\"請輸入日期\", \"請輸入日期\"]} onChange={this.onChangeDate} allowClear={false} />\n                        {/* </InputGroup> */}\n                    </div>\n                </div>\n\n                {/*<div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        主治醫生:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"選擇主治醫師\" onChange={this.onChangeDoctor} value={this.state.doctor}></Input>\n                    </div>\n        </div>*/}\n                {/* <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <Button shape=\"circle\" icon=\"search\" onClick={this.onClickSearch} />\n                </div> */}\n            </div>\n        );\n    }\n\n    handleDisplaySwitchChange(event) {\n        this.setState({\n            allPatientDisplayData: event.target.value == 'in' ? this.state.allPatientSet : this.state.allPatientUnset,\n            deletedisable: event.target.value == 'in' ? true : false\n        })\n    }\n\n\n    render() {\n        // rowSelection object indicates the need for row selection\n        const { selectedRowKeys } = this.state\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: (selectedRowKeys, selectedRows) => {\n                //console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows)\n                this.setState({\n                    selectedRowsArray: selectedRows,\n                    selectedRowKeys: selectedRowKeys\n                })\n            },\n            getCheckboxProps: record => ({\n                disabled: record.name === 'Disabled User', // Column configuration not to be checked\n                name: record.name,\n            }),\n        };\n        const columns = [\n            {\n                title: '轉出時的床號',\n                dataIndex: 'hbedno',\n                key: 'hbedno',\n                width: \"8%\"\n            },\n            {\n                title: '病歷號碼',\n                dataIndex: 'id',\n                key: 'id',\n                width: \"8%\"\n            },\n            {\n                title: '個案名稱',\n                dataIndex: 'name',\n                key: 'name',\n                width: \"8%\"\n            },\n            {\n                title: '性別',\n                dataIndex: 'gender',\n                key: 'gender',\n                width: \"6%\"\n            },\n            {\n                title: '出生體重',\n                dataIndex: 'weight',\n                key: 'weight',\n                width: \"6%\"\n            },\n            {\n                title: '出生周數',\n                dataIndex: 'birweek',\n                key: 'birweek',\n                width: \"6%\"\n            },\n            {\n                title: '轉入時年齡',\n                dataIndex: 'transinage',\n                key: 'transinage',\n                width: \"6%\"\n            },\n            {\n                title: '轉出時年齡',\n                dataIndex: 'transoutage',\n                key: 'transoutage',\n                width: \"6%\"\n            },\n            {\n                title: '院序號',\n                dataIndex: 'hospitalnumber',\n                key: 'hospitalnumber',\n                width: \"15%\"\n            },\n            {\n                title: '索引號',\n                dataIndex: 'hospitalindex',\n                key: 'hospitalindex',\n                width: \"15%\"\n            },\n            {\n                title: '轉出ICU時間',\n                dataIndex: 'transicutime',\n                key: 'transicutime',\n                width: \"9%\"\n            },\n            {\n                dataIndex: 'clickstate',\n                key: 'clickstate',\n                width: \"7%\"\n            }\n        ];\n        function search(data, searchName) {\n            if (searchName === \"\" || searchName === undefined || searchName === null) {\n                return data\n            }\n            const filterData = data.filter(function (item, index, arr) {\n                const fn = item.patient.pnamec.toString().trim()\n                return fn.indexOf(searchName) >= 0\n            })\n            return filterData\n        }\n        function searchTime(data, searchTime) {\n            if (searchTime === \"\" || searchTime === undefined || searchTime === null) {\n                return data\n            }\n            const filterData = data.filter(function (item, index, arr) {\n                // console.log(item)\n                const fn = moment(item.patient.transintime.toString().trim(), \"YYYYMMDD\").valueOf()\n                const st = moment(searchTime[0].toString().trim(), \"YYYYMMDD\").valueOf()\n                const et = moment(searchTime[1].toString().trim(), \"YYYYMMDD\").valueOf()\n                return st <= fn && fn <= et\n            })\n            return filterData\n        }\n\n        function searchNO(data, searchNO) {\n            if (searchNO === \"\" || searchNO === undefined || searchNO === null) {\n                return data\n            }\n            const filterData = data.filter(function (item, index, arr) {\n                const HID = item.patient.hisid.toString().trim()\n                return HID.match(searchNO)\n            })\n            return filterData\n        }\n        // const dataArr = this.state.allPatientDisplayData\n        // if (dataArr.length === 0) {\n        //     return null\n        // }\n        const rowData = this.state.allPatientDisplayData\n        const d = search(rowData, this.state.name)\n        const f = searchTime(d, this.state.transOuttime)\n        const H = searchNO(f, this.state.hisid)\n        if (H === undefined || H === null) { return null }\n        const data = H.map((item, index) => {\n            return {\n                key: index,\n                id: item.patient.hisid,\n                name: item.patient.pnamec,\n                gender: this.genderswitch(item.patient.psex),\n                weight: item.patientinfo.length === 0 ? \"--\" : Number(item.patientinfo[0].bweight) * 1000,\n                birweek: item.patientinfo.length === 0 ? \"--\" : item.patientinfo[0].bweek + \"週\" + item.patientinfo[0].bday + '天',\n                transage: \"--\",\n                hospitalnumber: item.patient.caseid,\n                hospitalindex: item.patient.transinid,\n                transicutime: item.patient.transouttime,\n                maindoc: \"--\",\n                clickstate: this.EditStyle(item.patient.hisid, item.patient.caseid, item.patient.transinid, index, item.patient.transouttime)\n            }\n        });\n\n        const { uploading, fileList } = this.state;\n        const props = {\n            onRemove: file => {\n                this.setState(state => {\n                    const index = state.fileList.indexOf(file);\n                    const newFileList = state.fileList.slice();\n                    newFileList.splice(index, 1);\n                    return {\n                        fileList: newFileList,\n                    };\n                });\n            },\n            beforeUpload: file => {\n                this.setState(state => ({\n                    fileList: [...state.fileList, file],\n                }));\n                return false;\n            },\n            fileList,\n            showUploadList: false\n        };\n\n        return (\n            <div style={{ paddingLeft: \"24px\", paddingRight: \"24px\" }}>\n\n                <div style={{ display: \"flex\", marginLeft: \"20px\", alignItems: 'center' }}>\n                    <div style={{ fontSize: \"22px\", height: '50px', lineHeight: \"50px\", marginRight: 10 }}>\n                        歷史病歷管理\n                </div>\n                    <div value=\"in\" className={this.state.deletedisable ? \"vitalBtnSource\" : \"vitalBtnSelectSource\"} style={{ marginRight: 5 }} onClick={() => { this.handleDisplaySwitchChange({ target: { value: 'in' } }) }}>\n                        住院中\n                    </div>\n                    <div value=\"out\" className={!this.state.deletedisable ? \"vitalBtnSource\" : \"vitalBtnSelectSource\"} onClick={() => { this.handleDisplaySwitchChange({ target: { value: 'out' } }) }}>\n                        已轉出\n                     </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\", height: '50px', gridColumnGap: \"10px\" }}>\n                    {this.Searchbar()}\n                    {this.state.deletedisable == false ? <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gridGap: \"10px\", marginRight: this.state.deletedisable == false ? 0 : -200 }}>\n                        <div style={{ display: \"flex\", justifyContent: 'space-between', alignItems: \"center\" }}>\n                            <Upload {...props}>\n                                <Button style={{ width: \"100%\" }}>\n                                    <Icon type=\"upload\" /> 選擇檔案\n                                </Button>\n                            </Upload>\n                            <Button\n                                onClick={this.handleUpload.bind(this)}\n                                disabled={fileList.length === 0}\n                                style={{ width: \"100%\" }}\n                            >\n                                匯入\n                            </Button>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                            <Button onClick={this.exportClick.bind(this)} style={{ width: \"100%\" }}>匯出</Button>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                            <Button onClick={this.deleteHistoryUser.bind(this)} style={{ width: \"100%\" }}>刪除</Button>\n                        </div>\n                    </div> : null}\n                </div>\n                <div>\n                    <Table rowSelection={rowSelection} columns={columns} dataSource={data} onRow={record => {\n                        return {\n                            onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                            onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                        };\n                    }} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Historyview;\n","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport './Crosssectionvitalsignchart.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport X2JS from 'x2js';\n\nclass Crosssectionvitalsignchart extends Component {\n    state = {\n        change: false,\n        sourcedata: [],\n        prepickerdate: null,\n        presource: null,\n        preinterval: null,\n        prewidth: null,\n    }\n\n    centermonitorApiDataGet() {\n        function formatTimer(interval, pickerdate) {\n            const endTimeStamp = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    start: moment(endTimeStamp - (24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                    interval: 0\n                }\n            }\n            if (interval === 1) {\n                return {\n                    start: moment(endTimeStamp - (3 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                    interval: 1\n                }\n            }\n            if (interval === 2) {\n                return {\n                    start: moment(endTimeStamp - (7 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                    interval: 2\n                }\n            }\n            return {\n                start: moment(endTimeStamp - (14 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                interval: 3\n            }\n        }\n        function formatPickerDate(PickerDate) {\n            const nowDateForSeven = moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf() + (7 * 60 * 60 * 1000)\n            const newDateForZero = moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n            const now = moment().valueOf()\n            if (PickerDate === newDateForZero) {\n                if (now < nowDateForSeven) {\n                    return PickerDate - (24 * 60 * 60 * 1000)\n                }\n                return PickerDate\n            }\n            return PickerDate\n        }\n        const { type, interval, PickerDate, HID, source, CID, svg_id } = this.props\n        const PHID = HID.toString().trim()\n        const PCID = CID.toString().trim()\n        const forPicker = formatPickerDate(PickerDate)\n        const optionvalue = formatTimer(interval, forPicker)\n        if (source === \"CM\") {\n            if (type === \"abp\") {\n                ApiProvider.getPatientwardvalueBoxPlot(PHID, optionvalue.start, optionvalue.end, type, optionvalue.interval)\n                    .then(data => {\n                        d3.select(\"#\" + svg_id).remove()\n                        this.drawChart(data.data);\n                    })\n                    .catch(err => { console.log(err) })\n            }\n            if (type === \"hr\" || type === \"rr\" || type === \"spo2\") {\n                ApiProvider.getPatientwardvalueBoxPlot(PHID, optionvalue.start, optionvalue.end, type, optionvalue.interval)\n                    .then(data => {\n                        d3.select(\"#\" + svg_id).remove()\n                        this.drawChart(data.data);\n                    })\n                    .catch(err => { console.log(err) })\n            }\n            if (type === \"nbp\") {\n                ApiProvider.getVitalSignData(PHID, optionvalue.start, optionvalue.end, type)\n                    .then(data => {\n                        d3.select(\"#\" + svg_id).remove()\n                        this.drawChart(data.data);\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    })\n            }\n            if (type === \"bt\") {\n                d3.select(\"#\" + svg_id).remove()\n                this.drawChart([]);\n            }\n        }\n        if (source === \"NIS\") {\n            const xm2 = new X2JS()\n            const st = moment(optionvalue.start, \"YYYYMMDDHHmmss\").format(\"YYYYMMDDHHmm\")\n            const et = moment(optionvalue.end, \"YYYYMMDDHHmmss\").format(\"YYYYMMDDHHmm\")\n            const QDVS = ApiProvider.getQDVS(PCID, st, et)\n                .then(data => {\n                    return xm2.xml2js(data.data).outmsg.resconts.rescont\n                })\n                .catch(err => { console.log(err) })\n\n            const QOXY = ApiProvider.getQOXY(PCID, st, et)\n                .then(data => {\n                    return xm2.xml2js(data.data).outmsg.resconts.rescont\n\n                })\n                .catch(err => { console.log(err) })\n            Promise.all([QDVS, QOXY]).then(result => {\n                function FormatNISData(QDVS, QOXY, type) {\n                    var HRNISLIST = []\n                    var RRNISLIST = []\n                    var SBPNISLIST = []\n                    var DBPNISLIST = []\n                    var BTNISLIST = []\n                    var Spo2NISLIST = []\n                    if (Array.isArray(QDVS)) {\n                        for (let index = 0; index < QDVS.length; index++) {\n                            const element = QDVS[index];\n                            const hr = element.pluse\n                            const rr = element.breath\n                            const SBP = element.systolic\n                            const DBP = element.diastolic\n                            const BT = element.temperature\n                            const time = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                            console.log(element)\n                            console.log(Number(DBP))\n                            if (Number(hr) !== NaN) {\n                                HRNISLIST.push({\n                                    Data: hr,\n                                    Time: time\n                                })\n                            }\n                            if (Number(rr) === NaN) {\n\n                                RRNISLIST.push({\n                                    Data: rr,\n                                    Time: time\n                                })\n                            }\n                            if (Number(SBP) === NaN) {\n                                SBPNISLIST.push({\n                                    Data: SBP,\n                                    Time: time\n                                })\n                            }\n                            if (Number(DBP) === NaN) {\n                                DBPNISLIST.push({\n                                    Data: DBP,\n                                    Time: time\n                                })\n                            }\n                            console.log(Number(BT))\n                            if (Number(BT) === NaN) {\n\n                                BTNISLIST.push({\n                                    Data: BT,\n                                    Time: time\n                                })\n                            }\n                        }\n                    }\n                    if (Array.isArray(QOXY)) {\n                        for (let index = 0; index < QOXY.length; index++) {\n                            const element = QOXY[index];\n                            const spo2 = element.concen\n                            if (Number(spo2) === NaN) {\n                                continue\n                            }\n                            const time = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                            Spo2NISLIST.push({\n                                Data: spo2,\n                                Time: time\n\n                            })\n                        }\n                    }\n                    if (type === \"hr\") { return HRNISLIST }\n                    if (type === \"rr\") { return RRNISLIST }\n                    if (type === \"spo2\") { return Spo2NISLIST }\n                    if (type === \"abp\") { return [SBPNISLIST, DBPNISLIST] }\n                    if (type === \"bt\") { return BTNISLIST }\n                    return []\n                }\n                d3.select(\"#\" + svg_id).remove()\n                this.drawChart(FormatNISData(result[0], result[1], type))\n            })\n        }\n    }\n    componentDidUpdate() {\n        const { interval, PickerDate, HID, source, width } = this.props\n        const PrePickerDate = this.state.prepickerdate\n        if (PrePickerDate !== PickerDate) {\n            this.setState({ prepickerdate: this.props.PickerDate })\n            this.centermonitorApiDataGet()\n        }\n        const Presource = this.state.presource\n        if (Presource !== source) {\n            this.setState({ presource: source })\n            this.centermonitorApiDataGet()\n        }\n        if (this.state.prewidth !== width) {\n            this.setState({ prewidth: width });\n            this.centermonitorApiDataGet();\n        }\n        const Preinterval = this.state.preinterval\n        if (interval !== Preinterval) {\n            this.setState({ preinterval: interval })\n            this.centermonitorApiDataGet()\n        }\n        const PreHID = this.state.prehid\n        if (HID !== PreHID) {\n            this.setState({ prehid: HID })\n            this.centermonitorApiDataGet()\n        }\n    }\n\n    componentDidMount() {\n\n        this.setState({\n            prepickerdate: this.props.PickerDate,\n            presource: this.props.source,\n            preinterval: this.props.interval,\n            prehid: this.props.prehid,\n            prewidth: this.props.width,\n        })\n        this.centermonitorApiDataGet()\n\n    }\n    drawChart(sourcedata) {\n        function formatxArray(startTime, interval) {\n            var xAxisarray = []\n            if (interval === 0) {\n                for (let index = 0; index < 25; index++) {\n                    if (index % 4 === 0) {\n                        xAxisarray.push(startTime + (index * 60 * 60 * 1000))\n                    }\n                }\n            }\n            else if (interval === 1) {\n                for (let index = 0; index < 19; index++) {\n                    if (index % 2 === 0) {\n                        xAxisarray.push(startTime + (index * 4 * 60 * 60 * 1000))\n                    }\n                }\n            }\n            else if (interval === 2) {\n                for (let index = 0; index < 21; index++) {\n                    xAxisarray.push(startTime + (index * 60 * 60 * 1000 * 8))\n                }\n            }\n            else {\n                for (let index = 0; index < 14; index++) {\n                    xAxisarray.push(startTime + (index * 60 * 60 * 1000 * 24))\n                }\n            }\n            return xAxisarray\n        }\n\n        function formatbotaxis(time, interval) {\n            var xAxisarray = []\n            if (interval === 0) {\n                xAxisarray.push(time + (17 * 60 * 60 * 1000))\n            }\n            else if (interval === 1) {\n                for (let index = 0; index < 3; index++) {\n                    xAxisarray.push(time + (17 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000))\n                }\n            }\n            else if (interval === 2) {\n                for (let index = 0; index < 21; index++) {\n                    xAxisarray.push(time + (index * 60 * 60 * 1000 * 8))\n                }\n            }\n            else {\n                for (let index = 0; index < 14; index++) {\n                    xAxisarray.push(time + (index * 60 * 60 * 1000 * 24))\n                }\n            }\n            return xAxisarray\n        }\n\n        var formatHour = d3.timeFormat(\"%H\")\n\n        function multiFormat(date) {\n            return formatHour(date)\n        }\n\n\n        //vitaldays true:threeday\n        const {\n            comein,\n            id_key,\n            svg_id,\n            height,\n            width,\n            interval, //0:1天 1:3天 2:1週 3:2週 \n            axisBot,\n            axisTop,\n            circlrcolor,\n            max,\n            min,\n            upper,\n            lower,\n            source,\n            type,\n            PickerDate,\n        } = this.props\n\n        function formatTimer(interval, pickerdate) {\n            const endTimeStamp = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    start: endTimeStamp - (24 * 60 * 60 * 1000),\n                    end: endTimeStamp,\n                    interval: 0\n                }\n            }\n            if (interval === 1) {\n                return {\n                    start: endTimeStamp - (3 * 24 * 60 * 60 * 1000),\n                    end: endTimeStamp,\n                    interval: 1\n                }\n            }\n            if (interval === 2) {\n                return {\n                    start: endTimeStamp - (7 * 24 * 60 * 60 * 1000),\n                    end: endTimeStamp,\n                    interval: 2\n                }\n            }\n            return {\n                start: endTimeStamp - (14 * 24 * 60 * 60 * 1000),\n                end: endTimeStamp,\n                interval: 3\n            }\n        }\n        function formatPickerDate(PickerDate) {\n            const nowDateForSeven = moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf() + (7 * 60 * 60 * 1000)\n            const newDateForZero = moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n            const now = moment().valueOf()\n            if (PickerDate === newDateForZero) {\n                if (now < nowDateForSeven) {\n                    return PickerDate - (24 * 60 * 60 * 1000)\n                }\n                return PickerDate\n            }\n            return PickerDate\n        }\n\n        // const width = window.screen.availWidth * 0.25, height = 100, viewwidth = width - 50, rect_width = width / 46\n        const viewwidth = width - 50\n        // const EndTime = formatendtime(defaultdate)\n        // var vital_interval = formatintervaldays(EndTime, vitaldays)\n\n        const forPicker = formatPickerDate(PickerDate)\n        const optionvalue = formatTimer(interval, forPicker)\n        console.log(optionvalue)\n        var y = d3.scaleLinear()\n            .domain([min, max])\n            .range([height, 0])\n\n        var x = d3.scaleLinear()\n            .domain([optionvalue.start, optionvalue.end])\n            .range([0, viewwidth - 1])\n\n\n        var yAxis = d3.axisLeft(y)\n            .tickValues([min, max])\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(15);\n\n\n        const xAxisvalue = formatxArray(optionvalue.start, interval)\n        const xAxisbotvalue = formatbotaxis(optionvalue.start, interval)\n\n        var xAxis = d3.axisTop(x)\n            .tickValues(xAxisvalue)\n            .tickSize(0, 0)\n            .tickPadding(0)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n        var xAxisbot = d3.axisTop(x)\n            .tickValues(xAxisbotvalue)\n            .tickSize(0, 0)\n            .tickPadding(12)\n            .tickFormat(function (d) { return moment(d).format(\"MM/DD\") });\n\n        var svg\n        if (axisTop) {\n            svg = d3.select(\"#\" + id_key)\n                .append(\"svg\")\n                .attr(\"id\", svg_id)\n                .style(\"width\", width + 10)\n                .style(\"height\", height + 25)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + 50 + \",\" + 20 + \")\");\n        }\n        else {\n            if (axisBot) {\n                svg = d3.select(\"#\" + id_key)\n                    .append(\"svg\")\n                    .attr(\"id\", svg_id)\n                    .style(\"width\", width)\n                    .style(\"height\", height + 25)\n                    .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + 50 + \",\" + 5 + \")\");\n            }\n            else {\n\n                svg = d3.select(\"#\" + id_key)\n                    .append(\"svg\")\n                    .attr(\"id\", svg_id)\n                    .style(\"width\", width)\n                    .style(\"height\", height + 10)\n                    .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + 50 + \",\" + 5 + \")\");\n            }\n        }\n\n        if (axisTop) {\n            svg.append(\"g\")\n                .call(xAxis)\n                .attr(\"class\", \"axis\");\n        }\n\n        if (axisBot) {\n            svg.append(\"g\")\n                .call(xAxisbot)\n                .attr(\"class\", \"axis\");\n\n        }\n\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n        //上下橫線\n        svg.append('line')\n            .attr('x1', x(optionvalue.start))\n            .attr('y1', y(max))\n            .attr('x2', x(optionvalue.end))\n            .attr('y2', y(max))\n            .style('stroke', 'rgba(220,220,220,1)')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n        svg.append('line')\n            .attr('x1', x(optionvalue.start))\n            .attr('y1', y(min))\n            .attr('x2', x(optionvalue.end))\n            .attr('y2', y(min))\n            .style('stroke', 'rgba(220,220,220,1)')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n\n        if (interval === 0) {\n            for (let index = 0; index < 25; index++) {\n                if ((index % 24) === 0) {\n                    svg.append('line')\n                        .attr('x1', x(optionvalue.start + (index * 60 * 60 * 1000)))\n                        .attr('y1', 0)\n                        .attr('x2', x(optionvalue.start + (index * 60 * 60 * 1000)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(0,0,0,0.2)')\n                        .style('stroke-width', 2);\n                } else if (index % 8 === 0) {\n                    svg.append('line')\n                        .attr('x1', x(optionvalue.start + (index * 60 * 60 * 1000)))\n                        .attr('y1', 0)\n                        .attr('x2', x(optionvalue.start + (index * 60 * 60 * 1000)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(0,0,0,0.2)')\n                        .style('stroke-width', 2);\n                }\n                else {\n                    svg.append('line')\n                        .attr('x1', x(optionvalue.start + (index * 60 * 60 * 1000)))\n                        .attr('y1', 0)\n                        .attr('x2', x(optionvalue.start + (index * 60 * 60 * 1000)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(220,220,220,1)')\n                        .style('stroke-width', 1)\n                        .style('stroke-dasharray', 5.5);\n                }\n            }\n\n            drawshadow(optionvalue.start, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n\n        }\n        if (interval === 1) {\n            for (let index = 0; index < 19; index++) {\n                if ((index % 6) === 0) {\n                    svg.append('line')\n                        .attr('x1', x(optionvalue.start + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y1', 0)\n                        .attr('x2', x(optionvalue.start + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(0,0,0,0.2)')\n                        .style('stroke-width', 2);\n                } else if (index % 2 === 0) {\n                    svg.append('line')\n                        .attr('x1', x(optionvalue.start + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y1', 0)\n                        .attr('x2', x(optionvalue.start + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(0,0,0,0.2)')\n                        .style('stroke-width', 2);\n                }\n                else {\n                    svg.append('line')\n                        .attr('x1', x(optionvalue.start + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y1', 0)\n                        .attr('x2', x(optionvalue.start + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(220,220,220,1)')\n                        .style('stroke-width', 1)\n                        .style('stroke-dasharray', 5.5);\n                }\n            }\n\n            drawshadow(optionvalue.start, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n        }\n        if (interval === 2) {\n            for (let index = 0; index < 22; index++) {\n                if ((index % 3) === 0) {\n                    svg.append('line')\n                        .attr('x1', x(optionvalue.start + (index * 60 * 60 * 1000 * 8)))\n                        .attr('y1', 0)\n                        .attr('x2', x(optionvalue.start + (index * 60 * 60 * 1000 * 8)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(0,0,0,0.2)')\n                        .style('stroke-width', 2);\n                } else {\n                    svg.append('line')\n                        .attr('x1', x(optionvalue.start + (index * 60 * 60 * 1000 * 8)))\n                        .attr('y1', 0)\n                        .attr('x2', x(optionvalue.start + (index * 60 * 60 * 1000 * 8)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(0,0,0,0.2)')\n                        .style('stroke-width', 2);\n                }\n\n            }\n\n            drawshadow(optionvalue.start, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n        }\n        if (interval === 3) {\n            for (let index = 0; index < 15; index++) {\n                svg.append('line')\n                    .attr('x1', x(optionvalue.start + (index * 60 * 60 * 1000 * 24)))\n                    .attr('y1', 0)\n                    .attr('x2', x(optionvalue.start + (index * 60 * 60 * 1000 * 24)))\n                    .attr('y2', height)\n                    .style('stroke', 'rgba(0,0,0,0.2)')\n                    .style('stroke-width', 2);\n            }\n\n            drawshadow(optionvalue.start, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n        }\n\n        function formatBox(startTime, interval) {\n            function interFormat(startTime, interval) {\n                var TimeArray = []\n                for (let index = 0; index < interval; index++) {\n                    if (interval === 24) {\n                        const boxTime = startTime + (30 * 60 * 1000) + (index * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 18) {\n                        const boxTime = startTime + (2 * 60 * 60 * 1000) + (index * 4 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 21) {\n                        const boxTime = startTime + (4 * 60 * 60 * 1000) + (index * 8 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else {\n                        const boxTime = startTime + (12 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                }\n                return TimeArray\n            }\n            if (interval === 0) {\n                return interFormat(startTime, 24)\n            }\n            if (interval === 1) {\n                return interFormat(startTime, 18)\n            }\n            if (interval === 2) {\n                return interFormat(startTime, 21)\n            }\n            return interFormat(startTime, 14)\n        }\n        function formatBoxWidth(viewwidth, interval) {\n            if (interval === 0) {\n                return comein === 'line' ? viewwidth / 27.5 : viewwidth / 25\n            }\n            if (interval === 1) {\n                return comein === 'line' ? viewwidth / 20.5 : viewwidth / 18.5\n            }\n            if (interval === 2) {\n                return comein === 'line' ? viewwidth / 21 : viewwidth / 22.5\n            }\n            return comein === 'line' ? viewwidth / 14 : viewwidth / 14.5\n        }\n        function drawshadow(startTime, interval, lower, upper, type) {\n            const LimitBoxTimer = formatBox(startTime, interval)\n            for (let index = 0; index < LimitBoxTimer.length; index++) {\n                const boxwidth = formatBoxWidth(width, interval)\n                const element = LimitBoxTimer[index];\n                svg.append('line')\n                    .attr('x1', x(element))\n                    .attr('y1', y(lower))\n                    .attr('x2', x(element))\n                    .attr('y2', y(upper))\n                    .style('stroke', circlrcolor)\n                    .style('opacity', 0.5)\n                    .style('stroke-width', boxwidth)\n\n                if (type === \"nbp\" || type === \"abp\") {\n                    svg.append('line')\n                        .attr('x1', x(element))\n                        .attr('y1', y(35))\n                        .attr('x2', x(element))\n                        .attr('y2', y(55))\n                        .style('stroke', circlrcolor)\n                        .style('opacity', 0.2)\n                        .style('stroke-width', boxwidth)\n                }\n            }\n        }\n        function drawData(type, source, sourcedata, interval, boxwidth) {\n            function formatShift(interval) {\n                if (interval === 0) {\n                    return 30 * 60 * 1000\n                }\n                if (interval === 1) {\n                    return 2 * 60 * 60 * 1000\n                }\n                if (interval === 2) {\n                    return 4 * 60 * 60 * 1000\n                }\n                return 12 * 60 * 60 * 1000\n            }\n            if (source === \"CM\") {\n                if (type === \"abp\") {\n                    const dataAbps = sourcedata.abps\n                    const dataAbpd = sourcedata.abpd\n                    for (let index = 0; index < dataAbpd.length; index++) {\n                        const element = dataAbpd[index];\n                        const q1 = element.Q1\n                        const q2 = element.Q2\n                        const q3 = element.Q3\n                        const q4 = element.Q4\n                        const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + formatShift(interval)\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(q1))\n                            .attr(\"y2\", y(q4))\n                            .attr(\"stroke\", circlrcolor)\n                            .style('opacity', 0.5)\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q2) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style('opacity', 0.5)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg\n                            .selectAll(\"toto\")\n                            .data([q1, q4])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('opacity', 0.5)\n                            .style('stroke-width', 1);\n                    }\n                    for (let index = 0; index < dataAbps.length; index++) {\n                        const element = dataAbps[index];\n                        const q1 = element.Q1\n                        const q2 = element.Q2\n                        const q3 = element.Q3\n                        const q4 = element.Q4\n                        const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + formatShift(interval)\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(q1))\n                            .attr(\"y2\", y(q4))\n                            .attr(\"stroke\", circlrcolor)\n                            // .attr(\"stroke\", \"blcak\")\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q2) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg\n                            .selectAll(\"toto\")\n                            .data([q1, q4])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1);\n                    }\n                }\n                if (type === \"hr\" || type === \"rr\" || type === \"spo2\") {\n                    for (let index = 0; index < sourcedata.length; index++) {\n                        const element = sourcedata[index];\n                        const q1 = element.Q1\n                        const q2 = element.Q2\n                        const q3 = element.Q3\n                        const q4 = element.Q4\n                        const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + formatShift(interval)\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(q1))\n                            .attr(\"y2\", y(q4))\n                            .attr(\"stroke\", circlrcolor)\n                            // .attr(\"stroke\", \"blcak\")\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q2) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg\n                            .selectAll(\"toto\")\n                            .data([q1, q4])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1);\n\n                    }\n                }\n                if (type === \"nbp\") {\n                    for (let index = 0; index < sourcedata.length; index++) {\n                        const element = sourcedata[index];\n                        const Xtime = moment(element.Time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                        const SBP = element.SBP\n                        const DBP = element.DBP\n                        if (SBP === 0 || DBP === 0) {\n                            continue\n                        }\n                        else {\n                            svg.append('circle')\n                                .attr('cx', x(Xtime))\n                                .attr('cy', y(SBP))\n                                .attr('r', 3)\n                                .style('fill', circlrcolor)\n\n\n                            svg.append('circle')\n                                .attr('cx', x(Xtime))\n                                .attr('cy', y(DBP))\n                                .attr('r', 3)\n                                .style('opacity', 0.5)\n                                .style('fill', circlrcolor)\n                        }\n\n                    }\n                }\n            }\n            else {\n                if (type === \"abp\" || type === \"nbp\") {\n                    if (sourcedata === undefined) {\n                        return null\n                    }\n                    if (sourcedata.length === 0) {\n                        return null\n                    }\n                    const SBP = sourcedata[0]\n                    const DBP = sourcedata[1]\n                    for (let index = 0; index < SBP.length; index++) {\n                        const element = SBP[index];\n                        svg.append('circle')\n                            .attr('cx', x(element.Time))\n                            .attr('cy', y(element.Data))\n                            .attr('r', 3)\n                            .style('fill', circlrcolor)\n\n                    }\n\n                    for (let index = 0; index < DBP.length; index++) {\n                        const element = DBP[index];\n                        svg.append('circle')\n                            .attr('cx', x(element.Time))\n                            .attr('cy', y(element.Data))\n                            .attr('r', 3)\n                            .style('fill', circlrcolor)\n                            .style('opacity', 0.5)\n\n                    }\n                }\n                else {\n                    for (let index = 0; index < sourcedata.length; index++) {\n                        const element = sourcedata[index];\n                        svg.append('circle')\n                            .attr('cx', x(element.Time))\n                            .attr('cy', y(element.Data))\n                            .attr('r', 3)\n                            .style('fill', circlrcolor)\n\n                    }\n                }\n\n            }\n        }\n    }\n\n    changestate() {\n        this.setState({\n            change: !this.state.change\n        })\n    }\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key} style={{ paddingTop: 10 }}></div>\n        );\n    }\n}\n\nexport default Crosssectionvitalsignchart;\n","import React, { Component } from 'react';\nimport { Select, Modal, Tabs, Icon, Button } from 'antd';\nimport Crosssectionvitalsignchart from './Crossectionvitalsignchart'\nimport Warningsetting from './Warningsettinglist'\n// import Addwarningsetting from './Addnewwaring'\nimport './Vitalsign.scss'\n// import { formatxArrayhalf, formatendtime } from '../../Function/Timeformat'\n// import { simulationCentermonitordata, simulationnisdata } from '../../Function/Wardstate'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport '../../Wardview/Wardchart.scss'\nimport { statecolor } from '../../Function/Wardstate'\n\n\nclass Vitalsign extends Component {\n\n    state = {\n        vital_days: 0, //false:一天 true:三天\n        source: \"CM\", //false:中央站 true:NIS\n        visible: false,\n        visibleConflict: false,\n        chackstate_one: 0,\n        chackstate_three: 0,\n        datasource: null,\n        addNewWarningDateStr: null,\n        addNewWarningHourStr: null,\n\n        CenterMonitorValue: null,\n        preHISID: null,\n        prePickerDate: null,\n        checkStateNumber: null,\n\n        pbStatus: true\n    }\n    componentDidUpdate() {\n        const { PickerDate } = this.props\n        const { prePickerDate } = this.state\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        const preHISID = this.state.preHISID\n        const Time = moment(this.timeCheck(PickerDate, this.state.vital_days).time).format(\"YYYYMMDDHHmmss\")\n        if (Phistnum !== preHISID || PickerDate !== prePickerDate) {\n            this.setState({ preHISID: Phistnum, prePickerDate: PickerDate, checkStateNumber: this.timeCheck(PickerDate, this.state.vital_days).checkNum })\n            this.getVitalSignData(Time.time, Phistnum)\n        }\n    }\n    componentDidMount() {\n        //選取現在時間\n        const { PickerDate } = this.props\n        const Time = moment(this.timeCheck(PickerDate, this.state.vital_days).time).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ preHISID: Phistnum, prePickerDate: PickerDate, checkStateNumber: this.timeCheck(PickerDate, this.state.vital_days).checkNum })\n        this.getVitalSignData(Time, Phistnum)\n    }\n\n    changePb = () => {\n        this.setState({\n            pbStatus: false\n        })\n    }\n\n    decidePB = (hr, nbpd, abpd) => {\n        const status = this.state.pbStatus\n        if (status) {\n            hr > 160 || hr < 100 && this.changePb()\n            nbpd > 75 || nbpd < 55 && this.changePb()\n            abpd > 75 || abpd < 55 && this.changePb()\n        }\n    }\n\n    timeCheck(PickerDate, interval) {\n        function sevenFormat(nowDaySeven) {\n            const now = moment().valueOf()\n            if (now < nowDaySeven) {\n                return nowDaySeven - (24 * 60 * 60 * 1000)\n            }\n            return nowDaySeven\n        }\n        const nowDaySeven = moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf() + (7 * 60 * 60 * 1000)\n        const time = sevenFormat(nowDaySeven)\n        const PickerDateSeven = PickerDate + (7 * 60 * 60 * 1000)\n        const hourFormat = moment().get('hours')\n        if (PickerDateSeven === time) {\n            //選取到今天\n            const EndTime = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf()\n            if (interval === 0) {\n                return {\n                    time: EndTime - (60 * 60 * 1000),\n                    checkNum: hourFormat - 7\n                }\n            }\n            const format = parseInt(hourFormat % 4) + 1\n            return {\n                time: EndTime - (format * 60 * 60 * 1000),\n                checkNum: 18 - parseInt((moment(time + (24 * 60 * 60 * 1000)).diff(moment(EndTime - (format * 60 * 60 * 1000)), \"hours\") / 4))\n            }\n\n        }\n        const EndTime = moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf() + (31 * 60 * 60 * 1000)\n        if (interval === 0) {\n            return {\n                time: EndTime - (60 * 60 * 1000),\n                checkNum: 24\n            }\n        }\n        return {\n            time: EndTime - (4 * 60 * 60 * 1000),\n            checkNum: 18\n        }\n\n    }\n\n    getVitalSignData(Time, Phistnum) {\n        const Interval = this.formatvital_daysToInterval()\n        ApiProvider.getPatientwarMidValue(Phistnum, Time, Interval)\n            .then(data => { console.log(data.data); this.setState({ CenterMonitorValue: data.data }) })\n            .catch(err => { console.log(err) })\n    }\n\n    onVitalCheck(interval) {\n        var gridarray = []\n        if (interval === 1) {\n            for (let index = 0; index < 18; index++) {\n                const checknumber = index + 1\n                if (checknumber === this.state.checkStateNumber) {\n                    gridarray.push(<div key={index} style={{ height: 370, width: \"100%\", border: \"rgba(245, 166, 35, 1) 1px solid\" }} ></div>)\n                }\n                else gridarray.push(<div key={index} style={{ height: 370, width: \"100%\", cursor: \"pointer\" }} onClick={() => this.onClickCheckgrid(checknumber, interval)}></div>)\n            }\n        }\n        else {\n            for (let index = 0; index < 24; index++) {\n                const checknumber = index + 1\n                if (checknumber === this.state.checkStateNumber) {\n                    gridarray.push(<div key={index} style={{ height: 370, width: \"100%\", border: \"rgba(245, 166, 35, 1) 1px solid\" }} ></div>)\n                }\n                else gridarray.push(<div key={index} style={{ height: 370, width: \"100%\", cursor: \"pointer\" }} onClick={() => this.onClickCheckgrid(checknumber, interval)}></div>)\n            }\n        }\n        return gridarray;\n    }\n\n    formatvital_daysToInterval() {\n        const vitaldays = this.state.vital_days\n        if (vitaldays === 0) {\n            return 0\n        }\n        return 1;\n    }\n\n    onClickCheckgrid(number, Interval) {\n        function startTime(PickerDate, Interval) {\n            const End = PickerDate + (31 * 60 * 60 * 1000)\n            if (Interval === 0) {\n                return End - (24 * 60 * 60 * 1000)\n            }\n            return End - (3 * 24 * 60 * 60 * 1000)\n        }\n        function intervalforhour(Interval) {\n            if (Interval === 0) {\n                return 1;\n            }\n            return 4;\n        }\n        const { PickerDate } = this.props\n        const time = moment(startTime(PickerDate, Interval) + (intervalforhour(Interval) * (number - 1) * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ checkStateNumber: number })\n        this.getVitalSignData(time, Phistnum)\n    }\n\n    render() {\n        function valueFormat(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"--\"\n            }\n            return value\n        }\n        function centervalueNull(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            return value\n        }\n        function centervaluetoNull(value) {\n            function FilterList(DataList, type) {\n                const filterData = DataList.filter(function (value, index, arr) {\n                    return value.type === type\n                })\n                if (filterData.length === 0) {\n                    return null\n                }\n                return filterData[0].Mid\n            }\n            if (value === undefined || value === null) {\n                return {\n                    hr: null,\n                    rr: null,\n                    bt: null,\n                    spo2: null,\n                    abpd: null,\n                    abpm: null,\n                    abps: null,\n                    nbpm: null,\n                    nbps: null,\n                    nbpd: null\n                }\n            }\n            return {\n                hr: FilterList(value, \"hr\"),\n                rr: FilterList(value, \"rr\"),\n                bt: FilterList(value, \"bt\"),\n                spo2: FilterList(value, \"spo2\"),\n                abpd: FilterList(value, \"abpd\"),\n                abpm: FilterList(value, \"abpm\"),\n                abps: FilterList(value, \"abps\"),\n                nbpd: FilterList(value, \"nbpd\"),\n                nbps: FilterList(value, \"nbps\"),\n                nbpm: FilterList(value, \"nbpm\"),\n            }\n        }\n\n        function limitValue(value, upper, lower) {\n            if (value > upper || value < lower) {\n                return false\n            }\n            return true\n        }\n\n        function vitaldaysBool(vitaldays) {\n            if (vitaldays === 3) {\n                return true\n            }\n            return false\n        }\n\n        function formatPickerTimer(pickerdate, interval) {\n            if (interval === 0) {\n                return {\n                    startTime: pickerdate + (7 * 60 * 60 * 1000),\n                    endTime: pickerdate + (31 * 60 * 60 * 1000)\n                }\n            }\n            else {\n                return {\n                    startTime: pickerdate + (31 * 60 * 60 * 1000) - (3 * 24 * 60 * 60 * 1000),\n                    endTime: pickerdate + (31 * 60 * 60 * 1000)\n                }\n\n            }\n        }\n        const width = window.screen.availWidth * 0.25\n        const centervalue = centervaluetoNull(this.state.CenterMonitorValue)\n        const pickerTimer = formatPickerTimer(this.props.PickerDate, this.state.vital_days)\n        const PickerDate = this.props.PickerDate\n\n        this.decidePB(centervalue.hr, centervalue.nbpd, centervalue.abpd)\n        const status = this.state.pbStatus\n        return (\n            <div style={{ border: '1px solid rgba(238, 238, 238, 1)' }}>\n                <div style={{ display: 'flex', alignItems: 'center', height: \"36px\", backgroundColor: \"#71b0e46e\", padding: \"0px 16px\" }}>\n                    <div style={{ fontSize: \"16px\" }}>生命徵象</div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridGap: \"5px\", marginLeft: \"20px\" }}>\n                        <div className={this.state.source === \"CM\" ? \"vitalBtnSource\" : \"vitalBtnSelectSource\"} style={{ marginRight: \"1px\" }} onClick={() => { this.setState({ source: \"CM\", checkStateNumber: null }) }}>\n                            中央站資訊\n                        </div>\n                        <div className={this.state.source === \"NIS\" ? \"vitalBtnSource\" : \"vitalBtnSelectSource\"} onClick={() => { this.setState({ source: \"NIS\", checkStateNumber: null }) }}>\n                            護理系統資訊\n                        </div>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridGap: \"2px\", marginLeft: \"15px\" }}>\n                        <div className={this.state.vital_days === 0 ? \"vitalBtnInterval\" : \"vitalBtnSelectInterval\"} style={{ marginRight: \"1px\" }} onClick={() => { this.setState({ vital_days: 0, checkStateNumber: this.timeCheck(PickerDate, 0).checkNum }) }}>\n                            顯示一天\n                        </div>\n                        <div className={this.state.vital_days === 1 ? \"vitalBtnInterval\" : \"vitalBtnSelectInterval\"} onClick={() => { this.setState({ vital_days: 1, checkStateNumber: this.timeCheck(PickerDate, 1).checkNum }) }}>\n                            顯示三天\n                        </div>\n                    </div>\n                </div>\n                <div className='Wardchartlayout'>\n                    <div className=\"halfwardchart\">\n                        <div className='singlewardchart' style={{ display: 'grid', gridTemplateRows: '22px 122px 122px 123px' }}>\n                            <div></div>\n                            <div className=\"rowTitle\" >\n                                <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"100px\", height: \"100px\", backgroundColor: status ? \"white\" : statecolor('HR') }}>\n                                    <t3 style={{ color: status ? statecolor('HR') : \"white\" }}>HR</t3>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"40px\", lineHeight: \"44px\", paddingRight: \"3px\", color: status ? statecolor('HR') : \"white\" }}>{centervalueNull(centervalue.hr)}</div>\n                                </div>\n                            </div>\n                            {\n                                this.state.source === 'CM' ? (\n                                    <div className=\"rowTitle\">\n                                        <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"100px\", height: \"100px\", backgroundColor: status ? \"white\" : statecolor('BP') }}>\n                                            <div style={{ color: status ? statecolor('BP') : \"white\" }}>NBP(mmHg)</div>\n                                            <div style={{ fontWeight: \"600\", fontSize: \"30px\", lineHeight: \"34px\", color: status ? statecolor('BP') : \"white\" }}>{centervalueNull(centervalue.nbps)}/{centervalueNull(centervalue.nbpd)}</div>\n                                            <div style={{ fontWeight: \"600\", fontSize: \"20px\", lineHeight: \"22px\", color: status ? statecolor('BP') : \"white\" }}>({centervalueNull(centervalue.nbpm)})</div>\n                                        </div>\n                                    </div>\n                                ) : null\n                            }\n                            <div className=\"rowTitle\">\n                                <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"100px\", height: \"100px\", backgroundColor: status ? \"white\" : statecolor('BP') }}>\n                                    <div style={{ color: status ? statecolor('BP') : \"white\" }}>{this.state.source === 'CM' ? 'ABP' : 'BP'}(mmHg)</div>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"30px\", lineHeight: \"34px\", color: status ? statecolor('BP') : \"white\" }}>{centervalueNull(centervalue.abps)}/{centervalueNull(centervalue.abpd)}</div>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"20px\", lineHeight: \"22px\", color: status ? statecolor('BP') : \"white\" }}>({centervalueNull(centervalue.abpm)})</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ position: \"relative\" }}>\n                            {\n                                this.state.source === 'CM' ? (\n                                    <div style={{ position: \"absolute\", top: 20, left: 50, width: width - 50, height: 330 }}>\n                                        <div style={{ display: \"grid\", gridTemplateColumns: this.state.vital_days === 1 ? \"repeat(18, 1fr)\" : \"repeat(24,1fr)\" }}>\n                                            {this.onVitalCheck(this.state.vital_days)}\n                                        </div>\n                                    </div>\n                                ) : null\n                            }\n                            <Crosssectionvitalsignchart\n                                comein={'line'}\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"HR_svg\"}\n                                id_key={\"HR_div\"}\n                                type={\"hr\"}\n                                source={this.state.source}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={100}\n                                upper={160}\n                                axisBot={true}\n                                axisTop={true}\n                                circlrcolor=\"#779F50\"\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={200}>\n                            </Crosssectionvitalsignchart>\n                            {\n                                this.state.source === 'CM' ? (\n                                    <Crosssectionvitalsignchart\n                                        comein={'line'}\n                                        CID={this.props.caseinfo.CASEID}\n                                        HID={this.props.caseinfo.HISID}\n                                        PickerDate={PickerDate}\n                                        svg_id={\"NBP_svg\"}\n                                        id_key={\"NBP_div\"}\n                                        type={\"nbp\"}\n                                        source={this.state.source}\n                                        startTime={pickerTimer.startTime}\n                                        endTime={pickerTimer.endTime}\n                                        height={100}\n                                        width={width}\n                                        interval={this.state.vital_days}\n                                        lower={55}\n                                        upper={75}\n                                        axisBot={false}\n                                        axisTop={false}\n                                        circlrcolor={\"#C12528\"}\n                                        colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                        min={0}\n                                        max={100}>\n                                    </Crosssectionvitalsignchart>\n                                ) : null\n                            }\n                            <Crosssectionvitalsignchart\n                                comein={'line'}\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"ABP_svg\"}\n                                id_key={\"ABP_div\"}\n                                type={\"abp\"}\n                                source={this.state.source}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={55}\n                                upper={75}\n                                axisBot={false}\n                                axisTop={false}\n                                circlrcolor={\"#C12528\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={100}>\n                            </Crosssectionvitalsignchart>\n                        </div>\n                    </div>\n                    <div className=\"halfwardchart\">\n                        <div className='singlewardchart' style={{ display: 'grid', gridTemplateRows: '22px 122px 122px 123px' }}>\n                            <div></div>\n                            <div className=\"rowTitle\" >\n                                <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"100px\", height: \"100px\", backgroundColor: limitValue(centervalue.spo2, 100, 90) ? \"white\" : statecolor('SpO2') }}>\n                                    <t3 style={{ color: limitValue(centervalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>\n                                        SpO\n                                        <sub >2</sub>\n                                        (%)\n                                    </t3>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"40px\", lineHeight: \"44px\", paddingRight: \"3px\", color: limitValue(centervalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>{centervalueNull(centervalue.spo2)}%</div>\n                                </div>\n                            </div>\n                            <div className=\"rowTitle\" >\n                                <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"100px\", height: \"100px\", backgroundColor: limitValue(centervalue.bt, 38, 36) ? \"white\" : statecolor('BT') }}>\n                                    <div style={{ color: limitValue(centervalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>BT</div>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"40px\", lineHeight: \"44px\", paddingRight: \"3px\", color: limitValue(centervalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>{valueFormat(centervalue.bt)}</div>\n                                </div>\n                            </div>\n                            <div className=\"rowTitle\">\n                                <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"100px\", height: \"100px\", backgroundColor: limitValue(centervalue.rr, 60, 20) ? \"white\" : statecolor('RR') }}>\n                                    <div style={{ color: limitValue(centervalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>RR(min)</div>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"40px\", lineHeight: \"44px\", paddingRight: \"3px\", color: limitValue(centervalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>{centervalueNull(centervalue.rr)}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ position: \"relative\" }}>\n                            {\n                                this.state.source === 'CM' ? (\n                                    <div style={{ position: \"absolute\", top: 20, left: 50, width: width - 50, height: 330 }}>\n                                        <div style={{ display: \"grid\", gridTemplateColumns: this.state.vital_days === 1 ? \"repeat(18, 1fr)\" : \"repeat(24,1fr)\" }}>\n                                            {this.onVitalCheck(this.state.vital_days)}\n                                        </div>\n                                    </div>\n                                ) : null\n                            }\n\n                            <Crosssectionvitalsignchart\n                                comein={'line'}\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"SpO2_svg\"}\n                                id_key={\"SpO2_div\"}\n                                type={\"spo2\"}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={90}\n                                upper={100}\n                                axisBot={true}\n                                axisTop={true}\n                                circlrcolor={\"#4773B8\"}\n                                colorshadow={\"#4773B8\"}\n                                min={60}\n                                max={100}\n                                source={this.state.source}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                comein={'line'}\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"BT_svg\"}\n                                id_key={\"BT_div\"}\n                                type={\"bt\"}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                source={this.state.source}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={36}\n                                upper={38}\n                                axisBot={false}\n                                axisTop={false}\n                                circlrcolor={\"#7F3DB5\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={34}\n                                max={41}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                comein={'line'}\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"RR_svg\"}\n                                id_key={\"RR_div\"}\n                                type={\"spo2\"}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={20}\n                                upper={60}\n                                axisBot={false}\n                                axisTop={false}\n                                circlrcolor={\"#DE7531\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={100}\n                                source={this.state.source}>\n                            </Crosssectionvitalsignchart>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n\n}\n\nexport default Vitalsign;\n","import React, { Component } from 'react';\nimport dragdown from '../../Image/svg/dragdown.svg'\n\nclass Warningsetting extends Component {\n    state = {\n        dragstate: false\n    }\n    onClickdrag = () => {\n        this.setState(\n            {\n                dragstate: !this.state.dragstate\n            }\n        )\n    }\n    render() {\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div style={{ height: 50, background: \"rgba(238,238,238,1)\", padding: \"10px 16px\", display: \"flex\", justifyContent: \"space-between\" }}>\n                    <div style={{ display: \"flex\" }}>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>2019-06-01 08:00</div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", marginLeft: \"20px\" }}>\n                            <div style={{ border: \"red 1px solid\", borderRadius: \"4px\", cursor: \"pointer\", color: \"red\", padding: \"5px 20px\", background: \"white\" }}>刪除</div>\n                        </div>\n                    </div>\n                    <div onClick={this.onClickdrag} style={{ transform: this.state.dragstate ? \"scaleY(1)\" : \"scaleY(-1)\" }}>\n                        <img src={dragdown} alt=\"dragdown\"></img>\n                    </div>\n                </div>\n                <div style={{ display: this.state.dragstate ? \"block\" : \"none\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 4fr 1fr 4fr\" }}>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>HR</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>ABP</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>NBP</div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>SpO2</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>BT</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>RR</div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ height: 50, padding: \"10px 16px\", display: \"flex\", alignItems: \"center\" }}>生效時間範圍:2019-06-01 08:00~2019-06-31 08:00</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Warningsetting","import React, { Component } from 'react';\nimport { Button, DatePicker, Checkbox } from 'antd';\nimport moment from 'moment';\nimport displaylogo from '../Image/svg/filter.svg'\nimport { daysdiff } from '../Function/Timeformat'\nimport { pregancyweeksanddays } from '../Function/Wardbedfunction'\nimport './Controlbar.scss'\n// import * as ApiProvider from '../API/ApiProvider';\nimport * as WardState from '../Function/Wardstate'\nimport locale from 'antd/es/date-picker/locale/zh_TW';\n\n\nclass Controlbar extends Component {\n    state = {\n        display_Mode: false,\n        item: this.props.item_array,\n        scrollstate: 0,\n    }\n    sendData = (itwm_array) => {\n        this.props.parentCallback(itwm_array);\n    }\n\n\n    sendDateData = (PickerDate) => {\n        this.props.parentDateCallback(PickerDate);\n    }\n    //快速滑動\n    scrollToAnchor = (anchorName) => {\n        if (anchorName) {\n            let anchorElement = document.getElementById(anchorName);\n            if (anchorElement) { anchorElement.scrollIntoView(); }\n        }\n    }\n    onChange = (checkedValues) => {\n        this.sendData(checkedValues)\n\n    }\n    onDateChange = (date, dateString) => {\n        this.sendDateData(date.valueOf())\n    }\n    open_display() {\n        this.setState({\n            display_Mode: !this.state.display_Mode\n        })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo, PickerDate } = this.props\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const btemp = bTime - (6 * day)\n                bronDate <= btemp && this.sendDateData(bTime)\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD')).valueOf()\n                this.sendDateData(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const atemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= atemp && this.sendDateData(aTime)\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n\n        const btn_style = {\n            unclick_style: { borderRadius: \"4px\", color: \"#001a6d88\", border: \"1px solid #001a6d88\", padding: \"0px 4px\", height: \"30px\" }\n        }\n\n        function Monthformat(month) {\n            return month + 1\n        }\n        function timeformat(timestring) {\n            return new Date(timestring).getFullYear() + \"/\" + Monthformat(new Date(timestring).getMonth()) + \"/\" + new Date(timestring).getDate()\n        }\n        function valueFormat(value) {\n            if (value === \"\" || value === null || value === undefined) {\n                return \"--\"\n            }\n            return value.toString()\n        }\n        function valueBornWeight(value) {\n            if (value === \"\" || value === null || value === undefined || value === 0) {\n                return \"\"\n            }\n            return value.toString() + \"g → \"\n        }\n        const display_style = {\n            displye_mode: { position: \"absolute\", right: '0px', top: \"50px\", width: \"200px\", background: \"white\", boxShadow: \"3px 3px 12px\", zIndex: \"100\", borderRadius: \"4px\" },\n            non_display_mode: { display: \"none\" },\n            check_area: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\" },\n            check_text: { padding: \"4px\", width: \"140px\", borderRadius: \"4px\", borderColor: 'rgba(0, 0, 0, 0.15)', borderStyle: \"solid\", borderWidth: \"1px\", marginLeft: \"10px\", borderRadius: \"4px\" }\n        }\n\n        function disabledDate(current) {\n            // Can not select days before today and today\n            const endvalue = moment(caseinfo.PBASINGNINFO.PBIRTHDT, 'YYYYMMDD')\n            return endvalue.endOf('day') > current || current > moment().endOf('day')\n        }\n\n        const { caseinfo, btnlist, PickerDate } = this.props\n        const weightList = caseinfo.WEIGHT\n        const Birthday = caseinfo.PBASINGNINFO.PBIRTHDT\n        const BornWeight = WardState.BornWeight(weightList, Birthday)\n        const DayWeight = WardState.selectweight(weightList, PickerDate)\n        const btn = btnlist.map(\n            (item, index) => <Button onClick={this.scrollToAnchor.bind(this, item.scrollpoint)} key={index} style={btn_style.unclick_style}>\n                <t3>{item.name}</t3>\n            </Button>\n        )\n        return (\n            // <div>\n            <div className='controlbarlayout'>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto auto\", gridColumnGap: \"30px\" }}>\n                    <DatePicker getCalendarContainer={triggerNode => triggerNode.parentNode} locale={locale} width={140} onChange={this.onDateChange} value={moment(PickerDate)} allowClear={false} showToday={false} disabledDate={(current) => { return current > moment().startOf(\"day\") || current < moment(Birthday, \"YYYYMMDD\").add(-1, \"days\").endOf(\"day\") }} />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"2px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"minus-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                    <div style={{ display: 'grid', gridTemplateColumns: \"repeat(3,auto)\", gridColumnGap: \"30px\", alignContent: \"center\" }}>\n                        {/* <t2>矯正週數：{pregancyweeksanddays(caseinfo.WEEK_BORN, caseinfo.DAY_BORN, moment(Birthday, 'YYYYMMDD').format('YYYY/MM/DD'))}</t2>\n                        <t2>體重：{valueFormat(DayWeight)}g</t2>\n                        <t2>住院第{daysdiff(moment(PickerDate).format('YYYY/MM/DD'), moment(caseinfo.TRANSINDT, 'YYYYMMDD').format('YYYY/MM/DD'))}天</t2> */}\n                    </div>\n                </div>\n                <div style={{ display: \"flex\", alignItems: 'center', position: \"relative\" }}>\n                    <t2>快速切換：</t2>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,auto)\", gridColumnGap: \"5px\" }}>{btn}</div>\n                    <div onClick={() => this.open_display()} style={{ cursor: \"pointer\", marginLeft: \"5px\" }}>\n                        <img src={displaylogo} alt='displaylogo' style={{ width: '15px', height: '15px' }}></img>\n                    </div>\n                    <div style={this.state.display_Mode ? display_style.displye_mode : display_style.non_display_mode}>\n                        <t2 className='controlmoduletitle'>顯示切換</t2>\n                        <div style={{ marginTop: \"10px\", marginBottom: \"20px\" }}>\n                            <Checkbox.Group defaultValue={this.state.item} id={\"checkbox_group\"} style={{ width: '100%', display: \"grid\", gridTemplateRows: \"repeat(5,1fr)\", gridRowGap: \"5px\" }} onChange={this.onChange}>\n                                <div style={display_style.check_area}>\n                                    <Checkbox value={0}></Checkbox>\n                                    <t3 style={display_style.check_text}>生命徵象</t3>\n                                </div>\n                                <div style={display_style.check_area}>\n                                    <Checkbox value={1} ></Checkbox>\n                                    <t3 style={display_style.check_text}>檢驗</t3>\n                                </div>\n                                <div style={display_style.check_area}>\n                                    <Checkbox value={2}></Checkbox>\n                                    <t3 style={display_style.check_text}>呼吸評估</t3>\n                                </div>\n                                <div style={display_style.check_area}>\n                                    <Checkbox value={3}></Checkbox>\n                                    <t3 style={display_style.check_text}>醫藥囑</t3>\n                                </div>\n                                <div style={display_style.check_area}>\n                                    <Checkbox value={4}></Checkbox>\n                                    <t3 style={display_style.check_text}>行事曆及註記</t3>\n                                </div>\n                                {/* <div style={display_style.check_area}>\n                                        <Checkbox value={5}></Checkbox>\n                                        <t3 style={display_style.check_text}>To Do List</t3>\n                                    </div> */}\n                            </Checkbox.Group>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            //     <div className='boxshadow'></div>\n            // </div >\n\n        );\n    }\n}\n\nexport default Controlbar;\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport { Icon } from 'antd'\n\nconst calcBorderLeft = (intervalStatus, index, Status) => {\n    if (Status === \"Crossection\") {\n        return '1px solid #eeeeee';\n    }\n    if (intervalStatus === 0) {\n        if (index % 24 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else if (index % 8 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else {\n            return '1px solid #eeeeee';\n        }\n    } else if (intervalStatus === 1) {\n        if (index % 6 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else if (index % 2 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else {\n            return '1px solid #eeeeee';\n        }\n    } else if (intervalStatus === 2) {\n        if (index % 3 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else {\n            return '2px solid rgba(0,0,0,0.2)';\n        }\n    } else {\n        return '2px solid rgba(0,0,0,0.2)';\n    }\n}\n\nclass IOpageCell extends Component {\n    render() {\n        const { IntervalStatus, Status, data, weightList, index } = this.props\n        // console.log(weightList)\n        const startTime = data.start\n        const endTime = data.end\n        const element = data.element\n        const urine = data.urine\n        var weightData = 0\n        if (Array.isArray(weightList)) {\n            for (let index = 0; index < weightList.length; index++) {\n                const element = weightList[index];\n                const elementTime = moment(element.rec_dat.toString().trim() + element.rec_tim.toString().trim(), \"YYYYMMDDHHmm\").valueOf()\n                if (elementTime <= endTime) {\n                    weightData = Number(element.value2)\n                }\n            }\n        }\n        var urineValue = 0\n        if (Array.isArray(element)) {\n            for (let index = 0; index < element.length; index++) {\n                const info = element[index];\n                const value = Number(info.out_val2)\n                urineValue = urineValue + value\n            }\n        }\n        if (weightData !== 0 && urineValue !== 0 && urine !== 0) {\n            // console.log((urineValue / urine) / weightData)\n            const cellValue = parseFloat((urineValue / urine) / weightData).toFixed(1)\n            return (\n                <div key={index} style={{\n                    borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #eeeeee\", borderCollapse: 'collapse',\n                    borderLeft: calcBorderLeft(IntervalStatus, index, Status),\n                    backgroundColor: Status !== \"Crossection\" ?\n                        (parseFloat(cellValue) === '' ? 'white' : \"rgba(175,75,25,0.05)\")\n                        :\n                        (index === 3 ? \"rgba(175,75,25,0.2)\"\n                            :\n                            \"rgba(175,75,25,0.05)\")\n                }}>\n                    {(parseFloat(cellValue) === '' && Status !== \"Crossection\") || <div style={{\n                        fontWeight: (Status === \"Crossection\" && index === 3) ? \"600\" : \"\",\n                        color: (parseFloat(cellValue) < 0.5 || parseFloat(cellValue) > 5) ? \"#FF0000\" : \"black\"\n                    }}>\n                        {(parseFloat(cellValue) === '' || parseFloat(cellValue) === 0) ? '--'\n                            :\n                            parseFloat(cellValue) >= 0 ? `+${parseFloat(cellValue).toFixed(1)}` : parseFloat(cellValue).toFixed(1)}\n                    </div>}\n                </div>\n            )\n        }\n        return (\n            <div key={index} style={{\n                borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #eeeeee\", borderCollapse: 'collapse',\n                borderLeft: calcBorderLeft(IntervalStatus, index, Status),\n                backgroundColor: Status !== \"Crossection\" ? \"white\"\n                    :\n                    index === 3 ? \"rgba(175,75,25,0.2)\"\n                        :\n                        \"rgba(175,75,25,0.05)\"\n            }}>\n                {Status === \"Crossection\" && <div style={{\n                    fontWeight: index === 3 ? \"600\" : \"\",\n                    color: \"black\"\n                }}>--</div>}\n            </div>\n        )\n    }\n\n}\n\nexport default IOpageCell\n","import React, { Component } from 'react';\nimport './iopage.scss'\nimport moment from 'moment';\nimport * as WardState from '../Function/Wardstate'\nimport * as ApiProvider from '../API/ApiProvider'\nimport * as ApiGithub from '../API/ApiGithub'\nimport X2JS from 'x2js';\nimport * as QDCList from '../Resource/QDC'\nimport * as ioDataFormat from './ioDataFormat'\nimport IOpageCell from './ioPageCell'\n\nconst calcBorderLeft = (intervalStatus, index, Status) => {\n    if (Status === \"Crossection\") {\n        return '1px solid #eeeeee';\n    }\n    if (intervalStatus === 0) {\n        if (index % 24 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else if (index % 8 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else {\n            return '1px solid #eeeeee';\n        }\n    } else if (intervalStatus === 1) {\n        if (index % 6 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else if (index % 2 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else {\n            return '1px solid #eeeeee';\n        }\n    } else if (intervalStatus === 2) {\n        if (index % 3 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else {\n            return '2px solid rgba(0,0,0,0.2)';\n        }\n    } else {\n        return '2px solid rgba(0,0,0,0.2)';\n    }\n}\n\nclass IOpage extends Component {\n    state = {\n        QDC: [],\n        PreStatus: null,\n        PreIntervalStatus: null,\n        PreCID: null,\n        PrePickerDate: null,\n        RegQDC: null,\n        CarloriesCal: []\n    }\n    getAPI(caseid, pickerdate, intervalStatus, status) {\n        if (caseid === undefined || caseid === null) {\n            return null\n        }\n        if (pickerdate === undefined || pickerdate === null) {\n            return null\n        }\n        if (intervalStatus === undefined || intervalStatus === null) {\n            return null\n        }\n        if (status === undefined || status === null) {\n            return null\n        }\n        function formatTimer(pickerdate, interstatus, status) {\n            const endTimeStamp = pickerdate + 31 * 60 * 60 * 1000\n            if (status === \"Crossection\") {\n                return {\n                    start: moment(endTimeStamp - (3 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            if (interstatus === 0) {\n                return {\n                    start: moment(endTimeStamp - (24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            if (interstatus === 1) {\n                return {\n                    start: moment(endTimeStamp - (3 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            if (interstatus === 2) {\n                return {\n                    start: moment(endTimeStamp - (7 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            return {\n                start: moment(endTimeStamp - (14 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n            }\n        }\n        const xm2 = new X2JS()\n        const timer = formatTimer(pickerdate, intervalStatus, status)\n        ApiProvider.getQDC(caseid, timer.start, timer.end)\n            .then(data => {\n                const Result = xm2.xml2js(data.data).outmsg\n                if (Number(Result.ret) === 0) {\n                    const parsedata = Result.resconts.rescont\n                    if (Array.isArray(parsedata)) {\n                        this.setState({ QDC: parsedata })\n                    }\n                    else {\n                        this.setState({ QDC: [parsedata] })\n                    }\n                }\n\n            })\n            .catch(err => {\n                console.log(\"getQDC NG \" + JSON.stringify(err));\n            });\n        // this.setState({ QDC: QDCList.data.outmsg.resconts.rescont })\n        ApiGithub.getGitHubJson(\"IOReg_QDC.json\")\n            .then(data => {\n                this.setState({ RegQDC: data.data })\n            })\n            .catch(err => {\n                console.log(\"getGithubNG\" + JSON.stringify(err))\n            })\n    }\n    componentDidMount() {\n        const { Status, IntervalStatus, caseinfo, PickerDate } = this.props\n        this.setState({ PreStatus: Status, PreIntervalStatus: IntervalStatus, PreCID: caseinfo.CASEID, PrePickerDate: PickerDate })\n        this.getAPI(caseinfo.CASEID, PickerDate, IntervalStatus, Status)\n\n    }\n    componentDidUpdate() {\n        const { Status, IntervalStatus, caseinfo, PickerDate } = this.props\n        const prestatus = this.state.PreStatus\n        const preinterstatus = this.state.PreIntervalStatus\n        const precid = this.state.PreCID\n        const prepickerdate = this.state.PrePickerDate\n        if (prepickerdate !== PickerDate || caseinfo.CASEID !== precid || IntervalStatus !== preinterstatus || Status !== prestatus) {\n            console.log(Status, IntervalStatus, caseinfo, PickerDate)\n            this.setState({ PreStatus: Status, PreIntervalStatus: IntervalStatus, PreCID: caseinfo.CASEID, PrePickerDate: PickerDate })\n            this.getAPI(caseinfo.CASEID, PickerDate, IntervalStatus, Status)\n        }\n    }\n    cellRender(arr) {\n        const { Status, IntervalStatus } = this.props\n        const mapcell = arr.map(function (value, index, array) {\n            return (\n                <div key={index} style={{ border: \"1px solid #eeeeee\", borderCollapse: \"collapse\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <t2>{parseInt(value)}</t2>\n                </div>\n            );\n        })\n        if (Status === \"Crossection\") {\n            return (\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4,1fr)\" }}>\n                    {mapcell}\n                </div>\n            );\n        }\n        else {\n            if (IntervalStatus === 0) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(24,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n            if (IntervalStatus === 1) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(18,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n            if (IntervalStatus === 2) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(21,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n            if (IntervalStatus === 3) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(14,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n        }\n    }\n    render() {\n        function pickerTimeArray(pickerdate, intervalstatus, status) {\n            const et = pickerdate + (31 * 60 * 60 * 1000)\n            var timearray = []\n            if (status === \"Crossection\") {\n                const st = pickerdate + (7 * 60 * 60 * 1000)\n                for (let index = 0; index < 3; index++) {\n                    const time = st + (index * 8 * 60 * 60 * 1000)\n                    timearray.push(time)\n                }\n            }\n            else {\n                //IntervalStatus 0:1天 1:3天 2:一週 3:兩週\n                if (intervalstatus === 0) {\n                    const st = et - (24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 24; index++) {\n                        const time = st + (index * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (intervalstatus === 1) {\n                    const st = et - (3 * 24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 18; index++) {\n                        const time = st + (index * 4 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (intervalstatus === 2) {\n                    const st = et - (7 * 24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 21; index++) {\n                        const time = st + (index * 8 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (intervalstatus === 3) {\n                    const st = et - (14 * 24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 14; index++) {\n                        const time = st + (index * 24 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n            }\n            return timearray\n        }\n\n        function starttime(status, intervalstatus, time) {\n            if (status === \"Crossection\") {\n                return time - (24 * 60 * 60 * 1000)\n            }\n            if (intervalstatus === 0) {\n                return time - (24 * 60 * 60 * 1000)\n            }\n            if (intervalstatus === 1) {\n                return time - (3 * 24 * 60 * 60 * 1000)\n            }\n            if (intervalstatus === 2) {\n                return time - (7 * 24 * 60 * 60 * 1000)\n            }\n            return time - (14 * 24 * 60 * 60 * 1000)\n\n        }\n\n        function IntervalToDataArray(startTime, status, intervalstatus, element) {\n            if (Array.isArray(element)) {\n                if (status === 'Crossection') {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (8 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                if (intervalstatus === 0) {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (1 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                if (intervalstatus === 1) {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (4 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                if (intervalstatus === 2) {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (8 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                const filterdata = element.filter(function (value, index, arr) {\n                    const valueTimeString = value.rec_dat + value.rec_tim\n                    const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                    const endTime = startTime + (24 * 60 * 60 * 1000)\n                    return valueTime > startTime && valueTime < endTime\n                })\n                return filterdata\n            }\n            return []\n        }\n\n        function SumforEach(arr) {\n            var sum = 0;\n            arr.forEach(function (element) {\n                sum += Number(element);\n            });\n            return sum;\n        }\n\n\n        function formatQDCtoIO(QDC) {\n            function caloriesCal(lost, value) {\n                if (lost === \"配方奶\") {\n                    return Number(value) * 0.8\n                }\n                if (lost === \"母奶\") {\n                    return Number(value) * 0.7\n                }\n                return 0\n            }\n            function caloriesCalonnam(nam, value) {\n                if (nam === null || nam === undefined || nam === \"\") {\n                    return 0\n                }\n                const namstring = nam.toString()\n                const valueNumber = Number(value)\n                if (valueNumber === null || valueNumber === undefined) { return 0 }\n                if (namstring.match(\"10%TPN\") !== null) { return valueNumber * 0.34 }\n                if (namstring.match(\"SMOFliquid\") !== null) { return valueNumber * 1.8 }\n                if (namstring.match(\"D10\") !== null) { return valueNumber * 0.34 }\n                if (namstring.match(\"D12\") !== null) { return valueNumber * 0.34 * 1.2 }\n                if (namstring.match(\"D50\") !== null) { return valueNumber * 0.34 * 5 }\n                if (namstring.match(\"taita\") !== null) { return valueNumber * 0.34 }\n                return 0\n            }\n            var FormatFeedingList = []\n            var FormatIVList = []\n            var FormatUrineList = []\n            var FormatOtherInList = []\n            var FormatOtherOutList = []\n            for (let index = 0; index < QDC.length; index++) {\n                const element = QDC[index];\n                const elementItem = element.item;\n                const time = moment(element.rec_dat.toString().trim() + element.rec_tim.toString().trim(), \"YYYYMMDDHHmm\").valueOf()\n                const nam = element.nam\n                const FeedingReg = RegQDC.Feeding\n                const filterFeedingStatus = FeedingReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterFeedingStatus) {\n                    FormatFeedingList.push({\n                        time: time,\n                        value: Number(element.inp_val2),\n                        calories: caloriesCal(element.lost, element.inp_val2),\n                        element: element\n                    })\n                }\n                const IVReg = RegQDC.IV\n                const filterIVStatus = IVReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterIVStatus) {\n                    FormatIVList.push({\n                        time: time,\n                        value: Number(element.inp_val1),\n                        calories: caloriesCalonnam(nam, element.inp_val1),\n                        element: element\n                    })\n                }\n                const UrineReg = RegQDC.Urine\n                const filterUrineStatus = UrineReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterUrineStatus) {\n                    FormatUrineList.push({\n                        time: time,\n                        value: Number(element.out_val2),\n                        calories: caloriesCalonnam(nam, element.out_val2),\n                        element: element\n                    })\n                }\n                const OtherReg = RegQDC.Other\n                const filterOtherStatus = OtherReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterOtherStatus) {\n                    const input_1 = Number(element.inp_val1)\n                    const output_1 = Number(element.out_val1)\n                    if (elementItem === \"排便\") {\n                        // FormatOtherInList.push({\n                        //     time: time,\n                        //     value: 1,\n                        //     calories: 0,\n                        //     element: element\n                        // })\n                        FormatOtherOutList.push({\n                            time: time,\n                            value: 1,\n                            calories: 0,\n                            element: element\n                        })\n                    }\n                    else {\n                        if (input_1 === null || input_1 === undefined) {\n                            FormatOtherOutList.push({\n                                time: time,\n                                value: Number(element.inp_val1),\n                                calories: caloriesCalonnam(nam, element.inp_val1),\n                                element: element\n                            })\n                        }\n                        if (output_1 === null || output_1 === undefined) {\n                            FormatOtherInList.push({\n                                time: time,\n                                value: Number(element.output_1),\n                                calories: 0,\n                                element: element\n                            })\n                        }\n                    }\n                }\n\n            }\n            return {\n                Feeding: FormatFeedingList,\n                IV: FormatIVList,\n                OtherIn: FormatOtherInList,\n                Urine: FormatUrineList,\n                OtherOut: FormatOtherOutList\n            }\n        }\n        function timerFormat(PickerDate, Interval, Status) {\n            const EndTime = PickerDate + (31 * 60 * 60 * 1000)\n            if (Status === 'Crossection') {\n                return {\n                    interval: 3,\n                    hourInterval: 8,\n                    startTime: EndTime - (24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            if (Interval === 0) {\n                return {\n                    interval: 24,\n                    hourInterval: 1,\n                    startTime: EndTime - (24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            if (Interval === 1) {\n                return {\n                    interval: 18,\n                    hourInterval: 4,\n                    startTime: EndTime - (3 * 24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            if (Interval === 2) {\n                return {\n                    interval: 21,\n                    hourInterval: 8,\n                    startTime: EndTime - (7 * 24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            return {\n                interval: 14,\n                hourInterval: 24,\n                startTime: EndTime - (14 * 24 * 60 * 60 * 1000),\n                endTime: EndTime\n            }\n        }\n        function listTimerFormat(List, timer, status) {\n            const inter = timer.interval\n            var TimerList = []\n            for (let index = 0; index < inter; index++) {\n                const st = timer.startTime + (index * timer.hourInterval * 60 * 60 * 1000)\n                const et = timer.startTime + ((index + 1) * timer.hourInterval * 60 * 60 * 1000)\n                const filterList = List.filter(function (info, index, arr) {\n                    const time = info.time\n                    return st <= time && time < et\n                })\n                TimerList.push(filterList)\n            }\n            if (status === 'Crossection') {\n                const st = timer.startTime\n                const et = timer.endTime\n                const filterListALL = List.filter(function (info, index, arr) {\n                    const time = info.time\n                    return st <= time && time < et\n                })\n                TimerList.push(filterListALL)\n            }\n            return TimerList\n        }\n\n        function sumIn(arr1, arr2, arr3) {\n            var sumlist = []\n            for (let index = 0; index < arr1.length; index++) {\n                const element1 = arr1[index];\n                const element2 = arr2[index];\n                const element3 = arr3[index];\n                const sum = element1 + element2 + element3\n                sumlist.push(sum)\n            }\n            return sumlist\n        }\n        function sumOut(arr1, arr2) {\n            var sumlist = []\n            for (let index = 0; index < arr1.length; index++) {\n                const element1 = arr1[index];\n                const element2 = arr2[index];\n                const sum = element1 + element2\n                sumlist.push(sum)\n            }\n            return sumlist\n        }\n        function sumInAndOut(Input, Outout) {\n            var sumlist = []\n            for (let index = 0; index < Input.length; index++) {\n                const element1 = Input[index];\n                const element2 = Outout[index];\n                const sum = parseFloat(element1 - element2).toFixed(1)\n                sumlist.push(sum)\n            }\n            return sumlist\n        }\n        function gridNumber(interval, status) {\n            if (status === \"Crossection\") {\n                return 4\n            }\n            return interval\n        }\n        function cellsum(list) {\n            const CellSum = list.map(function (info, index, arr) {\n                var sum = 0\n                for (let index = 0; index < info.length; index++) {\n                    const element = info[index];\n                    sum = sum + element.value\n                }\n                return sum\n            })\n            return CellSum\n        }\n        function cellRenderSum(Status, list, rows, type, IntervalStatus) {\n            const rowColorStyle = {\n                '0': {\n                    'SE': `rgba(15, 75, 175, 0.2)`,\n                    'Other': `rgba(15, 75, 175, 0.05)`,\n                },\n                '1': {\n                    'SE': `rgba(175,75,25,0.2)`,\n                    'Other': `rgba(175,75,25,0.05)`,\n                },\n                '2': {\n                    'SE': `rgba(100,180,200,.6)`,\n                    'Other': `rgba(100,180,200,.3)`,\n                }\n            }\n\n            const CellRender = list.map(function (info, index, arr) {\n                if (info.length === 0 || info.length === undefined) {\n                    return (\n                        <div key={index} style={{\n                            borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #eeeeee\", borderCollapse: 'collapse',\n                            borderLeft: calcBorderLeft(IntervalStatus, index, Status),\n                            backgroundColor: Status !== \"Crossection\" ? \"white\" : index === 3 ? rowColorStyle[rows].SE : rowColorStyle[rows].Other\n                        }}>\n                            {Status === \"Crossection\" && <div style={{\n                                fontWeight: (Status === \"Crossection\" && index === 3) ? \"600\" : \"\",\n                                color: \"black\"\n                            }}>--</div>}\n                        </div>\n\n                    );\n                }\n                return (\n                    <div key={index} style={{\n                        borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #eeeeee\", borderCollapse: 'collapse',\n                        borderLeft: calcBorderLeft(IntervalStatus, index, Status),\n                        backgroundColor: Status !== \"Crossection\" ?\n                            (parseFloat(info) === '' ? 'white' : rowColorStyle[rows].Other) : (index === 3 ? rowColorStyle[rows].SE : rowColorStyle[rows].Other)\n                    }}>\n                        {(parseFloat(info) === '' && Status !== \"Crossection\") || <div style={{\n                            fontWeight: (Status === \"Crossection\" && index === 3) ? \"600\" : \"\",\n                            color: type === 2 && parseFloat(info) < 0 ? \"red\"\n                                :\n                                type === 2 && parseFloat(info) >= 0 ? \"blue\" : \"black\"\n                        }}>\n                            {(parseFloat(info) === '' || parseFloat(info) === 0) ? '--'\n                                :\n                                parseFloat(info) >= 0 ? `+${parseFloat(info).toFixed(1)}` : parseFloat(info).toFixed(1)}\n                        </div>}\n                    </div>\n                );\n            })\n            return (\n                <div style={{ display: 'grid', gridTemplateColumns: 'repeat( ' + gridNumber(timerStruct.interval, Status) + ' ,1fr)' }}>\n                    {CellRender}\n                </div>\n            );\n        }\n        function cellRender(Status, list, rows, IntervalStatus) {\n            const rowColorStyle = {\n                '0': {\n                    'SE': `rgba(15, 75, 175, 0.2)`,\n                    'Other': `rgba(15, 75, 175, 0.05)`,\n                },\n                '1': {\n                    'SE': `rgba(175,75,25,0.2)`,\n                    'Other': `rgba(175,75,25,0.05)`,\n                },\n            }\n            const CellRender = list.map(function (info, index, arr) {\n                var sum = 0\n                if (info.length === 0 || info.length === undefined) {\n                    return (\n                        <div key={index} style={{\n                            borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #eeeeee\", borderCollapse: 'collapse',\n                            borderLeft: calcBorderLeft(IntervalStatus, index, Status),\n                            backgroundColor: Status !== \"Crossection\" ? \"white\"\n\n                                :\n                                index === 3 ? rowColorStyle[rows].SE\n                                    :\n                                    rowColorStyle[rows].Other\n                        }}>\n                            {Status === \"Crossection\" && <div style={{\n                                fontWeight: index === 3 ? \"600\" : \"\",\n                                color: \"black\"\n                            }}>--</div>}\n                        </div>\n                    );\n                }\n                for (let index = 0; index < info.length; index++) {\n                    const element = info[index];\n                    sum = sum + element.value\n                }\n                return (\n                    <div key={index} style={{\n                        borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #eeeeee\", borderCollapse: 'collapse',\n                        borderLeft: calcBorderLeft(IntervalStatus, index, Status),\n                        backgroundColor: Status !== \"Crossection\" ?\n                            (parseFloat(sum) === '' ? 'white' : rowColorStyle[rows].Other)\n\n                            :\n                            (index === 3 ? rowColorStyle[rows].SE : rowColorStyle[rows].Other)\n                    }}>\n                        {(parseFloat(sum) === '' && Status !== \"Crossection\") || <div style={{\n                            fontWeight: (Status === \"Crossection\" && index === 3) ? \"600\" : \"\",\n                            color: \"black\"\n                        }}>\n                            {parseFloat(info) === '' ? '--'\n                                : parseFloat(sum) === 0 ? parseFloat(sum) : parseFloat(sum).toFixed(1)}\n                        </div>}\n                    </div>\n                );\n            })\n            return (\n                <div style={{ borderCollapse: \"collapse\", display: 'grid', gridTemplateColumns: 'repeat( ' + gridNumber(timerStruct.interval, Status) + ' ,1fr)' }}>\n                    {CellRender}\n                </div>\n            );\n        }\n\n\n        function formatTime(time) {\n            if (Number(time) / 1000 >= 1) {\n                return time.toString().trim()\n            }\n            return \"0\" + time.toString().trim()\n        }\n\n        function stylechange(status) {\n            const chronicstyle = \"140px 1fr\"\n            const crossectionstyle = \"1fr 4fr\"\n            if (status === \"Crossection\") {\n                return crossectionstyle\n            }\n            else return chronicstyle\n        }\n\n        function urineforWeightAndHourCrossection(Urine, weight) {\n            const datamap = Urine.map(function (info, index, arr) {\n                var sum = 0\n                for (let index = 0; index < info.length; index++) {\n                    const element = info[index];\n                    sum = sum + element.value\n                }\n                if (sum === 0) {\n                    return 0\n                }\n                if (weight === null || weight === undefined) {\n                    return \"--\"\n                }\n                return parseFloat(sum / weight / 8).toFixed(1)\n            })\n            for (let index = 0; index < Urine.length; index++) {\n                const element = Urine[index];\n\n            }\n            return datamap\n        }\n        const { Status, IntervalStatus, caseinfo, PickerDate } = this.props\n        const timeInterval = pickerTimeArray(PickerDate, IntervalStatus, Status)\n        const et = PickerDate + (31 * 60 * 60 * 1000)\n        const st = starttime(Status, IntervalStatus, et)\n        const WEIGHT = caseinfo.WEIGHT\n        const dateWeoght = WardState.selectweight(WEIGHT, PickerDate)\n        const QDCLIST = this.state.QDC\n        // const Weight = 1000\n        const RegQDC = this.state.RegQDC\n        if (RegQDC === null || RegQDC === undefined) { return null }\n        const formatData = formatQDCtoIO(QDCLIST)\n        const timerStruct = timerFormat(PickerDate, IntervalStatus, Status)\n        const feed = listTimerFormat(formatData.Feeding, timerStruct, Status)\n        const IV = listTimerFormat(formatData.IV, timerStruct, Status)\n        const OtherIn = listTimerFormat(formatData.OtherIn, timerStruct, Status)\n        const sumin = sumIn(cellsum(feed), cellsum(IV), cellsum(OtherIn))\n        const Urine = listTimerFormat(formatData.Urine, timerStruct, Status)\n        const UrinForUnit = urineforWeightAndHourCrossection(Urine, 1000)\n        const OtherOut = listTimerFormat(formatData.OtherOut, timerStruct, Status)\n        const sumout = sumOut(cellsum(Urine), cellsum(OtherOut))\n        const sumInTotal = sumInAndOut(sumin, sumout)\n        //====================================================================\n\n        // console.log(Status)\n        const urineData = ioDataFormat.UrineData(QDCLIST)\n        const urineTimer = ioDataFormat.formatTimerData(urineData, PickerDate, IntervalStatus, Status)\n        // console.log(urineTimer)\n        const cellMap = urineTimer.map(function (info, index, arr) {\n            return <IOpageCell IntervalStatus={IntervalStatus} Status={Status} key={index} index={index} data={info} weightList={WEIGHT}></IOpageCell>\n        })\n        const titleInarray = ['進食', '點滴', '其他', '總輸入']\n        const titleOutarray = ['排尿', 'ml/kg/hr', '其他', '總排出']\n        const TitleCellIn = titleInarray.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ border: \"1px solid #eeeeee\", borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', backgroundColor: \"rgba(15,75,175,0.2)\", paddingLeft: \"10px\" }}>\n                    <t2>{value}</t2>\n                </div>\n            );\n        })\n\n        const TitleCellOut = titleOutarray.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ border: \"1px solid #eeeeee\", borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', backgroundColor: \"rgba(175,75,25,0.2)\", paddingLeft: \"10px\" }}>\n                    <t2>{value}</t2>\n                </div>\n            );\n        })\n        return (\n            <div>\n                <div style={{ display: \"grid\", gridTemplateColumns: stylechange(Status) }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"32px 32px 32px 32px\" }}>\n                        {TitleCellIn}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"32px 32px 32px 32px\" }}>\n                        {cellRender(Status, feed, '0', IntervalStatus)}\n                        {cellRender(Status, IV, '0', IntervalStatus)}\n                        {cellRender(Status, OtherIn, '0', IntervalStatus)}\n                        {cellRenderSum(Status, sumin, '0', 0, IntervalStatus)}\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: stylechange(Status), marginTop: \"8px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"32px 32px 32px 32px\", borderCollapse: \"collapse\" }}>\n                        {TitleCellOut}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"32px 32px 32px 32px\", borderCollapse: \"collapse\" }}>\n                        {cellRender(Status, Urine, '1', IntervalStatus)}\n                        {/* 幫忙style */}\n                        <div style={{ borderCollapse: \"collapse\", display: 'grid', gridTemplateColumns: 'repeat( ' + gridNumber(timerStruct.interval, Status) + ' ,1fr)' }}>\n                            {cellMap}\n                        </div>\n                        {cellRender(Status, OtherOut, '1', IntervalStatus)}\n                        {cellRenderSum(Status, sumout, '1', 0, IntervalStatus)}\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: stylechange(Status), marginTop: \"8px\" }}>\n                    <div style={{ border: \"1px solid #eeeeee\", borderCollapse: \"collapse\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", backgroundColor: \"rgba(100,180,200,.6)\", height: \"40px\" }}>\n                        {Status === \"Crossection\" ?\n                            <t2 style={{ fontSize: \"16px\", fontWeight: \"600\" }}>IO</t2>\n                            :\n                            <t2 >IO</t2>}\n                    </div>\n                    {cellRenderSum(Status, sumInTotal, '2', 2, IntervalStatus)}\n                    {/* {totalcell} */}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default IOpage;\n","import moment from 'moment'\n\nexport function formatUringWeightTimer(weightList, pickerDate, interval) {\n    function formatStartTime(interval, endTime) {\n        if (interval === 0) {\n            return endTime - (24 * 60 * 60 * 1000)\n        }\n        if (interval === 0) {\n            return endTime - (3 * 24 * 60 * 60 * 1000)\n        }\n        if (interval === 0) {\n            return endTime - (7 * 24 * 60 * 60 * 1000)\n        }\n        return endTime - (14 * 24 * 60 * 60 * 1000)\n    }\n    const endTime = pickerDate + (31 * 60 * 60 * 1000)\n    const startTime = formatStartTime(interval, endTime)\n\n}\n\nexport function FeedData(QDC) {\n    //進食\n    if (Array.isArray(QDC)) {\n        const filter = QDC.filter(function (info, index, arr) {\n            return info.item.toString().trim() === \"進食\"\n        })\n        return filter\n    }\n    return []\n}\n\nexport function IVData(QDC) {\n    //血品&輸液 line:IV\n    if (Array.isArray(QDC)) {\n        const filter = QDC.filter(function (info, index, arr) {\n            return info.item.toString().trim() === \"血品\" || info.item.toString().trim() === \"輸液\"\n        })\n        return filter\n    }\n    return []\n}\n\nexport function UrineData(QDC) {\n    //排尿\n    if (Array.isArray(QDC)) {\n        const filter = QDC.filter(function (info, index, arr) {\n            return info.item.toString().trim() === \"排尿\"\n        })\n        return filter\n    }\n    return []\n}\n\nexport function formatTimerData(dataArray, pickerdate, interval, source) {\n    function formatStartTime(source, interval, endTime) {\n        if (source === 'Crossection') {\n            return endTime - (24 * 60 * 60 * 1000)\n        }\n        if (interval === 0) {\n            return endTime - (24 * 60 * 60 * 1000)\n        }\n        if (interval === 1) {\n            return endTime - (3 * 24 * 60 * 60 * 1000)\n        }\n        if (interval === 2) {\n            return endTime - (7 * 24 * 60 * 60 * 1000)\n        }\n        return endTime - (14 * 24 * 60 * 60 * 1000)\n    }\n    function formatInterval(source, interval) {\n        if (source === 'Crossection') { return 4 }\n        if (interval === 0) { return 24 }\n        if (interval === 1) { return 18 }\n        if (interval === 2) { return 21 }\n        return 14\n    }\n    function formatStartAndEnd(source, interval, index, StartTime) {\n        if (source === 'Crossection') {\n            return {\n                start: StartTime + (index * 8 * 60 * 60 * 1000),\n                end: StartTime + ((index + 1) * 8 * 60 * 60 * 1000)\n            }\n        }\n        if (interval === 0) {\n            return {\n                start: StartTime + (index * 60 * 60 * 1000),\n                end: StartTime + ((index + 1) * 60 * 60 * 1000)\n            }\n        }\n        if (interval === 1) {\n            return {\n                start: StartTime + (index * 4 * 60 * 60 * 1000),\n                end: StartTime + ((index + 1) * 4 * 60 * 60 * 1000)\n            }\n        }\n        if (interval === 2) {\n            return {\n                start: StartTime + (index * 8 * 60 * 60 * 1000),\n                end: StartTime + ((index + 1) * 8 * 60 * 60 * 1000)\n            }\n        }\n        return {\n            start: StartTime + (index * 24 * 60 * 60 * 1000),\n            end: StartTime + ((index + 1) * 24 * 60 * 60 * 1000)\n        }\n    }\n    function formatUrineforTimer(source, interval, urine, sortData, ST, ET) {\n        if (source === 'Crossection') {\n            return {\n                start: ST,\n                end: ET,\n                element: sortData,\n                urine: 8\n            }\n        }\n        if (interval === 0) {\n            return {\n                start: ST,\n                end: ET,\n                element: sortData,\n                urine: urine\n            }\n        }\n        if (interval === 1) {\n            return {\n                start: ST,\n                end: ET,\n                element: sortData,\n                urine: urine * 4\n            }\n\n        }\n        if (interval === 2) {\n            return {\n                start: ST,\n                end: ET,\n                element: sortData,\n                urine: 8\n            }\n        }\n        return {\n            start: ST,\n            end: ET,\n            element: sortData,\n            urine: 24\n        }\n    }\n    const EndTime = pickerdate + (31 * 60 * 60 * 1000)\n    const StartTime = formatStartTime(source, interval, EndTime)\n    var urine = 0\n    var filterData = []\n    if (Array.isArray(dataArray)) {\n        for (let index = 0; index < formatInterval(source, interval); index++) {\n            const Timer = formatStartAndEnd(source, interval, index, StartTime)\n            const ST = Timer.start\n            const ET = Timer.end\n            const SortDataArray = dataArray.filter(function (info, i, arr) {\n                const time = moment(info.rec_dat.toString().trim() + info.rec_tim.toString().trim(), \"YYYYMMDDHHmm\").valueOf()\n                if (source === 'Crossection') {\n                    if (index === 3) {\n                        return StartTime <= time && time <= EndTime\n                    }\n                }\n                return ST <= time && time <= ET\n            })\n            if (source === 'Crossection') {\n                if (index === 3) {\n                    filterData.push(formatUrineforTimer(source, interval, 8, SortDataArray, StartTime, EndTime))\n\n                }\n                else {\n                    filterData.push(formatUrineforTimer(source, interval, 8, SortDataArray, ST, ET))\n                }\n            }\n            else {\n                if (SortDataArray.length === 0) {\n                    urine = urine + 1\n                    filterData.push(formatUrineforTimer(source, interval, 0, SortDataArray, ST, ET))\n                }\n                else {\n                    urine = urine + 1\n                    filterData.push(formatUrineforTimer(source, interval, urine, SortDataArray, ST, ET))\n                    urine = 0\n                }\n            }\n        }\n    }\n    return filterData\n}\n\nexport function OtherData(QDC) {\n    //第四區不屬於排尿\n    if (Array.isArray(QDC)) {\n        const filter = QDC.filter(function (info, index, arr) {\n            return info.item.toString().trim() === \"失血\" ||\n                info.item.toString().trim() === \"滲液\" ||\n                info.item.toString().trim() === \"嘔吐\" ||\n                info.item.toString().trim() === \"引流\" ||\n                info.item.toString().trim() === \"穿刺\" ||\n                info.item.toString().trim() === \"透析\" ||\n                info.item.toString().trim() === \"沖洗\" ||\n                info.item.toString().trim() === \"排便\"\n        })\n        return filter\n    }\n    return false\n}\n\n","import React, { Component } from 'react';\nimport IOpage from '../../Module/iopage'\nimport moment from 'moment';\n\n\nclass CrossectionIo extends Component {\n    render() {\n        const { caseinfo, title, PickerDate } = this.props\n        const titlearray = ['白班', '小夜', '大夜', '全日']\n        const titlelab = titlearray.map(function (info, index) {\n            return (\n                <centerstyle key={index}>\n                    <t2 style={{ fontWeight: index === 3 ? '600' : \"\" }}>{info}</t2>\n                </centerstyle>\n            );\n        })\n        return (\n            <div style={{ border: '1px solid rgba(238, 238, 238, 1)' }}>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t1 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t1>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr\", height: \"40px\" }}>\n                    <div style={{ display: 'flex', justifyContent: \"center\", alignItems: \"center\" }}>{moment(PickerDate).format('M/DD')}</div>\n                    {titlelab}\n                </div>\n                <IOpage PickerDate={PickerDate} caseinfo={caseinfo} Status={\"Crossection\"} IntervalStatus={0}></IOpage>\n            </div>\n        );\n    }\n}\n\nexport default CrossectionIo\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport * as ApiGithub from '../../API/ApiGithub'\nimport './NonlabviewtableCell.scss'\n\nconst STATUS_REPORT = 0\n\nexport default class NonlabviewtableCell extends Component {\n    state = {\n        Result: [],\n        parser: { \"mappings\": [] },\n        summary_str: \"--\",\n        RESDISP: []\n    }\n\n    componentDidMount() {\n        //call API\n        const { caseId, hisId, month, seq, name, time, status } = this.props;\n\n        if (caseId !== undefined && hisId !== undefined && month !== undefined && seq !== undefined) {\n            ApiProvider.getStoredProcedureRESDISP(hisId.trim(), month, caseId.trim(), seq)\n                .then(result => {\n                    this.setState({\n                        RESDISP: result.data\n                    })\n\n                    let input = {\n                        item_name: name.trim(),\n                        content: \"\",\n                        sample: \"\",\n                        lab: \"\",\n                        datatime: moment(time).format(\"YYYY-MM-DD HH:mm\")\n                    }\n\n                    result.data.forEach(item => {\n                        input.content = `${input.content} \"\\n\" ${item.CONTENT}`;\n                    });\n \n                    //status 0:正式報告 只有0需要做parse\n                    if (parseInt(status) === STATUS_REPORT) {\n                        ApiGithub.getGitHubJson(\"Summary.json\")\n                            .then(data => {\n                                console.log(\"get Summary.json OK \" + JSON.stringify(data.data));\n\n                                const selected_parser = this.select_parser(input, data.data)\n                                console.log(\"selected_parser \" + JSON.stringify(selected_parser));\n                                this.setState({\n                                    parser: selected_parser\n                                })\n\n                                if (selected_parser !== undefined) {\n                                    const result_kv_pairs = this.parse(input, selected_parser)\n                                    console.log(\"result_kv_pairs \" + JSON.stringify(result_kv_pairs));\n\n                                    const summary_str = this.summerize(result_kv_pairs, selected_parser)\n                                    console.log(\"summary_str \" + JSON.stringify(summary_str));\n\n                                    this.setState({\n                                        summary_str: summary_str\n                                    })\n                                }\n                            })\n                            .catch(err => {\n                                console.log(err)\n                            })\n                    }\n                })\n                .catch(err => {\n                    console.log(\"getStoredProcedureRESDISP NG \" + JSON.stringify(err));\n                });\n        }\n    }\n\n    select_parser = (input, parsers) => {\n        return parsers.find(x =>\n            input.item_name.match(x.apply_condition.name)\n            && (!x.apply_condition.sample || input.sample.match(x.apply_condition.sample))\n            && (!x.apply_condition.lab || input.lab.match(x.apply_condition.lab))\n            && (!x.apply_condition.start_time || input.datetime >= x.apply_condition.start_time)\n            && (!x.apply_condition.end_time || input.datetime < x.apply_condition.end_time)\n        )\n    }\n\n    parse = (input, parser) => {\n        let mappings = parser.mappings\n        let content = input.content\n        let result = {}\n        mappings.forEach(mapping => {\n            const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n            const match = content.match(re)\n            result[mapping.key] = match && match[mapping.position]\n        });\n        return result;\n    }\n\n    summerize = (kv_pairs, parser) => {\n        let summary_str = parser.summary\n        for (const key in kv_pairs) {\n            let match_replacer = summary_str.match(RegExp(\"\\\\[\" + key + \"(;(.*?))?\\\\]\"))\n            let replacer = \"\"\n            if (match_replacer && match_replacer.length === 3) {\n                replacer = match_replacer[2]\n            }\n            summary_str = summary_str.replace(RegExp(\"\\\\[\" + key + \"(;.*?)?\\\\]\"), kv_pairs[key] || replacer)\n        }\n        return summary_str;\n    }\n\n    render() {\n        function statusFormat(status) {\n            console.log(status)\n            if (status === 0) {\n                return \"正式報告\"\n            }\n            if (status === 1) {\n                return \"已簽收\"\n\n            }\n            if (status === 2) {\n                return \"待送檢\"\n            }\n            return status\n        }\n        //status 0:正式報告 只有0需要做parse\n        const { time, name, status, come, showModal, isSameDay } = this.props;\n        const { summary_str, RESDISP } = this.state;\n        const statusRender = statusFormat(status)\n        const canShowReport = parseInt(status) === 0\n        return (\n            <div style={{ minHeight: \"40px\", display: \"grid\", gridTemplateColumns: \"1fr 1.5fr 1fr 1fr 1fr\", overflowY: \"auto\", borderTop: '#989898 1px solid', borderBottom: \"#989898 1px solid\", borderCollapse: \"collapse\" }}>\n                <t3 className='nonlabteblecell'>{moment(time).format('MM/DD HH:mm')}</t3>\n                <t3 className='nonlabteblecell' style={{ justifyContent: \"left\", borderLeft: \"rgba(238, 238, 238, 1) 1px solid\" }}>{name}</t3>\n                <t3 className='nonlabteblecell' style={{ borderLeft: \"rgba(238, 238, 238, 1) 1px solid\" }}>{come}</t3>\n                <t3 className='nonlabteblecell' style={{ borderLeft: \"rgba(238, 238, 238, 1) 1px solid\" }}>{statusRender}</t3>\n                {canShowReport && <t3 className='nonlabteblecell' onClick={() => showModal(RESDISP)} style={{ color: \"blue\", textDecoration: \"underline\", cursor: \"pointer\", borderLeft: \"rgba(238, 238, 238, 1) 1px solid\" }}>{summary_str}</t3>}\n                {!canShowReport && <t3 className='nonlabteblecell'>{summary_str}</t3>}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nclass ExamReportModal extends Component {\n    render() {\n        const reportDetail = this.props.report\n        const showDetail = reportDetail.map((data, index) => {\n            return data.CONTENT !== \"\" ? <div key={ \"ExamReportModal\" + index } style={{ whiteSpace: \"pre-wrap\" }}>{data.CONTENT}</div> : \"\"\n        })\n        return (\n            <div>{showDetail}</div>\n        );\n    }\n}\n\nexport default ExamReportModal\n","import React, { Component } from 'react';\nimport './Nonlabviewtable.scss'\nimport NonlabviewtableCell from './NonlabviewtableCell'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider'\nimport { Modal } from 'antd';\nimport InsReportModal from '../ExamReportModal'\nimport * as ORDERLIST from '../../Resource/ORDERLIST'\n\nclass Nonlabviewtable extends Component {\n    state = {\n        visible: false,\n\n        modalVisible: false,\n        modalReport: \"\",\n        ORDLIST: [],\n        RESSECT: []\n    }\n    componentDidMount() {\n        this.nonLabApiGet()\n    }\n    nonLabApiGet() {\n        function selectMonthInterval(storeProcedureTime) {\n            const timestampInterval = moment() - moment(storeProcedureTime, \"YYYY-MM-DD\").valueOf()\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        // ApiProvider.getStoredProcedureRESSECT(caseinfo.HISID, MonthInterval, \"ALL\", \"DOC3924B\")\n        //     .then(data => { this.setState({ RESSECT: data.data }) })\n        //     .catch(err => { console.log(\"getStoredProcedureRESSECT NG \" + JSON.stringify(err)) });\n        const { caseinfo, StartTime } = this.props\n        const storeProcedureTime = moment(StartTime).format(\"YYYY-MM-DD\")\n        const MonthInterval = selectMonthInterval(storeProcedureTime)\n        ApiProvider.getStoredProcedureORDLIST(caseinfo.HISID, storeProcedureTime, \"ALL\", \"DOC3924B\")\n            .then(data => { this.setState({ ORDLIST: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureORDLIST NG \" + JSON.stringify(err)) });\n        // this.setState({ ORDLIST: ORDERLIST.data })\n    }\n    showModal = (report) => {\n        this.setState({\n            modalVisible: true,\n            modalReport: report\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n    render() {\n        function ORDLISTFormat(ORDLIST, PickerDateRange) {\n            var ORDLIST_Format = []\n            if (Array.isArray(ORDLIST)) {\n                for (let index = 0; index < ORDLIST.length; index++) {\n                    const element = ORDLIST[index];\n                    const elemetnStatus = Number(element.ORSTATUS)\n                    const elementORBGNTime = moment(element.ORBGNDT.toString().trim() + element.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n                    if (PickerDateRange[0] <= elementORBGNTime && elementORBGNTime <= PickerDateRange[1]) {\n                        if (elemetnStatus === 64) {\n                            //正式報告\n                            ORDLIST_Format.push({\n                                time: elementORBGNTime,\n                                status: 0,\n                                element: element\n                            })\n                        }\n                        else if (elemetnStatus === 38) {\n                            //已簽收 \n                            ORDLIST_Format.push({\n                                time: elementORBGNTime,\n                                status: 1,\n                                element: element\n                            })\n                        }\n                        else if (elemetnStatus === 31) {\n                            //待送檢\n                            ORDLIST_Format.push({\n                                time: elementORBGNTime,\n                                status: 2,\n                                element: element\n                            })\n                        }\n                        else if (elemetnStatus === 82 || elemetnStatus === 60 || elemetnStatus === 61) {\n                            //已取消 不顯示\n                            continue\n                        }\n                        else {\n                            //Other\n                            ORDLIST_Format.push({\n                                time: elementORBGNTime,\n                                status: elemetnStatus,\n                                element: element\n                            })\n                        }\n                    }\n                }\n            }\n            return ORDLIST_Format\n        }\n        const { modalVisible, modalReport, ORDLIST } = this.state\n        const { PickerDateRange } = this.props\n        let FormatList = ORDLISTFormat(ORDLIST, PickerDateRange)\n        const showModal = this.showModal\n        const handleOk = this.handleOk\n        const handleCancel = this.handleCancel\n\n        if (FormatList.length > 1) {\n            FormatList = FormatList.sort((a, b) => {\n                return a.time < b.time ? 1 : -1\n            })\n        }\n\n        const nonlabcell = FormatList.map(function (value, index, array) {\n            const come = value.element.ORSPCN1;\n            const time = value.time\n            const name = value.element.ORPROCED;\n            const status = value.status;\n            let isSameDay = false;\n            if (index < FormatList.length - 1) {\n                isSameDay = moment(value.time).isSame(moment(FormatList[index + 1].time), 'day');\n            }\n            if (index === 0 || index === FormatList.length - 1) {\n                isSameDay = true;\n            }\n\n            return (\n                <NonlabviewtableCell key={\"Nonlabviewtable\" + index} come={come} time={time} name={name} status={status} hisId={value.element.ORHISTNO} caseId={value.element.ORDSEQCN} month={value.element.ORMM} seq={value.element.ORDSEQNO} showModal={showModal} isSameDay={isSameDay}></NonlabviewtableCell>\n            );\n        })\n        const title = [\"時間\", \"檢驗項目\", \"檢體\", \"狀態\", \"報告\"]\n        const titlecell = title.map(function (value, index, arr) {\n            const tempStyle = index == 1\n            return (\n                <t3 className='nonlabtebletitlecell' style={{ justifyContent: \"center\" }}>{value}</t3>\n            );\n        })\n\n\n        return (\n            <div>\n                <div style={{ height: \"30px\", backgroundColor: \"rgba(226, 237, 243,.5)\", display: \"grid\", gridTemplateColumns: \"1fr 1.5fr 1fr 1fr 1fr\" }}>\n                    {titlecell}\n                </div>\n                <div style={{ border: \"1px solid rgba(232, 232, 232, 1)\", borderRadius: \"0 0 4px 4px\", borderCollapse: \"collapse\" }}>\n                    <div className='nonlabviewtable'>\n                        {JSON.stringify(FormatList) !== '[]' ?\n                            nonlabcell\n                            :\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1.5fr 1fr 1fr 1fr\" }}>\n                                <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                    無資料\n                                </div>\n                            </div>}\n                    </div>\n                    <Modal\n                        title={\"檢驗結果\"}\n                        visible={modalVisible}\n                        onOk={handleOk}\n                        onCancel={handleCancel}\n                        width={1000}\n                        footer={null}>\n                        <InsReportModal report={modalReport}></InsReportModal>\n                    </Modal>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Nonlabviewtable\n","import React, { Component } from 'react';\nimport Nonlabviewtable from './Nonlabviewtable'\n \n\nclass Nonlabviewlayout extends Component {\n    render() {\n        // const { PickerDate } = this.props\n        // const { modalVisible, modalReport } = this.state\n        // const showModal = this.showModal\n        // const handleOk = this.handleOk\n        // const handleCancel = this.handleCancel\n        return (\n            <div style={{ marginBottom: \"10px\" }}> \n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t1 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>近三日報告清單</t1>\n                </div>\n                <Nonlabviewtable caseinfo={this.props.caseinfo} PickerDateRange={this.props.PickerDateRange}></Nonlabviewtable>\n            </div>\n        );\n    }\n}\n\nexport default Nonlabviewlayout\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider'\n\nclass RTtable extends Component {\n    state = {\n        RESDBGAS: [],\n        PreHID: null,\n        PreTransInDate: null,\n    }\n    componentDidMount() {\n        const HID = this.props.caseinfo.HISID\n        const TRDT = this.props.caseinfo.TRANSINDT\n        this.setState({ PreHID: HID, PreTransInDate: TRDT })\n        this.getGasAPI()\n    }\n    componentDidUpdate() {\n        const HID = this.props.caseinfo.HISID\n        const TRDT = this.props.caseinfo.TRANSINDT\n        const PreHID = this.state.PreHID\n        const PreTRDT = this.state.PreTransInDate\n        if (HID !== PreHID || TRDT !== PreTRDT) {\n            this.setState({ PreHID: HID, PreTransInDate: TRDT })\n            this.getGasAPI()\n        }\n    }\n    getGasAPI() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID\n        const TransInDate = moment(caseinfo.TRANSINDT, \"YYYYMMDD\").format(\"YYYY-MM-DD\")\n        ApiProvider.getStoredProcedureRESDBGAS(HID, TransInDate)\n            .then(data => { this.setState({ RESDBGAS: data.data }) })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDBGAS NG \" + JSON.stringify(err));\n            });\n    }\n    GasListToCell = () => {\n\n        function formatGasData(GasDataList, st, et) {\n            let filterTimer = GasDataList.filter(function (element, index, arr) {\n                const timeStamp = moment(element.ORRESDT.toString().trim() + element.ORRESTM.toString().trim(), 'YYYY-MM-DDHH.mm.ss').valueOf()\n                return st <= timeStamp && timeStamp <= et\n            })\n\n            if (Object.keys(filterTimer).length > 1) {\n                filterTimer = filterTimer.sort((a, b) => {\n                    let tempTimeA = moment(a.ORRESDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n                    let tempTimeB = moment(b.ORRESDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n                    return tempTimeA < tempTimeB ? 1 : -1\n                })\n            }\n\n            const decideStyle = {\n                \"1\": { \"min\": 6.5, \"max\": 7.7 },\n                \"2\": { \"min\": 0, \"max\": 100 },\n                \"3\": { \"min\": 0, \"max\": 200 },\n                \"4\": { \"min\": 0, \"max\": 40 },\n                \"5\": { \"min\": -30, \"max\": 20 },\n                \"6\": { \"min\": 0, \"max\": 100 },\n                \"7\": { \"min\": 0, \"max\": 100 }\n            }\n\n            const cellMap = filterTimer.map(function (element, index, arr) {\n                const PHValue = element.SS07\n                const PCO2Value = element.SS06\n                const PO2Value = element.SS08\n                const HCO3Value = element.SS04\n                const BEValue = element.SS01\n                const O2SatValue = element.SS05\n                const FiO2Value = element.SS03\n                const timeStamp = moment(element.ORRESDT.toString().trim() + element.ORRESTM.toString().trim(), 'YYYY-MM-DDHH.mm.ss').valueOf()\n                const time = moment(timeStamp).format(\"MM/DD HH:mm\")\n                const reportSample = 'link'\n                const gasDataArray = [time, PHValue, PCO2Value, PO2Value, HCO3Value, BEValue, O2SatValue, FiO2Value, reportSample]\n                const GasCell = gasDataArray.map(function (value, index, array) {\n                    let tempStyle = false\n                    const tempValue = parseFloat(value)\n                    // console.log(index.toString())\n                    if (index != 0 && index != 8 && (tempValue > decideStyle[index.toString()].max || tempValue < decideStyle[index.toString()].min) || isNaN(tempValue) == true) {\n                        tempStyle = true;\n                    }\n                    return (\n                        <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\" }}>\n                            <t2 style={{\n                                color: tempStyle ? \"red\" : index !== 0 ? \"black\" : '',\n                                fontWeight: index !== 0 ? 600 : ''\n                            }}>{value}</t2>\n                        </centerstyle>\n                    );\n                })\n                return (\n                    <div key={index} style={{ height: \"40px\", display: \"grid\", gridTemplateColumns: \"110px repeat(8,1fr)\" }}>{GasCell}</div>\n                );\n            })\n            return cellMap\n\n        }\n        const { Timer } = this.props\n        const startTime = Timer[0]\n        const endTime = Timer[1]\n        const GasData = this.state.RESDBGAS\n        const CellRander = formatGasData(GasData, startTime, endTime)\n\n        return CellRander\n    }\n\n    render() {\n        const { searchbar } = this.props\n        const GasTitleList = ['時間', 'pH', `PCO2`, 'PO2', 'HCO3', 'BE', 'O2SAT', 'FiO2', '報告']\n        const GasTitleCell = GasTitleList.map(function (value, index, array) {\n            function formatString(value) {\n                // console.log(value)\n                if (value === \"O2SAT\") {\n                    return <div style={{ fontSize: \"14px\" }}>O<sub>2</sub>SaT</div>\n                }\n                if (value === \"PCO2\") {\n                    return <div style={{ fontSize: \"14px\" }}>PCO<sub>2</sub></div>\n                }\n                if (value === \"PO2\") {\n                    return <div style={{ fontSize: \"14px\" }}>PO<sub>2</sub></div>\n                }\n                if (value === \"HCO3\") {\n                    return <div style={{ fontSize: \"14px\" }}>HCO<sub>2</sub></div>\n                }\n                if (value === \"FiO2\") {\n                    return <div style={{ fontSize: \"14px\" }}>FiO<sub>2</sub></div>\n                }\n                return value\n            }\n            return (\n                <centerstyle key={index} style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", borderCollapse: \"collapse\" }}>\n                    <div style={{ fontSize: \"14px\" }}>{formatString(value)}</div>\n                </centerstyle>\n            );\n        })\n        const GasListToCell = this.GasListToCell()\n\n        return (\n            <div>\n                <div style={{ justifyItems: \"center\", height: \"30px\", backgroundColor: \"rgba(226, 237, 243,.5)\", display: \"grid\", gridTemplateColumns: \"110px repeat(8,1fr)\" }}>\n                    {GasTitleCell}\n                </div>\n                <div style={{ border: \"1px solid rgba(232, 232, 232, 1)\", borderRadius: \"0 0 4px 4px\", borderCollapse: \"collapse\" }}>\n                    <div style={{ minHeight: searchbar ? \"calc(100vh - 305px)\" : \"120px\", maxHeight: searchbar ? \"calc(100vh - 305px)\" : \"400px\", overflowY: \"auto\" }}>\n                        {GasListToCell.length !== 0 ?\n                            GasListToCell\n                            :\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"110px repeat(8,1fr)\" }}>\n                                <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                    無資料\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTtable\n","import React, { Component } from 'react';\nimport RTtable from './RTtable'\nclass GAS extends Component {\n\n\n    render() {\n        const { caseinfo, PickerDateRange, searchbar } = this.props\n\n        return (\n            <div >\n                <div style={{ backgroundColor: \"#71b0e46e\", borderRadius: \"4px 4px 0 0\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>\n                        {searchbar ? \"GAS累積報告\" : \"近三日血液氣體分析\"}\n                    </t2>\n                </div>\n                <RTtable Timer={PickerDateRange} caseinfo={caseinfo} searchbar={searchbar}></RTtable>\n            </div>\n        );\n    }\n}\n\nexport default GAS\n","import React, { Component } from 'react';\nimport { Modal, Input, Button } from 'antd';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nexport default class RemarkModal extends Component {\n    state = {\n        preremark: null,\n        preeditor: null,\n    }\n\n    componentDidMount() {\n        this.onInputChange = this.onInputChange.bind(this);\n        this.onOkClick = this.onOkClick.bind(this);\n        const remark = this.props.remarkValue.remark\n        console.log(this.props.remarkValue.remark)\n        this.setState({ preremark: remark })\n\n    }\n\n    componentDidUpdate() {\n        const remark = this.props.remarkValue.remark\n        const { preremark } = this.state\n        console.log(preremark)\n        if (preremark === null || preremark === \"\") {\n            if (preremark !== remark) {\n                this.setState({ preremark: remark })\n            }\n        }\n\n    }\n    onInputChange(event) {\n        // const preString = this.state.preremark + event.target.value\n        console.log(event.target.value)\n        this.setState({ preremark: event.target.value })\n    }\n\n    onOkClick(event) {\n        const { transinId, type, remarkId } = this.props.remarkValue\n        const { preremark, preeditor, } = this.state;\n        let fixTime = moment().format('YYYY-MM-DD[T]HH:mm:ss');\n        // console.log(name, remark, remarkId, fixTime, transinId, type, editor)\n        const name = \"breathSetting\"\n\n        let tempRemark = ''\n\n        if (event.target.value == '1') {\n            tempRemark = preremark\n        } else {\n            tempRemark = ''\n            this.setState({ preremark: null })\n        }\n\n        ApiProvider.createRemark(name, tempRemark, remarkId, fixTime, transinId, type, preeditor)\n            .then(result => {\n                console.log(\"createRemark OK \" + JSON.stringify(result));\n                this.props.onOk(tempRemark);\n            })\n            .catch(err => {\n                console.log(\"createRemark NG \" + JSON.stringify(err));\n            });\n    }\n\n    render() {\n        const { TextArea } = Input;\n        const { createTime, name } = this.props.remarkValue;\n        const onCancel = this.props.onCancel;\n        const onOk = this.onOkClick.bind(this);\n        console.log(this.state.preremark)\n        return (\n            <Modal\n                title=\"註記功能\"\n                visible={this.props.visible}\n                onCancel={onCancel}\n                okText=\"儲存\"\n                cancelText=\"取消\"\n                footer={[\n                    <Button style={{ float: 'left' }} onClick={onOk} value=\"0\">刪除</Button>,\n                    <Button onClick={onCancel}>取消</Button>,\n                    <Button type=\"primary\" onClick={onOk} value=\"1\">儲存</Button>\n                ]}\n            >\n                <div style={{ display: \"grid\", gridTemplateRows: \"30px 30px 30px 30px\" }}>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div>開立時間: {createTime}</div>\n                        <div>上次編輯時間: </div>\n                        {/* <div>上次編輯時間: {this.state.editTime}</div> */}\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div>處理名稱: {name}</div>\n                        <div>上次編輯者: {this.state.editor}</div>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div>頻次:</div>\n                        <div>開立醫師: {this.state.editor}</div>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>註記內容:</div>\n                    <TextArea rows={5} placeholder=\"請輸入備註內容\" value={this.state.preremark} onChange={this.onInputChange} />\n                </div>\n            </Modal>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './RTbreathtablecell.scss'\n// import * as FiliterReg from '../../Function/FiliterReg'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass RTbreathetablecell extends Component {\n    state = {\n        onCell: false,\n        onEdit: false,\n        remark: '',\n        powerLogin: 0\n    }\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n    Mouse_move() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onCell: true\n                }\n            )\n        }\n    }\n\n    Mouse_leave() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onCell: false\n                }\n            )\n        }\n    }\n\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue)\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            onEdit: false,\n        });\n    }\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    seachRemark = () => {\n        const { caseinfo, value } = this.props\n        const id = `Breath${moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").valueOf()}`\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, id, \"RTbreath\").then(result => {\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    render() {\n        const { value, caseinfo, isSameDay } = this.props\n        const id = `Breath${moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").valueOf()}`\n        const time = moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\")\n        const mode = value.Mode.toString().trim()\n        const setting = value.Setting\n\n        console.log(setting)\n\n        const remarkValue = {\n            \"createTime\": time,\n            \"name\": setting,\n            \"remarkId\": id,\n            \"remark\": this.state.remark,\n            \"transinId\": caseinfo.TRANSINID,\n            \"type\": \"RTbreath\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <div onMouseMove={() => this.Mouse_move()} onMouseLeave={() => this.Mouse_leave()} className=\"RTtablecell\" style={{ minheight: this.state.remark === '' ? '40px' : '60px', borderTop: '#989898 1px solid', borderBottom: '#989898 1px solid' }}>\n                <t3 className='RTBreathDateCell' style={{ minheight: this.state.remark === '' ? '40px' : '60px' }}>{time}</t3>\n                <div style={{ display: \"grid\", gridTemplateRows: [this.state.remark === null || this.state.remark === undefined || this.state.remark === '' ? \"1fr\" : \"1fr 20px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 3fr\" }}>\n                        <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", borderCollapse: \"collapse\", borderLeft: \"rgba(238, 238, 238, 1) 1px solid\" }}>\n                            <t2 style={{ fontWeight: 600, color: 'black' }}>\n                                {mode}\n                            </t2>\n                        </div>\n                        <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", borderCollapse: \"collapse\", borderLeft: \"rgba(238, 238, 238, 1) 1px solid\" }}>\n                            <t2 style={{ fontWeight: 600, color: 'black' }}>\n                                {setting}\n                            </t2>\n                        </div>\n                    </div>\n                    <t3 style={{ fontWeight: 600, alignItems: \"center\", borderCollapse: \"collapse\", color: \"rgb(0,120,0)\", overflow: \"hidden\", height: \"20px\", display: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"none\" : \"\"], borderLeft: \"rgba(238, 238, 238, 1) 1px solid\", borderTop: \"rgba(238, 238, 238, 1) 1px solid\" }}>{this.state.remark}</t3>\n                    <div style={this.state.onCell ?\n                        { display: this.state.powerLogin == 1 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", right: 0, height: this.state.remark === '' ? \"100%\" : \"100%\", background: \"transparent\", width: \"77px\" }\n                        :\n                        { display: \"none\" }}>\n                        <div onClick={() => this.Edit_state()} style={{ width: this.state.remark === '' ? '30px' : '40px', height: this.state.remark === '' ? '30px' : '40px', borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }}>\n                            <img src={chooseedit} alt='chooseedit'></img>\n                        </div>\n                    </div>\n                </div>\n                <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            </div>\n        );\n    }\n}\n\nexport default RTbreathetablecell\n","import React, { Component } from 'react';\nimport RTbreathetablecell from './RTbreathtablecell'\nimport moment from 'moment';\n// import * as FilterReg from '../../Function/FiliterReg'\n// import moment from 'moment'\n\nclass RTbreathetable extends Component {\n    createRTbreathetable = () => {\n        const { DataList, caseinfo, searchbar } = this.props\n\n        // const DataList = [\n        //     {Mode: \"OETT+PC\", Setting: \"30/20/24/5\",Date: \"20200304\", Time: 2000},\n        //     {Mode: \"OETT+PC\", Setting: \"30/20/24/5\",Date: \"20200304\", Time: 1709},\n        //     {Mode: \"OETT+PC\", Setting: \"30/20/24/5\",Date: \"20200304\", Time: 1500},\n        //     {Mode: \"OETT+PC\", Setting: \"30/20/24/5\",Date: \"20200304\", Time: 1400},\n        //      {Mode: \"OETT+SIMV+PS\", Setting: \"30/20/24/5\", Date: \"20200304\", Time: 1233},\n        //     {Mode: \"OETT+SIMV+PS\", Setting: \"30/20/24/5\", Date: \"20200305\", Time: 1017},\n        //      {Mode: \"OETT+PC\", Setting: \"30/20/24/5\", Date: \"20200305\", Time: \"0700\"},\n        // ]       \n        const RTbreathetable = DataList.map(\n            (value, index, array) => {\n                let isSameDay = false;\n                if (index < DataList.length - 1) {\n                    isSameDay = moment(value.Date, \"YYYYMMDD\").isSame(moment(DataList[index + 1].Date, \"YYYYMMDD\"), 'day');\n                }\n                if (index === 0 || index === DataList.length - 1) {\n                    isSameDay = true;\n                }\n                return <RTbreathetablecell key={index} value={value} caseinfo={caseinfo} searchbar={searchbar} isSameDay={isSameDay}></RTbreathetablecell>\n            }\n        )\n\n        return DataList.length !== 0 ? RTbreathetable :\n            <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr 3fr\" }}>\n                <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                    無資料\n                </div>\n            </div>\n    }\n\n    render() {\n        const title = [\"時間\", \"模式\", \"設定\"]\n        const { searchbar } = this.props\n        const titleCellRender = title.map(function (element, index, arr) {\n            return (\n                <div key={index} style={{ display: \"flex\", alignItems: \"center\", borderCollapse: \"collapse\", justifyContent: \"center\" }}>\n                    <div style={{ fontSize: \"14px\" }}>{element}</div>\n                </div>\n            );\n        })\n\n        return (\n            <div>\n                <div style={{ height: \"30px\", display: \"grid\", gridTemplateColumns: \"90px 1fr 3fr\", backgroundColor: \"rgba(226, 237, 243,.5)\", justifyItems: \"center\" }}>\n                    {titleCellRender}\n                </div>\n                <div style={{ border: \"1px solid rgba(232, 232, 232, 1)\", borderRadius: \"0 0 4px 4px\", borderCollapse: \"collapse\" }}>\n                    <div style={{ minHeight: searchbar ? \"calc(100vh - 305px)\" : \"120px\", maxHeight: searchbar ? \"calc(100vh - 305px)\" : \"400px\", overflow: \"auto\" }}>\n                        {this.createRTbreathetable()}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTbreathetable\n","import React, { Component } from 'react';\nimport RTbreathetable from './RTbreathetable'\n// import { DatePicker } from 'antd';\nimport * as FilterReg from '../../Function/FiliterReg'\nimport X2JS from 'x2js';\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as QSPEList from '../../Resource/QSPE'\n\nclass RTbreathe extends Component {\n    state = {\n        preCID: null,\n        QSPE: []\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDateRange } = this.props\n        this.setState({ preCID: caseinfo.CASEID, preST: PickerDateRange[0], preET: PickerDateRange[1] })\n        this.getQSPEApi(caseinfo.CASEID, PickerDateRange[0], PickerDateRange[1])\n\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDateRange } = this.props\n        const { preCID, preST, preET } = this.state\n        const CID = caseinfo.CASEID\n        const ST = PickerDateRange[0]\n        const ET = PickerDateRange[1]\n        if (CID !== preCID || ST !== preST || ET !== preET) {\n            this.setState({ preCID: caseinfo.CASEID, preST: PickerDateRange[0], preET: PickerDateRange[1] })\n            this.getQSPEApi(caseinfo.CASEID, PickerDateRange[0], PickerDateRange[1])\n        }\n    }\n    getQSPEApi(CID, st, et) {\n        const xm2 = new X2JS()\n        const start = moment(st).format(\"YYYYMMDDHHmm\")\n        const end = moment(et).format(\"YYYYMMDDHHmm\")\n        ApiProvider.getQSPE(CID, start, end)\n            .then(data => {\n                console.log(xm2.xml2js(data.data).outmsg.resconts.rescont)\n                const result = xm2.xml2js(data.data).outmsg\n                if (Number(result.ret) === 0) {\n                    const resultData = result.resconts.rescont\n                    if (Array.isArray(resultData)) {\n                        this.setState({ QSPE: resultData })\n                    }\n                    else {\n                        this.setState({ QSPE: [resultData] })\n                    }\n                }\n                return []\n            })\n            .catch(err => {\n                console.log(\"getQSPE NG \" + JSON.stringify(err))\n            });\n        // this.setState({ QSPE: QSPEList.data })\n    }\n\n    createRTbreathetable = () => {\n        const { caseinfo, PickerDateRange, searchbar } = this.props\n        const { QSPE } = this.state\n        let DataList = FilterReg.QSPERegList(QSPE)\n\n        //這邊不用再分時間\n        DataList = DataList.filter(data => {\n            let time = moment(data.Date + data.Time, \"YYYYMMDDHHmm\").valueOf()\n            return PickerDateRange[0] <= time && time <= PickerDateRange[1]\n        })\n\n        if (Object.keys(DataList).length > 1) {\n            DataList = DataList.sort((a, b) => {\n                let tempTimeA = moment(a.Date + a.Time, \"YYYYMMDDHHmm\").valueOf()\n                let tempTimeB = moment(b.Date + b.Time, \"YYYYMMDDHHmm\").valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n        }\n\n        return <RTbreathetable DataList={DataList} caseinfo={caseinfo} searchbar={searchbar}></RTbreathetable>\n    }\n\n    render() {\n        const { searchbar } = this.props\n        return (\n            <div >\n                <div style={{ backgroundColor: \"#71b0e46e\", borderRadius: \"4px 4px 0 0\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>\n                        {searchbar ? \"呼吸器設定紀錄\" : \"近三日呼吸器設定\"}\n                    </t2>\n                </div>\n                {this.createRTbreathetable()}\n            </div>\n        );\n    }\n}\n\nexport default RTbreathe\n","import React, { Component } from 'react';\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Prescriptionordertablecell.scss'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Prescriptionordertablecell extends Component {\n    state = {\n        onEdit: false,\n        onMove: false,\n        remark: '',\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { caseinfo, value } = this.props\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, value.UDORDSEQ, \"prescription\").then(result => {\n            console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    on_Mouse() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: true\n                }\n            )\n        }\n    }\n    on_leave() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: false\n                }\n            )\n        }\n    }\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = newRemarkValue => {\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    checkStatus = () => {\n        const { value } = this.props\n        const valueStatus = Number(value.UDSTATUS)\n        if (valueStatus === 80) {\n            return \"已取消\"\n        }\n        if (valueStatus === 30) {\n            return \"生效中\"\n        }\n        if (valueStatus === 60) {\n            return \"已完成\"\n        }\n        return valueStatus\n    }\n\n    render() {\n        const { caseinfo, value } = this.props\n        const Name = value.UDGNAME.toString()\n        const PName = value.UDRPNAME.toString()\n        const Unit = value.UDDOSAGE.toString() + \"/\" + value.UDDUNIT.toString() + \"/\" + value.UDFREQN.toString() + \"/\" + value.UDROUTE.toString()\n        const ST = moment(value.UDBGNDT, \"YYYY-MM-DD-HH:mm:ss.000000\").format('MM/DD HH:mm')\n        const ET = moment(value.UDENDDT, \"YYYY-MM-DD-HH:mm:ss.000000\").format('MM/DD HH:mm')\n        const Status = this.checkStatus()\n\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": PName,\n            \"remarkId\": value.UDORDSEQ,\n            \"remark\": this.state.remark,\n            \"transinId\": caseinfo.TRANSINID,\n            \"type\": \"prescription\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <div onMouseMove={() => this.on_Mouse()} onMouseLeave={() => this.on_leave()} className='prescriptiontablecell' style={{ minheight: this.state.remark === '' ? '40px' : '60px', borderTop: '#989898 1px solid', borderBottom: \"#989898 1px solid\", borderCollapse: \"collapse\" }}>\n                <t3 className='prescriptiontablecellcontexttext' style={{ minheight: this.state.remark === '' ? '40px' : '1fr' }}>{ST} - {ET}</t3>\n                <div style={{ display: \"grid\", gridTemplateRows: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"1fr\" : \"1fr 20px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 140px 70px\", minHeight: \"40px\" }}>\n                        <div className='prescriptiontablecellcontext'>\n                            <t2 className='prescriptiontablecellcontexttext' style={{ color: \"black\", fontWeight: 600 }}>{Name}</t2>\n                        </div>\n                        <div className='prescriptiontablecellcontext'>\n                            <t3 className='prescriptiontablecellcontexttext'>{Unit}</t3>\n                        </div>\n                        <div className='prescriptiontablecellcontext'>\n                            <t3 className='prescriptiontablecellcontexttext'>{Status}</t3>\n                        </div>\n                    </div>\n                    <t3 style={{ fontWeight: 600, alignItems: \"center\", borderTop: \"rgba(238,238,238,1) 1px solid\", borderLeft: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\", padding: \"0px 5px\", color: \"rgb(0,120,0)\", overflow: \"hidden\", height: \"20px\", display: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"none\" : \"\"] }}>{this.state.remark}</t3>\n                    <div style={this.state.onMove ?\n                        { display: this.state.powerLogin == 1 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", right: 0, height: [this.state.remark === undefined || this.state.remark === \"\" ? \"40px\" : \"60px\"], background: \"transparent\", width: \"77px\" }\n                        :\n                        { display: \"none\" }}>\n                        <div onClick={() => this.Edit_state()} style={{ width: this.state.remark === '' ? '30px' : '40px', height: this.state.remark === '' ? '30px' : '40px', borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }}>\n                            <img src={chooseedit} alt='chooseedit'></img>\n                        </div>\n                    </div>\n                </div>\n                <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            </div>\n        );\n    }\n}\n\nexport default Prescriptionordertablecell\n","import React, { Component } from 'react';\nimport Prescriptionordertablecell from './Prescriptionordertablecell'\nimport './Prescriptionordertable.scss'\n\n\nclass Prescriptionordertable extends Component {\n    render() {\n        const { UDORDER0, caseinfo, SelectMode, searchbar } = this.props\n\n        const title = [\"時間起迄\", \"學名\", \"用法\", \"狀態\"]\n        const titlecell = title.map(function (value, index, arr) {\n            return (\n                <t3 className='title'>{value}</t3>\n            );\n        })\n        const Prescriptionordertabletable = UDORDER0.map(\n            (value, index, array) =>\n                <Prescriptionordertablecell caseinfo={caseinfo} key={index} value={value} SelectMode={SelectMode}></Prescriptionordertablecell>\n        )\n        return (\n            <div>\n                <div className='Prescriptionordertablelayout'>\n                    {titlecell}\n                </div>\n                <div style={{ border: \"1px solid rgba(232, 232, 232, 1)\", borderRadius: \"0 0 4px 4px\", borderCollapse: \"collapse\" }}>\n                    <div style={{ minHeight: searchbar ? \"calc(100vh - 300px)\" : \"120px\", maxHeight: searchbar ? \"calc(100vh - 300px)\" : \"400px\", overflowY: \"auto\" }}>\n                        {JSON.stringify(UDORDER0) !== '[]' ?\n                            Prescriptionordertabletable\n                            :\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"180px 1fr 140px 70px\" }}>\n                                <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                    {searchbar ? \"無資料\" : \"當日無資料\"}\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Prescriptionordertable\n","import React, { Component } from 'react';\nimport Prescriptionordertable from './Prescriptionordertable'\nimport { Select, Input } from 'antd';\nimport moment from 'moment'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as UDORDER from '../../Resource/UDORDER0'\n\nclass Prescriptionorderlayout extends Component {\n    state = {\n        classParser: { \"mappings\": [] },\n        class: \"全部類別\",\n        SelectMode: 0,\n        InputMode: null,\n        preHID: null,\n        preCID: null,\n        UDORDER0: []\n    }\n    componentDidMount() {\n        this.getGithub()\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        this.setState({ preHID: HID, preCID: CID })\n        this.getUDORDER0(HID, CID)\n    }\n    componentDidUpdate() {\n        const { caseinfo } = this.props\n        const { preHID, preCID } = this.state\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        if (HID !== preHID || CID !== preCID) {\n            this.setState({ preHID: HID, preCID: CID })\n            this.getUDORDER0(HID, CID)\n        }\n    }\n    getGithub() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Prescription\");\n                parser.mappings = [{ \"key\": \"全部類別\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson Prescription OK \" + JSON.stringify(parser))\n                this.setState({\n                    classParser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    getUDORDER0(HID, CID, Start, End) {\n\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                // const RowData = data.data\n                // const SortFromRangeDate = RowData.filter(function (info, index, arr) {\n                //     return\n                // })\n                this.setState({ UDORDER0: data.data })\n            })\n            .catch(err => { console.log(\"getStoredProcedureUDORDER0 NG \" + JSON.stringify(err)) });\n        // this.setState({ UDORDER0: UDORDER.data })\n    }\n\n\n    onChangeClass = (value) => {\n        this.setState({ class: value })\n    }\n    onChangeinputKey = (event) => {\n        this.setState({ InputMode: event.target.value })\n    }\n\n    ControlBarRender() {\n        const { Option } = Select;\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"110px 135px auto\", gridColumnGap: \"10px\" }}>\n                <Select defaultValue={this.state.class} style={{ width: 110 }} onChange={this.onChangeClass}>\n                    {this.state.classParser.mappings.map((mapping, index) => {\n                        return <Option value={mapping.key}>{mapping.key}</Option>\n                    })}\n                </Select>\n                <Select defaultValue={this.state.SelectMode} style={{ width: 135 }} onChange={(value) => { console.log(value); this.setState({ SelectMode: value }) }}>\n                    <Option value={0}>全部狀態</Option>\n                    <Option value={30}>生效中</Option>\n                    <Option value={60}>已完成</Option>\n                    <Option value={80}>已取消</Option>\n                </Select>\n                <Input id=\"prescriptionorderinput\" placeholder=\"輸入藥囑關鍵字\" onChange={this.onChangeinputKey} />\n            </div>\n        );\n    }\n\n    parseClass = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部類別\"] = []\n\n        inputs.forEach(input => {\n            let content = input.UDGNAME;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部類別\"].push(input)\n        });\n        return allResult;\n    }\n\n    onClickSearch = () => {\n        function formatUDORDERStatus(UDORDER0, Status) {\n            if (Status === 0) {\n                return UDORDER0\n            }\n            const filterUDORDER = UDORDER0.filter(function (info, index, arr) {\n                return Number(info.UDSTATUS) === Status\n            })\n            return filterUDORDER\n        }\n        const { searchbar } = this.props\n        const { UDORDER0 } = this.state\n        const parseClass = this.parseClass\n        const Status = this.state.SelectMode\n        const activeList = formatUDORDERStatus(UDORDER0, Status)\n        let ListData = [];\n        let clusteredData = {}\n        if (this.state.classParser !== undefined) {\n            clusteredData = parseClass(activeList, this.state.classParser)\n        }\n        let filteredData = clusteredData[this.state.class];\n        ListData = this.SortDataList(filteredData)\n        return ListData\n    }\n\n    SortDataList = (DataList) => {\n        const { PickerDateRange, searchbar } = this.props\n        const { InputMode } = this.state\n        if (InputMode !== null) {\n            const regex = new RegExp(InputMode, \"i\");\n            DataList = DataList.filter(data => {\n                return data.UDGNAME.match(regex) !== null || data.UDRPNAME.match(regex) !== null\n            })\n        }\n\n        const st = searchbar ? PickerDateRange[0] : PickerDateRange[0]\n        const et = searchbar ? PickerDateRange[1] + (24 * 60 * 60 * 1000) : PickerDateRange[1]\n\n        let filterDate = DataList.filter(function (element, index, arr) {\n            const startTime = moment(element.UDBGNDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n            const endTime = moment(element.UDENDDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n            return !(st > endTime || et < startTime)\n        })\n\n        if (Object.keys(filterDate).length > 1) {\n            filterDate = filterDate.sort((a, b) => {\n                console.log()\n                let tempTimeA = moment(a.UDBGNDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n                let tempTimeB = moment(b.UDBGNDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n        }\n        return filterDate\n    }\n\n    render() {\n        const { searchbar, caseinfo } = this.props\n        const { SelectMode } = this.state\n\n        const filterData = this.onClickSearch()\n\n        return (\n            <div >\n                <div style={{ backgroundColor: \"#71b0e46e\", borderRadius: \"4px 4px 0 0\", height: \"36px\", padding: \"0px 16px\", display: \"grid\", gridTemplateColumns: searchbar ? \"2fr 3fr\" : \"1fr\", alignItems: \"center\" }\n                }>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{searchbar ? \"藥物處方\" : \"當日處方\"}</t2>\n                    {searchbar ? this.ControlBarRender() : null}\n                </div>\n                <Prescriptionordertable caseinfo={caseinfo} UDORDER0={filterData} SelectMode={SelectMode} searchbar={searchbar}></Prescriptionordertable>\n            </div>\n        );\n    }\n}\n\nexport default Prescriptionorderlayout\n","import React, { Component } from 'react';\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Treatmentordertablecell.scss'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Treatmentordertablecell extends Component {\n    state = {\n        onEdit: false,\n        onMove: false,\n        remark: this.props.info.remark,\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { info } = this.props\n        ApiProvider.getOneRemark(this.props.caseinfo.TRANSINID, info.ORDSEQNO, \"treatment\").then(result => {\n            console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    on_Mouse() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: true\n                }\n            )\n        }\n    }\n    on_leave() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: false\n                }\n            )\n        }\n    }\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = newRemarkValue => {\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    render() {\n        function formatStatus(ORSTATUS) {\n            if (Number(ORSTATUS) === 30 || Number(ORSTATUS) === 90) {\n                return \"生效中\"\n            }\n            if (Number(ORSTATUS) === 60) {\n                return \"已完成\"\n            }\n            if (Number(ORSTATUS) === 80) {\n                return \"已取消\"\n            }\n            return ORSTATUS\n        }\n        const { info } = this.props\n\n        const Name = info.ORPROCED\n        const QD = info.ORFREQN\n        const Status = formatStatus(info.ORSTATUS)\n        const infoRemark = info[\"15\"].toString().trim()\n        const ST = moment(info.ORBGNDT.toString(), 'YYYY-MM-DD').format(\"MM/DD\")\n        const ET = moment(info.ORENDDT.toString(), 'YYYY-MM-DD').format(\"MM/DD\")\n\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": Name,\n            \"remarkId\": info.ORDSEQNO,\n            \"remark\": this.state.remark,\n            \"transinId\": this.props.caseinfo.TRANSINID,\n            \"type\": \"treatment\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <div onMouseMove={() => this.on_Mouse()} onMouseLeave={() => this.on_leave()} className=\"treatmentordercell\" style={{ minheight: this.state.remark === '' ? '40px' : '60px', borderTop: '#989898 1px solid', borderBottom: '#989898 1px solid' }}>\n                <t3 className='cellstyle' style={{ minheight: this.state.remark === '' ? '40px' : '60px' }}>{ST} - {ET}</t3>\n                <div style={{ display: \"grid\", gridTemplateRows: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"1fr\" : \"1fr 20px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px 70px\" }}>\n                        <t3 className='cellstyle' style={{ color: \"black\", fontWeight: 600, borderLeft: \"rgba(238, 238, 238, 1) 1px solid\" }}>{Name}</t3>\n                        <t3 className='textHidden'>{infoRemark}</t3>\n                        <t3 className='cellstyle'>{QD}</t3>\n                        <t3 className='cellstyle'>{Status}</t3>\n                    </div>\n                    <t3 className='cellstyle' style={{ borderTop: \"rgba(238, 238, 238, 1) 1px solid\", fontWeight: 600, color: \"rgb(0,120,0\", overflow: \"hidden\", height: \"20px\", display: [this.state.remark === undefined || this.state.remark === \"\" ? \"none\" : \"\"] }}>{this.state.remark}</t3>\n                    <div style={this.state.onMove ?\n                        { display: this.state.powerLogin == 1 ? \"flex\" : \"none\", justifyContent: \"center\", alignItems: \"center\", position: 'absolute', right: 0, height: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"100%\" : \"100%\"], background: \"transparent\", width: \"77px\" }\n                        :\n                        { display: \"none\" }}>\n                        <div onClick={() => this.Edit_state()} style={{ width: this.state.remark === '' ? '30px' : '40px', height: this.state.remark === '' ? '30px' : '40px', borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }}>\n                            <img src={chooseedit} alt='chooseedit'></img>\n                        </div>\n                    </div>\n                </div>\n                <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            </div>\n        );\n    }\n}\nexport default Treatmentordertablecell\n","import React, { Component } from 'react';\nimport Treatmentordertablecell from './Treatmentordertablecell'\nimport './Treatmentordertable.scss'\n\nclass Treatmentordertable extends Component {\n    render() {\n        const { TRTMNT01, caseinfo, PickerDate, searchbar } = this.props\n\n        if (TRTMNT01 === null || TRTMNT01 === undefined) {\n            return null\n        }\n        // const DataList = TRTMNT01 //SortDataList(TRTMNT01, PickerDate)\n        const Treatmentordertablecelllist = TRTMNT01.map(\n            (info, index) => <Treatmentordertablecell caseinfo={caseinfo} key={index} info={info}></Treatmentordertablecell>\n\n        )\n        const titlearray = ['時間起迄', '處置名稱', '備註內容', '頻次', '狀態']\n        const titlecell = titlearray.map(function (info, index) {\n            return (\n                <t3 className=\"treatmentordertablecellstyle\" key={index}>{info}</t3>\n            );\n        })\n\n        return (\n            <div>\n                <div className='treatmentordertable'>\n                    {titlecell}\n                </div>\n                <div style={{ border: \"1px solid rgba(232, 232, 232, 1)\", borderRadius: \"0 0 4px 4px\", borderCollapse: \"collapse\" }}>\n                    <div style={{ minHeight: searchbar ? \"calc(100vh - 300px)\" : \"120px\", maxHeight: searchbar ? \"calc(100vh - 300px)\" : \"400px\", overflowY: \"auto\" }}>\n                        {JSON.stringify(TRTMNT01) !== '[]' ?\n                            Treatmentordertablecelllist\n                            :\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"100px 1fr 1fr 40px 70px\" }}>\n                                <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                    {searchbar ? \"無資料\" : \"當日無資料\"}\n                                </div>\n                            </div>}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Treatmentordertable\n","import React, { Component } from 'react';\nimport Treatmentordertable from './Treatmentordertable'\nimport { Select, Input } from 'antd';\nimport * as ApiGithub from '../../API/ApiGithub'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\n\nclass Treatmentorderlayout extends Component {\n    state = {\n        // PickerDateRange: [moment().subtract(6, 'days'), moment()],\n        parser: { \"mappings\": [] },\n        DateRangeMode: {},\n        class: \"全部類別\",\n        SelectMode: 0,\n        InputMode: '',\n        preHID: null,\n        preCID: null,\n        TRTMNTQ1: []\n    }\n\n    componentDidMount() {\n        this.getGithub()\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        this.setState({ preHID: HID, preCID: CID })\n        this.getTreatmentQ1(HID, CID)\n    }\n    componentDidUpdate() {\n        const { caseinfo } = this.props\n        const { preHID, preCID } = this.state\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        if (HID !== preHID || CID !== preCID) {\n            this.setState({ preHID: HID, preCID: CID })\n            this.getTreatmentQ1(HID, CID)\n        }\n\n\n    }\n    getGithub() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Treatment\");\n                parser.mappings = [{ \"key\": \"全部類別\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson Treatment OK \" + JSON.stringify(parser))\n                this.setState({\n                    parser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    getTreatmentQ1(HID, CID) {\n        ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => { this.setState({ TRTMNTQ1: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureTRTMNTQ1 NG \" + JSON.stringify(err)) });\n    }\n\n    onChangeClass = (value) => {\n        this.setState({ class: value })\n    }\n\n    handleChange = (value) => {\n        this.setState({ SelectMode: value })\n    }\n\n    onChangeinputKey = (event) => {\n        this.setState({ InputMode: event.target.value })\n    }\n\n    Search_bar = () => {\n        // const { RangePicker } = DatePicker;\n        const { Option } = Select;\n\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"110px 135px auto\", gridColumnGap: \"10px\" }}>\n                <Select defaultValue={this.state.class} style={{ width: 110 }} onChange={this.onChangeClass}>\n                    {this.state.parser.mappings.map((mapping, index) => {\n                        return <Option key={index} value={mapping.key}>{mapping.key}</Option>\n                    })}\n                </Select>\n                <Select defaultValue={0} style={{ width: 135 }} onChange={this.handleChange}>\n                    <Option value={0}>全部狀態</Option>\n                    <Option value={1}>生效中</Option>\n                    <Option value={2}>已完成</Option>\n                    <Option value={3}>已結束</Option>\n                </Select>\n                <Input placeholder=\"輸入藥囑關鍵字\" value={this.state.InputMode} onChange={this.onChangeinputKey} />\n            </div>\n        );\n\n    }\n\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部類別\"] = []\n\n        inputs.forEach(input => {\n            let content = input.ORPROCED;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部類別\"].push(input)\n        });\n        return allResult;\n    }\n\n    onClickSearch = () => {\n        function formatTRMINQtatus(TRTMNT01, Status) {\n            if (Status === 0) {\n                return TRTMNT01\n            }\n            const filterTRTMNT01 = TRTMNT01.filter(function (info, index, arr) {\n                if (Status === 1) {\n                    return Number(info.ORSTATUS) === 30 || Number(info.ORSTATUS) === 90\n                }\n                if (Status === 2) {\n                    return Number(info.ORSTATUS) === 60\n                }\n                return Number(info.ORSTATUS) === 80\n\n            })\n            return filterTRTMNT01\n        }\n        const { TRTMNT01 } = this.props\n        const { SelectMode } = this.state\n        const parse = this.parse;\n\n        const activeList = formatTRMINQtatus(TRTMNT01, SelectMode)\n        console.log(\"activeList \" + JSON.stringify(activeList));\n\n        let clusteredData = {}\n        if (this.state.parser !== undefined) {\n            clusteredData = parse(activeList, this.state.parser)\n        }\n\n        //filter data by selected class\n        let filteredData = clusteredData[this.state.class];\n\n        const ListData = this.SortDataList(filteredData)\n\n        return ListData\n    }\n\n    SortDataList = (DataList) => {\n        const { PickerDateRange, searchbar } = this.props\n        const { InputMode } = this.state\n\n        if (InputMode !== '') {\n            const regex = new RegExp(InputMode, \"i\");\n            DataList = DataList.filter(data => {\n                return data.ORPROCED.match(regex) !== null\n            })\n        }\n\n        const st = searchbar ? PickerDateRange[0] : PickerDateRange[0]\n        const et = searchbar ? PickerDateRange[1] + (24 * 60 * 60 * 1000) : PickerDateRange[1]\n\n        let filterDate = DataList.filter(function (element, index, arr) {\n            const startTime = moment(element.ORBGNDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n            const endTime = moment(element.ORENDDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n            return !(st > endTime || et < startTime)\n        })\n\n        if (Object.keys(filterDate).length > 1) {\n            filterDate = filterDate.sort((a, b) => {\n                let tempTimeA = moment(a.ORBGNDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n                let tempTimeB = moment(b.ORBGNDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n        }\n        return filterDate\n    }\n\n    render() {\n        const { searchbar, caseinfo } = this.props\n\n        const filterData = this.onClickSearch()\n\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderRadius: \"4px 4px 0 0\", height: \"36px\", padding: \"0px 16px\", display: \"grid\", gridTemplateColumns: searchbar ? \"2fr 3fr\" : \"1fr\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{searchbar ? \"治療處置\" : \"當日處置\"}</t2>\n                    {searchbar ? this.Search_bar() : null}\n                </div>\n                <Treatmentordertable caseinfo={caseinfo} TRTMNT01={filterData} searchbar={searchbar}></Treatmentordertable>\n            </div>\n        );\n    }\n}\n\nexport default Treatmentorderlayout\n","import React, { Component } from 'react';\nimport detaillogo from '../Image/svg/details.svg'\nimport { Tooltip } from 'antd';\n\nclass Notecell extends Component {\n\n    updatetime_format(updatetime) {\n        function monthformat(month) {\n            return month + 1\n        }\n        return new Date(updatetime).getFullYear() + \"-\" + monthformat(new Date(updatetime).getMonth()) + \"-\" + new Date(updatetime).getDate() + \" \" + new Date(updatetime).getHours() + \":\" + new Date(updatetime).getMinutes()\n    }\n    render() {\n        const { info } = this.props\n        const text = info.updatedoctor + \"醫師於\" + this.updatetime_format(info.updatetime) + \"更新\"\n\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"19fr 1fr\", minHeight: \"35px\" }}>\n                <div style={{ wordBreak: \"break-all\", fontSize: \"1.3rem\", display: \"flex\", alignItems: \"center\" }}>{info.data}</div>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <Tooltip placement=\"right\" title={text}>\n                        <div>\n                            <img src={detaillogo} alt='detaillogo'></img>\n                        </div>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Notecell\n","import React, { Component } from 'react';\nimport Notecell from './Notecell'\nimport editlogo from '../Image/svg/Edit.svg'\nimport { Input, Button } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider';\nimport moment from 'moment';\nclass Note extends Component {\n    state = {\n        powerLogin: 0,\n        EditMode: false,\n        inputContent: '',\n        noteData: [],\n        PickerDate: moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.queryNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.HISID, this.state.PickerDate)\n    }\n    componentDidUpdate() {\n        const propDate = this.props.PickerDate\n        const stateDate = this.state.PickerDate\n        if (propDate !== stateDate) {\n            this.setState({ PickerDate: propDate })\n            this.queryNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.HISID, propDate)\n        }\n    }\n    queryNotice(TRANSID, HISID, pickerdate) {\n        const st = moment(moment(pickerdate).format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n        const et = moment(moment(pickerdate).format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf() + (24 * 60 * 60 * 1000)\n        ApiProvider.getOnePatientNotice(TRANSID, HISID, st, et)\n            .then(result => {\n                console.log(\"getOnePatientNotice OK \" + JSON.stringify(result));\n                this.setState({\n                    noteData: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientNotice NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n    // queryOnePatientNotice() {\n    //     ApiProvider.getOnePatientNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID)\n    //         .then(data => {\n    //             this.setState({ noteData: data.data })\n    //         }).catch(err => { })\n    // }\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString()\n        const doc = sessionStorage.getItem('user')\n        ApiProvider.createNotice(this.props.caseinfo.HISID, this.state.inputContent, timeNowStr, this.props.caseinfo.TRANSINID, doc)\n            .then(data => {\n                this.queryNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID, this.props.PickerDate)\n            })\n            .catch(err => {\n                console.log(\" Err \" + JSON.stringify(err))\n            })\n        this.setState(\n            {\n                EditMode: false,\n                inputContent: undefined\n            }\n        )\n    }\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    EditControl() {\n        const edit = this.props.editstatus\n        if (edit) {\n            return (\n                <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                    <img src={editlogo} alt=\"editlogo\" />\n                </div>\n            );\n        }\n        return null\n    }\n    render() {\n        let dataList = this.state.noteData\n\n        if (Object.keys(dataList).length > 1) {\n            dataList = dataList.sort((a, b) => {\n                let tempTimeA = moment(a.time, \"YYYY-MM-DD[T]HH:mm:ss.000+0000\").valueOf()\n                let tempTimeB = moment(b.time, \"YYYY-MM-DD[T]HH:mm:ss.000+0000\").valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n        }\n\n        const notelist = dataList.map((info, index) => {\n            const time = moment(info.time, \"YYYY-MM-DD[T]HH:mm:ss.000+0000\").format('YYYY-MM-DD HH:mm:ss')\n            const localTime = moment.utc(time).toDate()\n            const infoObj = {\n                updatedictor: info.doc,\n                updatetime: moment(localTime).format(\"YYYY/MM/DD HH:mm:ss\"),\n                data: info.context\n            }\n            return <Notecell key={index} info={infoObj}></Notecell>\n        })\n        const EditButton = this.EditControl()\n        return (\n            <div >\n                <div style={{ backgroundColor: \"#71b0e46e\", borderRadius: \"4px 4px 0 0\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\", justifyContent: 'space-between' }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{this.props.title}</t2>\n                    {EditButton}\n                </div>\n                <div style={{ border: \"1px solid rgba(232, 232, 232, 1)\", borderRadius: \"0 0 4px 4px\", borderCollapse: \"collapse\", padding: \"0px 16px\" }}>\n                    <div style={{ maxHeight: \"300px\", minHeight: \"120px\", overflowY: \"auto\" }}>\n                        {JSON.stringify(dataList) !== '[]' ? <div style={{ minHeight: \"120px\", maxHeight: \"400px\", overflow: \"auto\" }}>\n                            {notelist}\n                        </div> :\n                            <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\" }}>\n                                當日無評論\n                        </div>}\n                    </div>\n                    <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                        <div style={{ padding: \"5px 10px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <Input placeholder=\"輸入當日內容\" value={this.state.inputContent} onChange={this.onInputChange.bind(this)}></Input>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                                <Button onClick={() => this.onClickCancel()}>取消</Button>\n                                <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default Note\n","import React, { Component } from 'react';\nimport Schedule_event_list from '../../Module/Schedule_event'\nimport Note from '../../Module/Note'\nclass CrossectionSchedule extends Component {\n    render() {\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\" }}>\n                <Schedule_event_list source={this.props.source} PickerDate={this.props.PickerDate} title=\"排程\" caseinfo={this.props.caseinfo} editstatus={this.props.editstatus}></Schedule_event_list>\n                <Note title=\"評論\" PickerDate={this.props.PickerDate} caseinfo={this.props.caseinfo} data={this.props.noticeData} editstatus={this.props.editstatus}></Note>\n            </div>\n        );\n    }\n}\n\nexport default CrossectionSchedule;\n","import React, { Component } from 'react';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport Wardinfousercheckbox from '../../Wardview/Wardunfousercheckbox';\n\nclass CrosssectionTodo extends Component {\n    state = {\n        todoList: []\n    }\n\n    componentDidMount() {\n        this.queryTodo();\n    }\n\n    queryTodo() {\n        ApiProvider.getOneTodo(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID)\n            .then(result => {\n                console.log(\"getOneTodo OK \" + JSON.stringify(result.data));\n                this.setState({\n                    todoList: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getOneTodo NG \" + JSON.stringify(err));\n            });\n    }\n\n    renderTodoItem() {\n        if (this.state.todoList.length === 0) {\n            return (\n                // <div>沒有待辦事項</div>\n                <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\" }}>\n                    沒有待辦事項\n                </div>\n            )\n        } else {\n            return this.state.todoList.map((item, index) => {\n                if (item.type === \"未完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={false}></Wardinfousercheckbox>);\n                } else {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={true}></Wardinfousercheckbox>);\n                }\n\n            });\n        }\n    }\n\n    render() {\n        const renderTodoItem = this.renderTodoItem.bind(this);\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>待辦事項</t2>\n                </div>\n                <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"0 0 4px 4px\", borderCollapse: \"collapse\", padding: \"0px 16px\" }}>\n                    {renderTodoItem()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CrosssectionTodo\n","import React, { Component } from 'react';\nimport Vitalsign from './Vitalsign';\nimport Controlbar from '../Controlbar';\nimport CrossectionIo from './Crossection_io'\nimport Labviewlayout from './Labview'\nimport Nonlabviewlayout from './Nonlabview'\nimport GAS from './GAS'\nimport RTbreathe from './RTbreathe'\nimport Prescriptionorderlayout from '../Prescriptionorder/Prescriptionorder'\nimport Treatmentorderlayout from '../Treatmentorder/Treatmentorder'\nimport CrossectionSchedule from './Crosssectionschedule'\nimport CrosssectionTodo from './Crosssection_todo'\nimport './Crosssectionlayout.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass Crosssectionlayout extends Component {\n    state = {\n        Cross_item: [0, 1, 2, 3, 4, 5],\n        RESDGLU1: [],\n        RESLAB02: [],\n        RESLAB01: [],\n        RESDBGAS: [],\n        RESLAB0C: [],\n        RESSECT: [],\n        UDORDER0: [],\n        TRTMNTQ1: [],\n\n        PickerDate: moment(moment().format('YYYYMMDD')).valueOf(),\n\n        SelectInterval: 1,\n\n        preCID: null,\n        preHID: null\n    }\n    componentDidMount() {\n        const CID = this.props.caseinfo.CASEID\n        const HID = this.props.caseinfo.HISID\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        this.setState({\n            preCID: CID,\n            preHID: HID\n        })\n        this.NIS_API_IO(this.state.PickerDate, CID, HID, TRDT)\n    }\n    componentDidUpdate() {\n        const CID = this.props.caseinfo.CASEID\n        const HID = this.props.caseinfo.HISID\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        const { preCID, preHID } = this.state\n        if (preCID !== CID || preHID !== HID) {\n            this.setState({\n                preCID: CID,\n                preHID: HID\n            })\n            this.NIS_API_IO(this.state.PickerDate, CID, HID, TRDT)\n        }\n    }\n    NIS_API_IO(Datetime, CID, HID, TRDT) {\n        function selectMonthInterval(Datetime) {\n            const timestampInterval = new Date().getTime() - Datetime\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        const TransinDate = moment(TRDT).format(\"YYYY-MM-DD\")\n        const MonthInterval = selectMonthInterval(Datetime)\n        ApiProvider.getStoredProcedureRESDGLU1(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESDGLU1: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDGLU1 NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESLAB02(HID, TransinDate)\n            .then(data => {\n                this.setState({ RESLAB02: data.data })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESLAB02 NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESLAB01(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESLAB01: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESLAB01 NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESDBGAS(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESDBGAS: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDBGAS NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESLAB0C(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESLAB0C: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESLAB0C NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESSECT(HID, MonthInterval, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                this.setState({\n                    RESSECT: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESSECT NG \" + JSON.stringify(err))\n            });\n\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                this.setState({\n                    UDORDER0: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureUDORDER0 NG \" + JSON.stringify(err))\n            });\n        ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => {\n                this.setState({\n                    TRTMNTQ1: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureTRTMNTQ1 NG \" + JSON.stringify(err))\n            });\n    }\n\n    callbackFunction = (item_array) => {\n        this.setState({ Cross_item: item_array })\n    }\n\n    callbackDateFunction = (PickerTimeStamp) => {\n        this.setState({ PickerDate: PickerTimeStamp })\n    }\n\n    display_item(number) {\n        const item = this.state.Cross_item\n        var filter = item.some(function (item, index, array) {\n            return item === number\n        });\n        return filter\n    }\n    render() {\n        const crosssectioncontrollist = [\n            {\n                \"name\": \"生命徵象\",\n                \"scrollpoint\": \"vitalsignIO\"\n            },\n            {\n                \"name\": \"檢驗\",\n                \"scrollpoint\": \"lab\"\n            },\n            {\n                \"name\": \"呼吸評估\",\n                \"scrollpoint\": \"rt\"\n            },\n            {\n                \"name\": \"醫藥囑\",\n                \"scrollpoint\": \"order\"\n            },\n            {\n                \"name\": \"行事曆及註記\",\n                \"scrollpoint\": \"schedule\"\n            }\n        ]\n        const { caseinfo } = this.props\n        const TimeStampPickerDate = this.state.PickerDate\n        const endTime = TimeStampPickerDate + (31 * 60 * 60 * 1000)\n        const startTime = endTime - (3 * 24 * 60 * 60 * 1000)\n        const PickerDateRange = [TimeStampPickerDate - (6 * 24 * 60 * 60 * 1000), TimeStampPickerDate]\n\n        const POneDayRange = [endTime - (24 * 60 * 60 * 1000), endTime]\n        const PThreeDayRange = [endTime - (3 * 24 * 60 * 60 * 1000), endTime]\n\n        return (\n            <div>\n                <Controlbar caseinfo={caseinfo} PickerDate={this.state.PickerDate} parentDateCallback={this.callbackDateFunction} parentCallback={this.callbackFunction} btnlist={crosssectioncontrollist} item_array={this.state.Cross_item}></Controlbar>\n                <div id=\"crossection\" className='crossectioncontent'>\n                    <div id={\"vitalsignIO\"} style={this.display_item(0) ? { display: \"grid\", gridTemplateColumns: \"1fr 400px\", gridGap: \"10px\", marginBottom: \"10px\" } : { display: \"none\" }}>\n                        <Vitalsign PickerDate={this.state.PickerDate} caseinfo={caseinfo}></Vitalsign>\n                        <CrossectionIo PickerDate={this.state.PickerDate} caseinfo={caseinfo} title=\"輸出入\"></CrossectionIo>\n                    </div>\n                    <div id={\"lab\"} style={this.display_item(1) ? { display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\", margin: \"10px 2px 0px 0px\" } : { display: \"none\" }}>\n                        <Labviewlayout PickerDate={this.state.PickerDate} caseinfo={caseinfo} RESLAB01={this.state.RESLAB01} RESLAB02={this.state.RESLAB02} RESDBGAS={this.state.RESDBGAS} RESLAB0C={this.state.RESLAB0C} RESDGLU1={this.state.RESDGLU1} RESSECT={this.state.RESSECT}></Labviewlayout>\n                        <Nonlabviewlayout caseinfo={caseinfo} PickerDateRange={PThreeDayRange}></Nonlabviewlayout>\n                    </div>\n                    <div id={\"rt\"} style={this.display_item(2) ? { display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\", margin: \"10px 2px 0px 0px\" } : { display: \"none\" }}>\n                        <GAS caseinfo={caseinfo} PickerDateRange={PThreeDayRange} searchbar={false}></GAS>\n                        <RTbreathe caseinfo={caseinfo} PickerDateRange={PThreeDayRange} searchbar={false}></RTbreathe>\n                    </div>\n                    <div id={\"order\"} style={this.display_item(3) ? { display: \"grid\", gridTemplateColumns: \"650px 650px\", gridGap: \"10px\" } : { display: \"none\" }}>\n                        <Prescriptionorderlayout UDORDER0={this.state.UDORDER0} caseinfo={caseinfo} searchbar={false} PickerDateRange={PickerDateRange}></Prescriptionorderlayout>\n                        <Treatmentorderlayout TRTMNT01={this.state.TRTMNTQ1} caseinfo={caseinfo} searchbar={false} PickerDateRange={PickerDateRange}></Treatmentorderlayout>\n                    </div>\n                    <div id={\"schedule\"} style={this.display_item(4) ? { margin: \"10px 2px 0px 0px\" } : { display: \"none\" }}>\n                        <CrossectionSchedule source={1} PickerDate={this.state.PickerDate} editstatus={false} caseinfo={caseinfo}></CrossectionSchedule>\n                    </div>\n                    <div style={this.display_item(5) ? { margin: \"10px 2px 0px 0px\" } : { display: \"none\" }}>\n                        <CrosssectionTodo caseinfo={caseinfo} ></CrosssectionTodo>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Crosssectionlayout;\n","import React, { Component } from 'react';\nimport IOpage from '../../Module/iopage'\n\nclass Inoutonchronic extends Component {\n    render() {\n        const { title, caseinfo, IntervalStatus, PickerDate } = this.props\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                {/* 樣式修改issue10 */}\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t2>\n                </div>\n                <IOpage caseinfo={caseinfo} Status={\"Chronic\"} IntervalStatus={IntervalStatus} PickerDate={PickerDate}></IOpage>\n            </div>\n        );\n    }\n}\n\nexport default Inoutonchronic\n","import React, { Component } from 'react'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport { Spin, Icon } from 'antd';\nimport moment from 'moment'\n\nclass Chronictablecelltooltip extends Component {\n    state = {\n        preStartTimeStamp: null,\n        loading: true,\n        resultStr: \"--\"\n    }\n    componentDidUpdate() {\n        const { startTimeStamp } = this.props\n        const { preStartTimeStamp } = this.state\n        if (startTimeStamp !== preStartTimeStamp) {\n            console.log(\"Chronictablecelltooltip componentDidUpdate\")\n        }\n    }\n    componentDidMount() {\n        const { startTimeStamp } = this.props\n        this.setState({ preStartTimeStamp: startTimeStamp })\n        console.log(\"Chronictablecelltooltip componentDidMount\")\n        this.apiGet()\n    }\n    apiGet() {\n        const { tooltipelement, caseinfo } = this.props\n        const ORMM = tooltipelement.ORMM.toString().trim()\n        const ORDSEQNO = tooltipelement.ORDSEQNO.toString().trim()\n        //RESDISP\n        ApiProvider.getStoredProcedureRESDISP(caseinfo.HISID, ORMM, caseinfo.CASEID, ORDSEQNO)\n            .then(data => {\n                //parse content\n                const parsers = this.props.summaryParse\n                const parser = data.data.length > 0 ? this.select_parser(\"Chronic table\", data.data[0], parsers) : undefined\n\n                if (parser !== undefined) {\n                    //concat all content\n                    let allContent = \"\"\n                    //fakeData.forEach(item => {\n                    data.data.forEach(item => {\n                        allContent = `${allContent} \"\\n\" ${item.CONTENT}`;\n                    });\n\n                    const result = this.parse(allContent, parser)\n\n                    const resultStr = this.summerize(result, parser)\n\n                    this.setState({ resultStr: resultStr })\n                }\n\n                this.setState({ loading: false })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDISP NG \" + JSON.stringify(err))\n                this.setState({ loading: false })\n            })\n    }\n    select_parser = (parserName, input, parsers) => {\n        const inputBeginTime = moment(input.ORBGNDT, \"YYYY-MM-DD\").valueOf()\n        return parsers.find(x =>\n            parserName.match(x.parser_name)\n            && (!x.apply_condition.start_time || inputBeginTime >= x.apply_condition.start_time)\n        )\n    }\n    parse = (input, parser) => {\n        let mappings = parser.mappings\n        let result = {}\n        mappings.forEach(mapping => {\n            const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n            const match = input.match(re)\n            result[mapping.key] = match && match[mapping.position]\n        });\n        return result;\n    }\n    summerize = (kv_pairs, parser) => {\n        let summary_str = parser.summary\n        for (const key in kv_pairs) {\n            let match_replacer = summary_str.match(RegExp(\"\\\\[\" + key + \"(:(.*?))?\\\\]\"))\n            let replacer = \"\"\n            if (match_replacer && match_replacer.length === 3) {\n                replacer = match_replacer[2]\n            }\n            const match = summary_str.match(RegExp(\"\\\\[\" + key + \":(.*?)?\\\\]\"))\n            summary_str = summary_str.replace(match[0], match[0].replace(match[1], kv_pairs[key] || replacer))\n        }\n        return summary_str;\n    }\n    render() {\n        const { tooltipelement } = this.props\n        const { loading, resultStr } = this.state\n        const infoTime = tooltipelement.ORRCPTM.toString().trim()\n        const name = tooltipelement.ORPROCED.toString().trim()\n        const reportname = tooltipelement.ORSPCN1.toString().trim()\n        const cellRenderData = [infoTime, name, reportname, resultStr]\n        const Cell = cellRenderData.map(function (value, index) {\n            if (loading) {\n                const antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n                return (\n                    <Spin key={index} indicator={antIcon} />\n                );\n            } else {\n                return (\n                    <div key={index} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"0px 5px\" }}>\n                        {value}\n                    </div>\n                );\n            }\n\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"100px 150px 150px 200px\" }}>{Cell}</div>\n        );\n    }\n}\n\nexport default Chronictablecelltooltip\n","import React, { Component } from 'react'\nimport { Tooltip } from 'antd'\nimport moment from 'moment'\nimport Chronictablecelltooltip from './ChronicTableCellTooltipCell'\n\nclass Chronictablecell extends Component {\n    CellText() {\n        const { element, caseinfo, summaryParse } = this.props\n        const start = moment(element.StartTime).format(\"YYYY/MM/DD HH:mm:ss\")\n        const startTimeStamp = moment(element.StartTime).valueOf()\n        const end = moment(element.EndTime).format(\"HH:mm:ss\")\n        const title = [\"採檢時間\", \"檢驗項目\", \"檢體\", \"報告\"]\n        const titleCell = title.map(function (value, index) {\n            return (\n                <div key={index} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"0px 5px\" }}>\n                    {value}\n                </div>\n            );\n        })\n        const objectElement = element.element\n        const objectElementCell = objectElement.map(function (info, index, arr) {\n            return (\n                <Chronictablecelltooltip key={index} startTimeStamp={startTimeStamp} tooltipelement={info} caseinfo={caseinfo} summaryParse={summaryParse}></Chronictablecelltooltip>\n            );\n        })\n        return (\n            <div>\n                {/* <div>{start}-{end}</div>\n                <div>檢驗檢查項目 : {element.title}類</div> */}\n                <div style={{ display: \"grid\", gridTemplateColumns: \"100px 150px 150px 200px\" }}>\n                    {titleCell}\n                </div>\n                {objectElementCell}\n            </div>\n        );\n    }\n    render() {\n        function checkLineColor(lineColor) {\n            if(lineColor === null){\n                return '';\n            }else{\n                return `${lineColor.width} solid ${lineColor.color}`;\n            }\n        }\n        function valueNull(value) {\n            if (value === null || value === undefined || value === 0) {\n                return \"\"\n            }\n            return `${value}筆`\n        }\n        const { element } = this.props\n        const TitleRender = this.CellText()\n        if (element.element.length === 0) {\n            return (\n                <div style={{ height: '40px', display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', borderLeft: checkLineColor(this.props.lineColor) }}></div>\n            );\n        }\n        return (\n            <Tooltip title={TitleRender} autoAdjustOverflow={true} overlayStyle={{ maxWidth: \"800px\" }}>\n                <div style={{ backgroundColor:'rgba(0,120,230,.1)', height: '40px',fontSize: \"16px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', cursor: \"pointer\", borderLeft: checkLineColor(this.props.lineColor) }}>\n                    {valueNull(element.element.length)}\n                </div>\n            </Tooltip>\n        );\n    }\n}\n\nexport default Chronictablecell","import React, { Component } from 'react'\nimport moment from 'moment'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport * as ApiPronider from '../../API/ApiProvider'\nimport Chronictablecell from './ChronicTableCell'\nimport * as RSData from '../../Resource/RESSECT'\n\nclass Tableonchronic extends Component {\n    state = {\n        LabParse: [],\n        SummaryParse: [{ apply_condition: \"\", mappings: [] }],\n        RESSECT: [],\n        preHID: null\n    }    \n\n    ApiGet(HID, monthly) {\n        ApiGithub.getGitHubJson(\"Chronic_Lab.json\")\n            .then(data => {\n                this.setState({\n                    LabParse: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiGithub.getGitHubJson(\"Summary.json\")\n            .then(data => {\n                this.setState({\n                    SummaryParse: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiPronider.getStoredProcedureRESSECT(HID, \"1\", \"ALL\", \"DOC3924B\")\n            .then(data => {\n                this.setState({ RESSECT: data.data })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        // this.setState({ RESSECT: RSData.data })\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDate, chronic_state } = this.props\n        const HID = caseinfo.HISID\n        const monthly = this.fotmatTimerMonthly(PickerDate)\n        this.setState({ preHID: caseinfo.HISID, prePickerDate: PickerDate, preInterval: chronic_state })\n        this.ApiGet(HID, monthly)\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDate, chronic_state } = this.props\n        const HID = caseinfo.HISID\n        const { preHID, prePickerDate, preInterval } = this.state\n        const monthly = this.fotmatTimerMonthly(PickerDate)\n        if (HID !== preHID || prePickerDate !== PickerDate || preInterval !== chronic_state) {\n            this.setState({ preHID: caseinfo.HISID, prePickerDate: PickerDate, preInterval: chronic_state })\n            this.ApiGet(HID, monthly)\n        }\n    }\n\n    fotmatTimerMonthly(pickerdate) {\n        const timestampInterval = moment().valueOf() - pickerdate\n        const timestampMonth = 30 * 24 * 60 * 60 * 1000\n        const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n        return MonthInt\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    render() {\n        function DataForTimer(dataList, interval, pickerdate) {\n            function starttime(interval, entTimeStamp) {\n                if (interval === 0) {\n                    return entTimeStamp - (24 * 60 * 60 * 1000)\n                }\n                if (interval === 1) {\n                    return entTimeStamp - (3 * 24 * 60 * 60 * 1000)\n                }\n                if (interval === 2) {\n                    return entTimeStamp - (7 * 24 * 60 * 60 * 1000)\n                }\n                return entTimeStamp - (14 * 24 * 60 * 60 * 1000)\n            }\n\n            function fotmatTimerForTimer(interval, st, list, title, grid) {\n                var TimerForList = []\n                for (let index = 0; index < interval; index++) {\n                    const StartTime = st + (index * grid * 60 * 60 * 1000)\n                    const EndTime = st + ((index + 1) * grid * 60 * 60 * 1000)\n                    const filterTimerForDataList = list.filter(function (element, index, arr) {\n                        const time = element.ORRCPDT.toString().trim() + element.ORRCPTM.toString().trim()\n                        const timestamp = moment(time, 'YYYY-MM-DDHH:mm:ss').valueOf()\n                        return StartTime <= timestamp && timestamp < EndTime\n                    })\n                    TimerForList.push({\n                        StartTime: StartTime,\n                        EndTime: EndTime,\n                        element: filterTimerForDataList,\n                        title: title\n                    })\n                }\n                return TimerForList\n            }\n            const et = pickerdate + (31 * 60 * 60 * 1000)\n            const st = starttime(interval, et)\n            const slectInt = TimeInterval(interval)\n            const DataTransForTimer = fotmatTimerForTimer(slectInt.interval, st, dataList.array, dataList.title, slectInt.grid)\n            return DataTransForTimer\n        }\n\n\n\n        function LabFormat(ressect, parsrList) {\n            var arrayBiochemical = []\n            var arrayBlood = []\n            var arrayCultivate = []\n            var arrayGAS = []\n            // var arrayGlu = []\n            var arrayRadiation = []\n            var arrayOther = []\n\n            for (let index = 0; index < ressect.length; index++) {\n                const element = ressect[index];\n                const element_ORPROCED = element.ORPROCED\n                const BioFind = parsrList.Biochemical.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const BloFind = parsrList.Blood.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const CulFind = parsrList.Cultivate.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const GasFind = parsrList.GAS.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                // const GluFind = parsrList.GAS.some(function (value, index, arr) {\n                //     return element_ORPROCED.match(value) !== null\n                // })\n                const RadFind = parsrList.Radiation.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                if (BioFind) {\n                    arrayBiochemical.push(element)\n                }\n                if (BloFind) {\n                    arrayBlood.push(element)\n                }\n                if (CulFind) {\n                    arrayCultivate.push(element)\n                }\n                if (GasFind) {\n                    arrayGAS.push(element)\n                }\n                // if (GluFind) {\n                //     arrayGlu.push(element)\n                // }\n                if (RadFind) {\n                    arrayRadiation.push(element)\n                }\n                if (BioFind === false && BloFind === false && CulFind === false && GasFind === false && RadFind === false) {\n                    arrayOther.push(element)\n                }\n            }\n            const arrayList = []\n            arrayList.push({\n                title: \"生化\",\n                array: arrayBiochemical,\n            })\n            arrayList.push({\n                title: \"血液\",\n                array: arrayBlood,\n            })\n            arrayList.push({\n                title: \"培養\",\n                array: arrayCultivate,\n            })\n            arrayList.push({\n                title: \"GAS\",\n                array: arrayGAS,\n            })\n            // arrayList.push({\n            //     title: \"Glu\",\n            //     array: arrayGlu,\n            // })\n            arrayList.push({\n                title: \"放射\",\n                array: arrayRadiation,\n            })\n            arrayList.push({\n                title: \"其他\",\n                array: arrayOther,\n            })\n            return arrayList\n        }\n        function TimeLine(interval, index) {\n            const lineStyle = {\n                width: '',\n                color: '',\n            }\n            if (interval === 0) {\n                if (index === 0 || (index % 24) === 0) {\n                    lineStyle.width = '2px';\n                    lineStyle.color = 'rgba(0,0,0,0.2)';\n                    return lineStyle;\n                } else if (index % 8 === 0) {\n                    lineStyle.width = '2px';\n                    lineStyle.color = 'rgba(0,0,0,0.2)';\n                    return lineStyle;\n                }\n                else {\n                    lineStyle.width = '1px';\n                    lineStyle.color = '#eeeeee';\n                    return lineStyle;\n                }\n            }\n            if (interval === 1) {\n                if (index === 0 || (index % 6) === 0) {\n                    lineStyle.width = '2px';\n                    lineStyle.color = 'rgba(0,0,0,0.2)';\n                    return lineStyle;\n                } else if (index % 2 === 0) {\n                    lineStyle.width = '2px';\n                    lineStyle.color = 'rgba(0,0,0,0.2)';\n                    return lineStyle;\n                }\n                else {\n                    lineStyle.width = '1px';\n                    lineStyle.color = '#eeeeee';\n                    return lineStyle;\n                }\n            }\n            if (interval === 2) {\n                if (index === 0 || (index % 3) === 0) {\n                    lineStyle.width = '2px';\n                    lineStyle.color = 'rgba(0,0,0,0.2)';\n                    return lineStyle;\n                } else {\n                    lineStyle.width = '2px';\n                    lineStyle.color = 'rgba(0,0,0,0.2)';\n                    return lineStyle;\n                }\n            }\n            if (interval === 3) {\n                lineStyle.width = '2px';\n                lineStyle.color = 'rgba(0,0,0,0.2)';\n                return lineStyle;\n            }\n        }\n        function TimeInterval(interval) {\n            if (interval === 0) {\n                return { interval: 24, grid: 1 }\n            }\n            if (interval === 1) {\n                return { interval: 18, grid: 4 }\n            }\n            if (interval === 2) {\n                return { interval: 21, grid: 8 }\n            }\n            return { interval: 14, grid: 24 }\n        }\n        const { chronic_state, caseinfo, PickerDate, title, openTimeline } = this.props\n        const { LabParse, RESSECT, SummaryParse } = this.state\n        if (LabParse === null || LabParse === undefined || LabParse.length === 0) {\n            return null\n        }\n        if (RESSECT === null || RESSECT === undefined || RESSECT.length === 0) {\n            return null\n        }\n        const data = LabFormat(RESSECT, LabParse)\n        const statestatus = TimeInterval(chronic_state)\n        const title_list = title.map((info, index) =>\n            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"40px\", border: \"1px solid rgba(238,238,238,1)\", borderCollapse: \"collapse\", backgroundColor: \"#eeeeee\" }} key={index}>\n                <t2>{info.title}</t2>\n            </div>\n        )\n        const cell_list = data.map(function (value, index, arr) {\n            const DataList = DataForTimer(value, chronic_state, PickerDate)\n            return DataList\n        })\n        const cellRender = cell_list.map(function (value, index, array) {\n            const valuecell = value.map(function (element, index, arr) {\n                const toolTipID = \"ChronicTableTootip\" + index\n                return (\n                    <Chronictablecell lineColor={openTimeline ? TimeLine(chronic_state, index) : null} key={toolTipID} element={element} caseinfo={caseinfo} summaryParse={SummaryParse}></Chronictablecell>\n                );\n            })\n            return valuecell\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\" }}>\n                <div style={{ display: \"grid\", gridTemplateRows: \"repeat(\" + title.length + \",1fr)\" }}>\n                    {title_list}\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + statestatus.interval + \",1fr)\", gridTemplateRows: \"repeat(6,1fr)\" }}>\n                    {cellRender}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Tableonchronic\n","import React, { Component } from 'react'\nimport Tableonchronic from './ChronicTable'\n\nclass Chroniclab extends Component {\n    render() {\n        const { title, caseinfo, select_interval, PickerDate } = this.props\n        const item_title = [{ title: \"生化\" }, { title: \"血液\" }, { title: \"培養\" }, { title: \"GAS\" }, { title: \"放射\" }, { title: \"其他\" }]\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                {/* 樣式修改issue10 */}\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t2>\n                </div>\n                <Tableonchronic openTimeline={true} title={item_title} caseinfo={caseinfo} chronic_state={select_interval} PickerDate={PickerDate}></Tableonchronic>\n            </div>\n        );\n    }\n}\n\nexport default Chroniclab\n","import React, { Component } from 'react'\nimport rtlogo from '../../Image/svg/RT.svg'\nimport { Tooltip } from 'antd'\nimport moment from 'moment'\n\nclass Chronicrttablecell extends Component {\n    ToolTipRender() {\n        const { cellelement } = this.props\n        const startTime = moment(cellelement.startTime).format(\"MM/DD HH:mm\")\n        const endTime = moment(cellelement.endTime).format(\"MM/DD HH:mm\")\n        const RTListRender = cellelement.element.map(function (info, index, arr) {\n            const time = moment(info.Date + info.Time, \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\")\n            const Mode = info.Mode\n            const Setting = info.Setting\n            return (\n                <div>\n                    <div>Time:{time}</div>\n                    <div>Mode:{Mode}</div>\n                    <div style={{ display: \"flex\" }}>\n                        <div>Setting:</div>\n                        <div>{Setting}</div>\n                    </div>\n                </div>\n            );\n        })\n\n        return (\n            <div>\n                <div>{startTime}~{endTime}</div>\n                {RTListRender}\n            </div>\n        );\n    }\n    render() {\n        function checkLineColor(lineColor) {\n            if(lineColor === null){\n                return '';\n            }else{\n                return `${lineColor.width} solid ${lineColor.color}`;\n            }\n        }\n        function changetext(text) {\n            if (text === 0) {\n                return '--'\n            }\n            return <img src={rtlogo} alt=\"rtlogo\" />\n        }\n        const { cellelement } = this.props\n        if (cellelement.length === 0) {\n            return <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center', border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse',borderLeft: checkLineColor(this.props.lineColor) }}>--</div>\n        }\n        return (\n            <Tooltip placement=\"right\" autoAdjustOverflow={true} title={this.ToolTipRender()} overlayStyle={{ maxWidth: \"800px\", background: \"white\" }}>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', cursor: \"pointer\", borderLeft: checkLineColor(this.props.lineColor) }}>\n                    {changetext(cellelement.length)}\n                </div>\n            </Tooltip >\n        );\n    }\n}\nexport default Chronicrttablecell","import React, { Component } from 'react'\nimport * as FilterReg from '../../Function/FiliterReg'\nimport moment from 'moment'\nimport X2JS from 'x2js';\nimport * as ApiProvider from '../../API/ApiProvider'\nimport Chronicrttablecell from './ChronicRTTableCell'\nimport * as QSPEList from '../../Resource/QSPE'\n\nconst TimeLine = (interval, index) => {\n    const lineStyle = {\n        width: '',\n        color: '',\n    }\n    if (interval === 0) {\n        if (index === 0 || (index % 24) === 0) {\n            lineStyle.width = '2px';\n            lineStyle.color = 'rgba(0,0,0,0.2)';\n            return lineStyle;\n        } else if (index % 8 === 0) {\n            lineStyle.width = '2px';\n            lineStyle.color = 'rgba(0,0,0,0.2)';\n            return lineStyle;\n        }\n        else {\n            lineStyle.width = '1px';\n            lineStyle.color = '#eeeeee';\n            return lineStyle;\n        }\n    }\n    if (interval === 1) {\n        if (index === 0 || (index % 6) === 0) {\n            lineStyle.width = '2px';\n            lineStyle.color = 'rgba(0,0,0,0.2)';\n            return lineStyle;\n        } else if (index % 2 === 0) {\n            lineStyle.width = '2px';\n            lineStyle.color = 'rgba(0,0,0,0.2)';\n            return lineStyle;\n        }\n        else {\n            lineStyle.width = '1px';\n            lineStyle.color = '#eeeeee';\n            return lineStyle;\n        }\n    }\n    if (interval === 2) {\n        if (index === 0 || (index % 3) === 0) {\n            lineStyle.width = '2px';\n            lineStyle.color = 'rgba(0,0,0,0.2)';\n            return lineStyle;\n        } else {\n            lineStyle.width = '2px';\n            lineStyle.color = 'rgba(0,0,0,0.2)';\n            return lineStyle;\n        }\n    }\n    if (interval === 3) {\n        lineStyle.width = '2px';\n        lineStyle.color = 'rgba(0,0,0,0.2)';\n        return lineStyle;\n    }\n}\n\nclass Chronicrttable extends Component {\n    state = {\n        QSPE: [],\n        preCID: null,\n        prePickerdate: null,\n        preInterval: null\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDate, select_interval } = this.props\n        this.setState({ preCID: caseinfo.CASEID, prePickerdate: PickerDate, preInterval: select_interval })\n        const timer = this.timerFormat(PickerDate, select_interval)\n        const start = moment(timer.StartTime).format(\"YYYYMMDDHHmm\")\n        const end = moment(timer.EndTime).format(\"YYYYMMDDHHmm\")\n        this.getQSPE(caseinfo.CASEID, start, end)\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDate, select_interval } = this.props\n        const { preCID, prePickerdate, preInterval } = this.state\n        if (caseinfo.CASEID !== preCID || PickerDate !== prePickerdate || preInterval !== select_interval) {\n            const { caseinfo, PickerDate } = this.props\n            this.setState({ preCID: caseinfo.CASEID, prePickerdate: PickerDate, preInterval: select_interval })\n            const timer = this.timerFormat(PickerDate, select_interval)\n            const start = moment(timer.StartTime).format(\"YYYYMMDDHHmm\")\n            const end = moment(timer.EndTime).format(\"YYYYMMDDHHmm\")\n            this.getQSPE(caseinfo.CASEID, start, end)\n        }\n\n    }\n    getQSPE(CID, st, et) {\n        const xm2 = new X2JS()\n        ApiProvider.getQSPE(CID, st, et)\n            .then(data => {\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                if (Array.isArray(parsedata)) {\n                    this.setState({ QSPE: parsedata })\n                }\n                else {\n                    this.setState({ QSPE: [parsedata] })\n                }\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        // this.setState({ QSPE: QSPEList.data })\n    }\n\n    timerFormat(PickerDate, Interval) {\n        const EndTime = PickerDate + (31 * 60 * 60 * 1000)\n        if (Interval === 0) {\n            return {\n                StartTime: EndTime - (24 * 60 * 60 * 1000),\n                EndTime: EndTime,\n                Interval: 24,\n                grid: 1\n            }\n        }\n        if (Interval === 1) {\n            return {\n                StartTime: EndTime - (3 * 24 * 60 * 60 * 1000),\n                EndTime: EndTime,\n                Interval: 18,\n                grid: 4\n            }\n\n        }\n        if (Interval === 2) {\n            return {\n                StartTime: EndTime - (7 * 24 * 60 * 60 * 1000),\n                EndTime: EndTime,\n                Interval: 21,\n                grid: 8\n            }\n\n        }\n        return {\n            StartTime: EndTime - (14 * 24 * 60 * 60 * 1000),\n            EndTime: EndTime,\n            Interval: 14,\n            grid: 24\n        }\n    }\n\n\n\n    table_content() {\n        function formatDataList(startTime, interval, list, grid) {\n            var timerList = []\n            for (let index = 0; index < interval; index++) {\n                const start = startTime + (index * grid * 60 * 60 * 1000)\n                const end = startTime + ((index + 1) * grid * 60 * 60 * 1000)\n                const listFilter = list.filter(function (info, index, arr) {\n                    const time = moment(info.Date.toString() + info.Time.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    return start <= time && time < end\n                })\n                timerList.push({\n                    length: listFilter.length,\n                    element: listFilter,\n                    startTime: start,\n                    endTime: end\n                })\n            }\n            return timerList\n        }\n\n        const { select_interval, PickerDate } = this.props\n        const QSPE = this.state.QSPE\n        const dataList = FilterReg.QSPERegList(QSPE)\n        if (dataList === null || dataList === undefined || dataList.length === 0) {\n            return null\n        }\n        const timer = this.timerFormat(PickerDate, select_interval)\n        const calldata = formatDataList(timer.StartTime, timer.Interval, dataList, timer.grid)\n        const cellRender = calldata.map(function (value, index, arr) {\n            return (\n                <Chronicrttablecell lineColor={TimeLine(select_interval, index)} key={index} cellelement={value}></Chronicrttablecell>\n            );\n        })\n        return cellRender\n    }\n    render() {\n        const { select_interval, PickerDate } = this.props\n        const timer = this.timerFormat(PickerDate, select_interval)\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\", height: \"40px\" }}>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", background: \"rgba(59, 151, 255,.4)\" }}>\n                    <t2>呼吸治療設定</t2>\n                </div>\n                {/* <div style={{ display: \"flex\", paddingLeft: \"16px\", alignItems: \"center\" }}>\n                    <t2>呼吸治療設定</t2>\n                </div> */}\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + timer.Interval + \",1fr)\" }}>\n                    {this.table_content()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chronicrttable\n","import React, { Component } from 'react'\nimport Chronicrttable from './ChronicRTTable'\n\nclass Chronicrt extends Component {\n    render() {\n        const {caseinfo, select_interval, PickerDate } = this.props\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <Chronicrttable PickerDate={PickerDate} title={{ title: \"RT\" }} caseinfo={caseinfo} select_interval={select_interval}></Chronicrttable>\n            </div>\n        );\n    }\n}\n\nexport default Chronicrt","import React, { Component } from 'react'\nimport './ChronicOrderTable.scss'\nimport moment from 'moment'\nimport { Tooltip } from 'antd'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport * as UDOR from '../../Resource/UDORDER0'\n\nclass Chronicordertable extends Component {\n    state = {\n        UDORDER: [],\n        whiteBlackListParser: [],\n        tpnParsers: [],\n        preHID: null,\n        preCID: null\n    }\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        this.setState({ preHID: HID, preCID: CID })\n        this.getUDORDER(HID, CID)\n\n    }\n    componentDidUpdate() {\n        const { caseinfo } = this.props\n        const { preHID, preCID } = this.state\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        if (preHID !== HID || preCID !== CID) {\n            this.setState({ preHID: HID, preCID: CID })\n            this.getUDORDER(HID, CID)\n        }\n    }\n    getUDORDER(HID, CID) {\n        ApiGithub.getGitHubJson(\"WhiteBlackList.json\")\n            .then(data => {\n                let parser = data.data;\n                this.setState({ whiteBlackListParser: parser })\n            })\n            .catch(err => { console.log(err) })\n        ApiGithub.getGitHubJson(\"TpnOrder.json\")\n            .then(data => {\n                let parser = data.data\n                this.setState({ tpnParsers: parser })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                this.setState({ UDORDER: data.data })\n                //this.setState({ UDORDER: fakeData })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        // this.setState({ UDORDER: UDOR.data })\n    }\n    // 0:一天 1:三天 2:一週 3:兩週\n    switch_state() {\n        const { chronic_state } = this.props\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 21\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    select_parser = (input, parser) => {\n        if (parser === undefined) return undefined;\n        return parser.find(x =>\n            input.match(x.parser_name)\n        )\n    }\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let excludeBlackListResult = [];\n        const UDGNAME_condition = mappings.find(item => item.key === \"UDGNAME\");\n        const UDRPNAME_condition = mappings.find(item => item.key === \"UDRPNAME\");\n        if (inputs === undefined) return []\n        inputs.forEach(input => {\n            const UDGNAME_re = new RegExp(UDGNAME_condition.regex_str, UDGNAME_condition.regex_flags)\n            const UDGNAME_match = input.UDGNAME.match(UDGNAME_re)\n\n            const UDRPNAME_re = new RegExp(UDRPNAME_condition.regex_str, UDRPNAME_condition.regex_flags)\n            const UDRPNAME_match = input.UDRPNAME.match(UDRPNAME_re)\n\n            if (UDGNAME_match === null || UDRPNAME_match === null) {\n                excludeBlackListResult.push(input);\n            }\n        });\n\n        return excludeBlackListResult;\n    }\n    celltable() {\n        function changegridnumber(key) {\n            switch (key) {\n                case 0:\n                    return 24\n                case 1:\n                    return 18\n                case 2:\n                    return 21\n                case 3:\n                    return 14\n                default:\n                    break;\n            }\n        }\n        const { chronic_state, openTimeLine } = this.props\n\n        function TimeLine(interval, index) {\n            if (interval === 0) {\n                if (index === 0 || (index % 24) === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                } else if (index % 8 === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                }\n                else {\n                    return '1px #eeeeee solid';\n                }\n            }\n            if (interval === 1) {\n                if (index === 0 || (index % 6) === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                } else if (index % 2 === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                }\n                else {\n                    return '1px #eeeeee solid';\n                }\n            }\n            if (interval === 2) {\n\n                if (index === 0 || (index % 3) === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                } else {\n                    return '2px rgba(0,0,0,0.2) solid';\n                }\n            }\n            if (interval === 3) {\n                return '2px rgba(0,0,0,0.2) solid';\n            }\n        }\n        function checkLineColor(openTimeLine, chronic_state, index) {\n            if (openTimeLine) {\n                return TimeLine(chronic_state, index);\n            }\n        }\n        const number = changegridnumber(chronic_state)\n        var arr = []\n        for (let index = 0; index < number; index++) {\n            arr.push(\n                <div key={index} className='cell' style={{ borderLeft: checkLineColor(openTimeLine, chronic_state, index) }}></div>\n            )\n\n        }\n        return arr\n    }\n    render() {\n        function changegridstyle(key) {\n            switch (key) {\n                case 0:\n                    return 'ordertableoneday'\n                case 1:\n                    return 'ordertablethirdday'\n                case 2:\n                    return 'ordertableoneweek'\n                case 3:\n                    return 'ordertabletwoweek'\n                default:\n                    return null\n            }\n        }\n        function ListData(UDORDER0, interval, pickerdate) {\n\n            function formatTimer(pickerdate, interval) {\n                const endTime = pickerdate + (31 * 60 * 60 * 1000)\n                if (interval === 0) {\n                    return {\n                        startTime: endTime - (24 * 60 * 60 * 1000),\n                        endTime: endTime\n                    }\n                }\n                if (interval === 1) {\n                    return {\n                        startTime: endTime - (3 * 24 * 60 * 60 * 1000),\n                        endTime: endTime\n                    }\n                }\n                if (interval === 2) {\n                    return {\n                        startTime: endTime - (7 * 24 * 60 * 60 * 1000),\n                        endTime: endTime\n                    }\n                }\n                return {\n                    startTime: endTime - (14 * 24 * 60 * 60 * 1000),\n                    endTime: endTime\n                }\n            }\n            function formatWidth(startTime, endTime, elementStart, elementEnd) {\n                function formatStart(elementStart, startTime) {\n                    if (elementStart <= startTime) {\n                        return startTime\n                    }\n                    return elementStart\n                }\n                function formatEnd(elementEnd, endTime) {\n                    if (elementEnd <= endTime) {\n                        return elementEnd\n                    }\n                    return endTime\n                }\n                const width = document.body.clientWidth - 220\n                const widthRate = width / (endTime - startTime)\n                const start = formatStart(elementStart, startTime)\n                const end = formatEnd(elementEnd, endTime)\n                return (end - start) * widthRate\n            }\n            function formatStartPosition(startTime, endTime, elementStart) {\n                const width = document.body.clientWidth - 220\n                if (elementStart <= startTime) {\n                    return 0\n                }\n                const widthRate = width / (endTime - startTime)\n                return ((elementStart - startTime) * widthRate)\n            }\n            function formatUDORDER0(UDORDER0, timer) {\n                var arraylist = []\n                const startTime = timer.startTime\n                const endTime = timer.endTime\n                for (let index = 0; index < UDORDER0.length; index++) {\n                    const element = UDORDER0[index];\n                    const elementStart = moment(element.UDBGNDT.toString(), \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n                    const elementEnd = moment(element.UDENDDT.toString(), \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n                    if (endTime < elementStart || elementEnd < startTime) {\n                        continue\n                    }\n                    const shift = formatStartPosition(startTime, endTime, elementStart)\n                    const width = formatWidth(startTime, endTime, elementStart, elementEnd)\n                    arraylist.push({\n                        \"width\": width,\n                        \"shift\": shift,\n                        \"element\": element\n                    })\n                }\n                return arraylist\n            }\n            const timer = formatTimer(pickerdate, interval)\n            if (UDORDER0 === undefined || UDORDER0 === null) {\n                return []\n            }\n            if (UDORDER0.length === 0) {\n                return []\n            }\n            const formatUDORDER = formatUDORDER0(UDORDER0, timer)\n            return formatUDORDER\n        }\n\n        const { chronic_state, PickerDate, source } = this.props\n\n\n        const rawData = this.state.UDORDER\n\n        //filter TPN items for infection page\n        let filteredRawData = []\n        if (source === \"infection\") {\n            const selected_tpn_parser = this.select_parser(\"TPN Order\", this.state.tpnParsers)\n            if (selected_tpn_parser !== undefined) {\n                rawData.forEach(item => {\n                    const found = item.UDDRGNAM.match(RegExp(selected_tpn_parser.apply_condition.name, selected_tpn_parser.apply_condition.name_regex_flags))\n                    if (found !== null && found !== \"\") filteredRawData.push(item)\n                })\n            }\n        } else {\n            filteredRawData = rawData\n        }\n\n        let filteredData = [];\n        const selected_white_black_list_parser = this.select_parser(\"Black List\", this.state.whiteBlackListParser)\n        if (selected_white_black_list_parser !== undefined) {\n            filteredData = this.parse(filteredRawData, selected_white_black_list_parser)\n        }\n\n        const datalist = ListData(filteredData, chronic_state, PickerDate)\n        // const datalist = ListData(UDORDER0, chronic_state, PickerDate)\n\n        const Tablecell = datalist.map(function (value, index, array) {\n            function formatString(value) {\n\n                if (value === undefined || value === null) {\n                    return \"--\"\n                }\n                return value.toString().trim()\n            }\n\n            function ToolTipRender(value) {\n                function statusFormat(Status) {\n                    if (Status === 30){\n                        return \"使用中\"\n                    }\n                    if (Status === 60){\n                        return \"已完成\"\n                    }\n                    if (Status === 80){\n                        return \"已取消\"\n                    }\n                    return Status\n                }\n                const startTimeFormat = moment(value.element.UDBGNDT, \"YYYY-MM-DD-HH:mm:ss.000000\").format('MM/DD HH:mm')\n                const endTimeFormat = moment(value.element.UDENDDT, \"YYYY-MM-DD-HH:mm:ss.000000\").format('MM/DD HH:mm')\n                const status = statusFormat(Number(value.element.UDSTATUS))\n                return (\n                    <div>\n                        <div>時間起迄: {`${startTimeFormat} - ${endTimeFormat}`}</div>\n                        <div>用法: {`${value.element.UDDOSAGE} - ${value.element.UDDUNIT} - ${value.element.UDFREQN} - ${value.element.UDROUTE}`}</div>\n                        <div>狀態: {status}</div>\n                    </div>\n                );\n            }\n\n            return (\n                <div key={index} style={{ padding: \"2px 0px\", paddingLeft: value.shift + 2 + \"px\", cursor: \"pointer\" }}>\n                    <Tooltip placement=\"bottom\" autoAdjustOverflow={true} title={ToolTipRender(value)} overlayStyle={{ maxWidth: \"800px\" }}>\n                        <div style={{ width: value.width + \"px\", height: \"20px\", backgroundColor: \"#3B97E1\", color: \"black\", padding: \"0px 5px\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\", fontWeight: \"600\" }}>{formatString(value.element.UDGNAME)}</div>\n                    </Tooltip>\n                </div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\", position: 'relative' }}>\n                <div style={{ background: \"#eeeeee\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <t2>甘特圖</t2>\n                </div>\n                <div className={changegridstyle(chronic_state)} style={{ height: Tablecell.length ? Tablecell.length * 30 : 40 + \"px\" }}>{this.celltable()}</div>\n                <div style={{ position: 'absolute', left: 140, minHeight: \"40px\", overflowX: \"hidden\" }}>\n                    {Tablecell}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chronicordertable\n","import React, { Component } from 'react'\nimport Chronicordertable from './ChronicOrderTable'\n// import * as ApiGithub from '../../API/ApiGithub'\n\nclass Orderonchronic extends Component {\n    render() {\n        const { caseinfo, select_interval, UDORDER0,PickerDate, title } = this.props \n        const item_title = [{ title: \"醫藥囑\" }]\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t2>\n                </div>\n                <Chronicordertable openTimeLine={true} title={item_title} caseinfo={caseinfo} chronic_state={select_interval} UDORDER0={UDORDER0} PickerDate={PickerDate} source={this.props.source}></Chronicordertable>\n            </div>\n        );\n    }\n}\n\nexport default Orderonchronic","export const data = {\n    \"outmsg\": {\n      \"resconts\": {\n        \"rescont\": [\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200306\",\n            \"rec_tim\": \"0034\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"3.288\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200305\",\n            \"rec_tim\": \"0023\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"3.270\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200304\",\n            \"rec_tim\": \"0028\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"3.200\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200303\",\n            \"rec_tim\": \"0045\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value\": \"46\",\n            \"value2\": \"3.204\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200302\",\n            \"rec_tim\": \"0047\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"3.240\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200301\",\n            \"rec_tim\": \"0123\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"3.220\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200229\",\n            \"rec_tim\": \"0040\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"3.190\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200228\",\n            \"rec_tim\": \"0129\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"3.030\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200227\",\n            \"rec_tim\": \"0123\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"3.092\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200226\",\n            \"rec_tim\": \"0200\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"3.155\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200225\",\n            \"rec_tim\": \"0141\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value\": \"46\",\n            \"value2\": \"3.050\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200224\",\n            \"rec_tim\": \"0045\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.976\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200223\",\n            \"rec_tim\": \"0124\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.954\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200222\",\n            \"rec_tim\": \"0035\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.948\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200221\",\n            \"rec_tim\": \"0030\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.885\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200220\",\n            \"rec_tim\": \"0223\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.844\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200219\",\n            \"rec_tim\": \"0128\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.788\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200218\",\n            \"rec_tim\": \"0424\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value\": \"44.3\",\n            \"value2\": \"2.697\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200217\",\n            \"rec_tim\": \"0000\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.644\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200216\",\n            \"rec_tim\": \"0005\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.624\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200215\",\n            \"rec_tim\": \"0014\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.595\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200214\",\n            \"rec_tim\": \"0114\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.622\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200213\",\n            \"rec_tim\": \"0144\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.610\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200212\",\n            \"rec_tim\": \"0022\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.580\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200211\",\n            \"rec_tim\": \"0128\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value\": \"46.3\",\n            \"value2\": \"2.598\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200210\",\n            \"rec_tim\": \"0125\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.600\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200209\",\n            \"rec_tim\": \"0013\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.648\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200208\",\n            \"rec_tim\": \"0139\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.600\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200207\",\n            \"rec_tim\": \"0117\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.570\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200206\",\n            \"rec_tim\": \"0136\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.525\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200205\",\n            \"rec_tim\": \"0121\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.470\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200204\",\n            \"rec_tim\": \"0115\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value\": \"44\",\n            \"value2\": \"2.370\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200203\",\n            \"rec_tim\": \"0112\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.347\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200202\",\n            \"rec_tim\": \"0133\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.370\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200201\",\n            \"rec_tim\": \"0104\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.346\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200131\",\n            \"rec_tim\": \"0028\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.368\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200130\",\n            \"rec_tim\": \"0018\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.314\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200129\",\n            \"rec_tim\": \"0027\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.285\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200128\",\n            \"rec_tim\": \"0030\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value\": \"44\",\n            \"value2\": \"2.304\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200127\",\n            \"rec_tim\": \"0619\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.340\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200126\",\n            \"rec_tim\": \"0006\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.344\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200125\",\n            \"rec_tim\": \"0120\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.350\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200124\",\n            \"rec_tim\": \"0139\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.360\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200123\",\n            \"rec_tim\": \"0212\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.295\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200122\",\n            \"rec_tim\": \"0350\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.326\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200121\",\n            \"rec_tim\": \"0310\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value\": \"44\",\n            \"value2\": \"2.272\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200120\",\n            \"rec_tim\": \"0334\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.268\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200119\",\n            \"rec_tim\": \"0101\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.260\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200118\",\n            \"rec_tim\": \"0354\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.231\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200117\",\n            \"rec_tim\": \"0018\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.214\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200116\",\n            \"rec_tim\": \"0106\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.207\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200115\",\n            \"rec_tim\": \"0237\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.139\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200114\",\n            \"rec_tim\": \"0043\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value\": \"42.6\",\n            \"value2\": \"2.112\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200113\",\n            \"rec_tim\": \"0440\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.129\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200112\",\n            \"rec_tim\": \"0410\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.063\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200111\",\n            \"rec_tim\": \"0122\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.995\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200110\",\n            \"rec_tim\": \"0149\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.013\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200109\",\n            \"rec_tim\": \"0119\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.937\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200108\",\n            \"rec_tim\": \"0118\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.949\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200107\",\n            \"rec_tim\": \"0130\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value\": \"41.9\",\n            \"value2\": \"1.985\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200106\",\n            \"rec_tim\": \"0240\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.000\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200104\",\n            \"rec_tim\": \"0046\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.917\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200103\",\n            \"rec_tim\": \"0146\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.937\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200102\",\n            \"rec_tim\": \"0315\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.897\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200101\",\n            \"rec_tim\": \"0405\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.918\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191231\",\n            \"rec_tim\": \"0130\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value\": \"39.2\",\n            \"value2\": \"1.917\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191230\",\n            \"rec_tim\": \"0040\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.883\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191229\",\n            \"rec_tim\": \"0126\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.845\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191228\",\n            \"rec_tim\": \"0402\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.784\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191227\",\n            \"rec_tim\": \"0137\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.894\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191226\",\n            \"rec_tim\": \"0201\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.884\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191225\",\n            \"rec_tim\": \"0042\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.927\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191224\",\n            \"rec_tim\": \"0038\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value\": \"35.5\",\n            \"value2\": \"1.827\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191223\",\n            \"rec_tim\": \"0239\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.887\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191222\",\n            \"rec_tim\": \"0153\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.947\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191221\",\n            \"rec_tim\": \"0031\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.917\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191220\",\n            \"rec_tim\": \"0116\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.887\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191219\",\n            \"rec_tim\": \"0122\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.887\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191218\",\n            \"rec_tim\": \"0117\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.947\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191217\",\n            \"rec_tim\": \"0117\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value\": \"35\",\n            \"value2\": \"1.917\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191216\",\n            \"rec_tim\": \"0225\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.897\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191212\",\n            \"rec_tim\": \"0144\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.697\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191210\",\n            \"rec_tim\": \"0133\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value\": \"34\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191209\",\n            \"rec_tim\": \"0127\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.697\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191205\",\n            \"rec_tim\": \"0219\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.527\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191204\",\n            \"rec_tim\": \"0651\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.537\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191203\",\n            \"rec_tim\": \"1346\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value\": \"34\",\n            \"value2\": \"1.6\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200303\",\n            \"rec_tim\": \"0922\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"PER\",\n            \"value\": \"頭圍\",\n            \"value2\": \"33.5\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200225\",\n            \"rec_tim\": \"0843\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"PER\",\n            \"value\": \"頭圍\",\n            \"value2\": \"33.1\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200218\",\n            \"rec_tim\": \"1521\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"PER\",\n            \"value\": \"頭圍\",\n            \"value2\": \"32.4\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200211\",\n            \"rec_tim\": \"0900\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"PER\",\n            \"value\": \"頭圍\",\n            \"value2\": \"33\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200204\",\n            \"rec_tim\": \"0947\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"PER\",\n            \"value\": \"頭圍\",\n            \"value2\": \"31.8\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200128\",\n            \"rec_tim\": \"0924\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"PER\",\n            \"value\": \"頭圍\",\n            \"value2\": \"31.5\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200121\",\n            \"rec_tim\": \"1027\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"PER\",\n            \"value\": \"頭圍\",\n            \"value2\": \"30.6\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200114\",\n            \"rec_tim\": \"1432\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"PER\",\n            \"value\": \"頭圍\",\n            \"value2\": \"30.5\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200107\",\n            \"rec_tim\": \"0956\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"PER\",\n            \"value\": \"頭圍\",\n            \"value2\": \"30.8\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191231\",\n            \"rec_tim\": \"0900\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"PER\",\n            \"value\": \"頭圍\",\n            \"value2\": \"31\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191224\",\n            \"rec_tim\": \"0930\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"PER\",\n            \"value\": \"頭圍\",\n            \"value2\": \"29.5\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191217\",\n            \"rec_tim\": \"0957\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"PER\",\n            \"value\": \"頭圍\",\n            \"value2\": \"29.5\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191210\",\n            \"rec_tim\": \"1306\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"PER\",\n            \"value\": \"頭圍\",\n            \"value2\": \"29.3\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191203\",\n            \"rec_tim\": \"1011\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"PER\",\n            \"value\": \"頭圍\",\n            \"value2\": \"27.2\"\n          }\n        ]\n      },\n      \"ret\": \"0\",\n      \"retMsg\": \"Success\"\n    }\n  }","import React, { Component } from 'react'\nimport './ChronicWeightTable.scss'\nimport moment from 'moment'\nimport * as QTWPER from '../../Resource/QTWPER'\n// import * as ApiProvider from '../../API/ApiProvider'\n\nclass Chronicweighttable extends Component {\n    // 0:一天 1:三天 2:一週 3:兩週\n    state = { QTWPER: null }\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const weight = caseinfo.WEIGHT\n        this.setState({ QTWPER: weight })\n        // this.setState({ QTWPER: QTWPER.data.outmsg.resconts.rescont })\n    }\n\n    switch_state() {\n        const { chronic_state } = this.props\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 21\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    celltable() {\n        function changegridnumber(key) {\n            switch (key) {\n                case 0:\n                    return 24\n                case 1:\n                    return 18\n                case 2:\n                    return 21\n                case 3:\n                    return 14\n                default:\n                    break;\n            }\n        }\n        const { chronic_state, openTimeLine } = this.props\n        const number = changegridnumber(chronic_state);\n        function TimeLine(interval, index) {\n            if (interval === 0) {\n                if (index === 0 || (index % 24) === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                } else if (index % 8 === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                }\n                else {\n                    return '1px rgba(220,220,220,1) solid';\n                }\n            }\n            if (interval === 1) {\n                if (index === 0 || (index % 6) === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                } else if (index % 2 === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                }\n                else {\n                    return '1px rgba(220,220,220,1) solid';\n                }\n            }\n            if (interval === 2) {\n\n                if (index === 0 || (index % 3) === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                } else {\n                    return '2px rgba(0,0,0,0.2) solid';\n                }\n            }\n            if (interval === 3) {\n                return '2px rgba(0,0,0,0.2) solid';\n            }\n        }\n        function checkLineColor(openTimeLine, chronic_state, index) {\n            if (openTimeLine) {\n                return TimeLine(chronic_state, index);\n            }\n        }\n        var arr = []\n        for (let index = 0; index < number; index++) {\n            arr.push(\n                <div key={index} className='cell' style={{ borderLeft: checkLineColor(openTimeLine, chronic_state, index) }}></div>\n            )\n\n        }\n        return arr\n    }\n    weightRectRender() {\n        function TimerFormat(interval, pickerdate) {\n            const endTime = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    startTime: endTime - (24 * 60 * 60 * 1000),\n                    endTime: endTime,\n                    interval: 24,\n                    grid: 1\n                }\n            }\n            if (interval === 1) {\n                return {\n                    startTime: endTime - (3 * 24 * 60 * 60 * 1000),\n                    endTime: endTime,\n                    interval: 18,\n                    grid: 4\n                }\n            }\n            if (interval === 2) {\n                return {\n                    startTime: endTime - (7 * 24 * 60 * 60 * 1000),\n                    endTime: endTime,\n                    interval: 21,\n                    grid: 8\n                }\n            }\n            return {\n                startTime: endTime - (14 * 24 * 60 * 60 * 1000),\n                endTime: endTime,\n                interval: 14,\n                grid: 24\n            }\n        }\n        const { chronic_state, caseinfo, PickerDate } = this.props\n        // const QTPWERList = caseinfo.WEIGHT\n        const QTPWERList = this.state.QTWPER\n        if (QTPWERList === undefined || QTPWERList === null) {\n            return null\n        }\n        const WeightList = QTPWERList.filter(function (info, index, arr) {\n            return info.type === \"TW\"\n        })\n\n        const timer = TimerFormat(chronic_state, PickerDate)\n        const width = document.body.clientWidth - 220\n        const widthRate = width / (timer.endTime - timer.startTime)\n        var WeightListFormat = []\n        const sortWeightList = WeightList.sort(function (a, b) {\n            const aTime = moment(a.rec_dat.toString() + a.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n            const bTime = moment(b.rec_dat.toString() + b.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n            return aTime > bTime ? 1 : -1;\n        });\n        var lastelement = null\n        for (let index = 0; index < sortWeightList.length; index++) {\n            const element = WeightList[index];\n            const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n            if (timer.startTime > elementTime) {\n                const elementValue = parseInt(Number(element.value2) * 1000)\n                lastelement = { Time: elementTime, Value: elementValue }\n            }\n            console.log(lastelement)\n            if (timer.startTime <= elementTime && elementTime <= timer.endTime) {\n                const elementValue = parseInt(Number(element.value2) * 1000)\n                WeightListFormat.push({\n                    Time: elementTime,\n                    Value: elementValue\n                })\n            }\n        }\n        console.log(WeightListFormat)\n        if (lastelement !== null) {\n            WeightListFormat.splice(0,0,lastelement)\n            lastelement = null\n        }\n        console.log(WeightListFormat)\n        const sortWeight = WeightListFormat.sort(function (a, b) {\n            return a.Time > b.Time ? 1 : -1;\n        });\n        var shift = 0\n        var elementWidthList = []\n        for (let index = 0; index < sortWeight.length; index++) {\n            const element = sortWeight[index];\n            if (index === 0) {\n                if (element.Time < timer.startTime) {\n                    shift = 0\n                }\n                else {\n                    shift = (element.Time - timer.startTime) * widthRate\n                }\n            }\n            if (sortWeight.length - 1 === index) {\n                const time1 = element.Time\n                const time2 = timer.endTime\n                const elementWidth = (time2 - time1) * widthRate\n                elementWidthList.push({\n                    Value: element.Value,\n                    width: elementWidth\n                })\n            }\n            else {\n                const time1 = sortWeight[index].Time\n                const time2 = sortWeight[index + 1].Time\n                const elementWidth = (time2 - time1) * widthRate\n                elementWidthList.push({\n                    Value: element.Value,\n                    width: elementWidth\n                })\n            }\n        }\n        return {\n            shift: shift,\n            elementWidthList: elementWidthList\n        }\n    }\n    render() {\n        const { chronic_state, caseinfo, PickerDate } = this.props\n        const weight = caseinfo.WEIGHT\n        console.log(caseinfo)\n        // const weight = this.state.QTWPER\n        if (weight === null) { return null }\n        function FormatEndTimeStamp(start, interval) {\n            if (interval === 0) {\n                return start - (24 * 60 * 60 * 1000)\n            }\n            if (interval === 1) {\n                return start - (3 * 24 * 60 * 60 * 1000)\n\n            }\n            if (interval === 2) {\n                return start - (7 * 24 * 60 * 60 * 1000)\n\n            }\n            if (interval === 3) {\n                return start - (14 * 24 * 60 * 60 * 1000)\n\n            }\n        }\n        const end = PickerDate + (31 * 60 * 60 * 1000)\n        const start = FormatEndTimeStamp(end, chronic_state)\n        const datafilter = weight.filter(function (value, index, arr) {\n            const timeString = value.rec_dat.toString() + value.rec_tim.toString()\n            const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n            return start < time && time < end\n        })\n        const datafilterTime = datafilter.map(function (value, index, arr) {\n            const timeString = value.rec_dat.toString() + value.rec_tim.toString()\n            const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n            return time\n        })\n        const diff = end - start\n        var widthArray = []\n        if (datafilter.length === 0) {\n            // const element = weight[0]\n            // widthArray.push({\n            //     width: 100,\n            //     weight: (element.value2) * 1000\n            // })\n        }\n        if (datafilter.length === 1) {\n            for (let index = 0; index < datafilter.length; index++) {\n                const element = datafilter[index];\n                const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                const width = parseInt(100 * (time - start) / diff)\n                widthArray.push({\n                    width: width,\n                    weight: Number(element.value2) * 1000\n                })\n            }\n        }\n        else {\n            for (let index = 0; index < datafilter.length - 1; index++) {\n                const element = datafilter[index];\n                if (index === 0) {\n                    const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                    const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                    const width = parseInt(100 * (time - start) / diff)\n                    widthArray.push({\n                        width: width,\n                        weight: Number(element.value2) * 1000\n                    })\n                }\n                else if (index === (datafilterTime.length - 1)) {\n                    const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                    const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                    const width = parseInt(100 * (end - time) / diff)\n                    widthArray.push({\n                        width: width,\n                        weight: Number(element.value2) * 1000\n                    })\n                }\n                else {\n                    const element2 = datafilter[index + 1]\n                    const timeString2 = element2.rec_dat.toString() + element2.rec_tim.toString()\n                    const time2 = moment(timeString2, \"YYYYMMDDHHmm\").valueOf()\n                    const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                    const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                    const width = parseInt(100 * (time2 - time) / diff)\n                    widthArray.push({\n                        width: width,\n                        weight: Number(element.value2) * 1000\n                    })\n                }\n            }\n        }\n        function changegridstyle(key) {\n            switch (key) {\n                case 0:\n                    return 'chronicweighttableoneday'\n                case 1:\n                    return 'chronicweighttablethreeday'\n                case 2:\n                    return 'chronicweighttableoneweek'\n                case 3:\n                    return 'chronicweighttabletwoweek'\n                default:\n                    return null\n            }\n        }\n        const list = this.weightRectRender()\n        if (list === null || list === undefined) {\n            return null\n        }\n        const render = list.elementWidthList.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ border: \"1px black solid\", borderCollapse: \"collapse\", width: value.width + '%', height: \"20\", backgroundColor: \"#3B97E1\", color: \"white\", display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>{Math.round(value.Value)}g</div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\", position: 'relative' }}>\n                <div style={{ display: \"flex\", justifyContent: \"left\", alignItems: \"center\", background: \"rgba(59, 151, 255,.4)\", paddingLeft: \"10px\" }}>\n                    <t2>體重</t2>\n                </div>\n                <div className={changegridstyle(chronic_state)}>{this.celltable()}</div>\n                <div style={{ position: 'absolute', left: 140, paddingTop: \"15px\" }}>\n                    <div style={{ paddingLeft: list.shift + \"px\", display: \"flex\", width: 'calc(100vw - 220px)', overflow: \"hidden\" }}>\n                        {render}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chronicweighttable\n","import React, { Component } from 'react'\nimport Chronicweighttable from './ChronicWeightTable'\n\nclass Weightonchronic extends Component {\n    render() {\n        const { caseinfo, PickerDate, select_interval } = this.props\n        const item_title = [{ title: \"體重\" }] \n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <Chronicweighttable openTimeLine={true} PickerDate={PickerDate} title={item_title} caseinfo={caseinfo} chronic_state={select_interval}></Chronicweighttable>\n            </div>\n        );\n    }\n}\n\nexport default Weightonchronic","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport '../Patientview/CrossSectionView/Crosssectionvitalsignchart.scss'\n\nclass Vitalxaxis extends Component {\n    state = {\n        change: false,\n        viewwidth: window.innerWidth - 220\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n        window.addEventListener('resize', this.debounceWindowSize);\n    }\n    debounce(func, wait, immediate) {\n        var timeout;\n        return () => {\n            var context = this, args = arguments;\n            var later = function() {\n                timeout = null;\n                if (!immediate) func.apply(context, args);\n            };\n            var callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) func.apply(context, args);\n        };\n    }\n\n    debounceWindowSize = this.debounce(this.recalcWindowSize, 500);\n\n    componentWillUnmount(){\n        window.removeEventListener('resize', this.debounceWindowSize);\n    }\n\n    recalcWindowSize() {\n        this.setState({ viewwidth: window.innerWidth - 220 });\n    }\n\n    drawChart() {\n        function nowtime(time) {\n            return time + (7 * 60 * 60 * 1000)\n        }\n        function monthformat(month) {\n            return month + 1\n        }\n        function intervaldays(select_date, select_interval) {\n            switch (select_interval) {\n                //一天\n                case 0:\n                    return select_date - 86400000 * 1\n                //三天\n                case 1:\n                    return select_date - 86400000 * 3\n                //一週\n                case 2:\n                    return select_date - 86400000 * 7\n                //兩週\n                case 3:\n                    return select_date - 86400000 * 14\n                default:\n                    return null\n            }\n        }\n\n        const { id_key, svg_id,select_interval, select_date } = this.props\n        // const viewwidth = window.screen.availWidth - 220\n        //選取時間(0點)\n        const select_date_zero = new Date(new Date(select_date).getFullYear() + ',' + monthformat(new Date(select_date).getMonth()) + ',' + new Date(select_date).getDate()).getTime()\n        //選取時間(7點)\n        const select_time_format = nowtime(select_date_zero)\n        //select_intercal:0一天 1三天 2兩週\n        const Start_time = intervaldays(select_time_format, select_interval)\n        var xaxis = []\n        if (select_interval === 0) {\n            for (let index = 0; index < 24; index++) {\n                const time = Start_time + (30 * 60 * 1000) + (index * 60 * 60 * 1000)\n                xaxis.push(time)\n            }\n        }\n        if (select_interval === 1) {\n            for (let index = 0; index < 21; index++) {\n                const time = Start_time + (2 * 60 * 60 * 1000) + (index * 60 * 60 * 1000 * 4)\n                xaxis.push(time)\n            }\n        }\n\n        if (select_interval === 2) {\n            for (let index = 0; index < 21; index++) {\n                const time = Start_time + (4 * 60 * 60 * 1000) + (index * 60 * 60 * 1000 * 8)\n                xaxis.push(time)\n            }\n        }\n\n        // if (select_interval === 3) {\n        //     for (let index = 0; index < 14; index++) {\n        //         const time = Start_time + (12 * 60 * 60 * 1000) + (index * 60 * 60 * 1000 * 24)\n        //         xaxis.push(time)\n        //     }\n        // }\n        var x = d3.scaleLinear()\n            .domain([Start_time, select_time_format])\n            .range([0, this.state.viewwidth])\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            // .attr(\"viewbox\", [0, 0, viewwidth + 60, 25])\n            .style(\"width\", this.state.viewwidth + 100)\n            .style(\"height\", 25)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 15 + \")\");\n\n        var formatHour = d3.timeFormat(\"%H\")\n        var formatday = d3.timeFormat(\"%d\")\n        function multiFormat(date) {\n            if (select_interval === 0) {\n                return formatHour(date) + '~' + formatHour(date + (60 * 60 * 1000))\n            }\n            if (select_interval === 1) {\n                return formatHour(date - (2 * 60 * 60 * 1000)) + '~' + formatHour(date + (2 * 60 * 60 * 1000))\n            }\n            if (select_interval === 2) {\n                return formatHour(date - (4 * 60 * 60 * 1000)) + '~' + formatHour(date + (4 * 60 * 60 * 1000))\n            }\n            if (select_interval === 3) {\n                return monthformat(new Date(date).getMonth()) + '/' + formatday(date)\n            }\n            return formatHour(date)\n        }\n        var xAxis = d3.axisTop(x)\n            .tickValues(xaxis)\n            .tickSize(0, 0)\n            .tickPadding(5)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\");\n\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default Vitalxaxis;","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport '../Patientview/CrossSectionView/Crosssectionvitalsignchart.scss'\nimport { yyyymmddformat } from '../Function/Timeformat'\nimport moment from 'moment';\n\nclass Vitalxaxisbot extends Component {\n    state = {\n        change: false,\n        viewwidth: window.innerWidth - 221\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n        window.addEventListener('resize', this.debounceWindowSize);\n    }\n\n    debounce(func, wait, immediate) {\n        var timeout;\n        return () => {\n            var context = this, args = arguments;\n            var later = function () {\n                timeout = null;\n                if (!immediate) func.apply(context, args);\n            };\n            var callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) func.apply(context, args);\n        };\n    }\n\n    debounceWindowSize = this.debounce(this.recalcWindowSize, 500);\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.debounceWindowSize);\n    }\n\n    recalcWindowSize() {\n        this.setState({ viewwidth: window.innerWidth - 221 });\n    }\n\n    drawChart() {\n        function intervaldays(select_date, select_interval) {\n            switch (select_interval) {\n                //一天\n                case 0:\n                    return moment(select_date).add(7, 'hours').valueOf();\n                //三天\n                case 1:\n                    return moment(select_date).subtract(2, 'days').add(7, 'hours').valueOf();\n                //一週\n                case 2:\n                    return moment(select_date).subtract(6, 'days').add(7, 'hours').valueOf();\n                //兩週\n                case 3:\n                    return moment(select_date).subtract(13, 'days').add(7, 'hours').valueOf();\n                default:\n                    return null\n            }\n        }\n\n        const { id_key, svg_id, select_interval, select_date } = this.props;\n        const Start_time = intervaldays(select_date, select_interval)\n        const End_time = moment(select_date).add(1, 'day').startOf('day').add(7, 'hours').valueOf();\n        var xaxis = []\n        if (select_interval === 0) {\n            xaxis.push(Start_time);\n            const time = moment(Start_time).add(1, 'day').startOf('day').valueOf();\n            xaxis.push(time)\n        }\n        if (select_interval === 1) {\n            xaxis.push(Start_time);\n            for (let index = 1; index < 4; index++) {\n                const time = moment(Start_time).add(index, 'days').startOf('day').valueOf();\n                xaxis.push(time)\n            }\n        }\n\n        if (select_interval === 2) {\n            xaxis.push(Start_time);\n            for (let index = 1; index < 8; index++) {\n                const time = moment(Start_time).add(index, 'days').startOf('day').valueOf();\n                xaxis.push(time)\n            }\n        }\n\n        if (select_interval === 3) {\n            xaxis.push(Start_time);\n            for (let index = 1; index < 7; index++) {\n                const time = moment(Start_time).add(2*index, 'days').startOf('day').valueOf();\n                xaxis.push(time)\n            }\n        }\n        var x = d3.scaleLinear()\n            .domain([Start_time, End_time])\n            .range([0, this.state.viewwidth - 1])\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            // .attr(\"viewbox\", [0, 0, viewwidth + 60, 25])\n            .style(\"width\", this.state.viewwidth)\n            .style(\"height\", 25)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 14 + \",\" + -9 + \")\");\n\n\n        function multiFormat(date) {\n            return moment(date).format(\"MM/DD\")\n        }\n\n\n        var xAxis = d3.axisBottom(x)\n            .tickValues(xaxis)\n            .tickSize(0, 0)\n            .tickPadding(10)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .style(\"font-size\", \"11px\")\n            .attr(\"class\", \"axis\");\n\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default Vitalxaxisbot;\n","import React, { Component } from 'react'\nimport { Select, Button } from 'antd';\n// import Chronicvitalchart from './Chronic_vital_chart'\nimport { statecolor } from '../../Function/Wardstate'\nimport { formatxArrayhalf, formatendtime } from '../../Function/Timeformat'\nimport './Chronic_vital.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport Crosssectionvitalsignchart from '../CrossSectionView/Crossectionvitalsignchart'\nimport '../../Wardview/Wardchart.scss'\n\nconst Interval_grid = (number) => {\n    switch (number) {\n        case 0:\n            return 24\n        case 1:\n            return 18\n        case 2:\n            return 21\n        case 3:\n            return 14\n        default:\n            return null\n    }\n}\n\n\nconst timeCheck = (interval, pickerDate) => {\n    // 選的日期7:00距離目前時間差距\n    const duration = moment.duration(moment().diff(moment(pickerDate).startOf('day').hour(7)));\n    // \b如果選擇的日期在今天之前，那就直接選擇最後一格\n    if (moment(pickerDate).isBefore(moment().startOf('day'))) {\n        return Interval_grid(interval);\n    } else if (interval === 0) { // day 目前距離幾個小時就幾格\n        const hours = Math.floor(duration.asHours());\n        return hours > 0 ? hours : 0;\n    } else if (interval === 1) { // three day 每4小時一格，基礎 12 格是今天 7:00\n        const step = Math.floor(duration.asHours() / 4);\n        return 12 + step;\n    } else if (interval === 2) { // one week 每8小時一格，基礎 18 格是今天 7:00\n        const step = Math.floor(duration.asHours() / 8);\n        return 18 + step;\n    } else if (interval === 3) { // two week 直接看倒數第2格\n        return 13;\n    }\n}\n\n\nclass Vitalonchronic extends Component {\n    state = {\n        check_state_one: 0,\n        check_state_three: 0,\n        check_state_oneweek: 0,\n        check_state_twoweek: 0,\n        statussource: \"CM\",\n        CenterMonitorValue: [],\n        width: window.innerWidth - 171,\n        pbStatus: true,\n        preInterval: 0,\n        prePickerDate: 0,\n    }\n\n    debounce(func, wait, immediate) {\n        var timeout;\n        return () => {\n            var context = this, args = arguments;\n            var later = function () {\n                timeout = null;\n                if (!immediate) func.apply(context, args);\n            };\n            var callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) func.apply(context, args);\n        };\n    }\n\n    debounceWindowSize = this.debounce(this.recalcWindowSize, 500);\n\n    componentDidMount() {\n        const { select_interval, PickerDate } = this.props;\n        this.onClickCheckgrid_one(timeCheck(select_interval, PickerDate));\n        window.addEventListener('resize', this.debounceWindowSize);\n        this.setState({ preInterval: select_interval, prePickerDate: PickerDate });\n    }\n\n    componentDidUpdate() {\n        const { select_interval, PickerDate } = this.props;\n        const { preInterval, prePickerDate } = this.state;\n        if (select_interval !== preInterval || PickerDate !== prePickerDate) {\n            this.setState({ preInterval: select_interval, prePickerDate: PickerDate });\n            if (select_interval === 0) {\n                this.onClickCheckgrid_one(timeCheck(select_interval, PickerDate));\n            } else if (select_interval === 1) {\n                this.onClickCheckgrid_three(timeCheck(select_interval, PickerDate));\n            } else if (select_interval === 2) {\n                this.onClickCheckgrid_oneweek(timeCheck(select_interval, PickerDate));\n            } else if (select_interval === 3) {\n                this.onClickCheckgrid_twoweek(timeCheck(select_interval, PickerDate));\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.debounceWindowSize);\n    }\n\n    recalcWindowSize() {\n        this.setState({ width: window.innerWidth - 171 });\n    }\n\n    getVitalSignData(startTime, EndTime, Phistnum) {\n        ApiProvider.getPatientwardvalueMedian(Phistnum, startTime, EndTime)\n            .then(data => {\n                this.setState({\n                    CenterMonitorValue: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n                this.setState({\n                    CenterMonitorValue: null\n                })\n            })\n    }\n\n    // switchdata(value_interval, sourcefrom) {\n    //     const { defaultdate } = this.props\n    //     function changevitaldays(vitaldays) {\n    //         if (vitaldays === 3) {\n    //             return 18\n    //         }\n    //         else {\n    //             return 24\n    //         }\n    //     }\n\n    //     function Interval_switch(interval) {\n    //         if (interval === 0) {\n    //             return 1\n    //         }\n    //         if (interval === 1) {\n    //             return 3\n    //         }\n    //     }\n    //     const interval = Interval_switch(value_interval)\n    //     const starttime = formatendtime(defaultdate) - (interval * 24 * 60 * 60 * 1000)\n    //     if (sourcefrom === 'NIS') {\n    //         const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n    //         const data = simulationnisdata(datatime, changevitaldays(interval))\n    //         return data\n    //     }\n    //     else {\n\n    //         const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n    //         const data = simulationCentermonitordata(datatime, changevitaldays(interval))\n    //         return data\n    //     }\n    // }\n    Interval_grid_box() {\n        var gridarray = []\n        if (this.props.select_interval === 0) {\n            for (let index = 0; index < 24; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_one) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: '100%', border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_one(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: '100%' }} onClick={() => this.onClickCheckgrid_one(number)}></div>)\n            }\n        }\n        if (this.props.select_interval === 1) {\n            for (let index = 0; index < 18; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_three) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: '100%', border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_three(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: '100%' }} onClick={() => this.onClickCheckgrid_three(number)}></div>)\n            }\n        }\n        if (this.props.select_interval === 2) {\n            for (let index = 0; index < 21; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_oneweek) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: '100%', border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_oneweek(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: '100%' }} onClick={() => this.onClickCheckgrid_oneweek(number)}></div>)\n            }\n        }\n        if (this.props.select_interval === 3) {\n            for (let index = 0; index < 14; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_twoweek) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: '100%', border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_twoweek(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: '100%' }} onClick={() => this.onClickCheckgrid_twoweek(number)}></div>)\n            }\n        }\n        return gridarray\n    }\n\n    onClickCheckgrid_one(number) {\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (24 * 60 * 60 * 1000)\n        const endtime = ST + (number * 60 * 60 * 1000)\n        const starttime = endtime - 60 * 60 * 1000\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ check_state_one: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n    onClickCheckgrid_three(number) {\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (3 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 4) * 60 * 60 * 1000)\n        const starttime = endtime - (4 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ check_state_three: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n\n    onClickCheckgrid_oneweek(number) {\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (7 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 8) * 60 * 60 * 1000)\n        const starttime = endtime - (8 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ check_state_oneweek: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n    onClickCheckgrid_twoweek(number) {\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (14 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 24) * 60 * 60 * 1000)\n        const starttime = endtime - (24 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ check_state_twoweek: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n\n    sourcehandleChange = (value) => {\n        this.setState({ statussource: value })\n    }\n    render() {\n        function centervaluetoNull(value) {\n            function FilterList(DataList, type) {\n                const filterData = DataList.filter(function (value, index, arr) {\n                    return value.type === type\n                })\n                if (filterData.length === 0) {\n                    return null\n                }\n                return filterData[0].Mid\n            }\n            if (value === undefined || value === null) {\n                return {\n                    hr: null,\n                    rr: null,\n                    bt: null,\n                    spo2: null,\n                    abpd: null,\n                    abpm: null,\n                    abps: null,\n                    nbpm: null,\n                    nbps: null,\n                    nbpd: null\n                }\n            }\n            return {\n                hr: FilterList(value, \"hr\"),\n                rr: FilterList(value, \"rr\"),\n                bt: FilterList(value, \"bt\"),\n                spo2: FilterList(value, \"spo2\"),\n                abpd: FilterList(value, \"abpd\"),\n                abpm: FilterList(value, \"abpm\"),\n                abps: FilterList(value, \"abps\"),\n                nbpd: FilterList(value, \"nbpd\"),\n                nbps: FilterList(value, \"nbps\"),\n                nbpm: FilterList(value, \"nbpm\"),\n            }\n        }\n        function centervalueNull(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            return value\n        }\n\n        function formatPickerTimer(pickerdate, interval) {\n            const end = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    startTime: end - (24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n            if (interval === 1) {\n                return {\n                    startTime: end - (3 * 24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n            if (interval === 2) {\n                return {\n                    startTime: end - (7 * 24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n            else {\n                return {\n                    startTime: end - (14 * 24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n        }\n        function limitValue(value, upper, lower) {\n            if (value > upper || value < lower) {\n                return false\n            }\n            return true\n        }\n        function valueFormat(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"--\"\n            }\n            return value\n        }\n\n        const { Option } = Select;\n        const { source } = this.props\n        const pickerTimer = formatPickerTimer(this.props.PickerDate, this.props.select_interval)\n        const centervalue = centervaluetoNull(this.state.CenterMonitorValue)\n        const { width } = this.state;\n        const status = this.state.pbStatus\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\", marginTop: \"10px\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>生命徵象</t2>\n                    {/* <div >\n                        <Button style={{ margin: \"0px 10px\" }} value={\"CM\"} type=\"primary\" onClick={this.sourcehandleChange}>Center Monitor</Button>\n                        <Button style={{}} value={\"NIS\"} type=\"primary\" onClick={this.sourcehandleChange}>NIS</Button>\n                    </div> */}\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridGap: \"5px\", marginLeft: \"20px\" }}>\n                        <div className={this.state.statussource === \"CM\" ? \"vitalBtnSource\" : \"vitalBtnSelectSource\"} style={{ marginRight: \"1px\" }} onClick={() => this.sourcehandleChange('CM')}>\n                            中央站資訊\n                        </div>\n                        <div className={this.state.statussource === \"NIS\" ? \"vitalBtnSource\" : \"vitalBtnSelectSource\"} onClick={() => this.sourcehandleChange('NIS')}>\n                            護理系統資訊\n                        </div>\n                    </div>\n                    {\n                        this.props.fromInfection ? null\n                            :\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto auto auto\", gridGap: \"2px\", marginLeft: \"15px\" }}>\n                                <div className={this.props.select_interval === 0 ? \"vitalBtnInterval\" : \"vitalBtnSelectInterval\"} style={{ marginRight: \"1px\" }} onClick={() => this.props.onSelectchange(0)}>\n                                    顯示一天\n                                </div>\n                                <div className={this.props.select_interval === 1 ? \"vitalBtnInterval\" : \"vitalBtnSelectInterval\"} style={{ marginRight: \"1px\" }} onClick={() => this.props.onSelectchange(1)}>\n                                    顯示三天\n                                </div>\n                                <div className={this.props.select_interval === 2 ? \"vitalBtnInterval\" : \"vitalBtnSelectInterval\"} style={{ marginRight: \"1px\" }} onClick={() => this.props.onSelectchange(2)}>\n                                    顯示一週\n                                </div>\n                                <div className={this.props.select_interval === 3 ? \"vitalBtnInterval\" : \"vitalBtnSelectInterval\"} onClick={() => this.props.onSelectchange(3)}>\n                                    顯示二週\n                                </div>\n                            </div>\n                    }\n                </div>\n\n                <div className=\"halfwardchart\">\n                    <div style={{ display: \"grid\", gridTemplateRows: this.state.statussource === 'CM' ? \"repeat(6,110px)\" : \"repeat(5,110px)\" }}>\n\n                        <div className=\"chronicvitalCardTitle\" style={{ backgroundColor: status ? \"white\" : statecolor('HR') }}>\n                            <t4 style={{ color: status ? statecolor('HR') : \"white\" }}>HR</t4>\n                            <t1 style={{ lineHeight: \"44px\", color: status ? statecolor('HR') : \"white\" }}>{centervalueNull(centervalue.hr)}</t1>\n                        </div>\n\n                        {\n                            this.state.statussource === \"CM\" ? (\n                                <div className=\"chronicvitalCardTitle\" style={{ backgroundColor: status ? \"white\" : statecolor('BP') }}>\n                                    <div className=\"chronicvitalCardTitleText\" style={{ color: status ? statecolor('BP') : \"white\" }}>\n                                        <t4>NBP</t4>\n                                        <t4>(mmHg)</t4>\n                                    </div>\n                                    <div className=\"chronicvitalCardTitleVal\">\n                                        <t3 style={{ color: status ? statecolor('BP') : \"white\" }}>{centervalueNull(centervalue.nbps)}/{centervalueNull(centervalue.nbpd)}</t3>\n                                        <t3 style={{ color: status ? statecolor('BP') : \"white\" }}>({centervalueNull(centervalue.nbpm)})</t3>\n                                    </div>\n                                </div>\n                            ) : null\n                        }\n\n\n                        <div className=\"chronicvitalCardTitle\" style={{ backgroundColor: status ? \"white\" : statecolor('BP') }}>\n                            <div className=\"chronicvitalCardTitleText\" style={{ color: status ? statecolor('BP') : \"white\" }}>\n                                <t4>{this.state.statussource === \"CM\" ? 'ABP' : 'BP'}</t4>\n                                <t4>(mmHg)</t4>\n                            </div>\n                            <div className=\"chronicvitalCardTitleVal\">\n                                <t3 style={{ color: status ? statecolor('BP') : \"white\" }}>{centervalueNull(centervalue.abps)}/{centervalueNull(centervalue.abpd)}</t3>\n                                <t3 style={{ color: status ? statecolor('BP') : \"white\" }}>({centervalueNull(centervalue.abpm)})</t3>\n                            </div>\n                        </div>\n                        <div className=\"chronicvitalCardTitle\" style={{ backgroundColor: limitValue(centervalue.spo2, 100, 90) ? \"white\" : statecolor('SpO2') }}>\n                            <div className=\"chronicvitalCardTitleText\" style={{ color: limitValue(centervalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>\n                                <t4>SpO<sub >2</sub></t4>\n                                <t4>(%)</t4>\n                            </div>\n                            <t1 style={{ lineHeight: \"44px\", color: limitValue(centervalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>{centervalueNull(centervalue.spo2)}%</t1>\n                        </div>\n                        <div className=\"chronicvitalCardTitle\" style={{ backgroundColor: limitValue(centervalue.bt, 38, 36) ? \"white\" : statecolor('BT') }}>\n                            <div className=\"chronicvitalCardTitleText\" style={{ color: limitValue(centervalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>\n                                <t4>BT</t4>\n                            </div>\n                            <t1 style={{ lineHeight: \"44px\", color: limitValue(centervalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>{valueFormat(centervalue.bt)}</t1>\n                        </div>\n                        <div className=\"chronicvitalCardTitle\" style={{ backgroundColor: limitValue(centervalue.rr, 60, 20) ? \"white\" : statecolor('RR') }}>\n                            <div className=\"chronicvitalCardTitleText\" style={{ color: limitValue(centervalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>\n                                <t4>SpO<sub >2</sub></t4>\n                                <t4>(%)</t4>\n                            </div>\n                            <t1 style={{ lineHeight: \"44px\", color: limitValue(centervalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>{centervalueNull(centervalue.rr)}</t1>\n                        </div>\n\n\n                    </div>\n                    <div style={{ position: \"relative\" }}>\n                        {\n                            this.state.statussource === \"CM\" ? (\n                                <div style={{ position: \"absolute\", height: this.state.statussource === 'CM' ? 660 : 550, width: width - 50, top: 5, left: 50 }} >\n                                    <div style={{ display: \"grid\", height: '100%', gridTemplateColumns: \"repeat(\" + Interval_grid(this.props.select_interval) + \",1fr)\" }}>\n                                        {this.Interval_grid_box()}\n                                    </div>\n                                </div>\n                            ) : null\n                        }\n\n                        <Crosssectionvitalsignchart\n                            comein={'node'}\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"hr_svg_\" + source}\n                            id_key={\"hr_id_\" + source}\n                            type={\"hr\"}\n                            source={this.state.statussource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={85}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={100}\n                            upper={160}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor=\"#779F50\"\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={200}>\n                        </Crosssectionvitalsignchart>\n                        {\n                            this.state.statussource === \"CM\" ? (\n                                <Crosssectionvitalsignchart\n                                    comein={'node'}\n                                    CID={this.props.caseinfo.CASEID}\n                                    HID={this.props.caseinfo.HISID}\n                                    PickerDate={this.props.PickerDate}\n                                    svg_id={\"nbp_svg\" + source}\n                                    id_key={\"nbp_id\" + source}\n                                    type={\"nbp\"}\n                                    source={this.state.statussource}\n                                    startTime={pickerTimer.startTime}\n                                    endTime={pickerTimer.endTime}\n                                    height={85}\n                                    width={width}\n                                    interval={this.props.select_interval}\n                                    lower={55}\n                                    upper={75}\n                                    axisBot={false}\n                                    axisTop={false}\n                                    circlrcolor={\"#C12528\"}\n                                    colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                    min={0}\n                                    max={100}>\n                                </Crosssectionvitalsignchart>\n                            ) : null\n                        }\n                        <Crosssectionvitalsignchart\n                            comein={'node'}\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"abp_svg\" + source}\n                            id_key={\"abp_id\" + source}\n                            type={\"abp\"}\n                            source={this.state.statussource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={85}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={55}\n                            upper={75}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#C12528\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            comein={'node'}\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"spo2_svg_\" + source}\n                            id_key={\"spo2_id_\" + source}\n                            type={\"spo2\"}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={85}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={90}\n                            upper={100}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#4773B8\"}\n                            colorshadow={\"#4773B8\"}\n                            min={60}\n                            max={100}\n                            source={this.state.statussource}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            comein={'node'}\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"bt_svg_\" + source}\n                            id_key={\"bt_id_\" + source}\n                            type={\"bt\"}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            source={this.state.statussource}\n                            height={85}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={36}\n                            upper={38}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#7F3DB5\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={34}\n                            max={41}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            comein={'node'}\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"rr_svg_\" + source}\n                            id_key={\"rr_id_\" + source}\n                            type={\"rr\"}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={85}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={20}\n                            upper={60}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#DE7531\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}\n                            source={this.state.statussource}>\n                        </Crosssectionvitalsignchart>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default Vitalonchronic\n","import React, { Component } from 'react';\nimport { DatePicker, Button, Select, Checkbox } from 'antd';\nimport filterlogo from '../../Image/svg/filter.svg'\nimport Inoutonchronic from './Chronic_io'\nimport Chroniclab from './ChronicLab'\nimport Chronicrt from './ChronicRT'\nimport Orderonchronic from './ChronicOrder'\nimport Weightonchronic from './ChronicWeight'\nimport Vitalxaxis from '../../Module/Vitalxaxis'\nimport Vitalxaxisbot from '../../Module/Vitalxaxisbot'\nimport moment from 'moment'\nimport './Chroniclelayout.scss'\nimport Vitalonchronic from './Chronic_vital'\nimport locale from 'antd/es/date-picker/locale/zh_TW';\n\nclass Chroniclelayout extends Component {\n    state = {\n        display_Mode: false,\n        Cross_item: [0, 1, 2, 4],\n        scrollstate: 0,\n        PickerDate: moment(moment().format('YYYYMMDD'), \"YYYYMMDD\").valueOf(), //選擇日期\n        select_interval: 0, //選擇區間\n        statuschange: 0,\n    }\n    onChangeCross = (checkedValues) => {\n        this.setState({ Cross_item: checkedValues })\n    }\n\n    open_display() {\n        this.setState({\n            display_Mode: !this.state.display_Mode\n        })\n    }\n    scrollToAnchor = (anchorName) => {\n        if (anchorName) {\n            let anchorElement = document.getElementById(anchorName);\n            if (anchorElement) { anchorElement.scrollIntoView(); }\n        }\n    }\n    scroll_btn_style(index) {\n        if (index === this.state.scrollstate) {\n            return true\n        }\n        else return false\n    }\n    onChange = (date, dateString) => {\n\n        this.setState(\n            {\n                PickerDate: date.valueOf()\n            }\n        )\n    }\n    onSelectchange = (value) => {\n        this.setState(\n            {\n                select_interval: value\n            }\n        )\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDate } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const bTemp = bTime - (6 * day)\n                bronDate <= bTemp && this.onChange(moment(bTime))\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD'))\n                this.onChange(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= aTemp && this.onChange(moment(aTime))\n                break;\n            default:\n                break;\n        }\n    }\n\n    display_item(number) {\n        const item = this.state.Cross_item\n        var filter = item.some(function (item, index, array) {\n            return item === number\n        });\n        return filter\n    }\n\n    render() {\n        const { Option } = Select;\n        // const dateFormat = 'YYYY/MM/DD';\n        const { caseinfo } = this.props\n        const crosssectioncontrollist =\n            [{ \"name\": \"生命徵象\", \"scrollpoint\": \"vital_sign_chronic\" },\n            { \"name\": \"輸出入\", \"scrollpoint\": \"input_output_chronic\" },\n            { \"name\": \"檢驗\", \"scrollpoint\": \"lab_chronic\" },\n            { \"name\": \"藥物處方\", \"scrollpoint\": \"order_chronic\" }]\n\n        const btn_style = {\n            unclick_style: { borderRadius: \"4px\", color: \"#001a6d88\", border: \"1px solid #001a6d88\", padding: \"0px 4px\", height: \"30px\" }\n        }\n\n        let button = crosssectioncontrollist.map(\n            (item, index) => <Button onClick={this.scrollToAnchor.bind(this, item.scrollpoint)} key={index} style={btn_style.unclick_style}>\n                <t3>{item.name}</t3>\n            </Button>);\n\n        const display_style = {\n            displye_mode: { position: \"absolute\", right: '0px', top: \"50px\", width: \"200px\", background: \"white\", boxShadow: \"3px 3px 12px\", zIndex: \"100\", borderRadius: \"4px\" },\n            non_display_mode: { display: \"none\" },\n            check_area: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\" },\n            check_text: { padding: \"4px\", width: \"140px\", borderRadius: \"4px\", borderColor: 'rgba(0, 0, 0, 0.15)', borderStyle: \"solid\", borderWidth: \"1px\", marginLeft: \"10px\", borderRadius: \"4px\" }\n        }\n        return (\n            <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", height: \"40px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"140px 120px auto\", gridColumnGap: \"5px\" }}>\n                        <DatePicker getCalendarContainer={triggerNode => triggerNode.parentNode} locale={locale} disabledDate={(current) => { return current > moment().startOf(\"day\") || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }} onChange={this.onChange} value={moment(this.state.PickerDate)} allowClear={false} />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\", marginLeft: \"10px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"minus-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", position: \"relative\" }}>\n                        <t2 >快速切換：</t2>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(6,auto)\", gridColumnGap: \"5px\" }}>{button}</div>\n                        <div onClick={() => this.open_display()} style={{ cursor: \"pointer\", marginLeft: \"5px\" }}>\n                            <img src={filterlogo} alt='filterlogo' style={{ width: '15px', height: '15px' }}></img>\n                        </div>\n                        <div style={this.state.display_Mode ? display_style.displye_mode : display_style.non_display_mode}>\n                            <t2 className='controlmoduletitle'>顯示切換</t2>\n                            <div style={{ marginTop: \"10px\", marginBottom: \"20px\" }}>\n                                <Checkbox.Group defaultValue={this.state.Cross_item} id={\"checkbox_group\"} style={{ width: '100%', display: \"grid\", gridTemplateRows: \"repeat(4,1fr)\", gridRowGap: \"5px\" }} onChange={this.onChangeCross}>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={0}></Checkbox>\n                                        <t3 style={display_style.check_text}>生命徵象</t3>\n                                    </div>\n                                    {/* <div style={display_style.check_area}>\n                                        <Checkbox value={3}></Checkbox>\n                                        <t3 style={display_style.check_text}>呼吸治療設定</t3>\n                                    </div> */}\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={1} ></Checkbox>\n                                        <t3 style={display_style.check_text}>輸出入</t3>\n                                    </div>\n                                    {/* <div style={display_style.check_area}>\n                                        <Checkbox value={5}></Checkbox>\n                                        <t3 style={display_style.check_text}>體重</t3>\n                                    </div> */}\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={2}></Checkbox>\n                                        <t3 style={display_style.check_text}>檢驗</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={4}></Checkbox>\n                                        <t3 style={display_style.check_text}>藥物處方</t3>\n                                    </div>\n                                </Checkbox.Group>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"150px 1fr\", height: \"10px\", marginTop: \"10px\" }}>\n                    <div></div>\n                    <Vitalxaxisbot max={200} min={0} select_interval={this.state.select_interval} select_date={this.state.PickerDate} id_key=\"xaxis_bot_chronic\" svg_id=\"xaxis_bot_svg_chronic\"></Vitalxaxisbot>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\", margin: \"10px 0px\" }}>\n                    <div></div>\n                    <Vitalxaxis max={200} min={0} select_interval={this.state.select_interval} select_date={this.state.PickerDate} id_key=\"xaxis_chronic\" svg_id=\"xaxis_svg_chronic\"></Vitalxaxis>\n                </div>\n                <div className='boxshadow'></div>\n                <div className='chroniclayout'>\n                    {/* Vital sign */}\n                    <div id=\"vital_sign_chronic\" style={{ display: this.display_item(0) ? \"grid\" : \"none\" }}>\n                        <Vitalonchronic source={\"Chronic\"} PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"Vital\" onSelectchange={this.onSelectchange}></Vitalonchronic>\n                        <Chronicrt PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo}></Chronicrt>\n                    </div>\n                    {/* RT */}\n                    {/* <div id=\"rt_chronic\" style={{ display: this.display_item(3) ? \"block\" : \"none\" }}>\n                        <Chronicrt PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo}></Chronicrt>\n                    </div> */}\n                    {/* I/O */}\n                    <div id=\"input_output_chronic\" style={{ display: this.display_item(1) ? \"block\" : \"none\" }}>\n                        <Inoutonchronic PickerDate={this.state.PickerDate} Status={\"Chronic\"} IntervalStatus={this.state.select_interval} caseinfo={caseinfo} title=\"輸出入\"></Inoutonchronic>\n                        <Weightonchronic PickerDate={this.state.PickerDate} QTWPER={this.state.QTWPER} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"\"></Weightonchronic>\n                    </div>\n                    {/* 體重 */}\n                    {/* <div id=\"infection_chronic\" style={{ display: this.display_item(5) ? \"block\" : \"none\" }}>\n                    </div> */}\n                    {/* Lab */}\n                    <div id=\"lab_chronic\" style={{ display: this.display_item(2) ? \"block\" : \"none\" }}>\n                        <Chroniclab PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"檢驗\"></Chroniclab>\n                    </div>\n                    {/* Order */}\n                    <div id=\"order_chronic\" style={{ display: this.display_item(4) ? \"block\" : \"none\" }}>\n                        <Orderonchronic PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"藥物處方\"></Orderonchronic>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chroniclelayout;\n","import moment from \"moment\"\nimport React, { Component } from 'react';\n\nexport function formatIV(QDC) {\n    if (Array.isArray(QDC)) {\n        const filterIV = QDC.filter(function (info, index, arr) {\n            return info.line.toString().toUpperCase().trim() === \"IV\"\n        })\n        if (filterIV.length === 0) {\n            return false\n        }\n        return true\n    }\n    return false\n}\n\nexport function formatALUA(QDC) {\n    if (Array.isArray(QDC)) {\n        const filterIV = QDC.filter(function (info, index, arr) {\n            return info.line.toString().toUpperCase().trim() === \"A-LINE\" || info.line.toString().toUpperCase().trim() === \"UVA\"\n        })\n        console.log(filterIV)\n        if (filterIV.length === 0) {\n            return false\n        }\n        return true\n    }\n    return false\n}\n\nexport function formatCVCPICC(QDC) {\n    if (Array.isArray(QDC)) {\n        const filterIV = QDC.filter(function (info, index, arr) {\n            return info.line.toString().toUpperCase().trim() === \"CVC\" || info.line.toString().toUpperCase().trim() === \"PICC\" || info.line.toString().toUpperCase().trim() === \"UVC\"\n        })\n        if (filterIV.length === 0) {\n            return false\n        }\n        return true\n    }\n    return false\n}\n\nexport function formatIOData(QDC, filterString) {\n    if (Array.isArray(QDC)) {\n        const filter = QDC.filter(function (info, index, arr) {\n            return info.item.toString().trim() === filterString\n        })\n        return filter\n    }\n    return false\n}\n\nexport function formatData(filterData, PickerDate, filterString) {\n    function nullvalue(value) {\n        if (value === undefined || value === null || value === 0) {\n            return null\n        }\n        return value.toString().trim()\n    }\n    const end = PickerDate + (31 * 60 * 60 * 1000)\n    const start = PickerDate + (7 * 60 * 60 * 1000)\n    if (Array.isArray(filterData)) {\n        const formatTimer = filterData.filter(function (info, index, arr) {\n            const time = moment(info.rec_dat.toString().trim() + info.rec_tim.toString().trim(), \"YYYYMMDDHHmm\").valueOf()\n            return start <= time && time <= end\n        })\n        if (formatTimer.length === 0) {\n            return null\n        }\n        if (filterString === '輸液') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = nullvalue(info.line) + \"/\" + nullvalue(info.nam) + \"/\" + nullvalue(info.pos)\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '血品') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = nullvalue(info.line) + \"/\" + nullvalue(info.nam) + \"/\" + nullvalue(info.pos)\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '進食') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = nullvalue(info.nam) + \"/\" + nullvalue(info.lost)\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '失血') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"失血\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '滲液') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"滲液\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '嘔吐') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"嘔吐\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '引流') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = nullvalue(info.line) + \"/\" + nullvalue(info.pos)\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '穿刺出') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"穿刺出\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '穿刺入') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"穿刺入\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '透析入') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"穿刺入\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '透析出') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"穿刺入\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '透析總') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"穿刺入\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '沖洗出') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = nullvalue(info.line) + \"/\" + nullvalue(info.pos)\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '沖洗入') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = nullvalue(info.line) + \"/\" + nullvalue(info.pos)\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === 'Stool') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"Stool\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === 'Stimulation') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"Enema/Stimulation\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '排尿') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"Urine\" + nullvalue(info.inp_val1)\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        return null\n    }\n    return null\n}\n\nexport function groupArray(arrayList) {\n    if (Array.isArray(arrayList)) {\n        var result = arrayList.filter(function (value, index, arr) {\n            const res = arr.map(function (value, index, arr) {\n                return value.compare\n            })\n            return res.indexOf(value.compare) === index;\n        });\n        var arrList = []\n        for (let index = 0; index < result.length; index++) {\n            const element = result[index];\n            const comparevalue = element.compare\n            const filterarray = arrayList.filter(function (value, index, arr) {\n                return value.compare === comparevalue\n            })\n            arrList.push(filterarray)\n        }\n        return arrList\n    }\n    return null\n\n}\n\nexport function mapCellrender(ArrayList, PickerDate, filterString) {\n    function formatColor(filterString) {\n        if (filterString === \"輸液\") {\n            return \"rgb(160, 200, 200)\"\n        }\n        if (filterString === \"血品\") {\n            return \"rgb(210, 175, 165)\"\n        }\n        if (filterString === '進食') {\n            return \"rgb(179, 173, 50)\"\n        }\n        return \"rgb(140, 118, 162)\"\n    }\n    function formatBackgroundColor(filterString) {\n        if (filterString === \"輸液\") {\n            return \"rgb(195, 225, 225)\"\n        }\n        if (filterString === \"血品\") {\n            return \"rgb(220, 205, 200)\"\n        }\n        if (filterString === '進食') {\n            return \"rgb(230, 217, 154)\"\n        }\n        return \"rgb(212, 202, 221)\"\n    }\n    function nullvalue(value) {\n        if (value === undefined || value === null || value === 0 || value === '') {\n            return null\n        }\n        if (value.toString().match(\"null\") === 0) {\n            return \"\"\n        }\n        return value.toString().trim()\n    }\n    const start = PickerDate + (7 * 60 * 60 * 1000)\n    function valueToInit(filterString) {\n        if (filterString === '嘔吐') {\n            return \"\"\n        }\n        if (filterString === '引流') {\n            return \"\"\n        }\n        if (filterString === 'Stool') {\n            return \"\"\n        }\n        if (filterString === 'Stimulation') {\n            return \"\"\n\n        }\n        if (filterString === '排尿') {\n            return \"\"\n\n        }\n        return 0\n    }\n    function valueToVar(filterString, element) {\n        function vallNull(value) {\n            if (value === null || value === undefined) {\n                return null\n            }\n            return value.toString().trim()\n        }\n        if (filterString === \"輸液\") {\n            return Number(element.inp_val1)\n        }\n        if (filterString === \"血品\") {\n            return vallNull(element.inp_val2)\n        }\n        if (filterString === \"進食\") {\n            return Number(element.inp_val2)\n        }\n        if (filterString === '失血') {\n            return Number(element.out_val1)\n        }\n        if (filterString === '滲液') {\n            return Number(element.out_val1)\n        }\n        if (filterString === '嘔吐') {\n            return element.out_val1.toString() + \"\\n\" + vallNull(element.nam) + \"\\n\" + vallNull(element.color)\n        }\n        if (filterString === '引流') {\n            return Number(element.out_val1) + \"\\n\" + vallNull(element.color)\n        }\n        if (filterString === '穿刺出') {\n            return Number(element.out_val1)\n        }\n        if (filterString === '穿刺入') {\n            return Number(element.inp_val1)\n        }\n        if (filterString === '透析入') {\n            return Number(element.out_val1)\n        }\n        if (filterString === '透析出') {\n            return Number(element.inp_val1)\n        }\n        if (filterString === '透析總') {\n            return Number(element.out_val1) - Number(element.inp_val1)\n        }\n        if (filterString === '沖洗出') {\n            return Number(element.out_val1)\n        }\n        if (filterString === '沖洗入') {\n            return Number(element.out_val1)\n        }\n        if (filterString === 'Stool') {\n            // console.log(element)\n            const cellStringArray = element.out_val1.toString().split(\"|\")\n            // console.log(cellStringArray)\n            if (cellStringArray[1] !== null || cellStringArray[1] !== undefined || cellStringArray[1].length === 0) {\n                // console.log(cellStringArray[1] + \"\\n\" + element.nam.toString().trim() + \"\\n\" + element.color.toString().trim())\n                console.log(element)\n                return cellStringArray[1] + \"\\n\" + vallNull(element.nam) + \"\\n\" + vallNull(element.color)\n            }\n            if (cellStringArray[0].length === 0) {\n                return element.nam.toString().trim() + \"\\n\" + element.color.toString().trim()\n            }\n            return cellStringArray[0] + \"次\" + \"\\n\" + vallNull(element.nam) + \"\\n\" + vallNull(element.color)\n        }\n        if (filterString === 'Stimulation') {\n\n            if (Number(element.inp_val1) !== undefined || Number(element.inp_val1) !== null || Number(element.inp_val1) !== 0) {\n                if (Number(element.out_val2) !== undefined || Number(element.out_val2) !== null || Number(element.out_val2) !== 0) {\n                    return \"ES\\n\"\n                }\n                return \"E\\n\"\n            }\n            if (Number(element.out_val2) !== undefined || Number(element.out_val2) !== null || Number(element.out_val2) !== 0) {\n                return \"S\\n\"\n            }\n            return \"\\n\"\n\n        }\n        if (filterString === '排尿') {\n            return nullvalue(element.out_val2) + \"\\n\" + nullvalue(element.nam) + \"\\n\" + nullvalue(element.color)\n\n        }\n        return 0\n    }\n    if (Array.isArray(ArrayList) && ArrayList.length > 0) {\n        const mapList = ArrayList.map(function (info, index, arr) {\n            const title = info[0].title\n            var timeForList = []\n            for (let index = 0; index < 24; index++) {\n                const startTime = start + (index * 60 * 60 * 1000)\n                const endTime = start + ((index + 1) * 60 * 60 * 1000)\n                var sum = valueToInit(filterString)\n                var elementList = []\n                for (let index = 0; index < info.length; index++) {\n                    const element = info[index].element;\n                    const valueSum = valueToVar(filterString, element)\n                    const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    if (startTime <= elementTime && elementTime < endTime) {\n                        sum = sum + valueSum\n                        elementList.push(element)\n                    }\n                }\n                timeForList.push({\n                    value: sum,\n                    startTime: startTime,\n                    endTime: endTime,\n                    elementList: elementList\n                })\n            }\n\n            const styleList = ['輸液', '血品', '進食']\n            const decideStyle = styleList.indexOf(filterString) !== -1\n\n            const cellMap = timeForList.map(function (info, index, arr) {\n                return (\n                    <div key={index} style={{ borderRight: (index + 1) % 8 == 0 && index != 0 && index != timeForList.length - 1 ? formatColor(filterString) + ' 5px solid' : formatColor(filterString) + ' 1px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: decideStyle ? \"center\" : '', whiteSpace: \"pre-wrap\", backgroundColor: nullvalue(info.value) !== null ? \"#fffa\" : \"\", minHeight: \"50px\" }}>{nullvalue(info.value)}</div>\n                );\n            })\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", minHeight: \"50px\" }}>\n                    <div style={{ borderRight: formatColor(filterString) + ' 5px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', backgroundColor: formatBackgroundColor(filterString), display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{title}</div>\n                    {cellMap}\n                </div>\n            );\n        })\n        return mapList\n    }\n    if (filterString === \"血品\") {\n        var cell = []\n        for (let index = 0; index < 24; index++) {\n            cell.push({\n                value: 0\n            })\n        }\n        const cellMap = cell.map(function (info, index, arr) {\n            return (\n                <div key={index} style={{ borderRight: (index + 1) % 8 == 0 && index != 0 && index != cell.length - 1 ? formatColor(filterString) + ' 5px solid' : formatColor(filterString) + ' 1px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", minHeight: \"50px\" }}>\n                <div style={{ borderRight: formatColor(filterString) + ' 5px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', backgroundColor: formatBackgroundColor(filterString), display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{\"無血品紀錄\"}</div>\n                {cellMap}\n            </div>\n        );\n    }\n    if (filterString === \"進食\") {\n        var cell = []\n        for (let index = 0; index < 24; index++) {\n            cell.push({\n                value: 0\n            })\n        }\n        const cellMap = cell.map(function (info, index, arr) {\n            return (\n                <div key={index} style={{ borderRight: (index + 1) % 8 == 0 && index != 0 && index != cell.length - 1 ? formatColor(filterString) + ' 5px solid' : formatColor(filterString) + ' 1px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", minHeight: \"50px\" }}>\n                <div style={{ borderRight: formatColor(filterString) + ' 5px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', backgroundColor: formatBackgroundColor(filterString), display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{\"無進食紀錄\"}</div>\n                {cellMap}\n            </div>\n        );\n    }\n    if (filterString === \"Stool\") {\n        var cell = []\n        for (let index = 0; index < 24; index++) {\n            cell.push({\n                value: 0\n            })\n        }\n        const cellMap = cell.map(function (info, index, arr) {\n            return (\n                <div key={index} style={{ borderRight: (index + 1) % 8 == 0 && index != 0 && index != cell.length - 1 ? formatColor(filterString) + ' 5px solid' : formatColor(filterString) + ' 1px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", minHeight: \"50px\" }}>\n                <div style={{ borderRight: formatColor(filterString) + ' 5px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', backgroundColor: formatBackgroundColor(filterString), display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{\"Stool\"}</div>\n                {cellMap}\n            </div>\n        );\n    }\n    if (filterString === \"排尿\") {\n        var cell = []\n        for (let index = 0; index < 24; index++) {\n            cell.push({\n                value: 0\n            })\n        }\n        const cellMap = cell.map(function (info, index, arr) {\n            return (\n                <div key={index} style={{ borderRight: (index + 1) % 8 == 0 && index != 0 && index != cell.length - 1 ? formatColor(filterString) + ' 5px solid' : formatColor(filterString) + ' 1px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", minHeight: \"50px\" }}>\n                <div style={{ borderRight: formatColor(filterString) + ' 5px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', backgroundColor: formatBackgroundColor(filterString), display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{\"Urine\"}</div>\n                {cellMap}\n            </div>\n        );\n    }\n    return null\n}\n","import React, { Component } from 'react';\nimport './Flootsheetio.scss'\nimport * as RegFilter from '../../Function/FiliterReg'\nimport moment from 'moment';\nimport X2JS from 'x2js';\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as QDCR from '../../Resource/QDC'\nimport * as FlootSheetDataFormat from './FlootSheetDataFormat'\nimport { QDC } from '../../Data/RegularData';\n\nconst generateDateColumn1 = () => {\n    const dateArr = Array.from(Array(24).keys()).map(d => (d + 7) % 24);\n    return (\n        <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n            <div style={{ borderRight: '5px solid transparent', borderBottom: \"1px solid transparent\", borderTop: \"1px solid transparent\", borderCollapse: 'collapse', display: \"flex\", alignItems: \"center\", justifyContent: 'flex-end', fontSize: \"12px\" }}>時間</div>\n            {dateArr.map((time, index) => (\n                <div key={index} style={{ borderRight: (index + 1) % 8 === 0 && index !== 0 && index !== dateArr.length - 1 ? '5px solid transparent' : '1px solid transparent', borderBottom: \"1px solid transparent\", borderTop: \"1px solid transparent\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{time}</div>\n            ))}\n        </div>\n    )\n}\n\n\nclass Flootsheetio extends Component {\n    state = {\n        itemNumber: \"day\",\n        preCID: null,\n        prePickerDate: null,\n        QDC: []\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDate } = this.props\n        const CID = caseinfo.CASEID\n        this.setState({ preCID: CID, prePickerDate: PickerDate })\n        this.getQDC(CID, PickerDate)\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDate } = this.props\n        const CID = caseinfo.CASEID\n        const preCID = this.state.preCID\n        const prePickerDate = this.state.prePickerDate\n        if (CID !== preCID || PickerDate !== prePickerDate) {\n            this.setState({ preCID: CID, prePickerDate: PickerDate })\n            this.getQDC(CID, PickerDate)\n        }\n    }\n\n    ToolTipRender(elementList) {\n        console.log(elementList)\n    }\n\n    getQDC(CID, PickerDate) {\n        const xm2 = new X2JS()\n        const st = moment(PickerDate + (7 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        const et = moment(PickerDate + (31 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        ApiProvider.getQDC(CID, st, et)\n            .then(data => {\n                console.log(xm2.xml2js(data.data))\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                this.setState({\n                    QDC: parsedata\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        // this.setState({ QDC: QDCR.data.outmsg.resconts.rescont })\n    }\n    render() {\n        function nullvalue(value) {\n            if (value === undefined || value === null || value === 0) {\n                return \"\"\n            }\n            return value.toString().trim()\n        }\n        function formatDayData(valueStatus, title) {\n            if (!valueStatus) {\n                var cell = []\n                for (let index = 0; index < 24; index++) {\n                    cell.push({\n                        value: 0\n                    })\n                }\n                const cellMap = cell.map(function (info, index, arr) {\n                    if (title === \"無輸血紀錄\") {\n                        return (\n                            <div key={index} style={{ borderRight: (index + 1) % 8 == 0 && index != 0 && index != cell.length - 1 ? 'rgb(210, 175, 165) 5px solid' : 'rgb(160, 200, 200) 1px solid', borderBottom: \"rgb(160, 200, 200) 1px solid\", borderTop: \"rgb(160, 200, 200) 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n                        );\n                    }\n                    return (\n                        <div key={index} style={{ borderRight: (index + 1) % 8 == 0 && index != 0 && index != cell.length - 1 ? 'rgb(160, 200, 200) 5px solid' : 'rgb(160, 200, 200) 1px solid', borderBottom: \"rgb(160, 200, 200) 1px solid\", borderTop: \"rgb(160, 200, 200) 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n                    );\n                })\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                        <div style={{ borderRight: 'rgb(160, 200, 200) 5px solid', borderBottom: \"rgb(160, 200, 200) 1px solid\", borderTop: \"rgb(160, 200, 200) 1px solid\", borderCollapse: 'collapse', backgroundColor: \"rgb(195, 225, 225)\", display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{title}</div>\n                        {cellMap}\n                    </div>\n                );\n            }\n            return null\n        }\n\n        const { PickerDate } = this.props\n        const { QDC } = this.state\n        const Infusion = FlootSheetDataFormat.formatIOData(QDC, \"輸液\")\n        const IV = FlootSheetDataFormat.formatIV(Infusion)\n        console.log(IV)\n        const ALINE = FlootSheetDataFormat.formatALUA(Infusion)\n        const PICC = FlootSheetDataFormat.formatCVCPICC(Infusion)\n        const filterInfusion = FlootSheetDataFormat.formatData(Infusion, PickerDate, \"輸液\")\n        const groupFilterInfusion = FlootSheetDataFormat.groupArray(filterInfusion)\n        const mapInfusion = FlootSheetDataFormat.mapCellrender(groupFilterInfusion, PickerDate, \"輸液\")\n        // console.log(groupFilterInfusion)\n        const Blood = FlootSheetDataFormat.formatIOData(QDC, \"血品\")\n        const filterBlood = FlootSheetDataFormat.formatData(Blood, PickerDate, \"血品\")\n        const groupFilterBlood = FlootSheetDataFormat.groupArray(filterBlood)\n        const mapBlood = FlootSheetDataFormat.mapCellrender(groupFilterBlood, PickerDate, \"血品\")\n        // console.log(mapBlood)\n        const Eat = FlootSheetDataFormat.formatIOData(QDC, \"進食\")\n        const filterEat = FlootSheetDataFormat.formatData(Eat, PickerDate, \"進食\")\n        const groupFilterEat = FlootSheetDataFormat.groupArray(filterEat)\n        const mapEat = FlootSheetDataFormat.mapCellrender(groupFilterEat, PickerDate, \"進食\")\n\n        //Fourth\n        const BloodLoss = FlootSheetDataFormat.formatIOData(QDC, \"失血\")\n        const filterBloodLoss = FlootSheetDataFormat.formatData(BloodLoss, PickerDate, \"失血\")\n        const groupFilterBloodLoss = FlootSheetDataFormat.groupArray(filterBloodLoss)\n        const mapBloodLoss = FlootSheetDataFormat.mapCellrender(groupFilterBloodLoss, PickerDate, \"失血\")\n\n        const Exudate = FlootSheetDataFormat.formatIOData(QDC, \"滲液\")\n        const filterExudate = FlootSheetDataFormat.formatData(Exudate, PickerDate, \"滲液\")\n        const groupFilterExudate = FlootSheetDataFormat.groupArray(filterExudate)\n        const mapExudate = FlootSheetDataFormat.mapCellrender(groupFilterExudate, PickerDate, \"滲液\")\n\n        const Vomit = FlootSheetDataFormat.formatIOData(QDC, \"嘔吐\")\n        const filterVomit = FlootSheetDataFormat.formatData(Vomit, PickerDate, \"嘔吐\")\n        const groupFilterVomit = FlootSheetDataFormat.groupArray(filterVomit)\n        const mapVomit = FlootSheetDataFormat.mapCellrender(groupFilterVomit, PickerDate, \"嘔吐\")\n\n        const Drainage = FlootSheetDataFormat.formatIOData(QDC, \"引流\")\n        const filterDrainage = FlootSheetDataFormat.formatData(Drainage, PickerDate, \"引流\")\n        const groupFilterDrainage = FlootSheetDataFormat.groupArray(filterDrainage)\n        const mapDrainage = FlootSheetDataFormat.mapCellrender(groupFilterDrainage, PickerDate, \"引流\")\n\n\n        const Puncture = FlootSheetDataFormat.formatIOData(QDC, \"穿刺\")\n        const filterPunctureOut = FlootSheetDataFormat.formatData(Puncture, PickerDate, \"穿刺出\")\n        const groupFilterPunctureOut = FlootSheetDataFormat.groupArray(filterPunctureOut)\n        const mapPunctureOut = FlootSheetDataFormat.mapCellrender(groupFilterPunctureOut, PickerDate, \"穿刺出\")\n\n        const filterPunctureIn = FlootSheetDataFormat.formatData(Puncture, PickerDate, \"穿刺入\")\n        const groupFilterPunctureIn = FlootSheetDataFormat.groupArray(filterPunctureIn)\n        const mapPunctureIn = FlootSheetDataFormat.mapCellrender(groupFilterPunctureIn, PickerDate, \"穿刺入\")\n\n\n        const Dialysis = FlootSheetDataFormat.formatIOData(QDC, \"透析\")\n        const filterDialysisIn = FlootSheetDataFormat.formatData(Dialysis, PickerDate, \"透析入\")\n        const groupFilterDialysisIn = FlootSheetDataFormat.groupArray(filterDialysisIn)\n        const mapDialysisIn = FlootSheetDataFormat.mapCellrender(groupFilterDialysisIn, PickerDate, \"透析入\")\n\n        const filterDialysisOut = FlootSheetDataFormat.formatData(Dialysis, PickerDate, \"透析出\")\n        const groupFilterDialysisOut = FlootSheetDataFormat.groupArray(filterDialysisOut)\n        const mapDialysisOut = FlootSheetDataFormat.mapCellrender(groupFilterDialysisOut, PickerDate, \"透析出\")\n\n        const filterDialysisTotal = FlootSheetDataFormat.formatData(Dialysis, PickerDate, \"透析總\")\n        const groupFilterDialysisTotal = FlootSheetDataFormat.groupArray(filterDialysisTotal)\n        const mapDialysisTotal = FlootSheetDataFormat.mapCellrender(groupFilterDialysisTotal, PickerDate, \"透析總\")\n\n\n\n        const Rinse = FlootSheetDataFormat.formatIOData(QDC, \"沖洗\")\n        const filterRinseIn = FlootSheetDataFormat.formatData(Rinse, PickerDate, \"沖洗入\")\n        const groupFilterRinseIn = FlootSheetDataFormat.groupArray(filterRinseIn)\n        const mapRinseIn = FlootSheetDataFormat.mapCellrender(groupFilterRinseIn, PickerDate, \"沖洗入\")\n\n\n        const filterRinseOut = FlootSheetDataFormat.formatData(Rinse, PickerDate, \"沖洗出\")\n        const groupFilterRinseOut = FlootSheetDataFormat.groupArray(filterRinseOut)\n        const mapRinseOut = FlootSheetDataFormat.mapCellrender(groupFilterRinseOut, PickerDate, \"沖洗出\")\n\n\n        const Stool = FlootSheetDataFormat.formatIOData(QDC, \"排便\")\n        const filterStool = FlootSheetDataFormat.formatData(Stool, PickerDate, \"Stool\")\n        const groupFilterStool = FlootSheetDataFormat.groupArray(filterStool)\n        const mapStool = FlootSheetDataFormat.mapCellrender(groupFilterStool, PickerDate, \"Stool\")\n\n        const filterStimulation = FlootSheetDataFormat.formatData(Stool, PickerDate, \"Stimulation\")\n        const groupFilterStimulation = FlootSheetDataFormat.groupArray(filterStimulation)\n        const mapStimulation = FlootSheetDataFormat.mapCellrender(groupFilterStimulation, PickerDate, \"Stimulation\")\n\n\n        const Urine = FlootSheetDataFormat.formatIOData(QDC, \"排尿\")\n        const filterUrine = FlootSheetDataFormat.formatData(Urine, PickerDate, \"排尿\")\n        const groupFilterUrine = FlootSheetDataFormat.groupArray(filterUrine)\n        const mapUrine = FlootSheetDataFormat.mapCellrender(groupFilterUrine, PickerDate, \"排尿\")\n\n        return (\n\n            <div>\n\n                {/* <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <div style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>I/O</div>\n                </div> */}\n\n                {/* <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>I/O</t2>\n                </div> */}\n                <div style={{ margin: \"0 auto\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", maxWidth: \"1360px\" }}>\n                    {generateDateColumn1()}\n                    {Infusion.length != 0 ? '輸液' : null}\n                    <div style={{ backgroundColor: \"rgb(195, 225, 225)\", display: \"block\", border: \"5px solid rgb(160, 200, 200)\", borderCollapse: \"collapse\" }}>\n                        {formatDayData(IV, \"IV\")}\n                        {formatDayData(ALINE, \"AL/UA\")}\n                        {formatDayData(PICC, \"CVC/PICC\")}\n                        {mapInfusion}\n                    </div>\n                    {'血品'}\n                    <div style={{ backgroundColor: \"rgb(220, 205, 200)\", display: \"block\", border: \"5px solid rgb(210, 175, 165)\", borderCollapse: \"collapse\" }}>\n                        {mapBlood}\n                    </div>\n                    {'進食'}\n                    <div style={{ backgroundColor: \"rgb(230, 217, 154)\", display: \"block\", border: \"5px solid rgb(179, 173, 50)\", borderCollapse: \"collapse\" }}>\n                        {mapEat}\n                        {/* {RV} */}\n                    </div>\n                    {'排泄引流'}\n                    <div style={{ backgroundColor: \"rgb(212, 202, 221)\", display: \"block\", border: \"5px solid rgb(140, 118, 162)\", borderCollapse: \"collapse\" }}>\n                        {mapBloodLoss}\n                        {mapExudate}\n                        {mapVomit}\n                        {mapDrainage}\n                        {mapPunctureOut}\n                        {mapPunctureIn}\n                        {mapDialysisIn}\n                        {mapDialysisOut}\n                        {mapDialysisTotal}\n                        {mapRinseIn}\n                        {mapRinseOut}\n                        {mapStool}\n                        {mapStimulation}\n                        {mapUrine}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Flootsheetio;\n","import React, { Component } from \"react\";\nimport Flootsheetio from \"./Flootsheetio\";\n// import Flowsheetvitalsign from './Flootsheetvitalsign'\nimport Vitalxaxis from \"../../Module/Vitalxaxis\";\nimport { DatePicker, Button } from \"antd\";\nimport moment from \"moment\";\nimport * as ApiProvider from \"../../API/ApiProvider\";\nimport \"./Flootsheetlayout.scss\";\nimport X2JS from \"x2js\";\nimport * as Wardstate from \"../../Function/Wardstate\";\nimport locale from \"antd/es/date-picker/locale/zh_TW\";\nimport { pregancyweeksanddays } from \"../../Function/Wardbedfunction\";\nimport { daysdiff } from \"../../Function/Timeformat\";\nimport * as WardState from \"../../Function/Wardstate\";\n\nclass Flowsheetlayout extends Component {\n  state = {\n    PickerDate: moment(moment().format(\"YYYYMMDD\")).valueOf(),\n    preCID: null,\n    QSPE: []\n    // itemlist: []\n  };\n  componentDidMount() {\n    const { caseinfo } = this.props;\n    const CID = caseinfo.CASEID;\n    const date = moment(moment().format(\"YYYYMMDD\")).valueOf();\n    this.setState({ preCID: CID, PickerDate: date });\n    this.ApiData(CID, date);\n  }\n  componentDidUpdate() {\n    const CID = this.props.caseinfo.CASEID;\n    const preCID = this.state.preCID;\n    if (CID !== preCID) {\n      const date = this.state.PickerDate;\n      this.setState({ preCID: CID, PickerDate: date });\n      this.ApiData(CID, date);\n    }\n  }\n  ApiData(CID, DateTime) {\n    const st = moment(DateTime + 7 * 60 * 60 * 1000).format(\"YYYYMMDDHHmm\");\n    const et = moment(DateTime + 31 * 60 * 60 * 1000).format(\"YYYYMMDDHHmm\");\n    ApiProvider.getQSPE(CID, st, et)\n      .then(data => {\n        const dataJson = Wardstate.XM2JSON(data.data);\n        // const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n        if (Array.isArray(dataJson)) {\n          this.setState({ QSPE: dataJson });\n        } else {\n          this.setState({\n            QSPE: [dataJson]\n          });\n        }\n      })\n      .catch(err => {\n        console.log(\n          \"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err)\n        );\n      });\n  }\n  onDateChange = (date, dateString) => {\n    const CID = this.props.caseinfo.CASEID;\n    this.setState({ preCID: CID, PickerDate: date.valueOf() });\n    this.ApiData(date.valueOf());\n  };\n\n  trainDay = e => {\n    const { caseinfo } = this.props;\n    const { PickerDate } = this.state;\n    const bron = caseinfo.PBASINGNINFO.PBIRTHDT;\n    const bronDate = moment(moment(bron).format(\"YYYYMMDD\")).valueOf();\n\n    const day = 24 * 60 * 60 * 1000;\n\n    switch (e.target.value) {\n      case \"B\":\n        const bTime = PickerDate - day;\n        const bTemp = bTime - 6 * day;\n        bronDate <= bTemp && this.onDateChange(moment(bTime));\n        break;\n      case \"N\":\n        const nTime = moment(moment().format(\"YYYYMMDD\"));\n        this.onDateChange(nTime);\n        break;\n      case \"A\":\n        const aTime = PickerDate + day;\n        const aTemp = moment(moment().format(\"YYYYMMDD\")).valueOf();\n        aTime <= aTemp && this.onDateChange(moment(aTime));\n        break;\n      default:\n        break;\n    }\n  };\n\n\n  render() {\n    const { caseinfo, btnlist, PickerDate } = this.props;\n    const data = this.state.QSPE || []; //特殊護理事件\n    const splist = data.filter(function (value, index, array) {\n      if (value === undefined) {\n        return null;\n      }\n      const str = value.special;\n      return str.match(\"@v\") === null;\n    });\n    const specialListRender = splist.map(function (value, index, arr) {\n      return (\n        <div\n          key={index}\n          style={{ display: \"flex\", color: \"rgba(59, 151, 225, 1)\" }}\n        >\n          {value.special.toString().trim()}\n        </div>\n      );\n    });\n    function valueFormat(value) {\n      if (value === \"\" || value === null || value === undefined) {\n        return \"--\";\n      }\n      return value.toString();\n    }\n\n    const weightList = caseinfo.WEIGHT;\n    const Birthday = caseinfo.PBASINGNINFO.PBIRTHDT;\n    const BornWeight = WardState.BornWeight(weightList, Birthday);\n    const DayWeight = WardState.selectweight(weightList, PickerDate);\n    return (\n      <div>\n        <div style={{ display: \"flex\" }}>\n          <DatePicker\n            getCalendarContainer={triggerNode => triggerNode.parentNode}\n            disabledDate={current => {\n              return (\n                current > moment().startOf(\"day\") ||\n                current <\n                moment(\n                  caseinfo.PBASINGNINFO.PBIRTHDT.toString(),\n                  \"YYYYMMDD\"\n                ).endOf()\n              );\n            }}\n            width={120}\n            value={moment(this.state.PickerDate)}\n            allowClear={false}\n            onChange={this.onDateChange}\n          />\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"1fr 1fr 1fr\",\n              gridColumnGap: \"1px\",\n              padding: \"2px 10px 0px 10px\"\n            }}\n          >\n            <Button\n              value=\"B\"\n              shape=\"circle\"\n              icon=\"left-circle\"\n              onClick={this.trainDay}\n            />\n            <Button\n              value=\"N\"\n              shape=\"circle\"\n              icon=\"minus-circle\"\n              onClick={this.trainDay}\n            />\n            <Button\n              value=\"A\"\n              shape=\"circle\"\n              icon=\"right-circle\"\n              onClick={this.trainDay}\n            />\n          </div>\n          {/* fix issue */}\n          {/* <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(3,auto)\",\n              gridColumnGap: \"30px\",\n              alignContent: \"center\"\n            }}\n          >\n            <t2>\n              矯正週數：\n              {pregancyweeksanddays(\n                caseinfo.WEEK_BORN,\n                caseinfo.DAY_BORN,\n                moment(Birthday, \"YYYYMMDD\").format(\"YYYY/MM/DD\")\n              )}\n            </t2>\n            <t2>體重：{valueFormat(DayWeight)}g</t2>\n            <t2>\n              住院第\n              {daysdiff(\n                moment(PickerDate).format(\"YYYY/MM/DD\"),\n                moment(caseinfo.TRANSINDT, \"YYYYMMDD\").format(\"YYYY/MM/DD\")\n              )}\n              天\n            </t2>\n          </div> */}\n        </div>\n        <div style={{ display: splist.length === 0 ? \"none\" : \"block\" }}>\n          <div\n            style={{\n              backgroundColor: \"#71b0e46e\",\n              borderTopLeftRadius: \"4px\",\n              borderTopRightRadius: \"4px\",\n              height: \"36px\",\n              padding: \"0px 16px\",\n              display: \"flex\",\n              alignItems: \"center\"\n            }}\n          >\n            <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>\n              特殊護理事件：\n            </t2>\n            <t2\n              style={{\n                width: \"20px\",\n                height: \"20px\",\n                borderRadius: \"99em\",\n                background: \"black\",\n                color: \"white\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              }}\n            >\n              {splist.length}\n            </t2>\n          </div>\n          <div style={{ maxHeight: \"100px\", width: \"100%\", overflow: \"auto\", paddingLeft: \"16px\" }}>\n            {specialListRender}\n          </div>\n        </div>\n        <div className=\"flootsheetlayout\">\n          <Flootsheetio\n            PickerDate={this.state.PickerDate}\n            caseinfo={caseinfo}\n          ></Flootsheetio>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Flowsheetlayout;\n","import React, { Component } from 'react';\nimport './Examchart.scss';\nimport * as d3 from \"d3\";\nimport moment from 'moment';\n\nclass Examchart extends Component {\n    state = {\n        change: false\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\".tooltip\").remove()\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    decideValue = (value) => {\n        const tempValue = typeof (value) !== 'String' ? value.toString() : value\n        const { max, min } = this.props\n        if (tempValue === null || tempValue === undefined) {\n            return null\n        }\n        if (tempValue.indexOf('<') != -1) {\n            return min\n        } else if (tempValue.indexOf('>') != -1) {\n            return max\n        } else {\n            return tempValue\n        }\n    }\n\n    drawChart() {\n        const { id_key, svg_id, max, min, lineChart } = this.props\n\n        const sT = new Date(moment(lineChart[0].date, 'YYYYMMDD').valueOf() - 24 * 60 * 60 * 1000)\n        const endT = new Date(moment(lineChart[lineChart.length - 1].date, 'YYYYMMDD') + 24 * 60 * 60 * 1000)\n\n        const fixLineChart = lineChart.filter(data => {\n            return data.value !== \"\" && data.value !== null && data.value !== undefined\n        })\n\n        // 邊界\n        const margin = { top: 20, right: 20, bottom: 30, left: 50 },\n            width = 1000 - margin.left - margin.right,\n            height = 500 - margin.top - margin.bottom;\n\n        let x = d3.scaleTime().domain([sT, endT]).range([0, width - margin.left - margin.right])\n        let y = d3.scaleLinear().domain([min, max]).range([height, 0])\n\n        var div = d3.select(\"#\" + id_key).append(\"div\")\n            .attr(\"class\", \"tooltip\")\n            .style(\"opacity\", 0);\n\n        let svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            .style(\"height\", height + margin.top + margin.bottom)\n            .style(\"width\", width + margin.left + margin.right)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        svg.append('g')\n            .call(d3.axisBottom(x).ticks(5).tickFormat(d3.timeFormat('%m/%d')))\n            .attr(\"transform\", `translate(0,${height})`)\n            .style('stroke', 'black')\n            .style('stroke-width', 1);\n\n        svg.append('g')\n            .call(d3.axisLeft(y))\n            .style('stroke', 'black')\n            .style('stroke-width', 1);\n\n        let line = d3.line()\n            .x(d => x(moment(d.date, 'YYYYMMDDHHmm').toDate()))\n            .y(d => {\n                const tempValue = this.decideValue(d.value)\n                return y(tempValue)\n            })\n            .curve(d3.curveMonotoneX);\n\n        let lines = svg.append('g').attr('class', 'lines');\n\n        lines.selectAll(\"circle\")\n            .data(fixLineChart)\n            .enter()\n            .append('g')\n            .append(\"circle\")\n            .attr(\"class\", \"lines-circle\")\n            .attr(\"cy\", d => {\n                const tempValue = this.decideValue(d.value)\n                return y(tempValue)\n            })\n            .attr(\"cx\", d => x(moment(d.date, 'YYYYMMDDHHmm').toDate()))\n            .attr('r', 5)\n            .on(\"mouseover\", function (d) {\n                div.transition()\n                    .duration(100)\n                    .style(\"opacity\", .9);\n                div.html(`檢驗時間 : ${d.date} <br/> 檢驗數值 : ${d.value}`)\n                    .style(\"left\", (d3.event.pageX - 200) + \"px\")\n                    .style(\"top\", (d3.event.pageY - 150) + \"px\");\n            })\n            .on(\"mouseout\", function (d) {\n                div.transition()\n                    .duration(300)\n                    .style(\"opacity\", 0);\n            })\n            .style('opacity', 1)\n            .style('fill', \"blue\");\n\n        lines\n            .selectAll('.line-group')\n            .data(fixLineChart)\n            .enter()\n            .append('g')\n            .attr('class', 'line-group')\n            .append('path')\n            .attr('class', 'line')\n            .attr('d', line(fixLineChart))\n            .style('stroke', 'black')\n            .style('fill', 'none');\n    }\n\n    render() {\n        function formatString(formatString) {\n            console.log(formatString)\n            if (formatString === \"Ca++\") {\n                return <span style={{ color: \"rgba(0, 0, 0, 0.85)\", fontSize: \"20px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>Ca<sup>2+</sup></span>\n            }\n            if (formatString === \"Mg++\") {\n                return <span style={{ color: \"rgba(0, 0, 0, 0.85)\", fontSize: \"20px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>Mg<sup>2+</sup></span>\n            }\n            if (formatString === \"pCO2\") {\n                return <span style={{ color: \"rgba(0, 0, 0, 0.85)\", fontSize: \"20px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>pCO<sub>2</sub></span>\n            }\n            if (formatString === \"pO2\") {\n                return <span style={{ color: \"rgba(0, 0, 0, 0.85)\", fontSize: \"20px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>pO<sub>2</sub></span>\n            }\n            if (formatString === \"HCO3\") {\n                return <span style={{ color: \"rgba(0, 0, 0, 0.85)\", fontSize: \"20px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>HCO<sub>3</sub></span>\n            }\n            if (formatString === \"FiO2\") {\n                return <span style={{ color: \"rgba(0, 0, 0, 0.85)\", fontSize: \"20px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>FiO<sub>2</sub></span>\n            }\n            if (formatString == 'Band' || formatString == 'Seg' || formatString == 'Lym') {\n                return (\n                    <div>\n                        <span style={{ color: \"rgba(0, 0, 0, 0.85)\", fontSize: \"20px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>{formatString}</span>\n                        <span style={{ color: \"rgba(0, 0, 0, 0.65)\", fontSize: \"16px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>%</span>\n                    </div>\n                )\n            }\n            return <span style={{ color: \"rgba(0, 0, 0, 0.85)\", fontSize: \"20px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>{formatString}</span>\n        }\n        const { id_key, lineCharttitle } = this.props\n        console.log(lineCharttitle)\n        const title = lineCharttitle == 'Band' || lineCharttitle == 'Seg' || lineCharttitle == 'Lym' ? true : false\n        return (\n            <div>\n                <div style={{ padding: \"0px 24px 16px\", color: \"rgba(0, 0, 0, 0.65)\", background: \"#fff\", borderBottom: \"1px solid #e8e8e8\", borderRadius: \"4px 4px 0 0\" }}>\n                    {formatString(lineCharttitle)}\n                </div>\n                <div id={id_key}></div>\n            </div>\n        );\n    }\n}\n\nexport default Examchart;\n","import React, { Component } from 'react';\nimport { Select, Modal } from 'antd';\n// import * as ApiGithub from '../../API/ApiGithub'\nimport * as RegularData from '../../Data/RegularData'\nimport moment from 'moment'\nimport Examchart from './Examchart'\nimport { Button } from 'antd';\nimport './ExamLabview.scss';\n\nclass Labview extends Component {\n    state = {\n        Selectus: this.props.SelectStatus,\n        PickerDateRange: [moment(), moment()],\n        visible: false,\n        lineCharttitle: '',\n        lineChart: [],\n        IRParse: RegularData.InspectionReportExtent()\n    }\n    componentDidMount() {\n        // ApiGithub.getExamReport()\n        //     .then(data => {\n        //         this.setState({\n        //             TitleList: data.data\n        //         })\n        //     })\n        //     .catch(err=>{\n        //         console.log(\"GithubAPI NG\" + err)\n        //     })\n        // this.setState({\n        //     TitleList: RegularData.ExamReportJson\n        // })\n    }\n\n    callbackDateFunction = (value) => {\n        this.props.parentDateCallback(value);\n    }\n    handleChange = (value) => {\n        this.callbackDateFunction(value)\n        this.setState({\n            Selectus: value\n        })\n    }\n    titleSearch = (value) => {\n        this.props.parentTitleCallback(value.target.value);\n    }\n    CellRender() {\n        const { DataList } = this.props\n        if (DataList.length === 0) {\n            return (\n                <div style={{ display: \"grid\", gridTemplateColumns: \"110px 1fr\" }}>\n                    <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        無資料\n                    </div>\n                </div>\n            )\n        }\n        const DataListCell = DataList.map(function (element, index) {\n            const cellRender = element.Data.map(function (info, index) {\n                return (\n                    <centerstyle key={index} style={{ flex: 1, borderLeft: \"rgba(238, 238, 238, 1) 1px solid\", borderCollapse: 'collapse' }}>\n                        <t3>{info}</t3>\n                    </centerstyle>\n                );\n            })\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"110px 1fr\", height: \"50px\", borderTop: '#989898 1px solid', borderBottom: '#989898 1px solid' }}>\n                    <centerstyle style={{ display: \"flex\", borderCollapse: 'collapse' }}>\n                        <t3>{element.Time}</t3>\n                    </centerstyle>\n                    <div style={{ display: \"flex\", gridTemplateColumns: \"repeat(9,1fr)\" }}>\n                        {cellRender}\n                    </div>\n                </div>\n            );\n        })\n        return DataListCell\n    }\n\n    fixLineChartData(element) {\n        const { DataList } = this.props;\n        const value = element.value;\n        console.log(value)\n        const number = element.index;\n        let showDate = DataList.map(data => {\n            let temp = {}\n            temp['date'] = data.Time;\n            temp['value'] = data.Data[number];\n            return temp\n        })\n        console.log(showDate)\n        if (showDate === null || showDate.length === 0) {\n            return null\n        }\n\n        showDate.sort((x, y) => {\n            return moment(x.date, 'YYYYMMDDHHmm').valueOf() - moment(y.date, 'YYYYMMDDHHmm').valueOf()\n        })\n\n        this.setState({\n            lineCharttitle: value,\n            lineChart: showDate,\n        }, () => { this.showModel() });\n    }\n    showModel = () => {\n        this.setState({\n            visible: true,\n        });\n    }\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    charttableview = () => {\n        const { IRParse, Selectus, lineCharttitle, lineChart } = this.state\n        console.log(lineCharttitle)\n        if (lineCharttitle === '') { return null }\n\n        const key = Object.keys(IRParse)[Selectus]\n        const rangeKey = IRParse[key]\n        const range = rangeKey[lineCharttitle]\n        const itemValue = []\n        //主要崩潰點在這 因為你會了key但是lineCharttitle還有值 這樣會變成undefined這樣就crash了 你下面定義是有range情況下的max是不是undefined 但是你本身range就是undefined 所以會找不到range中的max\n        if (range === undefined) { return null }\n        console.log(range)\n        const max = range.max !== undefined ? range.max : Math.max(...itemValue)\n        const min = range.min !== undefined ? range.min : Math.min(...itemValue)\n\n        return (\n            <div style={{ margin: \"20px 0px\" }}>\n                <Examchart lineChart={lineChart} lineCharttitle={lineCharttitle} max={max} min={min} id_key={\"svgExamID\"} svg_id={\"svgExamSVG\"}></Examchart>\n            </div>\n        );\n    }\n\n    render() {\n        const { Option } = Select;\n        const visible = this.state.visible\n        // const lineCharttitle = this.state.lineCharttitle\n        const handleOk = this.handleOk\n        const handleCancel = this.handleCancel\n        // const fixLineChartData = this.fixLineChartData\n        const charttableview = this.charttableview()\n        const LabDataList = RegularData.ExamReportJson()\n        //0:CBC 1:電解質 2:肝功能 3:心臟 4:凝血 5:GAS 6:Glucose\n        const SelectList = LabDataList.map(function (info, index) {\n            // console.log(info.index)\n            function StringFormat(formatString) {\n                if (formatString === \"電解質與腎功能檢驗:Na、K、Cl、Ca++、Ca、Mg++、P、BUN、Cr\") {\n                    return <div style={{ fontSize: \"12px\" }}>電解質與腎功能檢驗:Na、K、Cl、Ca<sup>2+</sup>、Ca、Mg<sup>2+</sup>、P、BUN、Cr</div>\n                }\n                if (formatString === \"Gas檢驗:PH、pCO2、pO2、HCO3、BE、O2Sat、FiO2\") {\n                    return <div style={{ fontSize: \"12px\" }}>Gas檢驗:pH、pCO<sub>2</sub>、pO<sub>2</sub>、HCO<sub>3</sub>、BE、O<sub>2</sub>Sat、FiO<sub>2</sub></div>\n                }\n                if (formatString === \"GAS(Additionary)檢驗:Hgb、Hct、Na、K、Ca++、BUN、Cr\") {\n                    return <div style={{ fontSize: \"12px\" }}>GAS(Additionary)檢驗:Hgb、Hct、Na、K、Ca<sup>2+</sup>、BUN、Cr</div>\n                }\n                return <div style={{ fontSize: \"12px\" }}>{formatString}</div>\n            }\n            const string = StringFormat(info.select)\n            return (\n                <Option key={info.index} value={info.index} style={{ fontSize: \"12px\" }}>{string}</Option>\n            );\n        })\n        const SelectTitlefilter = LabDataList.filter(function (element, index) {\n            const selectdata = Select\n            return element.index = selectdata\n        })\n        if (SelectTitlefilter.length === 0) {\n            return null\n        }\n        const SelectTitle = SelectTitlefilter[this.state.Selectus].title\n        const SelectTitleRender = SelectTitle.map((info, index) => {\n            function formatString(formatString) {\n                if (formatString === \"Ca++\") {\n                    return <div style={{ fontSize: \"13px\" }}>Ca<sup>2+</sup></div>\n                }\n                if (formatString === \"Mg++\") {\n                    return <div style={{ fontSize: \"13px\" }}>Mg<sup>2+</sup></div>\n                }\n                if (formatString === \"pCO2\") {\n                    return <div style={{ fontSize: \"13px\" }}>pCO<sub>2</sub></div>\n                }\n                if (formatString === \"pO2\") {\n                    return <div style={{ fontSize: \"13px\" }}>pO<sub>2</sub></div>\n                }\n                if (formatString === \"HCO3\") {\n                    return <div style={{ fontSize: \"13px\" }}>HCO<sub>3</sub></div>\n                }\n                if (formatString === \"FiO2\") {\n                    return <div style={{ fontSize: \"13px\" }}>FiO<sub>2</sub></div>\n                }\n                if (formatString === \"O2Sat\") {\n                    return <div style={{ fontSize: \"13px\" }}>O<sub>2</sub>Sat</div>\n                }\n                return formatString\n            }\n            const infoString = formatString(info)\n            const element = {\n                value: info,\n                index: index\n            }\n            return (\n                <centerstyle style={{ flex: 1 }} key={index}>\n                    <Button style={{ height: \"26px\", width: \"70px\", backgroundColor: \"transparent\", border: \"2px white solid\" }} index={index} value={info} onClick={() => { this.fixLineChartData(element) }}>{infoString}</Button>\n                </centerstyle>\n            );\n        })\n        const ExamLab = this.CellRender()\n\n        return (\n            <div>\n                <Modal\n                    visible={visible}\n                    onOk={handleOk}\n                    onCancel={handleCancel}\n                    width={1200}\n                    footer={null}>\n                    {charttableview}\n                </Modal>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderRadius: \"4px 4px 0 0\", height: \"36px\", padding: \"0px 16px\", display: \"grid\", gridTemplateColumns: \"120px 1fr\", alignItems: \"center\" }}>\n                    <div style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>累積報告</div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"100px 1fr\", gridColumnGap: \"5px\" }}>\n                        <t2 style={{ display: \"flex\", alignItems: \"center\" }}>檢驗類別：</t2>\n                        <div className=\"Select-Dropdown\" style={{ display: \"flex\", alignItems: \"center\" }}>\n                            <Select getPopupContainer={triggerNode => triggerNode.parentNode} defaultValue={this.state.Selectus} style={{ width: \"100%\" }} onChange={this.handleChange}>\n                                {SelectList}\n                            </Select>\n                        </div>\n                    </div>\n                </div>\n                <div style={{ backgroundColor: \"rgba(226, 237, 243,.5)\", height: \"30px\", display: \"grid\", gridTemplateColumns: \"110px 1fr\", alignItems: \"center\" }}>\n                    <centerstyle>\n                        <t2 style={{ display: \"flex\", justifyItems: \"center\" }}>檢驗項目</t2>\n                    </centerstyle>\n                    <div style={{ display: \"flex\" }} onClick={this.titleSearch}>\n                        {SelectTitleRender}\n                    </div>\n                </div>\n                <div style={{ border: \"1px solid rgba(232, 232, 232, 1)\", borderRadius: \"0 0 4px 4px\", borderCollapse: \"collapse\" }}>\n                    <div style={{ minHeight: \"calc(100vh - 305px)\", maxHeight: \"calc(100vh - 305px)\", overflowY: \"auto\" }} >\n                        {ExamLab}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Labview;\n","export function ExamReportJson() {\n    return [\n        {\n            \"select\": \"CBC檢驗:WBC、Band、Seg、Lymp、Hgb、Hct、PLT\",\n            \"index\": 0,\n            \"title\": [\n                \"WBC\",\n                \"Band\",\n                \"Seg\",\n                \"Lymp\",\n                \"Hgb\",\n                \"Hct\",\n                \"PLT\"\n            ]\n        },\n        {\n            \"select\": \"電解質與腎功能檢驗:Na、K、Cl、Ca++、Ca、Mg++、P、BUN、Cr\",\n            \"index\": 1,\n            \"title\": [\n                \"Na\",\n                \"K\",\n                \"Cl\",\n                \"Ca++\",\n                \"Ca\",\n                \"Mg++\",\n                \"P\",\n                \"BUN\",\n                \"Cr\"\n            ]\n        },\n        {\n            \"select\": \"肝功能檢驗:ALT、AST、TBil、DBil、r-GT、Alk-P、ALB\",\n            \"index\": 2,\n            \"title\": [\n                \"ALT\",\n                \"AST\",\n                \"TBil\",\n                \"DBil\",\n                \"r-GT\",\n                \"Alk-P\",\n                \"ALB\"\n            ]\n        },\n        {\n            \"select\": \"早產兒追蹤:Iron、TIBC、FeSat、LDH、Alk-P\",\n            \"index\": 3,\n            \"title\": [\n                \"Iron\",\n                \"TIBC\",\n                \"FeSat\",\n                \"LDH\",\n                \"Alk-P\"\n            ]\n        },\n        {\n            \"select\": \"心臟功能檢驗:CK、CK-MB、BNP、Trop-T\",\n            \"index\": 4,\n            \"title\": [\n                \"CK\",\n                \"CK-MB\",\n                \"BNP\",\n                \"Trop-T\"\n            ]\n        },\n        {\n            \"select\": \"凝血功能檢驗:PT、APTT、INR\",\n            \"index\": 5,\n            \"title\": [\n                \"PT\",\n                \"APTT\",\n                \"INR\"\n            ]\n        },\n        {\n            \"select\": \"Gas檢驗:PH、pCO2、pO2、HCO3、BE、O2Sat、FiO2\",\n            \"index\": 6,\n            \"title\": [\n                \"pH\",\n                \"pCO2\",\n                \"pO2\",\n                \"HCO3\",\n                \"BE\",\n                \"O2Sat\",\n                \"FiO2\"\n            ]\n        },\n        ,\n        {\n            \"select\": \"GAS(Additionary)檢驗:Hgb、Hct、Na、K、Ca++、BUN、Cr\",\n            \"index\": 7,\n            \"title\": [\n                \"Hgb\",\n                \"Hct\",\n                \"Na\",\n                \"K\",\n                \"Ca++\",\n                \"BUN\",\n                \"Cr\"\n            ]\n        },\n        {\n            \"select\": \"Glucose檢驗:Glu(BedSide, Lab)\",\n            \"index\": 8,\n            \"title\": [\n                \"Glu(BedSide)\",\n                \"Glu(Lab)\"\n            ]\n        },\n        {\n            \"select\": \"黃疸檢查:TCB、MicroBil、TBil、DBil\",\n            \"index\": 9,\n            \"title\": [\n                \"TCB\",\n                \"MicroBil\",\n                \"TBil\",\n                \"DBil\"\n            ]\n        },\n        {\n            \"select\": \"感染指數:WBC、Band、Seg、Lymp、PCT、CRP\",\n            \"index\": 10,\n            \"title\": [\n                \"WBC\",\n                \"Band\",\n                \"Seg\",\n                \"Lymp\",\n                \"PCT\",\n                \"CRP\"\n            ]\n        }\n    ]\n}\nexport function FlagReg() {\n    return [\n        {\n            item: \"Respirator\",\n            \"ParseValueUD\": [\n                \"Restriction\"\n            ],\n            \"ParseValueTRT\": []\n        },\n        {\n            item: \"TPN\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"NPO\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"Anti\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"Foley\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"Drain\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        }\n    ]\n}\nexport function QDC() {\n    return {\n        \"Feeding\": [\n            \"進食\"\n        ],\n        \"IV\": [\n            \"血品\",\n            \"輸液\"\n        ],\n        \"Urine\": [\n            \"排尿\"\n        ],\n        \"Other\": [\n            \"失血\",\n            \"滲液\",\n            \"嘔吐\",\n            \"引流\",\n            \"穿刺\",\n            \"透析\",\n            \"沖洗\",\n            \"排便\"\n        ]\n    }\n}\n\nexport function ChronicLab() {\n    return {\n        \"Biochemical\": [\n        ],\n        \"Blood\": [\n            \"BLOOD\"\n        ],\n        \"Cultivate\": [\n\n        ],\n        \"GAS\": [\n\n        ],\n        \"Glu\": [\n\n        ],\n        \"Radiation\": [\n        ]\n    }\n}\n\nexport function NonLabExamReportParser() {\n    return [\n        {\n            parser_name: \"CBC\",\n            apply_condition: {\n                name: \"CBC|WBC|HB|PLT\",\n                sample: null,\n                lab: null,\n                start_time: null,\n                end_time: null,\n            },\n            mappings: [\n                {\n                    key: \"Hb\",\n                    regex_str: \"HB:\\\\s+(\\\\d+(.\\\\d)?)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"WBC\",\n                    regex_str: \"wbc:\\\\s+(\\\\d+)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"PLT\",\n                    regex_str: \"plt:\\\\s+(\\\\d+)\",\n                    regex_flags: 'ism',\n                    position: 1\n                }\n            ],\n            summary: \"[WBC;-]/[Hb;]/[PLT;-]\"\n        },\n        {\n            parser_name: \"Atypical Respiratory Panel\",\n            apply_condition: {\n                name: \"Atypical Respiratory Panel|CBC|PH|HB|PO2\",\n                sample: null,\n                lab: null,\n                start_time: null,\n                end_time: null,\n            },\n            mappings: [\n                {\n                    key: \"Hb\",\n                    regex_str: \"Hb:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"PH\",\n                    regex_str: \"PH:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"PO2\",\n                    regex_str: \"PO2:\\\\s+\\\\((\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"FIO2\",\n                    regex_str: \"FIO2:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"HCO3\",\n                    regex_str: \"HCO3:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                }\n            ],\n            summary: \"[PH;-]/[Hb;-]/[PO2;-]/[FIO2;-]/[HCO3;-]\"\n        }\n    ]\n}\n\nexport function NonLabExamORDListParser() {\n    return [\n        {\n            parser_name: \"ORDLIST\",\n            apply_condition: {\n                name: \"ORDLIST\",\n                sample: null,\n                lab: null,\n                start_time: null,\n                end_time: null,\n            },\n            mappings: [\n                {\n                    key: \"飲食類別\",\n                    regex_str: \"(CHEST\\\\s+KUB\\\\s+\\\\(FOR\\\\s+BABY\\\\)\\\\s+PORTABLE)|(BRAIN\\\\s+ECHO\\\\s+\\\\(NBD\\\\))\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"管路類別\",\n                    regex_str: \"(BLOOD\\\\s+GAS)|(Atypical\\\\s+Respiratory\\\\s+Panel)|(BLOOD\\\\s+PRODUCTS\\\\s+IRRADIATION)|(Aliqot\\\\s+and\\\\s+storage\\\\s+of\\\\s+blood)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"呼吸類別\",\n                    regex_str: \"(NT-pro-BNP)|(ANTIBODY\\\\s+SCREENING)\",\n                    regex_flags: 'ism',\n                    position: 1\n                }\n            ],\n            summary: \"[CHEST KUB;-]/[BLOOD GAS;-]/[Glucose;-]\"\n        }\n    ]\n}\n\nexport function InspectionReportExtent() {\n    return {\n        \"CBC\": {\n            \"WBC\": {\n                \"min\": 10000,\n                \"max\": 30000\n            },\n            \"Band\": {\n                \"min\": 0,\n                \"max\": 10\n            },\n            \"Seg\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"Lymp\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"Hgb\": {\n                \"min\": 10,\n                \"max\": 18\n            },\n            \"Hct\": {\n                \"min\": 30,\n                \"max\": 55\n            },\n            \"PLT\": {\n                \"min\": 100000,\n                \"max\": 450000\n            }\n        },\n        \"電解質與腎功能\": {\n            \"Na\": {\n                \"min\": 120,\n                \"max\": 160\n            },\n            \"K\": {\n                \"min\": 0,\n                \"max\": 8\n            },\n            \"Cl\": {\n                \"min\": 80,\n                \"max\": 120\n            },\n            \"Ca++\": {\n                \"min\": 0.5,\n                \"max\": 1.8\n            },\n            \"Ca\": {\n                \"min\": 6,\n                \"max\": 12\n            },\n            \"Mg++\": {\n                \"min\": 0,\n                \"max\": 8\n            },\n            \"P\": {\n                \"min\": 0,\n                \"max\": 10\n            },\n            \"BUN\": {\n                \"min\": 0,\n                \"max\": 60\n            },\n            \"Cr\": {\n                \"min\": 0,\n                \"max\": 5\n            }\n        },\n        \"肝功能\": {\n            \"ALT\": {\n                \"min\": 0,\n                \"max\": 200\n            },\n            \"AST\": {\n                \"min\": 0,\n                \"max\": 200\n            },\n            \"TBil\": {\n                \"min\": 0,\n                \"max\": 30\n            },\n            \"DBil\": {\n                \"min\": 0,\n                \"max\": 20\n            },\n            \"r-GT\": {\n                \"min\": 0,\n                \"max\": 200\n            },\n            \"Alk-P\": {\n                \"min\": 0,\n                \"max\": 1600\n            },\n            \"ALB\": {\n                \"min\": 0,\n                \"max\": 5\n            }\n        },\n        \"早產兒追蹤\": {\n            \"Iron\": {\n                \"min\": 0,\n                \"max\": 300\n            },\n            \"TIBC\": {\n                \"min\": 0,\n                \"max\": 300\n            },\n            \"FeSat\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"LDH\": {\n                \"min\": 0,\n                \"max\": 2000\n            },\n            \"Alk-P\": {\n                \"min\": 0,\n                \"max\": 1600\n            }\n        },\n        \"心臟功能\": {\n            \"CK\": {\n                \"min\": 0,\n                \"max\": 6000\n            },\n            \"CK-MB\": {\n                \"min\": 0,\n                \"max\": 2000\n            },\n            \"BNP\": {\n                \"min\": 0,\n                \"max\": 20000\n            },\n            \"Trop-T\": {\n                \"min\": 0,\n                \"max\": 1000\n            }\n        },\n        \"凝血功能\": {\n            \"PT\": {\n                \"min\": 0,\n                \"max\": 120\n            },\n            \"APTT\": {\n                \"min\": 0,\n                \"max\": 120\n            },\n            \"INR\": {\n                \"min\": 0,\n                \"max\": 4\n            }\n        },\n        \"Gas\": {\n            \"pH\": {\n                \"min\": 6.5,\n                \"max\": 7.7\n            },\n            \"pCO2\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"pO2\": {\n                \"min\": 0,\n                \"max\": 200\n            },\n            \"HCO3\": {\n                \"min\": 0,\n                \"max\": 40\n            },\n            \"BE\": {\n                \"min\": -30,\n                \"max\": 20\n            },\n            \"O2Sat\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"FiO2\": {\n                \"min\": 0,\n                \"max\": 100\n            }\n        },\n        \"GAS(Additionary)\": {\n            \"Hgb\": {\n                \"min\": 6,\n                \"max\": 22\n            },\n            \"Hct\": {\n                \"min\": 10,\n                \"max\": 70\n            },\n            \"Na\": {\n                \"min\": 120,\n                \"max\": 160\n            },\n            \"K\": {\n                \"min\": 0,\n                \"max\": 8\n            },\n            \"Ca++\": {\n                \"min\": 0.5,\n                \"max\": 1.8\n            },\n            \"BUN\": {\n                \"min\": 0,\n                \"max\": 60\n            },\n            \"Cr\": {\n                \"min\": 0,\n                \"max\": 5\n            }\n        },\n        \"Glucose\": {\n            \"Glu(BedSide)\": {\n                \"min\": 0,\n                \"max\": 300\n            },\n            \"Glu(Lab)\": {\n                \"min\": 0,\n                \"max\": 300\n            }\n        },\n        \"黃疸\": {\n            \"TCB\": {\n                \"min\": 0,\n                \"max\": 30\n            },\n            \"MicroBil\": {\n                \"min\": 0,\n                \"max\": 30\n            },\n            \"TBil\": {\n                \"min\": 0,\n                \"max\": 30\n            },\n            \"DBil\": {\n                \"min\": 0,\n                \"max\": 20\n            }\n        },\n        \"感染指數\": {\n            \"WBC\": {\n                \"min\": 0,\n                \"max\": 40000\n            },\n            \"Band\": {\n                \"min\": 0,\n                \"max\": 0.05\n            },\n            \"Seg\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"Lymp\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"PCT\": {\n                \"min\": 0,\n                \"max\": 20\n            },\n            \"CRP\": {\n                \"min\": 0,\n                \"max\": 20\n            }\n        }\n    }\n\n}\n","import React, { Component } from 'react';\nimport './ExamNonlabtablecell.scss'\n// import { Nonlablist } from '../../Data/Wardviewdata'\nimport moment from 'moment'\nimport NonlabviewtableCell from '../CrossSectionView/NonlabviewtableCell'\n// import { Modal } from 'antd';\n// import InsReportModal from '../ExamReportModal'\n\nclass Examnonlabviewtable extends Component {\n    state = {\n        visible: false\n    }\n\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            const resultKey = mapping.sample ? mapping.key + \"-\" + mapping.sample : mapping.key\n            allResult[resultKey] = []\n        });\n        allResult[\"全部類別\"] = []\n        inputs.forEach(input => {\n            let content = input.ORPROCED;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\" && (mapping.sample ? input.ORSPCN1.trim() === mapping.sample : true)) {\n                    const resultKey = mapping.sample ? mapping.key + \"-\" + mapping.sample : mapping.key\n                    allResult[resultKey].push(input)\n                }\n            });\n\n            allResult[\"全部類別\"].push(input)\n        });\n\n        return allResult;\n    }\n\n    render() {\n        function listforstatus(ordlist, ressect, pickerdaterange, StateMode, InputMode) {\n            if (StateMode !== 0) {\n                /*\n                預設 \n                全部 StateMode == 0\n                已開單 StateMode == 1, data.ORSTATUS == 30\n                已簽收 StateMode == 2, data.ORSTATUS == 31\n                已發報告 StateMode == 3, data.ORSTATUS == 32\n                */\n                const changeState = { '1': '30', '2': '31', '3': '32' }\n                ordlist = ordlist.filter(data => {\n                    return data.ORSTATUS === changeState[StateMode.toString()]\n                })\n            }\n\n            if (InputMode !== null) {\n                const regex = new RegExp(InputMode, \"i\");\n                ordlist = ordlist.filter(data => {\n                    return data.ORPROCED.match(regex) !== null\n                })\n            }\n\n            let status_report = []\n            const et = pickerdaterange[1].valueOf() + (24 * 60 * 60 * 1000)\n            const st = pickerdaterange[0].valueOf()\n            if (Array.isArray(ordlist) && Array.isArray(ressect)) {\n                for (let index = 0; index < ordlist.length; index++) {\n                    const element = ordlist[index];\n                    const time = element.ORBGNDT.toString().trim() + element.ORBGNTM.toString().trim()\n                    const timeStamp = moment(time, 'YYYY-MM-DDHHmmss').valueOf()\n                    if (timeStamp > st && timeStamp < et) {\n                        const status = ressect.find(function (value, index, array) {\n                            return value.ORDCLNM === element.ORDCLNM\n                        })\n                        if (status) {\n                            status_report.push({\n                                \"status\": true,\n                                \"element\": element\n                            })\n                        }\n                        else {\n                            status_report.push({\n                                \"status\": false,\n                                \"element\": element\n                            })\n\n                        }\n                    }\n                }\n            }\n\n            status_report = status_report.sort((a, b) => {\n                let tempA = a.ORBGNDT.toString().trim() + a.ORBGNTM.toString().trim()\n                let tempTimeA = moment(tempA, 'YYYY-MM-DDHHmmss').valueOf()\n                let tempB = b.ORBGNDT.toString().trim() + b.ORBGNTM.toString().trim()\n                let tempTimeB = moment(tempB, 'YYYY-MM-DDHHmmss').valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n\n            return status_report\n        }\n        function formatPickerDateRangeToORDLIST(ORDLIST, PickerDateRange) {\n            const start = PickerDateRange[0]\n            const end = PickerDateRange[1]\n            if (Array.isArray(ORDLIST)) {\n                const filterORDLIST = ORDLIST.filter(function (info, index, arr) {\n                    const BGtime = moment(info.ORBGNDT.toString().trim() + info.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n                    return start <= BGtime && BGtime <= end\n                })\n                return filterORDLIST\n            }\n            return null\n\n        }\n        function formatSelectMode(data, selectMode) {\n            //StateMode 0:全部狀態 1:正式報告 2:已簽收 3:待送檢 4:其他\n            if (Array.isArray(data)) {\n                if (selectMode === 1) {\n                    const filterData = data.filter(function (info, index, arr) {\n                        return Number(info.ORSTATUS) === 64\n                    })\n                    return filterData\n                }\n                if (selectMode === 2) {\n                    const filterData = data.filter(function (info, index, arr) {\n                        return Number(info.ORSTATUS) === 38\n                    })\n                    return filterData\n                }\n                if (selectMode === 3) {\n                    const filterData = data.filter(function (info, index, arr) {\n                        return Number(info.ORSTATUS) === 31\n                    })\n                    return filterData\n                }\n                if (selectMode === 4) {\n                    const filterData = data.filter(function (info, index, arr) {\n                        return Number(info.ORSTATUS) !== 31 && Number(info.ORSTATUS) !== 64 && Number(info.ORSTATUS) !== 38\n                    })\n                    return filterData\n                }\n                return data\n            }\n            return null\n\n        }\n        function formatInputMode(data, InputMode) {\n            if (Array.isArray(data)) {\n                if (InputMode === null || InputMode === \"\" || InputMode === undefined) {\n                    return data\n                }\n                const filterInputMode = data.filter(function (info, index, arr) {\n                    return info.ORPROCED.toString().toLowerCase().match(InputMode) !== null || info.ORSPCN1.toString().toLowerCase().match(InputMode)\n                })\n                return filterInputMode\n            }\n            return null\n        }\n        const { PickerDateRange, ORDLIST, StateMode, InputMode, selectedClass } = this.props\n        const filterTimer = formatPickerDateRangeToORDLIST(ORDLIST, PickerDateRange)\n        const filterStateMode = formatSelectMode(filterTimer, StateMode)\n        const filterInput = formatInputMode(filterStateMode, InputMode)\n\n        console.log(filterTimer)\n        console.log(filterStateMode)\n        console.log(filterInput)\n        let clusteredData = null\n        if (this.props.parser !== undefined && this.props.parser.mappings.length !== 0) {\n            console.log(this.props.parser.mappings.length)\n            clusteredData = this.parse(filterInput, this.props.parser)\n        }\n\n        // console.log(clusteredData, this.props.selectedClass)\n        if (clusteredData === null) {\n            return null\n        }\n        const filteredData = clusteredData[this.props.selectedClass];\n        const sortfilteredData = filteredData.sort(function (a, b) {\n            const aBGtime = moment(a.ORBGNDT.toString().trim() + a.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n            const bBGtime = moment(b.ORBGNDT.toString().trim() + b.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n            return aBGtime < bBGtime ? 1 : -1;\n        });\n        // const list = listforstatus(filteredData, RESSECT, PickerDateRange, StateMode, InputMode)\n        const showModal = this.props.showModal\n        const nonlabcell = sortfilteredData.map(function (value, index, array) {\n            function ORSTATUSToString(ORSTATUS) {\n                if (ORSTATUS === 64) {\n                    return 0\n                }\n                if (ORSTATUS === 38) {\n                    return 1\n                }\n                if (ORSTATUS === 31) {\n                    return 2\n                }\n                return ORSTATUS\n            }\n            console.log(value)\n            const time = moment(value.ORBGNDT.toString().trim() + value.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n            const come = value.ORSPCN1\n            const name = value.ORPROCED\n            const status = ORSTATUSToString(Number(value.ORSTATUS))\n\n            return (\n                <NonlabviewtableCell key={\"Examnonlabviewtable\" + index} come={come} time={time} name={name} status={status} hisId={value.ORHISTNO} caseId={value.ORDSEQCN} month={value.ORMM} seq={value.ORDSEQNO} showModal={showModal}></NonlabviewtableCell>\n                // <NonlabviewtableCell key={\"Nonlabviewtable\" + index} come={come} time={time} name={name} status={status} hisId={value.element.ORHISTNO} caseId={value.element.ORDSEQCN} month={value.element.ORMM} seq={value.element.ORDSEQNO} showModal={showModal} isSameDay={isSameDay}></NonlabviewtableCell>\n            );\n        })\n\n        const title = [\"時間\", \"檢驗項目\", \"檢體\", \"狀態\", \"報告\"]\n        const titlecell = title.map(function (value, index, arr) {\n            // const tempStyle = index == 1\n            return (\n                <t3 className='nonlabtebletitlecell' style={{ justifyContent: \"center\" }}>{value}</t3>\n            );\n        })\n\n        return (\n            <div style={{ marginTop: \"10px\" }}>\n                <div style={{ height: \"30px\", border: \"rgba(238,238,238,1) 1px solid\", backgroundColor: \"rgba(226, 237, 243,.5)\", display: \"grid\", gridTemplateColumns: \"1fr 1.5fr 1fr 1fr 1fr\" }}>\n                    {titlecell}\n                </div>\n                <div style={{ border: \"1px solid rgba(232, 232, 232, 1)\", borderRadius: \"0 0 4px 4px\", borderCollapse: \"collapse\" }}>\n                    <div style={{ minHeight: \"calc(100vh - 305px)\", maxHeight: \"calc(100vh - 305px)\", overflowY: \"auto\" }} >\n                        {JSON.stringify(filteredData) !== '[]' ?\n                            nonlabcell\n                            :\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1.5fr 1fr 1fr 1fr\" }}>\n                                <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                    無資料\n                                </div>\n                            </div>}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Examnonlabviewtable\n","import React, { Component } from 'react';\nimport Examnonlabviewtable from './ExamNonlabtablecell'\nimport { Input, Select, Modal } from 'antd';\n// import moment from 'moment';\n// import searchlogo from '../../Image/svg/Search.svg'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport * as Apiprovider from '../../API/ApiProvider'\nimport InsReportModal from '../ExamReportModal'\nimport moment from 'moment'\nimport * as ORDER from '../../Resource/ORDERLIST'\n\n// var mode_class, mode_state;\nclass Nonlabview extends Component {\n    state = {\n        ClassMode: \"全部類別\",\n        StateMode: 0,\n        InputMode: null,\n        parser: { \"mappings\": [] },\n        modalVisible: false,\n        modalReport: \"\",\n\n        preHID: null,\n        prestartTime: null,\n        preendTime: null,\n        ORDLIST: []\n    }\n\n    componentDidMount() {\n        const { caseinfo, PickerDateRange } = this.props\n        const HID = caseinfo.HISID\n        const startTime = moment(PickerDateRange[0]).format(\"YYYY-MM-DD\")\n        const endTime = moment(PickerDateRange[1]).format(\"YYYY-MM-DD\")\n        this.setState({ preHID: HID, prestartTime: startTime, preendTime: endTime })\n        this.getAPI(HID, startTime)\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDateRange } = this.props\n        const { preHID, prestartTime, preendTime } = this.state\n        const HID = caseinfo.HISID\n        const startTime = moment(PickerDateRange[0]).format(\"YYYY-MM-DD\")\n        const endTime = moment(PickerDateRange[1]).format(\"YYYY-MM-DD\")\n        if (HID !== preHID || startTime !== prestartTime || endTime !== preendTime) {\n            this.setState({ preHID: HID, prestartTime: startTime, preendTime: endTime })\n            this.getAPI(HID, startTime)\n        }\n    }\n    getAPI(HID, storeProcedureTime) {\n        Apiprovider.getStoredProcedureORDLIST(HID, storeProcedureTime, \"ALL\", \"DOC3924B\")\n            .then(data => this.setState({ ORDLIST: data.data }))\n            .catch(err => { console.log(err) })\n\n        // this.setState({ ORDLIST: ORDER.data })\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"NonLabExamReport\");\n                parser.mappings = [{ \"key\": \"全部類別\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson ExamReportNonLab OK \" + JSON.stringify(parser))\n                this.setState({\n                    parser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    Inputvaluesearch = (event) => {\n        this.setState({ InputMode: event.target.value })\n    }\n\n    onChangeState = (value) => {\n        this.setState({ StateMode: value })\n    }\n\n    onChangeClass = (value) => {\n        this.setState({ ClassMode: value })\n    }\n\n    showModal = (report) => {\n        this.setState({\n            modalVisible: true,\n            modalReport: report\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    render() {\n        const { Option,caseinfo } = Select;\n        const { PickerDateRange } = this.props\n        const { modalVisible, modalReport, ORDLIST } = this.state\n        const showModal = this.showModal\n        const handleOk = this.handleOk\n        const handleCancel = this.handleCancel\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderRadius: \"4px 4px 0 0\", height: \"36px\", padding: \"0px 16px\", display: \"grid\", alignItems: \"center\", gridTemplateColumns: \"2fr 3fr\", justifyContent: \"space-between\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>檢驗清單及報告</t2>\n                    <div style={{ display: 'grid', gridTemplateColumns: \"130px 100px auto\", gridColumnGap: \"5px\" }}>\n                        <Select defaultValue={this.state.ClassMode} placeholder=\"選擇檢驗類別\" style={{ width: 120 }} onChange={this.onChangeClass}>\n                            {this.state.parser.mappings.map((mapping, index) => {\n                                return <Option key={index} value={mapping.sample ? mapping.key + \"-\" + mapping.sample : mapping.key}>{mapping.sample ? mapping.key + \"-\" + mapping.sample : mapping.key}</Option>\n                            })}\n                        </Select>\n                        <Select defaultValue={this.state.StateMode} placeholder=\"選擇項目狀態\" style={{ width: 100 }} onChange={this.onChangeState}>\n                            <Option value={0}>全部狀態</Option>\n                            <Option value={1}>正式報告</Option>\n                            <Option value={2}>已簽收</Option>\n                            <Option value={3}>待送檢</Option>\n                            <Option value={4}>其他</Option>\n                        </Select>\n                        <Input id=\"keywordsearch\" placeholder=\"輸入關鍵字\" onChange={this.Inputvaluesearch} />\n                    </div>\n                </div>\n                <Examnonlabviewtable PickerDateRange={PickerDateRange} ORDLIST={ORDLIST} selectedClass={this.state.ClassMode} parser={this.state.parser} StateMode={this.state.StateMode} InputMode={this.state.InputMode} visible={modalVisible} showModal={showModal} handleOk={handleOk} handleCancel={handleCancel}></Examnonlabviewtable>\n                {/* <Nonlabviewtable caseinfo={caseinfo} StartTime={PickerDateRange[0]} EndTime={PickerDateRange[1]}></Nonlabviewtable> */}\n                <Modal\n                    title={\"檢驗結果\"}\n                    visible={modalVisible}\n                    onOk={handleOk}\n                    onCancel={handleCancel}\n                    width={1000}\n                    footer={null}>\n                    <InsReportModal report={modalReport}></InsReportModal>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Nonlabview\n","import React, { Component } from 'react';\nimport Labview from './ExamLabview'\nimport { DatePicker, Button } from 'antd';\nimport './ExamReport.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport Nonlabview from './NonLabview'\nimport locale from 'antd/es/date-picker/locale/zh_TW';\nimport Nonlabviewtable from '../CrossSectionView/Nonlabviewtable'\n// import * as RegularData from '../../Data/RegularData'\n\nclass Examreport extends Component {\n    state = {\n        selectdata: 0,\n        selectTitle: '',\n        PickerDateRange: [moment(moment().subtract(6, 'days').format('YYYYMMDD')),\n        moment(moment().format('YYYYMMDD'))],\n        RESDGLU1: [], //累積報告\n        RESLAB02: [], //累積報告\n        RESLAB01: [],  //累積報告\n        RESDBGAS: [],  //累積報告\n        RESLAB0C: [],//累積報告\n        ORDLIST: [],\n        RESSECT: []\n    }\n    constructor(props) {\n        super(props)\n        this.PickerDateRangeChange = this.PickerDateRangeChange.bind(this)\n    }\n\n    SelectDataList() {\n        function vallofnull(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"\"\n            }\n            return value.toString().trim()\n        }\n        const DateRange = this.state.PickerDateRange\n        const selectData = this.state.selectdata\n        const st_timestamp = DateRange[0].valueOf()\n        const et_timestamp = DateRange[1].valueOf() + (24 * 60 * 60 * 1000)\n        // const { PickerDateRange, RESLAB02, RESDGLU1, RESLAB01, RESDBGAS, RESLAB0C, ORDLIST, RESSECT } = this.props\n        const RESLAB02 = this.state.RESLAB02\n        const RESDGLU1 = this.state.RESDGLU1\n        const RESLAB01 = this.state.RESLAB01\n        const RESDBGAS = this.state.RESDBGAS\n        const RESLAB0C = this.state.RESLAB0C\n\n\n        var CellData = []\n        if (selectData === 0) { // CBC\n            for (let index = 0; index < RESLAB02.length; index++) {\n                const element = RESLAB02[index];\n                const WBC = vallofnull(element.RSV01)\n                const Band = vallofnull(element.RSV13)\n                const Seq = vallofnull(element.RSV14)\n                const Lym = vallofnull(element.RSV15)\n                const Hb = vallofnull(element.RSV03)\n                const Hct = vallofnull(element.RSV04)\n                const Plt = vallofnull(element.RSV09)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [WBC, Band, Seq, Lym, Hb, Hct, Plt]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 1) { // 電解質與腎\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const Na = vallofnull(element.RSV13)\n                const K = vallofnull(element.RSV14)\n                const Cl = vallofnull(element.RSV15)\n                const CaFree = \"No\"\n                const CaTotal = vallofnull(element.RSV03)\n                const Mg = \"No\"\n                const P = vallofnull(element.RSV17)\n                const BUN = vallofnull(element.RSV05)\n                const Cr = vallofnull(element.RSV06)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [Na, K, Cl, CaFree, CaTotal, Mg, P, BUN, Cr]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 2) { // 肝功能\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const Alt = vallofnull(element.RSV11)\n                const AST = vallofnull(element.RSV12)\n                const TBil = vallofnull(element.RSV08)\n                const DBil = vallofnull(element.RSV25)\n                const rGGT = vallofnull(element.RSV19)\n                const Alkp = vallofnull(element.RSV09)\n                const Alb = vallofnull(element.RSV02)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [Alt, AST, TBil, DBil, rGGT, Alkp, Alb]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 3) { // 早產兒\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const Iron = vallofnull(element.RSV26)\n                const TIBC = vallofnull(element.RSV28)\n                const FeSat = parseInt(vallofnull(element.RSV26)) / parseInt(vallofnull(element.RSV26))\n                const LDH = vallofnull(element.RSV10)\n                const Alkp = vallofnull(element.RSV9)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [Iron, TIBC, FeSat, LDH, Alkp]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 4) { // 心臟\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const ck = vallofnull(element.RSV18)\n                const ckMB = vallofnull(element.RSV28)\n                const BNP = \"No\"\n                const Troponinl = vallofnull(element.RSV30)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [ck, ckMB, BNP, Troponinl]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 5) { // 凝血\n            for (let index = 0; index < RESLAB02.length; index++) {\n                const element = RESLAB02[index];\n                const PT = vallofnull(element.RSV10)\n                const APTT = vallofnull(element.RSV11)\n                const INR = vallofnull(element.RSV12)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [PT, APTT, INR]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 6) { // GAS(Acid-Base)\n            for (let index = 0; index < RESDBGAS.length; index++) {\n                const element = RESDBGAS[index];\n                const PH = vallofnull(element.SS07)\n                const pCO2 = vallofnull(element.SS06)\n                const pO2 = vallofnull(element.SS08)\n                const HCO3 = vallofnull(element.SS04)\n                const BE = vallofnull(element.SS01)\n                const O2Sat = vallofnull(element.SS05)\n                const FiO2 = vallofnull(element.SS03)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [PH, pCO2, pO2, HCO3, BE, O2Sat, FiO2]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 7) { // GAS(Additionary)\n            for (let index = 0; index < RESDBGAS.length; index++) {\n                const element = RESDBGAS[index];\n                const Hb = vallofnull(element.SS11)\n                const Hct = vallofnull(element.SS12)\n                const Na = vallofnull(element.SS13)\n                const K = vallofnull(element.SS14)\n                const CaFree = vallofnull(element.SS15)\n                const Bun = vallofnull(element.SS16)\n                const Cr = vallofnull(element.SS17)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [Hb, Hct, Na, K, CaFree, Bun, Cr]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 8) { // Glucose\n            for (let index = 0; index < RESDGLU1.length; index++) {\n                const element = RESDGLU1[index]\n                const GluBeside = vallofnull(element.GLUFAST)\n                const GluLab = vallofnull(element.RSV16)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [GluBeside, GluLab]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 9) { // 黃疸\n            for (let index = 0; index < RESLAB0C.length; index++) {\n                const element = RESLAB0C[index]\n                const TCB = vallofnull(element.RSV01)\n                const MicroBil = vallofnull(element.RSV02)\n                const TBil = vallofnull(element.RSV03)\n                const DBil = vallofnull(element.RSV04)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [TCB, MicroBil, TBil, DBil]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 10) { // 感染指數\n            for (let index = 0; index < RESLAB02.length; index++) {\n                const elementOne = RESLAB02[index]\n                const WBC = vallofnull(elementOne.RSV01)\n                const Band = vallofnull(elementOne.RSV13)\n                const Seg = vallofnull(elementOne.RSV14)\n                const Lym = vallofnull(elementOne.RSV15)\n\n                const time = moment((elementOne.ORRESDT.toString() + elementOne.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((elementOne.ORRESDT.toString() + elementOne.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [WBC, Band, Seg, Lym, null, null]\n                    })\n                }\n            }\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const elementTwo = RESLAB01[index]\n                const PCT = null\n                const CRP = vallofnull(elementTwo.RSV32)\n                const time = moment((elementTwo.ORRESDT.toString() + elementTwo.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((elementTwo.ORRESDT.toString() + elementTwo.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [null, null, null, null, PCT, CRP]\n                    })\n                }\n            }\n            return CellData\n        }\n        return null\n\n    }\n\n    componentDidMount() {\n        const { caseinfo } = this.props\n        this.setState({ preHID: caseinfo.HISID })\n        this.APIUpdate(caseinfo.TRANSINDT, caseinfo.HISID)\n        this.SelectDataList = this.SelectDataList.bind(this)\n    }\n\n    componentDidUpdate() {\n        const { caseinfo } = this.props\n        const { preHID } = this.state\n        if (preHID !== caseinfo.HISID) {\n            this.setState({ preHID: caseinfo.HISID })\n            this.APIUpdate(caseinfo.TRANSINDT, caseinfo.HISID)\n            this.SelectDataList = this.SelectDataList.bind(this)\n        }\n    }\n\n    // ChangeRangePicker(dates, datestrings) {\n\n    // }\n    APIUpdate(DateRange, HID) {\n        function selectMonthInterval(PickerDate) {\n            const timestampInterval = new Date().getTime() - new Date(PickerDate).getTime()\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n\n        const st = moment(DateRange, \"YYYYMMDD\").format(\"YYYY-MM-DD\")\n        console.log(DateRange, HID)\n        const datePick = moment(DateRange, \"YYYYMMDD\").format('YYYY/MM/DD')\n        const MonthInterval = selectMonthInterval(datePick)\n        const RESDGLU1 = ApiProvider.getStoredProcedureRESDGLU1(HID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESLAB02 = ApiProvider.getStoredProcedureRESLAB02(HID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESLAB01 = ApiProvider.getStoredProcedureRESLAB01(HID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESDBGAS = ApiProvider.getStoredProcedureRESDBGAS(HID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESLAB0C = ApiProvider.getStoredProcedureRESLAB0C(HID, st)\n            .then(data => {\n                console.log(data.data)\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const ORDLIST = ApiProvider.getStoredProcedureORDLIST(HID, st, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                console.log(data.data)\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        const RESSECT = ApiProvider.getStoredProcedureRESSECT(HID, MonthInterval, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        Promise.all([RESDGLU1, RESLAB02, RESLAB01, RESDBGAS, RESLAB0C, ORDLIST, RESSECT]).then(result => {\n            this.setState({\n                RESDGLU1: result[0], //累積報告\n                RESLAB02: result[1],  //累積報告\n                RESLAB01: result[2],  //累積報告\n                RESDBGAS: result[3],  //累積報告\n                RESLAB0C: result[4],  //累積報告\n                ORDLIST: result[5],\n                RESSECT: result[6],\n            })\n        })\n    }\n    callbackDateFunction = (select) => {\n        this.setState({\n            selectdata: select\n        })\n    }\n\n    callbackTitleFunction = (select) => {\n        this.setState({\n            selectTitle: select\n        })\n    }\n\n    PickerDateRangeChange(date, dateString) {\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDateRange } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const st = PickerDateRange[0].valueOf()\n        const et = PickerDateRange[1].valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                if (bronDate <= (st - day)) {\n                    const bTime = [moment(moment(st - day).format('YYYYMMDD')), moment(moment(et - day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(bTime)\n                }\n                break;\n            case 'N':\n                const nTime = [moment(moment().subtract(6, 'days').format('YYYYMMDD')), moment(moment().format('YYYYMMDD'))]\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                if (aTemp >= (et + day)) {\n                    const aTime = [moment(moment(st + day).format('YYYYMMDD')), moment(moment(et + day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(aTime)\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const momentDate = this.state.PickerDateRange\n        let data = this.SelectDataList()\n\n        data = data.sort((a, b) => {\n            let tempTimeA = moment(a.Time, 'YYYY-MM-DDHHmmss').valueOf()\n            let tempTimeB = moment(b.Time, 'YYYY-MM-DDHHmmss').valueOf()\n            return tempTimeA < tempTimeB ? 1 : -1\n        })\n\n        const { RangePicker } = DatePicker\n        const PickerDateRange = [momentDate[0].valueOf(), momentDate[1].valueOf()]\n\n        return (\n            <div className='examreportlayout'>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"250px 120px\", gridColumnGap: \"5px\", marginBottom: \"5px\" }}>\n                    <RangePicker\n                        // defaultValue={this.state.PickerDateRange}\n                        getCalendarContainer={triggerNode => triggerNode.parentNode}\n                        value={this.state.PickerDateRange}\n                        format={\"YYYY/MM/DD\"}\n                        allowClear={false}\n                        locale={locale}\n                        disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                        // toString={(dates, datestrings) => { this.setState({ RangePicker: dates }) }}\n                        onChange={this.PickerDateRangeChange}\n                    />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"minus-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" }}>\n                    <Labview selectvalue={this.state.selectdata}\n                        parentDateCallback={this.callbackDateFunction}\n                        DataList={data}\n                        SelectStatus={this.state.selectdata}\n                        PickerDateRange={PickerDateRange}\n                        parentTitleCallback={this.callbackTitleFunction}>\n                    </Labview>\n                    <Nonlabview caseinfo={caseinfo} PickerDateRange={PickerDateRange}></Nonlabview>\n                </div>\n                {/* {this.charttableview()} */}\n                <div style={{ display: \"flex\", justifyContent: 'center', alignItems: 'center' }}>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Examreport;\n","import React, { Component } from 'react';\nimport { DatePicker, Button } from 'antd';\nimport Prescriptionordertable from '../Prescriptionorder/Prescriptionorder'\nimport Treatmentorderlayout from '../Treatmentorder/Treatmentorder'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass Orderview extends Component {\n    state = {\n        UDORDER0: [],\n        TRTMNTQ1: [],\n        PickerDateRange: [moment(moment().subtract(6, 'days').format('YYYYMMDD')),\n        moment(moment().format('YYYYMMDD'))],\n    }\n    componentDidMount() {\n        this.apidata()\n    }\n    apidata() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID.toString().trim()\n        const CID = caseinfo.CASEID.toString().trim()\n        const UDORDER0 = ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureUDORDER0 NG \" + JSON.stringify(err))\n            });\n        const TRTMNTQ1 = ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureTRTMNTQ1 NG \" + JSON.stringify(err))\n            });\n        Promise.all([UDORDER0, TRTMNTQ1]).then(result => {\n            this.setState({\n                UDORDER0: result[0],\n                TRTMNTQ1: result[1]\n            })\n        })\n    }\n\n    PickerDateRangeChange = (date, dateString) => {\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDateRange } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const st = PickerDateRange[0].valueOf()\n        const et = PickerDateRange[1].valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                if (bronDate <= (st - day)) {\n                    const bTime = [moment(moment(st - day).format('YYYYMMDD')), moment(moment(et - day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(bTime)\n                }\n                break;\n            case 'N':\n                const nTime = [moment(moment().subtract(6, 'days').format('YYYYMMDD')), moment(moment().format('YYYYMMDD'))]\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                if (aTemp >= (et + day)) {\n                    const aTime = [moment(moment(st + day).format('YYYYMMDD')), moment(moment(et + day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(aTime)\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const udata = this.state.UDORDER0\n        const tdata = this.state.TRTMNTQ1\n        const momentDate = this.state.PickerDateRange\n\n        const { RangePicker } = DatePicker\n        const PickerDateRange = [momentDate[0].valueOf(), momentDate[1].valueOf()]\n        if (udata.length === 0 || tdata.length === 0) {\n            //Loading\n            return null\n        }\n\n        return (\n            <div>\n                <div style={{overflowY: 'auto' }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"250px 120px\", gridColumnGap: \"5px\", marginBottom: \"5px\" }}>\n                        <RangePicker\n                            getCalendarContainer={triggerNode => triggerNode.parentNode}\n                            value={this.state.PickerDateRange}\n                            format={\"YYYY/MM/DD\"}\n                            allowClear={false}\n                            locale={\"zh_TW\"}\n                            onChange={this.PickerDateRangeChange}\n                            disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                        />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"minus-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" }}>\n                        <Prescriptionordertable PickerDateRange={PickerDateRange} UDORDER0={udata} searchbar={true} caseinfo={caseinfo}></Prescriptionordertable>\n                        <Treatmentorderlayout PickerDateRange={PickerDateRange} TRTMNT01={tdata} searchbar={true} caseinfo={caseinfo}></Treatmentorderlayout>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Orderview;\n","import React, { Component } from \"react\";\nimport { Select, Button, Icon } from \"antd\";\nimport * as ApiProvider from \"../../API/ApiProvider\";\nimport moment from \"moment\";\n// import Notelist from './Notelist'\n// import searchlogo from '../../Image/svg/Search.svg'\nimport * as Wardstate from \"../../Function/Wardstate\";\nimport \"./Note.scss\";\nimport * as timeFormat from './NoteTimeFormat'\n// import X2JS from 'x2js';\n// import * as PR from '../../Resource/PRGTXQRY'\n\nvar dataRange = [];\nclass Noteview extends Component {\n  state = {\n    StartTime: null,\n    EndTime: null,\n    display_data: null,\n    context: null,\n    contentdisplay: false,\n\n    ADMDISP: [],\n    ADMLIST: [],\n    DISLIST: [],\n    DISDISP: [],\n    DTAROTQ4: [],\n    DTASOAPQ: [],\n    PCASELIST: [],\n    ERDISP: [],\n    PRGTXQRY: [],\n    PRGTXQRYDIS: [],\n    CPSLIST: [],\n    CPSDISP: [],\n    QPNOT: [],\n    QPNOTDIS: [],\n    OPSORAQ1: [],\n    OPSORAQ2: [],\n    SelectClass: 0\n  };\n  componentDidMount() {\n    this.apiData();\n  }\n\n  SelectADMDISP(ADISTNO, ADICASE) {\n    ApiProvider.getStoredProcedureADMDISP(ADISTNO, ADICASE)\n      .then(data => { this.setState({ ADMDISP: data.data }); })\n      .catch(err => { console.log(\"Andy test getStoredProcedureADMDISP NG \" + JSON.stringify(err)); });\n  }\n  SelectDISDISP(CID) {\n    const { caseinfo } = this.props;\n    ApiProvider.getStoredProcedureDISDISP(caseinfo.HISID, CID)\n      .then(data => {\n        this.setState({\n          DISDISP: data.data\n        });\n      })\n      .catch(err => {\n        console.log(\n          \"Andy test getStoredProcedureADMDISP NG \" + JSON.stringify(err)\n        );\n      });\n  }\n\n  SelectERDISP(CID) {\n    const { caseinfo } = this.props;\n    ApiProvider.getStoredProcedureERDISP(caseinfo.HISID, CID)\n      .then(data => {\n        this.setState({\n          ERDISP: data.data\n        });\n      })\n      .catch(err => {\n        console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n      });\n  }\n  SelectDTASOAPQ(date, dpt) {\n    const { caseinfo } = this.props;\n    //門診紀錄內容 需要時間和醫生編號\n    ApiProvider.getStoredProcedureDTASOAPQ(caseinfo.HISID, date, dpt)\n      .then(data => {\n        this.setState({\n          DTASOAPQ: data.data\n        });\n      })\n      .catch(err => {\n        console.log(\n          \"Andy test getStoredProcedureDTASOAPQ NG \" + JSON.stringify(err)\n        );\n      });\n  }\n  SelectPRGTXQRYDIS(List) {\n    this.setState({\n      PRGTXQRYDIS: List\n    });\n  }\n  SelectCPSDISP(HID, CID, SEQ) {\n    ApiProvider.getStoredProcedureCPSDISP(HID, CID, SEQ)\n      .then(data => {\n        this.setState({\n          CPSDISP: data.data\n        });\n      })\n      .catch(err => {\n        console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n      });\n  }\n  SelectQPNOTDIS(data) {\n    this.setState({\n      QPNOTDIS: data\n    });\n  }\n\n  SelectOPSORAQ1(OPABGNDT, OPATIMES) {\n    const { caseinfo } = this.props;\n    //門診紀錄內容 需要時間和醫生編號\n    ApiProvider.getStoredProcedureOPSORAQ2(caseinfo.HISID, OPABGNDT, OPATIMES)\n      .then(data => {\n        this.setState({\n          OPSORAQ2: data.data\n        });\n      })\n      .catch(err => {\n        console.log(\n          \"Andy test getStoredProcedureDTASOAPQ NG \" + JSON.stringify(err)\n        );\n      });\n  }\n  apiData() {\n    const { caseinfo } = this.props;\n    //入院並摘\n    const ADMLIST = ApiProvider.getStoredProcedureADMLIST(caseinfo.HISID, \"DOC3924B\")\n      .then(data => {\n        return data.data;\n      })\n      .catch(err => {\n        console.log(\n          \"Andy test getStoredProcedureADMLIST NG \" + JSON.stringify(err)\n        );\n      });\n    //出院並摘\n    const DISLIST = ApiProvider.getStoredProcedureDISLIST(\n      caseinfo.HISID,\n      \"DOC3924B\"\n    )\n      .then(data => {\n        return data.data;\n      })\n      .catch(err => {\n        console.log(\n          \"Andy test getStoredProcedureDISLIST NG \" + JSON.stringify(err)\n        );\n      });\n\n    //門診紀錄清單\n    const DTAROTQ4 = ApiProvider.getStoredProcedureDTAROTQ4(caseinfo.HISID)\n      .then(data => {\n        return data.data;\n      })\n      .catch(err => {\n        console.log(\n          \"Andy test getStoredProcedureDTAROTQ4 NG \" + JSON.stringify(err)\n        );\n      });\n\n    //急診紀錄清單\n    const PCASELIST = ApiProvider.getStoredProcedurePCASELIST(\n      caseinfo.HISID,\n      \"DOC3924B\",\n      \"E\"\n    )\n      .then(data => {\n        return data.data;\n      })\n      .catch(err => {\n        console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n      });\n\n    const CPSLIST = ApiProvider.getStoredProcedureCPSLIST(\n      caseinfo.HISID,\n      \"DOC3924B\"\n    )\n      .then(data => {\n        return data.data;\n      })\n      .catch(err => {\n        console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n      });\n\n    function nullvalue(value) {\n      if (value === null) {\n        return \"911\";\n      }\n      const PRGTXQRYDATE = moment(value.PLOCDT, \"YYYYMMDD\").format(\"YYYYMM\");\n      const D = PRGTXQRYDATE.substr(3, 3);\n      return D;\n    }\n\n    const LIVEPLOC = nullvalue(caseinfo.PLOCSTART);\n    const PRGTXQRY = ApiProvider.getStoredProcedurePRGTXQRY(\n      caseinfo.HISID,\n      LIVEPLOC,\n      caseinfo.CASEID\n    ).then(data => {\n      return data.data;\n    }).catch(err => {\n      console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n    });\n    const transdt = caseinfo.TRANSINDT;\n    const ST = moment(transdt, \"YYYYMMDD\").format(\"YYYYMMDDHHmm\");\n    const ET = moment().format(\"YYYYMMDDHHmm\");\n\n    const QPNOT = ApiProvider.getQPNOT(caseinfo.CASEID, ST, ET)\n      .then(data => {\n        const parseSource = Wardstate.XM2JSON(data.data);\n        return parseSource;\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    const OPSORAQ1 = ApiProvider.getStoredProcedureOPSORAQ1(caseinfo.HISID)\n      .then(data => {\n        return data.data;\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    Promise.all([\n      ADMLIST,\n      DISLIST,\n      DTAROTQ4,\n      PCASELIST,\n      PRGTXQRY,\n      CPSLIST,\n      QPNOT,\n      OPSORAQ1\n    ]).then(result => {\n      this.setState({\n        ADMLIST: result[0],\n        DISLIST: result[1],\n        DTAROTQ4: result[2],\n        PCASELIST: result[3],\n        PRGTXQRY: result[4],\n        CPSLIST: result[5],\n        QPNOT: result[6],\n        OPSORAQ1: result[7]\n      });\n    });\n  }\n\n  callbackFunction = item_array => {\n    this.setState({\n      display_data: item_array.NoteTime,\n      context: item_array.Content,\n      contentdisplay: true\n    });\n  };\n\n  handleChange = e => {\n    let value = parseInt(e, 10);\n    this.setState({\n      SelectClass: value\n    });\n  };\n\n  onClickSearch() {\n    if (dataRange.length !== 0) {\n      this.setState({\n        StartTime: dataRange[0],\n        EndTime: dataRange[1]\n      });\n    }\n  }\n\n  onDateChange = (date, dateString) => {\n  };\n\n  NotecontrolBar() {\n    const select_data = [\n      { item: \"入院病摘\", value: 0 },\n      { item: \"出院病摘\", value: 1 },\n      { item: \"門診紀錄\", value: 2 },\n      { item: \"急診紀錄\", value: 3 },\n      { item: \"病程紀錄\", value: 4 },\n      { item: \"會診紀錄\", value: 5 },\n      { item: \"護理紀錄\", value: 6 },\n      { item: \"手術記錄\", value: 7 }\n    ];\n\n    const items = (\n      <div\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"100px 100px 100px 100px\",\n          columnGap: \"10px\",\n          marginBottom: \"10px\",\n          gridAutoColumns: \"100px\",\n          gridAutoFlow: \"column\"\n        }}>\n        {select_data.map(info => {\n          return (\n            <Button\n              onClick={e => this.handleChange(e.target.value)}\n              className=\"topMenu\"\n              style={{\n                borderRadius: \"4px\",\n                color: \"#001a6d88\",\n                border: \"1px solid #001a6d88\",\n                paddingLeft: \"4px\",\n                paddingRight: \"4px\",\n                height: \"30px\",\n                gridTemplateColumns: \"column\",\n                cursor: \"pointer\"\n              }}\n              value={info.value}\n            >\n              {info.item}\n            </Button>\n          );\n        })}\n      </div>\n    );\n\n    return items;\n  }\n\n  renderContentArray() {\n    const source = this.state.SelectClass;\n    if (source === 0) {\n      const data = this.state.ADMDISP;\n      if (data.length === 0) {\n        return null;\n      } else {\n        const fakeADMData = data;\n        return fakeADMData.map(row => (\n          <div style={{ whiteSpace: \"pre-wrap\" }}>{row.ADMDATA}</div>\n        ));\n      }\n    }\n    if (source === 1) {\n      const data = this.state.DISDISP;\n      if (data.length === 0) {\n        return null;\n      } else {\n        const fakeADMData = data;\n        return fakeADMData.map(row => (\n          <div style={{ whiteSpace: \"pre-wrap\" }}>{row[\"1\"]}</div>\n        ));\n      }\n    }\n    if (source === 2) {\n      const data = this.state.DTASOAPQ;\n      if (data.length === 0) {\n        return null;\n      } else {\n        let textType = [];\n        let textObj = [];\n        for (var i = 0; i < data.length; i++) {\n          //find type\n          const type = data[i].DTSOAPTY;\n          const lines = data[i].DTSOAPSQ;\n          const content = data[i].DTSOAPTX;\n          if (textType.indexOf(type) === -1) {\n            //new type\n            const newObj = {\n              type: type,\n              lines: lines,\n              content: content\n            };\n            textObj.push(newObj);\n            textType.push(type);\n          } else {\n            //old type\n            const idx = textObj.findIndex(item => item.type === type);\n            textObj[idx].lines = lines;\n            textObj[idx].content = textObj[idx].content + \"\\n\" + content;\n          }\n        }\n        let textResult = [];\n        for (let index = 0; index < textObj.length; index++) {\n          textResult.push(textObj[index].type);\n          textResult.push(textObj[index].content);\n          textResult.push(\"\\n\");\n        }\n\n        return textResult.map(row => (\n          <div style={{ whiteSpace: \"pre-wrap\" }}>{row}</div>\n        ));\n      }\n    }\n    if (source === 3) {\n      const data = this.state.ERDISP;\n      if (data.length === 0) {\n        return null;\n      } else {\n        const fakeADMData = data;\n        return fakeADMData.map(row => (\n          <div style={{ whiteSpace: \"pre-wrap\" }}>\n            {JSON.stringify(row, null, \"\\t\")}\n          </div>\n        ));\n      }\n    }\n    if (source === 4) {\n      const data = this.state.PRGTXQRYDIS;\n      if (data.length === 0) {\n        return null;\n      } else {\n        var newList = [];\n        for (let index = 0; index < 5; index++) {\n          if (index === 0) {\n            const dataFilter = data.filter(function (info, index, arr) {\n              return info.PRGTYPE.toString().trim() === \"D\";\n            });\n            if (dataFilter.length !== 0) {\n              newList.push(dataFilter[0]);\n            }\n          }\n\n          if (index === 1) {\n            const dataFilter = data.filter(function (info, index, arr) {\n              return info.PRGTYPE.toString().trim() === \"S\";\n            });\n            if (dataFilter.length !== 0) {\n              newList.push(dataFilter[0]);\n            }\n          }\n\n          if (index === 2) {\n            const dataFilter = data.filter(function (info, index, arr) {\n              return info.PRGTYPE.toString().trim() === \"O\";\n            });\n            if (dataFilter.length !== 0) {\n              newList.push(dataFilter[0]);\n            }\n          }\n\n          if (index === 3) {\n            const dataFilter = data.filter(function (info, index, arr) {\n              return info.PRGTYPE.toString().trim() === \"A\";\n            });\n            if (dataFilter.length !== 0) {\n              newList.push(dataFilter[0]);\n            }\n          }\n\n          if (index === 4) {\n            const dataFilter = data.filter(function (info, index, arr) {\n              return info.PRGTYPE.toString().trim() === \"P\";\n            });\n            if (dataFilter.length !== 0) {\n              newList.push(dataFilter[0]);\n            }\n          }\n        }\n        const dataMap = newList.map(function (info, index, arr) {\n          return (\n            <div key={index} style={{ marginBottom: \"10px\" }}>\n              <div style={{ whiteSpace: \"pre-wrap\" }}>{info.PRGTYPE}</div>\n              <div style={{ whiteSpace: \"pre-wrap\" }}>{info.PRGTX}</div>\n            </div>\n          );\n        });\n        return dataMap;\n      }\n    }\n    if (source === 5) {\n      const data = this.state.CPSDISP;\n      if (data.length === 0) {\n        return null;\n      } else {\n        const fakeADMData = data;\n        return fakeADMData.map(row => (\n          <div style={{ whiteSpace: \"pre-wrap\" }}>{row[\"1\"]}</div>\n        ));\n      }\n    }\n    if (source === 6) {\n      const data = this.state.QPNOTDIS;\n      if (data.length === 0) {\n        return null;\n      } else {\n        // Time: moment(v.rec_dat.toString() + v.rec_tim.toString(), \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\"),\n        // special: v.special,\n        // a: v.cre_nam,\n        // b: v.pro_not\n        const fakeADMData = data.map(function (info, index, arr) {\n          const time = info.Time;\n          const cre_nam = info.cre_nam;\n          const pro_not = info.pro_not;\n          return (\n            <div style={{ marginBottom: \"10px\" }}>\n              <div>{time}</div>\n              <div>{cre_nam === undefined ? \"--\" : cre_nam}</div>\n              <div>{pro_not === undefined ? \"--\" : pro_not}</div>\n            </div>\n          );\n        });\n        return fakeADMData;\n      }\n    }\n    if (source === 7) {\n      const data = this.state.OPSORAQ2;\n      if (data.length === 0) {\n        return null;\n      } else {\n        const fakeADMData = data;\n        return fakeADMData.map(row => (\n          <div style={{ whiteSpace: \"pre-wrap\" }}>{row.CONTENT}</div>\n        ));\n      }\n    } else {\n      return null;\n    }\n  }\n  switchListRender() {\n    function groupfirstarray(arrayList) {\n      var result = arrayList.filter(function (value, index, arr) {\n        const res = arr.map(function (value, index, arr) {\n          return moment(\n            value.PRGDT.toString() + value.PRGTM.toString(),\n            \"YYYY-MM-DDHH:mm:ss\"\n          ).valueOf();\n        });\n        return (\n          res.indexOf(\n            moment(\n              value.PRGDT.toString() + value.PRGTM.toString(),\n              \"YYYY-MM-DDHH:mm:ss\"\n            ).valueOf()\n          ) === index\n        );\n      });\n      var arrList = [];\n      for (let index = 0; index < result.length; index++) {\n        const element = result[index];\n        const comparevalue = moment(\n          element.PRGDT.toString() + element.PRGTM.toString(),\n          \"YYYY-MM-DDHH:mm:ss\"\n        ).valueOf();\n        const filterarray = arrayList.filter(function (value, index, arr) {\n          return (\n            moment(\n              value.PRGDT.toString() + value.PRGTM.toString(),\n              \"YYYY-MM-DDHH:mm:ss\"\n            ).valueOf() === comparevalue\n          );\n        });\n        arrList.push(filterarray);\n      }\n      return arrList;\n    }\n    function grouparray(arrayList) {\n      var result = arrayList.filter(function (value, index, arr) {\n        const res = arr.map(function (value, index, arr) {\n          return moment(value.rec_dat.toString(), \"YYYYMMDD\").valueOf();\n        });\n        return (\n          res.indexOf(\n            moment(value.rec_dat.toString(), \"YYYYMMDD\").valueOf()\n          ) === index\n        );\n      });\n      var arrList = [];\n      for (let index = 0; index < result.length; index++) {\n        const element = result[index];\n        const comparevalue = moment(\n          element.rec_dat.toString(),\n          \"YYYYMMDD\"\n        ).valueOf();\n        const filterarray = arrayList.filter(function (value, index, arr) {\n          return (\n            moment(value.rec_dat.toString(), \"YYYYMMDD\").valueOf() ===\n            comparevalue\n          );\n        });\n        arrList.push(filterarray);\n      }\n      return arrList;\n    }\n    const select = this.state.SelectClass;\n    if (select === 0) {\n      const data = this.state.ADMLIST;\n      if (data.length === 0) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n            {/* <Icon type=\"loading\" /> */}\n          </div>\n        );\n      } else {\n        const cellRander = data.map((object, index, arr) => {\n          const HID = object.ADISTNO.toString().trim();\n          const CID = object.ADICASE.toString().trim();\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\",\n              }}\n              onClick={() => this.SelectADMDISP(HID, CID)}\n            >\n              <div style={{ fontSize: \"14px\" }}>\n                住院日:{moment(object.ADIDATE.toString().trim(), \"YYYYMMDD\").format(\"YYYY/MM/DD\")}\n              </div>\n              <div style={{ fontSize: \"14px\" }}>科別:{object.ADISECT}</div>\n            </div>\n          );\n        });\n        return (\n          // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n          <div>{cellRander}</div>\n        );\n      }\n    }\n    if (select === 1) {\n      const data = this.state.DISLIST;\n      if (data.length === 0) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n            {/* <Icon type=\"loading\" /> */}\n          </div>\n        );\n      } else {\n        const cellRander = data.map((object, index, arr) => {\n          // const HID = object.ADISTNO.toString().trim()\n          const CID = object.DCASENO.toString().trim();\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectDISDISP(CID)}\n            >\n              <div style={{ fontSize: \"14px\" }}>\n                出院日:{moment(object.DDATEOUT.toString().trim(), \"YYYY-MM-DD\").format(\n                  \"YYYY/MM/DD\"\n                )}\n              </div>\n              <div style={{ fontSize: \"14px\" }}>\n                科別:{object.DADMSECT.toString().trim()}\n              </div>\n            </div>\n          );\n        });\n        return (\n          <div>{cellRander}</div>\n        );\n      }\n    }\n    if (select === 2) {\n      const data = this.state.DTAROTQ4;\n      if (data.length === 0) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n            {/* <Icon type=\"loading\" /> */}\n          </div>\n        );\n      } else {\n        const cellRander = data.map((object, index, arr) => {\n          const DPT = object.DTPDEPT.toString().trim();\n          const DTPDATE = object.DTPDATE.toString().trim();\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectDTASOAPQ(DTPDATE, DPT)}\n            >\n              <div style={{ fontSize: \"14px\" }}>\n                門診日期:{moment(object.DTPDATE.toString().trim(), \"YYYY-MM-DD\").format(\n                  \"YYYY/MM/DD\"\n                )}\n              </div>\n              <div style={{ fontSize: \"14px\" }}>\n                科別:{object.SECTNM.toString().trim() + object.DTPDEPT.toString().trim()}\n              </div>\n              <div style={{ fontSize: \"14px\" }}>\n                醫師:{object.DTPDOCNM.toString().trim() + object.DTPDOCID.toString().trim()}\n              </div>\n            </div>\n          );\n        });\n        return (\n          <div>{cellRander}</div>\n        );\n      }\n    }\n    if (select === 3) {\n      const data = this.state.PCASELIST;\n      if (data.length === 0) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n            {/* <Icon type=\"loading\" /> */}\n          </div>\n        );\n      } else {\n        const cellRander = data.map((object, index, arr) => {\n          const CID = object.PCASENO.toString().trim();\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                textAlign: \"center\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectERDISP(CID)}\n            >\n              <div style={{ fontSize: \"14px\" }}>\n                看診日:{moment(object.PDISDT.toString().trim(), \"YYYYMMDD\").format(\n                  \"YYYY/MM/DD\"\n                )}\n              </div>\n              {/* //修改 */}\n              <div style={{ fontSize: \"14px\" }}>\n                科別:{moment(object.PDISDT.toString().trim(), \"YYYYMMDD\").format(\n                  \"YYYY/MM/DD\"\n                )}\n              </div>\n            </div>\n          );\n        });\n        return (\n          <div>{cellRander}</div>\n        );\n      }\n    }\n    if (select === 4) {\n      const data = groupfirstarray(this.state.PRGTXQRY);\n      if (data.length === 0) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n            <Icon type=\"loading\" />\n          </div>\n        );\n      } else {\n        const List = data.map(function (info, index, arr) {\n          const mapList = info.map(function (v, i, a) {\n            return {\n              PRGTX: v.PRGTX,\n              PRGTYPE: v.PRGTYPE,\n            };\n          });\n          return {\n            List: mapList,\n            DT: info[0].PRGDT,\n            TN: info[0].PRGTM,\n            Time: moment(info[0].PRGDT.toString().trim() + info[0].PRGTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf(),\n            PRGWARD: info[0].PRGWARD,\n            PRGBEDNO: info[0].PRGBEDNO,\n            PRGSECT: info[0].PRGSECT,\n            PRGENTNM: info[0].PRGENTNM\n          };\n        });\n        const sortList = List.sort(function (a, b) {\n          return a.Time < b.Time ? 1 : -1;\n        });\n        const cellRander = sortList.map((object, index, arr) => {\n          console.log(object)\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                textAlign: \"center\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectPRGTXQRYDIS(object.List)}\n            >\n              <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                <div style={{ fontSize: \"14px\" }}>\n                  時間:{moment(\n                    object.DT.toString() + object.TN.toString(),\n                    \"YYYY-MM-DDHH:mm:ss\"\n                  ).format(\"MM/DD HH:mm\")}\n                </div>\n                <div style={{ fontSize: \"14px\" }}>\n                  {object.PRGWARD.toString().trim() + \"-\" + Number(object.PRGBEDNO)}\n                </div>\n              </div>\n              <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                <div style={{ fontSize: \"14px\" }}>\n                  科別:{object.PRGSECT.toString().trim()}\n                </div>\n                <div style={{ fontSize: \"14px\" }}>\n                  {object.PRGENTNM.toString().trim() + \"醫師\"}\n                </div>\n              </div>\n\n            </div>\n          );\n        });\n        return (\n          <div>{cellRander}</div>\n        );\n      }\n    }\n    if (select === 5) {\n      const data = this.state.CPSLIST;\n      if (data.length === 0) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n            <Icon type=\"loading\" />\n          </div>\n        );\n      } else {\n        const cellRander = data.map((object, index, arr) => {\n          const CID = object.CPSCASE.toString().trim();\n          const SEQ = object.CPSOSEQ.toString().trim();\n          const HID = object.CPSHIST.toString().trim();\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                textAlign: \"center\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectCPSDISP(HID, CID, SEQ)}\n            >\n              <div style={{ fontSize: \"14px\" }}>\n                會診日期:{moment(object.CPSENTDT.toString().trim(), \"YYYYMMDD\").format(\"YYYY/MM/DD\")}\n              </div>\n              <div style={{ fontSize: \"14px\" }}>\n                會診科別:{object.CPKSECT.toString().trim() + \"-\" + object.CPSOSECT.toString().trim()}\n              </div>\n              <div style={{ fontSize: \"14px\" }}>\n                會診醫師:{object.CPKDOCN1.toString().trim() + object.CPKDOCN2.toString().trim() === \"\" ? \"\" : \",\" + object.CPKDOCN2.toString().trim() + object.CPKDOCN2.toString().trim() === \"\" ? \"\" : \",\" + object.CPKDOCN3.toString().trim()}\n              </div>\n            </div>\n          );\n        });\n        return (\n          <div>{cellRander}</div>\n        );\n      }\n    }\n    if (select === 6) {\n      const data = this.state.QPNOT\n      if (data === undefined) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n            <Icon type=\"loading\" />\n          </div>\n        );\n      }\n      if (data.length === 0) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n            <Icon type=\"loading\" />\n          </div>\n        );\n      } else {\n        const List = grouparray(data);\n        const mapList = List.map(function (info, index, arr) {\n          const mapList = info.map(function (v, i, a) {\n            return {\n              Time: moment(\n                v.rec_dat.toString() + v.rec_tim.toString(),\n                \"YYYYMMDDHHmm\"\n              ).format(\"MM/DD HH:mm\"),\n              cre_nam: v.cre_nam,\n              pro_not: v.pro_not\n            };\n          });\n          return {\n            List: mapList,\n            DT: info[0].rec_dat.toString().trim()\n          };\n        });\n        const cellRander = mapList.map((object, index, arr) => {\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                textAlign: \"center\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectQPNOTDIS(object.List)}\n            >\n              <div style={{ fontSize: \"14px\" }}>\n                日期:{moment(object.DT, \"YYYYMMDD\").format(\"YYYY/MM/DD\")}\n              </div>\n            </div>\n          );\n        });\n        return (\n          <div>{cellRander}</div>\n        );\n      }\n    }\n    if (select === 7) {\n      const data = this.state.OPSORAQ1\n      if (data.length === 0) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n            <Icon type=\"loading\" />\n          </div>\n        );\n      } else {\n        const cellRander = data.map((object, index, arr) => {\n          //OPABGNDT民國\n          console.log(object.OPABGNDT)\n          const OPABGNDT = timeFormat.OPABGNDTtimeformat(Number(object.OPABGNDT));\n          const OPACOD1 = object.OPACOD1.toString().trim();\n          const OPAMANNM = object.OPAMANNM.toString().trim();\n          const OPATIMES = object.OPATIMES.toString().trim();\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                textAlign: \"center\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectOPSORAQ1(OPABGNDT, OPATIMES)}\n            >\n              <div style={{ fontSize: \"14px\" }}>手術日期:{OPABGNDT}</div>\n              <div style={{ fontSize: \"14px\" }}>醫師:{OPAMANNM}</div>\n            </div>\n          );\n        });\n        return (\n          <div>{cellRander}</div>\n        );\n      }\n    }\n  }\n  render() {\n    const control = this.NotecontrolBar();\n    const renderContentArray = this.renderContentArray();\n    const listRender = this.switchListRender();\n    return (\n      <div className=\"Notelayout\">\n        {control}\n        <div>\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"240px 1fr\",\n              gridGap: \"10px\"\n            }}\n          >\n            <div>\n              <div\n                style={{\n                  backgroundColor: \"#71b0e46e\",\n                  height: \"36px\",\n                  paddingLeft: \"4px\",\n                  borderTopRightRadius: \"4px\",\n                  borderTopLeftRadius: \"4px\",\n                  color: \"rgba(0,0,0,0.7)\",\n                  alignItems: \"center\",\n                  width: \"240px\"\n                }}\n              >\n                <div\n                  style={{\n                    fontSize: \"16px\",\n                    color: \"rgba(0,0,0,0.8)\",\n                    lineHeight: \"36px\"\n                  }}\n                >\n                  資料清單\n                </div>\n              </div>\n              <div\n                style={{\n                  padding: \"10px\",\n                  maxHeight: \"700px\",\n                  overflow: \"auto\"\n                }}\n              >\n                {listRender}\n              </div>\n            </div>\n            <div style={{ overflow: \"auto\" }}>\n              <div\n                style={{\n                  backgroundColor: \"#71b0e46e\",\n                  height: \"36px\",\n                  paddingLeft: \"4px\",\n                  borderTopRightRadius: \"4px\",\n                  borderTopLeftRadius: \"4px\",\n                  fontSize: \"16px\",\n                  color: \"rgba(0,0,0,0.7)\",\n                  alignItems: \"center\"\n                }}\n              >\n                <div\n                  style={{\n                    fontSize: \"16px\",\n                    color: \"rgba(0,0,0,0.8)\",\n                    lineHeight: \"36px\"\n                  }}\n                >\n                  文件內容\n                </div>\n              </div>\n              <div style={{ maxHeight: \"700px\", overflow: \"auto\" }}>\n                {renderContentArray}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Noteview;\n","import moment from \"moment\"\n\nexport function OPABGNDTtimeformat(OPABGNDT) {\n    function valueten(value) {\n        if (value < 10) {\n            return \"0\" + value\n        }\n        return value\n    }\n    if (OPABGNDT === NaN || OPABGNDT === null || OPABGNDT === undefined) {\n        return \"--\"\n    }\n    const year = parseInt(OPABGNDT / 10000) + 1911\n    const month = parseInt((OPABGNDT % 10000) / 100)\n    const day = parseInt(OPABGNDT % 100)\n    const date = year.toString() + valueten(month) + valueten(day)\n    return moment(date, \"YYYYMMDD\").format(\"YYYY/MM/DD\")\n}","import React, { Component } from 'react';\nimport { DatePicker, Button } from 'antd';\nimport GAS from '../CrossSectionView/GAS'\nimport RTbreathe from '../CrossSectionView/RTbreathe'\nimport './RTview.scss'\n// import X2JS from 'x2js';\n// import * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass RTview extends Component {\n    state = {\n        QSPE: [],\n        PickerDateRange: [moment(moment().subtract(6, 'days').format('YYYYMMDD')),\n        moment(moment().format('YYYYMMDD'))],\n    }\n\n    PickerDateRangeChange = (date, dateString) => {\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDateRange } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n        const st = PickerDateRange[0].valueOf()\n        const et = PickerDateRange[1].valueOf()\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                if (bronDate <= (st - day)) {\n                    const bTime = [moment(moment(st - day)), moment(moment(et - day))]\n                    this.PickerDateRangeChange(bTime)\n                }\n                break;\n            case 'N':\n                const nTime = [moment(moment().subtract(6, 'days').format('YYYYMMDD')), moment()]\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTemp = moment(moment()).valueOf()\n                if (aTemp >= (et + day)) {\n                    const aTime = [moment(moment(st + day)), moment(moment(et + day))]\n                    this.PickerDateRangeChange(aTime)\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const { RangePicker } = DatePicker\n        const momentDate = this.state.PickerDateRange\n\n        const PickerDateRange = [momentDate[0].valueOf(), momentDate[1].valueOf()]\n\n        return (\n            <div className='rtviewlayout'>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"250px 120px\", gridColumnGap: \"5px\", marginBottom: \"5px\" }}>\n                    <RangePicker\n                        getCalendarContainer={triggerNode => triggerNode.parentNode}\n                        value={this.state.PickerDateRange}\n                        format={\"YYYY/MM/DD\"}\n                        allowClear={false}\n                        locale={\"zh_TW\"}\n                        onChange={this.PickerDateRangeChange}\n                        disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                    />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"minus-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: '1fr 1fr', gridColumnGap: \"5px\" }}>\n                    <GAS PickerDateRange={PickerDateRange} caseinfo={caseinfo} searchbar={true} ></GAS>\n                    <RTbreathe PickerDateRange={PickerDateRange} caseinfo={caseinfo} searchbar={true} ></RTbreathe>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTview\n","import React, { Component } from 'react'\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Nurtionfeedingcell.scss'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Nurtionfeedingcell extends Component {\n    state = {\n        EditMode: false,\n        onEdit: false,\n        powerLogin: 0,\n        remark: '',\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { caseinfo, data } = this.props\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, data.ORDSEQNO, \"nurtionfeeding\").then(result => {\n            console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    onMouseEnter() {\n        this.setState(\n            {\n                EditMode: true\n            }\n        )\n    }\n    onMouseLeave() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    showModal = () => {\n        this.setState({\n            onEdit: true,\n        });\n    };\n\n    handleOk = newRemarkValue => {\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            onEdit: false,\n        });\n    };\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    Moduledisplay(PName, ST) {\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": PName,\n            \"remarkId\": this.props.data.ORDSEQNO,\n            \"remark\": this.state.remark,\n            \"transinId\": this.props.caseinfo.TRANSINID,\n            \"type\": \"nurtionfeeding\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n        );\n    }\n\n    render() {\n        const { data } = this.props\n        const startTime = moment(data.ORBGNDT.toString().trim(), \"YYYY-MM-DD\").format(\"MM/DD\")\n        const endTime = moment(data.ORENDDT.toString().trim(), \"YYYY-MM-DD\").format(\"MM/DD\")\n        const name = data.ORPROCED.toString().trim()\n\n        return (\n            <div onMouseEnter={() => this.onMouseEnter()} onMouseLeave={() => this.onMouseLeave()} className=\"remark\">\n                <div className='nurtionfeedingcell' style={{ gridTemplateRows: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"1fr\" : \"1fr 1fr\"] }}>\n                    <div className='cellforstate'>\n                        <div className='celllayout'>\n                            <t3>{startTime}</t3>\n                        </div>\n                        <div className='celllayout'>\n                            <t3>{endTime}</t3>\n                        </div>\n                        <div className='celllayout'>\n                            <t3>{name}</t3>\n                        </div>\n                    </div>\n                    <div className='cellforremark' style={{ display: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"none\" : \"flex\"] }}>\n                        <t3>{this.state.remark}</t3>\n                    </div>\n                </div>\n                <div style={this.state.EditMode ? {\n                    display: this.state.powerLogin == 1 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", top: 0, right: 0, height: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"50px\" : \"100px\"], background: \"white\", width: \"77px\", border: \"rgba(232, 232, 232, 1) 1px solid\"\n                } : { display: \"none\" }}>\n                    < div onClick={() => this.showModal()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }} >\n                        <img src={chooseedit} alt='chooseedit'></img>\n                    </div>\n                </div>\n                {this.Moduledisplay(name, startTime)}\n            </div >\n        );\n    }\n}\n\nexport default Nurtionfeedingcell\n","import React, { Component } from 'react'\nimport * as ApiProvider from '../../API/ApiProvider'\n// import { DatePicker, Input } from 'antd';\n// import searchlogo from '../../Image/svg/Search.svg'\nimport Nurtionfeedingcell from './Nurtionfeedingcell'\nimport moment from 'moment';\nimport * as ApiGithub from '../../API/ApiGithub'\n\n\nclass Nurtionfeedingorder extends Component {\n    state = {\n        TRTMNTQ1: [],\n        parser: { \"mappings\": [] },\n        class: \"飲食類別\"\n    }\n    componentDidMount() {\n        this.getAPIFeedingData()\n        this.getTreatmentOrderFilter()\n    }\n    getAPIFeedingData() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID.toString().trim()\n        const CID = caseinfo.CASEID.toString().trim()\n        ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => {\n                console.log(\"getAPIFeedingData OK \" + JSON.stringify(data.data))\n                this.setState({\n                    TRTMNTQ1: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n    }\n    getTreatmentOrderFilter() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Treatment\");\n                parser.mappings = [{ \"key\": \"全部\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson Treatment OK \" + JSON.stringify(parser))\n                this.setState({\n                    parser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部\"] = []\n\n        inputs.forEach(input => {\n            let content = input.ORPROCED;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部\"].push(input)\n        });\n        return allResult;\n    }\n\n    render() {\n        const { caseinfo, PickerDateRange } = this.props\n        const title = [\"開始時間\", \"結束時間\", \"處置名稱\"]\n        const titleCellRender = title.map(function (element, index, arr) {\n            return (\n                <div key={index} style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", borderCollapse: \"collapse\" }}>\n                    <div style={{ fontSize: \"14px\" }}>{element}</div>\n                </div>\n            );\n        })\n\n        const parse = this.parse;\n        let clusteredData = {}\n        if (this.state.parser !== undefined) {\n            clusteredData = parse(this.state.TRTMNTQ1, this.state.parser)\n        }\n        //filter data by selected class\n        let filteredData = clusteredData[this.state.class];\n        let filterData = []\n        if (filteredData !== undefined) {\n            let ListCellData = filteredData\n            filterData = ListCellData.filter((element, index, arr) => {\n                const time = moment(element.ORBGNDT, 'YYYY-MM-DD').valueOf()\n                return PickerDateRange[0] <= time && time <= PickerDateRange[1]\n            })\n\n            filterData = filterData.sort((a, b) => {\n                let tempTimeA = moment(a.ORBGNDT, 'YYYY-MM-DD').valueOf()\n                let tempTimeB = moment(b.ORBGNDT, 'YYYY-MM-DD').valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n        }\n\n        const DataCellRender = filterData.map(function (element, index, arr) {\n            return (\n                <Nurtionfeedingcell key={index} data={element} caseinfo={caseinfo} ></Nurtionfeedingcell>\n            );\n        })\n\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>Feeding Order</t2>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \" 1fr 1fr 2fr \", height: \"30px\", border: \"rgba(238,238,238,1) 1px solid\", backgroundColor: \"rgba(226, 237, 243,.5)\", justifyItems: \"center\" }}>\n                    {titleCellRender}\n                </div>\n                {filterData.length !== 0 &&\n                    <div style={{ minHeight: \"120px\", maxHeight: \"400px\", overflowY: \"auto\" }}>\n                        {DataCellRender}\n                    </div>}\n                {filterData.length === 0 &&\n                    <div style={{ height: \"50px\", paddingLeft: \"7.5%\", display: \"flex\", alignItems: \"center\" }}>\n                        今日無資料\n                    </div>}\n            </div>\n        );\n    }\n}\n\nexport default Nurtionfeedingorder\n","import React, { Component } from 'react'\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Nurtion_TPN_cell.scss'\nimport moment from 'moment'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Nurtiontpncell extends Component {\n    state = {\n        EditMode: false,\n        onEdit: false,\n        remark: null,\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { caseinfo, data } = this.props\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, data.UDORDSEQ, \"nurtiontpn\").then(result => {\n            console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    onMouseEnter() { this.setState({ EditMode: true }) }\n\n    onMouseLeave() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    showModal = () => {\n        this.setState({\n            onEdit: true,\n        });\n    };\n\n    handleOk = newRemarkValue => {\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    Moduledisplay(PName, ST) {\n\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": PName,\n            \"remarkId\": this.props.data.UDORDSEQ,\n            \"remark\": this.state.remark,\n            \"transinId\": this.props.caseinfo.TRANSINID,\n            \"type\": \"nurtiontpn\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            // <RemarkModal caseinfo={caseinfo} type=\"nurtiontpn\" name={title} visible={this.state.onEdit} remark={this.state.remark} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n        );\n    }\n    render() {\n        const { data } = this.props\n        const TPNList = [\"VOL.\", \"AA\", \"Glu\", \"Na\", \"K\", \"Ca\", \"P\", \"Mg\"]\n        const TPNListcellRender = TPNList.map(function (info, index) {\n            return (\n                <centerstyle key={index} style={{ border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                    <t2>{info}</t2>\n                </centerstyle>\n            );\n        })\n        function TPNSubDataMap(data, TPNDATA) {\n            if (TPNDATA === undefined || TPNDATA === null) {\n                return []\n            }\n            const TPNSubData = [data.UDDOSAGE, data.TPNDATA.AA, data.TPNDATA.Glu, data.TPNDATA.Na, data.TPNDATA.K, data.TPNDATA.Ca, data.TPNDATA.P, data.TPNDATA.Mg]\n            const TPNSubDatacellRender = TPNSubData.map(function (info, index) {\n                return (\n                    <centerstyle key={index} style={{ border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                        <t2>{info}</t2>\n                    </centerstyle>\n                );\n            })\n            return TPNSubDatacellRender\n\n        }\n        const TPNSubDatacellRender = TPNSubDataMap(data, data.TPNDATA)\n        const RemarkData = this.state.remark\n\n        const startTime = moment(data.UDBGNDT.toString().trim(), \"YYYY-MM-DD-HH.mm.ss.00.000000\").format(\"MM/DD HH:mm:ss\")\n        const endTime = moment(data.UDENDDT.toString().trim(), \"YYYY-MM-DD-HH.mm.ss.00.000000\").format(\"MM/DD HH:mm:ss\")\n        const name = data.UDGNAME.toString().trim()\n        const status = \"生效中\"\n        return (\n            <div onMouseEnter={() => this.onMouseEnter()} onMouseLeave={() => this.onMouseLeave()} className='nurtiontpntablelayout'>\n                <div style={{ height: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"100px\" : \"130px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \" 1fr 1fr 60px 450px\", height: \"100px\" }} >\n                        <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                            <t3>{startTime}</t3>\n                        </div>\n                        <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                            <t3>{endTime}</t3>\n                        </div>\n                        <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                            <t3>{status}</t3>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"30px 70px\" }}>\n                            <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                                <t3>{name}</t3>\n                            </div>\n                            <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(8,1fr)\" }}>\n                                    {TPNListcellRender}\n                                </div>\n                                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(8,1fr)\" }}>\n                                    {TPNSubDatacellRender}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ fontWeight: \"600\", color: \"rgb(0,120,0)\", display: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"none\" : \"flex\"], border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\", padding: \"0px 5px\", alignItems: \"center\", height: \"30px\", width: \"100%\" }}>\n                        <t3>{RemarkData}</t3>\n                    </div>\n                </div>\n                <div style={this.state.EditMode ? {\n                    display: this.state.powerLogin == 1 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", top: 0, right: 0, height: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"100px\" : \"130px\"], background: \"white\", width: \"77px\", border: \"rgba(232, 232, 232, 1) 1px solid\"\n                } : { display: \"none\" }}>\n                    < div onClick={() => this.showModal()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }} >\n                        <img src={chooseedit} alt='chooseedit'></img>\n                    </div>\n                </div>\n                {this.Moduledisplay(name, startTime)}\n            </div >\n        );\n    }\n}\n\nexport default Nurtiontpncell\n","import React, { Component } from 'react'\nimport * as d3 from \"d3\";\nimport './Watervaluechart.scss'\nimport { Modal } from 'antd'\n// import { getRandomfornumber } from '../../Function/Wardstate'\nimport moment from 'moment';\n\nclass Watervaluechart extends Component {\n    state = {\n        visible: false,\n        select: null,\n        rowdata: null\n    };\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: true,\n            select: null,\n            rowdata: null\n        });\n    };\n    componentDidUpdate() {\n        const { svg_key } = this.props\n        d3.select(\"#\" + svg_key).remove()\n        this.drawChart()\n\n    }\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentWillUnmount() {\n    }\n\n    cal_svg_hight() {\n        const { axisTop, axisBot } = this.props\n        if (axisTop) {\n            if (axisBot) {\n                return 160\n            }\n            else {\n                return 130\n            }\n        }\n        else {\n            if (axisBot) {\n                return 130\n            }\n            else {\n                return 90\n            }\n        }\n    }\n\n    cal_svg_transform() {\n        const { axisTop, axisBot } = this.props\n        if (axisTop) {\n            if (axisBot) {\n                return 70\n            }\n            else {\n                return 50\n            }\n        }\n        else {\n            if (axisBot) {\n                return 5\n            }\n            else {\n                return 5\n            }\n        }\n    }\n\n    drawChart() {\n        function formatShiftDays(startTime, endTime) {\n            const shiftDays = parseInt((endTime - startTime) / (24 * 60 * 60 * 1000))\n            return shiftDays\n        }\n        const { svg_key, id_key, startTime, watervalueData } = this.props\n        const width = (window.screen.availWidth - 50) / 2 - 50, height = 400\n        const max = 500, min = 0\n        const shiftDays = formatShiftDays(moment(startTime, \"YYYYMMDD\").valueOf(), moment().valueOf())\n\n        if (watervalueData.length === 0) {\n            return null\n        }\n        const rectwidth = (width / shiftDays) - 2\n        var x = d3.scaleLinear()\n            .domain([0, watervalueData.length])\n            .range([0, width]);\n\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([min, max])\n            .range([height, 0])\n\n\n\n        var yAxis = d3.axisLeft(y)\n            .ticks(11)\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(10);\n\n        var xAxisBottom = d3.axisBottom(x)\n            .ticks(watervalueData.length)\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(height + 10)\n            .tickFormat(function (d) {\n                if (d % 10 === 0) {\n                    if (d > 0) {\n                        return 'D' + d\n                    }\n                    return null\n                }\n                else return null;\n            });\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_key)\n            .attr(\"viewBox\", [0, 0, width + 80, height + 50])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 30 + \")\"); \n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n        svg.append(\"g\")\n            .call(xAxisBottom)\n            .attr(\"class\", \"axis\");\n\n\n        for (let index = 0; index < 11; index++) {\n            //上下虛線\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(index * 50))\n                .attr('x2', width)\n                .attr('y2', y(index * 50))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n        }\n\n        for (let index = 0; index < watervalueData.length; index++) {\n            //上下虛線\n            if (index % 10 === 0 && index > 0) {\n                svg.append('line')\n                    .attr('x1', x(0.5 + index))\n                    .attr('y1', y(min))\n                    .attr('x2', x(0.5 + index))\n                    .attr('y2', y(max))\n                    .style('stroke', 'rgba(187, 187, 187, 1)')\n                    .style('stroke-width', 1)\n                    .style('stroke-dasharray', 5.5);\n            }\n        }\n\n\n\n\n        // function rowdatageneral(number) {\n        //     const rowdata = {\n        //         'IV': {\n        //             \"max\": getRandomfornumber(number),\n        //             \"min\": 0\n        //         },\n        //         'feeding': {\n        //             \"max\": getRandomfornumber(number),\n        //             \"min\": 0\n        //         },\n        //         'Other': {\n        //             \"max\": getRandomfornumber(number),\n        //             \"min\": 0\n        //         }\n        //     }\n        //     return rowdata\n        // }\n        const select = this.state.select\n        if (select === null || select === undefined || select === \"\") {\n            d3.selectAll(\"rect#A123\").remove()\n        }\n        for (let index = 0; index < watervalueData.length; index++) {\n            const rowdata = watervalueData[index]\n            var svgrect = svg.append('g').on('click', () => {\n                if (rowdata === null) {\n\n                }\n                else {\n                    this.setState({\n                        visible: true,\n                        select: index,\n                        rowdata: rowdata\n                    });\n\n                }\n            })\n            if (index === select) {\n                svgrect.append('rect')\n                    .attr('id', 'A123')\n                    .attr('width', rectwidth + 2)\n                    .attr('height', y(0) - y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .attr('x', x(index) - (rectwidth / 2) - 1)\n                    .attr('y', y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .style('fill', 'rgba(0,0,0,0)')\n                    .style('stroke', '#F5A623')\n                    .style('stroke-width', 2)\n                    .style('cursor', 'pointer');\n            }\n            else {\n                svgrect.append('rect')\n                    .attr('id', 'A123')\n                    .attr('width', rectwidth + 2)\n                    .attr('height', y(0) - y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .attr('x', x(index) - (rectwidth / 2) - 1)\n                    .attr('y', y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .style('fill', 'rgba(0,0,0,0)')\n                    .style('stroke', 'rgba(0,0,0,0)')\n                    .style('stroke-width', 2)\n                    .style('cursor', 'pointer')\n                    .style('opacity', 1);\n            }\n            svgrect.append('line')\n                .attr('x1', x(index))\n                .attr('y1', y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                .attr('x2', x(index))\n                .attr('y2', y(rowdata.IV + rowdata.Other))\n                .style('stroke', '#2E64A4')\n                .style('stroke-width', rectwidth)\n\n            svgrect.append('line')\n                .attr('x1', x(index))\n                .attr('y1', y(rowdata.IV + rowdata.Other))\n                .attr('x2', x(index))\n                .attr('y2', y(rowdata.Other))\n                .style('stroke', '#C3EFFF')\n                .style('stroke-width', rectwidth)\n\n\n            svgrect.append('line')\n                .attr('x1', x(index))\n                .attr('y1', y(rowdata.Other))\n                .attr('x2', x(index))\n                .attr('y2', y(0))\n                .style('stroke', '#3B97E1')\n                // .style('stroke', 'red')\n                .style('stroke-width', rectwidth)\n        }\n    }\n\n    ModalRender() {\n        function nulldata(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return 0\n            }\n            return value\n        }\n        const data = this.state.rowdata\n        if (data === null || data === undefined) {\n            return null\n        }\n        // function sumRowdata(data) {\n        //     if (data === null || data === undefined) {\n        //         return 0\n        //     }\n        //     return data * 0.8\n        // }\n        const select = this.state.select\n        const waterdata = this.props.watervalueData\n        const car = waterdata[select].Caloriessum\n        return (\n            <Modal\n                title=\"Basic Modal\"\n                visible={this.state.visible}\n                onOk={this.handleOk}\n                onCancel={this.handleCancel}\n                footer={null}\n            >\n                <div>IV:{nulldata(data.IV)}</div>\n                <div>Feeding:{nulldata(data.Feeding)}</div>\n                <div>Other:{nulldata(data.Other)}</div>\n                <div>總熱量:{car}kcal</div>\n            </Modal>\n        );\n    }\n    render() {\n        const { id_key } = this.props\n        const model = this.ModalRender()\n        return (\n            <div id={id_key}>\n                {model}\n            </div>\n        );\n    }\n}\n\nexport default Watervaluechart\n","import React, { Component } from 'react'\nimport Nurtiontpncell from './Nurtion_TPN_cell'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as ApiGithub from '../../API/ApiGithub'\n\nclass Nurtiontpnorder extends Component {\n    state = {\n        onEdit: false,\n        tpndata: [],\n        UDORDER0: [],\n        tpnParsers: []\n    }\n    componentDidMount() {\n        const getAPITPNData = this.getAPITPNData.bind(this)\n        ApiGithub.getGitHubJson(\"TpnOrder.json\")\n            .then(data => {\n                let parser = data.data\n                console.log(\"getGitHubJson TPN Order OK \" + JSON.stringify(parser))\n                this.setState({\n                    tpnParsers: parser\n                }, () => {\n                    getAPITPNData()\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n    }\n    getAPITPNData() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID.toString().trim()\n        const CID = caseinfo.CASEID.toString().trim()\n        const { tpnParsers } = this.state\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                //create list need to do search\n                let tpnList = [] // All TPN data\n                let selected_parser = undefined\n                //fakeData.forEach(item => {\n                data.data.forEach(item => {\n                    //get parser\n                    selected_parser = this.select_parser(item, tpnParsers)\n                    if (selected_parser !== undefined) {\n                        const found = item.UDDRGNAM.match(RegExp(selected_parser.apply_condition.name, selected_parser.apply_condition.name_regex_flags))\n                        if (found !== null && found !== \"\") tpnList.push(item)\n                    }\n                });\n\n                if (selected_parser !== undefined) {\n                    //parser 7 value from each TPN document （AA, Glu, Na, K, Ca, P, Mg）\n                    tpnList.forEach((item, index) => {\n                        ApiProvider.getStoredProcedureUDTEXTQ1(CID, item.UDORDSEQ)\n                            .then(data => {\n                                console.log(\"getStoredProcedureUDTEXTQ1 OK \" + JSON.stringify(data.data))\n\n                                //parse every line\n                                const result = this.parse(data.data, selected_parser)\n                                item.TPNDATA = result;\n                                tpnList.splice(index, 1, item)\n                                this.setState({\n                                    tpndata: tpnList\n                                })\n                            })\n                            .catch(err => {\n                                console.log(\"getStoredProcedureUDTEXTQ1 NG \" + err)\n                            });\n                    });\n                }\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureUDORDER0 NG \" + err)\n            });\n    }\n    select_parser = (input, parsers) => {\n        const inputBeginTime = moment(input.UDBGNDT, \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n        const inputEndTime = moment(input.UDENDDT, \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n        return parsers.find(x =>\n            input.UDDRGNAM.match(x.apply_condition.name)\n            && (!x.apply_condition.start_time || inputBeginTime >= x.apply_condition.start_time)\n            && (!x.apply_condition.end_time || inputEndTime < x.apply_condition.end_time)\n        )\n    }\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = \"\"\n        });\n\n        inputs.forEach(input => {\n            let content = input.UDWORD;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key] = match[mapping.position]\n                }\n            });\n        });\n        return allResult;\n    }\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = e => {\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    render() {\n        const { caseinfo, PickerDateRange } = this.props\n        const title = [\"開始時間\", \"結束時間\", \"狀態\", \"處置名稱\"]\n        const titilecell = title.map(function (info, index) {\n            return (\n                <div key={index} style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", borderCollapse: \"collapse\" }}>\n                    <div style={{ fontSize: \"14px\" }}>{info}</div>\n                </div>\n            );\n        })\n        const ListCellData = this.state.tpndata\n        let filterData = ListCellData.filter((element, index, arr) => {\n            const time = moment(moment(element.UDBGNDT, 'YYYY-MM-DD-HH.mm.ss.000000').format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n            return PickerDateRange[0] <= time && time <= PickerDateRange[1]\n        })\n\n        filterData = filterData.sort((a, b) => {\n            let tempTimeA = moment(moment(a.UDBGNDT, 'YYYY-MM-DD-HH.mm.ss.000000').format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n            let tempTimeB = moment(moment(b.UDBGNDT, 'YYYY-MM-DD-HH.mm.ss.000000').format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n            return tempTimeA < tempTimeB ? 1 : -1\n        })\n\n        const DataCellRender = filterData.map(function (element, index, arr) {\n            return (\n                <Nurtiontpncell key={index} data={element} caseinfo={caseinfo} ></Nurtiontpncell>\n            );\n        })\n\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>TPN order</t2>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \" 1fr 1fr 60px 450px\", height: \"30px\", border: \"rgba(238,238,238,1) 1px solid\", backgroundColor: \"rgba(226, 237, 243,.5)\", justifyItems: \"center\" }}>\n                    {titilecell}\n                </div>\n                {filterData.length !== 0 && <div style={{ minHeight: \"120px\", maxHeight: \"400px\", overflowY: \"auto\" }}>\n                    {DataCellRender}\n                </div>}\n                {filterData.length === 0 &&\n                    <div style={{ height: \"50px\", paddingLeft: \"1.5%\", display: \"flex\", alignItems: \"center\" }}>\n                        今日無資料\n                    </div>}\n            </div>\n        );\n    }\n}\n\nexport default Nurtiontpnorder\n","import React, { Component } from 'react'\nimport Nurtionfeedingorder from './Nurtionfeeding'\nimport { Select, Button, DatePicker, Modal } from 'antd';\nimport WardlifeChart from '../../Wardview/Wardlifechart'\nimport Wardmonthafter from '../../Wardview/Wardmonthafter'\nimport Nurtiontpnorder from './Nurtion_TPN'\nimport Watervaluechart from './Watervaluechart'\nimport { gender } from '../../Function/Wardbedfunction'\nimport X2JS from 'x2js';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\nimport * as FiliterReg from '../../Function/FiliterReg'\nimport './Nurtion.scss'\nimport * as QDCData from '../../Resource/QDC'\nimport * as ioDataFormat from '../../Module/ioDataFormat'\n\nclass Nurtionview extends Component {\n    state = {\n        visible: false,\n        test_items_interval: 0,\n        UDORDER0: [],\n        QDC: [],\n        QTWER: [],\n        PickerDateRange: moment(moment().format('YYYYMMDD'))\n    }\n    componentDidMount() {\n        this.API_DATA()\n    }\n    API_DATA() {\n        const { caseinfo } = this.props\n        const xm2 = new X2JS()\n        const st = moment(caseinfo.TRANSINDT.toString(), 'YYYYMMDD').format('YYYYMMDDHHmm')\n        const et = moment().format(\"YYYYMMDDHHmm\")\n        ApiProvider.getQDC(caseinfo.CASEID, st, et)\n            .then(data => {\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                console.log(parsedata)\n                this.setState({\n                    QDC: parsedata\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        // this.setState({ QDC: QDCData.data.outmsg.resconts.rescont })\n        ApiProvider.getStoredProcedureUDORDER0(caseinfo.HISID, caseinfo.CASEID, \"123\")\n            .then(data => {\n                this.setState({\n                    UDORDER0: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n    }\n    switch_monthy() {\n        const { caseinfo } = this.props\n        const grewinfo = {\n            \"WEEK_BORN\": Number(caseinfo.WEEK_BORN),\n            \"DAY_BORN\": Number(caseinfo.DAY_BORN),\n            \"BIRTHDAY\": caseinfo.PBASINGNINFO.PBIRTHDT\n        }\n        const WeightList = caseinfo.WEIGHT\n        const sex = gender(caseinfo.PBASINGNINFO.PSEX)\n        const switch_data = this.state.test_items_interval\n        const width = (window.screen.availWidth - 300) / 2, height = 350\n        switch (switch_data) {\n            case 0:\n                return <WardlifeChart width={width} height={height} grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife\"} svg_key={\"wardlife_svg\"} gender={sex}></WardlifeChart>\n            case 1:\n                return <Wardmonthafter width={width} height={height} grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife_after\"} svg_key={\"wardlife_after_svg\"} gender={sex}></Wardmonthafter>\n            default:\n                return null;\n        }\n    }\n\n    handleChange = (checkedValues) => {\n        this.setState(\n            {\n                test_items_interval: checkedValues\n            }\n        )\n\n    }\n    onOk = (value) => {\n    }\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n    WaterValueControlBar() {\n        return (\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", marginRight: \"10px\" }}>\n                    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        <div style={{ height: \"10px\", width: \"10px\", background: \"#C3EFFF\", marginRight: \"5px\" }}></div>\n                        <t3>IV</t3>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        <div style={{ height: \"10px\", width: \"10px\", background: \"#2E64A4\", marginRight: \"5px\" }}></div>\n                        <t3>Feed</t3>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        <div style={{ height: \"10px\", width: \"10px\", background: \"#3B97E1\", marginRight: \"5px\" }}></div>\n                        <t3>Other</t3>\n                    </div>\n                </div>\n                {/* <Button type=\"primary\" onClick={this.showModal}>設定營養項目</Button> */}\n            </div>\n        );\n    }\n    SwitchTestItemInterval(testiteminterval) {\n        const time_selectbtn_style = {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"25px\",\n            padding: \"0px 5px\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#001a6dbb\",\n            color: \"white\",\n            fontSize: \"1rem\",\n            borderWidth: \"1px\",\n            borderStyle: \"solid\",\n            borderColor: \"#001a6d88\",\n            cursor: \"pointer\"\n        }\n        const time_unselectbtn_style = {\n            display: \"flex\", justifyContent: \"center\",\n            alignItems: \"center\", height: \"25px\",\n            padding: \"0px 5px\",\n            borderRadius: \"4px\", backgroundColor: \"white\",\n            color: \"#001a6d88\", fontSize: \"1rem\",\n            borderWidth: \"1px\", borderStyle: \"solid\",\n            borderColor: \"#001a6d88\",\n            cursor: \"pointer\"\n        }\n        if (testiteminterval === this.state.test_items_interval) {\n            return time_selectbtn_style\n        }\n        else return time_unselectbtn_style\n    }\n    GrowthCurveControlBar() {\n        const { Option } = Select;\n        return (\n            <div className='titlebutton'>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"5px\" }}>\n                    <div style={this.SwitchTestItemInterval(1)} onMouseUp={() => this.handleChange(0)}>40週前</div>\n                    <div style={this.SwitchTestItemInterval(0)} onMouseUp={() => this.handleChange(1)}>40週後</div>\n                </div>\n                {/* <Select defaultValue={1} style={{ width: 120 }} onChange={this.handleChange}>\n                    <Option value={0}>滿足月</Option>\n                    <Option value={1}>不滿足月</Option>\n                </Select> */}\n                {/* <Button type=\"primary\" onClick={this.showModal}>新增體重</Button>\n                <Modal\n                    title=\"手動新增體重紀錄\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                        <div style={{ display: \"flex\", alignItems: \"center\" }}>選擇時間:</div>\n                        <DatePicker getCalendarContainer={triggerNode => triggerNode.parentNode} id=\"nurtion_datepicker\" style={{ width: \"400px\" }} showTime placeholder=\"選擇時間\" onOk={this.onOk} />\n                    </div>\n                </Modal> */}\n            </div>\n        );\n    }\n    WaterValueRender() {\n        function formatTimeArray(startTime) {\n            const shiftTimer = parseInt((moment().valueOf() - moment(startTime, \"YYYYMMDD\").valueOf()) / (23 * 60 * 60 * 1000))\n            var TimerArray = []\n            for (let index = 0; index < shiftTimer; index++) {\n                const Time = moment(moment(startTime, \"YYYYMMDD\").valueOf() + (index * 24 * 60 * 60 * 1000)).format(\"YYYY/MM/DD\")\n                TimerArray.push(Time)\n            }\n            return TimerArray\n        }\n        const { caseinfo } = this.props\n        const QDC = this.state.QDC\n        if (QDC.length === 0) {\n            return null\n        }\n        const feed = ioDataFormat.FeedData(QDC)\n        const IV = ioDataFormat.IVData(QDC)\n        const Other = ioDataFormat.OtherData(QDC)\n        const OtherFilterInput = formatOtherInput(Other)\n\n        console.log(feed)\n\n\n        function formatOtherInput(OtherData){\n            if (Array.isArray(OtherData)) {\n                const OtherFilterInput = OtherData.filter(function (info, index, arr) {\n                    return info.inp_val1 !== undefined && Number(info.inp_val1) !== NaN\n                })\n                return OtherFilterInput\n            }\n            return []\n        }\n\n\n\n        var Calories = 0\n\n        function sumcar(List) {\n            var Calories = 0\n            for (let index = 0; index < List.length; index++) {\n                const element = List[index];\n                if (element.item === \"進食\") {\n                    if (element.lost === \"配方奶\") {\n                        Calories = Calories + Number(element.inp_val2) * 0.8\n                    }\n                    if (element.lost === \"母奶\") {\n                        Calories = Calories + Number(element.inp_val2) * 0.7\n\n                    }\n                }\n                if (element.nam !== undefined) {\n                    if (element.nam.toString().match(\"10%TPN\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                    if (element.nam.toString().match(\"15%TPN\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34 * 1.5\n                    }\n                    if (element.nam.toString().match(\"SMOFliquid\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                    if (element.nam.toString().match(\"D10\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                    if (element.nam.toString().match(\"D12\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34 * 1.2\n                    }\n                    if (element.nam.toString().match(\"D5W\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34 * 5\n                    }\n                    if (element.nam.toString().match(\"taita\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                }\n\n            }\n            return parseInt(Calories)\n\n        }\n        const startTime = caseinfo.TRANSINDT.toString()\n        const TimerList = formatTimeArray(startTime)\n        var watervalueDataList = []\n        for (let index = 0; index < TimerList.length; index++) {\n            const element = TimerList[index];\n            const filterFeedind = feed.filter(function (value, index, arr) {\n                return moment(element, \"YYYY/MM/DD\").valueOf() === moment(value.rec_dat.toString().trim(), \"YYYY/MM/DD\").valueOf()\n            })\n            const filterIV = IV.filter(function (value, index, arr) {\n                return moment(element, \"YYYY/MM/DD\").valueOf() === moment(value.rec_dat.toString().trim(), \"YYYY/MM/DD\").valueOf()\n            })\n            const filterOther = OtherFilterInput.filter(function (value, index, arr) {\n                return moment(element, \"YYYY/MM/DD\").valueOf() === moment(value.rec_dat.toString().trim(), \"YYYY/MM/DD\").valueOf()\n            })\n\n            const feedingSum = SumData2(filterFeedind)\n            const IVSum = SumData(filterIV)\n            const OtherSum = SumData(filterOther)\n\n            const Caloriessum = sumcar(filterFeedind) + sumcar(filterIV) + sumcar(filterOther)\n            watervalueDataList.push({\n                Feeding: feedingSum,\n                IV: IVSum,\n                Other: OtherSum,\n                Time: element,\n                Caloriessum\n            })\n\n        }\n        function SumData(arr) {\n            var sum = 0;\n            for (var i = 0; i < arr.length; i++) {\n                sum += Number(arr[i].inp_val1);\n            };\n            return parseInt(sum);\n        }\n\n        function SumData2(arr) {\n            var sum = 0;\n            for (var i = 0; i < arr.length; i++) {\n                sum += Number(arr[i].inp_val2);\n            };\n            return parseInt(sum);\n        }\n\n        return (\n            <Watervaluechart Calories={Calories} watervalueData={watervalueDataList} startTime={caseinfo.TRANSINDT} id_key={\"water_id\"} svg_key={\"water_svg\"} caseiddays='2019/11/11'></Watervaluechart>\n        );\n    }\n\n    PickerDateRangeChange = (date, dateString) => {\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const PickerDate = this.state.PickerDateRange.valueOf()\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const bTemp = bTime - (6 * day)\n                bronDate <= bTemp && this.PickerDateRangeChange(moment(bTime))\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD'))\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= aTemp && this.PickerDateRangeChange(moment(aTime))\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const GrowthCurve = this.switch_monthy()\n        const GrowthCurveControl = this.GrowthCurveControlBar()\n        const WaterValueControl = this.WaterValueControlBar()\n        const tpndata = this.state.UDORDER0\n        const feeddata = this.state.TRTMNTQ1\n        const TimeStampPickerDate = this.state.PickerDateRange.valueOf()\n        const { caseinfo } = this.props\n\n        if (tpndata.length === 0 || feeddata === 0) {\n            return null\n        }\n\n        const waterRender = this.WaterValueRender()\n        const PickerDateRange = [TimeStampPickerDate - (6 * 24 * 60 * 60 * 1000), TimeStampPickerDate]\n\n        return (\n            <div className='nurtionheight'>\n                <div className='nurtionlayout'>\n                    <div>\n                        <div className='nurtioncomponmentboxtitle'>\n                            <t1>生長曲線圖</t1>\n                            {GrowthCurveControl}\n                        </div>\n                        <div className='nurtioncomponmentboxcontent'>{GrowthCurve}</div>\n                    </div>\n                    <div>\n                        <div className='nurtioncomponmentboxtitle'>\n                            <t1>水量表</t1>\n                            <div className='titlebutton'>\n                                {WaterValueControl}\n                            </div>\n                        </div>\n                        <div className='nurtioncomponmentboxcontent'>\n                            {waterRender}\n                        </div>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"140px 120px\", gridColumnGap: \"5px\", margin: \"10px 0px 5px 0px\" }}>\n                    <DatePicker\n                        getCalendarContainer={triggerNode => triggerNode.parentNode}\n                        value={this.state.PickerDateRange}\n                        format={\"YYYY/MM/DD\"}\n                        allowClear={false}\n                        locale={\"zh_TW\"}\n                        onChange={this.PickerDateRangeChange}\n                    />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"minus-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: '1fr 1fr', gridColumnGap: \"10px\", marginBottom: \"20px\" }}>\n                    <Nurtionfeedingorder PickerDateRange={PickerDateRange} caseinfo={caseinfo}></Nurtionfeedingorder>\n                    {/* <Nurtiontpnorder PickerDateRange={PickerDateRange} caseinfo={caseinfo}></Nurtiontpnorder> */}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Nurtionview\n","import React, { Component } from 'react'\nimport './Infectionlabtable.scss'\n// import { chronicladdataoneday, chroniclabdatathird } from '../../Data/Wardviewdata'\n// import { arraychange } from '../../Function/Wardstate'\n\nclass Infectionlabtable extends Component {\n    switch_state() {\n        const chronic_state = 2\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 18\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    table_content() {\n        function FormatList(Datalist, st) {\n            var Render = []\n            for (let index = 0; index < 21; index++) {\n                const start = st + (index * 8 * 60 * 60 * 1000)\n                const end = st + ((index + 1) * 8 * 60 * 60 * 1000)\n                const FilterData = Datalist.filter(function (value, index, arr) {\n                    return value.Time > start && value.Time < end\n                })\n                var sum = 0\n                for (let index = 0; index < FilterData.length; index++) {\n                    const element = FilterData[index];\n                    sum = sum + Number(element.Data)\n                }\n                Render.push(sum)\n            }\n            return Render\n        }\n        function CellRander(List) {\n            function checkLineColor(lineColor) {\n                if (lineColor === null) {\n                    return '';\n                } else {\n                    return `${lineColor.width} solid ${lineColor.color}`;\n                }\n            }\n            function valueFormat(value) {\n                if (value === 0 || value === undefined || value === null || value === \"\") {\n                    return \"\"\n                }\n                return `${value}`\n            }\n            function TimeLine(interval, index) {\n                const lineStyle = {\n                    width: '',\n                    color: '',\n                }\n                if (interval === 0) {\n                    if (index === 0 || (index % 24) === 0) {\n                        lineStyle.width = '2px';\n                        lineStyle.color = 'rgba(0,0,0,0.2)';\n                        return lineStyle;\n                    } else if (index % 8 === 0) {\n                        lineStyle.width = '2px';\n                        lineStyle.color = 'rgba(0,0,0,0.2)';\n                        return lineStyle;\n                    }\n                    else {\n                        lineStyle.width = '1px';\n                        lineStyle.color = '#eeeeee';\n                        return lineStyle;\n                    }\n                }\n                if (interval === 1) {\n                    if (index === 0 || (index % 6) === 0) {\n                        lineStyle.width = '2px';\n                        lineStyle.color = 'rgba(0,0,0,0.2)';\n                        return lineStyle;\n                    } else if (index % 2 === 0) {\n                        lineStyle.width = '2px';\n                        lineStyle.color = 'rgba(0,0,0,0.2)';\n                        return lineStyle;\n                    }\n                    else {\n                        lineStyle.width = '1px';\n                        lineStyle.color = '#eeeeee';\n                        return lineStyle;\n                    }\n                }\n                if (interval === 2) {\n                    if (index === 0 || (index % 3) === 0) {\n                        lineStyle.width = '2px';\n                        lineStyle.color = 'rgba(0,0,0,0.2)';\n                        return lineStyle;\n                    } else {\n                        lineStyle.width = '2px';\n                        lineStyle.color = 'rgba(0,0,0,0.2)';\n                        return lineStyle;\n                    }\n                }\n                if (interval === 3) {\n                    lineStyle.width = '2px';\n                    lineStyle.color = 'rgba(0,0,0,0.2)';\n                    return lineStyle;\n                }\n            }\n            const cellR = List.map(function (info, index) {\n                const lineColoe = TimeLine(3, index)\n                if (info === 0) {\n                    return (\n                        <div style={{ height: '40px', display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', borderLeft: checkLineColor(lineColoe) }}></div>\n                    )\n                }\n                return (\n                    <div style={{ backgroundColor: 'rgba(0,120,230,.1)', height: '40px', fontSize: \"16px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', cursor: \"pointer\", borderLeft: checkLineColor(lineColoe) }}>\n                        <t2>{valueFormat(info)}</t2>\n                    </div>\n                );\n            })\n            return cellR\n        }\n        const { PickerDate, WBCList, BandList, SegList, LymList, PCTList, CRPList, title } = this.props\n        const st = PickerDate + (31 * 60 * 60 * 1000) - (7 * 24 * 60 * 60 * 1000)\n        var WBCRender = FormatList(WBCList, st)\n        var BandRender = FormatList(BandList, st)\n        var SegRender = FormatList(SegList, st)\n        var LymRender = FormatList(LymList, st)\n        var PCTRender = FormatList(PCTList, st)\n        var CRPRender = FormatList(CRPList, st)\n        const WBCcell = CellRander(WBCRender)\n        const Bandcell = CellRander(BandRender)\n        const Segcell = CellRander(SegRender)\n        const Lymcell = CellRander(LymRender)\n        const PCTcell = CellRander(PCTRender)\n        const CRPcell = CellRander(CRPRender)\n        return (\n            <div style={{ display: \"grid\", gridTemplateRows: \"repeat(\" + title.length + \",1fr)\" }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{WBCcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{Bandcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{Segcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{Lymcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{PCTcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{CRPcell}</div>\n            </div>\n        );\n    }\n    render() {\n        const { userdata, title } = this.props\n        const title_list = title.map((info, index) => <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"40px\", border: \"1px solid rgba(238,238,238,1)\", borderCollapse: \"collapse\", backgroundColor: \"#eeeeee\" }} key={index}><t2>{info.title}</t2></div>)\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\" }}>\n                <div style={{ display: \"grid\", gridTemplateRows: \"repeat(\" + title.length + \",1fr)\" }}>\n                    {title_list}\n                </div>\n                {this.table_content()}\n            </div>\n        );\n    }\n}\n\nexport default Infectionlabtable\n","import React, { Component } from 'react'\nimport Infectionlabtable from './Infectionlabtable'\n\nclass Infectionlab extends Component { \n    render() {\n        const { WBCList, BandList, SegList, LymList, PCTList, CRPList,PickerDate,title } = this.props\n        const item_title = [{ title: \"WBC\" }, { title: \"Band\" }, { title: \"Seg\" }, { title: \"Lymp\" }, { title: \"PCT\" }, { title: \"CRP\" }]\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n            <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t2>\n            </div>\n                <Infectionlabtable PickerDate={PickerDate} title={item_title}  WBCList={WBCList} BandList={BandList} SegList={SegList} LymList={LymList} PCTList={PCTList} CRPList={CRPList}></Infectionlabtable>\n            </div>\n        );\n    }\n}\n\nexport default Infectionlab   ","import React, { Component } from 'react'\nimport { DatePicker } from 'antd'\nimport Vitalxaxis from '../../Module/Vitalxaxis'\n// import Infectionvitalsign from './Infectionvitalsign'\nimport Infectionlab from './Infectionlab'\nimport Orderonchronic from '../ChronicleView/ChronicOrder'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport './Infection.scss'\nimport Vitalonchronic from '../ChronicleView/Chronic_vital'\n\nclass Infectionview extends Component {\n    state = {\n        datasource: [],\n        statussource: \"CM\",\n        intervalselect: 2,\n        PickerDate: moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf(),\n        UDORDER0: [],\n        RESLAB02: [],\n        RESLAB01: [],\n        classParser: undefined,\n\n        hrdatasource: [],\n        rrdatasource: [],\n        spo2datasource: [],\n        abpdatasource: [],\n        nbpdatasource: [],\n        btdatasource: [],\n        QDVS: [],\n        QOXY: [],\n    }\n    componentDidMount() {\n        this.apidata()\n    }\n\n    apidata() {\n        const { caseinfo } = this.props\n        const dateTime = this.state.PickerDate\n        const et = dateTime + (31 * 60 * 60 * 1000)\n        const st = moment(et - (7 * 24 * 60 * 60 * 1000)).format(\"YYYY-MM-DD\")\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Prescription\");\n                console.log(\"getGitHubJson Prescription OK \" + JSON.stringify(parser))\n                this.setState({\n                    classParser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiProvider.getStoredProcedureUDORDER0(caseinfo.HISID, caseinfo.CASEID, \"123\")\n            .then(data => {\n                this.setState({\n                    UDORDER0: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        ApiProvider.getStoredProcedureRESLAB02(caseinfo.HISID, st)\n            .then(data => {\n                this.setState({\n                    RESLAB02: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESLAB01(caseinfo.HISID, st)\n            .then(data => {\n                this.setState({\n                    RESLAB01: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n    }\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n\n        inputs.forEach(input => {\n            let content = input.UDGNAME;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n        });\n        return allResult;\n    }\n    sourcehandleChange = (value) => {\n        this.setState({\n            statussource: value\n        })\n\n    }\n\n\n    render() {\n        function vallofnull(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"\"\n            }\n            return value.toString().trim()\n        }\n        // const { Option } = Select;\n        const { caseinfo } = this.props\n        const { classParser, UDORDER0 } = this.state\n        const LabData = this.state.RESLAB02\n        const LabData2 = this.state.RESLAB01\n        const dateTime = this.state.PickerDate\n        const et = dateTime + (31 * 60 * 60 * 1000)\n        const st = et - (7 * 24 * 60 * 60 * 1000)\n        var WBCList = []\n        var BandList = []\n        var SegList = []\n        var LymList = []\n        var PCTList = []\n        var CRPList = []\n        if (Array.isArray(LabData)) {\n            if (LabData.length !== 0) {\n                for (let index = 0; index < LabData.length; index++) {\n                    const element = LabData[index];\n                    const WBC = vallofnull(element.RSV01)\n                    const Band = vallofnull(element.RSV13)\n                    const Seg = vallofnull(element.RSV14)\n                    const Lym = vallofnull(element.RSV15)\n                    const PCT = null\n                    const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                    if (st < time && time < et) {\n                        if (WBC !== null || WBC !== \"\" || WBC !== undefined) {\n                            WBCList.push({\n                                Time: time,\n                                Data: WBC\n                            })\n                        }\n                        if (Band !== null || Band !== \"\" || Band !== undefined) {\n                            BandList.push({\n                                Time: time,\n                                Data: Band\n                            })\n                        }\n                        if (Seg !== null || Seg !== \"\" || Seg !== undefined) {\n                            SegList.push({\n                                Time: time,\n                                Data: Seg\n                            })\n                        }\n                        if (Lym !== null || Lym !== \"\" || Lym !== undefined) {\n                            LymList.push({\n                                Time: time,\n                                Data: Lym\n                            })\n                        }\n                        if (PCT !== null || PCT !== \"\" || PCT !== undefined) {\n                            PCTList.push({\n                                Time: time,\n                                Data: PCT\n                            })\n                        }\n                    }\n                }\n            }\n        }\n        if (Array.isArray(LabData2)) {\n            if (LabData2.length !== 0) {\n                for (let index = 0; index < LabData2.length; index++) {\n                    const element = LabData2[index];\n                    const CRP = vallofnull(element.RSV30)\n                    const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                    if (st < time && time < et) {\n                        if (CRP !== null || CRP !== \"\" || CRP !== undefined) {\n                            CRPList.push({\n                                Time: time,\n                                Data: CRP\n                            })\n                        }\n                    }\n                }\n            }\n        }\n\n        let clusteredData = {}\n        if (classParser !== undefined) {\n            clusteredData = this.parse(UDORDER0, classParser)\n        }\n\n        //filter data by selected class\n        const filteredData = clusteredData[\"抗生素類別\"];\n\n        return (\n            <div style={{ padding: \"0px 20px\" }}>\n                <div className='Infectioncontrol'>\n                    <DatePicker\n                        getCalendarContainer={triggerNode => triggerNode.parentNode}\n                        disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                        defaultValue={moment(this.state.PickerDate)}\n                        onChange={(date, datestring) => { this.setState({ PickerDate: date.valueOf() }) }}\n                        allowClear={false} />\n                </div>\n                <div style={{ margin: \"10px 0px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\" }}>\n                        <div></div>\n                        <Vitalxaxis max={200} min={0} select_interval={2} select_date={new Date().getTime()} id_key=\"xaxis_infect\" svg_id=\"xaxis_svg_infect\"></Vitalxaxis>\n                    </div>\n                </div>\n                <div className='boxshadow'></div> \n                <div className='Infectionlayout'>\n                    <Vitalonchronic PickerDate={this.state.PickerDate} select_interval={2} fromInfection={true} caseinfo={caseinfo} source={\"infection\"} title=\"Vital\"></Vitalonchronic>\n                    {/* <Infectionvitalsign caseinfo={caseinfo} StatusSource={this.state.statussource} PickerDate={this.state.PickerDate}></Infectionvitalsign> */}\n                    {/* Order */}\n                    <Orderonchronic PickerDate={this.state.PickerDate} UDORDER0={filteredData} select_interval={2} caseinfo={caseinfo} source={\"infection\"} title=\"藥物處方\"></Orderonchronic>\n                    <Infectionlab PickerDate={this.state.PickerDate} WBCList={WBCList} BandList={BandList} SegList={SegList} LymList={LymList} PCTList={PCTList} CRPList={CRPList} title=\"檢驗結果\"></Infectionlab>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\" }}>\n                    <div></div>\n                    <Vitalxaxis max={200} min={0} select_interval={2} select_date={new Date().getTime()} id_key=\"xaxis_flootsheet_bot\" svg_id=\"xaxis_svg_flootsheet_bot\"></Vitalxaxis>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Infectionview\n","import React, { Component } from 'react';\nimport editlogo from '../../Image/svg/Edit.svg'\n// import detaillogo from '../../Image/svg/details.svg'\nimport { Input, Button } from 'antd';\nimport './Bedsidecard.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Bedsidecard extends Component {\n    state = {\n        caseinfo: this.props.caseinfo,\n        EditMode: false,\n        remarkContent: \"\",\n        inputContent: \"\",\n        powerLogin: 0\n    }\n    componentDidMount() {\n        //bind function\n        this.onInputChange = this.onInputChange.bind(this);\n\n        //query patient remark\n        this.queryPatientRemark();\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    queryPatientRemark() {\n        ApiProvider.getOnePatientRemark(this.state.caseinfo.TRANSINID)\n            .then(data => {\n                console.log(\"queryPatientRemark OK \" + JSON.stringify(data));\n                this.setState({\n                    remarkContent: data.data[0].context\n                });\n            })\n            .catch(err => {\n                console.log(\"queryPatientRemark NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    onClickEnter() {\n        ApiProvider.createPatientRemark(this.state.inputContent, this.state.caseinfo.HISID, this.state.caseinfo.TRANSINID)\n            .then(data => {\n                console.log(\"createPatientRemark OK \" + JSON.stringify(data));\n                this.setState(\n                    {\n                        inputContent: \"\"\n                    }\n                )\n                this.queryPatientRemark();\n            })\n            .catch(err => {\n                console.log(\"createPatientRemark NG \" + JSON.stringify(err));\n            });\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    render() {\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div className='bedsidecardtitle'>\n                    <t1 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>床頭卡註記</t1>\n                    <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                        <img src={editlogo} alt=\"editlogo\" />\n                    </div>\n                </div>\n                <div className='bedsidecardcontext'>\n                    <t2>{this.state.remarkContent}</t2>\n                </div>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", backgroundColor: \"rgba(238,238,238,1)\" }}>\n                        <Input placeholder=\"輸入當日註記內容\" value={this.state.inputContent} onChange={this.onInputChange}></Input>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Bedsidecard\n","import React, { Component } from 'react';\nimport editlogo from '../../Image/svg/Edit.svg'\nimport { Checkbox, Input, Button } from 'antd';\nimport './Scheduletodo.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nconst TODO_DONE = \"已完成\";\nconst TODO_UNFINISH = \"未完成\";\n\nclass Scheduletodo extends Component {\n    state = {\n        EditMode: false,\n        displayMode: true, //true已完成 flase未完成\n        todolist: [],\n        caseinfo: this.props.caseinfo,\n        inputContent: undefined,\n        powerLogin: 0\n    }\n    componentDidMount() {\n        //bind function\n        this.onInputChange = this.onInputChange.bind(this);\n\n        //query patient notice\\\n        this.queryPatientTodo();\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    queryPatientTodo() {\n        ApiProvider.getOneTodo(this.state.caseinfo.TRANSINID, this.state.caseinfo.CASEID)\n            .then(data => {\n                console.log(\"queryPatientTodo OK \" + JSON.stringify(data));\n                this.setState({\n                    todolist: data.data\n                });\n            })\n            .catch(err => {\n                console.log(\"queryPatientTodo NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString()\n        ApiProvider.createTodo(this.state.caseinfo.CASEID, this.state.inputContent, timeNowStr, this.state.caseinfo.TRANSINID, TODO_UNFINISH)\n            .then(data => {\n                console.log(\"createTodo OK \" + JSON.stringify(data));\n                this.queryPatientTodo();\n            })\n            .catch(err => {\n                console.log(\"createTodo NG \" + JSON.stringify(err));\n            });\n        this.setState(\n            {\n                EditMode: false,\n                inputContent: undefined\n            }\n        )\n    }\n    onClickfinish() {\n        this.setState(\n            {\n                displayMode: true\n            }\n        )\n    }\n    onClickunfisish() {\n        this.setState(\n            {\n                displayMode: false\n            }\n        )\n    }\n\n    onChange = (checkedValues) => {\n    }\n    onItemCheck = (event) => {\n\n        const itemToUpdate = this.state.todolist.find(item => item.time === event.target.value);\n\n        if ((this.state.displayMode === true && event.target.checked === false) || (this.state.displayMode === false && event.target.checked === true)) {\n            ApiProvider.createTodo(itemToUpdate.caseid, itemToUpdate.context, itemToUpdate.time, itemToUpdate.transinno, (itemToUpdate.type === TODO_DONE) ? TODO_UNFINISH : TODO_DONE)\n                .then(data => {\n                    console.log(\"updateTodo OK \" + JSON.stringify(data));\n                    this.queryPatientTodo();\n                })\n                .catch(err => {\n                    console.log(\"updateTodo NG \" + JSON.stringify(err));\n                });\n        }\n    }\n    render() {\n        // const button_style = {\n        //     finish: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\", borderRadius: \"16px\", border: \"rgba(245, 166, 35, 1) 1px solid\", color: \"rgba(245, 166, 35, 1)\" },\n        //     unfinish: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\", borderRadius: \"16px\", border: \"rgba(245, 166, 35, 1) 1px solid\", background: \"rgba(245, 166, 35, 1)\", color: \"white\" }\n        // }\n\n        const todolist_data = this.state.todolist\n        const finish_data = todolist_data.filter(function (item, index, array) {\n            return item.type === TODO_DONE;\n        });\n        const finish_value = finish_data.map(function (item, index, array) {\n            return item.time;\n        });\n        const unfinish_data = todolist_data.filter(function (item, index, array) {\n            return item.type === TODO_UNFINISH;\n        });\n\n        const onItemCheck = this.onItemCheck;\n        const finish_checkbox = finish_data.map(function (item, index, array) {\n            return (\n                <div key={index} className='scheduletodocell'>\n                    <Checkbox value={item.time} checked={true} onChange={onItemCheck} style={{ textDecoration: \"line-through\" }}>{item.context}</Checkbox>\n                </div>\n            );\n        });\n        const unfinish_checkbox = unfinish_data.map(function (item, index, array) {\n            return (\n                <div key={index} className='scheduletodocell'>\n                    <Checkbox value={item.time} checked={false} onChange={onItemCheck}>{item.context}</Checkbox>\n                </div>\n            );\n        });\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div className='scheduletodotitle'>\n                    <t1 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>待辦事項</t1>\n                    <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                        <img src={editlogo} alt=\"editlogo\" />\n                    </div>\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"10px 0px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"115px 115px\", gridColumnGap: \"10px\" }}>\n                        <div style={{ cursor: \"pointer\" }} className={this.state.displayMode ? 'finishbutton' : 'todobutton'} onClick={() => this.onClickunfisish()}>未完成</div>\n                        <div style={{ cursor: \"pointer\" }} onClick={() => this.onClickfinish()} className={this.state.displayMode ? 'todobutton' : 'finishbutton'}>已完成</div>\n                    </div>\n                </div>\n                <Checkbox.Group defaultValue={finish_value} style={{ width: '100%' }} onChange={this.onChange}>\n                    <div style={{ overflowY: \"auto\", maxHeight: \"200px\" }}>\n                        {this.state.displayMode ? finish_checkbox : unfinish_checkbox}\n                    </div>\n                </Checkbox.Group>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <Input placeholder=\"輸入當日註記內容\" value={this.state.inputContent} onChange={this.onInputChange}></Input>\n                        <Button type=\"primary\">新增</Button>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Scheduletodo\n","import React, { Component } from 'react';\nimport calenderlogo from '../../Image/svg/calender.svg'\nimport calenderwhitelogo from '../../Image/svg/calenderwhite.svg'\nimport pingcheck from '../../Image/svg/ping.svg'\nimport pingwhite from '../../Image/svg/pingwhite.svg'\nimport './Calendercell.scss'\nimport { mmddformat, weekdateformatcalender } from '../../Function/Timeformat'\nimport { Col, Row } from \"antd\"\nclass Calendercell extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            status: false,\n        }\n\n    }\n\n\n    sendcallback(timestamp, clickindex) {\n        this.props.parentCallback(timestamp, clickindex);\n    }\n    onClickCheck(timestamp, clickindex) {\n        this.sendcallback(timestamp, clickindex)\n        this.onClick1()\n    }\n    onClick1 = () => {\n        if (this.state.status === false) {\n            this.setState({ status: true }, () => {\n                this.props.CancelModule(true)\n            })\n\n        } else {\n            this.setState({ status: false }, () => {\n                this.props.CancelModule(false)\n            })\n\n        }\n    }\n\n\n    render() {\n        const { clickindex, state, newDate, timestamp, clickdate, data, today } = this.props;\n        function disableday(state) {\n            const scheduleArray = data.scheduleList.filter(item => item.type === \"排程\");\n            if (state) {\n                return (\n                    <div className='calendersubcontexticon'>\n                        <img src={calenderlogo} alt='calenderlogo' />\n                        <t1>{scheduleArray.length}</t1>\n                    </div>\n                );\n            }\n            else {\n                return (\n                    <div className='calendersubcontexticon'>\n                        <img src={calenderwhitelogo} alt='calenderlogo' />\n                        <t1 className='displayinfo'>{scheduleArray.length}</t1>\n                    </div>\n                );\n            }\n        }\n        function locl(state) {\n            if (timestamp === today) return '當日'\n            else return null\n        }\n        function stateswitch() {\n\n            if (mmddformat(clickdate) === mmddformat(timestamp)) {\n                return true\n            }\n            return false\n        }\n        return (\n            <Row >\n                <Row type=\"flex\" justify=\"center\" >\n                    <Col span={24}>\n                        <div className={stateswitch() ? 'calendersubcontextclick' : 'calendersubcontext'}\n                            onClick={() =>\n                                this.onClickCheck(timestamp, clickindex)\n                            }>\n                            <div className={stateswitch() ? 'calendersubcontexttitleclick' : 'calendersubcontexttitle'}>\n                                <t2 className='calendersubcontexttitletoday'>{mmddformat(timestamp)}({weekdateformatcalender(timestamp)}){locl(newDate)}</t2>\n\n                            </div>\n                            {disableday(state)}\n                        </div>\n                    </Col></Row>\n                <Row type=\"flex\" justify=\"center\" >\n                    <Col >\n                        {stateswitch() && this.state.status ?\n                            <div style={{ width: 0, height: 0, borderStyle: \"solid\", borderWidth: \"17.3px 10px 0 10px\", borderColor: \"#ffbe59 transparent transparent transparent\" }}></div>\n                            : \"\"}</Col>\n                </Row>\n            </Row>\n        );\n    }\n}\n\nexport default Calendercell\n","import React, { Component } from 'react';\nimport { DatePicker } from 'antd';\nimport { Select } from 'antd';\nimport './Calender.scss'\nimport { mmddformat, compareday, yyyymmfirstweeksate } from '../../Function/Timeformat'\nimport Calendercell from './Calendercell'\nimport { Icon } from 'antd'\nimport CrossectionSchedule from '../CrossSectionView/Crosssectionschedule'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment';\n\nconst SCHEDULE_TYPE_EVENT = \"事件\";\n// const SCHEDULE_TYPE_SCHEDULE = \"排程\";\nconst timeZoneOffset = 8 * 60 * 60 * 1000;\n\nclass Calender extends Component {\n    state = {\n        calendermode: 'week',\n        Clickdays: null,\n        ClickDate: null,\n        displayinfo: null,\n        scheduleRawData: [],\n        scheduleData: [],\n        startTimestamp: 0,\n        endTimestamp: 0,\n        todayBegin: 0,\n        noticeRawData: [],\n        open: false,\n\n    }\n    componentDidMount() {\n        const { startTimestamp, endTimestamp, todayBegin } = this.getStartEndTime();\n        this.setState({\n            startTimestamp: startTimestamp,\n            endTimestamp: endTimestamp,\n            todayBegin: todayBegin,\n            ClickDate: todayBegin\n        });\n        this.querySchedule(new Date(startTimestamp).toISOString().split('.')[0], new Date(endTimestamp).toISOString().split('.')[0]);\n        this.queryNotice();\n    }\n    getStartEndTime() {\n        const today = new Date();\n        const monthfirstweekday = new Date(today.getFullYear(), today.getMonth(), 1).getDay();\n        const firstCellBegin = new Date(today.getFullYear(), today.getMonth(), 1).getTime() - (monthfirstweekday * 24 * 60 * 60 * 1000) + timeZoneOffset;\n        const todayBegin = new Date(today.getFullYear(), today.getMonth(), today.getDate()).getTime() + timeZoneOffset;\n\n        const startTimestamp = (this.state.calendermode === 'week') ? todayBegin - 3 * 24 * 60 * 60 * 1000 : firstCellBegin;\n        const endTimestamp = (this.state.calendermode === 'week') ? startTimestamp + 7 * 24 * 60 * 60 * 1000 : startTimestamp + 35 * 24 * 60 * 60 * 1000;\n\n        return { startTimestamp, endTimestamp, todayBegin };\n    }\n    querySchedule(startTimestampStr, endTimestampStr) {\n        ApiProvider.getOnePatientSchedule(this.props.caseinfo.TRANSINID, startTimestampStr, endTimestampStr)\n            .then(data => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n\n                const itemList = data.data;\n                let refactoredList = [];\n                itemList.forEach(item => {\n                    const itemTimeStr = item.time.split('T')[0];\n                    let foundItemIndex = refactoredList.findIndex(element => element.time === itemTimeStr);\n                    if (foundItemIndex === -1) {\n                        //not found, create one\n                        let newItem = {\n                            time: itemTimeStr,\n                            timestamp: item.time,\n                            scheduleList: []\n                        }\n                        let newEvent = {\n                            type: item.type,\n                            timestamp: new Date(item.time).getTime(),\n                            writer: (item.type === SCHEDULE_TYPE_EVENT) ? \"林醫師\" : \"張醫師\",\n                            name: item.name,//this.props.caseinfo.PBASINGNINFO.PNAMEC,//(item.type === SCHEDULE_TYPE_EVENT) ? \"林ＯＯ\" : \"黃ＯＯ\",\n                            content: item.context,\n                            bednumber: item.bednumber\n                        }\n                        newItem.scheduleList.push(newEvent);\n                        refactoredList.push(newItem);\n                    } else {\n                        //found, update item\n                        let newEvent = {\n                            type: item.type,\n                            timestamp: new Date(item.time).getTime(),\n                            writer: (item.type === SCHEDULE_TYPE_EVENT) ? \"林醫師\" : \"張醫師\",\n                            name: item.name,//this.props.caseinfo.PBASINGNINFO.PNAMEC,//(item.type === SCHEDULE_TYPE_EVENT) ? \"林ＯＯ\" : \"黃ＯＯ\",\n                            content: item.context,\n                            bednumber: item.bednumber\n                        }\n                        refactoredList[foundItemIndex].scheduleList.push(newEvent);\n                    }\n                });\n                this.setState({\n                    scheduleRawData: data.data,\n                    scheduleData: refactoredList\n                });\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }\n    queryNotice() {\n        ApiProvider.getOnePatientNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID)\n            .then(result => {\n                console.log(\"getOnePatientNotice OK \" + JSON.stringify(result));\n                this.setState({\n                    noticeRawData: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientNotice NG \" + JSON.stringify(err));\n            });\n    }\n    callbackFunction = (timestamp, clickindex) => {\n        console.log(timestamp)\n        this.setState({\n            ClickDate: timestamp,\n            displayinfo: clickindex\n        })\n    }\n    onCancelClick() {\n        this.setState({\n            ClickDate: this.state.todayBegin,\n            displayinfo: null\n        }, () => { console.log(this.state) })\n    }\n    CancelModule = (value) => {\n\n        if (value === true) {\n            this.setState({ open: true }, () => { console.log(\"oepn true\", this.state) })\n        } else {\n            this.setState({ open: false }, () => { console.log(\"oepn false\", this.state) })\n        }\n    }\n    handleChange = (value) => {\n        console.log(value)\n        this.setState({\n            calendermode: value,\n            displayinfo: null,\n            Clickdays: null\n        })\n    }\n    onChange = (timestamp) => {\n        console.log('changestate')\n    }\n    onClickCheck(timestampdate) {\n        this.setState({\n            onClickdays: timestampdate\n        })\n    }\n    getDataFromTimestamp(timestamp) {\n        const dateStr = new Date(timestamp).toISOString().split('T')[0];\n        const dataOfDayIndex = this.state.scheduleData.findIndex(element => element.time === dateStr);\n        const dataOfDay = (dataOfDayIndex === -1) ? { scheduleList: [] } : this.state.scheduleData[dataOfDayIndex];\n        return dataOfDay;\n    }\n    getNoticeFromTimestamp(timestamp) {\n        const dateStr = new Date(timestamp).toISOString().split('T')[0];\n        const noticeOfDayArray = this.state.noticeRawData.filter(element => element.time.indexOf(dateStr) > -1);\n        return noticeOfDayArray;\n    }\n    weekmode() {\n        var weekcontext = []\n        for (let index = 0; index < 7; index++) {\n            const timestampdate = this.state.startTimestamp + (index * 24 * 60 * 60 * 1000);\n            const date = mmddformat(timestampdate)\n            const dataOfDay = this.getDataFromTimestamp(timestampdate);\n            // 接 len api\n            if (index - 3 === 0) {\n                weekcontext.push(\n                    <Calendercell CancelModule={this.CancelModule} clickindex={'week'} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={true} newDate={true} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n                );\n            }\n            else {\n                weekcontext.push(\n\n                    <Calendercell CancelModule={this.CancelModule} clickindex={'week'} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={compareday(timestampdate)} newDate={false} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n\n                );\n\n            }\n        }\n        return weekcontext\n    }\n    weekmonthmode(weeknumber, firstMonthWeekDay) {\n        var weekcontext = []\n        for (let index = 0; index < 7; index++) {\n            const timestampdate = new Date(firstMonthWeekDay).getTime() + (index * 24 * 60 * 60 * 1000) + timeZoneOffset;\n            const date = mmddformat(timestampdate)\n            const dataOfDay = this.getDataFromTimestamp(timestampdate)\n\n            if (new Date(mmddformat(new Date().getTime())).getTime() <= new Date(mmddformat(new Date(timestampdate).getTime())).getTime()) {\n                weekcontext.push(\n\n\n                    <Calendercell CancelModule={this.CancelModule} clickindex={weeknumber} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={true} newDate={true} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}>\n                    </Calendercell>\n                );\n            }\n            else {\n                weekcontext.push(\n\n                    <Calendercell CancelModule={this.CancelModule} clickindex={weeknumber} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={false} newDate={true} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}>\n\n                    </Calendercell>\n                );\n            }\n        }\n        return weekcontext\n    }\n\n    ShowModule(rowIndex) {\n        if (rowIndex === undefined) rowIndex = 0;\n        console.log(\"this.state.ClickDate\" + this.state.ClickDate);\n\n        const dataOfDay = this.getDataFromTimestamp(this.state.ClickDate);\n        const noticeOfDay = this.getNoticeFromTimestamp(this.state.ClickDate);\n\n        function checkmode(state) {\n            if (state === 'week') {\n                return 'calenderdisplayinformation'\n            }\n            if (state === rowIndex) {\n                return 'calenderdisplayinformation'\n            }\n            return 'calenderdisplayinformationnone'\n        }\n        // console.log(moment(this.state.ClickDate).format(\"YYYYMMDDHHmmss\"))\n        return (\n            <div>\n                {this.state.open ?\n                    <div className={checkmode(this.state.displayinfo)} >\n\n                        <div className='calenderModule'>\n                            <t1>詳細資訊</t1>\n                            {/* <Icon type=\"close\" onClick={()=>this.onCancelClick()} /> */}\n                        </div>\n                        <div className='Modulelayout'>\n                            <CrossectionSchedule PickerDate={this.state.ClickDate} source={1} caseinfo={this.props.caseinfo} noticeData={noticeOfDay} scheduleData={dataOfDay} editstatus={true}></CrossectionSchedule>\n                        </div>\n                    </div>\n                    : \"\"}\n            </div>\n        );\n    }\n\n\n    setgroup() {\n        var calendermonthgroup = []\n        const monthfirstweekdate = new Date(yyyymmfirstweeksate(new Date())).getDay()\n        const firstMonthWeekDay = new Date(yyyymmfirstweeksate(new Date())).getTime() - (monthfirstweekdate * 24 * 60 * 60 * 1000)\n\n        for (let index = 0; index < 5; index++) {\n            calendermonthgroup.push(\n                <div className='calendercontextMonthRows'>\n                    {this.weekmonthmode(index, firstMonthWeekDay + (index * 7 * 24 * 60 * 60 * 1000))}\n                    {this.ShowModule(index)}\n                </div>\n            );\n\n        }\n        return calendermonthgroup\n    }\n    modechange(state) {\n        if (state === 'week') {\n            return (\n                <div className='calendercontext'>\n                    {this.weekmode()}\n                    {this.ShowModule()}\n                </div>\n            );\n        }\n        else {\n            // return (\n            //     <div>\n            //         {this.setgroup()}\n            //     </div>\n            // );\n            return this.setgroup()\n        }\n    }\n\n    SelectDatepickertype() {\n        const { MonthPicker } = DatePicker;\n        if (this.state.calendermode === 'month') {\n            return (\n                <MonthPicker getCalendarContainer={triggerNode => triggerNode.parentNode} placeholder=\"請選擇月份\" />\n            );\n        }\n        else {\n            return (\n                <DatePicker getCalendarContainer={triggerNode => triggerNode.parentNode} placeholder={['請選擇時間']} />\n            );\n        }\n    }\n    render() {\n        const { Option } = Select;\n        // const localday = new Date().getTime()\n        // function compareday(days) {\n        //     if (new Date(days).getTime() > new Date().getTime()) {\n        //         return true\n        //     }\n        //     return false\n        // }\n        return (\n            <div>\n                <t1 className='calendertitle'>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>行事曆</t2>\n                </t1>\n                <div className='calendercontrol'>\n                    {this.SelectDatepickertype()}\n                    <Select defaultValue={this.state.calendermode} onChange={this.handleChange}>\n                        <Option value=\"week\">週</Option>\n                        <Option value=\"month\">月</Option>\n                    </Select>\n                </div>\n                {this.modechange(this.state.calendermode)}\n            </div>\n        );\n    }\n}\n\nexport default Calender\n","import React, { Component } from 'react';\nimport Notice from './Notice'\nimport Bedsidecard from './Bedsidecard'\nimport Scheduletodo from './Scheduletodo'\nimport Calender from './Calender'\nimport './Scheduleview.scss'\n\nclass Scheduleview extends Component {\n    render() {\n        function monthformat(month) {\n            return month + 1\n        }\n        function dateformat(time) {\n            return new Date(time).getFullYear() + \"-\" + monthformat(new Date(time).getMonth()) + \"-\" + new Date(time).getDate()\n        }\n        function exporttime(time) {\n            if (time === null) {\n                return \"--\"\n            }\n            else {\n                return dateformat(time)\n            }\n        }\n        const { caseinfo } = this.props\n        const time = new Date().getTime()\n\n        return (\n            <div>\n                <div style={{ marginBottom: \"5px\" }}>\n                    <centerstyle>\n                        <div className='scheduletitle'>轉入時間:{dateformat(time)}/轉出時間\b:{exporttime(null)}</div>\n                    </centerstyle>\n                    <div className='boxshadow'></div>\n                </div>\n                <div className='schedulelayout'>\n                    <Bedsidecard caseinfo={caseinfo}></Bedsidecard>\n                    <Notice caseinfo={caseinfo}></Notice>\n                    <Calender caseinfo={caseinfo}></Calender>\n                    <Scheduletodo caseinfo={caseinfo}></Scheduletodo>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Scheduleview\n","import React, { Component } from 'react';\nimport Patientinfo from './Patientviewinfo'\nimport { Select, Modal } from 'antd';\nimport { bednumberformat } from '../Function/Wardbedfunction'\nimport { Tabs, Icon } from 'antd';\nimport Crosssectionlayout from './CrossSectionView/Crosssectionlayout'\nimport Chroniclelayout from './ChronicleView/Chroniclelayout'\nimport Flowsheetlayout from './FlootSheetView/Flootsheetlayout'\nimport Examreport from './ExamReport/ExamReport'\nimport Orderview from './Orderview/Orderview'\nimport Noteview from './NoteView/Note'\nimport RTview from './RT/RTview'\nimport Nurtionview from './Nurtion/Nurtion'\nimport Infectionview from './Infection/Infection'\nimport Scheduleview from './Schedule/Scheduleview'\nimport * as ApiProvider from '../API/ApiProvider'\nimport X2JS from 'x2js';\nimport moment from 'moment';\nimport * as WardState from '../Function/Wardstate'\nimport * as WeightList from '../Resource/QTWPER'\nimport * as Wardstate from '../Function/Wardstate'\n\nclass Patientviewlayout extends Component {\n    state = {\n        TYPE: this.props.location.TYPE,\n        PBASINGNINFO: [],\n        PDOCNEW: [],\n        REMARK: [],\n        QMNC: [],\n        QENT: [],\n        QTWER: [],\n        tabstring: \"時間點檢視\",\n        visible: false,\n        PLOCSTART: null,\n        PLOC: null,\n        persionstatus: []\n    }\n    componentDidMount() {\n        const CASEID = this.props.location.state.CASEID\n        const HISID = this.props.location.state.HISID\n        this.getPersonStatus(HISID, CASEID)\n    }\n    getPersonStatus(HID, CID) {\n        ApiProvider.getTablePLOC(CID)\n            .then(data => {\n                console.log(data.data)\n                const result = data.data\n                this.setState({ PLOC: result[result.length - 1], PLOCSTART: result[0] })\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getTablePDOCNEW(CID)\n            .then(data => { this.setState({ PDOCNEW: data.data }) })\n            .catch(err => { console.log(\"Andy test getTablePDOCNEW NG \" + JSON.stringify(err)); });\n        ApiProvider.getTablePBASINFO(HID)\n            .then(data => {\n                this.setState({ PBASINGNINFO: data.data })\n                const PBASINGNINFO = data.data\n                const starttime = moment(PBASINGNINFO.PBIRTHDT, 'YYYYMMDD').format(\"YYYYMMDDHHmm\")\n                const endtime = moment().format('YYYYMMDDHHmm')\n                ApiProvider.getQTWPER(CID, starttime, endtime)\n                    .then(result => {\n                        const QTWER = WardState.XM2JSON(result.data)\n                        this.setState({ QTWER: QTWER })\n                    })\n                    .catch(err => {\n                        console.log(\"Andy test getQTWPER NG \" + JSON.stringify(err));\n                    });\n            })\n            .catch(err => { console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err)); });\n        ApiProvider.getPersionalStatus(HID)\n            .then(data => { console.log(data.data); this.setState({ persionstatus: data.data }) })\n            .catch(err => { console.log(err) })\n        ApiProvider.getQENT(CID)\n            .then(data => { this.setState({ QENT: WardState.XM2JSON(data.data) }) })\n            .catch(err => { console.log(err) })\n        ApiProvider.getQMNC(CID)\n            .then(data => { this.setState({ QMNC: WardState.XM2JSON(data.data) }) })\n            .catch(err => { console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err)); })\n\n        // this.setState({ QTWER: WeightList.data.outmsg.resconts.rescont })\n    }\n    selectchange = (HBEDNUMBER) => {\n        const datalist = this.state.HBEDLIST\n        const filterdata = datalist.filter(function (info, index, array) {\n            return parseInt(info.HBEDNO) === HBEDNUMBER\n        })\n        if (filterdata.length === 0) {\n            return null\n        }\n        else {\n            const source = filterdata[0]\n            const HISID = source.PHISTNUM\n            const CASEID = source.PCASENO\n            const PBASINFO = ApiProvider.getTablePBASINFO(HISID)\n                .then(data => {\n                    return {\n                        PBASINGNINFO: data.data,\n                    }\n                })\n                .catch(err => {\n                    console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n                });\n            const PDOCNEW = ApiProvider.getTablePDOCNEW(CASEID)\n                .then(data => {\n                    return data.data\n                })\n                .catch(err => {\n                    console.log(\"Andy test getTablePDOCNEW NG \" + JSON.stringify(err));\n                });\n            const PLOC = ApiProvider.getTablePLOC(CASEID)\n                .then(data => {\n                    const matadata = data.data\n                    return matadata[matadata.length - 1]\n                })\n                .catch(err => {\n                    console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n                });\n            Promise.all([PBASINFO, PDOCNEW, PLOC])\n                .then(result => {\n                    this.nis_status_shange(CASEID, result[0].PBASINGNINFO);\n                    return {\n                        PBASINGNINFO: result[0].PBASINGNINFO,\n                        // BEDNUMBER: result[0].BEDNUMBER,\n                        PDOCNEW: result[1],\n                        PLOC: result[2]\n                    }\n                })\n                .then(result => {\n                    this.setState({\n                        PBASINGNINFO: result.PBASINGNINFO,\n                        PDOCNEW: result.PDOCNEW,\n                        PLOC: result.PLOC\n                    })\n                })\n                .catch(err => {\n                    console.log(\"error\")\n                })\n\n        }\n    }\n\n    nis_status_shange(CASEID, PBASINGNINFO) {\n        const xm2 = new X2JS()\n        ApiProvider.getQENT(CASEID)\n            .then(data => {\n                this.setState({\n                    QENT: WardState.XM2JSON(data.data)\n                })\n            })\n            .catch(err => { console.log(err) })\n        // ApiProvider.getQMNC(CASEID)\n        //     .then(data => {\n        //         // const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n        //         this.setState({\n        //             QMNC: WardState.XM2JSON(data.data)\n        //         })\n        //         const starttime = moment(PBASINGNINFO.PBIRTHDT, 'YYYYMMDD').format(\"YYYYMMDDHHmm\")\n        //         const endtime = moment().format('YYYYMMDDHHmm')\n        //         ApiProvider.getQTWPER(CASEID, starttime, endtime)\n        //             .then(data => {\n        //                 const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n        //                 var weightlist = []\n        //                 for (let index = 0; index < parsedata.length; index++) {\n        //                     const element = parsedata[index];\n        //                     if (element.type === 'TW') {\n        //                         weightlist.push(element)\n        //                     }\n        //                 }\n        //                 this.setState({ QTWER: weightlist })\n        //             })\n        //             .catch(err => {\n        //                 console.log(\"Andy test getQTWPER NG \" + JSON.stringify(err));\n        //             });\n        //     })\n        //     .catch(err => {\n        //         console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n        //     });\n        this.setState({ QTWER: WeightList.data.outmsg.resconts.rescont })\n    }\n\n\n\n\n    onChange = (activkey) => {\n        this.setState({\n            tabstring: activkey\n        }\n        )\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    OptionSelectRender() {\n        function addzero(value) {\n            if (value < 10) {\n                return \"0\" + value\n            }\n            return value\n        }\n        function optionselect(LISTBED) {\n            const dataoption = LISTBED.map(function (info, index, array) {\n                return (\n                    <Option key={index} value={Number(info.HBEDNO)}>病床{addzero(parseInt(info.HBEDNO))}</Option>\n                );\n            })\n            return dataoption\n\n        }\n        const BedList = this.props.location.state.source\n        const { Option } = Select;\n        const BEDNUMBER = Number(this.props.location.state.BEDNUMBER)\n        if (BedList !== null) {\n            return (\n                <Select defaultValue={Number(BEDNUMBER)} style={{ width: 120 }} onChange={this.selectchange}>\n                    {optionselect(BedList)}\n                </Select>\n            );\n        }\n        return null\n    }\n    fixpatientDate = (data) => {\n        const transdata = {\n            'cause': '住院原因',\n            'car_pho': '主要照顧者電話',\n            'care': '主要照顧者',\n            'con_1': '聯絡人1',\n            'con_p11': '聯絡人1電話',\n            'con_2': '聯絡人2',\n            'con_p21': '聯絡人2電話',\n            'dvs': '住院時生命徵象',\n            'habit': '飲食狀況',\n            'oxy': '住院時氧和評估',\n            'h_val': '住院時頭圍',\n            'b_val': '住院時胸圍',\n            'tall': '住院時身高',\n            'weight': '住院時體重'\n        }\n\n        const patientDate = []\n\n        for (let index in transdata) {\n            if (data[index] !== \"\") {\n                patientDate.push([transdata[index], data[index]])\n            }\n        }\n\n        return patientDate\n    }\n    render() {\n        function apiStatus(value) {\n            if (Array.isArray(value)) {\n                if (value.length === 0) {\n                    return false\n                }\n                return true\n            }\n            if (value === null || value === undefined || value === \"\") {\n                return false\n            }\n            return true\n        }\n        const { PLOC, PLOCSTART } = this.state\n        if (!apiStatus(PLOCSTART) || !apiStatus(PLOC)) {\n            return <Icon type=\"loading\" />\n        }\n\n\n\n\n        function statusPersion(persionstatus, QMNC, QTWER, Birthday) {\n            console.log(persionstatus)\n            // console.log(QMNC)\n            if (persionstatus.length === 0) {\n                console.log(QMNC)\n                // console.log(\"000\" + Number(QMNC.weeks))\n                if (QMNC.length === 0) {\n                    return {\n                        BornWeight: undefined,\n                        BornWeeks: undefined,\n                        BornDays: undefined\n                    }\n                }\n                const BornWeight = Wardstate.BornWeight(QTWER, Birthday)\n                const BornWeeks = Number(QMNC[0].weeks)\n                const BornDays = Number(QMNC[0].days)\n                return {\n                    BornWeight: BornWeight,\n                    BornWeeks: BornWeeks,\n                    BornDays: BornDays\n                }\n            }\n            else {\n                const Weight = Number(persionstatus[0].bweight) * 1000\n                const BornWeeks = Number(persionstatus[0].bweek)\n                const BornDays = Number(persionstatus[0].bday)\n                return {\n                    BornWeight: Weight,\n                    BornWeeks: BornWeeks,\n                    BornDays: BornDays\n                }\n            }\n        }\n        function valueFormat(value) {\n            if (value === \"\" || value === null || value === undefined) {\n                return \"--\"\n            }\n            return value.toString()\n        }\n        function valueBornWeight(value) {\n            if (value === \"\" || value === null || value === undefined || value === 0) {\n                return \"\"\n            }\n            return value.toString() + \"g → \"\n        }\n        const USERDATA = this.state.PBASINGNINFO\n        if (USERDATA.length === 0) {\n            return <Icon type=\"loading\" />\n        }\n        const BEDNUMBER = Number(this.props.location.state.BEDNUMBER)\n        const CASEID = this.props.location.state.CASEID\n        const HISID = this.props.location.state.HISID\n        const DOCLIST = this.state.PDOCNEW\n        const ploc = this.state.PLOC\n        const transintime = ploc.PLOCTM.toString()\n        const transindt = ploc.PLOCDT.toString()\n        const transinid = \"NICU\" + transindt + transintime\n        const { TabPane } = Tabs;\n        // const selectrender = this.OptionSelectRender()\n        const Birthday = USERDATA.PBIRTHDT\n        const { persionstatus, QMNC, QTWER } = this.state\n        const BornWeight = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornWeight\n        const BornWeeks = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornWeeks\n        const BornDays = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornDays\n        const Weight = WardState.NewestWeight(QTWER)\n\n\n\n\n        console.log(this.props.location.state.fromHistory)\n        //true:fromHistory\n\n        const weightList = QTWER.filter(function (info, index, arr) {\n            return info.type === \"TW\"\n        })\n        const caseinfo = {\n            \"HISID\": HISID,\n            \"CASEID\": CASEID,\n            \"WEEK_BORN\": BornWeeks,\n            \"DAY_BORN\": BornDays,\n            \"TRANSINID\": transinid,\n            \"TRANSINDT\": transindt,\n            \"WEIGHT\": weightList,\n            \"PBASINGNINFO\": USERDATA,\n            \"PLOCSTART\": this.state.PLOCSTART\n        }\n        console.log(QTWER)\n        const patientDetail = this.fixpatientDate(this.state.QENT)\n        const status = {\n            date: moment(Birthday, \"YYYYMMDD\").valueOf(),\n            week: BornWeeks,\n            day: BornDays\n        }\n        const AgeStatus = WardState.CalculateAge(status)\n\n        function formatICUDays(fromHistory, transoutTime, transindt) {\n            if (fromHistory === true) {\n                if (transoutTime !== undefined || transoutTime !== null) {\n                    const end = moment(transoutTime, \"YYYYMMDDHHmm\")\n                    const start = moment(transindt, \"YYYYMMDD\")\n                    const ICUDays = end.diff(start, 'days')\n                    return \"轉出時入住ICU第\" + ICUDays + \"天\"\n                }\n                return \"--\"\n            }\n            const end = moment()\n            const start = moment(transindt, \"YYYYMMDD\")\n            const ICUDays = end.diff(start, 'days')\n            return \"入住ICU第\" + ICUDays + \"天\"\n        }\n        const ICUDays = formatICUDays(this.props.location.state.fromHistory, this.props.location.state.transouttime, transindt)\n        return ( \n            <div>\n                <div style={{ display: 'flex', justifyContent: \"space-between\", alignItems: 'center', height: \"40px\", marginTop: \"10px\", padding: \"8px\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", backgroundColor: \"#71b0e46e\" }}>\n                    {/* <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(6,auto)\", gridColumnGap: \"10px\", alignItems: \"center\" }}> */}\n                    <div style={{ fontWeight: \"600\", color: \"black\", fontSize: \"16px\" }}>\n                        NICU-{bednumberformat(Number(BEDNUMBER))}\n                        <span style={{ lineHeight: \"30px\", fontSize: \"20px\", padding: \"0px 4px\" }}>{USERDATA.PNAMEC.toString().trim()}</span>\n                        {HISID}\n                    </div>\n                    <t2 >\n                        生日：<span style={{ fontWeight: \"600\", color: \"black\" }}>{moment(Birthday, \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</span>\n                    </t2>\n                    <t2>\n                        當日年齡： {valueFormat(BornWeeks)}+{valueFormat(BornDays)} > <spam style={{ fontWeight: \"600\", color: \"black\" }}>{AgeStatus}</spam>\n                    </t2>\n                    <t2>\n                        當日體重： {valueBornWeight(BornWeight)}<spam style={{ fontWeight: \"600\", color: \"black\" }}>{valueFormat(Weight)}g</spam>\n                    </t2>\n                    <t2 style={{ fontWeight: \"600\", color: \"black\" }}>{ICUDays}</t2>\n                    <t2 style={{ color: \"blue\", textDecoration: \"underline\", cursor: \"pointer\" }} onClick={this.showModal}>入院評估</t2>\n                    <Modal\n                        title=\"病人基本資料\"\n                        visible={this.state.visible}\n                        onOk={this.handleOk}\n                        onCancel={this.handleCancel}\n                        width={800}\n                        footer={null}>\n                        <Patientinfo caseinfo={caseinfo} patientDetail={patientDetail}></Patientinfo>\n                    </Modal>\n                    {/* </div> */}\n                </div>\n                <Tabs defaultActiveKey={this.state.tabstring} tabPosition={'top'} onChange={this.onChange}>\n                    <TabPane tab=\"時間點檢視\" key=\"時間點檢視\">\n                        <Crosssectionlayout parentDateCallback={this.callback} caseinfo={caseinfo}></Crosssectionlayout>\n                    </TabPane>\n                    <TabPane tab=\"時間軸檢視\" key=\"時間軸檢視\">\n                        <Chroniclelayout caseinfo={caseinfo}></Chroniclelayout>\n                    </TabPane>\n                    <TabPane tab=\"輸出入細節\" key=\"輸出入細節\">\n                        <Flowsheetlayout caseinfo={caseinfo}></Flowsheetlayout>\n                    </TabPane>\n                    <TabPane tab=\"檢驗及報告\" key=\"檢驗及報告\">\n                        <Examreport caseinfo={caseinfo}>></Examreport>\n                    </TabPane>\n                    <TabPane tab=\"醫囑及藥囑\" key=\"醫囑及藥囑\">\n                        <Orderview caseinfo={caseinfo}>></Orderview>\n                    </TabPane>\n                    <TabPane tab=\"跨團隊紀錄\" key=\"跨團隊紀錄\">\n                        <Noteview caseinfo={caseinfo}>></Noteview>\n                    </TabPane>\n                    <TabPane tab=\"呼吸評估\" key=\"呼吸評估\">\n                        <RTview caseinfo={caseinfo}>></RTview>\n                    </TabPane>\n                    <TabPane tab=\"營養評估\" key=\"營養評估\">\n                        <Nurtionview caseinfo={caseinfo}>></Nurtionview>\n                    </TabPane>\n                    <TabPane tab=\"感染評估\" key=\"感染評估\">\n                        <Infectionview caseinfo={caseinfo}>></Infectionview>\n                    </TabPane>\n                    <TabPane tab=\"行事曆及註記\" key=\"行事曆及註記\">\n                        <Scheduleview caseinfo={caseinfo}>></Scheduleview>\n                    </TabPane>\n                </Tabs>\n            </div>\n        );\n    }\n}\n\nexport default Patientviewlayout;\n","import React, { Component } from 'react';\nimport { Table, Input, Select, Button, Modal, Icon } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider';\nconst { confirm } = Modal;\n\nclass Powersetting extends Component {\n    constructor(props) {\n        super();\n\n        this.addUserdata = this.addUserdata.bind(this)\n        this.adduserhandleChange = this.adduserhandleChange.bind(this)\n    }\n\n    state = {\n        MouseClick: 0,\n        name: '',\n        role: 0,\n        adduser: undefined,\n        userList: [],\n        power: ['僅可瀏覽病房總覽、歷史資料查詢', '可瀏覽和編輯病房總覽、歷史資料查詢', '可瀏覽和編輯權限設定、系統摘要'],\n        powerName: ['唯讀使用者', '一般使用者', '系統管理者'],\n        visible: false,\n        radioValue: 0,\n        pwdRadio: true,\n        inputUsername: '',\n        inputPassword: '',\n        inputName: '',\n        inputDoctorid: '',\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        this.nameChange = this.nameChange.bind(this)\n        this.queryUserdata = this.queryUserdata.bind(this)\n        this.inputuserName = this.inputuserName.bind(this)\n        this.inputPassword = this.inputPassword.bind(this)\n        this.inputName = this.inputName.bind(this)\n        this.inputDoctorid = this.inputDoctorid.bind(this)\n\n        ApiProvider.getAlluser()\n            .then(data => {\n                this.setState({ userList: data.data })\n            })\n            .catch(err => { })\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n\n    radioOnChange = e => {\n        this.setState({\n            radioValue: e.target.value,\n        }, () => {\n            if (this.state.radioValue === 1) {\n                this.setState({\n                    pwdRadio: true,\n                })\n            } else if (this.state.radioValue === 0) {\n                this.setState({\n                    pwdRadio: false,\n                })\n            }\n        })\n    };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    MouseClickTable(record) {\n        this.setState({\n            MouseClick: record\n        })\n    }\n\n    queryUserdata() {\n        const { userList, role } = this.state\n        let fixData = userList\n\n        if (role != 0) {\n            fixData = fixData.filter(data => data.role == (role - 1))\n        }\n\n        if (this.state.name !== '') {\n            fixData = fixData.filter(data => data.name.match(this.state.name) != null)\n        }\n        return fixData\n    }\n\n    addUserdata() {//sso 只剩下4種角色 其他先傳空直\n        ApiProvider.register(this.state.inputName, '', this.state.adduser, this.state.inputUsername, 'none')\n            .then(data => {\n                ApiProvider.getAlluser()\n                    .then(data => {\n                        this.setState({ userList: data.data, inputUsername: '', inputPassword: '', inputName: '', inputDoctorid: '' })\n                    })\n                    .catch(err => { })\n            })\n            .catch(err => { })\n        this.setState({\n            visible: false,\n        });\n    }\n\n\n    showDeleteConfirm(name, account, role, roleString) {\n        const set_State = this.setState.bind(this)\n        confirm({\n            title: '請問您確定要刪除此帳號嗎?',\n            content: <div>姓名：{name}<br />角色：{roleString}<br />帳號：{account}</div>,\n            okText: 'Yes',\n            okType: 'danger',\n            cancelText: 'No',\n            onOk() {\n                ApiProvider.deleteUser(name, role, account).then(data => {\n                    ApiProvider.getAlluser()\n                        .then(data => {\n                            set_State({ userList: data.data })\n                        })\n                        .catch(err => { })\n                }).catch(err => { })\n            },\n            onCancel() {\n            },\n        });\n    }\n\n    EditStyle(key, name, account, role, roleString) {\n        if (key === this.state.MouseClick) {\n            return (\n                <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gridColumnGap: '10px' }}>\n                    <div>\n                        <Button onClick={this.showDeleteConfirm.bind(this, name, account, role, roleString)} type=\"dashed\">\n                            刪除\n                        </Button>\n                    </div>\n                </div>\n            );\n        }\n        else return null\n    }\n\n    handleChange = (value) => {\n        this.setState({ role: value })\n    }\n\n    adduserhandleChange(value) {\n        this.setState({ adduser: value })\n    }\n\n    nameChange(event) {\n        this.setState({ name: event.target.value })\n    }\n\n    inputuserName(event) {\n        this.setState({ inputUsername: event.target.value })\n    }\n\n    inputPassword(event) {\n        this.setState({ inputPassword: event.target.value })\n    }\n\n    inputName(event) {\n        this.setState({ inputName: event.target.value })\n    }\n\n    inputDoctorid(event) {\n        this.setState({ inputDoctorid: event.target.value })\n    }\n\n    Searchbar = () => {\n        const { Option } = Select;\n\n        return (\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <div style={{ fontSize: '16px' }}>\n                        角色:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Select defaultValue={this.state.role} style={{ width: 150 }} onChange={this.handleChange}>\n                            <Option value={0}>全部使用者</Option>\n                            <Option value={1}>唯讀使用者</Option>\n                            <Option value={2}>一般使用者</Option>\n                        </Select>\n                    </div>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        姓名:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"輸入個案姓名\" onChange={this.nameChange}></Input>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n    render() {\n\n        const columns = [\n            {\n                title: '編號',\n                dataIndex: 'id',\n                key: 'id',\n                width: \"10%\"\n            },\n            {\n                title: '姓名',\n                dataIndex: 'name',\n                key: 'name',\n                width: \"10%\"\n            },\n            {\n                title: '醫師帳號',\n                dataIndex: 'account',\n                key: 'account',\n                width: \"12%\"\n            },\n            {\n                title: '角色',\n                dataIndex: 'role',\n                key: 'role',\n                width: \"10%\"\n            },\n            {\n                title: '權限',\n                dataIndex: 'power',\n                key: 'power',\n                width: \"40%\"\n            },\n            {\n                dataIndex: 'clickstate',\n                key: 'clickstate',\n                width: \"7%\"\n            }\n        ];\n\n        const fixData = this.queryUserdata()\n\n        const userData = fixData.map((data, index) => {\n            let roleString = ''\n            let powerString = ''\n\n            roleString = this.state.powerName[data.role]\n            powerString = this.state.power[data.role]\n\n            return [\n                {\n                    key: ++index,\n                    id: index,\n                    name: data.name,\n                    role: roleString,\n                    power: powerString,\n                    account: data.username,\n                    doctorid: data.doctorid,\n                    clickstate: this.EditStyle(index, data.name, data.username, data.role, roleString)\n                }\n            ]\n        })\n\n        let myNewArray = [].concat.apply([], userData);\n        const { Option } = Select;\n\n        // if (this.state.userList.length === 0) {\n        //     return (\n        //         <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>\n        //             <Icon type=\"loading\" />\n        //         </div>\n        //     );\n        // }\n\n        return (\n            <div>\n                <div style={{ display: \"flex\", justifyContent: 'space-between', alignItems: 'center' }}>\n                    {this.Searchbar()}\n                    <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                        <Button style={{ width: \"100%\" }} onClick={this.showModal}>新增帳號</Button>\n                        <Modal\n                            title=\"新增帳號\"\n                            visible={this.state.visible}\n                            onOk={this.addUserdata}\n                            onCancel={this.handleCancel}\n                            width=\"570px\"\n                        >\n                            <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n\n                            </div>\n                            <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\", marginTop: \"10px\" }}>\n                                <div style={{ marginLeft: \"10px\" }}>\n                                    醫師帳號：\n                                <Input id=\"username\" value={this.state.inputUsername} onChange={this.inputuserName} placeholder=\"輸入帳號\" style={{ width: '120px' }} />\n                                </div>\n                                <div style={{ marginLeft: \"10px\" }}>\n                                    姓名：\n                                <Input id=\"name\" placeholder=\"輸入姓名\" value={this.state.inputName} onChange={this.inputName} style={{ width: '120px' }} />\n                                </div>\n                            </div>\n                            <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\", marginTop: \"10px\", marginLeft: \"13px\" }}>\n                                <div style={{ marginLeft: \"0px\" }}>\n                                    角色：{this.state.pwdRadio ?\n                                        <Select placeholder='選擇角色' style={{ width: 150 }} onChange={this.adduserhandleChange.bind(this)}>\n                                            <Option value={0}>唯讀使用者</Option>\n                                            <Option value={1}>一般使用者</Option>\n                                        </Select> :\n                                        <Select placeholder='選擇角色' style={{ width: 150 }} onChange={this.adduserhandleChange.bind(this)}>\n                                            <Option value={2}>系統設定管理員</Option>\n                                        </Select>}\n                                </div>\n                            </div>\n                            <div>\n                            </div>\n                        </Modal>\n                    </div>\n                </div>\n                <div style={{ marginTop: '20px' }}>\n                    <Table columns={columns} dataSource={myNewArray} onRow={record => {\n                        return {\n                            onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                            onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                        };\n                    }} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Powersetting;\n","import React, { Component } from 'react';\nimport { Table, Icon } from 'antd';\n\nclass Systemlogtable extends Component {\n    state = {\n        MouseClick: 0\n    }\n\n    MouseClickTable(record) {\n        this.setState({\n            MouseClick: record\n        })\n    }\n\n    render() {\n\n        const powerName = ['唯讀使用者', '一般使用者', '系統管理員']\n        const loginlog_table = this.props.loginlogList.map(\n            (info, index) => {\n                let managerName = ''\n                let dateTime = info.time.split(\"T\")[0] + ' ' + info.time.split(\"T\")[1].split(\".\")[0]\n\n                managerName = powerName[info.role]\n\n                return {\n                    key: index,\n                    time: dateTime,\n                    event: 'User ' + info.name + '(' + managerName + ') login system'\n                }\n            }\n        )\n\n        const apilog_table = this.props.apilogList.map((data, index) => {\n            if (data !== null) {\n                let date = data.split(\"- -\")[1].split(\"]\")[0].split(\"[\")[1].split(\" \")[0].split(\"/\")\n                const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n                for (let j = 0; j < months.length; j++) {\n                    if (date[1] === months[j]) {\n                        date[1] = months.indexOf(months[j]) + 1\n                    }\n                }\n                if (date[1] < 10) {\n                    date[1] = '0' + date[1]\n                }\n                let time = date[2].split(\":\")[0] + \"-\" + date[1] + \"-\" + date[0] + \" \" + date[2].split(\":\")[1] + \":\" + date[2].split(\":\")[2] + \":\" + date[2].split(\":\")[3]\n                let content = data.split(\"- -\")[1].split(\"]\")[1]\n\n                return {\n                    key: index,\n                    time: time,\n                    event: content\n                }\n            }\n            return null\n        })\n\n        const columns = [\n            {\n                title: '記錄時間',\n                dataIndex: 'time',\n                key: 'time',\n                width: \"1%\"\n            },\n            {\n                title: '事件',\n                dataIndex: 'event',\n                key: 'event',\n                width: \"10%\"\n            }\n        ]\n\n        // if (loginlog_table.length === 0 || apilog_table.length === 0) {\n        //     return (\n        //         <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>\n        //             <Icon type=\"loading\" />\n        //         </div>\n        //     );\n        // }\n\n        return (\n            <div style={{ marginTop: '20px' }}>\n                {\n                    this.props.optionValue ? <Table columns={columns} dataSource={apilog_table} onRow={record => {\n                        return {\n                            onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                            onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                        }\n                    }} pagination={{\n                        onChange: (page, pageSize) => {\n                            this.props.getPages(page)\n                        }\n                    }} /> :\n                        <Table columns={columns} dataSource={loginlog_table} onRow={record => {\n                            return {\n                                onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                                onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                            }\n                        }} pagination={{\n                            onChange: (page, pageSize) => {\n                                this.props.getPages(page)\n                            }\n                        }} />\n                }\n            </div>\n        )\n    }\n}\n\nexport default Systemlogtable\n","import React, { Component } from 'react';\nimport { Progress, Select, DatePicker } from 'antd';\nimport Systemlogtable from './Systemlogtable'\nimport * as ApiProvider from '../API/ApiProvider';\n\nclass Systemlog extends Component {\n\n    state = { startTime: \"\", endTime: \"\", totalSpace: 0, usingSpace: 0, percent: 0, option: 0, loginlogList: [], apilogList: [], page: 1 }\n\n    componentDidMount() {\n        ApiProvider.getSpace()\n            .then(data => {\n                const totalSpace = data.data[0].total / 1024 / 1024 / 1024\n                const usingSpace = (data.data[0].total - data.data[0].unuse) / 1024 / 1024 / 1024\n                const percent = (usingSpace / totalSpace) * 100\n                this.setState({ totalSpace: totalSpace.toFixed(2), usingSpace: usingSpace.toFixed(2), percent: percent.toFixed(2) })\n            })\n            .catch(err => { })\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    onChange(date, dateString) {\n        this.setState({ startTime: dateString[0], endTime: dateString[1] }, () => {\n            if (this.state.option === 0) {\n                this.queryLoginLogdata()\n            } else if (this.state.option === 1) {\n                this.queryApiLogdata()\n            }\n        });\n    }\n\n    queryLoginLogdata() {\n        if (this.state.startTime !== \"\" && this.state.endTime !== \"\") {\n            const st = new Date(this.state.startTime.split('-')[0], this.state.startTime.split('-')[1] - 1, this.state.startTime.split('-')[2]).toISOString().split('.')[0];\n            const et = new Date(this.state.endTime.split('-')[0], this.state.endTime.split('-')[1] - 1, this.state.endTime.split('-')[2]).toISOString().split('.')[0];\n\n            ApiProvider.getLoginlog(st, et)\n                .then(data => {\n                    this.setState({ loginlogList: data.data, apilogList: [] })\n                })\n                .catch(err => { })\n        }\n    }\n\n    queryApiLogdata() {\n        if (this.state.startTime !== \"\" && this.state.endTime !== \"\") {\n            ApiProvider.getApilog(this.state.startTime)\n                .then(data => {\n                    this.setState({ apilogList: data.data, loginlogList: [] })\n                })\n                .catch(err => { })\n        }\n    }\n\n    getPages(pages) {\n        this.setState({ page: pages })\n    }\n\n    handleChange(value) {\n        this.setState({ option: value })\n    }\n    render() {\n        const { Option } = Select;\n        const { RangePicker } = DatePicker;\n        const onChange = this.onChange.bind(this);\n\n        return (\n            <div>\n                <div style={{ fontSize: '22px' }}>系統空間使用狀況</div>\n                <div style={{ marginTop: \"10px\" }}><Progress percent={this.state.percent} showInfo={false} /></div>\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginTop: \"10px\" }}>\n                    <div>\n                        <div>已使用空間/總空間</div>\n                        <div>{this.state.usingSpace}GB({this.state.percent}%)/{this.state.totalSpace}GB</div>\n                    </div>\n                    <div>\n                        <div>收案中的個案資料0.9GB(10.5%)</div>\n                        <div>0.9GB(10.5%)</div>\n                    </div>\n                </div>\n                <div style={{ marginTop: '20px' }}>\n                    <div style={{ fontSize: '22px' }}>Event Log</div>\n                    <div style={{ marginTop: \"10px\" }}>\n                        <Select placeholder='選擇log' style={{ width: 200 }} onChange={this.handleChange.bind(this)}>\n                            <Option value={0}>Login log</Option>\n                            <Option value={1}>API access log</Option>\n                        </Select>\n                        <RangePicker getCalendarContainer={triggerNode => triggerNode.parentNode} onChange={onChange} style={{ marginLeft: \"10px\", width: \"250px\" }} />\n                    </div>\n                    <div style={{ marginTop: '10px' }}>\n                        <Systemlogtable loginlogList={this.state.loginlogList} apilogList={this.state.apilogList} optionValue={this.state.option} getPages={this.getPages.bind(this)} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Systemlog\n","import React, { Component } from 'react';\nimport { Tabs } from 'antd';\nimport Powersetting from '../Systemgroup/powersetting'\nimport Systemlog from '../Systemgroup/Systemlog'\n// import Warningmanage from '../Systemgroup/Warningmanage'\n\n\nclass Systemcontrol extends Component {\n    state = {\n        powerLogin: 0\n    }\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    render() {\n\n        const { TabPane } = Tabs;\n        const bollogin = this.state.powerLogin == 2\n        return (\n            <div style={{ paddingLeft: \"24px\", paddingRight: \"24px\" }}>\n                <div style={{ fontSize: \"22px\", height: '50px', lineHeight: \"50px\" }}>系統設定</div>\n                <Tabs defaultActiveKey=\"5\">\n                    <TabPane tab=\"權限設定\" key=\"1\" >\n                        <Powersetting />\n                    </TabPane>\n                    {\n                        bollogin && <TabPane tab=\"系統摘要\" key=\"2\" >\n                            <Systemlog />\n                        </TabPane>\n                    }\n                    {/*<TabPane tab=\"裝置連線狀態管理\" key=\"3\">\n                    </TabPane> \n                    <TabPane tab=\"病人資料狀態管理\" key=\"3\">\n                    </TabPane>                  \n                    <TabPane tab=\"警示管理\" key=\"5\">\n                        <Warningmanage/>\n                    </TabPane>*/}\n                </Tabs>\n            </div>\n        );\n    }\n}\n\nexport default Systemcontrol;\n","import React, { Component } from 'react';\nimport './Layout.scss';\nimport Sidermenu from './Sidermenu';\nimport Bedview from '../Wardview/Bedinfo/Bedview'\nimport Historyview from '../Content/Historyview'\nimport Patientviewlayout from '../Patientview/Patientviewlayout'\nimport Systemcontrol from '../Content/Systemcontrol'\nimport { Route, Switch, Link } from 'react-router-dom';\nimport { yyyymmddformat, weekdateformat } from '../Function/Timeformat'\nimport { Icon } from 'antd'\n\nclass Layoutframe extends Component {\n    onClickLogout() {\n        sessionStorage.clear();\n    }\n    render() {\n        const UsrName = sessionStorage.getItem('user');\n        const url_path = this.props.location.pathname\n        return (\n            <div style={{ height: \"100vh\" }}>\n                <div className=\"header\">\n                    {/*eslint-disable-next-line*/}\n                    <div style={{ display: 'flex', alignItems: 'center', }}>\n                        <div style={{ fontSize: \"20px\", fontWeight: \"default\" }}>北榮NICU智慧醫療系統</div>\n                        <Sidermenu path={url_path} routes={this.props.route}></Sidermenu>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"10px\" }}>\n                        <t3 style={{ color: 'white' }}>{UsrName}醫師 {yyyymmddformat(new Date())} {weekdateformat(new Date())}</t3>\n                        <Link to=\"/Login\" onClick={() => this.onClickLogout()}>\n                            <Icon style={{ color: \"white\" }} type=\"logout\" />\n                        </Link>\n                    </div>\n                </div>\n                <div className=\"content\">\n                    <Switch>\n                        <Route path={`${this.props.match.path}/ward`} component={Bedview} />\n                        <Route path={`${this.props.match.path}/history`} component={Historyview} />\n                        <Route path={`${this.props.match.path}/system`} component={Systemcontrol} />\n                        <Route path={`${this.props.match.path}/patient`} component={Patientviewlayout} />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Layoutframe;\n","import React, { Component, cloneElement } from 'react';\nimport { Button, Icon } from 'antd';\nimport { Redirect } from 'react-router-dom'\nimport { Input } from 'antd'\nimport * as ApiProvider from '../API/ApiProvider';\nimport logo from '../Image/Logo/1200px-Taipei_Veterans_General_Hospital_Emblem.svg.png'\n\n\nclass Loginview extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: false,\n            permission: true,\n            statusstring: null\n        }\n        this.setRedirect = this.setRedirect.bind(this);   //把元件中的this繫結到handleClick方法中，這樣就會保持this一致          \n    };\n\n    componentDidMount() {\n        const account = document.querySelector('#account')\n        const password = document.querySelector('#password')\n        account.addEventListener('focus', () => {\n            account.addEventListener('keyup', e => {\n                if (e.keyCode === 13) {\n                    account.blur();\n                    password.focus();\n                }\n            })\n        })\n\n        password.addEventListener('focus', () => {\n            password.addEventListener('keyup', e => {\n                e.keyCode === 13 && this.setRedirect()\n            })\n        })\n    }\n\n    setRedirect = () => {\n        const account = document.getElementById(\"account\").value;\n        const password = document.getElementById(\"password\").value;\n        ApiProvider.login(account, password)\n            .then(result => {\n                console.log(\"login OK \" + JSON.stringify(result));\n                const userData = result.data\n                const user = account\n                const role = userData[0].role\n                sessionStorage.setItem('user', user);\n                sessionStorage.setItem('role', role);\n                this.setState({\n                    redirect: true\n                })\n            })\n            .catch(err => {\n                console.log(\"login NG \" + JSON.stringify(err));\n                this.setState({\n                    permission: false,\n                    statusstring: \"帳號或密碼錯誤\"\n                })\n            });\n    }\n    renderRedirect = () => {\n        const login = sessionStorage.getItem('user');\n        const role = sessionStorage.getItem('role');\n        if (login !== null) {\n            if (Number(role) === 2) {\n                return <Redirect from={\"/login\"} to={\"/nicu/system\"} />\n            }\n            return <Redirect from={\"/login\"} to={\"/nicu/ward/wardindex\"} />\n        }\n    }\n\n\n    render() {\n        return (\n            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"100vh\", width: \"100vw\", background: 'linear-gradient(to bottom, rgba(195, 239, 255, 1), rgba(46, 100, 164, 1))' }}>\n                {this.renderRedirect()}\n                <div style={{ textAlign: \"center\" }}>\n                    <img style={{ width: \"200px\" }} src={logo} alt='logo'></img>\n                    <div style={{ display: 'flex', justifyContent: \"center\", alignItems: \"center\", flexWrap: \"wrap\" }}>\n                        <div style={{ color: \"white\", fontSize: \"20px\", textAlign: \"center\", width: \"100%\" }}>台北榮民總醫院 NICU智慧醫療系統</div>\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div style={{ width: \"350px\", height: \"250px\", borderRadius: \"4px\", backgroundColor: \"white\", textAlign: \"center\", padding: '25px', position: \"relative\" }}>\n                                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                                    <div style={{ height: \"32px\", width: \"32px\", borderRadius: \"2px\", backgroundColor: \"rgba(46,100,164,1)\", color: \"white\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                        <Icon type=\"user\" style={{ color: \"white\" }} />\n                                    </div>\n                                    <Input id=\"account\" style={{ marginLeft: \"20px\" }} placeholder=\"請輸入3270主機帳號\"></Input>\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginTop: \"25px\" }}>\n                                    <div style={{ height: \"32px\", width: \"32px\", borderRadius: \"2px\", backgroundColor: \"rgba(46,100,164,1)\", color: \"white\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                        <Icon type=\"lock\" style={{ color: \"white\" }} />\n                                    </div>\n                                    <Input type=\"password\" id=\"password\" style={{ marginLeft: \"20px\" }} placeholder=\"請輸入密碼\"></Input>\n                                </div>\n                                <Button style={{ width: \"280px\", backgroundColor: \"rgba(46, 100, 164, 1)\", color: \"white\", marginTop: \"70px\" }} onClick={this.setRedirect}>登入</Button>\n                                <div style={{ display: this.state.permission ? \"none\" : \"block\", color: \"red\", fontSize: \"1rem\" }}>{this.state.statusstring}</div>\n                            </div>\n                        </div>\n                        <div style={{ width: \"100%\", justifyContent: \"center\", alignItems: \"center\", display: \"flex\" }}>200310.007-T</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Loginview\n","import React from 'react';\nimport Homepage from './Homepage'\nimport './App.scss';\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\nimport Layoutframe from './Layout/Layout'\nimport Loginview from './Layout/Loginview'\nimport 'antd/dist/antd.css';\nimport { ConfigProvider } from 'antd';\nimport zhTW from 'antd/es/locale/zh_TW';\nimport moment from 'moment';\nimport 'moment/locale/zh-tw';\nmoment.locale('zh-tw');\n\n\n\nfunction App() {\n  document.documentElement.style.fontSize = '14px'\n  return (\n    <div className=\"AllPage\">\n      <ConfigProvider locale={zhTW}>\n        <BrowserRouter>\n          <Route exact path=\"/\" component={Homepage} />\n          <Redirect from={'/'} to={\"/login\"} />\n          <Route path=\"/nicu\" component={Layoutframe} />\n          <Route path=\"/login\" component={Loginview} />\n        </BrowserRouter>\n      </ConfigProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/details.bc0482ca.svg\";"],"sourceRoot":""}