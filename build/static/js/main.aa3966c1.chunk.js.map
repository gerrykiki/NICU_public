{"version":3,"sources":["Image/svg/edit2.svg","Image/svg/file1.svg","Image/svg/file2.svg","Image/svg/filter.svg","Image/svg/Wardview.svg","Image/svg/Historyview.svg","Image/svg/Control.svg","Image/svg/delete.svg","Image/svg/dragdown.svg","Image/svg/RT.svg","Image/svg/calender.svg","Image/svg/calenderwhite.svg","Image/svg/ping.svg","Image/svg/pingwhite.svg","Image/svg/Edit.svg","Image/svg/Chooseedit.svg","Homepage.js","Layout/Sidermenu.js","Function/Wardstate.js","API/ApiProvider.js","API/ApiGithub.js","Wardview/Wardcardstatus.js","Wardview/WardCardvalue-k.js","Function/Wardbedfunction.js","Wardview/Wardcard/Wardcarddetail.js","Wardview/Wardcard/UnpreviewWardCardDetail.js","Commonfunction.js","Wardview/Wardnote.js","Wardview/Bedinfo.js","Function/Timeformat.js","Patientview/CrossSectionView/Labview.js","Wardview/WardBedinformation.js","Module/Schedule_event.js","Wardview/Wardschedule.js","Wardview/Wardinfoindex.js","jsonResponse.js","Wardview/Wardlifechart.js","Wardview/Wardmonthafter.js","Wardview/Wardgrewchart.js","Patientview/Schedule/Notice.js","Patientview/CrossSectionView/Labviewitem.js","Function/FiliterReg.js","Wardview/Wardcardvitalsign.js","Wardview/Wardchart.js","Wardview/Wardunfousercheckbox.js","Patientview/Patientviewinfo.js","Wardview/Wardinfouser-k.js","Wardview/Bedinfo/Bedview.js","Content/Historyview.js","Patientview/CrossSectionView/Crossectionvitalsignchart.js","Patientview/CrossSectionView/Warningsettinglist.js","Patientview/CrossSectionView/Addnewwaring.js","Patientview/CrossSectionView/Vitalsign.js","Patientview/Controlbar.js","Module/iopage.js","Patientview/CrossSectionView/Crossection_io.js","Patientview/CrossSectionView/NonlabviewtableCell.js","Patientview/ExamReportModal.js","Patientview/CrossSectionView/Nonlabviewtable.js","Patientview/CrossSectionView/Nonlabview.js","Patientview/CrossSectionView/RTtable.js","Patientview/CrossSectionView/GAS.js","Patientview/CrossSectionView/RemarkModal.js","Patientview/CrossSectionView/RTbreathtablecell.js","Patientview/CrossSectionView/RTbreathetable.js","Patientview/CrossSectionView/RTbreathe.js","Patientview/Prescriptionorder/Prescriptionordertablecell.js","Patientview/Prescriptionorder/Prescriptionordertable.js","Patientview/Prescriptionorder/Prescriptionorder.js","Patientview/Treatmentorder/Treatmentordertablecell.js","Patientview/Treatmentorder/Treatmentordertable.js","Patientview/Treatmentorder/Treatmentorder.js","Module/Notecell.js","Module/Note.js","Patientview/CrossSectionView/Crosssectionschedule.js","Patientview/CrossSectionView/Crosssection_todo.js","Patientview/CrossSectionView/Crosssectionlayout.js","Patientview/ChronicleView/Chronic_io.js","Patientview/ChronicleView/ChronicTableCellTooltipCell.js","Patientview/ChronicleView/ChronicTableCell.js","Patientview/ChronicleView/ChronicTable.js","Patientview/ChronicleView/ChronicLab.js","Patientview/ChronicleView/ChronicRTTableCell.js","Patientview/ChronicleView/ChronicRTTable.js","Patientview/ChronicleView/ChronicRT.js","Patientview/ChronicleView/ChronicOrderTable.js","Patientview/ChronicleView/ChronicOrder.js","Patientview/ChronicleView/ChronicWeightTable.js","Patientview/ChronicleView/ChronicWeight.js","Module/Vitalxaxis.js","Module/Vitalxaxisbot.js","Patientview/ChronicleView/Chronic_vital.js","Patientview/ChronicleView/Chroniclelayout.js","Patientview/FlootSheetView/Flootsheetio.js","Patientview/FlootSheetView/Flootsheetlayout.js","Patientview/ExamReport/Examchart.js","Patientview/ExamReport/ExamLabview.js","Data/RegularData.js","Patientview/ExamReport/ExamNonlabtablecell.js","Patientview/ExamReport/NonLabview.js","Patientview/ExamReport/ExamReport.js","Patientview/Orderview/Orderview.js","Patientview/NoteView/Note.js","Patientview/RT/RTview.js","Patientview/Nurtion/Nurtionfeedingcell.js","Patientview/Nurtion/Nurtionfeeding.js","Patientview/Nurtion/Nurtion_TPN_cell.js","Patientview/Nurtion/Nurtion_TPN.js","Patientview/Nurtion/Watervaluechart.js","Patientview/Nurtion/Nurtion.js","Patientview/Infection/Infectionlabtable.js","Patientview/Infection/Infectionlab.js","Patientview/Infection/Infection.js","Patientview/Schedule/Bedsidecard.js","Patientview/Schedule/Scheduletodo.js","Patientview/Schedule/Calendercell.js","Patientview/Schedule/Calender.js","Patientview/Schedule/Scheduleview.js","Patientview/Patientviewlayout.js","Systemgroup/powersetting.js","Systemgroup/Systemlogtable.js","Systemgroup/Systemlog.js","Content/Systemcontrol.js","Layout/Layout.js","Layout/Loginview.js","App.js","serviceWorker.js","index.js","Image/svg/details.svg"],"names":["module","exports","Homepage","Component","Sidermenu","state","powerLogin","powerLogins","Number","sessionStorage","getItem","this","setState","key","match","value","path","props","Selectkeynumber","rule","console","log","style","display","alignItems","marginLeft","height","gridTemplateColumns","gridColumnGap","to","class","select_hover","src","wardviewlogo","alt","historylogo","controllogo","CalculateAge","BornStatus","minus","Math","floor","moment","valueOf","date","week","day","month","statecolor","Labwarningvalue","title","simulationCentermonitordata","time","timeInterval","dataarray","k","dataset","i","newNum","random","push","simulationnisdata","BornWeight","weightlist","birthday","undefined","Array","isArray","findata","filter","index","rec_dat","type","length","parseInt","value2","NewestWeight","XM2JSON","data","xm2","X2JS","status","xml2js","outmsg","ret","parsedata","resconts","rescont","Doc","DocList","Main","element","PDTYPE","PDDOCNMC","toString","trim","selectweight","List","array","axios","defaults","baseURL","config","headers","getAlluser","get","getQDC","caseno","st","et","getQENT","getQSPE","getOnePatientNotice","transinno","HISID","getAllPatient","getOnePatientRemark","transid","getOneRemark","remarkid","getOnePatientSchedule","starttime","endtime","getStoredProcedureORDLIST","hisid","dpt","docid","getStoredProcedureRESDBGAS","getStoredProcedureRESDGLU1","getStoredProcedureRESDISP","seq","getStoredProcedureRESLAB01","getStoredProcedureRESLAB02","getStoredProcedureRESLAB0C","getStoredProcedureRESSECT","getStoredProcedureTRTMNTQ1","getStoredProcedureUDORDER0","getTablePBASINFO","PHISTNUM","getTablePDOCNEW","PCASENO","getTablePLOC","createTodo","caseid","context","body","post","getOneTodo","getPatientwardvalueMedian","startTime","endTime","getPatientwardvalueBoxPlot","interval","getVitalSignData","getHisidwardvalue","axiosGithub","create","timeout","getGitHubJson","string","Wardcarstatus","TRTMNTQ1","UDORDER0","FlagReg","TRQ1","ApiProvider","then","info","arr","ORSTATUS","catch","err","UDORDER","dataList","UDSTATUS","Reg","ApiGithub","Promise","all","result","parseFlagData","Flag","item","StatusUDORDER","some","UDDRGNAM","toLowerCase","UDGNAME","ParseValueUD","indexOf","StatusTRTMNTQ1","ORPROCED","ParseValueTRT","statusspan","source","style_change","AntiStatus","TPNStatus","NP0Status","FoleyStatus","DrainStatus","statuslist","InvasiveRespiratorStatus","NonInvasiveRespiratorStatus","RespiratorStatusParse","map","className","Respirator","wardstatestringformat","WardCard","useState","CenterMonitorValue","SetCenterMonitorValue","SetHID","Timer","SetTimer","InitCenterData","useEffect","TimerID","setInterval","clearInterval","HID","phistnum","JSON","stringify","color","hr","spo2","fontWeight","fontSize","abpd","abps","abpm","gridColumnsGap","rr","bt","bednumberformat","number","gender","BornChangeWeek","BornChangeDay","BornChangeWeight","Wardcarddetail","hoverstate","clickstate","mouse_hover","edit_hover","visible","pbasignfo","birthdayweight","weight","bornweek","bornday","nowweight","report","nonreport","remark","TRANSINID","TRANSINDT","TRANSINTM","modatstatus","persionstatus","handleCancel","e","showModal","add","format","TRID","API_DATA","mapList","ORRCPDT","ORRCPTM","name","sex","parseFloat","toFixed","pname","psex","bweight","bweek","bday","personstatus","typefrom","from","PNAMEC","PSEX","Birthday","PBIRHDT","BornWeeks","BornDays","BornWeekAndDay","viewstatus","dataArrayRender","HBEDNO","defaultValue","onChange","margin","width","onCancel","footer","justifyContent","border","onClick","handleOk","valueFormat","statusPersion","QMNC","QTWER","Wardstate","weeks","days","previewmode","hbedlist","QTWPER","Weight","AgeStatus","editlogo","fileLogo","file2Logo","borderBottomWidth","borderBottomColor","borderBottomStyle","centerdata","centerMonitorData","padding","position","overflow","textOverflow","whiteSpace","pathname","Modelrender","Unpreviewwardcarddetail","databool","statedata","document","getElementById","mode","bednumber","marginBottom","backgroundColor","format_bednumber","onOk","gridTemplateRows","gridRowGap","id","placeholder","marginRight","WardcardNote","_isMounted","editstate","AnnoceRawData","AnnoceDisplayData","inputContent","onInputChange","bind","queryAllAnnounce","parse","announceArray","event","target","announce","doc","newAnnounce","Date","editor","findIndex","splice","announcelist","list","editstatus","localTime","utc","toDate","deleteimg","ondeleteannounce","placement","detail","annData","marginTop","onMouseUp","editlist","borderCollapse","AddNewannouce","canceledit","okeditlist","Bedinformation","tableselect","sendReturnSelect","selectkey","idkey","localtime","select","Selectswitch","parentCallback","weekdatformat","weekday","Month_format","getMonth","getDate","getDay","Unselect_tablestyle","borderLeftWidth","cursor","textAlign","borderStyle","borderWidth","borderColor","hbedcount","transoutcount","transincount","rtcount","nonrtcount","tpncount","yyyymmddformat","timestamp","getFullYear","formatmonth","Monthformat","yyyymmfirstweeksate","mmddformat","compareday","getTime","formatxArrayhalf","xAxisarray","formatendtime","MG_VALUE","PROC_VALUE","Wardbedinformation","subselectdate","selectid","PickerDate","bedinfo","onChangeDate","datestring","apiData","callbackFunction","idnumber","trainDay","bTime","nTime","aTime","trans","RenderCell","pnamec","selectDateitem","filterdate","inType","transoutIncountperson","outType","transoutOutcountperson","transIn","transOut","transferListlayout","infolist","infoList","dateTime","Bedinfo","reverse","fontStyle","paddingLeft","showToday","disabledDate","current","startOf","allowClear","shape","icon","bedinfotitle","weekbedinfo","infoitem","Schedule_event_list","detailstate","items_interval","EditMode","selSchedule","Scheduledata","ID","caseinfo","querySchedule","queryALLSchedule","propsDate","stateDate","timeNowStr","toISOString","writter","PBASINGNINFO","PLOCSTART","getHours","getMinutes","scheduleData","ScheduleList","text","borderRadius","detaillogo","changestate","onChangeEditMode","EditButton","EditControl","listevent","onClickCancel","onClickEnter","Wardschedule","Wardinfoindex","growdata","Male_befor","y","min","max","FeMale_before","Male_after","FeMale_after","WardlifeChart","drawChart","svg_key","weightList","grewinfo","window","screen","availWidth","bornweeks","WEEK_BORN","borndays","DAY_BORN","BIRTHDAY","pregencyTimestamp","d3","domain","range","x","yAxis","ticks","tickSize","tickPadding","xAxis","tickFormat","d","svg","attr","append","call","datasource","rec_tim","id_key","Wardmonthafter","Month","Wardgrewchart","test_items_interval","Data","WeightList","testiteminterval","paddingRight","borderTopLeftRadius","borderTopRightRadius","SwitchTestItemInterval","Onchangetimeinterval","switch_monthy","Notice","noticeData","preTRID","queryPatientImportant","transinid","updateTime","disableEdit","tooltiptext","t","displayTime","remarkcell","Editor","TextArea","Input","renderEditButton","autoSize","Labviewitem","Source","TimeR","TimeRender","RowsHeight","ListForTime","DataList","ORRESDT","ListForTimeAndTarget","forEach","split","QSPERegList","qspe","SettingValue","valueList","qspearray","SelectElement","special","DataArray","DataJson","Labviewlayout","parser","dummy_mg","dummy_pct","RESDGLU1","RESLAB02","RESLAB01","RESDBGAS","RESLAB0C","RESSECT","prePickerDate","preHID","preTRDT","TRDT","getLabData","TransinDate","MonthInterval","timestampInterval","selectMonthInterval","latestvalue","selected_parser","find","apply_condition","arrayLength","ORMM","CASEID","ORDSEQNO","RESDISP","selected_mapping","mappings","mapping","re","RegExp","regex_str","regex_flags","CONTENT","currentTimeStr","currentItemTimestamp","matchValue","updateLabviewIfNeed","currentIdx","background","ListEndData","RESDGLU1LIST","FiliterReg","RESLAB02LIST","RESLAB01LIST","RESDBGASLIST","RESSECT_MG_LIST","findLastestTargetValue","RESSECT_PROC_LIST","GLUFAST","WBC","RSV01","SEG","RSV14","LYMP","RSV15","HGB","RSV03","PLATELET","RSV09","NA","RSV13","K","CA","P","RSV17","ALB","RSV02","CRP","RSV32","PH","SS07","PCO2","SS06","BE","SS01","PO2","SS08","BUN","RSV05","CR","RSV06","ALT","RSV11","AST","RSV12","TBIL","RSV08","DBIL","RSV25","ALKP","TOTALCA","IRON","RSV26","TIBC","RSV27","FERRITIN","areainterval","nullvalue","TitleR","TitleRender","ORBGNDT","WardcardvitalsignChart","sourcedata","getCenterMonitor","selectType","axisTop","axisBot","circlrcolor","MAX","MIN","Upper","Lower","transformmargin","cal_svg_transform","time_now","time_array","time_axis_array","x_axis_time","time_array_reverse","time_axis_array_reverse","formatHour","tickValues","n","xAxisBottom","remove","cal_svg_hight","formatBoxWidth","viewwidth","lower","upper","LimitBoxTimer","interFormat","TimeArray","boxTime","formatBox","boxwidth","drawshadow","BoxPlotData","dataAbps","dataAbpd","q1","Q1","q2","Q2","q3","Q3","q4","Q4","Xtime","selectAll","enter","Time","SBP","DBP","WardChart","CMvalue","vitalvalue","limitValue","colorshadow","nbpd","nbps","nbpm","data2","data_2_circlrcolor","Wardinfousercheckbox","checkboxselect","selectstate","updateOnePatientTodo","selectchange","checked","textDecoration","Patientinfo","preCID","QENT","CID","patientDetail","patientData","Wardinfouser","Visible","setVisible","Report","Nonreport","scheduleList","SetScheduleList","todoList","SetTodoList","location","PLOC","now","todayBegin","ListWeight","DOCLIST","PDOCNEW","MainDoc","LiveDoc","MainNur","ICUMainDoc","maxHeight","minHeight","displayTimeStr","Bedview","simplemode","SelectHISID","HBEDApiGet","simple_style","gridGap","Unsimple_style","wardcarddetaillist","component","WardinfouserK","filterdata","switch_titile_string","onWardcardDisplay","checkedChildren","unCheckedChildren","defaultChecked","Historyview","MouseClick","allPatientDisplayData","allPatientUnset","allPatientSet","selectedRowsArray","hospitalindex","selectedFile","fileList","uploading","doctor","transOuttime","handleUpload","fileData","formData","FormData","file","res","filename","setedUser","transouttime","unsetUser","onChangeName","onChangeHisid","onClickSearch","record","resultD","url","URL","createObjectURL","Blob","link","createElement","href","setAttribute","appendChild","click","hospitalnumber","delete","dateString","Group","RangePicker","DatePicker","locale","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","disabled","searchNO","searchTime","fn","transintime","searchName","search","genderswitch","birweek","transage","transicutime","maindoc","EditStyle","onRemove","newFileList","slice","beforeUpload","showUploadList","handleDisplaySwitchChange","lineHeight","Searchbar","exportClick","deleteHistoryUser","columns","dataIndex","dataSource","onRow","onMouseEnter","MouseClickTable","onMouseLeave","Crosssectionvitalsignchart","change","prepickerdate","presource","preinterval","svg_id","PHID","PCID","optionvalue","pickerdate","endTimeStamp","start","end","formatTimer","QDVS","QOXY","HRNISLIST","RRNISLIST","SBPNISLIST","DBPNISLIST","BTNISLIST","Spo2NISLIST","pluse","breath","systolic","diastolic","BT","temperature","concen","FormatNISData","centermonitorApiDataGet","prehid","xAxisvalue","formatxArray","xAxisbotvalue","formatbotaxis","xAxisbot","drawData","formatShift","Warningsetting","dragstate","onClickdrag","transform","dragdown","Addwarningsetting","onSelectDate","dates","dataStrings","dateCallback","onSelectHour","hourCallback","Option","Select","children","Vitalsign","vital_days","visibleConflict","chackstate_one","chackstate_three","addNewWarningDateStr","addNewWarningHourStr","handleSelectDate","handleSelectHour","hourString","handleOkConflict","handleCancelConflict","sourcehandleChange","intervalhandleChange","EndTime","Phistnum","gridarray","checknumber","onClickCheckgrid_three","onClickCheckgrid_one","sourcefrom","changevitaldays","vitaldays","bool","switchdata","centervalueNull","TabPane","Tabs","waringsettingarray","centervalue","FilterList","filterData","Mid","centervaluetoNull","vitaldaysBool","pickerTimer","defaultActiveKey","tab","flexDirection","top","left","onVitalCheck","bottom","Controlbar","display_Mode","item_array","scrollstate","sendData","itwm_array","sendDateData","parentDateCallback","scrollToAnchor","anchorName","anchorElement","scrollIntoView","checkedValues","onDateChange","bron","PBIRTHDT","bronDate","btn_style","unclick_style","display_style","displye_mode","right","boxShadow","zIndex","non_display_mode","check_area","check_text","btnlist","WEIGHT","WardState","DayWeight","btn","scrollpoint","endOf","birthdays","localtoborndays","pregancyweeksanddays","newtime","oldtime","timestampdiff","daysdiff","open_display","displaylogo","IOpage","QDC","PreStatus","PreIntervalStatus","PreCID","PrePickerDate","RegQDC","CarloriesCal","intervalStatus","timer","interstatus","Result","Status","IntervalStatus","getAPI","prestatus","preinterstatus","precid","mapcell","listTimerFormat","inter","TimerList","hourInterval","filterList","filterListALL","gridNumber","cellsum","sum","cellRenderSum","CellRender","timerStruct","cellRender","stylechange","intervalstatus","QDCLIST","timearray","pickerTimeArray","formatData","caloriesCalonnam","nam","namstring","valueNumber","FormatFeedingList","FormatIVList","FormatUrineList","FormatOtherInList","FormatOtherOutList","lost","elementItem","Feeding","inp_val2","calories","IV","inp_val1","Urine","out_val2","Other","input_1","output_1","out_val1","OtherIn","OtherOut","formatQDCtoIO","Interval","timerFormat","feed","sumin","arr1","arr2","arr3","sumlist","sumIn","UrinForUnit","datamap","urineforWeightAndHourCrossection","sumout","sumOut","sumInTotal","Outout","element1","element2","sumInAndOut","TitleCellIn","TitleCellOut","CrossectionIo","titlelab","NonlabviewtableCell","summary_str","select_parser","input","parsers","item_name","sample","lab","start_time","datetime","end_time","content","summerize","kv_pairs","summary","match_replacer","replacer","replace","caseId","hisId","datatime","result_kv_pairs","come","statusRender","statusFormat","canShowReport","ExamReportModal","showDetail","Nonlabviewtable","modalVisible","modalReport","ORDLIST","nonLabApiGet","storeProcedureTime","FormatList","StartTime","ORDLIST_Format","elemetnStatus","elementORBGNTime","ORBGNTM","ORDLISTFormat","nonlabcell","ORSPCN1","statis","ORHISTNO","ORDSEQCN","Nonlabviewlayout","RTtable","PreHID","PreTransInDate","GasListToCell","GasData","timeStamp","ORRESTM","PHValue","PCO2Value","PO2Value","HCO3Value","SS04","BEValue","O2SatValue","SS05","FiO2Value","SS03","GasCell","getGasAPI","PreTRDT","GasTitleCell","GAS","PickerDateRange","RemarkModal","remarkValue","onOkClick","transinId","remarkId","createTime","rows","RTbreathetablecell","onCell","onEdit","newRemarkValue","setRemark","seachRemark","setting","Mode","Setting","onMouseMove","Mouse_move","Mouse_leave","Edit_state","chooseedit","RTbreathetable","createRTbreathetable","RTbreathe","QSPE","FilterReg","getQSPEApi","resultData","Prescriptionordertablecell","onMove","UDORDSEQ","checkStatus","SelectMode","ET","UDENDDT","Name","PName","UDRPNAME","Unit","UDDOSAGE","UDDUNIT","UDFREQN","UDROUTE","ST","UDBGNDT","on_Mouse","on_leave","Prescriptionordertable","titlecell","Prescriptionordertabletable","Prescriptionorderlayout","classParser","InputMode","onChangeClass","handleChange","onChangeinputKey","parseClass","inputs","allResult","activeList","clusteredData","filteredData","SortDataList","createST","createET","nowDate","DataFormat","searchbar","ControlBarRender","Treatmentordertablecell","QD","ORFREQN","ORENDDT","Treatmentordertable","TRTMNT01","Treatmentordertablecelllist","Treatmentorderlayout","DateRangeMode","Search_bar","Notecell","updatetime","updatedoctor","updatetime_format","wordBreak","Note","noteData","queryNotice","propDate","TRANSID","notelist","infoObj","updatedictor","CrossectionSchedule","CrosssectionTodo","queryTodo","renderTodoItem","Crosssectionlayout","Cross_item","SelectInterval","callbackDateFunction","PickerTimeStamp","NIS_API_IO","Datetime","TimeStampPickerDate","display_item","Inoutonchronic","Chronictablecelltooltip","preStartTimeStamp","loading","resultStr","parserName","inputBeginTime","parser_name","startTimeStamp","apiGet","tooltipelement","summaryParse","allContent","infoTime","Cell","antIcon","spin","indicator","Chronictablecell","titleCell","objectElementCell","CellText","autoAdjustOverflow","overlayStyle","maxWidth","Tableonchronic","LabParse","SummaryParse","monthly","ApiPronider","chronic_state","fotmatTimerMonthly","preInterval","ApiGet","TimeInterval","grid","ressect","parsrList","arrayBiochemical","arrayBlood","arrayCultivate","arrayGAS","arrayGlu","arrayRadiation","arrayOther","element_ORPROCED","BioFind","Biochemical","BloFind","Blood","CulFind","Cultivate","GasFind","GluFind","RadFind","Radiation","arrayList","LabFormat","statestatus","title_list","cell_list","entTimeStamp","slectInt","TimerForList","filterTimerForDataList","fotmatTimerForTimer","DataForTimer","toolTipID","Chroniclab","select_interval","Chronicrttablecell","cellelement","RTListRender","ToolTipRender","rtlogo","Chronicrttable","prePickerdate","timerList","listFilter","formatDataList","table_content","Chronicrt","Chronicordertable","whiteBlackListParser","tpnParsers","excludeBlackListResult","UDGNAME_condition","UDRPNAME_condition","UDGNAME_re","UDGNAME_match","UDRPNAME_re","UDRPNAME_match","getUDORDER","changegridnumber","rawData","filteredRawData","selected_tpn_parser","found","name_regex_flags","selected_white_black_list_parser","Tablecell","formatWidth","elementStart","elementEnd","widthRate","clientWidth","formatStart","formatEnd","formatStartPosition","arraylist","shift","formatUDORDER0","ListData","formatString","changegridstyle","celltable","Orderonchronic","Chronicweighttable","QTPWERList","TimerFormat","WeightListFormat","elementTime","elementValue","Value","sortWeight","sort","a","b","elementWidthList","time1","elementWidth","time2","FormatEndTimeStamp","datafilter","timeString","datafilterTime","diff","widthArray","timeString2","weightRectRender","render","paddingTop","Weightonchronic","Vitalxaxis","monthformat","select_date","select_time_format","nowtime","Start_time","intervaldays","xaxis","formatday","Vitalxaxisbot","select_date_zero","Vitalonchronic","check_state_one","check_state_three","check_state_oneweek","check_state_twoweek","statussource","value_interval","defaultdate","Interval_switch","onClickCheckgrid_oneweek","onClickCheckgrid_twoweek","formatPickerTimer","Interval_grid","Interval_grid_box","Chroniclelayout","statuschange","onSelectchange","button","filterlogo","Flootsheetio","itemNumber","dataJson","Title","timeObjectString","cell","groupfirstarray","compare","arrList","comparevalue","filterarray","FirstArray","SecondArray","ThirdArray","FourthArray","line","pos","formatQDC","FlootSheetFirstAreaData","FlootSheetSecondAreaData","FlootSheetThirdAreaData","FlootSheetFourthAreaData","stringElement","groupelement","Firstdata","timeForList","elementList","valueSum","cellMap","Secondedata","Thirddata","formatRV","RV","RVList","FourdataCellRender","datajson","FourthDataCell","Flowsheetlayout","ApiData","DateTime","splist","specialListRender","Examchart","lineChart","sT","endT","fixLineChart","cost","RangeMin","RangeMax","div","curve","lines","on","transition","duration","html","pageX","pageY","Labview","Selectus","SelectStatus","lineCharttitle","IRParse","titleSearch","parentTitleCallback","fixLineChartData","getAttribute","showDate","temp","showModel","charttableview","dataIR","Object","keys","itemValue","flex","LabDataList","SelectList","SelectTitlefilter","selectdata","SelectTitleRender","ExamLab","justifycontent","Examnonlabviewtable","resultKey","StateMode","ordlist","pickerdaterange","changeState","status_report","ORDCLNM","listforstatus","selectedClass","ORDATE","ORTIME","Nonlabview","ClassMode","Inputvaluesearch","onChangeState","Examreport","selectTitle","subtract","callbackTitleFunction","PickerDateRangeChange","vallofnull","DateRange","selectData","st_timestamp","et_timestamp","CellData","Band","Seq","Lym","Hb","Hct","RSV04","Plt","Na","Cl","CaTotal","Cr","Alt","TBil","DBil","rGGT","RSV19","Alkp","Alb","Iron","RSV28","FeSat","LDH","RSV10","RSV9","ck","RSV18","ckMB","Troponinl","RSV30","PT","APTT","INR","pCO2","pO2","HCO3","O2Sat","FiO2","SS11","SS12","SS13","SS14","CaFree","SS15","Bun","SS16","SS17","GluBeside","GluLab","RSV16","TCB","MicroBil","elementOne","elementTwo","Seg","APIUpdate","SelectDataList","datePick","momentDate","selectvalue","Orderview","apidata","udata","tdata","overflowY","dataRange","Noteview","display_data","contentdisplay","ADMDISP","ADMLIST","DISLIST","DISDISP","DTAROTQ4","DTASOAPQ","PCASELIST","ERDISP","PRGTXQRY","PRGTXQRYDIS","CPSLIST","CPSDISP","QPNOT","QPNOTDIS","OPSORAQ1","OPSORAQ2","SelectClass","NoteTime","Content","ADISTNO","ADICASE","SEQ","OPABGNDT","OPATIMES","times","ttype","LIVEPLOC","PLOCDT","substr","transdt","select_option","row","ADMDATA","textType","textObj","DTSOAPTY","DTSOAPSQ","DTSOAPTX","newObj","idx","textResult","newList","dataFilter","PRGTYPE","PRGTX","cre_nam","pro_not","cellRander","object","SelectADMDISP","ADIDATE","DCASENO","SelectDISDISP","DDATEIN","DDATEOUT","DPT","DTPDEPT","DTPDATE","SelectDTASOAPQ","DTPTIME","SelectERDISP","PDISDT","PRGDT","PRGTM","v","DT","TN","SelectPRGTXQRYDIS","CPSCASE","CPSOSEQ","CPSHIST","SelectCPSDISP","CPSENTDT","CPSENTTM","grouparray","SelectQPNOTDIS","OPACOD1","OPAMANNM","SelectOPSORAQ1","control","NotecontrolBar","renderContentArray","listRender","switchListRender","RTview","Nurtionfeedingcell","Moduledisplay","Nurtionfeedingorder","getAPIFeedingData","getTreatmentOrderFilter","titleCellRender","DataCellRender","Nurtiontpncell","TPNListcellRender","TPNSubDatacellRender","TPNDATA","AA","Glu","Ca","Mg","RemarkData","Nurtiontpnorder","tpndata","inputEndTime","UDWORD","getAPITPNData","tpnList","titilecell","Watervaluechart","rowdata","watervalueData","shiftDays","formatShiftDays","rectwidth","svgrect","nulldata","car","Caloriessum","model","ModalRender","Nurtionview","showTime","FeedinfData","IVData","OtherData","sumcar","Calories","shiftTimer","TimerArray","formatTimeArray","watervalueDataList","filterFeedind","filterIV","filterOther","feedingSum","SumData2","IVSum","SumData","OtherSum","caseiddays","GrowthCurve","GrowthCurveControl","GrowthCurveControlBar","WaterValueControl","WaterValueControlBar","feeddata","waterRender","WaterValueRender","Nurtionfeeding","Infectionlabtable","Datalist","Render","FilterData","CellRander","WBCList","BandList","SegList","LymList","PCTList","CRPList","WBCRender","BandRender","SegRender","LymRender","PCTRender","CRPRender","WBCcell","Bandcell","Segcell","Lymcell","PCTcell","CRPcell","switch_state","userdata","Infectionlab","Infectionview","intervalselect","hrdatasource","rrdatasource","spo2datasource","abpdatasource","nbpdatasource","btdatasource","LabData","LabData2","Bedsidecard","remarkContent","queryPatientRemark","TODO_DONE","TODO_UNFINISH","Scheduletodo","displayMode","todolist","onItemCheck","itemToUpdate","queryPatientTodo","todolist_data","finish_data","finish_value","unfinish_data","finish_checkbox","unfinish_checkbox","onClickunfisish","onClickfinish","Calendercell","clickindex","sendcallback","newDate","clickdate","today","stateswitch","onClickCheck","weekdateformatcalender","calenderlogo","pingcheck","calenderwhitelogo","pingwhite","disableday","scheduleArray","eventArray","disabledayinfo","Calender","calendermode","Clickdays","ClickDate","displayinfo","scheduleRawData","startTimestamp","endTimestamp","noticeRawData","getStartEndTime","monthfirstweekday","firstCellBegin","startTimestampStr","endTimestampStr","itemList","refactoredList","itemTimeStr","foundItemIndex","newItem","newEvent","writer","timestampdate","onClickdays","dateStr","dataOfDayIndex","weekcontext","dataOfDay","getDataFromTimestamp","weeknumber","firstMonthWeekDay","rowIndex","noticeOfDay","getNoticeFromTimestamp","onCancelClick","calendermonthgroup","monthfirstweekdate","weekmonthmode","ShowModule","weekmode","setgroup","MonthPicker","SelectDatepickertype","modechange","Scheduleview","dateformat","exporttime","Patientviewlayout","TYPE","REMARK","tabstring","HBEDNUMBER","HBEDLIST","PBASINFO","matadata","nis_status_shange","activkey","fixpatientDate","transdata","patientDate","PLOCLIST","PLOCTR","BedList","BEDNUMBER","USERDATA","ploc","PLOCTM","transindt","qmnc","bornWeeks","bornDays","wetghtList","selectrender","OptionSelectRender","birthdayweeks","tabPosition","callback","confirm","Modal","Powersetting","role","adduser","userList","power","powerName","radioValue","pwdRadio","inputUsername","inputPassword","inputName","inputDoctorid","radioOnChange","addUserdata","adduserhandleChange","nameChange","queryUserdata","inputuserName","password","username","doctorid","account","roleString","set_State","okText","okType","cancelText","showDeleteConfirm","Search","onSearch","userData","powerString","myNewArray","concat","apply","Systemlogtable","loginlog_table","loginlogList","managerName","apilog_table","apilogList","months","j","optionValue","pagination","page","pageSize","getPages","Systemlog","totalSpace","usingSpace","percent","option","total","unuse","queryLoginLogdata","queryApiLogdata","pages","showInfo","Systemcontrol","bollogin","å","Layoutframe","clear","UsrName","url_path","fontweight","fontsize","routes","route","onClickLogout","Loginview","setRedirect","user","setItem","redirect","permission","statusstring","renderRedirect","login","addEventListener","keyCode","flexWrap","App","documentElement","exact","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa3966c1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/edit2.8fc62700.svg\";","module.exports = __webpack_public_path__ + \"static/media/file1.6f94c891.svg\";","module.exports = __webpack_public_path__ + \"static/media/file2.2b64f736.svg\";","module.exports = __webpack_public_path__ + \"static/media/filter.43b66bba.svg\";","module.exports = __webpack_public_path__ + \"static/media/Wardview.6c75f5a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/Historyview.0467b7bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Control.aa66ed95.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.870c0c52.svg\";","module.exports = __webpack_public_path__ + \"static/media/dragdown.0cdfe02a.svg\";","module.exports = __webpack_public_path__ + \"static/media/RT.41b174eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/calender.da91395a.svg\";","module.exports = __webpack_public_path__ + \"static/media/calenderwhite.d66bfce7.svg\";","module.exports = __webpack_public_path__ + \"static/media/ping.c2141b87.svg\";","module.exports = __webpack_public_path__ + \"static/media/pingwhite.0f1e8cfb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Edit.a7d4c3ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/Chooseedit.def74a6e.svg\";","import React, { Component } from 'react';\n\nclass Homepage extends Component {\n    render() {\n        return (\n            <div></div>\n        );\n    }\n}\n\nexport default Homepage","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport wardviewlogo from '../Image/svg/Wardview.svg'\nimport historylogo from '../Image/svg/Historyview.svg'\nimport controllogo from '../Image/svg/Control.svg'\nimport './Sidermenu.scss';\n\n\nclass Sidermenu extends Component {\n\n    state = {\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = Number(sessionStorage.getItem('role'))\n        this.setState({ powerLogin: powerLogins })\n    }\n\n    Selectkeynumber(key) {\n\n        switch (key) {\n            case '/nicu':\n                return 0;\n            case '/nicu/history':\n                return 1;\n            case '/nicu/system':\n                return 2;\n            default:\n                if (key.match('patient') != null) {\n                    return 0;\n                }\n                if (key.match('ward') != null) {\n                    return 0;\n                }\n                return '';\n        }\n    }\n\n    select_hover(value) {\n        const { path } = this.props\n        const keynumber = this.Selectkeynumber(path)\n        if (keynumber === value) {\n            return true\n        }\n        return false\n    }\n    render() {\n        // const linkstate = {\n        //     backgroundColor: \"rgba(59, 151, 225, 1)\",\n        //     display: 'flex',\n        //     paddingLeft: '15px',\n        //     paddingRight: '15px',\n        //     height: \"40px\"\n        // }\n        // const dislinkstate = {\n        //     backgroundColor: \"rgba(0, 0, 0, 0)\",\n        //     display: 'flex',\n        //     paddingLeft: '15px',\n        //     paddingRight: '15px',\n        //     height: \"40px\"\n        // }\n        // const linkfont = { color: \"rgba(25, 70,90, 1)\", fontweight: \"500px\", fontsize: \"18px\", margin: \"0px 10px 0px 2px\" }\n        // const dislinkfont = { color: \"rgba(46, 100, 164, 1)\", fontweight: \"500px\", fontsize: \"18px\", margin: \"0px 10px 0px 2px\" }\n        const rule = this.state.powerLogin\n        // const rule = 5\n        console.log(Number(sessionStorage.getItem('role')))\n        //sso custom => custom\n        return (\n            <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"20px\", height: '100%' }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto auto\", gridColumnGap: \"10px\" }}>\n                    <Link to=\"/nicu/ward/wardindex\" class={this.select_hover(0) ? \"linkstate\" : \"dislinkstate\"} style={{ display: rule === 5 ? \"none\" : \"flex\" }}>\n                        <img src={wardviewlogo} alt='wardviewlogo'></img>\n                        <centerstyle>\n                            <t2 class={this.select_hover(0) ? \"linkfont\" : \"dislinkfont\"}>住院病人資訊</t2>\n                        </centerstyle>\n                    </Link>\n                    <Link to=\"/nicu/history\" class={this.select_hover(1) ? \"linkstate\" : \"dislinkstate\"} style={{ display: rule >= 2 && rule < 5 ? \"flex\" : \"none\" }}>\n                        <img src={historylogo} alt='historyviewlogo'></img>\n                        <centerstyle>\n                            <t2 class={this.select_hover(1) ? \"linkfont\" : \"dislinkfont\"} >歷史病歷管理</t2>\n                        </centerstyle>\n                    </Link>\n                    <Link to='/nicu/system' class={this.select_hover(2) ? \"linkstate\" : \"dislinkstate\"} style={{ display: rule === 5 || rule === 4 ? \"flex\" : \"none\" }}>\n                        <img src={controllogo} alt='systemviewlogo'></img>\n                        <centerstyle>\n                            <t2 class={this.select_hover(2) ? \"linkfont\" : \"dislinkfont\"}>系統設定</t2>\n                        </centerstyle>\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Sidermenu\n","import X2JS from \"x2js\"\nimport moment from 'moment';\n\n\nexport function CalculateAge(BornStatus) {\n    const minus = Math.floor((moment().valueOf() - BornStatus.date) / (24 * 60 * 60 * 1000)) //多少天\n    if (BornStatus.week < 37) {\n        console.log(minus)\n        console.log(BornStatus.week, BornStatus.day)\n        console.log(Math.floor(BornStatus.week + (BornStatus.day + minus) / 7))\n        const week = Math.floor(BornStatus.week + (BornStatus.day + minus) / 7);\n        const day = (BornStatus.day + minus);\n\n        return week < 40 ? `${week}週+${day}天` : day > 30 ? `${Math.floor(day / 30)}月${Math.floor(day % 30)}天` : `矯齡${day}天大`\n    }\n    const month = Math.floor((BornStatus.day + minus) / 30);\n    const day = (BornStatus.day + minus - 2) % 30;\n    return month > 0 ? `${month}月+${day}天` : `${day}天大`\n}\n\n\nexport function statecolor(state) {\n    if (state === 'HR') {\n        return \"rgb(100,140,60)\"\n    }\n    if (state === 'BP') {\n        return \"rgb(193,37,40) \"\n    }\n\n    if (state === 'ABP') {\n        return \"#C12528\"\n    }\n    if (state === 'NBP') {\n        return \"#C12528\"\n    }\n    if (state === 'SpO2') {\n        return \"rgb(60,105,160) \"\n    }\n    if (state === 'BT') {\n        return \"rgb(127,61,181)\"\n    }\n    if (state === 'RR') {\n        return \"rgb(200,110,40) \"\n    }\n    return null\n}\n\n//parse flag\nexport function Respiratorswitch(Respirator) {\n    if (Respirator === '呼(非侵入)') {\n        return '呼(非侵入)'\n    }\n    if (Respirator === '呼(侵入)') {\n        return '呼吸'\n    }\n    return '呼吸氣'\n}\n\nexport function wardstatestringformat(item) {\n    //console.log(item);\n    switch (item.item) {\n        case \"Respirator\":\n            return Respiratorswitch(item.data)\n        case \"TPN\":\n            return \"TPN\"\n        case \"NPO\":\n            return \"NPO\"\n        case \"HD\":\n            return \"HD\"\n        case \"Abx\":\n            return \"Abx\"\n        case \"CVC\":\n            return \"CVC\"\n        case \"Xanth\":\n            return \"Xanth\"\n        case \"照光\":\n            return \"照光\"\n        case \"DRN\":\n            return \"DRN\"\n        default:\n            return item\n    }\n}\n\nexport function Labwarningvalue(value, title) {\n    if (title === \"Glucose\") {\n        if (value > 120 || value < 50) {\n            return false\n        }\n    }\n    if (title === \"WBC\") {\n        if (value < 10000 || value > 30000) {\n            return false\n        }\n    }\n    if (title === \"Hgb\") {\n        if (value < 10 || value > 18) {\n            return false\n        }\n    }\n    if (title === \"Platelet\") {\n        if (value < 100000 || value > 450000) {\n            return false\n        }\n    }\n    if (title === \"Na+\") {\n        if (value < 135 || value > 145) {\n            return false\n        }\n    }\n    if (title === \"K+\") {\n        if (value < 3.5 || value > 5.5) {\n            return false\n        }\n    }\n    if (title === \"Ca2+\") {\n        if (value < 0.8 || value > 1.4) {\n            return false\n        }\n    }\n    if (title === \"P\") {\n        if (value < 4.5 || value > 6.0) {\n            return false\n        }\n    }\n    if (title === \"Mg2+\") {\n        if (value < -1.5 || value > 4.5) {\n            return false\n        }\n    }\n    if (title === \"Alb\") {\n        if (value > 3) {\n            return false\n        }\n    }\n    if (title === \"CRP\") {\n        if (value < 1) {\n            return false\n        }\n    }\n    if (title === \"Procalcitionin\") {\n        if (value < 0.5) {\n            return false\n        }\n    }\n    if (title === \"pH\") {\n        if (value < 7.25 || value > 7.4) {\n            return false\n        }\n    }\n    if (title === \"PCO2\") {\n        if (value < 40 || value > 60) {\n            return false\n        }\n    }\n    if (title === \"BE\") {\n        if (value < -7 || value > 6) {\n            return false\n        }\n    }\n    if (title === \"PO2\") {\n        if (value < 40 || value > 90) {\n            return false\n        }\n    }\n    if (title === \"BUN\") {\n        if (value < 1) {\n            return false\n        }\n    }\n    if (title === \"Cr\") {\n        if (value < 1) {\n            return false\n        }\n    }\n    if (title === \"ALT\") {\n        if (value < 45) {\n            return false\n        }\n    }\n    if (title === \"AST\") {\n        if (value < 45) {\n            return false\n        }\n    }\n    if (title === \"TBil\") {\n        if (value < 2) {\n            return false\n        }\n    }\n    if (title === \"DBil\") {\n        if (value < 0.5) {\n            return false\n        }\n    }\n    if (title === \"ALKP\") {\n        if (value < 450) {\n            return false\n        }\n    }\n    if (title === \"Total Ca\") {\n        if (value < 8 || value > 12) {\n            return false\n        }\n    }\n    if (title === \"FeSat\") {\n        if (value < 0.15) {\n            return false\n        }\n    }\n    return true\n}\n\nexport function simulationCentermonitordata(time, timeInterval) {\n    var dataarray = [];\n    for (var k = 0; k < (timeInterval * 6); k++) {\n        var dataset = []; //建立空的資料陣列\n        for (var i = 0; i < timeInterval; i++) {\n            var newNum = Math.floor(Math.random() * 50) + 50;\n            dataset.push(newNum);\n        }\n        dataarray.push({\n            'data': dataset,\n            'time': time[k]\n        });\n    }\n    //console.log(dataarray);\n    return dataarray;\n}\n\nexport function simulationnisdata(time, timeInterval) {\n    var dataarray = [];\n    for (var k = 0; k < timeInterval; k++) {\n        var dataset = []; //建立空的資料陣列\n        var newNum = Math.floor(Math.random() * 50) + 50;\n        dataset.push(newNum);\n        dataarray.push({\n            'data': dataset,\n            'time': time[k]\n        });\n    }\n    //console.log(dataarray);\n    return dataarray;\n}\n\nexport function getRandom(number) {\n    return Math.floor(Math.random() * 5) + number;\n};\n\nexport function getRandomfornumber(number) {\n    return Math.floor(Math.random() * number);\n};\n\nexport function arraychange(list) {\n    var myNewArray = []\n    for (var i = 0; i < list.length; ++i) {\n        for (var j = 0; j < list[i].length; ++j) {\n            myNewArray.push(list[i][j]);\n        }\n    }\n    return myNewArray\n}\n\nexport function WeightList(weightlist) {\n    if (weightlist === undefined || weightlist === null) {\n        return \"--\"\n    }\n    const findata = weightlist.filter(function (value, index) {\n        return value.type === \"TW\"\n    })\n    if (findata.length === 0) {\n        return 0\n    }\n    else return findata\n}\n\nexport function BornWeight(weightlist, birthday) {\n    console.log(weightlist)\n    if (weightlist === undefined || weightlist === null) {\n        return \"--\"\n    }\n    if (Array.isArray(weightlist)) {\n        const findata = weightlist.filter(function (value, index) {\n            return value.rec_dat === birthday && value.type === \"TW\"\n        })\n        if (findata.length === 0) {\n            return 0\n        }\n        else return parseInt(Number(findata[0].value2) * 1000)\n    }\n    else {\n        return parseInt(Number(weightlist.value2) * 1000)\n    }\n}\n\nexport function NewestWeight(weightlist) {\n    if (weightlist === undefined) {\n        return \"--\"\n    }\n    if (weightlist.length === 0) {\n        return 0\n    }\n    if (Array.isArray(weightlist)) {\n        const findata = weightlist.filter(function (value, index) {\n            return value.type === \"TW\"\n        })\n        if (findata.length === 0) {\n            return \"--\"\n        }\n        return parseInt(Number(findata[0].value2) * 1000)\n    }\n    else {\n        return parseInt(Number(weightlist.value2) * 1000)\n    }\n\n}\n\nexport function XM2JSON(data) {\n    const xm2 = new X2JS()\n    if (data === undefined) {\n        return []\n    }\n    const status = xm2.xml2js(data).outmsg.ret\n    if (Number(status) === 0) {\n        const parsedata = xm2.xml2js(data).outmsg.resconts.rescont\n        if (!Array.isArray(parsedata)) {\n            return [parsedata]\n        }\n        return parsedata\n    }\n    return []\n}\n\nexport function QMNCXM2JSON(data) {\n    const xm2 = new X2JS()\n    if (data === undefined) {\n        return []\n    }\n    const status = xm2.xml2js(data).outmsg.ret\n    if (Number(status) === 0) {\n        const parsedata = xm2.xml2js(data).outmsg.resconts.rescont\n        console.log(parsedata)\n        return parsedata\n    }\n    return []\n}\n\nexport function Doc(DocList, type) {\n    if (DocList === undefined || DocList === null || DocList === \"\") {\n        return \"\"\n    }\n    const Main = DocList.filter(function (element, index) {\n        return element.PDTYPE === type\n    })\n    if (Main.length === 0) {\n        return \"\"\n    }\n    return Main[0].PDDOCNMC.toString().trim()\n}\n\nexport function selectweight(List, date) {\n    if (List === undefined || List === null) {\n        return \"--\"\n    }\n    var array = []\n    for (let index = 0; index < List.length; index++) {\n        const element = List[index];\n        if (moment(element.rec_dat, 'YYYYMMDD').valueOf() < date) {\n            array.push(element)\n        }\n    }\n    if (array.length === 0) {\n        return 0\n    }\n    return Number(array[0].value2) * 1000\n}\n\n\n","import axios from 'axios';\n\n\naxios.defaults.baseURL = \"http://10.97.241.48/deploy/\";\n// axios.defaults.baseURL = \"http://172.24.7.33/deploy/\";\n// axios.defaults.baseURL = \"http://127.0.0.1:8888/deploy/\";\n\n//----------------------------------------------\n// announcement-controller 病房公告(Ward View)\n//----------------------------------------------\n//建立公告資訊\n/*\nexport function createAnnounce(context, editor, transinno, time) {\n  const body = {\n    context: context,\n    editor: editor,\n    transinno: transinno,\n    time: time\n  }\n  return axios.post(\"Announcement/createAnnouncement\", body);\n}*/\n\n//Create bweek bday bweight\nexport function createPatientInfo(hisid, pname, psex, bweight, bweek, bday) {\n  const body = {\n    \"bday\": bday,\n    \"bweek\": bweek,\n    \"bweight\": bweight,\n    \"hisid\": hisid,\n    \"pname\": pname,\n    \"psex\": psex\n  }\n  return axios.post(\"patientinfo/createPatientInfo\", body)\n}\n\nexport function getPersionalStatus(hisid) {\n  return axios.get(\"patientinfo/getOnePatientInfo/\" + hisid);\n}\n\nexport function createAnnounce(announceArray) {\n  return axios.post(\"Announcement/createAnnouncement\", announceArray);\n}\n\n//刪除某天公告資訊\nexport function deleteAnnounce(transinno, dateTime) {\n  return axios.delete(\"Announcement/delannouncement/\" + transinno + \"/\" + dateTime);\n}\n\n//取得全部資訊\nexport function getAllAnnounce() {\n  return axios.get(\"Announcement/getAllannounce\");\n}\n\n//取得某位病人某天資訊\nexport function getOneAnnounce(transinno, dateTime) {\n  return axios.get(\"Announcement/getOneannouncement/\" + transinno + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// export/import-controller 匯入匯出\n//----------------------------------------------\n//匯出\nexport function exportJson(transinno) {\n  return axios.get(\"exportJson/\" + transinno);\n}\n\n//匯入\nexport function importJson(filename) {\n  return axios.get(\"importJson/\" + filename);\n}\n\n//下載檔案\nexport function downloadFile(filename) {\n  return axios.get(\"downloadFile/\" + filename);\n}\n\n//上傳檔案\nconst config = { headers: { 'Content-Type': 'multipart/form-data' } }\nexport function uploadFile(fileData) {\n  return axios.post(\"uploadFile\", fileData, config);\n}\n//----------------------------------------------\n// login-controller 登入與權限設定\n//----------------------------------------------\n//刪除帳號\nexport function deleteUser(name, role, username) {\n  return axios.delete(\"delUser/\" + name + \"/\" + role + \"/\" + username);\n}\n\n//查詢某帳號權限：1->read only 2->general user 3->general manager 4->system manager 5->super user\nexport function getAuth(username) {\n  return axios.get(\"getAuth/\" + username);\n}\n\n//取得系統空間\nexport function getSpace() {\n  return axios.get(\"getSpace\");\n}\n\n//登入\nexport function login(username, password) {\n  const body = {\n    username: username,\n    password: password\n  }\n  return axios.post(\"login\", body);\n}\n\nexport function getSSOLogin(username, password) {\n  return axios.get(\"LoginInSSO/\" + username + \"/\" + password);\n}\n\n//新增帳號與權限\nexport function register(name, password, role, username, doctorid) {\n  const body = {\n    name: name,\n    password: password,\n    role: role,\n    username: username,\n    doctorid: doctorid\n  }\n  return axios.post(\"register\", body);\n}\n\n//取得全部資訊\nexport function getAlluser() {\n  return axios.get(\"getAlluser\")\n}\n\n//角色、姓名搜尋其內容\nexport function searchUser(name, role) {\n  return axios.get(\"searchUser/\" + name + \"/\" + role);\n}\n\n//----------------------------------------------\n// log-controller 顯示Log日誌\n//----------------------------------------------\n\n//Show login log(根據起始時間查詢成功登入記錄)(time格式為yyyy-MM-ddTHH:mm:ss)\nexport function getLoginlog(startTime, endTime) {\n  return axios.get(\"getLoginlog/\" + startTime + \"/\" + endTime);\n}\n\n//Show API access log (date格式為yyyy-MM-dd)\nexport function getApilog(Time) {\n  return axios.get(\"getApilog/\" + Time)\n}\n\n//Show Debug log (date格式為yyyy-MM-dd)\nexport function getDebuglog(Time) {\n  return axios.get(\"getDebuglog/\" + Time)\n}\n\n//----------------------------------------------\n// breath-controller 呼吸RT\n//----------------------------------------------\n//createBreath\nexport function createBreath(editTime, hisid, model, note, setting) {\n  const body = {\n    editTime: editTime,\n    hisid: hisid,\n    model: model,\n    note: note,\n    setting: setting\n  }\n  return axios.post(\"breath/createBreath\", body);\n}\n\n//getBreath\nexport function getAllBreath() {\n  return axios.get(\"breath/getAllbreath\");\n}\n\n//updateNote\nexport function updateNote(editTime, hisid, model, note, setting) {\n  const body = {\n    editTime: editTime,\n    hisid: hisid,\n    model: model,\n    note: note,\n    setting: setting\n  }\n  return axios.put(\"breath/updatebnote/\" + editTime, body);\n}\n\n//----------------------------------------------\n// exam-cbc-controller Exam CBC Controller\n//----------------------------------------------\n//寫入CBC資訊\nexport function createExamCbc(band, hb, hct, hisid, lym, plt, seg, updateTime, wbc) {\n  const body = {\n    band: band,\n    hb: hb,\n    hct: hct,\n    hisid: hisid,\n    lym: lym,\n    plt: plt,\n    seg: seg,\n    updateTime: updateTime,\n    wbc: wbc\n  }\n  return axios.post(\"examcbc/createexamcbc\", body);\n}\n\n//取得全部資訊\nexport function getAllExamCbc() {\n  return axios.get(\"examcbc/getAllexamcbc\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamCbcOfPatient(hisid, dateTime) {\n  return axios.get(\"examcbc/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-cbc-two-controller Exam CBC Two Controller\n//----------------------------------------------\n//寫入CBC資訊\nexport function createExamCbcTwo(band, crp, hisid, lym, ptc, seg, updateTime, wbc) {\n  const body = {\n    band: band,\n    crp: crp,\n    hisid: hisid,\n    lym: lym,\n    ptc: ptc,\n    seg: seg,\n    updateTime: updateTime,\n    wbc: wbc\n  }\n  return axios.post(\"examcbctwo/createexamcbctwo\", body);\n}\n\n//取得全部資訊\nexport function getAllExamCbcTwo() {\n  return axios.get(\"examcbctwo/getAllexamcbctwo\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamCbcTwoOfPatient(hisid, dateTime) {\n  return axios.get(\"examcbctwo/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-cruor-controller Exam Cruor Controller\n//----------------------------------------------\n//createExamCruor\nexport function createExamCruor(apiT, hisid, inr, pt, updateTime) {\n  const body = {\n    apiT: apiT,\n    hisid: hisid,\n    inr: inr,\n    pt: pt,\n    updateTime: updateTime\n  }\n  return axios.post(\"examcruor/createexamcruor\", body);\n}\n\n//getExamCruor\nexport function getAllExamCruor() {\n  return axios.get(\"examcruor/getAllexamcruor\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamCruorOfPatient(hisid, dateTime) {\n  return axios.get(\"examcruor/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-electrolyte-controller Exam Electrolyte Controller\n//----------------------------------------------\n//createExamEletrolyte\nexport function createExamElectrolyte(bun, caFree, caTotal, caseid, cl, cr, hisid, k, mg, na, p, updateTime) {\n  const body = {\n    bun: bun,\n    caFree: caFree,\n    caTotal: caTotal,\n    caseid: caseid,\n    cl: cl,\n    cr: cr,\n    hisid: hisid,\n    k: k,\n    mg: mg,\n    na: na,\n    p: p,\n    updateTime: updateTime\n  }\n  return axios.post(\"examelectrolyte/createexamelectrolyte\", body);\n}\n\n//getExamElectrolyte\nexport function getAllExamElectrolyte() {\n  return axios.get(\"examelectrolyte/getAllexamelectrolyte\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamElectrolyteOfPatient(hisid, dateTime) {\n  return axios.get(\"examcruor/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-gas-addi-controller Exam GAS Addi Controller\n//----------------------------------------------\n//createExamGasAddi\nexport function createExamGasAddi(bun, caFree, cr, hb, hct, hisid, k, na, updateTime) {\n  const body = {\n    bun: bun,\n    caFree: caFree,\n    cr: cr,\n    hb: hb,\n    hct: hct,\n    hisid: hisid,\n    k: k,\n    na: na,\n    updateTime: updateTime\n  }\n  return axios.post(\"examgasaddi/createexamgasaddi\", body);\n}\n\n//getExamGasAddi\nexport function getAllExamGasAddi() {\n  return axios.get(\"examgasaddi/getAllexamgasaddi\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamGasAddiOfPatient(hisid, dateTime) {\n  return axios.get(\"examgasaddi/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-gas-controller Exam GAS Controller\n//----------------------------------------------\n//createExamGas\nexport function createExamGas(be, fiO2, hco3, hisid, o2Sat, pco2, ph, po2, sample, updateTime) {\n  const body = {\n    be: be,\n    fiO2: fiO2,\n    hco3: hco3,\n    hisid: hisid,\n    o2Sat: o2Sat,\n    pco2: pco2,\n    ph: ph,\n    po2: po2,\n    sample: sample,\n    updateTime: updateTime\n  }\n  return axios.post(\"examgas/createexamgas\", body);\n}\n\n//getExamGas\nexport function getAllExamGas() {\n  return axios.get(\"examgas/getAllexamgas\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamGasOfPatient(hisid, dateTime) {\n  return axios.get(\"examgas/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-glu-controller Exam Glu Controller\n//----------------------------------------------\n//createExamGlu\nexport function createExamGlu(gluBedside, gluLab, hisid, updateTime) {\n  const body = {\n    gluBedside: gluBedside,\n    gluLab: gluLab,\n    hisid: hisid,\n    updateTime: updateTime\n  }\n  return axios.post(\"examglu/createexamglu\", body);\n}\n\n//getExamGlu\nexport function getAllExamGlu() {\n  return axios.get(\"examglu/getAllexamglu\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamGluOfPatient(hisid, dateTime) {\n  return axios.get(\"examglu/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-heart-controller Exam Heart Controller\n//----------------------------------------------\n//createExamHeart\nexport function createExamHeart(bnp, caseid, ck, ckMB, hisid, tropoin, updateTime) {\n  const body = {\n    bnp: bnp,\n    caseid: caseid,\n    ck: ck,\n    ckMB: ckMB,\n    hisid: hisid,\n    tropoin: tropoin,\n    updateTime: updateTime\n  }\n  return axios.post(\"examheart/createexamheart\", body);\n}\n\n//getExamGlu\nexport function getAllExamHeart() {\n  return axios.get(\"examheart/getAllexamheart\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamHeartOfPatient(hisid, dateTime) {\n  return axios.get(\"examheart/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-jaundice-controller Exam Jaundice Controller\n//----------------------------------------------\n//createExamJaundice\nexport function createExamJaundice(dbil, hisid, microBil, tbil, tcb, updateTime) {\n  const body = {\n    dbil: dbil,\n    hisid: hisid,\n    microBil: microBil,\n    tbil: tbil,\n    tcb: tcb,\n    updateTime: updateTime\n  }\n  return axios.post(\"examjaundice/createexamjaundice\", body);\n}\n\n//getExamJaundice\nexport function getAllExamJaundice() {\n  return axios.get(\"examjaundice/getAllexamjaundice\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamJaundiceOfPatient(hisid, dateTime) {\n  return axios.get(\"examjaundice/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-liver-controller Exam Liver Controller\n//----------------------------------------------\n//createExamLiver\nexport function createExamLiver(alKp, alb, alt, ast, dbil, hisid, rggt, tbil, updateTime) {\n  const body = {\n    alKp: alKp,\n    alb: alb,\n    alt: alt,\n    ast: ast,\n    dbil: dbil,\n    hisid: hisid,\n    rggt: rggt,\n    tbil: tbil,\n    updateTime: updateTime\n  }\n  return axios.post(\"examliver/createexamliver\", body);\n}\n\n//getExamLiver\nexport function getAllExamLiver() {\n  return axios.get(\"examliver/getAllexamliver\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamLiverOfPatient(hisid, dateTime) {\n  return axios.get(\"examliver/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-premature-baby-controller Exam Premature Baby Controller\n//----------------------------------------------\n//createExamPrematureBaby\nexport function createExamPrematureBaby(alkp, feSat, hisid, iron, ldh, tibc, updateTime) {\n  const body = {\n    alkp: alkp,\n    feSat: feSat,\n    hisid: hisid,\n    iron: iron,\n    ldh: ldh,\n    tibc: tibc,\n    updateTime: updateTime\n  }\n  return axios.post(\"examprematurebaby/createexamprematurebaby\", body);\n}\n\n//getExamPrematureBaby\nexport function getAllExamPrematureBaby() {\n  return axios.get(\"examprematurebaby/getAllexamprematurebaby\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamPrematureBabyOfPatient(hisid, dateTime) {\n  return axios.get(\"examprematurebaby/getOnepatient\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-unstructured-controller Exam Unstructured Controller\n//----------------------------------------------\n//createExamUnstructured\nexport function createExamUnstructured(hisid, item, result, state, time) {\n  const body = {\n    hisid: hisid,\n    item: item,\n    result: result,\n    state: state,\n    time: time\n  }\n  return axios.post(\"examunstructured/createexamunstructured\", body);\n}\n\n//getExamUnstructured\nexport function getAllExamUnstructured() {\n  return axios.get(\"examunstructured/getAllexamunstructured\");\n}\n\n//----------------------------------------------\n// feeding-controller Feeding Controller\n//----------------------------------------------\n//createExamFeeding\nexport function createExamFeeding(editDoctor, editTime, endTime, hisid, name, notice, startTime) {\n  const body = {\n    editDoctor: editDoctor,\n    editTime: editTime,\n    endTime: endTime,\n    hisid: hisid,\n    name: name,\n    notice: notice,\n    startTime: startTime\n  }\n  return axios.post(\"feeding/createfeeding\", body);\n}\n\n//getExamFeeding\nexport function getAllExamFeeding() {\n  return axios.get(\"feeding/getAllfeeding\");\n}\n\n//----------------------------------------------\n// hospitalization-record-controller Hospitalization Record Controller\n//----------------------------------------------\n//createHospitalizationRecord\nexport function createHospitalizationRecord(hisid, hospitalDoctor, tricuactiveue, mainDoctor, nonReport, note, report, updateTime) {\n  const body = {\n    hisid: hisid,\n    hospitalDoctor: hospitalDoctor,\n    icuactive: tricuactiveue,\n    mainDoctor: mainDoctor,\n    nonReport: nonReport,\n    note: note,\n    report: report,\n    updateTime: updateTime\n  }\n  return axios.post(\"hospitalizationrecord/createhospitalizationrecord\", body);\n}\n\n//getHospitalizationRecord\nexport function getHospitalizationRecord() {\n  return axios.get(\"hospitalizationrecord/getAllhospitalizationrecord\");\n}\n\n//----------------------------------------------\n// io-controller IO Controller\n//----------------------------------------------\n//createIO\nexport function createIO(caseid, hisid, item, updateTime) {\n  const body = {\n    caseid: caseid,\n    hisid: hisid,\n    item: item,\n    updateTime: updateTime\n  }\n  return axios.post(\"io/createio\", body);\n}\n\n//getIO\nexport function getIO() {\n  return axios.get(\"io/getAllio\");\n}\n\n//----------------------------------------------\n// nis-controller NIS Controller\n//----------------------------------------------\n//getQDC\nexport function getQDC(caseno, st, et) {\n  return axios.get(\"QDC/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQENT\nexport function getQENT(caseno) {\n  return axios.get(\"QENT/\" + caseno);\n}\n\n//getQDVS\nexport function getQDVS(caseno, st, et) {\n  return axios.get(\"QDVS/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQMNC\nexport function getQMNC(caseno) {\n  return axios.get(\"QMNC/\" + caseno);\n}\n\n//getQOXY\nexport function getQOXY(caseno, st, et) {\n  return axios.get(\"QOXY/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQPNOT\nexport function getQPNOT(caseno, st, et) {\n  return axios.get(\"QPNOT/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQSPE\nexport function getQSPE(caseno, st, et) {\n  return axios.get(\"QSPE/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQTWPER\nexport function getQTWPER(caseno, st, et) {\n  return axios.get(\"QTWPER/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//----------------------------------------------\n// note-controller Note Controller\n//----------------------------------------------\n//createNote\nexport function createNote(caseid, context, editTime, hisid, type) {\n  const body = {\n    caseid: caseid,\n    context: context,\n    editTime: editTime,\n    hisid: hisid,\n    type: type\n  }\n  return axios.post(\"note/createnote\", body);\n}\n\n//getNote\nexport function getNote() {\n  return axios.get(\"note/getAllnote\");\n}\n\n//----------------------------------------------\n// notice-controller 待辦事項 Notice (Ward/Patient View)\n//----------------------------------------------\n//建立資訊\nexport function createNotice(hisid, context, time, transinno, doc) {\n  const body = {\n    hisid: hisid,\n    context: context,\n    time: time,\n    transinno: transinno,\n    doc: doc\n  }\n  return axios.post(\"notice/createNotice\", body);\n}\n\n//刪除某人某件資訊\nexport function deleteNotice(transinno, date) {\n  return axios.delete(\"notice/delnotice/\" + transinno + \"/\" + date);\n}\n\n//取得全部資訊\nexport function getAllNotice() {\n  return axios.get(\"notice/getAllnotice\");\n}\n\n//取得某位病人資訊\nexport function getOnePatientNotice(transinno, HISID, st, et) {\n  return axios.get(\"notice/getOnePatientNotice/\" + transinno + \"/\" + HISID + \"/\" + st + \"/\" + et);\n}\n\n//----------------------------------------------\n// patient-controller 基本資料(Ward View)\n//----------------------------------------------\n//填寫基本資料\nexport function createPatient(nonreport, pacseno, pbirthdt, pbirthweight, pblood, pday, phistnum, pnamec, psex, pweek, report, transinid) {\n  const body = {\n    nonreport: nonreport,\n    pacseno: pacseno,\n    pbirthdt: pbirthdt,\n    pbirthweight: pbirthweight,\n    pblood: pblood,\n    pday: pday,\n    phistnum: phistnum,\n    pnamec: pnamec,\n    psex: psex,\n    pweek: pweek,\n    report: report,\n    transinid: transinid\n  }\n  return axios.post(\"patient/createpatient\", body);\n}\n\n//刪除某位病人\nexport function deletePatient(transinid, caseid, hisid) {\n  return axios.delete(\"patient/delpatient/\" + transinid + \"/\" + caseid + \"/\" + hisid);\n}\n\n//取得全部資訊\nexport function getAllPatient() {\n  return axios.get(\"patient/getAllpatient\");\n}\n\n//取得某位病人資訊\nexport function getOnePatient(hisid) {\n  return axios.get(\"patient/getOnepatient/\" + hisid);\n}\n\n\n//----------------------------------------------\n// patient-important-matter-controller 病人重要注意事項(Patient View)\n//----------------------------------------------\n//建立事項資訊\nexport function createPatientImportantMatter(context, editor, hisid, updateTime, transinid) {\n  const body = {\n    context: context,\n    editor: editor,\n    hisid: hisid.trim(),\n    time: updateTime,\n    transinid: transinid\n  }\n  return axios.post(\"patientimportantmatter/createpatientimportantmatter\", body);\n}\n\n//刪除某日資訊\nexport function deletePatientImportantMatter(date) {\n  return axios.delete(\"patientimportantmatter/delpatientimportantmatter/\" + date);\n}\n\n//取得全部資訊\nexport function getAllPatientImportantMatter() {\n  return axios.get(\"patientimportantmatter/getAllpatientimportantmatter\");\n}\n\n//取得某位病人資訊\nexport function getOnePatientImportantMatter(transinid) {\n  return axios.get(\"patientimportantmatter/getOnepatient/\" + transinid);\n}\n\n//----------------------------------------------\n// patient-remark-controller 病人註記(Patient View)\n//----------------------------------------------\n//createPatientRemark\nexport function createPatientRemark(context, hisid, transid) {\n  const body = {\n    context: context,\n    hisid: hisid,\n    transid: transid\n  }\n  return axios.post(\"patientremark/createpatientremark\", body);\n}\n\n//delPatientremark\nexport function deletePatientRemark(transid) {\n  return axios.delete(\"patientremark/delpatientremark/\" + transid);\n}\n\n//getPatientRemark\nexport function getAllPatientRemark() {\n  return axios.get(\"patientremark/getAllpatientremark\");\n}\n\n//getOnePatientRemark\nexport function getOnePatientRemark(transid) {\n  return axios.get(\"patientremark/getOnepatientremark/\" + transid);\n}\n\n//----------------------------------------------\n// remark-controller 註記\n//----------------------------------------------\n//建立註記\n\nexport function createRemark(name, remark, remarkId, time, transinId, type, editor) {\n  const body = {\n    name: name,\n    remark: remark,\n    remarkid: remarkId,\n    time: time,\n    transinid: transinId,\n    type: type,\n    editor: editor\n  }\n  return axios.post(\"Remark/createremark\", body);\n}\n\n//取得全部註記\nexport function getAllRemark() {\n  return axios.get(\"Remark/getAllremark\");\n}\n\n//取得某一類型註記\nexport function getOneRemark(transid, remarkid, type) {\n  return axios.get(\"Remark/getOneremark/\" + transid + \"/\" + remarkid + \"/\" + type);\n}\n\n//----------------------------------------------\n// patient-weight-controller 基本資料-體重(Ward View)\n//----------------------------------------------\n//填寫體重資訊\nexport function createPatientWeight(hisid, updateTime, weight) {\n  const body = {\n    hisid: hisid,\n    updateTime: updateTime,\n    weight: weight\n  }\n  return axios.post(\"patientweight/createpatientweight\", body);\n}\n\n//刪除某位病人體重資訊\nexport function deletePatientWeight(date) {\n  return axios.delete(\"patientweight/delpatientweight/\" + date);\n}\n\n//取得全部資訊\nexport function getAllPatientWeight() {\n  return axios.get(\"patientweight/getAllpatientweight\");\n}\n\n//取得某位病人體重資訊\nexport function getOnePatientWeight(hisid) {\n  return axios.get(\"patientweight/getOnepatientweight/\" + hisid);\n}\n\n//----------------------------------------------\n// prescription-order-controller Prescription Order\n//----------------------------------------------\n//建立Prescription Order資訊\nexport function createPrescriptionOrder(caseid, dosage, editTime, endTime, frequency, hisid, name, note, route, scientificName, startTime, state, unit) {\n  const body = {\n    caseid: caseid,\n    dosage: dosage,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    route: route,\n    scientificName: scientificName,\n    startTime: startTime,\n    state: state,\n    unit: unit\n  }\n  return axios.post(\"prescriptionorder/createprescriptionorder\", body);\n}\n\n//取得全部資訊\nexport function getAllPrescriptionOrder() {\n  return axios.get(\"prescriptionorder/getAllprescriptionorder\");\n}\n\n//更新Prescription Order備註\nexport function updatePrescriptionOrder(updateTime, caseid, dosage, editTime, endTime, frequency, hisid, name, note, route, scientificName, startTime, state, unit) {\n  const body = {\n    caseid: caseid,\n    dosage: dosage,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    route: route,\n    scientificName: scientificName,\n    startTime: startTime,\n    state: state,\n    unit: unit\n  }\n  return axios.put(\"prescriptionorder/updateponote/\" + updateTime, body);\n}\n\n//----------------------------------------------\n// schedule-controller 排程與事件(Ward/Patient View)\n//----------------------------------------------\n//建立排程資訊\nexport function createPatientSchedule(bednumber, context, time, transinno, type, writter, name, hisid) {\n  const body = {\n    bednumber: bednumber,\n    context: context,\n    time: time,\n    transinno: transinno,\n    type: type,\n    writter: writter,\n    name: name,\n    hisid: hisid\n  }\n  return axios.post(\"schedule/createschedule\", body);\n}\n\n//刪除某人某天排程資訊\nexport function deletePatientSchedule(transinno, date) {\n  return axios.delete(\"schedule/delschedule/\" + transinno + \"/\" + date);\n}\n\n//取得全部資訊\nexport function getAllSchedule() {\n  return axios.get(\"schedule/getAllschedule\");\n}\n\n//取得某位某時段病人資訊\nexport function getOnePatientSchedule(transinno, starttime, endtime) {\n  return axios.get(\"schedule/getOnepatient/\" + transinno + \"/\" + starttime + \"/\" + endtime);\n}\n\n//----------------------------------------------\n// sso-controller SSO Controller\n//----------------------------------------------\n//get_user_profile\nexport function ssoUserProfile(app_COMPANY_UUID, app_USER_BASIC_PROFILE, app_USER_NODE_UUID, privileged_APP_SSO_TOKEN, public_APP_USER_SSO_TOKEN_TO_QUERY) {\n  const body = {\n    app_COMPANY_UUID: app_COMPANY_UUID,\n    app_USER_BASIC_PROFILE: app_USER_BASIC_PROFILE,\n    app_USER_NODE_UUID: app_USER_NODE_UUID,\n    privileged_APP_SSO_TOKEN: privileged_APP_SSO_TOKEN,\n    public_APP_USER_SSO_TOKEN_TO_QUERY: public_APP_USER_SSO_TOKEN_TO_QUERY\n  }\n  return axios.post(\"nicu/get_user_profile\", body);\n}\n\n//get_uuid\nexport function ssoUuid(privileged_APP_SSO_TOKEN, public_APP_USER_SSO_TOKEN_TO_QUERY) {\n  const body = {\n    privileged_APP_SSO_TOKEN: privileged_APP_SSO_TOKEN,\n    public_APP_USER_SSO_TOKEN_TO_QUERY: public_APP_USER_SSO_TOKEN_TO_QUERY\n  }\n  return axios.post(\"nicu/get_uuid\", body);\n}\n\n//Login\nexport function ssoLogin(app_PRIVATE_ID, app_PRIVATE_PASSWD) {\n  const body = {\n    app_PRIVATE_ID: app_PRIVATE_ID,\n    app_PRIVATE_PASSWD: app_PRIVATE_PASSWD\n  }\n  return axios.post(\"nicu/login\", body);\n}\n\n//login_action\nexport function ssoLoginAction(login_name, password) {\n  const body = {\n    login_name: login_name,\n    password: password\n  }\n  return axios.post(\"nicu/login_a\", body);\n}\n\n//----------------------------------------------\n// stored-procedure-controller Stored Procedure Controller\n//----------------------------------------------\n//getADMDISP\nexport function getStoredProcedureADMDISP(hisid, caseno) {\n  return axios.get(\"ADMDISP/\" + hisid + \"/\" + caseno);\n}\n\n//getADMLIST\nexport function getStoredProcedureADMLIST(hisid, docid) {\n  return axios.get(\"ADMLIST/\" + hisid + \"/\" + docid);\n}\n\n//getCPSDISP\nexport function getStoredProcedureCPSDISP(hisid, caseno, seq) {\n  return axios.get(\"CPSDISP/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//getCPSLIST\nexport function getStoredProcedureCPSLIST(hisid, docid) {\n  return axios.get(\"CPSLIST/\" + hisid + \"/\" + docid);\n}\n\n//getDISDISP\nexport function getStoredProcedureDISDISP(hisid, caseno) {\n  return axios.get(\"DISDISP/\" + hisid + \"/\" + caseno);\n}\n\n//getDISLIST\nexport function getStoredProcedureDISLIST(hisid, docid) {\n  return axios.get(\"DISLIST/\" + hisid + \"/\" + docid);\n}\n\n//getDTAROTQ4\nexport function getStoredProcedureDTAROTQ4(hisid) {\n  return axios.get(\"DTAROTQ4/\" + hisid);\n}\n\n//getDTASOAPQ\nexport function getStoredProcedureDTASOAPQ(hisid, date, dpt) {\n  return axios.get(\"DTASOAPQ/\" + hisid + \"/\" + date + \"/\" + dpt);\n}\n\n//getERDISP\nexport function getStoredProcedureERDISP(hisid, caseno) {\n  return axios.get(\"ERDISP/\" + hisid + \"/\" + caseno);\n}\n\n//getOPSORAQ1\nexport function getStoredProcedureOPSORAQ1(hisid) {\n  return axios.get(\"OPSORAQ1/\" + hisid);\n}\n\n//getOPSORAQ2\nexport function getStoredProcedureOPSORAQ2(hisid, date, times) {\n  return axios.get(\"OPSORAQ2/\" + hisid + \"/\" + date + \"/\" + times);\n}\n\n//getORDLIST\nexport function getStoredProcedureORDLIST(hisid, date, dpt, docid) {\n  return axios.get(\"ORDLIST/\" + hisid + \"/\" + date + \"/\" + dpt + \"/\" + docid);\n}\n\n//getPCASELIST\nexport function getStoredProcedurePCASELIST(hisid, docid, ttype) {\n  return axios.get(\"PCASELIST/\" + hisid + \"/\" + docid + \"/\" + ttype);\n}\n\n//getPRGTXQRY\nexport function getStoredProcedurePRGTXQRY(hisid, date, caseno) {\n  return axios.get(\"PRGTXQRY/\" + date + \"/\" + hisid + \"/\" + caseno);\n}\n\n//getRESDBGAS\nexport function getStoredProcedureRESDBGAS(hisid, date) {\n  return axios.get(\"RESDBGAS/\" + hisid + \"/\" + date);\n}\n\n//getRESDGLU1\nexport function getStoredProcedureRESDGLU1(hisid, date) {\n  return axios.get(\"RESDGLU1/\" + hisid + \"/\" + date);\n}\n\n//getRESDISP\nexport function getStoredProcedureRESDISP(hisid, month, caseno, seq) {\n  return axios.get(\"RESDISP/\" + month + \"/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//getRESDNM2\nexport function getStoredProcedureRESDNM2(hisid, date) {\n  return axios.get(\"RESDNM2/\" + hisid + \"/\" + date);\n}\n\n//getRESLAB01\nexport function getStoredProcedureRESLAB01(hisid, date) {\n  return axios.get(\"RESLAB01/\" + hisid + \"/\" + date);\n}\n\n//getRESLAB02\nexport function getStoredProcedureRESLAB02(hisid, date) {\n  return axios.get(\"RESLAB02/\" + hisid + \"/\" + date);\n}\n\n//getRESLAB0C\nexport function getStoredProcedureRESLAB0C(hisid, date) {\n  return axios.get(\"RESLAB0C/\" + hisid + \"/\" + date);\n}\n\n//getRESSECT\nexport function getStoredProcedureRESSECT(hisid, month, dpt, docid) {\n  return axios.get(\"RESSECT/\" + month + \"/\" + hisid + \"/\" + dpt + \"/\" + docid);\n}\n\n//getTRTMNTQ1\nexport function getStoredProcedureTRTMNTQ1(hisid, caseno) {\n  return axios.get(\"TRTMNTQ1/\" + hisid + \"/\" + caseno);\n}\n\n//getUDORDER0\nexport function getStoredProcedureUDORDER0(hisid, caseno, seq) {\n  return axios.get(\"UDORDER0/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//getUDTEXTQ1\nexport function getStoredProcedureUDTEXTQ1(caseno, seq) {\n  return axios.get(\"UDTEXTQ1/\" + caseno + \"/\" + seq);\n}\n\n//getWARDFLAG\nexport function getStoredProcedureWARDFLAG(hisid, caseno, seq) {\n  return axios.get(\"WARDFLAG/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//----------------------------------------------\n// table-controller Table Controller\n//----------------------------------------------\n//getTableHBED\nexport function getTableHBED() {\n  return axios.get(\"HBED\");\n}\n\n//getTablePBASINFO\nexport function getTablePBASINFO(PHISTNUM) {\n  return axios.get(\"PBASINFO/\" + PHISTNUM);\n}\n\n//getTablePDOCNEW\nexport function getTablePDOCNEW(PCASENO) {\n  return axios.get(\"PDOCNEW/\" + PCASENO);\n}\n\n//getTablePLOC\nexport function getTablePLOC(PCASENO) {\n  return axios.get(\"PLOC/\" + PCASENO);\n}\n\n//----------------------------------------------\n// to-do-controller 待辦事項To Do List(Ward/Patient View)\n//----------------------------------------------\n//建立待辦資訊\nexport function createTodo(caseid, context, time, transinno, type) {\n  const body = {\n    caseid: caseid,\n    context: context,\n    time: time,\n    transinno: transinno,\n    type: type\n  }\n  return axios.post(\"todo/createtodo\", body);\n}\n\n//刪除某件待辦資訊\nexport function deleteTodo(index) {\n  return axios.delete(\"todo/deltodo/\" + index);\n}\n\n//取得全部資訊\nexport function getAllTodo() {\n  return axios.get(\"todo/getAlltodo\");\n}\n\n//取得某位病人資訊\nexport function getOneTodo(transinno, caseid) {\n  return axios.get(\"todo/getOnepatient/\" + transinno + \"/\" + caseid);\n}\n\n//----------------------------------------------\n// tpn-controller TPN Controller\n//----------------------------------------------\n//createTPN\nexport function createTPN(aa, ca, editTime, endTime, frequency, glu, hisid, k, mg, na, name, notice, p, startTime, state, tpn) {\n  const body = {\n    aa: aa,\n    ca: ca,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    glu: glu,\n    hisid: hisid,\n    k: k,\n    mg: mg,\n    na: na,\n    name: name,\n    notice: notice,\n    p: p,\n    startTime: startTime,\n    state: state,\n    tpn: tpn\n  }\n  return axios.post(\"tpn/createtpn\", body);\n}\n\n//getTPN\nexport function getAllTPN() {\n  return axios.get(\"tpn/getAlltpn\");\n}\n\n//----------------------------------------------\n// treatment-order-controller Treatment Order\n//----------------------------------------------\n//建立Treatment Order資訊\nexport function createTreatmentOrder(caseid, editTime, endTime, frequency, hisid, name, note, startTime, state) {\n  const body = {\n    caseid: caseid,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    startTime: startTime,\n    state: state\n  }\n  return axios.post(\"treatmentorder/createtreatmentorder\", body);\n}\n\n//取得全部資訊\nexport function getAllTreatmentOrder() {\n  return axios.get(\"treatmentorder/getAlltreatmentorder\");\n}\n\n//更新Treatment Order備註\nexport function updateTreatmentOrder(EditTime, caseid, editTime, endTime, frequency, hisid, name, note, startTime, state) {\n  const body = {\n    caseid: caseid,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    startTime: startTime,\n    state: state\n  }\n  return axios.put(\"treatmentorder/updatetonote/\" + EditTime, body);\n}\n\n//----------------------------------------------\n// ward-bed-information-history-controller 歷史病床資訊(Ward View)\n//----------------------------------------------\n//建立床位歷史資訊\nexport function createWardbedInformation(breath, hisid, nonBreath, onBedNumber, tpn, updateTime) {\n  const body = {\n    breath: breath,\n    hisid: hisid,\n    nonBreath: nonBreath,\n    onBedNumber: onBedNumber,\n    tpn: tpn,\n    updateTime: updateTime\n  }\n  return axios.post(\"wardbedinformation/createwardbedinformation\", body);\n}\n\n//取得全部資訊\nexport function getAllWardbedInformation() {\n  return axios.get(\"wardbedinformation/getAllwardbedinformation\");\n}\n\n//當日床位資訊\nexport function getOneWardbedInformation(date) {\n  return axios.get(\"wardbedinformation/getOnewardbedinformation/\" + date);\n}\n\n//近兩週床位資訊\nexport function getWeekWardbedInformation(date) {\n  return axios.get(\"wardbedinformation/getWeekswardbedinformation/\" + date);\n}\n\n//----------------------------------------------\n// ward-information-controller Ward Information Controller\n//----------------------------------------------\n//建立WardInformation資訊\nexport function createWardInformation(bednumber, caseid, hisid, indexId, today, transformintime, transformouttime) {\n  const body = {\n    bednumber: bednumber,\n    caseid: caseid,\n    hisid: hisid,\n    indexId: indexId,\n    today: today,\n    transformintime: transformintime,\n    transformouttime: transformouttime\n  }\n  return axios.post(\"wardinformation/createwardinformation\", body);\n}\n\n//取得全部資訊\nexport function getAllWardInformation() {\n  return axios.get(\"wardinformation/getAllwardinformation\");\n}\n\n//取得當日資訊\nexport function getOneWardInformation(date) {\n  return axios.get(\"wardinformation/getTodaywardinformation/\" + date);\n}\n\n//----------------------------------------------\n// ward-state-controller 病床狀態(Ward View)\n//----------------------------------------------\n//建立床位狀態資訊\nexport function createWardState(anti, breath, drain, foley, hd, hisid, npo, tpn) {\n  const body = {\n    anti: anti,\n    breath: breath,\n    drain: drain,\n    foley: foley,\n    hd: hd,\n    hisid: hisid,\n    npo: npo,\n    tpn: tpn\n  }\n  return axios.post(\"wardstate/createwardstate\", body);\n}\n\n//取得全部資訊\nexport function getAllWardState() {\n  return axios.get(\"wardstate/getAllwardstate\");\n}\n\n//取得某人床位狀態資訊\nexport function getOneWardState(hisid) {\n  return axios.get(\"wardstate/getOnewardstate/\" + hisid);\n}\n\n//----------------------------------------------\n// ward-value-controller 生命跡象(Ward/Patient View)\n//----------------------------------------------\n//建立生命跡象資訊\nexport function createWardValue(abpd, abpm, abps, bt, hr, nbpd, nbpm, nbps, phistnum, rr, spO2, time) {\n  const body = {\n    abpd: abpd,\n    abpm: abpm,\n    abps: abps,\n    bt: bt,\n    hr: hr,\n    nbpd: nbpd,\n    nbpm: nbpm,\n    nbps: nbps,\n    phistnum: phistnum,\n    rr: rr,\n    spO2: spO2,\n    time: time\n  }\n  return axios.post(\"wardvalue/createwardvalue\", body);\n}\n\nexport function getWardDebInfo(date) {\n  return axios.get(\"patient/getWardDebInfo/\" + date);\n}\n\nexport function getPatientwardvalueMedian(hisid, startTime, endTime) {\n  return axios.get(\"wardvalue/getPatientwardvalueMedian/\" + hisid + \"/\" + startTime + \"/\" + endTime);\n}\n\n\nexport function getPatientwardvalueBoxPlot(hisid, startTime, endTime, type, interval) {\n  return axios.get(\"wardvalue/getPatientwardvalueBoxPlot/\" + hisid + \"/\" + startTime + \"/\" + endTime + \"/\" + type + \"/\" + interval);\n}\n\nexport function getVitalSignData(hisid, startTime, endTime, type) {\n  return axios.get(\"wardvalue/getVitalSignData/\" + hisid + \"/\" + startTime + \"/\" + endTime + \"/\" + type);\n}\n\n//取得全部資訊\nexport function getAllWardValue() {\n  return axios.get(\"wardvalue/getAllwardvalue\");\n}\n\n//取得全部資訊\nexport function getHisidwardvalue(hisid) {\n  return axios.get(\"wardvalue/getHisidwardvalue/\" + hisid);\n}\n\n//取得某一段時間某一個人生命跡象(原始資料)\nexport function getPatientWardValue(endTime, hisid, startTime, interval, type) {\n  return axios.get(\"wardvalue/getPatientwardvalue/\" + hisid + \"/\" + startTime + \"/\" + endTime + \"/\" + type + \"/\" + interval);\n}\n\n//----------------------------------------------\n// water-volume-controller Water Volume Controller\n//----------------------------------------------\n//createWaterVolume\nexport function createWaterVolume(endTime, feed, hisid, iv, other, startTime, updateTime) {\n  const body = {\n    endTime: endTime,\n    feed: feed,\n    hisid: hisid,\n    iv: iv,\n    other: other,\n    startTime: startTime,\n    updateTime: updateTime\n  }\n  return axios.post(\"watervolume/createwatervolume\", body);\n}\n\n//取得全部資訊\nexport function getAllWaterVolume() {\n  return axios.get(\"watervolume/getAllwatervolume\");\n}\n","import axios from 'axios';\n\nconst githubApiUrl = \"https://raw.githubusercontent.com/gerrykiki/JsonRegObject/master/\";\n\n//create new instance of github API\nvar axiosGithub = axios.create({\n    baseURL: githubApiUrl,\n    timeout: 1000,\n    //headers: {'X-Custom-Header': 'foobar'}\n});\n\nexport function getGitHubJson(string) {\n    return axiosGithub.get(string);\n}\n\n// export function getExamReport() {\n//     return axios.get(\"ExamRepor.json\");\n// }\n\n","import React, { Component } from 'react';\nimport { wardstatestringformat } from '../Function/Wardstate'\nimport './Wardcardstatus.scss'\nimport * as ApiProvider from '../API/ApiProvider'\nimport * as ApiGithub from '../API/ApiGithub'\n// import moment from 'moment';\n// import * as RegularData from '../Data/RegularData'\n\nclass Wardcarstatus extends Component {\n    state = {\n        TRTMNTQ1: [],\n        UDORDER0: [],\n        FlagReg: []\n    }\n    componentDidMount() {\n        const { PCASENO, PHISTNUM } = this.props\n        console.log(PCASENO, PHISTNUM)\n        const TRQ1 = ApiProvider.getStoredProcedureTRTMNTQ1(PHISTNUM, PCASENO)\n            .then(data => {\n                console.log(data.data)\n                const rowList = data.data\n                const filterStatusList = rowList.filter(function (info, index, arr) {\n                    return Number(info.ORSTATUS) === 30\n                })\n                return filterStatusList\n            })\n            .catch(err => {\n\n            })\n        const UDORDER = ApiProvider.getStoredProcedureUDORDER0(PHISTNUM, PCASENO, \"123\")\n            .then(data => {\n                console.log(data.data)\n                var List = []\n                const dataList = data.data\n                if (Array.isArray(dataList)) {\n                    for (let index = 0; index < dataList.length; index++) {\n                        const status = Number(dataList[index].UDSTATUS)\n                        if (status === 80) {\n                            List.push(dataList[index])\n                        }\n                    }\n                }\n                return List\n            })\n            .catch(err => {\n\n            })\n        const Reg = ApiGithub.getGitHubJson(\"FlagReg.json\")\n            .then(data => {\n                console.log(data.data)\n                return data.data\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        Promise.all([TRQ1, UDORDER, Reg])\n            .then(result => {\n                this.setState({\n                    TRTMNTQ1: result[0],\n                    UDORDER0: result[1],\n                    FlagReg: result[2]\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    render() {\n        function RespiratorStatusParse(InvasiveRespiratorStatus, NonInvasiveRespiratorStatus) {\n            if (InvasiveRespiratorStatus === false && NonInvasiveRespiratorStatus === false) {\n                return \"false\"\n            }\n            if (InvasiveRespiratorStatus === true && NonInvasiveRespiratorStatus === true) {\n                return \"false\"\n            }\n            if (InvasiveRespiratorStatus === true) {\n                return '呼(侵入)'\n            }\n            if (NonInvasiveRespiratorStatus === true) {\n                return \"呼(非侵入)\"\n            }\n            return \"--\"\n        }\n\n        function parseFlagData(TRTMNTQ1, UDORDER, FlagReg, type) {\n            //filter  status 生效中\n            console.log(FlagReg, type)\n            if (FlagReg === undefined || FlagReg === null) { return null }\n            const Flag = FlagReg.filter(function (value, index, arr) {\n                return value.item === type\n            })\n            if (Flag.length === 0) {\n                return null\n            }\n            const StatusUDORDER = UDORDER.some(function (value, index, arr) {\n                const UDDRGNAM = value.UDDRGNAM.toLowerCase()\n                const UDGNAME = value.UDGNAME.toLowerCase()\n                const findFlag = Flag[0].ParseValueUD.some(function (value, index, arr) {\n                    return UDDRGNAM.indexOf(value) >= 0 || UDGNAME.indexOf(value)\n                })\n                return findFlag\n            })\n            const StatusTRTMNTQ1 = TRTMNTQ1.some(function (value, index, arr) {\n                const ORPROCED = value.ORPROCED.toLowerCase()\n                const findFlag = Flag[0].ParseValueTRT.some(function (value, index, arr) {\n                    console.log(value)\n                    return ORPROCED.match(value) !== null\n                })\n                return findFlag\n            })\n            if (StatusUDORDER === false && StatusTRTMNTQ1 === false) {\n                return false\n            }\n            return true\n        }\n\n        function statusspan(source) {\n            if (source.item === 'Respirator') {\n                return 'gridtwocoltwo'\n            }\n            else return 'gridtwocolone'\n        }\n        function style_change(source) {\n            if (source.item === 'Respirator') {\n                if (source.data === '呼(侵入)') {\n                    return 'statustrue'\n                }\n                if (source.data === '呼(非侵入)') {\n                    return 'statusfalse'\n                }\n                if (source.data === 'true') {\n                    return 'statustrue'\n                }\n                return 'statusfalse'\n\n            }\n            else {\n                if (source.data) {\n                    return 'statustrue'\n                }\n                else {\n                    return 'statusfalse'\n                }\n            }\n        }\n\n        const UDORDER = this.state.UDORDER0\n        const TRTMNTQ1 = this.state.TRTMNTQ1\n        const Flag = this.state.FlagReg\n        const AntiStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"Anti\")\n        const TPNStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"TPN\")\n        const NP0Status = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"NPO\")\n        const FoleyStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"Foley\")\n        const DrainStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"Drain\")\n        const InvasiveRespiratorStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"InvasiveRespirator\")\n        const NonInvasiveRespiratorStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"NonInvasiveRespirator\")\n        const RespiratorStatus = RespiratorStatusParse(InvasiveRespiratorStatus, NonInvasiveRespiratorStatus)\n\n        const StatusArray = [\n            { \"item\": \"Respirator\", \"data\": RespiratorStatus },\n            { \"item\": \"CVC\", \"data\": FoleyStatus },\n            { \"item\": \"NPO\", \"data\": NP0Status },\n            { \"item\": \"TPN\", \"data\": TPNStatus },\n            { \"item\": \"Abx\", \"data\": AntiStatus },\n            { \"item\": \"Xanth\", \"data\": [] },\n            { \"item\": \"照光\", \"data\": [] },\n            { \"item\": \"DRN\", \"data\": DrainStatus }\n        ]\n\n        const statuslist = StatusArray.map(function (info, index, arr) {\n            return (\n                <div key={index} className={statusspan(info)}>\n                    <t4 className={style_change(info)}>{wardstatestringformat(info)}</t4>\n                </div>\n            );\n        })\n        const source = this.props.source\n        return (\n            <div className={source ? \"warscardstatusgrid\" : \"wardinfouserstatusgrid\"}>\n                {statuslist}\n            </div >\n        );\n    }\n}\n\nexport default Wardcarstatus\n","import React, { useState, useEffect } from \"react\";\nimport { statecolor } from '../Function/Wardstate'\nimport Wardcarstatus from './Wardcardstatus'\nimport * as ApiProvider from '../API/ApiProvider'\nimport './Wardcardvalue.scss'\n\nexport function WardCard(props) {\n    const [CenterMonitorValue, SetCenterMonitorValue] = useState(null)\n    const [HID, SetHID] = useState(\"\")\n    const [Timer, SetTimer] = useState(0)\n    useEffect(() => {\n        const TimerID = setInterval(() => {\n            SetTimer(Timer + 1)\n        }, 5000)\n        return () => clearInterval(TimerID);\n    }, [Timer])\n\n    useEffect(() => {\n        const hisid = props.PHISTNUM.toString().trim()\n        // const hisid = \"TEST1234\"\n        ApiProvider.getHisidwardvalue(hisid)\n            .then(data => {\n                console.log(data.data)\n                const source = data.data\n                const HID = source.phistnum\n                SetCenterMonitorValue(source[0]);\n                SetHID(HID)\n            })\n            .catch(err => {\n                console.log(\"Andy test getHisidwardvalue NG \" + JSON.stringify(err));\n            });\n    }, [Timer]);\n    function InitCenterData(value) {\n        console.log(value)\n        if (value === undefined || value === null || value === \"\") {\n            return \"--\"\n        }\n        else return value\n    }\n    console.log(CenterMonitorValue)\n    if (CenterMonitorValue === null || CenterMonitorValue === undefined) {\n        return null\n    }\n    return (\n        <div className='Wardcardvaluelayout'>\n            <div className='Wardcardvitalvalue'>\n                <div className='valueRows'>\n                    <div >\n                        <t4 style={{ display: \"block\", color: statecolor('HR'), }}>HR</t4>\n                        <t2 className=\"bothWordValue\" style={{ color: statecolor('HR') }}>{InitCenterData(CenterMonitorValue.hr)}</t2>\n                    </div>\n                    <div >\n                        <t4 style={{ display: \"block\", color: statecolor('SpO2') }}>SpO<sub>2</sub></t4>\n                        <t2 className=\"bothWordValue\" style={{ color: statecolor('SpO2') }}>\n                            {InitCenterData(CenterMonitorValue.spo2)}\n                            <span style={{ fontWeight: \"400\", fontSize: \"12px\" }}>%</span>\n                        </t2>\n                    </div>\n                </div>\n                <div className='valueRows'>\n                    <div >\n                        <t4 style={{ display: \"block\", color: statecolor('BP') }}>ABP</t4>\n                        <t2 className=\"bothWordValue\" style={{ color: statecolor('BP') }}>{InitCenterData(CenterMonitorValue.abpd)}/{InitCenterData(CenterMonitorValue.abps)}({InitCenterData(CenterMonitorValue.abpm)})</t2>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnsGap: \"5px\" }}>\n                        <div >\n                            <t4 style={{ display: \"block\", color: statecolor('RR') }}>RR</t4>\n                            <t2 className=\"bothWordValue\" style={{ color: statecolor('RR') }}>{InitCenterData(CenterMonitorValue.rr)}</t2>\n                        </div>\n                        <div >\n                            <t4 style={{ display: \"block\", color: statecolor('BT') }}>BT</t4>\n                            <t2 className=\"bothWordValue\" style={{ color: statecolor('BT') }}>\n                                {InitCenterData(CenterMonitorValue.bt)}\n                                <span style={{ fontWeight: \"400\", fontSize: \"12px\" }}>&deg;C</span>\n                            </t2>\n                        </div>\n                    </div>\n                </div>\n            </div >\n            <Wardcarstatus source={true} PCASENO={props.PCASENO} PHISTNUM={props.PHISTNUM}></Wardcarstatus>\n        </div >\n    );\n}\n","function bednumberformat(number) {\n    if (number < 10) {\n        return '0' + number\n    }\n    return number\n}\n\nfunction gender(gender) {\n    if (gender === \"1\") {\n        return '男'\n    }\n    return '女'\n}\n\nfunction WardCardgender(gender) {\n    console.log(gender)\n    if (gender === \"M\") {\n        return '男'\n    }\n    return '女'\n}\n\nfunction pregancybirthdayweekday(pregancy, birthday) {\n    const pregancydays = (new Date(birthday).getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    const pregancyweeks = pregancydays / 7\n    const pregancyweeksdays = pregancydays % 7\n    return '[' + parseInt(pregancyweeks) + '+' + parseInt(pregancyweeksdays) + ']'\n}\n\nfunction pregancynowweek(pregancy) {\n    const pregancydays = (new Date().getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    console.log(pregancydays)\n    const pregancyweeks = pregancydays / 7\n    const pregancyweeksdays = pregancydays % 7\n    console.log(pregancyweeksdays)\n    return '[' + parseInt(pregancyweeks) + '+' + parseInt(pregancyweeksdays) + ']'\n}\n\nfunction pregancytoloaclweeks(pregancy) {\n    const pregancydays = (new Date().getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    console.log(pregancydays)\n    return parseInt(pregancydays / 7)\n}\n\nfunction pregancytolocaldays(pregancy) {\n    const pregancydays = (new Date().getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n\n    return parseInt(pregancydays % 7)\n}\n\nfunction pregancyweek(pregancy, birthday) {\n    const pregancydays = (new Date(birthday).getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    const pregancyweeks = pregancydays / 7\n    return parseInt(pregancyweeks)\n}\n\nfunction pregancydays(pregancy, birthday) {\n    const pregancydays = (new Date(birthday).getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    const pregancyweekdays = pregancydays % 7\n    return parseInt(pregancyweekdays)\n}\n\nfunction birthdayweeks(birthday) {\n    const birthdays = (new Date().getTime() - new Date(birthday).getTime()) / (24 * 60 * 60 * 1000)\n    return parseInt(birthdays / 7)\n}\n\nfunction pregancyweeksanddays(bornweeks, borndays, birthdays) {\n    if (bornweeks === null || bornweeks === undefined || bornweeks === \"\") {\n        return \"[ -- + -- ]\"\n    }\n    if (borndays === null || borndays === undefined || borndays === \"\") {\n        return \"[ -- + -- ]\"\n    }\n    if (birthdays === null || birthdays === undefined || birthdays === \"\") {\n        return \"[ -- + -- ]\"\n    }\n    const localtoborndays = parseInt((new Date().getTime() - new Date(birthdays).getTime()) / (24 * 60 * 60 * 1000)) + parseInt(borndays) + 1\n    const localweeks = parseInt(localtoborndays / 7) + parseInt(bornweeks)\n    const localdays = parseInt(localtoborndays % 7)\n    return \"[\" + localweeks + \"+\" + localdays + \"]\"\n\n}\n\nfunction WeightFormat(BornWeight, Weight) {\n    return BornWeight + \"g -> \" + Weight + \"g\"\n\n}\nexport { bednumberformat, gender, pregancybirthdayweekday, pregancynowweek, pregancyweek, pregancydays, birthdayweeks, pregancytoloaclweeks, pregancytolocaldays, pregancyweeksanddays, WardCardgender, WeightFormat }","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n//Component\nimport * as Wardstate from '../../Function/Wardstate'\nimport * as Wardcardvalue from '../WardCardvalue-k'\nimport { bednumberformat, WardCardgender } from '../../Function/Wardbedfunction'\nimport './Wardcarddetail.scss'\n//image\nimport editlogo from '../../Image/svg/edit2.svg'\nimport fileLogo from '../../Image/svg/file1.svg'\nimport file2Logo from '../../Image/svg/file2.svg'\n//antdesign\nimport { Modal, InputNumber, Button } from 'antd';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment';\n\nvar BornChangeWeek = 0\nvar BornChangeDay = 0\nvar BornChangeWeight = 0\nclass Wardcarddetail extends Component {\n    state = {\n        hoverstate: \"none\",\n        clickstate: false,\n        mouse_hover: false,\n        edit_hover: false,\n        visible: false,\n        pbasignfo: null,\n        birthdayweight: \"N\",\n        weight: 0,\n        bornweek: 0,\n        bornday: 0,\n        nowweight: 0,\n        report: 0,\n        nonreport: 0,\n        remark: \"\",\n        TRANSINID: \"\",\n        TRANSINDT: \"\",\n        TRANSINTM: \"\",\n\n        modatstatus: true,\n        persionstatus: []\n    };\n\n    componentDidMount() {\n        const { data } = this.props\n        const HID = data.PHISTNUM\n        const date = moment().add(-1, \"days\")\n        console.log(date.format(\"YYYY-MM-DD HH:mm:ss\"))\n        const TRID = data.TRID\n        this.API_DATA(HID, date, TRID)\n    }\n\n    API_DATA(HID, date, TRID) {\n        ApiProvider.getStoredProcedureRESSECT(HID, 1, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                const ReportList = data.data\n                const mapList = ReportList.filter(function (value, index, array) {\n                    const DTstring = value.ORRCPDT.toString()\n                    const TMstring = value.ORRCPTM.toString()\n                    const time = DTstring + TMstring\n                    return moment(time, 'YYYY-MM-DDHH:mm:ss').valueOf() > date.valueOf()\n                })\n                this.setState({ report: mapList.length })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureRESSECT NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureORDLIST(HID, date.format('YYYY-MM-DD'), \"ALL\", \"DOC3924B\")\n            .then(data => {\n                const filter = data.data.filter(function (info, index, arr) {\n                    return info.ORSTATUS === \"31\"\n                })\n                this.setState({ nonreport: filter.length })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getOnePatientRemark(TRID)\n            .then(data => {\n                this.setState({\n                    remark: data.data[0].context\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getOnePatientRemark NG \" + JSON.stringify(err));\n            })\n        ApiProvider.getPersionalStatus(HID)\n            .then(data => { console.log(data.data); this.setState({ persionstatus: data.data }) })\n            .catch(err => { console.log(err) })\n    }\n\n    //Module show\n    handleOk(HID, name, sex) {\n        console.log(HID, name, sex)\n        const week = Number(BornChangeWeek)\n        const day = Number(BornChangeDay)\n        const weight = parseFloat(Number(BornChangeWeight) / 1000).toFixed(3)\n        if (weight === undefined || weight === 0 || weight === null || week === 0 || day === 0 || week === undefined || week === null || day === null || day === undefined) {\n            console.log(\"No Input\")\n            this.setState({ modatstatus: false })\n\n        }\n        else if (Number(day) > 6) {\n            this.setState({ modatstatus: false })\n        }\n        else {\n            console.log(\"Create\")\n            ApiProvider.createPatientInfo(HID, name, sex, weight, week, day)\n                .then(data => { console.log(data.data); this.setState({ visible: false, modatstatus: true }) })\n                .catch(err => { console.log(err) })\n        }\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n            modatstatus: true\n        });\n    };\n    showModal = () => { this.setState({ visible: true }); };\n\n    Modelrender(personstatus) {\n        function typefrom(from) {\n            if (from === 'Custom') {\n                return true\n            }\n            return false\n        }\n        function BornWeekAndDay(BornWeeks, BornDays) {\n            if (BornWeeks === null || BornWeeks === undefined || BornWeeks === \"\") {\n                return []\n            }\n            return [BornWeeks, BornDays]\n        }\n        const { data } = this.props\n        const source = data\n        const HID = source.PHISTNUM.toString().trim()\n        const name = source.PNAMEC.toString().trim()\n        const sex = source.PSEX.toString().trim()\n        const Birthday = source.PBIRHDT\n        const BornWeight = personstatus.BornWeight\n        const BornWeeks = personstatus.BornWeeks\n        const BornWdays = personstatus.BornDays\n        const BornStatus = BornWeekAndDay(BornWeeks, BornWdays)\n        console.log(personstatus)\n        const viewstatus = this.state.modatstatus\n        const dataArray = [\n            { item: \"病床號碼:\", value: bednumberformat(parseInt(source.HBEDNO)) },\n            { item: \"病歷號碼:\", value: source.PHISTNUM.toString().trim() },\n            { item: \"出生週數:\", value: BornStatus },\n            { item: \"生日:\", value: moment(Birthday, 'YYYYMMDD').format('YYYY/MM/DD') },\n            { item: \"出生體重:\", value: BornWeight }\n        ]\n        const dataArrayRender = dataArray.map(function (info, index, arr) {\n            if (info.item === \"出生體重:\") {\n                return (\n                    <div key={index} >\n                        <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\", height: \"50px\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                                {info.item}\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                                <InputNumber defaultValue={info.value} onChange={(value) => { BornChangeWeight = value }}></InputNumber>\n                                <div style={{ margin: \"0px 5px\" }}>g</div>\n                            </div>\n                        </div>\n                        <div style={{ display: viewstatus ? \"none\" : \"block\", color: \"red\" }}>輸入錯誤</div>\n                    </div>\n                );\n            }\n            if (info.item === \"出生週數:\") {\n                if (info.value.length === 0) {\n                    return (\n                        <div key={index}>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\", height: \"50px\" }}>\n                                <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                                    {info.item}\n                                </div>\n                                <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                                    <InputNumber onChange={(value) => { BornChangeWeek = value }}></InputNumber>\n                                    <div style={{ margin: \"0px 5px\" }}>週</div>\n                                    <InputNumber onChange={(value) => { BornChangeDay = value }}></InputNumber>\n                                    <div style={{ margin: \"0px 5px\" }}>日</div>\n                                </div>\n                            </div>\n                            <div style={{ display: viewstatus ? \"none\" : \"block\", color: \"red\" }}>輸入錯誤</div>\n                        </div>\n                    );\n                }\n                return (\n                    <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\", height: \"50px\" }}>\n                        <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                            {info.item}\n                        </div>\n                        <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                            {info.value[0]}\n                            <div style={{ margin: \"0px 5px\" }}>週</div>\n                            {info.value[1]}\n                            <div style={{ margin: \"0px 5px\" }}>日</div>\n                        </div>\n                    </div>\n                );\n            }\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\", height: \"50px\" }}>\n                    <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                        {info.item}\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                        {info.value}\n                    </div>\n                </div>\n            );\n        })\n        return (\n            <Modal\n                width={400}\n                title=\"填寫病床資訊\"\n                visible={this.state.visible}\n                onCancel={this.handleCancel}\n                footer={\n                    <div style={{ display: \"flex\", justifyContent: typefrom(source.type) ? 'space-between' : 'flex-end', alignItems: \"center\" }}>\n                        <Button key=\"delete\" style={typefrom(source.type) ? { border: \"1px solid rgba(208,2,27,1)\", color: \"rgba(208,2,27,1)\" } : { display: \"none\" }} onClick={this.handleCancel}>清床</Button>\n                        <div>\n                            <Button key=\"cancel\" onClick={this.handleCancel}>取消</Button>\n                            <Button key=\"ok\" type=\"primary\" onClick={() => { console.log(HID, name, sex); this.handleOk(HID, name, sex) }}>儲存</Button>\n                        </div>\n                    </div>}>\n                {dataArrayRender}\n            </Modal>\n        );\n    }\n    render() {\n        function valueFormat(value) {\n            if (value === \"\" || value === null || value === undefined) {\n                return \"--\"\n            }\n            return value.toString()\n        }\n        function valueBornWeight(value) {\n            if (value === \"\" || value === null || value === undefined || value === 0) {\n                return \"\"\n            }\n            return value.toString()\n        }\n        function statusPersion(persionstatus, QMNC, QTWER, Birthday) {\n            console.log(persionstatus)\n            if (persionstatus.length === 0) {\n                const BornWeight = Wardstate.BornWeight(QTWER, Birthday)\n                const BornWeeks = QMNC.weeks\n                const BornDays = QMNC.days\n                return {\n                    BornWeight: BornWeight,\n                    BornWeeks: BornWeeks,\n                    BornDays: BornDays\n                }\n            }\n            const Weight = Number(persionstatus[0].bweight) * 1000\n            const BornWeeks = Number(persionstatus[0].bweek)\n            const BornDays = Number(persionstatus[0].bday)\n            return {\n                BornWeight: Weight,\n                BornWeeks: BornWeeks,\n                BornDays: BornDays\n            }\n        }\n        const { data, previewmode, hbedlist } = this.props\n        const { persionstatus } = this.state\n        const source = data\n        const Birthday = source.PBIRHDT\n        const QTWER = Wardstate.XM2JSON(source.QTWPER)\n        const QMNC = Wardstate.QMNCXM2JSON(source.QMNC)\n        const Weight = Wardstate.NewestWeight(QTWER)\n        const BornWeight = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornWeight\n        const BornWeeks = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornWeeks\n        const BornDays = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornDays\n        const remark = this.state.remark\n        if (source === undefined) { return null }\n        const status = {\n            date: moment(Birthday, \"YYYYMMDD\").valueOf(),\n            week: BornWeeks,\n            day: BornDays\n        }\n        console.log(source)\n        console.log(status)\n        const AgeStatus = Wardstate.CalculateAge(status)\n        return (\n            <div>\n                <div className='wardcarddetailtitle'>\n                    <t3 style={{ color: \"rgba(0, 26, 109)\", fontSize: \"14px\", fontWeight: \"600\" }}>{bednumberformat(Number(source.HBEDNO))}</t3>\n                    <t3 style={{ color: \"rgba(0, 26, 109)\", fontSize: \"16px\", fontWeight: \"600\" }}>{source.PNAMEC.toString().trim()}</t3>\n                    <t3 style={{ color: \"rgba(0, 26, 109)\", fontSize: \"14px\", fontWeight: \"600\" }}>{source.PHISTNUM}</t3>\n                    <t3 style={{ color: \"rgba(0, 26, 109, .7)\", fontSize: \"12px\" }}>{WardCardgender(source.PSEX)}</t3>\n                    <t3 style={{ color: \"rgba(0, 26, 109, .7)\", fontSize: \"12px\" }}>{moment(Birthday, 'YYYYMMDD').format('MM/DD')}</t3>\n\n                    {/* <t3 style={{ color: \"rgba(61, 119, 181, 1)\" }}>{bednumberformat(Number(source.HBEDNO))},{source.PNAMEC.toString().trim()},{WardCardgender(source.PSEX)},{moment(Birthday, 'YYYYMMDD').format('YYYY/MM/DD')},{source.PHISTNUM}</t3> */}\n                    <div onClick={this.showModal} className='wardcarddetileditbutton'>\n                        <img src={editlogo} alt='editlogo'></img>\n                    </div>\n                </div>\n                <div>\n                    <div className='wardinfoweeks'>\n                        <t3 style={{ color: \"rgba(0, 26, 109)\" }}>\n                            {valueFormat(BornWeeks)}+{valueFormat(BornDays)}&gt;<span style={{ fontWeight: \"900\" }}>{AgeStatus}</span>\n                        </t3>\n                        <t3 style={{ color: \"rgba(0, 26, 109)\" }}>\n                            {valueBornWeight(BornWeight)}g&gt;\n                            <span style={{ fontWeight: \"900\" }}>{valueFormat(Weight)}g</span>\n                        </t3>\n\n                        {/* <div style={{ color: \"rgba(59, 151, 225, 1)\",fontSize: \"16px\"  }}>{valueFormat(BornWeeks)}+{valueFormat(BornDays)}&rarr;{AgeStatus}</div>\n                        <div style={{ fontSize: \"12px\" }}>{valueBornWeight(BornWeight)}{valueFormat(Weight)}g</div> */}\n                        <div className='wardinforeportgroup'>\n                            <img src={fileLogo} alt='fileLogo'></img>\n                            <div style={{ fontSize: \"12px\" }}>{this.state.report}</div>\n                            <img src={file2Logo} alt='file2Logo'></img>\n                            <div style={{ fontSize: \"12px\" }}>{this.state.nonreport}</div>\n                        </div>\n                    </div>\n                    <div style={{ display: previewmode ? \"block\" : \"none\", borderBottomWidth: \"0.5px\", borderBottomColor: \"rgba(215, 238, 255, 1)\", borderBottomStyle: \"solid\" }}>\n                        <Wardcardvalue.WardCard centerdata={source.centerMonitorData} previewmode={previewmode} PHISTNUM={source.PHISTNUM} PCASENO={source.PCASENO}></Wardcardvalue.WardCard>\n                    </div>\n                    <div style={{ height: '30px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: \"0px 10px\", position: 'relative' }}>\n                        <div style={{ overflow: \"hidden\", fontSize: \"12px\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\", width: \"250px\" }}>{remark}</div>\n                        <Link className='patientviewbutton' to={{ pathname: \"/nicu/patient/\" + source.PHISTNUM, state: { \"source\": hbedlist, \"HISID\": source.PHISTNUM, \"CASEID\": source.PCASENO, \"BEDNUMBER\": source.HBEDNO, \"TYPE\": true, \"TRANSINID\": this.state.TRANSINID } }}>\n                            <centerstyle>\n                                <div style={{ fontSize: \"12px\" }}>進入病人資料頁面</div>\n                            </centerstyle>\n                        </Link>\n                    </div>\n                </div>\n                {this.Modelrender(statusPersion(persionstatus, QMNC, QTWER, Birthday))}\n            </div>\n        );\n    }\n}\n\nexport default Wardcarddetail;","import React, { Component } from 'react';\nimport { format_bednumber } from '../../Commonfunction'\nimport editlogo from '../../Image/svg/edit2.svg'\nimport { Modal, Input, DatePicker } from 'antd';\nimport './UnpreviewWardCardDetail.scss'\nimport { bednumberformat } from '../../Function/Wardbedfunction'\n\nclass Unpreviewwardcarddetail extends Component {\n    state = { visible: false, powerLogin: 0 };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n            databool: false,\n            data: null\n        });\n    };\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n\n    handleOk(string) {\n        console.log(string);\n\n        const bednumber = document.getElementById(\"bednumber\").value;\n        const hisnumber = document.getElementById(\"hisid\").value;\n        const birweek = document.getElementById(\"birweek\").value;\n        const birthday = string;\n        const weight = document.getElementById(\"weight\").value;\n        const statedata = {\n            \"BedNumber\": bednumber,\n            \"id\": hisnumber,\n            \"birweek\": birweek,\n            \"birthday\": birthday,\n            \"weight\": weight\n        }\n        console.log(statedata)\n        this.setState({\n            visible: false,\n            data: statedata,\n            databool: false\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    savestatus(string) {\n        console.log(string)\n    }\n\n    render() {\n        function modedisplay(mode) {\n            if (mode) {\n                return \"none\"\n            }\n            else {\n                return \"block\"\n            }\n        }\n        const number = this.props.bednumber\n        const { previewmode } = this.props\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div style={{ height: '40px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', backgroundColor: \"rgba(215, 238, 255, 1)\", padding: \"9px 10px\" }}>\n                    <t3 style={{ color: \"rgba(61, 119, 181, 1)\" }}>{format_bednumber(number)}/--</t3>\n                    <div className='wardcardeditbtn' onClick={this.showModal} style={{ display: this.state.powerLogin >= 2 ? \"flex\" : \"none\" }}>\n                        <img src={editlogo} alt='editlogo'></img>\n                    </div>\n                    <Modal\n                        width={270}\n                        title=\"填寫病床資訊\"\n                        visible={this.state.visible}\n                        onOk={() => this.handleOk(\"2019/12/12\")}\n                        onCancel={this.handleCancel}\n                    >\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr\", gridRowGap: \"10px\" }}>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>病床號碼:</t2>\n                                </centerstyle>\n                                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                    <div>{bednumberformat(number)}</div>\n                                </div>\n                            </div>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>病歷號碼:</t2>\n                                </centerstyle>\n                                <Input id=\"hisid_wardcard\" />\n                            </div>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>出生週數:</t2>\n                                </centerstyle>\n                                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                    <Input id='week' placeholder=\"20\" style={{ marginRight: \"5px\" }}></Input>\n                                    <t2 style={{ marginRight: \"5px\" }}>週</t2>\n                                    <Input id='days' placeholder=\"20\" style={{ marginRight: \"5px\" }}></Input>\n                                    <t2>日</t2>\n                                </div>\n                            </div>\n                            <div className='modulecontent'>\n                                <div style={{ display: 'flex', justifyContent: \"space-between\", alignItems: \"cneter\", width: \"69px\" }}>\n                                    <t2>生</t2>\n                                    <t2>日:</t2>\n                                </div>\n                                <DatePicker placeholder=\"選擇日期\" id=\"birthday\" />\n                            </div>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>出生體重:</t2>\n                                </centerstyle>\n                                <div style={{ display: 'flex' }}><Input placeholder=\"120\" id=\"weight\" />&nbsp;g</div>\n                            </div>\n                        </div>\n                    </Modal>\n                </div>\n                <div style={{ height: '30px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: \"10px\" }}>\n                    <div style={{ fontSize: '14px', color: \"black\" }}>\n                        \"無資料\"\n                    </div>\n                </div>\n                <div style={{ display: modedisplay(previewmode) }}>\n                    <div style={{ height: '30px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: \"10px\" }}></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Unpreviewwardcarddetail;","\nconst Month_format = (time) => {\n    switch (time) {\n        case 0:\n            return \"1\";\n        case 1:\n            return \"2\";\n        case 2:\n            return \"3\";\n        case 3:\n            return \"4\";\n        case 4:\n            return \"5\";\n        case 5:\n            return \"6\";\n        case 6:\n            return \"7\";\n        case 7:\n            return \"8\";\n        case 8:\n            return \"9\";\n        case 9:\n            return \"10\";\n        case 10:\n            return \"11\";\n        case 11:\n            return \"12\";\n        default:\n            return null;\n    }\n};\nconst format_bednumber = (number) => {\n    if (number < 10) {\n        return \"0\" + number;\n    }\n    return number;\n}\n\nexport { Month_format, format_bednumber }\n","import React, { Component } from 'react';\nimport { Input, Button } from 'antd';\nimport editlogo from '../Image/svg/Edit.svg'\nimport './Wardnote.scss'\nimport deleteimg from '../Image/svg/delete.svg'\nimport detail from '../Image/svg/details.svg'\nimport { Tooltip } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider';\nimport moment from 'moment'\n\nclass WardcardNote extends Component {\n    _isMounted = false;\n    state = {\n        editstate: false,\n        AnnoceRawData: [],\n        AnnoceDisplayData: [],\n        inputContent: undefined,\n        powerLogin: 0\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n    componentDidMount() {\n        this.onInputChange = this.onInputChange.bind(this);\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.queryAllAnnounce();\n    }\n    queryAllAnnounce() {\n        ApiProvider.getAllAnnounce()\n            .then(result => {\n                console.log(\"getAllAnnounce OK \" + JSON.stringify(result));\n                this.setState({\n                    AnnoceRawData: result.data,\n                    AnnoceDisplayData: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getAllAnnounce NG \" + JSON.stringify(err));\n            });\n    }\n    canceledit() {\n        //取消前先拿取server資料\n        this._isMounted = true\n        this.setState({\n            editstate: false,\n            AnnoceDisplayData: JSON.parse(JSON.stringify(this.state.AnnoceRawData))\n        });\n    }\n\n    okeditlist() {\n        //確定上傳\n        this.setState({\n            editstate: false\n        });\n        ApiProvider.createAnnounce(this.state.AnnoceDisplayData)\n            .then(result => {\n                console.log(\"createAnnounce OK \" + JSON.stringify(result));\n                this.queryAllAnnounce();\n            })\n            .catch(err => {\n                console.log(\"createAnnounce NG \" + JSON.stringify(err));\n            });\n    }\n\n    editlist() {\n        this.setState({\n            editstate: !this.state.editstate,\n            AnnoceDisplayData: (this.state.editstate) ? JSON.parse(JSON.stringify(this.state.AnnoceDisplayData)) : JSON.parse(JSON.stringify(this.state.AnnoceRawData))\n        });\n    }\n\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n\n    AddNewannouce() {\n        const announce = this.state.AnnoceDisplayData;\n\n        const doc = sessionStorage.getItem('user')\n        const newAnnounce = {\n            context: this.state.inputContent,\n            time: +(new Date()),\n            editor: doc + \"醫生\",\n            transinno: doc + moment().format(\"YYYYMMDDHHmmss\").toString()\n        }\n        announce.push(newAnnounce)\n        this.setState({\n            AnnoceDisplayData: announce,\n            inputContent: undefined\n        });\n    }\n\n    ondeleteannounce(element) {\n        const announce = this.state.AnnoceDisplayData;\n        const index = announce.findIndex(item => item === element);\n        announce.splice(index, 1);\n        this.setState({\n            AnnoceDisplayData: announce\n        });\n    }\n    announcelist(announcelist, status) {\n        var list = []\n        if (announcelist === null || announcelist.length === 0) {\n            list.push(\n                <div className='announcelistcontext'>無公告</div>\n            )\n        }\n        for (let index = 0; index < announcelist.length; index++) {\n            const element = announcelist[index];\n            list.push(\n                <div className='announcelistcontext'>\n                    <t2>{index + 1}.{element.context}</t2>\n                    {this.editstatus(element, status)}\n                </div>\n            )\n        }\n        return list\n    }\n    editstatus(element, status) {\n        console.log(element)\n        const time = moment(element.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n        const localTime = moment.utc(time).toDate()\n        const string = element.editor + '醫師於' + moment(localTime).format(\"MM/DD HH:mm\") + '更新'\n        if (status) {\n            return (\n                <img src={deleteimg} alt='deletelogo' onClick={() => this.ondeleteannounce(element)}></img>\n            );\n        }\n        return (\n            <Tooltip placement=\"top\" title={string}>\n                <img src={detail} alt='detaillogo'></img>\n            </Tooltip>\n        );\n    }\n    render() {\n\n        function changehight(state) {\n            if (!state) {\n                return 'wardnotecontextdisedit'\n            }\n            else {\n                return 'wardnotecontextonedit'\n\n            }\n        }\n        const annData = this.state.AnnoceDisplayData\n        return (\n            <div style={{ marginTop: '10px' }}>\n                <div className='wardnotetitle'>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>病房公告</t2>\n                    <div onMouseUp={() => this.editlist()} style={{ display: this.state.powerLogin >= 2 ? \"flex\" : \"none\", width: \"18px\" }}>\n                        <img src={editlogo} alt='editlogo'></img>\n                    </div>\n                </div>\n                <div>\n                    <div className={changehight(this.state.editstate)}>\n                        {this.announcelist(annData, this.state.editstate)}\n                    </div>\n                    <div style={{ display: this.state.editstate ? \"block\" : \"none\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"c\" }}>\n                        <div style={{ height: \"50px\", backgroundColor: \"rgba(238,238,238,1)\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                            <Input placeholder=\"新增公告內容\" style={{ marginLeft: \"16px\", width: \"315px\" }} value={this.state.inputContent} onChange={this.onInputChange} />\n                            <Button type=\"primary\" style={{ marginRight: \"16px\" }} onClick={() => this.AddNewannouce()}>\n                                新增\n                            </Button>\n                        </div>\n                        <div style={{ height: \"50px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <Button style={{ margin: \"10px\", width: \"90px\" }} onClick={() => this.canceledit()}>取消</Button>\n                            <Button type=\"primary\" style={{ margin: \"10px\", width: \"90px\" }} onClick={() => this.okeditlist()}>儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WardcardNote;\n","import React, { Component } from 'react';\nimport { Month_format } from '../Commonfunction'\n\nclass Bedinformation extends Component {\n    state = {\n        tableselect: false\n    }\n\n    SelectTruechange() {\n        this.setState({\n            tableselect: true\n        })\n    }\n\n    SelectFalsechange() {\n        this.setState({\n            tableselect: false\n        })\n    }\n\n    sendReturnSelect = (id) => {\n        const { selectkey, idkey, localtime } = this.props\n        const select = this.Selectswitch(idkey, selectkey)\n        console.log(id)\n        if (select) {\n            const data = { \"idkey\": null, \"time\": localtime }\n            this.props.parentCallback(data);\n        }\n        else {\n            this.props.parentCallback(id);\n        }\n    }\n\n    Selectswitch(id, select) {\n        console.log(id, select)\n        if (id === select) {\n            return true\n        }\n        else return false\n    }\n    render() {\n        function weekdatformat(weekday) {\n            switch (weekday) {\n                case 0:\n                    return \"日\"\n                case 1:\n                    return \"一\"\n                case 2:\n                    return \"二\"\n                case 3:\n                    return \"三\"\n                case 4:\n                    return \"四\"\n                case 5:\n                    return \"五\"\n                case 6:\n                    return \"六\"\n                default:\n                    return null\n            }\n        }\n        const { selectkey, idkey, localtime, data } = this.props\n        const day = Month_format(new Date(localtime).getMonth()) + \"/\" + new Date(localtime).getDate()\n        const weekday = new Date(localtime).getDay()\n        const Unselect_tablestyle = { height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"1px solid rgba(238,238,238,1)\", borderLeftWidth: \"0px\" }\n        const select = this.Selectswitch(idkey, selectkey)\n        console.log(select)\n        if (data === null) {\n            return (\n                <div>\n                    <div style={select ? { border: \"1px solid rgba(59, 151, 225, 1)\", backgroundColor: \"#ffe1c499\", marginTop: '-2px' } : { cursor: \"pointer\" }} onMouseUp={() => this.sendReturnSelect({ \"idkey\": idkey, \"time\": localtime })}>\n                        <div style={Unselect_tablestyle}>\n                            <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                <t2 style={{ textAlign: \"center\" }}>{day}</t2>\n                                <t2 style={{ textAlign: \"center\" }}>{weekdatformat(weekday)}</t2>\n                            </div>\n                        </div>\n                        <div style={Unselect_tablestyle}>\n                            <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                <t2 style={{ textAlign: \"center\" }}>0(12)</t2>\n                                <t2 style={{ textAlign: \"center\" }}>0%</t2>\n                            </div>\n                        </div>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                    </div>\n                    <div style={{ display: select ? \"flex\" : \"none\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ width: 0, height: 0, borderStyle: \"solid\", borderWidth: \"17.3px 10px 0 10px\", borderColor: \"rgba(59,151,225,1) transparent transparent transparent\" }}></div>\n                    </div>\n                </div>\n            );\n\n        }\n        return (\n            <div>\n                <div style={select ? { border: \"1px solid rgba(59, 151, 225, 1)\", backgroundColor: \"#ffe1c499\", marginTop: '-2px' } : { cursor: \"pointer\" }} onMouseUp={() => this.sendReturnSelect({ \"idkey\": idkey, \"time\": localtime })}>\n                    <div style={Unselect_tablestyle}>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                            <t2 style={{ textAlign: \"center\" }}>{day}</t2>\n                            <t2 style={{ textAlign: \"center\" }}>{weekdatformat(weekday)}</t2>\n                        </div>\n                    </div>\n                    <div style={Unselect_tablestyle}>\n                        <div style={{ display: \"grid\" }}>\n                            <t2 style={{ textAlign: \"center\" }}>{data.hbedcount}({parseInt(parseInt(data.hbedcount) * 100 / 12)}%)</t2>\n                        </div>\n                    </div>\n                    <t2 style={Unselect_tablestyle}>{data.transoutcount}</t2>\n                    <t2 style={Unselect_tablestyle}>{data.transincount}</t2>\n                    <t2 style={Unselect_tablestyle}>{data.rtcount}</t2>\n                    <t2 style={Unselect_tablestyle}>{data.nonrtcount}</t2>\n                    <t2 style={Unselect_tablestyle}>{data.tpncount}</t2>\n                </div>\n                <div style={{ display: select ? \"flex\" : \"none\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <div style={{ width: 0, height: 0, borderStyle: \"solid\", borderWidth: \"17.3px 10px 0 10px\", borderColor: \"rgba(59,151,225,1) transparent transparent transparent\" }}></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Bedinformation\n","import moment from 'moment';\n\nfunction HISAPI_stringtodate(datestring) {\n    function addzero(value){\n        if (value < 10) {\n            return \"0\"+value\n        }\n        return value\n    }\n    console.log(datestring)\n    const datenumber = Number(datestring)\n    console.log(datenumber)\n    const dateformat = parseInt(datenumber / 10000) + '-' + parseInt(parseInt(datenumber / 100) % 100) + '-' + addzero(parseInt(datenumber % 100))\n    // console.log(\"dateformat = \" + dateformat)\n    return dateformat\n}\n\nfunction yyyymmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + \"/\" + Monthformat(new Date(timestamp).getMonth()) + \"/\" + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction yyyymmddstring(timestamp){\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + Monthformat(new Date(timestamp).getMonth()) + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction yyyymmfirstweeksate(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    return new Date(timestamp).getFullYear() + \"/\" + Monthformat(new Date(timestamp).getMonth()) + \"/1\"\n}\n\n\n\nfunction mmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return Monthformat(new Date(timestamp).getMonth()) + '/' + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction weekdateformat(timestamp) {\n    const param = new Date(timestamp).getDay()\n    const weekarray = ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六']\n    return weekarray[param]\n}\n\nfunction weekdateformatcalender(timestamp) {\n    const param = new Date(timestamp).getDay()\n    const weekarray = ['日', '一', '二', '三', '四', '五', '六']\n    return weekarray[param]\n}\n\nfunction hhmmssformat(timestamp) {\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return addZero(new Date(timestamp).getHours()) + ':' + addZero(new Date(timestamp).getMinutes())\n}\n\nfunction hhmmssformattohalf(timestamp) {\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return addZero(new Date(timestamp).getHours()) + ':30:00'\n}\n\n\nfunction yyyymmddHHmmfromat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return new Date(timestamp).getFullYear().toString() + Monthformat(new Date(timestamp).getMonth()).toString() + Dateformat(new Date(timestamp).getDate()).toString() + addZero(new Date(timestamp).getHours()).toString() + addZero(new Date(timestamp).getMinutes()).toString()\n}\n\nfunction MMDDhhmmfromat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return Monthformat(new Date(timestamp).getMonth()) + '/' + Dateformat(new Date(timestamp).getDate()) + ' ' + addZero(new Date(timestamp).getHours()) + ':' + addZero(new Date(timestamp).getMinutes())\n}\n\n\nfunction daysdiff(newtime, oldtime) {\n    const timestampdiff = new Date(newtime).getTime() - new Date(oldtime).getTime()\n    const dissdays = timestampdiff / (24 * 60 * 60 * 1000)\n    return parseInt(dissdays)\n}\n\n\nfunction disabledDate(current) {\n    // Can not select days before today and today\n    console.log(current)\n    return current && current < moment().endOf('day');\n}\n\nfunction compareday(date) {\n    console.log(new Date(date).getTime(), new Date().getTime())\n    if (new Date(date).getTime() > new Date().getTime()) {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunction formatxArrayhalf(time, interval) {\n    var xAxisarray = []\n    if (interval === 24) {\n        for (let index = 0; index < 144; index++) {\n            xAxisarray.push(time + (index * 10 * 60 * 1000))\n        }\n    }\n    if (interval === 18) {\n        for (let index = 0; index < 18; index++) {\n            xAxisarray.push(time + (60 * 60 * 1000 * 2) + (index * 60 * 60 * 1000 * 4))\n        }\n    }\n\n    if (interval === 21) {\n        for (let index = 0; index < 21; index++) {\n            xAxisarray.push(time + (60 * 60 * 1000 * 4) + (index * 60 * 60 * 1000 * 8))\n        }\n    }\n    if (interval === 14) {\n        for (let index = 0; index < 14; index++) {\n            xAxisarray.push(time + (60 * 60 * 1000 * 12) + (index * 60 * 60 * 1000 * 24))\n        }\n    }\n    return xAxisarray\n}\n\n\nfunction formatendtime(time) {\n    const endtime = new Date(yyyymmddformat(time)).getTime() + (31 * 60 * 60 * 1000)\n    return endtime\n}\n\nfunction formatintervaldays(days, interval) {\n    //false:一天 true:三天\n    if (interval === 1) {\n        return days - (24 * 60 * 60 * 1000) * 1\n\n    }\n    if (interval === 3) {\n        return days - (24 * 60 * 60 * 1000) * 3\n\n    }\n    else {\n        return null\n    }\n}\n\nfunction datestringformat(datestring) {\n    function addzero(value){\n        if (value < 10) {\n            return \"0\"+value\n        }\n        return value\n    }\n    const datenumber = Number(datestring)\n    const dateformat = parseInt(datenumber / 10000) + '/' + parseInt(parseInt(datenumber / 100) % 100) + '/' + addzero(parseInt(datenumber % 100))\n    // console.log(\"dateformat = \" + dateformat)\n    return dateformat\n}\n\nfunction apiyyyymmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + \"-\" + Monthformat(new Date(timestamp).getMonth()) + \"-\" + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction nisapiyyyymmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + Monthformat(new Date(timestamp).getMonth()) + Dateformat(new Date(timestamp).getDate())\n}\nexport {\n    yyyymmddformat,\n    weekdateformat,\n    hhmmssformat,\n    mmddformat,\n    MMDDhhmmfromat,\n    daysdiff,\n    disabledDate,\n    compareday,\n    weekdateformatcalender,\n    yyyymmfirstweeksate,\n    hhmmssformattohalf,\n    formatxArrayhalf,\n    formatendtime,\n    formatintervaldays,\n    datestringformat,\n    yyyymmddHHmmfromat,\n    yyyymmddstring,\n    apiyyyymmddformat,\n    nisapiyyyymmddformat,\n    HISAPI_stringtodate\n}","import React, { Component } from 'react';\nimport Labviewitem from './Labviewitem'\n// import { labdata } from '../../Data/Wardviewdata'\nimport * as FiliterReg from '../../Function/FiliterReg'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport moment from 'moment'\nimport * as ApiGithub from '../../API/ApiGithub'\n\nvar MG_VALUE, PROC_VALUE;\nclass Labviewlayout extends Component {\n    state = {\n        parser: [{ \"apply_condition\": { \"name\": \"\" }, \"mappings\": [] }],\n        dummy_mg: 0,\n        dummy_pct: 0,\n\n        RESDGLU1: [],\n        RESLAB02: [],\n        RESLAB01: [],\n        RESDBGAS: [],\n        RESLAB0C: [],\n        RESSECT: [],\n\n        prePickerDate: null,\n        preHID: null,\n        preTRDT: null\n    }\n    componentDidMount() {\n        ApiGithub.getGitHubJson(\"Labview.json\")\n            .then(result => {\n                console.log(\"getGitHubJson Labview.json OK \" + JSON.stringify(result.data));\n                this.setState({\n                    parser: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getGitHubJson Labview.json NG \" + JSON.stringify(err));\n            })\n        const { PickerDate, caseinfo } = this.props\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        this.setState({ prePickerDate: PickerDate, preHID: caseinfo.HISID, preTRDT: TRDT })\n        this.getLabData(PickerDate, caseinfo.HISID, TRDT)\n    }\n\n    componentDidUpdate() {\n        const { PickerDate, caseinfo } = this.props\n        const { prePickerDate, preHID, preTRDT } = this.state\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        if (prePickerDate !== PickerDate || preHID !== caseinfo.HISID || preTRDT !== TRDT) {\n            this.setState({ prePickerDate: PickerDate, preHID: caseinfo.HISID, preTRDT: TRDT })\n            this.getLabData(PickerDate, caseinfo.HISID, TRDT)\n        }\n    }\n    getLabData(PickerDate, HID, TRDT) {\n        function selectMonthInterval(PickerDate) {\n            const timestampInterval = new Date().getTime() - PickerDate\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        const TransinDate = moment(TRDT).format(\"YYYY-MM-DD\")\n        const MonthInterval = selectMonthInterval(PickerDate)\n        ApiProvider.getStoredProcedureRESDGLU1(HID, TransinDate)\n            .then(data => { this.setState({ RESDGLU1: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESDGLU1 NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESLAB02(HID, TransinDate)\n            .then(data => { this.setState({ RESLAB02: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESLAB02 NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESLAB01(HID, TransinDate)\n            .then(data => { this.setState({ RESLAB01: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESLAB01 NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESDBGAS(HID, TransinDate)\n            .then(data => { this.setState({ RESDBGAS: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESDBGAS NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESLAB0C(HID, TransinDate)\n            .then(data => { this.setState({ RESLAB0C: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESLAB0C NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESSECT(HID, MonthInterval, \"ALL\", \"DOC3924B\")\n            .then(data => { this.setState({ RESSECT: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESSECT NG \" + JSON.stringify(err)) });\n    }\n    findLastestTargetValue(arr, target) {\n        const { caseinfo } = this.props\n        const { parser } = this.state\n        let latestTimestamp = 0;\n        let latestvalue = undefined;\n        const selected_parser = parser.find(item => item.apply_condition.name.match(target) !== null);\n        const arrayLength = arr.length;\n        arr.forEach((item, index) => {\n            ApiProvider.getStoredProcedureRESDISP(caseinfo.HISID, item.ORMM, caseinfo.CASEID, item.ORDSEQNO)\n                .then(data => {\n                    console.log(\"getStoredProcedureRESDISP OK \" + JSON.stringify(data.data));\n                    const RESDISP = data.data\n                    //const RESDISP = [{\"RECNO\":\"1\",\"PARTNO\":\"11 \",\"HISTNO\":\"45305666  \",\"ORBGNDT\":\"2019-11-12\",\"CONTENT\":\"    MG++:  (20.00)\",\"ORDSEQ\":\"1\",\"CASENO\":\"25358448\"},{\"RECNO\":\"2\",\"PARTNO\":\"11 \",\"HISTNO\":\"45305666  \",\"ORBGNDT\":\"2019-11-12\",\"CONTENT\":\"    Procalcitonin:  (25.00)\",\"ORDSEQ\":\"1\",\"CASENO\":\"25358448\"}]\n\n                    //search for target\n                    const selected_mapping = selected_parser.mappings.find(mapping => mapping.key === target)\n                    const re = new RegExp(selected_mapping.regex_str, selected_mapping.regex_flags)\n\n                    RESDISP.forEach(element => {\n                        const match = element.CONTENT.match(re)\n                        if (match !== null) {\n                            const currentTimeStr = item.ORRCPDT + \"-\" + item.ORRCPTM\n                            const currentItemTimestamp = moment(currentTimeStr.trim(), \"YYYY-MM-DD-HH.mm.ss\").valueOf()\n                            const matchValue = match[selected_mapping.position]\n\n                            if (matchValue !== \"\" && matchValue !== undefined && matchValue !== null && currentItemTimestamp > latestTimestamp) {\n                                latestvalue = matchValue\n                                if (target === \"mg\") {\n                                    MG_VALUE = latestvalue\n                                } else if (target === \"pct\") {\n                                    PROC_VALUE = latestvalue\n                                }\n                            }\n                        }\n                    })\n                    this.updateLabviewIfNeed(arrayLength, index, target)\n                })\n                .catch(err => {\n                    console.log(\"getStoredProcedureRESDISP NG \" + JSON.stringify(err));\n                    this.updateLabviewIfNeed(arrayLength, index, target)\n                });\n        })\n    }\n    updateLabviewIfNeed(arrayLength, currentIdx, target) {\n        const retryMax = 3\n        if (currentIdx === arrayLength - 1) {\n            if (target === \"mg\" && this.state.dummy_mg < retryMax) {\n                this.setState({ dummy_mg: this.state.dummy_mg + 1 })\n            } else if (target === \"pct\" && this.state.dummy_pct < retryMax) {\n                this.setState({ dummy_pct: this.state.dummy_pct + 1 })\n            }\n        }\n    }\n    TitleRender() {\n        const { Source } = this.props\n        if (Source === \"Wardview\") {\n            return null\n        }\n        else return (\n            <div style={{ height: '40px', paddingLeft: \"5px\", paddingRight: \"5px\", background: \"#cccccc\", display: \"flex\", alignItems: \"center\" }}>\n                <t1>檢驗報告</t1>\n            </div>\n        );\n    }\n    render() {\n        function ListEndData(array) {\n            if (array.length === 0) {\n                return \"--\"\n            }\n            return array[array.length - 1]\n        }\n        // const data = labdata.data\n        const { PickerDate, Source } = this.props\n        const { RESDGLU1, RESLAB02, RESLAB01, RESDBGAS, RESSECT } = this.state\n        console.log(RESDGLU1)\n\n        const RESDGLU1LIST = FiliterReg.ListForTime(RESDGLU1, PickerDate)\n        const RESLAB02LIST = FiliterReg.ListForTime(RESLAB02, PickerDate)\n        const RESLAB01LIST = FiliterReg.ListForTime(RESLAB01, PickerDate)\n        const RESDBGASLIST = FiliterReg.ListForTime(RESDBGAS, PickerDate)\n        // const RESLAB0CLIST = FiliterReg.ListForTime(RESLAB0C, PickerDate)\n\n        const RESSECT_MG_LIST = FiliterReg.ListForTimeAndTarget(RESSECT, PickerDate, \"Mg\")\n        this.findLastestTargetValue(RESSECT_MG_LIST, \"mg\")\n\n        const RESSECT_PROC_LIST = FiliterReg.ListForTimeAndTarget(RESSECT, PickerDate, \"Procalcitonin\")\n        this.findLastestTargetValue(RESSECT_PROC_LIST, \"pct\")\n\n        const GLUFAST = ListEndData(RESDGLU1LIST.filter(function (value, index, array) {\n            return value.GLUFAST !== null\n        }))\n        const WBC = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV01 !== null\n        }))\n        const SEG = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV14 !== null\n        }))\n        const LYMP = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV15 !== null\n        }))\n        const HGB = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV03 !== null\n        }))\n        const PLATELET = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV09 !== null\n        }))\n        const NA = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV13 !== null\n        }))\n        const K = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV14 !== null\n        }))\n        const CA = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            // console.log(value.RSV15)\n            return value.RSV15 !== null\n        }))\n        const P = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV17 !== null\n        }))\n        const ALB = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV02 !== null\n        }))\n        const CRP = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV32 !== null\n        }))\n        const PH = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS07 !== null\n        }))\n        const PCO2 = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS06 !== null\n        }))\n        const BE = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS01 !== null\n        }))\n        const PO2 = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS08 !== null\n        }))\n        const BUN = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV05 !== null\n        }))\n        //02\n        const CR = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV06 !== null\n        }))\n        const ALT = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV11 !== null\n        }))\n        const AST = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV12 !== null\n        }))\n        const TBIL = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV08 !== null\n        }))\n        const DBIL = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV25 !== null\n        }))\n        const ALKP = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV09 !== null\n        }))\n        const TOTALCA = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV03 !== null\n        }))\n        const IRON = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV26 !== null\n        }))\n        const TIBC = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV27 !== null\n        }))\n        const FERRITIN = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV03 !== null\n        }))\n\n        function areainterval(source) {\n            if (source === \"Wardview\") {\n                return \"0px\"\n            }\n            else return \"10px\"\n        }\n\n        function nullvalue(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            return value.toString().trim()\n        }\n        const TitleR = this.TitleRender()\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                {TitleR}\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", gridColumnGap: areainterval(Source) }}>\n                    <div style={{ border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(GLUFAST.GLUFAST)} title={\"Glucose\"} time={GLUFAST.ORBGNDT}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(WBC.RSV01)} title={\"WBC\"} time={WBC.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(SEG.RSV14)} title={\"Seg\"} time={SEG.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(LYMP.RSV15)} title={\"Lymp\"} time={LYMP.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(HGB.RSV03)} title={\"Hgb\"} time={HGB.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PLATELET.RSV09)} title={\"Platelet\"} time={PLATELET.ORBGNDT}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"5fr 1fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(NA.RSV13)} title={\"Na+\"} time={NA.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(K.RSV14)} title={\"K+\"} time={K.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(CA.RSV15)} title={\"Ca+\"} time={CA.ORBGNDT}></Labviewitem> {/*parse*/}\n                        <Labviewitem Source={Source} value={nullvalue(P.RSV17)} title={\"P\"} time={P.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(MG_VALUE)} title={\"Mg2+\"} time={\"2019-12-12\"}></Labviewitem> {/*parse*/}\n                    </div>\n                    <div style={{ border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(ALB.RSV02)} title={\"Alb\"} time={ALB.ORBGNDT}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 4fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(CRP.RSV32)} title={\"CRP\"} time={CRP.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PROC_VALUE)} title={\"Procalcitionin\"} time={\"2019-12-12\"}></Labviewitem>  {/*parse*/}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(PH.SS07)} title={\"pH\"} time={PH.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PCO2.SS06)} title={\"PCO2\"} time={PCO2.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(BE.SS01)} title={\"BE\"} time={BE.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PO2.SS08)} title={\"PO2\"} time={PO2.ORBGNDT}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 2fr 2fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(BUN.RSV05)} title={\"BUN\"} time={BUN.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(CR.RSV06)} title={\"Cr\"} time={CR.ORBGNDT}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(ALT.RSV11)} title={\"ALT\"} time={ALT.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(AST.RSV12)} title={\"AST\"} time={AST.ORBGNDT}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(TBIL.RSV08)} title={\"TBil\"} time={TBIL.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(DBIL.RSV25)} title={\"DBil\"} time={DBIL.ORBGNDT}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 4fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(ALKP.RSV09)} title={\"ALKP\"} time={ALKP.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(TOTALCA.RSV03)} title={\"Total Ca\"} time={TOTALCA.ORBGNDT}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(IRON.RSV26)} title={\"Iron\"} time={IRON.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(TIBC.RSV27)} title={\"TIBC\"} time={TIBC.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={\"--\"} title={\"FeSat\"} time={\"2019-12-12\"}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(FERRITIN.RSV03)} title={\"Ferritin\"} time={FERRITIN.ORBGNDT}></Labviewitem> {/* No Data */}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Labviewlayout","import React, { Component } from 'react';\nimport Bedinformation from './Bedinfo'\nimport { DatePicker, Button } from 'antd';\nimport moment from 'moment';\nimport * as apiProvide from '../API/ApiProvider'\nimport { yyyymmddformat } from '../Function/Timeformat'\nimport './WardBedinformation.scss'\n\nclass Wardbedinformation extends Component {\n    state = {\n        subselectdate: null,\n        selectid: null,\n        PickerDate: moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf(),\n        bedinfo: []\n    }\n    componentDidMount() {\n        this.apiData(this.state.PickerDate)\n    }\n    apiData(PickerDate) {\n        apiProvide.getWardDebInfo(moment(PickerDate).format(\"YYYY-MM-DD\"))\n            .then(data => { console.log(data.data); this.setState({ bedinfo: data.data }) })\n            .catch(err => { console.log(err) })\n    }\n    onChangeDate = (date, datestring) => {\n        this.setState({\n            PickerDate: date.valueOf(),\n            selectid: null\n        })\n        this.apiData(this.state.PickerDate)\n    }\n    callbackFunction = (idnumber) => {\n        console.log(idnumber)\n        this.setState({\n            selectid: idnumber.idkey,\n            subselectdate: idnumber.time\n        })\n    }\n    transferListlayout(trans) {\n        const RenderCell = trans.map(function (element, index, arr) {\n            return (\n                <div className='wardbedinfoitemcontextgridRow'>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>{element.caseid}</t2>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>{element.pnamec}</t2>\n                </div>\n            );\n        })\n        return (\n            <div>\n                <div className='wardbedinfoitemcontextgridRow'>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>病歷號碼</t2>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>姓名</t2>\n                </div>\n                {RenderCell}\n            </div>\n        );\n    }\n    infoitem() {\n        const selectDateitem = this.state.subselectdate\n        const bedinfo = this.state.bedinfo\n        const filterdate = bedinfo.filter(function (info, index) {\n            const tempDate = moment(info.Date, 'YYYYMMDD')\n            return yyyymmddformat(tempDate) === yyyymmddformat(selectDateitem)\n        })\n        console.log(filterdate)\n\n        if (this.state.selectid === null) {\n            return null\n        }\n        else {\n            const inType = filterdate.length === 0 ? 0 : filterdate[0].transoutIncountperson.length\n            const outType = filterdate.length === 0 ? 0 : filterdate[0].transoutOutcountperson.length\n\n            const transIn = filterdate.length === 0 ? 0 : filterdate[0].transoutIncountperson\n            const transOut = filterdate.length === 0 ? 0 : filterdate[0].transoutOutcountperson\n            // console.log(inType)\n            // console.log(outType)\n            // console.log(transIn)\n            // console.log(transOut)\n            return (\n                <div>\n                    {/* <div className='wardbedinfoitemtriangle'>\n                        <div className='triangle'></div>\n                    </div> */}\n                    <div className='wardbedinfoitemcontext'>\n                        <div className='wardbedinfoitemcontextgrid'>\n                            <div>\n                                <t2 className='wardbedinfoitemcontexttitle'>轉入病人清單</t2>\n                                <div className='wardbedinfoitemcontextgridlayout'>\n                                    {inType === 0 ? <div className='nopatient'>無病人</div> : this.transferListlayout(transIn)}\n                                </div>\n                            </div>\n                            <div>\n                                <t2 className='wardbedinfoitemcontexttitle'>轉出病人清單</t2>\n                                <div className='wardbedinfoitemcontextgridlayout'>\n                                    {outType === 0 ? <div className='nopatient'>無病人</div> : this.transferListlayout(transOut)}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n            // }\n        }\n\n    }\n    bedinfotitle() {\n        const maparray = ['日期', '佔床數', '轉出', '轉入', '侵入式呼吸器', '非侵入式呼吸器', '開立PN']\n        const title = maparray.map(function (info, index) {\n            return (\n                <div className='wardbedinfotablerowtitle'>\n                    <t2>{info}</t2>\n                </div>\n            );\n        })\n        return title\n    }\n    weekbedinfo() {\n        var infolist = []\n        const infoList = this.state.bedinfo\n        const dateTime = this.state.PickerDate\n        console.log(infoList)\n        for (let i = 0; i < 7; i++) {\n            const localtime = dateTime - (i * 24 * 60 * 60 * 1000);\n            const filterdate = infoList.filter(function (info, index) {\n                const tempDate = moment(info.Date, 'YYYYMMDD').valueOf()\n                return tempDate === localtime\n            })\n            if (filterdate.length === 0) {\n                infolist.push(\n                    <div onClick={() => { console.log(i) }}>\n                        <Bedinformation data={null} key={i} localtime={localtime} selectkey={this.state.selectid} idkey={i} parentCallback={this.callbackFunction}></Bedinformation>\n                    </div>\n                )\n            }\n            else {\n                infolist.push(\n                    <div onClick={() => { console.log(i) }}>\n                        <Bedinformation data={filterdate[0]} key={i} localtime={localtime} selectkey={this.state.selectid} idkey={i} parentCallback={this.callbackFunction}></Bedinformation>\n                    </div>\n                )\n            }\n        }\n        infolist.reverse()\n        return infolist\n\n    }\n\n    trainDay = (e) => {\n        // const { caseinfo } = this.props\n        const { PickerDate } = this.state\n        // const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        // const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                // const bTemp = bTime - (6 * day)\n                // bronDate <= bTemp && this.onChange(moment(bTime))\n                this.onChangeDate(moment(bTime))\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD'))\n                this.onChangeDate(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= aTemp && this.onChangeDate(moment(aTime))\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        return (\n            <div style={{ marginTop: \"10px\" }}>\n                <div className='wardbrdinfomationtitle'>\n                    <centerstyle>\n                        <t2 style={{ fontSize: \"16px\", color: \"rgba(0, 0, 0, .7)\" }}>病房每日統計</t2>\n                        <t2 style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"rgba(0, 0, 0, .7)\", paddingLeft: \"10px\" }}>每日上午七點統計</t2>\n                    </centerstyle>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"140px 120px\", gridColumnGap: \"5px\" }}>\n                        <DatePicker showToday={true} disabledDate={(current) => { return current && current > moment().startOf('day') }} value={moment(this.state.PickerDate)} format={\"YYYY/MM/DD\"} onChange={this.onChangeDate} allowClear={false} />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\", marginLeft: \"10px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                    </div>\n                </div>\n                <div className='wardbedinformationcontext'>\n                    <div>\n                        {this.bedinfotitle()}\n                    </div>\n                    {this.weekbedinfo()}\n                </div>\n                {this.infoitem()}\n            </div>\n        );\n    }\n}\n\nexport default Wardbedinformation;\n","import React, { Component } from 'react';\nimport detaillogo from '../Image/svg/details.svg'\nimport editlogo from '../Image/svg/Edit.svg'\nimport { Tooltip, Input, Button } from 'antd';\nimport './Schedule_event.scss'\nimport * as ApiProvider from '../API/ApiProvider';\n//資料\n// import { eventdata } from '../jsonResponse'\nimport moment from 'moment';\n\nclass Schedule_event_list extends Component {\n    state = {\n        detailstate: \"none\",\n        // pressitemstate: \"all\",\n        items_interval: 0,\n        powerLogin: 0,\n        EditMode: false,\n        inputContent: '',\n        selSchedule: '排程',\n\n        Scheduledata: [],\n        status: false,\n        PickerDate: moment().valueOf(),\n        TRANSINID: null\n    }\n\n    querySchedule(time, ID) {\n        const st = moment(moment(time).format(\"YYYY/MM/DD\"), \"YYYY/MM/DD\").valueOf()\n        const et = moment(moment(time).format(\"YYYY/MM/DD\"), \"YYYY/MM/DD\").valueOf() + (24 * 60 * 60 * 1000)\n        console.log(ID, st, et)\n        ApiProvider.getOnePatientSchedule(ID, st, et)\n            .then(data => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n                this.setState({ Scheduledata: data.data })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }\n\n    queryALLSchedule() {\n        ApiProvider.getAllSchedule()\n            .then(data => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n                this.setState({ Scheduledata: data.data })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }\n    componentDidMount() {\n        this.onInputChange = this.onInputChange.bind(this);\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        const source = this.props.source\n        if (source === 1) {\n            const ID = this.props.caseinfo.TRANSINID\n            const date = this.props.PickerDate\n            console.log(this.props.caseinfo)\n            if (ID === null) {\n\n            }\n            else {\n                this.setState({\n                    PickerDate: date,\n                    TRANSINID: ID\n                })\n                this.querySchedule(date, ID)\n            }\n        }\n        else {\n            //get ALL\n            this.queryALLSchedule()\n        }\n\n    }\n\n    componentDidUpdate() {\n        const source = this.props.source\n        if (this.state.status) {\n            this.setState({ status: false })\n            if (source === 1) {\n                const ID = this.props.caseinfo.TRANSINID\n                this.querySchedule(this.state.PickerDate, ID)\n            }\n            else {\n                //get ALL\n                this.queryALLSchedule()\n            }\n        }\n        const propsDate = this.props.PickerDate\n        const stateDate = this.state.PickerDate\n        if (propsDate !== stateDate) {\n            this.setState({ PickerDate: propsDate })\n            if (source === 1) {\n                const ID = this.props.caseinfo.TRANSINID\n                console.log(moment(propsDate).format(\"YYYYMMDDHHmmss\"))\n                console.log(moment(stateDate).format(\"YYYYMMDDHHmmss\"))\n                this.querySchedule(propsDate, ID)\n            }\n            else {\n                //get ALL\n            }\n        }\n    }\n    selSchedule(value) {\n        this.setState({ selSchedule: value })\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString()\n        const writter = sessionStorage.getItem(\"user\")\n        const name = this.props.caseinfo.PBASINGNINFO.PNAMEC\n        const hisid = this.props.caseinfo.HISID\n        ApiProvider.createPatientSchedule(this.props.caseinfo.PLOCSTART.HBEDNO, this.state.inputContent, timeNowStr, this.props.caseinfo.TRANSINID, this.state.selSchedule, writter, name, hisid)\n            .then(data => {\n                console.log(\" OK \" + JSON.stringify(data.data))\n                this.setState(\n                    {\n                        EditMode: false,\n                        inputContent: undefined,\n                        status: true\n                    })\n            })\n            .catch(err => {\n                console.log(\" Err \" + JSON.stringify(err))\n            })\n    }\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    timechange(timestamp) {\n        const changetime = new Date(timestamp).getHours() + \":\" + new Date(timestamp).getMinutes()\n        return changetime\n    }\n\n    // pressbtn(pressitem) {\n    //     this.setState(\n    //         {\n    //             pressitemstate: pressitem\n    //         }\n    //     );\n    // }\n    listevent() {\n        // var eventdatalist = eventdata\n        const scheduleData = this.props.data;\n        console.log(scheduleData)\n\n\n        // function itemchange(changeitem) {\n        //     switch (changeitem) {\n        //         case \"事件\":\n        //             return \"事\"\n        //         case \"排程\":\n        //             return \"排\"\n        //         default:\n        //             return \"\"\n        //     }\n        // }\n\n        // function checkbackground(string) {\n        //     switch (string) {\n        //         case \"排程\":\n        //             return \"rgba(124,179,5,1)\"\n        //         case \"事件\":\n        //             return \"rgba(124,179,5,1)\"\n        //         default:\n        //             return \"rgba(124,179,5,1)\"\n        //     }\n        // }\n\n        // function scheduleList(BtnType) {\n        //     if (BtnType === \"all\") {\n        //         return ScheduleList\n        //     }\n        //     const scheduleListFilter = ScheduleList.filter(function (info, index, arr) {\n        //         return info.type === BtnType\n        //     })\n        //     return scheduleListFilter\n        // }\n        // const eventstate = this.state.pressitemstate\n        const ScheduleList = this.state.Scheduledata\n        // const patientdata = this.props.caseinfo\n        // console.log(this.props)\n        if (ScheduleList.length === 0) {\n            return (<div>本日無排程</div>);\n        }\n        // const RenderData = scheduleList(eventstate)\n        const CellRender = ScheduleList.map(function (info, index, arr) {\n            const time = moment(info.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n            const localTime = moment.utc(time).toDate()\n            const text = <div>{info.writter}醫師於{moment(localTime).format(\"YYYY/MM/DD HH:mm:ss\")}更新</div>\n            return (\n                <div key={index} className='CellLayout'>\n                    <div className='Context'>\n                        <div style={{ height: '30px', width: \"60px\", borderRadius: \"4px\", backgroundColor: \"rgba(124,179,5,1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <t2 style={{ color: 'white' }}>床{info.bednumber}</t2>\n                            {/* itemchange(info.type) */}\n                        </div>\n                        <div style={{ fontSize: \"16px\" }}>{info.name} {moment(localTime).format(\"HH:mm\")} {info.context}</div>\n                    </div>\n                    <Tooltip placement=\"right\" title={text}>\n                        <div>\n                            <img src={detaillogo} alt='detaillogo'></img>\n                        </div>\n                    </Tooltip>\n                </div>\n            );\n        })\n        return CellRender\n    }\n\n\n    //測驗項目功能_區間按鈕樣式\n    // SwitchTestItemInterval(testiteminterval) {\n    //     const stylestate = this.state.pressitemstate\n    //     if (testiteminterval === stylestate) {\n    //         return 'buttonselect'\n    //     }\n    //     else return 'buttonUnselect'\n    // }\n    //測驗項目功能_區間按鈕選擇\n    Onchangetimeinterval(changestate) { this.setState({ items_interval: changestate }) }\n    EditControl() {\n        const edit = this.props.editstatus\n        if (edit) {\n            return (\n                <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin > 0 ? \"flex\" : \"none\" }}>\n                    <img src={editlogo} alt=\"editlogo\" />\n                </div>\n            );\n        }\n        return null\n    }\n    render() {\n        const { title } = this.props\n        const EditButton = this.EditControl()\n        return (\n            <div className='ScheduleEventLayout'>\n                <div className='ScheduleEventTitle'>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t2>\n                    {EditButton}\n                </div>\n                <div className='ScheduleEventContext'>\n                    {/* <div className='ContextControl'>\n                        <div className='buttonGroup'>\n                            <div className={this.SwitchTestItemInterval(\"all\")} onClick={() => this.pressbtn(\"all\")}>\n                                <t2 className='titlecolor'>全部</t2>\n                            </div>\n                            <div className={this.SwitchTestItemInterval(\"排程\")} onClick={() => this.pressbtn(\"排程\")}>\n                                <t2 className='titlecolor'>排程</t2>\n\n                            </div>\n                            <div className={this.SwitchTestItemInterval(\"事件\")} onClick={() => this.pressbtn(\"事件\")}>\n                                <t2 className='titlecolor'>事件</t2>\n                            </div>\n                        </div>\n                    </div> */}\n                    <div className='ContextList'>\n                        {this.listevent()}\n                    </div>\n                </div>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        {/* <Select defaultValue={this.state.selSchedule} placeholder='選擇' style={{ width: 150 }} onChange={this.selSchedule.bind(this)}>\n                            <Option value='排程'>排程</Option>\n                            <Option value='事件'>事件</Option>\n                        </Select> */}\n                        <div value='排程' style={{ display: \"grid\", width: 150, height: \"32px\", justifyContent: \"center\", alignItems: \"center\", border: \"1px solid #d9d9d9\", borderRadius: \"4px\", marginRight: \"5px\" }}>排程</div>\n                        <Input placeholder=\"輸入當日內容\" value={this.state.inputContent} onChange={this.onInputChange}></Input>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Schedule_event_list\n","import React, { Component } from 'react';\nimport Schedule_event_list from '../Module/Schedule_event'\n\nclass Wardschedule extends Component {\n\n    render() {\n        return (\n            <Schedule_event_list source={this.props.source} title=\"今日排程\" data={this.props.scheduleData} editstatus={this.props.editstatus} />\n        );\n    }\n}\n\n\nexport default Wardschedule\n","import React, { Component } from 'react';\nimport WardcardNote from './Wardnote'\nimport Wardbedinformation from './WardBedinformation'\nimport Wardschedule from './Wardschedule'\nimport './Wardinfoindex.scss'\n// import * as ApiProvider from '../API/ApiProvider';\n\n// const SCHEDULE_TYPE_EVENT = \"事件\";\n\nclass Wardinfoindex extends Component {\n    render() {\n        return (\n            <div className='Wardinfoindexcontent'>\n                <centerstyle>\n                    <t1 style={{ fontSize: \"18px\", color: \"rgba(0, 0, 0, .7)\", fontWeight: \"600px\" }}>NICU總覽</t1>\n                </centerstyle>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"5px\" }}>\n                    <WardcardNote></WardcardNote>\n                    <Wardschedule source={0} editstatus={false}></Wardschedule>\n                </div>\n                <Wardbedinformation></Wardbedinformation>\n            </div>\n        );\n    }\n}\n\nexport default Wardinfoindex;\n","// Get api\n\n\n\n//資料更新時間\nconst updatetime = {\n    'time': 1567051200000\n}\n\nconst eventdata = [\n    {\n        \"item\": \"schedule\",\n        \"time\": 1565748000000,\n        \"result\": \"手術前檢查\",\n        \"name\": \"林博偉\",\n        \"bednumber\": \"01\",\n        \"writter\": \"林天財\"\n    },\n    {\n        \"item\": \"event\",\n        \"time\": 1565748000000,\n        \"result\": \"傷口變大了\",\n        \"name\": \"王添財\",\n        \"bednumber\": \"02\",\n        \"writter\": \"林天財\"\n    }\n]\n\n//Ward_bed_vitalData_last POST\nconst ward_bed_lastData = [\n    {\n        \"MedicalNumber\": \"123456789\",\n        \"Data\": {\n            \"HR\": 120,\n            \"ABP1\": 45,\n            \"ABP2\": 30,\n            \"ABP3\": 35,\n            \"SpO2\": 96,\n            \"BT\": 37.5,\n            \"RR\": 22\n        },\n        \"Status\": {\n            \"Ventilator\": false,\n            \"TPN\": true,\n            \"NPO\": false,\n            \"ECMO\": false,\n            \"Antibiotics\": false,\n            \"Hemodialysis\": false,\n            \"Foley\": false,\n            \"Drain\": false\n        }\n    },\n    {\n        \"MedicalNumber\": \"987654321\",\n        \"Data\": {\n            \"HR\": 120,\n            \"ABP1\": 45,\n            \"ABP2\": 30,\n            \"ABP3\": 35,\n            \"SpO2\": 96,\n            \"BT\": 37.5,\n            \"RR\": 22\n        }\n    },\n    {\n        \"MedicalNumber\": \"123454321\",\n        \"Data\": {\n            \"HR\": 120,\n            \"ABP1\": 45,\n            \"ABP2\": 30,\n            \"ABP3\": 35,\n            \"SpO2\": 96,\n            \"BT\": 37.5,\n            \"RR\": 22\n        }\n    }\n]\n\nconst WardInfo = {\n    UpdateTime: 1567051200000,\n    Director: \"林又新\",\n    HeadNurse: \"鄭麗貞\",\n    BedTotal: 12,\n    SignBed: 7,\n    EmptyBed: 9,\n    TransferBed: 8,\n    NewPatient: 2,\n    Ventilator: 1,\n    NPO: 7,\n    TPN: 4,\n    ECMO: 8,\n    Antibiotics: 6,\n    Hemodialysis: 1,\n    Announcement: [\n        {\n            time: 1567051200000,\n            text: \"7/10 王大明醫師請假，下午請李小華醫師cover ，6/30XXX醫師留\",\n            writter: \"張大帥\"\n        },\n        {\n            time: 1567051250000,\n            text: \"「超音波用完請記得歸還原位」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        }\n    ]\n}\nconst labdata = [\n    [{ title: \"Glucose\", score: 77, date: \"2019/01/01\" }],\n    [{ title: \"WBC\", score: 19647, date: \"Seg 59%2019/01/01\" }],\n    [{ title: \"WBC\", score: 14.8, date: \"2019/01/01\" }],\n    [{ title: \"Platelet\", score: 125, date: \"2019/01/01\" }],\n    [\n        { title: \"Na+\", score: 125, date: \"2019/01/01\" },\n        { title: \"K+\", score: 125, date: \"2019/01/01\" },\n        { title: \"Ca2+\", score: 125, date: \"2019/01/01\" },\n        { title: \"P\", score: 125, date: \"2019/01/01\" },\n        { title: \"Mg2+\", score: 125, date: \"2019/01/01\" },\n    ],\n    [\n        { title: \"CRP\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Procalcitionin\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Current Antibiotics\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Bun\", score: 125, date: \"2019/01/01\" },\n        { title: \"Cr\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"ALT\", score: 125, date: \"2019/01/01\" },\n        { title: \"AST\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"TBIL\", score: 125, date: \"2019/01/01\" },\n        { title: \"D.Bil\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"ALKP\", score: 125, date: \"2019/01/01\" },\n        { title: \"Total Ca\", score: 125, date: \"2019/01/01\" },\n        { title: \"LDH\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Iron\", score: 125, date: \"2019/01/01\" },\n        { title: \"TIBC\", score: 125, date: \"2019/01/01\" },\n        { title: \"FeSat\", score: 125, date: \"2019/01/01\" },\n        { title: \"Ferritin\", score: 125, date: \"2019/01/01\" }\n    ]\n]\nconst jsonResponse = [\n    {\n        \"HISID\": \"H1234567\",\n        \"CASEID\": \"C1234567\",\n        \"name\": \"吳大胖之女\",\n        \"gender\": 1,\n        \"birthday\": \"2019/11/11\",\n        \"bednumber\": 1,\n        \"pregnancy\": \"2019/11/10\",\n        \"weightbirth\": 1400,\n        \"weight\": 2300,\n        'report': 3,\n        'nonreport': 3,\n        'note': '隨時注意病人血壓狀態隨時注意病人血壓狀態',\n        'type':'NIS',\n        'MainDoctor':'張大春',\n        'IcuInTime':'2019/11/11'\n    },\n    {\n        \"HISID\": \"H9876543\",\n        \"CASEID\": \"C12345622\",\n        \"name\": \"吳大胖之女\",\n        \"gender\": 1,\n        \"birthday\": \"2019/11/11\",\n        \"bednumber\": 2,\n        \"pregnancy\": \"2019/11/10\",\n        \"weightbirth\": 1400,\n        \"weight\": 2300,\n        'report': 3,\n        'nonreport': 3,\n        'note': '隨時注意病人血壓狀態隨時注意病人血壓狀態',\n        'type':'Custom',\n        'MainDoctor':'張大春',\n        'IcuInTime':'2019/11/11'\n    }\n]\n\n//Wardview TCP data\nconst centerrowdata = {\n    \"id\": 20190817001,\n    \"data\": {\n        \"Weight\": 5000,\n        \"WeightDif\": 700,\n        \"BP\": [\n            {\n                \"time\": 1565395200,\n                \"DBP\": 60,\n                \"SBP\": 90\n            }\n        ],\n        \"HR\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"RR\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"BT\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"Urine\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"Suger\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"SP\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ]\n    }\n}\n\nconst growdata = {\n    Male_befor: [\n        { y: 22, min: 420, max: 600 },\n        { y: 23, min: 470, max: 700 },\n        { y: 24, min: 510, max: 800 },\n        { y: 25, min: 570, max: 900 },\n        { y: 26, min: 610, max: 1040 },\n        { y: 27, min: 700, max: 1200 },\n        { y: 28, min: 790, max: 1340 },\n        { y: 29, min: 870, max: 1520 },\n        { y: 30, min: 1000, max: 1740 },\n        { y: 31, min: 1120, max: 2000 },\n        { y: 32, min: 1300, max: 2240 },\n        { y: 33, min: 1500, max: 2500 },\n        { y: 34, min: 1700, max: 2800 },\n        { y: 35, min: 1960, max: 3040 },\n        { y: 36, min: 2180, max: 3300 },\n        { y: 37, min: 2400, max: 3500 },\n        { y: 38, min: 2600, max: 3780 },\n        { y: 39, min: 2810, max: 3980 },\n        { y: 40, min: 3000, max: 4200 },\n        { y: 41, min: 3200, max: 4440 },\n        { y: 42, min: 3400, max: 4700 },\n        { y: 43, min: 3600, max: 5000 },\n        { y: 44, min: 3800, max: 5270 }\n    ],\n    FeMale_before: [\n        { y: 22, min: 400, max: 580 },\n        { y: 23, min: 430, max: 640 },\n        { y: 24, min: 490, max: 730 },\n        { y: 25, min: 550, max: 850 },\n        { y: 26, min: 580, max: 1000 },\n        { y: 27, min: 630, max: 1120 },\n        { y: 28, min: 700, max: 1300 },\n        { y: 29, min: 800, max: 1500 },\n        { y: 30, min: 900, max: 1700 },\n        { y: 31, min: 1050, max: 1910 },\n        { y: 32, min: 1200, max: 2180 },\n        { y: 33, min: 1400, max: 2400 },\n        { y: 34, min: 1600, max: 2680 },\n        { y: 35, min: 1850, max: 2930 },\n        { y: 36, min: 2050, max: 3200 },\n        { y: 37, min: 2300, max: 3490 },\n        { y: 38, min: 2480, max: 3700 },\n        { y: 39, min: 2680, max: 3900 },\n        { y: 40, min: 2820, max: 4100 },\n        { y: 41, min: 2980, max: 4300 },\n        { y: 42, min: 3150, max: 4520 },\n        { y: 43, min: 3300, max: 4740 },\n        { y: 44, min: 3500, max: 5000 }\n    ],\n    Male_after: [\n        { y: 0, min: 2500, max: 4300 },\n        { y: 1, min: 2600, max: 4500 },\n        { y: 2, min: 2800, max: 4900 },\n        { y: 3, min: 3100, max: 5200 },\n        { y: 4, min: 3400, max: 5600 },\n        { y: 5, min: 3600, max: 5900 },\n        { y: 6, min: 3800, max: 6300 }\n    ],\n    FeMale_after: [\n        { y: 0, min: 2400, max: 4200 },\n        { y: 1, min: 2500, max: 4400 },\n        { y: 2, min: 2700, max: 4600 },\n        { y: 3, min: 2900, max: 5000 },\n        { y: 4, min: 3100, max: 5300 },\n        { y: 5, min: 3300, max: 5600 },\n        { y: 6, min: 3500, max: 5900 }\n    ]\n}\n\nconst Note_data = [\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 }\n]\n\nconst todo_data = [\n    {\n        Time: 1566287810473,\n        Content: \"幫大明量體重\",\n        Flag: true,\n        Editor: \"修改者\"\n    },\n    {\n        Time: 1566287810473,\n        Content: \"幫大明量體重\",\n        Flag: true,\n        Editor: \"修改者\"\n    },\n    {\n        Time: 1566287810473,\n        Content: \"幫大明量體重\",\n        Flag: true,\n        Editor: \"修改者\"\n    }\n]\n\n\nexport { jsonResponse, centerrowdata, WardInfo, updatetime, ward_bed_lastData, labdata, eventdata, growdata, Note_data, todo_data };","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { growdata } from '../jsonResponse'\nimport moment from 'moment';\n\nclass WardlifeChart extends Component {\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    drawChart() {\n        const { gender, svg_key, weightList, grewinfo } = this.props\n        const width = (window.screen.availWidth - 50) / 2 - 50, height = 400\n        //var d = new Date('2014,12,01,12:16:05');\n        //var vertigo = datarelease();\n        console.log(grewinfo)\n        if (grewinfo === null || grewinfo === undefined) {\n            return null\n        }\n        const bornweeks = Number(grewinfo.WEEK_BORN)\n        const borndays = Number(grewinfo.DAY_BORN)\n        const Birthday = grewinfo.BIRTHDAY\n        const pregencyTimestamp = moment(Birthday, \"YYYYMMDD\").valueOf() - ((bornweeks * 7) + borndays) * 24 * 60 * 60 * 1000\n\n\n\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([0, 6000])\n            .range([height, 0])\n\n        var x = d3.scaleLinear()\n            .domain([22, 44])\n            .range([0, width])\n\n        var yAxis = d3.axisLeft(y)\n            .ticks(12)\n            .tickSize(0, 0)\n            .tickPadding(10);\n\n\n        var xAxis = d3.axisTop(x)\n            .ticks(14)\n            .tickSize(0, 0)\n            .tickPadding(-15)\n            .tickFormat(function (d) { return 'W' + d; });\n\n\n        var svg = d3\n            .select(\"#\" + svg_key)\n            .attr(\"viewBox\", [0, 0, width + 80, height + 50])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 40 + \",\" + 20 + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(\" + 0 + \", \" + height + \")\");\n\n        for (let index = 0; index < 9; index++) {\n            const number = index * 500\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(number))\n                .attr('x2', width)\n                .attr('y2', y(number))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n\n        }\n\n        for (let index = 0; index < 13; index++) {\n            const number = index * 500\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(number))\n                .attr('x2', width)\n                .attr('y2', y(number))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n        }\n\n        for (let index = 22; index < 45; index++) {\n            if (index % 2 == 0) {\n                svg.append('line')\n                    .attr('x1', x(index))\n                    .attr('y1', 0)\n                    .attr('x2', x(index))\n                    .attr('y2', height)\n                    .style('stroke', 'rgba(187, 187, 187, 1)')\n                    .style('stroke-width', 1)\n                    .style('stroke-dasharray', 5.5);\n            }\n        }\n\n        if (gender === '1') {\n            for (let index = 0; index < growdata.Male_befor.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_befor[index].y))\n                    .attr('y1', y(growdata.Male_befor[index].min))\n                    .attr('x2', x(growdata.Male_befor[index + 1].y))\n                    .attr('y2', y(growdata.Male_befor[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 1.5);\n            }\n\n            for (let index = 0; index < growdata.Male_befor.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_befor[index].y))\n                    .attr('y1', y(growdata.Male_befor[index].max))\n                    .attr('x2', x(growdata.Male_befor[index + 1].y))\n                    .attr('y2', y(growdata.Male_befor[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 1.5);\n            }\n        }\n        else {\n            for (let index = 0; index < growdata.FeMale_before.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_before[index].y))\n                    .attr('y1', y(growdata.FeMale_before[index].min))\n                    .attr('x2', x(growdata.FeMale_before[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_before[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 1.5);\n            }\n\n            for (let index = 0; index < growdata.FeMale_before.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_before[index].y))\n                    .attr('y1', y(growdata.FeMale_before[index].max))\n                    .attr('x2', x(growdata.FeMale_before[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_before[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 1.5);\n            }\n        }\n        const datasource = weightList\n        console.log(datasource)\n        //x 週數 y體重 NIS\n        for (let index = 0; index < datasource.length; index++) {\n            const element = datasource[index];\n            const BornDay = element.rec_dat.toString().trim()\n            const BornTime = element.rec_tim.toString().trim()\n            const time = BornDay + BornTime\n            const weighttimestamp = moment(time, \"YYYYMMDDHHmm\").valueOf() //體重時間\n            const weeks = (weighttimestamp - pregencyTimestamp) / (7 * 24 * 60 * 60 * 1000) //體重週數\n            if (weeks < 22) {\n                continue\n            }\n            if (weeks > 44) {\n                continue\n            }\n            svg.append('circle')\n                .attr('cx', x(weeks))\n                .attr('cy', y(Number(element.value2) * 1000))\n                .attr('r', 3)\n                .style('fill', 'green')\n        }\n\n\n        // const datacustom = wardchartoncustombefore\n        // for (let index = 0; index < datacustom.length; index++) {\n        //     const element = datacustom[index];\n        //     svg.append('circle')\n        //         .attr('cx', x(element.x))\n        //         .attr('cy', y(element.y))\n        //         .attr('r', 3)\n        //         .style('fill', 'blue')\n        // }\n\n    }\n\n    render() {\n        const { id_key, svg_key } = this.props\n        return (\n            <div id={id_key}>\n                <svg id={svg_key}></svg>\n            </div>\n        );\n    }\n}\n\nexport default WardlifeChart;","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { growdata } from '../jsonResponse'\nimport moment from 'moment'\n\nclass Wardmonthafter extends Component {\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    drawChart() {\n        const { gender, svg_key,weightList,grewinfo } = this.props\n        const width = (window.screen.availWidth - 50) / 2 - 50, height = 400\n        console.log(grewinfo)\n        if (grewinfo === null || grewinfo === undefined) {\n            return null\n        }\n        const Birthday = grewinfo.BIRTHDAY\n        const pregencyTimestamp = moment(Birthday, \"YYYYMMDD\").valueOf()\n        //var vertigo = datarelease();\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([1000, 10000])\n            .range([height, 0])\n\n        var x = d3.scaleLinear()\n            .domain([0, 6])\n            .range([0, width])\n\n        var yAxis = d3.axisLeft(y)\n            .ticks(10)\n            .tickSize(0, 0)\n            .tickPadding(10);\n\n\n        var xAxis = d3.axisTop(x)\n            .ticks(6)\n            .tickSize(0, 0)\n            .tickPadding(-15)\n            .tickFormat(function (d) {\n                if (d === 0) {\n                    return \"birth\"\n                }\n                else return 'M' + d;\n            });\n\n\n        var svg = d3\n            .select(\"#\" + svg_key)\n            // .style(\"height\", \"300px\")\n            // .style(\"width\", svgwidth + \"px\")\n            // .select(\"svg\")\n            .attr(\"viewBox\", [0, 0, width + 80, height + 50])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 20 + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(\" + 0 + \", \" + height + \")\");\n\n        for (let index = 0; index < 7; index++) {\n            svg.append('line')\n                .attr('x1', x(index))\n                .attr('y1', 0)\n                .attr('x2', x(index))\n                .attr('y2', height)\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n\n        }\n\n        for (let index = 0; index < 19; index++) {\n            const number = index * 500 + 1000\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(number))\n                .attr('x2', width)\n                .attr('y2', y(number))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n\n        }\n\n        // for (let index = 22; index < 45; index++) {\n        //     svg.append('line')\n        //         .attr('x1', x(index))\n        //         .attr('y1', 0)\n        //         .attr('x2', x(index))\n        //         .attr('y2', height)\n        //         .style('stroke', 'rgba(187, 187, 187, 1)')\n        //         .style('stroke-width', 1)\n        //         .style('stroke-dasharray', 5.5);\n        // }\n\n        if (gender === '1') {\n            for (let index = 0; index < growdata.Male_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_after[index].y))\n                    .attr('y1', y(growdata.Male_after[index].min))\n                    .attr('x2', x(growdata.Male_after[index + 1].y))\n                    .attr('y2', y(growdata.Male_after[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 1.5);\n            }\n\n            for (let index = 0; index < growdata.Male_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_after[index].y))\n                    .attr('y1', y(growdata.Male_after[index].max))\n                    .attr('x2', x(growdata.Male_after[index + 1].y))\n                    .attr('y2', y(growdata.Male_after[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 1.5);\n            }\n        }\n        else {\n            for (let index = 0; index < growdata.FeMale_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_after[index].y))\n                    .attr('y1', y(growdata.FeMale_after[index].min))\n                    .attr('x2', x(growdata.FeMale_after[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_after[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 1.5);\n            }\n\n            for (let index = 0; index < growdata.FeMale_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_after[index].y))\n                    .attr('y1', y(growdata.FeMale_after[index].max))\n                    .attr('x2', x(growdata.FeMale_after[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_after[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 1.5);\n            }\n        }\n\n        const datasource = weightList\n        //x時間 y體重\n        for (let index = 0; index < datasource.length; index++) {\n            const element = datasource[index];\n            const BornDay = element.rec_dat.toString().trim()\n            const BornTime = element.rec_tim.toString().trim()\n            const time = BornDay + BornTime\n            const weighttimestamp = moment(time,\"YYYYMMDDHHmm\").valueOf() //體重時間\n            const Month = (weighttimestamp - pregencyTimestamp) / (30 * 24 * 60 * 60 * 1000) //體重週數\n            if (Month < 0 || Month > 6) {\n                continue\n            }\n            console.log(Month,Number(element.value2) * 1000)\n            svg.append('circle')\n                .attr('cx', x(Month))\n                .attr('cy', y(Number(element.value2) * 1000))\n                .attr('r', 3)\n                .style('fill', 'green')\n        }\n        // const datacustom = wardchartoncustom\n        // for (let index = 0; index < datacustom.length; index++) {\n        //     const element = datacustom[index];\n        //     svg.append('circle')\n        //         .attr('cx', x(element.x))\n        //         .attr('cy', y(element.y))\n        //         .attr('r', 3)\n        //         .style('fill', 'blue')\n        // }\n\n    }\n\n    render() {\n        const { id_key, svg_key } = this.props\n        return (\n            <div id={id_key}>\n                <svg id={svg_key}></svg>\n            </div>\n        );\n    }\n}\n\nexport default Wardmonthafter;\n","import React, { Component } from 'react';\nimport WardlifeChart from './Wardlifechart'\nimport Wardmonthafter from './Wardmonthafter'\n\n\nclass Wardgrewchart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            test_items_interval: 0\n        };\n    }\n    switch_monthy() {\n        const { Data, WeightList, grewinfo } = this.props\n        console.log(grewinfo)\n        const switch_data = this.state.test_items_interval\n        switch (switch_data) {\n            case 1:\n                return <WardlifeChart grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife\"} svg_key={\"wardlife_svg\"} gender={Data.PSEX}></WardlifeChart>\n            case 0:\n                return <Wardmonthafter grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife_after\"} svg_key={\"wardlife_after_svg\"} gender={Data.PSEX}></Wardmonthafter>\n            default:\n                return null;\n        }\n    }\n    //測驗項目功能_區間按鈕樣式\n    SwitchTestItemInterval(testiteminterval) {\n        const time_selectbtn_style = {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"40px\",\n            paddingRight: \"10px\",\n            paddingLeft: \"10px\",\n            borderRadius: \"16px\",\n            backgroundColor: \"rgba(245,166,35,1)\",\n            color: \"white\",\n            fontSize: \"1rem\",\n            borderWidth: \"1px\",\n            borderStyle: \"solid\",\n            borderColor: \"rgba(245,166,35,1)\",\n            cursor: \"pointer\"\n        }\n        const time_unselectbtn_style = {\n            display: \"flex\", justifyContent: \"center\",\n            alignItems: \"center\", height: \"40px\",\n            paddingRight: \"10px\", paddingLeft: \"10px\",\n            borderRadius: \"16px\", backgroundColor: \"white\",\n            color: \"rgba(245,166,35,1)\", fontSize: \"1rem\",\n            borderWidth: \"1px\", borderStyle: \"solid\",\n            borderColor: \"rgba(245,166,35,1)\",\n            cursor: \"pointer\"\n        }\n        if (testiteminterval === this.state.test_items_interval) {\n            return time_selectbtn_style\n        }\n        else return time_unselectbtn_style\n    }\n    //測驗項目功能_區間按鈕選擇\n    Onchangetimeinterval(changestate) {\n        this.setState(\n            {\n                test_items_interval: changestate\n            }\n        )\n    }\n    render() {\n        return (\n            <div>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: 'center', height: \"50px\", backgroundColor: \"#cccccc\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", paddingLeft: \"15px\" }}>\n                    <t2>生長曲線圖</t2>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"5px\" }}>\n                        <div style={this.SwitchTestItemInterval(0)} onMouseUp={() => this.Onchangetimeinterval(0)}>滿足月</div>\n                        <div style={this.SwitchTestItemInterval(1)} onMouseUp={() => this.Onchangetimeinterval(1)}>不滿足月</div>\n                    </div>\n                </div>\n                {this.switch_monthy()}\n            </div>\n        );\n    }\n}\nexport default Wardgrewchart","import React, { Component } from 'react';\nimport editlogo from '../../Image/svg/Edit.svg'\nimport detaillogo from '../../Image/svg/details.svg'\nimport { Tooltip, Input, Button } from 'antd';\nimport './Notice.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass Notice extends Component {\n    state = {\n        caseinfo: this.props.caseinfo,\n        EditMode: false,\n        noticeData: [],\n        inputContent: undefined,\n        powerLogin: 0\n    }\n    componentDidMount() {\n        //bind function\n        this.onInputChange = this.onInputChange.bind(this);\n        //query patient notice\n        console.log(\"caseinfo: \" + JSON.stringify(this.props.caseinfo));\n        const TRID = this.props.caseinfo.TRANSINID.toString().trim()\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins, preTRID: TRID })\n        this.queryPatientImportant(TRID);\n    }\n    componentDidUpdate() {\n        const TRID = this.props.caseinfo.TRANSINID.toString().trim()\n        const preTRID = this.state.preTRID\n        if (TRID !== preTRID) {\n            this.setState({ preTRID: TRID })\n            this.queryPatientImportant(TRID);\n        }\n    }\n    queryPatientImportant(TRID) {\n        ApiProvider.getOnePatientImportantMatter(TRID)\n            .then(data => {\n                console.log(\"getOnePatientImportantMatter OK \" + JSON.stringify(data));\n                this.setState({ noticeData: data.data });\n            })\n            .catch(err => {\n                console.log(\"getOnePatientImportantMatter NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString();\n        ApiProvider.createPatientImportantMatter(this.state.inputContent, \"\", this.state.caseinfo.HISID, timeNowStr, this.state.caseinfo.TRANSINID)\n            .then(data => {\n                console.log(\"createPatientImportantMatter OK \" + JSON.stringify(data));\n                this.queryPatientImportant();\n            })\n            .catch(err => {\n                console.log(\"createPatientImportantMatter NG \" + JSON.stringify(err));\n            });\n        this.setState(\n            {\n                EditMode: false,\n                inputContent: undefined\n            }\n        )\n    }\n    renderEditButton() {\n        if (this.props.disableEdit === true) {\n            return null;\n        } else {\n            return (\n                <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin > 0 ? \"flex\" : \"none\" }}>\n                    <img src={editlogo} alt=\"editlogo\" />\n                </div>\n            )\n        }\n    }\n\n    render() {\n        function remarkcellRender(dataList) {\n            if (Array.isArray(dataList)) {\n                if (dataList.length === 0) {\n                    return (\n                        <div style={{ padding: \"5px 15px\" }}>無病人註記</div>\n                    );\n                }\n                const remarkcell = dataList.map((info, index) =>\n                    <div key={index} className='noticecontext'>\n                        <div style={{ whiteSpace: \"pre-wrap\" }}>{info.context}</div>\n                        <Tooltip placement=\"topRight\" title={tooltiptext(info.Editor, info.time)}>\n                            <img src={detaillogo} alt=\"detaillogo\" />\n                        </Tooltip>\n                    </div>\n                )\n                return remarkcell\n            }\n            return (\n                <div style={{ padding: \"5px 15px\" }}>無病人註記</div>\n            );\n        }\n        function tooltiptext(editor, time) {\n            function nullvalue(value) {\n                if (value === null || value === undefined) {\n                    return \"--\"\n                }\n                return value\n            }\n            console.log(time)\n            const t = moment(time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n            const localTime = moment.utc(t).toDate()\n            const displayTime = moment(localTime).format(\"MM/DD HH:mm\")\n            return nullvalue(editor) + \"醫師於\" + displayTime + \"更新\"\n        }\n        const remarkcell = remarkcellRender(this.state.noticeData)\n        const { TextArea } = Input;\n        return (\n            <div style={{ marginBottom: '10px' }}>\n                <div className='noticetitle'>\n                    <t2>病人註記</t2>\n                    {this.renderEditButton()}\n                </div>\n                <div className='noticecontextborder'>\n                    {remarkcell}\n                </div>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", backgroundColor: \"rgba(238,238,238,1)\" }}>\n                        <TextArea id=\"noticeContent\" placeholder=\"輸入當日註記內容\" value={this.state.inputContent} onChange={this.onInputChange} autoSize={true}></TextArea>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Notice","import React, { Component } from 'react';\nimport { Labwarningvalue } from '../../Function/Wardstate'\nimport moment from 'moment'\n\nclass Labviewitem extends Component {\n    TimeRender(time) {\n        const { Source } = this.props\n        return (\n            <centerstyle>\n                <t3 style={{ color: \"rgba(0,0,0,0.4)\" }}>{moment(time, \"YYYY-MM-DD\").format(\"MM/DD\")}</t3>\n            </centerstyle>\n        );\n    }\n    render() {\n        function RowsGrid(source) {\n            if (source === \"Wardview\") {\n                return \"1fr 2fr\"\n            }\n            return \"1fr 2fr 1fr\"\n        }\n        function RowsHeight(source) {\n            if (source === \"Wardview\") {\n                return \"80px\"\n            }\n            return \"120px\"\n        }\n        const { value, title, time, Source } = this.props\n        const TimeR = this.TimeRender(time)\n        return (\n            <div style={{ display: \"grid\", gridTemplateRows: RowsGrid(Source), height: RowsHeight(Source) }}>\n                <centerstyle>\n                    <t3>{title}</t3>\n                </centerstyle>\n                <centerstyle>\n                    <t2 style={{ fontSize: \"20px\", color: Labwarningvalue(value, title) ? \"black\" : \"red\" }}>{value}</t2>\n                </centerstyle>\n                {TimeR}\n            </div>\n        );\n    }\n}\n\nexport default Labviewitem","export function firstarea_Reg_IO() {\n    return [\"輸液\"];\n}\n\nexport function Secondarea_reg_IO() {\n    return [\"血品\"];\n}\n\nexport function Thirdarea_reg_IO() {\n    return [\"進食\"];\n}\n\nexport function Fourtharea_reg_IO() {\n    return [\"失血\", \"滲液\", \"嘔吐\", \"引流\", \"穿刺\", \"透析\", \"沖洗\", \"排便\", \"排尿\"];\n}\n\n\n\nexport function Feedarea_Reg_IO() {\n    return [\"進食\"];\n}\n\nexport function IVarea_reg_IO() {\n    return [\"血品\", \"輸液\"];\n}\n\nexport function UOarea_reg_IO() {\n    return [\"排尿\"];\n}\n\nexport function Otherarea_reg_IO() {\n    return [\"失血\", \"滲液\", \"嘔吐\", \"引流\", \"穿刺\", \"透析\", \"沖洗\", \"排便\"];\n}\n\nexport function Select_Main_Doc(DOCLIST) {\n    console.log(DOCLIST)\n    const MainDoc = DOCLIST.filter(function (value, index, array) {\n        return value.PDTYPE === \"B\"\n    })\n    if (MainDoc.length === 0) {\n        return \"\"\n    }\n    else {\n        const data = MainDoc[0]\n        return data.PDDOCNMC\n    }\n}\n\nexport function SumFeedDataMapReduce(arr) {\n    const sumlist = arr.map(function (value, index) {\n        return Number(value.inp_val2)\n    })\n    var sum = 0\n    for (let index = 0; index < sumlist.length; index++) {\n        const element = sumlist[index];\n        sum = sum + element\n    }\n    return sum\n}\n\nexport function SumIVDataMapReduce(arr) {\n    const sumlist = arr.map(function (value, index) {\n        return Number(value.inp_val1)\n    })\n    var sum = 0\n    for (let index = 0; index < sumlist.length; index++) {\n        const element = sumlist[index];\n        sum = sum + element\n    }\n    return sum\n}\n\nexport function SumUrineDataMapReduce(arr) {\n    const sumlist = arr.map(function (value, index) {\n        return Number(value.inp_val1)\n    })\n    var sum = 0\n    for (let index = 0; index < sumlist.length; index++) {\n        const element = sumlist[index];\n        sum = sum + element\n    }\n    return sum\n}\nexport function SumInOtherDataMapReduce(arr) {\n    return arr.map(el => Number(el.inp_val1)).reduce((a, b) => a + b);\n}\nexport function SumOutOtherDataMapReduce(arr) {\n    return arr.map(el => Number(el.out_val1)).reduce((a, b) => a + b);\n}\n\n\n\n//累積報告\n\nexport function ListForTime(arr, time) {\n    var DataList = []\n    for (let index = 0; index < arr.length; index++) {\n        const element = arr[index];\n        if (new Date(element.ORRESDT).getTime() <= new Date(time).getTime()) {\n            DataList.push(element)\n        }\n    }\n    return DataList\n}\n\nexport function ListForTimeAndTarget(arr, time, target) {\n    var DataList = []\n    arr.forEach(element => {\n        const parseTimestamp = new Date(element.ORRCPDT.split(\"-\")[0], element.ORRCPDT.split(\"-\")[1], element.ORRCPDT.split(\"-\")[2]).getTime()\n        // const nowTimestamp = new Date(time).getTime()\n        //console.log(\"parseTimestamp: \" + parseTimestamp + \"\\nnowTimestamp: \" + nowTimestamp)\n        //console.log(element.ORPROCED.indexOf(target))\n        if (parseTimestamp <= new Date(time).getTime() && element.ORPROCED.indexOf(target) > -1) {\n            DataList.push(element)\n        }\n    })\n    return DataList\n}\n\nexport function CaRegString(ressectobject) {\n    var select = []\n    if (Array.isArray(ressectobject)) {\n        for (let index = 0; index < ressectobject.length; index++) {\n            const element = ressectobject[index];\n            const elementstring = element.ORPROCED.toString()\n            if (elementstring.match(\"Ca++, free\") !== null) {\n                select.push(element)\n            }\n        }\n    }\n    if (select.length === 0) {\n        return \"null\"\n    }\n\n}\n\nexport function QSPERegList(qspe) {\n    function SettingValue(mode, value) {\n        if (value === undefined || value === null) {\n            return \"\"\n        }\n        const valueList = value.split(\"/\")\n        if (mode === 'NC') {\n            return \"Flow:\" + valueList[0]\n        }\n        if (mode === 'HF') {\n            return \"FiO2:\" + valueList[0] + \"/PEEP:\" + valueList[1]\n        }\n        if (mode === 'UW' || mode === 'bcpap' || mode === 'CPAP') {\n            return \"FiO2:\" + valueList[0] + \"/PEEP:\" + valueList[1]\n        }\n        if (mode === 'NIPPV' || mode.match(\"PC\") !== null) {\n            return \"FiO2:\" + valueList[0] + \"/Rate:\" + valueList[1] + \"/PIP:\" + valueList[2] + \"/PEEP:\" + valueList[3]\n        }\n        if (mode.match(\"HFOV\") !== null) {\n            return \"FiO2:\" + valueList[0] + \"/Amp:\" + valueList[1] + \"/MAP:\" + valueList[2] + \"/Freq:\" + valueList[3]\n        }\n        if (mode.match(\"HFPPV\") !== null) {\n            return \"FiO2:\" + valueList[0] + \"/Rate:\" + valueList[1] + \"/PIP:\" + valueList[2] + \"/PEEP:\" + valueList[3]\n        }\n        return value\n    }\n\n    var qspearray = []\n    if (Array.isArray(qspe)) {\n        for (let index = 0; index < qspe.length; index++) {\n            const element = qspe[index];\n            console.log(element)\n            if (element !== undefined) {\n                const SelectElement = element.special.toString()\n                if (SelectElement.match(\"@v\") !== null) {\n                    const DataArray = SelectElement.split(\" \")\n                    const title = DataArray[1]\n                    const value = DataArray[2]\n                    const DataJson = {\n                        \"Mode\": title,\n                        \"Setting\": SettingValue(title, value),\n                        \"Date\": element.rec_dat.toString().trim(),\n                        \"Time\": element.rec_tim,\n                    }\n                    console.log(element.rec_tim)\n                    qspearray.push(DataJson)\n                }\n            }\n            console.log(qspearray)\n        }\n    }\n    return qspearray\n}\n\nexport function QSPESetting(qspesettingarray) {\n    console.log(qspesettingarray)\n    const regString = qspesettingarray.Mode\n    const regValue = qspesettingarray.Setting.split(\"/\")\n    if (regString.match(\"RA\") !== null) {\n        return \"\"\n    }\n    if (regString.match(\"NC\") !== null) {\n        return \"Flow:\" + regValue[0]\n    }\n    if (regString.match(\"UW\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/PEEP:\" + regValue[1]\n    }\n    if (regString.match(\"bcpap\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/PEEP:\" + regValue[1]\n    }\n    if (regString.match(\"CPAP\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/PEEP:\" + regValue[1]\n    }\n    if (regString.match(\"NIPPV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Rate:\" + regValue[1] + \"/PIP:\" + regValue[2] + \"/PEEP:\" + regValue[3]\n    }\n    if (regString.match(\"HFOV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Rate:\" + regValue[1] + \"/PIP:\" + regValue[2] + \"/PEEP:\" + regValue[3]\n    }\n    if (regString.match(\"HFOV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Amp:\" + regValue[1] + \"/MAP:\" + regValue[2] + \"/Freq:\" + regValue[3]\n    }\n    if (regString.match(\"HFPPV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Rate:\" + regValue[1] + \"/PIP:\" + regValue[2] + \"/PEEP:\" + regValue[3]\n    }\n    return qspesettingarray.value\n}\n","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport './Wardcardvitalsign.scss';\nimport { mmddformat } from '../Function/Timeformat'\nimport * as ApiProvider from '../API/ApiProvider'\nimport moment from 'moment';\n\n\n\nclass WardcardvitalsignChart extends Component {\n    state = {\n        sourcedata: [],\n        preHID: null\n    }\n    componentDidUpdate() {\n        const { HISID } = this.props\n        const HID = HISID.toString().trim()\n        const preHID = this.state.preHID\n        if (HID !== preHID) {\n            this.setState({ preHID: HISID.toString().trim() })\n            this.getCenterMonitor()\n        }\n\n    }\n    componentDidMount() {\n        const { HISID } = this.props\n        this.setState({ preHID: HISID.toString().trim() })\n        this.getCenterMonitor()\n    }\n\n    getCenterMonitor() {\n        function selectType(type) {\n            switch (type) {\n                case \"div_hr\":\n                    return \"hr\"\n                case \"div_bp\":\n                    return \"nbp\"\n                case \"div_rr\":\n                    return \"rr\"\n                case \"div_spo\":\n                    return \"spo2\"\n                case \"div_abp\":\n                    return \"abp\"\n                case \"div_bt\":\n                    return \"bt\"\n                default:\n                    break;\n            }\n        }\n        // const simdata = vitalData.simdata\n        const endTime = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").format(\"YYYYMMDDHHmmss\");\n        const startTime = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf() - (24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\");\n        const { id_key, HISID } = this.props\n        const HID = HISID.toString().trim()\n        const type = selectType(id_key)\n        if (id_key === \"div_abp\") {\n            ApiProvider.getPatientwardvalueBoxPlot(HID, startTime, endTime, type, 0)\n                .then(data => {\n                    this.setState({\n                        sourcedata: data.data\n                    })\n                    this.drawChart()\n                })\n                .catch(err => { console.log(err) })\n        }\n        if (id_key === \"div_hr\" || id_key === \"div_rr\" || id_key === \"div_spo\") {\n\n            ApiProvider.getPatientwardvalueBoxPlot(HID, startTime, endTime, type, 0)\n                .then(data => {\n                    this.setState({\n                        sourcedata: data.data\n                    })\n                    this.drawChart()\n                })\n                .catch(err => { console.log(err) })\n        }\n        if (id_key === \"div_bp\") {\n\n            ApiProvider.getVitalSignData(HID, startTime, endTime, type)\n                .then(data => {\n                    this.setState({\n                        sourcedata: data.data\n                    })\n                    this.drawChart()\n                })\n                .catch(err => {\n                    console.log(err);\n                })\n        }\n    }\n    cal_svg_hight() {\n        const { axisTop, axisBot } = this.props\n        if (axisTop) {\n            if (axisBot) {\n                return 160\n            }\n            else {\n                return 130\n            }\n        }\n        else {\n            if (axisBot) {\n                return 100\n            }\n            else {\n                return 90\n            }\n        }\n    }\n\n    cal_svg_transform() {\n        const { axisTop, axisBot } = this.props\n        console.log(axisTop)\n        if (axisTop) {\n            if (axisBot) {\n                return 70\n            }\n            else {\n                return 50\n            }\n        }\n        else {\n            if (axisBot) {\n                return 5\n            }\n            else {\n                return 5\n            }\n        }\n    }\n\n    drawChart() {\n        function multiFormat(date) {\n            if (formatHour(date) % 4 === 0) {\n                return formatHour(date)\n            }\n            else return null\n        }\n        function multibotformat(date) {\n            if (new Date(date).getHours() === 0) {\n                return mmddformat(date)\n            }\n            else return null\n        }\n        const { svg_key, circlrcolor, axisTop, id_key, axisBot, MAX, MIN, Upper, Lower } = this.props\n        const width = window.screen.availWidth * 0.25, height = 70, transformmargin = this.cal_svg_transform(), margin = 20\n        // const borderwidth = width / 27\n        const time_now = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf()\n        const startTime = time_now - (24 * 60 * 60 * 1000);\n        console.log(time_now)\n\n        var time_array = []\n        var time_axis_array = []\n        for (let index = 0; index < 25; index++) {\n            time_array.push({ key: \"time\", x_axis_time: time_now - index * 60 * 60 * 1000 })\n            time_axis_array.push(time_now - index * 60 * 60 * 1000)\n        }\n        var time_array_reverse = time_array.reverse()\n        var time_axis_array_reverse = time_axis_array.reverse()\n        var formatHour = d3.timeFormat(\"%H\")\n\n        // const endTime = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf();\n\n\n        var x = d3.scaleLinear()\n            .domain([time_array_reverse[0].x_axis_time, time_array_reverse[24].x_axis_time])\n            .range([0, width - 40]);\n\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([MIN, MAX])\n            .range([height, 0])\n\n\n\n        var yAxis = d3.axisLeft(y)\n            .tickValues([MIN, MAX])\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(10);\n\n        var xAxisBottom = d3.axisBottom(x)\n            .tickValues(time_axis_array_reverse)\n            .tickSize(0, 0)\n            .tickPadding(height + 10)\n            .tickFormat(function (d) { return multibotformat(d); });\n\n\n        var xAxis = d3.axisTop(x)\n            .tickValues(time_axis_array_reverse)\n            .tickSize(0, 0)\n            .tickPadding(margin)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n        d3.select(\"#\" + svg_key).remove()\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_key)\n            .attr(\"viewBox\", [0, 0, width, this.cal_svg_hight()])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 30 + \",\" + transformmargin + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n        if (axisTop) {\n            svg.append(\"g\")\n                .call(xAxis)\n                .attr(\"class\", \"axis\");\n        }\n\n        if (axisBot) {\n            svg.append(\"g\")\n                .call(xAxisBottom)\n                .attr(\"class\", \"axis\");\n        }\n\n        //上下虛線\n        svg.append('line')\n            .attr('x1', 0)\n            .attr('y1', y(MAX))\n            .attr('x2', width)\n            .attr('y2', y(MAX))\n            .style('stroke', '#E0E0E0')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n        svg.append('line')\n            .attr('x1', 0)\n            .attr('y1', y(MIN))\n            .attr('x2', width)\n            .attr('y2', y(MIN))\n            .style('stroke', '#E0E0E0')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n\n        for (let index = 0; index < time_array_reverse.length; index++) {\n            svg.append('line')\n                .attr('x1', x(time_array_reverse[index].x_axis_time))\n                .attr('y1', 0)\n                .attr('x2', x(time_array_reverse[index].x_axis_time))\n                .attr('y2', height)\n                .style('stroke', '#E0E0E0')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n        }\n\n\n\n        drawshadow(startTime, 0, Lower, Upper)\n        function drawshadow(startTime, interval, lower, upper) {\n            const LimitBoxTimer = formatBox(startTime, interval, width)\n            for (let index = 0; index < LimitBoxTimer.length; index++) {\n                const boxwidth = formatBoxWidth(width, interval)\n                const element = LimitBoxTimer[index];\n                console.log(startTime)\n                svg.append('line')\n                    .attr('x1', x(element))\n                    .attr('y1', y(lower))\n                    .attr('x2', x(element))\n                    .attr('y2', y(upper))\n                    .style('stroke', circlrcolor)\n                    .style('opacity', 0.7)\n                    .style('stroke-width', boxwidth)\n\n                if (id_key === \"div_bp\" || id_key === \"div_abp\") {\n                    svg.append('line')\n                        .attr('x1', x(element))\n                        .attr('y1', y(35))\n                        .attr('x2', x(element))\n                        .attr('y2', y(55))\n                        .style('stroke', circlrcolor)\n                        .style('opacity', 0.3)\n                        .style('stroke-width', boxwidth)\n                }\n            }\n        }\n        function formatBox(startTime, interval) {\n            function interFormat(startTime, interval) {\n                var TimeArray = []\n                for (let index = 0; index < interval; index++) {\n                    if (interval === 24) {\n                        const boxTime = startTime + (30 * 60 * 1000) + (index * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 18) {\n                        const boxTime = startTime + (2 * 60 * 60 * 60 * 1000) + (index * 4 * 60 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 21) {\n                        const boxTime = startTime + (4 * 60 * 60 * 60 * 1000) + (index * 8 * 60 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else {\n                        const boxTime = startTime + (12 * 60 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                }\n                return TimeArray\n            }\n            if (interval === 0) {\n                return interFormat(startTime, 24)\n            }\n            if (interval === 1) {\n                return interFormat(startTime, 18)\n            }\n            if (interval === 2) {\n                return interFormat(startTime, 21)\n            }\n            return interFormat(startTime, 14)\n        }\n        function formatBoxWidth(viewwidth, interval) {\n            if (interval === 0) {\n                return viewwidth / 24\n            }\n            if (interval === 1) {\n                return viewwidth / 18\n            }\n            if (interval === 2) {\n                return viewwidth / 21\n            }\n            return viewwidth / 14\n        }\n        // var sim_data = this.state.sourcedata\n        const BoxPlotData = this.state.sourcedata\n        if (BoxPlotData.length === 0) {\n            return null\n        }\n\n        if (id_key === \"div_abp\") {\n            const dataAbps = BoxPlotData.abps\n            const dataAbpd = BoxPlotData.abpd\n            const boxwidth = 10\n            for (let index = 0; index < dataAbpd.length; index++) {\n                const element = dataAbpd[index];\n                const q1 = element.Q1\n                const q2 = element.Q2\n                const q3 = element.Q3\n                const q4 = element.Q4\n                const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                svg.append(\"line\")\n                    .attr(\"x1\", x(Xtime))\n                    .attr(\"x2\", x(Xtime))\n                    .attr(\"y1\", y(q1))\n                    .attr(\"y2\", y(q4))\n                    .attr(\"stroke\", circlrcolor)\n                    .style('opacity', 0.5)\n                    // .attr(\"stroke\", \"blcak\")\n                    .style('stroke-width', 1)\n\n                svg.append(\"rect\")\n                    .attr(\"x\", x(Xtime) - boxwidth / 2)\n                    .attr(\"y\", y(q3))\n                    .attr(\"height\", (y(q2) - y(q3)))\n                    .attr(\"width\", boxwidth)\n                    .attr(\"stroke\", circlrcolor)\n                    .style('opacity', 0.5)\n                    .style(\"fill\", \"rgba(255,255,255,1)\")\n                    .style('stroke-width', 1);\n\n                svg\n                    .selectAll(\"toto\")\n                    .data([q1, q4])\n                    .enter()\n                    .append(\"line\")\n                    .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                    .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                    .attr(\"y1\", function (d) { return (y(d)) })\n                    .attr(\"y2\", function (d) { return (y(d)) })\n                    .attr(\"stroke\", circlrcolor)\n                    .style('opacity', 0.5)\n                    .style('stroke-width', 1);\n            }\n            for (let index = 0; index < dataAbps.length; index++) {\n                const element = dataAbps[index];\n                const q1 = element.Q1\n                const q2 = element.Q2\n                const q3 = element.Q3\n                const q4 = element.Q4\n                const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                svg.append(\"line\")\n                    .attr(\"x1\", x(Xtime))\n                    .attr(\"x2\", x(Xtime))\n                    .attr(\"y1\", y(q1))\n                    .attr(\"y2\", y(q4))\n                    .attr(\"stroke\", circlrcolor)\n                    // .attr(\"stroke\", \"blcak\")\n                    .style('stroke-width', 1)\n\n                svg.append(\"rect\")\n                    .attr(\"x\", x(Xtime) - boxwidth / 2)\n                    .attr(\"y\", y(q3))\n                    .attr(\"height\", (y(q2) - y(q3)))\n                    .attr(\"width\", boxwidth)\n                    .attr(\"stroke\", circlrcolor)\n                    .style(\"fill\", \"rgba(255,255,255,1)\")\n                    .style('stroke-width', 1);\n\n                svg\n                    .selectAll(\"toto\")\n                    .data([q1, q4])\n                    .enter()\n                    .append(\"line\")\n                    .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                    .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                    .attr(\"y1\", function (d) { return (y(d)) })\n                    .attr(\"y2\", function (d) { return (y(d)) })\n                    .attr(\"stroke\", circlrcolor)\n                    .style('stroke-width', 1);\n            }\n        }\n        if (id_key === \"div_bp\") {\n            for (let index = 0; index < BoxPlotData.length; index++) {\n                const element = BoxPlotData[index];\n                const Xtime = moment(element.Time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                const SBP = element.SBP\n                const DBP = element.DBP\n                if (SBP === 0 || DBP === 0) {\n                    continue\n                }\n                svg.append('circle')\n                    .attr('cx', x(Xtime))\n                    .attr('cy', y(SBP))\n                    .attr('r', 3)\n                    .style('fill', circlrcolor)\n\n\n                svg.append('circle')\n                    .attr('cx', x(Xtime))\n                    .attr('cy', y(DBP))\n                    .attr('r', 3)\n                    .style('opacity', 0.5)\n                    .style('fill', circlrcolor)\n            }\n        }\n        if (id_key === \"div_hr\" || id_key === \"div_rr\" || id_key === \"div_spo\") {\n            // for (let index = 0; index < BoxPlotData.length; index++) {\n            //     const element = BoxPlotData[index];\n            //     const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + (30 * 60 * 1000)\n            //     svg.append('line')\n            //         .attr('x1', x(Xtime))\n            //         .attr('y1', y(Lower))\n            //         .attr('x2', x(Xtime))\n            //         .attr('y2', y(Upper))\n            //         .style('stroke', circlrcolor)\n            //         .style('opacity', 0.5)\n            //         // .style('stroke', 'red')\n            //         .style('stroke-width', borderwidth)\n\n            // }\n            for (let index = 0; index < BoxPlotData.length; index++) {\n                const element = BoxPlotData[index];\n                console.log(element)\n                const q1 = element.Q1\n                const q2 = element.Q2\n                const q3 = element.Q3\n                const q4 = element.Q4\n                const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + (30 * 60 * 1000)\n                console.log(q1, q2, q3, q4)\n                const boxwidth = 10\n                svg.append(\"line\")\n                    .attr(\"x1\", x(Xtime))\n                    .attr(\"x2\", x(Xtime))\n                    .attr(\"y1\", y(q1))\n                    .attr(\"y2\", y(q4))\n                    .attr(\"stroke\", circlrcolor)\n                    // .attr(\"stroke\", \"blcak\")\n                    .style('stroke-width', 1)\n\n                svg.append(\"rect\")\n                    .attr(\"x\", x(Xtime) - boxwidth / 2)\n                    .attr(\"y\", y(q3))\n                    .attr(\"height\", (y(q2) - y(q3)))\n                    .attr(\"width\", boxwidth)\n                    .attr(\"stroke\", circlrcolor)\n                    .style(\"fill\", \"rgba(255,255,255,1)\")\n                    .style('stroke-width', 1);\n\n                svg\n                    .selectAll(\"toto\")\n                    .data([q1, q4])\n                    .enter()\n                    .append(\"line\")\n                    .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                    .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                    .attr(\"y1\", function (d) { return (y(d)) })\n                    .attr(\"y2\", function (d) { return (y(d)) })\n                    .attr(\"stroke\", circlrcolor)\n                    .style('stroke-width', 1);\n\n            }\n        }\n\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default WardcardvitalsignChart;","import React, { Component } from 'react';\nimport WardcardvitalsignChart from './Wardcardvitalsign'\nimport { statecolor } from '../Function/Wardstate'\n// import * as ApiProvider from '../API/ApiProvider'\nimport './Wardchart.scss'\n// import moment from 'moment';\n\n\n\nclass WardChart extends Component {\n    state = {data: []}\n    render() {\n        function valueFormat(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"--\"\n            }\n            return value\n        }\n        const data = this.state.data\n        const { CMvalue, HISID } = this.props\n        const vitalvalue = CMvalue\n        if (vitalvalue === undefined || vitalvalue === null) {\n            return null\n        }\n        function limitValue(value, upper, lower) {\n            if (value > upper || value < lower) {\n                return false\n            }\n            return true\n        }\n        return (\n            <div className='Wardchartlayout'>\n                <div className='halfwardchart'>\n                    <div className='singlewardchart'>\n                        <div className='firstRowTitle'>\n                            <div style={{ width: \"120px\", height: \"90px\", backgroundColor: limitValue(vitalvalue.hr, 160, 100) ? \"white\" : statecolor('HR') }}>\n                                <centerstyle>\n                                    <t4 style={{ color: limitValue(vitalvalue.hr, 160, 100) ? statecolor('HR') : \"white\" }}>HR(min)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontSize: \"40px\", color: limitValue(vitalvalue.hr, 160, 100) ? statecolor('HR') : \"white\" }}>{valueFormat(vitalvalue.hr)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <WardcardvitalsignChart MAX={200} MIN={0} Upper={160} Lower={100} HISID={HISID} svg_key={\"svg_hr\"} id_key={\"div_hr\"} data={data} axisBot={false} axisTop={true} colorshadow={\"rgba(126, 211, 33, 0.1)\"} circlrcolor={\"#779F50\"}></WardcardvitalsignChart>\n                    </div>\n                    <div className='singlewardchart'>\n                        <div className='secondRowTitle'>\n                            <div style={{ width: \"120px\", height: \"90px\", backgroundColor: limitValue(vitalvalue.nbpd, 75, 55) ? \"white\" : statecolor('BP') }}>\n                                <centerstyle>\n                                    <t4 style={{ color: limitValue(vitalvalue.nbpd, 75, 55) ? statecolor('BP') : \"white\" }}>NBP(mmHg)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontSize: \"18px\", color: limitValue(vitalvalue.nbpd, 75, 55) ? statecolor('BP') : \"white\" }}>{valueFormat(vitalvalue.nbps)}/{valueFormat(vitalvalue.nbpd)}</div>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontSize: \"14px\", color: limitValue(vitalvalue.nbpd, 75, 55) ? statecolor('BP') : \"white\" }}>({valueFormat(vitalvalue.nbpm)})</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <WardcardvitalsignChart MAX={100} MIN={0} Upper={75} Lower={55} HISID={HISID} svg_key={\"svg_bp\"} id_key={\"div_bp\"} data={data} data2={true} axisBot={false} axisTop={false} colorshadow={\"rgba(240, 144, 144, 0.1)\"} circlrcolor={\"#C12528\"} data_2_circlrcolor={\"rgba(240, 144, 144, 0.5)\"}></WardcardvitalsignChart>\n                    </div>\n                    <div className='singlewardchart'>\n                        <div className='thirdRowTitle'>\n                            <div style={{ width: \"120px\", height: \"90px\", backgroundColor: limitValue(vitalvalue.abpd, 75, 55) ? \"white\" : statecolor('BP') }}>\n                                <centerstyle>\n                                    <t4 style={{ color: limitValue(vitalvalue.abpd, 75, 55) ? statecolor('BP') : \"white\" }}>BP(mmHg)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontSize: \"18px\", color: limitValue(vitalvalue.abpd, 75, 55) ? statecolor('BP') : \"white\" }}>{valueFormat(vitalvalue.abps)}/{valueFormat(vitalvalue.abpd)}</div>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontSize: \"14px\", color: limitValue(vitalvalue.abpd, 75, 55) ? statecolor('BP') : \"white\" }}>({valueFormat(vitalvalue.abpm)})</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <WardcardvitalsignChart MAX={100} MIN={0} Upper={75} Lower={55} HISID={HISID} svg_key={\"svg_abp\"} id_key={\"div_abp\"} data={data} data2={true} axisBot={true} axisTop={false} colorshadow={\"rgba(240, 144, 144, 0.1)\"} circlrcolor={\"#C12528\"} data_2_circlrcolor={\"rgba(240, 144, 144, 0.5)\"}></WardcardvitalsignChart>\n                    </div>\n                </div>\n                <div className='halfwardchart'>\n                    <div className='singlewardchart'>\n                        <div className='firstRowTitle'>\n                            <div style={{ width: \"120px\", height: \"90px\", backgroundColor: limitValue(vitalvalue.spo2, 100, 90) ? \"white\" : statecolor('SpO2') }}>\n                                <centerstyle>\n                                    <t4 style={{ color: limitValue(vitalvalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>SpO2(%)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontSize: \"40px\", color: limitValue(vitalvalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>{valueFormat(vitalvalue.spo2)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <div>\n                            <WardcardvitalsignChart MAX={100} MIN={60} Upper={100} Lower={90} HISID={HISID} svg_key={\"svg_spo\"} id_key={\"div_spo\"} data={data} axisBot={false} axisTop={true} colorshadow={\"rgba(0, 183, 255, 0.1)\"} circlrcolor={\"#4773B8\"}></WardcardvitalsignChart>\n                        </div>\n                    </div>\n                    <div className='singlewardchart'>\n                        <div className='secondRowTitle'>\n                            <div style={{ width: \"120px\", height: \"90px\", backgroundColor: limitValue(vitalvalue.bt, 38, 36) ? \"white\" : statecolor('BT') }}>\n                                <centerstyle>\n                                    <t4 style={{ color: limitValue(vitalvalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>BT(<sup>&ordm;</sup>C)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontSize: \"40px\", color: limitValue(vitalvalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>{valueFormat(vitalvalue.bt)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <WardcardvitalsignChart MAX={43} MIN={33} Upper={38} Lower={36} HISID={HISID} svg_key={\"svg_bt\"} id_key={\"div_bt\"} data={data} axisBot={false} axisTop={false} colorshadow={\"rgba(199, 162, 244,0.1)\"} circlrcolor={\"#7F3DB5\"}></WardcardvitalsignChart>\n                    </div>\n                    <div className='singlewardchart'>\n                        <div className='thirdRowTitle'>\n                            <div style={{ width: \"120px\", height: \"90px\", backgroundColor: limitValue(vitalvalue.rr, 60, 20) ? \"white\" : statecolor('RR') }}>\n                                <centerstyle>\n                                    <t4 style={{ color: limitValue(vitalvalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>RR(min)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontSize: \"40px\", color: limitValue(vitalvalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>{valueFormat(vitalvalue.rr)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <WardcardvitalsignChart MAX={100} MIN={0} Upper={60} Lower={20} HISID={HISID} svg_key={\"svg_rr\"} id_key={\"div_rr\"} data={data} axisBot={true} axisTop={false} colorshadow={\"rgba(255, 152, 0, 0.1)\"} circlrcolor={\"#DE7531\"}></WardcardvitalsignChart>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WardChart;","import React, { Component } from 'react';\nimport { Checkbox } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider'\n\nclass Wardinfousercheckbox extends Component {\n    state = {\n        checkboxselect: this.props.selectstate\n    }\n\n    updateOnePatientTodo() {\n        if (this.state.checkboxselect) {\n            ApiProvider.createTodo(this.props.item.caseid, this.props.item.context, this.props.item.time, this.props.item.transinno, '已完成')\n                .then(data => {\n                    console.log('updateOnePatientTodo ok ' + JSON.stringify(data))\n                })\n                .catch(err => {\n                    console.log('updateOnePatientTodo ng ' + JSON.stringify(err))\n                })\n        } else {\n            ApiProvider.createTodo(this.props.item.caseid, this.props.item.context, this.props.item.time, this.props.item.transinno, '未完成')\n                .then(data => {\n                    console.log('updateOnePatientTodo ok ' + JSON.stringify(data))\n                })\n                .catch(err => {\n                    console.log('updateOnePatientTodo ng ' + JSON.stringify(err))\n                })\n        }\n    }\n    selectchange() {\n        this.setState({\n            checkboxselect: !this.state.checkboxselect\n        }, this.updateOnePatientTodo)\n    }\n\n    render() {\n        const selectunstyle = {\n            fontSize: \"1rem\"\n        }\n        const selectstyle = {\n            textDecoration: \"line-through\", fontSize: \"1rem\"\n        }\n        return (\n            <div style={{ height: \"50px\", paddingLeft: \"15px\", display: \"flex\", alignItems: \"center\" }}>\n                <Checkbox onChange={() => this.selectchange()} checked={this.state.checkboxselect} style={this.state.checkboxselect ? selectstyle : selectunstyle}>{this.props.item.context}</Checkbox>\n            </div>\n        )\n    }\n\n}\n\nexport default Wardinfousercheckbox;","import React, { Component } from 'react';\nimport './Patientviewinfo.scss'\nimport { Icon } from 'antd'\nimport * as Wardstate from '../Function/Wardstate'\nimport * as ApiProvider from '../API/ApiProvider'\nclass Patientinfo extends Component {\n\n    state = { preCID: null, QENT: [] };\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const CID = caseinfo.CASEID\n        this.setState({ preCID: CID })\n        this.getQENT(CID)\n    }\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const { preCID } = this.state\n        const CID = caseinfo.CASEID\n        if (CID !== preCID) {\n            this.setState({ preCID: CID })\n            this.getQENT(CID)\n\n        }\n    }\n    getQENT(CID) {\n        ApiProvider.getQENT(CID)\n            .then(data => {\n                console.log(data.data)\n                const parsedata = Wardstate.XM2JSON(data.data)\n                this.setState({ QENT: parsedata })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQENT NG \" + JSON.stringify(err));\n            });\n    }\n    render() {\n\n        const patientDetail = this.state.QENT\n        const patientData = patientDetail.map(element =>\n            <div className='context'>\n                <div className='title'>{element[0]} ：</div>\n                <div className='item'>{element[1]}</div>\n            </div>\n        )\n        if (this.state.preCID === null || patientDetail.length === 0) {\n            return (\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>\n                    <Icon type=\"loading\" />\n                </div>\n            );\n        }\n        return (\n            <div className='patientinfolayout'>\n                {patientData}\n            </div>\n        );\n    }\n}\n\nexport default Patientinfo\n","import React, { useState, useEffect } from \"react\";\nimport './Wardinfouser.scss'\nimport moment from 'moment'\nimport { Modal } from 'antd';\nimport * as Wardstate from '../Function/Wardstate'\nimport * as ApiProvider from '../API/ApiProvider'\n// import * as ApiGithub from '../API/ApiGithub'\nimport { pregancyweeksanddays, gender } from '../Function/Wardbedfunction'\nimport fileLogo from '../Image/svg/file1.svg'\nimport file2Logo from '../Image/svg/file2.svg'\nimport Wardgrewchart from './Wardgrewchart'\nimport Notice from '../Patientview/Schedule/Notice'\nimport Labviewlayout from '../Patientview/CrossSectionView/Labview'\nimport WardChart from './Wardchart'\nimport Wardinfousercheckbox from './Wardunfousercheckbox'\nimport { Link } from \"react-router-dom\";\n// import * as Reg from '../Data/RegularData';\nimport Patientinfo from '../Patientview/Patientviewinfo';\nimport Wardcarstatus from './Wardcardstatus'\n\n\nexport function Wardinfouser(props) {\n    const [Visible, setVisible] = useState(false);\n    const [Report, SetReport] = useState(0);\n    const [Nonreport, SetNonreport] = useState(0);\n    const [CenterMonitorValue, SetCenterMonitorValue] = useState([])\n    const [scheduleList, SetScheduleList] = useState([]);\n    const [todoList, SetTodoList] = useState([]);\n    // const [QENT, SetQENT] = useState([]);\n    // const [CID, SetCID] = useState(null);\n    // const [HID, SetHID] = useState(null);\n    // const [TransInDt, SetTransInDt] = useState(null);\n    const [Timer, SetTimer] = useState(0)\n\n\n\n    useEffect(() => {\n        const TimerID = setInterval(() => {\n            SetTimer(Timer + 1)\n        }, 5000)\n        return () => clearInterval(TimerID);\n    }, [Timer])\n\n\n    useEffect(() => {\n        const data = props.location.state.data\n        // const hisid = \"TEST1234\"\n        const hisid = data.PHISTNUM.toString()\n        ApiProvider.getHisidwardvalue(hisid)\n            .then(data => {\n                console.log(data.data)\n\n                SetCenterMonitorValue(data.data[0]);\n            })\n            .catch(err => {\n                console.log(\"Andy test getHisidwardvalue NG \" + JSON.stringify(err));\n            });\n    }, [Timer, props.location.state.data.PHISTNUM]);\n\n\n\n    useEffect(() => {\n        console.log(\"query schedule list\")\n\n        const data = props.location.state.data\n        const source = data\n        const PLOC = source.PLOC\n        const TRANSINID = source.TRANSINID.toString()\n\n        const now = new Date();\n        const todayBegin = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n        const startTime = todayBegin.toISOString().split(\".\")[0];\n        const endTime = new Date(todayBegin.getTime() + 24 * 60 * 60 * 1000).toISOString().split(\".\")[0];\n        ApiProvider.getOnePatientSchedule(TRANSINID, startTime, endTime)\n            .then(result => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(result.data));\n                SetScheduleList(result.data);\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }, [props.location.state.data.TRANSINID]);\n\n    useEffect(() => {\n        console.log(\"query todo list\")\n\n        const data = props.location.state.data\n        const source = data\n        const PLOC = source.PLOC\n        const TRANSINID = source.TRANSINID.toString()\n\n\n        ApiProvider.getOneTodo(TRANSINID, source.PCASENO.toString())\n            .then(result => {\n                console.log(\"getOneTodo OK \" + JSON.stringify(result.data));\n                SetTodoList(result.data);\n            })\n            .catch(err => {\n                console.log(\"getOneTodo NG \" + JSON.stringify(err));\n            });\n    }, [props.location.state.data.PCASENO]);\n\n    function renderScheduleItem() {\n        if (scheduleList.length === 0) {\n            return (\n                <div>沒有排程</div>\n            )\n        } else {\n            return scheduleList.map((item, index) => {\n                if (item.type === \"排程\") {\n                    // const rawDateStr = item.time;\n                    const time = moment(item.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n                    const localTime = moment.utc(time).toDate()\n                    const displayTimeStr = moment(localTime).format(\"MM/DD HH:mm\")\n                    return (\n                        <div key={index} style={{ height: \"50px\", display: 'grid', gridTemplateColumns: \"35% 65%\", borderBottomWidth: \"1px\", borderBottomColor: \"rgba(232, 232, 232, 1)\", borderBottomStyle: \"solid\" }}>\n                            <div style={{ fontSize: \"1rem\", display: \"flex\", paddingLeft: \"15px\", alignItems: \"center\" }}>{displayTimeStr}</div>\n                            <div style={{ fontSize: \"1rem\", display: \"flex\", paddingLeft: \"15px\", alignItems: \"center\" }}>{item.context}</div>\n                        </div>\n                    )\n                }\n            })\n        }\n    }\n    function renderTodoItem() {\n        if (todoList.length === 0) {\n            return (\n                <div>沒有待辦事項</div>\n            )\n        } else {\n            return todoList.map((item, index) => {\n                if (item.type === \"未完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={false}></Wardinfousercheckbox>)\n                } else if (item.type === \"已完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={true}></Wardinfousercheckbox>)\n                }\n\n            });\n        }\n    }\n\n\n\n\n\n    function valueFormat(value) {\n        if (value === \"\" || value === null || value === undefined) {\n            return \"--\"\n        }\n        return value.toString()\n    }\n    function valueBornWeight(value) {\n        if (value === \"\" || value === null || value === undefined || value === 0) {\n            return \"\"\n        }\n        return value.toString() + \"g → \"\n    }\n\n\n    const data = props.location.state.data\n    const source = data\n    const Birthday = source.PBIRHDT\n    const QTWER = Wardstate.XM2JSON(source.QTWPER)\n    const QMNC = Wardstate.XM2JSON(source.QMNC)\n    const ListWeight = Wardstate.WeightList(QTWER)\n    const BornWeight = Wardstate.BornWeight(QTWER, Birthday)\n    const Weight = Wardstate.NewestWeight(QTWER)\n    const BornWeeks = QMNC.weeks\n    const BornDays = QMNC.days\n    const TRANSINID = source.TRANSINID\n    const DOCLIST = source.PDOCNEW\n    const MainDoc = Wardstate.Doc(DOCLIST, \"B\")\n    const LiveDoc = Wardstate.Doc(DOCLIST, \"D\")\n    const MainNur = Wardstate.Doc(DOCLIST, \"N\")\n    const ICUMainDoc = Wardstate.Doc(DOCLIST, \"U\")\n\n    const status = {\n        date: moment(Birthday, \"YYYYMMDD\").valueOf(),\n        week: BornWeeks,\n        day: BornDays\n    }\n    console.log(status)\n    const AgeStatus = Wardstate.CalculateAge(status)\n\n    // const PBASINFO = data.PBASINFO\n    const caseinfo = {\n        \"HISID\": source.PHISTNUM.toString(),\n        \"CASEID\": source.PCASENO.toString(),\n        \"WEEK_BORN\": BornWeeks,\n        \"DAY_BORN\": BornDays,\n        \"TRANSINID\": TRANSINID,\n        \"TRANSINDT\": TRANSINID,\n        \"WEIGHT\": QTWER,\n        \"PBASINGNINFO\": source\n    }\n\n    const grewinfo = {\n        \"WEEK_BORN\": BornWeeks,\n        \"DAY_BORN\": BornDays,\n        \"BIRTHDAY\": Birthday\n    }\n    // const patientDetail = fixpatientDate(QENT)\n    return (\n        <div className='wardinfouserlayout'>\n            <Modal\n                width={800}\n                title=\"病人基本資料\"\n                visible={Visible}\n                onOk={() => setVisible(false)}\n                onCancel={() => setVisible(false)}\n                footer={null}>\n                <Patientinfo caseinfo={caseinfo}></Patientinfo>\n            </Modal>\n            <div className='wardinfopatient'>\n                <div style={{ height: '50px', display: 'grid', gridTemplateColumns: \"1fr 1fr 1fr\" }}>\n                    <Link to=\"/nicu/ward/wardindex\" style={{ alignItems: \"center\", display: \"flex\" }}>\n                        <t2 className='wardblacktoindex'>&larr;返回總覽</t2>\n                    </Link>\n                    <centerstyle>\n                        <t1>病人資訊摘要</t1>\n                    </centerstyle>\n                </div>\n                <div style={{ height: \"50px\" }}>\n                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <t2>床號:{Number(source.HBEDNO)},{source.PNAMEC.toString().trim()},{gender(source.PSEX)},{moment(Birthday, \"YYYYMMDD\").format(\"YYYY/MM/DD\")},{source.PHISTNUM.toString().trim()}</t2>\n                        <Wardcarstatus source={false} PCASENO={source.PCASENO} PHISTNUM={source.PHISTNUM}></Wardcarstatus>\n                    </div>\n                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                            <t2 style={{ marginRight: \"16px\" }}>[{valueFormat(BornWeeks)}+{valueFormat(BornDays)}]&rarr;{AgeStatus}</t2>\n                            <t4>{valueBornWeight(BornWeight)}{valueFormat(Weight)}g</t4>\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", width: \"70px\" }}>\n                                <img src={fileLogo} alt='fileLogo'></img>\n                                <t4>{Report}</t4>\n                                <img src={file2Logo} alt='file2Logo'></img>\n                                <t4>{Nonreport}</t4>\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,auto)\", gridColumnGap: \"10px\" }}>\n                            <t3>主治醫師 {MainDoc}</t3>\n                            <t3>加護主治醫師 {ICUMainDoc}</t3>\n                            <t3>住院醫師 {LiveDoc}</t3>\n                            <t3>專科護理師 {MainNur}</t3>\n                            <div className='wardblacktoindex' onClick={() => setVisible(true)}>查看病人基本資料</div>\n                        </div>\n                    </div>\n                </div>\n                <div className='wardinfousercontent'>\n                    <div style={{ padding: \"10px 15px\" }}>\n                        <WardChart HISID={source.PHISTNUM} CMvalue={CenterMonitorValue}></WardChart>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\" }}>\n                        <div style={{ borderRadius: \"4px\" }}>\n                            <div style={{ backgroundColor: \"#cccccc\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"50px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2>檢驗項目</t2>\n                            </div>\n                            <Labviewlayout Source={\"Wardview\"} PickerDate={moment(moment().format('YYYYMMDD')).valueOf()} caseinfo={caseinfo}></Labviewlayout>\n                        </div>\n                        <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\" }}>\n                            <Wardgrewchart grewinfo={grewinfo} Data={source} WeightList={ListWeight}></Wardgrewchart>\n                        </div>\n                    </div>\n                    <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\", marginTop: \"10px\" }}>\n                        {<Notice caseinfo={caseinfo} disableEdit={true}></Notice>}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\", marginTop: \"10px\" }}>\n                        <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\" }}>\n                            <div style={{ backgroundColor: \"#cccccc\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"50px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2>排程</t2>\n                            </div>\n                            <div style={{ maxHeight: \"200px\", overflow: 'auto', minHeight: \"50px\" }}>\n                                {renderScheduleItem()}\n                            </div>\n                        </div>\n                        <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\" }}>\n                            <div style={{ backgroundColor: \"#cccccc\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"50px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2>待辦事項</t2>\n                            </div>\n                            <div style={{ maxHeight: \"200px\", overflow: 'auto', minHeight: \"50px\" }}>\n                                {renderTodoItem()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n} \n","import React, { Component } from 'react';\nimport * as antswitch from 'antd';\nimport Wardcarddetail from '../Wardcard/Wardcarddetail';\nimport Unpreviewwardcarddetail from '../Wardcard/UnpreviewWardCardDetail'\nimport Wardinfoindex from '../Wardinfoindex'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport './Bedview.scss'\nimport moment from 'moment';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport * as WardinfouserK from '../Wardinfouser-k'\n\n\nclass Bedview extends Component {\n    state = {\n        index: true,\n        previewmode: false,\n        simplemode: true,\n        SelectHISID: null,\n        source: []\n    };\n    HBEDApiGet() {\n        ApiProvider.getTableHBED()\n            .then(data => { this.setState({ source: data.data }) })\n            .catch(err => { console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err)); });\n    }\n    componentDidMount() { this.HBEDApiGet() }\n\n    onWardcardDisplay() {\n        const simple_style = { display: \"grid\", gridTemplateColumns: \"350px 1fr\", gridGap: \"5px\", marginTop: \"5px\" }\n        const Unsimple_style = { display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr 1fr\", gridTemplateRows: \"1fr 1fr 1fr\", gridGap: \"5px\", marginTop: \"5px\" }\n        const source = this.state.source;\n        const wardcarddetaillist = []\n        //simplemode true:病人摘要檢視(開) false:病人摘要檢視(關)\n        //previewmode true:床頭卡顯示(繁) flase:床頭卡顯示(簡) \n        if (this.state.simplemode) {\n            for (let index = 0; index < source.length; index++) {\n                const element = source[index]\n                const string = \"/nicu/ward/wardinfo/\" + element.HBEDNO\n                if (element.PHISTNUM.toString().trim() !== \"\") {\n                    wardcarddetaillist.push(\n                        <Link to={{ pathname: string, state: { data: element } }}\n                            style={{ border: this.state.SelectHISID === element.PHISTNUM ? \"2px solid rgb(59,151,224)\" : \"1px solid rgba(59,151,224,0.4)\", borderRadius: \"4px\" }}\n                            onClick={() => { this.setState({ SelectHISID: element.PHISTNUM }) }}>\n                            <Wardcarddetail key={index} data={element} previewmode={this.state.previewmode} hbedlist={source} />\n                        </Link>\n                    )\n                }\n            }\n            return (\n                <div style={this.state.simplemode ? simple_style : Unsimple_style}>\n                    <div className='wardcardcontent'>\n                        {wardcarddetaillist}\n                    </div>\n                    <Switch>\n                        <Route path={`${this.props.match.path}/wardindex`} component={Wardinfoindex} />\n                        <Route path={`${this.props.match.path}/wardinfo`} component={WardinfouserK.Wardinfouser} />\n                    </Switch>\n                </div>\n            );\n        }\n        else {\n            for (let index = 1; index < 15; index++) {\n                const element = source.filter(function (value, i) {\n                    return Number(value.HBEDNO) === index\n                })\n                if (index === 4 || index === 13) {\n                    //沒有4號以及13號床\n                    continue\n                }\n                if (element.length === 0) {\n                    wardcarddetaillist.push(\n                        <div style={{ border: \"1px solid rgba(59, 151, 225, 1)\" }}>\n                            <Unpreviewwardcarddetail bednumber={index} key={index} previewmode={this.state.previewmode} />\n                        </div>\n                    )\n                }\n                else {\n                    if (element[0].PHISTNUM.toString().trim() === \"\") {\n                        wardcarddetaillist.push(\n                            <div style={{ border: \"1px solid rgba(59, 151, 225, 1)\" }}>\n                                <Unpreviewwardcarddetail bednumber={index} key={index} previewmode={this.state.previewmode} />\n                            </div>\n                        )\n                    }\n                    else {\n                        wardcarddetaillist.push(\n                            <div style={{ border: \"1px solid rgba(59, 151, 225, 1)\" }}>\n                                <Wardcarddetail key={index} data={element[0]} previewmode={this.state.previewmode} hbedlist={source} />\n                            </div>\n                        )\n                    }\n                }\n            }\n            return (\n                <div style={this.state.simplemode ? simple_style : Unsimple_style}>\n                    {wardcarddetaillist}\n                </div>\n            );\n        }\n    }\n\n\n\n    render() {\n        function switch_titile_string(hisid, source) {\n            function addzero(value) {\n                if (value < 10) {\n                    return \"0\" + value\n                }\n                else return value\n            }\n            if (hisid === null) {\n                return \"NICU總覽\"\n            }\n            else {\n                const filterdata = source.filter(function (item, index, array) {\n                    return item.PHISTNUM === HISID;\n                });\n                const HBEDNUMBER = addzero(parseInt(filterdata[0].HBEDNO))\n                return \"床號\" + HBEDNUMBER + \"病人資訊摘要\"\n            }\n        }\n        const source = this.state.source\n        const HISID = this.state.SelectHISID\n        const title = switch_titile_string(HISID, source)\n        const WardCard = this.onWardcardDisplay()\n\n        return (\n            <div>\n                <div style={{ height: \"40px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ color: \"rgba(0, 0, 0, 0.85)\" }}>住院病人資訊 > {title}</t2>\n                </div>\n                <div style={{ height: \"25px\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"10px\" }}>\n                        <antswitch.Switch style={{ backgroundColor: this.state.previewmode === true ? \"#001a6d\" : \"rgba(0, 0, 0, 0.25)\" }} checkedChildren=\"即時生命徵象\" unCheckedChildren=\"即時生命徵象\" defaultChecked={this.state.previewmode} onChange={(checked) => { this.setState({ previewmode: checked }) }} />\n                        <antswitch.Switch style={{ backgroundColor: this.state.simplemode === true ? \"#001a6d\" : \"rgba(0, 0, 0, 0.25)\" }} checkedChildren=\"顯示摘要\" unCheckedChildren=\"顯示摘要\" defaultChecked={this.state.simplemode} onChange={(checked) => { this.setState({ simplemode: checked }) }} />\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto auto\", gridColumnGap: \"10px\" }}>\n                        <t3>資料更新時間</t3>\n                        <t3>{moment().format('YYYY/MM/DD HH:mm:ss')}</t3>\n                    </div>\n                </div>\n                {WardCard}\n            </div>\n        );\n    }\n}\n\nexport default Bedview;\n","import React, { Component } from 'react';\nimport { Icon, Upload, Table, Input, DatePicker, Button } from 'antd';\nimport { Link } from 'react-router-dom';\nimport * as ApiProvider from '../API/ApiProvider';\nimport moment from 'moment';\n\nclass Historyview extends Component {\n    state = {\n        MouseClick: 0,\n        allPatientDisplayData: [],\n        allPatientUnset: [],\n        allPatientSet: [],\n        selectedRowsArray: [],\n        hospitalindex: '',\n        selectedFile: null,\n        fileList: [],\n        uploading: false,\n        name: '',\n        hisid: '',\n        doctor: '',\n        transOuttime: undefined\n    }\n\n    componentDidMount() {\n        this.onChangeName = this.onChangeName.bind(this)\n        this.onChangeHisid = this.onChangeHisid.bind(this)\n        //this.onChangeDoctor = this.onChangeDoctor.bind(this)\n        this.onClickSearch = this.onClickSearch.bind(this)\n        this.onChangeDate = this.onChangeDate.bind(this)\n        console.log(\"Historyview componentDidMount\")\n        ApiProvider.getAllPatient()\n            .then(result => {\n                console.log(\"getAllPatient OK \" + JSON.stringify(result));\n                const setedUser = result.data.filter(item => item.transouttime !== \"unset\");\n                const unsetUser = result.data.filter(item => item.transouttime === \"unset\");\n                this.setState({\n                    allPatientDisplayData: setedUser,\n                    allPatientUnset: unsetUser,\n                    allPatientSet: setedUser\n                });\n            })\n            .catch(err => {\n                console.log(\"getAllPatient NG \" + JSON.stringify(err));\n            });\n    }\n\n    MouseClickTable(record) {\n        //console.log(this.state.MouseClick)\n        this.setState({\n            MouseClick: record\n        })\n    }\n\n    EditStyle(HISID, CASEID, TRANSINID, key) {\n        if (key === this.state.MouseClick) {\n            return (\n                <Link to={{ pathname: \"/nicu/patient/\" + HISID, state: { \"source\": [], \"HISID\": HISID, \"CASEID\": CASEID, \"BEDNUMBER\": 0, \"TYPE\": false, \"TRANSINID\": TRANSINID } }} style={{ height: \"40px\", width: \"100px\", borderRadius: \"4px\" }}>檢視</Link>\n            );\n        }\n        else return null\n    }\n\n    genderswitch(key) {\n        if (key === \"M\") {\n            return '男'\n        }\n        else {\n            return '女'\n        }\n    }\n\n    bornweeks(birthday) {\n        //console.log(Math.floor(birthday / 7))\n        //console.log(birthday % 7)\n        const weeks = Math.floor(birthday / 7)\n        const days = birthday % 7\n        if (days === 0) {\n            return weeks + '週歲'\n        }\n        else return weeks + '週' + days + '天'\n    }\n\n    exportClick() {\n        this.state.selectedRowsArray.map((data, index) => {\n            ApiProvider.exportJson(data.hospitalindex)\n                .then(result => {\n                    ApiProvider.downloadFile(result.data.filename)\n                        .then(resultD => {\n                            const url = window.URL.createObjectURL(new Blob([JSON.stringify(resultD.data)]));\n                            const link = document.createElement('a');\n                            link.href = url;\n                            link.setAttribute('download', result.data.filename);\n                            document.body.appendChild(link);\n                            link.click();\n                        }).catch(err => { })\n                })\n                .catch(err => { })\n        })\n    }\n\n    handleUpload = () => {\n        const { fileList } = this.state\n        const formData = new FormData()\n        fileList.forEach(file => {\n            formData.append('file', file)\n        })\n\n        this.setState({\n            uploading: true,\n        })\n\n        ApiProvider.uploadFile(formData)\n            .then(res => {\n                ApiProvider.importJson(res.data)\n                    .then(result => {\n                        ApiProvider.getAllPatient()\n                            .then(result => {\n                                const setedUser = result.data.filter(item => item.transouttime !== \"unset\");\n                                const unsetUser = result.data.filter(item => item.transouttime === \"unset\");\n                                this.setState({\n                                    allPatientDisplayData: setedUser,\n                                    allPatientUnset: unsetUser,\n                                    allPatientSet: setedUser\n                                });\n                            })\n                            .catch(err => {\n                                console.log(\"getAllPatient NG \" + JSON.stringify(err));\n                            });\n                    })\n                    .catch(err => { })\n            })\n            .catch(err => { })\n    }\n\n    deleteHistoryUser() {\n        this.state.selectedRowsArray.map((data, index) => {\n            ApiProvider.deletePatient(data.hospitalindex, data.hospitalnumber, data.id)\n                .then(res => {\n                    ApiProvider.getAllPatient()\n                        .then(result => {\n                            const setedUser = result.data.filter(item => item.transouttime !== \"unset\");\n                            const unsetUser = result.data.filter(item => item.transouttime === \"unset\");\n                            this.setState({\n                                allPatientDisplayData: setedUser,\n                                allPatientUnset: unsetUser,\n                                allPatientSet: setedUser\n                            });\n                        })\n                        .catch(err => {\n                            console.log(\"getAllPatient NG \" + JSON.stringify(err));\n                        });\n                })\n                .catch(err => { })\n        })\n    }\n\n    onChangeName(event) {\n        this.setState({ name: event.target.value })\n    }\n    onChangeHisid(event) {\n        this.setState({ hisid: event.target.value })\n    }\n    //onChangeDoctor(event) {\n    //this.setState({ doctor: event.target.value })\n    //}\n    onClickSearch() {\n        // ApiProvider.getAllPatient()\n        //     .then(result => {\n        //         const setedUser = result.data.filter(item => item.transouttime !== \"unset\" && item.hisid === this.state.hisid && item.pnamec === this.state.name);\n        //         const unsetUser = result.data.filter(item => item.transouttime === \"unset\" && item.hisid === this.state.hisid && item.pnamec === this.state.name);\n        //         console.log(this.state.transOuttime)\n        //         this.setState({\n        //             allPatientDisplayData: setedUser,\n        //             allPatientUnset: unsetUser,\n        //             allPatientSet: setedUser\n        //         });\n        //     })\n        //     .catch(err => {\n        //         console.log(\"getAllPatient NG \" + JSON.stringify(err));\n        //     });\n    }\n    onChangeDate(date, dateString) {\n        this.setState({ transOuttime: dateString })\n    }\n\n    Searchbar() {\n        const InputGroup = Input.Group;\n        const { RangePicker } = DatePicker;\n\n        return (\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <div style={{ fontSize: '16px' }}>\n                        個案姓名:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"輸入個案姓名\" onChange={this.onChangeName} value={this.state.name}></Input>\n                    </div>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        轉入時間:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        {/* <InputGroup compact> */}\n                        {/* <DatePicker placeholder=\"選擇轉出時間\" onChange={this.onChangeDate} /> */}\n                        <RangePicker style={{ width: \"250px\" }} format={\"YYYY/MM/DD\"} locale={\"zh_TW\"}\n                            placeholder={[\"請輸入日期\", \"請輸入日期\"]} onChange={this.onChangeDate} allowClear={false} />\n                        {/* </InputGroup> */}\n                    </div>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        病歷號碼:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"輸入病歷號碼\" onChange={this.onChangeHisid} value={this.state.hisid}></Input>\n                    </div>\n                </div>\n                {/*<div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        主治醫生:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"選擇主治醫師\" onChange={this.onChangeDoctor} value={this.state.doctor}></Input>\n                    </div>\n        </div>*/}\n                {/* <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <Button shape=\"circle\" icon=\"search\" onClick={this.onClickSearch} />\n                </div> */}\n            </div>\n        );\n    }\n\n    handleDisplaySwitchChange(event) {\n        // console.log(event.target.value)\n        console.log(this.state.allPatientSet)\n        console.log(this.state.allPatientUnset)\n        this.setState({\n            allPatientDisplayData: event.target.value == 'in' ? this.state.allPatientSet : this.state.allPatientUnset\n        })\n    }\n\n\n    render() {\n        // rowSelection object indicates the need for row selection\n        const rowSelection = {\n            onChange: (selectedRowKeys, selectedRows) => {\n                //console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows)\n                this.setState({ selectedRowsArray: selectedRows })\n            },\n            getCheckboxProps: record => ({\n                disabled: record.name === 'Disabled User', // Column configuration not to be checked\n                name: record.name,\n            }),\n        };\n        const columns = [\n            {\n                title: '病歷號碼',\n                dataIndex: 'id',\n                key: 'id',\n                width: \"10%\"\n            },\n            {\n                title: '個案名稱',\n                dataIndex: 'name',\n                key: 'name',\n                width: \"15%\"\n            },\n            {\n                title: '性別',\n                dataIndex: 'gender',\n                key: 'gender',\n                width: \"7%\"\n            },\n            {\n                title: '出生體重',\n                dataIndex: 'weight',\n                key: 'weight',\n                width: \"8%\"\n            },\n            {\n                title: '出生周數',\n                dataIndex: 'birweek',\n                key: 'birweek',\n                width: \"8%\"\n            },\n            {\n                title: '轉入時年齡',\n                dataIndex: 'transage',\n                key: 'transage',\n                width: \"10%\"\n            },\n            {\n                title: '院序號',\n                dataIndex: 'hospitalnumber',\n                key: 'hospitalnumber',\n                width: \"10%\"\n            },\n            {\n                title: '索引號',\n                dataIndex: 'hospitalindex',\n                key: 'hospitalindex',\n                width: \"17%\"\n            },\n            {\n                title: '轉入ICU時間',\n                dataIndex: 'transicutime',\n                key: 'transicutime',\n                width: \"10%\"\n            },\n            //{\n            //title: '主治醫師',\n            //dataIndex: 'maindoc',\n            //key: 'maindoc',\n            //width: \"10%\"\n            //},\n            {\n                dataIndex: 'clickstate',\n                key: 'clickstate',\n                width: \"5%\"\n            }\n        ];\n        function search(data, searchName) {\n            if (searchName === \"\" || searchName === undefined || searchName === null) {\n                return data\n            }\n            const filterData = data.filter(function (item, index, arr) {\n                console.log(item)\n                const fn = item.pnamec.toString().trim()\n                return fn.indexOf(searchName) >= 0\n            })\n            return filterData\n        }\n        function searchTime(data, searchTime) {\n            if (searchTime === \"\" || searchTime === undefined || searchTime === null) {\n                return data\n            }\n            const filterData = data.filter(function (item, index, arr) {\n                // console.log(item)\n                const fn = moment(item.transintime.toString().trim(), \"YYYYMMDD\").valueOf()\n                const st = moment(searchTime[0].toString().trim(), \"YYYYMMDD\").valueOf()\n                const et = moment(searchTime[1].toString().trim(), \"YYYYMMDD\").valueOf()\n                return st <= fn && fn <= et\n            })\n            return filterData\n        }\n\n        function searchNO(data, searchNO) {\n            if (searchNO === \"\" || searchNO === undefined || searchNO === null) {\n                return data\n            }\n            const filterData = data.filter(function (item, index, arr) {\n                console.log(item)\n                const HID = item.hisid.toString().trim()\n                return HID.match(searchNO)\n            })\n            return filterData\n        }\n        const rowData = this.state.allPatientDisplayData\n        const d = search(rowData, this.state.name)\n        const f = searchTime(d, this.state.transOuttime)\n        const H = searchNO(f, this.state.hisid)\n        const data = H.map((item, index) => {\n            return {\n                key: index,\n                id: item.hisid,\n                name: item.pnamec,\n                gender: this.genderswitch(item.psex),\n                weight: \"--\",\n                birweek: \"--\",\n                transage: \"--\",\n                hospitalnumber: item.caseid,\n                hospitalindex: item.transinid,\n                transicutime: item.transouttime,\n                maindoc: \"--\",\n                clickstate: this.EditStyle(item.hisid, item.caseid, item.transinid, index)\n            }\n        });\n\n        const { uploading, fileList } = this.state;\n        const props = {\n            onRemove: file => {\n                this.setState(state => {\n                    const index = state.fileList.indexOf(file);\n                    const newFileList = state.fileList.slice();\n                    newFileList.splice(index, 1);\n                    return {\n                        fileList: newFileList,\n                    };\n                });\n            },\n            beforeUpload: file => {\n                this.setState(state => ({\n                    fileList: [...state.fileList, file],\n                }));\n                return false;\n            },\n            fileList,\n            showUploadList: false\n        };\n        const handleDisplaySwitchChange = this.handleDisplaySwitchChange.bind(this);\n\n        return (\n            <div style={{ paddingLeft: \"24px\", paddingRight: \"24px\" }}>\n                <div style={{ fontSize: \"22px\", height: '50px', lineHeight: \"50px\" }}>\n                    歷史病歷管理\n                    <Button type=\"primary\" value=\"in\" style={{ borderRadius: \"50px\", fontSize: \"10px\", marginLeft: \"10px\" }} onClick={handleDisplaySwitchChange}>住院中</Button>\n                    <Button type=\"primary\" value=\"out\" style={{ borderRadius: \"50px\", fontSize: \"10px\", marginLeft: \"10px\" }} onClick={handleDisplaySwitchChange}>已轉出</Button>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\", height: '50px', gridColumnGap: \"10px\" }}>\n                    {this.Searchbar()}\n                    <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gridGap: \"10px\" }}>\n                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                            <Upload {...props}>\n                                <Button>\n                                    <Icon type=\"upload\" /> 選擇檔案\n                                </Button>\n                            </Upload>\n                            <Button\n                                onClick={this.handleUpload.bind(this)}\n                                disabled={fileList.length === 0}\n                                style={{ width: \"100%\" }}\n                            >\n                                匯入\n                            </Button>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                            <Button onClick={this.exportClick.bind(this)} style={{ width: \"100%\" }}>匯出</Button>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                            <Button onClick={this.deleteHistoryUser.bind(this)} style={{ width: \"100%\" }}>刪除</Button>\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <Table rowSelection={rowSelection} columns={columns} dataSource={data} onRow={record => {\n                        return {\n                            onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                            onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                        };\n                    }} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Historyview;\n","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport './Crosssectionvitalsignchart.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport X2JS from 'x2js';\n\nclass Crosssectionvitalsignchart extends Component {\n    state = {\n        change: false,\n        sourcedata: [],\n        prepickerdate: null,\n        presource: null,\n        preinterval: null\n    }\n\n    centermonitorApiDataGet() {\n        function formatTimer(interval, pickerdate) {\n            const endTimeStamp = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    start: moment(endTimeStamp - (24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                    interval: 0\n                }\n            }\n            if (interval === 1) {\n                return {\n                    start: moment(endTimeStamp - (3 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                    interval: 1\n                }\n            }\n            if (interval === 2) {\n                return {\n                    start: moment(endTimeStamp - (7 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                    interval: 2\n                }\n            }\n            return {\n                start: moment(endTimeStamp - (14 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                interval: 3\n            }\n        }\n        const { type, interval, PickerDate, HID, source, CID, svg_id } = this.props\n        const PHID = HID.toString().trim()\n        const PCID = CID.toString().trim()\n        // console.log(interval, PickerDate)\n        const optionvalue = formatTimer(interval, PickerDate)\n        if (source === \"CM\") {\n            if (type === \"abp\") {\n                ApiProvider.getPatientwardvalueBoxPlot(PHID, optionvalue.start, optionvalue.end, type, optionvalue.interval)\n                    .then(data => {\n                        console.log(data.data)\n                        d3.select(\"#\" + svg_id).remove()\n                        this.drawChart(data.data);\n                    })\n                    .catch(err => { console.log(err) })\n            }\n            if (type === \"hr\" || type === \"rr\" || type === \"spo2\") {\n                ApiProvider.getPatientwardvalueBoxPlot(PHID, optionvalue.start, optionvalue.end, type, optionvalue.interval)\n                    .then(data => {\n                        console.log(data.data)\n                        d3.select(\"#\" + svg_id).remove()\n                        this.drawChart(data.data);\n                    })\n                    .catch(err => { console.log(err) })\n            }\n            if (type === \"nbp\") {\n                ApiProvider.getVitalSignData(PHID, optionvalue.start, optionvalue.end, type)\n                    .then(data => {\n                        console.log(data.data)\n                        d3.select(\"#\" + svg_id).remove()\n                        this.drawChart(data.data);\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    })\n            }\n            if (type === \"bt\") {\n                d3.select(\"#\" + svg_id).remove()\n                this.drawChart([]);\n            }\n        }\n        if (source === \"NIS\") {\n            const xm2 = new X2JS()\n            const st = moment(optionvalue.start, \"YYYYMMDDHHmmss\").format(\"YYYYMMDDHHmm\")\n            const et = moment(optionvalue.end, \"YYYYMMDDHHmmss\").format(\"YYYYMMDDHHmm\")\n            const QDVS = ApiProvider.getQDVS(PCID, st, et)\n                .then(data => {\n                    return xm2.xml2js(data.data).outmsg.resconts.rescont\n                })\n                .catch(err => { console.log(err) })\n\n            const QOXY = ApiProvider.getQOXY(PCID, st, et)\n                .then(data => {\n                    return xm2.xml2js(data.data).outmsg.resconts.rescont\n\n                })\n                .catch(err => { console.log(err) })\n            Promise.all([QDVS, QOXY]).then(result => {\n                function FormatNISData(QDVS, QOXY, type) {\n                    var HRNISLIST = []\n                    var RRNISLIST = []\n                    var SBPNISLIST = []\n                    var DBPNISLIST = []\n                    var BTNISLIST = []\n                    var Spo2NISLIST = []\n                    if (Array.isArray(QDVS)) {\n                        for (let index = 0; index < QDVS.length; index++) {\n                            const element = QDVS[index];\n                            const hr = element.pluse\n                            const rr = element.breath\n                            const SBP = element.systolic\n                            const DBP = element.diastolic\n                            const BT = element.temperature\n                            const time = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                            HRNISLIST.push({\n                                Data: hr,\n                                Time: time\n                            })\n                            RRNISLIST.push({\n                                Data: rr,\n                                Time: time\n                            })\n                            SBPNISLIST.push({\n                                Data: SBP,\n                                Time: time\n                            })\n                            DBPNISLIST.push({\n                                Data: DBP,\n                                Time: time\n                            })\n                            BTNISLIST.push({\n                                Data: BT,\n                                Time: time\n                            })\n                        }\n                    }\n                    if (Array.isArray(QOXY)) {\n                        for (let index = 0; index < QOXY.length; index++) {\n                            const element = QOXY[index];\n                            const spo2 = element.concen\n                            const time = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                            Spo2NISLIST.push({\n                                Data: spo2,\n                                Time: time\n\n                            })\n                        }\n                    }\n                    console.log(Spo2NISLIST)\n                    if (type === \"hr\") { return HRNISLIST }\n                    if (type === \"rr\") { return RRNISLIST }\n                    if (type === \"spo2\") { return Spo2NISLIST }\n                    if (type === \"abp\") { return [SBPNISLIST, DBPNISLIST] }\n                    if (type === \"bt\") { return BTNISLIST }\n                    return []\n                }\n                // console.log(FormatNISData(result[0], result[1], type))\n                d3.select(\"#\" + svg_id).remove()\n                this.drawChart(FormatNISData(result[0], result[1], type))\n            })\n        }\n    }\n    componentDidUpdate() {\n\n        const { interval, PickerDate, HID, source } = this.props\n        const PrePickerDate = this.state.prepickerdate\n        if (PrePickerDate !== PickerDate) {\n            this.setState({ prepickerdate: this.props.PickerDate })\n            this.centermonitorApiDataGet()\n        }\n        const Presource = this.state.presource\n        if (Presource !== source) {\n            this.setState({ presource: source })\n            this.centermonitorApiDataGet()\n        }\n        const Preinterval = this.state.preinterval\n        if (interval !== Preinterval) {\n            this.setState({ preinterval: interval })\n            this.centermonitorApiDataGet()\n        }\n        const PreHID = this.state.prehid\n        if (HID !== PreHID) {\n            this.setState({ prehid: HID })\n            this.centermonitorApiDataGet()\n        }\n    }\n\n    componentDidMount() {\n\n        this.setState({\n            prepickerdate: this.props.PickerDate,\n            presource: this.props.source,\n            preinterval: this.props.interval,\n            prehid: this.props.prehid\n        })\n        this.centermonitorApiDataGet()\n\n    }\n    drawChart(sourcedata) {\n        function formatxArray(startTime, interval) {\n            var xAxisarray = []\n            if (interval === 0) {\n                for (let index = 0; index < 25; index++) {\n                    if (index % 4 === 0) {\n                        xAxisarray.push(startTime + (index * 60 * 60 * 1000))\n                    }\n                }\n            }\n            else if (interval === 1) {\n                for (let index = 0; index < 19; index++) {\n                    if (index % 2 === 0) {\n                        xAxisarray.push(startTime + (index * 4 * 60 * 60 * 1000))\n                    }\n                }\n            }\n            else if (interval === 2) {\n                for (let index = 0; index < 21; index++) {\n                    xAxisarray.push(startTime + (index * 60 * 60 * 1000 * 8))\n                }\n            }\n            else {\n                for (let index = 0; index < 14; index++) {\n                    xAxisarray.push(startTime + (index * 60 * 60 * 1000 * 24))\n                }\n            }\n            return xAxisarray\n        }\n\n        function formatbotaxis(time, interval) {\n            var xAxisarray = []\n            if (interval === 0) {\n                xAxisarray.push(startTime + (17 * 60 * 60 * 1000))\n            }\n            else if (interval === 1) {\n                for (let index = 0; index < 3; index++) {\n                    xAxisarray.push(startTime + (17 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000))\n                }\n            }\n            else if (interval === 2) {\n                for (let index = 0; index < 21; index++) {\n                    xAxisarray.push(time + (index * 60 * 60 * 1000 * 8))\n                }\n            }\n            else {\n                for (let index = 0; index < 14; index++) {\n                    xAxisarray.push(time + (index * 60 * 60 * 1000 * 24))\n                }\n            }\n            return xAxisarray\n        }\n\n        var formatHour = d3.timeFormat(\"%H\")\n\n        function multiFormat(date) {\n            return formatHour(date)\n        }\n\n\n        //vitaldays true:threeday\n        const {\n            id_key,\n            svg_id,\n            startTime,\n            endTime,\n            height,\n            width,\n            interval, //0:1天 1:3天 2:1週 3:2週 \n            axisBot,\n            axisTop,\n            circlrcolor,\n            max,\n            min,\n            upper,\n            lower,\n            source,\n            type\n        } = this.props\n\n        // const width = window.screen.availWidth * 0.25, height = 100, viewwidth = width - 50, rect_width = width / 46\n        const viewwidth = width - 50\n        // const EndTime = formatendtime(defaultdate)\n        // var vital_interval = formatintervaldays(EndTime, vitaldays)\n\n        var y = d3.scaleLinear()\n            .domain([min, max])\n            .range([height, 0])\n\n        var x = d3.scaleLinear()\n            .domain([startTime, endTime])\n            .range([0, viewwidth - 1])\n\n\n        var yAxis = d3.axisLeft(y)\n            .tickValues([min, max])\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(15);\n\n\n        const xAxisvalue = formatxArray(startTime, interval)\n        const xAxisbotvalue = formatbotaxis(startTime, interval)\n\n        var xAxis = d3.axisTop(x)\n            .tickValues(xAxisvalue)\n            .tickSize(0, 0)\n            .tickPadding(5)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n        var xAxisbot = d3.axisBottom(x)\n            .tickValues(xAxisbotvalue)\n            .tickSize(0, 0)\n            .tickPadding(height + 10)\n            .tickFormat(function (d) { return moment(d).format(\"MM/DD\") });\n\n        var svg\n        if (axisTop) {\n            svg = d3.select(\"#\" + id_key)\n                .append(\"svg\")\n                .attr(\"id\", svg_id)\n                .style(\"width\", width + 10)\n                .style(\"height\", height + 25)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + 50 + \",\" + 20 + \")\");\n        }\n        else {\n            if (axisBot) {\n                svg = d3.select(\"#\" + id_key)\n                    .append(\"svg\")\n                    .attr(\"id\", svg_id)\n                    .style(\"width\", width)\n                    .style(\"height\", height + 25)\n                    .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + 50 + \",\" + 5 + \")\");\n            }\n            else {\n\n                svg = d3.select(\"#\" + id_key)\n                    .append(\"svg\")\n                    .attr(\"id\", svg_id)\n                    .style(\"width\", width)\n                    .style(\"height\", height + 10)\n                    .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + 50 + \",\" + 5 + \")\");\n            }\n        }\n\n        if (axisTop) {\n            svg.append(\"g\")\n                .call(xAxis)\n                .attr(\"class\", \"axis\");\n        }\n\n        if (axisBot) {\n            svg.append(\"g\")\n                .call(xAxisbot)\n                .attr(\"class\", \"axis\");\n\n        }\n\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n        //上下橫線\n        svg.append('line')\n            .attr('x1', x(startTime))\n            .attr('y1', y(max))\n            .attr('x2', x(endTime))\n            .attr('y2', y(max))\n            .style('stroke', 'rgba(220,220,220,1)')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n        svg.append('line')\n            .attr('x1', x(startTime))\n            .attr('y1', y(min))\n            .attr('x2', x(endTime))\n            .attr('y2', y(min))\n            .style('stroke', 'rgba(220,220,220,1)')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n\n        if (interval === 0) {\n            for (let index = 0; index < 25; index++) {\n                if (index % 8 === 0) {\n                    svg.append('line')\n                        .attr('x1', x(startTime + (index * 60 * 60 * 1000)))\n                        .attr('y1', 0)\n                        .attr('x2', x(startTime + (index * 60 * 60 * 1000)))\n                        .attr('y2', height)\n                        .style('stroke', 'black')\n                        .style('stroke-width', 2);\n                }\n                else {\n                    svg.append('line')\n                        .attr('x1', x(startTime + (index * 60 * 60 * 1000)))\n                        .attr('y1', 0)\n                        .attr('x2', x(startTime + (index * 60 * 60 * 1000)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(220,220,220,1)')\n                        .style('stroke-width', 1)\n                        .style('stroke-dasharray', 5.5);\n                }\n            }\n\n            drawshadow(startTime, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n\n        }\n        if (interval === 1) {\n            for (let index = 0; index < 19; index++) {\n                if (index % 2 === 0) {\n                    svg.append('line')\n                        .attr('x1', x(startTime + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y1', 0)\n                        .attr('x2', x(startTime + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y2', height)\n                        .style('stroke', 'black')\n                        .style('stroke-width', 2);\n                }\n                else {\n                    svg.append('line')\n                        .attr('x1', x(startTime + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y1', 0)\n                        .attr('x2', x(startTime + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(220,220,220,1)')\n                        .style('stroke-width', 1)\n                        .style('stroke-dasharray', 5.5);\n                }\n            }\n\n            drawshadow(startTime, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n        }\n        if (interval === 2) {\n            for (let index = 0; index < 22; index++) {\n                svg.append('line')\n                    .attr('x1', x(startTime + (index * 60 * 60 * 1000 * 8)))\n                    .attr('y1', 0)\n                    .attr('x2', x(startTime + (index * 60 * 60 * 1000 * 8)))\n                    .attr('y2', height)\n                    .style('stroke', 'black')\n                    .style('stroke-width', 1);\n            }\n\n            drawshadow(startTime, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n        }\n        if (interval === 3) {\n            for (let index = 0; index < 15; index++) {\n                svg.append('line')\n                    .attr('x1', x(startTime + (index * 60 * 60 * 1000 * 24)))\n                    .attr('y1', 0)\n                    .attr('x2', x(startTime + (index * 60 * 60 * 1000 * 24)))\n                    .attr('y2', height)\n                    .style('stroke', 'black')\n                    .style('stroke-width', 1);\n            }\n\n            drawshadow(startTime, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n        }\n\n        function formatBox(startTime, interval) {\n            function interFormat(startTime, interval) {\n                var TimeArray = []\n                for (let index = 0; index < interval; index++) {\n                    if (interval === 24) {\n                        const boxTime = startTime + (30 * 60 * 1000) + (index * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 18) {\n                        const boxTime = startTime + (2 * 60 * 60 * 1000) + (index * 4 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 21) {\n                        const boxTime = startTime + (4 * 60 * 60 * 1000) + (index * 8 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else {\n                        const boxTime = startTime + (12 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                }\n                return TimeArray\n            }\n            if (interval === 0) {\n                return interFormat(startTime, 24)\n            }\n            if (interval === 1) {\n                return interFormat(startTime, 18)\n            }\n            if (interval === 2) {\n                return interFormat(startTime, 21)\n            }\n            return interFormat(startTime, 14)\n        }\n        function formatBoxWidth(viewwidth, interval) {\n            if (interval === 0) {\n                return viewwidth / 24\n            }\n            if (interval === 1) {\n                return viewwidth / 18\n            }\n            if (interval === 2) {\n                return viewwidth / 21\n            }\n            return viewwidth / 14\n        }\n        function drawshadow(startTime, interval, lower, upper, type) {\n            const LimitBoxTimer = formatBox(startTime, interval)\n            for (let index = 0; index < LimitBoxTimer.length; index++) {\n                const boxwidth = formatBoxWidth(width, interval)\n                // console.log(boxwidth)\n                const element = LimitBoxTimer[index];\n                svg.append('line')\n                    .attr('x1', x(element))\n                    .attr('y1', y(lower))\n                    .attr('x2', x(element))\n                    .attr('y2', y(upper))\n                    .style('stroke', circlrcolor)\n                    .style('opacity', 0.7)\n                    .style('stroke-width', boxwidth)\n\n                if (type === \"nbp\" || type === \"abp\") {\n                    svg.append('line')\n                        .attr('x1', x(element))\n                        .attr('y1', y(35))\n                        .attr('x2', x(element))\n                        .attr('y2', y(55))\n                        .style('stroke', circlrcolor)\n                        .style('opacity', 0.3)\n                        .style('stroke-width', boxwidth)\n                }\n            }\n        }\n        function drawData(type, source, sourcedata, interval, boxwidth) {\n            function formatShift(interval) {\n                if (interval === 0) {\n                    return 30 * 60 * 1000\n                }\n                if (interval === 1) {\n                    return 2 * 60 * 60 * 1000\n                }\n                if (interval === 2) {\n                    return 4 * 60 * 60 * 1000\n                }\n                return 12 * 60 * 60 * 1000\n            }\n            // console.log(source)\n            if (source === \"CM\") {\n                if (type === \"abp\") {\n                    const dataAbps = sourcedata.abps\n                    const dataAbpd = sourcedata.abpd\n                    for (let index = 0; index < dataAbpd.length; index++) {\n                        const element = dataAbpd[index];\n                        const q1 = element.Q1\n                        const q2 = element.Q2\n                        const q3 = element.Q3\n                        const q4 = element.Q4\n                        const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + formatShift(interval)\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(q1))\n                            .attr(\"y2\", y(q4))\n                            .attr(\"stroke\", circlrcolor)\n                            .style('opacity', 0.5)\n                            // .attr(\"stroke\", \"blcak\")\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q2) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style('opacity', 0.5)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg\n                            .selectAll(\"toto\")\n                            .data([q1, q4])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('opacity', 0.5)\n                            .style('stroke-width', 1);\n                    }\n                    for (let index = 0; index < dataAbps.length; index++) {\n                        const element = dataAbps[index];\n                        const q1 = element.Q1\n                        const q2 = element.Q2\n                        const q3 = element.Q3\n                        const q4 = element.Q4\n                        const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + formatShift(interval)\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(q1))\n                            .attr(\"y2\", y(q4))\n                            .attr(\"stroke\", circlrcolor)\n                            // .attr(\"stroke\", \"blcak\")\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q2) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg\n                            .selectAll(\"toto\")\n                            .data([q1, q4])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1);\n                    }\n                }\n                if (type === \"hr\" || type === \"rr\" || type === \"spo2\") {\n                    for (let index = 0; index < sourcedata.length; index++) {\n                        const element = sourcedata[index];\n                        const q1 = element.Q1\n                        const q2 = element.Q2\n                        const q3 = element.Q3\n                        const q4 = element.Q4\n                        const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + formatShift(interval)\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(q1))\n                            .attr(\"y2\", y(q4))\n                            .attr(\"stroke\", circlrcolor)\n                            // .attr(\"stroke\", \"blcak\")\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q2) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg\n                            .selectAll(\"toto\")\n                            .data([q1, q4])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1);\n\n                    }\n                }\n                if (type === \"nbp\") {\n                    for (let index = 0; index < sourcedata.length; index++) {\n                        const element = sourcedata[index];\n                        const Xtime = moment(element.Time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                        const SBP = element.SBP\n                        const DBP = element.DBP\n                        // console.log(SBP)\n                        if (SBP === 0 || DBP === 0) {\n                            continue\n                        }\n                        else {\n                            // console.log(element)\n                            svg.append('circle')\n                                .attr('cx', x(Xtime))\n                                .attr('cy', y(SBP))\n                                .attr('r', 3)\n                                .style('fill', circlrcolor)\n\n\n                            svg.append('circle')\n                                .attr('cx', x(Xtime))\n                                .attr('cy', y(DBP))\n                                .attr('r', 3)\n                                .style('opacity', 0.5)\n                                .style('fill', circlrcolor)\n                        }\n\n                    }\n                }\n            }\n            else {\n                if (type === \"abp\" || type === \"nbp\") {\n                    if (sourcedata === undefined) {\n                        return null\n                    }\n                    if (sourcedata.length === 0) {\n                        return null\n                    }\n                    const SBP = sourcedata[0]\n                    const DBP = sourcedata[1]\n                    for (let index = 0; index < SBP.length; index++) {\n                        const element = SBP[index];\n                        svg.append('circle')\n                            .attr('cx', x(element.Time))\n                            .attr('cy', y(element.Data))\n                            .attr('r', 3)\n                            .style('fill', circlrcolor)\n\n                    }\n\n                    for (let index = 0; index < DBP.length; index++) {\n                        const element = DBP[index];\n                        svg.append('circle')\n                            .attr('cx', x(element.Time))\n                            .attr('cy', y(element.Data))\n                            .attr('r', 3)\n                            .style('fill', circlrcolor)\n                            .style('opacity', 0.5)\n\n                    }\n                }\n                else {\n                    for (let index = 0; index < sourcedata.length; index++) {\n                        const element = sourcedata[index];\n                        svg.append('circle')\n                            .attr('cx', x(element.Time))\n                            .attr('cy', y(element.Data))\n                            .attr('r', 3)\n                            .style('fill', circlrcolor)\n\n                    }\n                }\n\n            }\n        }\n    }\n\n    changestate() {\n        this.setState({\n            change: !this.state.change\n        })\n    }\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default Crosssectionvitalsignchart;","import React, { Component } from 'react';\nimport dragdown from '../../Image/svg/dragdown.svg'\n\nclass Warningsetting extends Component {\n    state = {\n        dragstate: false\n    }\n    onClickdrag = () => {\n        this.setState(\n            {\n                dragstate: !this.state.dragstate\n            }\n        )\n    }\n    render() {\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div style={{ height: 50, background: \"rgba(238,238,238,1)\", padding: \"10px 16px\", display: \"flex\", justifyContent: \"space-between\" }}>\n                    <div style={{ display: \"flex\" }}>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>2019-06-01 08:00</div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", marginLeft: \"20px\" }}>\n                            <div style={{ border: \"red 1px solid\", borderRadius: \"4px\", cursor: \"pointer\", color: \"red\", padding: \"5px 20px\", background: \"white\" }}>刪除</div>\n                        </div>\n                    </div>\n                    <div onClick={this.onClickdrag} style={{ transform: this.state.dragstate ? \"scaleY(1)\" : \"scaleY(-1)\" }}>\n                        <img src={dragdown} alt=\"dragdown\"></img>\n                    </div>\n                </div>\n                <div style={{ display: this.state.dragstate ? \"block\" : \"none\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 4fr 1fr 4fr\" }}>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>HR</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>ABP</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>NBP</div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>SpO2</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>BT</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>RR</div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ height: 50, padding: \"10px 16px\", display: \"flex\", alignItems: \"center\" }}>生效時間範圍:2019-06-01 08:00~2019-06-31 08:00</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Warningsetting","import React, { Component } from 'react';\nimport {Input,Button,DatePicker,Select} from 'antd'\n\nclass Addwarningsetting extends Component {\n    onSelectDate = (dates, dataStrings) => {\n        console.log(\"dates\" + JSON.stringify(dates));// \"2019-12-11T08:17:08.350Z\"\n        console.log(\"dataStrings\" + JSON.stringify(dataStrings));// \"2019-12-11\"\n        this.props.dateCallback(dataStrings);\n    }\n    onSelectHour = value => {\n        console.log(value);\n        this.props.hourCallback(value);\n    }\n    render() {\n        //generate select child (hours of a day)\n        const { Option } = Select;\n        const children = [];\n        for (let i = 0; i < 23; i++) {\n            children.push(<Option key={i.toString()}>{i.toString()}</Option>);\n        }\n        return (\n            <div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"100px 150px 150px\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", border: \"1px rgba(238,238,238,1) solid\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"1px rgba(238,238,238,1) solid\" }}>HR</div>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                                    <Button type=\"primary\">預設值</Button>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", border: \"1px rgba(238,238,238,1) solid\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"1px rgba(238,238,238,1) solid\" }}>ABP</div>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>SBP圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>DBP圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                                    <Button type=\"primary\">預設值</Button>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", border: \"1px rgba(238,238,238,1) solid\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"1px rgba(238,238,238,1) solid\" }}>NBP</div>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                                    <Button type=\"primary\">預設值</Button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"100px 150px 150px\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", border: \"1px rgba(238,238,238,1) solid\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"1px rgba(238,238,238,1) solid\" }}>SPO2</div>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                                    <Button type=\"primary\">預設值</Button>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", border: \"1px rgba(238,238,238,1) solid\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"1px rgba(238,238,238,1) solid\" }}>BT</div>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                                    <Button type=\"primary\">預設值</Button>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", border: \"1px rgba(238,238,238,1) solid\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"1px rgba(238,238,238,1) solid\" }}>RR</div>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                                    <Button type=\"primary\">預設值</Button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", marginTop: \"10px\" }}>\n                    <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>設定生效時間:</div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <DatePicker onChange={this.onSelectDate} style={{ width: \"70%\" }} />\n                        <Select defaultValue=\"0\" onChange={this.onSelectHour} style={{ width: \"20%\", marginLeft: \"8px\" }}>\n                            {children}\n                        </Select>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Addwarningsetting","import React, { Component } from 'react';\nimport { Select, Modal, Tabs, Icon } from 'antd';\nimport Crosssectionvitalsignchart from './Crossectionvitalsignchart'\nimport Warningsetting from './Warningsettinglist'\nimport Addwarningsetting from './Addnewwaring'\nimport './Vitalsign.scss'\nimport { formatxArrayhalf, formatendtime } from '../../Function/Timeformat'\nimport { simulationCentermonitordata, simulationnisdata } from '../../Function/Wardstate'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\n\nclass Vitalsign extends Component {\n\n    state = {\n        vital_days: 0, //false:一天 true:三天\n        source: \"CM\", //false:中央站 true:NIS\n        visible: false,\n        visibleConflict: false,\n        chackstate_one: 0,\n        chackstate_three: 0,\n        datasource: null,\n        addNewWarningDateStr: null,\n        addNewWarningHourStr: null,\n\n        CenterMonitorValue: null\n    }\n\n    componentDidMount() {\n        const startTime = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf() - (60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\")\n        const endTime = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf()).format(\"YYYYMMDDHHmmss\")\n        const PHISTNUM = this.props.caseinfo.HISID.toString().trim()\n        this.getVitalSignData(startTime, endTime, PHISTNUM)\n    }\n\n    getVitalSignData(startTime, EndTime, Phistnum) {\n        ApiProvider.getPatientwardvalueMedian(Phistnum, startTime, EndTime)\n            .then(data => {\n                console.log(data.data)\n                this.setState({\n                    CenterMonitorValue: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n                this.setState({\n                    CenterMonitorValue: null\n                })\n            })\n    }\n\n    onVitalCheck() {\n        var gridarray = []\n        if (this.state.vital_days === 1) {\n            for (let index = 0; index < 18; index++) {\n                const checknumber = index + 1\n                if (checknumber === this.state.chackstate_three) {\n                    gridarray.push(<div key={index} style={{ height: 330, width: \"100%\", border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_three(checknumber)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ height: 330, width: \"100%\" }} onClick={() => this.onClickCheckgrid_three(checknumber)}></div>)\n            }\n        }\n        else {\n            for (let index = 0; index < 24; index++) {\n                const checknumber = index + 1\n                if (checknumber === this.state.chackstate_one) {\n                    gridarray.push(<div key={index} style={{ height: 330, width: \"100%\", border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_one(checknumber)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ height: 330, width: \"100%\" }} onClick={() => this.onClickCheckgrid_one(checknumber)}></div>)\n            }\n        }\n        return gridarray;\n    }\n\n    onClickCheckgrid_one(number) {\n        //1:7 2:8 3:9 ........\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (24 * 60 * 60 * 1000)\n        const endtime = ST + (number * 60 * 60 * 1000)\n        const starttime = endtime - 60 * 60 * 1000\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ chackstate_one: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n    onClickCheckgrid_three(number) {\n        console.log(number)\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (3 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 4) * 60 * 60 * 1000)\n        const starttime = endtime - (4 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ chackstate_three: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleSelectDate = dataStrings => {\n        //console.log(\"dataStrings\"+dataStrings);\n        this.setState({\n            addNewWarningDateStr: dataStrings\n        })\n    }\n\n    handleSelectHour = hourString => {\n        //console.log(\"hourString\"+hourString);\n        this.setState({\n            addNewWarningHourStr: hourString\n        })\n    }\n\n    handleOk = e => {\n        //console.log(e);\n        console.log(\"# add warning time: \" + this.state.addNewWarningDateStr + \"/\" + this.state.addNewWarningHourStr);\n        this.setState({\n            visibleConflict: true\n        });\n    };\n\n    handleOkConflict = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n            visibleConflict: false\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancelConflict = e => {\n        console.log(e);\n        this.setState({\n            visible: true,\n            visibleConflict: false,\n        });\n    };\n\n    sourcehandleChange = (value) => {\n        this.setState({ source: value })\n    }\n\n\n    intervalhandleChange = (value) => {\n\n        // this.vitalDataGet(value, PickerDate)\n        this.setState({\n            vital_days: value,\n            chackstate_one: 0,\n            chackstate_three: 0,\n            // datasource: this.switchdata(value, this.state.source)\n\n        })\n\n    }\n\n\n    switchdata(value, sourcefrom) {\n        const { PickerDate } = this.props\n\n        function changevitaldays(vitaldays) {\n            if (vitaldays === 3) {\n                return 18\n            }\n            else {\n                return 24\n            }\n        }\n        var interval\n        if (value === null && value === undefined) {\n\n            interval = this.state.vital_days\n        }\n        else {\n\n            interval = value\n        }\n        const starttime = formatendtime(PickerDate) - (interval * 24 * 60 * 60 * 1000)\n        if (sourcefrom) {\n            const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n            const data = simulationnisdata(datatime, changevitaldays(interval))\n            return data\n        }\n        else {\n\n            const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n            const data = simulationCentermonitordata(datatime, changevitaldays(interval))\n            return data\n        }\n    }\n\n\n    switch_source(bool) {\n        this.setState(\n            {\n                source: bool,\n                datasource: this.switchdata(this.state.vital_days, bool)\n            });\n    }\n\n    render() {\n        function centervalueNull(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            return value\n        }\n        function centervaluetoNull(value) {\n            function FilterList(DataList, type) {\n                const filterData = DataList.filter(function (value, index, arr) {\n                    return value.type === type\n                })\n                if (filterData.length === 0) {\n                    return null\n                }\n                console.log(filterData)\n                return filterData[0].Mid\n            }\n            if (value === undefined || value === null) {\n                return {\n                    hr: null,\n                    rr: null,\n                    bt: null,\n                    spo2: null,\n                    abpd: null,\n                    abpm: null,\n                    abps: null,\n                    nbpm: null,\n                    nbps: null,\n                    nbpd: null\n                }\n            }\n            return {\n                hr: FilterList(value, \"hr\"),\n                rr: FilterList(value, \"rr\"),\n                bt: FilterList(value, \"bt\"),\n                spo2: FilterList(value, \"spo2\"),\n                abpd: FilterList(value, \"abpd\"),\n                abpm: FilterList(value, \"abpm\"),\n                abps: FilterList(value, \"abps\"),\n                nbpd: FilterList(value, \"nbpd\"),\n                nbps: FilterList(value, \"nbps\"),\n                nbpm: FilterList(value, \"nbpm\"),\n            }\n        }\n        const { Option } = Select;\n        const { TabPane } = Tabs;\n        const width = window.screen.availWidth * 0.25\n        const waringsettingarray = []\n        for (let index = 0; index < 20; index++) {\n            waringsettingarray.push(<Warningsetting key={index}></Warningsetting>)\n\n        }\n        const handleSelectDate = this.handleSelectDate;\n        const handleSelectHour = this.handleSelectHour;\n        const centervalue = centervaluetoNull(this.state.CenterMonitorValue)\n\n\n        function vitaldaysBool(vitaldays) {\n            if (vitaldays === 3) {\n                return true\n            }\n            return false\n        }\n\n        function formatPickerTimer(pickerdate, interval) {\n            if (interval === 0) {\n                return {\n                    startTime: pickerdate + (7 * 60 * 60 * 1000),\n                    endTime: pickerdate + (31 * 60 * 60 * 1000)\n                }\n            }\n            else {\n                return {\n                    startTime: pickerdate + (31 * 60 * 60 * 1000) - (3 * 24 * 60 * 60 * 1000),\n                    endTime: pickerdate + (31 * 60 * 60 * 1000)\n                }\n\n            }\n        }\n        const pickerTimer = formatPickerTimer(this.props.PickerDate, this.state.vital_days)\n        const PickerDate = this.props.PickerDate\n        // console.log(hrdatasource)\n        return (\n            <div>\n                <Modal\n                    title=\"生命徵象警示範圍設定\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    width={1000}>\n                    <Tabs defaultActiveKey=\"1\">\n                        <TabPane tab=\"新增警示設定\" key=\"1\">\n                            <Addwarningsetting dateCallback={handleSelectDate} hourCallback={handleSelectHour}></Addwarningsetting>\n                        </TabPane>\n                        <TabPane tab=\"警示設定清單\" key=\"2\">\n                            <div style={{ maxHeight: \"400px\", overflow: \"auto\" }}>\n                                {waringsettingarray}\n                            </div>\n                        </TabPane>\n                    </Tabs>\n                </Modal>\n                <Modal\n                    title=\"您設定的生效時間範圍與以下的歷史變更紀錄時間衝突，是否確定要覆蓋？\"\n                    visible={this.state.visibleConflict}\n                    onOk={this.handleOkConflict}\n                    onCancel={this.handleCancelConflict}\n                    width={1000}>\n                    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                        <Icon type=\"info-circle\" style={{ color: \"darkorange\", width: \"24px\", height: \"24px\" }} />\n                        <div style={{ marginLeft: \"8px\" }}>\n                            <p>點選\"確定\"將覆蓋資料，點選\"取消\"回到設定頁面</p>\n                            <p>1. HR：</p>\n                            <p>舊設定值：2019-08-01 ~ 2019-08-11</p>\n                            <p>新設定值：2019-08-01 ~ 2019-08-20</p>\n                        </div>\n                    </div>\n                </Modal>\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', height: \"50px\", backgroundColor: \"#cccccc\", padding: \"0px 5px\" }}>\n                    <div style={{ display: 'flex', alignItems: \"center\" }}>\n                        <t1>Vital Sign</t1>\n                        <Select defaultValue={\"CM\"} style={{ width: 160, marginLeft: \"16px\" }} onChange={this.sourcehandleChange}>\n                            <Option value={\"CM\"}>Center Monitor</Option>\n                            <Option value={\"NIS\"}>NIS</Option>\n                        </Select>\n                        <Select defaultValue={0} style={{ width: 90, marginLeft: \"15px\" }} onChange={this.intervalhandleChange}>\n                            <Option value={0}>一天</Option>\n                            <Option value={1}>三天</Option>\n                        </Select>\n                    </div>\n                    {/* <Button width={90} type=\"primary\" onClick={this.showModal}>閾值調整</Button> */}\n                </div>\n                <div style={{ borderRadius: \"4px\", border: \"rgba(232,232,232,1) 1px solid\", height: \"400px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"80px 1fr 80px 1fr\" }}>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#779F50\", display: \"flex\", justifyContent: \"center\" }}>HR</div>\n                                    <div style={{ fontSize: \"2rem\", color: \"#779F50\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.hr)}</div>\n                                </div>\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>NBP</div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.nbpd)}/{centervalueNull(centervalue.nbps)}</div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>({centervalueNull(centervalue.nbpm)})</div>\n                                </div>\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>ABP</div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.abpd)}/{centervalueNull(centervalue.abps)}</div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>({centervalueNull(centervalue.abpm)})</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ position: \"relative\" }}>\n                            <div style={{ position: \"absolute\", top: 20, left: 50, width: width - 50, height: 330 }}>\n                                <div style={{ display: \"grid\", gridTemplateColumns: vitaldaysBool(this.state.vital_days) ? \"repeat(18, 1fr)\" : \"repeat(24,1fr)\" }}>\n                                    {this.onVitalCheck()}\n                                </div>\n                            </div>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"HR_svg\"}\n                                id_key={\"HR_div\"}\n                                type={\"hr\"}\n                                source={this.state.source}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={100}\n                                upper={160}\n                                axisBot={false}\n                                axisTop={true}\n                                circlrcolor=\"#779F50\"\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={200}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"NBP_svg\"}\n                                id_key={\"NBP_div\"}\n                                type={\"nbp\"}\n                                source={this.state.source}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={55}\n                                upper={75}\n                                axisBot={false}\n                                axisTop={false}\n                                circlrcolor={\"#C12528\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={100}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"ABP_svg\"}\n                                id_key={\"ABP_div\"}\n                                type={\"abp\"}\n                                source={this.state.source}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={55}\n                                upper={75}\n                                axisBot={true}\n                                axisTop={false}\n                                circlrcolor={\"#C12528\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={100}>\n                            </Crosssectionvitalsignchart>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#4773B8\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>\n                                        SpO<sub style={{ bottom: \"-1em\" }}>2</sub>\n                                    </div>\n                                    <div style={{ fontSize: \"2rem\", color: \"#4773B8\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.spo2)}%</div>\n                                </div>\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#7F3DB5\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>BT</div>\n                                    <div style={{ fontSize: \"2rem\", color: \"#7F3DB5\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>--</div>\n                                </div>\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#DE7531\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>RR</div>\n                                    <div style={{ fontSize: \"2rem\", color: \"#DE7531\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.rr)}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ position: \"relative\" }}>\n                            <div style={{ position: \"absolute\", top: 20, left: 50, width: width - 50, height: 330 }}>\n                                <div style={{ display: \"grid\", gridTemplateColumns: vitaldaysBool(this.state.vital_days) ? \"repeat(18, 1fr)\" : \"repeat(24,1fr)\" }}>\n                                    {this.onVitalCheck()}\n                                </div>\n                            </div>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"SpO2_svg\"}\n                                id_key={\"SpO2_div\"}\n                                type={\"spo2\"}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={90}\n                                upper={100}\n                                axisBot={false}\n                                axisTop={true}\n                                circlrcolor={\"#4773B8\"}\n                                colorshadow={\"#4773B8\"}\n                                min={60}\n                                max={100}\n                                source={this.state.source}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"BT_svg\"}\n                                id_key={\"BT_div\"}\n                                type={\"bt\"}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                source={this.state.source}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={36}\n                                upper={38}\n                                axisBot={false}\n                                axisTop={false}\n                                circlrcolor={\"#7F3DB5\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={33}\n                                max={48}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"RR_svg\"}\n                                id_key={\"RR_div\"}\n                                type={\"spo2\"}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={20}\n                                upper={60}\n                                axisBot={true}\n                                axisTop={false}\n                                circlrcolor={\"#DE7531\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={100}\n                                source={this.state.source}>\n                            </Crosssectionvitalsignchart>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Vitalsign;","import React, { Component } from 'react';\nimport { Button, DatePicker, Checkbox } from 'antd';\nimport moment from 'moment';\nimport displaylogo from '../Image/svg/filter.svg'\nimport { daysdiff} from '../Function/Timeformat'\nimport { pregancyweeksanddays } from '../Function/Wardbedfunction'\nimport './Controlbar.scss'\n// import * as ApiProvider from '../API/ApiProvider';\nimport * as WardState from '../Function/Wardstate'\n\nclass Controlbar extends Component {\n    state = {\n        display_Mode: false,\n        item: this.props.item_array,\n        scrollstate: 0,\n    }\n    sendData = (itwm_array) => {\n        this.props.parentCallback(itwm_array);\n    }\n\n\n    sendDateData = (PickerDate) => {\n        this.props.parentDateCallback(PickerDate);\n    }\n    //快速滑動\n    scrollToAnchor = (anchorName) => {\n        if (anchorName) {\n            let anchorElement = document.getElementById(anchorName);\n            if (anchorElement) { anchorElement.scrollIntoView(); }\n        }\n    }\n    onChange = (checkedValues) => {\n        this.sendData(checkedValues)\n\n    }\n    onDateChange = (date, dateString) => {\n        this.sendDateData(date.valueOf())\n    }\n    open_display() {\n        this.setState({\n            display_Mode: !this.state.display_Mode\n        })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo, PickerDate } = this.props\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const btemp = bTime - (6 * day)\n                bronDate <= btemp && this.sendDateData(bTime)\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD')).valueOf()\n                this.sendDateData(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const atemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= atemp && this.sendDateData(aTime)\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n\n        const btn_style = {\n            unclick_style: { borderRadius: \"16px\", color: \"rgba(245, 166, 35, 1)\", border: \"rgba(245, 166, 35, 1) 1px solid\" }\n        }\n\n\n\n        function Monthformat(month) {\n            return month + 1\n        }\n        function timeformat(timestring) {\n            return new Date(timestring).getFullYear() + \"/\" + Monthformat(new Date(timestring).getMonth()) + \"/\" + new Date(timestring).getDate()\n        }\n        function valueFormat(value) {\n            if (value === \"\" || value === null || value === undefined) {\n                return \"--\"\n            }\n            return value.toString()\n        }\n        function valueBornWeight(value) {\n            if (value === \"\" || value === null || value === undefined || value === 0) {\n                return \"\"\n            }\n            return value.toString() + \"g → \"\n        }\n        const display_style = {\n            displye_mode: { position: \"absolute\", right: '0px', top: \"50px\", width: \"200px\", background: \"white\", boxShadow: \"3px 3px 12px\", zIndex: \"100\" },\n            non_display_mode: { display: \"none\" },\n            check_area: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\" },\n            check_text: { padding: \"10px\", width: \"140px\", borderRadius: \"4px\", borderColor: 'rgba(0, 0, 0, 0.15)', borderStyle: \"solid\", borderWidth: \"1px\", marginLeft: \"10px\" }\n        }\n\n        function disabledDate(current) {\n            // Can not select days before today and today\n            const endvalue = moment(caseinfo.PBASINGNINFO.PBIRTHDT, 'YYYYMMDD')\n            return endvalue.endOf('day') > current || current > moment().endOf('day')\n        }\n\n        const { caseinfo, btnlist, PickerDate } = this.props\n        const weightList = caseinfo.WEIGHT\n        const Birthday = caseinfo.PBASINGNINFO.PBIRTHDT\n        console.log(Birthday)\n        const BornWeight = WardState.BornWeight(weightList, Birthday)\n        const DayWeight = WardState.selectweight(weightList, PickerDate)\n        const btn = btnlist.map(\n            (item, index) => <Button onClick={this.scrollToAnchor.bind(this, item.scrollpoint)} key={index} style={btn_style.unclick_style}>\n                <t3>{item.name}</t3>\n            </Button>\n        )\n        console.log(moment(PickerDate))\n        return (\n            <div>\n                <div className='controlbarlayout'>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"140px 120px auto\", gridColumnGap: \"5px\" }}>\n                        <DatePicker width={140} onChange={this.onDateChange} value={moment(PickerDate)} allowClear={false} showToday={false} disabledDate={(current) => { return current > moment().startOf(\"day\") || current < moment(Birthday, \"YYYYMMDD\").add(-1,\"days\").endOf(\"day\") }} />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"2px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                        <div style={{ display: 'grid', gridTemplateColumns: \"repeat(3,auto)\", gridColumnGap: \"5px\" }}>\n                            <centerstyle><t2>週數:[{caseinfo.WEEK_BORN}+{caseinfo.DAY_BORN}]&rarr;{pregancyweeksanddays(caseinfo.WEEK_BORN, caseinfo.DAY_BORN, moment(Birthday, 'YYYYMMDD').format('YYYY/MM/DD'))}</t2></centerstyle>\n                            <centerstyle><t2>體重:{valueBornWeight(BornWeight)}{valueFormat(DayWeight)}g</t2></centerstyle>\n                            <centerstyle><t2>住院第{daysdiff(moment(PickerDate).format('YYYY/MM/DD'), moment(caseinfo.TRANSINDT, 'YYYYMMDD').format('YYYY/MM/DD'))}天</t2></centerstyle>\n                        </div>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: 'center', position: \"relative\" }}>\n                        <t2>項目切換：</t2>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,auto)\", gridColumnGap: \"5px\" }}>{btn}</div>\n                        <div onClick={() => this.open_display()} style={{ cursor: \"pointer\", marginLeft: \"5px\" }}>\n                            <img src={displaylogo} alt='displaylogo' style={{ width: '15px', height: '15px' }}></img>\n                        </div>\n                        <div style={this.state.display_Mode ? display_style.displye_mode : display_style.non_display_mode}>\n                            <t2 className='controlmoduletitle'>Displayed</t2>\n                            <div style={{ marginTop: \"10px\", marginBottom: \"20px\" }}>\n                                <Checkbox.Group defaultValue={this.state.item} id={\"checkbox_group\"} style={{ width: '100%', display: \"grid\", gridTemplateRows: \"repeat(6,1fr)\", gridRowGap: \"5px\" }} onChange={this.onChange}>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={0}></Checkbox>\n                                        <t3 style={display_style.check_text}>Vital Sign & I/O</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={1} ></Checkbox>\n                                        <t3 style={display_style.check_text}>Lab</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={2}></Checkbox>\n                                        <t3 style={display_style.check_text}>RT</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={3}></Checkbox>\n                                        <t3 style={display_style.check_text}>Order</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={4}></Checkbox>\n                                        <t3 style={display_style.check_text}>Schedule</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={5}></Checkbox>\n                                        <t3 style={display_style.check_text}>To Do List</t3>\n                                    </div>\n                                </Checkbox.Group>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className='boxshadow'></div>\n            </div >\n\n        );\n    }\n}\n\nexport default Controlbar;\n","import React, { Component } from 'react';\nimport './iopage.scss'\nimport moment from 'moment';\nimport * as WardState from '../Function/Wardstate'\nimport * as ApiProvider from '../API/ApiProvider'\nimport * as ApiGithub from '../API/ApiGithub'\nimport X2JS from 'x2js';\nimport * as QDCList from '../Resource/QDC'\n\nclass IOpage extends Component {\n    state = {\n        QDC: [],\n        PreStatus: null,\n        PreIntervalStatus: null,\n        PreCID: null,\n        PrePickerDate: null,\n        RegQDC: null,\n        CarloriesCal: []\n    }\n    getAPI(caseid, pickerdate, intervalStatus, status) {\n        if (caseid === undefined || caseid === null) {\n            return null\n        }\n        if (pickerdate === undefined || pickerdate === null) {\n            return null\n        }\n        if (intervalStatus === undefined || intervalStatus === null) {\n            return null\n        }\n        if (status === undefined || status === null) {\n            return null\n        }\n        function formatTimer(pickerdate, interstatus, status) {\n            const endTimeStamp = pickerdate + 31 * 60 * 60 * 1000\n            if (status === \"Crossection\") {\n                return {\n                    start: moment(endTimeStamp - (3 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            if (interstatus === 0) {\n                return {\n                    start: moment(endTimeStamp - (24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            if (interstatus === 1) {\n                return {\n                    start: moment(endTimeStamp - (3 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            if (interstatus === 2) {\n                return {\n                    start: moment(endTimeStamp - (7 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            return {\n                start: moment(endTimeStamp - (14 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n            }\n        }\n        const xm2 = new X2JS()\n        const timer = formatTimer(pickerdate, intervalStatus, status)\n        ApiProvider.getQDC(caseid, timer.start, timer.end)\n            .then(data => {\n                const Result = xm2.xml2js(data.data).outmsg\n                if (Number(Result.ret) === 0) {\n                    const parsedata = Result.resconts.rescont\n                    if (Array.isArray(parsedata)) {\n                        this.setState({ QDC: parsedata })\n                    }\n                    else {\n                        this.setState({ QDC: [parsedata] })\n                    }\n                }\n\n            })\n            .catch(err => {\n                console.log(\"getQDC NG \" + JSON.stringify(err));\n            });\n        // this.setState({ QDC: QDCList.data.outmsg.resconts.rescont })\n        ApiGithub.getGitHubJson(\"IOReg_QDC.json\")\n            .then(data => {\n                this.setState({ RegQDC: data.data })\n            })\n            .catch(err => {\n                console.log(\"getGithubNG\" + JSON.stringify(err))\n            })\n    }\n    componentDidMount() {\n        const { Status, IntervalStatus, caseinfo, PickerDate } = this.props\n        this.setState({ PreStatus: Status, PreIntervalStatus: IntervalStatus, PreCID: caseinfo.CASEID, PrePickerDate: PickerDate })\n        this.getAPI(caseinfo.CASEID, PickerDate, IntervalStatus, Status)\n\n    }\n    componentDidUpdate() {\n        const { Status, IntervalStatus, caseinfo, PickerDate } = this.props\n        const prestatus = this.state.PreStatus\n        const preinterstatus = this.state.PreIntervalStatus\n        const precid = this.state.PreCID\n        const prepickerdate = this.state.PrePickerDate\n        if (prepickerdate !== PickerDate || caseinfo.CASEID !== precid || IntervalStatus !== preinterstatus || Status !== prestatus) {\n            console.log(Status, IntervalStatus, caseinfo, PickerDate)\n            this.setState({ PreStatus: Status, PreIntervalStatus: IntervalStatus, PreCID: caseinfo.CASEID, PrePickerDate: PickerDate })\n            this.getAPI(caseinfo.CASEID, PickerDate, IntervalStatus, Status)\n        }\n    }\n    cellRender(arr) {\n        const { Status, IntervalStatus } = this.props\n        const mapcell = arr.map(function (value, index, array) {\n            return (\n                <div key={index} style={{ border: \"1px solid #cccccc\", borderCollapse: \"collapse\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <t2>{parseInt(value)}</t2>\n                </div>\n            );\n        })\n        if (Status === \"Crossection\") {\n            return (\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4,1fr)\" }}>\n                    {mapcell}\n                </div>\n            );\n        }\n        else {\n            if (IntervalStatus === 0) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(24,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n            if (IntervalStatus === 1) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(18,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n            if (IntervalStatus === 2) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(21,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n            if (IntervalStatus === 3) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(14,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n        }\n    }\n    render() {\n        function pickerTimeArray(pickerdate, intervalstatus, status) {\n            const et = pickerdate + (31 * 60 * 60 * 1000)\n            var timearray = []\n            if (status === \"Crossection\") {\n                const st = pickerdate + (7 * 60 * 60 * 1000)\n                for (let index = 0; index < 3; index++) {\n                    const time = st + (index * 8 * 60 * 60 * 1000)\n                    timearray.push(time)\n                }\n            }\n            else {\n                //IntervalStatus 0:1天 1:3天 2:一週 3:兩週\n                if (intervalstatus === 0) {\n                    const st = et - (24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 24; index++) {\n                        const time = st + (index * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (intervalstatus === 1) {\n                    const st = et - (3 * 24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 18; index++) {\n                        const time = st + (index * 4 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (intervalstatus === 2) {\n                    const st = et - (7 * 24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 21; index++) {\n                        const time = st + (index * 8 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (intervalstatus === 3) {\n                    const st = et - (14 * 24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 14; index++) {\n                        const time = st + (index * 24 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n            }\n            return timearray\n        }\n\n        function starttime(status, intervalstatus, time) {\n            if (status === \"Crossection\") {\n                return time - (24 * 60 * 60 * 1000)\n            }\n            if (intervalstatus === 0) {\n                return time - (24 * 60 * 60 * 1000)\n            }\n            if (intervalstatus === 1) {\n                return time - (3 * 24 * 60 * 60 * 1000)\n            }\n            if (intervalstatus === 2) {\n                return time - (7 * 24 * 60 * 60 * 1000)\n            }\n            return time - (14 * 24 * 60 * 60 * 1000)\n\n        }\n\n        function IntervalToDataArray(startTime, status, intervalstatus, element) {\n            if (Array.isArray(element)) {\n                if (status === 'Crossection') {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (8 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                if (intervalstatus === 0) {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (1 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                if (intervalstatus === 1) {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (4 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                if (intervalstatus === 2) {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (8 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                const filterdata = element.filter(function (value, index, arr) {\n                    const valueTimeString = value.rec_dat + value.rec_tim\n                    const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                    const endTime = startTime + (24 * 60 * 60 * 1000)\n                    return valueTime > startTime && valueTime < endTime\n                })\n                return filterdata\n            }\n            return []\n        }\n\n        function SumforEach(arr) {\n            var sum = 0;\n            arr.forEach(function (element) {\n                sum += Number(element);\n            });\n            return sum;\n        }\n\n\n        function formatQDCtoIO(QDC) {\n            function caloriesCal(lost, value) {\n                if (lost === \"配方奶\") {\n                    return Number(value) * 0.8\n                }\n                if (lost === \"母奶\") {\n                    return Number(value) * 0.7\n                }\n                return 0\n            }\n            function caloriesCalonnam(nam, value) {\n                if (nam === null || nam === undefined || nam === \"\") {\n                    return 0\n                }\n                const namstring = nam.toString()\n                const valueNumber = Number(value)\n                if (valueNumber === null || valueNumber === undefined) { return 0 }\n                if (namstring.match(\"10%TPN\") !== null) { return valueNumber * 0.34 }\n                if (namstring.match(\"SMOFliquid\") !== null) { return valueNumber * 1.8 }\n                if (namstring.match(\"D10\") !== null) { return valueNumber * 0.34 }\n                if (namstring.match(\"D12\") !== null) { return valueNumber * 0.34 * 1.2 }\n                if (namstring.match(\"D50\") !== null) { return valueNumber * 0.34 * 5 }\n                if (namstring.match(\"taita\") !== null) { return valueNumber * 0.34 }\n                return 0\n            }\n            var FormatFeedingList = []\n            var FormatIVList = []\n            var FormatUrineList = []\n            var FormatOtherInList = []\n            var FormatOtherOutList = []\n            for (let index = 0; index < QDC.length; index++) {\n                const element = QDC[index];\n                const elementItem = element.item;\n                const time = moment(element.rec_dat.toString().trim() + element.rec_tim.toString().trim(), \"YYYYMMDDHHmm\").valueOf()\n                const nam = element.nam\n                const FeedingReg = RegQDC.Feeding\n                const filterFeedingStatus = FeedingReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterFeedingStatus) {\n                    FormatFeedingList.push({\n                        time: time,\n                        value: Number(element.inp_val2),\n                        calories: caloriesCal(element.lost, element.inp_val2),\n                        element: element\n                    })\n                }\n                const IVReg = RegQDC.IV\n                const filterIVStatus = IVReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterIVStatus) {\n                    FormatIVList.push({\n                        time: time,\n                        value: Number(element.inp_val1),\n                        calories: caloriesCalonnam(nam, element.inp_val1),\n                        element: element\n                    })\n                }\n                const UrineReg = RegQDC.Urine\n                const filterUrineStatus = UrineReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterUrineStatus) {\n                    FormatUrineList.push({\n                        time: time,\n                        value: Number(element.out_val2),\n                        calories: caloriesCalonnam(nam, element.out_val2),\n                        element: element\n                    })\n                }\n                const OtherReg = RegQDC.Other\n                const filterOtherStatus = OtherReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterOtherStatus) {\n                    const input_1 = Number(element.inp_val1)\n                    const output_1 = Number(element.out_val1)\n                    if (elementItem === \"排便\") {\n                        // FormatOtherInList.push({\n                        //     time: time,\n                        //     value: 1,\n                        //     calories: 0,\n                        //     element: element\n                        // })\n                        FormatOtherOutList.push({\n                            time: time,\n                            value: 1,\n                            calories: 0,\n                            element: element\n                        })\n                    }\n                    else {\n                        if (input_1 === null || input_1 === undefined) {\n                            FormatOtherOutList.push({\n                                time: time,\n                                value: Number(element.inp_val1),\n                                calories: caloriesCalonnam(nam, element.inp_val1),\n                                element: element\n                            })\n                        }\n                        if (output_1 === null || output_1 === undefined) {\n                            FormatOtherInList.push({\n                                time: time,\n                                value: Number(element.output_1),\n                                calories: 0,\n                                element: element\n                            })\n                        }\n                    }\n                }\n\n            }\n            return {\n                Feeding: FormatFeedingList,\n                IV: FormatIVList,\n                OtherIn: FormatOtherInList,\n                Urine: FormatUrineList,\n                OtherOut: FormatOtherOutList\n            }\n        }\n        function timerFormat(PickerDate, Interval, Status) {\n            const EndTime = PickerDate + (31 * 60 * 60 * 1000)\n            console.log(Status)\n            if (Status === 'Crossection') {\n                return {\n                    interval: 3,\n                    hourInterval: 8,\n                    startTime: EndTime - (24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            if (Interval === 0) {\n                return {\n                    interval: 24,\n                    hourInterval: 1,\n                    startTime: EndTime - (24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            if (Interval === 1) {\n                return {\n                    interval: 18,\n                    hourInterval: 4,\n                    startTime: EndTime - (3 * 24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            if (Interval === 2) {\n                return {\n                    interval: 21,\n                    hourInterval: 8,\n                    startTime: EndTime - (7 * 24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            return {\n                interval: 14,\n                hourInterval: 24,\n                startTime: EndTime - (14 * 24 * 60 * 60 * 1000),\n                endTime: EndTime\n            }\n        }\n        function listTimerFormat(List, timer, status) {\n            const inter = timer.interval\n            var TimerList = []\n            for (let index = 0; index < inter; index++) {\n                const st = timer.startTime + (index * timer.hourInterval * 60 * 60 * 1000)\n                const et = timer.startTime + ((index + 1) * timer.hourInterval * 60 * 60 * 1000)\n                const filterList = List.filter(function (info, index, arr) {\n                    const time = info.time\n                    return st <= time && time < et\n                })\n                TimerList.push(filterList)\n            }\n            if (status === 'Crossection') {\n                const st = timer.startTime\n                const et = timer.endTime\n                const filterListALL = List.filter(function (info, index, arr) {\n                    const time = info.time\n                    return st <= time && time < et\n                })\n                TimerList.push(filterListALL)\n            }\n            return TimerList\n        }\n\n        function sumIn(arr1, arr2, arr3) {\n            var sumlist = []\n            for (let index = 0; index < arr1.length; index++) {\n                const element1 = arr1[index];\n                const element2 = arr2[index];\n                const element3 = arr3[index];\n                const sum = element1 + element2 + element3\n                sumlist.push(sum)\n            }\n            return sumlist\n        }\n        function sumOut(arr1, arr2) {\n            var sumlist = []\n            for (let index = 0; index < arr1.length; index++) {\n                const element1 = arr1[index];\n                const element2 = arr2[index];\n                const sum = element1 + element2\n                sumlist.push(sum)\n            }\n            return sumlist\n        }\n        function sumInAndOut(Input, Outout) {\n            var sumlist = []\n            for (let index = 0; index < Input.length; index++) {\n                const element1 = Input[index];\n                const element2 = Outout[index];\n                const sum = parseFloat(element1 - element2).toFixed(2)\n                sumlist.push(sum)\n            }\n            return sumlist\n        }\n        function gridNumber(interval, status) {\n            if (status === \"Crossection\") {\n                return 4\n            }\n            return interval\n        }\n        function cellsum(list) {\n            const CellSum = list.map(function (info, index, arr) {\n                var sum = 0\n                for (let index = 0; index < info.length; index++) {\n                    const element = info[index];\n                    sum = sum + element.value\n                }\n                return sum\n            })\n            return CellSum\n        }\n        function cellRenderSum(list) {\n            const CellRender = list.map(function (info, index, arr) {\n                if (info.length === 0) {\n                    return (\n                        <div key={index} style={{ borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #cccccc\", borderCollapse: 'collapse' }}>--</div>\n\n                    );\n                }\n                return (\n                    <div key={index} style={{ borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #cccccc\", borderCollapse: 'collapse' }}>{parseFloat(info).toFixed(2)}</div>\n                );\n            })\n            return (\n                <div style={{ display: 'grid', gridTemplateColumns: 'repeat( ' + gridNumber(timerStruct.interval, Status) + ' ,1fr)' }}>\n                    {CellRender}\n                </div>\n            );\n        }\n        function cellRender(list) {\n            const CellRender = list.map(function (info, index, arr) {\n                var sum = 0\n                if (info.length === 0) {\n                    return (\n                        <div key={index} style={{ borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #cccccc\", borderCollapse: 'collapse' }}>--</div>\n                    );\n                }\n                for (let index = 0; index < info.length; index++) {\n                    const element = info[index];\n                    sum = sum + element.value\n                }\n                return (\n                    <div key={index} style={{ borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #cccccc\", borderCollapse: 'collapse' }}>{parseFloat(sum).toFixed(2)}</div>\n                );\n            })\n            return (\n                <div style={{ display: 'grid', gridTemplateColumns: 'repeat( ' + gridNumber(timerStruct.interval, Status) + ' ,1fr)' }}>\n                    {CellRender}\n                </div>\n            );\n        }\n\n\n        function formatTime(time) {\n            if (Number(time) / 1000 >= 1) {\n                return time.toString().trim()\n            }\n            return \"0\" + time.toString().trim()\n        }\n\n        function stylechange(status) {\n            const chronicstyle = \"140px 1fr\"\n            const crossectionstyle = \"1fr 4fr\"\n            if (status === \"Crossection\") {\n                return crossectionstyle\n            }\n            else return chronicstyle\n        }\n\n        function urineforWeightAndHourCrossection(Urine, weight) {\n            const datamap = Urine.map(function (info, index, arr) {\n                var sum = 0\n                for (let index = 0; index < info.length; index++) {\n                    const element = info[index];\n                    sum = sum + element.value\n                }\n                if (sum === 0) {\n                    return 0\n                }\n                if (weight === null || weight === undefined) {\n                    return \"--\"\n                }\n                return parseFloat(sum / weight / 8).toFixed(2)\n            })\n            for (let index = 0; index < Urine.length; index++) {\n                const element = Urine[index];\n                console.log(element)\n                \n            }\n            return datamap\n        }\n        const { Status, IntervalStatus, caseinfo, PickerDate } = this.props\n        const timeInterval = pickerTimeArray(PickerDate, IntervalStatus, Status)\n        const et = PickerDate + (31 * 60 * 60 * 1000)\n        const st = starttime(Status, IntervalStatus, et)\n        const WEIGHT = caseinfo.WEIGHT\n        const dateWeoght = WardState.selectweight(WEIGHT, PickerDate)\n        const QDCLIST = this.state.QDC\n        const Weight = 1000\n        const RegQDC = this.state.RegQDC\n        console.log(RegQDC, PickerDate)\n        if (RegQDC === null || RegQDC === undefined) { return null }\n        const formatData = formatQDCtoIO(QDCLIST)\n        const timerStruct = timerFormat(PickerDate, IntervalStatus, Status)\n        const feed = listTimerFormat(formatData.Feeding, timerStruct, Status)\n        const IV = listTimerFormat(formatData.IV, timerStruct, Status)\n        const OtherIn = listTimerFormat(formatData.OtherIn, timerStruct, Status)\n        const sumin = sumIn(cellsum(feed), cellsum(IV), cellsum(OtherIn))\n        const Urine = listTimerFormat(formatData.Urine, timerStruct, Status)\n        const UrinForUnit = urineforWeightAndHourCrossection(Urine, 1000)\n        const OtherOut = listTimerFormat(formatData.OtherOut, timerStruct, Status)\n        const sumout = sumOut(cellsum(Urine), cellsum(OtherOut))\n        console.log(Urine)\n        const sumInTotal = sumInAndOut(sumin, sumout)\n        //====================================================================\n\n\n        const titleInarray = ['Feed', 'IV', 'Other', 'In:Sum']\n        const titleOutarray = ['U/O', 'ml/kg/hr', 'Other', 'Out:Sum']\n        const TitleCellIn = titleInarray.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ border: \"1px solid #cccccc\", borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", backgroundColor: Status === \"Crossection\" ? \"white\" : \"#cccccc\" }}>\n                    <t2>{value}</t2>\n                </div>\n            );\n        })\n\n        const TitleCellOut = titleOutarray.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ border: \"1px solid #cccccc\", borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", backgroundColor: Status === \"Crossection\" ? \"white\" : \"#cccccc\" }}>\n                    <t2>{value}</t2>\n                </div>\n            );\n        })\n        return (\n            <div>\n                <div style={{ display: \"grid\", gridTemplateColumns: stylechange(Status) }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"40px 40px 40px 40px\" }}>\n                        {TitleCellIn}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"40px 40px 40px 40px\" }}>\n                        {cellRender(feed)}\n                        {cellRender(IV)}\n                        {cellRender(OtherIn)}\n                        {cellRenderSum(sumin)}\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: stylechange(Status) }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"40px 40px 40px 40px\" }}>\n                        {TitleCellOut}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"40px 40px 40px 40px\" }}>\n                        {cellRender(Urine)}\n                        {cellRenderSum(UrinForUnit)}\n                        {cellRender(OtherOut)}\n                        {cellRenderSum(sumout)}\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: stylechange(Status) }}>\n                    <div style={{ border: \"1px solid #cccccc\", borderCollapse: \"collapse\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" , backgroundColor: Status === \"Crossection\" ? \"white\" : \"#cccccc\" }}>\n                        <t2>I-O</t2>\n                    </div>\n                    {cellRenderSum(sumInTotal)}\n                    {/* {totalcell} */}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default IOpage;","import React, { Component } from 'react';\nimport IOpage from '../../Module/iopage'\n\nclass CrossectionIo extends Component {\n    render() {\n        const { caseinfo, title, PickerDate } = this.props\n        const titlearray = ['白班', '小夜', '大夜', '全日']\n        const titlelab = titlearray.map(function (info, index) {\n            return (\n                <centerstyle key={index}>\n                    <t2>{info}</t2>\n                </centerstyle>\n            );\n        })\n        return (\n            //510\n            <div>\n                <div style={{ lineHeight: \"50px\", backgroundColor: \"#cccccc\", padding: \"0px 5px\" }}>\n                    <t1>{title}</t1>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr\", height: \"40px\" }}>\n                    <div></div>\n                    {titlelab}\n                </div>\n                <IOpage PickerDate={PickerDate} caseinfo={caseinfo} Status={\"Crossection\"} IntervalStatus={0}></IOpage>\n            </div>\n        );\n    }\n}\n\nexport default CrossectionIo","import React, { Component } from 'react';\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport * as ApiGithub from '../../API/ApiGithub'\nimport './NonlabviewtableCell.scss'\n\nconst STATUS_REPORT = 0\n\nexport default class NonlabviewtableCell extends Component {\n    state = {\n        Result: [],\n        parser: { \"mappings\": [] },\n        summary_str: \"--\",\n        RESDISP: []\n    }\n\n    componentDidMount() {\n        //call API\n        const { caseId, hisId, month, seq, name, time, status } = this.props;\n\n        if (caseId !== undefined && hisId !== undefined && month !== undefined && seq !== undefined) {\n            ApiProvider.getStoredProcedureRESDISP(hisId.trim(), month, caseId.trim(), seq)\n                .then(result => {\n                    console.log(\"getStoredProcedureRESDISP OK \" + JSON.stringify(result.data));\n                    //const fakeData = [{\"RECNO\":\"1\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"正式報告\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"2\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"                                臺北榮民總醫院兒童醫學部報告\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"3\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  病患資訊：      新生兒加護病房 - 1 黃苡齊 4565531-0 女性 5月大 NBD\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"4\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  申請序號 / 工作號：  0ANWCEA/            開立時間：   20200115    0304\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"5\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  開醫囑者：                     簽收時間：   20200115    0305\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"6\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  報告人 ：       NUR2325 袁藝榛         報告時間：   20200115    0305\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"7\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  檢體 ：        Blood\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"8\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  醫囑名稱：      BLOOD GAS\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"9\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   Sample:(Capillary)\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"10\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   PH:  (7.37)      Hb:   ()       BUN: ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"11\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   PO2:  (43)  mmHg   Hct:  (39)  %     Cr:  ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"12\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   PCO2: (59)  mmHg   FIO2:  (40.0) %\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"13\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   HCO3: (34.1) mmol/L  NA+:  (151)  mmol/L\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"14\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   BE:  (7.1)  mmol/L  K+:   (6.0)  mmol/L\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"15\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   SAT:  (77)  %     Cl-:  ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"16\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   TCO2: (35.9) mmol/L  iCA++: (1.44) mmol/L\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"17\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"                AnGap: ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"18\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"                MG++:  ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"19\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"20\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   COMMENT:\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"}];\n\n                    this.setState({\n                        RESDISP: result.data\n                        //RESDISP: fakeData\n                    })\n\n                    let input = {\n                        item_name: name.trim(),\n                        content: \"\",\n                        sample: \"\",\n                        lab: \"\",\n                        datatime: moment(time).format(\"YYYY-MM-DD HH:mm\")\n                    }\n\n                    //fakeData.forEach(item => {\n                    result.data.forEach(item => {\n                        input.content = `${input.content} \"\\n\" ${item.CONTENT}`;\n                    });\n\n                    //status 0:正式報告 只有0需要做parse\n                    //console.log(\"status: \" + JSON.stringify(status));\n                    if(parseInt(status) === STATUS_REPORT) {\n                        ApiGithub.getGitHubJson(\"Summary.json\")\n                        .then(data => {\n                            console.log(\"get Summary.json OK \" + JSON.stringify(data.data));\n\n                            const selected_parser = this.select_parser(input, data.data)\n                            console.log(\"selected_parser \" + JSON.stringify(selected_parser));\n                            this.setState({\n                                parser: selected_parser\n                            })\n\n                            if (selected_parser !== undefined) {\n                                const result_kv_pairs = this.parse(input, selected_parser)\n                                console.log(\"result_kv_pairs \" + JSON.stringify(result_kv_pairs));\n\n                                const summary_str = this.summerize(result_kv_pairs, selected_parser)\n                                console.log(\"summary_str \" + JSON.stringify(summary_str));\n\n                                this.setState({\n                                    summary_str: summary_str\n                                })\n                            }\n                        })\n                        .catch(err => {\n                            console.log(err)\n                        })\n                    }\n                })\n                .catch(err => {\n                    console.log(\"getStoredProcedureRESDISP NG \" + JSON.stringify(err));\n                });\n        }\n    }\n\n    select_parser = (input, parsers) => {\n        return parsers.find(x =>\n            input.item_name.match(x.apply_condition.name)\n            && (!x.apply_condition.sample || input.sample.match(x.apply_condition.sample))\n            && (!x.apply_condition.lab || input.lab.match(x.apply_condition.lab))\n            && (!x.apply_condition.start_time || input.datetime >= x.apply_condition.start_time)\n            && (!x.apply_condition.end_time || input.datetime < x.apply_condition.end_time)\n        )\n    }\n\n    parse = (input, parser) => {\n        let mappings = parser.mappings\n        let content = input.content\n        let result = {}\n        mappings.forEach(mapping => {\n            const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n            const match = content.match(re)\n            result[mapping.key] = match && match[mapping.position]\n        });\n        return result;\n    }\n\n    summerize = (kv_pairs, parser) => {\n        let summary_str = parser.summary\n        for (const key in kv_pairs) {\n            let match_replacer = summary_str.match(RegExp(\"\\\\[\" + key + \"(;(.*?))?\\\\]\"))\n            let replacer = \"\"\n            if (match_replacer && match_replacer.length === 3) {\n                replacer = match_replacer[2]\n            }\n            summary_str = summary_str.replace(RegExp(\"\\\\[\" + key + \"(;.*?)?\\\\]\"), kv_pairs[key] || replacer)\n        }\n        return summary_str;\n    }\n\n    render() {\n        function statusFormat(status) {\n            if (status === 0) {\n                return \"正式報告\"\n            }\n            if (status === 1) {\n                return \"已簽收\"\n\n            }\n            if (status === 2) {\n                return \"待送檢\"\n            }\n            return status\n        }\n        //status 0:正式報告 只有0需要做parse\n        const { time, name, status, come, showModal } = this.props;\n        const { summary_str, RESDISP } = this.state;\n        const statusRender = statusFormat(status)\n        const canShowReport = parseInt(status) === 0\n        return (\n            <div style={{ height: \"50px\", display: \"grid\", gridTemplateColumns: \"1fr 200px 1fr 1fr 1fr\" }}>\n                <t3 className='nonlabteblecell'>{moment(time).format('MM/DD HH:mm')}</t3>\n                <t3 className='nonlabteblecell'>{name}</t3>\n                <t3 className='nonlabteblecell'>{come}</t3>\n                <t3 className='nonlabteblecell'>{statusRender}</t3>\n                {canShowReport  && <t3 className='nonlabteblecell' onClick={() => showModal(RESDISP)} style={{ color: \"blue\", textDecoration: \"underline\", cursor: \"pointer\" }}>{summary_str}</t3>}\n                {!canShowReport && <t3 className='nonlabteblecell'>{summary_str}</t3>}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nclass ExamReportModal extends Component {\n    render() {\n        const reportDetail = this.props.report\n        const showDetail = reportDetail.map((data, index) => {\n            return data.CONTENT !== \"\" ? <div key={ \"ExamReportModal\" + index } style={{ whiteSpace: \"pre-wrap\" }}>{data.CONTENT}</div> : \"\"\n        })\n        return (\n            <div>{showDetail}</div>\n        );\n    }\n}\n\nexport default ExamReportModal\n","import React, { Component } from 'react';\nimport './Nonlabviewtable.scss'\nimport NonlabviewtableCell from './NonlabviewtableCell'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider'\nimport { Modal } from 'antd';\nimport InsReportModal from '../ExamReportModal'\n\nclass Nonlabviewtable extends Component {\n    state = {\n        visible: false,\n\n        modalVisible: false,\n        modalReport: \"\",\n        ORDLIST: [],\n        RESSECT: []\n    }\n    componentDidMount() {\n        this.nonLabApiGet()\n    }\n    nonLabApiGet() {\n        // function selectMonthInterval(storeProcedureTime) {\n        //     const timestampInterval = moment() - moment(storeProcedureTime, \"YYYY-MM-DD\").valueOf()\n        //     const timestampMonth = 30 * 24 * 60 * 60 * 1000\n        //     const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n        //     return MonthInt\n        // }\n        const { caseinfo } = this.props\n        const storeProcedureTime = moment(caseinfo.TRANSINDT, \"YYYYMMDD\").format(\"YYYY-MM-DD\")\n        // const MonthInterval = selectMonthInterval(storeProcedureTime)\n        ApiProvider.getStoredProcedureORDLIST(caseinfo.HISID, storeProcedureTime, \"ALL\", \"DOC3924B\")\n            .then(data => { this.setState({ ORDLIST: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureORDLIST NG \" + JSON.stringify(err)) });\n        // ApiProvider.getStoredProcedureRESSECT(caseinfo.HISID, MonthInterval, \"ALL\", \"DOC3924B\")\n        //     .then(data => { this.setState({ RESSECT: data.data }) })\n        //     .catch(err => { console.log(\"getStoredProcedureRESSECT NG \" + JSON.stringify(err)) });\n    }\n    showModal = (report) => {\n        console.log(\"showModal :\" + JSON.stringify(report))\n        this.setState({\n            modalVisible: true,\n            modalReport: report\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n    render() {\n        function ORDLISTFormat(ORDLIST, StartTime, EndTime) {\n            var ORDLIST_Format = []\n            if (Array.isArray(ORDLIST)) {\n                for (let index = 0; index < ORDLIST.length; index++) {\n                    const element = ORDLIST[index];\n                    const elemetnStatus = Number(element.ORSTATUS)\n                    const elementORBGNTime = moment(element.ORBGNDT.toString().trim() + element.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n                    if (StartTime <= elementORBGNTime && elementORBGNTime <= EndTime) {\n                        if (elemetnStatus === 64) {\n                            //正式報告\n                            ORDLIST_Format.push({\n                                time: elementORBGNTime,\n                                status: 0,\n                                element: element\n                            })\n                        }\n                        if (elemetnStatus === 38) {\n                            //已簽收 \n                            ORDLIST_Format.push({\n                                time: elementORBGNTime,\n                                status: 1,\n                                element: element\n                            })\n                        }\n                        if (elemetnStatus === 31) {\n                            //待送檢\n                            ORDLIST_Format.push({\n                                time: elementORBGNTime,\n                                status: 2,\n                                element: element\n                            })\n                        }\n                        if (elemetnStatus === 82 || elemetnStatus === 60 || elemetnStatus === 61) {\n                            //已取消 不顯示\n                            continue\n                        }\n                        //Other\n                        ORDLIST_Format.push({\n                            time: elementORBGNTime,\n                            status: elemetnStatus,\n                            element: element\n                        })\n                    }\n                }\n            }\n            return ORDLIST_Format\n        }\n        const { modalVisible, modalReport, ORDLIST } = this.state\n        const { StartTime, EndTime } = this.props\n        const FormatList = ORDLISTFormat(ORDLIST, StartTime, EndTime)\n\n        const showModal = this.showModal\n        const handleOk = this.handleOk\n        const handleCancel = this.handleCancel\n        const nonlabcell = FormatList.map(function (value, index, array) {\n            const come = value.element.ORSPCN1;\n            const time = value.time\n            const name = value.element.ORPROCED;\n            const status = value.status;\n            return (\n                <NonlabviewtableCell key={\"Nonlabviewtable\" + index} come={come} time={time} name={name} statis={status} hisId={value.element.ORHISTNO} caseId={value.element.ORDSEQCN} month={value.element.ORMM} seq={value.element.ORDSEQNO} showModal={showModal}></NonlabviewtableCell>\n            );\n        })\n        return (\n            <div>\n                <div style={{ height: \"50px\", border: \"#E2EDF3 1px solid\", backgroundColor: \"#E2EDF3\", display: \"grid\", gridTemplateColumns: \"1fr 1.5fr 1fr 1fr 1fr\" }}>\n                    <t3 className='nonlabtebletitlecell'>檢驗日期</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗項目名稱</t3>\n                    <t3 className='nonlabtebletitlecell'>檢體來源</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗項目狀態</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗結果</t3>\n                </div>\n                <div className='nonlabviewtable'>\n                    {nonlabcell}\n                </div>\n                <Modal\n                    title={\"檢驗結果\"}\n                    visible={modalVisible}\n                    onOk={handleOk}\n                    onCancel={handleCancel}\n                    width={1000}\n                    footer={null}>\n                    <InsReportModal report={modalReport}></InsReportModal>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Nonlabviewtable\n","import React, { Component } from 'react';\nimport Nonlabviewtable from './Nonlabviewtable'\n\n\nclass Nonlabviewlayout extends Component {\n    render() {\n        // const { PickerDate } = this.props\n        // const { modalVisible, modalReport } = this.state\n        // const showModal = this.showModal\n        // const handleOk = this.handleOk\n        // const handleCancel = this.handleCancel\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div style={{ display: 'flex', alignItems: 'center', height: '40px', paddingLeft: \"5px\", paddingRight: \"5px\", background: \"#cccccc\" }}>\n                    <t1>報告清單</t1>\n                </div>\n                <Nonlabviewtable caseinfo={this.props.caseinfo} StartTime={this.props.StartTime} EndTime={this.props.EndTime}></Nonlabviewtable>\n            </div>\n        );\n    }\n}\n\nexport default Nonlabviewlayout","import React, { Component } from 'react';\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider'\n\n\n\nclass RTtable extends Component {\n    state = {\n        RESDBGAS: [],\n        PreHID: null,\n        PreTransInDate: null\n    }\n    componentDidMount() {\n        const HID = this.props.caseinfo.HISID\n        const TRDT = this.props.caseinfo.TRANSINDT\n        this.setState({ PreHID: HID, PreTransInDate: TRDT })\n        this.getGasAPI()\n    }\n    componentDidUpdate() {\n        const HID = this.props.caseinfo.HISID\n        const TRDT = this.props.caseinfo.TRANSINDT\n        const PreHID = this.state.PreHID\n        const PreTRDT = this.state.PreTransInDate\n        if (HID !== PreHID || TRDT !== PreTRDT) {\n            this.setState({ PreHID: HID, PreTransInDate: TRDT })\n            this.getGasAPI()\n        }\n    }\n    getGasAPI() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID\n        const TransInDate = moment(caseinfo.TRANSINDT, \"YYYYMMDD\").format(\"YYYY-MM-DD\")\n        ApiProvider.getStoredProcedureRESDBGAS(HID, TransInDate)\n            .then(data => { this.setState({ RESDBGAS: data.data }) })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDBGAS NG \" + JSON.stringify(err));\n            });\n    }\n    GasListToCell = () => {\n        function formatGasData(GasDataList, st, et) {\n            const filterTimer = GasDataList.filter(function (element, index, arr) {\n                const timeStamp = moment(element.ORRESDT.toString().trim() + element.ORRESTM.toString().trim(), 'YYYY-MM-DDHH.mm.ss').valueOf()\n                return st <= timeStamp && timeStamp <= et\n            })\n            const cellMap = filterTimer.map(function (element, index, arr) {\n                const PHValue = element.SS07\n                const PCO2Value = element.SS06\n                const PO2Value = element.SS08\n                const HCO3Value = element.SS04\n                const BEValue = element.SS01\n                const SampleValue = \"123\" //Parse\n                const O2SatValue = element.SS05\n                const FiO2Value = element.SS03\n                const timeStamp = moment(element.ORRESDT.toString().trim() + element.ORRESTM.toString().trim(), 'YYYY-MM-DDHH.mm.ss').valueOf()\n                const time = moment(timeStamp).format(\"MM/DD HH:mm\")\n                const gasDataArray = [time, PHValue, PCO2Value, PO2Value, HCO3Value, BEValue, O2SatValue, SampleValue, FiO2Value]\n                const GasCell = gasDataArray.map(function (value, index, array) {\n                    return (\n                        <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\" }}>\n                            <t3>{value}</t3>\n                        </centerstyle>\n                    );\n                })\n                return (\n                    <div key={index} style={{ height: \"50px\", display: \"grid\", gridTemplateColumns: \"110px repeat(8,1fr)\" }}>{GasCell}</div>\n                );\n            })\n            return cellMap\n\n        }\n        const { Timer } = this.props\n        const startTime = Timer[0]\n        const endTime = Timer[1]\n        const GasData = this.state.RESDBGAS\n        const CellRander = formatGasData(GasData, startTime, endTime)\n        //for loop filter three days\n\n        return CellRander\n    }\n\n    render() {\n        const GasTitleList = ['起迄', 'PH', 'PCO2', 'PO2', 'HCO3', 'BE', 'O2', 'Sample', 'FiO2']\n        const GasTitleCell = GasTitleList.map(function (value, index, array) {\n            return (\n                <centerstyle key={index} style={{ borderCollapse: \"collapse\" }}>\n                    <t3>{value}</t3>\n                </centerstyle>\n            );\n        })\n\n        return (\n            <div>\n                <div style={{ height: \"50px\", border: \"rgba(238,238,238,1) 1px solid\", backgroundColor: \"#E2EDF3\", display: \"grid\", gridTemplateColumns: \"110px repeat(8,1fr)\" }}>\n                    {GasTitleCell}\n                </div>\n                <div style={{ maxHeight: \"400px\", overflow: \"auto\" }}>\n                    {this.GasListToCell()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTtable\n","import React, { Component } from 'react';\nimport RTtable from './RTtable'\nclass GAS extends Component {\n\n\n    render() {\n        const { caseinfo, PickerDateRange } = this.props\n\n        return (\n            <div style={{ marginBottom: \"20px\" }}>\n                <t1>GAS累積報告</t1>\n                <RTtable Timer={PickerDateRange} caseinfo={caseinfo}></RTtable>\n            </div>\n        );\n    }\n}\n\nexport default GAS\n","import React, { Component } from 'react';\nimport { Modal, Input } from 'antd';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nexport default class RemarkModal extends Component {\n    state = {\n        remark: this.props.remarkValue.remark,\n        editor: this.props.remarkValue.editor,\n    }\n\n\n    \n    componentDidMount() {\n        console.log(\"RemarkModal componentDidMount\");\n        console.log(\"RemarkModal caseinfo: \" + JSON.stringify(this.props.caseinfo));\n        this.onInputChange = this.onInputChange.bind(this);\n        this.onOkClick = this.onOkClick.bind(this);\n    }\n\n    onInputChange(event) {\n        this.setState({ remark: event.target.value })\n    }\n\n    onOkClick() {\n        const { name, transinId, type, remarkId } = this.props.remarkValue\n        const { remark, editor, } = this.state;\n        let fixTime = moment().format('X');\n\n\n        // console.log(`editor : ${editor}`)\n        // console.log(`name : ${name}`)\n        // console.log(`remark : ${remark}`)\n        // console.log(`remarkId : ${remarkId}`)\n        // console.log(`fixTime: ${fixTime}`)\n        // console.log(`transinId : ${transinId}`)\n        // console.log(`type : ${type}`)\n\n        ApiProvider.createRemark(name, remark, remarkId, fixTime, transinId, type, editor)\n            .then(result => {\n                console.log(\"createRemark OK \" + JSON.stringify(result));\n                this.props.onOk(result.data.remark);\n            })\n            .catch(err => {\n                console.log(\"createRemark NG \" + JSON.stringify(err));\n            });\n    }\n\n    render() {\n        const { TextArea } = Input;\n        const { createTime, name } = this.props.remarkValue;\n        const onCancel = this.props.onCancel;\n        const onOk = this.onOkClick.bind(this);\n\n        return (\n            <Modal\n                title=\"備註\"\n                visible={this.props.visible}\n                onOk={onOk}\n                onCancel={onCancel}>\n                <div style={{ display: \"grid\", gridTemplateRows: \"30px 30px 30px 30px\" }}>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div>開立時間: {createTime}</div>\n                        <div>上次編輯時間: </div>\n                        {/* <div>上次編輯時間: {this.state.editTime}</div> */}\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div>處理名稱: {name}</div>\n                        <div>上次編輯人: {this.state.editor}</div>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div>頻次:</div>\n                        <div>開立醫師: {this.state.editor}</div>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>備註內容:</div>\n                    <TextArea rows={5} placeholder=\"請輸入備註內容\" value={this.state.remark} onChange={this.onInputChange} />\n                </div>\n            </Modal>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './RTbreathtablecell.scss'\n// import * as FiliterReg from '../../Function/FiliterReg'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass RTbreathetablecell extends Component {\n    state = {\n        onCell: false,\n        onEdit: false,\n        remark: '',\n        powerLogin: 0\n    }\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n    Mouse_move() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onCell: true\n                }\n            )\n        }\n    }\n\n    Mouse_leave() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onCell: false\n                }\n            )\n        }\n    }\n\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    }\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    seachRemark = () => {\n        const { caseinfo, value } = this.props\n        console.log(value)\n        const id = `Breath${moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").valueOf()}`\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, id, \"RTbreath\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    render() {\n        const { value, caseinfo } = this.props\n        console.log(value)\n        const id = `Breath${moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").valueOf()}`\n        const time = moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\")\n        const setting = value.Mode.toString().trim()\n        const mode = value.Setting.toString().trim()\n\n        const remarkValue = {\n            \"createTime\": time,\n            \"name\": setting,\n            \"remarkId\": id,\n            \"remark\": this.state.remark,\n            \"transinId\": caseinfo.TRANSINID,\n            \"type\": \"RTbreath\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <div>\n                <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n                <div onMouseMove={() => this.Mouse_move()} onMouseLeave={() => this.Mouse_leave()} className=\"RTtablecell\">\n                    <t3 className='RTBreathDateCell'>{time}</t3>\n                    <div style={{ display: \"grid\", gridTemplateRows: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"100px\" : \"50px 50px\"] }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\" }}>\n                            <t3 style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\", padding: \"0px 5px\" }}>{setting}</t3>\n                            <t3 style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\", padding: \"0px 5px\" }}>{mode}</t3>\n                        </div>\n                        <t3 style={{ alignItems: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\", padding: \"0px 5px\", display: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"none\" : \"\"] }}>{this.state.remark}</t3>\n                    </div>\n                    <div style={this.state.onCell ? { display: this.state.powerLogin >= 2 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", right: 0, height: \"100px\", background: \"white\", width: \"77px\", border: \"rgba(238,238,238,1) 1px solid\" } : { display: \"none\" }}>\n                        <div onClick={() => this.Edit_state()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <img src={chooseedit} alt='chooseedit'></img>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTbreathetablecell\n","import React, { Component } from 'react';\nimport RTbreathetablecell from './RTbreathtablecell'\n// import * as FilterReg from '../../Function/FiliterReg'\n// import moment from 'moment'\n\nclass RTbreathetable extends Component {\n\n    createRTbreathetable = () => {\n        const { DataList, caseinfo } = this.props\n\n        const RTbreathetable = DataList.map(\n            (value, index, array) =>\n                <RTbreathetablecell key={index} value={value} caseinfo={caseinfo}></RTbreathetablecell>\n        )\n        return RTbreathetable\n    }\n\n    render() {\n        return (\n            <div>\n                <div style={{ height: \"50px\", display: \"grid\", gridTemplateColumns: \"1fr 3fr 3fr\", backgroundColor: \"#E2EDF3\", border: \"rgba(238,238,238,1) 1px solid\" }}>\n                    <t3 style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>紀錄日期</t3>\n                    <t3 style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>Mode</t3>\n                    <t3 style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>Setting</t3>\n                </div>\n                <div style={{ maxHeight: \"400px\", overflow: \"auto\" }}>\n                    {this.createRTbreathetable()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTbreathetable\n","import React, { Component } from 'react';\nimport RTbreathetable from './RTbreathetable'\n// import { DatePicker } from 'antd';\nimport * as FilterReg from '../../Function/FiliterReg'\nimport X2JS from 'x2js';\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\n// import * as QSPEList from '../../Resource/QSPE'\n\nclass RTbreathe extends Component {\n    state = {\n        preCID: null,\n        QSPE: []\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDateRange } = this.props\n        this.setState({ preCID: caseinfo.CASEID })\n        this.getQSPEApi(caseinfo.CASEID, PickerDateRange[0], PickerDateRange[1])\n\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDateRange } = this.props\n        const CID = caseinfo.CASEID\n        const preCID = this.state.preCID\n        if (CID !== preCID) {\n            this.setState({ preCID: caseinfo.CASEID })\n            this.getQSPEApi(caseinfo.CASEID, PickerDateRange[0], PickerDateRange[1])\n        }\n    }\n    getQSPEApi(CID, st, et) {\n        const xm2 = new X2JS()\n        console.log(CID, st, et)\n        const start = moment(st).format(\"YYYYMMDDHHmm\")\n        const end = moment(et).format(\"YYYYMMDDHHmm\")\n        ApiProvider.getQSPE(CID, start, end)\n            .then(data => {\n                console.log(xm2.xml2js(data.data).outmsg.resconts.rescont)\n                const result = xm2.xml2js(data.data).outmsg\n                if (Number(result.ret) === 0) {\n                    const resultData = result.resconts.rescont\n                    if (Array.isArray(resultData)) {\n                        this.setState({ QSPE: resultData })\n                    }\n                    else {\n                        this.setState({ QSPE: [resultData] })\n                    }\n                }\n                return []\n            })\n            .catch(err => {\n                console.log(\"getQSPE NG \" + JSON.stringify(err))\n            });\n        // this.setState({ QSPE: QSPEList.data })\n    }\n\n    createRTbreathetable = () => {\n        const { caseinfo, PickerDateRange } = this.props\n        const QSPE = this.state.QSPE\n        let DataList = FilterReg.QSPERegList(QSPE)\n        DataList = DataList.filter(data => {\n            let time = moment(data.Date + data.Time, \"YYYYMMDDHHmm\").valueOf()\n            return PickerDateRange[0] <= time && time <= PickerDateRange[1]\n        })\n        console.log(DataList)\n        return <RTbreathetable DataList={DataList} caseinfo={caseinfo}></RTbreathetable>\n    }\n\n    render() {\n        return (\n            <div style={{ marginBottom: \"20px\" }}>\n                <t1>呼吸器設定紀錄</t1>\n                {this.createRTbreathetable()}\n            </div>\n        );\n    }\n}\n\nexport default RTbreathe\n","import React, { Component } from 'react';\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Prescriptionordertablecell.scss'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Prescriptionordertablecell extends Component {\n    state = {\n        onEdit: false,\n        onMove: false,\n        remark: '',\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { caseinfo, value } = this.props\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, value.UDORDSEQ, \"prescription\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    on_Mouse() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: true\n                }\n            )\n        }\n    }\n    on_leave() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: false\n                }\n            )\n        }\n    }\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    checkStatus = () => {\n        const { value, SelectMode } = this.props\n        const ET = moment(value.UDENDDT, \"YYYY-MM-DD-HH:mm:ss.000000\").valueOf()\n\n        if (SelectMode !== 0) {\n            const Status = SelectMode === 0 || SelectMode === 1 ? \"生效中\" : \"已結束\";\n            return Status\n        } else {\n            const nowT = moment().valueOf()\n            const Status = ET < nowT ? \"已結束\" : \"生效中\";\n            return Status\n        }\n    }\n\n    render() {\n        const { caseinfo, value } = this.props\n        const Name = value.UDGNAME.toString()\n        const PName = value.UDRPNAME.toString()\n        const Unit = value.UDDOSAGE.toString() + \"/\" + value.UDDUNIT.toString() + \"/\" + value.UDFREQN.toString() + \"/\" + value.UDROUTE.toString()\n        const ST = moment(value.UDBGNDT, \"YYYY-MM-DD-HH:mm:ss.000000\").format('MM/DD HH:mm')\n        const ET = moment(value.UDENDDT, \"YYYY-MM-DD-HH:mm:ss.000000\").format('MM/DD HH:mm')\n        const Status = this.checkStatus()\n\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": PName,\n            \"remarkId\": value.UDORDSEQ,\n            \"remark\": this.state.remark,\n            \"transinId\": caseinfo.TRANSINID,\n            \"type\": \"prescription\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <div onMouseMove={() => this.on_Mouse()} onMouseLeave={() => this.on_leave()} className='prescriptiontablecell'>\n                <div style={{ display: \"grid\", gridTemplateRows: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"100px\" : \"80px 50px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 2fr 1fr 1fr 1fr\" }}>\n                        <div className='prescriptiontablecellcontext'><t4 className='prescriptiontablecellcontexttext'>{Name}</t4></div>\n                        <div className='prescriptiontablecellcontext'><t4 className='prescriptiontablecellcontexttext'>{PName}</t4></div>\n                        <div className='prescriptiontablecellcontext'><t3 className='prescriptiontablecellcontexttext'>{Unit}</t3></div>\n                        <div className='prescriptiontablecellcontext'><t3 className='prescriptiontablecellcontexttext'>{Status}</t3></div>\n                        <div className='prescriptiontablecellcontext'><t3 className='prescriptiontablecellcontexttext'>{ST}</t3></div>\n                        <div className='prescriptiontablecellcontext'><t3 className='prescriptiontablecellcontexttext'>{ET}</t3></div>\n                    </div>\n                    <t3 style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\", padding: \"0px 5px\", display: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"none\" : \"\"] }}>{this.state.remark}</t3>\n                    <div style={this.state.onMove ? { display: this.state.powerLogin >= 2 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", right: 0, height: [this.state.remark === undefined || this.state.remark === \"\" ? \"100px\" : \"130px\"], background: \"white\", width: \"77px\", border: \"rgba(238,238,238,1) 1px solid\" } : { display: \"none\" }}>\n                        <div onClick={() => this.Edit_state()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <img src={chooseedit} alt='chooseedit'></img>\n                        </div>\n                    </div>\n                </div>\n                <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            </div >\n        );\n    }\n}\n\nexport default Prescriptionordertablecell\n","import React, { Component } from 'react';\nimport Prescriptionordertablecell from './Prescriptionordertablecell'\nimport './Prescriptionordertable.scss'\n\n\nclass Prescriptionordertable extends Component {\n    render() {\n        const { UDORDER0, caseinfo, SelectMode } = this.props\n        const title = [\"學名\", \"商品名\", \"劑量/單位/途徑/頻次\", \"狀態\", \"開始日期\", \"結束日期\"]\n        const titlecell = title.map(function (value, index, arr) {\n            return (\n                <t3 className='title'>{value}</t3>\n            );\n        })\n        const Prescriptionordertabletable = UDORDER0.map(\n            (value, index, array) =>\n                <Prescriptionordertablecell caseinfo={caseinfo} key={index} value={value} SelectMode={SelectMode}></Prescriptionordertablecell>\n        )\n        return (\n            <div>\n                <div className='Prescriptionordertablelayout'>\n                    {titlecell}\n                </div>\n                <div style={{ maxHeight: \"400px\", overflow: \"auto\" }}>\n                    {Prescriptionordertabletable}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Prescriptionordertable\n","import React, { Component } from 'react';\nimport Prescriptionordertable from './Prescriptionordertable'\nimport {  Select, Input } from 'antd';\nimport './Prescriptionorder.scss'\nimport moment from 'moment'\nimport * as ApiGithub from '../../API/ApiGithub'\n\nclass Prescriptionorderlayout extends Component {\n    state = {\n        classParser: { \"mappings\": [] },\n        class: \"全部\",\n        SelectMode: 0,\n        InputMode: null,\n    }\n    componentDidMount() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Prescription\");\n                parser.mappings = [{ \"key\": \"全部\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson Prescription OK \" + JSON.stringify(parser))\n                this.setState({\n                    classParser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    onChangeClass = (value) => {\n        this.setState({ class: value })\n    }\n\n    handleChange = (value) => {\n        this.setState({ SelectMode: value })\n    }\n\n    onChangeinputKey = (event) => {\n        this.setState({ InputMode: event.target.value })\n    }\n\n    ControlBarRender() {\n        const { Option } = Select;\n        return (\n\n            <div class=\"searchBar\" style={{ display: \"grid\", gridTemplateColumns: \"140px 140px auto\", gridColumnGap: \"10px\", marginBottom: \"5px\" }}>\n                <Select defaultValue={this.state.class} style={{ width: 140 }} onChange={this.onChangeClass}>\n                    {this.state.classParser.mappings.map((mapping, index) => {\n                        return <Option value={mapping.key}>{mapping.key}</Option>\n                    })}\n                </Select>\n                <Select defaultValue={this.state.SelectMode} style={{ width: 140 }} onChange={this.handleChange}>\n                    <Option value={0}>全</Option>\n                    <Option value={1}>生效中</Option>\n                    <Option value={2}>失效/已結束/取消</Option>\n                </Select>\n                <Input id=\"prescriptionorderinput\" placeholder=\"輸入藥囑關鍵字\" onChange={this.onChangeinputKey} />\n            </div >\n        );\n    }\n\n    parseClass = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部\"] = []\n\n        inputs.forEach(input => {\n            let content = input.UDGNAME;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部\"].push(input)\n        });\n        return allResult;\n    }\n\n    onClickSearch = () => {\n        const { UDORDER0 } = this.props\n        //const UDORDER0 = [{\"UDDCPRSN\":\"        \",\"UDDURAT\":\"001\",\"UDSUMQTY\":\"1\",\"UDDRGNAM\":\"Cefotaxime (Claforan)*inj 500 mg\",\"UDGNAME\":\"Cefotaxime (Claforan)*inj 500 mg\",\"UDORSIGN\":\"DOC3964C\",\"UDSELF\":\"N\",\"UDSTATUS\":\"60\",\"UDPERNAM\":\"李成彧　　\",\"UDENDDT\":\"2019-08-13-15.00.00.000000\",\"UDDCPNAM\":\"　　　　　\",\"UDDOSAGE\":\"60      \",\"UDORDSEQ\":\"0011\",\"UDBGNDT\":\"2019-08-12-13.04.00.000000\",\"UDDRGNO\":\"01325\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"MG    \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"Claforan iv * inj 500 mg        \",\"UDFREQN\":\"STAT    \"},{\"UDDCPRSN\":\"DOC3941E\",\"UDDURAT\":\"014\",\"UDSUMQTY\":\"2\",\"UDDRGNAM\":\"Heparin sod \\\"CCP#* inj 5000u/5ml\",\"UDGNAME\":\"Heparin sod \\\"CCP#* inj 5000u/5ml\",\"UDORSIGN\":\"DOC3934E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"陳裕璇　　\",\"UDENDDT\":\"2019-08-19-11.45.00.000000\",\"UDDCPNAM\":\"何正尹　　\",\"UDDOSAGE\":\"X1      \",\"UDORDSEQ\":\"0025\",\"UDBGNDT\":\"2019-08-12-19.38.00.000000\",\"UDDRGNO\":\"00607\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"VL    \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"Agglutex #* inj 1000 u/ml 5 ml  \",\"UDFREQN\":\"QD      \"},{\"UDDCPRSN\":\"DOC3941E\",\"UDDURAT\":\"001\",\"UDSUMQTY\":\"0\",\"UDDRGNAM\":\"Immunoglobulin *inj 60mg/ml 50ml\",\"UDGNAME\":\"Immunoglobulin *inj 60mg/ml 50ml\",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-14-10.20.00.000000\",\"UDDCPNAM\":\"何正尹　　\",\"UDDOSAGE\":\"1       \",\"UDORDSEQ\":\"0054\",\"UDBGNDT\":\"2019-08-14-08.51.00.000000\",\"UDDRGNO\":\"03852\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"BOT   \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"HM.imm.globulin *inj60mg/ml 50ml\",\"UDFREQN\":\"STAT    \"},{\"UDDCPRSN\":\"DOC3941E\",\"UDDURAT\":\"007\",\"UDSUMQTY\":\"110\",\"UDDRGNAM\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDGNAME\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-16-10.44.00.000000\",\"UDDCPNAM\":\"何正尹　　\",\"UDDOSAGE\":\"55      \",\"UDORDSEQ\":\"0055\",\"UDBGNDT\":\"2019-08-14-09.17.00.000000\",\"UDDRGNO\":\"02145\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\"                                                                                                    \",\"UDDUNIT\":\"CC    \",\"UDROUTE\":\"IVD\",\"UDRPNAME\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDFREQN\":\"QD-TPN  \"},{\"UDDCPRSN\":\"DOC3915L\",\"UDDURAT\":\"005\",\"UDSUMQTY\":\"4\",\"UDDRGNAM\":\"Fluconazole inj 100 mg/50 ml    \",\"UDGNAME\":\"Fluconazole inj 100 mg/50 ml    \",\"UDORSIGN\":\"DOC3964C\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"李成彧　　\",\"UDENDDT\":\"2019-08-18-08.57.00.000000\",\"UDDCPNAM\":\"李苡萱　　\",\"UDDOSAGE\":\"6.6     \",\"UDORDSEQ\":\"0053\",\"UDBGNDT\":\"2019-08-14-10.07.00.000000\",\"UDDRGNO\":\"01885\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"MG    \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"Diflucan iv inj 100 mg/50 ml    \",\"UDFREQN\":\"QPM     \"},{\"UDDCPRSN\":\"        \",\"UDDURAT\":\"001\",\"UDSUMQTY\":\"1\",\"UDDRGNAM\":\"Dextrose inj 10% 500 ml         \",\"UDGNAME\":\"Dextrose inj 10% 500 ml         \",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"60\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-15-15.00.00.000000\",\"UDDCPNAM\":\"　　　　　\",\"UDDOSAGE\":\"30      \",\"UDORDSEQ\":\"0060\",\"UDBGNDT\":\"2019-08-14-10.48.00.000000\",\"UDDRGNO\":\"80051\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"CC    \",\"UDROUTE\":\"IVD\",\"UDRPNAME\":\"Dextrose inj 10% 500 ml \\\"YF\\\"    \",\"UDFREQN\":\"ST      \"},{\"UDDCPRSN\":\"        \",\"UDDURAT\":\"001\",\"UDSUMQTY\":\"0\",\"UDDRGNAM\":\"Dopamine #* inj 200 mg/5 ml     \",\"UDGNAME\":\"Dopamine #* inj 200 mg/5 ml     \",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"60\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-15-15.00.00.000000\",\"UDDCPNAM\":\"　　　　　\",\"UDDOSAGE\":\"20      \",\"UDORDSEQ\":\"0058\",\"UDBGNDT\":\"2019-08-14-10.48.00.000000\",\"UDDRGNO\":\"02220\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"MG    \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"Dopamin #* inj 200 mg/5 ml \\\"VPP\\\"\",\"UDFREQN\":\"ST      \"},{\"UDDCPRSN\":\"DOC3941E\",\"UDDURAT\":\"014\",\"UDSUMQTY\":\"5\",\"UDDRGNAM\":\"Dextrose inj 10% 500 ml         \",\"UDGNAME\":\"Dextrose inj 10% 500 ml         \",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-19-11.45.00.000000\",\"UDDCPNAM\":\"何正尹　　\",\"UDDOSAGE\":\"30      \",\"UDORDSEQ\":\"0059\",\"UDBGNDT\":\"2019-08-14-10.48.00.000000\",\"UDDRGNO\":\"80051\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"CC    \",\"UDROUTE\":\"IVD\",\"UDRPNAME\":\"Dextrose inj 10% 500 ml \\\"YF\\\"    \",\"UDFREQN\":\"QD      \"},{\"UDDCPRSN\":\"        \",\"UDDURAT\":\"001\",\"UDSUMQTY\":\"1\",\"UDDRGNAM\":\"Salbutamol inh. sol 5 mg/2.5 ml \",\"UDGNAME\":\"Salbutamol inh. sol 5 mg/2.5 ml \",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"60\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-15-15.00.00.000000\",\"UDDCPNAM\":\"　　　　　\",\"UDDOSAGE\":\"1       \",\"UDORDSEQ\":\"0061\",\"UDBGNDT\":\"2019-08-14-13.51.00.000000\",\"UDDRGNO\":\"03120\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"AMP   \",\"UDROUTE\":\"IH \",\"UDRPNAME\":\"Ventolin inh. sol 5 mg/2.5 ml   \",\"UDFREQN\":\"ST      \"}]\n        const parseClass = this.parseClass\n\n        let ListData = [];\n        const activeList = UDORDER0.filter(element => element.UDSTATUS === \"80\")\n        console.log(\"activeList \" + JSON.stringify(activeList));\n\n        let clusteredData = {}\n        if (this.state.classParser !== undefined) {\n            clusteredData = parseClass(activeList, this.state.classParser)\n        }\n        console.log(\"clusteredData \" + JSON.stringify(clusteredData));\n\n        //filter data by selected class\n        let filteredData = clusteredData[this.state.class];\n\n        ListData = this.SortDataList(filteredData)\n        return ListData\n    }\n\n    SortDataList = (DataList) => {\n        const { PickerDateRange } = this.props\n        const { InputMode, SelectMode } = this.state\n        console.log(moment(PickerDateRange[0]).format('YYYYMMDD'), moment(PickerDateRange[1]).format('YYYYMMDD'))\n\n        if (SelectMode !== 0) {\n            console.log(SelectMode)\n            /*\n            預設\n            全部 SelectMode == 0\n            已生效 SelectMode == 1, < 現在時間 <\n            失效 SelectMode == 2, < 現在時間\n            */\n            DataList = DataList.filter(data => {\n                const createST = moment(data.UDBGNDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n                const createET = moment(data.UDENDDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n                const nowDate = moment().valueOf()\n\n                switch (SelectMode) {\n                    case 1:\n                        return createST <= nowDate && nowDate <= createET\n                    case 2:\n                        // console.log(createET, nowDate)\n                        return createET < nowDate\n                    default: return null;\n                }\n            })\n        }\n\n        if (InputMode !== null) {\n            // console.log(InputMode)\n            DataList = DataList.filter(data => {\n                return data.UDGNAME.match(InputMode) !== null || data.UDRPNAME.match(InputMode) !== null\n            })\n        }\n\n        var DataFormat = []\n\n        const st = PickerDateRange[0]\n        const et = PickerDateRange[1] + (24 * 60 * 60 * 1000)\n\n        DataList.forEach(element => {\n            const time = moment(element.UDBGNDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n            console.log(time)\n            if (st <= time && time <= et) {\n                DataFormat.push(element)\n            }\n        })\n        return DataFormat\n    }\n\n    render() {\n        const { searchbar, caseinfo } = this.props\n        const { SelectMode } = this.state\n\n        const filterData = this.onClickSearch()\n\n        return (\n            <div>\n                <div className={searchbar ? 'PrescriptionOrderSearchBar' : 'PrescriptionOrderNonSearchBar'}>\n                    <t1>Prescription Order</t1>\n                </div>\n                {searchbar ? this.ControlBarRender() : null}\n                <Prescriptionordertable caseinfo={caseinfo} UDORDER0={filterData} SelectMode={SelectMode} ></Prescriptionordertable>\n            </div>\n        );\n    }\n}\n\nexport default Prescriptionorderlayout\n","import React, { Component } from 'react';\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Treatmentordertablecell.scss'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Treatmentordertablecell extends Component {\n    state = {\n        onEdit: false,\n        onMove: false,\n        remark: this.props.info.remark,\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { info } = this.props\n        ApiProvider.getOneRemark(this.props.caseinfo.TRANSINID, info.ORDSEQNO, \"treatment\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    on_Mouse() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: true\n                }\n            )\n        }\n    }\n    on_leave() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: false\n                }\n            )\n        }\n    }\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    render() {\n        const { info } = this.props\n        // console.log(info)\n        const Name = info.ORPROCED\n        const QD = info.ORFREQN\n        const Status = info.ORSTATUS\n        const ST = moment(info.ORBGNDT.toString(), 'YYYY-MM-DD').format(\"MM/DD\")\n        const ET = moment(info.ORENDDT.toString(), 'YYYY-MM-DD').format(\"MM/DD\")\n\n\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": Name,\n            \"remarkId\": info.ORDSEQNO,\n            \"remark\": this.state.remark,\n            \"transinId\": this.props.caseinfo.TRANSINID,\n            \"type\": \"treatment\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <div onMouseMove={() => this.on_Mouse()} onMouseLeave={() => this.on_leave()} className=\"treatmentordercell\">\n                <div style={{ display: \"grid\", gridTemplateRows: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"100px\" : \"80px 50px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 3fr 1fr 1fr\" }}>\n                        <t3 className='cellstyle'>{ST}</t3>\n                        <t3 className='cellstyle'>{ET}</t3>\n                        <t3 className='cellstyle'>{Name}</t3>\n                        <t3 className='cellstyle'>{QD}</t3>\n                        <t3 className='cellstyle'>{Status}</t3>\n                    </div>\n                    <t3 className='cellstyle' style={{ display: [this.state.remark === undefined || this.state.remark === \"\" ? \"none\" : \"\"] }}>{this.state.remark}</t3>\n                    <div style={this.state.onMove ? { display: this.state.powerLogin >= 2 ? \"flex\" : \"none\", justifyContent: \"center\", alignItems: \"center\", position: 'absolute', right: 0, height: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"100px\" : \"130px\"], background: \"white\", width: \"77px\", border: \"rgba(238,238,238,1) 1px solid\" } : { display: \"none\" }}>\n                        <div onClick={() => this.Edit_state()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <img src={chooseedit} alt='chooseedit'></img>\n                        </div>\n                    </div>\n                </div>\n                <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            </div>\n        );\n    }\n}\nexport default Treatmentordertablecell\n","import React, { Component } from 'react';\nimport Treatmentordertablecell from './Treatmentordertablecell'\nimport './Treatmentordertable.scss'\n\nclass Treatmentordertable extends Component {\n    render() {\n        const { TRTMNT01, caseinfo, PickerDate } = this.props\n\n        if (TRTMNT01 === null || TRTMNT01 === undefined) {\n            return null\n        }\n        const DataList = TRTMNT01 //SortDataList(TRTMNT01, PickerDate)\n        const Treatmentordertablecelllist = DataList.map(\n            (info, index) => <Treatmentordertablecell caseinfo={caseinfo} key={index} info={info}></Treatmentordertablecell>\n\n        )\n        const titlearray = ['開始日期', '結束日期', '處置名稱', '頻次', '狀態']\n        function titlecell(array) {\n            const result = array.map(function (info, index) {\n                return (\n                    <t3 className=\"treatmentordertablecellstyle\" key={index}>{info}</t3>\n                );\n            })\n            return result\n        }\n        return (\n            <div>\n                <div className='treatmentordertable'>\n                    {titlecell(titlearray)}\n                </div>\n                <div style={{ maxHeight: \"400px\", overflow: \"auto\" }}>\n                    {Treatmentordertablecelllist}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Treatmentordertable\n","import React, { Component } from 'react';\nimport Treatmentordertable from './Treatmentordertable'\nimport {  Select, Input } from 'antd';\nimport * as ApiGithub from '../../API/ApiGithub'\nimport moment from 'moment'\nimport './Treatmentorder.scss'\n\nclass Treatmentorderlayout extends Component {\n    state = {\n        // PickerDateRange: [moment().subtract(6, 'days'), moment()],\n        parser: { \"mappings\": [] },\n        DateRangeMode: {},\n        class: \"全部\",\n        SelectMode: 0,\n        InputMode: '',\n    }\n\n    componentDidMount() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Treatment\");\n                parser.mappings = [{ \"key\": \"全部\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson Treatment OK \" + JSON.stringify(parser))\n                this.setState({\n                    parser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    // onChange = (date, dateString) => {\n    //     this.setState({\n    //         PickerDateRange: date\n    //     })\n    // }\n\n    onChangeClass = (value) => {\n        this.setState({ class: value })\n    }\n\n    handleChange = (value) => {\n        this.setState({ SelectMode: value })\n    }\n\n    onChangeinputKey = (event) => {\n        this.setState({ InputMode: event.target.value })\n    }\n\n    Search_bar = () => {\n        // const { RangePicker } = DatePicker;\n        const { Option } = Select;\n\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 140px auto\", gridColumnGap: \"10px\", marginBottom: \"5px\" }}>\n                {/* <RangePicker defaultValue={this.state.PickerDateRange} format={\"YYYY/MM/DD\"}\n                    locale={\"zh_TW\"} placeholder={[\"請輸入日期\", \"請輸入日期\"]} onChange={this.onChange} allowClear={false} /> */}\n                <Select defaultValue={this.state.class} style={{ width: 140 }} onChange={this.onChangeClass}>\n                    {this.state.parser.mappings.map((mapping, index) => {\n                        return <Option key={index} value={mapping.key}>{mapping.key}</Option>\n                    })}\n                </Select>\n                <Select defaultValue={0} style={{ width: 140 }} onChange={this.handleChange}>\n                    <Option value={0}>全部</Option>\n                    <Option value={1}>生效中</Option>\n                    <Option value={2}>失效/已結束/取消</Option>\n                </Select>\n                <Input placeholder=\"輸入藥囑關鍵字\" value={this.state.InputMode} onChange={this.onChangeinputKey} />\n            </div >\n        );\n\n    }\n\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部\"] = []\n\n        inputs.forEach(input => {\n            let content = input.ORPROCED;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部\"].push(input)\n        });\n        return allResult;\n    }\n\n    onClickSearch = () => {\n        const { TRTMNT01 } = this.props\n        const parse = this.parse;\n\n        const activeList = TRTMNT01.filter(element => element.ORSTATUS === \"80\")\n        console.log(\"activeList \" + JSON.stringify(activeList));\n\n        let clusteredData = {}\n        if (this.state.parser !== undefined) {\n            clusteredData = parse(activeList, this.state.parser)\n        }\n\n        //filter data by selected class\n        let filteredData = clusteredData[this.state.class];\n\n        const ListData = this.SortDataList(filteredData)\n\n        return ListData\n    }\n\n    SortDataList = (DataList) => {\n        // console.log(JSON.stringify(DataList))\n        const { PickerDateRange } = this.props\n        const { InputMode, SelectMode } = this.state\n\n        if (SelectMode !== 0) {\n            /*\n            預設\n            全部 SelectMode == 0\n            已生效 SelectMode == 1, < 現在時間 <\n            失效 SelectMode == 2, < 現在時間\n            */\n            DataList = DataList.filter(data => {\n                const createST = moment(data.ORBGNDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n                const createET = moment(data.ORENDDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n                const nowDate = moment().valueOf()\n\n                switch (SelectMode) {\n                    case 1:\n                        return createST <= nowDate && nowDate <= createET\n               \n                    case 2:\n                        return createET < nowDate\n              \n                    default: return null;\n                }\n            })\n        }\n\n        if (InputMode !== '') {\n            DataList = DataList.filter(data => {\n                return data.ORPROCED.match(InputMode) !== null\n            })\n        }\n\n        var DataFormat = []\n\n        const st = PickerDateRange[0]\n        const et = PickerDateRange[1] + (24 * 60 * 60 * 1000)\n\n        DataList.forEach(element => {\n        \tconsole.log(element)\n            const time = moment(element.ORBGNDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n            console.log(time)\n            if (st <= time && time <= et) {\n                DataFormat.push(element)\n            }\n        })\n        return DataFormat\n    }\n\n    render() {\n        const { searchbar, caseinfo } = this.props\n\n        const filterData = this.onClickSearch()\n\n        return (\n            <div>\n                <div className={searchbar ? \"order_style\" : \"crossection_style\"}>\n                    <t1>Treatment Order</t1>\n                </div>\n                {searchbar ? this.Search_bar() : null}\n                <Treatmentordertable caseinfo={caseinfo} TRTMNT01={filterData} ></Treatmentordertable>\n            </div>\n        );\n    }\n}\n\nexport default Treatmentorderlayout\n","import React, { Component } from 'react';\nimport detaillogo from '../Image/svg/details.svg'\nimport { Tooltip } from 'antd';\n\nclass Notecell extends Component {\n    \n    updatetime_format(updatetime){\n        function monthformat(month){\n            return month + 1\n        }\n        return new Date(updatetime).getFullYear() + \"-\" + monthformat(new Date(updatetime).getMonth()) + \"-\" +new Date(updatetime).getDate() + \" \" + new Date(updatetime).getHours() + \":\" + new Date(updatetime).getMinutes()\n    }\n    render() {\n        const { info } = this.props\n        const text = info.updatedoctor + \"醫師於\" + this.updatetime_format(info.updatetime) + \"更新\"   \n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"19fr 1fr\", minHeight: \"50px\" }}>\n                <div style={{ wordBreak: \"break-all\", fontSize: \"1.3rem\", display: \"flex\", alignItems: \"center\" }}>{info.data}</div>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <Tooltip placement=\"right\" title={text}>\n                        <div>\n                            <img src={detaillogo} alt='detaillogo'></img>\n                        </div>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Notecell","import React, { Component } from 'react';\nimport Notecell from './Notecell'\nimport editlogo from '../Image/svg/Edit.svg'\nimport { Input, Button } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider';\nimport moment from 'moment';\nclass Note extends Component {\n    state = {\n        powerLogin: 0,\n        EditMode: false,\n        inputContent: '',\n        noteData: [],\n        PickerDate: moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.queryNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.HISID, this.state.PickerDate)\n    }\n    componentDidUpdate() {\n        const propDate = this.props.PickerDate\n        const stateDate = this.state.PickerDate\n        if (propDate !== stateDate) {\n            this.setState({ PickerDate: propDate })\n            this.queryNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.HISID, propDate)\n        }\n    }\n    queryNotice(TRANSID, HISID, pickerdate) {\n        const st = moment(moment(pickerdate).format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n        const et = moment(moment(pickerdate).format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf() + (24 * 60 * 60 * 1000)\n        console.log(TRANSID, HISID, st, et)\n        console.log(moment(st).format(\"YYYY/MM/DD\"))\n        console.log(moment(et).format(\"YYYY/MM/DD\"))\n        ApiProvider.getOnePatientNotice(TRANSID, HISID, st, et)\n            .then(result => {\n                console.log(\"getOnePatientNotice OK \" + JSON.stringify(result));\n                this.setState({\n                    noteData: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientNotice NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n    // queryOnePatientNotice() {\n    //     ApiProvider.getOnePatientNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID)\n    //         .then(data => {\n    //             console.log(\" OK \" + JSON.stringify(data))\n    //             this.setState({ noteData: data.data })\n    //         }).catch(err => { })\n    // }\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString()\n        const doc = sessionStorage.getItem('user')\n        ApiProvider.createNotice(this.props.caseinfo.HISID, this.state.inputContent, timeNowStr, this.props.caseinfo.TRANSINID, doc)\n            .then(data => {\n                this.queryNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID, this.props.PickerDate)\n            })\n            .catch(err => {\n                console.log(\" Err \" + JSON.stringify(err))\n            })\n        this.setState(\n            {\n                EditMode: false,\n                inputContent: undefined\n            }\n        )\n    }\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    EditControl() {\n        const edit = this.props.editstatus\n        if (edit) {\n            return (\n                <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin > 0 ? \"flex\" : \"none\" }}>\n                    <img src={editlogo} alt=\"editlogo\" />\n                </div>\n            );\n        }\n        return null\n    }\n    render() {\n        const List = this.state.noteData\n        console.log(List)\n        const notelist = List.map((info, index) => {\n            const time = moment(info.time, \"YYYY-MM-DD[T]HH:mm:ss.000+0000\").format('YYYY-MM-DD HH:mm:ss')\n            const localTime = moment.utc(time).toDate()\n            const infoObj = {\n                updatedictor: info.doc,\n                updatetime: moment(localTime).format(\"YYYY/MM/DD HH:mm:ss\"),\n                data: info.context\n            }\n            return <Notecell key={index} info={infoObj}></Notecell>\n        })\n        const EditButton = this.EditControl()\n        return (\n            <div style={{ marginTop: \"10px\", borderRadius: \"4px\" }}>\n                <div style={{ height: \"35px\", backgroundColor: \"#71b0e46e\", padding: \"0px 5px\", display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{this.props.title}</t2>\n                    {EditButton}\n                </div>\n                <div style={{ height: \"300px\" }}>\n                    <div style={{ maxHeight: \"300px\", overflow: \"auto\" }}>\n                        {notelist}\n                    </div>\n                    <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                        <div style={{ padding: \"5px 10px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <Input placeholder=\"輸入當日內容\" value={this.state.inputContent} onChange={this.onInputChange.bind(this)}></Input>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                                <Button onClick={() => this.onClickCancel()}>取消</Button>\n                                <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default Note\n","import React, { Component } from 'react';\nimport Schedule_event_list from '../../Module/Schedule_event'\nimport Note from '../../Module/Note'\nclass CrossectionSchedule extends Component {\n    render() {\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\" }}>\n                <Schedule_event_list source={this.props.source} PickerDate={this.props.PickerDate} title=\"排程\" caseinfo={this.props.caseinfo} editstatus={this.props.editstatus}></Schedule_event_list>\n                <Note title=\"當日評論Comment\" PickerDate={this.props.PickerDate} caseinfo={this.props.caseinfo} data={this.props.noticeData} editstatus={this.props.editstatus}></Note>\n            </div>\n        );\n    }\n}\n\nexport default CrossectionSchedule;\n","import React, { Component } from 'react';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport Wardinfousercheckbox from '../../Wardview/Wardunfousercheckbox';\n\nclass CrosssectionTodo extends Component {\n    state = {\n        todoList: []\n    }\n\n    componentDidMount() {\n        this.queryTodo();\n    }\n\n    queryTodo() {\n        ApiProvider.getOneTodo(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID)\n            .then(result => {\n                console.log(\"getOneTodo OK \" + JSON.stringify(result.data));\n                this.setState({\n                    todoList: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getOneTodo NG \" + JSON.stringify(err));\n            });\n    }\n\n    renderTodoItem() {\n        if (this.state.todoList.length === 0) {\n            return (\n                <div>沒有待辦事項</div>\n            )\n        } else {\n            return this.state.todoList.map((item, index) => {\n                if (item.type === \"未完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={false}></Wardinfousercheckbox>);\n                } else {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={true}></Wardinfousercheckbox>);\n                }\n\n            });\n        }\n    }\n\n    render() {\n        const renderTodoItem = this.renderTodoItem.bind(this);\n        return (\n            <div>\n                <div style={{ display: \"flex\", alignItems: \"center\", padding: \"0px 5px\", backgroundColor: \"#cccccc\", height: \"50px\" }}>\n                    <t2>To Do List</t2>\n                </div>\n                {renderTodoItem()}\n            </div>\n        );\n    }\n}\n\nexport default CrosssectionTodo\n","import React, { Component } from 'react';\nimport Vitalsign from './Vitalsign';\nimport Controlbar from '../Controlbar';\nimport CrossectionIo from './Crossection_io'\nimport Labviewlayout from './Labview'\nimport Nonlabviewlayout from './Nonlabview'\nimport GAS from './GAS'\nimport RTbreathe from './RTbreathe'\nimport Prescriptionorderlayout from '../Prescriptionorder/Prescriptionorder'\nimport Treatmentorderlayout from '../Treatmentorder/Treatmentorder'\nimport CrossectionSchedule from './Crosssectionschedule'\nimport CrosssectionTodo from './Crosssection_todo'\nimport './Crosssectionlayout.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass Crosssectionlayout extends Component {\n    state = {\n        Cross_item: [0, 1, 2, 3, 4, 5],\n        RESDGLU1: [],\n        RESLAB02: [],\n        RESLAB01: [],\n        RESDBGAS: [],\n        RESLAB0C: [],\n        RESSECT: [],\n        UDORDER0: [],\n        TRTMNTQ1: [],\n\n        PickerDate: moment(moment().format('YYYYMMDD')).valueOf(),\n\n        SelectInterval: 1,\n\n        preCID: null,\n        preHID: null\n    }\n    componentDidMount() {\n        const CID = this.props.caseinfo.CASEID\n        const HID = this.props.caseinfo.HISID\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        this.setState({\n            preCID: CID,\n            preHID: HID\n        })\n        this.NIS_API_IO(this.state.PickerDate, CID, HID, TRDT)\n    }\n    componentDidUpdate() {\n        const CID = this.props.caseinfo.CASEID\n        const HID = this.props.caseinfo.HISID\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        const { preCID, preHID } = this.state\n        if (preCID !== CID || preHID !== HID) {\n            this.setState({\n                preCID: CID,\n                preHID: HID\n            })\n            this.NIS_API_IO(this.state.PickerDate, CID, HID, TRDT)\n        }\n    }\n    NIS_API_IO(Datetime, CID, HID, TRDT) {\n        function selectMonthInterval(Datetime) {\n            const timestampInterval = new Date().getTime() - Datetime\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        const TransinDate = moment(TRDT).format(\"YYYY-MM-DD\")\n        const MonthInterval = selectMonthInterval(Datetime)\n        ApiProvider.getStoredProcedureRESDGLU1(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESDGLU1: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDGLU1 NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESLAB02(HID, TransinDate)\n            .then(data => {\n                this.setState({ RESLAB02: data.data })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESLAB02 NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESLAB01(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESLAB01: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESLAB01 NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESDBGAS(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESDBGAS: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDBGAS NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESLAB0C(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESLAB0C: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESLAB0C NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESSECT(HID, MonthInterval, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                this.setState({\n                    RESSECT: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESSECT NG \" + JSON.stringify(err))\n            });\n\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                this.setState({\n                    UDORDER0: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureUDORDER0 NG \" + JSON.stringify(err))\n            });\n        ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => {\n                this.setState({\n                    TRTMNTQ1: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureTRTMNTQ1 NG \" + JSON.stringify(err))\n            });\n    }\n\n    callbackFunction = (item_array) => {\n        this.setState({ Cross_item: item_array })\n    }\n\n    callbackDateFunction = (PickerTimeStamp) => {\n        console.log(PickerTimeStamp)\n        this.setState({ PickerDate: PickerTimeStamp })\n    }\n\n    display_item(number) {\n        const item = this.state.Cross_item\n        var filter = item.some(function (item, index, array) {\n            return item === number\n        });\n        return filter\n    }\n    render() {\n        const crosssectioncontrollist = [\n            {\n                \"name\": \"生命徵象/輸出入\",\n                \"scrollpoint\": \"vitalsignIO\"\n            },\n            {\n                \"name\": \"檢驗結果\",\n                \"scrollpoint\": \"lab\"\n            },\n            {\n                \"name\": \"呼吸評估\",\n                \"scrollpoint\": \"rt\"\n            },\n            {\n                \"name\": \"醫藥囑\",\n                \"scrollpoint\": \"order\"\n            },\n            {\n                \"name\": \"行事曆及註記\",\n                \"scrollpoint\": \"schedule\"\n            }\n        ]\n        const { caseinfo } = this.props\n        const TimeStampPickerDate = this.state.PickerDate\n        const endTime = TimeStampPickerDate + (31 * 60 * 60 * 1000)\n        const startTime = endTime - (3 * 24 * 60 * 60 * 1000)\n        const PickerDateRange = [TimeStampPickerDate - (6 * 24 * 60 * 60 * 1000), TimeStampPickerDate]\n        // console.log(moment(PickerDateRange[0]).format('YYYYMMDD'), moment(PickerDateRange[1]).format('YYYYMMDD'))\n\n        return (\n            <div>\n                <Controlbar caseinfo={caseinfo} PickerDate={this.state.PickerDate} parentDateCallback={this.callbackDateFunction} parentCallback={this.callbackFunction} btnlist={crosssectioncontrollist} item_array={this.state.Cross_item}></Controlbar>\n                <div id=\"crossection\" className='crossectioncontent'>\n                    <div id={\"vitalsignIO\"} style={this.display_item(0) ? { display: \"grid\", gridTemplateColumns: \"2fr 1fr\", gridGap: \"10px\", marginBottom: \"10px\" } : { display: \"none\" }}>\n                        <Vitalsign PickerDate={this.state.PickerDate} caseinfo={caseinfo}></Vitalsign>\n                        <CrossectionIo PickerDate={this.state.PickerDate} caseinfo={caseinfo} title=\"I/O\"></CrossectionIo>\n                    </div>\n                    <div id={\"lab\"} style={this.display_item(1) ? { display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" } : { display: \"none\" }}>\n                        <Labviewlayout PickerDate={this.state.PickerDate} caseinfo={caseinfo} RESLAB01={this.state.RESLAB01} RESLAB02={this.state.RESLAB02} RESDBGAS={this.state.RESDBGAS} RESLAB0C={this.state.RESLAB0C} RESDGLU1={this.state.RESDGLU1} RESSECT={this.state.RESSECT}></Labviewlayout>\n                        <Nonlabviewlayout caseinfo={caseinfo} StartTime={startTime} EndTime={endTime}></Nonlabviewlayout>\n                    </div>\n                    <div id={\"rt\"} style={this.display_item(2) ? { display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" } : { display: \"none\" }}>\n                        <GAS caseinfo={caseinfo} PickerDateRange={PickerDateRange} searchbar={false}></GAS>\n                        <RTbreathe caseinfo={caseinfo} PickerDateRange={PickerDateRange} searchbar={false}></RTbreathe>\n                    </div>\n                    <div id={\"order\"} style={this.display_item(3) ? { display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" } : { display: \"none\" }}>\n                        <Prescriptionorderlayout UDORDER0={this.state.UDORDER0} caseinfo={caseinfo} searchbar={false} PickerDateRange={PickerDateRange}></Prescriptionorderlayout>\n                        <Treatmentorderlayout TRTMNT01={this.state.TRTMNTQ1} caseinfo={caseinfo} searchbar={false} PickerDateRange={PickerDateRange}></Treatmentorderlayout>\n                    </div>\n                    <div id={\"schedule\"} style={this.display_item(4) ? null : { display: \"none\" }}>\n                        <CrossectionSchedule source={1} PickerDate={this.state.PickerDate} editstatus={false} caseinfo={caseinfo}></CrossectionSchedule>\n                    </div>\n                    <div style={this.display_item(5) ? null : { display: \"none\" }}>\n                        <CrosssectionTodo caseinfo={caseinfo} ></CrosssectionTodo>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Crosssectionlayout;\n","import React, { Component } from 'react';\nimport IOpage from '../../Module/iopage'\n\nclass Inoutonchronic extends Component {\n    render() {\n        const { title, caseinfo, IntervalStatus, PickerDate } = this.props\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <t1>{title}</t1>\n                <IOpage caseinfo={caseinfo} Status={\"Chronic\"} IntervalStatus={IntervalStatus} PickerDate={PickerDate}></IOpage>\n            </div>\n        );\n    }\n}\n\nexport default Inoutonchronic","import React, { Component } from 'react'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport { Spin, Icon } from 'antd';\nimport moment from 'moment'\n\nclass Chronictablecelltooltip extends Component {\n    state = {\n        preStartTimeStamp: null,\n        loading: true,\n        resultStr: \"--\"\n    }\n    componentDidUpdate() {\n        const { startTimeStamp } = this.props\n        const { preStartTimeStamp } = this.state\n        if (startTimeStamp !== preStartTimeStamp) {\n            console.log(\"Chronictablecelltooltip componentDidUpdate\")\n        }\n    }\n    componentDidMount() {\n        const { startTimeStamp } = this.props\n        this.setState({ preStartTimeStamp: startTimeStamp })\n        console.log(\"Chronictablecelltooltip componentDidMount\")\n        this.apiGet()\n    }\n    apiGet() {\n        const { tooltipelement, caseinfo } = this.props\n        const ORMM = tooltipelement.ORMM.toString().trim()\n        const ORDSEQNO = tooltipelement.ORDSEQNO.toString().trim()\n        //RESDISP\n        ApiProvider.getStoredProcedureRESDISP(caseinfo.HISID, ORMM, caseinfo.CASEID, ORDSEQNO)\n        .then(data => {\n            console.log(\"getStoredProcedureRESDISP OK \" + JSON.stringify(data.data))\n            //const fakeData = [{\"RECNO\":\"1\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"正式報告\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"2\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"                                臺北榮民總醫院病理檢驗部報告\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"3\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  病患資訊：         新生兒加護病房 - 8 張恩慈之男 4599819-4 男性 3天大 NBD\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"4\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  申請序號 / 工作號：     0APKHTG/2502091284       開立時間：    20200207  0809\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"5\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  開醫囑者：         DOC3915L 李苡萱         簽收時間：    20200209  1850\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"6\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  報告人 ：          LABE1523 林宜慧         報告時間：    20200209  1850\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"7\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  檢體 ：           Blood\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"8\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  醫囑名稱：         Crea,ALT,Mg,NA,K,P,\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"9\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"   項目     H/L  結果   前次結果 單位     參考值\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"10\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"   BUN            ()\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"11\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"   Na        145  ()   mmol/L   136~145 mmol/L\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"12\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"   K         4.0   ()   mmol/L   3.5~5.1 mmol/L\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"}]\n\n            //parse content\n            const parsers = this.props.summaryParse\n            const parser  = data.data.length > 0 ? this.select_parser(\"Chronic table\", data.data[0], parsers) : undefined\n            \n            if(parser !== undefined) {\n                //concat all content\n                let allContent = \"\"\n                //fakeData.forEach(item => {\n                data.data.forEach(item => {\n                    allContent = `${allContent} \"\\n\" ${item.CONTENT}`;\n                });\n                //console.log(\"allContent\" + JSON.stringify(allContent))\n\n                const result = this.parse(allContent, parser)\n                //console.log(\"result\" + JSON.stringify(result))\n\n                const resultStr = this.summerize(result, parser)\n                //console.log(\"resultStr\" + JSON.stringify(resultStr))\n\n                this.setState({resultStr: resultStr})\n            }\n\n            this.setState({loading: false})\n        })\n        .catch(err => {\n            console.log(\"getStoredProcedureRESDISP NG \" + JSON.stringify(err))\n            this.setState({loading: false})\n        })\n    }\n    select_parser = (parserName, input, parsers) => {\n        const inputBeginTime = moment(input.ORBGNDT, \"YYYY-MM-DD\").valueOf()\n        return parsers.find(x =>\n            parserName.match(x.parser_name)\n            && (!x.apply_condition.start_time || inputBeginTime >= x.apply_condition.start_time)\n        )\n    }\n    parse = (input, parser) => {\n        let mappings = parser.mappings\n        let result = {}\n        mappings.forEach(mapping => {\n            const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n            const match = input.match(re)\n            result[mapping.key] = match && match[mapping.position]\n        });\n        return result;\n    }\n    summerize = (kv_pairs, parser) => {\n        let summary_str = parser.summary\n        for (const key in kv_pairs) {\n            let match_replacer = summary_str.match(RegExp(\"\\\\[\" + key + \"(:(.*?))?\\\\]\"))\n            let replacer = \"\"\n            if (match_replacer && match_replacer.length === 3) {\n                replacer = match_replacer[2]\n            }\n            const match = summary_str.match(RegExp(\"\\\\[\" + key + \":(.*?)?\\\\]\"))\n            summary_str = summary_str.replace(match[0], match[0].replace(match[1], kv_pairs[key] || replacer))\n        }\n        return summary_str;\n    }\n    render() {\n        const { tooltipelement } = this.props\n        const { loading, resultStr } = this.state\n        const infoTime = tooltipelement.ORRCPTM.toString().trim()\n        const name = tooltipelement.ORPROCED.toString().trim()\n        const reportname = tooltipelement.ORPROCED.toString().trim() + tooltipelement.ORSPCN1.toString().trim()\n        const cellRenderData = [reportname, infoTime, resultStr]\n        const Cell = cellRenderData.map(function (value, index) {\n            if(loading) {\n                const antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n                return (\n                    <Spin key={index} indicator={antIcon} />\n                );\n            } else {\n                return (\n                    <div key={index} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"0px 5px\" }}>\n                        {value}\n                    </div>\n                );\n            }\n            \n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"300px 100px 200px\" }}>{Cell}</div>\n        );\n    }\n}\n\nexport default Chronictablecelltooltip","import React, { Component } from 'react'\nimport { Tooltip } from 'antd'\nimport moment from 'moment'\nimport Chronictablecelltooltip from './ChronicTableCellTooltipCell'\n\nclass Chronictablecell extends Component {\n    CellText() {\n        const { element, caseinfo, summaryParse } = this.props\n        const start = moment(element.StartTime).format(\"YYYY/MM/DD HH:mm:ss\")\n        const startTimeStamp = moment(element.StartTime).valueOf()\n        const end = moment(element.EndTime).format(\"HH:mm:ss\")\n        const title = [\"報告類別\", \"採檢時間\", \"檢驗數據\"]\n        const titleCell = title.map(function (value, index) {\n            return (\n                <div key={index} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"0px 5px\" }}>\n                    {value}\n                </div>\n            );\n        })\n        const objectElement = element.element\n        const objectElementCell = objectElement.map(function (info, index, arr) {\n            return (\n                <Chronictablecelltooltip key={index} startTimeStamp={startTimeStamp} tooltipelement={info} caseinfo={caseinfo} summaryParse={summaryParse}></Chronictablecelltooltip>\n            );\n        })\n        return (\n            <div>\n                <div>{start}-{end}</div>\n                <div>檢驗檢查項目 : {element.title}類</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"300px 100px 200px\" }}>\n                    {titleCell}\n                </div>\n                {objectElementCell}\n            </div>\n        );\n    }\n    render() {\n        function valueNull(value) {\n            if (value === null || value === undefined || value === 0) {\n                return \"--\"\n            }\n            return value\n        }\n        const { element } = this.props\n        const TitleRender = this.CellText()\n        if (element.element.length === 0) {\n            return (\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>--</div>\n            );\n        }\n        return (\n            <Tooltip title={TitleRender} autoAdjustOverflow={true} overlayStyle={{ maxWidth: \"800px\" }}>\n                <div style={{ fontSize: \"16px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                    {valueNull(element.element.length)}\n                </div>\n            </Tooltip>\n        );\n    }\n}\n\nexport default Chronictablecell","import React, { Component } from 'react'\nimport moment from 'moment'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport * as ApiPronider from '../../API/ApiProvider'\nimport Chronictablecell from './ChronicTableCell'\n// import * as RSData from '../../Resource/RESSECT'\n\nclass Tableonchronic extends Component {\n    state = {\n        LabParse: [],\n        SummaryParse: [{apply_condition: \"\", mappings: []}],\n        RESSECT: [],\n        preHID: null\n    }\n\n    ApiGet(HID, monthly) {\n        ApiGithub.getGitHubJson(\"Chronic_Lab.json\")\n            .then(data => {\n                this.setState({\n                    LabParse: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiGithub.getGitHubJson(\"Summary.json\")\n            .then(data => {\n                this.setState({\n                    SummaryParse: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiPronider.getStoredProcedureRESSECT(HID, \"1\", \"ALL\", \"DOC3924B\")\n            .then(data => {\n                this.setState({ RESSECT: data.data })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        // this.setState({ RESSECT: RSData.data })\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDate, chronic_state } = this.props\n        const HID = caseinfo.HISID\n        const monthly = this.fotmatTimerMonthly(PickerDate)\n        this.setState({ preHID: caseinfo.HISID, prePickerDate: PickerDate, preInterval: chronic_state })\n        this.ApiGet(HID, monthly)\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDate, chronic_state } = this.props\n        const HID = caseinfo.HISID\n        const { preHID, prePickerDate, preInterval } = this.state\n        const monthly = this.fotmatTimerMonthly(PickerDate)\n        if (HID !== preHID || prePickerDate !== PickerDate || preInterval !== chronic_state) {\n            this.setState({ preHID: caseinfo.HISID, prePickerDate: PickerDate, preInterval: chronic_state })\n            this.ApiGet(HID, monthly)\n        }\n    }\n\n    fotmatTimerMonthly(pickerdate) {\n        const timestampInterval = moment().valueOf() - pickerdate\n        const timestampMonth = 30 * 24 * 60 * 60 * 1000\n        const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n        return MonthInt\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    render() {\n        function DataForTimer(dataList, interval, pickerdate) {\n            function starttime(interval, entTimeStamp) {\n                if (interval === 0) {\n                    return entTimeStamp - (24 * 60 * 60 * 1000)\n                }\n                if (interval === 1) {\n                    return entTimeStamp - (3 * 24 * 60 * 60 * 1000)\n                }\n                if (interval === 2) {\n                    return entTimeStamp - (7 * 24 * 60 * 60 * 1000)\n                }\n                return entTimeStamp - (14 * 24 * 60 * 60 * 1000)\n            }\n\n            function fotmatTimerForTimer(interval, st, list, title, grid) {\n                var TimerForList = []\n                for (let index = 0; index < interval; index++) {\n                    const StartTime = st + (index * grid * 60 * 60 * 1000)\n                    const EndTime = st + ((index + 1) * grid * 60 * 60 * 1000)\n                    const filterTimerForDataList = list.filter(function (element, index, arr) {\n                        const time = element.ORRCPDT.toString().trim() + element.ORRCPTM.toString().trim()\n                        const timestamp = moment(time, 'YYYY-MM-DDHH:mm:ss').valueOf()\n                        return StartTime <= timestamp && timestamp < EndTime\n                    })\n                    TimerForList.push({\n                        StartTime: StartTime,\n                        EndTime: EndTime,\n                        element: filterTimerForDataList,\n                        title: title\n                    })\n                }\n                return TimerForList\n            }\n            console.log(dataList.array)\n            const et = pickerdate + (31 * 60 * 60 * 1000)\n            const st = starttime(interval, et)\n            const slectInt = TimeInterval(interval)\n            const DataTransForTimer = fotmatTimerForTimer(slectInt.interval, st, dataList.array, dataList.title, slectInt.grid)\n            return DataTransForTimer\n        }\n\n\n\n        function LabFormat(ressect, parsrList) {\n            var arrayBiochemical = []\n            var arrayBlood = []\n            var arrayCultivate = []\n            var arrayGAS = []\n            var arrayGlu = []\n            var arrayRadiation = []\n            var arrayOther = []\n\n            console.log(parsrList)\n            for (let index = 0; index < ressect.length; index++) {\n                const element = ressect[index];\n                const element_ORPROCED = element.ORPROCED\n                const BioFind = parsrList.Biochemical.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const BloFind = parsrList.Blood.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const CulFind = parsrList.Cultivate.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const GasFind = parsrList.GAS.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const GluFind = parsrList.GAS.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const RadFind = parsrList.Radiation.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                if (BioFind) {\n                    arrayBiochemical.push(element)\n                }\n                if (BloFind) {\n                    arrayBlood.push(element)\n                }\n                if (CulFind) {\n                    arrayCultivate.push(element)\n                }\n                if (GasFind) {\n                    arrayGAS.push(element)\n                }\n                if (GluFind) {\n                    arrayGlu.push(element)\n                }\n                if (RadFind) {\n                    arrayRadiation.push(element)\n                }\n                if (BioFind === false && BloFind === false && CulFind === false && GasFind === false && RadFind === false) {\n                    arrayOther.push(element)\n                }\n            }\n            const arrayList = []\n            arrayList.push({\n                title: \"生化\",\n                array: arrayBiochemical,\n            })\n            arrayList.push({\n                title: \"血液\",\n                array: arrayBlood,\n            })\n            arrayList.push({\n                title: \"培養\",\n                array: arrayCultivate,\n            })\n            arrayList.push({\n                title: \"GAS\",\n                array: arrayGAS,\n            })\n            arrayList.push({\n                title: \"Glu\",\n                array: arrayGlu,\n            })\n            arrayList.push({\n                title: \"放射\",\n                array: arrayRadiation,\n            })\n            arrayList.push({\n                title: \"其他\",\n                array: arrayOther,\n            })\n            return arrayList\n        }\n        function TimeInterval(interval) {\n            if (interval === 0) {\n                return { interval: 24, grid: 1 }\n            }\n            if (interval === 1) {\n                return { interval: 18, grid: 4 }\n            }\n            if (interval === 2) {\n                return { interval: 21, grid: 8 }\n            }\n            return { interval: 14, grid: 24 }\n        }\n        const { chronic_state, caseinfo, PickerDate, title } = this.props\n        const { LabParse, RESSECT, SummaryParse } = this.state\n        if (LabParse === null || LabParse === undefined || LabParse.length === 0) {\n            return null\n        }\n        if (RESSECT === null || RESSECT === undefined || RESSECT.length === 0) {\n            return null\n        }\n        const data = LabFormat(RESSECT, LabParse)\n        const statestatus = TimeInterval(chronic_state)\n        const title_list = title.map((info, index) =>\n            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"40px\", border: \"1px solid rgba(238,238,238,1)\", borderCollapse: \"collapse\", backgroundColor: \"#cccccc\" }} key={index}>\n                <t2>{info.title}</t2>\n            </div>\n        )\n        const cell_list = data.map(function (value, index, arr) {\n            const DataList = DataForTimer(value, chronic_state, PickerDate)\n            return DataList\n        })\n        console.log(data)\n        const cellRender = cell_list.map(function (value, index, array) {\n            const valuecell = value.map(function (element, index, arr) {\n                const toolTipID = \"ChronicTableTootip\" + index\n                return (\n                    <Chronictablecell key={toolTipID} element={element} caseinfo={caseinfo} summaryParse={SummaryParse}></Chronictablecell>\n                );\n            })\n            return valuecell\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\" }}>\n                <div style={{ display: \"grid\", gridTemplateRows: \"repeat(\" + title.length + \",1fr)\" }}>\n                    {title_list}\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + statestatus.interval + \",1fr)\", gridTemplateRows: \"repeat(7,1fr)\" }}>\n                    {cellRender}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Tableonchronic","import React, { Component } from 'react'\nimport Tableonchronic from './ChronicTable'\n\nclass Chroniclab extends Component {\n    render() {\n        const { title, caseinfo, select_interval, PickerDate } = this.props\n        const item_title = [{ title: \"生化\" }, { title: \"血液\" }, { title: \"培養\" }, { title: \"GAS\" }, { title: \"Glu\" }, { title: \"放射\" }, { title: \"其他\" }]\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <t1>{title}</t1>\n                <Tableonchronic title={item_title} caseinfo={caseinfo} chronic_state={select_interval} PickerDate={PickerDate}></Tableonchronic>\n            </div>\n        );\n    }\n}\n\nexport default Chroniclab","import React, { Component } from 'react'\nimport rtlogo from '../../Image/svg/RT.svg'\nimport { Tooltip } from 'antd'\nimport moment from 'moment'\n\nclass Chronicrttablecell extends Component {\n    ToolTipRender() {\n        const { cellelement } = this.props\n        const startTime = moment(cellelement.startTime).format(\"MM/DD HH:mm\")\n        const endTime = moment(cellelement.endTime).format(\"MM/DD HH:mm\")\n        const RTListRender = cellelement.element.map(function (info, index, arr) {\n            const time = moment(info.Date + info.Time, \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\")\n            const Mode = info.Mode\n            const Setting = info.Setting\n            return (\n                <div>\n                    <div>Time:{time}</div>\n                    <div>Mode:{Mode}</div>\n                    <div>Setting:{Setting}</div>\n                </div>\n            );\n        })\n\n        return (\n            <div>\n                <div>{startTime}~{endTime}</div>\n                {RTListRender}\n            </div>\n        );\n    }\n    render() {\n        function changetext(text) {\n            if (text === 0) {\n                return '--'\n            }\n            return <img src={rtlogo} alt=\"rtlogo\" />\n        }\n        const { cellelement } = this.props\n        if (cellelement.length === 0) {\n            return <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center', border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>--</div>\n        }\n        return (\n            <Tooltip placement=\"right\" autoAdjustOverflow={true} title={this.ToolTipRender()} overlayStyle={{ maxWidth: \"800px\" ,background: \"white\"}}>\n                <centerstyle style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                    {changetext(cellelement.length)}\n                </centerstyle>\n            </Tooltip>\n        );\n    }\n}\nexport default Chronicrttablecell","import React, { Component } from 'react'\nimport * as FilterReg from '../../Function/FiliterReg'\nimport moment from 'moment'\nimport X2JS from 'x2js';\nimport * as ApiProvider from '../../API/ApiProvider'\nimport Chronicrttablecell from './ChronicRTTableCell'\n// import * as QSPEList from '../../Resource/QSPE'\n\nclass Chronicrttable extends Component {\n    state = {\n        QSPE: [],\n        preCID: null,\n        prePickerdate: null,\n        preInterval: null\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDate, select_interval } = this.props\n        this.setState({ preCID: caseinfo.CASEID, prePickerdate: PickerDate, preInterval: select_interval })\n        const timer = this.timerFormat(PickerDate, select_interval)\n        const start = moment(timer.StartTime).format(\"YYYYMMDDHHmm\")\n        const end = moment(timer.EndTime).format(\"YYYYMMDDHHmm\")\n        this.getQSPE(caseinfo.CASEID, start, end)\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDate, select_interval } = this.props\n        const { preCID, prePickerdate, preInterval } = this.state\n        if (caseinfo.CASEID !== preCID || PickerDate !== prePickerdate || preInterval !== select_interval) {\n            const { caseinfo, PickerDate } = this.props\n            this.setState({ preCID: caseinfo.CASEID, prePickerdate: PickerDate, preInterval: select_interval })\n            const timer = this.timerFormat(PickerDate, select_interval)\n            const start = moment(timer.StartTime).format(\"YYYYMMDDHHmm\")\n            const end = moment(timer.EndTime).format(\"YYYYMMDDHHmm\")\n            this.getQSPE(caseinfo.CASEID, start, end)\n        }\n\n    }\n    getQSPE(CID, st, et) {\n        const xm2 = new X2JS()\n        ApiProvider.getQSPE(CID, st, et)\n            .then(data => {\n                console.log(xm2.xml2js(data.data).outmsg.resconts.rescont)\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                if (Array.isArray(parsedata)) {\n                    this.setState({ QSPE: parsedata })\n                }\n                else {\n                    this.setState({ QSPE: [parsedata] })\n                }\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        // this.setState({ QSPE: QSPEList.data })\n    }\n\n    timerFormat(PickerDate, Interval) {\n        const EndTime = PickerDate + (31 * 60 * 60 * 1000)\n        if (Interval === 0) {\n            return {\n                StartTime: EndTime - (24 * 60 * 60 * 1000),\n                EndTime: EndTime,\n                Interval: 24,\n                grid: 1\n            }\n        }\n        if (Interval === 1) {\n            return {\n                StartTime: EndTime - (3 * 24 * 60 * 60 * 1000),\n                EndTime: EndTime,\n                Interval: 18,\n                grid: 4\n            }\n\n        }\n        if (Interval === 2) {\n            return {\n                StartTime: EndTime - (7 * 24 * 60 * 60 * 1000),\n                EndTime: EndTime,\n                Interval: 21,\n                grid: 8\n            }\n\n        }\n        return {\n            StartTime: EndTime - (14 * 24 * 60 * 60 * 1000),\n            EndTime: EndTime,\n            Interval: 14,\n            grid: 24\n        }\n    }\n\n\n\n    table_content() {\n        function formatDataList(startTime, interval, list, grid) {\n            var timerList = []\n            for (let index = 0; index < interval; index++) {\n                const start = startTime + (index * grid * 60 * 60 * 1000)\n                const end = startTime + ((index + 1) * grid * 60 * 60 * 1000)\n                const listFilter = list.filter(function (info, index, arr) {\n                    const time = moment(info.Date.toString() + info.Time.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    return start <= time && time < end\n                })\n                timerList.push({\n                    length: listFilter.length,\n                    element: listFilter,\n                    startTime: start,\n                    endTime: end\n                })\n            }\n            return timerList\n        }\n\n        const { select_interval, PickerDate } = this.props\n        const QSPE = this.state.QSPE\n        const dataList = FilterReg.QSPERegList(QSPE)\n        if (dataList === null || dataList === undefined || dataList.length === 0) {\n            return null\n        }\n        const timer = this.timerFormat(PickerDate, select_interval)\n        const calldata = formatDataList(timer.StartTime, timer.Interval, dataList, timer.grid)\n        const cellRender = calldata.map(function (value, index, arr) {\n            return (\n                <Chronicrttablecell key={index} cellelement={value}></Chronicrttablecell>\n            );\n        })\n        return cellRender\n    }\n    render() {\n        const { select_interval, PickerDate } = this.props\n        const timer = this.timerFormat(PickerDate, select_interval)\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\", height: \"40px\" }}>\n                <div style={{ backgroundColor: \"#cccccc\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <t2>呼吸評估</t2>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + timer.Interval + \",1fr)\" }}>\n                    {this.table_content()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chronicrttable","import React, { Component } from 'react'\nimport Chronicrttable from './ChronicRTTable'\n\nclass Chronicrt extends Component {\n    render() {\n        const {caseinfo, select_interval, PickerDate } = this.props\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <Chronicrttable PickerDate={PickerDate} title={{ title: \"RT\" }} caseinfo={caseinfo} select_interval={select_interval}></Chronicrttable>\n            </div>\n        );\n    }\n}\n\nexport default Chronicrt","import React, { Component } from 'react'\nimport './ChronicOrderTable.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as ApiGithub from '../../API/ApiGithub'\n// import * as UDOR from '../../Resource/UDORDER0'\n\nclass Chronicordertable extends Component {\n    state = {\n        UDORDER: [],\n        whiteBlackListParser: [],\n        tpnParsers: [],\n        preHID: null,\n        preCID: null\n    }\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        this.setState({ preHID: HID, preCID: CID })\n        this.getUDORDER(HID, CID)\n\n    }\n    componentDidUpdate() {\n        const { caseinfo } = this.props\n        const { preHID, preCID } = this.state\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        if (preHID !== HID || preCID !== CID) {\n            this.setState({ preHID: HID, preCID: CID })\n            this.getUDORDER(HID, CID)\n        }\n    }\n    getUDORDER(HID, CID) {\n        ApiGithub.getGitHubJson(\"WhiteBlackList.json\")\n            .then(data => {\n                let parser = data.data;\n                this.setState({ whiteBlackListParser: parser })\n            })\n            .catch(err => { console.log(err) })\n        ApiGithub.getGitHubJson(\"TpnOrder.json\")\n            .then(data => {\n                let parser = data.data\n                this.setState({ tpnParsers: parser })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                this.setState({ UDORDER: data.data })\n                //const fakeData = [{\"UDDCPRSN\":\"DOC3948A\",\"UDDURAT\":\"014\",\"UDSUMQTY\":\"0\",\"UDDRGNAM\":\"TPN Dextrose sod for inj 500 mg   \",\"UDGNAME\":\"Dextrose sod for inj 500 mg   \",\"UDORSIGN\":\"DOC3948A\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"蔡欣璉　　\",\"UDENDDT\":\"2020-02-27-09.00.00.000000\",\"UDDCPNAM\":\"蔡欣璉　　\",\"UDDOSAGE\":\"95      \",\"UDORDSEQ\":\"0004\",\"UDDRGNO\":\"04604\",\"UDBGNDT\":\"2020-02-20-09.00.00.000000\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"MG    \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"Dextrose inj inj 500 mg \\\"YF\\\"\",\"UDFREQN\":\"Q8H     \"},{\"UDDCPRSN\":\"DOC3948A\",\"UDDURAT\":\"014\",\"UDSUMQTY\":\"0\",\"UDDRGNAM\":\"TPN MechanicalVentilator sod for inj 500 mg   \",\"UDGNAME\":\"MechanicalVentilator sod for inj 500 mg   \",\"UDORSIGN\":\"DOC3948A\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"蔡欣璉　　\",\"UDENDDT\":\"2020-02-23-09.00.00.000000\",\"UDDCPNAM\":\"蔡欣璉　　\",\"UDDOSAGE\":\"95      \",\"UDORDSEQ\":\"0004\",\"UDDRGNO\":\"04604\",\"UDBGNDT\":\"2020-02-21-09.00.00.000000\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"MG    \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"MechanicalVentilator inj 500 mg \\\"YF\\\"\",\"UDFREQN\":\"Q8H     \"},{\"UDDCPRSN\":\"DOC3948A\",\"UDDURAT\":\"014\",\"UDSUMQTY\":\"0\",\"UDDRGNAM\":\"TPN Ampalininin sod for inj 500 mg   \",\"UDGNAME\":\"Ampalininin sod for inj 500 mg   \",\"UDORSIGN\":\"DOC3948A\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"蔡欣璉　　\",\"UDENDDT\":\"2020-02-25-09.00.00.000000\",\"UDDCPNAM\":\"蔡欣璉　　\",\"UDDOSAGE\":\"95      \",\"UDORDSEQ\":\"0004\",\"UDDRGNO\":\"04604\",\"UDBGNDT\":\"2020-02-22-09.00.00.000000\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"MG    \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"侵入性氧療設備 inj 500 mg \\\"YF\\\"\",\"UDFREQN\":\"Q8H     \"}]\n                //this.setState({ UDORDER: fakeData })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        // this.setState({ UDORDER: UDOR.data })\n    }\n    // 0:一天 1:三天 2:一週 3:兩週\n    switch_state() {\n        const { chronic_state } = this.props\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 21\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    select_parser = (input, parser) => {\n        if (parser === undefined) return undefined;\n        return parser.find(x =>\n            input.match(x.parser_name)\n        )\n    }\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let excludeBlackListResult = [];\n        const UDGNAME_condition = mappings.find(item => item.key === \"UDGNAME\");\n        const UDRPNAME_condition = mappings.find(item => item.key === \"UDRPNAME\");\n        if (inputs === undefined) return []\n        inputs.forEach(input => {\n            const UDGNAME_re = new RegExp(UDGNAME_condition.regex_str, UDGNAME_condition.regex_flags)\n            const UDGNAME_match = input.UDGNAME.match(UDGNAME_re)\n\n            const UDRPNAME_re = new RegExp(UDRPNAME_condition.regex_str, UDRPNAME_condition.regex_flags)\n            const UDRPNAME_match = input.UDRPNAME.match(UDRPNAME_re)\n\n            if (UDGNAME_match === null || UDRPNAME_match === null) {\n                excludeBlackListResult.push(input);\n            }\n        });\n\n        return excludeBlackListResult;\n    }\n    celltable() {\n        function changegridnumber(key) {\n            switch (key) {\n                case 0:\n                    return 24\n                case 1:\n                    return 18\n                case 2:\n                    return 21\n                case 3:\n                    return 14\n                default:\n                    break;\n            }\n        }\n        const { chronic_state } = this.props\n        const number = changegridnumber(chronic_state)\n        var arr = []\n        for (let index = 0; index < number; index++) {\n            arr.push(\n                <div key={index} className='cell'></div>\n            )\n\n        }\n        return arr\n    }\n    render() {\n        function changegridstyle(key) {\n            switch (key) {\n                case 0:\n                    return 'ordertableoneday'\n                case 1:\n                    return 'ordertablethirdday'\n                case 2:\n                    return 'ordertableoneweek'\n                case 3:\n                    return 'ordertabletwoweek'\n                default:\n                    return null\n            }\n        }\n        function ListData(UDORDER0, interval, pickerdate) {\n            // function startTimeFormat(st, sttimeString) {\n            //     if (sttimeString < st) {\n            //         return st\n            //     }\n            //     return sttimeString\n            // }\n            // function endTimeFormat(et, ettimestring) {\n            //     if (et < ettimestring) {\n            //         return et\n            //     }\n            //     return ettimestring\n            // }\n            // function shiftWeight(startTime, st, et) {\n            //     const width = document.body.clientWidth - 220\n            //     const shiftTimeStampWidth = width * (startTime - st) / (et - st)\n            //     return shiftTimeStampWidth\n\n            // }\n            // function WeightWidth(startTime, EndTime, st, et) {\n            //     const width = document.body.clientWidth - 220\n            //     const TimeStampWidth = width * (EndTime - startTime) / (et - st)\n            //     return TimeStampWidth\n            // }\n\n            function formatTimer(pickerdate, interval) {\n                const endTime = pickerdate + (31 * 60 * 60 * 1000)\n                if (interval === 0) {\n                    return {\n                        startTime: endTime - (24 * 60 * 60 * 1000),\n                        endTime: endTime\n                    }\n                }\n                if (interval === 1) {\n                    return {\n                        startTime: endTime - (3 * 24 * 60 * 60 * 1000),\n                        endTime: endTime\n                    }\n                }\n                if (interval === 2) {\n                    return {\n                        startTime: endTime - (7 * 24 * 60 * 60 * 1000),\n                        endTime: endTime\n                    }\n                }\n                return {\n                    startTime: endTime - (14 * 24 * 60 * 60 * 1000),\n                    endTime: endTime\n                }\n            }\n            function formatWidth(startTime, endTime, elementStart, elementEnd) {\n                function formatStart(elementStart, startTime) {\n                    if (elementStart <= startTime) {\n                        return startTime\n                    }\n                    return elementStart\n                }\n                function formatEnd(elementEnd, endTime) {\n                    if (elementEnd <= endTime) {\n                        return elementEnd\n                    }\n                    return endTime\n                }\n                const width = document.body.clientWidth - 220\n                const widthRate = width / (endTime - startTime)\n                const start = formatStart(elementStart, startTime)\n                const end = formatEnd(elementEnd, endTime)\n                return (end - start) * widthRate\n            }\n            function formatStartPosition(startTime, endTime, elementStart) {\n                const width = document.body.clientWidth - 220\n                if (elementStart <= startTime) {\n                    return 0\n                }\n                const widthRate = width / (endTime - startTime)\n                return (elementStart - startTime) * widthRate\n            }\n            function formatUDORDER0(UDORDER0, timer) {\n                var arraylist = []\n                const startTime = timer.startTime\n                const endTime = timer.endTime\n                for (let index = 0; index < UDORDER0.length; index++) {\n                    const element = UDORDER0[index];\n                    const elementStart = moment(element.UDBGNDT.toString(), \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n                    const elementEnd = moment(element.UDENDDT.toString(), \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n                    if (endTime < elementStart || elementEnd < startTime) {\n                        continue\n                    }\n                    const shift = formatStartPosition(startTime, endTime, elementStart)\n                    const width = formatWidth(startTime, endTime, elementStart, elementEnd)\n                    arraylist.push({\n                        \"width\": width,\n                        \"shift\": shift,\n                        \"element\": element\n                    })\n                }\n                return arraylist\n            }\n            const timer = formatTimer(pickerdate, interval)\n            if (UDORDER0 === undefined || UDORDER0 === null) {\n                return []\n            }\n            if (UDORDER0.length === 0) {\n                return []\n            }\n            const formatUDORDER = formatUDORDER0(UDORDER0, timer)\n            return formatUDORDER\n        }\n\n\n\n        const { chronic_state, PickerDate, source } = this.props\n        // console.log(UDORDER0)\n        // console.log(ListData(UDORDER0, chronic_state, PickerDate))\n\n        //filter white list\n\n        const rawData = this.state.UDORDER\n\n        //filter TPN items for infection page\n        let filteredRawData = []\n        if(source === \"infection\") {\n            const selected_tpn_parser = this.select_parser(\"TPN Order\", this.state.tpnParsers)\n            console.log(\"selected_tpn_parser: \" + JSON.stringify(selected_tpn_parser))\n            if (selected_tpn_parser !== undefined) {\n                rawData.forEach(item => {\n                    const found = item.UDDRGNAM.match(RegExp(selected_tpn_parser.apply_condition.name, selected_tpn_parser.apply_condition.name_regex_flags))\n                    if (found !== null && found !== \"\") filteredRawData.push(item)\n                })\n            }\n        } else {\n            filteredRawData = rawData\n        }\n\n        let filteredData = [];\n        const selected_white_black_list_parser = this.select_parser(\"Black List\", this.state.whiteBlackListParser)\n        if (selected_white_black_list_parser !== undefined) {\n            filteredData = this.parse(filteredRawData, selected_white_black_list_parser)\n        }\n\n        const datalist = ListData(filteredData, chronic_state, PickerDate)\n        // const datalist = ListData(UDORDER0, chronic_state, PickerDate)\n\n        const Tablecell = datalist.map(function (value, index, array) {\n            function formatString(value) {\n                if (value === undefined || value === null) {\n                    return \"--\"\n                }\n                return value.toString().trim()\n            }\n            // console.log(value.width)\n            return (\n                <div key={index} style={{ padding: \"10px 0px\", paddingLeft: value.shift + \"px\" }}>\n                    <div style={{ width: value.width + \"px\", height: \"20px\", backgroundColor: \"#3B97E1\", color: \"black\", padding: \"0px 5px\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\" }}>{formatString(value.element.UDGNAME)}</div>\n                </div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\", position: 'relative' }}>\n                <div style={{ background: \"#CCCCCC\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <t2>醫藥囑</t2>\n                </div>\n                <div className={changegridstyle(chronic_state)}>{this.celltable()}</div>\n                <div style={{ position: 'absolute', left: 140, height: \"250px\", overflow: \"hidden\" }}>\n                    {Tablecell}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chronicordertable","import React, { Component } from 'react'\nimport Chronicordertable from './ChronicOrderTable'\n// import * as ApiGithub from '../../API/ApiGithub'\n\nclass Orderonchronic extends Component {\n    render() {\n        const { caseinfo, select_interval, UDORDER0,PickerDate } = this.props\n        const item_title = [{ title: \"醫藥囑\" }]\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <Chronicordertable title={item_title} caseinfo={caseinfo} chronic_state={select_interval} UDORDER0={UDORDER0} PickerDate={PickerDate} source={this.props.source}></Chronicordertable>\n            </div>\n        );\n    }\n}\n\nexport default Orderonchronic","import React, { Component } from 'react'\nimport './ChronicWeightTable.scss'\nimport moment from 'moment'\n// import * as QTWPER from '../../Resource/QTWPER'\n// import * as ApiProvider from '../../API/ApiProvider'\n\nclass Chronicweighttable extends Component {\n    // 0:一天 1:三天 2:一週 3:兩週\n    state = {QTWPER: null}\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const weight = caseinfo.WEIGHT\n        console.log(caseinfo)\n        this.setState({ QTWPER: weight })\n        // this.setState({ QTWPER: QTWPER.data.outmsg.resconts.rescont })\n    }\n\n    switch_state() {\n        const { chronic_state } = this.props\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 21\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    celltable() {\n        function changegridnumber(key) {\n            switch (key) {\n                case 0:\n                    return 24\n                case 1:\n                    return 18\n                case 2:\n                    return 21\n                case 3:\n                    return 14\n                default:\n                    break;\n            }\n        }\n        const { chronic_state } = this.props\n        const number = changegridnumber(chronic_state)\n        var arr = []\n        for (let index = 0; index < number; index++) {\n            arr.push(\n                <div key={index} className='cell'></div>\n            )\n\n        }\n        return arr\n    }\n    weightRectRender() {\n        function TimerFormat(interval, pickerdate) {\n            const endTime = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    startTime: endTime - (24 * 60 * 60 * 1000),\n                    endTime: endTime,\n                    interval: 24,\n                    grid: 1\n                }\n            }\n            if (interval === 1) {\n                return {\n                    startTime: endTime - (3 * 24 * 60 * 60 * 1000),\n                    endTime: endTime,\n                    interval: 18,\n                    grid: 4\n                }\n            }\n            if (interval === 2) {\n                return {\n                    startTime: endTime - (7 * 24 * 60 * 60 * 1000),\n                    endTime: endTime,\n                    interval: 21,\n                    grid: 8\n                }\n            }\n            return {\n                startTime: endTime - (14 * 24 * 60 * 60 * 1000),\n                endTime: endTime,\n                interval: 14,\n                grid: 24\n            }\n        }\n        const { chronic_state, caseinfo, PickerDate } = this.props\n        const QTPWERList = caseinfo.WEIGHT\n        console.log(QTPWERList)\n        if (QTPWERList === undefined || QTPWERList === null) {\n            return null\n        }\n        const WeightList = QTPWERList.filter(function (info, index, arr) {\n            return info.type === \"TW\"\n        })\n\n        const timer = TimerFormat(chronic_state, PickerDate)\n        const width = document.body.clientWidth - 220\n        const widthRate = width / (timer.endTime - timer.startTime)\n        var WeightListFormat = []\n        for (let index = 0; index < WeightList.length; index++) {\n            const element = WeightList[index];\n            const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n            if (timer.startTime <= elementTime && elementTime <= timer.endTime) {\n                const elementValue = parseFloat(Number(element.value2) * 1000).toFixed(2)\n                WeightListFormat.push({\n                    Time: elementTime,\n                    Value: elementValue\n                })\n            }\n        }\n        const sortWeight = WeightListFormat.sort(function (a, b) {\n            return a.Value > b.Value ? 1 : -1;\n        });\n        console.log(sortWeight)\n        var shift = 0\n        var elementWidthList = []\n        for (let index = 0; index < sortWeight.length; index++) {\n            const element = sortWeight[index];\n            if (index === 0) {\n                shift = (element.Time - timer.startTime) * widthRate\n            }\n            if (sortWeight.length - 1 === index) {\n                const time1 = element.Time\n                const time2 = timer.endTime\n                const elementWidth = (time2 - time1) * widthRate\n                elementWidthList.push({\n                    Value: element.Value,\n                    width: elementWidth\n                })\n            }\n            else {\n                const time1 = sortWeight[index].Time\n                const time2 = sortWeight[index + 1].Time\n                console.log(time2 - time1)\n                const elementWidth = (time2 - time1) * widthRate\n                elementWidthList.push({\n                    Value: element.Value,\n                    width: elementWidth\n                })\n            }\n        }\n        return {\n            shift: shift,\n            elementWidthList: elementWidthList\n        }\n    }\n    render() {\n        const { chronic_state, caseinfo, PickerDate } = this.props\n        console.log(chronic_state)\n        const weight = caseinfo.WEIGHT\n        console.log(caseinfo.WEIGHT)\n        function FormatEndTimeStamp(start, interval) {\n            if (interval === 0) {\n                return start - (24 * 60 * 60 * 1000)\n            }\n            if (interval === 1) {\n                return start - (3 * 24 * 60 * 60 * 1000)\n\n            }\n            if (interval === 2) {\n                return start - (7 * 24 * 60 * 60 * 1000)\n\n            }\n            if (interval === 3) {\n                return start - (14 * 24 * 60 * 60 * 1000)\n\n            }\n        }\n        const end = PickerDate + (31 * 60 * 60 * 1000)\n        const start = FormatEndTimeStamp(end, chronic_state)\n        const datafilter = weight.filter(function (value, index, arr) {\n            const timeString = value.rec_dat.toString() + value.rec_tim.toString()\n            const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n            // console.log(start, time, end)\n            return start < time && time < end\n        })\n        const datafilterTime = datafilter.map(function (value, index, arr) {\n            const timeString = value.rec_dat.toString() + value.rec_tim.toString()\n            const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n            return time\n        })\n        console.log(weight, datafilter, datafilterTime)\n        const diff = end - start\n        var widthArray = []\n        if (datafilter.length === 0) {\n            // const element = weight[0]\n            // widthArray.push({\n            //     width: 100,\n            //     weight: (element.value2) * 1000\n            // })\n        }\n        if (datafilter.length === 1) {\n            for (let index = 0; index < datafilter.length; index++) {\n                const element = datafilter[index];\n                const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                const width = parseInt(100 * (time - start) / diff)\n                widthArray.push({\n                    width: width,\n                    weight: Number(element.value2) * 1000\n                })\n            }\n        }\n        else {\n            for (let index = 0; index < datafilter.length - 1; index++) {\n                const element = datafilter[index];\n                if (index === 0) {\n                    const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                    const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                    const width = parseInt(100 * (time - start) / diff)\n                    widthArray.push({\n                        width: width,\n                        weight: Number(element.value2) * 1000\n                    })\n                }\n                else if (index === (datafilterTime.length - 1)) {\n                    const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                    const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                    const width = parseInt(100 * (end - time) / diff)\n                    widthArray.push({\n                        width: width,\n                        weight: Number(element.value2) * 1000\n                    })\n                }\n                else {\n                    const element2 = datafilter[index + 1]\n                    const timeString2 = element2.rec_dat.toString() + element2.rec_tim.toString()\n                    const time2 = moment(timeString2, \"YYYYMMDDHHmm\").valueOf()\n                    const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                    const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                    const width = parseInt(100 * (time2 - time) / diff)\n                    widthArray.push({\n                        width: width,\n                        weight: Number(element.value2) * 1000\n                    })\n                }\n            }\n        }\n        console.log(widthArray)\n        function changegridstyle(key) {\n            switch (key) {\n                case 0:\n                    return 'chronicweighttableoneday'\n                case 1:\n                    return 'chronicweighttablethreeday'\n                case 2:\n                    return 'chronicweighttableoneweek'\n                case 3:\n                    return 'chronicweighttabletwoweek'\n                default:\n                    return null\n            }\n        }\n        const list = this.weightRectRender()\n        if (list === null || list === undefined) {\n            return null\n        }\n        const render = list.elementWidthList.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ border: \"1px black solid\", borderCollapse: \"collapse\", width: value.width + '%', height: \"20\", backgroundColor: \"#3B97E1\", color: \"white\", display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>{value.Value}g</div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\", position: 'relative' }}>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", background: \"#cccccc\" }}>\n                    <t2>體重</t2>\n                </div>\n                <div className={changegridstyle(chronic_state)}>{this.celltable()}</div>\n                <div style={{ position: 'absolute', left: 140, paddingTop: \"15px\" }}>\n                    <div style={{ paddingLeft: list.shift + \"px\", display: \"flex\", width: 'calc(100vw - 220px)', overflow: \"hidden\" }}>\n                        {render}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chronicweighttable","import React, { Component } from 'react'\nimport Chronicweighttable from './ChronicWeightTable'\n\nclass Weightonchronic extends Component {\n    render() {\n        const { caseinfo, PickerDate, select_interval } = this.props\n        const item_title = [{ title: \"體重\" }]\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <Chronicweighttable PickerDate={PickerDate} title={item_title} caseinfo={caseinfo} chronic_state={select_interval}></Chronicweighttable>\n            </div>\n        );\n    }\n}\n\nexport default Weightonchronic","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport '../Patientview/CrossSectionView/Crosssectionvitalsignchart.scss'\n\nclass Vitalxaxis extends Component {\n    state = {\n        change: false\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n    drawChart() {\n        function nowtime(time) {\n            return time + (7 * 60 * 60 * 1000)\n        }\n        function monthformat(month) {\n            return month + 1\n        }\n        function intervaldays(select_date, select_interval) {\n            switch (select_interval) {\n                //一天\n                case 0:\n                    return select_date - 86400000 * 1\n                //三天\n                case 1:\n                    return select_date - 86400000 * 3\n                //一週\n                case 2:\n                    return select_date - 86400000 * 7\n                //兩週\n                case 3:\n                    return select_date - 86400000 * 14\n                default:\n                    return null\n            }\n        }\n\n        const { id_key, svg_id,select_interval, select_date } = this.props\n        const viewwidth = window.screen.availWidth - 220\n        //選取時間(0點)\n        const select_date_zero = new Date(new Date(select_date).getFullYear() + ',' + monthformat(new Date(select_date).getMonth()) + ',' + new Date(select_date).getDate()).getTime()\n        //選取時間(7點)\n        const select_time_format = nowtime(select_date_zero)\n        //select_intercal:0一天 1三天 2兩週\n        const Start_time = intervaldays(select_time_format, select_interval)\n        var xaxis = []\n        if (select_interval === 0) {\n            for (let index = 0; index < 24; index++) {\n                const time = Start_time + (30 * 60 * 1000) + (index * 60 * 60 * 1000)\n                xaxis.push(time)\n            }\n        }\n        if (select_interval === 1) {\n            for (let index = 0; index < 21; index++) {\n                const time = Start_time + (2 * 60 * 60 * 1000) + (index * 60 * 60 * 1000 * 4)\n                xaxis.push(time)\n            }\n        }\n\n        if (select_interval === 2) {\n            for (let index = 0; index < 21; index++) {\n                const time = Start_time + (4 * 60 * 60 * 1000) + (index * 60 * 60 * 1000 * 8)\n                xaxis.push(time)\n            }\n        }\n\n        if (select_interval === 3) {\n            for (let index = 0; index < 14; index++) {\n                const time = Start_time + (12 * 60 * 60 * 1000) + (index * 60 * 60 * 1000 * 24)\n                xaxis.push(time)\n            }\n        }\n        var x = d3.scaleLinear()\n            .domain([Start_time, select_time_format])\n            .range([0, viewwidth])\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            // .attr(\"viewbox\", [0, 0, viewwidth + 60, 25])\n            .style(\"width\", viewwidth + 100)\n            .style(\"height\", 25)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 15 + \")\");\n\n        var formatHour = d3.timeFormat(\"%H\")\n        var formatday = d3.timeFormat(\"%d\")\n        function multiFormat(date) {\n            if (select_interval === 0) {\n                return formatHour(date) + '~' + formatHour(date + (60 * 60 * 1000))\n            }\n            if (select_interval === 1) {\n                return formatHour(date - (2 * 60 * 60 * 1000)) + '~' + formatHour(date + (2 * 60 * 60 * 1000))\n            }\n            if (select_interval === 2) {\n                return formatHour(date - (4 * 60 * 60 * 1000)) + '~' + formatHour(date + (4 * 60 * 60 * 1000))\n            }\n            if (select_interval === 3) {\n                return monthformat(new Date(date).getMonth()) + '/' + formatday(date)\n            }\n            return formatHour(date)\n        }\n        var xAxis = d3.axisTop(x)\n            .tickValues(xaxis)\n            .tickSize(0, 0)\n            .tickPadding(5)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\");\n\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default Vitalxaxis;","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport '../Patientview/CrossSectionView/Crosssectionvitalsignchart.scss'\nimport { yyyymmddformat } from '../Function/Timeformat'\nimport moment from 'moment';\n\nclass Vitalxaxisbot extends Component {\n    state = {\n        change: false\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n    drawChart() {\n        function intervaldays(select_date, select_interval) {\n            switch (select_interval) {\n                //一天\n                case 0:\n                    return select_date - 86400000 * 1\n                //三天\n                case 1:\n                    return select_date - 86400000 * 3\n                //一週\n                case 2:\n                    return select_date - 86400000 * 7\n                //兩週\n                case 3:\n                    return select_date - 86400000 * 14\n                default:\n                    return null\n            }\n        }\n\n        const { id_key, svg_id, select_interval, select_date } = this.props\n        const viewwidth = window.screen.availWidth - 228\n        //選取時間(0點)\n        const select_date_zero = yyyymmddformat(select_date)\n        //選取時間(7點)\n        const select_time_format = new Date(select_date_zero).getTime() + (31 * 60 * 60 * 1000)\n        //select_intercal:0一天 1三天 2兩週\n        const Start_time = intervaldays(select_time_format, select_interval)\n        console.log(Start_time)\n        var xaxis = []\n        if (select_interval === 0) {\n            const time = Start_time + (17 * 60 * 60 * 1000)\n            console.log(time)\n            xaxis.push(time)\n        }\n        if (select_interval === 1) {\n            for (let index = 0; index < 3; index++) {\n                const time = Start_time + (12 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000)\n                xaxis.push(time)\n            }\n        }\n\n        if (select_interval === 2) {\n            for (let index = 0; index < 7; index++) {\n                const time = Start_time + (12 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000)\n                xaxis.push(time)\n            }\n        }\n\n\n        if (select_interval === 3) {\n            for (let index = 0; index < 14; index++) {\n                const time = Start_time + (12 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000)\n                xaxis.push(time)\n            }\n        }\n        var x = d3.scaleLinear()\n            .domain([Start_time, select_time_format])\n            .range([0, viewwidth - 1])\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            // .attr(\"viewbox\", [0, 0, viewwidth + 60, 25])\n            .style(\"width\", viewwidth)\n            .style(\"height\", 25)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + -10 + \")\");\n\n\n        function multiFormat(date) {\n            return moment(date).format(\"MM/DD\")\n        }\n\n\n        var xAxis = d3.axisBottom(x)\n            .tickValues(xaxis)\n            .tickSize(0, 0)\n            .tickPadding(10)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\");\n\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default Vitalxaxisbot;","import React, { Component } from 'react'\nimport { Select } from 'antd';\n// import Chronicvitalchart from './Chronic_vital_chart'\nimport { statecolor, simulationCentermonitordata, simulationnisdata } from '../../Function/Wardstate'\nimport { formatxArrayhalf, formatendtime } from '../../Function/Timeformat'\nimport './Chronic_vital.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport Crosssectionvitalsignchart from '../CrossSectionView/Crossectionvitalsignchart'\n\n\nclass Vitalonchronic extends Component {\n    state = {\n        check_state_one: 0,\n        check_state_three: 0,\n        check_state_oneweek: 0,\n        check_state_twoweek: 0,\n        statussource: \"CM\",\n        CenterMonitorValue: []\n    }\n\n    componentDidMount() {\n        const startTime = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf() - (60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\")\n        const endTime = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf()).format(\"YYYYMMDDHHmmss\")\n        const PHISTNUM = this.props.caseinfo.HISID.toString().trim()\n        this.getVitalSignData(startTime, endTime, PHISTNUM)\n    }\n\n    getVitalSignData(startTime, EndTime, Phistnum) {\n        ApiProvider.getPatientwardvalueMedian(Phistnum, startTime, EndTime)\n            .then(data => {\n                console.log(data.data)\n                this.setState({\n                    CenterMonitorValue: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n                this.setState({\n                    CenterMonitorValue: null\n                })\n            })\n    }\n\n    switchdata(value_interval, sourcefrom) {\n        console.log(sourcefrom)\n        const { defaultdate } = this.props\n        function changevitaldays(vitaldays) {\n            if (vitaldays === 3) {\n                return 18\n            }\n            else {\n                return 24\n            }\n        }\n\n        function Interval_switch(interval) {\n            if (interval === 0) {\n                return 1\n            }\n            if (interval === 1) {\n                return 3\n            }\n        }\n        const interval = Interval_switch(value_interval)\n        const starttime = formatendtime(defaultdate) - (interval * 24 * 60 * 60 * 1000)\n        if (sourcefrom === 'NIS') {\n            const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n            const data = simulationnisdata(datatime, changevitaldays(interval))\n            console.log(data)\n            return data\n        }\n        else {\n\n            const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n            const data = simulationCentermonitordata(datatime, changevitaldays(interval))\n            return data\n        }\n    }\n    Interval_grid_box() {\n        var gridarray = []\n        console.log(this.props.select_interval)\n        if (this.props.select_interval === 0) {\n            for (let index = 0; index < 24; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_one) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: 360, border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_one(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: 360 }} onClick={() => this.onClickCheckgrid_one(number)}></div>)\n            }\n        }\n        if (this.props.select_interval === 1) {\n            for (let index = 0; index < 18; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_three) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: 360, border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_three(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: 360 }} onClick={() => this.onClickCheckgrid_three(number)}></div>)\n            }\n        }\n        if (this.props.select_interval === 2) {\n            for (let index = 0; index < 21; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_oneweek) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: 360, border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_oneweek(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: 360 }} onClick={() => this.onClickCheckgrid_oneweek(number)}></div>)\n            }\n        }\n        if (this.props.select_interval === 3) {\n            for (let index = 0; index < 14; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_twoweek) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: 360, border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_twoweek(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: 360 }} onClick={() => this.onClickCheckgrid_twoweek(number)}></div>)\n            }\n        }\n        return gridarray\n    }\n\n    onClickCheckgrid_one(number) {\n        console.log(number)\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (24 * 60 * 60 * 1000)\n        const endtime = ST + (number * 60 * 60 * 1000)\n        const starttime = endtime - 60 * 60 * 1000\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ check_state_one: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n    onClickCheckgrid_three(number) {\n        console.log(number)\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (3 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 4) * 60 * 60 * 1000)\n        const starttime = endtime - (4 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ chackstate_three: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n\n    onClickCheckgrid_oneweek(number) {\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (7 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 8) * 60 * 60 * 1000)\n        const starttime = endtime - (8 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ check_state_oneweek: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n    onClickCheckgrid_twoweek(number) {\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (14 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 24) * 60 * 60 * 1000)\n        const starttime = endtime - (24 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ check_state_twoweek: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n\n    sourcehandleChange = (value) => {\n        this.setState({ statussource: value })\n    }\n    render() {\n        function centervaluetoNull(value) {\n            function FilterList(DataList, type) {\n                const filterData = DataList.filter(function (value, index, arr) {\n                    return value.type === type\n                })\n                if (filterData.length === 0) {\n                    return null\n                }\n                console.log(filterData)\n                return filterData[0].Mid\n            }\n            if (value === undefined || value === null) {\n                return {\n                    hr: null,\n                    rr: null,\n                    bt: null,\n                    spo2: null,\n                    abpd: null,\n                    abpm: null,\n                    abps: null,\n                    nbpm: null,\n                    nbps: null,\n                    nbpd: null\n                }\n            }\n            return {\n                hr: FilterList(value, \"hr\"),\n                rr: FilterList(value, \"rr\"),\n                bt: FilterList(value, \"bt\"),\n                spo2: FilterList(value, \"spo2\"),\n                abpd: FilterList(value, \"abpd\"),\n                abpm: FilterList(value, \"abpm\"),\n                abps: FilterList(value, \"abps\"),\n                nbpd: FilterList(value, \"nbpd\"),\n                nbps: FilterList(value, \"nbps\"),\n                nbpm: FilterList(value, \"nbpm\"),\n            }\n        }\n        function centervalueNull(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            return value\n        }\n        function Interval_grid(number) {\n            switch (number) {\n                case 0:\n                    return 24\n                case 1:\n                    return 18\n                case 2:\n                    return 21\n                case 3:\n                    return 14\n                default:\n                    return null\n            }\n        }\n        function formatPickerTimer(pickerdate, interval) {\n            const end = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    startTime: end - (24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n            if (interval === 1) {\n                return {\n                    startTime: end - (3 * 24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n            if (interval === 2) {\n                return {\n                    startTime: end - (7 * 24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n            else {\n                return {\n                    startTime: end - (14 * 24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n        }\n\n        const { Option } = Select;\n        const { source } = this.props\n        const pickerTimer = formatPickerTimer(this.props.PickerDate, this.props.select_interval)\n        const width = window.screen.availWidth - 171\n        const centervalue = centervaluetoNull(this.state.CenterMonitorValue)\n        return (\n            <div>\n                <div style={{ display: \"flex\", alignItems: \"center\", height: \"50px\" }}>\n                    <t1>生命徵象</t1>\n                    <Select defaultValue={this.state.statussource} style={{ width: 200, marginLeft: \"20px\" }} onChange={this.sourcehandleChange}>\n                        <Option value={'CM'}>Center Monitor</Option>\n                        <Option value={'NIS'}>NIS</Option>\n                    </Select>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\" }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"repeat(6,60px)\" }}>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <t4 style={{ display: \"flex\", justifyContent: \"center\", color: statecolor(\"HR\") }}>{\"HR\"}</t4>\n                                <t1 style={{ display: \"flex\", justifyContent: \"center\", color: statecolor(\"HR\") }}>{centervalueNull(centervalue.hr)}</t1>\n                            </div>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>NBP</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.nbpd)}/{centervalueNull(centervalue.nbps)}</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>({centervalueNull(centervalue.nbpm)})</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>ABP</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.abpd)}/{centervalueNull(centervalue.abps)}</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>({centervalueNull(centervalue.abpm)})</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <div style={{ fontSize: \"1rem\", color: \"#4773B8\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>\n                                    SpO<sub style={{ bottom: \"-1em\" }}>2</sub>\n                                </div>\n                                <div style={{ fontSize: \"1rem\", color: \"#4773B8\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.spo2)}%</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <div style={{ fontSize: \"1rem\", color: \"#7F3DB5\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>BT</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#7F3DB5\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>--</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <div style={{ fontSize: \"1rem\", color: \"#DE7531\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>RR</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#DE7531\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.rr)}</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"repeat(6,60px)\", position: \"relative\" }}>\n                        <div style={{ position: \"absolute\", height: \"340px\", width: width - 50, top: 5, left: 50 }} >\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + Interval_grid(this.props.select_interval) + \",1fr)\" }}>\n                                {this.Interval_grid_box()}\n                            </div>\n                        </div>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"hr_svg_\" + source}\n                            id_key={\"hr_id_\" + source}\n                            type={\"hr\"}\n                            source={this.state.statussource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={100}\n                            upper={160}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor=\"#779F50\"\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={200}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"nbp_svg\" + source}\n                            id_key={\"nbp_id\" + source}\n                            type={\"nbp\"}\n                            source={this.state.statussource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={55}\n                            upper={75}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#C12528\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"abp_svg\" + source}\n                            id_key={\"abp_id\" + source}\n                            type={\"abp\"}\n                            source={this.state.statussource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={55}\n                            upper={75}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#C12528\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"spo2_svg_\" + source}\n                            id_key={\"spo2_id_\" + source}\n                            type={\"spo2\"}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={90}\n                            upper={100}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#4773B8\"}\n                            colorshadow={\"#4773B8\"}\n                            min={60}\n                            max={100}\n                            source={this.state.statussource}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"bt_svg_\" + source}\n                            id_key={\"bt_id_\" + source}\n                            type={\"bt\"}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            source={this.state.statussource}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={36}\n                            upper={38}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#7F3DB5\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={33}\n                            max={43}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"rr_svg_\" + source}\n                            id_key={\"rr_id_\" + source}\n                            type={\"rr\"}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={20}\n                            upper={60}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#DE7531\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}\n                            source={this.state.statussource}>\n                        </Crosssectionvitalsignchart>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Vitalonchronic","import React, { Component } from 'react';\nimport { DatePicker, Button, Select } from 'antd';\nimport filterlogo from '../../Image/svg/filter.svg'\nimport Inoutonchronic from './Chronic_io'\nimport Chroniclab from './ChronicLab'\nimport Chronicrt from './ChronicRT'\nimport Orderonchronic from './ChronicOrder'\nimport Weightonchronic from './ChronicWeight'\nimport Vitalxaxis from '../../Module/Vitalxaxis'\nimport Vitalxaxisbot from '../../Module/Vitalxaxisbot'\nimport moment from 'moment'\nimport './Chroniclelayout.scss'\nimport Vitalonchronic from './Chronic_vital'\n\nclass Chroniclelayout extends Component {\n    state = {\n        display_Mode: false,\n        item: this.props.item_array,\n        scrollstate: 0,\n        PickerDate: moment(moment().format('YYYYMMDD'), \"YYYYMMDD\").valueOf(), //選擇日期\n        select_interval: 0, //選擇區間\n        statuschange: 0,\n    }\n\n    scrollToAnchor = (anchorName) => {\n        console.log(anchorName)\n        if (anchorName) {\n            let anchorElement = document.getElementById(anchorName);\n            if (anchorElement) { anchorElement.scrollIntoView(false); }\n        }\n    }\n    scroll_btn_style(index) {\n        console.log(index, this.state.scrollstate)\n        if (index === this.state.scrollstate) {\n            return true\n        }\n        else return false\n    }\n    onChange = (date, dateString) => {\n        console.log(date, dateString);\n\n        this.setState(\n            {\n                PickerDate: date.valueOf()\n            }\n        )\n    }\n    onSelectchange = (value) => {\n        this.setState(\n            {\n                select_interval: value\n            }\n        )\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDate } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const bTemp = bTime - (6 * day)\n                bronDate <= bTemp && this.onChange(moment(bTime))\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD'))\n                this.onChange(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= aTemp && this.onChange(moment(aTime))\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { Option } = Select;\n        // const dateFormat = 'YYYY/MM/DD';\n        const { caseinfo } = this.props\n        const crosssectioncontrollist =\n            [{ \"name\": \"生命徵象\", \"scrollpoint\": \"vital_sign_chronic\" },\n            { \"name\": \"輸出入\", \"scrollpoint\": \"input_output_chronic\" },\n            { \"name\": \"檢驗結果\", \"scrollpoint\": \"lab_chronic\" },\n            { \"name\": \"呼吸評估\", \"scrollpoint\": \"rt_chronic\" },\n            { \"name\": \"醫藥囑\", \"scrollpoint\": \"order_chronic\" },\n            { \"name\": \"體重\", \"scrollpoint\": \"infection_chronic\" }]\n        console.log(caseinfo.PBASINGNINFO.PBIRTHDT.toString())\n        let button = crosssectioncontrollist.map(\n            (item, index) => <Button onClick={this.scrollToAnchor.bind(this, item.scrollpoint)} key={index} style={{ borderRadius: \"16px\", color: \"rgba(245, 166, 35, 1)\", border: \"rgba(245, 166, 35, 1) 1px solid\" }}>{item.name}</Button>);\n        return (\n            <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", height: \"40px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"140px 120px auto\", gridColumnGap: \"5px\" }}>\n                        <DatePicker disabledDate={(current) => { return current > moment().startOf(\"day\") || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }} onChange={this.onChange} value={moment(this.state.PickerDate)} allowClear={false} />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\", marginLeft: \"10px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                        <Select defaultValue={this.state.select_interval} style={{ width: 120, marginLeft: \"10px\" }} onChange={this.onSelectchange}>\n                            <Option value={0}>一天</Option>\n                            <Option value={1}>三天</Option>\n                            <Option value={2}>一週</Option>\n                            <Option value={3}>兩週</Option>\n                        </Select>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(8,auto)\", gridColumnGap: \"15px\" }}>\n                        <t2 style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>項目切換:</t2>\n                        {button}\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <img src={filterlogo} alt='filterlogo'></img>\n                        </div>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\", margin: \"10px 0px\" }}>\n                    <div></div>\n                    <Vitalxaxis max={200} min={0} select_interval={this.state.select_interval} select_date={this.state.PickerDate} id_key=\"xaxis_chronic\" svg_id=\"xaxis_svg_chronic\"></Vitalxaxis>\n                </div>\n                <div className='boxshadow'></div>\n                <div className='chroniclayout'>\n                    {/* Vital sign */}\n                    <div id=\"vital_sign_chronic\">\n                        <Vitalonchronic source={\"Chronic\"} PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"Vital\"></Vitalonchronic>\n                    </div>\n                    {/* I/O */}\n                    <div id=\"input_output_chronic\">\n                        <Inoutonchronic PickerDate={this.state.PickerDate} Status={\"Chronic\"} IntervalStatus={this.state.select_interval} caseinfo={caseinfo} title=\"輸出入\"></Inoutonchronic>\n                    </div>\n                    {/* Lab */}\n                    <div id=\"lab_chronic\">\n                        <Chroniclab PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"檢驗結果\"></Chroniclab>\n                    </div>\n                    {/* RT */}\n                    <div id=\"rt_chronic\">\n                        <Chronicrt PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo}></Chronicrt>\n                    </div>\n                    {/* Order */}\n                    <div id=\"order_chronic\">\n                        <Orderonchronic PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"\"></Orderonchronic>\n                    </div>\n                    {/* 體重 */}\n                    <div id=\"infection_chronic\">\n                        <Weightonchronic PickerDate={this.state.PickerDate} QTWPER={this.state.QTWPER} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"\"></Weightonchronic>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\", marginTop: \"30px\" }}>\n                    <div></div>\n                    <Vitalxaxisbot max={200} min={0} select_interval={this.state.select_interval} select_date={this.state.PickerDate} id_key=\"xaxis_bot_chronic\" svg_id=\"xaxis_bot_svg_chronic\"></Vitalxaxisbot>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chroniclelayout;\n","import React, { Component } from 'react';\nimport './Flootsheetio.scss'\nimport * as RegFilter from '../../Function/FiliterReg'\nimport moment from 'moment';\nimport X2JS from 'x2js';\nimport * as ApiProvider from '../../API/ApiProvider'\n// import * as QDCR from '../../Resource/QDC'\n\nclass Flootsheetio extends Component {\n    state = {\n        itemNumber: \"day\",\n        preCID: null,\n        prePickerDate: null,\n        QDC: []\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDate } = this.props\n        const CID = caseinfo.CASEID\n        this.setState({ preCID: CID, prePickerDate: PickerDate })\n        this.getQDC(CID, PickerDate)\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDate } = this.props\n        const CID = caseinfo.CASEID\n        const preCID = this.state.preCID\n        const prePickerDate = this.state.prePickerDate\n        console.log(prePickerDate, PickerDate)\n        if (CID !== preCID || PickerDate !== prePickerDate) {\n            this.setState({ preCID: CID, prePickerDate: PickerDate })\n            this.getQDC(CID, PickerDate)\n        }\n    }\n    getQDC(CID, PickerDate) {\n        const xm2 = new X2JS()\n        const st = moment(PickerDate + (7 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        const et = moment(PickerDate + (31 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        ApiProvider.getQDC(CID, st, et)\n            .then(data => {\n                console.log(xm2.xml2js(data.data))\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                this.setState({\n                    QDC: parsedata\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n    }\n    SecondDataCell(dataJson, Title) {\n        const { PickerDate } = this.props\n        const st = PickerDate + (7 * 60 * 60 * 1000)\n        var cellRender = []\n        for (let index = 0; index < 24; index++) {\n            const startTime = st + (index * 60 * 60 * 1000)\n            const endTime = st + ((index + 1) * 60 * 60 * 1000)\n            const timeObjectString = dataJson.rec_dat.toString() + dataJson.rec_tim.toString()\n            const time = moment(timeObjectString, 'YYYYMMDDHHmm').valueOf()\n            if (time > startTime && time < endTime) {\n                cellRender.push(dataJson.value)\n            }\n            else {\n                cellRender.push(\"--\")\n            }\n        }\n        const data = cellRender.map((info, index) =>\n            <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                <t2>{info}</t2>\n            </centerstyle>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <centerstyle style={{ background: \"#cccccc\" }}>\n                    <t4>{Title}</t4>\n                </centerstyle>\n                {data}\n            </div>\n        );\n    }\n    FourthDataCell(dataJson, Title) {\n        function nullvalue(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            if (value === 0) {\n                return \"##\"\n            }\n            return value.toString().trim()\n        }\n        const { PickerDate } = this.props\n        const st = PickerDate + (7 * 60 * 60 * 1000)\n        var cellRender = []\n        for (let index = 0; index < 24; index++) {\n            const startTime = st + (index * 60 * 60 * 1000)\n            const endTime = st + ((index + 1) * 60 * 60 * 1000)\n            const filterData = dataJson.filter(function (value, index, arr) {\n                const timeObjectString = value.rec_dat.toString() + value.rec_tim.toString()\n                const time = moment(timeObjectString, 'YYYYMMDDHHmm').valueOf()\n                return time > startTime && time < endTime\n            })\n            if (filterData.length === 0) {\n                cellRender.push(\"--\")\n            }\n            // var sum = 0\n            for (let index = 0; index < filterData.length; index++) {\n                const element = filterData[index];\n                if (Title === \"滲液\") {\n                    cellRender.push(element.out_val1)\n                }\n                if (Title === \"嘔吐\") {\n                    const string = element.out_val1.toString() + \"/\" + element.nam.toString() + \"/\" + element.color.toString()\n                    cellRender.push(string)\n                }\n                if (Title === \"引流\") {\n                    const string = element.out_val1.toString() + \"/\" + element.nam.toString() + \"/\" + element.color.toString()\n                    cellRender.push(string)\n                }\n                if (Title === \"穿刺出\") {\n                    cellRender.push(element.out_val1)\n\n                }\n                if (Title === \"穿刺入\") {\n                    cellRender.push(element.inp_val1)\n\n                }\n                if (Title === \"透析出\") {\n                    cellRender.push(element.out_val1)\n\n                }\n                if (Title === \"透析入\") {\n                    cellRender.push(element.inp_val1)\n\n                }\n                if (Title === \"透析加總\") {\n                    const sum = Number(element.out_val1) - Number(element.inp_val1)\n                    cellRender.push(sum)\n\n                }\n                if (Title === \"沖洗出\") {\n                    cellRender.push(element.out_val1)\n\n                }\n                if (Title === \"沖洗入\") {\n                    cellRender.push(element.inp_val1)\n\n                }\n                if (Title === \"排尿\") {\n                    cellRender.push(element.inp_val1)\n\n                }\n            }\n\n        }\n        const data = cellRender.map((info, index) =>\n            <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                <t2>{nullvalue(info)}</t2>\n            </centerstyle>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <centerstyle style={{ background: \"#cccccc\" }}>\n                    <t4>{Title}</t4>\n                </centerstyle>\n                {data}\n            </div>\n        );\n    }\n\n    Thirdtablecell(dataJson, Title) {\n        const { PickerDate } = this.props\n        const st = PickerDate + (7 * 60 * 60 * 1000)\n        var cellRender = []\n\n        for (let index = 0; index < 24; index++) {\n            const startTime = st + (index * 60 * 60 * 1000)\n            const endTime = st + ((index + 1) * 60 * 60 * 1000)\n            const time = moment(dataJson.time, 'YYYYMMDDHHmm').valueOf()\n            if (time > startTime && time < endTime) {\n                cellRender.push(dataJson.value)\n            }\n            else {\n                cellRender.push(\"--\")\n            }\n        }\n\n        const data = cellRender.map((info, index) =>\n            <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                <t2>{info}</t2>\n            </centerstyle>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <centerstyle style={{ background: \"#cccccc\" }}>\n                    <t4>{Title}</t4>\n                </centerstyle>\n                {data}\n            </div>\n        );\n    }\n\n    Firsttablecell(dataList, Title) {\n        const { PickerDate } = this.props\n        const st = PickerDate + (7 * 60 * 60 * 1000)\n        var cellRender = []\n\n        for (let index = 0; index < 24; index++) {\n            const startTime = st + (index * 60 * 60 * 1000)\n            const endTime = st + ((index + 1) * 60 * 60 * 1000)\n            console.log(dataList)\n            const datafilter = dataList.filter(function (value, index, arr) {\n                const time = moment(value.rec_dat.toString() + value.rec_tim.toString(), 'YYYYMMDDHHmm').valueOf()\n                return time > startTime && time < endTime\n            })\n            var sum = 0\n            for (let index = 0; index < datafilter.length; index++) {\n                const element = datafilter[index];\n                sum = sum + Number(element.inp_val1)\n            }\n            cellRender.push(sum)\n        }\n\n        const data = cellRender.map((info, index) =>\n            <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                <t2>{info}</t2>\n            </centerstyle>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <centerstyle style={{ background: \"#cccccc\" }}>\n                    <t4>{Title}</t4>\n                </centerstyle>\n                {data}\n            </div>\n        );\n    }\n\n    RVList(cell) {\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <div style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', backgroundColor: \"#cccccc\", display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{\"RV\"}</div>\n                {cell}\n            </div>\n        );\n    }\n    render() {\n        function groupelement(array) {\n            function groupvalue(arr) {\n                const mapvalue = arr.map(function (value, index, arr) {\n                    return value.element\n                })\n                return mapvalue\n            }\n            var dataList = []\n            for (let index = 0; index < array.length; index++) {\n                const element = array[index];\n                const data = groupvalue(element)\n                if (element.length !== 0) {\n                    if (element[0].title === \"滲液\") {\n                        dataList.push({\n                            \"title\": element[0].title,\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"嘔吐\") {\n                        dataList.push({\n                            \"title\": element[0].title,\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"引流\") {\n                        const stringElement = element[0].element\n                        const string = stringElement.line + \"/\" + stringElement.pos\n                        dataList.push({\n                            \"title\": string,\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"穿刺\") {\n                        const stringElement = element[0].element\n                        if (stringElement.out_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"穿刺出\",\n                                \"element\": data\n                            })\n                        }\n                        if (stringElement.inp_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"穿刺入\",\n                                \"element\": data\n                            })\n                        }\n                    }\n                    if (element[0].title === \"透析\") {\n                        const stringElement = element[0].element\n                        if (stringElement.out_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"透析出\",\n                                \"element\": data\n                            })\n                        }\n                        if (stringElement.inp_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"透析入\",\n                                \"element\": data\n                            })\n                        }\n                        dataList.push({\n                            \"title\": \"透析加總\",\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"沖洗\") {\n                        const stringElement = element[0].element\n                        if (stringElement.out_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"沖洗出\",\n                                \"element\": data\n                            })\n                        }\n                        if (stringElement.inp_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"沖洗入\",\n                                \"element\": data\n                            })\n                        }\n                    }\n                    if (element[0].title === \"排便\") {\n                        dataList.push({\n                            \"title\": \"Stool\",\n                            \"element\": data\n                        })\n                        dataList.push({\n                            \"title\": \"Enema/Stimulation\",\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"排尿\") {\n                        const stringElement = element[0].element\n                        const string = stringElement.inp_val1\n                        dataList.push({\n                            \"title\": \"Urine\" + string,\n                            \"element\": data\n                        })\n                    }\n                }\n            }\n            return dataList\n        }\n        function groupfirstarray(arrayList) {\n            var result = arrayList.filter(function (value, index, arr) {\n                const res = arr.map(function (value, index, arr) {\n                    return value.compare\n                })\n                return res.indexOf(value.compare) === index;\n            });\n            var arrList = []\n            for (let index = 0; index < result.length; index++) {\n                const element = result[index];\n                const comparevalue = element.compare\n                const filterarray = arrayList.filter(function (value, index, arr) {\n                    return value.compare === comparevalue\n                })\n                arrList.push(filterarray)\n            }\n            return arrList\n        }\n        function nullvalue(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            if (value === 0) {\n                return \"#\"\n            }\n            return value.toString().trim()\n        }\n        function formatQDC(QDC) {\n            var FirstArray = []\n            var SecondArray = []\n            var ThirdArray = []\n            var FourthArray = []\n            if (Array.isArray(QDC)) {\n                for (let index = 0; index < QDC.length; index++) {\n                    const element = QDC[index];\n                    if (RegFilter.firstarea_Reg_IO().find(function (value, index, array) {\n                        return value === element.item\n                    })) {\n                        FirstArray.push({\n                            title: nullvalue(element.line) + \"/\" + nullvalue(element.nam) + \"/\" + nullvalue(element.pos),\n                            compare: nullvalue(element.line) + \"/\" + nullvalue(element.nam),\n                            element: element\n                        })\n                    }\n                    if (RegFilter.Secondarea_reg_IO().find(function (value, index, array) {\n                        return value === element.item\n                    })) {\n                        SecondArray.push({\n                            title: nullvalue(element.line) + \"/\" + nullvalue(element.nam) + \"/\" + nullvalue(element.pos),\n                            compare: nullvalue(element.line) + \"/\" + nullvalue(element.nam) + \"/\" + nullvalue(element.pos),\n                            element: element\n                        })\n                    }\n                    if (RegFilter.Thirdarea_reg_IO().find(function (value, index, array) {\n                        return value === element.item\n                    })) {\n                        ThirdArray.push({\n                            title: nullvalue(element.nam) + \"/\" + nullvalue(element.lost),\n                            compare: nullvalue(element.nam) + \"/\" + nullvalue(element.lost),\n                            element: element\n                        })\n                    }\n                    if (RegFilter.Fourtharea_reg_IO().find(function (value, index, array) {\n                        return value === element.item\n                    })) {\n                        FourthArray.push({\n                            title: element.item,\n                            compare: element.item,\n                            element: element\n                        })\n                    }\n                }\n            }\n            return {\n                \"FirstArray\": FirstArray,\n                \"SecondArray\": SecondArray,\n                \"ThirdArray\": ThirdArray,\n                \"FourthArray\": FourthArray\n            }\n        }\n\n\n\n        const { PickerDate } = this.props\n        const { QDC } = this.state\n        const dataList = formatQDC(QDC)\n        console.log(dataList.ThirdArray)\n        // const DataFirst = dataList.FirstArray\n        const FlootSheetFirstAreaData = groupfirstarray(dataList.FirstArray)\n        const FlootSheetSecondAreaData = groupfirstarray(dataList.SecondArray)\n        const FlootSheetThirdAreaData = groupfirstarray(dataList.ThirdArray)\n        const FlootSheetFourthAreaData = groupelement(groupfirstarray(dataList.FourthArray))\n        console.log(FlootSheetFirstAreaData)\n        console.log(FlootSheetSecondAreaData)\n        console.log(FlootSheetThirdAreaData)\n        console.log(FlootSheetFourthAreaData)\n        const start = PickerDate + 7 * 60 * 60 * 1000\n        const Firstdata = FlootSheetFirstAreaData.map(function (value, index, arr) {\n            const title = value[0].title\n            var timeForList = []\n            for (let index = 0; index < 24; index++) {\n                const startTime = start + (index * 60 * 60 * 1000)\n                const endTime = start + ((index + 1) * 60 * 60 * 1000)\n                var sum = 0\n                var elementList = []\n                for (let index = 0; index < value.length; index++) {\n                    const element = value[index].element;\n                    const valueSum = Number(element.inp_val1)\n                    const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    if (startTime <= elementTime && elementTime < endTime) {\n                        sum = sum + valueSum\n                        elementList.push(element)\n                    }\n                }\n                timeForList.push({\n                    value: sum,\n                    startTime: startTime,\n                    endTime: endTime,\n                    elementList: elementList\n                })\n            }\n            console.log(timeForList)\n            const cellMap = timeForList.map(function (info, index, arr) {\n                return (\n                    <div key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n                );\n            })\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                    <div style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', backgroundColor: \"#cccccc\", display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{title}</div>\n                    {cellMap}\n                </div>\n            );\n        })\n        const Secondedata = FlootSheetSecondAreaData.map(function (value, index, arr) {\n            const title = value[0].title\n            var timeForList = []\n            for (let index = 0; index < 24; index++) {\n                const startTime = start + (index * 60 * 60 * 1000)\n                const endTime = start + ((index + 1) * 60 * 60 * 1000)\n                var sum = 0\n                var elementList = []\n                for (let index = 0; index < value.length; index++) {\n                    const element = value[index].element;\n                    const valueSum = Number(element.inp_val1)\n                    const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    if (startTime <= elementTime && elementTime < endTime) {\n                        sum = sum + valueSum\n                        elementList.push(element)\n                    }\n                }\n                timeForList.push({\n                    value: sum,\n                    startTime: startTime,\n                    endTime: endTime,\n                    elementList: elementList\n                })\n            }\n            const cellMap = timeForList.map(function (info, index, arr) {\n                return (\n                    <div key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n                );\n            })\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                    <div style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', backgroundColor: \"#cccccc\", display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{title}</div>\n                    {cellMap}\n                </div>\n            );\n        })\n\n        const Thirddata = FlootSheetThirdAreaData.map(function (value, index, arr) {\n            const title = value[0].title\n            var timeForList = []\n            for (let index = 0; index < 24; index++) {\n                const startTime = start + (index * 60 * 60 * 1000)\n                const endTime = start + ((index + 1) * 60 * 60 * 1000)\n                var sum = 0\n                var elementList = []\n                for (let index = 0; index < value.length; index++) {\n                    const element = value[index].element;\n                    const valueSum = Number(element.inp_val1)\n                    const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    if (startTime <= elementTime && elementTime < endTime) {\n                        sum = sum + valueSum\n                        elementList.push(element)\n                    }\n                }\n                timeForList.push({\n                    value: sum,\n                    startTime: startTime,\n                    endTime: endTime,\n                    elementList: elementList\n                })\n            }\n            const cellMap = timeForList.map(function (info, index, arr) {\n                return (\n                    <div key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n                );\n            })\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                    <div style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', backgroundColor: \"#cccccc\", display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{title}</div>\n                    {cellMap}\n                </div>\n            );\n        })\n        function formatRV(List) {\n            var timeForList = []\n            for (let index = 0; index < 24; index++) {\n                const startTime = start + (index * 60 * 60 * 1000)\n                const endTime = start + ((index + 1) * 60 * 60 * 1000)\n                var sum = 0\n                var elementList = []\n                for (let index = 0; index < List.length; index++) {\n                    const element = List[index].element;\n                    const valueSum = Number(element.inp_val1)\n                    const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    if (startTime <= elementTime && elementTime < endTime) {\n                        sum = sum + valueSum\n                        elementList.push(element)\n                    }\n                }\n                timeForList.push({\n                    value: sum,\n                    startTime: startTime,\n                    endTime: endTime,\n                    elementList: elementList\n                })\n            }\n            return timeForList\n        }\n        const RVCellRender = formatRV(dataList.ThirdArray)\n        const cellMap = RVCellRender.map(function (info, index, arr) {\n            return (\n                <div key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n            );\n        })\n        const RV = this.RVList(cellMap)\n        const FourdataCellRender = FlootSheetFourthAreaData.map((value, index, arr) => {\n            const datajson = value.element\n            const title = value.title\n            return this.FourthDataCell(datajson, title)\n        })\n        return (\n            <div>\n                <div style={{ display: 'flex', alignItems: 'center', height: '50px' }}>\n                    <t1>I/O</t1>\n                </div>\n                <div style={{ display: Firstdata.length === 0 ? \"none\" : \"block\", border: \"1px solid black\", borderCollapse: \"collapse\" }}>\n                    {Firstdata}\n                </div>\n                <div style={{ display: Secondedata.length === 0 ? \"none\" : \"block\", border: \"1px solid black\", borderCollapse: \"collapse\" }}>\n                    {Secondedata}\n                </div>\n                <div style={{ display: Thirddata.length === 0 ? \"none\" : \"block\", border: \"1px solid black\", borderCollapse: \"collapse\" }}>\n                    {Thirddata}\n                    {RV}\n                </div>\n                <div style={{ display: FourdataCellRender.length === 0 ? \"none\" : \"block\", border: \"1px solid black\", borderCollapse: \"collapse\" }}>\n                    {FourdataCellRender}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Flootsheetio;","import React, { Component } from 'react';\nimport Flootsheetio from './Flootsheetio'\n// import Flowsheetvitalsign from './Flootsheetvitalsign'\nimport Vitalxaxis from '../../Module/Vitalxaxis'\nimport { DatePicker, Button } from 'antd';\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport './Flootsheetlayout.scss'\nimport X2JS from 'x2js';\nimport * as Wardstate from '../../Function/Wardstate'\n\nclass Flowsheetlayout extends Component {\n    state = {\n        PickerDate: moment(moment().format('YYYYMMDD')).valueOf(),\n        preCID: null,\n        QSPE: [],\n        // itemlist: []\n    }\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const CID = caseinfo.CASEID\n        const date = moment(moment().format('YYYYMMDD')).valueOf()\n        this.setState({ preCID: CID, PickerDate: date })\n        this.ApiData(CID, date)\n    }\n    componentDidUpdate() {\n        const CID = this.props.caseinfo.CASEID\n        const preCID = this.state.preCID\n        if (CID !== preCID) {\n            const date = this.state.PickerDate\n            this.setState({ preCID: CID, PickerDate: date })\n            this.ApiData(CID, date)\n        }\n    }\n    ApiData(CID, DateTime) {\n        const st = moment(DateTime + (7 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        const et = moment(DateTime + (31 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        ApiProvider.getQSPE(CID, st, et)\n            .then(data => {\n                const dataJson = Wardstate.XM2JSON(data.data)\n                // const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                if (Array.isArray(dataJson)) {\n                    this.setState({ QSPE: dataJson })\n                }\n                else {\n                    this.setState({\n                        QSPE: [dataJson]\n                    })\n                }\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n    }\n    onDateChange = (date, dateString) => {\n        const CID = this.props.caseinfo.CASEID\n        this.setState({ preCID: CID, PickerDate: date.valueOf() })\n        this.ApiData(date.valueOf())\n\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDate } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const bTemp = bTime - (6 * day)\n                bronDate <= bTemp && this.onDateChange(moment(bTime))\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD'))\n                this.onDateChange(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= aTemp && this.onDateChange(moment(aTime))\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const data = this.state.QSPE || [] //特殊護理事件\n        const splist = data.filter(function (value, index, array) {\n            if (value === undefined) {\n                return null\n            }\n            console.log(value)\n            const str = value.special\n            return str.match(\"@v\") === null\n        })\n        const specialListRender = splist.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ display: \"flex\", color: \"rgba(59, 151, 225, 1)\" }}>{value.special.toString().trim()}</div>\n            );\n        })\n        return (\n            <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\n                <div>\n                    {/* <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}> */}\n                    <div style={{ padding: \"0px 10px\", display: \"flex\" }}>\n                        <DatePicker disabledDate={(current) => { return current > moment().startOf(\"day\") || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }} width={120} value={moment(this.state.PickerDate)} allowClear={false} onChange={this.onDateChange} />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\", padding: \"2px 10px 0px 10px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                    </div>\n                    <div style={{ display: splist.length === 0 ? \"none\" : \"block\", border: \"rgba(238,238,238,1) 1px solid\", borderRadius: \"4px\" }}>\n                        <div style={{ fontSize: \"16px\", display: \"flex\", paddingLeft: \"5px\", alignItems: \"center\", backgroundColor: \"#cccccc\" }}>\n                            特殊護理事件:<t2 style={{ width: \"20px\", height: \"20px\", borderRadius: \"99em\", background: \"black\", color: \"white\", display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>{splist.length}</t2>\n                        </div>\n                        <div style={{ maxHeight: \"100px\", width: \"100%\", overflow: \"auto\" }}>\n                            {specialListRender}\n                        </div>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"20px\" }}>\n                    <div></div>\n                    <Vitalxaxis max={200} min={0} select_interval={0} select_date={this.state.PickerDate} id_key=\"xaxis_flootsheet\" svg_id=\"xaxis_svg_flootsheet\"></Vitalxaxis>\n                </div>\n                <div className='boxshadow'></div>\n                <div className='flootsheetlayout'>\n                    <Flootsheetio PickerDate={this.state.PickerDate} caseinfo={caseinfo}></Flootsheetio>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\" }}>\n                    <div></div>\n                    <Vitalxaxis max={200} min={0} select_interval={0} select_date={this.state.PickerDate} id_key=\"xaxis_flootsheet_bot\" svg_id=\"xaxis_svg_flootsheet_bot\"></Vitalxaxis>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Flowsheetlayout;\n","import React, { Component } from 'react';\nimport './Examchart.scss';\nimport * as d3 from \"d3\";\nimport moment from 'moment';\n\nclass Examchart extends Component {\n    state = {\n        change: false\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\".tooltip\").remove()\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n    drawChart() {\n\n        const { id_key, svg_id, max, min, lineChart } = this.props\n        const sT = new Date(moment(lineChart[0].date, 'YYYYMMDD').valueOf() - 24 * 60 * 60 * 1000)\n        const endT = new Date(moment(lineChart[lineChart.length - 1].date, 'YYYYMMDD') + 24 * 60 * 60 * 1000)\n\n        const fixLineChart = lineChart.filter(data => {\n            return data.value !== \"\"\n        })\n\n        // 邊界\n        const margin = { top: 20, right: 20, bottom: 30, left: 50 },\n            width = 1000 - margin.left - margin.right,\n            height = 500 - margin.top - margin.bottom;\n\n        const cost = (max - min) / 2\n        console.log(`min : ${min}, max : ${max}, cost : ${cost}`)\n        const RangeMin = (min - cost) <= 0 ? 0 : (min - cost)\n        const RangeMax = max + cost\n\n        let x = d3.scaleTime().domain([sT, endT]).range([0, width - margin.left - margin.right])\n        let y = d3.scaleLinear().domain([RangeMin, RangeMax]).range([height, 0])\n\n        var div = d3.select(\"#\" + id_key).append(\"div\")\n            .attr(\"class\", \"tooltip\")\n            .style(\"opacity\", 0);\n\n        let svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            .style(\"height\", height + margin.top + margin.bottom)\n            .style(\"width\", width + margin.left + margin.right)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        svg.append('g')\n            .call(d3.axisBottom(x).ticks(5).tickFormat(d3.timeFormat('%m/%d')))\n            .attr(\"transform\", `translate(0,${height})`)\n            .style('stroke', 'black')\n            .style('stroke-width', 1);\n\n        svg.append('g')\n            .call(d3.axisLeft(y))\n            .style('stroke', 'black')\n            .style('stroke-width', 1);\n\n        let line = d3.line()\n            .x(d => x(moment(d.date, 'YYYYMMDDHHmm').toDate()))\n            .y(d => y(d.value))\n            .curve(d3.curveMonotoneX);\n\n        let lines = svg.append('g').attr('class', 'lines');\n\n        lines.selectAll(\"circle\")\n            .data(fixLineChart)\n            .enter()\n            .append('g')\n            .append(\"circle\")\n            .attr(\"class\", \"lines-circle\")\n            .attr(\"cy\", d => y(d.value))\n            .attr(\"cx\", d => x(moment(d.date, 'YYYYMMDDHHmm').toDate()))\n            .attr('r', 5)\n            .on(\"mouseover\", function (d) {\n                div.transition()\n                    .duration(100)\n                    .style(\"opacity\", .9);\n                div.html(`檢驗時間 : ${d.date} <br/> 檢驗數值 : ${d.value}`)\n                    .style(\"left\", (d3.event.pageX - 200) + \"px\")\n                    .style(\"top\", (d3.event.pageY - 150) + \"px\");\n            })\n            .on(\"mouseout\", function (d) {\n                div.transition()\n                    .duration(300)\n                    .style(\"opacity\", 0);\n            })\n            .style('opacity', 1)\n            .style('fill', \"blue\");\n\n        lines\n            .selectAll('.line-group')\n            .data(fixLineChart)\n            .enter()\n            .append('g')\n            .attr('class', 'line-group')\n            .append('path')\n            .attr('class', 'line')\n            .attr('d', line(fixLineChart))\n            .style('stroke', 'black')\n            .style('fill', 'none');\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default Examchart;\n","import React, { Component } from 'react';\nimport { Select, Modal } from 'antd';\n// import * as ApiGithub from '../../API/ApiGithub'\nimport * as RegularData from '../../Data/RegularData'\nimport moment from 'moment'\nimport Examchart from './Examchart'\nimport { Button } from 'antd';\n\nclass Labview extends Component {\n    state = {\n        Selectus: this.props.SelectStatus,\n        PickerDateRange: [moment(), moment()],\n        visible: false,\n        lineCharttitle: '',\n        lineChart: [],\n        IRParse: RegularData.InspectionReportExtent()\n    }\n    componentDidMount() {\n        // ApiGithub.getExamReport()\n        //     .then(data => {\n        //         this.setState({\n        //             TitleList: data.data\n        //         })\n        //     })\n        //     .catch(err=>{\n        //         console.log(\"GithubAPI NG\" + err)\n        //     })\n        // this.setState({\n        //     TitleList: RegularData.ExamReportJson\n        // })\n    }\n\n    callbackDateFunction = (value) => {\n        this.props.parentDateCallback(value);\n    }\n    handleChange = (value) => {\n        this.callbackDateFunction(value)\n        this.setState({\n            Selectus: value\n        })\n    }\n    titleSearch = (value) => {\n        this.props.parentTitleCallback(value.target.value);\n    }\n    CellRender() {\n        const { DataList } = this.props\n        // console.log(DataList)\n        if (DataList.length === 0) {\n            return null\n        }\n        const DataListCell = DataList.map(function (element, index) {\n            const cellRender = element.Data.map(function (info, index) {\n                return (\n                    <centerstyle key={index} style={{ flex: 1, border: \"1px solid #cccccc\", borderCollapse: 'collapse' }}>\n                        <t3>{info}</t3>\n                    </centerstyle>\n                );\n            })\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"110px 1fr\", height: \"50px\" }}>\n                    <centerstyle style={{ border: \"1px solid #cccccc\", borderCollapse: 'collapse', paddingLeft: \"15px\" }}>\n                        <t3>{element.Time}</t3>\n                    </centerstyle>\n                    <div style={{ display: \"flex\", gridTemplateColumns: \"repeat(9,1fr)\" }}>\n                        {cellRender}\n                    </div>\n                </div >\n            );\n        })\n        return DataListCell\n    }\n\n    fixLineChartData = (e) => {\n        const { DataList } = this.props;\n        const value = e.target.value;\n        const number = e.target.getAttribute('index');\n\n        let showDate = DataList.map(data => {\n            let temp = {}\n            temp['date'] = data.Time;\n            temp['value'] = data.Data[number];\n            return temp\n        })\n\n        showDate.sort((x, y) => {\n            return moment(x.date, 'YYYYMMDDHHmm').valueOf() - moment(y.date, 'YYYYMMDDHHmm').valueOf()\n        })\n\n        this.setState({\n            lineCharttitle: value,\n            lineChart: showDate,\n        }, () => { this.showModel() });\n    }\n    showModel = () => {\n        this.setState({\n            visible: true,\n        });\n    }\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    charttableview = () => {\n\n        if (this.state.lineCharttitle === '') { return null }\n\n        const dataIR = this.state.IRParse\n        const key = Object.keys(dataIR)[this.state.Selectus]\n        const range = dataIR[key][this.state.lineCharttitle]\n\n        const lineChart = this.state.lineChart\n        const itemValue = []\n\n        if (range.min === undefined || range.max === undefined) {\n            lineChart.map(data => { itemValue.push(data.value) })\n        }\n\n        const max = range.max !== undefined ? range.max : Math.max(...itemValue)\n        const min = range.min !== undefined ? range.min : Math.min(...itemValue)\n\n        return (\n            <div style={{ margin: \"20px 0px\" }}>\n                <Examchart lineChart={lineChart} max={max} min={min} id_key={\"svgExamID\"} svg_id={\"svgExamSVG\"}></Examchart>\n            </div>\n        );\n    }\n\n    render() {\n        const { Option } = Select;\n        const visible = this.state.visible\n        const lineCharttitle = this.state.lineCharttitle\n        const handleOk = this.handleOk\n        const handleCancel = this.handleCancel\n        const fixLineChartData = this.fixLineChartData\n        const charttableview = this.charttableview()\n        const LabDataList = RegularData.ExamReportJson()\n        //0:CBC 1:電解質 2:肝功能 3:心臟 4:凝血 5:GAS 6:Glucose\n        const SelectList = LabDataList.map(function (info, index) {\n            // console.log(info.index)\n            return (\n                <Option key={info.index} value={info.index} >{info.select}</Option>\n            );\n        })\n        const SelectTitlefilter = LabDataList.filter(function (element, index) {\n            const selectdata = Select\n            return element.index = selectdata\n        })\n        if (SelectTitlefilter.length === 0) {\n            return null\n        }\n        const SelectTitle = SelectTitlefilter[this.state.Selectus].title\n        const SelectTitleRender = SelectTitle.map(function (info, index) {\n            return (\n                <centerstyle style={{ flex: 1 }} key={index}>\n                    <Button style={{ width: \"70px\", backgroundColor: \"transparent\", border: \"2px white solid\" }} index={index} value={info} onClick={fixLineChartData}>{info}</Button>\n                </centerstyle >\n            );\n        })\n        const ExamLab = this.CellRender()\n        // console.log(ExamLab)\n        return (\n            <div>\n                <Modal\n                    title={lineCharttitle}\n                    visible={visible}\n                    onOk={handleOk}\n                    onCancel={handleCancel}\n                    width={1200}\n                    footer={null}>\n                    {charttableview}\n                </Modal>\n                <t1>LAB(常規檢驗)</t1>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"auto 1fr\", marginTop: \"10px\", gridColumnGap: \"5px\" }}>\n                    <t2 style={{ display: \"flex\", alignItems: \"center\" }}>檢驗類別：</t2>\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                        <Select defaultValue={this.state.Selectus} style={{ width: \"90%\" }} onChange={this.handleChange}>\n                            {SelectList}\n                        </Select>\n                    </div>\n                </div>\n                <div style={{ marginTop: \"10px\", display: \"grid\", gridTemplateColumns: \"110px 1fr\", height: \"50px\", backgroundColor: \"#E2EDF3\" }}>\n                    <centerstyle>\n                        <t2>檢驗項目</t2>\n                    </centerstyle>\n                    <div style={{ display: \"flex\", gridTemplateColumns: \"repeat(9,1fr)\", justifycontent: \"space-between\" }} onClick={this.titleSearch}>\n                        {SelectTitleRender}\n                    </div>\n                </div>\n                <div>{this.state.Title}</div>\n                {ExamLab}\n            </div >\n        );\n    }\n}\n\nexport default Labview;\n","export function ExamReportJson() {\n    return [\n        {\n            \"select\": \"CBC檢驗:WBC、Band、Seg、Lym、Hb、Hct、PLT\",\n            \"index\": 0,\n            \"title\": [\n                \"WBC\",\n                \"Band\",\n                \"Seg\",\n                \"Lym\",\n                \"Hb\",\n                \"Hct\",\n                \"PLT\"\n            ]\n        },\n        {\n            \"select\": \"電解質與腎功能檢驗:Na、K、Cl、Ca(Free, Total)、Mg、P、BUN、Cr\",\n            \"index\": 1,\n            \"title\": [\n                \"Na\",\n                \"K\",\n                \"Cl\",\n                \"Ca(Free)\",\n                \"Ca(Total)\",\n                \"Mg\",\n                \"P\",\n                \"BUN\",\n                \"Cr\"\n            ]\n        },\n        {\n            \"select\": \"肝功能檢驗:ALT、AST、TBil、DBil、rGGT、Alkp、Alb\",\n            \"index\": 2,\n            \"title\": [\n                \"ALT\",\n                \"AST\",\n                \"TBil\",\n                \"DBil\",\n                \"rGGT\",\n                \"Alkp\",\n                \"Alb\"\n            ]\n        },\n        {\n            \"select\": \"早產兒追蹤:Iron、TIBC、FeSat、LDH、Alkp\",\n            \"index\": 3,\n            \"title\": [\n                \"Iron\",\n                \"TIBC\",\n                \"FeSat\",\n                \"LDH\",\n                \"Alkp\"\n            ]\n        },\n        {\n            \"select\": \"心臟功能檢驗:ck、ck-MB、BNP、Troponin I\",\n            \"index\": 4,\n            \"title\": [\n                \"ck\",\n                \"ck-MB\",\n                \"BNP\",\n                \"Troponin I\"\n            ]\n        },\n        {\n            \"select\": \"凝血功能檢驗:PT、APTT、INR\",\n            \"index\": 5,\n            \"title\": [\n                \"PT\",\n                \"APTT\",\n                \"INR\"\n            ]\n        },\n        {\n            \"select\": \"GAS(Acid-Base)檢驗:PH、pCO2、pO2、HCO3、BE、Sample、O2Sat、FiO2\",\n            \"index\": 6,\n            \"title\": [\n                \"PH\",\n                \"pCO2\",\n                \"pO2\",\n                \"HCO3\",\n                \"BE\",\n                \"Sample\",\n                \"O2Sat\",\n                \"FiO2\"\n            ]\n        },\n        ,\n        {\n            \"select\": \"GAS(Additionary)檢驗:Hb(Hgb)、Hct、Na、K、Ca(Free)、Bun、Cr\",\n            \"index\": 7,\n            \"title\": [\n                \"Hb(Hgb)\",\n                \"Hct\",\n                \"Na\",\n                \"K\",\n                \"Ca(Free)\",\n                \"Bun\",\n                \"Cr\"\n            ]\n        },\n        {\n            \"select\": \"Glucose檢驗:Glu(BedSide, Lab)\",\n            \"index\": 8,\n            \"title\": [\n                \"Glu(BedSide)\",\n                \"Glu(Lab)\"\n            ]\n        },\n        {\n            \"select\": \"黃疸檢查:TCB、MicroBil、TBil、DBil\",\n            \"index\": 9,\n            \"title\": [\n                \"TCB\",\n                \"MicroBil\",\n                \"TBil\",\n                \"DBil\"\n            ]\n        },\n        {\n            \"select\": \"感染指數:WBC、Band、Seg、Lym、PCT(procalcitonin)、CRP\",\n            \"index\": 10,\n            \"title\": [\n                \"WBC\",\n                \"Band\",\n                \"Seg\",\n                \"Lym\",\n                \"PCT(procalcitonin)\",\n                \"CRP\"\n            ]\n        }\n    ]\n}\nexport function FlagReg() {\n    return [\n        {\n            item: \"Respirator\",\n            \"ParseValueUD\": [\n                \"Restriction\"\n            ],\n            \"ParseValueTRT\": []\n        },\n        {\n            item: \"TPN\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"NPO\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"Anti\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"Foley\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"Drain\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        }\n    ]\n}\nexport function QDC() {\n    return {\n        \"Feeding\": [\n            \"進食\"\n        ],\n        \"IV\": [\n            \"血品\",\n            \"輸液\"\n        ],\n        \"Urine\": [\n            \"排尿\"\n        ],\n        \"Other\": [\n            \"失血\",\n            \"滲液\",\n            \"嘔吐\",\n            \"引流\",\n            \"穿刺\",\n            \"透析\",\n            \"沖洗\",\n            \"排便\"\n        ]\n    }\n}\n\nexport function ChronicLab() {\n    return {\n        \"Biochemical\": [\n        ],\n        \"Blood\": [\n            \"BLOOD\"\n        ],\n        \"Cultivate\": [\n\n        ],\n        \"GAS\": [\n\n        ],\n        \"Glu\": [\n\n        ],\n        \"Radiation\": [\n        ]\n    }\n}\n\nexport function NonLabExamReportParser() {\n    return [\n        {\n            parser_name: \"CBC\",\n            apply_condition: {\n                name: \"CBC|WBC|HB|PLT\",\n                sample: null,\n                lab: null,\n                start_time: null,\n                end_time: null,\n            },\n            mappings: [\n                {\n                    key: \"Hb\",\n                    regex_str: \"HB:\\\\s+(\\\\d+(.\\\\d)?)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"WBC\",\n                    regex_str: \"wbc:\\\\s+(\\\\d+)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"PLT\",\n                    regex_str: \"plt:\\\\s+(\\\\d+)\",\n                    regex_flags: 'ism',\n                    position: 1\n                }\n            ],\n            summary: \"[WBC;-]/[Hb;]/[PLT;-]\"\n        },\n        {\n            parser_name: \"Atypical Respiratory Panel\",\n            apply_condition: {\n                name: \"Atypical Respiratory Panel|CBC|PH|HB|PO2\",\n                sample: null,\n                lab: null,\n                start_time: null,\n                end_time: null,\n            },\n            mappings: [\n                {\n                    key: \"Hb\",\n                    regex_str: \"Hb:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"PH\",\n                    regex_str: \"PH:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"PO2\",\n                    regex_str: \"PO2:\\\\s+\\\\((\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"FIO2\",\n                    regex_str: \"FIO2:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"HCO3\",\n                    regex_str: \"HCO3:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                }\n            ],\n            summary: \"[PH;-]/[Hb;-]/[PO2;-]/[FIO2;-]/[HCO3;-]\"\n        }\n    ]\n}\n\nexport function NonLabExamORDListParser() {\n    return [\n        {\n            parser_name: \"ORDLIST\",\n            apply_condition: {\n                name: \"ORDLIST\",\n                sample: null,\n                lab: null,\n                start_time: null,\n                end_time: null,\n            },\n            mappings: [\n                {\n                    key: \"飲食類別\",\n                    regex_str: \"(CHEST\\\\s+KUB\\\\s+\\\\(FOR\\\\s+BABY\\\\)\\\\s+PORTABLE)|(BRAIN\\\\s+ECHO\\\\s+\\\\(NBD\\\\))\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"管路類別\",\n                    regex_str: \"(BLOOD\\\\s+GAS)|(Atypical\\\\s+Respiratory\\\\s+Panel)|(BLOOD\\\\s+PRODUCTS\\\\s+IRRADIATION)|(Aliqot\\\\s+and\\\\s+storage\\\\s+of\\\\s+blood)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"呼吸類別\",\n                    regex_str: \"(NT-pro-BNP)|(ANTIBODY\\\\s+SCREENING)\",\n                    regex_flags: 'ism',\n                    position: 1\n                }\n            ],\n            summary: \"[CHEST KUB;-]/[BLOOD GAS;-]/[Glucose;-]\"\n        }\n    ]\n}\n\nexport function InspectionReportExtent() {\n    return {\n        \"CBC\": {\n            \"WBC\": {\n                \"min\": 10000,\n                \"max\": 30000\n            },\n            \"Band\": {\n                \"min\": 0,\n                \"max\": 0.05\n            },\n            \"Seg\": {\n            },\n            \"Lym\": {\n            },\n            \"Hb\": {\n                \"min\": 10,\n                \"max\": 18\n            },\n            \"Hct\": {\n                \"min\": 30,\n                \"max\": 55\n            },\n            \"PLT\": {\n                \"min\": 100000,\n                \"max\": 450000\n            }\n        },\n        \"電解質與腎功能\": {\n            \"Na\": {\n                \"min\": 135,\n                \"max\": 145\n            },\n            \"K\": {\n                \"min\": 3.5,\n                \"max\": 5.5\n            },\n            \"Cl\": {\n            },\n            \"Ca(Free)\": {\n                \"min\": 0.8,\n                \"max\": 1.4\n            },\n            \"Ca(Total)\": {\n                \"min\": 8,\n                \"max\": 12\n            },\n            \"Mg\": {\n                \"min\": 1.5,\n                \"max\": 4.0\n            },\n            \"P\": {\n                \"min\": 4.5,\n                \"max\": 6.0\n            },\n            \"BUN\": {\n                \"min\": 0,\n                \"max\": 20\n            },\n            \"Cr\": {\n                \"min\": 0,\n                \"max\": 1\n            }\n        },\n        \"肝功能\": {\n            \"ALT\": {\n                \"min\": 0,\n                \"max\": 45\n            },\n            \"AST\": {\n                \"min\": 0,\n                \"max\": 45\n            },\n            \"TBil\": {\n                \"min\": 0,\n                \"max\": 2\n            },\n            \"DBil\": {\n                \"min\": 0,\n                \"max\": 0.2\n            },\n            \"rGGT\": {\n                \"min\": 0,\n                \"max\": 50\n            },\n            \"Alkp\": {\n                \"min\": 0,\n                \"max\": 450\n            },\n            \"Alb\": {\n                \"min\": 3.0,\n                \"max\": undefined\n            }\n        },\n        \"早產兒追蹤\": {\n            \"Iron\": {\n            },\n            \"TIBC\": {\n            },\n            \"FeSat\": {\n            },\n            \"LDH\": {\n            },\n            \"Alkp\": {\n            }\n        },\n        \"心臟功能\": {\n            \"kp\": {\n            },\n            \"ck-MB\": {\n            },\n            \"BNP\": {\n            },\n            \"Troponin I\": {\n                \"min\": 0,\n                \"max\": 0.5\n            }\n        },\n        \"凝血功能\": {\n            \"PT\": {\n            },\n            \"APTT\": {\n            },\n            \"INR\": {\n                \"min\": 0.8,\n                \"max\": 1.5\n            }\n        },\n        \"GAS(Acid-Base)\": {\n            \"pH\": {\n                \"min\": 7.25,\n                \"max\": 7.4\n            },\n            \"pCO2\": {\n                \"min\": 40,\n                \"max\": 60\n            },\n            \"pO2\": {\n                \"min\": 40,\n                \"max\": 90\n            },\n            \"HCO3\": {\n            },\n            \"BE\": {\n                \"min\": -7,\n                \"max\": 6\n            },\n            \"Sample\": {\n            },\n            \"O2Sat\": {\n            },\n            \"FiO2\": {\n            }\n        },\n        \"GAS(Additionary)\": {\n            \"Hb (Hgb)\": {\n            },\n            \"Hct\": {\n            },\n            \"Na\": {\n            },\n            \"K\": {\n            },\n            \"Ca(Free)\": {\n            },\n            \"Bun\": {\n            },\n            \"Cr\": {\n            }\n        },\n        \"Glucose\": {\n            \"Glu (BedSide)\": {\n                \"min\": 50,\n                \"max\": 120\n            },\n            \"Glu (Lab)\": {\n                \"min\": 50,\n                \"max\": 120\n            }\n        },\n        \"黃疸\": {\n            \"TCB\": {\n            },\n            \"MicroBil\": {\n            },\n            \"TBil\": {\n            },\n            \"DBil\": {\n            }\n        },\n        \"感染指數\": {\n            \"WBC\": {\n                \"min\": 10000,\n                \"max\": 30000\n            },\n            \"Band\": {\n                \"min\": 0,\n                \"max\": 0.05\n            },\n            \"Seg\": {\n            },\n            \"Lym\": {\n            },\n            \"PCT (procalcitonin)\": {\n                \"min\": 0,\n                \"max\": 0.5\n            },\n            \"CRP\": {\n                \"min\": 0,\n                \"max\": 0.5\n            }\n        }\n    }\n\n}\n","import React, { Component } from 'react';\nimport './ExamNonlabtablecell.scss'\n// import { Nonlablist } from '../../Data/Wardviewdata'\nimport moment from 'moment'\nimport NonlabviewtableCell from '../CrossSectionView/NonlabviewtableCell'\n// import { Modal } from 'antd';\n// import InsReportModal from '../ExamReportModal'\n\nclass Examnonlabviewtable extends Component {\n    state = {\n        visible: false\n    }\n\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            const resultKey = mapping.sample ? mapping.key + \"-\" + mapping.sample : mapping.key\n            allResult[resultKey] = []\n        });\n        allResult[\"全部\"] = []\n        inputs.forEach(input => {\n            let content = input.ORPROCED;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\" && (mapping.sample ? input.ORSPCN1.trim() === mapping.sample : true)) {\n                    const resultKey = mapping.sample ? mapping.key + \"-\" + mapping.sample : mapping.key\n                    allResult[resultKey].push(input)\n                }\n            });\n\n            allResult[\"全部\"].push(input)\n        });\n\n        return allResult;\n    }\n\n    render() {\n        function listforstatus(ordlist, ressect, pickerdaterange, StateMode, InputMode) {\n            if (StateMode !== 0) {\n                /*\n                預設 \n                全部 StateMode == 0\n                已開單 StateMode == 1, data.ORSTATUS == 30\n                已簽收 StateMode == 2, data.ORSTATUS == 31\n                已發報告 StateMode == 3, data.ORSTATUS == 32\n                */\n                const changeState = { '1': '30', '2': '31', '3': '32' }\n                ordlist = ordlist.filter(data => {\n                    return data.ORSTATUS === changeState[StateMode.toString()]\n                })\n            }\n\n            if (InputMode !== null) {\n                ordlist = ordlist.filter(data => {\n                    return data.ORPROCED.match(InputMode) !== null\n                })\n            }\n\n            var status_report = []\n            console.log(ordlist, ressect, pickerdaterange)\n            const et = pickerdaterange[1].valueOf() + (24 * 60 * 60 * 1000)\n            const st = pickerdaterange[0].valueOf()\n            if (Array.isArray(ordlist) && Array.isArray(ressect)) {\n                for (let index = 0; index < ordlist.length; index++) {\n                    const element = ordlist[index];\n                    const time = element.ORBGNDT.toString().trim() + element.ORBGNTM.toString().trim()\n                    const timeStamp = moment(time, 'YYYY-MM-DDHHmmss').valueOf()\n                    if (timeStamp > st && timeStamp < et) {\n                        const status = ressect.find(function (value, index, array) {\n                            return value.ORDCLNM === element.ORDCLNM\n                        })\n                        if (status) {\n                            status_report.push({\n                                \"status\": true,\n                                \"element\": element\n                            })\n                        }\n                        else {\n                            status_report.push({\n                                \"status\": false,\n                                \"element\": element\n                            })\n\n                        }\n                    }\n                }\n            }\n            return status_report\n        }\n\n        const { PickerDateRange, ORDLIST, RESSECT, StateMode, InputMode } = this.props\n\n        let clusteredData = {}\n        if (this.props.parser !== undefined) {\n            clusteredData = this.parse(ORDLIST, this.props.parser)\n        }\n\n        //filter data by selected class\n        let filteredData = clusteredData[this.props.selectedClass];\n\n        //Picker Date 前三天\n        const list = listforstatus(filteredData, RESSECT, PickerDateRange, StateMode, InputMode)\n        console.log(list)\n        const showModal = this.props.showModal\n        const nonlabcell = list.map(function (value, index, array) {\n            // console.log(value)\n            const time = moment(value.element.ORDATE.toString().trim() + value.element.ORTIME.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n            const come = value.element.ORSPCN1\n            const name = value.element.ORPROCED\n            const status = value.element.ORSTATUS\n\n            return (\n                <NonlabviewtableCell key={\"Examnonlabviewtable\" + index} come={come} time={time} name={name} status={status} hisId={value.element.ORHISTNO} caseId={value.element.ORDSEQCN} month={value.element.ORMM} seq={value.element.ORDSEQNO} showModal={showModal}></NonlabviewtableCell>\n            );\n        })\n\n        return (\n            <div style={{ marginTop: \"10px\" }}>\n                <div style={{ height: \"50px\", border: \"#E2EDF3 1px solid\", backgroundColor: \"#E2EDF3\", display: \"grid\", gridTemplateColumns: \"1fr 1.5fr 1fr 1fr 1fr\" }}>\n                    <t3 className='nonlabtebletitlecell'>檢驗日期</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗項目名稱</t3>\n                    <t3 className='nonlabtebletitlecell'>檢體來源</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗項目狀態</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗結果</t3>\n                </div>\n                <div className='nonlabviewtable'>\n                    {nonlabcell}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Examnonlabviewtable\n","import React, { Component } from 'react';\nimport Examnonlabviewtable from './ExamNonlabtablecell'\nimport { Input,  Select, Modal } from 'antd';\n// import moment from 'moment';\n// import searchlogo from '../../Image/svg/Search.svg'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport InsReportModal from '../ExamReportModal'\n\n// var mode_class, mode_state;\nclass Nonlabview extends Component {\n    state = {\n        ClassMode: \"全部\",\n        StateMode: 0,\n        InputMode: null,\n        parser: { \"mappings\": [] },\n        modalVisible: false,\n        modalReport: \"\"\n    }\n\n    componentDidMount() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"NonLabExamReport\");\n                parser.mappings = [{ \"key\": \"全部\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson ExamReportNonLab OK \" + JSON.stringify(parser))\n                this.setState({\n                    parser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    Inputvaluesearch = (event) => {\n        this.setState({ InputMode: event.target.value })\n    }\n\n    onChangeState = (value) => {\n        this.setState({ StateMode: value })\n    }\n\n    onChangeClass = (value) => {\n        this.setState({ ClassMode: value })\n    }\n\n    showModal = (report) => {\n        console.log(\"showModal :\" + JSON.stringify(report))\n        this.setState({\n            modalVisible: true,\n            modalReport: report\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    render() {\n        // var statetime = {\n        //     \"Starttime\": (+new Date()),\n        //     \"Endtime\": (+new Date())\n        // }\n        // const datearray = []\n        const { Option } = Select;\n        // function onChange(value, dateString) {\n        //     statetime.Starttime = (+new Date(dateString[0]))\n        //     statetime.Endtime = (+new Date(dateString[1]))\n        //     datearray.push(statetime.Starttime)\n        //     datearray.push(statetime.Endtime)\n        // }\n        // function Inputchange() {\n        //     const value = {\n        //         \"date\": datearray,\n        //         \"keyword\": document.getElementById(\"keywordsearch\").value\n        //     }\n        //     console.log(value)\n        // }\n        const { PickerDateRange, ORDLIST, RESSECT } = this.props\n        const { modalVisible, modalReport } = this.state\n        const showModal = this.showModal\n        const handleOk = this.handleOk\n        const handleCancel = this.handleCancel\n        return (\n            <div>\n                <t1>報告清單</t1>\n                <div style={{ display: 'grid', gridTemplateColumns: \"130px 130px auto\", gridColumnGap: \"5px\", marginTop: \"10px\" }}>\n                    <Select defaultValue={this.state.ClassMode} placeholder=\"選擇檢驗類別\" style={{ width: 120 }} onChange={this.onChangeClass}>\n                        {this.state.parser.mappings.map((mapping, index) => {\n                            return <Option key={index} value={mapping.sample ? mapping.key + \"-\" + mapping.sample : mapping.key}>{mapping.sample? mapping.key + \"-\" + mapping.sample : mapping.key}</Option>\n                        })}\n                    </Select>\n                    <Select defaultValue={this.state.StateMode} placeholder=\"選擇項目狀態\" style={{ width: 120 }} onChange={this.onChangeState}>\n                        <Option value={0}>全部</Option>\n                        <Option value={1}>已開單</Option>\n                        <Option value={2}>已簽收</Option>\n                        <Option value={3}>已發報告</Option>\n                    </Select>\n                    <Input id=\"keywordsearch\" placeholder=\"輸入關鍵字\" onChange={this.Inputvaluesearch} />\n                    {/* <div onClick={() => this.Inputvaluesearch()} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <img src={searchlogo} alt=\"searchlogo\" />\n                    </div> */}\n                </div>\n                <Examnonlabviewtable PickerDateRange={PickerDateRange} ORDLIST={ORDLIST} RESSECT={RESSECT} selectedClass={this.state.ClassMode} parser={this.state.parser} StateMode={this.state.StateMode} InputMode={this.state.InputMode} visible={modalVisible} showModal={showModal} handleOk={handleOk} handleCancel={handleCancel}></Examnonlabviewtable>\n                <Modal\n                    title={\"檢驗結果\"}\n                    visible={modalVisible}\n                    onOk={handleOk}\n                    onCancel={handleCancel}\n                    width={1000}\n                    footer={null}>\n                    <InsReportModal report={modalReport}></InsReportModal>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Nonlabview\n","import React, { Component } from 'react';\nimport Labview from './ExamLabview'\nimport { DatePicker, Button } from 'antd';\n// import searchlogo from '../../Image/svg/Search.svg'\n// import Examchart from './Examchart'\n// import Examaxis from './Examaxis'\nimport './ExamReport.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport Nonlabview from './NonLabview'\n// import * as RegularData from '../../Data/RegularData'\n\nclass Examreport extends Component {\n    state = {\n        selectdata: 0,\n        selectTitle: '',\n        PickerDateRange: [moment(moment().subtract(6, 'days').format('YYYYMMDD')),\n        moment(moment().format('YYYYMMDD'))],\n        RESDGLU1: [], //累積報告\n        RESLAB02: [], //累積報告\n        RESLAB01: [],  //累積報告\n        RESDBGAS: [],  //累積報告\n        RESLAB0C: [],//累積報告\n        ORDLIST: [],\n        RESSECT: []\n    }\n    constructor(props) {\n        super(props)\n        this.PickerDateRangeChange = this.PickerDateRangeChange.bind(this)\n    }\n\n    SelectDataList() {\n        function vallofnull(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"\"\n            }\n            return value.toString().trim()\n        }\n        const DateRange = this.state.PickerDateRange\n        console.log(`show DataRange : ${DateRange}`)\n        const selectData = this.state.selectdata\n        const st_timestamp = DateRange[0].valueOf()\n        const et_timestamp = DateRange[1].valueOf() + (24 * 60 * 60 * 1000)\n        // const { PickerDateRange, RESLAB02, RESDGLU1, RESLAB01, RESDBGAS, RESLAB0C, ORDLIST, RESSECT } = this.props\n        const RESLAB02 = this.state.RESLAB02\n        const RESDGLU1 = this.state.RESDGLU1\n        const RESLAB01 = this.state.RESLAB01\n        const RESDBGAS = this.state.RESDBGAS\n        const RESLAB0C = this.state.RESLAB0C\n\n\n        var CellData = []\n        console.log(selectData, RESLAB02, RESDGLU1, RESLAB01, RESDBGAS)\n        if (selectData === 0) { // CBC\n            for (let index = 0; index < RESLAB02.length; index++) {\n                const element = RESLAB02[index];\n                const WBC = vallofnull(element.RSV01)\n                const Band = vallofnull(element.RSV13)\n                const Seq = vallofnull(element.RSV14)\n                const Lym = vallofnull(element.RSV15)\n                const Hb = vallofnull(element.RSV03)\n                const Hct = vallofnull(element.RSV04)\n                const Plt = vallofnull(element.RSV09)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                console.log(\"time \" + time + \" st_timestamp \" + st_timestamp + \" et_timestamp \" + et_timestamp)\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [WBC, Band, Seq, Lym, Hb, Hct, Plt]\n                    })\n                }\n            }\n            console.log(\"CellData => \" + JSON.stringify(CellData))\n            return CellData\n        }\n        if (selectData === 1) { // 電解質與腎\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const Na = vallofnull(element.RSV13)\n                const K = vallofnull(element.RSV14)\n                const Cl = vallofnull(element.RSV15)\n                const CaFree = \"No\"\n                const CaTotal = vallofnull(element.RSV03)\n                const Mg = \"No\"\n                const P = vallofnull(element.RSV17)\n                const BUN = vallofnull(element.RSV05)\n                const Cr = vallofnull(element.RSV06)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [Na, K, Cl, CaFree, CaTotal, Mg, P, BUN, Cr]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 2) { // 肝功能\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const Alt = vallofnull(element.RSV11)\n                const AST = vallofnull(element.RSV12)\n                const TBil = vallofnull(element.RSV08)\n                const DBil = vallofnull(element.RSV25)\n                const rGGT = vallofnull(element.RSV19)\n                const Alkp = vallofnull(element.RSV09)\n                const Alb = vallofnull(element.RSV02)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [Alt, AST, TBil, DBil, rGGT, Alkp, Alb]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 3) { // 早產兒\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const Iron = vallofnull(element.RSV26)\n                const TIBC = vallofnull(element.RSV28)\n                const FeSat = parseInt(vallofnull(element.RSV26)) / parseInt(vallofnull(element.RSV26))\n                const LDH = vallofnull(element.RSV10)\n                const Alkp = vallofnull(element.RSV9)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [Iron, TIBC, FeSat, LDH, Alkp]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 4) { // 心臟\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const ck = vallofnull(element.RSV18)\n                const ckMB = vallofnull(element.RSV28)\n                const BNP = \"No\"\n                const Troponinl = vallofnull(element.RSV30)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [ck, ckMB, BNP, Troponinl]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 5) { // 凝血\n            for (let index = 0; index < RESLAB02.length; index++) {\n                const element = RESLAB02[index];\n                const PT = vallofnull(element.RSV10)\n                const APTT = vallofnull(element.RSV11)\n                const INR = vallofnull(element.RSV12)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [PT, APTT, INR]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 6) { // GAS(Acid-Base)\n            for (let index = 0; index < RESDBGAS.length; index++) {\n                const element = RESDBGAS[index];\n                const PH = vallofnull(element.SS07)\n                const pCO2 = vallofnull(element.SS06)\n                const pO2 = vallofnull(element.SS08)\n                const HCO3 = vallofnull(element.SS04)\n                const BE = vallofnull(element.SS01)\n                const Sample = \"No\"\n                const O2Sat = vallofnull(element.SS05)\n                const FiO2 = vallofnull(element.SS03)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [PH, pCO2, pO2, HCO3, BE, Sample, O2Sat, FiO2]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 7) { // GAS(Additionary)\n            for (let index = 0; index < RESDBGAS.length; index++) {\n                const element = RESDBGAS[index];\n                const Hb = vallofnull(element.SS11)\n                const Hct = vallofnull(element.SS12)\n                const Na = vallofnull(element.SS13)\n                const K = vallofnull(element.SS14)\n                const CaFree = vallofnull(element.SS15)\n                const Bun = vallofnull(element.SS16)\n                const Cr = vallofnull(element.SS17)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [Hb, Hct, Na, K, CaFree, Bun, Cr]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 8) { // Glucose\n            for (let index = 0; index < RESDGLU1.length; index++) {\n                const element = RESDGLU1[index]\n                const GluBeside = vallofnull(element.GLUFAST)\n                const GluLab = vallofnull(element.RSV16)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [GluBeside, GluLab]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 9) { // 黃疸\n            for (let index = 0; index < RESLAB0C.length; index++) {\n                const element = RESLAB0C[index]\n                const TCB = vallofnull(element.RSV01)\n                const MicroBil = vallofnull(element.RSV02)\n                const TBil = vallofnull(element.RSV03)\n                const DBil = vallofnull(element.RSV04)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [TCB, MicroBil, TBil, DBil]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 10) { // 感染指數\n            for (let index = 0; index < RESLAB02.length; index++) {\n                const elementOne = RESLAB02[index]\n                const elementTwo = RESLAB01[index]\n                const WBC = vallofnull(elementOne.RSV01)\n                const Band = vallofnull(elementOne.RSV13)\n                const Seg = vallofnull(elementOne.RSV14)\n                const Lym = vallofnull(elementOne.RSV15)\n                const PCT = \"NO\"\n                const CRP = vallofnull(elementTwo.RSV32)\n                const time = moment((elementOne.ORRESDT.toString() + elementOne.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((elementOne.ORRESDT.toString() + elementOne.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [WBC, Band, Seg, Lym, PCT, CRP]\n                    })\n                }\n            }\n            return CellData\n        }\n        return null\n\n    }\n\n    componentDidMount() {\n        this.APIUpdate(this.state.PickerDateRange)\n        this.SelectDataList = this.SelectDataList.bind(this)\n    }\n\n    // ChangeRangePicker(dates, datestrings) {\n\n    // }\n    APIUpdate(DateRange) {\n        console.log(DateRange)\n        function selectMonthInterval(PickerDate) {\n            const timestampInterval = new Date().getTime() - new Date(PickerDate).getTime()\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        const { caseinfo } = this.props\n\n        const st = DateRange[0].format(\"YYYY-MM-DD\")\n        const datePick = DateRange[0].format('YYYY/MM/DD')\n        console.log(DateRange, st, datePick)\n        // const TRANSDate = moment(caseinfo.TRANSINDT, 'YYYYMMDD').format('YYYY-MM-DD')\n        const MonthInterval = selectMonthInterval(datePick)\n        const RESDGLU1 = ApiProvider.getStoredProcedureRESDGLU1(caseinfo.HISID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESLAB02 = ApiProvider.getStoredProcedureRESLAB02(caseinfo.HISID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESLAB01 = ApiProvider.getStoredProcedureRESLAB01(caseinfo.HISID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESDBGAS = ApiProvider.getStoredProcedureRESDBGAS(caseinfo.HISID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESLAB0C = ApiProvider.getStoredProcedureRESLAB0C(caseinfo.HISID, st)\n            .then(data => {\n                console.log(data.data)\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const ORDLIST = ApiProvider.getStoredProcedureORDLIST(caseinfo.HISID, st, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                console.log(data.data)\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        const RESSECT = ApiProvider.getStoredProcedureRESSECT(caseinfo.HISID, MonthInterval, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        Promise.all([RESDGLU1, RESLAB02, RESLAB01, RESDBGAS, RESLAB0C, ORDLIST, RESSECT]).then(result => {\n            console.log(result)\n            this.setState({\n                RESDGLU1: result[0], //累積報告\n                RESLAB02: result[1],  //累積報告\n                RESLAB01: result[2],  //累積報告\n                RESDBGAS: result[3],  //累積報告\n                RESLAB0C: result[4],  //累積報告\n                ORDLIST: result[5],\n                RESSECT: result[6],\n            })\n        })\n    }\n    callbackDateFunction = (select) => {\n        // console.log(select)\n        this.setState({\n            selectdata: select\n        })\n    }\n\n    callbackTitleFunction = (select) => {\n        // console.log(select)\n        this.setState({\n            selectTitle: select\n        })\n    }\n\n    PickerDateRangeChange(date, dateString) {\n        console.log(date)\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDateRange } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const st = PickerDateRange[0].valueOf()\n        const et = PickerDateRange[1].valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                if (bronDate <= (st - day)) {\n                    const bTime = [moment(moment(st - day).format('YYYYMMDD')), moment(moment(et - day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(bTime)\n                }\n                break;\n            case 'N':\n                const nTime = [moment(moment().subtract(6, 'days').format('YYYYMMDD')), moment(moment().format('YYYYMMDD'))]\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                if (aTemp >= (et + day)) {\n                    const aTime = [moment(moment(st + day).format('YYYYMMDD')), moment(moment(et + day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(aTime)\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const momentDate = this.state.PickerDateRange\n        const data = this.SelectDataList()\n        console.log(\"SelectDataList => \" + data)\n        const { RangePicker } = DatePicker\n        const PickerDateRange = [momentDate[0].valueOf(), momentDate[1].valueOf()]\n\n        return (\n            <div className='examreportlayout'>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"250px 120px\", gridColumnGap: \"5px\", marginBottom: \"5px\" }}>\n                    <RangePicker\n                        // defaultValue={this.state.PickerDateRange}\n                        value={this.state.PickerDateRange}\n                        format={\"YYYY/MM/DD\"}\n                        allowClear={false}\n                        locale={\"zh_TW\"}\n                        disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                        // toString={(dates, datestrings) => { this.setState({ RangePicker: dates }) }}\n                        onChange={this.PickerDateRangeChange}\n                    />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" }}>\n                    <Labview selectvalue={this.state.selectdata}\n                        parentDateCallback={this.callbackDateFunction}\n                        DataList={data}\n                        SelectStatus={this.state.selectdata}\n                        PickerDateRange={PickerDateRange}\n                        parentTitleCallback={this.callbackTitleFunction}>\n                    </Labview>\n                    <Nonlabview ORDLIST={this.state.ORDLIST} RESSECT={this.state.RESSECT} caseinfo={caseinfo} PickerDateRange={PickerDateRange}></Nonlabview>\n                </div>\n                {/* {this.charttableview()} */}\n                <div style={{ display: \"flex\", justifyContent: 'center', alignItems: 'center' }}>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Examreport;\n","import React, { Component } from 'react';\nimport { DatePicker, Button } from 'antd';\nimport Prescriptionordertable from '../Prescriptionorder/Prescriptionorder'\nimport Treatmentorderlayout from '../Treatmentorder/Treatmentorder'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass Orderview extends Component {\n    state = {\n        UDORDER0: [],\n        TRTMNTQ1: [],\n        PickerDateRange: [moment(moment().subtract(6, 'days').format('YYYYMMDD')),\n        moment(moment().format('YYYYMMDD'))],\n    }\n    componentDidMount() {\n        this.apidata()\n    }\n    apidata() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID.toString().trim()\n        const CID = caseinfo.CASEID.toString().trim()\n        const UDORDER0 = ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureUDORDER0 NG \" + JSON.stringify(err))\n            });\n        const TRTMNTQ1 = ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureTRTMNTQ1 NG \" + JSON.stringify(err))\n            });\n        Promise.all([UDORDER0, TRTMNTQ1]).then(result => {\n            console.log(result)\n            this.setState({\n                UDORDER0: result[0],\n                TRTMNTQ1: result[1]\n            })\n        })\n    }\n\n    PickerDateRangeChange = (date, dateString) => {\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDateRange } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const st = PickerDateRange[0].valueOf()\n        const et = PickerDateRange[1].valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                if (bronDate <= (st - day)) {\n                    const bTime = [moment(moment(st - day).format('YYYYMMDD')), moment(moment(et - day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(bTime)\n                }\n                break;\n            case 'N':\n                const nTime = [moment(moment().subtract(6, 'days').format('YYYYMMDD')), moment(moment().format('YYYYMMDD'))]\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                if (aTemp >= (et + day)) {\n                    const aTime = [moment(moment(st + day).format('YYYYMMDD')), moment(moment(et + day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(aTime)\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const udata = this.state.UDORDER0\n        const tdata = this.state.TRTMNTQ1\n        const momentDate = this.state.PickerDateRange\n\n        const { RangePicker } = DatePicker\n        const PickerDateRange = [momentDate[0].valueOf(), momentDate[1].valueOf()]\n        if (udata.length === 0 || tdata.length === 0) {\n            //Loading\n            return null\n        }\n        // console.log(udata)\n        // console.log(PickerDateRange)\n\n        return (\n            <div>\n                <div style={{ maxHeight: '75vh', overflowY: 'auto' }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"250px 120px\", gridColumnGap: \"5px\", marginBottom: \"5px\" }}>\n                        <RangePicker\n                            value={this.state.PickerDateRange}\n                            format={\"YYYY/MM/DD\"}\n                            allowClear={false}\n                            locale={\"zh_TW\"}\n                            onChange={this.PickerDateRangeChange}\n                            disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                        />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" }}>\n                        <Prescriptionordertable PickerDateRange={PickerDateRange} UDORDER0={udata} searchbar={true} caseinfo={caseinfo}></Prescriptionordertable>\n                        <Treatmentorderlayout PickerDateRange={PickerDateRange} TRTMNT01={tdata} searchbar={true} caseinfo={caseinfo}></Treatmentorderlayout>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Orderview;\n","import React, { Component } from 'react';\nimport { Select } from 'antd';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n// import Notelist from './Notelist'\n// import searchlogo from '../../Image/svg/Search.svg'\n// import { Button } from 'antd'\nimport './Note.scss'\nimport X2JS from 'x2js';\n// import * as PR from '../../Resource/PRGTXQRY'\n\n\nvar dataRange = [];\nclass Noteview extends Component {\n    state = {\n        StartTime: null,\n        EndTime: null,\n        display_data: null,\n        context: null,\n        contentdisplay: false,\n\n\n        ADMDISP: [],\n        ADMLIST: [],\n        DISLIST: [],\n        DISDISP: [],\n        DTAROTQ4: [],\n        DTASOAPQ: [],\n        PCASELIST: [],\n        ERDISP: [],\n        PRGTXQRY: [],\n        PRGTXQRYDIS: [],\n        CPSLIST: [],\n        CPSDISP: [],\n        QPNOT: [],\n        QPNOTDIS: [],\n        OPSORAQ1: [],\n        OPSORAQ2: [],\n        SelectClass: 0\n\n    }\n    componentDidMount() {\n        this.apiData()\n    }\n\n    SelectADMDISP(ADISTNO, ADICASE) {\n        console.log(ADISTNO, ADICASE)\n        ApiProvider.getStoredProcedureADMDISP(ADISTNO, ADICASE)\n            .then(data => {\n                // console.log(data.data)\n                this.setState({\n                    ADMDISP: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureADMDISP NG \" + JSON.stringify(err));\n            });\n    }\n    SelectDISDISP(CID) {\n        // console.log(ADISTNO, ADICASE)\n        const { caseinfo } = this.props\n        ApiProvider.getStoredProcedureDISDISP(caseinfo.HISID, CID)\n            .then(data => {\n                // console.log(data.data)\n                this.setState({\n                    DISDISP: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureADMDISP NG \" + JSON.stringify(err));\n            });\n    }\n\n    SelectERDISP(CID) {\n        const { caseinfo } = this.props\n        ApiProvider.getStoredProcedureERDISP(caseinfo.HISID, CID)\n            .then(data => {\n                this.setState({\n                    ERDISP: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n    }\n    SelectDTASOAPQ(date, dpt) {\n        const { caseinfo } = this.props\n        //門診紀錄內容 需要時間和醫生編號\n        ApiProvider.getStoredProcedureDTASOAPQ(caseinfo.HISID, date, dpt)\n            .then(data => {\n                this.setState({\n                    DTASOAPQ: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureDTASOAPQ NG \" + JSON.stringify(err));\n            });\n    }\n    SelectPRGTXQRYDIS(List) {\n        this.setState({\n            PRGTXQRYDIS: List\n        })\n    }\n    SelectCPSDISP(HID, CID, SEQ) {\n        ApiProvider.getStoredProcedureCPSDISP(HID, CID, SEQ)\n            .then(data => {\n                console.log(data.data)\n                this.setState({\n                    CPSDISP: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n    }\n    SelectQPNOTDIS(data) {\n        this.setState({\n            QPNOTDIS: data\n        })\n    }\n\n    SelectOPSORAQ1(OPABGNDT, OPATIMES) {\n        const { caseinfo } = this.props\n        //門診紀錄內容 需要時間和醫生編號\n        ApiProvider.getStoredProcedureOPSORAQ2(caseinfo.HISID, OPABGNDT, OPATIMES)\n            .then(data => {\n                this.setState({\n                    OPSORAQ2: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureDTASOAPQ NG \" + JSON.stringify(err));\n            });\n    }\n    apiData() {\n        const { caseinfo } = this.props\n        //入院並摘\n        const ADMLIST = ApiProvider.getStoredProcedureADMLIST(caseinfo.HISID, \"DOC3924B\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureADMLIST NG \" + JSON.stringify(err));\n            });\n        //出院並摘\n        const DISLIST = ApiProvider.getStoredProcedureDISLIST(caseinfo.HISID, \"DOC3924B\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureDISLIST NG \" + JSON.stringify(err));\n            });\n\n        //門診紀錄清單\n        const DTAROTQ4 = ApiProvider.getStoredProcedureDTAROTQ4(caseinfo.HISID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureDTAROTQ4 NG \" + JSON.stringify(err));\n            });\n\n\n        //急診紀錄清單\n        const PCASELIST = ApiProvider.getStoredProcedurePCASELIST(caseinfo.HISID, \"DOC3924B\", \"E\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n\n\n\n\n        const CPSLIST = ApiProvider.getStoredProcedureCPSLIST(caseinfo.HISID, \"DOC3924B\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n\n        function nullvalue(value) {\n            if (value === null) {\n                return \"911\"\n            }\n            console.log(value)\n            const PRGTXQRYDATE = moment(value.PLOCDT, 'YYYYMMDD').format(\"YYYYMM\")\n            const D = PRGTXQRYDATE.substr(3, 3)\n            return D\n        }\n\n        const LIVEPLOC = nullvalue(caseinfo.PLOCSTART)\n        console.log(LIVEPLOC)\n        const PRGTXQRY = ApiProvider.getStoredProcedurePRGTXQRY(caseinfo.HISID, LIVEPLOC, caseinfo.CASEID)\n            .then(data => {\n                console.log(data.data)\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n        const transdt = caseinfo.TRANSINDT\n        const ST = moment(transdt, \"YYYYMMDD\").format(\"YYYYMMDDHHmm\")\n        const ET = moment().format(\"YYYYMMDDHHmm\")\n\n        const QPNOT = ApiProvider.getQPNOT(caseinfo.CASEID, ST, ET)\n            .then(data => {\n                const xm2 = new X2JS()\n                const source = data.data\n                const parseSource = xm2.xml2js(source).outmsg.resconts.rescont\n                return parseSource\n            })\n            .catch(err => {\n\n            })\n        const OPSORAQ1 = ApiProvider.getStoredProcedureOPSORAQ1(caseinfo.HISID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => { console.log(err) })\n        Promise.all([ADMLIST, DISLIST, DTAROTQ4, PCASELIST, PRGTXQRY, CPSLIST, QPNOT, OPSORAQ1]).then(result => {\n            console.log(result)\n            this.setState({\n                ADMLIST: result[0],\n                DISLIST: result[1],\n                DTAROTQ4: result[2],\n                PCASELIST: result[3],\n                PRGTXQRY: result[4],\n                CPSLIST: result[5],\n                QPNOT: result[6],\n                OPSORAQ1: result[7]\n            })\n        })\n    }\n\n\n\n    callbackFunction = (item_array) => {\n        console.log(item_array)\n        this.setState(\n            {\n                display_data: item_array.NoteTime,\n                context: item_array.Content,\n                contentdisplay: true\n            }\n        )\n\n    }\n    handleChange = (value) => {\n\n        console.log(`selected ${value}`);\n        this.setState({\n            SelectClass: value,\n        });\n\n    }\n    onClickSearch() {\n        if (dataRange.length !== 0) {\n            this.setState(\n                {\n                    StartTime: dataRange[0],\n                    EndTime: dataRange[1]\n\n                }\n            )\n        }\n\n    }\n    onDateChange = (date, dateString) => {\n        console.log(date, dateString);\n    }\n    NotecontrolBar() {\n        const select_data = [\n            { item: \"入院病摘\", value: 0 },\n            { item: \"出院病摘\", value: 1 },\n            { item: \"門診紀錄\", value: 2 },\n            { item: \"急診紀錄\", value: 3 },\n            { item: \"病程紀錄\", value: 4 },\n            { item: \"會診紀錄\", value: 5 },\n            { item: \"護理紀錄\", value: 6 },\n            { item: \"手術記錄\", value: 7 }\n        ]\n        // const { RangePicker } = DatePicker;\n        const { Option } = Select;\n        const select_option = select_data.map((info, index) =>\n            <Option key={index} value={info.value}>{info.item}</Option>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"200px 220px 25px\", marginBottom: \"10px\" }}>\n                <Select defaultValue={0} style={{ width: 190 }} onChange={this.handleChange}>\n                    {select_option}\n                </Select>\n                {/* <RangePicker id=\"note_Range\" placeholder={[\"請輸入日期\", \"請輸入日期\"]} onChange={this.onDateChange} allowClear={false} />\n                <div onClick={() => this.onClickSearch()} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <img src={searchlogo} alt=\"searchlogo\" />\n                </div> */}\n            </div>\n        );\n    }\n\n    renderContentArray() {\n        const source = this.state.SelectClass\n        if (source === 0) {\n            const data = this.state.ADMDISP\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const fakeADMData = data\n                return fakeADMData.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{row.ADMDATA}</div>);\n\n            }\n        }\n        if (source === 1) {\n            const data = this.state.DISDISP\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const fakeADMData = data\n                return fakeADMData.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{row[\"1\"]}</div>);\n            }\n\n        }\n        if (source === 2) {\n\n            const data = this.state.DTASOAPQ\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                let textType = [];\n                let textObj = [];\n                for (var i = 0; i < data.length; i++) {\n                    console.log(data[i])\n                    //find type\n                    const type = data[i].DTSOAPTY;\n                    const lines = data[i].DTSOAPSQ;\n                    const content = data[i].DTSOAPTX;\n                    if (textType.indexOf(type) === -1) {\n                        //new type\n                        const newObj = {\n                            \"type\": type,\n                            \"lines\": lines,\n                            \"content\": content\n                        }\n                        textObj.push(newObj);\n                        textType.push(type);\n                    } else {\n                        //old type\n                        const idx = textObj.findIndex(item => item.type === type)\n                        textObj[idx].lines = lines;\n                        textObj[idx].content = textObj[idx].content + \"\\n\" + content\n                    }\n                }\n                let textResult = [];\n                for (let index = 0; index < textObj.length; index++) {\n                    textResult.push(textObj[index].type);\n                    textResult.push(textObj[index].content);\n                    textResult.push(\"\\n\");\n                }\n\n                return textResult.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{row}</div>);\n\n            }\n\n        }\n        if (source === 3) {\n            const data = this.state.ERDISP\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const fakeADMData = data\n                return fakeADMData.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{JSON.stringify(row, null, '\\t')}</div>);\n            }\n\n        }\n        if (source === 4) {\n            const data = this.state.PRGTXQRYDIS\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                var newList = []\n                console.log(data)\n                for (let index = 0; index < 5; index++) {\n                    if (index === 0) {\n                        const dataFilter = data.filter(function (info, index, arr) {\n                            return info.PRGTYPE.toString().trim() === \"D\"\n                        })\n                        if (dataFilter.length !== 0) {\n                            newList.push(dataFilter[0])\n                        }\n                    }\n\n                    if (index === 1) {\n                        const dataFilter = data.filter(function (info, index, arr) {\n                            return info.PRGTYPE.toString().trim() === \"S\"\n                        })\n                        if (dataFilter.length !== 0) {\n                            newList.push(dataFilter[0])\n                        }\n                    }\n\n                    if (index === 2) {\n                        const dataFilter = data.filter(function (info, index, arr) {\n                            return info.PRGTYPE.toString().trim() === \"O\"\n                        })\n                        if (dataFilter.length !== 0) {\n                            newList.push(dataFilter[0])\n                        }\n                    }\n\n                    if (index === 3) {\n                        const dataFilter = data.filter(function (info, index, arr) {\n                            return info.PRGTYPE.toString().trim() === \"A\"\n                        })\n                        if (dataFilter.length !== 0) {\n                            newList.push(dataFilter[0])\n                        }\n                    }\n\n                    if (index === 4) {\n                        const dataFilter = data.filter(function (info, index, arr) {\n                            return info.PRGTYPE.toString().trim() === \"P\"\n                        })\n                        if (dataFilter.length !== 0) {\n                            newList.push(dataFilter[0])\n                        }\n                    }\n\n                }\n                console.log(newList)\n                const dataMap = newList.map(function (info, index, arr) {\n                    return (\n                        <div key={index} style={{ marginBottom: \"10px\" }}>\n                            <div style={{ whiteSpace: \"pre-wrap\" }}>{info.PRGTYPE}</div>\n                            <div style={{ whiteSpace: \"pre-wrap\" }}>{info.PRGTX}</div>\n                        </div>\n                    );\n                })\n                return dataMap\n            }\n\n        }\n        if (source === 5) {\n            const data = this.state.CPSDISP\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const fakeADMData = data\n                return fakeADMData.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{row[\"1\"]}</div>);\n            }\n\n        }\n        if (source === 6) {\n            const data = this.state.QPNOTDIS\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                // Time: moment(v.rec_dat.toString() + v.rec_tim.toString(), \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\"),\n                // special: v.special,\n                // a: v.cre_nam,\n                // b: v.pro_not\n                const fakeADMData = data.map(function (info, index, arr) {\n                    const time = info.Time\n                    const cre_nam = info.cre_nam\n                    const pro_not = info.pro_not\n                    return (\n                        <div style={{ marginBottom: \"10px\" }}>\n                            <div>{time}</div>\n                            <div>{cre_nam === undefined ? \"--\" : cre_nam}</div>\n                            <div>{pro_not === undefined ? \"--\" : pro_not}</div>\n                        </div>\n                    );\n                })\n                return fakeADMData\n            }\n\n        }\n        if (source === 7) {\n            const data = this.state.OPSORAQ2\n            console.log(data)\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const fakeADMData = data\n                return fakeADMData.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{row.CONTENT}</div>);\n            }\n\n        }\n        else {\n            return null;\n\n        }\n\n\n\n    }\n    switchListRender() {\n        function groupfirstarray(arrayList) {\n            var result = arrayList.filter(function (value, index, arr) {\n                const res = arr.map(function (value, index, arr) {\n                    return moment(value.PRGDT.toString() + value.PRGTM.toString(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n                })\n                return res.indexOf(moment(value.PRGDT.toString() + value.PRGTM.toString(), \"YYYY-MM-DDHH:mm:ss\").valueOf()) === index;\n            });\n            var arrList = []\n            for (let index = 0; index < result.length; index++) {\n                const element = result[index];\n                const comparevalue = moment(element.PRGDT.toString() + element.PRGTM.toString(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n                const filterarray = arrayList.filter(function (value, index, arr) {\n                    return moment(value.PRGDT.toString() + value.PRGTM.toString(), \"YYYY-MM-DDHH:mm:ss\").valueOf() === comparevalue\n                })\n                arrList.push(filterarray)\n            }\n            return arrList\n        }\n        function grouparray(arrayList) {\n            var result = arrayList.filter(function (value, index, arr) {\n                const res = arr.map(function (value, index, arr) {\n                    return moment(value.rec_dat.toString(), \"YYYYMMDD\").valueOf()\n                })\n                return res.indexOf(moment(value.rec_dat.toString(), \"YYYYMMDD\").valueOf()) === index;\n            });\n            var arrList = []\n            for (let index = 0; index < result.length; index++) {\n                const element = result[index];\n                const comparevalue = moment(element.rec_dat.toString(), \"YYYYMMDD\").valueOf()\n                const filterarray = arrayList.filter(function (value, index, arr) {\n                    return moment(value.rec_dat.toString(), \"YYYYMMDD\").valueOf() === comparevalue\n                })\n                arrList.push(filterarray)\n            }\n            return arrList\n        }\n        const select = this.state.SelectClass\n        if (select === 0) {\n            const data = this.state.ADMLIST\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    const HID = object.ADISTNO.toString().trim()\n                    const CID = object.ADICASE.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", cursor: \"pointer\", textAlign: \"center\" }} onClick={() => this.SelectADMDISP(HID, CID)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.ADIDATE.toString().trim(), \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</div>\n                            <div style={{ fontSize: \"14px\" }}>{object.ADICASE}</div>\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 1) {\n            const data = this.state.DISLIST\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    const CID = object.DCASENO.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\" }} onClick={() => this.SelectDISDISP(CID)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.DDATEIN.toString().trim(), \"YYYY-MM-DD\").format(\"YYYY/MM/DD\")}</div>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.DDATEOUT.toString().trim(), \"YYYY-MM-DD\").format(\"YYYY/MM/DD\")}</div>\n                            {/* <div style={{ fontSize: \"14px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 2) {\n            const data = this.state.DTAROTQ4\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    const DPT = object.DTPDEPT.toString().trim()\n                    const DTPDATE = object.DTPDATE.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\" }} onClick={() => this.SelectDTASOAPQ(DTPDATE, DPT)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.DTPDATE.toString().trim(), \"YYYY-MM-DD\").format(\"YYYY/MM/DD\")}</div>\n                            <div style={{ fontSize: \"14px\" }}>{object.DTPTIME.toString().trim()}</div>\n                            <div style={{ fontSize: \"14px\" }}>{object.DTPDEPT.toString().trim()}</div>\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 3) {\n            const data = this.state.PCASELIST\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    const CID = object.PCASENO.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\" }} onClick={() => this.SelectERDISP(CID)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.PDISDT.toString().trim(), \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</div>\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 4) {\n            const data = groupfirstarray(this.state.PRGTXQRY)\n            console.log(data)\n            // const data = groupfirstarray(PR.data)\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const List = data.map(function (info, index, arr) {\n                    const mapList = info.map(function (v, i, a) {\n                        return {\n                            PRGTX: v.PRGTX,\n                            PRGTYPE: v.PRGTYPE\n                        }\n                    })\n                    return {\n                        List: mapList,\n                        DT: info[0].PRGDT,\n                        TN: info[0].PRGTM\n                    }\n                })\n                const cellRander = List.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\" }} onClick={() => this.SelectPRGTXQRYDIS(object.List)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.DT.toString() + object.TN.toString(), \"YYYY-MM-DD HH:mm:ss\").format(\"MM/DD HH:mm\")}</div>\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 5) {\n            const data = this.state.CPSLIST\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    const CID = object.CPSCASE.toString().trim()\n                    const SEQ = object.CPSOSEQ.toString().trim()\n                    const HID = object.CPSHIST.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\" }} onClick={() => this.SelectCPSDISP(HID, CID, SEQ)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.CPSENTDT.toString().trim(), \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</div>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.CPSENTTM.toString().trim(), \"HHmm\").format(\"HH:mm\")}</div>\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 6) {\n            const data = this.state.QPNOT\n            const List = grouparray(data)\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const mapList = List.map(function (info, index, arr) {\n                    console.log(info)\n                    const mapList = info.map(function (v, i, a) {\n                        return {\n                            Time: moment(v.rec_dat.toString() + v.rec_tim.toString(), \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\"),\n                            cre_nam: v.cre_nam,\n                            pro_not: v.pro_not\n                        }\n                    })\n                    return {\n                        List: mapList,\n                        DT: info[0].rec_dat.toString().trim()\n                    }\n                })\n                const cellRander = mapList.map((object, index, arr) => {\n                    console.log(object)\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\" }} onClick={() => this.SelectQPNOTDIS(object.List)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.DT, \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</div>\n                            {/* 檢查 */}\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 7) {\n            const data = this.state.OPSORAQ1\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    // const DIS1 = object\n                    const OPABGNDT = object.OPABGNDT.toString().trim()\n                    const OPACOD1 = object.OPACOD1.toString().trim()\n                    const OPAMANNM = object.OPAMANNM.toString().trim()\n                    const OPATIMES = object.OPATIMES.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\" }} onClick={() => this.SelectOPSORAQ1(OPABGNDT, OPATIMES)}>\n                            <div style={{ fontSize: \"14px\" }}>{OPABGNDT}</div>\n                            <div style={{ fontSize: \"14px\" }}>{OPACOD1}</div>\n                            <div style={{ fontSize: \"14px\" }}>{OPAMANNM}</div>\n                            {/* 檢查 */}\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n    }\n    render() {\n        const control = this.NotecontrolBar()\n        const renderContentArray = this.renderContentArray()\n        const listRender = this.switchListRender()\n        return (\n            <div className='Notelayout'>\n                {control}\n                <div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 7fr\", gridGap: \"10px\" }}>\n                        <div>\n                            <div style={{ backgroundColor: \"#e2edf3\", height: \"50px\", padding: '15px' }}>開立日期</div>\n                            <div style={{ padding: \"10px\", maxHeight: '700px', overflow: \"auto\" }}>\n                                {listRender}\n                            </div>\n                        </div>\n                        <div style={{ overflow: \"auto\" }}>\n                            <div style={{ backgroundColor: \"#e2edf3\", height: \"50px\", padding: '15px' }}>內容</div>\n                            <div style={{ maxHeight: '700px', overflow: \"auto\" }}>\n                                {renderContentArray}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Noteview;","import React, { Component } from 'react';\nimport { DatePicker, Button } from 'antd';\nimport GAS from '../CrossSectionView/GAS'\nimport RTbreathe from '../CrossSectionView/RTbreathe'\nimport './RTview.scss'\n// import X2JS from 'x2js';\n// import * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass RTview extends Component {\n    state = {\n        QSPE: [],\n        PickerDateRange: [moment(moment().subtract(6, 'days').format('YYYYMMDD')),\n        moment(moment().format('YYYYMMDD'))],\n    }\n    // componentDidMount() {\n    //     this.API_DATA(this.state.PickerDate)\n    // }\n    // API_DATA(Datetime) {\n    //     const xm2 = new X2JS()\n    //     const { caseinfo } = this.props\n    //     const st = moment(Datetime + (7 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n    //     const et = moment(Datetime + (31 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n    //     ApiProvider.getQSPE(caseinfo.CASEID, st, et)\n    //         .then(data => {\n    //             console.log(xm2.xml2js(data.data).outmsg.resconts.rescont)\n    //             const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n    //             console.log(parsedata)\n    //             if (Array.isArray(parsedata)) {\n    //                 this.setState({\n    //                     QSPE: parsedata\n    //                 })\n    //             }\n    //             else {\n    //                 const arr = []\n    //                 arr.push(parsedata)\n    //                 this.setState({\n    //                     QSPE: arr\n    //                 })\n    //             }\n    //         })\n    //         .catch(err => {\n    //             console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n    //         });\n    // }\n\n    PickerDateRangeChange = (date, dateString) => {\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDateRange } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const st = PickerDateRange[0].valueOf()\n        const et = PickerDateRange[1].valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                if (bronDate <= (st - day)) {\n                    const bTime = [moment(moment(st - day).format('YYYYMMDD')), moment(moment(et - day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(bTime)\n                }\n                break;\n            case 'N':\n                const nTime = [moment(moment().subtract(6, 'days').format('YYYYMMDD')), moment(moment().format('YYYYMMDD'))]\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                if (aTemp >= (et + day)) {\n                    const aTime = [moment(moment(st + day).format('YYYYMMDD')), moment(moment(et + day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(aTime)\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const { RangePicker } = DatePicker\n        const momentDate = this.state.PickerDateRange\n\n        const PickerDateRange = [momentDate[0].valueOf(), momentDate[1].valueOf()]\n\n        return (\n            <div className='rtviewlayout'>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"250px 120px\", gridColumnGap: \"5px\", marginBottom: \"5px\" }}>\n                    <RangePicker\n                        value={this.state.PickerDateRange}\n                        format={\"YYYY/MM/DD\"}\n                        allowClear={false}\n                        locale={\"zh_TW\"}\n                        onChange={this.PickerDateRangeChange}\n                        disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                    />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: '1fr 1fr', gridColumnGap: \"5px\" }}>\n                    <GAS PickerDateRange={PickerDateRange} caseinfo={caseinfo} searchbar={true} ></GAS>\n                    <RTbreathe PickerDateRange={PickerDateRange} caseinfo={caseinfo} searchbar={true} ></RTbreathe>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTview\n","import React, { Component } from 'react'\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Nurtionfeedingcell.scss'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Nurtionfeedingcell extends Component {\n    state = {\n        EditMode: false,\n        onEdit: false,\n        powerLogin: 0,\n        remark: '',\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { caseinfo, data } = this.props\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, data.ORDSEQNO, \"nurtionfeeding\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    onMouseEnter() {\n        this.setState(\n            {\n                EditMode: true\n            }\n        )\n    }\n    onMouseLeave() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    showModal = () => {\n        this.setState({\n            onEdit: true,\n        });\n    };\n\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    Moduledisplay(PName, ST) {\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": PName,\n            \"remarkId\": this.props.data.ORDSEQNO,\n            \"remark\": this.state.remark,\n            \"transinId\": this.props.caseinfo.TRANSINID,\n            \"type\": \"nurtionfeeding\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n        );\n    }\n\n    render() {\n        const { data } = this.props\n        console.log(data)\n        const startTime = moment(data.ORBGNDT.toString().trim(), \"YYYY-MM-DD\").format(\"MM/DD\")\n        const endTime = moment(data.ORENDDT.toString().trim(), \"YYYY-MM-DD\").format(\"MM/DD\")\n        const name = data.ORPROCED.toString().trim()\n\n        console.log(this.state.remark)\n\n        return (\n            <div onMouseEnter={() => this.onMouseEnter()} onMouseLeave={() => this.onMouseLeave()} style={{ position: \"relative\", height: \"100px\" }}>\n                <div className='nurtionfeedingcell' style={{ gridTemplateRows: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"1fr\" : \"1fr 1fr\"] }}>\n                    <div className='cellforstate'>\n                        <div className='celllayout'>\n                            <t3>{startTime}</t3>\n                        </div>\n                        <div className='celllayout'>\n                            <t3>{endTime}</t3>\n                        </div>\n                        <div className='celllayout'>\n                            <t3>{name}</t3>\n                        </div>\n                    </div>\n                    <div className='cellforremark' style={{ display: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"none\" : \"\"] }}>\n                        <t3>{this.state.remark}</t3>\n                    </div>\n                </div>\n                <div style={this.state.EditMode ? {\n                    display: this.state.powerLogin >= 2 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", top: 0, right: 0, height: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"50px\" : \"100px\"], background: \"white\", width: \"77px\", border: \"rgba(232, 232, 232, 1) 1px solid\"\n                } : { display: \"none\" }}>\n                    < div onClick={() => this.showModal()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }} >\n                        <img src={chooseedit} alt='chooseedit'></img>\n                    </div>\n                </div>\n                {this.Moduledisplay(name, startTime)}\n            </div >\n        );\n    }\n}\n\nexport default Nurtionfeedingcell\n","import React, { Component } from 'react'\nimport * as ApiProvider from '../../API/ApiProvider'\n// import { DatePicker, Input } from 'antd';\n// import searchlogo from '../../Image/svg/Search.svg'\nimport Nurtionfeedingcell from './Nurtionfeedingcell'\nimport moment from 'moment';\nimport * as ApiGithub from '../../API/ApiGithub'\n\n\nclass Nurtionfeedingorder extends Component {\n    state = {\n        TRTMNTQ1: [],\n        parser: { \"mappings\": [] },\n        class: \"飲食類別\"\n    }\n    componentDidMount() {\n        this.getAPIFeedingData()\n        this.getTreatmentOrderFilter()\n    }\n    getAPIFeedingData() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID.toString().trim()\n        const CID = caseinfo.CASEID.toString().trim()\n        ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => {\n                console.log(\"getAPIFeedingData OK \" + JSON.stringify(data.data))\n                this.setState({\n                    TRTMNTQ1: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n    }\n    getTreatmentOrderFilter() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Treatment\");\n                parser.mappings = [{ \"key\": \"全部\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson Treatment OK \" + JSON.stringify(parser))\n                this.setState({\n                    parser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部\"] = []\n\n        inputs.forEach(input => {\n            let content = input.ORPROCED;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部\"].push(input)\n        });\n        return allResult;\n    }\n\n    render() {\n        const { caseinfo, PickerDateRange } = this.props\n        const title = [\"開始時間\", \"結束時間\", \"處置名稱\"]\n        const titleCellRender = title.map(function (element, index, arr) {\n            return (\n                <div key={index} style={{ padding: \"0px 10px\", display: \"flex\", alignItems: \"center\" }}>\n                    <div style={{ fontSize: \"14px\" }}>{element}</div>\n                </div>\n            );\n        })\n\n        const parse = this.parse;\n        let clusteredData = {}\n        if (this.state.parser !== undefined) {\n            clusteredData = parse(this.state.TRTMNTQ1, this.state.parser)\n        }\n        //filter data by selected class\n        let filteredData = clusteredData[this.state.class];\n        // console.log(`filteredData : ${JSON.stringify(filteredData)} , filteredData type : ${typeof (filteredData)}`)\n        let filterData = []\n        if (filteredData !== undefined) {\n            const ListCellData = filteredData\n            filterData = ListCellData.filter((element, index, arr) => {\n                const time = moment(element.ORBGNDT, 'YYYY-MM-DD').valueOf()\n                return PickerDateRange[0] <= time && time <= PickerDateRange[1]\n            })\n        }\n\n        const DataCellRender = filterData.map(function (element, index, arr) {\n            return (\n                <Nurtionfeedingcell key={index} data={element} caseinfo={caseinfo} ></Nurtionfeedingcell>\n            );\n        })\n\n        return (\n            <div>\n                <t1>Feeding Order</t1>\n                <div style={{ display: \"grid\", gridTemplateColumns: \" 1fr 1fr 2fr \", background: \"#cccccc\", height: \"50px\", marginTop: \"10px\" }}>\n                    {titleCellRender}\n                </div>\n                {filterData.length !== 0 && <div style={{ minHeight: \"120px\", maxHeight: \"400px\", overflowY: \"auto\" }}>\n                    {DataCellRender}\n                </div>}\n                {filterData.length === 0 && <div>今日無資料</div>}\n            </div>\n        );\n    }\n}\n\nexport default Nurtionfeedingorder\n","import React, { Component } from 'react'\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Nurtion_TPN_cell.scss'\nimport moment from 'moment'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Nurtiontpncell extends Component {\n    state = {\n        EditMode: false,\n        onEdit: false,\n        remark: null,\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { caseinfo, data } = this.props\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, data.UDORDSEQ, \"nurtiontpn\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    onMouseEnter() {this.setState({EditMode: true})}\n\n    onMouseLeave() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    showModal = () => {\n        this.setState({\n            onEdit: true,\n        });\n    };\n\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    Moduledisplay(PName, ST) {\n\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": PName,\n            \"remarkId\": this.props.data.UDORDSEQ,\n            \"remark\": this.state.remark,\n            \"transinId\": this.props.caseinfo.TRANSINID,\n            \"type\": \"nurtiontpn\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            // <RemarkModal caseinfo={caseinfo} type=\"nurtiontpn\" name={title} visible={this.state.onEdit} remark={this.state.remark} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n        );\n    }\n    render() {\n        const { data } = this.props\n        const TPNList = [\"VOL.\", \"AA\", \"Glu\", \"Na\", \"K\", \"Ca\", \"P\", \"Mg\"]\n        const TPNListcellRender = TPNList.map(function (info, index) {\n            return (\n                <centerstyle key={index} style={{ border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                    <t2>{info}</t2>\n                </centerstyle>\n            );\n        })\n        const TPNSubData = [data.UDDOSAGE, data.TPNDATA.AA, data.TPNDATA.Glu, data.TPNDATA.Na, data.TPNDATA.K, data.TPNDATA.Ca, data.TPNDATA.P, data.TPNDATA.Mg]\n        const TPNSubDatacellRender = TPNSubData.map(function (info, index) {\n            return (\n                <centerstyle key={index} style={{ border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                    <t2>{info}</t2>\n                </centerstyle>\n            );\n        })\n        const RemarkData = this.state.remark\n        // function RemarkNull(value) {\n        //     // console.log(value)\n        //     if (value === null || value === undefined || value === \"\") {\n        //         return \"none\"\n        //     }\n        //     return \"flex\"\n        // }\n        // function RemarkNullheight(value) {\n        //     // console.log(value)\n        //     if (value === null || value === undefined || value === \"\") {\n        //         return \"90px\"\n        //     }\n        //     return \"120px\"\n        // }\n        // function statusstate(st, et, pt) {\n\n        // }\n        const startTime = moment(data.UDBGNDT.toString().trim(), \"YYYY-MM-DD-HH.mm.ss.00.000000\").format(\"MM/DD HH:mm:ss\")\n        const endTime = moment(data.UDENDDT.toString().trim(), \"YYYY-MM-DD-HH.mm.ss.00.000000\").format(\"MM/DD HH:mm:ss\")\n        const name = data.UDGNAME.toString().trim()\n        const status = \"生效中\"\n        return (\n            <div onMouseEnter={() => this.onMouseEnter()} onMouseLeave={() => this.onMouseLeave()} className='nurtiontpntablelayout'>\n                <div style={{ height: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"100px\" : \"130px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \" 1fr 1fr 60px 450px\", height: \"100px\" }} >\n                        <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                            <t3>{startTime}</t3>\n                        </div>\n                        <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                            <t3>{endTime}</t3>\n                        </div>\n                        <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                            <t3>{status}</t3>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"30px 70px\" }}>\n                            <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                                <t3>{name}</t3>\n                            </div>\n                            <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(8,1fr)\" }}>\n                                    {TPNListcellRender}\n                                </div>\n                                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(8,1fr)\" }}>\n                                    {TPNSubDatacellRender}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ display: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"none\" : \"block\"], border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\", padding: \"0px 5px\", alignItems: \"center\", height: \"30px\", width: \"100%\" }}>\n                        <t3>{RemarkData}</t3>\n                    </div>\n                </div>\n                <div style={this.state.EditMode ? {\n                    display: this.state.powerLogin >= 2 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", top: 0, right: 0, height: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"100px\" : \"130px\"], background: \"white\", width: \"77px\", border: \"rgba(232, 232, 232, 1) 1px solid\"\n                } : { display: \"none\" }}>\n                    < div onClick={() => this.showModal()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }} >\n                        <img src={chooseedit} alt='chooseedit'></img>\n                    </div>\n                </div>\n                {this.Moduledisplay(name, startTime)}\n            </div>\n        );\n    }\n}\n\nexport default Nurtiontpncell\n","import React, { Component } from 'react'\nimport Nurtiontpncell from './Nurtion_TPN_cell'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as ApiGithub from '../../API/ApiGithub'\n\nclass Nurtiontpnorder extends Component {\n    state = {\n        onEdit: false,\n        tpndata: [],\n        UDORDER0: [],\n        tpnParsers: []\n    }\n    componentDidMount() {\n        const getAPITPNData = this.getAPITPNData.bind(this)\n        ApiGithub.getGitHubJson(\"TpnOrder.json\")\n            .then(data => {\n                let parser = data.data\n                console.log(\"getGitHubJson TPN Order OK \" + JSON.stringify(parser))\n                this.setState({\n                    tpnParsers: parser\n                }, () => {\n                    getAPITPNData()\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n    }\n    getAPITPNData() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID.toString().trim()\n        const CID = caseinfo.CASEID.toString().trim()\n        const { tpnParsers } = this.state\n        // console.log(HID, CID)\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                //const fakeData = [{\"UDDCPRSN\":\"DOC3941E\",\"UDDURAT\":\"007\",\"UDSUMQTY\":\"55\",\"UDDRGNAM\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDGNAME\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-14-09.17.00.000000\",\"UDDCPNAM\":\"何正尹　　\",\"UDDOSAGE\":\"55      \",\"UDORDSEQ\":\"0043\",\"UDBGNDT\":\"2019-08-13-08.50.00.000000\",\"UDDRGNO\":\"02145\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\"                                                                                                    \",\"UDDUNIT\":\"CC    \",\"UDROUTE\":\"IVD\",\"UDRPNAME\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDFREQN\":\"QD-TPN  \"},{\"UDDCPRSN\":\"DOC3964C\",\"UDDURAT\":\"014\",\"UDSUMQTY\":\"7\",\"UDDRGNAM\":\"Peditrace \\\"TPN\\\" sol for inj 10ml\",\"UDGNAME\":\"Peditrace \\\"TPN\\\" sol for inj 10ml\",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-20-10.22.00.000000\",\"UDDCPNAM\":\"李成彧　　\",\"UDDOSAGE\":\"1       \",\"UDORDSEQ\":\"0044\",\"UDBGNDT\":\"2019-08-13-08.50.00.000000\",\"UDDRGNO\":\"05208\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\"                                                                                                    \",\"UDDUNIT\":\"AMP   \",\"UDROUTE\":\"MSC\",\"UDRPNAME\":\"Peditrace \\\"TPN\\\" sol for inj 10ml\",\"UDFREQN\":\"QD-TPN  \"},{\"UDDCPRSN\":\"        \",\"UDDURAT\":\"001\",\"UDSUMQTY\":\"1\",\"UDDRGNAM\":\"Immunoglobulin *inj 60mg/ml 50ml\",\"UDGNAME\":\"Immunoglobulin *inj 60mg/ml 50ml\",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"Y\",\"UDSTATUS\":\"60\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-14-15.00.00.000000\",\"UDDCPNAM\":\"　　　　　\",\"UDDOSAGE\":\"1       \",\"UDORDSEQ\":\"0045\",\"UDBGNDT\":\"2019-08-13-15.17.00.000000\",\"UDDRGNO\":\"03852\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"BOT   \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"HM.imm.globulin *inj60mg/ml 50ml\",\"UDFREQN\":\"ST      \"},{\"UDDCPRSN\":\"DOC3941E\",\"UDDURAT\":\"007\",\"UDSUMQTY\":\"110\",\"UDDRGNAM\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDGNAME\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-16-10.44.00.000000\",\"UDDCPNAM\":\"何正尹　　\",\"UDDOSAGE\":\"55      \",\"UDORDSEQ\":\"0055\",\"UDBGNDT\":\"2019-08-14-09.17.00.000000\",\"UDDRGNO\":\"02145\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\"                                                                                                    \",\"UDDUNIT\":\"CC    \",\"UDROUTE\":\"IVD\",\"UDRPNAME\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDFREQN\":\"QD-TPN  \"}]\n\n                //create list need to do search\n                let tpnList = [] // All TPN data\n                let selected_parser = undefined\n                //fakeData.forEach(item => {\n                data.data.forEach(item => {\n                    //get parser\n                    selected_parser = this.select_parser(item, tpnParsers)\n                    if (selected_parser !== undefined) {\n                        const found = item.UDDRGNAM.match(RegExp(selected_parser.apply_condition.name, selected_parser.apply_condition.name_regex_flags))\n                        if (found !== null && found !== \"\") tpnList.push(item)\n                    }\n                });\n\n                console.log(\"tpnList\" + JSON.stringify(tpnList))\n                if (selected_parser !== undefined) {\n                    //parser 7 value from each TPN document （AA, Glu, Na, K, Ca, P, Mg）\n                    tpnList.forEach((item, index) => {\n                        ApiProvider.getStoredProcedureUDTEXTQ1(CID, item.UDORDSEQ)\n                            .then(data => {\n                                console.log(\"getStoredProcedureUDTEXTQ1 OK \" + JSON.stringify(data.data))\n\n                                //parse every line\n                                const result = this.parse(data.data, selected_parser)\n                                item.TPNDATA = result;\n                                //console.log(\"parse result: \" + JSON.stringify(item))\n                                tpnList.splice(index, 1, item)\n                                this.setState({\n                                    tpndata: tpnList\n                                })\n                            })\n                            .catch(err => {\n                                console.log(\"getStoredProcedureUDTEXTQ1 NG \" + err)\n                            });\n                    });\n                }\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureUDORDER0 NG \" + err)\n            });\n    }\n    select_parser = (input, parsers) => {\n        const inputBeginTime = moment(input.UDBGNDT, \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n        const inputEndTime = moment(input.UDENDDT, \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n        return parsers.find(x =>\n            input.UDDRGNAM.match(x.apply_condition.name)\n            && (!x.apply_condition.start_time || inputBeginTime >= x.apply_condition.start_time)\n            && (!x.apply_condition.end_time || inputEndTime < x.apply_condition.end_time)\n        )\n    }\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = \"\"\n        });\n\n        inputs.forEach(input => {\n            let content = input.UDWORD;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key] = match[mapping.position]\n                }\n            });\n        });\n        return allResult;\n    }\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    render() {\n        const { caseinfo, PickerDateRange } = this.props\n        const title = [\"開始時間\", \"結束時間\", \"狀態\", \"處置名稱\"]\n        const titilecell = title.map(function (info, index) {\n            return (\n                <div key={index} style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t4>{info}</t4>\n                </div>\n            );\n        })\n        const ListCellData = this.state.tpndata\n        const filterData = ListCellData.filter((element, index, arr) => {\n            const time = moment(moment(element.UDBGNDT, 'YYYY-MM-DD-HH.mm.ss.000000').format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n            return PickerDateRange[0] <= time && time <= PickerDateRange[1]\n        })\n        const DataCellRender = filterData.map(function (element, index, arr) {\n            return (\n                <Nurtiontpncell key={index} data={element} caseinfo={caseinfo} ></Nurtiontpncell>\n            );\n        })\n\n        return (\n            <div>\n                <t1>TPN order</t1>\n                <div style={{ display: \"grid\", gridTemplateColumns: \" 1fr 1fr 60px 450px\", background: \"#cccccc\", height: \"50px\", marginTop: \"10px\" }}>\n                    {titilecell}\n                </div>\n                <div style={{ minHeight: \"120px\", maxHeight: \"400px\", overflowY: \"auto\" }}>\n                    {DataCellRender}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Nurtiontpnorder\n","import React, { Component } from 'react'\nimport * as d3 from \"d3\";\nimport './Watervaluechart.scss'\nimport { Modal } from 'antd'\n// import { getRandomfornumber } from '../../Function/Wardstate'\nimport moment from 'moment';\n\nclass Watervaluechart extends Component {\n    state = {\n        visible: false,\n        select: null,\n        rowdata: null\n    };\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: true,\n            select: null,\n            rowdata: null\n        });\n    };\n    componentDidUpdate() {\n        const { svg_key } = this.props\n        d3.select(\"#\" + svg_key).remove()\n        this.drawChart()\n\n    }\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentWillUnmount() {\n    }\n\n    cal_svg_hight() {\n        const { axisTop, axisBot } = this.props\n        if (axisTop) {\n            if (axisBot) {\n                return 160\n            }\n            else {\n                return 130\n            }\n        }\n        else {\n            if (axisBot) {\n                return 130\n            }\n            else {\n                return 90\n            }\n        }\n    }\n\n    cal_svg_transform() {\n        const { axisTop, axisBot } = this.props\n        console.log(axisTop)\n        if (axisTop) {\n            if (axisBot) {\n                return 70\n            }\n            else {\n                return 50\n            }\n        }\n        else {\n            if (axisBot) {\n                return 5\n            }\n            else {\n                return 5\n            }\n        }\n    }\n\n    drawChart() {\n        function formatShiftDays(startTime, endTime) {\n            const shiftDays = parseInt((endTime - startTime) / (24 * 60 * 60 * 1000))\n            return shiftDays\n        }\n        const { svg_key, id_key, startTime, watervalueData } = this.props\n        const width = (window.screen.availWidth - 50) / 2 - 50, height = 400\n        const max = 500, min = 0\n        const shiftDays = formatShiftDays(moment(startTime, \"YYYYMMDD\").valueOf(), moment().valueOf())\n\n        if (watervalueData.length === 0) {\n            return null\n        }\n        const rectwidth = (width / shiftDays) - 2\n        var x = d3.scaleLinear()\n            .domain([0, watervalueData.length])\n            .range([0, width]);\n\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([min, max])\n            .range([height, 0])\n\n\n\n        var yAxis = d3.axisLeft(y)\n            .ticks(11)\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(10);\n\n        var xAxisBottom = d3.axisBottom(x)\n            .ticks(watervalueData.length)\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(height + 10)\n            .tickFormat(function (d) {\n                if (d % 10 === 0) {\n                    if (d > 0) {\n                        return 'D' + d\n                    }\n                    return null\n                }\n                else return null;\n            });\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_key)\n            .attr(\"viewBox\", [0, 0, width + 80, height + 50])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 30 + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n        svg.append(\"g\")\n            .call(xAxisBottom)\n            .attr(\"class\", \"axis\");\n\n\n        for (let index = 0; index < 11; index++) {\n            //上下虛線\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(index * 50))\n                .attr('x2', width)\n                .attr('y2', y(index * 50))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n        }\n\n        for (let index = 0; index < watervalueData.length; index++) {\n            //上下虛線\n            if (index % 10 === 0 && index > 0) {\n                svg.append('line')\n                    .attr('x1', x(0.5 + index))\n                    .attr('y1', y(min))\n                    .attr('x2', x(0.5 + index))\n                    .attr('y2', y(max))\n                    .style('stroke', 'rgba(187, 187, 187, 1)')\n                    .style('stroke-width', 1)\n                    .style('stroke-dasharray', 5.5);\n            }\n        }\n\n\n\n\n        // function rowdatageneral(number) {\n        //     const rowdata = {\n        //         'IV': {\n        //             \"max\": getRandomfornumber(number),\n        //             \"min\": 0\n        //         },\n        //         'feeding': {\n        //             \"max\": getRandomfornumber(number),\n        //             \"min\": 0\n        //         },\n        //         'Other': {\n        //             \"max\": getRandomfornumber(number),\n        //             \"min\": 0\n        //         }\n        //     }\n        //     return rowdata\n        // }\n        const select = this.state.select\n        if (select === null || select === undefined || select === \"\") {\n            d3.selectAll(\"rect#A123\").remove()\n        }\n        for (let index = 0; index < watervalueData.length; index++) {\n            const rowdata = watervalueData[index]\n            var svgrect = svg.append('g').on('click', () => {\n                if (rowdata === null) {\n\n                }\n                else {\n                    this.setState({\n                        visible: true,\n                        select: index,\n                        rowdata: rowdata\n                    });\n\n                }\n            })\n            console.log(select)\n            if (index === select) {\n                svgrect.append('rect')\n                    .attr('id', 'A123')\n                    .attr('width', rectwidth + 2)\n                    .attr('height', y(0) - y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .attr('x', x(index) - (rectwidth / 2) - 1)\n                    .attr('y', y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .style('fill', 'rgba(0,0,0,0)')\n                    .style('stroke', '#F5A623')\n                    .style('stroke-width', 2)\n                    .style('cursor', 'pointer');\n            }\n            else {\n                svgrect.append('rect')\n                    .attr('id', 'A123')\n                    .attr('width', rectwidth + 2)\n                    .attr('height', y(0) - y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .attr('x', x(index) - (rectwidth / 2) - 1)\n                    .attr('y', y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .style('fill', 'rgba(0,0,0,0)')\n                    .style('stroke', 'rgba(0,0,0,0)')\n                    .style('stroke-width', 2)\n                    .style('cursor', 'pointer')\n                    .style('opacity', 1);\n            }\n            svgrect.append('line')\n                .attr('x1', x(index))\n                .attr('y1', y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                .attr('x2', x(index))\n                .attr('y2', y(rowdata.IV + rowdata.Other))\n                .style('stroke', '#2E64A4')\n                .style('stroke-width', rectwidth)\n\n            svgrect.append('line')\n                .attr('x1', x(index))\n                .attr('y1', y(rowdata.IV + rowdata.Other))\n                .attr('x2', x(index))\n                .attr('y2', y(rowdata.Other))\n                .style('stroke', '#C3EFFF')\n                .style('stroke-width', rectwidth)\n\n\n            svgrect.append('line')\n                .attr('x1', x(index))\n                .attr('y1', y(rowdata.Other))\n                .attr('x2', x(index))\n                .attr('y2', y(0))\n                .style('stroke', '#3B97E1')\n                // .style('stroke', 'red')\n                .style('stroke-width', rectwidth)\n        }\n    }\n\n    ModalRender() {\n        function nulldata(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return 0\n            }\n            return value\n        }\n        const data = this.state.rowdata\n        if (data === null || data === undefined) {\n            return null\n        }\n        // function sumRowdata(data) {\n        //     if (data === null || data === undefined) {\n        //         return 0\n        //     }\n        //     return data * 0.8\n        // }\n        const select = this.state.select\n        const waterdata = this.props.watervalueData\n        const car = waterdata[select].Caloriessum\n        return (\n            <Modal\n                title=\"Basic Modal\"\n                visible={this.state.visible}\n                onOk={this.handleOk}\n                onCancel={this.handleCancel}\n                footer={null}\n            >\n                <div>IV:{nulldata(data.IV)}</div>\n                <div>Feeding:{nulldata(data.Feeding)}</div>\n                <div>Other:{nulldata(data.Other)}</div>\n                <div>總熱量:{car}kcal</div>\n            </Modal>\n        );\n    }\n    render() {\n        const { id_key } = this.props\n        const model = this.ModalRender()\n        return (\n            <div id={id_key}>\n                {model}\n            </div>\n        );\n    }\n}\n\nexport default Watervaluechart","import React, { Component } from 'react'\nimport Nurtionfeedingorder from './Nurtionfeeding'\nimport { Select, Button, DatePicker, Modal } from 'antd';\nimport WardlifeChart from '../../Wardview/Wardlifechart'\nimport Wardmonthafter from '../../Wardview/Wardmonthafter'\nimport Nurtiontpnorder from './Nurtion_TPN'\nimport Watervaluechart from './Watervaluechart'\nimport { gender } from '../../Function/Wardbedfunction'\nimport X2JS from 'x2js';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\nimport * as FiliterReg from '../../Function/FiliterReg'\nimport './Nurtion.scss'\n\nclass Nurtionview extends Component {\n    state = {\n        visible: false,\n        test_items_interval: 1,\n        UDORDER0: [],\n        QDC: [],\n        QTWER: [],\n        PickerDateRange: moment(moment().format('YYYYMMDD'))\n    }\n    componentDidMount() {\n        this.API_DATA()\n    }\n    API_DATA() {\n        const { caseinfo } = this.props\n        const xm2 = new X2JS()\n        const st = moment(caseinfo.TRANSINDT.toString(), 'YYYYMMDD').format('YYYYMMDDHHmm')\n        const et = moment().format(\"YYYYMMDDHHmm\")\n        // ApiProvider.getQDC(caseinfo.CASEID, st, et)\n        ApiProvider.getQDC(caseinfo.CASEID, st, et)\n            .then(data => {\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                console.log(parsedata)\n                this.setState({\n                    QDC: parsedata\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureUDORDER0(caseinfo.HISID, caseinfo.CASEID, \"123\")\n            .then(data => {\n                this.setState({\n                    UDORDER0: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n    }\n    switch_monthy() {\n        const { caseinfo } = this.props\n        console.log(caseinfo)\n        const grewinfo = {\n            \"WEEK_BORN\": Number(caseinfo.WEEK_BORN),\n            \"DAY_BORN\": Number(caseinfo.DAY_BORN),\n            \"BIRTHDAY\": caseinfo.PBASINGNINFO.PBIRTHDT\n        }\n        const WeightList = caseinfo.WEIGHT\n        const sex = gender(caseinfo.PBASINGNINFO.PSEX)\n        const switch_data = this.state.test_items_interval\n        switch (switch_data) {\n            case 1:\n                return <WardlifeChart grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife\"} svg_key={\"wardlife_svg\"} gender={sex}></WardlifeChart>\n            case 0:\n                return <Wardmonthafter grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife_after\"} svg_key={\"wardlife_after_svg\"} gender={sex}></Wardmonthafter>\n            default:\n                return null;\n        }\n    }\n\n    handleChange = (checkedValues) => {\n        console.log('checked = ', checkedValues);\n        this.setState(\n            {\n                test_items_interval: checkedValues\n            }\n        )\n\n    }\n    onOk = (value) => {\n        console.log('onOk: ', value);\n    }\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n    WaterValueControlBar() {\n        return (\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", marginRight: \"10px\" }}>\n                    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        <div style={{ height: \"10px\", width: \"10px\", background: \"#C3EFFF\", marginRight: \"5px\" }}></div>\n                        <t3>IV</t3>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        <div style={{ height: \"10px\", width: \"10px\", background: \"#2E64A4\", marginRight: \"5px\" }}></div>\n                        <t3>Feed</t3>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        <div style={{ height: \"10px\", width: \"10px\", background: \"#3B97E1\", marginRight: \"5px\" }}></div>\n                        <t3>Other</t3>\n                    </div>\n                </div>\n                {/* <Button type=\"primary\" onClick={this.showModal}>設定營養項目</Button> */}\n            </div>\n        );\n    }\n    GrowthCurveControlBar() {\n        const { Option } = Select;\n        return (\n            <div className='titlebutton'>\n                <Select defaultValue={1} style={{ width: 120 }} onChange={this.handleChange}>\n                    <Option value={0}>滿足月</Option>\n                    <Option value={1}>不滿足月</Option>\n                </Select>\n                <Button type=\"primary\" onClick={this.showModal}>新增體重</Button>\n                <Modal\n                    title=\"手動新增體重紀錄\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                        <div style={{ display: \"flex\", alignItems: \"center\" }}>選擇時間:</div>\n                        <DatePicker id=\"nurtion_datepicker\" style={{ width: \"400px\" }} showTime placeholder=\"選擇時間\" onOk={this.onOk} />\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n    WaterValueRender() {\n        function formatTimeArray(startTime) {\n            const shiftTimer = parseInt((moment().valueOf() - moment(startTime, \"YYYYMMDD\").valueOf()) / (23 * 60 * 60 * 1000))\n            console.log(startTime, shiftTimer)\n            var TimerArray = []\n            for (let index = 0; index < shiftTimer; index++) {\n                const Time = moment(moment(startTime, \"YYYYMMDD\").valueOf() + (index * 24 * 60 * 60 * 1000)).format(\"YYYY/MM/DD\")\n                TimerArray.push(Time)\n            }\n            return TimerArray\n        }\n        const { caseinfo } = this.props\n        const QDC = this.state.QDC\n        if (QDC.length === 0) {\n            return null\n        }\n        var FeedinfData = []\n        var IVData = []\n        var OtherData = []\n        var Calories = 0\n        for (let index = 0; index < QDC.length; index++) {\n            const element = QDC[index];\n            const feedstatus = FiliterReg.Feedarea_Reg_IO().find(function (value, index, array) {\n                return element.item === value\n            })\n            if (feedstatus) {\n                FeedinfData.push(element)\n            }\n            const IVstatus = FiliterReg.IVarea_reg_IO().find(function (value, index, array) {\n                return element.item === value\n            })\n            if (IVstatus) {\n                IVData.push(element)\n            }\n            const Otherstatus = FiliterReg.Otherarea_reg_IO().find(function (value, index, array) {\n                return element.item === value\n            })\n            if (Otherstatus) {\n                const invalue = element.inp_val1\n                if (invalue !== undefined) {\n                    OtherData.push(element)\n                }\n            }\n            console.log(element)\n\n\n        }\n\n        console.log(FeedinfData)\n        console.log(IVData)\n        console.log(OtherData)\n        function sumcar(List) {\n            var Calories = 0\n            for (let index = 0; index < List.length; index++) {\n                const element = List[index];\n                if (element.item === \"進食\") {\n                    if (element.lost === \"配方奶\") {\n                        Calories = Calories + Number(element.inp_val2) * 0.8\n                    }\n                    if (element.lost === \"母奶\") {\n                        Calories = Calories + Number(element.inp_val2) * 0.7\n\n                    }\n                }\n                if (element.nam !== undefined) {\n                    if (element.nam.toString().match(\"10%TPN\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                    if (element.nam.toString().match(\"15%TPN\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34 * 1.5\n                    }\n                    if (element.nam.toString().match(\"SMOFliquid\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                    if (element.nam.toString().match(\"D10\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                    if (element.nam.toString().match(\"D12\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34 * 1.2\n                    }\n                    if (element.nam.toString().match(\"D5W\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34 * 5\n                    }\n                    if (element.nam.toString().match(\"taita\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                }\n\n            }\n            return Calories\n\n        }\n        const startTime = caseinfo.TRANSINDT.toString()\n        const TimerList = formatTimeArray(startTime)\n        var watervalueDataList = []\n        for (let index = 0; index < TimerList.length; index++) {\n            const element = TimerList[index];\n            const filterFeedind = FeedinfData.filter(function (value, index, arr) {\n                return moment(element, \"YYYY/MM/DD\").valueOf() === moment(value.rec_dat.toString().trim(), \"YYYY/MM/DD\").valueOf()\n            })\n            const filterIV = IVData.filter(function (value, index, arr) {\n                return moment(element, \"YYYY/MM/DD\").valueOf() === moment(value.rec_dat.toString().trim(), \"YYYY/MM/DD\").valueOf()\n            })\n            const filterOther = OtherData.filter(function (value, index, arr) {\n                return moment(element, \"YYYY/MM/DD\").valueOf() === moment(value.rec_dat.toString().trim(), \"YYYY/MM/DD\").valueOf()\n            })\n\n            const feedingSum = SumData2(filterFeedind)\n            const IVSum = SumData(filterIV)\n            const OtherSum = SumData(filterOther)\n\n            const Caloriessum = sumcar(filterFeedind) + sumcar(filterIV) + sumcar(filterOther)\n            watervalueDataList.push({\n                Feeding: feedingSum,\n                IV: IVSum,\n                Other: OtherSum,\n                Time: element,\n                Caloriessum\n            })\n\n        }\n        function SumData(arr) {\n            var sum = 0;\n            for (var i = 0; i < arr.length; i++) {\n                sum += Number(arr[i].inp_val1);\n            };\n            return sum;\n        }\n\n        function SumData2(arr) {\n            var sum = 0;\n            for (var i = 0; i < arr.length; i++) {\n                sum += Number(arr[i].inp_val2);\n            };\n            return sum;\n        }\n\n\n        console.log(watervalueDataList)\n        return (\n            <Watervaluechart Calories={Calories} watervalueData={watervalueDataList} startTime={caseinfo.TRANSINDT} id_key={\"water_id\"} svg_key={\"water_svg\"} caseiddays='2019/11/11'></Watervaluechart>\n        );\n    }\n\n    PickerDateRangeChange = (date, dateString) => {\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const PickerDate = this.state.PickerDateRange.valueOf()\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const bTemp = bTime - (6 * day)\n                bronDate <= bTemp && this.PickerDateRangeChange(moment(bTime))\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD'))\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= aTemp && this.PickerDateRangeChange(moment(aTime))\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const GrowthCurve = this.switch_monthy()\n        const GrowthCurveControl = this.GrowthCurveControlBar()\n        const WaterValueControl = this.WaterValueControlBar()\n        const tpndata = this.state.UDORDER0\n        const feeddata = this.state.TRTMNTQ1\n        const TimeStampPickerDate = this.state.PickerDateRange.valueOf()\n        const { caseinfo } = this.props\n\n        if (tpndata.length === 0 || feeddata === 0) {\n            return null\n        }\n\n        const waterRender = this.WaterValueRender()\n        const PickerDateRange = [TimeStampPickerDate - (6 * 24 * 60 * 60 * 1000), TimeStampPickerDate]\n\n        return (\n            <div className='nurtionheight'>\n                <div className='nurtionlayout'>\n                    <div>\n                        <div className='nurtioncomponmentboxtitle'>\n                            <t1>生長曲線圖</t1>\n                            {GrowthCurveControl}\n                        </div>\n                        <div className='nurtioncomponmentboxcontent'>{GrowthCurve}</div>\n                    </div>\n                    <div>\n                        <div className='nurtioncomponmentboxtitle'>\n                            <t1>水量表</t1>\n                            <div className='titlebutton'>\n                                {WaterValueControl}\n                            </div>\n                        </div>\n                        <div className='nurtioncomponmentboxcontent'>\n                            {waterRender}\n                        </div>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"250px 120px\", gridColumnGap: \"5px\", margin: \"10px 0px 5px 0px\" }}>\n                    <DatePicker\n                        value={this.state.PickerDateRange}\n                        format={\"YYYY/MM/DD\"}\n                        allowClear={false}\n                        locale={\"zh_TW\"}\n                        onChange={this.PickerDateRangeChange}\n                    />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: '1fr 1fr', gridColumnGap: \"10px\", marginBottom: \"20px\" }}>\n                    <Nurtionfeedingorder PickerDateRange={PickerDateRange} caseinfo={caseinfo}></Nurtionfeedingorder>\n                    <Nurtiontpnorder PickerDateRange={PickerDateRange} caseinfo={caseinfo}></Nurtiontpnorder>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Nurtionview\n","import React, { Component } from 'react'\nimport './Infectionlabtable.scss'\n// import { chronicladdataoneday, chroniclabdatathird } from '../../Data/Wardviewdata'\n// import { arraychange } from '../../Function/Wardstate'\n\nclass Infectionlabtable extends Component {\n    switch_state() {\n        const chronic_state = 2\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 18\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    table_content() {\n        function FormatList(Datalist, st) {\n            var Render = []\n            for (let index = 0; index < 21; index++) {\n                const start = st + (index * 8 * 60 * 60 * 1000)\n                const end = st + ((index + 1) * 8 * 60 * 60 * 1000)\n                const FilterData = Datalist.filter(function (value, index, arr) {\n                    return value.Time > start && value.Time < end\n                })\n                var sum = 0\n                console.log(FilterData)\n                for (let index = 0; index < FilterData.length; index++) {\n                    const element = FilterData[index];\n                    sum = sum + Number(element.Data)\n                }\n                Render.push(sum)\n            }\n            return Render\n        }\n        function CellRander(List) {\n            const cellR = List.map(function (info, index) {\n                return (\n                    <centerstyle style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }} key={index}>\n                        <t2>{info}</t2>\n                    </centerstyle>\n                );\n            })\n            return cellR\n        }\n        const { PickerDate, WBCList, BandList, SegList, LymList, PCTList, CRPList, title } = this.props\n        console.log(PickerDate)\n        const st = PickerDate + (31 * 60 * 60 * 1000) - (7 * 24 * 60 * 60 * 1000)\n        var WBCRender = FormatList(WBCList, st)\n        var BandRender = FormatList(BandList, st)\n        var SegRender = FormatList(SegList, st)\n        var LymRender = FormatList(LymList, st)\n        var PCTRender = FormatList(PCTList, st)\n        var CRPRender = FormatList(CRPList, st)\n        const WBCcell = CellRander(WBCRender)\n        const Bandcell = CellRander(BandRender)\n        const Segcell = CellRander(SegRender)\n        const Lymcell = CellRander(LymRender)\n        const PCTcell = CellRander(PCTRender)\n        const CRPcell = CellRander(CRPRender)\n        return (\n            <div style={{ display: \"grid\", gridTemplateRows: \"repeat(\" + title.length + \",1fr)\" }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{WBCcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{Bandcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{Segcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{Lymcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{PCTcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{CRPcell}</div>\n            </div>\n        );\n    }\n    render() {\n        const { userdata, title } = this.props\n        const title_list = title.map((info, index) => <div className='Chronictabletitlelist' key={index}><t2>{info.title}</t2></div>)\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\" }}>\n                <div style={{ display: \"grid\", gridTemplateRows: \"repeat(\" + title.length + \",1fr)\" }}>\n                    {title_list}\n                </div>\n                {this.table_content()}\n            </div>\n        );\n    }\n}\n\nexport default Infectionlabtable","import React, { Component } from 'react'\nimport Infectionlabtable from './Infectionlabtable'\n\nclass Infectionlab extends Component {\n    render() {\n        const { WBCList, BandList, SegList, LymList, PCTList, CRPList,PickerDate } = this.props\n        const item_title = [{ title: \"WBC\" }, { title: \"Band\" }, { title: \"Seg\" }, { title: \"Lym\" }, { title: \"PCT\" }, { title: \"CRP\" }]\n        return (\n            <div style={{margin:\"10px 0px\"}}>\n                <Infectionlabtable PickerDate={PickerDate} title={item_title}  WBCList={WBCList} BandList={BandList} SegList={SegList} LymList={LymList} PCTList={PCTList} CRPList={CRPList}></Infectionlabtable>\n            </div>\n        );\n    }\n}\n\nexport default Infectionlab","import React, { Component } from 'react'\nimport { DatePicker } from 'antd'\nimport Vitalxaxis from '../../Module/Vitalxaxis'\n// import Infectionvitalsign from './Infectionvitalsign'\nimport Infectionlab from './Infectionlab'\nimport { formatxArrayhalf, formatendtime } from '../../Function/Timeformat'\nimport { simulationCentermonitordata, simulationnisdata } from '../../Function/Wardstate'\nimport Orderonchronic from '../ChronicleView/ChronicOrder'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport './Infection.scss'\nimport Vitalonchronic from '../ChronicleView/Chronic_vital'\n\nclass Infectionview extends Component {\n    state = {\n        datasource: [],\n        statussource: \"CM\",\n        intervalselect: 2,\n        PickerDate: moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf(),\n        UDORDER0: [],\n        RESLAB02: [],\n        RESLAB01: [],\n        classParser: undefined,\n\n        hrdatasource: [],\n        rrdatasource: [],\n        spo2datasource: [],\n        abpdatasource: [],\n        nbpdatasource: [],\n        btdatasource: [],\n        QDVS: [],\n        QOXY: [],\n    }\n    componentDidMount() {\n        this.apidata()\n    }\n\n    apidata() {\n        const { caseinfo } = this.props\n        const dateTime = this.state.PickerDate\n        const et = dateTime + (31 * 60 * 60 * 1000)\n        const st = moment(et - (7 * 24 * 60 * 60 * 1000)).format(\"YYYY-MM-DD\")\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Prescription\");\n                console.log(\"getGitHubJson Prescription OK \" + JSON.stringify(parser))\n                this.setState({\n                    classParser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiProvider.getStoredProcedureUDORDER0(caseinfo.HISID, caseinfo.CASEID, \"123\")\n            .then(data => {\n                this.setState({\n                    UDORDER0: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        ApiProvider.getStoredProcedureRESLAB02(caseinfo.HISID, st)\n            .then(data => {\n                this.setState({\n                    RESLAB02: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESLAB01(caseinfo.HISID, st)\n            .then(data => {\n                this.setState({\n                    RESLAB01: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n    }\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        console.log(\"mappings\" + mappings)\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n\n        inputs.forEach(input => {\n            let content = input.UDGNAME;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n        });\n        return allResult;\n    }\n    sourcehandleChange = (value) => {\n        this.setState({\n            statussource: value\n        })\n\n    }\n    switchdata(value_interval, sourcefrom) {\n        console.log(sourcefrom)\n        // const { defaultdate } = this.props\n        const defaultdate = new Date()\n        function changevitaldays(vitaldays) {\n            if (vitaldays === 3) {\n                return 18\n            }\n            if (vitaldays === 7) {\n                return 21\n            }\n            else {\n                return 24\n            }\n        }\n\n        function Interval_switch(interval) {\n            if (interval === 0) {\n                return 1\n            }\n            if (interval === 1) {\n                return 3\n            }\n\n            if (interval === 2) {\n                return 7\n            }\n        }\n        const interval = Interval_switch(value_interval)\n        const starttime = formatendtime(defaultdate) - (interval * 24 * 60 * 60 * 1000)\n        if (sourcefrom === 'NIS') {\n            const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n            const data = simulationnisdata(datatime, changevitaldays(interval))\n            return data\n        }\n        else {\n            const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n            const data = simulationCentermonitordata(datatime, changevitaldays(interval))\n            return data\n        }\n    }\n\n    render() {\n        function vallofnull(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"\"\n            }\n            return value.toString().trim()\n        }\n        // const { Option } = Select;\n        const { caseinfo } = this.props\n        const { classParser, UDORDER0 } = this.state\n        const LabData = this.state.RESLAB02\n        const LabData2 = this.state.RESLAB01\n        const dateTime = this.state.PickerDate\n        const et = dateTime + (31 * 60 * 60 * 1000)\n        const st = et - (7 * 24 * 60 * 60 * 1000)\n        var WBCList = []\n        var BandList = []\n        var SegList = []\n        var LymList = []\n        var PCTList = []\n        var CRPList = []\n        if (Array.isArray(LabData)) {\n            if (LabData.length !== 0) {\n                for (let index = 0; index < LabData.length; index++) {\n                    const element = LabData[index];\n                    const WBC = vallofnull(element.RSV01)\n                    const Band = vallofnull(element.RSV13)\n                    const Seg = vallofnull(element.RSV14)\n                    const Lym = vallofnull(element.RSV15)\n                    const PCT = null\n                    const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                    if (st < time && time < et) {\n                        if (WBC !== null || WBC !== \"\" || WBC !== undefined) {\n                            WBCList.push({\n                                Time: time,\n                                Data: WBC\n                            })\n                        }\n                        if (Band !== null || Band !== \"\" || Band !== undefined) {\n                            BandList.push({\n                                Time: time,\n                                Data: Band\n                            })\n                        }\n                        if (Seg !== null || Seg !== \"\" || Seg !== undefined) {\n                            SegList.push({\n                                Time: time,\n                                Data: Seg\n                            })\n                        }\n                        if (Lym !== null || Lym !== \"\" || Lym !== undefined) {\n                            LymList.push({\n                                Time: time,\n                                Data: Lym\n                            })\n                        }\n                        if (PCT !== null || PCT !== \"\" || PCT !== undefined) {\n                            PCTList.push({\n                                Time: time,\n                                Data: PCT\n                            })\n                        }\n                    }\n                }\n            }\n        }\n        if (Array.isArray(LabData2)) {\n            if (LabData2.length !== 0) {\n                for (let index = 0; index < LabData2.length; index++) {\n                    const element = LabData2[index];\n                    const CRP = vallofnull(element.RSV30)\n                    const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                    if (st < time && time < et) {\n                        if (CRP !== null || CRP !== \"\" || CRP !== undefined) {\n                            CRPList.push({\n                                Time: time,\n                                Data: CRP\n                            })\n                        }\n                    }\n                }\n            }\n        }\n        console.log(WBCList, BandList, SegList, LymList, PCTList, CRPList)\n\n        let clusteredData = {}\n        if (classParser !== undefined) {\n            clusteredData = this.parse(UDORDER0, classParser)\n        }\n\n        //filter data by selected class\n        const filteredData = clusteredData[\"抗生素類別\"];\n\n        return (\n            <div style={{ padding: \"0px 20px\" }}>\n                <div className='Infectioncontrol'>\n                    <DatePicker\n                        disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                        defaultValue={moment(this.state.PickerDate)}\n                        onChange={(date, datestring) => { this.setState({ PickerDate: date.valueOf() }) }}\n                        allowClear={false} />\n                </div>\n                <div style={{ margin: \"10px 0px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\" }}>\n                        <div></div>\n                        <Vitalxaxis max={200} min={0} select_interval={2} select_date={new Date().getTime()} id_key=\"xaxis_infect\" svg_id=\"xaxis_svg_infect\"></Vitalxaxis>\n                    </div>\n                </div>\n                <div className='boxshadow'></div>\n                <div className='Infectionlayout'>\n                    <Vitalonchronic PickerDate={this.state.PickerDate} select_interval={2} caseinfo={caseinfo} source={\"infection\"} title=\"Vital\"></Vitalonchronic>\n                    {/* <Infectionvitalsign caseinfo={caseinfo} StatusSource={this.state.statussource} PickerDate={this.state.PickerDate}></Infectionvitalsign> */}\n                    {/* Order */}\n                    <Orderonchronic PickerDate={this.state.PickerDate} UDORDER0={filteredData} select_interval={2} caseinfo={caseinfo} source={\"infection\"}></Orderonchronic>\n                    <Infectionlab PickerDate={this.state.PickerDate} WBCList={WBCList} BandList={BandList} SegList={SegList} LymList={LymList} PCTList={PCTList} CRPList={CRPList}></Infectionlab>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\" }}>\n                    <div></div>\n                    <Vitalxaxis max={200} min={0} select_interval={2} select_date={new Date().getTime()} id_key=\"xaxis_flootsheet_bot\" svg_id=\"xaxis_svg_flootsheet_bot\"></Vitalxaxis>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Infectionview","import React, { Component } from 'react';\nimport editlogo from '../../Image/svg/Edit.svg'\n// import detaillogo from '../../Image/svg/details.svg'\nimport { Input, Button } from 'antd';\nimport './Bedsidecard.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Bedsidecard extends Component {\n    state = {\n        caseinfo: this.props.caseinfo,\n        EditMode: false,\n        remarkContent: \"\",\n        inputContent: \"\",\n        powerLogin: 0\n    }\n    componentDidMount() {\n        //bind function\n        this.onInputChange = this.onInputChange.bind(this);\n\n        //query patient remark\n        this.queryPatientRemark();\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    queryPatientRemark() {\n        ApiProvider.getOnePatientRemark(this.state.caseinfo.TRANSINID)\n        .then(data => {\n            console.log(\"queryPatientRemark OK \" + JSON.stringify(data));\n            this.setState({\n                remarkContent: data.data[0].context\n            });\n        })\n        .catch(err => {\n            console.log(\"queryPatientRemark NG \" + JSON.stringify(err));\n        });\n    }\n    onInputChange(event) {\n        this.setState({inputContent: event.target.value})\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    onClickEnter() {\n        ApiProvider.createPatientRemark(this.state.inputContent, this.state.caseinfo.HISID, this.state.caseinfo.TRANSINID)\n        .then(data => {\n            console.log(\"createPatientRemark OK \" + JSON.stringify(data));\n            this.setState(\n                {\n                    inputContent: \"\"\n                }\n            )\n            this.queryPatientRemark();\n        })\n        .catch(err => {\n            console.log(\"createPatientRemark NG \" + JSON.stringify(err));\n        });\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    render() {\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div className='bedsidecardtitle'>\n                    <t1>床頭卡註記</t1>\n                    <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin > 0 ? \"flex\" : \"none\" }}>\n                        <img src={editlogo} alt=\"editlogo\" />\n                    </div>\n                </div>\n                <div className='bedsidecardcontext'>\n                    <t2>{this.state.remarkContent}</t2>\n                </div>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", backgroundColor: \"rgba(238,238,238,1)\" }}>\n                        <Input placeholder=\"輸入當日註記內容\" value={this.state.inputContent} onChange={this.onInputChange}></Input>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Bedsidecard","import React, { Component } from 'react';\nimport editlogo from '../../Image/svg/Edit.svg'\nimport { Checkbox, Input, Button } from 'antd';\nimport './Scheduletodo.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nconst TODO_DONE = \"已完成\";\nconst TODO_UNFINISH = \"未完成\";\n\nclass Scheduletodo extends Component {\n    state = {\n        EditMode: false,\n        displayMode: true, //true已完成 flase未完成\n        todolist: [],\n        caseinfo: this.props.caseinfo,\n        inputContent: undefined,\n        powerLogin: 0\n    }\n    componentDidMount() {\n        //bind function\n        this.onInputChange = this.onInputChange.bind(this);\n\n        //query patient notice\\\n        this.queryPatientTodo();\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    queryPatientTodo() {\n        ApiProvider.getOneTodo(this.state.caseinfo.TRANSINID, this.state.caseinfo.CASEID)\n            .then(data => {\n                console.log(\"queryPatientTodo OK \" + JSON.stringify(data));\n                this.setState({\n                    todolist: data.data\n                });\n            })\n            .catch(err => {\n                console.log(\"queryPatientTodo NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString()\n        ApiProvider.createTodo(this.state.caseinfo.CASEID, this.state.inputContent, timeNowStr, this.state.caseinfo.TRANSINID, TODO_UNFINISH)\n            .then(data => {\n                console.log(\"createTodo OK \" + JSON.stringify(data));\n                this.queryPatientTodo();\n            })\n            .catch(err => {\n                console.log(\"createTodo NG \" + JSON.stringify(err));\n            });\n        this.setState(\n            {\n                EditMode: false,\n                inputContent: undefined\n            }\n        )\n    }\n    onClickfinish() {\n        console.log(\"finish\")\n        this.setState(\n            {\n                displayMode: true\n            }\n        )\n    }\n    onClickunfisish() {\n        this.setState(\n            {\n                displayMode: false\n            }\n        )\n    }\n\n    onChange = (checkedValues) => {\n        console.log('checked = ', document.getElementById(\"finish\"));\n    }\n    onItemCheck = (event) => {\n        console.log('onItemCheck ' + JSON.stringify(event.target));\n\n        const itemToUpdate = this.state.todolist.find(item => item.time === event.target.value);\n        console.log('find item ' + JSON.stringify(itemToUpdate));\n\n        if ((this.state.displayMode === true && event.target.checked === false) || (this.state.displayMode === false && event.target.checked === true)) {\n            ApiProvider.createTodo(itemToUpdate.caseid, itemToUpdate.context, itemToUpdate.time, itemToUpdate.transinno, (itemToUpdate.type === TODO_DONE) ? TODO_UNFINISH : TODO_DONE)\n                .then(data => {\n                    console.log(\"updateTodo OK \" + JSON.stringify(data));\n                    this.queryPatientTodo();\n                })\n                .catch(err => {\n                    console.log(\"updateTodo NG \" + JSON.stringify(err));\n                });\n        }\n    }\n    render() {\n        // const button_style = {\n        //     finish: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\", borderRadius: \"16px\", border: \"rgba(245, 166, 35, 1) 1px solid\", color: \"rgba(245, 166, 35, 1)\" },\n        //     unfinish: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\", borderRadius: \"16px\", border: \"rgba(245, 166, 35, 1) 1px solid\", background: \"rgba(245, 166, 35, 1)\", color: \"white\" }\n        // }\n\n        const todolist_data = this.state.todolist\n        const finish_data = todolist_data.filter(function (item, index, array) {\n            return item.type === TODO_DONE;\n        });\n        const finish_value = finish_data.map(function (item, index, array) {\n            return item.time;\n        });\n        const unfinish_data = todolist_data.filter(function (item, index, array) {\n            return item.type === TODO_UNFINISH;\n        });\n\n        const onItemCheck = this.onItemCheck;\n        const finish_checkbox = finish_data.map(function (item, index, array) {\n            return (\n                <div key={index} className='scheduletodocell'>\n                    <Checkbox value={item.time} checked={true} onChange={onItemCheck} style={{ textDecoration: \"line-through\" }}>{item.context}</Checkbox>\n                </div>\n            );\n        });\n        const unfinish_checkbox = unfinish_data.map(function (item, index, array) {\n            return (\n                <div key={index} className='scheduletodocell'>\n                    <Checkbox value={item.time} checked={false} onChange={onItemCheck}>{item.context}</Checkbox>\n                </div>\n            );\n        });\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <t1>To Do List</t1>\n                <div className='scheduletodotitle'>\n                    <t1>待辦排程</t1>\n                    <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin > 0 ? \"flex\" : \"none\" }}>\n                        <img src={editlogo} alt=\"editlogo\" />\n                    </div>\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"10px 0px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"115px 115px\", gridColumnGap: \"10px\" }}>\n                        <div className={this.state.displayMode ? 'finishbutton' : 'todobutton'} onClick={() => this.onClickunfisish()}>未完成</div>\n                        <div onClick={() => this.onClickfinish()} className={this.state.displayMode ? 'todobutton' : 'finishbutton'}>已完成</div>\n                    </div>\n                </div>\n                <Checkbox.Group defaultValue={finish_value} style={{ width: '100%' }} onChange={this.onChange}>\n                    <div style={{ overflowY: \"auto\", maxHeight: \"200px\" }}>\n                        {this.state.displayMode ? finish_checkbox : unfinish_checkbox}\n                    </div>\n                </Checkbox.Group>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <Input placeholder=\"輸入當日註記內容\" value={this.state.inputContent} onChange={this.onInputChange}></Input>\n                        <Button type=\"primary\">新增</Button>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Scheduletodo","import React, { Component } from 'react';\nimport calenderlogo from '../../Image/svg/calender.svg'\nimport calenderwhitelogo from '../../Image/svg/calenderwhite.svg'\nimport pingcheck from '../../Image/svg/ping.svg'\nimport pingwhite from '../../Image/svg/pingwhite.svg'\nimport './Calendercell.scss'\nimport { mmddformat, weekdateformatcalender } from '../../Function/Timeformat'\n\nclass Calendercell extends Component {\n\n    sendcallback(timestamp, clickindex) {\n        this.props.parentCallback(timestamp, clickindex);\n    }\n    onClickCheck(timestamp, clickindex) {\n        this.sendcallback(timestamp, clickindex)\n    }\n\n    render() {\n        const { clickindex, state, newDate, timestamp, clickdate, data, today } = this.props;\n        function disableday(state) {\n            if (state) {\n                return (\n                    <div className='calendersubcontexticonsecond'>\n                        <img src={calenderlogo} alt='calenderlogo' />\n                        <img src={pingcheck} alt='pingcheck' />\n                    </div>\n                );\n            }\n            else {\n                return (\n                    <div className='calendersubcontexticonsecond'>\n                        <img src={calenderwhitelogo} alt='calenderlogo' />\n                        <img src={pingwhite} alt='pingcheck' />\n                    </div>\n                );\n            }\n        }\n        function disabledayinfo(state) {\n            const scheduleArray = data.scheduleList.filter(item => item.type === \"排程\");\n            const eventArray    = data.scheduleList.filter(item => item.type === \"事件\");\n\n            if (state) {\n                return (\n                    <div className='calendersubcontexticonsecond'>\n                        <t1>{scheduleArray.length}</t1>\n                        <t1>{eventArray.length}</t1>\n                    </div>\n                );\n            }\n            else {\n                return (\n                    <div className='calendersubcontexticonsecond'>\n                        <t1 className='displayinfo'>{scheduleArray.length}</t1>\n                        <t1 className='displayinfo'>{eventArray.length}</t1>\n                    </div>\n                );\n            }\n        }\n        function locl(state) {\n            /*if (state) {\n                return '當日'\n            }\n            else return null\n            */\n            if(timestamp === today) return  '當日'\n            else return null\n        }\n        function stateswitch() {\n\n            console.log(timestamp, clickdate)\n            if (mmddformat(clickdate) === mmddformat(timestamp)) {\n                return true\n            }\n            return false\n        }\n        return (\n            <div className={stateswitch() ? 'calendersubcontextclick' : 'calendersubcontext'} onClick={() => this.onClickCheck(timestamp, clickindex)}>\n                <div className={stateswitch() ? 'calendersubcontexttitleclick' : 'calendersubcontexttitle'}>\n                    <t2 className='calendersubcontexttitletoday'>{mmddformat(timestamp)}({weekdateformatcalender(timestamp)}){locl(newDate)}</t2>\n                </div>\n                <div className='calendersubcontexticon'>\n                    {disableday(state)}\n                </div>\n                <div className='calendersubcontexticon'>\n                    {disabledayinfo(state)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Calendercell","import React, { Component } from 'react';\nimport { DatePicker } from 'antd';\nimport { Select } from 'antd';\nimport './Calender.scss'\nimport { mmddformat, compareday, yyyymmfirstweeksate } from '../../Function/Timeformat'\nimport Calendercell from './Calendercell'\nimport { Icon } from 'antd'\nimport CrossectionSchedule from '../CrossSectionView/Crosssectionschedule'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment';\n\nconst SCHEDULE_TYPE_EVENT = \"事件\";\n// const SCHEDULE_TYPE_SCHEDULE = \"排程\";\nconst timeZoneOffset = 8 * 60 * 60 * 1000;\n\nclass Calender extends Component {\n    state = {\n        calendermode: 'week',\n        Clickdays: null,\n        ClickDate: null,\n        displayinfo: null,\n        scheduleRawData: [],\n        scheduleData: [],\n        startTimestamp: 0,\n        endTimestamp: 0,\n        todayBegin: 0,\n        noticeRawData: []\n    }\n    componentDidMount() {\n        const { startTimestamp, endTimestamp, todayBegin } = this.getStartEndTime();\n        this.setState({\n            startTimestamp: startTimestamp,\n            endTimestamp: endTimestamp,\n            todayBegin: todayBegin,\n            ClickDate: todayBegin\n        });\n        this.querySchedule(new Date(startTimestamp).toISOString().split('.')[0], new Date(endTimestamp).toISOString().split('.')[0]);\n        this.queryNotice();\n    }\n    getStartEndTime() {\n        const today = new Date();\n        const monthfirstweekday = new Date(today.getFullYear(), today.getMonth(), 1).getDay();\n        const firstCellBegin = new Date(today.getFullYear(), today.getMonth(), 1).getTime() - (monthfirstweekday * 24 * 60 * 60 * 1000) + timeZoneOffset;\n        const todayBegin = new Date(today.getFullYear(), today.getMonth(), today.getDate()).getTime() + timeZoneOffset;\n\n        const startTimestamp = (this.state.calendermode === 'week') ? todayBegin - 3 * 24 * 60 * 60 * 1000 : firstCellBegin;\n        const endTimestamp = (this.state.calendermode === 'week') ? startTimestamp + 7 * 24 * 60 * 60 * 1000 : startTimestamp + 35 * 24 * 60 * 60 * 1000;\n\n        return { startTimestamp, endTimestamp, todayBegin };\n    }\n    querySchedule(startTimestampStr, endTimestampStr) {\n        ApiProvider.getOnePatientSchedule(this.props.caseinfo.TRANSINID, startTimestampStr, endTimestampStr)\n            .then(data => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n\n                const itemList = data.data;\n                let refactoredList = [];\n                itemList.forEach(item => {\n                    const itemTimeStr = item.time.split('T')[0];\n                    let foundItemIndex = refactoredList.findIndex(element => element.time === itemTimeStr);\n                    if (foundItemIndex === -1) {\n                        //not found, create one\n                        let newItem = {\n                            time: itemTimeStr,\n                            timestamp: item.time,\n                            scheduleList: []\n                        }\n                        let newEvent = {\n                            type: item.type,\n                            timestamp: new Date(item.time).getTime(),\n                            writer: (item.type === SCHEDULE_TYPE_EVENT) ? \"林醫師\" : \"張醫師\",\n                            name: item.name,//this.props.caseinfo.PBASINGNINFO.PNAMEC,//(item.type === SCHEDULE_TYPE_EVENT) ? \"林ＯＯ\" : \"黃ＯＯ\",\n                            content: item.context,\n                            bednumber: item.bednumber\n                        }\n                        newItem.scheduleList.push(newEvent);\n                        refactoredList.push(newItem);\n                    } else {\n                        //found, update item\n                        let newEvent = {\n                            type: item.type,\n                            timestamp: new Date(item.time).getTime(),\n                            writer: (item.type === SCHEDULE_TYPE_EVENT) ? \"林醫師\" : \"張醫師\",\n                            name: item.name,//this.props.caseinfo.PBASINGNINFO.PNAMEC,//(item.type === SCHEDULE_TYPE_EVENT) ? \"林ＯＯ\" : \"黃ＯＯ\",\n                            content: item.context,\n                            bednumber: item.bednumber\n                        }\n                        refactoredList[foundItemIndex].scheduleList.push(newEvent);\n                    }\n                });\n                this.setState({\n                    scheduleRawData: data.data,\n                    scheduleData: refactoredList\n                });\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }\n    queryNotice() {\n        ApiProvider.getOnePatientNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID)\n            .then(result => {\n                console.log(\"getOnePatientNotice OK \" + JSON.stringify(result));\n                this.setState({\n                    noticeRawData: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientNotice NG \" + JSON.stringify(err));\n            });\n    }\n    callbackFunction = (timestamp, clickindex) => {\n        console.log(timestamp)\n        this.setState({\n            ClickDate: timestamp,\n            displayinfo: clickindex\n        })\n    }\n    onCancelClick() {\n        this.setState({\n            ClickDate: this.state.todayBegin,\n            displayinfo: null\n        })\n    }\n    handleChange = (value) => {\n        console.log(value)\n        this.setState({\n            calendermode: value,\n            displayinfo: null,\n            Clickdays: null\n        })\n    }\n    onChange = (timestamp) => {\n        console.log('changestate')\n    }\n    onClickCheck(timestampdate) {\n        this.setState({\n            onClickdays: timestampdate\n        })\n    }\n    getDataFromTimestamp(timestamp) {\n        const dateStr = new Date(timestamp).toISOString().split('T')[0];\n        const dataOfDayIndex = this.state.scheduleData.findIndex(element => element.time === dateStr);\n        const dataOfDay = (dataOfDayIndex === -1) ? { scheduleList: [] } : this.state.scheduleData[dataOfDayIndex];\n        return dataOfDay;\n    }\n    getNoticeFromTimestamp(timestamp) {\n        const dateStr = new Date(timestamp).toISOString().split('T')[0];\n        const noticeOfDayArray = this.state.noticeRawData.filter(element => element.time.indexOf(dateStr) > -1);\n        return noticeOfDayArray;\n    }\n    weekmode() {\n        var weekcontext = []\n        for (let index = 0; index < 7; index++) {\n            const timestampdate = this.state.startTimestamp + (index * 24 * 60 * 60 * 1000);\n            const date = mmddformat(timestampdate)\n            const dataOfDay = this.getDataFromTimestamp(timestampdate);\n            if (index - 3 === 0) {\n                weekcontext.push(\n                    <Calendercell clickindex={'week'} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={true} newDate={true} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n                );\n            }\n            else {\n                weekcontext.push(\n                    <Calendercell clickindex={'week'} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={compareday(timestampdate)} newDate={false} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n                );\n\n            }\n        }\n        return weekcontext\n    }\n    weekmonthmode(weeknumber, firstMonthWeekDay) {\n        var weekcontext = []\n        for (let index = 0; index < 7; index++) {\n            const timestampdate = new Date(firstMonthWeekDay).getTime() + (index * 24 * 60 * 60 * 1000) + timeZoneOffset;\n            const date = mmddformat(timestampdate)\n            const dataOfDay = this.getDataFromTimestamp(timestampdate)\n\n            if (new Date(mmddformat(new Date().getTime())).getTime() <= new Date(mmddformat(new Date(timestampdate).getTime())).getTime()) {\n                weekcontext.push(\n                    <Calendercell clickindex={weeknumber} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={true} newDate={true} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n                );\n            }\n            else {\n                weekcontext.push(\n                    <Calendercell clickindex={weeknumber} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={false} newDate={true} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n                );\n            }\n        }\n        return weekcontext\n    }\n\n    ShowModule(rowIndex) {\n        if (rowIndex === undefined) rowIndex = 0;\n        console.log(\"this.state.ClickDate\" + this.state.ClickDate);\n\n        const dataOfDay = this.getDataFromTimestamp(this.state.ClickDate);\n        const noticeOfDay = this.getNoticeFromTimestamp(this.state.ClickDate);\n\n        function checkmode(state) {\n            if (state === 'week') {\n                return 'calenderdisplayinformation'\n            }\n            if (state === rowIndex) {\n                return 'calenderdisplayinformation'\n            }\n            return 'calenderdisplayinformationnone'\n        }\n        console.log(moment(this.state.ClickDate).format(\"YYYYMMDDHHmmss\"))\n        return (\n            <div className={checkmode(this.state.displayinfo)}>\n                <div className='calenderModule'>\n                    <t1>詳細資訊</t1>\n                    <Icon type=\"close\" onClick={() => this.onCancelClick()} />\n                </div>\n                <div className='Modulelayout'>\n                    <CrossectionSchedule PickerDate={this.state.ClickDate} source={1} caseinfo={this.props.caseinfo} noticeData={noticeOfDay} scheduleData={dataOfDay} editstatus={true}></CrossectionSchedule>\n                </div>\n            </div>\n        );\n    }\n\n\n    setgroup() {\n        var calendermonthgroup = []\n        const monthfirstweekdate = new Date(yyyymmfirstweeksate(new Date())).getDay()\n        const firstMonthWeekDay = new Date(yyyymmfirstweeksate(new Date())).getTime() - (monthfirstweekdate * 24 * 60 * 60 * 1000)\n\n        for (let index = 0; index < 5; index++) {\n            calendermonthgroup.push(\n                <div className='calendercontextMonthRows'>\n                    {this.weekmonthmode(index, firstMonthWeekDay + (index * 7 * 24 * 60 * 60 * 1000))}\n                    {this.ShowModule(index)}\n                </div>\n            );\n\n        }\n        return calendermonthgroup\n    }\n    modechange(state) {\n        if (state === 'week') {\n            return (\n                <div className='calendercontext'>\n                    {this.weekmode()}\n                    {this.ShowModule()}\n                </div>\n            );\n        }\n        else {\n            // return (\n            //     <div>\n            //         {this.setgroup()}\n            //     </div>\n            // );\n            return this.setgroup()\n        }\n    }\n\n    SelectDatepickertype() {\n        const { MonthPicker } = DatePicker;\n        if (this.state.calendermode === 'month') {\n            return (\n                <MonthPicker placeholder=\"請選擇月份\" />\n            );\n        }\n        else {\n            return (\n                <DatePicker placeholder={['請選擇時間']} />\n            );\n        }\n    }\n    render() {\n        const { Option } = Select;\n        // const localday = new Date().getTime()\n        // function compareday(days) {\n        //     if (new Date(days).getTime() > new Date().getTime()) {\n        //         return true\n        //     }\n        //     return false\n        // }\n        return (\n            <div>\n                <t1 className='calendertitle'>行事曆</t1>\n                <div className='calendercontrol'>\n                    {this.SelectDatepickertype()}\n                    <Select defaultValue={this.state.calendermode} onChange={this.handleChange}>\n                        <Option value=\"week\">週</Option>\n                        <Option value=\"month\">月</Option>\n                    </Select>\n                </div>\n                {this.modechange(this.state.calendermode)}\n            </div>\n        );\n    }\n}\n\nexport default Calender\n","import React, { Component } from 'react';\nimport Notice from './Notice'\nimport Bedsidecard from './Bedsidecard'\nimport Scheduletodo from './Scheduletodo'\nimport Calender from './Calender'\nimport './Scheduleview.scss'\n\nclass Scheduleview extends Component {\n    render() {\n        function monthformat(month) {\n            return month + 1\n        }\n        function dateformat(time) {\n            return new Date(time).getFullYear() + \"-\" + monthformat(new Date(time).getMonth()) + \"-\" + new Date(time).getDate()\n        }\n        function exporttime(time) {\n            if (time === null) {\n                return \"--\"\n            }\n            else {\n                return dateformat(time)\n            }\n        }\n        const { caseinfo } = this.props\n        const time = new Date().getTime()\n\n        console.log(caseinfo)\n        return (\n            <div>\n                <div style={{ marginBottom: \"5px\" }}>\n                    <centerstyle>\n                        <div className='scheduletitle'>轉入時間:{dateformat(time)}/轉出時間\b:{exporttime(null)}</div>\n                    </centerstyle>\n                    <div className='boxshadow'></div>\n                </div>\n                <div className='schedulelayout'>\n                    <Bedsidecard caseinfo={caseinfo}></Bedsidecard>\n                    <Notice caseinfo={caseinfo}></Notice>\n                    <Calender caseinfo={caseinfo}></Calender>\n                    <Scheduletodo caseinfo={caseinfo}></Scheduletodo>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Scheduleview\n","import React, { Component } from 'react';\nimport Patientinfo from './Patientviewinfo'\nimport { Select, Modal } from 'antd';\nimport { bednumberformat, gender, birthdayweeks } from '../Function/Wardbedfunction'\nimport { Tabs } from 'antd';\nimport Crosssectionlayout from './CrossSectionView/Crosssectionlayout'\nimport Chroniclelayout from './ChronicleView/Chroniclelayout'\nimport Flowsheetlayout from './FlootSheetView/Flootsheetlayout'\nimport Examreport from './ExamReport/ExamReport'\nimport Orderview from './Orderview/Orderview'\nimport Noteview from './NoteView/Note'\nimport RTview from './RT/RTview'\nimport Nurtionview from './Nurtion/Nurtion'\nimport Infectionview from './Infection/Infection'\nimport Scheduleview from './Schedule/Scheduleview'\nimport * as ApiProvider from '../API/ApiProvider'\nimport X2JS from 'x2js';\nimport moment from 'moment';\nimport * as WardState from '../Function/Wardstate'\n\nclass Patientviewlayout extends Component {\n    state = {\n        TYPE: this.props.location.TYPE,\n        PBASINGNINFO: [],\n        PDOCNEW: [],\n        REMARK: [],\n        PLOC: [],\n        QMNC: [],\n        QENT: [],\n        QTWER: [],\n        tabstring: \"時間點檢視\",\n        visible: false,\n        PLOCSTART: null\n        // TYPE: this.props.location.TYPE,\n        // PBASINGNINFO: SimData.PBASIGNINFO,\n        // PDOCNEW: SimData.PDOCNEW,\n        // REMARK: SimData.REMARK,\n        // PLOC: SimData.PLOC,\n        // QMNC: SimData.QMNC,\n        // QTWER: SimData.QTWER,\n        // tabstring: \"時間點檢視\",\n        // visible: false,\n    }\n    componentDidMount() {\n        // const BEDNUMBER = Number(this.props.location.state.BEDNUMBER)\n        const CASEID = this.props.location.state.CASEID\n        const HISID = this.props.location.state.HISID\n        const PBASINFO = ApiProvider.getTablePBASINFO(HISID)\n            .then(data => {\n                return {\n                    PBASINGNINFO: data.data,\n                }\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n        const PDOCNEW = ApiProvider.getTablePDOCNEW(CASEID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getTablePDOCNEW NG \" + JSON.stringify(err));\n            });\n        const PLOC = ApiProvider.getTablePLOC(CASEID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n        // const pcaslist = ApiProvider.getStoredProcedurePCASELIST(HISID,\"DOC3924B\",\"E\")\n        Promise.all([PBASINFO, PDOCNEW, PLOC])\n            .then(result => {\n                console.log(\"API DATA = \" + result)\n                this.nis_status_shange(CASEID, result[0].PBASINGNINFO);\n                const PLOCLIST = result[2]\n                const PLOCTR = PLOCLIST[PLOCLIST.length - 1]\n                const PLOCSTART = PLOCLIST[0]\n                return {\n                    PBASINGNINFO: result[0].PBASINGNINFO,\n                    PDOCNEW: result[1],\n                    PLOC: PLOCTR,\n                    PLOCSTART: PLOCSTART\n                }\n            })\n            .then(result => {\n                this.setState({\n                    PBASINGNINFO: result.PBASINGNINFO,\n                    PDOCNEW: result.PDOCNEW,\n                    PLOC: result.PLOC,\n                    PLOCSTART: result.PLOCSTART\n                })\n            })\n    }\n\n    selectchange = (HBEDNUMBER) => {\n        const datalist = this.state.HBEDLIST\n        const filterdata = datalist.filter(function (info, index, array) {\n            return parseInt(info.HBEDNO) === HBEDNUMBER\n        })\n        if (filterdata.length === 0) {\n            return null\n        }\n        else {\n            const source = filterdata[0]\n            const HISID = source.PHISTNUM\n            const CASEID = source.PCASENO\n            const PBASINFO = ApiProvider.getTablePBASINFO(HISID)\n                .then(data => {\n                    return {\n                        PBASINGNINFO: data.data,\n                    }\n                })\n                .catch(err => {\n                    console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n                });\n            const PDOCNEW = ApiProvider.getTablePDOCNEW(CASEID)\n                .then(data => {\n                    return data.data\n                })\n                .catch(err => {\n                    console.log(\"Andy test getTablePDOCNEW NG \" + JSON.stringify(err));\n                });\n            const PLOC = ApiProvider.getTablePLOC(CASEID)\n                .then(data => {\n                    const matadata = data.data\n                    return matadata[matadata.length - 1]\n                })\n                .catch(err => {\n                    console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n                });\n            Promise.all([PBASINFO, PDOCNEW, PLOC])\n                .then(result => {\n                    this.nis_status_shange(CASEID, result[0].PBASINGNINFO);\n                    return {\n                        PBASINGNINFO: result[0].PBASINGNINFO,\n                        // BEDNUMBER: result[0].BEDNUMBER,\n                        PDOCNEW: result[1],\n                        PLOC: result[2]\n                    }\n                })\n                .then(result => {\n                    this.setState({\n                        PBASINGNINFO: result.PBASINGNINFO,\n                        PDOCNEW: result.PDOCNEW,\n                        PLOC: result.PLOC\n                    })\n                })\n                .catch(err => {\n                    console.log(\"error\")\n                })\n\n        }\n    }\n\n    nis_status_shange(CASEID, PBASINGNINFO) {\n        const xm2 = new X2JS()\n        ApiProvider.getQENT(CASEID)\n            .then(data => {\n                this.setState({\n                    QENT: WardState.XM2JSON(data.data)\n                })\n            })\n            .catch(err => { console.log(err) })\n        ApiProvider.getQMNC(CASEID)\n            .then(data => {\n                // const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                this.setState({\n                    QMNC: WardState.XM2JSON(data.data)\n                })\n                const starttime = moment(PBASINGNINFO.PBIRTHDT, 'YYYYMMDD').format(\"YYYYMMDDHHmm\")\n                const endtime = moment().format('YYYYMMDDHHmm')\n                ApiProvider.getQTWPER(CASEID, starttime, endtime)\n                    .then(data => {\n                        const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                        var weightlist = []\n                        for (let index = 0; index < parsedata.length; index++) {\n                            const element = parsedata[index];\n                            if (element.type === 'TW') {\n                                weightlist.push(element)\n                            }\n                        }\n                        this.setState({ QTWER: weightlist })\n                    })\n                    .catch(err => {\n                        console.log(\"Andy test getQTWPER NG \" + JSON.stringify(err));\n                    });\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n    }\n\n\n\n\n    onChange = (activkey) => {\n        this.setState({\n            tabstring: activkey\n        }\n        )\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    OptionSelectRender() {\n        function addzero(value) {\n            if (value < 10) {\n                return \"0\" + value\n            }\n            return value\n        }\n        function optionselect(LISTBED) {\n            const dataoption = LISTBED.map(function (info, index, array) {\n                return (\n                    <Option key={index} value={Number(info.HBEDNO)}>病床{addzero(parseInt(info.HBEDNO))}</Option>\n                );\n            })\n            return dataoption\n\n        }\n        const BedList = this.props.location.state.source\n        console.log(BedList)\n        const { Option } = Select;\n        const BEDNUMBER = Number(this.props.location.state.BEDNUMBER)\n        if (BedList !== null) {\n            return (\n                <Select defaultValue={Number(BEDNUMBER)} style={{ width: 120 }} onChange={this.selectchange}>\n                    {optionselect(BedList)}\n                </Select>\n            );\n        }\n        return null\n    }\n    fixpatientDate = (data) => {\n        const transdata = {\n            'cause': '住院原因',\n            'car_pho': '主要照顧者電話',\n            'care': '主要照顧者',\n            'con_1': '聯絡人1',\n            'con_p11': '聯絡人1電話',\n            'con_2': '聯絡人2',\n            'con_p21': '聯絡人2電話',\n            'dvs': '住院時生命徵象',\n            'habit': '飲食狀況',\n            'oxy': '住院時氧和評估',\n            'h_val': '住院時頭圍',\n            'b_val': '住院時胸圍',\n            'tall': '住院時身高',\n            'weight': '住院時體重'\n        }\n\n        const patientDate = []\n\n        for (let index in transdata) {\n            if (data[index] !== \"\") {\n                patientDate.push([transdata[index], data[index]])\n            }\n        }\n\n        return patientDate\n    }\n    render() {\n\n        const USERDATA = this.state.PBASINGNINFO\n        if (USERDATA.length === 0) {\n            return null\n        }\n        const BEDNUMBER = Number(this.props.location.state.BEDNUMBER)\n        const CASEID = this.props.location.state.CASEID\n        const HISID = this.props.location.state.HISID\n        const DOCLIST = this.state.PDOCNEW\n        const MainDoc = WardState.Doc(DOCLIST, \"B\")\n        const remark = this.state.REMARK.context\n        const ploc = this.state.PLOC\n        const transintime = ploc.PLOCTM.toString()\n        const transindt = ploc.PLOCDT.toString()\n        const transinid = \"NICU\" + transindt + transintime\n        const qmnc = this.state.QMNC\n        const bornWeeks = qmnc.weeks\n        const bornDays = qmnc.days\n        const wetghtList = this.state.QTWER\n        const { TabPane } = Tabs;\n        const selectrender = this.OptionSelectRender()\n        const caseinfo = {\n            \"HISID\": HISID,\n            \"CASEID\": CASEID,\n            \"WEEK_BORN\": bornWeeks,\n            \"DAY_BORN\": bornDays,\n            \"TRANSINID\": transinid,\n            \"TRANSINDT\": transindt,\n            \"WEIGHT\": wetghtList,\n            \"PBASINGNINFO\": USERDATA,\n            \"PLOCSTART\": this.state.PLOCSTART\n        }\n        const patientDetail = this.fixpatientDate(this.state.QENT)\n\n        return (\n            <div>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: 'center', height: \"40px\" }}>\n                    <t2>住院病人資訊 > 病床{bednumberformat(BEDNUMBER)} > {this.state.tabstring}</t2>\n                    {selectrender}\n                </div>\n                <div className='infolayout'>\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(7,auto)\", gridColumnGap: \"10px\" }}>\n                            <div>\n                                <t2>病床{bednumberformat(Number(BEDNUMBER))}</t2>\n                                <t2 style={{ margin: \"0px 5px\" }}>{USERDATA.PNAMEC.toString().trim()}</t2>\n                                <t2>{birthdayweeks(moment(USERDATA.PBIRTHDT, \"YYYYMMDD\").format(\"YYYY/MM/DD\"))}週歲</t2>\n                            </div>\n                            <t2>性別:{gender(USERDATA.PSEX)}</t2>\n                            <t2>病歷號碼:{HISID}</t2>\n                            <t2>住院序號:{CASEID}</t2>\n                            <t2>主治醫師:{MainDoc.toString().trim()}醫師</t2>\n                            <t2>備註:{remark}</t2>\n                            <t2 style={{ color: \"blue\", textDecoration: \"underline\", cursor: \"pointer\" }} onClick={this.showModal}>病人基本資料</t2>\n                            <Modal\n                                title=\"病人基本資料\"\n                                visible={this.state.visible}\n                                onOk={this.handleOk}\n                                onCancel={this.handleCancel}\n                                width={800}\n                                footer={null}>\n                                <Patientinfo patientDetail={patientDetail}></Patientinfo>\n                            </Modal>\n                        </div>\n                    </div>\n                </div>\n                <Tabs defaultActiveKey={this.state.tabstring} tabPosition={'top'} onChange={this.onChange}>\n                    <TabPane tab=\"時間點檢視\" key=\"時間點檢視\">\n                        <Crosssectionlayout parentDateCallback={this.callback} caseinfo={caseinfo}></Crosssectionlayout>\n                    </TabPane>\n                    <TabPane tab=\"時間軸檢視\" key=\"時間軸檢視\">\n                        <Chroniclelayout caseinfo={caseinfo}></Chroniclelayout>\n                    </TabPane>\n                    <TabPane tab=\"輸出入細節\" key=\"輸出入細節\">\n                        <Flowsheetlayout caseinfo={caseinfo}></Flowsheetlayout>\n                    </TabPane>\n                    <TabPane tab=\"檢驗及報告\" key=\"檢驗及報告\">\n                        <Examreport caseinfo={caseinfo}>></Examreport>\n                    </TabPane>\n                    <TabPane tab=\"醫囑及藥囑\" key=\"醫囑及藥囑\">\n                        <Orderview caseinfo={caseinfo}>></Orderview>\n                    </TabPane>\n                    <TabPane tab=\"跨團隊紀錄\" key=\"跨團隊紀錄\">\n                        <Noteview caseinfo={caseinfo}>></Noteview>\n                    </TabPane>\n                    <TabPane tab=\"呼吸評估\" key=\"呼吸評估\">\n                        <RTview caseinfo={caseinfo}>></RTview>\n                    </TabPane>\n                    <TabPane tab=\"營養評估\" key=\"營養評估\">\n                        <Nurtionview caseinfo={caseinfo}>></Nurtionview>\n                    </TabPane>\n                    <TabPane tab=\"感染評估\" key=\"感染評估\">\n                        <Infectionview caseinfo={caseinfo}>></Infectionview>\n                    </TabPane>\n                    <TabPane tab=\"行事曆及註記\" key=\"行事曆及註記\">\n                        <Scheduleview caseinfo={caseinfo}>></Scheduleview>\n                    </TabPane>\n                </Tabs>\n            </div >\n        );\n    }\n}\n\nexport default Patientviewlayout;\n","import React, { Component } from 'react';\nimport { Table, Input, Select, Button, Modal } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider';\nconst { confirm } = Modal;\n\nclass Powersetting extends Component {\n    constructor(props) {\n        super();\n\n        this.addUserdata = this.addUserdata.bind(this)\n        this.adduserhandleChange = this.adduserhandleChange.bind(this)\n    }\n\n    state = {\n        MouseClick: 0,\n        name: undefined,\n        role: undefined,\n        adduser: undefined,\n        userList: [],\n        power: ['僅可瀏覽平台、無法瀏覽管理者', '可瀏覽和編輯平台筆記、無法瀏覽管理者', '可瀏覽和編輯平台筆記、可瀏覽權限設定畫面', '可管理所有角色帳號、可瀏覽和編輯平台筆記、可瀏覽權限設定、系統摘要', '可管理所有角色帳號、可瀏覽和編輯平台筆記、可瀏覽權限設定、系統摘要、歷史畫面','僅可瀏覽權限設定、系統摘要'],\n        powerName: ['唯讀使用者', '一般使用者', '一般使用者管理員', '系統設定管理員', '超級管理者','系統管理者'],\n        visible: false,\n        radioValue: 0,\n        pwdRadio: true,\n        inputUsername: '',\n        inputPassword: '',\n        inputName: '',\n        inputDoctorid: '',\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        this.nameChange = this.nameChange.bind(this)\n        this.queryUserdata = this.queryUserdata.bind(this)\n        this.inputuserName = this.inputuserName.bind(this)\n        this.inputPassword = this.inputPassword.bind(this)\n        this.inputName = this.inputName.bind(this)\n        this.inputDoctorid = this.inputDoctorid.bind(this)\n\n        ApiProvider.getAlluser()\n            .then(data => {\n                this.setState({ userList: data.data })\n            })\n            .catch(err => { })\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n\n    radioOnChange = e => {\n        this.setState({\n            radioValue: e.target.value,\n        }, () => {\n            if (this.state.radioValue === 1) {\n                this.setState({\n                    pwdRadio: true,\n                })\n                console.log(this.state.radioValue)\n            } else if (this.state.radioValue === 0) {\n                this.setState({\n                    pwdRadio: false,\n                })\n                console.log(this.state.radioValue)\n            }\n        })\n    };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    MouseClickTable(record) {\n        this.setState({\n            MouseClick: record\n        })\n    }\n\n    queryUserdata() {\n        if (this.state.role !== undefined && this.state.name !== undefined) {\n            ApiProvider.searchUser(this.state.name, this.state.role)\n                .then(data => {\n                    this.setState({ userList: data.data })\n                })\n                .catch(err => { })\n        }\n    }\n\n    addUserdata() {//sso 只剩下4種角色 其他先傳空直\n        ApiProvider.register(this.state.inputName, '', this.state.adduser, this.state.inputUsername, 'none')\n            .then(data => {\n                ApiProvider.getAlluser()\n                    .then(data => {\n                        this.setState({ userList: data.data, inputUsername: '', inputPassword: '', inputName: '', inputDoctorid: '' })\n                    })\n                    .catch(err => { })\n            })\n            .catch(err => { })\n        this.setState({\n            visible: false,\n        });\n    }\n\n\n    showDeleteConfirm(name, account, role, roleString) {\n        const set_State = this.setState.bind(this)\n        confirm({\n            title: '請問您確定要刪除此帳號嗎?',\n            content: <div>姓名：{name}<br />角色：{roleString}<br />帳號：{account}</div>,\n            okText: 'Yes',\n            okType: 'danger',\n            cancelText: 'No',\n            onOk() {\n                ApiProvider.deleteUser(name, role, account).then(data => {\n                    ApiProvider.getAlluser()\n                        .then(data => {\n                            set_State({ userList: data.data })\n                        })\n                        .catch(err => { })\n                }).catch(err => { })\n            },\n            onCancel() {\n            },\n        });\n    }\n\n    EditStyle(key, name, account, role, roleString) {\n        if (key === this.state.MouseClick) {\n            return (\n                <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gridColumnGap: '10px' }}>\n                    <div>\n                        <Button onClick={this.showDeleteConfirm.bind(this, name, account, role, roleString)} type=\"dashed\">\n                            刪除\n                        </Button>\n                    </div>\n                </div>\n            );\n        }\n        else return null\n    }\n\n    handleChange(value) {\n        this.setState({ role: value })\n    }\n\n    adduserhandleChange(value) {\n        this.setState({ adduser: value })\n    }\n\n    nameChange(event) {\n        this.setState({ name: event.target.value })\n    }\n\n    inputuserName(event) {\n        this.setState({ inputUsername: event.target.value })\n    }\n\n    inputPassword(event) {\n        this.setState({ inputPassword: event.target.value })\n    }\n\n    inputName(event) {\n        this.setState({ inputName: event.target.value })\n    }\n\n    inputDoctorid(event) {\n        this.setState({ inputDoctorid: event.target.value })\n    }\n\n    Searchbar() {\n        const { Option } = Select;\n        const { Search } = Input;\n        return (\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <div style={{ fontSize: '16px' }}>\n                        角色:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Select placeholder='選擇角色' style={{ width: 150 }} onChange={this.handleChange.bind(this)}>\n                            <Option value={0}>唯讀使用者</Option>\n                            <Option value={1}>一般使用者</Option>\n                            <Option value={2}>一般使用者管理員</Option>\n                            <Option value={3}>系統設定管理員</Option>\n                            {/*<Option value={4}>超級管理者</Option>*/}\n                        </Select>\n                    </div>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        姓名:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Search placeholder=\"輸入個案姓名\" onChange={this.nameChange} value={this.state.name} onSearch={this.queryUserdata}></Search>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    render() {\n \n        const columns = [\n            {\n                title: '編號',\n                dataIndex: 'id',\n                key: 'id',\n                width: \"10%\"\n            },\n            {\n                title: '姓名',\n                dataIndex: 'name',\n                key: 'name',\n                width: \"10%\"\n            },\n            {\n                title: '醫師帳號',\n                dataIndex: 'account',\n                key: 'account',\n                width: \"12%\"\n            },\n            {\n                title: '角色',\n                dataIndex: 'role',\n                key: 'role',\n                width: \"10%\"\n            },\n            {\n                title: '權限',\n                dataIndex: 'power',\n                key: 'power',\n                width: \"40%\"\n            },\n            {\n                dataIndex: 'clickstate',\n                key: 'clickstate',\n                width: \"7%\"\n            }\n        ];\n\n        const userData = this.state.userList.map((data, index) => {\n            let roleString = ''\n            let powerString = ''\n\n            roleString = this.state.powerName[data.role]\n            powerString = this.state.power[data.role]\n\n            return [\n                {\n                    key: ++index,\n                    id: index,\n                    name: data.name,\n                    role: roleString,\n                    power: powerString,\n                    account: data.username,\n                    doctorid: data.doctorid,\n                    clickstate: this.EditStyle(index, data.name, data.username, data.role, roleString)\n                }\n            ]\n        })\n        let myNewArray = [].concat.apply([], userData);\n        const { Option } = Select;\n        return (\n            <div>\n                <div style={{ display: \"flex\", justifyContent: 'space-between', alignItems: 'center' }}>\n                    {this.Searchbar()}\n                    <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                        <Button style={{ width: \"100%\" }} onClick={this.showModal}>新增帳號</Button>\n                        <Modal\n                            title=\"新增帳號\"\n                            visible={this.state.visible}\n                            onOk={this.addUserdata}\n                            onCancel={this.handleCancel}\n                            width=\"570px\"\n                        >\n                            <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                                {/*<Radio.Group onChange={this.radioOnChange.bind(this)}>\n                                    <Radio value={0}>一般帳號</Radio>\n                                    <Radio value={1}>SSO帳號</Radio>\n                                </Radio.Group>*/}\n                            </div>\n                            <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\", marginTop: \"10px\" }}>\n                                <div style={{ marginLeft: \"10px\" }}>\n                                    醫師帳號：\n                                <Input id=\"username\" value={this.state.inputUsername} onChange={this.inputuserName} placeholder=\"輸入帳號\" style={{ width: '120px' }} />\n                                </div>\n                                {/*<div style={{ marginLeft: \"10px\" }}>\n                                    密碼：\n                                <Input type=\"password\" id=\"password\" value={this.state.inputPassword} onChange={this.inputPassword} disabled={this.state.pwdRadio} placeholder=\"輸入密碼\" style={{ width: '120px' }} />\n                                </div>*/}\n                                <div style={{ marginLeft: \"10px\" }}>\n                                    姓名：\n                                <Input id=\"name\" placeholder=\"輸入姓名\" value={this.state.inputName} onChange={this.inputName} style={{ width: '120px' }} />\n                                </div>\n                            </div>\n                            {/*<div style={{ display: \"flex\", justifyContent: 'left', alignItems: \"left\", marginTop: \"10px\", marginLeft: \"13px\" }}>\n                                <div style={{ marginLeft: \"0px\" }}>\n                                    醫師編號：\n                                <Input id=\"doctorid\" disabled={this.state.pwdRadio} placeholder=\"請輸入醫師編號\" value={this.state.inputDoctorid} onChange={this.inputDoctorid} style={{ width: '160px' }} />\n                                </div>\n                            </div>*/}\n                            <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\", marginTop: \"10px\", marginLeft: \"13px\" }}>\n                                <div style={{ marginLeft: \"0px\" }}>\n                                    角色：{this.state.pwdRadio ?\n                                        <Select placeholder='選擇角色' style={{ width: 150 }} onChange={this.adduserhandleChange.bind(this)}>\n                                            <Option value={0}>唯讀使用者</Option>\n                                            <Option value={1}>一般使用者</Option>\n                                            <Option value={2} disabled={this.state.powerLogin >= 3 ? false : true}>一般使用者管理員</Option>\n                                        </Select> :\n                                        <Select placeholder='選擇角色' style={{ width: 150 }} onChange={this.adduserhandleChange.bind(this)}>\n                                            <Option value={3}>系統設定管理員</Option>\n                                        </Select>}\n                                </div>\n                            </div>\n                            <div>\n\n                            </div>\n                        </Modal>\n                    </div>\n                </div>\n                <div style={{ marginTop: '20px' }}>\n                    <Table columns={columns} dataSource={myNewArray} onRow={record => {\n                        return {\n                            onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                            onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                        };\n                    }} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Powersetting;","import React, { Component } from 'react';\nimport { Table } from 'antd';\n\nclass Systemlogtable extends Component {\n    state = {\n        MouseClick: 0\n    }\n\n    MouseClickTable(record) {\n        this.setState({\n            MouseClick: record\n        })\n    }\n\n    render() {\n\n        const powerName = ['唯讀使用者', '一般使用者', '一般使用者管理員', '系統設定管理員', '超級管理者']\n        const loginlog_table = this.props.loginlogList.map(\n            (info, index) => {\n                let managerName = ''\n                let dateTime = info.time.split(\"T\")[0] + ' ' + info.time.split(\"T\")[1].split(\".\")[0]\n\n                managerName = powerName[info.role]\n\n                return {\n                    key: index,\n                    time: dateTime,\n                    event: 'User ' + info.name + '(' + managerName + ') login system'\n                }\n            }\n        )\n\n        const apilog_table = this.props.apilogList.map((data, index) => {\n            if (data !== null) {\n                let date = data.split(\"- -\")[1].split(\"]\")[0].split(\"[\")[1].split(\" \")[0].split(\"/\")\n                const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n                for (let j = 0; j < months.length; j++) {\n                    if (date[1] === months[j]) {\n                        date[1] = months.indexOf(months[j]) + 1\n                    }\n                }\n                if (date[1] < 10) {\n                    date[1] = '0' + date[1]\n                }\n                let time = date[2].split(\":\")[0] + \"-\" + date[1] + \"-\" + date[0] + \" \" + date[2].split(\":\")[1] + \":\" + date[2].split(\":\")[2] + \":\" + date[2].split(\":\")[3]\n                let content = data.split(\"- -\")[1].split(\"]\")[1]\n\n                return {\n                    key: index,\n                    time: time,\n                    event: content\n                }\n            }\n            return null\n        })\n\n        const columns = [\n            {\n                title: '記錄時間',\n                dataIndex: 'time',\n                key: 'time',\n                width: \"1%\"\n            },\n            {\n                title: '事件',\n                dataIndex: 'event',\n                key: 'event',\n                width: \"10%\"\n            }\n        ]\n\n        return (\n            <div style={{ marginTop: '20px' }}>\n                {\n                    this.props.optionValue ? <Table columns={columns} dataSource={apilog_table} onRow={record => {\n                        return {\n                            onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                            onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                        }\n                    }} pagination={{\n                        onChange: (page, pageSize) => {\n                            //console.log('current page: ', page)\n                            this.props.getPages(page)\n                        }\n                    }} /> :\n                        <Table columns={columns} dataSource={loginlog_table} onRow={record => {\n                            return {\n                                onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                                onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                            }\n                        }} pagination={{\n                            onChange: (page, pageSize) => {\n                                //console.log('current page: ', page)\n                                this.props.getPages(page)\n                            }\n                        }} />\n                }\n            </div>\n        )\n    }\n}\n\nexport default Systemlogtable","import React, { Component } from 'react';\nimport { Progress, Select, DatePicker } from 'antd';\nimport Systemlogtable from './Systemlogtable'\nimport * as ApiProvider from '../API/ApiProvider';\n\nclass Systemlog extends Component {\n\n    state = { startTime: \"\", endTime: \"\", totalSpace: 0, usingSpace: 0, percent: 0, option: 0, loginlogList: [], apilogList: [], page: 1 }\n\n    componentDidMount() {\n        ApiProvider.getSpace()\n            .then(data => {\n                const totalSpace = data.data[0].total / 1024 / 1024 / 1024\n                const usingSpace = (data.data[0].total - data.data[0].unuse) / 1024 / 1024 / 1024\n                const percent = (usingSpace / totalSpace) * 100\n                this.setState({ totalSpace: totalSpace.toFixed(2), usingSpace: usingSpace.toFixed(2), percent: percent.toFixed(2) })\n            })\n            .catch(err => { })\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    onChange(date, dateString) {\n        this.setState({ startTime: dateString[0], endTime: dateString[1] }, () => {\n            if (this.state.option === 0) {\n                this.queryLoginLogdata()\n            } else if (this.state.option === 1) {\n                this.queryApiLogdata()\n            }\n        });\n    }\n\n    queryLoginLogdata() {\n        if (this.state.startTime !== \"\" && this.state.endTime !== \"\") {\n            const st = new Date(this.state.startTime.split('-')[0], this.state.startTime.split('-')[1] - 1, this.state.startTime.split('-')[2]).toISOString().split('.')[0];\n            const et = new Date(this.state.endTime.split('-')[0], this.state.endTime.split('-')[1] - 1, this.state.endTime.split('-')[2]).toISOString().split('.')[0];\n\n            ApiProvider.getLoginlog(st, et)\n                .then(data => {\n                    this.setState({ loginlogList: data.data, apilogList: [] })\n                })\n                .catch(err => { })\n        }\n    }\n\n    queryApiLogdata() {\n        if (this.state.startTime !== \"\" && this.state.endTime !== \"\") {\n            ApiProvider.getApilog(this.state.startTime)\n                .then(data => {\n                    this.setState({ apilogList: data.data, loginlogList: [] })\n                })\n                .catch(err => { })\n        }\n    }\n\n    getPages(pages) {\n        this.setState({ page: pages },()=>{\n            //console.log('current page: ', this.state.page)\n        })     \n    }\n\n    handleChange(value) {\n        this.setState({ option: value })\n    }\n    render() {\n        const { Option } = Select;\n        const { RangePicker } = DatePicker;\n        const onChange = this.onChange.bind(this);\n\n        return (\n            <div>\n                <div style={{ fontSize: '22px' }}>系統空間使用狀況</div>\n                <div style={{ marginTop: \"10px\" }}><Progress percent={this.state.percent} showInfo={false} /></div>\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginTop: \"10px\" }}>\n                    <div>\n                        <div>已使用空間/總空間</div>\n                        <div>{this.state.usingSpace}GB({this.state.percent}%)/{this.state.totalSpace}GB</div>\n                    </div>\n                    <div>\n                        <div>收案中的個案資料0.9GB(10.5%)</div>\n                        <div>0.9GB(10.5%)</div>\n                    </div>\n                </div>\n                <div style={{ marginTop: '20px' }}>\n                    <div style={{ fontSize: '22px' }}>Event Log</div>\n                    <div style={{ marginTop: \"10px\" }}>\n                        <Select placeholder='選擇log' style={{ width: 200 }} onChange={this.handleChange.bind(this)}>\n                            <Option value={0}>Login log</Option>\n                            <Option value={1}>API access log</Option>\n                        </Select>\n                        <RangePicker onChange={onChange} style={{ marginLeft: \"10px\", width: 400 }} />\n                    </div>\n                    <div style={{ marginTop: '10px' }}>\n                        <Systemlogtable loginlogList={this.state.loginlogList} apilogList={this.state.apilogList} optionValue={this.state.option} getPages={this.getPages.bind(this)} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Systemlog","import React, { Component } from 'react';\nimport { Tabs } from 'antd';\nimport Powersetting from '../Systemgroup/powersetting'\nimport Systemlog from '../Systemgroup/Systemlog'\n// import Warningmanage from '../Systemgroup/Warningmanage'\n\n\nclass Systemcontrol extends Component {\n    state = {\n        powerLogin: 0\n    }\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    render() {\n\n        const { TabPane } = Tabs;\n        const bollogin = this.state.powerLogin > 2\n        return (\n            <div style={{ paddingLeft: \"24px\", paddingRight: \"24px\" }}>\n                <div style={{ fontSize: \"22px\", height: '50px', lineHeight: \"50px\" }}>系統設定</div>\n                <Tabs defaultActiveKey=\"5\" onChange={console.log(\"click\")} å>\n                    <TabPane tab=\"權限設定\" key=\"1\" >\n                        <Powersetting />\n                    </TabPane>\n                    {\n                        bollogin && <TabPane tab=\"系統摘要\" key=\"2\" >\n                            <Systemlog />\n                        </TabPane>\n                    }\n                    {/*<TabPane tab=\"裝置連線狀態管理\" key=\"3\">\n                    </TabPane> \n                    <TabPane tab=\"病人資料狀態管理\" key=\"3\">\n                    </TabPane>                  \n                    <TabPane tab=\"警示管理\" key=\"5\">\n                        <Warningmanage/>\n                    </TabPane>*/}\n                </Tabs>\n            </div>\n        );\n    }\n}\n\nexport default Systemcontrol;","import React, { Component } from 'react';\nimport './Layout.scss';\nimport Sidermenu from './Sidermenu';\nimport Bedview from '../Wardview/Bedinfo/Bedview'\nimport Historyview from '../Content/Historyview'\nimport Patientviewlayout from '../Patientview/Patientviewlayout'\nimport Systemcontrol from '../Content/Systemcontrol'\nimport { Route, Switch, Link } from 'react-router-dom';\nimport { yyyymmddformat, weekdateformat } from '../Function/Timeformat'\nimport { Icon } from 'antd'\n\nclass Layoutframe extends Component {\n    onClickLogout() {\n        sessionStorage.clear();\n    }\n    render() {\n        const UsrName = sessionStorage.getItem('user');\n        const url_path = this.props.location.pathname\n        return (\n            <div style={{ height: \"100vh\" }}>\n                <div className=\"header\">\n                    {/*eslint-disable-next-line*/}\n                    <div style={{ display: 'flex', alignItems: 'center', fontweight: \"default\", fontsize: \"20px\" }}>\n                        <t1>北榮NICU智慧醫療系統</t1>\n                        <Sidermenu path={url_path} routes={this.props.route}></Sidermenu>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"10px\" }}>\n                        <t3 style={{ color: 'white' }}>{UsrName}醫師 {yyyymmddformat(new Date())} {weekdateformat(new Date())}</t3>\n                        <Link to=\"/Login\" onClick={() => this.onClickLogout()}>\n                            <Icon style={{ color: \"white\" }} type=\"logout\" />\n                        </Link>\n                    </div>\n                </div>\n                <div className=\"content\">\n                    <Switch>\n                        <Route path={`${this.props.match.path}/ward`} component={Bedview} />\n                        <Route path={`${this.props.match.path}/history`} component={Historyview} />\n                        <Route path={`${this.props.match.path}/system`} component={Systemcontrol} />\n                        <Route path={`${this.props.match.path}/patient`} component={Patientviewlayout} />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Layoutframe;\n","import React, { Component } from 'react';\nimport { Button } from 'antd';\nimport { Redirect } from 'react-router-dom'\nimport { Input } from 'antd'\nimport * as ApiProvider from '../API/ApiProvider';\n\n\nclass Loginview extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: false,\n            permission: true,\n            statusstring: null\n        }\n        this.setRedirect = this.setRedirect.bind(this);   //把元件中的this繫結到handleClick方法中，這樣就會保持this一致          \n    };\n\n    componentDidMount() {\n        window.addEventListener('keyup', e => {\n            console.log(\"check keyCode\")\n            e.keyCode === 13 && this.setRedirect()\n        })\n    }\n\n    setRedirect = () => {\n        const account = document.getElementById(\"account\").value;\n        const password = document.getElementById(\"password\").value;\n        // const data = { username: account, password: password }\n        console.log(account, password)\n        ApiProvider.login(account, password)\n            .then(result => {\n                console.log(\"login OK \" + JSON.stringify(result));\n                const userData = result.data\n                const user = account\n                const role = userData[0].role\n                sessionStorage.setItem('user', user);\n                sessionStorage.setItem('role', role);\n                this.setState({\n                    redirect: true\n                })\n            })\n            .catch(err => {\n                console.log(\"login NG \" + JSON.stringify(err));\n                this.setState({\n                    permission: false,\n                    statusstring: \"帳號或密碼錯誤\"\n                })\n            });\n    }\n    renderRedirect = () => {\n        const login = sessionStorage.getItem('user');\n        const role = sessionStorage.getItem('role');\n        console.log(role)\n        if (login !== null) {\n            if (Number(role) === 5) {\n                return <Redirect from={\"/login\"} to={\"/nicu/system\"} />\n            }\n            return <Redirect from={\"/login\"} to={\"/nicu/ward/wardindex\"} />\n        }\n        // else if (login !== null) {\n        //     return <Redirect from={\"/login\"} to={\"/nicu\"} />\n        // }\n    }\n\n\n    render() {\n        return (\n            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"100vh\", width: \"100vw\", background: 'linear-gradient(to bottom, rgba(195, 239, 255, 1), rgba(46, 100, 164, 1))' }}>\n                {this.renderRedirect()}\n                <div style={{ display: 'flex', justifyContent: \"center\", alignItems: \"center\", flexWrap: \"wrap\" }}>\n                    <div style={{ color: \"white\", fontSize: \"26px\", textAlign: \"center\", width: \"100%\" }}>台北榮民總醫院 NICU智慧醫療系統</div>\n                    <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ width: \"350px\", height: \"250px\", borderRadius: \"4px\", backgroundColor: \"white\", textAlign: \"center\", padding: '25px', position: \"relative\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                                <div style={{ height: \"32px\", width: \"32px\", borderRadius: \"2px\", backgroundColor: \"rgba(46,100,164,1)\", color: \"white\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>L</div>\n                                <Input id=\"account\" style={{ marginLeft: \"20px\" }} placeholder=\"請輸入3270主機帳號\"></Input>\n                            </div>\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginTop: \"25px\" }}>\n                                <div style={{ height: \"32px\", width: \"32px\", borderRadius: \"2px\", backgroundColor: \"rgba(46,100,164,1)\", color: \"white\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>P</div>\n                                <Input type=\"password\" id=\"password\" style={{ marginLeft: \"20px\" }} placeholder=\"請輸入密碼\"></Input>\n                            </div>\n                            <Button style={{ width: \"280px\", backgroundColor: \"rgba(46, 100, 164, 1)\", color: \"white\", marginTop: \"70px\" }} onClick={this.setRedirect}>登入</Button>\n                            <div style={{ display: this.state.permission ? \"none\" : \"block\", color: \"red\", fontSize: \"1rem\" }}>{this.state.statusstring}</div>\n                        </div>\n                    </div>\n                    <div style={{ width: \"100%\", justifyContent: \"center\", alignItems: \"center\", display: \"flex\" }}>200206.005-T</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Loginview\n","import React from 'react';\nimport Homepage from './Homepage'\nimport './App.scss';\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\nimport Layoutframe from './Layout/Layout'\nimport Loginview from './Layout/Loginview'\nimport 'antd/dist/antd.css';\n\nfunction App() {\n  document.documentElement.style.fontSize = '14px'\n  return (\n    <BrowserRouter>\n      <Route exact path=\"/\" component={Homepage} />\n      <Redirect from={'/'} to={\"/login\"} />\n      <Route path=\"/nicu\" component={Layoutframe} />\n      <Route path=\"/login\" component={Loginview} />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/details.bc0482ca.svg\";"],"sourceRoot":""}