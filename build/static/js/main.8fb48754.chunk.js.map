{"version":3,"sources":["Image/svg/edit2.svg","Image/svg/filter.svg","Image/svg/file1.svg","Image/svg/file2.svg","Image/svg/Wardview.svg","Image/svg/Historyview.svg","Image/svg/Control.svg","Image/svg/delete.svg","Image/svg/dragdown.svg","Image/svg/RT.svg","Image/svg/calender.svg","Image/svg/calenderwhite.svg","Image/svg/ping.svg","Image/svg/pingwhite.svg","Image/svg/Edit.svg","Image/svg/Chooseedit.svg","Homepage.js","Layout/Sidermenu.js","Function/Wardstate.js","API/ApiProvider.js","API/ApiGithub.js","Wardview/Wardcardstatus.js","Wardview/WardCardvalue-k.js","Function/Wardbedfunction.js","Wardview/Wardcard/Wardcarddetail.js","Wardview/Wardcard/UnpreviewWardCardDetail.js","Commonfunction.js","Wardview/Wardnote.js","Wardview/Bedinfo.js","Function/Timeformat.js","Patientview/CrossSectionView/Labview.js","Wardview/WardBedinformation.js","Module/Schedule_event.js","Wardview/Wardschedule.js","Wardview/Wardinfoindex.js","jsonResponse.js","Wardview/Wardlifechart.js","Wardview/Wardmonthafter.js","Wardview/Wardgrewchart.js","Patientview/Schedule/Notice.js","Patientview/CrossSectionView/Labviewitem.js","Function/FiliterReg.js","Wardview/Wardcardvitalsign.js","Wardview/Wardchart.js","Wardview/Wardunfousercheckbox.js","Patientview/Patientviewinfo.js","Wardview/Wardinfouser-k.js","Wardview/Bedinfo/Bedview.js","Content/Historyview.js","Patientview/CrossSectionView/Crossectionvitalsignchart.js","Patientview/CrossSectionView/Warningsettinglist.js","Patientview/CrossSectionView/Addnewwaring.js","Patientview/CrossSectionView/Vitalsign.js","Patientview/Controlbar.js","Module/iopage.js","Patientview/CrossSectionView/Crossection_io.js","Patientview/CrossSectionView/NonlabviewtableCell.js","Patientview/ExamReportModal.js","Patientview/CrossSectionView/Nonlabviewtable.js","Patientview/CrossSectionView/Nonlabview.js","Patientview/CrossSectionView/RTtable.js","Patientview/CrossSectionView/GAS.js","Patientview/CrossSectionView/RemarkModal.js","Patientview/CrossSectionView/RTbreathtablecell.js","Patientview/CrossSectionView/RTbreathetable.js","Patientview/CrossSectionView/RTbreathe.js","Patientview/Prescriptionorder/Prescriptionordertablecell.js","Patientview/Prescriptionorder/Prescriptionordertable.js","Patientview/Prescriptionorder/Prescriptionorder.js","Patientview/Treatmentorder/Treatmentordertablecell.js","Patientview/Treatmentorder/Treatmentordertable.js","Patientview/Treatmentorder/Treatmentorder.js","Module/Notecell.js","Module/Note.js","Patientview/CrossSectionView/Crosssectionschedule.js","Patientview/CrossSectionView/Crosssection_todo.js","Patientview/CrossSectionView/Crosssectionlayout.js","Patientview/ChronicleView/Chronic_io.js","Patientview/ChronicleView/ChronicTableCellTooltipCell.js","Patientview/ChronicleView/ChronicTableCell.js","Patientview/ChronicleView/ChronicTable.js","Patientview/ChronicleView/ChronicLab.js","Patientview/ChronicleView/ChronicRTTableCell.js","Patientview/ChronicleView/ChronicRTTable.js","Patientview/ChronicleView/ChronicRT.js","Patientview/ChronicleView/ChronicOrderTable.js","Patientview/ChronicleView/ChronicOrder.js","Patientview/ChronicleView/ChronicWeightTable.js","Patientview/ChronicleView/ChronicWeight.js","Module/Vitalxaxis.js","Module/Vitalxaxisbot.js","Patientview/ChronicleView/Chronic_vital.js","Patientview/ChronicleView/Chroniclelayout.js","Patientview/FlootSheetView/Flootsheetio.js","Patientview/FlootSheetView/Flootsheetlayout.js","Patientview/ExamReport/Examchart.js","Patientview/ExamReport/ExamLabview.js","Data/RegularData.js","Patientview/ExamReport/ExamNonlabtablecell.js","Patientview/ExamReport/NonLabview.js","Patientview/ExamReport/ExamReport.js","Patientview/Orderview/Orderview.js","Patientview/NoteView/Note.js","Patientview/RT/RTview.js","Patientview/Nurtion/Nurtionfeedingcell.js","Patientview/Nurtion/Nurtionfeeding.js","Patientview/Nurtion/Nurtion_TPN_cell.js","Patientview/Nurtion/Nurtion_TPN.js","Patientview/Nurtion/Watervaluechart.js","Patientview/Nurtion/Nurtion.js","Patientview/Infection/Infectionlabtable.js","Patientview/Infection/Infectionlab.js","Patientview/Infection/Infection.js","Patientview/Schedule/Bedsidecard.js","Patientview/Schedule/Scheduletodo.js","Patientview/Schedule/Calendercell.js","Patientview/Schedule/Calender.js","Patientview/Schedule/Scheduleview.js","Patientview/Patientviewlayout.js","Systemgroup/powersetting.js","Systemgroup/Systemlogtable.js","Systemgroup/Systemlog.js","Content/Systemcontrol.js","Layout/Layout.js","Layout/Loginview.js","App.js","serviceWorker.js","index.js","Image/svg/details.svg"],"names":["module","exports","Homepage","Component","Sidermenu","state","powerLogin","Number","sessionStorage","getItem","powerLogins","this","setState","key","match","value","path","props","Selectkeynumber","rule","console","log","style","display","alignItems","marginLeft","height","gridTemplateColumns","gridColumnGap","to","class","select_hover","src","wardviewlogo","alt","historylogo","controllogo","CalculateAge","BornStatus","startDate","moment","date","minus","diff","undefined","week","day","Math","floor","month","statecolor","Labwarningvalue","title","BornWeight","weightlist","birthday","Array","isArray","findata","filter","index","rec_dat","type","length","parseInt","value2","NewestWeight","XM2JSON","data","xm2","X2JS","status","xml2js","outmsg","ret","parsedata","resconts","rescont","QMNCXM2JSON","Doc","DocList","Main","element","PDTYPE","PDDOCNMC","toString","trim","selectweight","List","array","valueOf","push","axios","defaults","baseURL","config","headers","getAlluser","get","getQDC","caseno","st","et","getQENT","getQSPE","getOnePatientNotice","transinno","HISID","getAllPatient","getOnePatientRemark","transid","getOneRemark","remarkid","getOnePatientSchedule","starttime","endtime","getStoredProcedureORDLIST","hisid","dpt","docid","getStoredProcedureRESDBGAS","getStoredProcedureRESDGLU1","getStoredProcedureRESDISP","seq","getStoredProcedureRESLAB01","getStoredProcedureRESLAB02","getStoredProcedureRESLAB0C","getStoredProcedureRESSECT","getStoredProcedureTRTMNTQ1","getStoredProcedureUDORDER0","getTablePBASINFO","PHISTNUM","getTablePDOCNEW","PCASENO","getTablePLOC","createTodo","caseid","context","time","body","post","getOneTodo","getPatientwardvalueMedian","startTime","endTime","getPatientwardvalueBoxPlot","interval","getVitalSignData","getHisidwardvalue","axiosGithub","create","timeout","getGitHubJson","string","Wardcarstatus","TRTMNTQ1","UDORDER0","FlagReg","TRQ1","ApiProvider","then","info","arr","ORSTATUS","catch","err","UDORDER","dataList","UDSTATUS","Reg","ApiGithub","Promise","all","result","parseFlagData","Flag","item","StatusUDORDER","some","UDDRGNAM","toLowerCase","UDGNAME","ParseValueUD","indexOf","StatusTRTMNTQ1","ORPROCED","ParseValueTRT","statusspan","source","style_change","AntiStatus","TPNStatus","NP0Status","FoleyStatus","DrainStatus","statuslist","InvasiveRespiratorStatus","NonInvasiveRespiratorStatus","RespiratorStatusParse","map","className","Respirator","wardstatestringformat","WardCard","useState","CenterMonitorValue","SetCenterMonitorValue","SetHID","Timer","SetTimer","InitCenterData","useEffect","TimerID","setInterval","clearInterval","HID","phistnum","JSON","stringify","color","hr","spo2","fontWeight","fontSize","abpd","abps","abpm","gridColumnsGap","rr","bt","bednumberformat","number","gender","BornChangeWeek","BornChangeDay","BornChangeWeight","Wardcarddetail","hoverstate","clickstate","mouse_hover","edit_hover","visible","pbasignfo","birthdayweight","weight","bornweek","bornday","nowweight","report","nonreport","remark","TRANSINID","TRANSINDT","TRANSINTM","modatstatus","persionstatus","handleCancel","e","showModal","add","format","TRID","API_DATA","mapList","ORRCPDT","ORRCPTM","name","sex","parseFloat","toFixed","pname","psex","bweight","bweek","bday","personstatus","typefrom","from","PNAMEC","PSEX","Birthday","PBIRHDT","BornWeeks","BornDays","BornWeekAndDay","viewstatus","dataArrayRender","HBEDNO","defaultValue","onChange","margin","width","onCancel","footer","justifyContent","border","onClick","handleOk","valueFormat","statusPersion","QMNC","QTWER","Wardstate","weeks","days","previewmode","hbedlist","QTWPER","Weight","AgeStatus","role","cursor","editlogo","fileLogo","file2Logo","borderBottomWidth","borderBottomColor","borderBottomStyle","centerdata","centerMonitorData","padding","position","overflow","textOverflow","whiteSpace","pathname","Modelrender","Unpreviewwardcarddetail","databool","statedata","document","getElementById","mode","bednumber","marginBottom","backgroundColor","format_bednumber","onOk","gridTemplateRows","gridRowGap","id","placeholder","marginRight","WardcardNote","_isMounted","editstate","AnnoceRawData","AnnoceDisplayData","inputContent","onInputChange","bind","queryAllAnnounce","parse","announceArray","event","target","announce","doc","newAnnounce","Date","editor","findIndex","splice","announcelist","list","editstatus","localTime","utc","toDate","deleteimg","ondeleteannounce","placement","detail","annData","marginTop","onMouseUp","editlist","borderCollapse","AddNewannouce","canceledit","okeditlist","Bedinformation","tableselect","sendReturnSelect","selectkey","idkey","localtime","select","Selectswitch","parentCallback","weekdatformat","weekday","Month_format","getMonth","getDate","getDay","Unselect_tablestyle","borderLeftWidth","textAlign","borderStyle","borderWidth","borderColor","hbedcount","transoutcount","transincount","rtcount","nonrtcount","tpncount","yyyymmddformat","timestamp","getFullYear","formatmonth","Monthformat","yyyymmfirstweeksate","mmddformat","compareday","getTime","MG_VALUE","PROC_VALUE","Wardbedinformation","subselectdate","selectid","PickerDate","bedinfo","onChangeDate","datestring","apiData","callbackFunction","idnumber","trainDay","bTime","nTime","aTime","trans","RenderCell","pnamec","selectDateitem","filterdate","inType","transoutIncountperson","outType","transoutOutcountperson","transIn","transOut","transferListlayout","infolist","infoList","dateTime","i","Bedinfo","reverse","fontStyle","paddingLeft","showToday","disabledDate","current","startOf","allowClear","shape","icon","bedinfotitle","weekbedinfo","infoitem","Schedule_event_list","detailstate","items_interval","EditMode","selSchedule","Scheduledata","ID","caseinfo","querySchedule","queryALLSchedule","propsDate","stateDate","timeNowStr","toISOString","writter","PBASINGNINFO","PLOCSTART","getHours","getMinutes","scheduleData","ScheduleList","text","borderRadius","detaillogo","changestate","onChangeEditMode","EditButton","EditControl","listevent","onClickCancel","onClickEnter","Wardschedule","Wardinfoindex","growdata","Male_befor","y","min","max","FeMale_before","Male_after","FeMale_after","WardlifeChart","drawChart","svg_key","weightList","grewinfo","window","screen","availWidth","bornweeks","WEEK_BORN","borndays","DAY_BORN","BIRTHDAY","pregencyTimestamp","d3","domain","range","x","yAxis","ticks","tickSize","tickPadding","xAxis","tickFormat","d","svg","attr","append","call","datasource","rec_tim","id_key","Wardmonthafter","Month","Wardgrewchart","test_items_interval","Data","WeightList","testiteminterval","paddingRight","borderTopLeftRadius","borderTopRightRadius","SwitchTestItemInterval","Onchangetimeinterval","switch_monthy","Notice","noticeData","preTRID","queryPatientImportant","transinid","updateTime","disableEdit","tooltiptext","t","displayTime","remarkcell","Editor","TextArea","Input","renderEditButton","autoSize","Labviewitem","Source","TimeR","TimeRender","RowsHeight","ListForTime","DataList","ORRESDT","ListForTimeAndTarget","forEach","split","QSPERegList","qspe","SettingValue","valueList","qspearray","SelectElement","special","DataArray","DataJson","Labviewlayout","parser","dummy_mg","dummy_pct","RESDGLU1","RESLAB02","RESLAB01","RESDBGAS","RESLAB0C","RESSECT","prePickerDate","preHID","preTRDT","TRDT","getLabData","TransinDate","MonthInterval","timestampInterval","selectMonthInterval","latestvalue","selected_parser","find","apply_condition","arrayLength","ORMM","CASEID","ORDSEQNO","RESDISP","selected_mapping","mappings","mapping","re","RegExp","regex_str","regex_flags","CONTENT","currentTimeStr","currentItemTimestamp","matchValue","updateLabviewIfNeed","currentIdx","background","ListEndData","RESDGLU1LIST","FiliterReg","RESLAB02LIST","RESLAB01LIST","RESDBGASLIST","RESSECT_MG_LIST","findLastestTargetValue","RESSECT_PROC_LIST","GLUFAST","WBC","RSV01","SEG","RSV14","LYMP","RSV15","HGB","RSV03","PLATELET","RSV09","NA","RSV13","K","CA","P","RSV17","ALB","RSV02","CRP","RSV32","PH","SS07","PCO2","SS06","BE","SS01","PO2","SS08","BUN","RSV05","CR","RSV06","ALT","RSV11","AST","RSV12","TBIL","RSV08","DBIL","RSV25","ALKP","TOTALCA","IRON","RSV26","TIBC","RSV27","FERRITIN","areainterval","nullvalue","TitleR","TitleRender","ORBGNDT","WardcardvitalsignChart","sourcedata","getCenterMonitor","selectType","axisTop","axisBot","circlrcolor","MAX","MIN","Upper","Lower","transformmargin","cal_svg_transform","time_now","time_array","time_axis_array","x_axis_time","time_array_reverse","time_axis_array_reverse","formatHour","tickValues","n","xAxisBottom","remove","cal_svg_hight","formatBoxWidth","viewwidth","lower","upper","LimitBoxTimer","interFormat","TimeArray","boxTime","formatBox","boxwidth","drawshadow","BoxPlotData","dataAbps","dataAbpd","q1","Q1","q2","Q2","q3","Q3","q4","Q4","Xtime","selectAll","enter","Time","SBP","DBP","WardChart","pbStatus","changePb","decidePB","nbpd","CMvalue","vitalvalue","limitValue","flexDirection","lineHeight","colorshadow","nbps","nbpm","data2","data_2_circlrcolor","Wardinfousercheckbox","checkboxselect","selectstate","updateOnePatientTodo","selectchange","checked","textDecoration","Patientinfo","preCID","QENT","CID","patientDetail","transdata","patientDate","fixpatientDate","patientData","Wardinfouser","Visible","setVisible","scheduleList","SetScheduleList","todoList","SetTodoList","location","PLOC","now","todayBegin","ListWeight","DOCLIST","PDOCNEW","MainDoc","LiveDoc","MainNur","ICUMainDoc","maxHeight","minHeight","displayTimeStr","Bedview","simplemode","SelectHISID","HBEDApiGet","simple_style","gridGap","Unsimple_style","wardcarddetaillist","component","WardinfouserK","filterdata","switch_titile_string","onWardcardDisplay","checkedChildren","unCheckedChildren","defaultChecked","Historyview","MouseClick","allPatientDisplayData","allPatientUnset","allPatientSet","selectedRowsArray","hospitalindex","selectedFile","fileList","uploading","doctor","transOuttime","handleUpload","fileData","formData","FormData","file","res","filename","setedUser","transouttime","unsetUser","onChangeName","onChangeHisid","onClickSearch","record","resultD","url","URL","createObjectURL","Blob","link","createElement","href","setAttribute","appendChild","click","hospitalnumber","delete","dateString","Group","RangePicker","DatePicker","locale","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","disabled","searchNO","searchTime","fn","transintime","searchName","search","genderswitch","birweek","transage","transicutime","maindoc","EditStyle","onRemove","newFileList","slice","beforeUpload","showUploadList","handleDisplaySwitchChange","Searchbar","exportClick","deleteHistoryUser","columns","dataIndex","dataSource","onRow","onMouseEnter","MouseClickTable","onMouseLeave","Crosssectionvitalsignchart","change","prepickerdate","presource","preinterval","svg_id","PHID","PCID","optionvalue","pickerdate","endTimeStamp","start","end","formatTimer","QDVS","QOXY","HRNISLIST","RRNISLIST","SBPNISLIST","DBPNISLIST","BTNISLIST","Spo2NISLIST","pluse","breath","systolic","diastolic","BT","temperature","concen","FormatNISData","centermonitorApiDataGet","prehid","xAxisvalue","xAxisarray","formatxArray","xAxisbotvalue","formatbotaxis","xAxisbot","drawData","formatShift","Warningsetting","dragstate","onClickdrag","transform","dragdown","Addwarningsetting","onSelectDate","dates","dataStrings","dateCallback","onSelectHour","hourCallback","Option","Select","children","Vitalsign","vital_days","visibleConflict","chackstate_one","chackstate_three","addNewWarningDateStr","addNewWarningHourStr","handleSelectDate","handleSelectHour","hourString","handleOkConflict","handleCancelConflict","sourcehandleChange","intervalhandleChange","EndTime","Phistnum","gridarray","checknumber","onClickCheckgrid_three","onClickCheckgrid_one","centervalueNull","TabPane","Tabs","waringsettingarray","centervalue","FilterList","filterData","Mid","centervaluetoNull","vitaldaysBool","vitaldays","pickerTimer","defaultActiveKey","tab","top","left","onVitalCheck","bottom","Controlbar","display_Mode","item_array","scrollstate","sendData","itwm_array","sendDateData","parentDateCallback","scrollToAnchor","anchorName","anchorElement","scrollIntoView","checkedValues","onDateChange","bron","PBIRTHDT","bronDate","btn_style","unclick_style","display_style","displye_mode","right","boxShadow","zIndex","non_display_mode","check_area","check_text","btnlist","WEIGHT","WardState","DayWeight","btn","scrollpoint","endOf","birthdays","localtoborndays","pregancyweeksanddays","newtime","oldtime","timestampdiff","daysdiff","open_display","displaylogo","IOpage","QDC","PreStatus","PreIntervalStatus","PreCID","PrePickerDate","RegQDC","CarloriesCal","intervalStatus","timer","interstatus","Result","Status","IntervalStatus","getAPI","prestatus","preinterstatus","precid","mapcell","listTimerFormat","inter","TimerList","hourInterval","filterList","filterListALL","gridNumber","cellsum","sum","cellRenderSum","CellRender","timerStruct","cellRender","stylechange","intervalstatus","QDCLIST","timearray","pickerTimeArray","formatData","caloriesCalonnam","nam","namstring","valueNumber","FormatFeedingList","FormatIVList","FormatUrineList","FormatOtherInList","FormatOtherOutList","lost","elementItem","Feeding","inp_val2","calories","IV","inp_val1","Urine","out_val2","Other","input_1","output_1","out_val1","OtherIn","OtherOut","formatQDCtoIO","Interval","timerFormat","feed","sumin","arr1","arr2","arr3","sumlist","sumIn","UrinForUnit","datamap","urineforWeightAndHourCrossection","sumout","sumOut","sumInTotal","Outout","element1","element2","sumInAndOut","TitleCellIn","TitleCellOut","CrossectionIo","titlelab","NonlabviewtableCell","summary_str","select_parser","input","parsers","item_name","sample","lab","start_time","datetime","end_time","content","summerize","kv_pairs","summary","match_replacer","replacer","replace","caseId","hisId","datatime","result_kv_pairs","come","statusRender","statusFormat","canShowReport","ExamReportModal","showDetail","Nonlabviewtable","modalVisible","modalReport","ORDLIST","nonLabApiGet","storeProcedureTime","FormatList","StartTime","ORDLIST_Format","elemetnStatus","elementORBGNTime","ORBGNTM","ORDLISTFormat","nonlabcell","ORSPCN1","statis","ORHISTNO","ORDSEQCN","Nonlabviewlayout","RTtable","PreHID","PreTransInDate","GasListToCell","GasData","timeStamp","ORRESTM","PHValue","PCO2Value","PO2Value","HCO3Value","SS04","BEValue","O2SatValue","SS05","FiO2Value","SS03","GasCell","getGasAPI","PreTRDT","GasTitleCell","GAS","PickerDateRange","RemarkModal","remarkValue","onOkClick","transinId","remarkId","createTime","rows","RTbreathetablecell","onCell","onEdit","newRemarkValue","setRemark","seachRemark","setting","Mode","Setting","onMouseMove","Mouse_move","Mouse_leave","Edit_state","chooseedit","RTbreathetable","createRTbreathetable","RTbreathe","QSPE","FilterReg","getQSPEApi","resultData","Prescriptionordertablecell","onMove","UDORDSEQ","checkStatus","SelectMode","ET","UDENDDT","Name","PName","UDRPNAME","Unit","UDDOSAGE","UDDUNIT","UDFREQN","UDROUTE","ST","UDBGNDT","on_Mouse","on_leave","Prescriptionordertable","titlecell","Prescriptionordertabletable","Prescriptionorderlayout","classParser","InputMode","onChangeClass","handleChange","onChangeinputKey","parseClass","inputs","allResult","activeList","clusteredData","filteredData","SortDataList","createST","createET","nowDate","DataFormat","searchbar","ControlBarRender","Treatmentordertablecell","QD","ORFREQN","ORENDDT","Treatmentordertable","TRTMNT01","Treatmentordertablecelllist","Treatmentorderlayout","DateRangeMode","Search_bar","Notecell","updatetime","updatedoctor","updatetime_format","wordBreak","Note","noteData","queryNotice","propDate","TRANSID","notelist","infoObj","updatedictor","CrossectionSchedule","CrosssectionTodo","queryTodo","renderTodoItem","Crosssectionlayout","Cross_item","SelectInterval","callbackDateFunction","PickerTimeStamp","NIS_API_IO","Datetime","TimeStampPickerDate","display_item","Inoutonchronic","Chronictablecelltooltip","preStartTimeStamp","loading","resultStr","parserName","inputBeginTime","parser_name","startTimeStamp","apiGet","tooltipelement","summaryParse","allContent","infoTime","Cell","antIcon","spin","indicator","Chronictablecell","titleCell","objectElementCell","CellText","autoAdjustOverflow","overlayStyle","maxWidth","Tableonchronic","LabParse","SummaryParse","monthly","ApiPronider","chronic_state","fotmatTimerMonthly","preInterval","ApiGet","TimeInterval","grid","ressect","parsrList","arrayBiochemical","arrayBlood","arrayCultivate","arrayGAS","arrayGlu","arrayRadiation","arrayOther","element_ORPROCED","BioFind","Biochemical","BloFind","Blood","CulFind","Cultivate","GasFind","GluFind","RadFind","Radiation","arrayList","LabFormat","statestatus","title_list","cell_list","entTimeStamp","slectInt","TimerForList","filterTimerForDataList","fotmatTimerForTimer","DataForTimer","toolTipID","Chroniclab","select_interval","Chronicrttablecell","cellelement","RTListRender","ToolTipRender","rtlogo","Chronicrttable","prePickerdate","timerList","listFilter","formatDataList","table_content","Chronicrt","Chronicordertable","whiteBlackListParser","tpnParsers","excludeBlackListResult","UDGNAME_condition","UDRPNAME_condition","UDGNAME_re","UDGNAME_match","UDRPNAME_re","UDRPNAME_match","getUDORDER","changegridnumber","rawData","filteredRawData","selected_tpn_parser","found","name_regex_flags","selected_white_black_list_parser","Tablecell","formatWidth","elementStart","elementEnd","widthRate","clientWidth","formatStart","formatEnd","formatStartPosition","arraylist","shift","formatUDORDER0","ListData","formatString","changegridstyle","celltable","Orderonchronic","Chronicweighttable","QTPWERList","TimerFormat","WeightListFormat","elementTime","elementValue","Value","sortWeight","sort","a","b","elementWidthList","time1","elementWidth","time2","FormatEndTimeStamp","datafilter","timeString","datafilterTime","widthArray","timeString2","weightRectRender","render","paddingTop","Weightonchronic","Vitalxaxis","monthformat","select_date","select_time_format","nowtime","Start_time","intervaldays","xaxis","formatday","Vitalxaxisbot","select_date_zero","Vitalonchronic","check_state_one","check_state_three","check_state_oneweek","check_state_twoweek","statussource","onClickCheckgrid_oneweek","onClickCheckgrid_twoweek","formatPickerTimer","Interval_grid","Interval_grid_box","Chroniclelayout","statuschange","onSelectchange","button","filterlogo","Flootsheetio","itemNumber","dataJson","Title","timeObjectString","cell","groupfirstarray","compare","arrList","comparevalue","filterarray","FirstArray","SecondArray","ThirdArray","FourthArray","line","pos","formatQDC","FlootSheetFirstAreaData","FlootSheetSecondAreaData","FlootSheetThirdAreaData","FlootSheetFourthAreaData","stringElement","groupelement","Firstdata","timeForList","elementList","valueSum","cellMap","Secondedata","Thirddata","formatRV","RV","RVList","FourdataCellRender","datajson","FourthDataCell","Flowsheetlayout","ApiData","DateTime","splist","specialListRender","Examchart","lineChart","sT","endT","fixLineChart","div","curve","lines","on","transition","duration","html","pageX","pageY","Labview","Selectus","SelectStatus","lineCharttitle","IRParse","titleSearch","parentTitleCallback","fixLineChartData","getAttribute","showDate","temp","showModel","charttableview","dataIR","Object","keys","itemValue","flex","LabDataList","SelectList","SelectTitlefilter","selectdata","SelectTitleRender","ExamLab","justifycontent","Examnonlabviewtable","resultKey","StateMode","ordlist","pickerdaterange","changeState","status_report","ORDCLNM","listforstatus","selectedClass","ORDATE","ORTIME","Nonlabview","ClassMode","Inputvaluesearch","onChangeState","Examreport","selectTitle","subtract","callbackTitleFunction","PickerDateRangeChange","vallofnull","DateRange","selectData","st_timestamp","et_timestamp","CellData","Band","Seq","Lym","Hb","Hct","RSV04","Plt","Na","Cl","CaTotal","Cr","Alt","TBil","DBil","rGGT","RSV19","Alkp","Alb","Iron","RSV28","FeSat","LDH","RSV10","RSV9","ck","RSV18","ckMB","Troponinl","RSV30","PT","APTT","INR","pCO2","pO2","HCO3","O2Sat","FiO2","SS11","SS12","SS13","SS14","CaFree","SS15","Bun","SS16","SS17","GluBeside","GluLab","RSV16","TCB","MicroBil","elementOne","elementTwo","Seg","APIUpdate","SelectDataList","datePick","momentDate","selectvalue","Orderview","apidata","udata","tdata","overflowY","dataRange","Noteview","display_data","contentdisplay","ADMDISP","ADMLIST","DISLIST","DISDISP","DTAROTQ4","DTASOAPQ","PCASELIST","ERDISP","PRGTXQRY","PRGTXQRYDIS","CPSLIST","CPSDISP","QPNOT","QPNOTDIS","OPSORAQ1","OPSORAQ2","SelectClass","NoteTime","Content","ADISTNO","ADICASE","SEQ","OPABGNDT","OPATIMES","times","ttype","LIVEPLOC","PLOCDT","substr","transdt","select_option","row","ADMDATA","textType","textObj","DTSOAPTY","DTSOAPSQ","DTSOAPTX","newObj","idx","textResult","newList","dataFilter","PRGTYPE","PRGTX","cre_nam","pro_not","cellRander","object","SelectADMDISP","ADIDATE","DCASENO","SelectDISDISP","DDATEIN","DDATEOUT","DPT","DTPDEPT","DTPDATE","SelectDTASOAPQ","DTPTIME","SelectERDISP","PDISDT","PRGDT","PRGTM","v","DT","TN","SelectPRGTXQRYDIS","CPSCASE","CPSOSEQ","CPSHIST","SelectCPSDISP","CPSENTDT","CPSENTTM","grouparray","SelectQPNOTDIS","OPACOD1","OPAMANNM","SelectOPSORAQ1","control","NotecontrolBar","renderContentArray","listRender","switchListRender","RTview","Nurtionfeedingcell","Moduledisplay","Nurtionfeedingorder","getAPIFeedingData","getTreatmentOrderFilter","titleCellRender","DataCellRender","Nurtiontpncell","TPNListcellRender","TPNSubDatacellRender","TPNDATA","AA","Glu","Ca","Mg","TPNSubDataMap","RemarkData","Nurtiontpnorder","tpndata","inputEndTime","UDWORD","getAPITPNData","tpnList","titilecell","Watervaluechart","rowdata","watervalueData","shiftDays","formatShiftDays","rectwidth","svgrect","nulldata","car","Caloriessum","model","ModalRender","Nurtionview","showTime","FeedinfData","IVData","OtherData","sumcar","Calories","shiftTimer","TimerArray","formatTimeArray","watervalueDataList","filterFeedind","filterIV","filterOther","feedingSum","SumData2","IVSum","SumData","OtherSum","caseiddays","GrowthCurve","GrowthCurveControl","GrowthCurveControlBar","WaterValueControl","WaterValueControlBar","feeddata","waterRender","WaterValueRender","Nurtionfeeding","Infectionlabtable","Datalist","Render","FilterData","CellRander","WBCList","BandList","SegList","LymList","PCTList","CRPList","WBCRender","BandRender","SegRender","LymRender","PCTRender","CRPRender","WBCcell","Bandcell","Segcell","Lymcell","PCTcell","CRPcell","switch_state","userdata","Infectionlab","Infectionview","intervalselect","hrdatasource","rrdatasource","spo2datasource","abpdatasource","nbpdatasource","btdatasource","LabData","LabData2","Bedsidecard","remarkContent","queryPatientRemark","TODO_DONE","TODO_UNFINISH","Scheduletodo","displayMode","todolist","onItemCheck","itemToUpdate","queryPatientTodo","todolist_data","finish_data","finish_value","unfinish_data","finish_checkbox","unfinish_checkbox","onClickunfisish","onClickfinish","Calendercell","clickindex","sendcallback","newDate","clickdate","today","stateswitch","onClickCheck","weekdateformatcalender","calenderlogo","pingcheck","calenderwhitelogo","pingwhite","disableday","scheduleArray","eventArray","disabledayinfo","Calender","calendermode","Clickdays","ClickDate","displayinfo","scheduleRawData","startTimestamp","endTimestamp","noticeRawData","getStartEndTime","monthfirstweekday","firstCellBegin","startTimestampStr","endTimestampStr","itemList","refactoredList","itemTimeStr","foundItemIndex","newItem","newEvent","writer","timestampdate","onClickdays","dateStr","dataOfDayIndex","weekcontext","dataOfDay","getDataFromTimestamp","weeknumber","firstMonthWeekDay","rowIndex","noticeOfDay","getNoticeFromTimestamp","onCancelClick","calendermonthgroup","monthfirstweekdate","weekmonthmode","ShowModule","weekmode","setgroup","MonthPicker","SelectDatepickertype","modechange","Scheduleview","dateformat","exporttime","Patientviewlayout","TYPE","REMARK","tabstring","HBEDNUMBER","HBEDLIST","PBASINFO","matadata","nis_status_shange","activkey","PLOCLIST","PLOCTR","BedList","BEDNUMBER","USERDATA","ploc","PLOCTM","transindt","qmnc","bornWeeks","bornDays","wetghtList","OptionSelectRender","birthdayweeks","tabPosition","callback","confirm","Modal","Powersetting","adduser","userList","power","powerName","radioValue","pwdRadio","inputUsername","inputPassword","inputName","inputDoctorid","radioOnChange","nameChange","addUserdata","adduserhandleChange","queryUserdata","inputuserName","fixData","password","username","doctorid","account","roleString","set_State","okText","okType","cancelText","showDeleteConfirm","userData","powerString","myNewArray","concat","apply","Systemlogtable","loginlog_table","loginlogList","managerName","apilog_table","apilogList","months","j","optionValue","pagination","page","pageSize","getPages","Systemlog","totalSpace","usingSpace","percent","option","total","unuse","queryLoginLogdata","queryApiLogdata","pages","showInfo","Systemcontrol","bollogin","å","Layoutframe","clear","UsrName","url_path","fontweight","fontsize","routes","route","onClickLogout","Loginview","setRedirect","user","setItem","redirect","permission","statusstring","renderRedirect","login","querySelector","addEventListener","keyCode","blur","focus","flexWrap","App","documentElement","exact","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8fb48754.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/edit2.8fc62700.svg\";","module.exports = __webpack_public_path__ + \"static/media/filter.43b66bba.svg\";","module.exports = __webpack_public_path__ + \"static/media/file1.6f94c891.svg\";","module.exports = __webpack_public_path__ + \"static/media/file2.2b64f736.svg\";","module.exports = __webpack_public_path__ + \"static/media/Wardview.6c75f5a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/Historyview.0467b7bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Control.aa66ed95.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.870c0c52.svg\";","module.exports = __webpack_public_path__ + \"static/media/dragdown.0cdfe02a.svg\";","module.exports = __webpack_public_path__ + \"static/media/RT.41b174eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/calender.da91395a.svg\";","module.exports = __webpack_public_path__ + \"static/media/calenderwhite.d66bfce7.svg\";","module.exports = __webpack_public_path__ + \"static/media/ping.c2141b87.svg\";","module.exports = __webpack_public_path__ + \"static/media/pingwhite.0f1e8cfb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Edit.a7d4c3ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/Chooseedit.def74a6e.svg\";","import React, { Component } from 'react';\n\nclass Homepage extends Component {\n    render() {\n        return (\n            <div></div>\n        );\n    }\n}\n\nexport default Homepage","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport wardviewlogo from '../Image/svg/Wardview.svg'\nimport historylogo from '../Image/svg/Historyview.svg'\nimport controllogo from '../Image/svg/Control.svg'\nimport './Sidermenu.scss';\n\n\nclass Sidermenu extends Component {\n\n    state = {\n        powerLogin: Number(sessionStorage.getItem('role'))\n    }\n\n    componentDidMount() {\n        const powerLogins = Number(sessionStorage.getItem('role'))\n        this.setState({ powerLogin: powerLogins })\n    }\n\n    Selectkeynumber(key) {\n\n        switch (key) {\n            case '/nicu':\n                return 0;\n            case '/nicu/history':\n                return 1;\n            case '/nicu/system':\n                return 2;\n            default:\n                if (key.match('patient') != null) {\n                    return 0;\n                }\n                if (key.match('ward') != null) {\n                    return 0;\n                }\n                return '';\n        }\n    }\n\n    select_hover(value) {\n        const { path } = this.props\n        const keynumber = this.Selectkeynumber(path)\n        if (keynumber === value) {\n            return true\n        }\n        return false\n    }\n    render() {\n        // const linkstate = {\n        //     backgroundColor: \"rgba(59, 151, 225, 1)\",\n        //     display: 'flex',\n        //     paddingLeft: '15px',\n        //     paddingRight: '15px',\n        //     height: \"40px\"\n        // }\n        // const dislinkstate = {\n        //     backgroundColor: \"rgba(0, 0, 0, 0)\",\n        //     display: 'flex',\n        //     paddingLeft: '15px',\n        //     paddingRight: '15px',\n        //     height: \"40px\"\n        // }\n        // const linkfont = { color: \"rgba(25, 70,90, 1)\", fontweight: \"500px\", fontsize: \"18px\", margin: \"0px 10px 0px 2px\" }\n        // const dislinkfont = { color: \"rgba(46, 100, 164, 1)\", fontweight: \"500px\", fontsize: \"18px\", margin: \"0px 10px 0px 2px\" }\n        const rule = this.state.powerLogin\n        console.log(rule)\n        // const rule = 5\n        console.log(rule == 2)\n        //sso custom => custom\n        return (\n            <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"20px\", height: '100%' }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto auto\", gridColumnGap: \"10px\" }}>\n                    <Link to=\"/nicu/ward/wardindex\" class={this.select_hover(0) ? \"linkstate\" : \"dislinkstate\"} style={{ display: rule == 2 ? \"none\" : \"flex\" }}>\n                        <img src={wardviewlogo} alt='wardviewlogo'></img>\n                        <centerstyle>\n                            <t2 class={this.select_hover(0) ? \"linkfont\" : \"dislinkfont\"}>住院病人資訊</t2>\n                        </centerstyle>\n                    </Link>\n                    <Link to=\"/nicu/history\" class={this.select_hover(1) ? \"linkstate\" : \"dislinkstate\"} style={{ display: rule == 1 ? \"flex\" : \"none\" }}>\n                        <img src={historylogo} alt='historyviewlogo'></img>\n                        <centerstyle>\n                            <t2 class={this.select_hover(1) ? \"linkfont\" : \"dislinkfont\"} >歷史病歷管理</t2>\n                        </centerstyle>\n                    </Link>\n                    <Link to='/nicu/system' class={this.select_hover(2) ? \"linkstate\" : \"dislinkstate\"} style={{ display: rule == 2 ? \"flex\" : \"none\" }}>\n                        <img src={controllogo} alt='systemviewlogo'></img>\n                        <centerstyle>\n                            <t2 class={this.select_hover(2) ? \"linkfont\" : \"dislinkfont\"}>系統設定</t2>\n                        </centerstyle>\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Sidermenu\n","import X2JS from \"x2js\"\nimport moment from 'moment';\n\n\nexport function CalculateAge(BornStatus) {\n    const startDate = moment(BornStatus.date);\n    const endDate = moment();\n    const minus = endDate.diff(startDate, 'days');\n    // console.log(BornStatus.date)\n    // console.log(BornStatus.week, BornStatus.day)\n    // console.log(Math.floor(BornStatus.week + (BornStatus.day + minus) / 7))\n    if (BornStatus.week === undefined || BornStatus.day === undefined || BornStatus.date === undefined) {\n        return \"--\"\n    }\n    if (BornStatus.week < 37) {\n        const week = Math.floor(BornStatus.week + (BornStatus.day + minus) / 7);\n        const day = Math.floor((BornStatus.day + minus) % 7);\n        // console.log(BornStatus.day, minus)\n        return week < 40 ? `${week}週+${day}天` : day > 30 ? `矯齡${Math.floor(day / 30)}月${Math.floor(day % 30)}天` : `矯齡${day}天大`\n    }\n    const month = Math.floor((minus) / 30);\n    const day = Math.floor(minus % 30);\n    return month > 0 ? `${month}月+${day}天` : `${day}天大`\n}\n\n\nexport function statecolor(state) {\n    if (state === 'HR') {\n        return \"rgb(100,140,60)\"\n    }\n    if (state === 'BP') {\n        return \"rgb(193,37,40) \"\n    }\n\n    if (state === 'ABP') {\n        return \"#C12528\"\n    }\n    if (state === 'NBP') {\n        return \"#C12528\"\n    }\n    if (state === 'SpO2') {\n        return \"rgb(60,105,160) \"\n    }\n    if (state === 'BT') {\n        return \"rgb(127,61,181)\"\n    }\n    if (state === 'RR') {\n        return \"rgb(200,110,40) \"\n    }\n    return null\n}\n\n//parse flag\nexport function Respiratorswitch(Respirator) {\n    if (Respirator === '呼(非侵入)') {\n        return '呼(非侵入)'\n    }\n    if (Respirator === '呼(侵入)') {\n        return '呼吸'\n    }\n    return '呼吸器'\n}\n\nexport function wardstatestringformat(item) {\n    //console.log(item);\n    switch (item.item) {\n        case \"Respirator\":\n            return Respiratorswitch(item.data)\n        case \"TPN\":\n            return \"TPN\"\n        case \"NPO\":\n            return \"NPO\"\n        case \"HD\":\n            return \"HD\"\n        case \"Abx\":\n            return \"Abx\"\n        case \"CVC\":\n            return \"CVC\"\n        case \"Xanth\":\n            return \"Xanth\"\n        case \"照光\":\n            return \"照光\"\n        case \"DRN\":\n            return \"DRN\"\n        default:\n            return item\n    }\n}\n\nexport function Labwarningvalue(value, title) {\n    if (title === \"Glucose\") {\n        if (value > 120 || value < 50) {\n            return false\n        }\n    }\n    if (title === \"WBC\") {\n        if (value < 10000 || value > 30000) {\n            return false\n        }\n    }\n    if (title === \"Hgb\") {\n        if (value < 10 || value > 18) {\n            return false\n        }\n    }\n    if (title === \"Platelet\") {\n        if (value < 100000 || value > 450000) {\n            return false\n        }\n    }\n    if (title === \"Na+\") {\n        if (value < 135 || value > 145) {\n            return false\n        }\n    }\n    if (title === \"K+\") {\n        if (value < 3.5 || value > 5.5) {\n            return false\n        }\n    }\n    if (title === \"Ca2+\") {\n        if (value < 0.8 || value > 1.4) {\n            return false\n        }\n    }\n    if (title === \"P\") {\n        if (value < 4.5 || value > 6.0) {\n            return false\n        }\n    }\n    if (title === \"Mg2+\") {\n        if (value < -1.5 || value > 4.5) {\n            return false\n        }\n    }\n    if (title === \"Alb\") {\n        if (value > 3) {\n            return false\n        }\n    }\n    if (title === \"CRP\") {\n        if (value < 1) {\n            return false\n        }\n    }\n    if (title === \"Procalcitionin\") {\n        if (value < 0.5) {\n            return false\n        }\n    }\n    if (title === \"pH\") {\n        if (value < 7.25 || value > 7.4) {\n            return false\n        }\n    }\n    if (title === \"PCO2\") {\n        if (value < 40 || value > 60) {\n            return false\n        }\n    }\n    if (title === \"BE\") {\n        if (value < -7 || value > 6) {\n            return false\n        }\n    }\n    if (title === \"PO2\") {\n        if (value < 40 || value > 90) {\n            return false\n        }\n    }\n    if (title === \"BUN\") {\n        if (value < 1) {\n            return false\n        }\n    }\n    if (title === \"Cr\") {\n        if (value < 1) {\n            return false\n        }\n    }\n    if (title === \"ALT\") {\n        if (value < 45) {\n            return false\n        }\n    }\n    if (title === \"AST\") {\n        if (value < 45) {\n            return false\n        }\n    }\n    if (title === \"TBil\") {\n        if (value < 2) {\n            return false\n        }\n    }\n    if (title === \"DBil\") {\n        if (value < 0.5) {\n            return false\n        }\n    }\n    if (title === \"ALKP\") {\n        if (value < 450) {\n            return false\n        }\n    }\n    if (title === \"Total Ca\") {\n        if (value < 8 || value > 12) {\n            return false\n        }\n    }\n    if (title === \"FeSat\") {\n        if (value < 0.15) {\n            return false\n        }\n    }\n    return true\n}\n\n\nexport function getRandom(number) {\n    return Math.floor(Math.random() * 5) + number;\n};\n\nexport function getRandomfornumber(number) {\n    return Math.floor(Math.random() * number);\n};\n\nexport function arraychange(list) {\n    var myNewArray = []\n    for (var i = 0; i < list.length; ++i) {\n        for (var j = 0; j < list[i].length; ++j) {\n            myNewArray.push(list[i][j]);\n        }\n    }\n    return myNewArray\n}\n\nexport function WeightList(weightlist) {\n    if (weightlist === undefined || weightlist === null) {\n        return \"--\"\n    }\n    const findata = weightlist.filter(function (value, index) {\n        return value.type === \"TW\"\n    })\n    if (findata.length === 0) {\n        return 0\n    }\n    else return findata\n}\n\nexport function BornWeight(weightlist, birthday) {\n    console.log(weightlist)\n    if (weightlist === undefined || weightlist === null) {\n        return \"--\"\n    }\n    if (Array.isArray(weightlist)) {\n        const findata = weightlist.filter(function (value, index) {\n            return value.rec_dat === birthday && value.type === \"TW\"\n        })\n        if (findata.length === 0) {\n            return 0\n        }\n        else return parseInt(Number(findata[0].value2) * 1000)\n    }\n    else {\n        return parseInt(Number(weightlist.value2) * 1000)\n    }\n}\n\nexport function NewestWeight(weightlist) {\n    if (weightlist === undefined) {\n        return \"--\"\n    }\n    if (weightlist.length === 0) {\n        return 0\n    }\n    if (Array.isArray(weightlist)) {\n        const findata = weightlist.filter(function (value, index) {\n            return value.type === \"TW\"\n        })\n        if (findata.length === 0) {\n            return \"--\"\n        }\n        return parseInt(Number(findata[0].value2) * 1000)\n    }\n    else {\n        return parseInt(Number(weightlist.value2) * 1000)\n    }\n\n}\n\nexport function XM2JSON(data) {\n    const xm2 = new X2JS()\n    if (data === undefined) {\n        return []\n    }\n    const status = xm2.xml2js(data).outmsg.ret\n    if (Number(status) === 0) {\n        const parsedata = xm2.xml2js(data).outmsg.resconts.rescont\n        if (!Array.isArray(parsedata)) {\n            return [parsedata]\n        }\n        return parsedata\n    }\n    return []\n}\n\nexport function QMNCXM2JSON(data) {\n    const xm2 = new X2JS()\n    if (data === undefined) {\n        return []\n    }\n    const status = xm2.xml2js(data).outmsg.ret\n    if (Number(status) === 0) {\n        const parsedata = xm2.xml2js(data).outmsg.resconts.rescont\n        console.log(parsedata)\n        return parsedata\n    }\n    return []\n}\n\nexport function Doc(DocList, type) {\n    if (DocList === undefined || DocList === null || DocList === \"\") {\n        return \"\"\n    }\n    const Main = DocList.filter(function (element, index) {\n        return element.PDTYPE === type\n    })\n    if (Main.length === 0) {\n        return \"\"\n    }\n    return Main[0].PDDOCNMC.toString().trim()\n}\n\nexport function selectweight(List, date) {\n    if (List === undefined || List === null) {\n        return \"--\"\n    }\n    var array = []\n    for (let index = 0; index < List.length; index++) {\n        const element = List[index];\n        if (moment(element.rec_dat, 'YYYYMMDD').valueOf() < date) {\n            array.push(element)\n        }\n    }\n    if (array.length === 0) {\n        return 0\n    }\n    return Number(array[0].value2) * 1000\n}\n\n\n","import axios from 'axios';\n\n\naxios.defaults.baseURL = \"http://10.97.241.48/deploy/\";\n// axios.defaults.baseURL = \"http://172.24.7.33/deploy/\";\n// axios.defaults.baseURL = \"http://127.0.0.1:8888/deploy/\";\n\n//----------------------------------------------\n// announcement-controller 病房公告(Ward View)\n//----------------------------------------------\n//建立公告資訊\n/*\nexport function createAnnounce(context, editor, transinno, time) {\n  const body = {\n    context: context,\n    editor: editor,\n    transinno: transinno,\n    time: time\n  }\n  return axios.post(\"Announcement/createAnnouncement\", body);\n}*/\n\n//Create bweek bday bweight\nexport function createPatientInfo(hisid, pname, psex, bweight, bweek, bday) {\n  const body = {\n    \"bday\": bday,\n    \"bweek\": bweek,\n    \"bweight\": bweight,\n    \"hisid\": hisid,\n    \"pname\": pname,\n    \"psex\": psex\n  }\n  return axios.post(\"patientinfo/createPatientInfo\", body)\n}\n\nexport function getPersionalStatus(hisid) {\n  return axios.get(\"patientinfo/getOnePatientInfo/\" + hisid);\n}\n\nexport function createAnnounce(announceArray) {\n  return axios.post(\"Announcement/createAnnouncement\", announceArray);\n}\n\n//刪除某天公告資訊\nexport function deleteAnnounce(transinno, dateTime) {\n  return axios.delete(\"Announcement/delannouncement/\" + transinno + \"/\" + dateTime);\n}\n\n//取得全部資訊\nexport function getAllAnnounce() {\n  return axios.get(\"Announcement/getAllannounce\");\n}\n\n//取得某位病人某天資訊\nexport function getOneAnnounce(transinno, dateTime) {\n  return axios.get(\"Announcement/getOneannouncement/\" + transinno + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// export/import-controller 匯入匯出\n//----------------------------------------------\n//匯出\nexport function exportJson(transinno) {\n  return axios.get(\"exportJson/\" + transinno);\n}\n\n//匯入\nexport function importJson(filename) {\n  return axios.get(\"importJson/\" + filename);\n}\n\n//下載檔案\nexport function downloadFile(filename) {\n  return axios.get(\"downloadFile/\" + filename);\n}\n\n//上傳檔案\nconst config = { headers: { 'Content-Type': 'multipart/form-data' } }\nexport function uploadFile(fileData) {\n  return axios.post(\"uploadFile\", fileData, config);\n}\n//----------------------------------------------\n// login-controller 登入與權限設定\n//----------------------------------------------\n//刪除帳號\nexport function deleteUser(name, role, username) {\n  return axios.delete(\"delUser/\" + name + \"/\" + role + \"/\" + username);\n}\n\n//查詢某帳號權限：1->read only 2->general user 3->general manager 4->system manager 5->super user\nexport function getAuth(username) {\n  return axios.get(\"getAuth/\" + username);\n}\n\n//取得系統空間\nexport function getSpace() {\n  return axios.get(\"getSpace\");\n}\n\n//登入\nexport function login(username, password) {\n  const body = {\n    username: username,\n    password: password\n  }\n  return axios.post(\"login\", body);\n}\n\nexport function getSSOLogin(username, password) {\n  return axios.get(\"LoginInSSO/\" + username + \"/\" + password);\n}\n\n//新增帳號與權限\nexport function register(name, password, role, username, doctorid) {\n  const body = {\n    name: name,\n    password: password,\n    role: role,\n    username: username,\n    doctorid: doctorid\n  }\n  return axios.post(\"register\", body);\n}\n\n//取得全部資訊\nexport function getAlluser() {\n  return axios.get(\"getAlluser\")\n}\n\n//角色、姓名搜尋其內容\nexport function searchUser(name, role) {\n  return axios.get(\"searchUser/\" + name + \"/\" + role);\n}\n\n//----------------------------------------------\n// log-controller 顯示Log日誌\n//----------------------------------------------\n\n//Show login log(根據起始時間查詢成功登入記錄)(time格式為yyyy-MM-ddTHH:mm:ss)\nexport function getLoginlog(startTime, endTime) {\n  return axios.get(\"getLoginlog/\" + startTime + \"/\" + endTime);\n}\n\n//Show API access log (date格式為yyyy-MM-dd)\nexport function getApilog(Time) {\n  return axios.get(\"getApilog/\" + Time)\n}\n\n//Show Debug log (date格式為yyyy-MM-dd)\nexport function getDebuglog(Time) {\n  return axios.get(\"getDebuglog/\" + Time)\n}\n\n//----------------------------------------------\n// breath-controller 呼吸RT\n//----------------------------------------------\n//createBreath\nexport function createBreath(editTime, hisid, model, note, setting) {\n  const body = {\n    editTime: editTime,\n    hisid: hisid,\n    model: model,\n    note: note,\n    setting: setting\n  }\n  return axios.post(\"breath/createBreath\", body);\n}\n\n//getBreath\nexport function getAllBreath() {\n  return axios.get(\"breath/getAllbreath\");\n}\n\n//updateNote\nexport function updateNote(editTime, hisid, model, note, setting) {\n  const body = {\n    editTime: editTime,\n    hisid: hisid,\n    model: model,\n    note: note,\n    setting: setting\n  }\n  return axios.put(\"breath/updatebnote/\" + editTime, body);\n}\n\n//----------------------------------------------\n// exam-cbc-controller Exam CBC Controller\n//----------------------------------------------\n//寫入CBC資訊\nexport function createExamCbc(band, hb, hct, hisid, lym, plt, seg, updateTime, wbc) {\n  const body = {\n    band: band,\n    hb: hb,\n    hct: hct,\n    hisid: hisid,\n    lym: lym,\n    plt: plt,\n    seg: seg,\n    updateTime: updateTime,\n    wbc: wbc\n  }\n  return axios.post(\"examcbc/createexamcbc\", body);\n}\n\n//取得全部資訊\nexport function getAllExamCbc() {\n  return axios.get(\"examcbc/getAllexamcbc\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamCbcOfPatient(hisid, dateTime) {\n  return axios.get(\"examcbc/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-cbc-two-controller Exam CBC Two Controller\n//----------------------------------------------\n//寫入CBC資訊\nexport function createExamCbcTwo(band, crp, hisid, lym, ptc, seg, updateTime, wbc) {\n  const body = {\n    band: band,\n    crp: crp,\n    hisid: hisid,\n    lym: lym,\n    ptc: ptc,\n    seg: seg,\n    updateTime: updateTime,\n    wbc: wbc\n  }\n  return axios.post(\"examcbctwo/createexamcbctwo\", body);\n}\n\n//取得全部資訊\nexport function getAllExamCbcTwo() {\n  return axios.get(\"examcbctwo/getAllexamcbctwo\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamCbcTwoOfPatient(hisid, dateTime) {\n  return axios.get(\"examcbctwo/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-cruor-controller Exam Cruor Controller\n//----------------------------------------------\n//createExamCruor\nexport function createExamCruor(apiT, hisid, inr, pt, updateTime) {\n  const body = {\n    apiT: apiT,\n    hisid: hisid,\n    inr: inr,\n    pt: pt,\n    updateTime: updateTime\n  }\n  return axios.post(\"examcruor/createexamcruor\", body);\n}\n\n//getExamCruor\nexport function getAllExamCruor() {\n  return axios.get(\"examcruor/getAllexamcruor\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamCruorOfPatient(hisid, dateTime) {\n  return axios.get(\"examcruor/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-electrolyte-controller Exam Electrolyte Controller\n//----------------------------------------------\n//createExamEletrolyte\nexport function createExamElectrolyte(bun, caFree, caTotal, caseid, cl, cr, hisid, k, mg, na, p, updateTime) {\n  const body = {\n    bun: bun,\n    caFree: caFree,\n    caTotal: caTotal,\n    caseid: caseid,\n    cl: cl,\n    cr: cr,\n    hisid: hisid,\n    k: k,\n    mg: mg,\n    na: na,\n    p: p,\n    updateTime: updateTime\n  }\n  return axios.post(\"examelectrolyte/createexamelectrolyte\", body);\n}\n\n//getExamElectrolyte\nexport function getAllExamElectrolyte() {\n  return axios.get(\"examelectrolyte/getAllexamelectrolyte\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamElectrolyteOfPatient(hisid, dateTime) {\n  return axios.get(\"examcruor/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-gas-addi-controller Exam GAS Addi Controller\n//----------------------------------------------\n//createExamGasAddi\nexport function createExamGasAddi(bun, caFree, cr, hb, hct, hisid, k, na, updateTime) {\n  const body = {\n    bun: bun,\n    caFree: caFree,\n    cr: cr,\n    hb: hb,\n    hct: hct,\n    hisid: hisid,\n    k: k,\n    na: na,\n    updateTime: updateTime\n  }\n  return axios.post(\"examgasaddi/createexamgasaddi\", body);\n}\n\n//getExamGasAddi\nexport function getAllExamGasAddi() {\n  return axios.get(\"examgasaddi/getAllexamgasaddi\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamGasAddiOfPatient(hisid, dateTime) {\n  return axios.get(\"examgasaddi/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-gas-controller Exam GAS Controller\n//----------------------------------------------\n//createExamGas\nexport function createExamGas(be, fiO2, hco3, hisid, o2Sat, pco2, ph, po2, sample, updateTime) {\n  const body = {\n    be: be,\n    fiO2: fiO2,\n    hco3: hco3,\n    hisid: hisid,\n    o2Sat: o2Sat,\n    pco2: pco2,\n    ph: ph,\n    po2: po2,\n    sample: sample,\n    updateTime: updateTime\n  }\n  return axios.post(\"examgas/createexamgas\", body);\n}\n\n//getExamGas\nexport function getAllExamGas() {\n  return axios.get(\"examgas/getAllexamgas\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamGasOfPatient(hisid, dateTime) {\n  return axios.get(\"examgas/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-glu-controller Exam Glu Controller\n//----------------------------------------------\n//createExamGlu\nexport function createExamGlu(gluBedside, gluLab, hisid, updateTime) {\n  const body = {\n    gluBedside: gluBedside,\n    gluLab: gluLab,\n    hisid: hisid,\n    updateTime: updateTime\n  }\n  return axios.post(\"examglu/createexamglu\", body);\n}\n\n//getExamGlu\nexport function getAllExamGlu() {\n  return axios.get(\"examglu/getAllexamglu\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamGluOfPatient(hisid, dateTime) {\n  return axios.get(\"examglu/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-heart-controller Exam Heart Controller\n//----------------------------------------------\n//createExamHeart\nexport function createExamHeart(bnp, caseid, ck, ckMB, hisid, tropoin, updateTime) {\n  const body = {\n    bnp: bnp,\n    caseid: caseid,\n    ck: ck,\n    ckMB: ckMB,\n    hisid: hisid,\n    tropoin: tropoin,\n    updateTime: updateTime\n  }\n  return axios.post(\"examheart/createexamheart\", body);\n}\n\n//getExamGlu\nexport function getAllExamHeart() {\n  return axios.get(\"examheart/getAllexamheart\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamHeartOfPatient(hisid, dateTime) {\n  return axios.get(\"examheart/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-jaundice-controller Exam Jaundice Controller\n//----------------------------------------------\n//createExamJaundice\nexport function createExamJaundice(dbil, hisid, microBil, tbil, tcb, updateTime) {\n  const body = {\n    dbil: dbil,\n    hisid: hisid,\n    microBil: microBil,\n    tbil: tbil,\n    tcb: tcb,\n    updateTime: updateTime\n  }\n  return axios.post(\"examjaundice/createexamjaundice\", body);\n}\n\n//getExamJaundice\nexport function getAllExamJaundice() {\n  return axios.get(\"examjaundice/getAllexamjaundice\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamJaundiceOfPatient(hisid, dateTime) {\n  return axios.get(\"examjaundice/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-liver-controller Exam Liver Controller\n//----------------------------------------------\n//createExamLiver\nexport function createExamLiver(alKp, alb, alt, ast, dbil, hisid, rggt, tbil, updateTime) {\n  const body = {\n    alKp: alKp,\n    alb: alb,\n    alt: alt,\n    ast: ast,\n    dbil: dbil,\n    hisid: hisid,\n    rggt: rggt,\n    tbil: tbil,\n    updateTime: updateTime\n  }\n  return axios.post(\"examliver/createexamliver\", body);\n}\n\n//getExamLiver\nexport function getAllExamLiver() {\n  return axios.get(\"examliver/getAllexamliver\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamLiverOfPatient(hisid, dateTime) {\n  return axios.get(\"examliver/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-premature-baby-controller Exam Premature Baby Controller\n//----------------------------------------------\n//createExamPrematureBaby\nexport function createExamPrematureBaby(alkp, feSat, hisid, iron, ldh, tibc, updateTime) {\n  const body = {\n    alkp: alkp,\n    feSat: feSat,\n    hisid: hisid,\n    iron: iron,\n    ldh: ldh,\n    tibc: tibc,\n    updateTime: updateTime\n  }\n  return axios.post(\"examprematurebaby/createexamprematurebaby\", body);\n}\n\n//getExamPrematureBaby\nexport function getAllExamPrematureBaby() {\n  return axios.get(\"examprematurebaby/getAllexamprematurebaby\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamPrematureBabyOfPatient(hisid, dateTime) {\n  return axios.get(\"examprematurebaby/getOnepatient\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-unstructured-controller Exam Unstructured Controller\n//----------------------------------------------\n//createExamUnstructured\nexport function createExamUnstructured(hisid, item, result, state, time) {\n  const body = {\n    hisid: hisid,\n    item: item,\n    result: result,\n    state: state,\n    time: time\n  }\n  return axios.post(\"examunstructured/createexamunstructured\", body);\n}\n\n//getExamUnstructured\nexport function getAllExamUnstructured() {\n  return axios.get(\"examunstructured/getAllexamunstructured\");\n}\n\n//----------------------------------------------\n// feeding-controller Feeding Controller\n//----------------------------------------------\n//createExamFeeding\nexport function createExamFeeding(editDoctor, editTime, endTime, hisid, name, notice, startTime) {\n  const body = {\n    editDoctor: editDoctor,\n    editTime: editTime,\n    endTime: endTime,\n    hisid: hisid,\n    name: name,\n    notice: notice,\n    startTime: startTime\n  }\n  return axios.post(\"feeding/createfeeding\", body);\n}\n\n//getExamFeeding\nexport function getAllExamFeeding() {\n  return axios.get(\"feeding/getAllfeeding\");\n}\n\n//----------------------------------------------\n// hospitalization-record-controller Hospitalization Record Controller\n//----------------------------------------------\n//createHospitalizationRecord\nexport function createHospitalizationRecord(hisid, hospitalDoctor, tricuactiveue, mainDoctor, nonReport, note, report, updateTime) {\n  const body = {\n    hisid: hisid,\n    hospitalDoctor: hospitalDoctor,\n    icuactive: tricuactiveue,\n    mainDoctor: mainDoctor,\n    nonReport: nonReport,\n    note: note,\n    report: report,\n    updateTime: updateTime\n  }\n  return axios.post(\"hospitalizationrecord/createhospitalizationrecord\", body);\n}\n\n//getHospitalizationRecord\nexport function getHospitalizationRecord() {\n  return axios.get(\"hospitalizationrecord/getAllhospitalizationrecord\");\n}\n\n//----------------------------------------------\n// io-controller IO Controller\n//----------------------------------------------\n//createIO\nexport function createIO(caseid, hisid, item, updateTime) {\n  const body = {\n    caseid: caseid,\n    hisid: hisid,\n    item: item,\n    updateTime: updateTime\n  }\n  return axios.post(\"io/createio\", body);\n}\n\n//getIO\nexport function getIO() {\n  return axios.get(\"io/getAllio\");\n}\n\n//----------------------------------------------\n// nis-controller NIS Controller\n//----------------------------------------------\n//getQDC\nexport function getQDC(caseno, st, et) {\n  return axios.get(\"QDC/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQENT\nexport function getQENT(caseno) {\n  return axios.get(\"QENT/\" + caseno);\n}\n\n//getQDVS\nexport function getQDVS(caseno, st, et) {\n  return axios.get(\"QDVS/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQMNC\nexport function getQMNC(caseno) {\n  return axios.get(\"QMNC/\" + caseno);\n}\n\n//getQOXY\nexport function getQOXY(caseno, st, et) {\n  return axios.get(\"QOXY/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQPNOT\nexport function getQPNOT(caseno, st, et) {\n  return axios.get(\"QPNOT/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQSPE\nexport function getQSPE(caseno, st, et) {\n  return axios.get(\"QSPE/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQTWPER\nexport function getQTWPER(caseno, st, et) {\n  return axios.get(\"QTWPER/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//----------------------------------------------\n// note-controller Note Controller\n//----------------------------------------------\n//createNote\nexport function createNote(caseid, context, editTime, hisid, type) {\n  const body = {\n    caseid: caseid,\n    context: context,\n    editTime: editTime,\n    hisid: hisid,\n    type: type\n  }\n  return axios.post(\"note/createnote\", body);\n}\n\n//getNote\nexport function getNote() {\n  return axios.get(\"note/getAllnote\");\n}\n\n//----------------------------------------------\n// notice-controller 待辦事項 Notice (Ward/Patient View)\n//----------------------------------------------\n//建立資訊\nexport function createNotice(hisid, context, time, transinno, doc) {\n  const body = {\n    hisid: hisid,\n    context: context,\n    time: time,\n    transinno: transinno,\n    doc: doc\n  }\n  return axios.post(\"notice/createNotice\", body);\n}\n\n//刪除某人某件資訊\nexport function deleteNotice(transinno, date) {\n  return axios.delete(\"notice/delnotice/\" + transinno + \"/\" + date);\n}\n\n//取得全部資訊\nexport function getAllNotice() {\n  return axios.get(\"notice/getAllnotice\");\n}\n\n//取得某位病人資訊\nexport function getOnePatientNotice(transinno, HISID, st, et) {\n  return axios.get(\"notice/getOnePatientNotice/\" + transinno + \"/\" + HISID + \"/\" + st + \"/\" + et);\n}\n\n//----------------------------------------------\n// patient-controller 基本資料(Ward View)\n//----------------------------------------------\n//填寫基本資料\nexport function createPatient(nonreport, pacseno, pbirthdt, pbirthweight, pblood, pday, phistnum, pnamec, psex, pweek, report, transinid) {\n  const body = {\n    nonreport: nonreport,\n    pacseno: pacseno,\n    pbirthdt: pbirthdt,\n    pbirthweight: pbirthweight,\n    pblood: pblood,\n    pday: pday,\n    phistnum: phistnum,\n    pnamec: pnamec,\n    psex: psex,\n    pweek: pweek,\n    report: report,\n    transinid: transinid\n  }\n  return axios.post(\"patient/createpatient\", body);\n}\n\n//刪除某位病人\nexport function deletePatient(transinid, caseid, hisid) {\n  return axios.delete(\"patient/delpatient/\" + transinid + \"/\" + caseid + \"/\" + hisid);\n}\n\n//取得全部資訊\nexport function getAllPatient() {\n  return axios.get(\"patient/getAllpatient\");\n}\n\n//取得某位病人資訊\nexport function getOnePatient(hisid) {\n  return axios.get(\"patient/getOnepatient/\" + hisid);\n}\n\n\n//----------------------------------------------\n// patient-important-matter-controller 病人重要注意事項(Patient View)\n//----------------------------------------------\n//建立事項資訊\nexport function createPatientImportantMatter(context, editor, hisid, updateTime, transinid) {\n  const body = {\n    context: context,\n    editor: editor,\n    hisid: hisid.trim(),\n    time: updateTime,\n    transinid: transinid\n  }\n  return axios.post(\"patientimportantmatter/createpatientimportantmatter\", body);\n}\n\n//刪除某日資訊\nexport function deletePatientImportantMatter(date) {\n  return axios.delete(\"patientimportantmatter/delpatientimportantmatter/\" + date);\n}\n\n//取得全部資訊\nexport function getAllPatientImportantMatter() {\n  return axios.get(\"patientimportantmatter/getAllpatientimportantmatter\");\n}\n\n//取得某位病人資訊\nexport function getOnePatientImportantMatter(transinid) {\n  return axios.get(\"patientimportantmatter/getOnepatient/\" + transinid);\n}\n\n//----------------------------------------------\n// patient-remark-controller 病人註記(Patient View)\n//----------------------------------------------\n//createPatientRemark\nexport function createPatientRemark(context, hisid, transid) {\n  const body = {\n    context: context,\n    hisid: hisid,\n    transid: transid\n  }\n  return axios.post(\"patientremark/createpatientremark\", body);\n}\n\n//delPatientremark\nexport function deletePatientRemark(transid) {\n  return axios.delete(\"patientremark/delpatientremark/\" + transid);\n}\n\n//getPatientRemark\nexport function getAllPatientRemark() {\n  return axios.get(\"patientremark/getAllpatientremark\");\n}\n\n//getOnePatientRemark\nexport function getOnePatientRemark(transid) {\n  return axios.get(\"patientremark/getOnepatientremark/\" + transid);\n}\n\n//----------------------------------------------\n// remark-controller 註記\n//----------------------------------------------\n//建立註記\n\nexport function createRemark(name, remark, remarkId, time, transinId, type, editor) {\n  const body = {\n    name: name,\n    remark: remark,\n    remarkid: remarkId,\n    time: time,\n    transinid: transinId,\n    type: type,\n    editor: editor\n  }\n  return axios.post(\"Remark/createremark\", body);\n}\n\n//取得全部註記\nexport function getAllRemark() {\n  return axios.get(\"Remark/getAllremark\");\n}\n\n//取得某一類型註記\nexport function getOneRemark(transid, remarkid, type) {\n  return axios.get(\"Remark/getOneremark/\" + transid + \"/\" + remarkid + \"/\" + type);\n}\n\n//----------------------------------------------\n// patient-weight-controller 基本資料-體重(Ward View)\n//----------------------------------------------\n//填寫體重資訊\nexport function createPatientWeight(hisid, updateTime, weight) {\n  const body = {\n    hisid: hisid,\n    updateTime: updateTime,\n    weight: weight\n  }\n  return axios.post(\"patientweight/createpatientweight\", body);\n}\n\n//刪除某位病人體重資訊\nexport function deletePatientWeight(date) {\n  return axios.delete(\"patientweight/delpatientweight/\" + date);\n}\n\n//取得全部資訊\nexport function getAllPatientWeight() {\n  return axios.get(\"patientweight/getAllpatientweight\");\n}\n\n//取得某位病人體重資訊\nexport function getOnePatientWeight(hisid) {\n  return axios.get(\"patientweight/getOnepatientweight/\" + hisid);\n}\n\n//----------------------------------------------\n// prescription-order-controller Prescription Order\n//----------------------------------------------\n//建立Prescription Order資訊\nexport function createPrescriptionOrder(caseid, dosage, editTime, endTime, frequency, hisid, name, note, route, scientificName, startTime, state, unit) {\n  const body = {\n    caseid: caseid,\n    dosage: dosage,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    route: route,\n    scientificName: scientificName,\n    startTime: startTime,\n    state: state,\n    unit: unit\n  }\n  return axios.post(\"prescriptionorder/createprescriptionorder\", body);\n}\n\n//取得全部資訊\nexport function getAllPrescriptionOrder() {\n  return axios.get(\"prescriptionorder/getAllprescriptionorder\");\n}\n\n//更新Prescription Order備註\nexport function updatePrescriptionOrder(updateTime, caseid, dosage, editTime, endTime, frequency, hisid, name, note, route, scientificName, startTime, state, unit) {\n  const body = {\n    caseid: caseid,\n    dosage: dosage,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    route: route,\n    scientificName: scientificName,\n    startTime: startTime,\n    state: state,\n    unit: unit\n  }\n  return axios.put(\"prescriptionorder/updateponote/\" + updateTime, body);\n}\n\n//----------------------------------------------\n// schedule-controller 排程與事件(Ward/Patient View)\n//----------------------------------------------\n//建立排程資訊\nexport function createPatientSchedule(bednumber, context, time, transinno, type, writter, name, hisid) {\n  const body = {\n    bednumber: bednumber,\n    context: context,\n    time: time,\n    transinno: transinno,\n    type: type,\n    writter: writter,\n    name: name,\n    hisid: hisid\n  }\n  return axios.post(\"schedule/createschedule\", body);\n}\n\n//刪除某人某天排程資訊\nexport function deletePatientSchedule(transinno, date) {\n  return axios.delete(\"schedule/delschedule/\" + transinno + \"/\" + date);\n}\n\n//取得全部資訊\nexport function getAllSchedule() {\n  return axios.get(\"schedule/getAllschedule\");\n}\n\n//取得某位某時段病人資訊\nexport function getOnePatientSchedule(transinno, starttime, endtime) {\n  return axios.get(\"schedule/getOnepatient/\" + transinno + \"/\" + starttime + \"/\" + endtime);\n}\n\n//----------------------------------------------\n// sso-controller SSO Controller\n//----------------------------------------------\n//get_user_profile\nexport function ssoUserProfile(app_COMPANY_UUID, app_USER_BASIC_PROFILE, app_USER_NODE_UUID, privileged_APP_SSO_TOKEN, public_APP_USER_SSO_TOKEN_TO_QUERY) {\n  const body = {\n    app_COMPANY_UUID: app_COMPANY_UUID,\n    app_USER_BASIC_PROFILE: app_USER_BASIC_PROFILE,\n    app_USER_NODE_UUID: app_USER_NODE_UUID,\n    privileged_APP_SSO_TOKEN: privileged_APP_SSO_TOKEN,\n    public_APP_USER_SSO_TOKEN_TO_QUERY: public_APP_USER_SSO_TOKEN_TO_QUERY\n  }\n  return axios.post(\"nicu/get_user_profile\", body);\n}\n\n//get_uuid\nexport function ssoUuid(privileged_APP_SSO_TOKEN, public_APP_USER_SSO_TOKEN_TO_QUERY) {\n  const body = {\n    privileged_APP_SSO_TOKEN: privileged_APP_SSO_TOKEN,\n    public_APP_USER_SSO_TOKEN_TO_QUERY: public_APP_USER_SSO_TOKEN_TO_QUERY\n  }\n  return axios.post(\"nicu/get_uuid\", body);\n}\n\n//Login\nexport function ssoLogin(app_PRIVATE_ID, app_PRIVATE_PASSWD) {\n  const body = {\n    app_PRIVATE_ID: app_PRIVATE_ID,\n    app_PRIVATE_PASSWD: app_PRIVATE_PASSWD\n  }\n  return axios.post(\"nicu/login\", body);\n}\n\n//login_action\nexport function ssoLoginAction(login_name, password) {\n  const body = {\n    login_name: login_name,\n    password: password\n  }\n  return axios.post(\"nicu/login_a\", body);\n}\n\n//----------------------------------------------\n// stored-procedure-controller Stored Procedure Controller\n//----------------------------------------------\n//getADMDISP\nexport function getStoredProcedureADMDISP(hisid, caseno) {\n  return axios.get(\"ADMDISP/\" + hisid + \"/\" + caseno);\n}\n\n//getADMLIST\nexport function getStoredProcedureADMLIST(hisid, docid) {\n  return axios.get(\"ADMLIST/\" + hisid + \"/\" + docid);\n}\n\n//getCPSDISP\nexport function getStoredProcedureCPSDISP(hisid, caseno, seq) {\n  return axios.get(\"CPSDISP/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//getCPSLIST\nexport function getStoredProcedureCPSLIST(hisid, docid) {\n  return axios.get(\"CPSLIST/\" + hisid + \"/\" + docid);\n}\n\n//getDISDISP\nexport function getStoredProcedureDISDISP(hisid, caseno) {\n  return axios.get(\"DISDISP/\" + hisid + \"/\" + caseno);\n}\n\n//getDISLIST\nexport function getStoredProcedureDISLIST(hisid, docid) {\n  return axios.get(\"DISLIST/\" + hisid + \"/\" + docid);\n}\n\n//getDTAROTQ4\nexport function getStoredProcedureDTAROTQ4(hisid) {\n  return axios.get(\"DTAROTQ4/\" + hisid);\n}\n\n//getDTASOAPQ\nexport function getStoredProcedureDTASOAPQ(hisid, date, dpt) {\n  return axios.get(\"DTASOAPQ/\" + hisid + \"/\" + date + \"/\" + dpt);\n}\n\n//getERDISP\nexport function getStoredProcedureERDISP(hisid, caseno) {\n  return axios.get(\"ERDISP/\" + hisid + \"/\" + caseno);\n}\n\n//getOPSORAQ1\nexport function getStoredProcedureOPSORAQ1(hisid) {\n  return axios.get(\"OPSORAQ1/\" + hisid);\n}\n\n//getOPSORAQ2\nexport function getStoredProcedureOPSORAQ2(hisid, date, times) {\n  return axios.get(\"OPSORAQ2/\" + hisid + \"/\" + date + \"/\" + times);\n}\n\n//getORDLIST\nexport function getStoredProcedureORDLIST(hisid, date, dpt, docid) {\n  return axios.get(\"ORDLIST/\" + hisid + \"/\" + date + \"/\" + dpt + \"/\" + docid);\n}\n\n//getPCASELIST\nexport function getStoredProcedurePCASELIST(hisid, docid, ttype) {\n  return axios.get(\"PCASELIST/\" + hisid + \"/\" + docid + \"/\" + ttype);\n}\n\n//getPRGTXQRY\nexport function getStoredProcedurePRGTXQRY(hisid, date, caseno) {\n  return axios.get(\"PRGTXQRY/\" + date + \"/\" + hisid + \"/\" + caseno);\n}\n\n//getRESDBGAS\nexport function getStoredProcedureRESDBGAS(hisid, date) {\n  return axios.get(\"RESDBGAS/\" + hisid + \"/\" + date);\n}\n\n//getRESDGLU1\nexport function getStoredProcedureRESDGLU1(hisid, date) {\n  return axios.get(\"RESDGLU1/\" + hisid + \"/\" + date);\n}\n\n//getRESDISP\nexport function getStoredProcedureRESDISP(hisid, month, caseno, seq) {\n  return axios.get(\"RESDISP/\" + month + \"/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//getRESDNM2\nexport function getStoredProcedureRESDNM2(hisid, date) {\n  return axios.get(\"RESDNM2/\" + hisid + \"/\" + date);\n}\n\n//getRESLAB01\nexport function getStoredProcedureRESLAB01(hisid, date) {\n  return axios.get(\"RESLAB01/\" + hisid + \"/\" + date);\n}\n\n//getRESLAB02\nexport function getStoredProcedureRESLAB02(hisid, date) {\n  return axios.get(\"RESLAB02/\" + hisid + \"/\" + date);\n}\n\n//getRESLAB0C\nexport function getStoredProcedureRESLAB0C(hisid, date) {\n  return axios.get(\"RESLAB0C/\" + hisid + \"/\" + date);\n}\n\n//getRESSECT\nexport function getStoredProcedureRESSECT(hisid, month, dpt, docid) {\n  return axios.get(\"RESSECT/\" + month + \"/\" + hisid + \"/\" + dpt + \"/\" + docid);\n}\n\n//getTRTMNTQ1\nexport function getStoredProcedureTRTMNTQ1(hisid, caseno) {\n  return axios.get(\"TRTMNTQ1/\" + hisid + \"/\" + caseno);\n}\n\n//getUDORDER0\nexport function getStoredProcedureUDORDER0(hisid, caseno, seq) {\n  return axios.get(\"UDORDER0/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//getUDTEXTQ1\nexport function getStoredProcedureUDTEXTQ1(caseno, seq) {\n  return axios.get(\"UDTEXTQ1/\" + caseno + \"/\" + seq);\n}\n\n//getWARDFLAG\nexport function getStoredProcedureWARDFLAG(hisid, caseno, seq) {\n  return axios.get(\"WARDFLAG/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//----------------------------------------------\n// table-controller Table Controller\n//----------------------------------------------\n//getTableHBED\nexport function getTableHBED() {\n  return axios.get(\"HBED\");\n}\n\n//getTablePBASINFO\nexport function getTablePBASINFO(PHISTNUM) {\n  return axios.get(\"PBASINFO/\" + PHISTNUM);\n}\n\n//getTablePDOCNEW\nexport function getTablePDOCNEW(PCASENO) {\n  return axios.get(\"PDOCNEW/\" + PCASENO);\n}\n\n//getTablePLOC\nexport function getTablePLOC(PCASENO) {\n  return axios.get(\"PLOC/\" + PCASENO);\n}\n\n//----------------------------------------------\n// to-do-controller 待辦事項To Do List(Ward/Patient View)\n//----------------------------------------------\n//建立待辦資訊\nexport function createTodo(caseid, context, time, transinno, type) {\n  const body = {\n    caseid: caseid,\n    context: context,\n    time: time,\n    transinno: transinno,\n    type: type\n  }\n  return axios.post(\"todo/createtodo\", body);\n}\n\n//刪除某件待辦資訊\nexport function deleteTodo(index) {\n  return axios.delete(\"todo/deltodo/\" + index);\n}\n\n//取得全部資訊\nexport function getAllTodo() {\n  return axios.get(\"todo/getAlltodo\");\n}\n\n//取得某位病人資訊\nexport function getOneTodo(transinno, caseid) {\n  return axios.get(\"todo/getOnepatient/\" + transinno + \"/\" + caseid);\n}\n\n//----------------------------------------------\n// tpn-controller TPN Controller\n//----------------------------------------------\n//createTPN\nexport function createTPN(aa, ca, editTime, endTime, frequency, glu, hisid, k, mg, na, name, notice, p, startTime, state, tpn) {\n  const body = {\n    aa: aa,\n    ca: ca,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    glu: glu,\n    hisid: hisid,\n    k: k,\n    mg: mg,\n    na: na,\n    name: name,\n    notice: notice,\n    p: p,\n    startTime: startTime,\n    state: state,\n    tpn: tpn\n  }\n  return axios.post(\"tpn/createtpn\", body);\n}\n\n//getTPN\nexport function getAllTPN() {\n  return axios.get(\"tpn/getAlltpn\");\n}\n\n//----------------------------------------------\n// treatment-order-controller Treatment Order\n//----------------------------------------------\n//建立Treatment Order資訊\nexport function createTreatmentOrder(caseid, editTime, endTime, frequency, hisid, name, note, startTime, state) {\n  const body = {\n    caseid: caseid,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    startTime: startTime,\n    state: state\n  }\n  return axios.post(\"treatmentorder/createtreatmentorder\", body);\n}\n\n//取得全部資訊\nexport function getAllTreatmentOrder() {\n  return axios.get(\"treatmentorder/getAlltreatmentorder\");\n}\n\n//更新Treatment Order備註\nexport function updateTreatmentOrder(EditTime, caseid, editTime, endTime, frequency, hisid, name, note, startTime, state) {\n  const body = {\n    caseid: caseid,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    startTime: startTime,\n    state: state\n  }\n  return axios.put(\"treatmentorder/updatetonote/\" + EditTime, body);\n}\n\n//----------------------------------------------\n// ward-bed-information-history-controller 歷史病床資訊(Ward View)\n//----------------------------------------------\n//建立床位歷史資訊\nexport function createWardbedInformation(breath, hisid, nonBreath, onBedNumber, tpn, updateTime) {\n  const body = {\n    breath: breath,\n    hisid: hisid,\n    nonBreath: nonBreath,\n    onBedNumber: onBedNumber,\n    tpn: tpn,\n    updateTime: updateTime\n  }\n  return axios.post(\"wardbedinformation/createwardbedinformation\", body);\n}\n\n//取得全部資訊\nexport function getAllWardbedInformation() {\n  return axios.get(\"wardbedinformation/getAllwardbedinformation\");\n}\n\n//當日床位資訊\nexport function getOneWardbedInformation(date) {\n  return axios.get(\"wardbedinformation/getOnewardbedinformation/\" + date);\n}\n\n//近兩週床位資訊\nexport function getWeekWardbedInformation(date) {\n  return axios.get(\"wardbedinformation/getWeekswardbedinformation/\" + date);\n}\n\n//----------------------------------------------\n// ward-information-controller Ward Information Controller\n//----------------------------------------------\n//建立WardInformation資訊\nexport function createWardInformation(bednumber, caseid, hisid, indexId, today, transformintime, transformouttime) {\n  const body = {\n    bednumber: bednumber,\n    caseid: caseid,\n    hisid: hisid,\n    indexId: indexId,\n    today: today,\n    transformintime: transformintime,\n    transformouttime: transformouttime\n  }\n  return axios.post(\"wardinformation/createwardinformation\", body);\n}\n\n//取得全部資訊\nexport function getAllWardInformation() {\n  return axios.get(\"wardinformation/getAllwardinformation\");\n}\n\n//取得當日資訊\nexport function getOneWardInformation(date) {\n  return axios.get(\"wardinformation/getTodaywardinformation/\" + date);\n}\n\n//----------------------------------------------\n// ward-state-controller 病床狀態(Ward View)\n//----------------------------------------------\n//建立床位狀態資訊\nexport function createWardState(anti, breath, drain, foley, hd, hisid, npo, tpn) {\n  const body = {\n    anti: anti,\n    breath: breath,\n    drain: drain,\n    foley: foley,\n    hd: hd,\n    hisid: hisid,\n    npo: npo,\n    tpn: tpn\n  }\n  return axios.post(\"wardstate/createwardstate\", body);\n}\n\n//取得全部資訊\nexport function getAllWardState() {\n  return axios.get(\"wardstate/getAllwardstate\");\n}\n\n//取得某人床位狀態資訊\nexport function getOneWardState(hisid) {\n  return axios.get(\"wardstate/getOnewardstate/\" + hisid);\n}\n\n//----------------------------------------------\n// ward-value-controller 生命跡象(Ward/Patient View)\n//----------------------------------------------\n//建立生命跡象資訊\nexport function createWardValue(abpd, abpm, abps, bt, hr, nbpd, nbpm, nbps, phistnum, rr, spO2, time) {\n  const body = {\n    abpd: abpd,\n    abpm: abpm,\n    abps: abps,\n    bt: bt,\n    hr: hr,\n    nbpd: nbpd,\n    nbpm: nbpm,\n    nbps: nbps,\n    phistnum: phistnum,\n    rr: rr,\n    spO2: spO2,\n    time: time\n  }\n  return axios.post(\"wardvalue/createwardvalue\", body);\n}\n\nexport function getWardDebInfo(date) {\n  return axios.get(\"patient/getWardDebInfo/\" + date);\n}\n\nexport function getPatientwardvalueMedian(hisid, startTime, endTime) {\n  return axios.get(\"wardvalue/getPatientwardvalueMedian/\" + hisid + \"/\" + startTime + \"/\" + endTime);\n}\n\n\nexport function getPatientwardvalueBoxPlot(hisid, startTime, endTime, type, interval) {\n  return axios.get(\"wardvalue/getPatientwardvalueBoxPlot/\" + hisid + \"/\" + startTime + \"/\" + endTime + \"/\" + type + \"/\" + interval);\n}\n\nexport function getVitalSignData(hisid, startTime, endTime, type) {\n  return axios.get(\"wardvalue/getVitalSignData/\" + hisid + \"/\" + startTime + \"/\" + endTime + \"/\" + type);\n}\n\n//取得全部資訊\nexport function getAllWardValue() {\n  return axios.get(\"wardvalue/getAllwardvalue\");\n}\n\n//取得全部資訊\nexport function getHisidwardvalue(hisid) {\n  return axios.get(\"wardvalue/getHisidwardvalue/\" + hisid);\n}\n\n//取得某一段時間某一個人生命跡象(原始資料)\nexport function getPatientWardValue(endTime, hisid, startTime, interval, type) {\n  return axios.get(\"wardvalue/getPatientwardvalue/\" + hisid + \"/\" + startTime + \"/\" + endTime + \"/\" + type + \"/\" + interval);\n}\n\n//----------------------------------------------\n// water-volume-controller Water Volume Controller\n//----------------------------------------------\n//createWaterVolume\nexport function createWaterVolume(endTime, feed, hisid, iv, other, startTime, updateTime) {\n  const body = {\n    endTime: endTime,\n    feed: feed,\n    hisid: hisid,\n    iv: iv,\n    other: other,\n    startTime: startTime,\n    updateTime: updateTime\n  }\n  return axios.post(\"watervolume/createwatervolume\", body);\n}\n\n//取得全部資訊\nexport function getAllWaterVolume() {\n  return axios.get(\"watervolume/getAllwatervolume\");\n}\n","import axios from 'axios';\n\nconst githubApiUrl = \"https://raw.githubusercontent.com/gerrykiki/JsonRegObject/master/\";\n\n//create new instance of github API\nvar axiosGithub = axios.create({\n    baseURL: githubApiUrl,\n    timeout: 1000,\n    //headers: {'X-Custom-Header': 'foobar'}\n});\n\nexport function getGitHubJson(string) {\n    return axiosGithub.get(string);\n}\n\n// export function getExamReport() {\n//     return axios.get(\"ExamRepor.json\");\n// }\n\n","import React, { Component } from 'react';\nimport { wardstatestringformat } from '../Function/Wardstate'\nimport './Wardcardstatus.scss'\nimport * as ApiProvider from '../API/ApiProvider'\nimport * as ApiGithub from '../API/ApiGithub'\n// import moment from 'moment';\n// import * as RegularData from '../Data/RegularData'\n\nclass Wardcarstatus extends Component {\n    state = {\n        TRTMNTQ1: [],\n        UDORDER0: [],\n        FlagReg: []\n    }\n    componentDidMount() {\n        const { PCASENO, PHISTNUM } = this.props\n        console.log(PCASENO, PHISTNUM)\n        const TRQ1 = ApiProvider.getStoredProcedureTRTMNTQ1(PHISTNUM, PCASENO)\n            .then(data => {\n                console.log(data.data)\n                const rowList = data.data\n                const filterStatusList = rowList.filter(function (info, index, arr) {\n                    return Number(info.ORSTATUS) === 30\n                })\n                return filterStatusList\n            })\n            .catch(err => {\n\n            })\n        const UDORDER = ApiProvider.getStoredProcedureUDORDER0(PHISTNUM, PCASENO, \"123\")\n            .then(data => {\n                console.log(data.data)\n                var List = []\n                const dataList = data.data\n                if (Array.isArray(dataList)) {\n                    for (let index = 0; index < dataList.length; index++) {\n                        const status = Number(dataList[index].UDSTATUS)\n                        if (status === 80) {\n                            List.push(dataList[index])\n                        }\n                    }\n                }\n                return List\n            })\n            .catch(err => {\n\n            })\n        const Reg = ApiGithub.getGitHubJson(\"FlagReg.json\")\n            .then(data => {\n                console.log(data.data)\n                return data.data\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        Promise.all([TRQ1, UDORDER, Reg])\n            .then(result => {\n                this.setState({\n                    TRTMNTQ1: result[0],\n                    UDORDER0: result[1],\n                    FlagReg: result[2]\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    render() {\n        function RespiratorStatusParse(InvasiveRespiratorStatus, NonInvasiveRespiratorStatus) {\n            if (InvasiveRespiratorStatus === false && NonInvasiveRespiratorStatus === false) {\n                return \"false\"\n            }\n            if (InvasiveRespiratorStatus === true && NonInvasiveRespiratorStatus === true) {\n                return \"false\"\n            }\n            if (InvasiveRespiratorStatus === true) {\n                return '呼(侵入)'\n            }\n            if (NonInvasiveRespiratorStatus === true) {\n                return \"呼(非侵入)\"\n            }\n            return \"--\"\n        }\n\n        function parseFlagData(TRTMNTQ1, UDORDER, FlagReg, type) {\n            //filter  status 生效中\n            console.log(FlagReg, type)\n            if (FlagReg === undefined || FlagReg === null) { return null }\n            const Flag = FlagReg.filter(function (value, index, arr) {\n                return value.item === type\n            })\n            if (Flag.length === 0) {\n                return null\n            }\n            const StatusUDORDER = UDORDER.some(function (value, index, arr) {\n                const UDDRGNAM = value.UDDRGNAM.toLowerCase()\n                const UDGNAME = value.UDGNAME.toLowerCase()\n                const findFlag = Flag[0].ParseValueUD.some(function (value, index, arr) {\n                    return UDDRGNAM.indexOf(value) >= 0 || UDGNAME.indexOf(value)\n                })\n                return findFlag\n            })\n            const StatusTRTMNTQ1 = TRTMNTQ1.some(function (value, index, arr) {\n                const ORPROCED = value.ORPROCED.toLowerCase()\n                const findFlag = Flag[0].ParseValueTRT.some(function (value, index, arr) {\n                    console.log(value)\n                    return ORPROCED.match(value) !== null\n                    // return value\n                })\n                return findFlag\n            })\n            if (StatusUDORDER === false && StatusTRTMNTQ1 === false) {\n                return false\n            }\n            return true\n        }\n\n        function statusspan(source) {\n            if (source.item === 'Respirator') {\n                return 'gridtwocoltwo'\n            }\n            else return 'gridtwocolone'\n        }\n        function style_change(source) {\n            if (source.item === 'Respirator') {\n                if (source.data === '呼(侵入)') {\n                    return 'statustrue'\n                }\n                if (source.data === '呼(非侵入)') {\n                    return 'statusfalse'\n                }\n                if (source.data === 'true') {\n                    return 'statustrue'\n                }\n                return 'statusfalse'\n\n            }\n            else {\n                if (source.data) {\n                    return 'statustrue'\n                }\n                else {\n                    return 'statusfalse'\n                }\n            }\n        }\n\n        const UDORDER = this.state.UDORDER0\n        const TRTMNTQ1 = this.state.TRTMNTQ1\n        const Flag = this.state.FlagReg\n        const AntiStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"Anti\")\n        const TPNStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"TPN\")\n        const NP0Status = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"NPO\")\n        const FoleyStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"Foley\")\n        const DrainStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"Drain\")\n        const InvasiveRespiratorStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"InvasiveRespirator\")\n        const NonInvasiveRespiratorStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"NonInvasiveRespirator\")\n        const RespiratorStatus = RespiratorStatusParse(InvasiveRespiratorStatus, NonInvasiveRespiratorStatus)\n\n        const StatusArray = [\n            { \"item\": \"Respirator\", \"data\": RespiratorStatus },\n            { \"item\": \"CVC\", \"data\": FoleyStatus },\n            { \"item\": \"NPO\", \"data\": NP0Status },\n            { \"item\": \"TPN\", \"data\": TPNStatus },\n            { \"item\": \"Abx\", \"data\": AntiStatus },\n            { \"item\": \"Xanth\", \"data\": [] },\n            { \"item\": \"照光\", \"data\": [] },\n            { \"item\": \"DRN\", \"data\": DrainStatus }\n        ]\n\n        const statuslist = StatusArray.map(function (info, index, arr) {\n            return (\n                <div key={index} className={statusspan(info)}>\n                    <t4 className={style_change(info)}>{wardstatestringformat(info)}</t4>\n                </div>\n            );\n        })\n        const source = this.props.source\n        return (\n            <div className={source ? \"warscardstatusgrid\" : \"wardinfouserstatusgrid\"}>\n                {statuslist}\n            </div >\n        );\n    }\n}\n\nexport default Wardcarstatus\n","import React, { useState, useEffect } from \"react\";\nimport { statecolor } from '../Function/Wardstate'\nimport Wardcarstatus from './Wardcardstatus'\nimport * as ApiProvider from '../API/ApiProvider'\nimport './Wardcardvalue.scss'\n\nexport function WardCard(props) {\n    const [CenterMonitorValue, SetCenterMonitorValue] = useState(null)\n    const [HID, SetHID] = useState(\"\")\n    const [Timer, SetTimer] = useState(0)\n    useEffect(() => {\n        const TimerID = setInterval(() => {\n            SetTimer(Timer + 1)\n        }, 5000)\n        return () => clearInterval(TimerID);\n    }, [Timer])\n\n    useEffect(() => {\n        const hisid = props.PHISTNUM.toString().trim()\n        // const hisid = \"TEST1234\"\n        ApiProvider.getHisidwardvalue(hisid)\n            .then(data => {\n                console.log(data.data)\n                const source = data.data\n                const HID = source.phistnum\n                SetCenterMonitorValue(source[0]);\n                SetHID(HID)\n            })\n            .catch(err => {\n                console.log(\"Andy test getHisidwardvalue NG \" + JSON.stringify(err));\n            });\n    }, [Timer]);\n    function InitCenterData(value) {\n        console.log(value)\n        if (value === undefined || value === null || value === \"\") {\n            return \"--\"\n        }\n        else return value\n    }\n    console.log(CenterMonitorValue)\n    if (CenterMonitorValue === null || CenterMonitorValue === undefined) {\n        return null\n    }\n    return (\n        <div className='Wardcardvaluelayout'>\n            <div className='Wardcardvitalvalue'>\n                <div className='valueRows'>\n                    <div >\n                        <t4 style={{ display: \"block\", color: statecolor('HR'), }}>HR</t4>\n                        <t2 className=\"bothWordValue\" style={{ color: statecolor('HR') }}>{InitCenterData(CenterMonitorValue.hr)}</t2>\n                    </div>\n                    <div >\n                        <t4 style={{ display: \"block\", color: statecolor('SpO2') }}>SpO<sub>2</sub></t4>\n                        <t2 className=\"bothWordValue\" style={{ color: statecolor('SpO2') }}>\n                            {InitCenterData(CenterMonitorValue.spo2)}\n                            <span style={{ fontWeight: \"400\", fontSize: \"12px\" }}>%</span>\n                        </t2>\n                    </div>\n                </div>\n                <div className='valueRows'>\n                    <div >\n                        <t4 style={{ display: \"block\", color: statecolor('BP') }}>ABP</t4>\n                        <t2 className=\"bothWordValue\" style={{ color: statecolor('BP') }}>{InitCenterData(CenterMonitorValue.abpd)}/{InitCenterData(CenterMonitorValue.abps)}({InitCenterData(CenterMonitorValue.abpm)})</t2>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnsGap: \"5px\" }}>\n                        <div >\n                            <t4 style={{ display: \"block\", color: statecolor('RR') }}>RR</t4>\n                            <t2 className=\"bothWordValue\" style={{ color: statecolor('RR') }}>{InitCenterData(CenterMonitorValue.rr)}</t2>\n                        </div>\n                        <div >\n                            <t4 style={{ display: \"block\", color: statecolor('BT') }}>BT</t4>\n                            <t2 className=\"bothWordValue\" style={{ color: statecolor('BT') }}>\n                                {InitCenterData(CenterMonitorValue.bt)}\n                                <span style={{ fontWeight: \"400\", fontSize: \"12px\" }}>&deg;C</span>\n                            </t2>\n                        </div>\n                    </div>\n                </div>\n            </div >\n            <Wardcarstatus source={true} PCASENO={props.PCASENO} PHISTNUM={props.PHISTNUM}></Wardcarstatus>\n        </div >\n    );\n}\n","function bednumberformat(number) {\n    if (number < 10) {\n        return '0' + number\n    }\n    return number\n}\n\nfunction gender(gender) {\n    if (gender === \"1\") {\n        return '男'\n    }\n    return '女'\n}\n\nfunction WardCardgender(gender) {\n    console.log(gender)\n    if (gender === \"M\") {\n        return '男'\n    }\n    return '女'\n}\n\nfunction pregancybirthdayweekday(pregancy, birthday) {\n    const pregancydays = (new Date(birthday).getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    const pregancyweeks = pregancydays / 7\n    const pregancyweeksdays = pregancydays % 7\n    return '[' + parseInt(pregancyweeks) + '+' + parseInt(pregancyweeksdays) + ']'\n}\n\nfunction pregancynowweek(pregancy) {\n    const pregancydays = (new Date().getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    console.log(pregancydays)\n    const pregancyweeks = pregancydays / 7\n    const pregancyweeksdays = pregancydays % 7\n    console.log(pregancyweeksdays)\n    return '[' + parseInt(pregancyweeks) + '+' + parseInt(pregancyweeksdays) + ']'\n}\n\nfunction pregancytoloaclweeks(pregancy) {\n    const pregancydays = (new Date().getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    console.log(pregancydays)\n    return parseInt(pregancydays / 7)\n}\n\nfunction pregancytolocaldays(pregancy) {\n    const pregancydays = (new Date().getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n\n    return parseInt(pregancydays % 7)\n}\n\nfunction pregancyweek(pregancy, birthday) {\n    const pregancydays = (new Date(birthday).getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    const pregancyweeks = pregancydays / 7\n    return parseInt(pregancyweeks)\n}\n\nfunction pregancydays(pregancy, birthday) {\n    const pregancydays = (new Date(birthday).getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    const pregancyweekdays = pregancydays % 7\n    return parseInt(pregancyweekdays)\n}\n\nfunction birthdayweeks(birthday) {\n    const birthdays = (new Date().getTime() - new Date(birthday).getTime()) / (24 * 60 * 60 * 1000)\n    return parseInt(birthdays / 7)\n}\n\nfunction pregancyweeksanddays(bornweeks, borndays, birthdays) {\n    if (bornweeks === null || bornweeks === undefined || bornweeks === \"\") {\n        return \"[ -- + -- ]\"\n    }\n    if (borndays === null || borndays === undefined || borndays === \"\") {\n        return \"[ -- + -- ]\"\n    }\n    if (birthdays === null || birthdays === undefined || birthdays === \"\") {\n        return \"[ -- + -- ]\"\n    }\n    const localtoborndays = parseInt((new Date().getTime() - new Date(birthdays).getTime()) / (24 * 60 * 60 * 1000)) + parseInt(borndays) + 1\n    const localweeks = parseInt(localtoborndays / 7) + parseInt(bornweeks)\n    const localdays = parseInt(localtoborndays % 7)\n    return \"[\" + localweeks + \"+\" + localdays + \"]\"\n\n}\n\nfunction WeightFormat(BornWeight, Weight) {\n    return BornWeight + \"g -> \" + Weight + \"g\"\n\n}\nexport { bednumberformat, gender, pregancybirthdayweekday, pregancynowweek, pregancyweek, pregancydays, birthdayweeks, pregancytoloaclweeks, pregancytolocaldays, pregancyweeksanddays, WardCardgender, WeightFormat }","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n//Component\nimport * as Wardstate from '../../Function/Wardstate'\nimport * as Wardcardvalue from '../WardCardvalue-k'\nimport { bednumberformat, WardCardgender } from '../../Function/Wardbedfunction'\nimport './Wardcarddetail.scss'\n//image\nimport editlogo from '../../Image/svg/edit2.svg'\nimport fileLogo from '../../Image/svg/file1.svg'\nimport file2Logo from '../../Image/svg/file2.svg'\n//antdesign\nimport { Modal, InputNumber, Button } from 'antd';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment';\n\nvar BornChangeWeek = 0\nvar BornChangeDay = 0\nvar BornChangeWeight = 0\nclass Wardcarddetail extends Component {\n    state = {\n        hoverstate: \"none\",\n        clickstate: false,\n        mouse_hover: false,\n        edit_hover: false,\n        visible: false,\n        pbasignfo: null,\n        birthdayweight: \"N\",\n        weight: 0,\n        bornweek: 0,\n        bornday: 0,\n        nowweight: 0,\n        report: 0,\n        nonreport: 0,\n        remark: \"\",\n        TRANSINID: \"\",\n        TRANSINDT: \"\",\n        TRANSINTM: \"\",\n\n        modatstatus: true,\n        persionstatus: []\n    };\n\n    componentDidMount() {\n        const { data } = this.props\n        const HID = data.PHISTNUM\n        const date = moment().add(-1, \"days\")\n        console.log(date.format(\"YYYY-MM-DD HH:mm:ss\"))\n        const TRID = data.TRID\n        this.API_DATA(HID, date, TRID)\n    }\n\n    API_DATA(HID, date, TRID) {\n        ApiProvider.getStoredProcedureRESSECT(HID, 1, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                const ReportList = data.data\n                const mapList = ReportList.filter(function (value, index, array) {\n                    const DTstring = value.ORRCPDT.toString()\n                    const TMstring = value.ORRCPTM.toString()\n                    const time = DTstring + TMstring\n                    return moment(time, 'YYYY-MM-DDHH:mm:ss').valueOf() > date.valueOf()\n                })\n                this.setState({ report: mapList.length })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureRESSECT NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureORDLIST(HID, date.format('YYYY-MM-DD'), \"ALL\", \"DOC3924B\")\n            .then(data => {\n                const filter = data.data.filter(function (info, index, arr) {\n                    return info.ORSTATUS === \"31\"\n                })\n                this.setState({ nonreport: filter.length })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getOnePatientRemark(TRID)\n            .then(data => {\n                this.setState({\n                    remark: data.data[0].context\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getOnePatientRemark NG \" + JSON.stringify(err));\n            })\n        ApiProvider.getPersionalStatus(HID)\n            .then(data => { console.log(data.data); this.setState({ persionstatus: data.data }) })\n            .catch(err => { console.log(err) })\n    }\n\n    //Module show\n    handleOk(HID, name, sex) {\n        console.log(HID, name, sex)\n        const week = Number(BornChangeWeek)\n        const day = Number(BornChangeDay)\n        const weight = parseFloat(Number(BornChangeWeight) / 1000).toFixed(3)\n        if (weight === undefined || weight === 0 || weight === null || week === 0 || day === 0 || week === undefined || week === null || day === null || day === undefined) {\n            console.log(\"No Input\")\n            this.setState({ modatstatus: false })\n\n        }\n        else if (Number(day) > 6) {\n            this.setState({ modatstatus: false })\n        }\n        else {\n            console.log(\"Create\")\n            ApiProvider.createPatientInfo(HID, name, sex, weight, week, day)\n                .then(data => { console.log(data.data); this.setState({ visible: false, modatstatus: true }) })\n                .catch(err => { console.log(err) })\n        }\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n            modatstatus: true\n        });\n    };\n    showModal = () => { this.setState({ visible: true }); };\n\n    Modelrender(personstatus) {\n        function typefrom(from) {\n            if (from === 'Custom') {\n                return true\n            }\n            return false\n        }\n        function BornWeekAndDay(BornWeeks, BornDays) {\n            if (BornWeeks === null || BornWeeks === undefined || BornWeeks === \"\") {\n                return []\n            }\n            return [BornWeeks, BornDays]\n        }\n        const { data } = this.props\n        const source = data\n        const HID = source.PHISTNUM.toString().trim()\n        const name = source.PNAMEC.toString().trim()\n        const sex = source.PSEX.toString().trim()\n        const Birthday = source.PBIRHDT\n        const BornWeight = personstatus.BornWeight\n        const BornWeeks = personstatus.BornWeeks\n        const BornWdays = personstatus.BornDays\n        const BornStatus = BornWeekAndDay(BornWeeks, BornWdays)\n        console.log(personstatus)\n        const viewstatus = this.state.modatstatus\n        const dataArray = [\n            { item: \"病床號碼:\", value: bednumberformat(parseInt(source.HBEDNO)) },\n            { item: \"病歷號碼:\", value: source.PHISTNUM.toString().trim() },\n            { item: \"出生週數:\", value: BornStatus },\n            { item: \"生日:\", value: moment(Birthday, 'YYYYMMDD').format('YYYY/MM/DD') },\n            { item: \"出生體重:\", value: BornWeight }\n        ]\n        const dataArrayRender = dataArray.map(function (info, index, arr) {\n            if (info.item === \"出生體重:\") {\n                return (\n                    <div key={index} >\n                        <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\", height: \"50px\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                                {info.item}\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                                <InputNumber defaultValue={info.value} onChange={(value) => { BornChangeWeight = value }}></InputNumber>\n                                <div style={{ margin: \"0px 5px\" }}>g</div>\n                            </div>\n                        </div>\n                        <div style={{ display: viewstatus ? \"none\" : \"block\", color: \"red\" }}>輸入錯誤</div>\n                    </div>\n                );\n            }\n            if (info.item === \"出生週數:\") {\n                if (info.value.length === 0) {\n                    return (\n                        <div key={index}>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\", height: \"50px\" }}>\n                                <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                                    {info.item}\n                                </div>\n                                <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                                    <InputNumber onChange={(value) => { BornChangeWeek = value }}></InputNumber>\n                                    <div style={{ margin: \"0px 5px\" }}>週</div>\n                                    <InputNumber onChange={(value) => { BornChangeDay = value }}></InputNumber>\n                                    <div style={{ margin: \"0px 5px\" }}>日</div>\n                                </div>\n                            </div>\n                            <div style={{ display: viewstatus ? \"none\" : \"block\", color: \"red\" }}>輸入錯誤</div>\n                        </div>\n                    );\n                }\n                return (\n                    <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\", height: \"50px\" }}>\n                        <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                            {info.item}\n                        </div>\n                        <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                            {info.value[0]}\n                            <div style={{ margin: \"0px 5px\" }}>週</div>\n                            {info.value[1]}\n                            <div style={{ margin: \"0px 5px\" }}>日</div>\n                        </div>\n                    </div>\n                );\n            }\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\", height: \"50px\" }}>\n                    <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                        {info.item}\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                        {info.value}\n                    </div>\n                </div>\n            );\n        })\n        return (\n            <Modal\n                width={400}\n                title=\"填寫病床資訊\"\n                visible={this.state.visible}\n                onCancel={this.handleCancel}\n                footer={\n                    <div style={{ display: \"flex\", justifyContent: typefrom(source.type) ? 'space-between' : 'flex-end', alignItems: \"center\" }}>\n                        <Button key=\"delete\" style={typefrom(source.type) ? { border: \"1px solid rgba(208,2,27,1)\", color: \"rgba(208,2,27,1)\" } : { display: \"none\" }} onClick={this.handleCancel}>清床</Button>\n                        <div>\n                            <Button key=\"cancel\" onClick={this.handleCancel}>取消</Button>\n                            <Button key=\"ok\" type=\"primary\" onClick={() => { console.log(HID, name, sex); this.handleOk(HID, name, sex) }}>儲存</Button>\n                        </div>\n                    </div>}>\n                {dataArrayRender}\n            </Modal>\n        );\n    }\n    render() {\n        function valueFormat(value) {\n            if (value === \"\" || value === null || value === undefined) {\n                return \"--\"\n            }\n            return value.toString()\n        }\n        function valueBornWeight(value) {\n            if (value === \"\" || value === null || value === undefined || value === 0) {\n                return \"\"\n            }\n            return value.toString()\n        }\n        function statusPersion(persionstatus, QMNC, QTWER, Birthday) {\n            console.log(persionstatus)\n            if (persionstatus.length === 0) {\n                const BornWeight = Wardstate.BornWeight(QTWER, Birthday)\n                const BornWeeks = QMNC.weeks\n                const BornDays = QMNC.days\n                return {\n                    BornWeight: BornWeight,\n                    BornWeeks: BornWeeks,\n                    BornDays: BornDays\n                }\n            }\n            const Weight = Number(persionstatus[0].bweight) * 1000\n            const BornWeeks = Number(persionstatus[0].bweek)\n            const BornDays = Number(persionstatus[0].bday)\n            return {\n                BornWeight: Weight,\n                BornWeeks: BornWeeks,\n                BornDays: BornDays\n            }\n        }\n        const { data, previewmode, hbedlist } = this.props\n        const { persionstatus } = this.state\n        const source = data\n        const Birthday = source.PBIRHDT\n        const QTWER = Wardstate.XM2JSON(source.QTWPER)\n        const QMNC = Wardstate.QMNCXM2JSON(source.QMNC)\n        const Weight = Wardstate.NewestWeight(QTWER)\n        const BornWeight = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornWeight\n        const BornWeeks = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornWeeks\n        const BornDays = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornDays\n        const remark = this.state.remark\n        if (source === undefined) { return null }\n        const status = {\n            date: moment(Birthday, \"YYYYMMDD\").valueOf(),\n            week: BornWeeks,\n            day: BornDays\n        }\n        console.log(source)\n        console.log(status)\n        const AgeStatus = Wardstate.CalculateAge(status)\n        const role = Number(sessionStorage.getItem('role'))\n        console.log(role)\n        return (\n            <div>\n                <div className='wardcarddetailtitle'>\n                    <t3 style={{ color: \"rgba(0, 26, 109)\", fontSize: \"14px\", fontWeight: \"600\" }}>{bednumberformat(Number(source.HBEDNO))}</t3>\n                    <t3 style={{ color: \"rgba(0, 26, 109)\", fontSize: \"16px\", fontWeight: \"600\" }}>{source.PNAMEC.toString().trim()}</t3>\n                    <t3 style={{ color: \"rgba(0, 26, 109)\", fontSize: \"14px\", fontWeight: \"600\" }}>{source.PHISTNUM}</t3>\n                    <t3 style={{ color: \"rgba(0, 26, 109, .7)\", fontSize: \"12px\" }}>{WardCardgender(source.PSEX)}</t3>\n                    <t3 style={{ color: \"rgba(0, 26, 109, .7)\", fontSize: \"12px\" }}>{moment(Birthday, 'YYYYMMDD').format('MM/DD')}</t3>\n\n                    {/* <t3 style={{ color: \"rgba(61, 119, 181, 1)\" }}>{bednumberformat(Number(source.HBEDNO))},{source.PNAMEC.toString().trim()},{WardCardgender(source.PSEX)},{moment(Birthday, 'YYYYMMDD').format('YYYY/MM/DD')},{source.PHISTNUM}</t3> */}\n                    {role == 1 && <div onClick={this.showModal} className='wardcarddetileditbutton' style={{ cursor: \"pointer\" }}>\n                        <img src={editlogo} alt='editlogo'></img>\n                    </div>}\n                </div>\n                <div>\n                    <div className='wardinfoweeks'>\n                        <t3 style={{ color: \"rgba(0, 26, 109)\" }}>\n                            {valueFormat(BornWeeks)}+{valueFormat(BornDays)}&gt;<span style={{ fontWeight: \"900\" }}>{AgeStatus}</span>\n                        </t3>\n                        <t3 style={{ color: \"rgba(0, 26, 109)\" }}>\n                            {valueBornWeight(BornWeight)}g&gt;\n                            <span style={{ fontWeight: \"900\" }}>{valueFormat(Weight)}g</span>\n                        </t3>\n\n                        {/* <div style={{ color: \"rgba(59, 151, 225, 1)\",fontSize: \"16px\"  }}>{valueFormat(BornWeeks)}+{valueFormat(BornDays)}&rarr;{AgeStatus}</div>\n                        <div style={{ fontSize: \"12px\" }}>{valueBornWeight(BornWeight)}{valueFormat(Weight)}g</div> */}\n                        <div className='wardinforeportgroup'>\n                            <img src={fileLogo} alt='fileLogo'></img>\n                            <div style={{ fontSize: \"12px\" }}>{this.state.report}</div>\n                            <img src={file2Logo} alt='file2Logo'></img>\n                            <div style={{ fontSize: \"12px\" }}>{this.state.nonreport}</div>\n                        </div>\n                    </div>\n                    <div style={{ display: previewmode ? \"block\" : \"none\", borderBottomWidth: \"0.5px\", borderBottomColor: \"rgba(215, 238, 255, 1)\", borderBottomStyle: \"solid\" }}>\n                        <Wardcardvalue.WardCard centerdata={source.centerMonitorData} previewmode={previewmode} PHISTNUM={source.PHISTNUM} PCASENO={source.PCASENO}></Wardcardvalue.WardCard>\n                    </div>\n                    <div style={{ height: '30px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: \"0px 10px\", position: 'relative' }}>\n                        <div style={{ overflow: \"hidden\", fontSize: \"12px\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\", width: \"250px\" }}>{remark}</div>\n                        <Link className='patientviewbutton' to={{ pathname: \"/nicu/patient/\" + source.PHISTNUM, state: { \"source\": hbedlist, \"HISID\": source.PHISTNUM, \"CASEID\": source.PCASENO, \"BEDNUMBER\": source.HBEDNO, \"TYPE\": true, \"TRANSINID\": this.state.TRANSINID } }}>\n                            <centerstyle>\n                                <div style={{ fontSize: \"12px\" }}>進入病人資料頁面</div>\n                            </centerstyle>\n                        </Link>\n                    </div>\n                </div>\n                {this.Modelrender(statusPersion(persionstatus, QMNC, QTWER, Birthday))}\n            </div>\n        );\n    }\n}\n\nexport default Wardcarddetail;\n","import React, { Component } from 'react';\nimport { format_bednumber } from '../../Commonfunction'\nimport editlogo from '../../Image/svg/edit2.svg'\nimport { Modal, Input, DatePicker } from 'antd';\nimport './UnpreviewWardCardDetail.scss'\nimport { bednumberformat } from '../../Function/Wardbedfunction'\n\nclass Unpreviewwardcarddetail extends Component {\n    state = { visible: false, powerLogin: 0 };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n            databool: false,\n            data: null\n        });\n    };\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n\n    handleOk(string) {\n        console.log(string);\n\n        const bednumber = document.getElementById(\"bednumber\").value;\n        const hisnumber = document.getElementById(\"hisid\").value;\n        const birweek = document.getElementById(\"birweek\").value;\n        const birthday = string;\n        const weight = document.getElementById(\"weight\").value;\n        const statedata = {\n            \"BedNumber\": bednumber,\n            \"id\": hisnumber,\n            \"birweek\": birweek,\n            \"birthday\": birthday,\n            \"weight\": weight\n        }\n        console.log(statedata)\n        this.setState({\n            visible: false,\n            data: statedata,\n            databool: false\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    savestatus(string) {\n        console.log(string)\n    }\n\n    render() {\n        function modedisplay(mode) {\n            if (mode) {\n                return \"none\"\n            }\n            else {\n                return \"block\"\n            }\n        }\n        const number = this.props.bednumber\n        const { previewmode } = this.props\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div style={{ height: '40px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', backgroundColor: \"rgba(215, 238, 255, 1)\", padding: \"9px 10px\" }}>\n                    <t3 style={{ color: \"rgba(61, 119, 181, 1)\" }}>{format_bednumber(number)}/--</t3>\n                    <div className='wardcardeditbtn' onClick={this.showModal} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                        <img src={editlogo} alt='editlogo'></img>\n                    </div>\n                    <Modal\n                        width={270}\n                        title=\"填寫病床資訊\"\n                        visible={this.state.visible}\n                        onOk={() => this.handleOk(\"2019/12/12\")}\n                        onCancel={this.handleCancel}\n                    >\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr\", gridRowGap: \"10px\" }}>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>病床號碼:</t2>\n                                </centerstyle>\n                                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                    <div>{bednumberformat(number)}</div>\n                                </div>\n                            </div>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>病歷號碼:</t2>\n                                </centerstyle>\n                                <Input id=\"hisid_wardcard\" />\n                            </div>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>出生週數:</t2>\n                                </centerstyle>\n                                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                    <Input id='week' placeholder=\"20\" style={{ marginRight: \"5px\" }}></Input>\n                                    <t2 style={{ marginRight: \"5px\" }}>週</t2>\n                                    <Input id='days' placeholder=\"20\" style={{ marginRight: \"5px\" }}></Input>\n                                    <t2>日</t2>\n                                </div>\n                            </div>\n                            <div className='modulecontent'>\n                                <div style={{ display: 'flex', justifyContent: \"space-between\", alignItems: \"cneter\", width: \"69px\" }}>\n                                    <t2>生</t2>\n                                    <t2>日:</t2>\n                                </div>\n                                <DatePicker placeholder=\"選擇日期\" id=\"birthday\" />\n                            </div>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>出生體重:</t2>\n                                </centerstyle>\n                                <div style={{ display: 'flex' }}><Input placeholder=\"120\" id=\"weight\" />&nbsp;g</div>\n                            </div>\n                        </div>\n                    </Modal>\n                </div>\n                <div style={{ height: '30px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: \"10px\" }}>\n                    <div style={{ fontSize: '14px', color: \"black\" }}>\n                        \"無資料\"\n                    </div>\n                </div>\n                <div style={{ display: modedisplay(previewmode) }}>\n                    <div style={{ height: '30px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: \"10px\" }}></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Unpreviewwardcarddetail;\n","\nconst Month_format = (time) => {\n    switch (time) {\n        case 0:\n            return \"1\";\n        case 1:\n            return \"2\";\n        case 2:\n            return \"3\";\n        case 3:\n            return \"4\";\n        case 4:\n            return \"5\";\n        case 5:\n            return \"6\";\n        case 6:\n            return \"7\";\n        case 7:\n            return \"8\";\n        case 8:\n            return \"9\";\n        case 9:\n            return \"10\";\n        case 10:\n            return \"11\";\n        case 11:\n            return \"12\";\n        default:\n            return null;\n    }\n};\nconst format_bednumber = (number) => {\n    if (number < 10) {\n        return \"0\" + number;\n    }\n    return number;\n}\n\nexport { Month_format, format_bednumber }\n","import React, { Component } from 'react';\nimport { Input, Button } from 'antd';\nimport editlogo from '../Image/svg/Edit.svg'\nimport './Wardnote.scss'\nimport deleteimg from '../Image/svg/delete.svg'\nimport detail from '../Image/svg/details.svg'\nimport { Tooltip } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider';\nimport moment from 'moment'\n\nclass WardcardNote extends Component {\n    _isMounted = false;\n    state = {\n        editstate: false,\n        AnnoceRawData: [],\n        AnnoceDisplayData: [],\n        inputContent: undefined,\n        powerLogin: 0\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n    componentDidMount() {\n        this.onInputChange = this.onInputChange.bind(this);\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.queryAllAnnounce();\n    }\n    queryAllAnnounce() {\n        ApiProvider.getAllAnnounce()\n            .then(result => {\n                console.log(\"getAllAnnounce OK \" + JSON.stringify(result));\n                this.setState({\n                    AnnoceRawData: result.data,\n                    AnnoceDisplayData: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getAllAnnounce NG \" + JSON.stringify(err));\n            });\n    }\n    canceledit() {\n        //取消前先拿取server資料\n        this._isMounted = true\n        this.setState({\n            editstate: false,\n            AnnoceDisplayData: JSON.parse(JSON.stringify(this.state.AnnoceRawData))\n        });\n    }\n\n    okeditlist() {\n        //確定上傳\n        this.setState({\n            editstate: false\n        });\n        ApiProvider.createAnnounce(this.state.AnnoceDisplayData)\n            .then(result => {\n                console.log(\"createAnnounce OK \" + JSON.stringify(result));\n                this.queryAllAnnounce();\n            })\n            .catch(err => {\n                console.log(\"createAnnounce NG \" + JSON.stringify(err));\n            });\n    }\n\n    editlist() {\n        this.setState({\n            editstate: !this.state.editstate,\n            AnnoceDisplayData: (this.state.editstate) ? JSON.parse(JSON.stringify(this.state.AnnoceDisplayData)) : JSON.parse(JSON.stringify(this.state.AnnoceRawData))\n        });\n    }\n\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n\n    AddNewannouce() {\n        const announce = this.state.AnnoceDisplayData;\n\n        const doc = sessionStorage.getItem('user')\n        const newAnnounce = {\n            context: this.state.inputContent,\n            time: +(new Date()),\n            editor: doc + \"醫生\",\n            transinno: doc + moment().format(\"YYYYMMDDHHmmss\").toString()\n        }\n        announce.push(newAnnounce)\n        this.setState({\n            AnnoceDisplayData: announce,\n            inputContent: undefined\n        });\n    }\n\n    ondeleteannounce(element) {\n        const announce = this.state.AnnoceDisplayData;\n        const index = announce.findIndex(item => item === element);\n        announce.splice(index, 1);\n        this.setState({AnnoceDisplayData: announce});\n    }\n    announcelist(announcelist, status) {\n        var list = []\n        if (announcelist === null || announcelist.length === 0) {\n            list.push(\n                <div className='announcelistcontext'>無公告</div>\n            )\n        }\n        for (let index = 0; index < announcelist.length; index++) {\n            const element = announcelist[index];\n            list.push(\n                <div className='announcelistcontext'>\n                    <t2>{index + 1}.{element.context}</t2>\n                    {this.editstatus(element, status)}\n                </div>\n            )\n        }\n        return list\n    }\n    editstatus(element, status) {\n        console.log(element)\n        const time = moment(element.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n        const localTime = moment.utc(time).toDate()\n        const string = element.editor + '醫師於' + moment(localTime).format(\"MM/DD HH:mm\") + '更新'\n        if (status) {\n            return (\n                <img src={deleteimg} alt='deletelogo' onClick={() => this.ondeleteannounce(element)}></img>\n            );\n        }\n        return (\n            <Tooltip placement=\"top\" title={string}>\n                <img src={detail} alt='detaillogo'></img>\n            </Tooltip>\n        );\n    }\n    render() {\n\n        function changehight(state) {\n            if (!state) {\n                return 'wardnotecontextdisedit'\n            }\n            else {\n                return 'wardnotecontextonedit'\n\n            }\n        }\n        const annData = this.state.AnnoceDisplayData\n        return (\n            <div style={{ marginTop: '10px' }}>\n                <div className='wardnotetitle'>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>病房公告</t2>\n                    <div onMouseUp={() => this.editlist()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", width: \"18px\", cursor: \"pointer\" }}>\n                        <img src={editlogo} alt='editlogo'></img>\n                    </div>\n                </div>\n                <div>\n                    <div className={changehight(this.state.editstate)}>\n                        {this.announcelist(annData, this.state.editstate)}\n                    </div>\n                    <div style={{ display: this.state.editstate ? \"block\" : \"none\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"c\" }}>\n                        <div style={{ height: \"50px\", backgroundColor: \"rgba(238,238,238,1)\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                            <Input placeholder=\"新增公告內容\" style={{ marginLeft: \"16px\", width: \"315px\" }} value={this.state.inputContent} onChange={this.onInputChange} />\n                            <Button type=\"primary\" style={{ marginRight: \"16px\" }} onClick={() => this.AddNewannouce()}>\n                                新增\n                            </Button>\n                        </div>\n                        <div style={{ height: \"50px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <Button style={{ margin: \"10px\", width: \"90px\" }} onClick={() => this.canceledit()}>取消</Button>\n                            <Button type=\"primary\" style={{ margin: \"10px\", width: \"90px\" }} onClick={() => this.okeditlist()}>儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WardcardNote;\n","import React, { Component } from 'react';\nimport { Month_format } from '../Commonfunction'\n\nclass Bedinformation extends Component {\n    state = {\n        tableselect: false\n    }\n\n    SelectTruechange() {\n        this.setState({\n            tableselect: true\n        })\n    }\n\n    SelectFalsechange() {\n        this.setState({\n            tableselect: false\n        })\n    }\n\n    sendReturnSelect = (id) => {\n        const { selectkey, idkey, localtime } = this.props\n        const select = this.Selectswitch(idkey, selectkey)\n        console.log(id)\n        if (select) {\n            const data = { \"idkey\": null, \"time\": localtime }\n            this.props.parentCallback(data);\n        }\n        else {\n            this.props.parentCallback(id);\n        }\n    }\n\n    Selectswitch(id, select) {\n        console.log(id, select)\n        if (id === select) {\n            return true\n        }\n        else return false\n    }\n    render() {\n        function weekdatformat(weekday) {\n            switch (weekday) {\n                case 0:\n                    return \"日\"\n                case 1:\n                    return \"一\"\n                case 2:\n                    return \"二\"\n                case 3:\n                    return \"三\"\n                case 4:\n                    return \"四\"\n                case 5:\n                    return \"五\"\n                case 6:\n                    return \"六\"\n                default:\n                    return null\n            }\n        }\n        const { selectkey, idkey, localtime, data } = this.props\n        const day = Month_format(new Date(localtime).getMonth()) + \"/\" + new Date(localtime).getDate()\n        const weekday = new Date(localtime).getDay()\n        const Unselect_tablestyle = { height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"1px solid rgba(238,238,238,1)\", borderLeftWidth: \"0px\" }\n        const select = this.Selectswitch(idkey, selectkey)\n        console.log(select)\n        if (data === null) {\n            return (\n                <div>\n                    <div style={select ? { border: \"1px solid rgba(59, 151, 225, 1)\", backgroundColor: \"#ffe1c499\", marginTop: '-2px' } : { cursor: \"pointer\" }} onMouseUp={() => this.sendReturnSelect({ \"idkey\": idkey, \"time\": localtime })}>\n                        <div style={Unselect_tablestyle}>\n                            <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                <t2 style={{ textAlign: \"center\" }}>{day}</t2>\n                                <t2 style={{ textAlign: \"center\" }}>{weekdatformat(weekday)}</t2>\n                            </div>\n                        </div>\n                        <div style={Unselect_tablestyle}>\n                            <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                <t2 style={{ textAlign: \"center\" }}>0(12)</t2>\n                                <t2 style={{ textAlign: \"center\" }}>0%</t2>\n                            </div>\n                        </div>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                    </div>\n                    <div style={{ display: select ? \"flex\" : \"none\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ width: 0, height: 0, borderStyle: \"solid\", borderWidth: \"17.3px 10px 0 10px\", borderColor: \"rgba(59,151,225,1) transparent transparent transparent\" }}></div>\n                    </div>\n                </div>\n            );\n\n        }\n        return (\n            <div>\n                <div style={select ? { border: \"1px solid rgba(59, 151, 225, 1)\", backgroundColor: \"#ffe1c499\", marginTop: '-2px' } : { cursor: \"pointer\" }} onMouseUp={() => this.sendReturnSelect({ \"idkey\": idkey, \"time\": localtime })}>\n                    <div style={Unselect_tablestyle}>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                            <t2 style={{ textAlign: \"center\" }}>{day}</t2>\n                            <t2 style={{ textAlign: \"center\" }}>{weekdatformat(weekday)}</t2>\n                        </div>\n                    </div>\n                    <div style={Unselect_tablestyle}>\n                        <div style={{ display: \"grid\" }}>\n                            <t2 style={{ textAlign: \"center\" }}>{data.hbedcount}({parseInt(parseInt(data.hbedcount) * 100 / 12)}%)</t2>\n                        </div>\n                    </div>\n                    <t2 style={Unselect_tablestyle}>{data.transoutcount}</t2>\n                    <t2 style={Unselect_tablestyle}>{data.transincount}</t2>\n                    <t2 style={Unselect_tablestyle}>{data.rtcount}</t2>\n                    <t2 style={Unselect_tablestyle}>{data.nonrtcount}</t2>\n                    <t2 style={Unselect_tablestyle}>{data.tpncount}</t2>\n                </div>\n                <div style={{ display: select ? \"flex\" : \"none\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <div style={{ width: 0, height: 0, borderStyle: \"solid\", borderWidth: \"17.3px 10px 0 10px\", borderColor: \"rgba(59,151,225,1) transparent transparent transparent\" }}></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Bedinformation\n","import moment from 'moment';\n\nfunction HISAPI_stringtodate(datestring) {\n    function addzero(value){\n        if (value < 10) {\n            return \"0\"+value\n        }\n        return value\n    }\n    console.log(datestring)\n    const datenumber = Number(datestring)\n    console.log(datenumber)\n    const dateformat = parseInt(datenumber / 10000) + '-' + parseInt(parseInt(datenumber / 100) % 100) + '-' + addzero(parseInt(datenumber % 100))\n    // console.log(\"dateformat = \" + dateformat)\n    return dateformat\n}\n\nfunction yyyymmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + \"/\" + Monthformat(new Date(timestamp).getMonth()) + \"/\" + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction yyyymmddstring(timestamp){\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + Monthformat(new Date(timestamp).getMonth()) + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction yyyymmfirstweeksate(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    return new Date(timestamp).getFullYear() + \"/\" + Monthformat(new Date(timestamp).getMonth()) + \"/1\"\n}\n\n\n\nfunction mmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return Monthformat(new Date(timestamp).getMonth()) + '/' + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction weekdateformat(timestamp) {\n    const param = new Date(timestamp).getDay()\n    const weekarray = ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六']\n    return weekarray[param]\n}\n\nfunction weekdateformatcalender(timestamp) {\n    const param = new Date(timestamp).getDay()\n    const weekarray = ['日', '一', '二', '三', '四', '五', '六']\n    return weekarray[param]\n}\n\nfunction hhmmssformat(timestamp) {\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return addZero(new Date(timestamp).getHours()) + ':' + addZero(new Date(timestamp).getMinutes())\n}\n\nfunction hhmmssformattohalf(timestamp) {\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return addZero(new Date(timestamp).getHours()) + ':30:00'\n}\n\n\nfunction yyyymmddHHmmfromat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return new Date(timestamp).getFullYear().toString() + Monthformat(new Date(timestamp).getMonth()).toString() + Dateformat(new Date(timestamp).getDate()).toString() + addZero(new Date(timestamp).getHours()).toString() + addZero(new Date(timestamp).getMinutes()).toString()\n}\n\nfunction MMDDhhmmfromat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return Monthformat(new Date(timestamp).getMonth()) + '/' + Dateformat(new Date(timestamp).getDate()) + ' ' + addZero(new Date(timestamp).getHours()) + ':' + addZero(new Date(timestamp).getMinutes())\n}\n\n\nfunction daysdiff(newtime, oldtime) {\n    const timestampdiff = new Date(newtime).getTime() - new Date(oldtime).getTime()\n    const dissdays = timestampdiff / (24 * 60 * 60 * 1000)\n    return parseInt(dissdays)\n}\n\n\nfunction disabledDate(current) {\n    // Can not select days before today and today\n    console.log(current)\n    return current && current < moment().endOf('day');\n}\n\nfunction compareday(date) {\n    console.log(new Date(date).getTime(), new Date().getTime())\n    if (new Date(date).getTime() > new Date().getTime()) {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunction formatxArrayhalf(time, interval) {\n    var xAxisarray = []\n    if (interval === 24) {\n        for (let index = 0; index < 144; index++) {\n            xAxisarray.push(time + (index * 10 * 60 * 1000))\n        }\n    }\n    if (interval === 18) {\n        for (let index = 0; index < 18; index++) {\n            xAxisarray.push(time + (60 * 60 * 1000 * 2) + (index * 60 * 60 * 1000 * 4))\n        }\n    }\n\n    if (interval === 21) {\n        for (let index = 0; index < 21; index++) {\n            xAxisarray.push(time + (60 * 60 * 1000 * 4) + (index * 60 * 60 * 1000 * 8))\n        }\n    }\n    if (interval === 14) {\n        for (let index = 0; index < 14; index++) {\n            xAxisarray.push(time + (60 * 60 * 1000 * 12) + (index * 60 * 60 * 1000 * 24))\n        }\n    }\n    return xAxisarray\n}\n\n\nfunction formatendtime(time) {\n    const endtime = new Date(yyyymmddformat(time)).getTime() + (31 * 60 * 60 * 1000)\n    return endtime\n}\n\nfunction formatintervaldays(days, interval) {\n    //false:一天 true:三天\n    if (interval === 1) {\n        return days - (24 * 60 * 60 * 1000) * 1\n\n    }\n    if (interval === 3) {\n        return days - (24 * 60 * 60 * 1000) * 3\n\n    }\n    else {\n        return null\n    }\n}\n\nfunction datestringformat(datestring) {\n    function addzero(value){\n        if (value < 10) {\n            return \"0\"+value\n        }\n        return value\n    }\n    const datenumber = Number(datestring)\n    const dateformat = parseInt(datenumber / 10000) + '/' + parseInt(parseInt(datenumber / 100) % 100) + '/' + addzero(parseInt(datenumber % 100))\n    // console.log(\"dateformat = \" + dateformat)\n    return dateformat\n}\n\nfunction apiyyyymmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + \"-\" + Monthformat(new Date(timestamp).getMonth()) + \"-\" + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction nisapiyyyymmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + Monthformat(new Date(timestamp).getMonth()) + Dateformat(new Date(timestamp).getDate())\n}\nexport {\n    yyyymmddformat,\n    weekdateformat,\n    hhmmssformat,\n    mmddformat,\n    MMDDhhmmfromat,\n    daysdiff,\n    disabledDate,\n    compareday,\n    weekdateformatcalender,\n    yyyymmfirstweeksate,\n    hhmmssformattohalf,\n    formatxArrayhalf,\n    formatendtime,\n    formatintervaldays,\n    datestringformat,\n    yyyymmddHHmmfromat,\n    yyyymmddstring,\n    apiyyyymmddformat,\n    nisapiyyyymmddformat,\n    HISAPI_stringtodate\n}","import React, { Component } from 'react';\nimport Labviewitem from './Labviewitem'\n// import { labdata } from '../../Data/Wardviewdata'\nimport * as FiliterReg from '../../Function/FiliterReg'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport moment from 'moment'\nimport * as ApiGithub from '../../API/ApiGithub'\n\nvar MG_VALUE, PROC_VALUE;\nclass Labviewlayout extends Component {\n    state = {\n        parser: [{ \"apply_condition\": { \"name\": \"\" }, \"mappings\": [] }],\n        dummy_mg: 0,\n        dummy_pct: 0,\n\n        RESDGLU1: [],\n        RESLAB02: [],\n        RESLAB01: [],\n        RESDBGAS: [],\n        RESLAB0C: [],\n        RESSECT: [],\n\n        prePickerDate: null,\n        preHID: null,\n        preTRDT: null\n    }\n    componentDidMount() {\n        ApiGithub.getGitHubJson(\"Labview.json\")\n            .then(result => {\n                console.log(\"getGitHubJson Labview.json OK \" + JSON.stringify(result.data));\n                this.setState({\n                    parser: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getGitHubJson Labview.json NG \" + JSON.stringify(err));\n            })\n        const { PickerDate, caseinfo } = this.props\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        this.setState({ prePickerDate: PickerDate, preHID: caseinfo.HISID, preTRDT: TRDT })\n        this.getLabData(PickerDate, caseinfo.HISID, TRDT)\n    }\n\n    componentDidUpdate() {\n        const { PickerDate, caseinfo } = this.props\n        const { prePickerDate, preHID, preTRDT } = this.state\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        if (prePickerDate !== PickerDate || preHID !== caseinfo.HISID || preTRDT !== TRDT) {\n            this.setState({ prePickerDate: PickerDate, preHID: caseinfo.HISID, preTRDT: TRDT })\n            this.getLabData(PickerDate, caseinfo.HISID, TRDT)\n        }\n    }\n    getLabData(PickerDate, HID, TRDT) {\n        function selectMonthInterval(PickerDate) {\n            const timestampInterval = new Date().getTime() - PickerDate\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        const TransinDate = moment(TRDT).format(\"YYYY-MM-DD\")\n        const MonthInterval = selectMonthInterval(PickerDate)\n        ApiProvider.getStoredProcedureRESDGLU1(HID, TransinDate)\n            .then(data => { this.setState({ RESDGLU1: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESDGLU1 NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESLAB02(HID, TransinDate)\n            .then(data => { this.setState({ RESLAB02: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESLAB02 NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESLAB01(HID, TransinDate)\n            .then(data => { this.setState({ RESLAB01: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESLAB01 NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESDBGAS(HID, TransinDate)\n            .then(data => { this.setState({ RESDBGAS: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESDBGAS NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESLAB0C(HID, TransinDate)\n            .then(data => { this.setState({ RESLAB0C: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESLAB0C NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESSECT(HID, MonthInterval, \"ALL\", \"DOC3924B\")\n            .then(data => { this.setState({ RESSECT: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESSECT NG \" + JSON.stringify(err)) });\n    }\n    findLastestTargetValue(arr, target) {\n        const { caseinfo } = this.props\n        const { parser } = this.state\n        let latestTimestamp = 0;\n        let latestvalue = undefined;\n        const selected_parser = parser.find(item => item.apply_condition.name.match(target) !== null);\n        const arrayLength = arr.length;\n        arr.forEach((item, index) => {\n            ApiProvider.getStoredProcedureRESDISP(caseinfo.HISID, item.ORMM, caseinfo.CASEID, item.ORDSEQNO)\n                .then(data => {\n                    console.log(\"getStoredProcedureRESDISP OK \" + JSON.stringify(data.data));\n                    const RESDISP = data.data\n                    //const RESDISP = [{\"RECNO\":\"1\",\"PARTNO\":\"11 \",\"HISTNO\":\"45305666  \",\"ORBGNDT\":\"2019-11-12\",\"CONTENT\":\"    MG++:  (20.00)\",\"ORDSEQ\":\"1\",\"CASENO\":\"25358448\"},{\"RECNO\":\"2\",\"PARTNO\":\"11 \",\"HISTNO\":\"45305666  \",\"ORBGNDT\":\"2019-11-12\",\"CONTENT\":\"    Procalcitonin:  (25.00)\",\"ORDSEQ\":\"1\",\"CASENO\":\"25358448\"}]\n\n                    //search for target\n                    const selected_mapping = selected_parser.mappings.find(mapping => mapping.key === target)\n                    const re = new RegExp(selected_mapping.regex_str, selected_mapping.regex_flags)\n\n                    RESDISP.forEach(element => {\n                        const match = element.CONTENT.match(re)\n                        if (match !== null) {\n                            const currentTimeStr = item.ORRCPDT + \"-\" + item.ORRCPTM\n                            const currentItemTimestamp = moment(currentTimeStr.trim(), \"YYYY-MM-DD-HH.mm.ss\").valueOf()\n                            const matchValue = match[selected_mapping.position]\n\n                            if (matchValue !== \"\" && matchValue !== undefined && matchValue !== null && currentItemTimestamp > latestTimestamp) {\n                                latestvalue = matchValue\n                                if (target === \"mg\") {\n                                    MG_VALUE = latestvalue\n                                } else if (target === \"pct\") {\n                                    PROC_VALUE = latestvalue\n                                }\n                            }\n                        }\n                    })\n                    this.updateLabviewIfNeed(arrayLength, index, target)\n                })\n                .catch(err => {\n                    console.log(\"getStoredProcedureRESDISP NG \" + JSON.stringify(err));\n                    this.updateLabviewIfNeed(arrayLength, index, target)\n                });\n        })\n    }\n    updateLabviewIfNeed(arrayLength, currentIdx, target) {\n        const retryMax = 3\n        if (currentIdx === arrayLength - 1) {\n            if (target === \"mg\" && this.state.dummy_mg < retryMax) {\n                this.setState({ dummy_mg: this.state.dummy_mg + 1 })\n            } else if (target === \"pct\" && this.state.dummy_pct < retryMax) {\n                this.setState({ dummy_pct: this.state.dummy_pct + 1 })\n            }\n        }\n    }\n    TitleRender() {\n        const { Source } = this.props\n        if (Source === \"Wardview\") {\n            return null\n        }\n        else return (\n            <div style={{ height: '40px', paddingLeft: \"5px\", paddingRight: \"5px\", background: \"#cccccc\", display: \"flex\", alignItems: \"center\" }}>\n                <t1>檢驗報告</t1>\n            </div>\n        );\n    }\n    render() {\n        function ListEndData(array) {\n            if (array.length === 0) {\n                return \"--\"\n            }\n            return array[array.length - 1]\n        }\n        // const data = labdata.data\n        const { PickerDate, Source } = this.props\n        const { RESDGLU1, RESLAB02, RESLAB01, RESDBGAS, RESSECT } = this.state\n        console.log(RESDGLU1)\n\n        const RESDGLU1LIST = FiliterReg.ListForTime(RESDGLU1, PickerDate)\n        const RESLAB02LIST = FiliterReg.ListForTime(RESLAB02, PickerDate)\n        const RESLAB01LIST = FiliterReg.ListForTime(RESLAB01, PickerDate)\n        const RESDBGASLIST = FiliterReg.ListForTime(RESDBGAS, PickerDate)\n        // const RESLAB0CLIST = FiliterReg.ListForTime(RESLAB0C, PickerDate)\n\n        const RESSECT_MG_LIST = FiliterReg.ListForTimeAndTarget(RESSECT, PickerDate, \"Mg\")\n        this.findLastestTargetValue(RESSECT_MG_LIST, \"mg\")\n\n        const RESSECT_PROC_LIST = FiliterReg.ListForTimeAndTarget(RESSECT, PickerDate, \"Procalcitonin\")\n        this.findLastestTargetValue(RESSECT_PROC_LIST, \"pct\")\n\n        const GLUFAST = ListEndData(RESDGLU1LIST.filter(function (value, index, array) {\n            return value.GLUFAST !== null\n        }))\n        const WBC = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV01 !== null\n        }))\n        const SEG = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV14 !== null\n        }))\n        const LYMP = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV15 !== null\n        }))\n        const HGB = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV03 !== null\n        }))\n        const PLATELET = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV09 !== null\n        }))\n        const NA = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV13 !== null\n        }))\n        const K = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV14 !== null\n        }))\n        const CA = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            // console.log(value.RSV15)\n            return value.RSV15 !== null\n        }))\n        const P = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV17 !== null\n        }))\n        const ALB = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV02 !== null\n        }))\n        const CRP = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV32 !== null\n        }))\n        const PH = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS07 !== null\n        }))\n        const PCO2 = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS06 !== null\n        }))\n        const BE = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS01 !== null\n        }))\n        const PO2 = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS08 !== null\n        }))\n        const BUN = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV05 !== null\n        }))\n        //02\n        const CR = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV06 !== null\n        }))\n        const ALT = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV11 !== null\n        }))\n        const AST = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV12 !== null\n        }))\n        const TBIL = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV08 !== null\n        }))\n        const DBIL = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV25 !== null\n        }))\n        const ALKP = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV09 !== null\n        }))\n        const TOTALCA = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV03 !== null\n        }))\n        const IRON = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV26 !== null\n        }))\n        const TIBC = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV27 !== null\n        }))\n        const FERRITIN = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV03 !== null\n        }))\n\n        function areainterval(source) {\n            if (source === \"Wardview\") {\n                return \"0px\"\n            }\n            else return \"10px\"\n        }\n\n        function nullvalue(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            return value.toString().trim()\n        }\n        const TitleR = this.TitleRender()\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                {TitleR}\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", gridColumnGap: areainterval(Source) }}>\n                    <div style={{ border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(GLUFAST.GLUFAST)} title={\"Glucose\"} time={GLUFAST.ORBGNDT}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(WBC.RSV01)} title={\"WBC\"} time={WBC.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(SEG.RSV14)} title={\"Seg\"} time={SEG.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(LYMP.RSV15)} title={\"Lymp\"} time={LYMP.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(HGB.RSV03)} title={\"Hgb\"} time={HGB.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PLATELET.RSV09)} title={\"Platelet\"} time={PLATELET.ORBGNDT}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"5fr 1fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(NA.RSV13)} title={\"Na+\"} time={NA.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(K.RSV14)} title={\"K+\"} time={K.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(CA.RSV15)} title={\"Ca+\"} time={CA.ORBGNDT}></Labviewitem> {/*parse*/}\n                        <Labviewitem Source={Source} value={nullvalue(P.RSV17)} title={\"P\"} time={P.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(MG_VALUE)} title={\"Mg2+\"} time={\"2019-12-12\"}></Labviewitem> {/*parse*/}\n                    </div>\n                    <div style={{ border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(ALB.RSV02)} title={\"Alb\"} time={ALB.ORBGNDT}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 4fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(CRP.RSV32)} title={\"CRP\"} time={CRP.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PROC_VALUE)} title={\"Procalcitionin\"} time={\"2019-12-12\"}></Labviewitem>  {/*parse*/}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(PH.SS07)} title={\"pH\"} time={PH.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PCO2.SS06)} title={\"PCO2\"} time={PCO2.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(BE.SS01)} title={\"BE\"} time={BE.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PO2.SS08)} title={\"PO2\"} time={PO2.ORBGNDT}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 2fr 2fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(BUN.RSV05)} title={\"BUN\"} time={BUN.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(CR.RSV06)} title={\"Cr\"} time={CR.ORBGNDT}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(ALT.RSV11)} title={\"ALT\"} time={ALT.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(AST.RSV12)} title={\"AST\"} time={AST.ORBGNDT}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(TBIL.RSV08)} title={\"TBil\"} time={TBIL.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(DBIL.RSV25)} title={\"DBil\"} time={DBIL.ORBGNDT}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 4fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(ALKP.RSV09)} title={\"ALKP\"} time={ALKP.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(TOTALCA.RSV03)} title={\"Total Ca\"} time={TOTALCA.ORBGNDT}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(IRON.RSV26)} title={\"Iron\"} time={IRON.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(TIBC.RSV27)} title={\"TIBC\"} time={TIBC.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={\"--\"} title={\"FeSat\"} time={\"2019-12-12\"}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(FERRITIN.RSV03)} title={\"Ferritin\"} time={FERRITIN.ORBGNDT}></Labviewitem> {/* No Data */}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Labviewlayout","import React, { Component } from 'react';\nimport Bedinformation from './Bedinfo'\nimport { DatePicker, Button } from 'antd';\nimport moment from 'moment';\nimport * as apiProvide from '../API/ApiProvider'\nimport { yyyymmddformat } from '../Function/Timeformat'\nimport './WardBedinformation.scss'\n\nclass Wardbedinformation extends Component {\n    state = {\n        subselectdate: null,\n        selectid: null,\n        PickerDate: moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf(),\n        bedinfo: []\n    }\n    componentDidMount() {\n        this.apiData(this.state.PickerDate)\n    }\n    apiData(PickerDate) {\n        apiProvide.getWardDebInfo(moment(PickerDate).format(\"YYYY-MM-DD\"))\n            .then(data => { console.log(data.data); this.setState({ bedinfo: data.data }) })\n            .catch(err => { console.log(err) })\n    }\n    onChangeDate = (date, datestring) => {\n        this.setState({\n            PickerDate: date.valueOf(),\n            selectid: null\n        })\n        this.apiData(this.state.PickerDate)\n    }\n    callbackFunction = (idnumber) => {\n        console.log(idnumber)\n        this.setState({\n            selectid: idnumber.idkey,\n            subselectdate: idnumber.time\n        })\n    }\n    transferListlayout(trans) {\n        const RenderCell = trans.map(function (element, index, arr) {\n            return (\n                <div className='wardbedinfoitemcontextgridRow'>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>{element.caseid}</t2>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>{element.pnamec}</t2>\n                </div>\n            );\n        })\n        return (\n            <div>\n                <div className='wardbedinfoitemcontextgridRow'>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>病歷號碼</t2>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>姓名</t2>\n                </div>\n                {RenderCell}\n            </div>\n        );\n    }\n    infoitem() {\n        const selectDateitem = this.state.subselectdate\n        const bedinfo = this.state.bedinfo\n        const filterdate = bedinfo.filter(function (info, index) {\n            const tempDate = moment(info.Date, 'YYYYMMDD')\n            return yyyymmddformat(tempDate) === yyyymmddformat(selectDateitem)\n        })\n        console.log(filterdate)\n\n        if (this.state.selectid === null) {\n            return null\n        }\n        else {\n            const inType = filterdate.length === 0 ? 0 : filterdate[0].transoutIncountperson.length\n            const outType = filterdate.length === 0 ? 0 : filterdate[0].transoutOutcountperson.length\n\n            const transIn = filterdate.length === 0 ? 0 : filterdate[0].transoutIncountperson\n            const transOut = filterdate.length === 0 ? 0 : filterdate[0].transoutOutcountperson\n            // console.log(inType)\n            // console.log(outType)\n            // console.log(transIn)\n            // console.log(transOut)\n            return (\n                <div>\n                    {/* <div className='wardbedinfoitemtriangle'>\n                        <div className='triangle'></div>\n                    </div> */}\n                    <div className='wardbedinfoitemcontext'>\n                        <div className='wardbedinfoitemcontextgrid'>\n                            <div>\n                                <t2 className='wardbedinfoitemcontexttitle'>轉入病人清單</t2>\n                                <div className='wardbedinfoitemcontextgridlayout'>\n                                    {inType === 0 ? <div className='nopatient'>無病人</div> : this.transferListlayout(transIn)}\n                                </div>\n                            </div>\n                            <div>\n                                <t2 className='wardbedinfoitemcontexttitle'>轉出病人清單</t2>\n                                <div className='wardbedinfoitemcontextgridlayout'>\n                                    {outType === 0 ? <div className='nopatient'>無病人</div> : this.transferListlayout(transOut)}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n            // }\n        }\n\n    }\n    bedinfotitle() {\n        const maparray = ['日期', '佔床數', '轉出', '轉入', '侵入式呼吸器', '非侵入式呼吸器', '開立PN']\n        const title = maparray.map(function (info, index) {\n            return (\n                <div className='wardbedinfotablerowtitle'>\n                    <t2>{info}</t2>\n                </div>\n            );\n        })\n        return title\n    }\n    weekbedinfo() {\n        var infolist = []\n        const infoList = this.state.bedinfo\n        const dateTime = this.state.PickerDate\n        console.log(infoList)\n        for (let i = 0; i < 7; i++) {\n            const localtime = dateTime - (i * 24 * 60 * 60 * 1000);\n            const filterdate = infoList.filter(function (info, index) {\n                const tempDate = moment(info.Date, 'YYYYMMDD').valueOf()\n                return tempDate === localtime\n            })\n            if (filterdate.length === 0) {\n                infolist.push(\n                    <div onClick={() => { console.log(i) }}>\n                        <Bedinformation data={null} key={i} localtime={localtime} selectkey={this.state.selectid} idkey={i} parentCallback={this.callbackFunction}></Bedinformation>\n                    </div>\n                )\n            }\n            else {\n                infolist.push(\n                    <div onClick={() => { console.log(i) }}>\n                        <Bedinformation data={filterdate[0]} key={i} localtime={localtime} selectkey={this.state.selectid} idkey={i} parentCallback={this.callbackFunction}></Bedinformation>\n                    </div>\n                )\n            }\n        }\n        infolist.reverse()\n        return infolist\n\n    }\n\n    trainDay = (e) => {\n        // const { caseinfo } = this.props\n        const { PickerDate } = this.state\n        // const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        // const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                // const bTemp = bTime - (6 * day)\n                // bronDate <= bTemp && this.onChange(moment(bTime))\n                this.onChangeDate(moment(bTime))\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD'))\n                this.onChangeDate(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= aTemp && this.onChangeDate(moment(aTime))\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        return (\n            <div style={{ marginTop: \"10px\" }}>\n                <div className='wardbrdinfomationtitle'>\n                    <centerstyle>\n                        <t2 style={{ fontSize: \"16px\", color: \"rgba(0, 0, 0, .7)\" }}>病房每日統計</t2>\n                        <t2 style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"rgba(0, 0, 0, .7)\", paddingLeft: \"10px\" }}>每日上午七點統計</t2>\n                    </centerstyle>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"140px 120px\", gridColumnGap: \"5px\" }}>\n                        <DatePicker showToday={true} disabledDate={(current) => { return current && current > moment().startOf('day') }} value={moment(this.state.PickerDate)} format={\"YYYY/MM/DD\"} onChange={this.onChangeDate} allowClear={false} />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\", marginLeft: \"10px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                    </div>\n                </div>\n                <div className='wardbedinformationcontext'>\n                    <div>\n                        {this.bedinfotitle()}\n                    </div>\n                    {this.weekbedinfo()}\n                </div>\n                {this.infoitem()}\n            </div>\n        );\n    }\n}\n\nexport default Wardbedinformation;\n","import React, { Component } from 'react';\nimport detaillogo from '../Image/svg/details.svg'\nimport editlogo from '../Image/svg/Edit.svg'\nimport { Tooltip, Input, Button } from 'antd';\nimport './Schedule_event.scss'\nimport * as ApiProvider from '../API/ApiProvider';\n//資料\n// import { eventdata } from '../jsonResponse'\nimport moment from 'moment';\n\nclass Schedule_event_list extends Component {\n    state = {\n        detailstate: \"none\",\n        // pressitemstate: \"all\",\n        items_interval: 0,\n        powerLogin: 0,\n        EditMode: false,\n        inputContent: '',\n        selSchedule: '排程',\n\n        Scheduledata: [],\n        status: false,\n        PickerDate: moment().valueOf(),\n        TRANSINID: null\n    }\n\n    querySchedule(time, ID) {\n        const st = moment(moment(time).format(\"YYYY/MM/DD\"), \"YYYY/MM/DD\").valueOf()\n        const et = moment(moment(time).format(\"YYYY/MM/DD\"), \"YYYY/MM/DD\").valueOf() + (24 * 60 * 60 * 1000)\n        console.log(ID, st, et)\n        ApiProvider.getOnePatientSchedule(ID, st, et)\n            .then(data => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n                this.setState({ Scheduledata: data.data })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }\n\n    queryALLSchedule() {\n        ApiProvider.getAllSchedule()\n            .then(data => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n                this.setState({ Scheduledata: data.data })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }\n    componentDidMount() {\n        this.onInputChange = this.onInputChange.bind(this);\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        const source = this.props.source\n        if (source === 1) {\n            const ID = this.props.caseinfo.TRANSINID\n            const date = this.props.PickerDate\n            console.log(this.props.caseinfo)\n            if (ID === null) {\n\n            }\n            else {\n                this.setState({\n                    PickerDate: date,\n                    TRANSINID: ID\n                })\n                this.querySchedule(date, ID)\n            }\n        }\n        else {\n            //get ALL\n            this.queryALLSchedule()\n        }\n\n    }\n\n    componentDidUpdate() {\n        const source = this.props.source\n        if (this.state.status) {\n            this.setState({ status: false })\n            if (source === 1) {\n                const ID = this.props.caseinfo.TRANSINID\n                this.querySchedule(this.state.PickerDate, ID)\n            }\n            else {\n                //get ALL\n                this.queryALLSchedule()\n            }\n        }\n        const propsDate = this.props.PickerDate\n        const stateDate = this.state.PickerDate\n        if (propsDate !== stateDate) {\n            this.setState({ PickerDate: propsDate })\n            if (source === 1) {\n                const ID = this.props.caseinfo.TRANSINID\n                console.log(moment(propsDate).format(\"YYYYMMDDHHmmss\"))\n                console.log(moment(stateDate).format(\"YYYYMMDDHHmmss\"))\n                this.querySchedule(propsDate, ID)\n            }\n            else {\n                //get ALL\n            }\n        }\n    }\n    selSchedule(value) {\n        this.setState({ selSchedule: value })\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString()\n        const writter = sessionStorage.getItem(\"user\")\n        const name = this.props.caseinfo.PBASINGNINFO.PNAMEC\n        const hisid = this.props.caseinfo.HISID\n        ApiProvider.createPatientSchedule(this.props.caseinfo.PLOCSTART.HBEDNO, this.state.inputContent, timeNowStr, this.props.caseinfo.TRANSINID, this.state.selSchedule, writter, name, hisid)\n            .then(data => {\n                console.log(\" OK \" + JSON.stringify(data.data))\n                this.setState(\n                    {\n                        EditMode: false,\n                        inputContent: undefined,\n                        status: true\n                    })\n            })\n            .catch(err => {\n                console.log(\" Err \" + JSON.stringify(err))\n            })\n    }\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    timechange(timestamp) {\n        const changetime = new Date(timestamp).getHours() + \":\" + new Date(timestamp).getMinutes()\n        return changetime\n    }\n\n    // pressbtn(pressitem) {\n    //     this.setState(\n    //         {\n    //             pressitemstate: pressitem\n    //         }\n    //     );\n    // }\n    listevent() {\n        // var eventdatalist = eventdata\n        const scheduleData = this.props.data;\n        console.log(scheduleData)\n\n\n        // function itemchange(changeitem) {\n        //     switch (changeitem) {\n        //         case \"事件\":\n        //             return \"事\"\n        //         case \"排程\":\n        //             return \"排\"\n        //         default:\n        //             return \"\"\n        //     }\n        // }\n\n        // function checkbackground(string) {\n        //     switch (string) {\n        //         case \"排程\":\n        //             return \"rgba(124,179,5,1)\"\n        //         case \"事件\":\n        //             return \"rgba(124,179,5,1)\"\n        //         default:\n        //             return \"rgba(124,179,5,1)\"\n        //     }\n        // }\n\n        // function scheduleList(BtnType) {\n        //     if (BtnType === \"all\") {\n        //         return ScheduleList\n        //     }\n        //     const scheduleListFilter = ScheduleList.filter(function (info, index, arr) {\n        //         return info.type === BtnType\n        //     })\n        //     return scheduleListFilter\n        // }\n        // const eventstate = this.state.pressitemstate\n        const ScheduleList = this.state.Scheduledata\n        // const patientdata = this.props.caseinfo\n        // console.log(this.props)\n        if (ScheduleList.length === 0) {\n            return (<div>本日無排程</div>);\n        }\n        // const RenderData = scheduleList(eventstate)\n        const CellRender = ScheduleList.map(function (info, index, arr) {\n            const time = moment(info.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n            const localTime = moment.utc(time).toDate()\n            const text = <div>{info.writter}醫師於{moment(localTime).format(\"YYYY/MM/DD HH:mm:ss\")}更新</div>\n            return (\n                <div key={index} className='CellLayout'>\n                    <div className='Context'>\n                        <div style={{ height: '30px', width: \"60px\", borderRadius: \"4px\", backgroundColor: \"rgba(124,179,5,1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <t2 style={{ color: 'white' }}>床{info.bednumber}</t2>\n                            {/* itemchange(info.type) */}\n                        </div>\n                        <div style={{ fontSize: \"16px\" }}>{info.name} {moment(localTime).format(\"HH:mm\")} {info.context}</div>\n                    </div>\n                    <Tooltip placement=\"right\" title={text}>\n                        <div>\n                            <img src={detaillogo} alt='detaillogo'></img>\n                        </div>\n                    </Tooltip>\n                </div>\n            );\n        })\n        return CellRender\n    }\n\n\n    //測驗項目功能_區間按鈕樣式\n    // SwitchTestItemInterval(testiteminterval) {\n    //     const stylestate = this.state.pressitemstate\n    //     if (testiteminterval === stylestate) {\n    //         return 'buttonselect'\n    //     }\n    //     else return 'buttonUnselect'\n    // }\n    //測驗項目功能_區間按鈕選擇\n    Onchangetimeinterval(changestate) { this.setState({ items_interval: changestate }) }\n    EditControl() {\n        const edit = this.props.editstatus\n        if (edit) {\n            return (\n                <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                    <img src={editlogo} alt=\"editlogo\" />\n                </div>\n            );\n        }\n        return null\n    }\n    render() {\n        const { title } = this.props\n        const EditButton = this.EditControl()\n        return (\n            <div className='ScheduleEventLayout'>\n                <div className='ScheduleEventTitle'>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t2>\n                    {EditButton}\n                </div>\n                <div className='ScheduleEventContext'>\n                    <div className='ContextList'>\n                        {this.listevent()}\n                    </div>\n                </div>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        {/* <Select defaultValue={this.state.selSchedule} placeholder='選擇' style={{ width: 150 }} onChange={this.selSchedule.bind(this)}>\n                            <Option value='排程'>排程</Option>\n                            <Option value='事件'>事件</Option>\n                        </Select> */}\n                        <div value='排程' style={{ display: \"grid\", width: 150, height: \"32px\", justifyContent: \"center\", alignItems: \"center\", border: \"1px solid #d9d9d9\", borderRadius: \"4px\", marginRight: \"5px\" }}>排程</div>\n                        <Input placeholder=\"輸入當日內容\" value={this.state.inputContent} onChange={this.onInputChange}></Input>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Schedule_event_list\n","import React, { Component } from 'react';\nimport Schedule_event_list from '../Module/Schedule_event'\n\nclass Wardschedule extends Component {\n\n    render() {\n        return (\n            <Schedule_event_list source={this.props.source} title=\"今日排程\" data={this.props.scheduleData} editstatus={this.props.editstatus} />\n        );\n    }\n}\n\n\nexport default Wardschedule\n","import React, { Component } from 'react';\nimport WardcardNote from './Wardnote'\nimport Wardbedinformation from './WardBedinformation'\nimport Wardschedule from './Wardschedule'\nimport './Wardinfoindex.scss'\n// import * as ApiProvider from '../API/ApiProvider';\n\n// const SCHEDULE_TYPE_EVENT = \"事件\";\n\nclass Wardinfoindex extends Component {\n    render() {\n        return (\n            <div className='Wardinfoindexcontent'>\n                <div style={{ fontSize: \"18px\", color: \"rgba(0, 0, 0, .7)\", fontWeight: \"600\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>NICU總覽</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"5px\" }}>\n                    <WardcardNote></WardcardNote>\n                    <Wardschedule source={0} editstatus={false}></Wardschedule>\n                </div>\n                <Wardbedinformation></Wardbedinformation>\n            </div>\n        );\n    }\n}\n\nexport default Wardinfoindex;\n","// Get api\n\n\n\n//資料更新時間\nconst updatetime = {\n    'time': 1567051200000\n}\n\nconst eventdata = [\n    {\n        \"item\": \"schedule\",\n        \"time\": 1565748000000,\n        \"result\": \"手術前檢查\",\n        \"name\": \"林博偉\",\n        \"bednumber\": \"01\",\n        \"writter\": \"林天財\"\n    },\n    {\n        \"item\": \"event\",\n        \"time\": 1565748000000,\n        \"result\": \"傷口變大了\",\n        \"name\": \"王添財\",\n        \"bednumber\": \"02\",\n        \"writter\": \"林天財\"\n    }\n]\n\n//Ward_bed_vitalData_last POST\nconst ward_bed_lastData = [\n    {\n        \"MedicalNumber\": \"123456789\",\n        \"Data\": {\n            \"HR\": 120,\n            \"ABP1\": 45,\n            \"ABP2\": 30,\n            \"ABP3\": 35,\n            \"SpO2\": 96,\n            \"BT\": 37.5,\n            \"RR\": 22\n        },\n        \"Status\": {\n            \"Ventilator\": false,\n            \"TPN\": true,\n            \"NPO\": false,\n            \"ECMO\": false,\n            \"Antibiotics\": false,\n            \"Hemodialysis\": false,\n            \"Foley\": false,\n            \"Drain\": false\n        }\n    },\n    {\n        \"MedicalNumber\": \"987654321\",\n        \"Data\": {\n            \"HR\": 120,\n            \"ABP1\": 45,\n            \"ABP2\": 30,\n            \"ABP3\": 35,\n            \"SpO2\": 96,\n            \"BT\": 37.5,\n            \"RR\": 22\n        }\n    },\n    {\n        \"MedicalNumber\": \"123454321\",\n        \"Data\": {\n            \"HR\": 120,\n            \"ABP1\": 45,\n            \"ABP2\": 30,\n            \"ABP3\": 35,\n            \"SpO2\": 96,\n            \"BT\": 37.5,\n            \"RR\": 22\n        }\n    }\n]\n\nconst WardInfo = {\n    UpdateTime: 1567051200000,\n    Director: \"林又新\",\n    HeadNurse: \"鄭麗貞\",\n    BedTotal: 12,\n    SignBed: 7,\n    EmptyBed: 9,\n    TransferBed: 8,\n    NewPatient: 2,\n    Ventilator: 1,\n    NPO: 7,\n    TPN: 4,\n    ECMO: 8,\n    Antibiotics: 6,\n    Hemodialysis: 1,\n    Announcement: [\n        {\n            time: 1567051200000,\n            text: \"7/10 王大明醫師請假，下午請李小華醫師cover ，6/30XXX醫師留\",\n            writter: \"張大帥\"\n        },\n        {\n            time: 1567051250000,\n            text: \"「超音波用完請記得歸還原位」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        }\n    ]\n}\nconst labdata = [\n    [{ title: \"Glucose\", score: 77, date: \"2019/01/01\" }],\n    [{ title: \"WBC\", score: 19647, date: \"Seg 59%2019/01/01\" }],\n    [{ title: \"WBC\", score: 14.8, date: \"2019/01/01\" }],\n    [{ title: \"Platelet\", score: 125, date: \"2019/01/01\" }],\n    [\n        { title: \"Na+\", score: 125, date: \"2019/01/01\" },\n        { title: \"K+\", score: 125, date: \"2019/01/01\" },\n        { title: \"Ca2+\", score: 125, date: \"2019/01/01\" },\n        { title: \"P\", score: 125, date: \"2019/01/01\" },\n        { title: \"Mg2+\", score: 125, date: \"2019/01/01\" },\n    ],\n    [\n        { title: \"CRP\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Procalcitionin\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Current Antibiotics\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Bun\", score: 125, date: \"2019/01/01\" },\n        { title: \"Cr\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"ALT\", score: 125, date: \"2019/01/01\" },\n        { title: \"AST\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"TBIL\", score: 125, date: \"2019/01/01\" },\n        { title: \"D.Bil\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"ALKP\", score: 125, date: \"2019/01/01\" },\n        { title: \"Total Ca\", score: 125, date: \"2019/01/01\" },\n        { title: \"LDH\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Iron\", score: 125, date: \"2019/01/01\" },\n        { title: \"TIBC\", score: 125, date: \"2019/01/01\" },\n        { title: \"FeSat\", score: 125, date: \"2019/01/01\" },\n        { title: \"Ferritin\", score: 125, date: \"2019/01/01\" }\n    ]\n]\nconst jsonResponse = [\n    {\n        \"HISID\": \"H1234567\",\n        \"CASEID\": \"C1234567\",\n        \"name\": \"吳大胖之女\",\n        \"gender\": 1,\n        \"birthday\": \"2019/11/11\",\n        \"bednumber\": 1,\n        \"pregnancy\": \"2019/11/10\",\n        \"weightbirth\": 1400,\n        \"weight\": 2300,\n        'report': 3,\n        'nonreport': 3,\n        'note': '隨時注意病人血壓狀態隨時注意病人血壓狀態',\n        'type':'NIS',\n        'MainDoctor':'張大春',\n        'IcuInTime':'2019/11/11'\n    },\n    {\n        \"HISID\": \"H9876543\",\n        \"CASEID\": \"C12345622\",\n        \"name\": \"吳大胖之女\",\n        \"gender\": 1,\n        \"birthday\": \"2019/11/11\",\n        \"bednumber\": 2,\n        \"pregnancy\": \"2019/11/10\",\n        \"weightbirth\": 1400,\n        \"weight\": 2300,\n        'report': 3,\n        'nonreport': 3,\n        'note': '隨時注意病人血壓狀態隨時注意病人血壓狀態',\n        'type':'Custom',\n        'MainDoctor':'張大春',\n        'IcuInTime':'2019/11/11'\n    }\n]\n\n//Wardview TCP data\nconst centerrowdata = {\n    \"id\": 20190817001,\n    \"data\": {\n        \"Weight\": 5000,\n        \"WeightDif\": 700,\n        \"BP\": [\n            {\n                \"time\": 1565395200,\n                \"DBP\": 60,\n                \"SBP\": 90\n            }\n        ],\n        \"HR\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"RR\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"BT\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"Urine\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"Suger\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"SP\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ]\n    }\n}\n\nconst growdata = {\n    Male_befor: [\n        { y: 22, min: 420, max: 600 },\n        { y: 23, min: 470, max: 700 },\n        { y: 24, min: 510, max: 800 },\n        { y: 25, min: 570, max: 900 },\n        { y: 26, min: 610, max: 1040 },\n        { y: 27, min: 700, max: 1200 },\n        { y: 28, min: 790, max: 1340 },\n        { y: 29, min: 870, max: 1520 },\n        { y: 30, min: 1000, max: 1740 },\n        { y: 31, min: 1120, max: 2000 },\n        { y: 32, min: 1300, max: 2240 },\n        { y: 33, min: 1500, max: 2500 },\n        { y: 34, min: 1700, max: 2800 },\n        { y: 35, min: 1960, max: 3040 },\n        { y: 36, min: 2180, max: 3300 },\n        { y: 37, min: 2400, max: 3500 },\n        { y: 38, min: 2600, max: 3780 },\n        { y: 39, min: 2810, max: 3980 },\n        { y: 40, min: 3000, max: 4200 },\n        { y: 41, min: 3200, max: 4440 },\n        { y: 42, min: 3400, max: 4700 },\n        { y: 43, min: 3600, max: 5000 },\n        { y: 44, min: 3800, max: 5270 }\n    ],\n    FeMale_before: [\n        { y: 22, min: 400, max: 580 },\n        { y: 23, min: 430, max: 640 },\n        { y: 24, min: 490, max: 730 },\n        { y: 25, min: 550, max: 850 },\n        { y: 26, min: 580, max: 1000 },\n        { y: 27, min: 630, max: 1120 },\n        { y: 28, min: 700, max: 1300 },\n        { y: 29, min: 800, max: 1500 },\n        { y: 30, min: 900, max: 1700 },\n        { y: 31, min: 1050, max: 1910 },\n        { y: 32, min: 1200, max: 2180 },\n        { y: 33, min: 1400, max: 2400 },\n        { y: 34, min: 1600, max: 2680 },\n        { y: 35, min: 1850, max: 2930 },\n        { y: 36, min: 2050, max: 3200 },\n        { y: 37, min: 2300, max: 3490 },\n        { y: 38, min: 2480, max: 3700 },\n        { y: 39, min: 2680, max: 3900 },\n        { y: 40, min: 2820, max: 4100 },\n        { y: 41, min: 2980, max: 4300 },\n        { y: 42, min: 3150, max: 4520 },\n        { y: 43, min: 3300, max: 4740 },\n        { y: 44, min: 3500, max: 5000 }\n    ],\n    Male_after: [\n        { y: 0, min: 2500, max: 4300 },\n        { y: 1, min: 2600, max: 4500 },\n        { y: 2, min: 2800, max: 4900 },\n        { y: 3, min: 3100, max: 5200 },\n        { y: 4, min: 3400, max: 5600 },\n        { y: 5, min: 3600, max: 5900 },\n        { y: 6, min: 3800, max: 6300 }\n    ],\n    FeMale_after: [\n        { y: 0, min: 2400, max: 4200 },\n        { y: 1, min: 2500, max: 4400 },\n        { y: 2, min: 2700, max: 4600 },\n        { y: 3, min: 2900, max: 5000 },\n        { y: 4, min: 3100, max: 5300 },\n        { y: 5, min: 3300, max: 5600 },\n        { y: 6, min: 3500, max: 5900 }\n    ]\n}\n\nconst Note_data = [\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 }\n]\n\nconst todo_data = [\n    {\n        Time: 1566287810473,\n        Content: \"幫大明量體重\",\n        Flag: true,\n        Editor: \"修改者\"\n    },\n    {\n        Time: 1566287810473,\n        Content: \"幫大明量體重\",\n        Flag: true,\n        Editor: \"修改者\"\n    },\n    {\n        Time: 1566287810473,\n        Content: \"幫大明量體重\",\n        Flag: true,\n        Editor: \"修改者\"\n    }\n]\n\n\nexport { jsonResponse, centerrowdata, WardInfo, updatetime, ward_bed_lastData, labdata, eventdata, growdata, Note_data, todo_data };","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { growdata } from '../jsonResponse'\nimport moment from 'moment';\n\nclass WardlifeChart extends Component {\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    drawChart() {\n        const { gender, svg_key, weightList, grewinfo } = this.props\n        const width = (window.screen.availWidth - 50) / 2 - 50, height = 400\n        //var d = new Date('2014,12,01,12:16:05');\n        //var vertigo = datarelease();\n        console.log(grewinfo)\n        if (grewinfo === null || grewinfo === undefined) {\n            return null\n        }\n        const bornweeks = Number(grewinfo.WEEK_BORN)\n        const borndays = Number(grewinfo.DAY_BORN)\n        const Birthday = grewinfo.BIRTHDAY\n        const pregencyTimestamp = moment(Birthday, \"YYYYMMDD\").valueOf() - ((bornweeks * 7) + borndays) * 24 * 60 * 60 * 1000\n\n\n\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([0, 6000])\n            .range([height, 0])\n\n        var x = d3.scaleLinear()\n            .domain([22, 44])\n            .range([0, width])\n\n        var yAxis = d3.axisLeft(y)\n            .ticks(12)\n            .tickSize(0, 0)\n            .tickPadding(10);\n\n\n        var xAxis = d3.axisTop(x)\n            .ticks(14)\n            .tickSize(0, 0)\n            .tickPadding(-15)\n            .tickFormat(function (d) { return 'W' + d; });\n\n\n        var svg = d3\n            .select(\"#\" + svg_key)\n            .attr(\"viewBox\", [0, 0, width + 80, height + 50])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 40 + \",\" + 20 + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(\" + 0 + \", \" + height + \")\");\n\n        for (let index = 0; index < 9; index++) {\n            const number = index * 500\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(number))\n                .attr('x2', width)\n                .attr('y2', y(number))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n\n        }\n\n        for (let index = 0; index < 13; index++) {\n            const number = index * 500\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(number))\n                .attr('x2', width)\n                .attr('y2', y(number))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n        }\n\n        for (let index = 22; index < 45; index++) {\n            if (index % 2 == 0) {\n                svg.append('line')\n                    .attr('x1', x(index))\n                    .attr('y1', 0)\n                    .attr('x2', x(index))\n                    .attr('y2', height)\n                    .style('stroke', 'rgba(187, 187, 187, 1)')\n                    .style('stroke-width', 1)\n                    .style('stroke-dasharray', 5.5);\n            }\n        }\n\n        if (gender === '1') {\n            for (let index = 0; index < growdata.Male_befor.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_befor[index].y))\n                    .attr('y1', y(growdata.Male_befor[index].min))\n                    .attr('x2', x(growdata.Male_befor[index + 1].y))\n                    .attr('y2', y(growdata.Male_befor[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 1.5);\n            }\n\n            for (let index = 0; index < growdata.Male_befor.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_befor[index].y))\n                    .attr('y1', y(growdata.Male_befor[index].max))\n                    .attr('x2', x(growdata.Male_befor[index + 1].y))\n                    .attr('y2', y(growdata.Male_befor[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 1.5);\n            }\n        }\n        else {\n            for (let index = 0; index < growdata.FeMale_before.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_before[index].y))\n                    .attr('y1', y(growdata.FeMale_before[index].min))\n                    .attr('x2', x(growdata.FeMale_before[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_before[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 1.5);\n            }\n\n            for (let index = 0; index < growdata.FeMale_before.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_before[index].y))\n                    .attr('y1', y(growdata.FeMale_before[index].max))\n                    .attr('x2', x(growdata.FeMale_before[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_before[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 1.5);\n            }\n        }\n        const datasource = weightList\n        console.log(datasource)\n        //x 週數 y體重 NIS\n        for (let index = 0; index < datasource.length; index++) {\n            const element = datasource[index];\n            const BornDay = element.rec_dat.toString().trim()\n            const BornTime = element.rec_tim.toString().trim()\n            const time = BornDay + BornTime\n            const weighttimestamp = moment(time, \"YYYYMMDDHHmm\").valueOf() //體重時間\n            const weeks = (weighttimestamp - pregencyTimestamp) / (7 * 24 * 60 * 60 * 1000) //體重週數\n            if (weeks < 22) {\n                continue\n            }\n            if (weeks > 44) {\n                continue\n            }\n            svg.append('circle')\n                .attr('cx', x(weeks))\n                .attr('cy', y(Number(element.value2) * 1000))\n                .attr('r', 3)\n                .style('fill', 'green')\n        }\n\n\n        // const datacustom = wardchartoncustombefore\n        // for (let index = 0; index < datacustom.length; index++) {\n        //     const element = datacustom[index];\n        //     svg.append('circle')\n        //         .attr('cx', x(element.x))\n        //         .attr('cy', y(element.y))\n        //         .attr('r', 3)\n        //         .style('fill', 'blue')\n        // }\n\n    }\n\n    render() {\n        const { id_key, svg_key } = this.props\n        return (\n            <div id={id_key}>\n                <svg id={svg_key}></svg>\n            </div>\n        );\n    }\n}\n\nexport default WardlifeChart;","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { growdata } from '../jsonResponse'\nimport moment from 'moment'\n\nclass Wardmonthafter extends Component {\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    drawChart() {\n        const { gender, svg_key,weightList,grewinfo } = this.props\n        const width = (window.screen.availWidth - 50) / 2 - 50, height = 400\n        console.log(grewinfo)\n        if (grewinfo === null || grewinfo === undefined) {\n            return null\n        }\n        const Birthday = grewinfo.BIRTHDAY\n        const pregencyTimestamp = moment(Birthday, \"YYYYMMDD\").valueOf()\n        //var vertigo = datarelease();\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([1000, 10000])\n            .range([height, 0])\n\n        var x = d3.scaleLinear()\n            .domain([0, 6])\n            .range([0, width])\n\n        var yAxis = d3.axisLeft(y)\n            .ticks(10)\n            .tickSize(0, 0)\n            .tickPadding(10);\n\n\n        var xAxis = d3.axisTop(x)\n            .ticks(6)\n            .tickSize(0, 0)\n            .tickPadding(-15)\n            .tickFormat(function (d) {\n                if (d === 0) {\n                    return \"birth\"\n                }\n                else return 'M' + d;\n            });\n\n\n        var svg = d3\n            .select(\"#\" + svg_key)\n            // .style(\"height\", \"300px\")\n            // .style(\"width\", svgwidth + \"px\")\n            // .select(\"svg\")\n            .attr(\"viewBox\", [0, 0, width + 80, height + 50])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 20 + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(\" + 0 + \", \" + height + \")\");\n\n        for (let index = 0; index < 7; index++) {\n            svg.append('line')\n                .attr('x1', x(index))\n                .attr('y1', 0)\n                .attr('x2', x(index))\n                .attr('y2', height)\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n\n        }\n\n        for (let index = 0; index < 19; index++) {\n            const number = index * 500 + 1000\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(number))\n                .attr('x2', width)\n                .attr('y2', y(number))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n\n        }\n\n        // for (let index = 22; index < 45; index++) {\n        //     svg.append('line')\n        //         .attr('x1', x(index))\n        //         .attr('y1', 0)\n        //         .attr('x2', x(index))\n        //         .attr('y2', height)\n        //         .style('stroke', 'rgba(187, 187, 187, 1)')\n        //         .style('stroke-width', 1)\n        //         .style('stroke-dasharray', 5.5);\n        // }\n\n        if (gender === '1') {\n            for (let index = 0; index < growdata.Male_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_after[index].y))\n                    .attr('y1', y(growdata.Male_after[index].min))\n                    .attr('x2', x(growdata.Male_after[index + 1].y))\n                    .attr('y2', y(growdata.Male_after[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 1.5);\n            }\n\n            for (let index = 0; index < growdata.Male_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_after[index].y))\n                    .attr('y1', y(growdata.Male_after[index].max))\n                    .attr('x2', x(growdata.Male_after[index + 1].y))\n                    .attr('y2', y(growdata.Male_after[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 1.5);\n            }\n        }\n        else {\n            for (let index = 0; index < growdata.FeMale_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_after[index].y))\n                    .attr('y1', y(growdata.FeMale_after[index].min))\n                    .attr('x2', x(growdata.FeMale_after[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_after[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 1.5);\n            }\n\n            for (let index = 0; index < growdata.FeMale_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_after[index].y))\n                    .attr('y1', y(growdata.FeMale_after[index].max))\n                    .attr('x2', x(growdata.FeMale_after[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_after[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 1.5);\n            }\n        }\n\n        const datasource = weightList\n        //x時間 y體重\n        for (let index = 0; index < datasource.length; index++) {\n            const element = datasource[index];\n            const BornDay = element.rec_dat.toString().trim()\n            const BornTime = element.rec_tim.toString().trim()\n            const time = BornDay + BornTime\n            const weighttimestamp = moment(time,\"YYYYMMDDHHmm\").valueOf() //體重時間\n            const Month = (weighttimestamp - pregencyTimestamp) / (30 * 24 * 60 * 60 * 1000) //體重週數\n            if (Month < 0 || Month > 6) {\n                continue\n            }\n            console.log(Month,Number(element.value2) * 1000)\n            svg.append('circle')\n                .attr('cx', x(Month))\n                .attr('cy', y(Number(element.value2) * 1000))\n                .attr('r', 3)\n                .style('fill', 'green')\n        }\n        // const datacustom = wardchartoncustom\n        // for (let index = 0; index < datacustom.length; index++) {\n        //     const element = datacustom[index];\n        //     svg.append('circle')\n        //         .attr('cx', x(element.x))\n        //         .attr('cy', y(element.y))\n        //         .attr('r', 3)\n        //         .style('fill', 'blue')\n        // }\n\n    }\n\n    render() {\n        const { id_key, svg_key } = this.props\n        return (\n            <div id={id_key}>\n                <svg id={svg_key}></svg>\n            </div>\n        );\n    }\n}\n\nexport default Wardmonthafter;\n","import React, { Component } from 'react';\nimport WardlifeChart from './Wardlifechart'\nimport Wardmonthafter from './Wardmonthafter'\n\n\nclass Wardgrewchart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            test_items_interval: 0\n        };\n    }\n    switch_monthy() {\n        const { Data, WeightList, grewinfo } = this.props\n        console.log(grewinfo)\n        const switch_data = this.state.test_items_interval\n        switch (switch_data) {\n            case 1:\n                return <WardlifeChart grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife\"} svg_key={\"wardlife_svg\"} gender={Data.PSEX}></WardlifeChart>\n            case 0:\n                return <Wardmonthafter grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife_after\"} svg_key={\"wardlife_after_svg\"} gender={Data.PSEX}></Wardmonthafter>\n            default:\n                return null;\n        }\n    }\n    //測驗項目功能_區間按鈕樣式\n    SwitchTestItemInterval(testiteminterval) {\n        const time_selectbtn_style = {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"40px\",\n            paddingRight: \"10px\",\n            paddingLeft: \"10px\",\n            borderRadius: \"16px\",\n            backgroundColor: \"rgba(245,166,35,1)\",\n            color: \"white\",\n            fontSize: \"1rem\",\n            borderWidth: \"1px\",\n            borderStyle: \"solid\",\n            borderColor: \"rgba(245,166,35,1)\",\n            cursor: \"pointer\"\n        }\n        const time_unselectbtn_style = {\n            display: \"flex\", justifyContent: \"center\",\n            alignItems: \"center\", height: \"40px\",\n            paddingRight: \"10px\", paddingLeft: \"10px\",\n            borderRadius: \"16px\", backgroundColor: \"white\",\n            color: \"rgba(245,166,35,1)\", fontSize: \"1rem\",\n            borderWidth: \"1px\", borderStyle: \"solid\",\n            borderColor: \"rgba(245,166,35,1)\",\n            cursor: \"pointer\"\n        }\n        if (testiteminterval === this.state.test_items_interval) {\n            return time_selectbtn_style\n        }\n        else return time_unselectbtn_style\n    }\n    //測驗項目功能_區間按鈕選擇\n    Onchangetimeinterval(changestate) {\n        this.setState(\n            {\n                test_items_interval: changestate\n            }\n        )\n    }\n    render() {\n        return (\n            <div>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: 'center', height: \"50px\", backgroundColor: \"#cccccc\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", paddingLeft: \"15px\" }}>\n                    <t2>生長曲線圖</t2>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"5px\" }}>\n                        <div style={this.SwitchTestItemInterval(0)} onMouseUp={() => this.Onchangetimeinterval(0)}>滿足月</div>\n                        <div style={this.SwitchTestItemInterval(1)} onMouseUp={() => this.Onchangetimeinterval(1)}>不滿足月</div>\n                    </div>\n                </div>\n                {this.switch_monthy()}\n            </div>\n        );\n    }\n}\nexport default Wardgrewchart","import React, { Component } from 'react';\nimport editlogo from '../../Image/svg/Edit.svg'\nimport detaillogo from '../../Image/svg/details.svg'\nimport { Tooltip, Input, Button } from 'antd';\nimport './Notice.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass Notice extends Component {\n    state = {\n        caseinfo: this.props.caseinfo,\n        EditMode: false,\n        noticeData: [],\n        inputContent: undefined,\n        powerLogin: 0\n    }\n    componentDidMount() {\n        //bind function\n        this.onInputChange = this.onInputChange.bind(this);\n        //query patient notice\n        console.log(\"caseinfo: \" + JSON.stringify(this.props.caseinfo));\n        const TRID = this.props.caseinfo.TRANSINID.toString().trim()\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins, preTRID: TRID })\n        this.queryPatientImportant(TRID);\n    }\n    componentDidUpdate() {\n        const TRID = this.props.caseinfo.TRANSINID.toString().trim()\n        const preTRID = this.state.preTRID\n        if (TRID !== preTRID) {\n            this.setState({ preTRID: TRID })\n            this.queryPatientImportant(TRID);\n        }\n    }\n    queryPatientImportant(TRID) {\n        ApiProvider.getOnePatientImportantMatter(TRID)\n            .then(data => {\n                console.log(\"getOnePatientImportantMatter OK \" + JSON.stringify(data));\n                this.setState({ noticeData: data.data });\n            })\n            .catch(err => {\n                console.log(\"getOnePatientImportantMatter NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString();\n        ApiProvider.createPatientImportantMatter(this.state.inputContent, \"\", this.state.caseinfo.HISID, timeNowStr, this.state.caseinfo.TRANSINID)\n            .then(data => {\n                console.log(\"createPatientImportantMatter OK \" + JSON.stringify(data));\n                this.queryPatientImportant();\n            })\n            .catch(err => {\n                console.log(\"createPatientImportantMatter NG \" + JSON.stringify(err));\n            });\n        this.setState(\n            {\n                EditMode: false,\n                inputContent: undefined\n            }\n        )\n    }\n    renderEditButton() {\n        if (this.props.disableEdit === true) {\n            return null;\n        } else {\n            return (\n                <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                    <img src={editlogo} alt=\"editlogo\" />\n                </div>\n            )\n        }\n    }\n\n    render() {\n        function remarkcellRender(dataList) {\n            if (Array.isArray(dataList)) {\n                if (dataList.length === 0) {\n                    return (\n                        <div style={{ padding: \"5px 15px\" }}>無病人註記</div>\n                    );\n                }\n                const remarkcell = dataList.map((info, index) =>\n                    <div key={index} className='noticecontext'>\n                        <div style={{ whiteSpace: \"pre-wrap\" }}>{info.context}</div>\n                        <Tooltip placement=\"topRight\" title={tooltiptext(info.Editor, info.time)}>\n                            <img src={detaillogo} alt=\"detaillogo\" />\n                        </Tooltip>\n                    </div>\n                )\n                return remarkcell\n            }\n            return (\n                <div style={{ padding: \"5px 15px\" }}>無病人註記</div>\n            );\n        }\n        function tooltiptext(editor, time) {\n            function nullvalue(value) {\n                if (value === null || value === undefined) {\n                    return \"--\"\n                }\n                return value\n            }\n            console.log(time)\n            const t = moment(time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n            const localTime = moment.utc(t).toDate()\n            const displayTime = moment(localTime).format(\"MM/DD HH:mm\")\n            return nullvalue(editor) + \"醫師於\" + displayTime + \"更新\"\n        }\n        const remarkcell = remarkcellRender(this.state.noticeData)\n        const { TextArea } = Input;\n        return (\n            <div style={{ marginBottom: '10px' }}>\n                <div className='noticetitle'>\n                    <t2>病人註記</t2>\n                    {this.renderEditButton()}\n                </div>\n                <div className='noticecontextborder'>\n                    {remarkcell}\n                </div>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", backgroundColor: \"rgba(238,238,238,1)\" }}>\n                        <TextArea id=\"noticeContent\" placeholder=\"輸入當日註記內容\" value={this.state.inputContent} onChange={this.onInputChange} autoSize={true}></TextArea>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Notice\n","import React, { Component } from 'react';\nimport { Labwarningvalue } from '../../Function/Wardstate'\nimport moment from 'moment'\n\nclass Labviewitem extends Component {\n    TimeRender(time) {\n        const { Source } = this.props\n        return (\n            <centerstyle>\n                <t3 style={{ color: \"rgba(0,0,0,0.4)\" }}>{moment(time, \"YYYY-MM-DD\").format(\"MM/DD\")}</t3>\n            </centerstyle>\n        );\n    }\n    render() {\n        function RowsGrid(source) {\n            if (source === \"Wardview\") {\n                return \"1fr 2fr\"\n            }\n            return \"1fr 2fr 1fr\"\n        }\n        function RowsHeight(source) {\n            if (source === \"Wardview\") {\n                return \"80px\"\n            }\n            return \"120px\"\n        }\n        const { value, title, time, Source } = this.props\n        const TimeR = this.TimeRender(time)\n        return (\n            <div style={{ display: \"grid\", gridTemplateRows: RowsGrid(Source), height: RowsHeight(Source) }}>\n                <centerstyle>\n                    <t3>{title}</t3>\n                </centerstyle>\n                <centerstyle>\n                    <t2 style={{ fontSize: \"20px\", color: Labwarningvalue(value, title) ? \"black\" : \"red\" }}>{value}</t2>\n                </centerstyle>\n                {TimeR}\n            </div>\n        );\n    }\n}\n\nexport default Labviewitem","export function firstarea_Reg_IO() {\n    return [\"輸液\"];\n}\n\nexport function Secondarea_reg_IO() {\n    return [\"血品\"];\n}\n\nexport function Thirdarea_reg_IO() {\n    return [\"進食\"];\n}\n\nexport function Fourtharea_reg_IO() {\n    return [\"失血\", \"滲液\", \"嘔吐\", \"引流\", \"穿刺\", \"透析\", \"沖洗\", \"排便\", \"排尿\"];\n}\n\n\n\nexport function Feedarea_Reg_IO() {\n    return [\"進食\"];\n}\n\nexport function IVarea_reg_IO() {\n    return [\"血品\", \"輸液\"];\n}\n\nexport function UOarea_reg_IO() {\n    return [\"排尿\"];\n}\n\nexport function Otherarea_reg_IO() {\n    return [\"失血\", \"滲液\", \"嘔吐\", \"引流\", \"穿刺\", \"透析\", \"沖洗\", \"排便\"];\n}\n\nexport function Select_Main_Doc(DOCLIST) {\n    console.log(DOCLIST)\n    const MainDoc = DOCLIST.filter(function (value, index, array) {\n        return value.PDTYPE === \"B\"\n    })\n    if (MainDoc.length === 0) {\n        return \"\"\n    }\n    else {\n        const data = MainDoc[0]\n        return data.PDDOCNMC\n    }\n}\n\nexport function SumFeedDataMapReduce(arr) {\n    const sumlist = arr.map(function (value, index) {\n        return Number(value.inp_val2)\n    })\n    var sum = 0\n    for (let index = 0; index < sumlist.length; index++) {\n        const element = sumlist[index];\n        sum = sum + element\n    }\n    return sum\n}\n\nexport function SumIVDataMapReduce(arr) {\n    const sumlist = arr.map(function (value, index) {\n        return Number(value.inp_val1)\n    })\n    var sum = 0\n    for (let index = 0; index < sumlist.length; index++) {\n        const element = sumlist[index];\n        sum = sum + element\n    }\n    return sum\n}\n\nexport function SumUrineDataMapReduce(arr) {\n    const sumlist = arr.map(function (value, index) {\n        return Number(value.inp_val1)\n    })\n    var sum = 0\n    for (let index = 0; index < sumlist.length; index++) {\n        const element = sumlist[index];\n        sum = sum + element\n    }\n    return sum\n}\nexport function SumInOtherDataMapReduce(arr) {\n    return arr.map(el => Number(el.inp_val1)).reduce((a, b) => a + b);\n}\nexport function SumOutOtherDataMapReduce(arr) {\n    return arr.map(el => Number(el.out_val1)).reduce((a, b) => a + b);\n}\n\n\n\n//累積報告\n\nexport function ListForTime(arr, time) {\n    var DataList = []\n    for (let index = 0; index < arr.length; index++) {\n        const element = arr[index];\n        if (new Date(element.ORRESDT).getTime() <= new Date(time).getTime()) {\n            DataList.push(element)\n        }\n    }\n    return DataList\n}\n\nexport function ListForTimeAndTarget(arr, time, target) {\n    var DataList = []\n    arr.forEach(element => {\n        const parseTimestamp = new Date(element.ORRCPDT.split(\"-\")[0], element.ORRCPDT.split(\"-\")[1], element.ORRCPDT.split(\"-\")[2]).getTime()\n        // const nowTimestamp = new Date(time).getTime()\n        //console.log(\"parseTimestamp: \" + parseTimestamp + \"\\nnowTimestamp: \" + nowTimestamp)\n        //console.log(element.ORPROCED.indexOf(target))\n        if (parseTimestamp <= new Date(time).getTime() && element.ORPROCED.indexOf(target) > -1) {\n            DataList.push(element)\n        }\n    })\n    return DataList\n}\n\nexport function CaRegString(ressectobject) {\n    var select = []\n    if (Array.isArray(ressectobject)) {\n        for (let index = 0; index < ressectobject.length; index++) {\n            const element = ressectobject[index];\n            const elementstring = element.ORPROCED.toString()\n            if (elementstring.match(\"Ca++, free\") !== null) {\n                select.push(element)\n            }\n        }\n    }\n    if (select.length === 0) {\n        return \"null\"\n    }\n\n}\n\nexport function QSPERegList(qspe) {\n    function SettingValue(mode, value) {\n        if (value === undefined || value === null) {\n            return \"\"\n        }\n        const valueList = value.split(\"/\")\n        if (mode === 'NC') {\n            return \"Flow:\" + valueList[0]\n        }\n        if (mode === 'HF') {\n            return \"FiO2:\" + valueList[0] + \"/PEEP:\" + valueList[1]\n        }\n        if (mode === 'UW' || mode === 'bcpap' || mode === 'CPAP') {\n            return \"FiO2:\" + valueList[0] + \"/PEEP:\" + valueList[1]\n        }\n        if (mode === 'NIPPV' || mode.match(\"PC\") !== null) {\n            return \"FiO2:\" + valueList[0] + \"/Rate:\" + valueList[1] + \"/PIP:\" + valueList[2] + \"/PEEP:\" + valueList[3]\n        }\n        if (mode.match(\"HFOV\") !== null) {\n            return \"FiO2:\" + valueList[0] + \"/Amp:\" + valueList[1] + \"/MAP:\" + valueList[2] + \"/Freq:\" + valueList[3]\n        }\n        if (mode.match(\"HFPPV\") !== null) {\n            return \"FiO2:\" + valueList[0] + \"/Rate:\" + valueList[1] + \"/PIP:\" + valueList[2] + \"/PEEP:\" + valueList[3]\n        }\n        return value\n    }\n\n    var qspearray = []\n    if (Array.isArray(qspe)) {\n        for (let index = 0; index < qspe.length; index++) {\n            const element = qspe[index];\n            console.log(element)\n            if (element !== undefined) {\n                const SelectElement = element.special.toString()\n                if (SelectElement.match(\"@v\") !== null) {\n                    const DataArray = SelectElement.split(\" \")\n                    const title = DataArray[1]\n                    const value = DataArray[2]\n                    const DataJson = {\n                        \"Mode\": title,\n                        \"Setting\": SettingValue(title, value),\n                        \"Date\": element.rec_dat.toString().trim(),\n                        \"Time\": element.rec_tim,\n                    }\n                    console.log(element.rec_tim)\n                    qspearray.push(DataJson)\n                }\n            }\n            console.log(qspearray)\n        }\n    }\n    return qspearray\n}\n\nexport function QSPESetting(qspesettingarray) {\n    console.log(qspesettingarray)\n    const regString = qspesettingarray.Mode\n    const regValue = qspesettingarray.Setting.split(\"/\")\n    if (regString.match(\"RA\") !== null) {\n        return \"\"\n    }\n    if (regString.match(\"NC\") !== null) {\n        return \"Flow:\" + regValue[0]\n    }\n    if (regString.match(\"UW\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/PEEP:\" + regValue[1]\n    }\n    if (regString.match(\"bcpap\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/PEEP:\" + regValue[1]\n    }\n    if (regString.match(\"CPAP\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/PEEP:\" + regValue[1]\n    }\n    if (regString.match(\"NIPPV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Rate:\" + regValue[1] + \"/PIP:\" + regValue[2] + \"/PEEP:\" + regValue[3]\n    }\n    if (regString.match(\"HFOV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Rate:\" + regValue[1] + \"/PIP:\" + regValue[2] + \"/PEEP:\" + regValue[3]\n    }\n    if (regString.match(\"HFOV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Amp:\" + regValue[1] + \"/MAP:\" + regValue[2] + \"/Freq:\" + regValue[3]\n    }\n    if (regString.match(\"HFPPV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Rate:\" + regValue[1] + \"/PIP:\" + regValue[2] + \"/PEEP:\" + regValue[3]\n    }\n    return qspesettingarray.value\n}\n","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport './Wardcardvitalsign.scss';\nimport { mmddformat } from '../Function/Timeformat'\nimport * as ApiProvider from '../API/ApiProvider'\nimport moment from 'moment';\n\n\n\nclass WardcardvitalsignChart extends Component {\n    state = {\n        sourcedata: [],\n        preHID: null\n    }\n    componentDidUpdate() {\n        const { HISID } = this.props\n        const HID = HISID.toString().trim()\n        const preHID = this.state.preHID\n        if (HID !== preHID) {\n            this.setState({ preHID: HISID.toString().trim() })\n            this.getCenterMonitor()\n        }\n\n    }\n    componentDidMount() {\n        const { HISID } = this.props\n        this.setState({ preHID: HISID.toString().trim() })\n        this.getCenterMonitor()\n    }\n\n    getCenterMonitor() {\n        function selectType(type) {\n            switch (type) {\n                case \"div_hr\":\n                    return \"hr\"\n                case \"div_bp\":\n                    return \"nbp\"\n                case \"div_rr\":\n                    return \"rr\"\n                case \"div_spo\":\n                    return \"spo2\"\n                case \"div_abp\":\n                    return \"abp\"\n                case \"div_bt\":\n                    return \"bt\"\n                default:\n                    break;\n            }\n        }\n        // const simdata = vitalData.simdata\n        const endTime = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").format(\"YYYYMMDDHHmmss\");\n        const startTime = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf() - (24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\");\n        const { id_key, HISID } = this.props\n        const HID = HISID.toString().trim()\n        const type = selectType(id_key)\n        if (id_key === \"div_abp\") {\n            ApiProvider.getPatientwardvalueBoxPlot(HID, startTime, endTime, type, 0)\n                .then(data => {\n                    this.setState({\n                        sourcedata: data.data\n                    })\n                    this.drawChart()\n                })\n                .catch(err => { console.log(err) })\n        }\n        if (id_key === \"div_hr\" || id_key === \"div_rr\" || id_key === \"div_spo\") {\n\n            ApiProvider.getPatientwardvalueBoxPlot(HID, startTime, endTime, type, 0)\n                .then(data => {\n                    this.setState({\n                        sourcedata: data.data\n                    })\n                    this.drawChart()\n                })\n                .catch(err => { console.log(err) })\n        }\n        if (id_key === \"div_bp\") {\n\n            ApiProvider.getVitalSignData(HID, startTime, endTime, type)\n                .then(data => {\n                    this.setState({\n                        sourcedata: data.data\n                    })\n                    this.drawChart()\n                })\n                .catch(err => {\n                    console.log(err);\n                })\n        }\n    }\n    cal_svg_hight() {\n        const { axisTop, axisBot } = this.props\n        if (axisTop) {\n            if (axisBot) {\n                return 160\n            }\n            else {\n                return 130\n            }\n        }\n        else {\n            if (axisBot) {\n                return 100\n            }\n            else {\n                return 90\n            }\n        }\n    }\n\n    cal_svg_transform() {\n        const { axisTop, axisBot } = this.props\n        console.log(axisTop)\n        if (axisTop) {\n            if (axisBot) {\n                return 70\n            }\n            else {\n                return 50\n            }\n        }\n        else {\n            if (axisBot) {\n                return 5\n            }\n            else {\n                return 5\n            }\n        }\n    }\n\n    drawChart() {\n        function multiFormat(date) {\n            if (formatHour(date) % 4 === 0) {\n                return formatHour(date)\n            }\n            else return null\n        }\n        function multibotformat(date) {\n            if (new Date(date).getHours() === 0) {\n                return mmddformat(date)\n            }\n            else return null\n        }\n        const { svg_key, circlrcolor, axisTop, id_key, axisBot, MAX, MIN, Upper, Lower } = this.props\n        const width = window.screen.availWidth * 0.25, height = 70, transformmargin = this.cal_svg_transform(), margin = 20\n        // const borderwidth = width / 27\n        const time_now = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf()\n        const startTime = time_now - (24 * 60 * 60 * 1000);\n        console.log(time_now)\n\n        var time_array = []\n        var time_axis_array = []\n        for (let index = 0; index < 25; index++) {\n            time_array.push({ key: \"time\", x_axis_time: time_now - index * 60 * 60 * 1000 })\n            time_axis_array.push(time_now - index * 60 * 60 * 1000)\n        }\n        var time_array_reverse = time_array.reverse()\n        var time_axis_array_reverse = time_axis_array.reverse()\n        var formatHour = d3.timeFormat(\"%H\")\n\n        // const endTime = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf();\n\n\n        var x = d3.scaleLinear()\n            .domain([time_array_reverse[0].x_axis_time, time_array_reverse[24].x_axis_time])\n            .range([0, width - 40]);\n\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([MIN, MAX])\n            .range([height, 0])\n\n\n\n        var yAxis = d3.axisLeft(y)\n            .tickValues([MIN, MAX])\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(10);\n\n        var xAxisBottom = d3.axisBottom(x)\n            .tickValues(time_axis_array_reverse)\n            .tickSize(0, 0)\n            .tickPadding(height + 10)\n            .tickFormat(function (d) { return multibotformat(d); });\n\n\n        var xAxis = d3.axisTop(x)\n            .tickValues(time_axis_array_reverse)\n            .tickSize(0, 0)\n            .tickPadding(margin)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n        d3.select(\"#\" + svg_key).remove()\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_key)\n            .attr(\"viewBox\", [0, 0, width, this.cal_svg_hight()])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 30 + \",\" + transformmargin + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n        if (axisTop) {\n            svg.append(\"g\")\n                .call(xAxis)\n                .attr(\"class\", \"axis\");\n        }\n\n        if (axisBot) {\n            svg.append(\"g\")\n                .call(xAxisBottom)\n                .attr(\"class\", \"axis\");\n        }\n\n        //上下虛線\n        svg.append('line')\n            .attr('x1', 0)\n            .attr('y1', y(MAX))\n            .attr('x2', width)\n            .attr('y2', y(MAX))\n            .style('stroke', '#E0E0E0')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n        svg.append('line')\n            .attr('x1', 0)\n            .attr('y1', y(MIN))\n            .attr('x2', width)\n            .attr('y2', y(MIN))\n            .style('stroke', '#E0E0E0')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n\n        for (let index = 0; index < time_array_reverse.length; index++) {\n            svg.append('line')\n                .attr('x1', x(time_array_reverse[index].x_axis_time))\n                .attr('y1', 0)\n                .attr('x2', x(time_array_reverse[index].x_axis_time))\n                .attr('y2', height)\n                .style('stroke', '#E0E0E0')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n        }\n\n\n\n        drawshadow(startTime, 0, Lower, Upper)\n        function drawshadow(startTime, interval, lower, upper) {\n            const LimitBoxTimer = formatBox(startTime, interval, width)\n            for (let index = 0; index < LimitBoxTimer.length; index++) {\n                const boxwidth = formatBoxWidth(width, interval)\n                const element = LimitBoxTimer[index];\n                console.log(startTime)\n                svg.append('line')\n                    .attr('x1', x(element))\n                    .attr('y1', y(lower))\n                    .attr('x2', x(element))\n                    .attr('y2', y(upper))\n                    .style('stroke', circlrcolor)\n                    .style('opacity', 0.7)\n                    .style('stroke-width', boxwidth)\n\n                if (id_key === \"div_bp\" || id_key === \"div_abp\") {\n                    svg.append('line')\n                        .attr('x1', x(element))\n                        .attr('y1', y(35))\n                        .attr('x2', x(element))\n                        .attr('y2', y(55))\n                        .style('stroke', circlrcolor)\n                        .style('opacity', 0.3)\n                        .style('stroke-width', boxwidth)\n                }\n            }\n        }\n        function formatBox(startTime, interval) {\n            function interFormat(startTime, interval) {\n                var TimeArray = []\n                for (let index = 0; index < interval; index++) {\n                    if (interval === 24) {\n                        const boxTime = startTime + (30 * 60 * 1000) + (index * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 18) {\n                        const boxTime = startTime + (2 * 60 * 60 * 60 * 1000) + (index * 4 * 60 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 21) {\n                        const boxTime = startTime + (4 * 60 * 60 * 60 * 1000) + (index * 8 * 60 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else {\n                        const boxTime = startTime + (12 * 60 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                }\n                return TimeArray\n            }\n            if (interval === 0) {\n                return interFormat(startTime, 24)\n            }\n            if (interval === 1) {\n                return interFormat(startTime, 18)\n            }\n            if (interval === 2) {\n                return interFormat(startTime, 21)\n            }\n            return interFormat(startTime, 14)\n        }\n        function formatBoxWidth(viewwidth, interval) {\n            if (interval === 0) {\n                return viewwidth / 24\n            }\n            if (interval === 1) {\n                return viewwidth / 18\n            }\n            if (interval === 2) {\n                return viewwidth / 21\n            }\n            return viewwidth / 14\n        }\n        // var sim_data = this.state.sourcedata\n        const BoxPlotData = this.state.sourcedata\n        if (BoxPlotData.length === 0) {\n            return null\n        }\n\n        if (id_key === \"div_abp\") {\n            const dataAbps = BoxPlotData.abps\n            const dataAbpd = BoxPlotData.abpd\n            const boxwidth = 10\n            for (let index = 0; index < dataAbpd.length; index++) {\n                const element = dataAbpd[index];\n                const q1 = element.Q1\n                const q2 = element.Q2\n                const q3 = element.Q3\n                const q4 = element.Q4\n                const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                svg.append(\"line\")\n                    .attr(\"x1\", x(Xtime))\n                    .attr(\"x2\", x(Xtime))\n                    .attr(\"y1\", y(q1))\n                    .attr(\"y2\", y(q4))\n                    .attr(\"stroke\", circlrcolor)\n                    .style('opacity', 0.5)\n                    // .attr(\"stroke\", \"blcak\")\n                    .style('stroke-width', 1)\n\n                svg.append(\"rect\")\n                    .attr(\"x\", x(Xtime) - boxwidth / 2)\n                    .attr(\"y\", y(q3))\n                    .attr(\"height\", (y(q2) - y(q3)))\n                    .attr(\"width\", boxwidth)\n                    .attr(\"stroke\", circlrcolor)\n                    .style('opacity', 0.5)\n                    .style(\"fill\", \"rgba(255,255,255,1)\")\n                    .style('stroke-width', 1);\n\n                svg\n                    .selectAll(\"toto\")\n                    .data([q1, q4])\n                    .enter()\n                    .append(\"line\")\n                    .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                    .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                    .attr(\"y1\", function (d) { return (y(d)) })\n                    .attr(\"y2\", function (d) { return (y(d)) })\n                    .attr(\"stroke\", circlrcolor)\n                    .style('opacity', 0.5)\n                    .style('stroke-width', 1);\n            }\n            for (let index = 0; index < dataAbps.length; index++) {\n                const element = dataAbps[index];\n                const q1 = element.Q1\n                const q2 = element.Q2\n                const q3 = element.Q3\n                const q4 = element.Q4\n                const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                svg.append(\"line\")\n                    .attr(\"x1\", x(Xtime))\n                    .attr(\"x2\", x(Xtime))\n                    .attr(\"y1\", y(q1))\n                    .attr(\"y2\", y(q4))\n                    .attr(\"stroke\", circlrcolor)\n                    // .attr(\"stroke\", \"blcak\")\n                    .style('stroke-width', 1)\n\n                svg.append(\"rect\")\n                    .attr(\"x\", x(Xtime) - boxwidth / 2)\n                    .attr(\"y\", y(q3))\n                    .attr(\"height\", (y(q2) - y(q3)))\n                    .attr(\"width\", boxwidth)\n                    .attr(\"stroke\", circlrcolor)\n                    .style(\"fill\", \"rgba(255,255,255,1)\")\n                    .style('stroke-width', 1);\n\n                svg\n                    .selectAll(\"toto\")\n                    .data([q1, q4])\n                    .enter()\n                    .append(\"line\")\n                    .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                    .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                    .attr(\"y1\", function (d) { return (y(d)) })\n                    .attr(\"y2\", function (d) { return (y(d)) })\n                    .attr(\"stroke\", circlrcolor)\n                    .style('stroke-width', 1);\n            }\n        }\n        if (id_key === \"div_bp\") {\n            for (let index = 0; index < BoxPlotData.length; index++) {\n                const element = BoxPlotData[index];\n                const Xtime = moment(element.Time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                const SBP = element.SBP\n                const DBP = element.DBP\n                if (SBP === 0 || DBP === 0) {\n                    continue\n                }\n                svg.append('circle')\n                    .attr('cx', x(Xtime))\n                    .attr('cy', y(SBP))\n                    .attr('r', 3)\n                    .style('fill', circlrcolor)\n\n\n                svg.append('circle')\n                    .attr('cx', x(Xtime))\n                    .attr('cy', y(DBP))\n                    .attr('r', 3)\n                    .style('opacity', 0.5)\n                    .style('fill', circlrcolor)\n            }\n        }\n        if (id_key === \"div_hr\" || id_key === \"div_rr\" || id_key === \"div_spo\") {\n            // for (let index = 0; index < BoxPlotData.length; index++) {\n            //     const element = BoxPlotData[index];\n            //     const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + (30 * 60 * 1000)\n            //     svg.append('line')\n            //         .attr('x1', x(Xtime))\n            //         .attr('y1', y(Lower))\n            //         .attr('x2', x(Xtime))\n            //         .attr('y2', y(Upper))\n            //         .style('stroke', circlrcolor)\n            //         .style('opacity', 0.5)\n            //         // .style('stroke', 'red')\n            //         .style('stroke-width', borderwidth)\n\n            // }\n            for (let index = 0; index < BoxPlotData.length; index++) {\n                const element = BoxPlotData[index];\n                console.log(element)\n                const q1 = element.Q1\n                const q2 = element.Q2\n                const q3 = element.Q3\n                const q4 = element.Q4\n                const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + (30 * 60 * 1000)\n                console.log(q1, q2, q3, q4)\n                const boxwidth = 10\n                svg.append(\"line\")\n                    .attr(\"x1\", x(Xtime))\n                    .attr(\"x2\", x(Xtime))\n                    .attr(\"y1\", y(q1))\n                    .attr(\"y2\", y(q4))\n                    .attr(\"stroke\", circlrcolor)\n                    // .attr(\"stroke\", \"blcak\")\n                    .style('stroke-width', 1)\n\n                svg.append(\"rect\")\n                    .attr(\"x\", x(Xtime) - boxwidth / 2)\n                    .attr(\"y\", y(q3))\n                    .attr(\"height\", (y(q2) - y(q3)))\n                    .attr(\"width\", boxwidth)\n                    .attr(\"stroke\", circlrcolor)\n                    .style(\"fill\", \"rgba(255,255,255,1)\")\n                    .style('stroke-width', 1);\n\n                svg\n                    .selectAll(\"toto\")\n                    .data([q1, q4])\n                    .enter()\n                    .append(\"line\")\n                    .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                    .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                    .attr(\"y1\", function (d) { return (y(d)) })\n                    .attr(\"y2\", function (d) { return (y(d)) })\n                    .attr(\"stroke\", circlrcolor)\n                    .style('stroke-width', 1);\n\n            }\n        }\n\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default WardcardvitalsignChart;","import React, { Component } from 'react';\nimport WardcardvitalsignChart from './Wardcardvitalsign'\nimport { statecolor } from '../Function/Wardstate'\n// import * as ApiProvider from '../API/ApiProvider'\nimport './Wardchart.scss'\n// import moment from 'moment';\n\n\n\nclass WardChart extends Component {\n    state = {\n        data: [],\n        pbStatus: true\n    }\n\n    changePb = () => {\n        this.setState({\n            pbStatus: false\n        })\n    }\n\n    decidePB = (hr, nbpd, abpd) => {\n        const status = this.state.pbStatus\n        if (status) {\n            hr > 160 || hr < 100 && this.changePb()\n            nbpd > 75 || nbpd < 55 && this.changePb()\n            abpd > 75 || abpd < 55 && this.changePb()\n        }\n    }\n\n    render() {\n        function valueFormat(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"--\"\n            }\n            return value\n        }\n        const data = this.state.data\n        const { CMvalue, HISID } = this.props\n        const vitalvalue = CMvalue\n        if (vitalvalue === undefined || vitalvalue === null) {\n            return null\n        }\n\n        this.decidePB(vitalvalue.hr, vitalvalue.nbpd, vitalvalue.abpd)\n\n        function limitValue(value, upper, lower) {\n            if (value > upper || value < lower) {\n                return false\n            }\n            return true\n        }\n\n        const status = this.state.pbStatus\n        return (\n            <div className='Wardchartlayout'>\n                <div className='halfwardchart'>\n                    <div className='singlewardchart'>\n                        <div className='firstRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", width: \"120px\", height: \"90px\", backgroundColor: status ? \"white\" : statecolor('HR'), paddingRight: \"3px\" }}>\n                                <centerstyle>\n                                    <t4 style={{ color: status ? statecolor('HR') : \"white\" }}>HR(min)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"40px\", color: status ? statecolor('HR') : \"white\", lineHeight: \"44px\" }}>{valueFormat(vitalvalue.hr)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <WardcardvitalsignChart MAX={200} MIN={0} Upper={160} Lower={100} HISID={HISID} svg_key={\"svg_hr\"} id_key={\"div_hr\"} data={data} axisBot={false} axisTop={true} colorshadow={\"rgba(126, 211, 33, 0.1)\"} circlrcolor={\"#779F50\"}></WardcardvitalsignChart>\n                    </div>\n                    <div className='singlewardchart'>\n                        <div className='secondRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", width: \"120px\", height: \"90px\", backgroundColor: status ? \"white\" : statecolor('BP'), padding: \"0px 2px\" }}>\n                                <centerstyle>\n                                    <t4 style={{ color: status ? statecolor('BP') : \"white\" }}>NBP(mmHg)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"30px\", color: status ? statecolor('BP') : \"white\", lineHeight: \"34px\" }}>{valueFormat(vitalvalue.nbps)}/{valueFormat(vitalvalue.nbpd)}</div>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"20px\", color: status ? statecolor('BP') : \"white\", lineHeight: \"22px\" }}>({valueFormat(vitalvalue.nbpm)})</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <WardcardvitalsignChart MAX={100} MIN={0} Upper={75} Lower={55} HISID={HISID} svg_key={\"svg_bp\"} id_key={\"div_bp\"} data={data} data2={true} axisBot={false} axisTop={false} colorshadow={\"rgba(240, 144, 144, 0.1)\"} circlrcolor={\"#C12528\"} data_2_circlrcolor={\"rgba(240, 144, 144, 0.5)\"}></WardcardvitalsignChart>\n                    </div>\n                    <div className='singlewardchart'>\n                        <div className='thirdRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", width: \"120px\", height: \"90px\", backgroundColor: status ? \"white\" : statecolor('BP'), padding: \"0px 2px\" }}>\n                                <centerstyle>\n                                    <t4 style={{ color: status ? statecolor('BP') : \"white\" }}>BP(mmHg)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"30px\", color: status ? statecolor('BP') : \"white\", lineHeight: \"34px\" }}>{valueFormat(vitalvalue.abps)}/{valueFormat(vitalvalue.abpd)}</div>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"20px\", color: status ? statecolor('BP') : \"white\", lineHeight: \"22px\" }}>({valueFormat(vitalvalue.abpm)})</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <WardcardvitalsignChart MAX={100} MIN={0} Upper={75} Lower={55} HISID={HISID} svg_key={\"svg_abp\"} id_key={\"div_abp\"} data={data} data2={true} axisBot={true} axisTop={false} colorshadow={\"rgba(240, 144, 144, 0.1)\"} circlrcolor={\"#C12528\"} data_2_circlrcolor={\"rgba(240, 144, 144, 0.5)\"}></WardcardvitalsignChart>\n                    </div>\n                </div>\n                <div className='halfwardchart'>\n                    <div className='singlewardchart'>\n                        <div className='firstRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", width: \"120px\", height: \"90px\", backgroundColor: limitValue(vitalvalue.spo2, 100, 90) ? \"white\" : statecolor('SpO2'), paddingRight: \"3px\" }}>\n                                <centerstyle>\n                                    <t4 style={{ color: limitValue(vitalvalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>SpO2(%)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"40px\", color: limitValue(vitalvalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\", lineHeight: \"44px\" }}>{valueFormat(vitalvalue.spo2)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <div>\n                            <WardcardvitalsignChart MAX={100} MIN={60} Upper={100} Lower={90} HISID={HISID} svg_key={\"svg_spo\"} id_key={\"div_spo\"} data={data} axisBot={false} axisTop={true} colorshadow={\"rgba(0, 183, 255, 0.1)\"} circlrcolor={\"#4773B8\"}></WardcardvitalsignChart>\n                        </div>\n                    </div>\n                    <div className='singlewardchart'>\n                        <div className='secondRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", width: \"120px\", height: \"90px\", backgroundColor: limitValue(vitalvalue.bt, 38, 36) ? \"white\" : statecolor('BT'), paddingRight: \"3px\" }}>\n                                <centerstyle>\n                                    <t4 style={{ color: limitValue(vitalvalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>BT(<sup>&ordm;</sup>C)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"40px\", color: limitValue(vitalvalue.bt, 38, 36) ? statecolor('BT') : \"white\", lineHeight: \"44px\" }}>{valueFormat(vitalvalue.bt)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <WardcardvitalsignChart MAX={43} MIN={33} Upper={38} Lower={36} HISID={HISID} svg_key={\"svg_bt\"} id_key={\"div_bt\"} data={data} axisBot={false} axisTop={false} colorshadow={\"rgba(199, 162, 244,0.1)\"} circlrcolor={\"#7F3DB5\"}></WardcardvitalsignChart>\n                    </div>\n                    <div className='singlewardchart'>\n                        <div className='thirdRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", width: \"120px\", height: \"90px\", backgroundColor: limitValue(vitalvalue.rr, 60, 20) ? \"white\" : statecolor('RR'), paddingRight: \"3px\" }}>\n                                <centerstyle>\n                                    <t4 style={{ color: limitValue(vitalvalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>RR(min)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"40px\", color: limitValue(vitalvalue.rr, 60, 20) ? statecolor('RR') : \"white\", lineHeight: \"44px\" }}>{valueFormat(vitalvalue.rr)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <WardcardvitalsignChart MAX={100} MIN={0} Upper={60} Lower={20} HISID={HISID} svg_key={\"svg_rr\"} id_key={\"div_rr\"} data={data} axisBot={true} axisTop={false} colorshadow={\"rgba(255, 152, 0, 0.1)\"} circlrcolor={\"#DE7531\"}></WardcardvitalsignChart>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WardChart;\n","import React, { Component } from 'react';\nimport { Checkbox } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider'\n\nclass Wardinfousercheckbox extends Component {\n    state = {\n        checkboxselect: this.props.selectstate\n    }\n\n    updateOnePatientTodo() {\n        if (this.state.checkboxselect) {\n            ApiProvider.createTodo(this.props.item.caseid, this.props.item.context, this.props.item.time, this.props.item.transinno, '已完成')\n                .then(data => {\n                    console.log('updateOnePatientTodo ok ' + JSON.stringify(data))\n                })\n                .catch(err => {\n                    console.log('updateOnePatientTodo ng ' + JSON.stringify(err))\n                })\n        } else {\n            ApiProvider.createTodo(this.props.item.caseid, this.props.item.context, this.props.item.time, this.props.item.transinno, '未完成')\n                .then(data => {\n                    console.log('updateOnePatientTodo ok ' + JSON.stringify(data))\n                })\n                .catch(err => {\n                    console.log('updateOnePatientTodo ng ' + JSON.stringify(err))\n                })\n        }\n    }\n    selectchange() {\n        this.setState({\n            checkboxselect: !this.state.checkboxselect\n        }, this.updateOnePatientTodo)\n    }\n\n    render() {\n        const selectunstyle = {\n            fontSize: \"1rem\"\n        }\n        const selectstyle = {\n            textDecoration: \"line-through\", fontSize: \"1rem\"\n        }\n        return (\n            <div style={{ height: \"50px\", paddingLeft: \"15px\", display: \"flex\", alignItems: \"center\" }}>\n                <Checkbox onChange={() => this.selectchange()} checked={this.state.checkboxselect} style={this.state.checkboxselect ? selectstyle : selectunstyle}>{this.props.item.context}</Checkbox>\n            </div>\n        )\n    }\n\n}\n\nexport default Wardinfousercheckbox;","import React, { Component } from 'react';\nimport './Patientviewinfo.scss'\nimport { Icon } from 'antd'\nimport * as Wardstate from '../Function/Wardstate'\nimport * as ApiProvider from '../API/ApiProvider'\nclass Patientinfo extends Component {\n\n    state = { preCID: null, QENT: [] };\n    componentDidMount() {\n        const { caseinfo } = this.props\n        console.log(caseinfo)\n        const CID = caseinfo.CASEID\n        this.setState({ preCID: CID })\n        this.getQENT(CID)\n    }\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const { preCID } = this.state\n        const CID = caseinfo.CASEID\n        if (CID !== preCID) {\n            this.setState({ preCID: CID })\n            this.getQENT(CID)\n\n        }\n    }\n    getQENT(CID) {\n        console.log(CID)\n        ApiProvider.getQENT(CID)\n            .then(data => {\n                const parsedata = Wardstate.QMNCXM2JSON(data.data)\n                console.log(parsedata)\n                this.setState({ QENT: parsedata })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQENT NG \" + JSON.stringify(err));\n            });\n    }\n    render() {\n        function fixpatientDate(data) {\n            const transdata = {\n                'cause': '住院原因',\n                'car_pho': '主要照顧者電話',\n                'care': '主要照顧者',\n                'con_1': '聯絡人1',\n                'con_p11': '聯絡人1電話',\n                'con_2': '聯絡人2',\n                'con_p21': '聯絡人2電話',\n                'dvs': '住院時生命徵象',\n                'habit': '飲食狀況',\n                'oxy': '住院時氧和評估',\n                'h_val': '住院時頭圍',\n                'b_val': '住院時胸圍',\n                'tall': '住院時身高',\n                'weight': '住院時體重'\n            }\n\n            const patientDate = []\n\n            for (let index in transdata) {\n                if (data[index] !== \"\") {\n                    patientDate.push([transdata[index], data[index]])\n                }\n            }\n\n            return patientDate\n        }\n\n        const patientDetail = fixpatientDate(this.state.QENT)\n        const patientData = patientDetail.map(element =>\n            <div className='context'>\n                <div className='title'>{element[0]} ：</div>\n                <div className='item'>{element[1]}</div>\n            </div>\n        )\n        if (this.state.preCID === null || patientDetail.length === 0) {\n            return (\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>\n                    <Icon type=\"loading\" />\n                </div>\n            );\n        }\n        return (\n            <div className='patientinfolayout'>\n                {patientData}\n            </div>\n        );\n    }\n}\n\nexport default Patientinfo\n","import React, { useState, useEffect } from \"react\";\nimport './Wardinfouser.scss'\nimport moment from 'moment'\nimport { Modal } from 'antd';\nimport * as Wardstate from '../Function/Wardstate'\nimport * as ApiProvider from '../API/ApiProvider'\n// import * as ApiGithub from '../API/ApiGithub'\nimport { pregancyweeksanddays, gender } from '../Function/Wardbedfunction'\nimport fileLogo from '../Image/svg/file1.svg'\nimport file2Logo from '../Image/svg/file2.svg'\nimport Wardgrewchart from './Wardgrewchart'\nimport Notice from '../Patientview/Schedule/Notice'\nimport Labviewlayout from '../Patientview/CrossSectionView/Labview'\nimport WardChart from './Wardchart'\nimport Wardinfousercheckbox from './Wardunfousercheckbox'\nimport { Link } from \"react-router-dom\";\n// import * as Reg from '../Data/RegularData';\nimport Patientinfo from '../Patientview/Patientviewinfo';\nimport Wardcarstatus from './Wardcardstatus'\n\n\nexport function Wardinfouser(props) {\n    const [Visible, setVisible] = useState(false);\n    const [Report, SetReport] = useState(0);\n    const [Nonreport, SetNonreport] = useState(0);\n    const [CenterMonitorValue, SetCenterMonitorValue] = useState([])\n    const [scheduleList, SetScheduleList] = useState([]);\n    const [todoList, SetTodoList] = useState([]);\n    // const [QENT, SetQENT] = useState([]);\n    // const [CID, SetCID] = useState(null);\n    // const [HID, SetHID] = useState(null);\n    // const [TransInDt, SetTransInDt] = useState(null);\n    const [Timer, SetTimer] = useState(0)\n\n    useEffect(() => {\n        const TimerID = setInterval(() => {\n            SetTimer(Timer + 1)\n        }, 5000)\n        return () => clearInterval(TimerID);\n    }, [Timer])\n\n\n    useEffect(() => {\n        const data = props.location.state.data\n        // const hisid = \"TEST1234\"\n        const hisid = data.PHISTNUM.toString()\n        ApiProvider.getHisidwardvalue(hisid)\n            .then(data => {\n                console.log(data.data)\n\n                SetCenterMonitorValue(data.data[0]);\n            })\n            .catch(err => {\n                console.log(\"Andy test getHisidwardvalue NG \" + JSON.stringify(err));\n            });\n    }, [Timer, props.location.state.data.PHISTNUM]);\n\n\n\n    useEffect(() => {\n        console.log(\"query schedule list\")\n\n        const data = props.location.state.data\n        const source = data\n        const PLOC = source.PLOC\n        const TRANSINID = source.TRANSINID.toString()\n\n        const now = new Date();\n        const todayBegin = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n        const startTime = todayBegin.toISOString().split(\".\")[0];\n        const endTime = new Date(todayBegin.getTime() + 24 * 60 * 60 * 1000).toISOString().split(\".\")[0];\n        ApiProvider.getOnePatientSchedule(TRANSINID, startTime, endTime)\n            .then(result => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(result.data));\n                SetScheduleList(result.data);\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }, [props.location.state.data.TRANSINID]);\n\n    useEffect(() => {\n        console.log(\"query todo list\")\n\n        const data = props.location.state.data\n        const source = data\n        const PLOC = source.PLOC\n        const TRANSINID = source.TRANSINID.toString()\n\n\n        ApiProvider.getOneTodo(TRANSINID, source.PCASENO.toString())\n            .then(result => {\n                console.log(\"getOneTodo OK \" + JSON.stringify(result.data));\n                SetTodoList(result.data);\n            })\n            .catch(err => {\n                console.log(\"getOneTodo NG \" + JSON.stringify(err));\n            });\n    }, [props.location.state.data.PCASENO]);\n\n    function renderScheduleItem() {\n        if (scheduleList.length === 0) {\n            return (\n                <div>沒有排程</div>\n            )\n        } else {\n            return scheduleList.map((item, index) => {\n                if (item.type === \"排程\") {\n                    // const rawDateStr = item.time;\n                    const time = moment(item.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n                    const localTime = moment.utc(time).toDate()\n                    const displayTimeStr = moment(localTime).format(\"MM/DD HH:mm\")\n                    return (\n                        <div key={index} style={{ height: \"50px\", display: 'grid', gridTemplateColumns: \"35% 65%\", borderBottomWidth: \"1px\", borderBottomColor: \"rgba(232, 232, 232, 1)\", borderBottomStyle: \"solid\" }}>\n                            <div style={{ fontSize: \"1rem\", display: \"flex\", paddingLeft: \"15px\", alignItems: \"center\" }}>{displayTimeStr}</div>\n                            <div style={{ fontSize: \"1rem\", display: \"flex\", paddingLeft: \"15px\", alignItems: \"center\" }}>{item.context}</div>\n                        </div>\n                    )\n                }\n            })\n        }\n    }\n    function renderTodoItem() {\n        if (todoList.length === 0) {\n            return (\n                <div>沒有待辦事項</div>\n            )\n        } else {\n            return todoList.map((item, index) => {\n                if (item.type === \"未完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={false}></Wardinfousercheckbox>)\n                } else if (item.type === \"已完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={true}></Wardinfousercheckbox>)\n                }\n\n            });\n        }\n    }\n\n\n\n\n\n    function valueFormat(value) {\n        if (value === \"\" || value === null || value === undefined) {\n            return \"--\"\n        }\n        return value.toString()\n    }\n    function valueBornWeight(value) {\n        if (value === \"\" || value === null || value === undefined || value === 0) {\n            return \"\"\n        }\n        return value.toString() + \"g → \"\n    }\n\n\n    const data = props.location.state.data\n    const source = data\n    const Birthday = source.PBIRHDT\n    const QTWER = Wardstate.XM2JSON(source.QTWPER)\n    const QMNC = Wardstate.XM2JSON(source.QMNC)\n    const ListWeight = Wardstate.WeightList(QTWER)\n    const BornWeight = Wardstate.BornWeight(QTWER, Birthday)\n    const Weight = Wardstate.NewestWeight(QTWER)\n    const BornWeeks = QMNC.weeks\n    const BornDays = QMNC.days\n    const TRANSINID = source.TRANSINID\n    const DOCLIST = source.PDOCNEW\n    const MainDoc = Wardstate.Doc(DOCLIST, \"B\")\n    const LiveDoc = Wardstate.Doc(DOCLIST, \"D\")\n    const MainNur = Wardstate.Doc(DOCLIST, \"N\")\n    const ICUMainDoc = Wardstate.Doc(DOCLIST, \"U\")\n    // function arrayForDoc(MainDoc, LiveDoc, MainNur, ICUMainDoc){\n    //     if (condition) {\n            \n    //     }\n    // }\n    const status = {\n        date: moment(Birthday, \"YYYYMMDD\").valueOf(),\n        week: BornWeeks,\n        day: BornDays\n    }\n    console.log(status)\n    const AgeStatus = Wardstate.CalculateAge(status)\n\n    // const PBASINFO = data.PBASINFO\n    const caseinfo = {\n        \"HISID\": source.PHISTNUM.toString(),\n        \"CASEID\": source.PCASENO.toString(),\n        \"WEEK_BORN\": BornWeeks,\n        \"DAY_BORN\": BornDays,\n        \"TRANSINID\": TRANSINID,\n        \"TRANSINDT\": TRANSINID,\n        \"WEIGHT\": QTWER,\n        \"PBASINGNINFO\": source\n    }\n\n    const grewinfo = {\n        \"WEEK_BORN\": BornWeeks,\n        \"DAY_BORN\": BornDays,\n        \"BIRTHDAY\": Birthday\n    }\n    // const patientDetail = fixpatientDate(QENT)\n    return (\n        <div className='wardinfouserlayout'>\n            <Modal\n                width={800}\n                title=\"入院時評估\"\n                visible={Visible}\n                onOk={() => setVisible(false)}\n                onCancel={() => setVisible(false)}\n                footer={null}>\n                <Patientinfo caseinfo={caseinfo}></Patientinfo>\n            </Modal>\n            <div className='wardinfopatient'>\n                <div style={{ height: '50px', display: 'grid', gridTemplateColumns: \"1fr 1fr 1fr\" }}>\n                    <Link to=\"/nicu/ward/wardindex\" style={{ alignItems: \"center\", display: \"flex\" }}>\n                        <t2 className='wardblacktoindex'>&larr;返回總覽</t2>\n                    </Link>\n                    <centerstyle>\n                        <t1>NICU-{Number(source.HBEDNO)} {source.PNAMEC.toString().trim()}</t1>\n                    </centerstyle>\n                    <Link to=\"/nicu/ward/wardindex\" style={{ alignItems: \"center\", justifyContent: \"flex-end\", display: \"flex\" }}>\n                        <t2 className='wardblacktoindex'>進入病人頁面&rarr;</t2>\n                    </Link>\n                </div>\n                <div style={{ height: \"50px\" }}>\n                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <t2>病例號:{Number(source.HBEDNO)}</t2>\n                        <t2>性別:{gender(source.PSEX)}</t2>\n                        <t2>生日:{moment(Birthday, \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</t2>\n                        <t2>住院:{source.PHISTNUM.toString().trim()}</t2>\n                        <Wardcarstatus source={false} PCASENO={source.PCASENO} PHISTNUM={source.PHISTNUM}></Wardcarstatus>\n                    </div>\n                    <div style={{ display: 'flex', justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\" }}>\n                            <t3 style={{ color: \"rgba(0,0,0,0.7)\" }}>\n                                {valueFormat(BornWeeks)}+{valueFormat(BornDays)}&gt;\n                                <span style={{ fontWeight: \"900\" }}>{AgeStatus}</span>\n                            </t3>\n                            <t3 style={{ color: \"rgba(0,0,0,0.7)\" }}>\n                                {valueBornWeight(BornWeight)}g&gt;\n                            <span style={{ fontWeight: \"900\" }}>{valueFormat(Weight)}g</span>\n                            </t3>\n                            {/* <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", width: \"70px\" }}>\n                                <img src={fileLogo} alt='fileLogo'></img>\n                                <t4>{Report}</t4>\n                                <img src={file2Logo} alt='file2Logo'></img>\n                                <t4>{Nonreport}</t4>\n                            </div> */}\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,auto)\", gridColumnGap: \"10px\" }}>\n                            <t3>主治 {MainDoc}</t3>\n                            {MainDoc == ICUMainDoc || <t3>加護 {ICUMainDoc}</t3>}\n                            {MainDoc == LiveDoc || <t3>住院 {LiveDoc}</t3>}\n                            {MainNur == '' || <t3>NP {MainNur}</t3>}\n                            <div className='wardblacktoindex' onClick={() => setVisible(true)}>入院時評估</div>\n                        </div>\n                    </div>\n                </div>\n                <div className='wardinfousercontent'>\n                    <div style={{ padding: \"10px 15px\" }}>\n                        <WardChart HISID={source.PHISTNUM} CMvalue={CenterMonitorValue}></WardChart>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\" }}>\n                        <div style={{ borderRadius: \"4px\" }}>\n                            <div style={{ backgroundColor: \"#cccccc\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"50px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2>檢驗項目</t2>\n                            </div>\n                            <Labviewlayout Source={\"Wardview\"} PickerDate={moment(moment().format('YYYYMMDD')).valueOf()} caseinfo={caseinfo}></Labviewlayout>\n                        </div>\n                        <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\" }}>\n                            <Wardgrewchart grewinfo={grewinfo} Data={source} WeightList={ListWeight}></Wardgrewchart>\n                        </div>\n                    </div>\n                    <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\", marginTop: \"10px\" }}>\n                        {<Notice caseinfo={caseinfo} disableEdit={true}></Notice>}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\", marginTop: \"10px\" }}>\n                        <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\" }}>\n                            <div style={{ backgroundColor: \"#cccccc\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"50px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2>排程</t2>\n                            </div>\n                            <div style={{ maxHeight: \"200px\", overflow: 'auto', minHeight: \"50px\" }}>\n                                {renderScheduleItem()}\n                            </div>\n                        </div>\n                        <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\" }}>\n                            <div style={{ backgroundColor: \"#cccccc\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"50px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2>待辦事項</t2>\n                            </div>\n                            <div style={{ maxHeight: \"200px\", overflow: 'auto', minHeight: \"50px\" }}>\n                                {renderTodoItem()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div >\n    );\n} \n","import React, { Component } from 'react';\nimport * as antswitch from 'antd';\nimport Wardcarddetail from '../Wardcard/Wardcarddetail';\nimport Unpreviewwardcarddetail from '../Wardcard/UnpreviewWardCardDetail'\nimport Wardinfoindex from '../Wardinfoindex'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport './Bedview.scss'\nimport moment from 'moment';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport * as WardinfouserK from '../Wardinfouser-k'\n\n\nclass Bedview extends Component {\n    state = {\n        index: true,\n        previewmode: false,\n        simplemode: true,\n        SelectHISID: null,\n        source: []\n    };\n    HBEDApiGet() {\n        ApiProvider.getTableHBED()\n            .then(data => { this.setState({ source: data.data }) })\n            .catch(err => { console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err)); });\n    }\n    componentDidMount() { this.HBEDApiGet() }\n\n    onWardcardDisplay() {\n        const simple_style = { display: \"grid\", gridTemplateColumns: \"350px 1fr\", gridGap: \"5px\", marginTop: \"5px\" }\n        const Unsimple_style = { display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr 1fr\", gridTemplateRows: \"1fr 1fr 1fr\", gridGap: \"5px\", marginTop: \"5px\" }\n        const source = this.state.source;\n        if (source === null || source === undefined || source.length === 0) {\n            return null\n        }\n        const wardcarddetaillist = []\n        //simplemode true:病人摘要檢視(開) false:病人摘要檢視(關)\n        //previewmode true:床頭卡顯示(繁) flase:床頭卡顯示(簡) \n        if (this.state.simplemode) {\n            for (let index = 0; index < source.length; index++) {\n                const element = source[index]\n                const string = \"/nicu/ward/wardinfo/\" + element.HBEDNO\n                if (element.PHISTNUM.toString().trim() !== \"\") {\n                    wardcarddetaillist.push(\n                        <Link to={{ pathname: string, state: { data: element } }}\n                            style={{ border: this.state.SelectHISID === element.PHISTNUM ? \"2px solid rgb(59,151,224)\" : \"1px solid rgba(59,151,224,0.4)\", borderRadius: \"4px\" }}\n                            onClick={() => { this.setState({ SelectHISID: element.PHISTNUM }) }}>\n                            <Wardcarddetail key={index} data={element} previewmode={this.state.previewmode} hbedlist={source} />\n                        </Link>\n                    )\n                }\n            }\n            return (\n                <div style={this.state.simplemode ? simple_style : Unsimple_style}>\n                    <div className='wardcardcontent'>\n                        {wardcarddetaillist}\n                    </div>\n                    <Switch>\n                        <Route path={`${this.props.match.path}/wardindex`} component={Wardinfoindex} />\n                        <Route path={`${this.props.match.path}/wardinfo`} component={WardinfouserK.Wardinfouser} />\n                    </Switch>\n                </div>\n            );\n        }\n        else {\n            for (let index = 1; index < 15; index++) {\n                const element = source.filter(function (value, i) {\n                    return Number(value.HBEDNO) === index\n                })\n                if (index === 4 || index === 13) {\n                    //沒有4號以及13號床\n                    continue\n                }\n                if (element.length === 0) {\n                    wardcarddetaillist.push(\n                        <div style={{ border: \"1px solid rgba(59, 151, 225, 1)\" }}>\n                            <Unpreviewwardcarddetail bednumber={index} key={index} previewmode={this.state.previewmode} />\n                        </div>\n                    )\n                }\n                else {\n                    if (element[0].PHISTNUM.toString().trim() === \"\") {\n                        wardcarddetaillist.push(\n                            <div style={{ border: \"1px solid rgba(59, 151, 225, 1)\" }}>\n                                <Unpreviewwardcarddetail bednumber={index} key={index} previewmode={this.state.previewmode} />\n                            </div>\n                        )\n                    }\n                    else {\n                        wardcarddetaillist.push(\n                            <div style={{ border: \"1px solid rgba(59, 151, 225, 1)\" }}>\n                                <Wardcarddetail key={index} data={element[0]} previewmode={this.state.previewmode} hbedlist={source} />\n                            </div>\n                        )\n                    }\n                }\n            }\n            return (\n                <div style={this.state.simplemode ? simple_style : Unsimple_style}>\n                    {wardcarddetaillist}\n                </div>\n            );\n        }\n    }\n\n\n\n    render() {\n        function switch_titile_string(hisid, source) {\n            function addzero(value) {\n                if (value < 10) {\n                    return \"0\" + value\n                }\n                else return value\n            }\n            if (hisid === null) {\n                return \"NICU總覽\"\n            }\n            else {\n                const filterdata = source.filter(function (item, index, array) {\n                    return item.PHISTNUM === HISID;\n                });\n                const HBEDNUMBER = addzero(parseInt(filterdata[0].HBEDNO))\n                return \"床號\" + HBEDNUMBER + \"病人資訊摘要\"\n            }\n        }\n        const source = this.state.source\n        const HISID = this.state.SelectHISID\n        const title = switch_titile_string(HISID, source)\n        const WardCard = this.onWardcardDisplay()\n\n        return (\n            <div>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridGap: \"5px\" }}>\n                        <div style={{ height: \"40px\", display: \"flex\", alignItems: \"center\" }}>\n                            <t2 style={{ color: \"rgba(0, 0, 0, 0.85)\" }}>住院病人資訊 > {title}</t2>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: 'center', width: \"200px\" }}>\n                            <antswitch.Switch style={{ backgroundColor: this.state.previewmode === true ? \"#001a6d\" : \"rgba(0, 0, 0, 0.25)\" }} checkedChildren=\"即時生命徵象\" unCheckedChildren=\"即時生命徵象\" defaultChecked={this.state.previewmode} onChange={(checked) => { this.setState({ previewmode: checked }) }} />\n                            <antswitch.Switch style={{ backgroundColor: this.state.simplemode === true ? \"#001a6d\" : \"rgba(0, 0, 0, 0.25)\" }} checkedChildren=\"顯示摘要\" unCheckedChildren=\"顯示摘要\" defaultChecked={this.state.simplemode} onChange={(checked) => { this.setState({ simplemode: checked }) }} />\n                        </div>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto auto\", gridColumnGap: \"10px\" }}>\n                        <t3>資料更新時間</t3>\n                        <t3>{moment().format('YYYY/MM/DD HH:mm:ss')}</t3>\n                    </div>\n                </div>\n                {WardCard}\n            </div>\n        );\n    }\n}\n\nexport default Bedview;\n","import React, { Component } from 'react';\nimport { Icon, Upload, Table, Input, DatePicker, Button } from 'antd';\nimport { Link } from 'react-router-dom';\nimport * as ApiProvider from '../API/ApiProvider';\nimport moment from 'moment';\n\nclass Historyview extends Component {\n    state = {\n        MouseClick: 0,\n        allPatientDisplayData: [],\n        allPatientUnset: [],\n        allPatientSet: [],\n        selectedRowsArray: [],\n        hospitalindex: '',\n        selectedFile: null,\n        fileList: [],\n        uploading: false,\n        name: '',\n        hisid: '',\n        doctor: '',\n        transOuttime: undefined\n    }\n\n    componentDidMount() {\n        this.onChangeName = this.onChangeName.bind(this)\n        this.onChangeHisid = this.onChangeHisid.bind(this)\n        //this.onChangeDoctor = this.onChangeDoctor.bind(this)\n        this.onClickSearch = this.onClickSearch.bind(this)\n        this.onChangeDate = this.onChangeDate.bind(this)\n        console.log(\"Historyview componentDidMount\")\n        ApiProvider.getAllPatient()\n            .then(result => {\n                console.log(\"getAllPatient OK \" + JSON.stringify(result));\n                const setedUser = result.data.filter(item => item.transouttime === \"unset\");\n                const unsetUser = result.data.filter(item => item.transouttime !== \"unset\");\n                this.setState({\n                    allPatientDisplayData: setedUser,\n                    allPatientUnset: unsetUser,\n                    allPatientSet: setedUser\n                });\n            })\n            .catch(err => {\n                console.log(\"getAllPatient NG \" + JSON.stringify(err));\n            });\n    }\n\n    MouseClickTable(record) {\n        //console.log(this.state.MouseClick)\n        this.setState({\n            MouseClick: record\n        })\n    }\n\n    EditStyle(HISID, CASEID, TRANSINID, key) {\n        if (key === this.state.MouseClick) {\n            return (\n                <Link to={{ pathname: \"/nicu/patient/\" + HISID, state: { \"source\": [], \"HISID\": HISID, \"CASEID\": CASEID, \"BEDNUMBER\": 0, \"TYPE\": false, \"TRANSINID\": TRANSINID } }} style={{ height: \"40px\", width: \"100px\", borderRadius: \"4px\" }}>檢視</Link>\n            );\n        }\n        else return null\n    }\n\n    genderswitch(key) {\n        if (key === \"M\") {\n            return '男'\n        }\n        else {\n            return '女'\n        }\n    }\n\n    bornweeks(birthday) {\n        //console.log(Math.floor(birthday / 7))\n        //console.log(birthday % 7)\n        const weeks = Math.floor(birthday / 7)\n        const days = birthday % 7\n        if (days === 0) {\n            return weeks + '週歲'\n        }\n        else return weeks + '週' + days + '天'\n    }\n\n    exportClick() {\n        this.state.selectedRowsArray.map((data, index) => {\n            ApiProvider.exportJson(data.hospitalindex)\n                .then(result => {\n                    ApiProvider.downloadFile(result.data.filename)\n                        .then(resultD => {\n                            const url = window.URL.createObjectURL(new Blob([JSON.stringify(resultD.data)]));\n                            const link = document.createElement('a');\n                            link.href = url;\n                            link.setAttribute('download', result.data.filename);\n                            document.body.appendChild(link);\n                            link.click();\n                        }).catch(err => { })\n                })\n                .catch(err => { })\n        })\n    }\n\n    handleUpload = () => {\n        const { fileList } = this.state\n        const formData = new FormData()\n        fileList.forEach(file => {\n            formData.append('file', file)\n        })\n\n        this.setState({\n            uploading: true,\n        })\n\n        ApiProvider.uploadFile(formData)\n            .then(res => {\n                ApiProvider.importJson(res.data)\n                    .then(result => {\n                        ApiProvider.getAllPatient()\n                            .then(result => {\n                                const setedUser = result.data.filter(item => item.transouttime !== \"unset\");\n                                const unsetUser = result.data.filter(item => item.transouttime === \"unset\");\n                                this.setState({\n                                    allPatientDisplayData: setedUser,\n                                    allPatientUnset: unsetUser,\n                                    allPatientSet: setedUser\n                                });\n                            })\n                            .catch(err => {\n                                console.log(\"getAllPatient NG \" + JSON.stringify(err));\n                            });\n                    })\n                    .catch(err => { })\n            })\n            .catch(err => { })\n    }\n\n    deleteHistoryUser() {\n        this.state.selectedRowsArray.map((data, index) => {\n            ApiProvider.deletePatient(data.hospitalindex, data.hospitalnumber, data.id)\n                .then(res => {\n                    ApiProvider.getAllPatient()\n                        .then(result => {\n                            const setedUser = result.data.filter(item => item.transouttime !== \"unset\");\n                            const unsetUser = result.data.filter(item => item.transouttime === \"unset\");\n                            this.setState({\n                                allPatientDisplayData: setedUser,\n                                allPatientUnset: unsetUser,\n                                allPatientSet: setedUser\n                            });\n                        })\n                        .catch(err => {\n                            console.log(\"getAllPatient NG \" + JSON.stringify(err));\n                        });\n                })\n                .catch(err => { })\n        })\n    }\n\n    onChangeName(event) {\n        this.setState({ name: event.target.value })\n    }\n    onChangeHisid(event) {\n        this.setState({ hisid: event.target.value })\n    }\n    //onChangeDoctor(event) {\n    //this.setState({ doctor: event.target.value })\n    //}\n    onClickSearch() {\n        // ApiProvider.getAllPatient()\n        //     .then(result => {\n        //         const setedUser = result.data.filter(item => item.transouttime !== \"unset\" && item.hisid === this.state.hisid && item.pnamec === this.state.name);\n        //         const unsetUser = result.data.filter(item => item.transouttime === \"unset\" && item.hisid === this.state.hisid && item.pnamec === this.state.name);\n        //         console.log(this.state.transOuttime)\n        //         this.setState({\n        //             allPatientDisplayData: setedUser,\n        //             allPatientUnset: unsetUser,\n        //             allPatientSet: setedUser\n        //         });\n        //     })\n        //     .catch(err => {\n        //         console.log(\"getAllPatient NG \" + JSON.stringify(err));\n        //     });\n    }\n    onChangeDate(date, dateString) {\n        this.setState({ transOuttime: dateString })\n    }\n\n    Searchbar() {\n        const InputGroup = Input.Group;\n        const { RangePicker } = DatePicker;\n\n        return (\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <div style={{ fontSize: '16px' }}>\n                        個案姓名:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"輸入個案姓名\" onChange={this.onChangeName} value={this.state.name}></Input>\n                    </div>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        轉入時間:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        {/* <InputGroup compact> */}\n                        {/* <DatePicker placeholder=\"選擇轉出時間\" onChange={this.onChangeDate} /> */}\n                        <RangePicker style={{ width: \"250px\" }} format={\"YYYY/MM/DD\"} locale={\"zh_TW\"}\n                            placeholder={[\"請輸入日期\", \"請輸入日期\"]} onChange={this.onChangeDate} allowClear={false} />\n                        {/* </InputGroup> */}\n                    </div>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        病歷號碼:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"輸入病歷號碼\" onChange={this.onChangeHisid} value={this.state.hisid}></Input>\n                    </div>\n                </div>\n                {/*<div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        主治醫生:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"選擇主治醫師\" onChange={this.onChangeDoctor} value={this.state.doctor}></Input>\n                    </div>\n        </div>*/}\n                {/* <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <Button shape=\"circle\" icon=\"search\" onClick={this.onClickSearch} />\n                </div> */}\n            </div>\n        );\n    }\n\n    handleDisplaySwitchChange(event) {\n        // console.log(event.target.value)\n        console.log(this.state.allPatientSet)\n        console.log(this.state.allPatientUnset)\n        this.setState({\n            allPatientDisplayData: event.target.value == 'in' ? this.state.allPatientSet : this.state.allPatientUnset\n        })\n    }\n\n\n    render() {\n        // rowSelection object indicates the need for row selection\n        const rowSelection = {\n            onChange: (selectedRowKeys, selectedRows) => {\n                //console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows)\n                this.setState({ selectedRowsArray: selectedRows })\n            },\n            getCheckboxProps: record => ({\n                disabled: record.name === 'Disabled User', // Column configuration not to be checked\n                name: record.name,\n            }),\n        };\n        const columns = [\n            {\n                title: '病歷號碼',\n                dataIndex: 'id',\n                key: 'id',\n                width: \"10%\"\n            },\n            {\n                title: '個案名稱',\n                dataIndex: 'name',\n                key: 'name',\n                width: \"13%\"\n            },\n            {\n                title: '性別',\n                dataIndex: 'gender',\n                key: 'gender',\n                width: \"7%\"\n            },\n            {\n                title: '出生體重',\n                dataIndex: 'weight',\n                key: 'weight',\n                width: \"8%\"\n            },\n            {\n                title: '出生周數',\n                dataIndex: 'birweek',\n                key: 'birweek',\n                width: \"8%\"\n            },\n            {\n                title: '轉入時年齡',\n                dataIndex: 'transage',\n                key: 'transage',\n                width: \"10%\"\n            },\n            {\n                title: '院序號',\n                dataIndex: 'hospitalnumber',\n                key: 'hospitalnumber',\n                width: \"10%\"\n            },\n            {\n                title: '索引號',\n                dataIndex: 'hospitalindex',\n                key: 'hospitalindex',\n                width: \"17%\"\n            },\n            {\n                title: '轉入ICU時間',\n                dataIndex: 'transicutime',\n                key: 'transicutime',\n                width: \"10%\"\n            },\n            //{\n            //title: '主治醫師',\n            //dataIndex: 'maindoc',\n            //key: 'maindoc',\n            //width: \"10%\"\n            //},\n            {\n                dataIndex: 'clickstate',\n                key: 'clickstate',\n                width: \"7%\"\n            }\n        ];\n        function search(data, searchName) {\n            if (searchName === \"\" || searchName === undefined || searchName === null) {\n                return data\n            }\n            const filterData = data.filter(function (item, index, arr) {\n                console.log(item)\n                const fn = item.pnamec.toString().trim()\n                return fn.indexOf(searchName) >= 0\n            })\n            return filterData\n        }\n        function searchTime(data, searchTime) {\n            if (searchTime === \"\" || searchTime === undefined || searchTime === null) {\n                return data\n            }\n            const filterData = data.filter(function (item, index, arr) {\n                // console.log(item)\n                const fn = moment(item.transintime.toString().trim(), \"YYYYMMDD\").valueOf()\n                const st = moment(searchTime[0].toString().trim(), \"YYYYMMDD\").valueOf()\n                const et = moment(searchTime[1].toString().trim(), \"YYYYMMDD\").valueOf()\n                return st <= fn && fn <= et\n            })\n            return filterData\n        }\n\n        function searchNO(data, searchNO) {\n            if (searchNO === \"\" || searchNO === undefined || searchNO === null) {\n                return data\n            }\n            const filterData = data.filter(function (item, index, arr) {\n                console.log(item)\n                const HID = item.hisid.toString().trim()\n                return HID.match(searchNO)\n            })\n            return filterData\n        }\n        const rowData = this.state.allPatientDisplayData\n        const d = search(rowData, this.state.name)\n        const f = searchTime(d, this.state.transOuttime)\n        const H = searchNO(f, this.state.hisid)\n        const data = H.map((item, index) => {\n            return {\n                key: index,\n                id: item.hisid,\n                name: item.pnamec,\n                gender: this.genderswitch(item.psex),\n                weight: \"--\",\n                birweek: \"--\",\n                transage: \"--\",\n                hospitalnumber: item.caseid,\n                hospitalindex: item.transinid,\n                transicutime: item.transouttime,\n                maindoc: \"--\",\n                clickstate: this.EditStyle(item.hisid, item.caseid, item.transinid, index)\n            }\n        });\n\n        const { uploading, fileList } = this.state;\n        const props = {\n            onRemove: file => {\n                this.setState(state => {\n                    const index = state.fileList.indexOf(file);\n                    const newFileList = state.fileList.slice();\n                    newFileList.splice(index, 1);\n                    return {\n                        fileList: newFileList,\n                    };\n                });\n            },\n            beforeUpload: file => {\n                this.setState(state => ({\n                    fileList: [...state.fileList, file],\n                }));\n                return false;\n            },\n            fileList,\n            showUploadList: false\n        };\n        const handleDisplaySwitchChange = this.handleDisplaySwitchChange.bind(this);\n\n        return (\n            <div style={{ paddingLeft: \"24px\", paddingRight: \"24px\" }}>\n                <div style={{ fontSize: \"22px\", height: '50px', lineHeight: \"50px\" }}>\n                    歷史病歷管理\n                    <Button type=\"primary\" value=\"in\" style={{ borderRadius: \"50px\", fontSize: \"10px\", marginLeft: \"10px\" }} onClick={handleDisplaySwitchChange}>住院中</Button>\n                    <Button type=\"primary\" value=\"out\" style={{ borderRadius: \"50px\", fontSize: \"10px\", marginLeft: \"10px\" }} onClick={handleDisplaySwitchChange}>已轉出</Button>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\", height: '50px', gridColumnGap: \"10px\" }}>\n                    {this.Searchbar()}\n                    <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gridGap: \"10px\" }}>\n                        <div style={{ display: \"flex\", justifyContent: 'space-between', alignItems: \"center\" }}>\n                            <Upload {...props}>\n                                <Button style={{ width: \"100%\" }}>\n                                    <Icon type=\"upload\" /> 選擇檔案\n                                </Button>\n                            </Upload>\n                            <Button\n                                onClick={this.handleUpload.bind(this)}\n                                disabled={fileList.length === 0}\n                                style={{ width: \"100%\" }}\n                            >\n                                匯入\n                            </Button>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                            <Button onClick={this.exportClick.bind(this)} style={{ width: \"100%\" }}>匯出</Button>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                            <Button onClick={this.deleteHistoryUser.bind(this)} style={{ width: \"100%\" }}>刪除</Button>\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <Table rowSelection={rowSelection} columns={columns} dataSource={data} onRow={record => {\n                        return {\n                            onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                            onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                        };\n                    }} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Historyview;\n","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport './Crosssectionvitalsignchart.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport X2JS from 'x2js';\n\nclass Crosssectionvitalsignchart extends Component {\n    state = {\n        change: false,\n        sourcedata: [],\n        prepickerdate: null,\n        presource: null,\n        preinterval: null\n    }\n\n    centermonitorApiDataGet() {\n        function formatTimer(interval, pickerdate) {\n            const endTimeStamp = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    start: moment(endTimeStamp - (24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                    interval: 0\n                }\n            }\n            if (interval === 1) {\n                return {\n                    start: moment(endTimeStamp - (3 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                    interval: 1\n                }\n            }\n            if (interval === 2) {\n                return {\n                    start: moment(endTimeStamp - (7 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                    interval: 2\n                }\n            }\n            return {\n                start: moment(endTimeStamp - (14 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                interval: 3\n            }\n        }\n        const { type, interval, PickerDate, HID, source, CID, svg_id } = this.props\n        const PHID = HID.toString().trim()\n        const PCID = CID.toString().trim()\n        // console.log(interval, PickerDate)\n        const optionvalue = formatTimer(interval, PickerDate)\n        if (source === \"CM\") {\n            if (type === \"abp\") {\n                ApiProvider.getPatientwardvalueBoxPlot(PHID, optionvalue.start, optionvalue.end, type, optionvalue.interval)\n                    .then(data => {\n                        console.log(data.data)\n                        d3.select(\"#\" + svg_id).remove()\n                        this.drawChart(data.data);\n                    })\n                    .catch(err => { console.log(err) })\n            }\n            if (type === \"hr\" || type === \"rr\" || type === \"spo2\") {\n                ApiProvider.getPatientwardvalueBoxPlot(PHID, optionvalue.start, optionvalue.end, type, optionvalue.interval)\n                    .then(data => {\n                        console.log(data.data)\n                        d3.select(\"#\" + svg_id).remove()\n                        this.drawChart(data.data);\n                    })\n                    .catch(err => { console.log(err) })\n            }\n            if (type === \"nbp\") {\n                ApiProvider.getVitalSignData(PHID, optionvalue.start, optionvalue.end, type)\n                    .then(data => {\n                        console.log(data.data)\n                        d3.select(\"#\" + svg_id).remove()\n                        this.drawChart(data.data);\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    })\n            }\n            if (type === \"bt\") {\n                d3.select(\"#\" + svg_id).remove()\n                this.drawChart([]);\n            }\n        }\n        if (source === \"NIS\") {\n            const xm2 = new X2JS()\n            const st = moment(optionvalue.start, \"YYYYMMDDHHmmss\").format(\"YYYYMMDDHHmm\")\n            const et = moment(optionvalue.end, \"YYYYMMDDHHmmss\").format(\"YYYYMMDDHHmm\")\n            const QDVS = ApiProvider.getQDVS(PCID, st, et)\n                .then(data => {\n                    return xm2.xml2js(data.data).outmsg.resconts.rescont\n                })\n                .catch(err => { console.log(err) })\n\n            const QOXY = ApiProvider.getQOXY(PCID, st, et)\n                .then(data => {\n                    return xm2.xml2js(data.data).outmsg.resconts.rescont\n\n                })\n                .catch(err => { console.log(err) })\n            Promise.all([QDVS, QOXY]).then(result => {\n                function FormatNISData(QDVS, QOXY, type) {\n                    var HRNISLIST = []\n                    var RRNISLIST = []\n                    var SBPNISLIST = []\n                    var DBPNISLIST = []\n                    var BTNISLIST = []\n                    var Spo2NISLIST = []\n                    if (Array.isArray(QDVS)) {\n                        for (let index = 0; index < QDVS.length; index++) {\n                            const element = QDVS[index];\n                            const hr = element.pluse\n                            const rr = element.breath\n                            const SBP = element.systolic\n                            const DBP = element.diastolic\n                            const BT = element.temperature\n                            const time = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                            HRNISLIST.push({\n                                Data: hr,\n                                Time: time\n                            })\n                            RRNISLIST.push({\n                                Data: rr,\n                                Time: time\n                            })\n                            SBPNISLIST.push({\n                                Data: SBP,\n                                Time: time\n                            })\n                            DBPNISLIST.push({\n                                Data: DBP,\n                                Time: time\n                            })\n                            BTNISLIST.push({\n                                Data: BT,\n                                Time: time\n                            })\n                        }\n                    }\n                    if (Array.isArray(QOXY)) {\n                        for (let index = 0; index < QOXY.length; index++) {\n                            const element = QOXY[index];\n                            const spo2 = element.concen\n                            const time = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                            Spo2NISLIST.push({\n                                Data: spo2,\n                                Time: time\n\n                            })\n                        }\n                    }\n                    console.log(Spo2NISLIST)\n                    if (type === \"hr\") { return HRNISLIST }\n                    if (type === \"rr\") { return RRNISLIST }\n                    if (type === \"spo2\") { return Spo2NISLIST }\n                    if (type === \"abp\") { return [SBPNISLIST, DBPNISLIST] }\n                    if (type === \"bt\") { return BTNISLIST }\n                    return []\n                }\n                // console.log(FormatNISData(result[0], result[1], type))\n                d3.select(\"#\" + svg_id).remove()\n                this.drawChart(FormatNISData(result[0], result[1], type))\n            })\n        }\n    }\n    componentDidUpdate() {\n\n        const { interval, PickerDate, HID, source } = this.props\n        const PrePickerDate = this.state.prepickerdate\n        if (PrePickerDate !== PickerDate) {\n            this.setState({ prepickerdate: this.props.PickerDate })\n            this.centermonitorApiDataGet()\n        }\n        const Presource = this.state.presource\n        if (Presource !== source) {\n            this.setState({ presource: source })\n            this.centermonitorApiDataGet()\n        }\n        const Preinterval = this.state.preinterval\n        if (interval !== Preinterval) {\n            this.setState({ preinterval: interval })\n            this.centermonitorApiDataGet()\n        }\n        const PreHID = this.state.prehid\n        if (HID !== PreHID) {\n            this.setState({ prehid: HID })\n            this.centermonitorApiDataGet()\n        }\n    }\n\n    componentDidMount() {\n\n        this.setState({\n            prepickerdate: this.props.PickerDate,\n            presource: this.props.source,\n            preinterval: this.props.interval,\n            prehid: this.props.prehid\n        })\n        this.centermonitorApiDataGet()\n\n    }\n    drawChart(sourcedata) {\n        function formatxArray(startTime, interval) {\n            var xAxisarray = []\n            if (interval === 0) {\n                for (let index = 0; index < 25; index++) {\n                    if (index % 4 === 0) {\n                        xAxisarray.push(startTime + (index * 60 * 60 * 1000))\n                    }\n                }\n            }\n            else if (interval === 1) {\n                for (let index = 0; index < 19; index++) {\n                    if (index % 2 === 0) {\n                        xAxisarray.push(startTime + (index * 4 * 60 * 60 * 1000))\n                    }\n                }\n            }\n            else if (interval === 2) {\n                for (let index = 0; index < 21; index++) {\n                    xAxisarray.push(startTime + (index * 60 * 60 * 1000 * 8))\n                }\n            }\n            else {\n                for (let index = 0; index < 14; index++) {\n                    xAxisarray.push(startTime + (index * 60 * 60 * 1000 * 24))\n                }\n            }\n            return xAxisarray\n        }\n\n        function formatbotaxis(time, interval) {\n            var xAxisarray = []\n            if (interval === 0) {\n                xAxisarray.push(startTime + (17 * 60 * 60 * 1000))\n            }\n            else if (interval === 1) {\n                for (let index = 0; index < 3; index++) {\n                    xAxisarray.push(startTime + (17 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000))\n                }\n            }\n            else if (interval === 2) {\n                for (let index = 0; index < 21; index++) {\n                    xAxisarray.push(time + (index * 60 * 60 * 1000 * 8))\n                }\n            }\n            else {\n                for (let index = 0; index < 14; index++) {\n                    xAxisarray.push(time + (index * 60 * 60 * 1000 * 24))\n                }\n            }\n            return xAxisarray\n        }\n\n        var formatHour = d3.timeFormat(\"%H\")\n\n        function multiFormat(date) {\n            return formatHour(date)\n        }\n\n\n        //vitaldays true:threeday\n        const {\n            id_key,\n            svg_id,\n            startTime,\n            endTime,\n            height,\n            width,\n            interval, //0:1天 1:3天 2:1週 3:2週 \n            axisBot,\n            axisTop,\n            circlrcolor,\n            max,\n            min,\n            upper,\n            lower,\n            source,\n            type\n        } = this.props\n\n        // const width = window.screen.availWidth * 0.25, height = 100, viewwidth = width - 50, rect_width = width / 46\n        const viewwidth = width - 50\n        // const EndTime = formatendtime(defaultdate)\n        // var vital_interval = formatintervaldays(EndTime, vitaldays)\n\n        var y = d3.scaleLinear()\n            .domain([min, max])\n            .range([height, 0])\n\n        var x = d3.scaleLinear()\n            .domain([startTime, endTime])\n            .range([0, viewwidth - 1])\n\n\n        var yAxis = d3.axisLeft(y)\n            .tickValues([min, max])\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(15);\n\n\n        const xAxisvalue = formatxArray(startTime, interval)\n        const xAxisbotvalue = formatbotaxis(startTime, interval)\n\n        var xAxis = d3.axisTop(x)\n            .tickValues(xAxisvalue)\n            .tickSize(0, 0)\n            .tickPadding(5)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n        var xAxisbot = d3.axisBottom(x)\n            .tickValues(xAxisbotvalue)\n            .tickSize(0, 0)\n            .tickPadding(height + 10)\n            .tickFormat(function (d) { return moment(d).format(\"MM/DD\") });\n\n        var svg\n        if (axisTop) {\n            svg = d3.select(\"#\" + id_key)\n                .append(\"svg\")\n                .attr(\"id\", svg_id)\n                .style(\"width\", width + 10)\n                .style(\"height\", height + 25)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + 50 + \",\" + 20 + \")\");\n        }\n        else {\n            if (axisBot) {\n                svg = d3.select(\"#\" + id_key)\n                    .append(\"svg\")\n                    .attr(\"id\", svg_id)\n                    .style(\"width\", width)\n                    .style(\"height\", height + 25)\n                    .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + 50 + \",\" + 5 + \")\");\n            }\n            else {\n\n                svg = d3.select(\"#\" + id_key)\n                    .append(\"svg\")\n                    .attr(\"id\", svg_id)\n                    .style(\"width\", width)\n                    .style(\"height\", height + 10)\n                    .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + 50 + \",\" + 5 + \")\");\n            }\n        }\n\n        if (axisTop) {\n            svg.append(\"g\")\n                .call(xAxis)\n                .attr(\"class\", \"axis\");\n        }\n\n        if (axisBot) {\n            svg.append(\"g\")\n                .call(xAxisbot)\n                .attr(\"class\", \"axis\");\n\n        }\n\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n        //上下橫線\n        svg.append('line')\n            .attr('x1', x(startTime))\n            .attr('y1', y(max))\n            .attr('x2', x(endTime))\n            .attr('y2', y(max))\n            .style('stroke', 'rgba(220,220,220,1)')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n        svg.append('line')\n            .attr('x1', x(startTime))\n            .attr('y1', y(min))\n            .attr('x2', x(endTime))\n            .attr('y2', y(min))\n            .style('stroke', 'rgba(220,220,220,1)')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n\n        if (interval === 0) {\n            for (let index = 0; index < 25; index++) {\n                if (index % 8 === 0) {\n                    svg.append('line')\n                        .attr('x1', x(startTime + (index * 60 * 60 * 1000)))\n                        .attr('y1', 0)\n                        .attr('x2', x(startTime + (index * 60 * 60 * 1000)))\n                        .attr('y2', height)\n                        .style('stroke', 'black')\n                        .style('stroke-width', 2);\n                }\n                else {\n                    svg.append('line')\n                        .attr('x1', x(startTime + (index * 60 * 60 * 1000)))\n                        .attr('y1', 0)\n                        .attr('x2', x(startTime + (index * 60 * 60 * 1000)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(220,220,220,1)')\n                        .style('stroke-width', 1)\n                        .style('stroke-dasharray', 5.5);\n                }\n            }\n\n            drawshadow(startTime, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n\n        }\n        if (interval === 1) {\n            for (let index = 0; index < 19; index++) {\n                if (index % 2 === 0) {\n                    svg.append('line')\n                        .attr('x1', x(startTime + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y1', 0)\n                        .attr('x2', x(startTime + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y2', height)\n                        .style('stroke', 'black')\n                        .style('stroke-width', 2);\n                }\n                else {\n                    svg.append('line')\n                        .attr('x1', x(startTime + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y1', 0)\n                        .attr('x2', x(startTime + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(220,220,220,1)')\n                        .style('stroke-width', 1)\n                        .style('stroke-dasharray', 5.5);\n                }\n            }\n\n            drawshadow(startTime, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n        }\n        if (interval === 2) {\n            for (let index = 0; index < 22; index++) {\n                svg.append('line')\n                    .attr('x1', x(startTime + (index * 60 * 60 * 1000 * 8)))\n                    .attr('y1', 0)\n                    .attr('x2', x(startTime + (index * 60 * 60 * 1000 * 8)))\n                    .attr('y2', height)\n                    .style('stroke', 'black')\n                    .style('stroke-width', 1);\n            }\n\n            drawshadow(startTime, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n        }\n        if (interval === 3) {\n            for (let index = 0; index < 15; index++) {\n                svg.append('line')\n                    .attr('x1', x(startTime + (index * 60 * 60 * 1000 * 24)))\n                    .attr('y1', 0)\n                    .attr('x2', x(startTime + (index * 60 * 60 * 1000 * 24)))\n                    .attr('y2', height)\n                    .style('stroke', 'black')\n                    .style('stroke-width', 1);\n            }\n\n            drawshadow(startTime, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n        }\n\n        function formatBox(startTime, interval) {\n            function interFormat(startTime, interval) {\n                var TimeArray = []\n                for (let index = 0; index < interval; index++) {\n                    if (interval === 24) {\n                        const boxTime = startTime + (30 * 60 * 1000) + (index * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 18) {\n                        const boxTime = startTime + (2 * 60 * 60 * 1000) + (index * 4 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 21) {\n                        const boxTime = startTime + (4 * 60 * 60 * 1000) + (index * 8 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else {\n                        const boxTime = startTime + (12 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                }\n                return TimeArray\n            }\n            if (interval === 0) {\n                return interFormat(startTime, 24)\n            }\n            if (interval === 1) {\n                return interFormat(startTime, 18)\n            }\n            if (interval === 2) {\n                return interFormat(startTime, 21)\n            }\n            return interFormat(startTime, 14)\n        }\n        function formatBoxWidth(viewwidth, interval) {\n            if (interval === 0) {\n                return viewwidth / 24\n            }\n            if (interval === 1) {\n                return viewwidth / 18\n            }\n            if (interval === 2) {\n                return viewwidth / 21\n            }\n            return viewwidth / 14\n        }\n        function drawshadow(startTime, interval, lower, upper, type) {\n            const LimitBoxTimer = formatBox(startTime, interval)\n            for (let index = 0; index < LimitBoxTimer.length; index++) {\n                const boxwidth = formatBoxWidth(width, interval)\n                // console.log(boxwidth)\n                const element = LimitBoxTimer[index];\n                svg.append('line')\n                    .attr('x1', x(element))\n                    .attr('y1', y(lower))\n                    .attr('x2', x(element))\n                    .attr('y2', y(upper))\n                    .style('stroke', circlrcolor)\n                    .style('opacity', 0.7)\n                    .style('stroke-width', boxwidth)\n\n                if (type === \"nbp\" || type === \"abp\") {\n                    svg.append('line')\n                        .attr('x1', x(element))\n                        .attr('y1', y(35))\n                        .attr('x2', x(element))\n                        .attr('y2', y(55))\n                        .style('stroke', circlrcolor)\n                        .style('opacity', 0.3)\n                        .style('stroke-width', boxwidth)\n                }\n            }\n        }\n        function drawData(type, source, sourcedata, interval, boxwidth) {\n            function formatShift(interval) {\n                if (interval === 0) {\n                    return 30 * 60 * 1000\n                }\n                if (interval === 1) {\n                    return 2 * 60 * 60 * 1000\n                }\n                if (interval === 2) {\n                    return 4 * 60 * 60 * 1000\n                }\n                return 12 * 60 * 60 * 1000\n            }\n            // console.log(source)\n            if (source === \"CM\") {\n                if (type === \"abp\") {\n                    const dataAbps = sourcedata.abps\n                    const dataAbpd = sourcedata.abpd\n                    for (let index = 0; index < dataAbpd.length; index++) {\n                        const element = dataAbpd[index];\n                        const q1 = element.Q1\n                        const q2 = element.Q2\n                        const q3 = element.Q3\n                        const q4 = element.Q4\n                        const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + formatShift(interval)\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(q1))\n                            .attr(\"y2\", y(q4))\n                            .attr(\"stroke\", circlrcolor)\n                            .style('opacity', 0.5)\n                            // .attr(\"stroke\", \"blcak\")\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q2) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style('opacity', 0.5)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg\n                            .selectAll(\"toto\")\n                            .data([q1, q4])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('opacity', 0.5)\n                            .style('stroke-width', 1);\n                    }\n                    for (let index = 0; index < dataAbps.length; index++) {\n                        const element = dataAbps[index];\n                        const q1 = element.Q1\n                        const q2 = element.Q2\n                        const q3 = element.Q3\n                        const q4 = element.Q4\n                        const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + formatShift(interval)\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(q1))\n                            .attr(\"y2\", y(q4))\n                            .attr(\"stroke\", circlrcolor)\n                            // .attr(\"stroke\", \"blcak\")\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q2) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg\n                            .selectAll(\"toto\")\n                            .data([q1, q4])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1);\n                    }\n                }\n                if (type === \"hr\" || type === \"rr\" || type === \"spo2\") {\n                    for (let index = 0; index < sourcedata.length; index++) {\n                        const element = sourcedata[index];\n                        const q1 = element.Q1\n                        const q2 = element.Q2\n                        const q3 = element.Q3\n                        const q4 = element.Q4\n                        const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + formatShift(interval)\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(q1))\n                            .attr(\"y2\", y(q4))\n                            .attr(\"stroke\", circlrcolor)\n                            // .attr(\"stroke\", \"blcak\")\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q2) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg\n                            .selectAll(\"toto\")\n                            .data([q1, q4])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1);\n\n                    }\n                }\n                if (type === \"nbp\") {\n                    for (let index = 0; index < sourcedata.length; index++) {\n                        const element = sourcedata[index];\n                        const Xtime = moment(element.Time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                        const SBP = element.SBP\n                        const DBP = element.DBP\n                        // console.log(SBP)\n                        if (SBP === 0 || DBP === 0) {\n                            continue\n                        }\n                        else {\n                            // console.log(element)\n                            svg.append('circle')\n                                .attr('cx', x(Xtime))\n                                .attr('cy', y(SBP))\n                                .attr('r', 3)\n                                .style('fill', circlrcolor)\n\n\n                            svg.append('circle')\n                                .attr('cx', x(Xtime))\n                                .attr('cy', y(DBP))\n                                .attr('r', 3)\n                                .style('opacity', 0.5)\n                                .style('fill', circlrcolor)\n                        }\n\n                    }\n                }\n            }\n            else {\n                if (type === \"abp\" || type === \"nbp\") {\n                    if (sourcedata === undefined) {\n                        return null\n                    }\n                    if (sourcedata.length === 0) {\n                        return null\n                    }\n                    const SBP = sourcedata[0]\n                    const DBP = sourcedata[1]\n                    for (let index = 0; index < SBP.length; index++) {\n                        const element = SBP[index];\n                        svg.append('circle')\n                            .attr('cx', x(element.Time))\n                            .attr('cy', y(element.Data))\n                            .attr('r', 3)\n                            .style('fill', circlrcolor)\n\n                    }\n\n                    for (let index = 0; index < DBP.length; index++) {\n                        const element = DBP[index];\n                        svg.append('circle')\n                            .attr('cx', x(element.Time))\n                            .attr('cy', y(element.Data))\n                            .attr('r', 3)\n                            .style('fill', circlrcolor)\n                            .style('opacity', 0.5)\n\n                    }\n                }\n                else {\n                    for (let index = 0; index < sourcedata.length; index++) {\n                        const element = sourcedata[index];\n                        svg.append('circle')\n                            .attr('cx', x(element.Time))\n                            .attr('cy', y(element.Data))\n                            .attr('r', 3)\n                            .style('fill', circlrcolor)\n\n                    }\n                }\n\n            }\n        }\n    }\n\n    changestate() {\n        this.setState({\n            change: !this.state.change\n        })\n    }\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default Crosssectionvitalsignchart;","import React, { Component } from 'react';\nimport dragdown from '../../Image/svg/dragdown.svg'\n\nclass Warningsetting extends Component {\n    state = {\n        dragstate: false\n    }\n    onClickdrag = () => {\n        this.setState(\n            {\n                dragstate: !this.state.dragstate\n            }\n        )\n    }\n    render() {\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div style={{ height: 50, background: \"rgba(238,238,238,1)\", padding: \"10px 16px\", display: \"flex\", justifyContent: \"space-between\" }}>\n                    <div style={{ display: \"flex\" }}>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>2019-06-01 08:00</div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", marginLeft: \"20px\" }}>\n                            <div style={{ border: \"red 1px solid\", borderRadius: \"4px\", cursor: \"pointer\", color: \"red\", padding: \"5px 20px\", background: \"white\" }}>刪除</div>\n                        </div>\n                    </div>\n                    <div onClick={this.onClickdrag} style={{ transform: this.state.dragstate ? \"scaleY(1)\" : \"scaleY(-1)\" }}>\n                        <img src={dragdown} alt=\"dragdown\"></img>\n                    </div>\n                </div>\n                <div style={{ display: this.state.dragstate ? \"block\" : \"none\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 4fr 1fr 4fr\" }}>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>HR</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>ABP</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>NBP</div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>SpO2</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>BT</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>RR</div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ height: 50, padding: \"10px 16px\", display: \"flex\", alignItems: \"center\" }}>生效時間範圍:2019-06-01 08:00~2019-06-31 08:00</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Warningsetting","import React, { Component } from 'react';\nimport {Input,Button,DatePicker,Select} from 'antd'\n\nclass Addwarningsetting extends Component {\n    onSelectDate = (dates, dataStrings) => {\n        console.log(\"dates\" + JSON.stringify(dates));// \"2019-12-11T08:17:08.350Z\"\n        console.log(\"dataStrings\" + JSON.stringify(dataStrings));// \"2019-12-11\"\n        this.props.dateCallback(dataStrings);\n    }\n    onSelectHour = value => {\n        console.log(value);\n        this.props.hourCallback(value);\n    }\n    render() {\n        //generate select child (hours of a day)\n        const { Option } = Select;\n        const children = [];\n        for (let i = 0; i < 23; i++) {\n            children.push(<Option key={i.toString()}>{i.toString()}</Option>);\n        }\n        return (\n            <div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"100px 150px 150px\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", border: \"1px rgba(238,238,238,1) solid\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"1px rgba(238,238,238,1) solid\" }}>HR</div>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                                    <Button type=\"primary\">預設值</Button>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", border: \"1px rgba(238,238,238,1) solid\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"1px rgba(238,238,238,1) solid\" }}>ABP</div>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>SBP圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>DBP圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                                    <Button type=\"primary\">預設值</Button>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", border: \"1px rgba(238,238,238,1) solid\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"1px rgba(238,238,238,1) solid\" }}>NBP</div>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                                    <Button type=\"primary\">預設值</Button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"100px 150px 150px\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", border: \"1px rgba(238,238,238,1) solid\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"1px rgba(238,238,238,1) solid\" }}>SPO2</div>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                                    <Button type=\"primary\">預設值</Button>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", border: \"1px rgba(238,238,238,1) solid\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"1px rgba(238,238,238,1) solid\" }}>BT</div>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                                    <Button type=\"primary\">預設值</Button>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", border: \"1px rgba(238,238,238,1) solid\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"1px rgba(238,238,238,1) solid\" }}>RR</div>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                                    <Button type=\"primary\">預設值</Button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", marginTop: \"10px\" }}>\n                    <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>設定生效時間:</div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <DatePicker onChange={this.onSelectDate} style={{ width: \"70%\" }} />\n                        <Select defaultValue=\"0\" onChange={this.onSelectHour} style={{ width: \"20%\", marginLeft: \"8px\" }}>\n                            {children}\n                        </Select>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Addwarningsetting","import React, { Component } from 'react';\nimport { Select, Modal, Tabs, Icon, Button } from 'antd';\nimport Crosssectionvitalsignchart from './Crossectionvitalsignchart'\nimport Warningsetting from './Warningsettinglist'\nimport Addwarningsetting from './Addnewwaring'\nimport './Vitalsign.scss'\n// import { formatxArrayhalf, formatendtime } from '../../Function/Timeformat'\n// import { simulationCentermonitordata, simulationnisdata } from '../../Function/Wardstate'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\n\nclass Vitalsign extends Component {\n\n    state = {\n        vital_days: 0, //false:一天 true:三天\n        source: \"CM\", //false:中央站 true:NIS\n        visible: false,\n        visibleConflict: false,\n        chackstate_one: 0,\n        chackstate_three: 0,\n        datasource: null,\n        addNewWarningDateStr: null,\n        addNewWarningHourStr: null,\n\n        CenterMonitorValue: null\n    }\n\n    componentDidMount() {\n        const startTime = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf() - (60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\")\n        const endTime = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf()).format(\"YYYYMMDDHHmmss\")\n        const PHISTNUM = this.props.caseinfo.HISID.toString().trim()\n        this.getVitalSignData(startTime, endTime, PHISTNUM)\n    }\n\n    getVitalSignData(startTime, EndTime, Phistnum) {\n        ApiProvider.getPatientwardvalueMedian(Phistnum, startTime, EndTime)\n            .then(data => {\n                console.log(data.data)\n                this.setState({\n                    CenterMonitorValue: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n                this.setState({\n                    CenterMonitorValue: null\n                })\n            })\n    }\n\n    onVitalCheck() {\n        var gridarray = []\n        if (this.state.vital_days === 1) {\n            for (let index = 0; index < 18; index++) {\n                const checknumber = index + 1\n                if (checknumber === this.state.chackstate_three) {\n                    gridarray.push(<div key={index} style={{ height: 330, width: \"100%\", border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_three(checknumber)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ height: 330, width: \"100%\" }} onClick={() => this.onClickCheckgrid_three(checknumber)}></div>)\n            }\n        }\n        else {\n            for (let index = 0; index < 24; index++) {\n                const checknumber = index + 1\n                if (checknumber === this.state.chackstate_one) {\n                    gridarray.push(<div key={index} style={{ height: 330, width: \"100%\", border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_one(checknumber)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ height: 330, width: \"100%\" }} onClick={() => this.onClickCheckgrid_one(checknumber)}></div>)\n            }\n        }\n        return gridarray;\n    }\n\n    onClickCheckgrid_one(number) {\n        //1:7 2:8 3:9 ........\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (24 * 60 * 60 * 1000)\n        const endtime = ST + (number * 60 * 60 * 1000)\n        const starttime = endtime - 60 * 60 * 1000\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ chackstate_one: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n    onClickCheckgrid_three(number) {\n        console.log(number)\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (3 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 4) * 60 * 60 * 1000)\n        const starttime = endtime - (4 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ chackstate_three: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleSelectDate = dataStrings => {\n        //console.log(\"dataStrings\"+dataStrings);\n        this.setState({\n            addNewWarningDateStr: dataStrings\n        })\n    }\n\n    handleSelectHour = hourString => {\n        //console.log(\"hourString\"+hourString);\n        this.setState({\n            addNewWarningHourStr: hourString\n        })\n    }\n\n    handleOk = e => {\n        //console.log(e);\n        console.log(\"# add warning time: \" + this.state.addNewWarningDateStr + \"/\" + this.state.addNewWarningHourStr);\n        this.setState({\n            visibleConflict: true\n        });\n    };\n\n    handleOkConflict = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n            visibleConflict: false\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancelConflict = e => {\n        console.log(e);\n        this.setState({\n            visible: true,\n            visibleConflict: false,\n        });\n    };\n\n    sourcehandleChange = (e) => {\n        this.setState({ source: e.target.value })\n    }\n\n\n    intervalhandleChange = (e) => {\n        // this.vitalDataGet(value, PickerDate)\n        this.setState({\n            vital_days: parseInt(e.target.value),\n            chackstate_one: 0,\n            chackstate_three: 0,\n            // datasource: this.switchdata(value, this.state.source)\n\n        })\n\n    }\n\n\n    // switchdata(value, sourcefrom) {\n    //     const { PickerDate } = this.props\n\n    //     function changevitaldays(vitaldays) {\n    //         if (vitaldays === 3) {\n    //             return 18\n    //         }\n    //         else {\n    //             return 24\n    //         }\n    //     }\n    //     var interval\n    //     if (value === null && value === undefined) {\n\n    //         interval = this.state.vital_days\n    //     }\n    //     else {\n\n    //         interval = value\n    //     }\n    //     const starttime = formatendtime(PickerDate) - (interval * 24 * 60 * 60 * 1000)\n    //     if (sourcefrom) {\n    //         const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n    //         const data = simulationnisdata(datatime, changevitaldays(interval))\n    //         return data\n    //     }\n    //     else {\n\n    //         const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n    //         const data = simulationCentermonitordata(datatime, changevitaldays(interval))\n    //         return data\n    //     }\n    // }\n\n\n    // switch_source(bool) {\n    //     this.setState(\n    //         {\n    //             source: bool,\n    //             datasource: this.switchdata(this.state.vital_days, bool)\n    //         });\n    // }\n\n    render() {\n        function centervalueNull(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            return value\n        }\n        function centervaluetoNull(value) {\n            function FilterList(DataList, type) {\n                const filterData = DataList.filter(function (value, index, arr) {\n                    return value.type === type\n                })\n                if (filterData.length === 0) {\n                    return null\n                }\n                console.log(filterData)\n                return filterData[0].Mid\n            }\n            if (value === undefined || value === null) {\n                return {\n                    hr: null,\n                    rr: null,\n                    bt: null,\n                    spo2: null,\n                    abpd: null,\n                    abpm: null,\n                    abps: null,\n                    nbpm: null,\n                    nbps: null,\n                    nbpd: null\n                }\n            }\n            return {\n                hr: FilterList(value, \"hr\"),\n                rr: FilterList(value, \"rr\"),\n                bt: FilterList(value, \"bt\"),\n                spo2: FilterList(value, \"spo2\"),\n                abpd: FilterList(value, \"abpd\"),\n                abpm: FilterList(value, \"abpm\"),\n                abps: FilterList(value, \"abps\"),\n                nbpd: FilterList(value, \"nbpd\"),\n                nbps: FilterList(value, \"nbps\"),\n                nbpm: FilterList(value, \"nbpm\"),\n            }\n        }\n        const { Option } = Select;\n        const { TabPane } = Tabs;\n        const width = window.screen.availWidth * 0.25\n        const waringsettingarray = []\n        for (let index = 0; index < 20; index++) {\n            waringsettingarray.push(<Warningsetting key={index}></Warningsetting>)\n\n        }\n        const handleSelectDate = this.handleSelectDate;\n        const handleSelectHour = this.handleSelectHour;\n        const centervalue = centervaluetoNull(this.state.CenterMonitorValue)\n\n\n        function vitaldaysBool(vitaldays) {\n            if (vitaldays === 3) {\n                return true\n            }\n            return false\n        }\n\n        function formatPickerTimer(pickerdate, interval) {\n            if (interval === 0) {\n                return {\n                    startTime: pickerdate + (7 * 60 * 60 * 1000),\n                    endTime: pickerdate + (31 * 60 * 60 * 1000)\n                }\n            }\n            else {\n                return {\n                    startTime: pickerdate + (31 * 60 * 60 * 1000) - (3 * 24 * 60 * 60 * 1000),\n                    endTime: pickerdate + (31 * 60 * 60 * 1000)\n                }\n\n            }\n        }\n        const pickerTimer = formatPickerTimer(this.props.PickerDate, this.state.vital_days)\n        const PickerDate = this.props.PickerDate\n        // console.log(hrdatasource)\n        return (\n            <div>\n                <Modal\n                    title=\"生命徵象警示範圍設定\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    width={1000}>\n                    <Tabs defaultActiveKey=\"1\">\n                        <TabPane tab=\"新增警示設定\" key=\"1\">\n                            <Addwarningsetting dateCallback={handleSelectDate} hourCallback={handleSelectHour}></Addwarningsetting>\n                        </TabPane>\n                        <TabPane tab=\"警示設定清單\" key=\"2\">\n                            <div style={{ maxHeight: \"400px\", overflow: \"auto\" }}>\n                                {waringsettingarray}\n                            </div>\n                        </TabPane>\n                    </Tabs>\n                </Modal>\n                <Modal\n                    title=\"您設定的生效時間範圍與以下的歷史變更紀錄時間衝突，是否確定要覆蓋？\"\n                    visible={this.state.visibleConflict}\n                    onOk={this.handleOkConflict}\n                    onCancel={this.handleCancelConflict}\n                    width={1000}>\n                    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                        <Icon type=\"info-circle\" style={{ color: \"darkorange\", width: \"24px\", height: \"24px\" }} />\n                        <div style={{ marginLeft: \"8px\" }}>\n                            <p>點選\"確定\"將覆蓋資料，點選\"取消\"回到設定頁面</p>\n                            <p>1. HR：</p>\n                            <p>舊設定值：2019-08-01 ~ 2019-08-11</p>\n                            <p>新設定值：2019-08-01 ~ 2019-08-20</p>\n                        </div>\n                    </div>\n                </Modal>\n                <div style={{ display: 'grid', gridTemplateColumns: \"200px 200px 1fr\", alignItems: 'center', height: \"50px\", backgroundColor: \"#cccccc\", padding: \"0px 5px\" }}>\n                    <t1>Vital Sign</t1>\n                    <div >\n                        <Button style={{ marginRight: \"2px\" }} value={\"CM\"} type=\"primary\" onClick={this.sourcehandleChange}>Center Monitor</Button>\n                        <Button style={{}} value={\"NIS\"} type=\"primary\" onClick={this.sourcehandleChange}>NIS</Button>\n                    </div>\n                    <div >\n                        <Button style={{ width: \"60px\", marginRight: \"2px\" }} value={0} type=\"primary\" shape=\"circle\" onClick={this.intervalhandleChange}>一天</Button>\n                        <Button style={{ width: \"60px\" }} value={1} type=\"primary\" shape=\"circle\" onClick={this.intervalhandleChange}>三天</Button>\n                    </div>\n                    {/* <Button width={90} type=\"primary\" onClick={this.showModal}>閾值調整</Button> */}\n                </div>\n                <div style={{ borderRadius: \"4px\", border: \"rgba(232,232,232,1) 1px solid\", height: \"400px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"80px 1fr 80px 1fr\" }}>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#779F50\", display: \"flex\", justifyContent: \"center\" }}>HR</div>\n                                    <div style={{ fontSize: \"2rem\", color: \"#779F50\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.hr)}</div>\n                                </div>\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>NBP</div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.nbpd)}/{centervalueNull(centervalue.nbps)}</div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>({centervalueNull(centervalue.nbpm)})</div>\n                                </div>\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>ABP</div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.abpd)}/{centervalueNull(centervalue.abps)}</div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>({centervalueNull(centervalue.abpm)})</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ position: \"relative\" }}>\n                            <div style={{ position: \"absolute\", top: 20, left: 50, width: width - 50, height: 330 }}>\n                                <div style={{ display: \"grid\", gridTemplateColumns: vitaldaysBool(this.state.vital_days) ? \"repeat(18, 1fr)\" : \"repeat(24,1fr)\" }}>\n                                    {this.onVitalCheck()}\n                                </div>\n                            </div>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"HR_svg\"}\n                                id_key={\"HR_div\"}\n                                type={\"hr\"}\n                                source={this.state.source}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={100}\n                                upper={160}\n                                axisBot={false}\n                                axisTop={true}\n                                circlrcolor=\"#779F50\"\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={200}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"NBP_svg\"}\n                                id_key={\"NBP_div\"}\n                                type={\"nbp\"}\n                                source={this.state.source}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={55}\n                                upper={75}\n                                axisBot={false}\n                                axisTop={false}\n                                circlrcolor={\"#C12528\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={100}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"ABP_svg\"}\n                                id_key={\"ABP_div\"}\n                                type={\"abp\"}\n                                source={this.state.source}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={55}\n                                upper={75}\n                                axisBot={true}\n                                axisTop={false}\n                                circlrcolor={\"#C12528\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={100}>\n                            </Crosssectionvitalsignchart>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#4773B8\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>\n                                        SpO<sub style={{ bottom: \"-1em\" }}>2</sub>\n                                    </div>\n                                    <div style={{ fontSize: \"2rem\", color: \"#4773B8\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.spo2)}%</div>\n                                </div>\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#7F3DB5\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>BT</div>\n                                    <div style={{ fontSize: \"2rem\", color: \"#7F3DB5\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>--</div>\n                                </div>\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#DE7531\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>RR</div>\n                                    <div style={{ fontSize: \"2rem\", color: \"#DE7531\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.rr)}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ position: \"relative\" }}>\n                            <div style={{ position: \"absolute\", top: 20, left: 50, width: width - 50, height: 330 }}>\n                                <div style={{ display: \"grid\", gridTemplateColumns: vitaldaysBool(this.state.vital_days) ? \"repeat(18, 1fr)\" : \"repeat(24,1fr)\" }}>\n                                    {this.onVitalCheck()}\n                                </div>\n                            </div>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"SpO2_svg\"}\n                                id_key={\"SpO2_div\"}\n                                type={\"spo2\"}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={90}\n                                upper={100}\n                                axisBot={false}\n                                axisTop={true}\n                                circlrcolor={\"#4773B8\"}\n                                colorshadow={\"#4773B8\"}\n                                min={60}\n                                max={100}\n                                source={this.state.source}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"BT_svg\"}\n                                id_key={\"BT_div\"}\n                                type={\"bt\"}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                source={this.state.source}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={36}\n                                upper={38}\n                                axisBot={false}\n                                axisTop={false}\n                                circlrcolor={\"#7F3DB5\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={33}\n                                max={48}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"RR_svg\"}\n                                id_key={\"RR_div\"}\n                                type={\"spo2\"}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={20}\n                                upper={60}\n                                axisBot={true}\n                                axisTop={false}\n                                circlrcolor={\"#DE7531\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={100}\n                                source={this.state.source}>\n                            </Crosssectionvitalsignchart>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n\n}\n\nexport default Vitalsign;\n","import React, { Component } from 'react';\nimport { Button, DatePicker, Checkbox } from 'antd';\nimport moment from 'moment';\nimport displaylogo from '../Image/svg/filter.svg'\nimport { daysdiff } from '../Function/Timeformat'\nimport { pregancyweeksanddays } from '../Function/Wardbedfunction'\nimport './Controlbar.scss'\n// import * as ApiProvider from '../API/ApiProvider';\nimport * as WardState from '../Function/Wardstate'\n\nclass Controlbar extends Component {\n    state = {\n        display_Mode: false,\n        item: this.props.item_array,\n        scrollstate: 0,\n    }\n    sendData = (itwm_array) => {\n        this.props.parentCallback(itwm_array);\n    }\n\n\n    sendDateData = (PickerDate) => {\n        this.props.parentDateCallback(PickerDate);\n    }\n    //快速滑動\n    scrollToAnchor = (anchorName) => {\n        if (anchorName) {\n            let anchorElement = document.getElementById(anchorName);\n            if (anchorElement) { anchorElement.scrollIntoView(); }\n        }\n    }\n    onChange = (checkedValues) => {\n        this.sendData(checkedValues)\n\n    }\n    onDateChange = (date, dateString) => {\n        this.sendDateData(date.valueOf())\n    }\n    open_display() {\n        this.setState({\n            display_Mode: !this.state.display_Mode\n        })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo, PickerDate } = this.props\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const btemp = bTime - (6 * day)\n                bronDate <= btemp && this.sendDateData(bTime)\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD')).valueOf()\n                this.sendDateData(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const atemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= atemp && this.sendDateData(aTime)\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n\n        const btn_style = {\n            unclick_style: { borderRadius: \"16px\", color: \"rgba(245, 166, 35, 1)\", border: \"rgba(245, 166, 35, 1) 1px solid\" }\n        }\n\n\n\n        function Monthformat(month) {\n            return month + 1\n        }\n        function timeformat(timestring) {\n            return new Date(timestring).getFullYear() + \"/\" + Monthformat(new Date(timestring).getMonth()) + \"/\" + new Date(timestring).getDate()\n        }\n        function valueFormat(value) {\n            if (value === \"\" || value === null || value === undefined) {\n                return \"--\"\n            }\n            return value.toString()\n        }\n        function valueBornWeight(value) {\n            if (value === \"\" || value === null || value === undefined || value === 0) {\n                return \"\"\n            }\n            return value.toString() + \"g → \"\n        }\n        const display_style = {\n            displye_mode: { position: \"absolute\", right: '0px', top: \"50px\", width: \"200px\", background: \"white\", boxShadow: \"3px 3px 12px\", zIndex: \"100\" },\n            non_display_mode: { display: \"none\" },\n            check_area: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\" },\n            check_text: { padding: \"10px\", width: \"140px\", borderRadius: \"4px\", borderColor: 'rgba(0, 0, 0, 0.15)', borderStyle: \"solid\", borderWidth: \"1px\", marginLeft: \"10px\" }\n        }\n\n        function disabledDate(current) {\n            // Can not select days before today and today\n            const endvalue = moment(caseinfo.PBASINGNINFO.PBIRTHDT, 'YYYYMMDD')\n            return endvalue.endOf('day') > current || current > moment().endOf('day')\n        }\n\n        const { caseinfo, btnlist, PickerDate } = this.props\n        const weightList = caseinfo.WEIGHT\n        const Birthday = caseinfo.PBASINGNINFO.PBIRTHDT\n        console.log(Birthday)\n        const BornWeight = WardState.BornWeight(weightList, Birthday)\n        const DayWeight = WardState.selectweight(weightList, PickerDate)\n        const btn = btnlist.map(\n            (item, index) => <Button onClick={this.scrollToAnchor.bind(this, item.scrollpoint)} key={index} style={btn_style.unclick_style}>\n                <t3>{item.name}</t3>\n            </Button>\n        )\n        console.log(moment(PickerDate))\n        return (\n            <div>\n                <div className='controlbarlayout'>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"140px 120px auto\", gridColumnGap: \"5px\" }}>\n                        <DatePicker width={140} onChange={this.onDateChange} value={moment(PickerDate)} allowClear={false} showToday={false} disabledDate={(current) => { return current > moment().startOf(\"day\") || current < moment(Birthday, \"YYYYMMDD\").add(-1, \"days\").endOf(\"day\") }} />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"2px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                        <div style={{ display: 'grid', gridTemplateColumns: \"repeat(3,auto)\", gridColumnGap: \"5px\" }}>\n                            <centerstyle><t2>週數:[{caseinfo.WEEK_BORN}+{caseinfo.DAY_BORN}]&rarr;{pregancyweeksanddays(caseinfo.WEEK_BORN, caseinfo.DAY_BORN, moment(Birthday, 'YYYYMMDD').format('YYYY/MM/DD'))}</t2></centerstyle>\n                            <centerstyle><t2>體重:{valueBornWeight(BornWeight)}{valueFormat(DayWeight)}g</t2></centerstyle>\n                            <centerstyle><t2>住院第{daysdiff(moment(PickerDate).format('YYYY/MM/DD'), moment(caseinfo.TRANSINDT, 'YYYYMMDD').format('YYYY/MM/DD'))}天</t2></centerstyle>\n                        </div>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: 'center', position: \"relative\" }}>\n                        <t2>項目切換：</t2>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,auto)\", gridColumnGap: \"5px\" }}>{btn}</div>\n                        <div onClick={() => this.open_display()} style={{ cursor: \"pointer\", marginLeft: \"5px\" }}>\n                            <img src={displaylogo} alt='displaylogo' style={{ width: '15px', height: '15px' }}></img>\n                        </div>\n                        <div style={this.state.display_Mode ? display_style.displye_mode : display_style.non_display_mode}>\n                            <t2 className='controlmoduletitle'>Displayed</t2>\n                            <div style={{ marginTop: \"10px\", marginBottom: \"20px\" }}>\n                                <Checkbox.Group defaultValue={this.state.item} id={\"checkbox_group\"} style={{ width: '100%', display: \"grid\", gridTemplateRows: \"repeat(6,1fr)\", gridRowGap: \"5px\" }} onChange={this.onChange}>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={0}></Checkbox>\n                                        <t3 style={display_style.check_text}>生命徵象/輸出入</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={1} ></Checkbox>\n                                        <t3 style={display_style.check_text}>檢驗結果</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={2}></Checkbox>\n                                        <t3 style={display_style.check_text}>呼吸評估</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={3}></Checkbox>\n                                        <t3 style={display_style.check_text}>醫藥囑</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={4}></Checkbox>\n                                        <t3 style={display_style.check_text}>行事曆及註記</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={5}></Checkbox>\n                                        <t3 style={display_style.check_text}>To Do List</t3>\n                                    </div>\n                                </Checkbox.Group>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className='boxshadow'></div>\n            </div >\n\n        );\n    }\n}\n\nexport default Controlbar;\n","import React, { Component } from 'react';\nimport './iopage.scss'\nimport moment from 'moment';\nimport * as WardState from '../Function/Wardstate'\nimport * as ApiProvider from '../API/ApiProvider'\nimport * as ApiGithub from '../API/ApiGithub'\nimport X2JS from 'x2js';\nimport * as QDCList from '../Resource/QDC'\n\nclass IOpage extends Component {\n    state = {\n        QDC: [],\n        PreStatus: null,\n        PreIntervalStatus: null,\n        PreCID: null,\n        PrePickerDate: null,\n        RegQDC: null,\n        CarloriesCal: []\n    }\n    getAPI(caseid, pickerdate, intervalStatus, status) {\n        if (caseid === undefined || caseid === null) {\n            return null\n        }\n        if (pickerdate === undefined || pickerdate === null) {\n            return null\n        }\n        if (intervalStatus === undefined || intervalStatus === null) {\n            return null\n        }\n        if (status === undefined || status === null) {\n            return null\n        }\n        function formatTimer(pickerdate, interstatus, status) {\n            const endTimeStamp = pickerdate + 31 * 60 * 60 * 1000\n            if (status === \"Crossection\") {\n                return {\n                    start: moment(endTimeStamp - (3 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            if (interstatus === 0) {\n                return {\n                    start: moment(endTimeStamp - (24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            if (interstatus === 1) {\n                return {\n                    start: moment(endTimeStamp - (3 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            if (interstatus === 2) {\n                return {\n                    start: moment(endTimeStamp - (7 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            return {\n                start: moment(endTimeStamp - (14 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n            }\n        }\n        const xm2 = new X2JS()\n        const timer = formatTimer(pickerdate, intervalStatus, status)\n        ApiProvider.getQDC(caseid, timer.start, timer.end)\n            .then(data => {\n                const Result = xm2.xml2js(data.data).outmsg\n                if (Number(Result.ret) === 0) {\n                    const parsedata = Result.resconts.rescont\n                    if (Array.isArray(parsedata)) {\n                        this.setState({ QDC: parsedata })\n                    }\n                    else {\n                        this.setState({ QDC: [parsedata] })\n                    }\n                }\n\n            })\n            .catch(err => {\n                console.log(\"getQDC NG \" + JSON.stringify(err));\n            });\n        // this.setState({ QDC: QDCList.data.outmsg.resconts.rescont })\n        ApiGithub.getGitHubJson(\"IOReg_QDC.json\")\n            .then(data => {\n                this.setState({ RegQDC: data.data })\n            })\n            .catch(err => {\n                console.log(\"getGithubNG\" + JSON.stringify(err))\n            })\n    }\n    componentDidMount() {\n        const { Status, IntervalStatus, caseinfo, PickerDate } = this.props\n        this.setState({ PreStatus: Status, PreIntervalStatus: IntervalStatus, PreCID: caseinfo.CASEID, PrePickerDate: PickerDate })\n        this.getAPI(caseinfo.CASEID, PickerDate, IntervalStatus, Status)\n\n    }\n    componentDidUpdate() {\n        const { Status, IntervalStatus, caseinfo, PickerDate } = this.props\n        const prestatus = this.state.PreStatus\n        const preinterstatus = this.state.PreIntervalStatus\n        const precid = this.state.PreCID\n        const prepickerdate = this.state.PrePickerDate\n        if (prepickerdate !== PickerDate || caseinfo.CASEID !== precid || IntervalStatus !== preinterstatus || Status !== prestatus) {\n            console.log(Status, IntervalStatus, caseinfo, PickerDate)\n            this.setState({ PreStatus: Status, PreIntervalStatus: IntervalStatus, PreCID: caseinfo.CASEID, PrePickerDate: PickerDate })\n            this.getAPI(caseinfo.CASEID, PickerDate, IntervalStatus, Status)\n        }\n    }\n    cellRender(arr) {\n        const { Status, IntervalStatus } = this.props\n        const mapcell = arr.map(function (value, index, array) {\n            return (\n                <div key={index} style={{ border: \"1px solid #cccccc\", borderCollapse: \"collapse\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <t2>{parseInt(value)}</t2>\n                </div>\n            );\n        })\n        if (Status === \"Crossection\") {\n            return (\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4,1fr)\" }}>\n                    {mapcell}\n                </div>\n            );\n        }\n        else {\n            if (IntervalStatus === 0) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(24,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n            if (IntervalStatus === 1) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(18,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n            if (IntervalStatus === 2) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(21,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n            if (IntervalStatus === 3) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(14,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n        }\n    }\n    render() {\n        function pickerTimeArray(pickerdate, intervalstatus, status) {\n            const et = pickerdate + (31 * 60 * 60 * 1000)\n            var timearray = []\n            if (status === \"Crossection\") {\n                const st = pickerdate + (7 * 60 * 60 * 1000)\n                for (let index = 0; index < 3; index++) {\n                    const time = st + (index * 8 * 60 * 60 * 1000)\n                    timearray.push(time)\n                }\n            }\n            else {\n                //IntervalStatus 0:1天 1:3天 2:一週 3:兩週\n                if (intervalstatus === 0) {\n                    const st = et - (24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 24; index++) {\n                        const time = st + (index * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (intervalstatus === 1) {\n                    const st = et - (3 * 24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 18; index++) {\n                        const time = st + (index * 4 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (intervalstatus === 2) {\n                    const st = et - (7 * 24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 21; index++) {\n                        const time = st + (index * 8 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (intervalstatus === 3) {\n                    const st = et - (14 * 24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 14; index++) {\n                        const time = st + (index * 24 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n            }\n            return timearray\n        }\n\n        function starttime(status, intervalstatus, time) {\n            if (status === \"Crossection\") {\n                return time - (24 * 60 * 60 * 1000)\n            }\n            if (intervalstatus === 0) {\n                return time - (24 * 60 * 60 * 1000)\n            }\n            if (intervalstatus === 1) {\n                return time - (3 * 24 * 60 * 60 * 1000)\n            }\n            if (intervalstatus === 2) {\n                return time - (7 * 24 * 60 * 60 * 1000)\n            }\n            return time - (14 * 24 * 60 * 60 * 1000)\n\n        }\n\n        function IntervalToDataArray(startTime, status, intervalstatus, element) {\n            if (Array.isArray(element)) {\n                if (status === 'Crossection') {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (8 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                if (intervalstatus === 0) {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (1 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                if (intervalstatus === 1) {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (4 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                if (intervalstatus === 2) {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (8 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                const filterdata = element.filter(function (value, index, arr) {\n                    const valueTimeString = value.rec_dat + value.rec_tim\n                    const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                    const endTime = startTime + (24 * 60 * 60 * 1000)\n                    return valueTime > startTime && valueTime < endTime\n                })\n                return filterdata\n            }\n            return []\n        }\n\n        function SumforEach(arr) {\n            var sum = 0;\n            arr.forEach(function (element) {\n                sum += Number(element);\n            });\n            return sum;\n        }\n\n\n        function formatQDCtoIO(QDC) {\n            function caloriesCal(lost, value) {\n                if (lost === \"配方奶\") {\n                    return Number(value) * 0.8\n                }\n                if (lost === \"母奶\") {\n                    return Number(value) * 0.7\n                }\n                return 0\n            }\n            function caloriesCalonnam(nam, value) {\n                if (nam === null || nam === undefined || nam === \"\") {\n                    return 0\n                }\n                const namstring = nam.toString()\n                const valueNumber = Number(value)\n                if (valueNumber === null || valueNumber === undefined) { return 0 }\n                if (namstring.match(\"10%TPN\") !== null) { return valueNumber * 0.34 }\n                if (namstring.match(\"SMOFliquid\") !== null) { return valueNumber * 1.8 }\n                if (namstring.match(\"D10\") !== null) { return valueNumber * 0.34 }\n                if (namstring.match(\"D12\") !== null) { return valueNumber * 0.34 * 1.2 }\n                if (namstring.match(\"D50\") !== null) { return valueNumber * 0.34 * 5 }\n                if (namstring.match(\"taita\") !== null) { return valueNumber * 0.34 }\n                return 0\n            }\n            var FormatFeedingList = []\n            var FormatIVList = []\n            var FormatUrineList = []\n            var FormatOtherInList = []\n            var FormatOtherOutList = []\n            for (let index = 0; index < QDC.length; index++) {\n                const element = QDC[index];\n                const elementItem = element.item;\n                const time = moment(element.rec_dat.toString().trim() + element.rec_tim.toString().trim(), \"YYYYMMDDHHmm\").valueOf()\n                const nam = element.nam\n                const FeedingReg = RegQDC.Feeding\n                const filterFeedingStatus = FeedingReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterFeedingStatus) {\n                    FormatFeedingList.push({\n                        time: time,\n                        value: Number(element.inp_val2),\n                        calories: caloriesCal(element.lost, element.inp_val2),\n                        element: element\n                    })\n                }\n                const IVReg = RegQDC.IV\n                const filterIVStatus = IVReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterIVStatus) {\n                    FormatIVList.push({\n                        time: time,\n                        value: Number(element.inp_val1),\n                        calories: caloriesCalonnam(nam, element.inp_val1),\n                        element: element\n                    })\n                }\n                const UrineReg = RegQDC.Urine\n                const filterUrineStatus = UrineReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterUrineStatus) {\n                    FormatUrineList.push({\n                        time: time,\n                        value: Number(element.out_val2),\n                        calories: caloriesCalonnam(nam, element.out_val2),\n                        element: element\n                    })\n                }\n                const OtherReg = RegQDC.Other\n                const filterOtherStatus = OtherReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterOtherStatus) {\n                    const input_1 = Number(element.inp_val1)\n                    const output_1 = Number(element.out_val1)\n                    if (elementItem === \"排便\") {\n                        // FormatOtherInList.push({\n                        //     time: time,\n                        //     value: 1,\n                        //     calories: 0,\n                        //     element: element\n                        // })\n                        FormatOtherOutList.push({\n                            time: time,\n                            value: 1,\n                            calories: 0,\n                            element: element\n                        })\n                    }\n                    else {\n                        if (input_1 === null || input_1 === undefined) {\n                            FormatOtherOutList.push({\n                                time: time,\n                                value: Number(element.inp_val1),\n                                calories: caloriesCalonnam(nam, element.inp_val1),\n                                element: element\n                            })\n                        }\n                        if (output_1 === null || output_1 === undefined) {\n                            FormatOtherInList.push({\n                                time: time,\n                                value: Number(element.output_1),\n                                calories: 0,\n                                element: element\n                            })\n                        }\n                    }\n                }\n\n            }\n            return {\n                Feeding: FormatFeedingList,\n                IV: FormatIVList,\n                OtherIn: FormatOtherInList,\n                Urine: FormatUrineList,\n                OtherOut: FormatOtherOutList\n            }\n        }\n        function timerFormat(PickerDate, Interval, Status) {\n            const EndTime = PickerDate + (31 * 60 * 60 * 1000)\n            console.log(Status)\n            if (Status === 'Crossection') {\n                return {\n                    interval: 3,\n                    hourInterval: 8,\n                    startTime: EndTime - (24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            if (Interval === 0) {\n                return {\n                    interval: 24,\n                    hourInterval: 1,\n                    startTime: EndTime - (24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            if (Interval === 1) {\n                return {\n                    interval: 18,\n                    hourInterval: 4,\n                    startTime: EndTime - (3 * 24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            if (Interval === 2) {\n                return {\n                    interval: 21,\n                    hourInterval: 8,\n                    startTime: EndTime - (7 * 24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            return {\n                interval: 14,\n                hourInterval: 24,\n                startTime: EndTime - (14 * 24 * 60 * 60 * 1000),\n                endTime: EndTime\n            }\n        }\n        function listTimerFormat(List, timer, status) {\n            const inter = timer.interval\n            var TimerList = []\n            for (let index = 0; index < inter; index++) {\n                const st = timer.startTime + (index * timer.hourInterval * 60 * 60 * 1000)\n                const et = timer.startTime + ((index + 1) * timer.hourInterval * 60 * 60 * 1000)\n                const filterList = List.filter(function (info, index, arr) {\n                    const time = info.time\n                    return st <= time && time < et\n                })\n                TimerList.push(filterList)\n            }\n            if (status === 'Crossection') {\n                const st = timer.startTime\n                const et = timer.endTime\n                const filterListALL = List.filter(function (info, index, arr) {\n                    const time = info.time\n                    return st <= time && time < et\n                })\n                TimerList.push(filterListALL)\n            }\n            return TimerList\n        }\n\n        function sumIn(arr1, arr2, arr3) {\n            var sumlist = []\n            for (let index = 0; index < arr1.length; index++) {\n                const element1 = arr1[index];\n                const element2 = arr2[index];\n                const element3 = arr3[index];\n                const sum = element1 + element2 + element3\n                sumlist.push(sum)\n            }\n            return sumlist\n        }\n        function sumOut(arr1, arr2) {\n            var sumlist = []\n            for (let index = 0; index < arr1.length; index++) {\n                const element1 = arr1[index];\n                const element2 = arr2[index];\n                const sum = element1 + element2\n                sumlist.push(sum)\n            }\n            return sumlist\n        }\n        function sumInAndOut(Input, Outout) {\n            var sumlist = []\n            for (let index = 0; index < Input.length; index++) {\n                const element1 = Input[index];\n                const element2 = Outout[index];\n                const sum = parseFloat(element1 - element2).toFixed(2)\n                sumlist.push(sum)\n            }\n            return sumlist\n        }\n        function gridNumber(interval, status) {\n            if (status === \"Crossection\") {\n                return 4\n            }\n            return interval\n        }\n        function cellsum(list) {\n            const CellSum = list.map(function (info, index, arr) {\n                var sum = 0\n                for (let index = 0; index < info.length; index++) {\n                    const element = info[index];\n                    sum = sum + element.value\n                }\n                return sum\n            })\n            return CellSum\n        }\n        function cellRenderSum(list) {\n            const CellRender = list.map(function (info, index, arr) {\n                if (info.length === 0) {\n                    return (\n                        <div key={index} style={{ borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #cccccc\", borderCollapse: 'collapse' }}>--</div>\n\n                    );\n                }\n                return (\n                    <div key={index} style={{ borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #cccccc\", borderCollapse: 'collapse' }}>{parseFloat(info).toFixed(2)}</div>\n                );\n            })\n            return (\n                <div style={{ display: 'grid', gridTemplateColumns: 'repeat( ' + gridNumber(timerStruct.interval, Status) + ' ,1fr)' }}>\n                    {CellRender}\n                </div>\n            );\n        }\n        function cellRender(list) {\n            const CellRender = list.map(function (info, index, arr) {\n                var sum = 0\n                if (info.length === 0) {\n                    return (\n                        <div key={index} style={{ borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #cccccc\", borderCollapse: 'collapse' }}>--</div>\n                    );\n                }\n                for (let index = 0; index < info.length; index++) {\n                    const element = info[index];\n                    sum = sum + element.value\n                }\n                return (\n                    <div key={index} style={{ borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #cccccc\", borderCollapse: 'collapse' }}>{parseFloat(sum).toFixed(2)}</div>\n                );\n            })\n            return (\n                <div style={{ display: 'grid', gridTemplateColumns: 'repeat( ' + gridNumber(timerStruct.interval, Status) + ' ,1fr)' }}>\n                    {CellRender}\n                </div>\n            );\n        }\n\n\n        function formatTime(time) {\n            if (Number(time) / 1000 >= 1) {\n                return time.toString().trim()\n            }\n            return \"0\" + time.toString().trim()\n        }\n\n        function stylechange(status) {\n            const chronicstyle = \"140px 1fr\"\n            const crossectionstyle = \"1fr 4fr\"\n            if (status === \"Crossection\") {\n                return crossectionstyle\n            }\n            else return chronicstyle\n        }\n\n        function urineforWeightAndHourCrossection(Urine, weight) {\n            const datamap = Urine.map(function (info, index, arr) {\n                var sum = 0\n                for (let index = 0; index < info.length; index++) {\n                    const element = info[index];\n                    sum = sum + element.value\n                }\n                if (sum === 0) {\n                    return 0\n                }\n                if (weight === null || weight === undefined) {\n                    return \"--\"\n                }\n                return parseFloat(sum / weight / 8).toFixed(2)\n            })\n            for (let index = 0; index < Urine.length; index++) {\n                const element = Urine[index];\n                console.log(element)\n                \n            }\n            return datamap\n        }\n        const { Status, IntervalStatus, caseinfo, PickerDate } = this.props\n        const timeInterval = pickerTimeArray(PickerDate, IntervalStatus, Status)\n        const et = PickerDate + (31 * 60 * 60 * 1000)\n        const st = starttime(Status, IntervalStatus, et)\n        const WEIGHT = caseinfo.WEIGHT\n        const dateWeoght = WardState.selectweight(WEIGHT, PickerDate)\n        const QDCLIST = this.state.QDC\n        const Weight = 1000\n        const RegQDC = this.state.RegQDC\n        console.log(RegQDC, PickerDate)\n        if (RegQDC === null || RegQDC === undefined) { return null }\n        const formatData = formatQDCtoIO(QDCLIST)\n        const timerStruct = timerFormat(PickerDate, IntervalStatus, Status)\n        const feed = listTimerFormat(formatData.Feeding, timerStruct, Status)\n        const IV = listTimerFormat(formatData.IV, timerStruct, Status)\n        const OtherIn = listTimerFormat(formatData.OtherIn, timerStruct, Status)\n        const sumin = sumIn(cellsum(feed), cellsum(IV), cellsum(OtherIn))\n        const Urine = listTimerFormat(formatData.Urine, timerStruct, Status)\n        const UrinForUnit = urineforWeightAndHourCrossection(Urine, 1000)\n        const OtherOut = listTimerFormat(formatData.OtherOut, timerStruct, Status)\n        const sumout = sumOut(cellsum(Urine), cellsum(OtherOut))\n        console.log(Urine)\n        const sumInTotal = sumInAndOut(sumin, sumout)\n        //====================================================================\n\n\n        const titleInarray = ['Feed', 'IV', 'Other', 'In:Sum']\n        const titleOutarray = ['U/O', 'ml/kg/hr', 'Other', 'Out:Sum']\n        const TitleCellIn = titleInarray.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ border: \"1px solid #cccccc\", borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", backgroundColor: Status === \"Crossection\" ? \"white\" : \"#cccccc\" }}>\n                    <t2>{value}</t2>\n                </div>\n            );\n        })\n\n        const TitleCellOut = titleOutarray.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ border: \"1px solid #cccccc\", borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", backgroundColor: Status === \"Crossection\" ? \"white\" : \"#cccccc\" }}>\n                    <t2>{value}</t2>\n                </div>\n            );\n        })\n        return (\n            <div>\n                <div style={{ display: \"grid\", gridTemplateColumns: stylechange(Status) }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"40px 40px 40px 40px\" }}>\n                        {TitleCellIn}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"40px 40px 40px 40px\" }}>\n                        {cellRender(feed)}\n                        {cellRender(IV)}\n                        {cellRender(OtherIn)}\n                        {cellRenderSum(sumin)}\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: stylechange(Status) }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"40px 40px 40px 40px\" }}>\n                        {TitleCellOut}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"40px 40px 40px 40px\" }}>\n                        {cellRender(Urine)}\n                        {cellRenderSum(UrinForUnit)}\n                        {cellRender(OtherOut)}\n                        {cellRenderSum(sumout)}\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: stylechange(Status) }}>\n                    <div style={{ border: \"1px solid #cccccc\", borderCollapse: \"collapse\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" , backgroundColor: Status === \"Crossection\" ? \"white\" : \"#cccccc\" }}>\n                        <t2>I-O</t2>\n                    </div>\n                    {cellRenderSum(sumInTotal)}\n                    {/* {totalcell} */}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default IOpage;","import React, { Component } from 'react';\nimport IOpage from '../../Module/iopage'\n\nclass CrossectionIo extends Component {\n    render() {\n        const { caseinfo, title, PickerDate } = this.props\n        const titlearray = ['白班', '小夜', '大夜', '全日']\n        const titlelab = titlearray.map(function (info, index) {\n            return (\n                <centerstyle key={index}>\n                    <t2>{info}</t2>\n                </centerstyle>\n            );\n        })\n        return (\n            //510\n            <div>\n                <div style={{ lineHeight: \"50px\", backgroundColor: \"#cccccc\", padding: \"0px 5px\" }}>\n                    <t1>{title}</t1>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr\", height: \"40px\" }}>\n                    <div></div>\n                    {titlelab}\n                </div>\n                <IOpage PickerDate={PickerDate} caseinfo={caseinfo} Status={\"Crossection\"} IntervalStatus={0}></IOpage>\n            </div>\n        );\n    }\n}\n\nexport default CrossectionIo","import React, { Component } from 'react';\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport * as ApiGithub from '../../API/ApiGithub'\nimport './NonlabviewtableCell.scss'\n\nconst STATUS_REPORT = 0\n\nexport default class NonlabviewtableCell extends Component {\n    state = {\n        Result: [],\n        parser: { \"mappings\": [] },\n        summary_str: \"--\",\n        RESDISP: []\n    }\n\n    componentDidMount() {\n        //call API\n        const { caseId, hisId, month, seq, name, time, status } = this.props;\n\n        if (caseId !== undefined && hisId !== undefined && month !== undefined && seq !== undefined) {\n            ApiProvider.getStoredProcedureRESDISP(hisId.trim(), month, caseId.trim(), seq)\n                .then(result => {\n                    console.log(\"getStoredProcedureRESDISP OK \" + JSON.stringify(result.data));\n                    //const fakeData = [{\"RECNO\":\"1\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"正式報告\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"2\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"                                臺北榮民總醫院兒童醫學部報告\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"3\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  病患資訊：      新生兒加護病房 - 1 黃苡齊 4565531-0 女性 5月大 NBD\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"4\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  申請序號 / 工作號：  0ANWCEA/            開立時間：   20200115    0304\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"5\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  開醫囑者：                     簽收時間：   20200115    0305\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"6\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  報告人 ：       NUR2325 袁藝榛         報告時間：   20200115    0305\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"7\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  檢體 ：        Blood\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"8\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  醫囑名稱：      BLOOD GAS\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"9\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   Sample:(Capillary)\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"10\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   PH:  (7.37)      Hb:   ()       BUN: ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"11\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   PO2:  (43)  mmHg   Hct:  (39)  %     Cr:  ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"12\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   PCO2: (59)  mmHg   FIO2:  (40.0) %\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"13\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   HCO3: (34.1) mmol/L  NA+:  (151)  mmol/L\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"14\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   BE:  (7.1)  mmol/L  K+:   (6.0)  mmol/L\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"15\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   SAT:  (77)  %     Cl-:  ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"16\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   TCO2: (35.9) mmol/L  iCA++: (1.44) mmol/L\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"17\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"                AnGap: ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"18\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"                MG++:  ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"19\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"20\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   COMMENT:\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"}];\n\n                    this.setState({\n                        RESDISP: result.data\n                        //RESDISP: fakeData\n                    })\n\n                    let input = {\n                        item_name: name.trim(),\n                        content: \"\",\n                        sample: \"\",\n                        lab: \"\",\n                        datatime: moment(time).format(\"YYYY-MM-DD HH:mm\")\n                    }\n\n                    //fakeData.forEach(item => {\n                    result.data.forEach(item => {\n                        input.content = `${input.content} \"\\n\" ${item.CONTENT}`;\n                    });\n\n                    //status 0:正式報告 只有0需要做parse\n                    //console.log(\"status: \" + JSON.stringify(status));\n                    if(parseInt(status) === STATUS_REPORT) {\n                        ApiGithub.getGitHubJson(\"Summary.json\")\n                        .then(data => {\n                            console.log(\"get Summary.json OK \" + JSON.stringify(data.data));\n\n                            const selected_parser = this.select_parser(input, data.data)\n                            console.log(\"selected_parser \" + JSON.stringify(selected_parser));\n                            this.setState({\n                                parser: selected_parser\n                            })\n\n                            if (selected_parser !== undefined) {\n                                const result_kv_pairs = this.parse(input, selected_parser)\n                                console.log(\"result_kv_pairs \" + JSON.stringify(result_kv_pairs));\n\n                                const summary_str = this.summerize(result_kv_pairs, selected_parser)\n                                console.log(\"summary_str \" + JSON.stringify(summary_str));\n\n                                this.setState({\n                                    summary_str: summary_str\n                                })\n                            }\n                        })\n                        .catch(err => {\n                            console.log(err)\n                        })\n                    }\n                })\n                .catch(err => {\n                    console.log(\"getStoredProcedureRESDISP NG \" + JSON.stringify(err));\n                });\n        }\n    }\n\n    select_parser = (input, parsers) => {\n        return parsers.find(x =>\n            input.item_name.match(x.apply_condition.name)\n            && (!x.apply_condition.sample || input.sample.match(x.apply_condition.sample))\n            && (!x.apply_condition.lab || input.lab.match(x.apply_condition.lab))\n            && (!x.apply_condition.start_time || input.datetime >= x.apply_condition.start_time)\n            && (!x.apply_condition.end_time || input.datetime < x.apply_condition.end_time)\n        )\n    }\n\n    parse = (input, parser) => {\n        let mappings = parser.mappings\n        let content = input.content\n        let result = {}\n        mappings.forEach(mapping => {\n            const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n            const match = content.match(re)\n            result[mapping.key] = match && match[mapping.position]\n        });\n        return result;\n    }\n\n    summerize = (kv_pairs, parser) => {\n        let summary_str = parser.summary\n        for (const key in kv_pairs) {\n            let match_replacer = summary_str.match(RegExp(\"\\\\[\" + key + \"(;(.*?))?\\\\]\"))\n            let replacer = \"\"\n            if (match_replacer && match_replacer.length === 3) {\n                replacer = match_replacer[2]\n            }\n            summary_str = summary_str.replace(RegExp(\"\\\\[\" + key + \"(;.*?)?\\\\]\"), kv_pairs[key] || replacer)\n        }\n        return summary_str;\n    }\n\n    render() {\n        function statusFormat(status) {\n            if (status === 0) {\n                return \"正式報告\"\n            }\n            if (status === 1) {\n                return \"已簽收\"\n\n            }\n            if (status === 2) {\n                return \"待送檢\"\n            }\n            return status\n        }\n        //status 0:正式報告 只有0需要做parse\n        const { time, name, status, come, showModal } = this.props;\n        const { summary_str, RESDISP } = this.state;\n        const statusRender = statusFormat(status)\n        const canShowReport = parseInt(status) === 0\n        return (\n            <div style={{ height: \"50px\", display: \"grid\", gridTemplateColumns: \"1fr 200px 1fr 1fr 1fr\" }}>\n                <t3 className='nonlabteblecell'>{moment(time).format('MM/DD HH:mm')}</t3>\n                <t3 className='nonlabteblecell'>{name}</t3>\n                <t3 className='nonlabteblecell'>{come}</t3>\n                <t3 className='nonlabteblecell'>{statusRender}</t3>\n                {canShowReport  && <t3 className='nonlabteblecell' onClick={() => showModal(RESDISP)} style={{ color: \"blue\", textDecoration: \"underline\", cursor: \"pointer\" }}>{summary_str}</t3>}\n                {!canShowReport && <t3 className='nonlabteblecell'>{summary_str}</t3>}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nclass ExamReportModal extends Component {\n    render() {\n        const reportDetail = this.props.report\n        const showDetail = reportDetail.map((data, index) => {\n            return data.CONTENT !== \"\" ? <div key={ \"ExamReportModal\" + index } style={{ whiteSpace: \"pre-wrap\" }}>{data.CONTENT}</div> : \"\"\n        })\n        return (\n            <div>{showDetail}</div>\n        );\n    }\n}\n\nexport default ExamReportModal\n","import React, { Component } from 'react';\nimport './Nonlabviewtable.scss'\nimport NonlabviewtableCell from './NonlabviewtableCell'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider'\nimport { Modal } from 'antd';\nimport InsReportModal from '../ExamReportModal'\n\nclass Nonlabviewtable extends Component {\n    state = {\n        visible: false,\n\n        modalVisible: false,\n        modalReport: \"\",\n        ORDLIST: [],\n        RESSECT: []\n    }\n    componentDidMount() {\n        this.nonLabApiGet()\n    }\n    nonLabApiGet() {\n        // function selectMonthInterval(storeProcedureTime) {\n        //     const timestampInterval = moment() - moment(storeProcedureTime, \"YYYY-MM-DD\").valueOf()\n        //     const timestampMonth = 30 * 24 * 60 * 60 * 1000\n        //     const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n        //     return MonthInt\n        // }\n        const { caseinfo } = this.props\n        const storeProcedureTime = moment(caseinfo.TRANSINDT, \"YYYYMMDD\").format(\"YYYY-MM-DD\")\n        // const MonthInterval = selectMonthInterval(storeProcedureTime)\n        ApiProvider.getStoredProcedureORDLIST(caseinfo.HISID, storeProcedureTime, \"ALL\", \"DOC3924B\")\n            .then(data => { this.setState({ ORDLIST: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureORDLIST NG \" + JSON.stringify(err)) });\n        // ApiProvider.getStoredProcedureRESSECT(caseinfo.HISID, MonthInterval, \"ALL\", \"DOC3924B\")\n        //     .then(data => { this.setState({ RESSECT: data.data }) })\n        //     .catch(err => { console.log(\"getStoredProcedureRESSECT NG \" + JSON.stringify(err)) });\n    }\n    showModal = (report) => {\n        console.log(\"showModal :\" + JSON.stringify(report))\n        this.setState({\n            modalVisible: true,\n            modalReport: report\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n    render() {\n        function ORDLISTFormat(ORDLIST, StartTime, EndTime) {\n            var ORDLIST_Format = []\n            if (Array.isArray(ORDLIST)) {\n                for (let index = 0; index < ORDLIST.length; index++) {\n                    const element = ORDLIST[index];\n                    const elemetnStatus = Number(element.ORSTATUS)\n                    const elementORBGNTime = moment(element.ORBGNDT.toString().trim() + element.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n                    if (StartTime <= elementORBGNTime && elementORBGNTime <= EndTime) {\n                        if (elemetnStatus === 64) {\n                            //正式報告\n                            ORDLIST_Format.push({\n                                time: elementORBGNTime,\n                                status: 0,\n                                element: element\n                            })\n                        }\n                        if (elemetnStatus === 38) {\n                            //已簽收 \n                            ORDLIST_Format.push({\n                                time: elementORBGNTime,\n                                status: 1,\n                                element: element\n                            })\n                        }\n                        if (elemetnStatus === 31) {\n                            //待送檢\n                            ORDLIST_Format.push({\n                                time: elementORBGNTime,\n                                status: 2,\n                                element: element\n                            })\n                        }\n                        if (elemetnStatus === 82 || elemetnStatus === 60 || elemetnStatus === 61) {\n                            //已取消 不顯示\n                            continue\n                        }\n                        //Other\n                        ORDLIST_Format.push({\n                            time: elementORBGNTime,\n                            status: elemetnStatus,\n                            element: element\n                        })\n                    }\n                }\n            }\n            return ORDLIST_Format\n        }\n        const { modalVisible, modalReport, ORDLIST } = this.state\n        const { StartTime, EndTime } = this.props\n        const FormatList = ORDLISTFormat(ORDLIST, StartTime, EndTime)\n\n        const showModal = this.showModal\n        const handleOk = this.handleOk\n        const handleCancel = this.handleCancel\n        const nonlabcell = FormatList.map(function (value, index, array) {\n            const come = value.element.ORSPCN1;\n            const time = value.time\n            const name = value.element.ORPROCED;\n            const status = value.status;\n            return (\n                <NonlabviewtableCell key={\"Nonlabviewtable\" + index} come={come} time={time} name={name} statis={status} hisId={value.element.ORHISTNO} caseId={value.element.ORDSEQCN} month={value.element.ORMM} seq={value.element.ORDSEQNO} showModal={showModal}></NonlabviewtableCell>\n            );\n        })\n        return (\n            <div>\n                <div style={{ height: \"50px\", border: \"#E2EDF3 1px solid\", backgroundColor: \"#E2EDF3\", display: \"grid\", gridTemplateColumns: \"1fr 1.5fr 1fr 1fr 1fr\" }}>\n                    <t3 className='nonlabtebletitlecell'>檢驗日期</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗項目名稱</t3>\n                    <t3 className='nonlabtebletitlecell'>檢體來源</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗項目狀態</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗結果</t3>\n                </div>\n                <div className='nonlabviewtable'>\n                    {nonlabcell}\n                </div>\n                <Modal\n                    title={\"檢驗結果\"}\n                    visible={modalVisible}\n                    onOk={handleOk}\n                    onCancel={handleCancel}\n                    width={1000}\n                    footer={null}>\n                    <InsReportModal report={modalReport}></InsReportModal>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Nonlabviewtable\n","import React, { Component } from 'react';\nimport Nonlabviewtable from './Nonlabviewtable'\n\n\nclass Nonlabviewlayout extends Component {\n    render() {\n        // const { PickerDate } = this.props\n        // const { modalVisible, modalReport } = this.state\n        // const showModal = this.showModal\n        // const handleOk = this.handleOk\n        // const handleCancel = this.handleCancel\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div style={{ display: 'flex', alignItems: 'center', height: '40px', paddingLeft: \"5px\", paddingRight: \"5px\", background: \"#cccccc\" }}>\n                    <t1>報告清單</t1>\n                </div>\n                <Nonlabviewtable caseinfo={this.props.caseinfo} StartTime={this.props.StartTime} EndTime={this.props.EndTime}></Nonlabviewtable>\n            </div>\n        );\n    }\n}\n\nexport default Nonlabviewlayout","import React, { Component } from 'react';\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider'\n\n\n\nclass RTtable extends Component {\n    state = {\n        RESDBGAS: [],\n        PreHID: null,\n        PreTransInDate: null\n    }\n    componentDidMount() {\n        const HID = this.props.caseinfo.HISID\n        const TRDT = this.props.caseinfo.TRANSINDT\n        this.setState({ PreHID: HID, PreTransInDate: TRDT })\n        this.getGasAPI()\n    }\n    componentDidUpdate() {\n        const HID = this.props.caseinfo.HISID\n        const TRDT = this.props.caseinfo.TRANSINDT\n        const PreHID = this.state.PreHID\n        const PreTRDT = this.state.PreTransInDate\n        if (HID !== PreHID || TRDT !== PreTRDT) {\n            this.setState({ PreHID: HID, PreTransInDate: TRDT })\n            this.getGasAPI()\n        }\n    }\n    getGasAPI() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID\n        const TransInDate = moment(caseinfo.TRANSINDT, \"YYYYMMDD\").format(\"YYYY-MM-DD\")\n        ApiProvider.getStoredProcedureRESDBGAS(HID, TransInDate)\n            .then(data => { this.setState({ RESDBGAS: data.data }) })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDBGAS NG \" + JSON.stringify(err));\n            });\n    }\n    GasListToCell = () => {\n        function formatGasData(GasDataList, st, et) {\n            const filterTimer = GasDataList.filter(function (element, index, arr) {\n                const timeStamp = moment(element.ORRESDT.toString().trim() + element.ORRESTM.toString().trim(), 'YYYY-MM-DDHH.mm.ss').valueOf()\n                return st <= timeStamp && timeStamp <= et\n            })\n            const cellMap = filterTimer.map(function (element, index, arr) {\n                const PHValue = element.SS07\n                const PCO2Value = element.SS06\n                const PO2Value = element.SS08\n                const HCO3Value = element.SS04\n                const BEValue = element.SS01\n                const SampleValue = \"123\" //Parse\n                const O2SatValue = element.SS05\n                const FiO2Value = element.SS03\n                const timeStamp = moment(element.ORRESDT.toString().trim() + element.ORRESTM.toString().trim(), 'YYYY-MM-DDHH.mm.ss').valueOf()\n                const time = moment(timeStamp).format(\"MM/DD HH:mm\")\n                const gasDataArray = [time, PHValue, PCO2Value, PO2Value, HCO3Value, BEValue, O2SatValue, SampleValue, FiO2Value]\n                const GasCell = gasDataArray.map(function (value, index, array) {\n                    return (\n                        <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\" }}>\n                            <t3>{value}</t3>\n                        </centerstyle>\n                    );\n                })\n                return (\n                    <div key={index} style={{ height: \"50px\", display: \"grid\", gridTemplateColumns: \"110px repeat(8,1fr)\" }}>{GasCell}</div>\n                );\n            })\n            return cellMap\n\n        }\n        const { Timer } = this.props\n        const startTime = Timer[0]\n        const endTime = Timer[1]\n        const GasData = this.state.RESDBGAS\n        const CellRander = formatGasData(GasData, startTime, endTime)\n        //for loop filter three days\n\n        return CellRander\n    }\n\n    render() {\n        const GasTitleList = ['起迄', 'PH', 'PCO2', 'PO2', 'HCO3', 'BE', 'O2', 'Sample', 'FiO2']\n        const GasTitleCell = GasTitleList.map(function (value, index, array) {\n            return (\n                <centerstyle key={index} style={{ borderCollapse: \"collapse\" }}>\n                    <t3>{value}</t3>\n                </centerstyle>\n            );\n        })\n\n        return (\n            <div>\n                <div style={{ height: \"50px\", border: \"rgba(238,238,238,1) 1px solid\", backgroundColor: \"#E2EDF3\", display: \"grid\", gridTemplateColumns: \"110px repeat(8,1fr)\" }}>\n                    {GasTitleCell}\n                </div>\n                <div style={{ maxHeight: \"400px\", overflow: \"auto\" }}>\n                    {this.GasListToCell()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTtable\n","import React, { Component } from 'react';\nimport RTtable from './RTtable'\nclass GAS extends Component {\n\n\n    render() {\n        const { caseinfo, PickerDateRange } = this.props\n\n        return (\n            <div style={{ marginBottom: \"20px\" }}>\n                <t1>GAS累積報告</t1>\n                <RTtable Timer={PickerDateRange} caseinfo={caseinfo}></RTtable>\n            </div>\n        );\n    }\n}\n\nexport default GAS\n","import React, { Component } from 'react';\nimport { Modal, Input } from 'antd';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nexport default class RemarkModal extends Component {\n    state = {\n        remark: this.props.remarkValue.remark,\n        editor: this.props.remarkValue.editor,\n    }\n\n\n    \n    componentDidMount() {\n        console.log(\"RemarkModal componentDidMount\");\n        console.log(\"RemarkModal caseinfo: \" + JSON.stringify(this.props.caseinfo));\n        this.onInputChange = this.onInputChange.bind(this);\n        this.onOkClick = this.onOkClick.bind(this);\n    }\n\n    onInputChange(event) {\n        this.setState({ remark: event.target.value })\n    }\n\n    onOkClick() {\n        const { name, transinId, type, remarkId } = this.props.remarkValue\n        const { remark, editor, } = this.state;\n        let fixTime = moment().format('X');\n\n\n        // console.log(`editor : ${editor}`)\n        // console.log(`name : ${name}`)\n        // console.log(`remark : ${remark}`)\n        // console.log(`remarkId : ${remarkId}`)\n        // console.log(`fixTime: ${fixTime}`)\n        // console.log(`transinId : ${transinId}`)\n        // console.log(`type : ${type}`)\n\n        ApiProvider.createRemark(name, remark, remarkId, fixTime, transinId, type, editor)\n            .then(result => {\n                console.log(\"createRemark OK \" + JSON.stringify(result));\n                this.props.onOk(result.data.remark);\n            })\n            .catch(err => {\n                console.log(\"createRemark NG \" + JSON.stringify(err));\n            });\n    }\n\n    render() {\n        const { TextArea } = Input;\n        const { createTime, name } = this.props.remarkValue;\n        const onCancel = this.props.onCancel;\n        const onOk = this.onOkClick.bind(this);\n\n        return (\n            <Modal\n                title=\"備註\"\n                visible={this.props.visible}\n                onOk={onOk}\n                onCancel={onCancel}>\n                <div style={{ display: \"grid\", gridTemplateRows: \"30px 30px 30px 30px\" }}>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div>開立時間: {createTime}</div>\n                        <div>上次編輯時間: </div>\n                        {/* <div>上次編輯時間: {this.state.editTime}</div> */}\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div>處理名稱: {name}</div>\n                        <div>上次編輯人: {this.state.editor}</div>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div>頻次:</div>\n                        <div>開立醫師: {this.state.editor}</div>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>備註內容:</div>\n                    <TextArea rows={5} placeholder=\"請輸入備註內容\" value={this.state.remark} onChange={this.onInputChange} />\n                </div>\n            </Modal>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './RTbreathtablecell.scss'\n// import * as FiliterReg from '../../Function/FiliterReg'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass RTbreathetablecell extends Component {\n    state = {\n        onCell: false,\n        onEdit: false,\n        remark: '',\n        powerLogin: 0\n    }\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n    Mouse_move() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onCell: true\n                }\n            )\n        }\n    }\n\n    Mouse_leave() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onCell: false\n                }\n            )\n        }\n    }\n\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    }\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    seachRemark = () => {\n        const { caseinfo, value } = this.props\n        console.log(value)\n        const id = `Breath${moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").valueOf()}`\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, id, \"RTbreath\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    render() {\n        const { value, caseinfo } = this.props\n        console.log(value)\n        const id = `Breath${moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").valueOf()}`\n        const time = moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\")\n        const setting = value.Mode.toString().trim()\n        const mode = value.Setting.toString().trim()\n\n        const remarkValue = {\n            \"createTime\": time,\n            \"name\": setting,\n            \"remarkId\": id,\n            \"remark\": this.state.remark,\n            \"transinId\": caseinfo.TRANSINID,\n            \"type\": \"RTbreath\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <div>\n                <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n                <div onMouseMove={() => this.Mouse_move()} onMouseLeave={() => this.Mouse_leave()} className=\"RTtablecell\">\n                    <t3 className='RTBreathDateCell'>{time}</t3>\n                    <div style={{ display: \"grid\", gridTemplateRows: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"100px\" : \"50px 50px\"] }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\" }}>\n                            <t3 style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\", padding: \"0px 5px\" }}>{setting}</t3>\n                            <t3 style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\", padding: \"0px 5px\" }}>{mode}</t3>\n                        </div>\n                        <t3 style={{ alignItems: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\", padding: \"0px 5px\", display: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"none\" : \"\"] }}>{this.state.remark}</t3>\n                    </div>\n                    <div style={this.state.onCell ? { display: this.state.powerLogin == 1 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", right: 0, height: \"100px\", background: \"white\", width: \"77px\", border: \"rgba(238,238,238,1) 1px solid\" } : { display: \"none\" }}>\n                        <div onClick={() => this.Edit_state()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }}>\n                            <img src={chooseedit} alt='chooseedit'></img>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default RTbreathetablecell\n","import React, { Component } from 'react';\nimport RTbreathetablecell from './RTbreathtablecell'\n// import * as FilterReg from '../../Function/FiliterReg'\n// import moment from 'moment'\n\nclass RTbreathetable extends Component {\n\n    createRTbreathetable = () => {\n        const { DataList, caseinfo } = this.props\n\n        const RTbreathetable = DataList.map(\n            (value, index, array) =>\n                <RTbreathetablecell key={index} value={value} caseinfo={caseinfo}></RTbreathetablecell>\n        )\n        return RTbreathetable\n    }\n\n    render() {\n        return (\n            <div>\n                <div style={{ height: \"50px\", display: \"grid\", gridTemplateColumns: \"1fr 3fr 3fr\", backgroundColor: \"#E2EDF3\", border: \"rgba(238,238,238,1) 1px solid\" }}>\n                    <t3 style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>紀錄日期</t3>\n                    <t3 style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>Mode</t3>\n                    <t3 style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>Setting</t3>\n                </div>\n                <div style={{ maxHeight: \"400px\", overflow: \"auto\" }}>\n                    {this.createRTbreathetable()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTbreathetable\n","import React, { Component } from 'react';\nimport RTbreathetable from './RTbreathetable'\n// import { DatePicker } from 'antd';\nimport * as FilterReg from '../../Function/FiliterReg'\nimport X2JS from 'x2js';\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\n// import * as QSPEList from '../../Resource/QSPE'\n\nclass RTbreathe extends Component {\n    state = {\n        preCID: null,\n        QSPE: []\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDateRange } = this.props\n        this.setState({ preCID: caseinfo.CASEID })\n        this.getQSPEApi(caseinfo.CASEID, PickerDateRange[0], PickerDateRange[1])\n\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDateRange } = this.props\n        const CID = caseinfo.CASEID\n        const preCID = this.state.preCID\n        if (CID !== preCID) {\n            this.setState({ preCID: caseinfo.CASEID })\n            this.getQSPEApi(caseinfo.CASEID, PickerDateRange[0], PickerDateRange[1])\n        }\n    }\n    getQSPEApi(CID, st, et) {\n        const xm2 = new X2JS()\n        console.log(CID, st, et)\n        const start = moment(st).format(\"YYYYMMDDHHmm\")\n        const end = moment(et).format(\"YYYYMMDDHHmm\")\n        ApiProvider.getQSPE(CID, start, end)\n            .then(data => {\n                console.log(xm2.xml2js(data.data).outmsg.resconts.rescont)\n                const result = xm2.xml2js(data.data).outmsg\n                if (Number(result.ret) === 0) {\n                    const resultData = result.resconts.rescont\n                    if (Array.isArray(resultData)) {\n                        this.setState({ QSPE: resultData })\n                    }\n                    else {\n                        this.setState({ QSPE: [resultData] })\n                    }\n                }\n                return []\n            })\n            .catch(err => {\n                console.log(\"getQSPE NG \" + JSON.stringify(err))\n            });\n        // this.setState({ QSPE: QSPEList.data })\n    }\n\n    createRTbreathetable = () => {\n        const { caseinfo, PickerDateRange } = this.props\n        const QSPE = this.state.QSPE\n        let DataList = FilterReg.QSPERegList(QSPE)\n        DataList = DataList.filter(data => {\n            let time = moment(data.Date + data.Time, \"YYYYMMDDHHmm\").valueOf()\n            return PickerDateRange[0] <= time && time <= PickerDateRange[1]\n        })\n        console.log(DataList)\n        return <RTbreathetable DataList={DataList} caseinfo={caseinfo}></RTbreathetable>\n    }\n\n    render() {\n        return (\n            <div style={{ marginBottom: \"20px\" }}>\n                <t1>呼吸器設定紀錄</t1>\n                {this.createRTbreathetable()}\n            </div>\n        );\n    }\n}\n\nexport default RTbreathe\n","import React, { Component } from 'react';\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Prescriptionordertablecell.scss'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Prescriptionordertablecell extends Component {\n    state = {\n        onEdit: false,\n        onMove: false,\n        remark: '',\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { caseinfo, value } = this.props\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, value.UDORDSEQ, \"prescription\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    on_Mouse() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: true\n                }\n            )\n        }\n    }\n    on_leave() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: false\n                }\n            )\n        }\n    }\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    checkStatus = () => {\n        const { value, SelectMode } = this.props\n        const ET = moment(value.UDENDDT, \"YYYY-MM-DD-HH:mm:ss.000000\").valueOf()\n\n        if (SelectMode !== 0) {\n            const Status = SelectMode === 0 || SelectMode === 1 ? \"生效中\" : \"已結束\";\n            return Status\n        } else {\n            const nowT = moment().valueOf()\n            const Status = ET < nowT ? \"已結束\" : \"生效中\";\n            return Status\n        }\n    }\n\n    render() {\n        const { caseinfo, value } = this.props\n        const Name = value.UDGNAME.toString()\n        const PName = value.UDRPNAME.toString()\n        const Unit = value.UDDOSAGE.toString() + \"/\" + value.UDDUNIT.toString() + \"/\" + value.UDFREQN.toString() + \"/\" + value.UDROUTE.toString()\n        const ST = moment(value.UDBGNDT, \"YYYY-MM-DD-HH:mm:ss.000000\").format('MM/DD HH:mm')\n        const ET = moment(value.UDENDDT, \"YYYY-MM-DD-HH:mm:ss.000000\").format('MM/DD HH:mm')\n        const Status = this.checkStatus()\n\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": PName,\n            \"remarkId\": value.UDORDSEQ,\n            \"remark\": this.state.remark,\n            \"transinId\": caseinfo.TRANSINID,\n            \"type\": \"prescription\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <div onMouseMove={() => this.on_Mouse()} onMouseLeave={() => this.on_leave()} className='prescriptiontablecell'>\n                <div style={{ display: \"grid\", gridTemplateRows: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"100px\" : \"80px 50px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 2fr 1fr 1fr 1fr\" }}>\n                        <div className='prescriptiontablecellcontext'><t4 className='prescriptiontablecellcontexttext'>{Name}</t4></div>\n                        <div className='prescriptiontablecellcontext'><t4 className='prescriptiontablecellcontexttext'>{PName}</t4></div>\n                        <div className='prescriptiontablecellcontext'><t3 className='prescriptiontablecellcontexttext'>{Unit}</t3></div>\n                        <div className='prescriptiontablecellcontext'><t3 className='prescriptiontablecellcontexttext'>{Status}</t3></div>\n                        <div className='prescriptiontablecellcontext'><t3 className='prescriptiontablecellcontexttext'>{ST}</t3></div>\n                        <div className='prescriptiontablecellcontext'><t3 className='prescriptiontablecellcontexttext'>{ET}</t3></div>\n                    </div>\n                    <t3 style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\", padding: \"0px 5px\", display: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"none\" : \"\"] }}>{this.state.remark}</t3>\n                    <div style={this.state.onMove ?\n                        { display: this.state.powerLogin == 1 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", right: 0, height: [this.state.remark === undefined || this.state.remark === \"\" ? \"100px\" : \"130px\"], background: \"white\", width: \"77px\", border: \"rgba(238,238,238,1) 1px solid\" }\n                        :\n                        { display: \"none\" }}>\n                        <div onClick={() => this.Edit_state()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }}>\n                            <img src={chooseedit} alt='chooseedit'></img>\n                        </div>\n                    </div>\n                </div>\n                <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            </div >\n        );\n    }\n}\n\nexport default Prescriptionordertablecell\n","import React, { Component } from 'react';\nimport Prescriptionordertablecell from './Prescriptionordertablecell'\nimport './Prescriptionordertable.scss'\n\n\nclass Prescriptionordertable extends Component {\n    render() {\n        const { UDORDER0, caseinfo, SelectMode } = this.props\n        const title = [\"學名\", \"商品名\", \"劑量/單位/途徑/頻次\", \"狀態\", \"開始日期\", \"結束日期\"]\n        const titlecell = title.map(function (value, index, arr) {\n            return (\n                <t3 className='title'>{value}</t3>\n            );\n        })\n        const Prescriptionordertabletable = UDORDER0.map(\n            (value, index, array) =>\n                <Prescriptionordertablecell caseinfo={caseinfo} key={index} value={value} SelectMode={SelectMode}></Prescriptionordertablecell>\n        )\n        return (\n            <div>\n                <div className='Prescriptionordertablelayout'>\n                    {titlecell}\n                </div>\n                <div style={{ maxHeight: \"400px\", overflow: \"auto\" }}>\n                    {Prescriptionordertabletable}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Prescriptionordertable\n","import React, { Component } from 'react';\nimport Prescriptionordertable from './Prescriptionordertable'\nimport {  Select, Input } from 'antd';\nimport './Prescriptionorder.scss'\nimport moment from 'moment'\nimport * as ApiGithub from '../../API/ApiGithub'\n\nclass Prescriptionorderlayout extends Component {\n    state = {\n        classParser: { \"mappings\": [] },\n        class: \"全部\",\n        SelectMode: 0,\n        InputMode: null,\n    }\n    componentDidMount() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Prescription\");\n                parser.mappings = [{ \"key\": \"全部\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson Prescription OK \" + JSON.stringify(parser))\n                this.setState({\n                    classParser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    onChangeClass = (value) => {\n        this.setState({ class: value })\n    }\n\n    handleChange = (value) => {\n        this.setState({ SelectMode: value })\n    }\n\n    onChangeinputKey = (event) => {\n        this.setState({ InputMode: event.target.value })\n    }\n\n    ControlBarRender() {\n        const { Option } = Select;\n        return (\n\n            <div class=\"searchBar\" style={{ display: \"grid\", gridTemplateColumns: \"140px 140px auto\", gridColumnGap: \"10px\", marginBottom: \"5px\" }}>\n                <Select defaultValue={this.state.class} style={{ width: 140 }} onChange={this.onChangeClass}>\n                    {this.state.classParser.mappings.map((mapping, index) => {\n                        return <Option value={mapping.key}>{mapping.key}</Option>\n                    })}\n                </Select>\n                <Select defaultValue={this.state.SelectMode} style={{ width: 140 }} onChange={this.handleChange}>\n                    <Option value={0}>全</Option>\n                    <Option value={1}>生效中</Option>\n                    <Option value={2}>失效/已結束/取消</Option>\n                </Select>\n                <Input id=\"prescriptionorderinput\" placeholder=\"輸入藥囑關鍵字\" onChange={this.onChangeinputKey} />\n            </div >\n        );\n    }\n\n    parseClass = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部\"] = []\n\n        inputs.forEach(input => {\n            let content = input.UDGNAME;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部\"].push(input)\n        });\n        return allResult;\n    }\n\n    onClickSearch = () => {\n        const { UDORDER0 } = this.props\n        //const UDORDER0 = [{\"UDDCPRSN\":\"        \",\"UDDURAT\":\"001\",\"UDSUMQTY\":\"1\",\"UDDRGNAM\":\"Cefotaxime (Claforan)*inj 500 mg\",\"UDGNAME\":\"Cefotaxime (Claforan)*inj 500 mg\",\"UDORSIGN\":\"DOC3964C\",\"UDSELF\":\"N\",\"UDSTATUS\":\"60\",\"UDPERNAM\":\"李成彧　　\",\"UDENDDT\":\"2019-08-13-15.00.00.000000\",\"UDDCPNAM\":\"　　　　　\",\"UDDOSAGE\":\"60      \",\"UDORDSEQ\":\"0011\",\"UDBGNDT\":\"2019-08-12-13.04.00.000000\",\"UDDRGNO\":\"01325\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"MG    \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"Claforan iv * inj 500 mg        \",\"UDFREQN\":\"STAT    \"},{\"UDDCPRSN\":\"DOC3941E\",\"UDDURAT\":\"014\",\"UDSUMQTY\":\"2\",\"UDDRGNAM\":\"Heparin sod \\\"CCP#* inj 5000u/5ml\",\"UDGNAME\":\"Heparin sod \\\"CCP#* inj 5000u/5ml\",\"UDORSIGN\":\"DOC3934E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"陳裕璇　　\",\"UDENDDT\":\"2019-08-19-11.45.00.000000\",\"UDDCPNAM\":\"何正尹　　\",\"UDDOSAGE\":\"X1      \",\"UDORDSEQ\":\"0025\",\"UDBGNDT\":\"2019-08-12-19.38.00.000000\",\"UDDRGNO\":\"00607\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"VL    \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"Agglutex #* inj 1000 u/ml 5 ml  \",\"UDFREQN\":\"QD      \"},{\"UDDCPRSN\":\"DOC3941E\",\"UDDURAT\":\"001\",\"UDSUMQTY\":\"0\",\"UDDRGNAM\":\"Immunoglobulin *inj 60mg/ml 50ml\",\"UDGNAME\":\"Immunoglobulin *inj 60mg/ml 50ml\",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-14-10.20.00.000000\",\"UDDCPNAM\":\"何正尹　　\",\"UDDOSAGE\":\"1       \",\"UDORDSEQ\":\"0054\",\"UDBGNDT\":\"2019-08-14-08.51.00.000000\",\"UDDRGNO\":\"03852\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"BOT   \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"HM.imm.globulin *inj60mg/ml 50ml\",\"UDFREQN\":\"STAT    \"},{\"UDDCPRSN\":\"DOC3941E\",\"UDDURAT\":\"007\",\"UDSUMQTY\":\"110\",\"UDDRGNAM\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDGNAME\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-16-10.44.00.000000\",\"UDDCPNAM\":\"何正尹　　\",\"UDDOSAGE\":\"55      \",\"UDORDSEQ\":\"0055\",\"UDBGNDT\":\"2019-08-14-09.17.00.000000\",\"UDDRGNO\":\"02145\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\"                                                                                                    \",\"UDDUNIT\":\"CC    \",\"UDROUTE\":\"IVD\",\"UDRPNAME\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDFREQN\":\"QD-TPN  \"},{\"UDDCPRSN\":\"DOC3915L\",\"UDDURAT\":\"005\",\"UDSUMQTY\":\"4\",\"UDDRGNAM\":\"Fluconazole inj 100 mg/50 ml    \",\"UDGNAME\":\"Fluconazole inj 100 mg/50 ml    \",\"UDORSIGN\":\"DOC3964C\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"李成彧　　\",\"UDENDDT\":\"2019-08-18-08.57.00.000000\",\"UDDCPNAM\":\"李苡萱　　\",\"UDDOSAGE\":\"6.6     \",\"UDORDSEQ\":\"0053\",\"UDBGNDT\":\"2019-08-14-10.07.00.000000\",\"UDDRGNO\":\"01885\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"MG    \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"Diflucan iv inj 100 mg/50 ml    \",\"UDFREQN\":\"QPM     \"},{\"UDDCPRSN\":\"        \",\"UDDURAT\":\"001\",\"UDSUMQTY\":\"1\",\"UDDRGNAM\":\"Dextrose inj 10% 500 ml         \",\"UDGNAME\":\"Dextrose inj 10% 500 ml         \",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"60\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-15-15.00.00.000000\",\"UDDCPNAM\":\"　　　　　\",\"UDDOSAGE\":\"30      \",\"UDORDSEQ\":\"0060\",\"UDBGNDT\":\"2019-08-14-10.48.00.000000\",\"UDDRGNO\":\"80051\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"CC    \",\"UDROUTE\":\"IVD\",\"UDRPNAME\":\"Dextrose inj 10% 500 ml \\\"YF\\\"    \",\"UDFREQN\":\"ST      \"},{\"UDDCPRSN\":\"        \",\"UDDURAT\":\"001\",\"UDSUMQTY\":\"0\",\"UDDRGNAM\":\"Dopamine #* inj 200 mg/5 ml     \",\"UDGNAME\":\"Dopamine #* inj 200 mg/5 ml     \",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"60\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-15-15.00.00.000000\",\"UDDCPNAM\":\"　　　　　\",\"UDDOSAGE\":\"20      \",\"UDORDSEQ\":\"0058\",\"UDBGNDT\":\"2019-08-14-10.48.00.000000\",\"UDDRGNO\":\"02220\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"MG    \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"Dopamin #* inj 200 mg/5 ml \\\"VPP\\\"\",\"UDFREQN\":\"ST      \"},{\"UDDCPRSN\":\"DOC3941E\",\"UDDURAT\":\"014\",\"UDSUMQTY\":\"5\",\"UDDRGNAM\":\"Dextrose inj 10% 500 ml         \",\"UDGNAME\":\"Dextrose inj 10% 500 ml         \",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-19-11.45.00.000000\",\"UDDCPNAM\":\"何正尹　　\",\"UDDOSAGE\":\"30      \",\"UDORDSEQ\":\"0059\",\"UDBGNDT\":\"2019-08-14-10.48.00.000000\",\"UDDRGNO\":\"80051\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"CC    \",\"UDROUTE\":\"IVD\",\"UDRPNAME\":\"Dextrose inj 10% 500 ml \\\"YF\\\"    \",\"UDFREQN\":\"QD      \"},{\"UDDCPRSN\":\"        \",\"UDDURAT\":\"001\",\"UDSUMQTY\":\"1\",\"UDDRGNAM\":\"Salbutamol inh. sol 5 mg/2.5 ml \",\"UDGNAME\":\"Salbutamol inh. sol 5 mg/2.5 ml \",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"60\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-15-15.00.00.000000\",\"UDDCPNAM\":\"　　　　　\",\"UDDOSAGE\":\"1       \",\"UDORDSEQ\":\"0061\",\"UDBGNDT\":\"2019-08-14-13.51.00.000000\",\"UDDRGNO\":\"03120\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"AMP   \",\"UDROUTE\":\"IH \",\"UDRPNAME\":\"Ventolin inh. sol 5 mg/2.5 ml   \",\"UDFREQN\":\"ST      \"}]\n        const parseClass = this.parseClass\n\n        let ListData = [];\n        const activeList = UDORDER0.filter(element => element.UDSTATUS === \"80\")\n        console.log(\"activeList \" + JSON.stringify(activeList));\n\n        let clusteredData = {}\n        if (this.state.classParser !== undefined) {\n            clusteredData = parseClass(activeList, this.state.classParser)\n        }\n        console.log(\"clusteredData \" + JSON.stringify(clusteredData));\n\n        //filter data by selected class\n        let filteredData = clusteredData[this.state.class];\n\n        ListData = this.SortDataList(filteredData)\n        return ListData\n    }\n\n    SortDataList = (DataList) => {\n        const { PickerDateRange } = this.props\n        const { InputMode, SelectMode } = this.state\n        console.log(moment(PickerDateRange[0]).format('YYYYMMDD'), moment(PickerDateRange[1]).format('YYYYMMDD'))\n\n        if (SelectMode !== 0) {\n            console.log(SelectMode)\n            /*\n            預設\n            全部 SelectMode == 0\n            已生效 SelectMode == 1, < 現在時間 <\n            失效 SelectMode == 2, < 現在時間\n            */\n            DataList = DataList.filter(data => {\n                const createST = moment(data.UDBGNDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n                const createET = moment(data.UDENDDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n                const nowDate = moment().valueOf()\n\n                switch (SelectMode) {\n                    case 1:\n                        return createST <= nowDate && nowDate <= createET\n                    case 2:\n                        // console.log(createET, nowDate)\n                        return createET < nowDate\n                    default: return null;\n                }\n            })\n        }\n\n        if (InputMode !== null) {\n            // console.log(InputMode)\n            DataList = DataList.filter(data => {\n                return data.UDGNAME.match(InputMode) !== null || data.UDRPNAME.match(InputMode) !== null\n            })\n        }\n\n        var DataFormat = []\n\n        const st = PickerDateRange[0]\n        const et = PickerDateRange[1] + (24 * 60 * 60 * 1000)\n\n        DataList.forEach(element => {\n            const time = moment(element.UDBGNDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n            console.log(time)\n            if (st <= time && time <= et) {\n                DataFormat.push(element)\n            }\n        })\n        return DataFormat\n    }\n\n    render() {\n        const { searchbar, caseinfo } = this.props\n        const { SelectMode } = this.state\n\n        const filterData = this.onClickSearch()\n\n        return (\n            <div>\n                <div className={searchbar ? 'PrescriptionOrderSearchBar' : 'PrescriptionOrderNonSearchBar'}>\n                    <t1>Prescription Order</t1>\n                </div>\n                {searchbar ? this.ControlBarRender() : null}\n                <Prescriptionordertable caseinfo={caseinfo} UDORDER0={filterData} SelectMode={SelectMode} ></Prescriptionordertable>\n            </div>\n        );\n    }\n}\n\nexport default Prescriptionorderlayout\n","import React, { Component } from 'react';\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Treatmentordertablecell.scss'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Treatmentordertablecell extends Component {\n    state = {\n        onEdit: false,\n        onMove: false,\n        remark: this.props.info.remark,\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { info } = this.props\n        ApiProvider.getOneRemark(this.props.caseinfo.TRANSINID, info.ORDSEQNO, \"treatment\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    on_Mouse() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: true\n                }\n            )\n        }\n    }\n    on_leave() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: false\n                }\n            )\n        }\n    }\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    render() {\n        const { info } = this.props\n        // console.log(info)\n        const Name = info.ORPROCED\n        const QD = info.ORFREQN\n        const Status = info.ORSTATUS\n        const ST = moment(info.ORBGNDT.toString(), 'YYYY-MM-DD').format(\"MM/DD\")\n        const ET = moment(info.ORENDDT.toString(), 'YYYY-MM-DD').format(\"MM/DD\")\n\n\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": Name,\n            \"remarkId\": info.ORDSEQNO,\n            \"remark\": this.state.remark,\n            \"transinId\": this.props.caseinfo.TRANSINID,\n            \"type\": \"treatment\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <div onMouseMove={() => this.on_Mouse()} onMouseLeave={() => this.on_leave()} className=\"treatmentordercell\">\n                <div style={{ display: \"grid\", gridTemplateRows: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"100px\" : \"80px 50px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 3fr 1fr 1fr\" }}>\n                        <t3 className='cellstyle'>{ST}</t3>\n                        <t3 className='cellstyle'>{ET}</t3>\n                        <t3 className='cellstyle'>{Name}</t3>\n                        <t3 className='cellstyle'>{QD}</t3>\n                        <t3 className='cellstyle'>{Status}</t3>\n                    </div>\n                    <t3 className='cellstyle' style={{ display: [this.state.remark === undefined || this.state.remark === \"\" ? \"none\" : \"\"] }}>{this.state.remark}</t3>\n                    <div style={this.state.onMove ? { display: this.state.powerLogin == 1 ? \"flex\" : \"none\", justifyContent: \"center\", alignItems: \"center\", position: 'absolute', right: 0, height: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"100px\" : \"130px\"], background: \"white\", width: \"77px\", border: \"rgba(238,238,238,1) 1px solid\" } : { display: \"none\" }}>\n                        <div onClick={() => this.Edit_state()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }}>\n                            <img src={chooseedit} alt='chooseedit'></img>\n                        </div>\n                    </div>\n                </div>\n                <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            </div>\n        );\n    }\n}\nexport default Treatmentordertablecell\n","import React, { Component } from 'react';\nimport Treatmentordertablecell from './Treatmentordertablecell'\nimport './Treatmentordertable.scss'\n\nclass Treatmentordertable extends Component {\n    render() {\n        const { TRTMNT01, caseinfo, PickerDate } = this.props\n\n        if (TRTMNT01 === null || TRTMNT01 === undefined) {\n            return null\n        }\n        const DataList = TRTMNT01 //SortDataList(TRTMNT01, PickerDate)\n        const Treatmentordertablecelllist = DataList.map(\n            (info, index) => <Treatmentordertablecell caseinfo={caseinfo} key={index} info={info}></Treatmentordertablecell>\n\n        )\n        const titlearray = ['開始日期', '結束日期', '處置名稱', '頻次', '狀態']\n        function titlecell(array) {\n            const result = array.map(function (info, index) {\n                return (\n                    <t3 className=\"treatmentordertablecellstyle\" key={index}>{info}</t3>\n                );\n            })\n            return result\n        }\n        return (\n            <div>\n                <div className='treatmentordertable'>\n                    {titlecell(titlearray)}\n                </div>\n                <div style={{ maxHeight: \"400px\", overflow: \"auto\" }}>\n                    {Treatmentordertablecelllist}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Treatmentordertable\n","import React, { Component } from 'react';\nimport Treatmentordertable from './Treatmentordertable'\nimport {  Select, Input } from 'antd';\nimport * as ApiGithub from '../../API/ApiGithub'\nimport moment from 'moment'\nimport './Treatmentorder.scss'\n\nclass Treatmentorderlayout extends Component {\n    state = {\n        // PickerDateRange: [moment().subtract(6, 'days'), moment()],\n        parser: { \"mappings\": [] },\n        DateRangeMode: {},\n        class: \"全部\",\n        SelectMode: 0,\n        InputMode: '',\n    }\n\n    componentDidMount() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Treatment\");\n                parser.mappings = [{ \"key\": \"全部\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson Treatment OK \" + JSON.stringify(parser))\n                this.setState({\n                    parser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    // onChange = (date, dateString) => {\n    //     this.setState({\n    //         PickerDateRange: date\n    //     })\n    // }\n\n    onChangeClass = (value) => {\n        this.setState({ class: value })\n    }\n\n    handleChange = (value) => {\n        this.setState({ SelectMode: value })\n    }\n\n    onChangeinputKey = (event) => {\n        this.setState({ InputMode: event.target.value })\n    }\n\n    Search_bar = () => {\n        // const { RangePicker } = DatePicker;\n        const { Option } = Select;\n\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 140px auto\", gridColumnGap: \"10px\", marginBottom: \"5px\" }}>\n                {/* <RangePicker defaultValue={this.state.PickerDateRange} format={\"YYYY/MM/DD\"}\n                    locale={\"zh_TW\"} placeholder={[\"請輸入日期\", \"請輸入日期\"]} onChange={this.onChange} allowClear={false} /> */}\n                <Select defaultValue={this.state.class} style={{ width: 140 }} onChange={this.onChangeClass}>\n                    {this.state.parser.mappings.map((mapping, index) => {\n                        return <Option key={index} value={mapping.key}>{mapping.key}</Option>\n                    })}\n                </Select>\n                <Select defaultValue={0} style={{ width: 140 }} onChange={this.handleChange}>\n                    <Option value={0}>全部</Option>\n                    <Option value={1}>生效中</Option>\n                    <Option value={2}>失效/已結束/取消</Option>\n                </Select>\n                <Input placeholder=\"輸入藥囑關鍵字\" value={this.state.InputMode} onChange={this.onChangeinputKey} />\n            </div >\n        );\n\n    }\n\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部\"] = []\n\n        inputs.forEach(input => {\n            let content = input.ORPROCED;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部\"].push(input)\n        });\n        return allResult;\n    }\n\n    onClickSearch = () => {\n        const { TRTMNT01 } = this.props\n        const parse = this.parse;\n\n        const activeList = TRTMNT01.filter(element => element.ORSTATUS === \"80\")\n        console.log(\"activeList \" + JSON.stringify(activeList));\n\n        let clusteredData = {}\n        if (this.state.parser !== undefined) {\n            clusteredData = parse(activeList, this.state.parser)\n        }\n\n        //filter data by selected class\n        let filteredData = clusteredData[this.state.class];\n\n        const ListData = this.SortDataList(filteredData)\n\n        return ListData\n    }\n\n    SortDataList = (DataList) => {\n        // console.log(JSON.stringify(DataList))\n        const { PickerDateRange } = this.props\n        const { InputMode, SelectMode } = this.state\n\n        if (SelectMode !== 0) {\n            /*\n            預設\n            全部 SelectMode == 0\n            已生效 SelectMode == 1, < 現在時間 <\n            失效 SelectMode == 2, < 現在時間\n            */\n            DataList = DataList.filter(data => {\n                const createST = moment(data.ORBGNDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n                const createET = moment(data.ORENDDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n                const nowDate = moment().valueOf()\n\n                switch (SelectMode) {\n                    case 1:\n                        return createST <= nowDate && nowDate <= createET\n               \n                    case 2:\n                        return createET < nowDate\n              \n                    default: return null;\n                }\n            })\n        }\n\n        if (InputMode !== '') {\n            DataList = DataList.filter(data => {\n                return data.ORPROCED.match(InputMode) !== null\n            })\n        }\n\n        var DataFormat = []\n\n        const st = PickerDateRange[0]\n        const et = PickerDateRange[1] + (24 * 60 * 60 * 1000)\n\n        DataList.forEach(element => {\n        \tconsole.log(element)\n            const time = moment(element.ORBGNDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n            console.log(time)\n            if (st <= time && time <= et) {\n                DataFormat.push(element)\n            }\n        })\n        return DataFormat\n    }\n\n    render() {\n        const { searchbar, caseinfo } = this.props\n\n        const filterData = this.onClickSearch()\n\n        return (\n            <div>\n                <div className={searchbar ? \"order_style\" : \"crossection_style\"}>\n                    <t1>Treatment Order</t1>\n                </div>\n                {searchbar ? this.Search_bar() : null}\n                <Treatmentordertable caseinfo={caseinfo} TRTMNT01={filterData} ></Treatmentordertable>\n            </div>\n        );\n    }\n}\n\nexport default Treatmentorderlayout\n","import React, { Component } from 'react';\nimport detaillogo from '../Image/svg/details.svg'\nimport { Tooltip } from 'antd';\n\nclass Notecell extends Component {\n    \n    updatetime_format(updatetime){\n        function monthformat(month){\n            return month + 1\n        }\n        return new Date(updatetime).getFullYear() + \"-\" + monthformat(new Date(updatetime).getMonth()) + \"-\" +new Date(updatetime).getDate() + \" \" + new Date(updatetime).getHours() + \":\" + new Date(updatetime).getMinutes()\n    }\n    render() {\n        const { info } = this.props\n        const text = info.updatedoctor + \"醫師於\" + this.updatetime_format(info.updatetime) + \"更新\"   \n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"19fr 1fr\", minHeight: \"50px\" }}>\n                <div style={{ wordBreak: \"break-all\", fontSize: \"1.3rem\", display: \"flex\", alignItems: \"center\" }}>{info.data}</div>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <Tooltip placement=\"right\" title={text}>\n                        <div>\n                            <img src={detaillogo} alt='detaillogo'></img>\n                        </div>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Notecell","import React, { Component } from 'react';\nimport Notecell from './Notecell'\nimport editlogo from '../Image/svg/Edit.svg'\nimport { Input, Button } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider';\nimport moment from 'moment';\nclass Note extends Component {\n    state = {\n        powerLogin: 0,\n        EditMode: false,\n        inputContent: '',\n        noteData: [],\n        PickerDate: moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.queryNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.HISID, this.state.PickerDate)\n    }\n    componentDidUpdate() {\n        const propDate = this.props.PickerDate\n        const stateDate = this.state.PickerDate\n        if (propDate !== stateDate) {\n            this.setState({ PickerDate: propDate })\n            this.queryNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.HISID, propDate)\n        }\n    }\n    queryNotice(TRANSID, HISID, pickerdate) {\n        const st = moment(moment(pickerdate).format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n        const et = moment(moment(pickerdate).format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf() + (24 * 60 * 60 * 1000)\n        console.log(TRANSID, HISID, st, et)\n        console.log(moment(st).format(\"YYYY/MM/DD\"))\n        console.log(moment(et).format(\"YYYY/MM/DD\"))\n        ApiProvider.getOnePatientNotice(TRANSID, HISID, st, et)\n            .then(result => {\n                console.log(\"getOnePatientNotice OK \" + JSON.stringify(result));\n                this.setState({\n                    noteData: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientNotice NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n    // queryOnePatientNotice() {\n    //     ApiProvider.getOnePatientNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID)\n    //         .then(data => {\n    //             console.log(\" OK \" + JSON.stringify(data))\n    //             this.setState({ noteData: data.data })\n    //         }).catch(err => { })\n    // }\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString()\n        const doc = sessionStorage.getItem('user')\n        ApiProvider.createNotice(this.props.caseinfo.HISID, this.state.inputContent, timeNowStr, this.props.caseinfo.TRANSINID, doc)\n            .then(data => {\n                this.queryNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID, this.props.PickerDate)\n            })\n            .catch(err => {\n                console.log(\" Err \" + JSON.stringify(err))\n            })\n        this.setState(\n            {\n                EditMode: false,\n                inputContent: undefined\n            }\n        )\n    }\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    EditControl() {\n        const edit = this.props.editstatus\n        if (edit) {\n            return (\n                <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                    <img src={editlogo} alt=\"editlogo\" />\n                </div>\n            );\n        }\n        return null\n    }\n    render() {\n        const List = this.state.noteData\n        console.log(List)\n        const notelist = List.map((info, index) => {\n            const time = moment(info.time, \"YYYY-MM-DD[T]HH:mm:ss.000+0000\").format('YYYY-MM-DD HH:mm:ss')\n            const localTime = moment.utc(time).toDate()\n            const infoObj = {\n                updatedictor: info.doc,\n                updatetime: moment(localTime).format(\"YYYY/MM/DD HH:mm:ss\"),\n                data: info.context\n            }\n            return <Notecell key={index} info={infoObj}></Notecell>\n        })\n        const EditButton = this.EditControl()\n        return (\n            <div style={{ marginTop: \"10px\", borderRadius: \"4px\" }}>\n                <div style={{ height: \"35px\", backgroundColor: \"#71b0e46e\", padding: \"0px 5px\", display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{this.props.title}</t2>\n                    {EditButton}\n                </div>\n                <div style={{ height: \"300px\" }}>\n                    <div style={{ maxHeight: \"300px\", overflow: \"auto\" }}>\n                        {notelist}\n                    </div>\n                    <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                        <div style={{ padding: \"5px 10px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <Input placeholder=\"輸入當日內容\" value={this.state.inputContent} onChange={this.onInputChange.bind(this)}></Input>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                                <Button onClick={() => this.onClickCancel()}>取消</Button>\n                                <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default Note\n","import React, { Component } from 'react';\nimport Schedule_event_list from '../../Module/Schedule_event'\nimport Note from '../../Module/Note'\nclass CrossectionSchedule extends Component {\n    render() {\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\" }}>\n                <Schedule_event_list source={this.props.source} PickerDate={this.props.PickerDate} title=\"排程\" caseinfo={this.props.caseinfo} editstatus={this.props.editstatus}></Schedule_event_list>\n                <Note title=\"當日評論Comment\" PickerDate={this.props.PickerDate} caseinfo={this.props.caseinfo} data={this.props.noticeData} editstatus={this.props.editstatus}></Note>\n            </div>\n        );\n    }\n}\n\nexport default CrossectionSchedule;\n","import React, { Component } from 'react';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport Wardinfousercheckbox from '../../Wardview/Wardunfousercheckbox';\n\nclass CrosssectionTodo extends Component {\n    state = {\n        todoList: []\n    }\n\n    componentDidMount() {\n        this.queryTodo();\n    }\n\n    queryTodo() {\n        ApiProvider.getOneTodo(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID)\n            .then(result => {\n                console.log(\"getOneTodo OK \" + JSON.stringify(result.data));\n                this.setState({\n                    todoList: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getOneTodo NG \" + JSON.stringify(err));\n            });\n    }\n\n    renderTodoItem() {\n        if (this.state.todoList.length === 0) {\n            return (\n                <div>沒有待辦事項</div>\n            )\n        } else {\n            return this.state.todoList.map((item, index) => {\n                if (item.type === \"未完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={false}></Wardinfousercheckbox>);\n                } else {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={true}></Wardinfousercheckbox>);\n                }\n\n            });\n        }\n    }\n\n    render() {\n        const renderTodoItem = this.renderTodoItem.bind(this);\n        return (\n            <div>\n                <div style={{ display: \"flex\", alignItems: \"center\", padding: \"0px 5px\", backgroundColor: \"#cccccc\", height: \"50px\" }}>\n                    <t2>To Do List</t2>\n                </div>\n                {renderTodoItem()}\n            </div>\n        );\n    }\n}\n\nexport default CrosssectionTodo\n","import React, { Component } from 'react';\nimport Vitalsign from './Vitalsign';\nimport Controlbar from '../Controlbar';\nimport CrossectionIo from './Crossection_io'\nimport Labviewlayout from './Labview'\nimport Nonlabviewlayout from './Nonlabview'\nimport GAS from './GAS'\nimport RTbreathe from './RTbreathe'\nimport Prescriptionorderlayout from '../Prescriptionorder/Prescriptionorder'\nimport Treatmentorderlayout from '../Treatmentorder/Treatmentorder'\nimport CrossectionSchedule from './Crosssectionschedule'\nimport CrosssectionTodo from './Crosssection_todo'\nimport './Crosssectionlayout.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass Crosssectionlayout extends Component {\n    state = {\n        Cross_item: [0, 1, 2, 3, 4, 5],\n        RESDGLU1: [],\n        RESLAB02: [],\n        RESLAB01: [],\n        RESDBGAS: [],\n        RESLAB0C: [],\n        RESSECT: [],\n        UDORDER0: [],\n        TRTMNTQ1: [],\n\n        PickerDate: moment(moment().format('YYYYMMDD')).valueOf(),\n\n        SelectInterval: 1,\n\n        preCID: null,\n        preHID: null\n    }\n    componentDidMount() {\n        const CID = this.props.caseinfo.CASEID\n        const HID = this.props.caseinfo.HISID\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        this.setState({\n            preCID: CID,\n            preHID: HID\n        })\n        this.NIS_API_IO(this.state.PickerDate, CID, HID, TRDT)\n    }\n    componentDidUpdate() {\n        const CID = this.props.caseinfo.CASEID\n        const HID = this.props.caseinfo.HISID\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        const { preCID, preHID } = this.state\n        if (preCID !== CID || preHID !== HID) {\n            this.setState({\n                preCID: CID,\n                preHID: HID\n            })\n            this.NIS_API_IO(this.state.PickerDate, CID, HID, TRDT)\n        }\n    }\n    NIS_API_IO(Datetime, CID, HID, TRDT) {\n        function selectMonthInterval(Datetime) {\n            const timestampInterval = new Date().getTime() - Datetime\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        const TransinDate = moment(TRDT).format(\"YYYY-MM-DD\")\n        const MonthInterval = selectMonthInterval(Datetime)\n        ApiProvider.getStoredProcedureRESDGLU1(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESDGLU1: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDGLU1 NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESLAB02(HID, TransinDate)\n            .then(data => {\n                this.setState({ RESLAB02: data.data })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESLAB02 NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESLAB01(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESLAB01: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESLAB01 NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESDBGAS(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESDBGAS: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDBGAS NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESLAB0C(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESLAB0C: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESLAB0C NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESSECT(HID, MonthInterval, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                this.setState({\n                    RESSECT: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESSECT NG \" + JSON.stringify(err))\n            });\n\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                this.setState({\n                    UDORDER0: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureUDORDER0 NG \" + JSON.stringify(err))\n            });\n        ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => {\n                this.setState({\n                    TRTMNTQ1: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureTRTMNTQ1 NG \" + JSON.stringify(err))\n            });\n    }\n\n    callbackFunction = (item_array) => {\n        this.setState({ Cross_item: item_array })\n    }\n\n    callbackDateFunction = (PickerTimeStamp) => {\n        console.log(PickerTimeStamp)\n        this.setState({ PickerDate: PickerTimeStamp })\n    }\n\n    display_item(number) {\n        const item = this.state.Cross_item\n        var filter = item.some(function (item, index, array) {\n            return item === number\n        });\n        return filter\n    }\n    render() {\n        const crosssectioncontrollist = [\n            {\n                \"name\": \"生命徵象/輸出入\",\n                \"scrollpoint\": \"vitalsignIO\"\n            },\n            {\n                \"name\": \"檢驗結果\",\n                \"scrollpoint\": \"lab\"\n            },\n            {\n                \"name\": \"呼吸評估\",\n                \"scrollpoint\": \"rt\"\n            },\n            {\n                \"name\": \"醫藥囑\",\n                \"scrollpoint\": \"order\"\n            },\n            {\n                \"name\": \"行事曆及註記\",\n                \"scrollpoint\": \"schedule\"\n            }\n        ]\n        const { caseinfo } = this.props\n        const TimeStampPickerDate = this.state.PickerDate\n        const endTime = TimeStampPickerDate + (31 * 60 * 60 * 1000)\n        const startTime = endTime - (3 * 24 * 60 * 60 * 1000)\n        const PickerDateRange = [TimeStampPickerDate - (6 * 24 * 60 * 60 * 1000), TimeStampPickerDate]\n        // console.log(moment(PickerDateRange[0]).format('YYYYMMDD'), moment(PickerDateRange[1]).format('YYYYMMDD'))\n\n        return (\n            <div>\n                <Controlbar caseinfo={caseinfo} PickerDate={this.state.PickerDate} parentDateCallback={this.callbackDateFunction} parentCallback={this.callbackFunction} btnlist={crosssectioncontrollist} item_array={this.state.Cross_item}></Controlbar>\n                <div id=\"crossection\" className='crossectioncontent'>\n                    <div id={\"vitalsignIO\"} style={this.display_item(0) ? { display: \"grid\", gridTemplateColumns: \"2fr 1fr\", gridGap: \"10px\", marginBottom: \"10px\" } : { display: \"none\" }}>\n                        <Vitalsign PickerDate={this.state.PickerDate} caseinfo={caseinfo}></Vitalsign>\n                        <CrossectionIo PickerDate={this.state.PickerDate} caseinfo={caseinfo} title=\"I/O\"></CrossectionIo>\n                    </div>\n                    <div id={\"lab\"} style={this.display_item(1) ? { display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" } : { display: \"none\" }}>\n                        <Labviewlayout PickerDate={this.state.PickerDate} caseinfo={caseinfo} RESLAB01={this.state.RESLAB01} RESLAB02={this.state.RESLAB02} RESDBGAS={this.state.RESDBGAS} RESLAB0C={this.state.RESLAB0C} RESDGLU1={this.state.RESDGLU1} RESSECT={this.state.RESSECT}></Labviewlayout>\n                        <Nonlabviewlayout caseinfo={caseinfo} StartTime={startTime} EndTime={endTime}></Nonlabviewlayout>\n                    </div>\n                    <div id={\"rt\"} style={this.display_item(2) ? { display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" } : { display: \"none\" }}>\n                        <GAS caseinfo={caseinfo} PickerDateRange={PickerDateRange} searchbar={false}></GAS>\n                        <RTbreathe caseinfo={caseinfo} PickerDateRange={PickerDateRange} searchbar={false}></RTbreathe>\n                    </div>\n                    <div id={\"order\"} style={this.display_item(3) ? { display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" } : { display: \"none\" }}>\n                        <Prescriptionorderlayout UDORDER0={this.state.UDORDER0} caseinfo={caseinfo} searchbar={false} PickerDateRange={PickerDateRange}></Prescriptionorderlayout>\n                        <Treatmentorderlayout TRTMNT01={this.state.TRTMNTQ1} caseinfo={caseinfo} searchbar={false} PickerDateRange={PickerDateRange}></Treatmentorderlayout>\n                    </div>\n                    <div id={\"schedule\"} style={this.display_item(4) ? null : { display: \"none\" }}>\n                        <CrossectionSchedule source={1} PickerDate={this.state.PickerDate} editstatus={false} caseinfo={caseinfo}></CrossectionSchedule>\n                    </div>\n                    <div style={this.display_item(5) ? null : { display: \"none\" }}>\n                        <CrosssectionTodo caseinfo={caseinfo} ></CrosssectionTodo>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Crosssectionlayout;\n","import React, { Component } from 'react';\nimport IOpage from '../../Module/iopage'\n\nclass Inoutonchronic extends Component {\n    render() {\n        const { title, caseinfo, IntervalStatus, PickerDate } = this.props\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <t1>{title}</t1>\n                <IOpage caseinfo={caseinfo} Status={\"Chronic\"} IntervalStatus={IntervalStatus} PickerDate={PickerDate}></IOpage>\n            </div>\n        );\n    }\n}\n\nexport default Inoutonchronic","import React, { Component } from 'react'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport { Spin, Icon } from 'antd';\nimport moment from 'moment'\n\nclass Chronictablecelltooltip extends Component {\n    state = {\n        preStartTimeStamp: null,\n        loading: true,\n        resultStr: \"--\"\n    }\n    componentDidUpdate() {\n        const { startTimeStamp } = this.props\n        const { preStartTimeStamp } = this.state\n        if (startTimeStamp !== preStartTimeStamp) {\n            console.log(\"Chronictablecelltooltip componentDidUpdate\")\n        }\n    }\n    componentDidMount() {\n        const { startTimeStamp } = this.props\n        this.setState({ preStartTimeStamp: startTimeStamp })\n        console.log(\"Chronictablecelltooltip componentDidMount\")\n        this.apiGet()\n    }\n    apiGet() {\n        const { tooltipelement, caseinfo } = this.props\n        const ORMM = tooltipelement.ORMM.toString().trim()\n        const ORDSEQNO = tooltipelement.ORDSEQNO.toString().trim()\n        //RESDISP\n        ApiProvider.getStoredProcedureRESDISP(caseinfo.HISID, ORMM, caseinfo.CASEID, ORDSEQNO)\n        .then(data => {\n            console.log(\"getStoredProcedureRESDISP OK \" + JSON.stringify(data.data))\n            //const fakeData = [{\"RECNO\":\"1\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"正式報告\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"2\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"                                臺北榮民總醫院病理檢驗部報告\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"3\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  病患資訊：         新生兒加護病房 - 8 張恩慈之男 4599819-4 男性 3天大 NBD\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"4\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  申請序號 / 工作號：     0APKHTG/2502091284       開立時間：    20200207  0809\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"5\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  開醫囑者：         DOC3915L 李苡萱         簽收時間：    20200209  1850\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"6\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  報告人 ：          LABE1523 林宜慧         報告時間：    20200209  1850\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"7\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  檢體 ：           Blood\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"8\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  醫囑名稱：         Crea,ALT,Mg,NA,K,P,\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"9\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"   項目     H/L  結果   前次結果 單位     參考值\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"10\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"   BUN            ()\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"11\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"   Na        145  ()   mmol/L   136~145 mmol/L\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"12\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"   K         4.0   ()   mmol/L   3.5~5.1 mmol/L\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"}]\n\n            //parse content\n            const parsers = this.props.summaryParse\n            const parser  = data.data.length > 0 ? this.select_parser(\"Chronic table\", data.data[0], parsers) : undefined\n            \n            if(parser !== undefined) {\n                //concat all content\n                let allContent = \"\"\n                //fakeData.forEach(item => {\n                data.data.forEach(item => {\n                    allContent = `${allContent} \"\\n\" ${item.CONTENT}`;\n                });\n                //console.log(\"allContent\" + JSON.stringify(allContent))\n\n                const result = this.parse(allContent, parser)\n                //console.log(\"result\" + JSON.stringify(result))\n\n                const resultStr = this.summerize(result, parser)\n                //console.log(\"resultStr\" + JSON.stringify(resultStr))\n\n                this.setState({resultStr: resultStr})\n            }\n\n            this.setState({loading: false})\n        })\n        .catch(err => {\n            console.log(\"getStoredProcedureRESDISP NG \" + JSON.stringify(err))\n            this.setState({loading: false})\n        })\n    }\n    select_parser = (parserName, input, parsers) => {\n        const inputBeginTime = moment(input.ORBGNDT, \"YYYY-MM-DD\").valueOf()\n        return parsers.find(x =>\n            parserName.match(x.parser_name)\n            && (!x.apply_condition.start_time || inputBeginTime >= x.apply_condition.start_time)\n        )\n    }\n    parse = (input, parser) => {\n        let mappings = parser.mappings\n        let result = {}\n        mappings.forEach(mapping => {\n            const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n            const match = input.match(re)\n            result[mapping.key] = match && match[mapping.position]\n        });\n        return result;\n    }\n    summerize = (kv_pairs, parser) => {\n        let summary_str = parser.summary\n        for (const key in kv_pairs) {\n            let match_replacer = summary_str.match(RegExp(\"\\\\[\" + key + \"(:(.*?))?\\\\]\"))\n            let replacer = \"\"\n            if (match_replacer && match_replacer.length === 3) {\n                replacer = match_replacer[2]\n            }\n            const match = summary_str.match(RegExp(\"\\\\[\" + key + \":(.*?)?\\\\]\"))\n            summary_str = summary_str.replace(match[0], match[0].replace(match[1], kv_pairs[key] || replacer))\n        }\n        return summary_str;\n    }\n    render() {\n        const { tooltipelement } = this.props\n        const { loading, resultStr } = this.state\n        const infoTime = tooltipelement.ORRCPTM.toString().trim()\n        const name = tooltipelement.ORPROCED.toString().trim()\n        const reportname = tooltipelement.ORPROCED.toString().trim() + tooltipelement.ORSPCN1.toString().trim()\n        const cellRenderData = [reportname, infoTime, resultStr]\n        const Cell = cellRenderData.map(function (value, index) {\n            if(loading) {\n                const antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n                return (\n                    <Spin key={index} indicator={antIcon} />\n                );\n            } else {\n                return (\n                    <div key={index} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"0px 5px\" }}>\n                        {value}\n                    </div>\n                );\n            }\n            \n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"300px 100px 200px\" }}>{Cell}</div>\n        );\n    }\n}\n\nexport default Chronictablecelltooltip","import React, { Component } from 'react'\nimport { Tooltip } from 'antd'\nimport moment from 'moment'\nimport Chronictablecelltooltip from './ChronicTableCellTooltipCell'\n\nclass Chronictablecell extends Component {\n    CellText() {\n        const { element, caseinfo, summaryParse } = this.props\n        const start = moment(element.StartTime).format(\"YYYY/MM/DD HH:mm:ss\")\n        const startTimeStamp = moment(element.StartTime).valueOf()\n        const end = moment(element.EndTime).format(\"HH:mm:ss\")\n        const title = [\"報告類別\", \"採檢時間\", \"檢驗數據\"]\n        const titleCell = title.map(function (value, index) {\n            return (\n                <div key={index} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"0px 5px\" }}>\n                    {value}\n                </div>\n            );\n        })\n        const objectElement = element.element\n        const objectElementCell = objectElement.map(function (info, index, arr) {\n            return (\n                <Chronictablecelltooltip key={index} startTimeStamp={startTimeStamp} tooltipelement={info} caseinfo={caseinfo} summaryParse={summaryParse}></Chronictablecelltooltip>\n            );\n        })\n        return (\n            <div>\n                <div>{start}-{end}</div>\n                <div>檢驗檢查項目 : {element.title}類</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"300px 100px 200px\" }}>\n                    {titleCell}\n                </div>\n                {objectElementCell}\n            </div>\n        );\n    }\n    render() {\n        function valueNull(value) {\n            if (value === null || value === undefined || value === 0) {\n                return \"--\"\n            }\n            return value\n        }\n        const { element } = this.props\n        const TitleRender = this.CellText()\n        if (element.element.length === 0) {\n            return (\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>--</div>\n            );\n        }\n        return (\n            <Tooltip title={TitleRender} autoAdjustOverflow={true} overlayStyle={{ maxWidth: \"800px\" }}>\n                <div style={{ fontSize: \"16px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                    {valueNull(element.element.length)}\n                </div>\n            </Tooltip>\n        );\n    }\n}\n\nexport default Chronictablecell","import React, { Component } from 'react'\nimport moment from 'moment'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport * as ApiPronider from '../../API/ApiProvider'\nimport Chronictablecell from './ChronicTableCell'\n// import * as RSData from '../../Resource/RESSECT'\n\nclass Tableonchronic extends Component {\n    state = {\n        LabParse: [],\n        SummaryParse: [{apply_condition: \"\", mappings: []}],\n        RESSECT: [],\n        preHID: null\n    }\n\n    ApiGet(HID, monthly) {\n        ApiGithub.getGitHubJson(\"Chronic_Lab.json\")\n            .then(data => {\n                this.setState({\n                    LabParse: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiGithub.getGitHubJson(\"Summary.json\")\n            .then(data => {\n                this.setState({\n                    SummaryParse: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiPronider.getStoredProcedureRESSECT(HID, \"1\", \"ALL\", \"DOC3924B\")\n            .then(data => {\n                this.setState({ RESSECT: data.data })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        // this.setState({ RESSECT: RSData.data })\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDate, chronic_state } = this.props\n        const HID = caseinfo.HISID\n        const monthly = this.fotmatTimerMonthly(PickerDate)\n        this.setState({ preHID: caseinfo.HISID, prePickerDate: PickerDate, preInterval: chronic_state })\n        this.ApiGet(HID, monthly)\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDate, chronic_state } = this.props\n        const HID = caseinfo.HISID\n        const { preHID, prePickerDate, preInterval } = this.state\n        const monthly = this.fotmatTimerMonthly(PickerDate)\n        if (HID !== preHID || prePickerDate !== PickerDate || preInterval !== chronic_state) {\n            this.setState({ preHID: caseinfo.HISID, prePickerDate: PickerDate, preInterval: chronic_state })\n            this.ApiGet(HID, monthly)\n        }\n    }\n\n    fotmatTimerMonthly(pickerdate) {\n        const timestampInterval = moment().valueOf() - pickerdate\n        const timestampMonth = 30 * 24 * 60 * 60 * 1000\n        const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n        return MonthInt\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    render() {\n        function DataForTimer(dataList, interval, pickerdate) {\n            function starttime(interval, entTimeStamp) {\n                if (interval === 0) {\n                    return entTimeStamp - (24 * 60 * 60 * 1000)\n                }\n                if (interval === 1) {\n                    return entTimeStamp - (3 * 24 * 60 * 60 * 1000)\n                }\n                if (interval === 2) {\n                    return entTimeStamp - (7 * 24 * 60 * 60 * 1000)\n                }\n                return entTimeStamp - (14 * 24 * 60 * 60 * 1000)\n            }\n\n            function fotmatTimerForTimer(interval, st, list, title, grid) {\n                var TimerForList = []\n                for (let index = 0; index < interval; index++) {\n                    const StartTime = st + (index * grid * 60 * 60 * 1000)\n                    const EndTime = st + ((index + 1) * grid * 60 * 60 * 1000)\n                    const filterTimerForDataList = list.filter(function (element, index, arr) {\n                        const time = element.ORRCPDT.toString().trim() + element.ORRCPTM.toString().trim()\n                        const timestamp = moment(time, 'YYYY-MM-DDHH:mm:ss').valueOf()\n                        return StartTime <= timestamp && timestamp < EndTime\n                    })\n                    TimerForList.push({\n                        StartTime: StartTime,\n                        EndTime: EndTime,\n                        element: filterTimerForDataList,\n                        title: title\n                    })\n                }\n                return TimerForList\n            }\n            console.log(dataList.array)\n            const et = pickerdate + (31 * 60 * 60 * 1000)\n            const st = starttime(interval, et)\n            const slectInt = TimeInterval(interval)\n            const DataTransForTimer = fotmatTimerForTimer(slectInt.interval, st, dataList.array, dataList.title, slectInt.grid)\n            return DataTransForTimer\n        }\n\n\n\n        function LabFormat(ressect, parsrList) {\n            var arrayBiochemical = []\n            var arrayBlood = []\n            var arrayCultivate = []\n            var arrayGAS = []\n            var arrayGlu = []\n            var arrayRadiation = []\n            var arrayOther = []\n\n            console.log(parsrList)\n            for (let index = 0; index < ressect.length; index++) {\n                const element = ressect[index];\n                const element_ORPROCED = element.ORPROCED\n                const BioFind = parsrList.Biochemical.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const BloFind = parsrList.Blood.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const CulFind = parsrList.Cultivate.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const GasFind = parsrList.GAS.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const GluFind = parsrList.GAS.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const RadFind = parsrList.Radiation.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                if (BioFind) {\n                    arrayBiochemical.push(element)\n                }\n                if (BloFind) {\n                    arrayBlood.push(element)\n                }\n                if (CulFind) {\n                    arrayCultivate.push(element)\n                }\n                if (GasFind) {\n                    arrayGAS.push(element)\n                }\n                if (GluFind) {\n                    arrayGlu.push(element)\n                }\n                if (RadFind) {\n                    arrayRadiation.push(element)\n                }\n                if (BioFind === false && BloFind === false && CulFind === false && GasFind === false && RadFind === false) {\n                    arrayOther.push(element)\n                }\n            }\n            const arrayList = []\n            arrayList.push({\n                title: \"生化\",\n                array: arrayBiochemical,\n            })\n            arrayList.push({\n                title: \"血液\",\n                array: arrayBlood,\n            })\n            arrayList.push({\n                title: \"培養\",\n                array: arrayCultivate,\n            })\n            arrayList.push({\n                title: \"GAS\",\n                array: arrayGAS,\n            })\n            arrayList.push({\n                title: \"Glu\",\n                array: arrayGlu,\n            })\n            arrayList.push({\n                title: \"放射\",\n                array: arrayRadiation,\n            })\n            arrayList.push({\n                title: \"其他\",\n                array: arrayOther,\n            })\n            return arrayList\n        }\n        function TimeInterval(interval) {\n            if (interval === 0) {\n                return { interval: 24, grid: 1 }\n            }\n            if (interval === 1) {\n                return { interval: 18, grid: 4 }\n            }\n            if (interval === 2) {\n                return { interval: 21, grid: 8 }\n            }\n            return { interval: 14, grid: 24 }\n        }\n        const { chronic_state, caseinfo, PickerDate, title } = this.props\n        const { LabParse, RESSECT, SummaryParse } = this.state\n        if (LabParse === null || LabParse === undefined || LabParse.length === 0) {\n            return null\n        }\n        if (RESSECT === null || RESSECT === undefined || RESSECT.length === 0) {\n            return null\n        }\n        const data = LabFormat(RESSECT, LabParse)\n        const statestatus = TimeInterval(chronic_state)\n        const title_list = title.map((info, index) =>\n            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"40px\", border: \"1px solid rgba(238,238,238,1)\", borderCollapse: \"collapse\", backgroundColor: \"#cccccc\" }} key={index}>\n                <t2>{info.title}</t2>\n            </div>\n        )\n        const cell_list = data.map(function (value, index, arr) {\n            const DataList = DataForTimer(value, chronic_state, PickerDate)\n            return DataList\n        })\n        console.log(data)\n        const cellRender = cell_list.map(function (value, index, array) {\n            const valuecell = value.map(function (element, index, arr) {\n                const toolTipID = \"ChronicTableTootip\" + index\n                return (\n                    <Chronictablecell key={toolTipID} element={element} caseinfo={caseinfo} summaryParse={SummaryParse}></Chronictablecell>\n                );\n            })\n            return valuecell\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\" }}>\n                <div style={{ display: \"grid\", gridTemplateRows: \"repeat(\" + title.length + \",1fr)\" }}>\n                    {title_list}\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + statestatus.interval + \",1fr)\", gridTemplateRows: \"repeat(7,1fr)\" }}>\n                    {cellRender}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Tableonchronic","import React, { Component } from 'react'\nimport Tableonchronic from './ChronicTable'\n\nclass Chroniclab extends Component {\n    render() {\n        const { title, caseinfo, select_interval, PickerDate } = this.props\n        const item_title = [{ title: \"生化\" }, { title: \"血液\" }, { title: \"培養\" }, { title: \"GAS\" }, { title: \"Glu\" }, { title: \"放射\" }, { title: \"其他\" }]\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <t1>{title}</t1>\n                <Tableonchronic title={item_title} caseinfo={caseinfo} chronic_state={select_interval} PickerDate={PickerDate}></Tableonchronic>\n            </div>\n        );\n    }\n}\n\nexport default Chroniclab","import React, { Component } from 'react'\nimport rtlogo from '../../Image/svg/RT.svg'\nimport { Tooltip } from 'antd'\nimport moment from 'moment'\n\nclass Chronicrttablecell extends Component {\n    ToolTipRender() {\n        const { cellelement } = this.props\n        const startTime = moment(cellelement.startTime).format(\"MM/DD HH:mm\")\n        const endTime = moment(cellelement.endTime).format(\"MM/DD HH:mm\")\n        const RTListRender = cellelement.element.map(function (info, index, arr) {\n            const time = moment(info.Date + info.Time, \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\")\n            const Mode = info.Mode\n            const Setting = info.Setting\n            return (\n                <div>\n                    <div>Time:{time}</div>\n                    <div>Mode:{Mode}</div>\n                    <div>Setting:{Setting}</div>\n                </div>\n            );\n        })\n\n        return (\n            <div>\n                <div>{startTime}~{endTime}</div>\n                {RTListRender}\n            </div>\n        );\n    }\n    render() {\n        function changetext(text) {\n            if (text === 0) {\n                return '--'\n            }\n            return <img src={rtlogo} alt=\"rtlogo\" />\n        }\n        const { cellelement } = this.props\n        if (cellelement.length === 0) {\n            return <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center', border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>--</div>\n        }\n        return (\n            <Tooltip placement=\"right\" autoAdjustOverflow={true} title={this.ToolTipRender()} overlayStyle={{ maxWidth: \"800px\" ,background: \"white\"}}>\n                <centerstyle style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                    {changetext(cellelement.length)}\n                </centerstyle>\n            </Tooltip>\n        );\n    }\n}\nexport default Chronicrttablecell","import React, { Component } from 'react'\nimport * as FilterReg from '../../Function/FiliterReg'\nimport moment from 'moment'\nimport X2JS from 'x2js';\nimport * as ApiProvider from '../../API/ApiProvider'\nimport Chronicrttablecell from './ChronicRTTableCell'\n// import * as QSPEList from '../../Resource/QSPE'\n\nclass Chronicrttable extends Component {\n    state = {\n        QSPE: [],\n        preCID: null,\n        prePickerdate: null,\n        preInterval: null\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDate, select_interval } = this.props\n        this.setState({ preCID: caseinfo.CASEID, prePickerdate: PickerDate, preInterval: select_interval })\n        const timer = this.timerFormat(PickerDate, select_interval)\n        const start = moment(timer.StartTime).format(\"YYYYMMDDHHmm\")\n        const end = moment(timer.EndTime).format(\"YYYYMMDDHHmm\")\n        this.getQSPE(caseinfo.CASEID, start, end)\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDate, select_interval } = this.props\n        const { preCID, prePickerdate, preInterval } = this.state\n        if (caseinfo.CASEID !== preCID || PickerDate !== prePickerdate || preInterval !== select_interval) {\n            const { caseinfo, PickerDate } = this.props\n            this.setState({ preCID: caseinfo.CASEID, prePickerdate: PickerDate, preInterval: select_interval })\n            const timer = this.timerFormat(PickerDate, select_interval)\n            const start = moment(timer.StartTime).format(\"YYYYMMDDHHmm\")\n            const end = moment(timer.EndTime).format(\"YYYYMMDDHHmm\")\n            this.getQSPE(caseinfo.CASEID, start, end)\n        }\n\n    }\n    getQSPE(CID, st, et) {\n        const xm2 = new X2JS()\n        ApiProvider.getQSPE(CID, st, et)\n            .then(data => {\n                console.log(xm2.xml2js(data.data).outmsg.resconts.rescont)\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                if (Array.isArray(parsedata)) {\n                    this.setState({ QSPE: parsedata })\n                }\n                else {\n                    this.setState({ QSPE: [parsedata] })\n                }\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        // this.setState({ QSPE: QSPEList.data })\n    }\n\n    timerFormat(PickerDate, Interval) {\n        const EndTime = PickerDate + (31 * 60 * 60 * 1000)\n        if (Interval === 0) {\n            return {\n                StartTime: EndTime - (24 * 60 * 60 * 1000),\n                EndTime: EndTime,\n                Interval: 24,\n                grid: 1\n            }\n        }\n        if (Interval === 1) {\n            return {\n                StartTime: EndTime - (3 * 24 * 60 * 60 * 1000),\n                EndTime: EndTime,\n                Interval: 18,\n                grid: 4\n            }\n\n        }\n        if (Interval === 2) {\n            return {\n                StartTime: EndTime - (7 * 24 * 60 * 60 * 1000),\n                EndTime: EndTime,\n                Interval: 21,\n                grid: 8\n            }\n\n        }\n        return {\n            StartTime: EndTime - (14 * 24 * 60 * 60 * 1000),\n            EndTime: EndTime,\n            Interval: 14,\n            grid: 24\n        }\n    }\n\n\n\n    table_content() {\n        function formatDataList(startTime, interval, list, grid) {\n            var timerList = []\n            for (let index = 0; index < interval; index++) {\n                const start = startTime + (index * grid * 60 * 60 * 1000)\n                const end = startTime + ((index + 1) * grid * 60 * 60 * 1000)\n                const listFilter = list.filter(function (info, index, arr) {\n                    const time = moment(info.Date.toString() + info.Time.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    return start <= time && time < end\n                })\n                timerList.push({\n                    length: listFilter.length,\n                    element: listFilter,\n                    startTime: start,\n                    endTime: end\n                })\n            }\n            return timerList\n        }\n\n        const { select_interval, PickerDate } = this.props\n        const QSPE = this.state.QSPE\n        const dataList = FilterReg.QSPERegList(QSPE)\n        if (dataList === null || dataList === undefined || dataList.length === 0) {\n            return null\n        }\n        const timer = this.timerFormat(PickerDate, select_interval)\n        const calldata = formatDataList(timer.StartTime, timer.Interval, dataList, timer.grid)\n        const cellRender = calldata.map(function (value, index, arr) {\n            return (\n                <Chronicrttablecell key={index} cellelement={value}></Chronicrttablecell>\n            );\n        })\n        return cellRender\n    }\n    render() {\n        const { select_interval, PickerDate } = this.props\n        const timer = this.timerFormat(PickerDate, select_interval)\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\", height: \"40px\" }}>\n                <div style={{ backgroundColor: \"#cccccc\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <t2>呼吸評估</t2>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + timer.Interval + \",1fr)\" }}>\n                    {this.table_content()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chronicrttable","import React, { Component } from 'react'\nimport Chronicrttable from './ChronicRTTable'\n\nclass Chronicrt extends Component {\n    render() {\n        const {caseinfo, select_interval, PickerDate } = this.props\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <Chronicrttable PickerDate={PickerDate} title={{ title: \"RT\" }} caseinfo={caseinfo} select_interval={select_interval}></Chronicrttable>\n            </div>\n        );\n    }\n}\n\nexport default Chronicrt","import React, { Component } from 'react'\nimport './ChronicOrderTable.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as ApiGithub from '../../API/ApiGithub'\n// import * as UDOR from '../../Resource/UDORDER0'\n\nclass Chronicordertable extends Component {\n    state = {\n        UDORDER: [],\n        whiteBlackListParser: [],\n        tpnParsers: [],\n        preHID: null,\n        preCID: null\n    }\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        this.setState({ preHID: HID, preCID: CID })\n        this.getUDORDER(HID, CID)\n\n    }\n    componentDidUpdate() {\n        const { caseinfo } = this.props\n        const { preHID, preCID } = this.state\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        if (preHID !== HID || preCID !== CID) {\n            this.setState({ preHID: HID, preCID: CID })\n            this.getUDORDER(HID, CID)\n        }\n    }\n    getUDORDER(HID, CID) {\n        ApiGithub.getGitHubJson(\"WhiteBlackList.json\")\n            .then(data => {\n                let parser = data.data;\n                this.setState({ whiteBlackListParser: parser })\n            })\n            .catch(err => { console.log(err) })\n        ApiGithub.getGitHubJson(\"TpnOrder.json\")\n            .then(data => {\n                let parser = data.data\n                this.setState({ tpnParsers: parser })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                this.setState({ UDORDER: data.data })\n                //const fakeData = [{\"UDDCPRSN\":\"DOC3948A\",\"UDDURAT\":\"014\",\"UDSUMQTY\":\"0\",\"UDDRGNAM\":\"TPN Dextrose sod for inj 500 mg   \",\"UDGNAME\":\"Dextrose sod for inj 500 mg   \",\"UDORSIGN\":\"DOC3948A\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"蔡欣璉　　\",\"UDENDDT\":\"2020-02-27-09.00.00.000000\",\"UDDCPNAM\":\"蔡欣璉　　\",\"UDDOSAGE\":\"95      \",\"UDORDSEQ\":\"0004\",\"UDDRGNO\":\"04604\",\"UDBGNDT\":\"2020-02-20-09.00.00.000000\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"MG    \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"Dextrose inj inj 500 mg \\\"YF\\\"\",\"UDFREQN\":\"Q8H     \"},{\"UDDCPRSN\":\"DOC3948A\",\"UDDURAT\":\"014\",\"UDSUMQTY\":\"0\",\"UDDRGNAM\":\"TPN MechanicalVentilator sod for inj 500 mg   \",\"UDGNAME\":\"MechanicalVentilator sod for inj 500 mg   \",\"UDORSIGN\":\"DOC3948A\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"蔡欣璉　　\",\"UDENDDT\":\"2020-02-23-09.00.00.000000\",\"UDDCPNAM\":\"蔡欣璉　　\",\"UDDOSAGE\":\"95      \",\"UDORDSEQ\":\"0004\",\"UDDRGNO\":\"04604\",\"UDBGNDT\":\"2020-02-21-09.00.00.000000\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"MG    \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"MechanicalVentilator inj 500 mg \\\"YF\\\"\",\"UDFREQN\":\"Q8H     \"},{\"UDDCPRSN\":\"DOC3948A\",\"UDDURAT\":\"014\",\"UDSUMQTY\":\"0\",\"UDDRGNAM\":\"TPN Ampalininin sod for inj 500 mg   \",\"UDGNAME\":\"Ampalininin sod for inj 500 mg   \",\"UDORSIGN\":\"DOC3948A\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"蔡欣璉　　\",\"UDENDDT\":\"2020-02-25-09.00.00.000000\",\"UDDCPNAM\":\"蔡欣璉　　\",\"UDDOSAGE\":\"95      \",\"UDORDSEQ\":\"0004\",\"UDDRGNO\":\"04604\",\"UDBGNDT\":\"2020-02-22-09.00.00.000000\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"MG    \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"侵入性氧療設備 inj 500 mg \\\"YF\\\"\",\"UDFREQN\":\"Q8H     \"}]\n                //this.setState({ UDORDER: fakeData })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        // this.setState({ UDORDER: UDOR.data })\n    }\n    // 0:一天 1:三天 2:一週 3:兩週\n    switch_state() {\n        const { chronic_state } = this.props\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 21\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    select_parser = (input, parser) => {\n        if (parser === undefined) return undefined;\n        return parser.find(x =>\n            input.match(x.parser_name)\n        )\n    }\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let excludeBlackListResult = [];\n        const UDGNAME_condition = mappings.find(item => item.key === \"UDGNAME\");\n        const UDRPNAME_condition = mappings.find(item => item.key === \"UDRPNAME\");\n        if (inputs === undefined) return []\n        inputs.forEach(input => {\n            const UDGNAME_re = new RegExp(UDGNAME_condition.regex_str, UDGNAME_condition.regex_flags)\n            const UDGNAME_match = input.UDGNAME.match(UDGNAME_re)\n\n            const UDRPNAME_re = new RegExp(UDRPNAME_condition.regex_str, UDRPNAME_condition.regex_flags)\n            const UDRPNAME_match = input.UDRPNAME.match(UDRPNAME_re)\n\n            if (UDGNAME_match === null || UDRPNAME_match === null) {\n                excludeBlackListResult.push(input);\n            }\n        });\n\n        return excludeBlackListResult;\n    }\n    celltable() {\n        function changegridnumber(key) {\n            switch (key) {\n                case 0:\n                    return 24\n                case 1:\n                    return 18\n                case 2:\n                    return 21\n                case 3:\n                    return 14\n                default:\n                    break;\n            }\n        }\n        const { chronic_state } = this.props\n        const number = changegridnumber(chronic_state)\n        var arr = []\n        for (let index = 0; index < number; index++) {\n            arr.push(\n                <div key={index} className='cell'></div>\n            )\n\n        }\n        return arr\n    }\n    render() {\n        function changegridstyle(key) {\n            switch (key) {\n                case 0:\n                    return 'ordertableoneday'\n                case 1:\n                    return 'ordertablethirdday'\n                case 2:\n                    return 'ordertableoneweek'\n                case 3:\n                    return 'ordertabletwoweek'\n                default:\n                    return null\n            }\n        }\n        function ListData(UDORDER0, interval, pickerdate) {\n            // function startTimeFormat(st, sttimeString) {\n            //     if (sttimeString < st) {\n            //         return st\n            //     }\n            //     return sttimeString\n            // }\n            // function endTimeFormat(et, ettimestring) {\n            //     if (et < ettimestring) {\n            //         return et\n            //     }\n            //     return ettimestring\n            // }\n            // function shiftWeight(startTime, st, et) {\n            //     const width = document.body.clientWidth - 220\n            //     const shiftTimeStampWidth = width * (startTime - st) / (et - st)\n            //     return shiftTimeStampWidth\n\n            // }\n            // function WeightWidth(startTime, EndTime, st, et) {\n            //     const width = document.body.clientWidth - 220\n            //     const TimeStampWidth = width * (EndTime - startTime) / (et - st)\n            //     return TimeStampWidth\n            // }\n\n            function formatTimer(pickerdate, interval) {\n                const endTime = pickerdate + (31 * 60 * 60 * 1000)\n                if (interval === 0) {\n                    return {\n                        startTime: endTime - (24 * 60 * 60 * 1000),\n                        endTime: endTime\n                    }\n                }\n                if (interval === 1) {\n                    return {\n                        startTime: endTime - (3 * 24 * 60 * 60 * 1000),\n                        endTime: endTime\n                    }\n                }\n                if (interval === 2) {\n                    return {\n                        startTime: endTime - (7 * 24 * 60 * 60 * 1000),\n                        endTime: endTime\n                    }\n                }\n                return {\n                    startTime: endTime - (14 * 24 * 60 * 60 * 1000),\n                    endTime: endTime\n                }\n            }\n            function formatWidth(startTime, endTime, elementStart, elementEnd) {\n                function formatStart(elementStart, startTime) {\n                    if (elementStart <= startTime) {\n                        return startTime\n                    }\n                    return elementStart\n                }\n                function formatEnd(elementEnd, endTime) {\n                    if (elementEnd <= endTime) {\n                        return elementEnd\n                    }\n                    return endTime\n                }\n                const width = document.body.clientWidth - 220\n                const widthRate = width / (endTime - startTime)\n                const start = formatStart(elementStart, startTime)\n                const end = formatEnd(elementEnd, endTime)\n                return (end - start) * widthRate\n            }\n            function formatStartPosition(startTime, endTime, elementStart) {\n                const width = document.body.clientWidth - 220\n                if (elementStart <= startTime) {\n                    return 0\n                }\n                const widthRate = width / (endTime - startTime)\n                return (elementStart - startTime) * widthRate\n            }\n            function formatUDORDER0(UDORDER0, timer) {\n                var arraylist = []\n                const startTime = timer.startTime\n                const endTime = timer.endTime\n                for (let index = 0; index < UDORDER0.length; index++) {\n                    const element = UDORDER0[index];\n                    const elementStart = moment(element.UDBGNDT.toString(), \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n                    const elementEnd = moment(element.UDENDDT.toString(), \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n                    if (endTime < elementStart || elementEnd < startTime) {\n                        continue\n                    }\n                    const shift = formatStartPosition(startTime, endTime, elementStart)\n                    const width = formatWidth(startTime, endTime, elementStart, elementEnd)\n                    arraylist.push({\n                        \"width\": width,\n                        \"shift\": shift,\n                        \"element\": element\n                    })\n                }\n                return arraylist\n            }\n            const timer = formatTimer(pickerdate, interval)\n            if (UDORDER0 === undefined || UDORDER0 === null) {\n                return []\n            }\n            if (UDORDER0.length === 0) {\n                return []\n            }\n            const formatUDORDER = formatUDORDER0(UDORDER0, timer)\n            return formatUDORDER\n        }\n\n\n\n        const { chronic_state, PickerDate, source } = this.props\n        // console.log(UDORDER0)\n        // console.log(ListData(UDORDER0, chronic_state, PickerDate))\n\n        //filter white list\n\n        const rawData = this.state.UDORDER\n\n        //filter TPN items for infection page\n        let filteredRawData = []\n        if(source === \"infection\") {\n            const selected_tpn_parser = this.select_parser(\"TPN Order\", this.state.tpnParsers)\n            console.log(\"selected_tpn_parser: \" + JSON.stringify(selected_tpn_parser))\n            if (selected_tpn_parser !== undefined) {\n                rawData.forEach(item => {\n                    const found = item.UDDRGNAM.match(RegExp(selected_tpn_parser.apply_condition.name, selected_tpn_parser.apply_condition.name_regex_flags))\n                    if (found !== null && found !== \"\") filteredRawData.push(item)\n                })\n            }\n        } else {\n            filteredRawData = rawData\n        }\n\n        let filteredData = [];\n        const selected_white_black_list_parser = this.select_parser(\"Black List\", this.state.whiteBlackListParser)\n        if (selected_white_black_list_parser !== undefined) {\n            filteredData = this.parse(filteredRawData, selected_white_black_list_parser)\n        }\n\n        const datalist = ListData(filteredData, chronic_state, PickerDate)\n        // const datalist = ListData(UDORDER0, chronic_state, PickerDate)\n\n        const Tablecell = datalist.map(function (value, index, array) {\n            function formatString(value) {\n                if (value === undefined || value === null) {\n                    return \"--\"\n                }\n                return value.toString().trim()\n            }\n            // console.log(value.width)\n            return (\n                <div key={index} style={{ padding: \"10px 0px\", paddingLeft: value.shift + \"px\" }}>\n                    <div style={{ width: value.width + \"px\", height: \"20px\", backgroundColor: \"#3B97E1\", color: \"black\", padding: \"0px 5px\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\" }}>{formatString(value.element.UDGNAME)}</div>\n                </div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\", position: 'relative' }}>\n                <div style={{ background: \"#CCCCCC\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <t2>醫藥囑</t2>\n                </div>\n                <div className={changegridstyle(chronic_state)}>{this.celltable()}</div>\n                <div style={{ position: 'absolute', left: 140, height: \"250px\", overflow: \"hidden\" }}>\n                    {Tablecell}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chronicordertable","import React, { Component } from 'react'\nimport Chronicordertable from './ChronicOrderTable'\n// import * as ApiGithub from '../../API/ApiGithub'\n\nclass Orderonchronic extends Component {\n    render() {\n        const { caseinfo, select_interval, UDORDER0,PickerDate } = this.props\n        const item_title = [{ title: \"醫藥囑\" }]\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <Chronicordertable title={item_title} caseinfo={caseinfo} chronic_state={select_interval} UDORDER0={UDORDER0} PickerDate={PickerDate} source={this.props.source}></Chronicordertable>\n            </div>\n        );\n    }\n}\n\nexport default Orderonchronic","import React, { Component } from 'react'\nimport './ChronicWeightTable.scss'\nimport moment from 'moment'\n// import * as QTWPER from '../../Resource/QTWPER'\n// import * as ApiProvider from '../../API/ApiProvider'\n\nclass Chronicweighttable extends Component {\n    // 0:一天 1:三天 2:一週 3:兩週\n    state = { QTWPER: null }\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const weight = caseinfo.WEIGHT\n        console.log(caseinfo)\n        this.setState({ QTWPER: weight })\n        // this.setState({ QTWPER: QTWPER.data.outmsg.resconts.rescont })\n    }\n\n    switch_state() {\n        const { chronic_state } = this.props\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 21\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    celltable() {\n        function changegridnumber(key) {\n            switch (key) {\n                case 0:\n                    return 24\n                case 1:\n                    return 18\n                case 2:\n                    return 21\n                case 3:\n                    return 14\n                default:\n                    break;\n            }\n        }\n        const { chronic_state } = this.props\n        const number = changegridnumber(chronic_state)\n        var arr = []\n        for (let index = 0; index < number; index++) {\n            arr.push(\n                <div key={index} className='cell'></div>\n            )\n\n        }\n        return arr\n    }\n    weightRectRender() {\n        function TimerFormat(interval, pickerdate) {\n            const endTime = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    startTime: endTime - (24 * 60 * 60 * 1000),\n                    endTime: endTime,\n                    interval: 24,\n                    grid: 1\n                }\n            }\n            if (interval === 1) {\n                return {\n                    startTime: endTime - (3 * 24 * 60 * 60 * 1000),\n                    endTime: endTime,\n                    interval: 18,\n                    grid: 4\n                }\n            }\n            if (interval === 2) {\n                return {\n                    startTime: endTime - (7 * 24 * 60 * 60 * 1000),\n                    endTime: endTime,\n                    interval: 21,\n                    grid: 8\n                }\n            }\n            return {\n                startTime: endTime - (14 * 24 * 60 * 60 * 1000),\n                endTime: endTime,\n                interval: 14,\n                grid: 24\n            }\n        }\n        const { chronic_state, caseinfo, PickerDate } = this.props\n        const QTPWERList = caseinfo.WEIGHT\n        console.log(QTPWERList)\n        if (QTPWERList === undefined || QTPWERList === null) {\n            return null\n        }\n        const WeightList = QTPWERList.filter(function (info, index, arr) {\n            return info.type === \"TW\"\n        })\n\n        const timer = TimerFormat(chronic_state, PickerDate)\n        const width = document.body.clientWidth - 220\n        const widthRate = width / (timer.endTime - timer.startTime)\n        var WeightListFormat = []\n        for (let index = 0; index < WeightList.length; index++) {\n            const element = WeightList[index];\n            const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n            // if (timer.startTime > elementTime) {\n            //     const elementValue = parseInt(Number(element.value2) * 1000)\n            //     WeightListFormat.splice(0, 1, {\n            //         Time: elementTime,\n            //         Value: elementValue\n            //     })\n            // }\n            if (timer.startTime <= elementTime && elementTime <= timer.endTime) {\n                const elementValue = parseInt(Number(element.value2) * 1000)\n                WeightListFormat.push({\n                    Time: elementTime,\n                    Value: elementValue\n                })\n            }\n        }\n        const sortWeight = WeightListFormat.sort(function (a, b) {\n            return a.Value > b.Value ? 1 : -1;\n        });\n        console.log(sortWeight)\n        var shift = 0\n        var elementWidthList = []\n        for (let index = 0; index < sortWeight.length; index++) {\n            const element = sortWeight[index];\n            if (index === 0) {\n                shift = (element.Time - timer.startTime) * widthRate\n            }\n            if (sortWeight.length - 1 === index) {\n                const time1 = element.Time\n                const time2 = timer.endTime\n                const elementWidth = (time2 - time1) * widthRate\n                elementWidthList.push({\n                    Value: element.Value,\n                    width: elementWidth\n                })\n            }\n            else {\n                const time1 = sortWeight[index].Time\n                const time2 = sortWeight[index + 1].Time\n                console.log(time2 - time1)\n                const elementWidth = (time2 - time1) * widthRate\n                elementWidthList.push({\n                    Value: element.Value,\n                    width: elementWidth\n                })\n            }\n        }\n        return {\n            shift: shift,\n            elementWidthList: elementWidthList\n        }\n    }\n    render() {\n        const { chronic_state, caseinfo, PickerDate } = this.props\n        console.log(chronic_state)\n        const weight = caseinfo.WEIGHT\n        console.log(caseinfo.WEIGHT)\n        function FormatEndTimeStamp(start, interval) {\n            if (interval === 0) {\n                return start - (24 * 60 * 60 * 1000)\n            }\n            if (interval === 1) {\n                return start - (3 * 24 * 60 * 60 * 1000)\n\n            }\n            if (interval === 2) {\n                return start - (7 * 24 * 60 * 60 * 1000)\n\n            }\n            if (interval === 3) {\n                return start - (14 * 24 * 60 * 60 * 1000)\n\n            }\n        }\n        const end = PickerDate + (31 * 60 * 60 * 1000)\n        const start = FormatEndTimeStamp(end, chronic_state)\n        const datafilter = weight.filter(function (value, index, arr) {\n            const timeString = value.rec_dat.toString() + value.rec_tim.toString()\n            const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n            // console.log(start, time, end)\n            return start < time && time < end\n        })\n        const datafilterTime = datafilter.map(function (value, index, arr) {\n            const timeString = value.rec_dat.toString() + value.rec_tim.toString()\n            const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n            return time\n        })\n        console.log(weight, datafilter, datafilterTime)\n        const diff = end - start\n        var widthArray = []\n        if (datafilter.length === 0) {\n            // const element = weight[0]\n            // widthArray.push({\n            //     width: 100,\n            //     weight: (element.value2) * 1000\n            // })\n        }\n        if (datafilter.length === 1) {\n            for (let index = 0; index < datafilter.length; index++) {\n                const element = datafilter[index];\n                const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                const width = parseInt(100 * (time - start) / diff)\n                widthArray.push({\n                    width: width,\n                    weight: Number(element.value2) * 1000\n                })\n            }\n        }\n        else {\n            for (let index = 0; index < datafilter.length - 1; index++) {\n                const element = datafilter[index];\n                if (index === 0) {\n                    const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                    const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                    const width = parseInt(100 * (time - start) / diff)\n                    widthArray.push({\n                        width: width,\n                        weight: Number(element.value2) * 1000\n                    })\n                }\n                else if (index === (datafilterTime.length - 1)) {\n                    const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                    const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                    const width = parseInt(100 * (end - time) / diff)\n                    widthArray.push({\n                        width: width,\n                        weight: Number(element.value2) * 1000\n                    })\n                }\n                else {\n                    const element2 = datafilter[index + 1]\n                    const timeString2 = element2.rec_dat.toString() + element2.rec_tim.toString()\n                    const time2 = moment(timeString2, \"YYYYMMDDHHmm\").valueOf()\n                    const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                    const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                    const width = parseInt(100 * (time2 - time) / diff)\n                    widthArray.push({\n                        width: width,\n                        weight: Number(element.value2) * 1000\n                    })\n                }\n            }\n        }\n        console.log(widthArray)\n        function changegridstyle(key) {\n            switch (key) {\n                case 0:\n                    return 'chronicweighttableoneday'\n                case 1:\n                    return 'chronicweighttablethreeday'\n                case 2:\n                    return 'chronicweighttableoneweek'\n                case 3:\n                    return 'chronicweighttabletwoweek'\n                default:\n                    return null\n            }\n        }\n        const list = this.weightRectRender()\n        if (list === null || list === undefined) {\n            return null\n        }\n        const render = list.elementWidthList.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ border: \"1px black solid\", borderCollapse: \"collapse\", width: value.width + '%', height: \"20\", backgroundColor: \"#3B97E1\", color: \"white\", display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>{value.Value}g</div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\", position: 'relative' }}>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", background: \"#cccccc\" }}>\n                    <t2>體重</t2>\n                </div>\n                <div className={changegridstyle(chronic_state)}>{this.celltable()}</div>\n                <div style={{ position: 'absolute', left: 140, paddingTop: \"15px\" }}>\n                    <div style={{ paddingLeft: list.shift + \"px\", display: \"flex\", width: 'calc(100vw - 220px)', overflow: \"hidden\" }}>\n                        {render}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chronicweighttable","import React, { Component } from 'react'\nimport Chronicweighttable from './ChronicWeightTable'\n\nclass Weightonchronic extends Component {\n    render() {\n        const { caseinfo, PickerDate, select_interval } = this.props\n        const item_title = [{ title: \"體重\" }]\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <Chronicweighttable PickerDate={PickerDate} title={item_title} caseinfo={caseinfo} chronic_state={select_interval}></Chronicweighttable>\n            </div>\n        );\n    }\n}\n\nexport default Weightonchronic","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport '../Patientview/CrossSectionView/Crosssectionvitalsignchart.scss'\n\nclass Vitalxaxis extends Component {\n    state = {\n        change: false\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n    drawChart() {\n        function nowtime(time) {\n            return time + (7 * 60 * 60 * 1000)\n        }\n        function monthformat(month) {\n            return month + 1\n        }\n        function intervaldays(select_date, select_interval) {\n            switch (select_interval) {\n                //一天\n                case 0:\n                    return select_date - 86400000 * 1\n                //三天\n                case 1:\n                    return select_date - 86400000 * 3\n                //一週\n                case 2:\n                    return select_date - 86400000 * 7\n                //兩週\n                case 3:\n                    return select_date - 86400000 * 14\n                default:\n                    return null\n            }\n        }\n\n        const { id_key, svg_id,select_interval, select_date } = this.props\n        const viewwidth = window.screen.availWidth - 220\n        //選取時間(0點)\n        const select_date_zero = new Date(new Date(select_date).getFullYear() + ',' + monthformat(new Date(select_date).getMonth()) + ',' + new Date(select_date).getDate()).getTime()\n        //選取時間(7點)\n        const select_time_format = nowtime(select_date_zero)\n        //select_intercal:0一天 1三天 2兩週\n        const Start_time = intervaldays(select_time_format, select_interval)\n        var xaxis = []\n        if (select_interval === 0) {\n            for (let index = 0; index < 24; index++) {\n                const time = Start_time + (30 * 60 * 1000) + (index * 60 * 60 * 1000)\n                xaxis.push(time)\n            }\n        }\n        if (select_interval === 1) {\n            for (let index = 0; index < 21; index++) {\n                const time = Start_time + (2 * 60 * 60 * 1000) + (index * 60 * 60 * 1000 * 4)\n                xaxis.push(time)\n            }\n        }\n\n        if (select_interval === 2) {\n            for (let index = 0; index < 21; index++) {\n                const time = Start_time + (4 * 60 * 60 * 1000) + (index * 60 * 60 * 1000 * 8)\n                xaxis.push(time)\n            }\n        }\n\n        if (select_interval === 3) {\n            for (let index = 0; index < 14; index++) {\n                const time = Start_time + (12 * 60 * 60 * 1000) + (index * 60 * 60 * 1000 * 24)\n                xaxis.push(time)\n            }\n        }\n        var x = d3.scaleLinear()\n            .domain([Start_time, select_time_format])\n            .range([0, viewwidth])\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            // .attr(\"viewbox\", [0, 0, viewwidth + 60, 25])\n            .style(\"width\", viewwidth + 100)\n            .style(\"height\", 25)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 15 + \")\");\n\n        var formatHour = d3.timeFormat(\"%H\")\n        var formatday = d3.timeFormat(\"%d\")\n        function multiFormat(date) {\n            if (select_interval === 0) {\n                return formatHour(date) + '~' + formatHour(date + (60 * 60 * 1000))\n            }\n            if (select_interval === 1) {\n                return formatHour(date - (2 * 60 * 60 * 1000)) + '~' + formatHour(date + (2 * 60 * 60 * 1000))\n            }\n            if (select_interval === 2) {\n                return formatHour(date - (4 * 60 * 60 * 1000)) + '~' + formatHour(date + (4 * 60 * 60 * 1000))\n            }\n            if (select_interval === 3) {\n                return monthformat(new Date(date).getMonth()) + '/' + formatday(date)\n            }\n            return formatHour(date)\n        }\n        var xAxis = d3.axisTop(x)\n            .tickValues(xaxis)\n            .tickSize(0, 0)\n            .tickPadding(5)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\");\n\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default Vitalxaxis;","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport '../Patientview/CrossSectionView/Crosssectionvitalsignchart.scss'\nimport { yyyymmddformat } from '../Function/Timeformat'\nimport moment from 'moment';\n\nclass Vitalxaxisbot extends Component {\n    state = {\n        change: false\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n    drawChart() {\n        function intervaldays(select_date, select_interval) {\n            switch (select_interval) {\n                //一天\n                case 0:\n                    return select_date - 86400000 * 1\n                //三天\n                case 1:\n                    return select_date - 86400000 * 3\n                //一週\n                case 2:\n                    return select_date - 86400000 * 7\n                //兩週\n                case 3:\n                    return select_date - 86400000 * 14\n                default:\n                    return null\n            }\n        }\n\n        const { id_key, svg_id, select_interval, select_date } = this.props\n        const viewwidth = window.screen.availWidth - 228\n        //選取時間(0點)\n        const select_date_zero = yyyymmddformat(select_date)\n        //選取時間(7點)\n        const select_time_format = new Date(select_date_zero).getTime() + (31 * 60 * 60 * 1000)\n        //select_intercal:0一天 1三天 2兩週\n        const Start_time = intervaldays(select_time_format, select_interval)\n        console.log(Start_time)\n        var xaxis = []\n        if (select_interval === 0) {\n            const time = Start_time + (17 * 60 * 60 * 1000)\n            console.log(time)\n            xaxis.push(time)\n        }\n        if (select_interval === 1) {\n            for (let index = 0; index < 3; index++) {\n                const time = Start_time + (12 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000)\n                xaxis.push(time)\n            }\n        }\n\n        if (select_interval === 2) {\n            for (let index = 0; index < 7; index++) {\n                const time = Start_time + (12 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000)\n                xaxis.push(time)\n            }\n        }\n\n\n        if (select_interval === 3) {\n            for (let index = 0; index < 14; index++) {\n                const time = Start_time + (12 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000)\n                xaxis.push(time)\n            }\n        }\n        var x = d3.scaleLinear()\n            .domain([Start_time, select_time_format])\n            .range([0, viewwidth - 1])\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            // .attr(\"viewbox\", [0, 0, viewwidth + 60, 25])\n            .style(\"width\", viewwidth)\n            .style(\"height\", 25)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + -10 + \")\");\n\n\n        function multiFormat(date) {\n            return moment(date).format(\"MM/DD\")\n        }\n\n\n        var xAxis = d3.axisBottom(x)\n            .tickValues(xaxis)\n            .tickSize(0, 0)\n            .tickPadding(10)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\");\n\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default Vitalxaxisbot;","import React, { Component } from 'react'\nimport { Select, Button } from 'antd';\n// import Chronicvitalchart from './Chronic_vital_chart'\nimport { statecolor } from '../../Function/Wardstate'\nimport { formatxArrayhalf, formatendtime } from '../../Function/Timeformat'\nimport './Chronic_vital.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport Crosssectionvitalsignchart from '../CrossSectionView/Crossectionvitalsignchart'\n\n\nclass Vitalonchronic extends Component {\n    state = {\n        check_state_one: 0,\n        check_state_three: 0,\n        check_state_oneweek: 0,\n        check_state_twoweek: 0,\n        statussource: \"CM\",\n        CenterMonitorValue: []\n    }\n\n    componentDidMount() {\n        const startTime = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf() - (60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\")\n        const endTime = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf()).format(\"YYYYMMDDHHmmss\")\n        const PHISTNUM = this.props.caseinfo.HISID.toString().trim()\n        this.getVitalSignData(startTime, endTime, PHISTNUM)\n    }\n\n    getVitalSignData(startTime, EndTime, Phistnum) {\n        ApiProvider.getPatientwardvalueMedian(Phistnum, startTime, EndTime)\n            .then(data => {\n                console.log(data.data)\n                this.setState({\n                    CenterMonitorValue: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n                this.setState({\n                    CenterMonitorValue: null\n                })\n            })\n    }\n\n    // switchdata(value_interval, sourcefrom) {\n    //     console.log(sourcefrom)\n    //     const { defaultdate } = this.props\n    //     function changevitaldays(vitaldays) {\n    //         if (vitaldays === 3) {\n    //             return 18\n    //         }\n    //         else {\n    //             return 24\n    //         }\n    //     }\n\n    //     function Interval_switch(interval) {\n    //         if (interval === 0) {\n    //             return 1\n    //         }\n    //         if (interval === 1) {\n    //             return 3\n    //         }\n    //     }\n    //     const interval = Interval_switch(value_interval)\n    //     const starttime = formatendtime(defaultdate) - (interval * 24 * 60 * 60 * 1000)\n    //     if (sourcefrom === 'NIS') {\n    //         const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n    //         const data = simulationnisdata(datatime, changevitaldays(interval))\n    //         console.log(data)\n    //         return data\n    //     }\n    //     else {\n\n    //         const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n    //         const data = simulationCentermonitordata(datatime, changevitaldays(interval))\n    //         return data\n    //     }\n    // }\n    Interval_grid_box() {\n        var gridarray = []\n        console.log(this.props.select_interval)\n        if (this.props.select_interval === 0) {\n            for (let index = 0; index < 24; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_one) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: 360, border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_one(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: 360 }} onClick={() => this.onClickCheckgrid_one(number)}></div>)\n            }\n        }\n        if (this.props.select_interval === 1) {\n            for (let index = 0; index < 18; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_three) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: 360, border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_three(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: 360 }} onClick={() => this.onClickCheckgrid_three(number)}></div>)\n            }\n        }\n        if (this.props.select_interval === 2) {\n            for (let index = 0; index < 21; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_oneweek) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: 360, border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_oneweek(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: 360 }} onClick={() => this.onClickCheckgrid_oneweek(number)}></div>)\n            }\n        }\n        if (this.props.select_interval === 3) {\n            for (let index = 0; index < 14; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_twoweek) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: 360, border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_twoweek(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: 360 }} onClick={() => this.onClickCheckgrid_twoweek(number)}></div>)\n            }\n        }\n        return gridarray\n    }\n\n    onClickCheckgrid_one(number) {\n        console.log(number)\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (24 * 60 * 60 * 1000)\n        const endtime = ST + (number * 60 * 60 * 1000)\n        const starttime = endtime - 60 * 60 * 1000\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ check_state_one: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n    onClickCheckgrid_three(number) {\n        console.log(number)\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (3 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 4) * 60 * 60 * 1000)\n        const starttime = endtime - (4 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ chackstate_three: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n\n    onClickCheckgrid_oneweek(number) {\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (7 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 8) * 60 * 60 * 1000)\n        const starttime = endtime - (8 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ check_state_oneweek: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n    onClickCheckgrid_twoweek(number) {\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (14 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 24) * 60 * 60 * 1000)\n        const starttime = endtime - (24 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ check_state_twoweek: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n\n    sourcehandleChange = (e) => {\n        this.setState({ statussource: e.target.value })\n    }\n    render() {\n        function centervaluetoNull(value) {\n            function FilterList(DataList, type) {\n                const filterData = DataList.filter(function (value, index, arr) {\n                    return value.type === type\n                })\n                if (filterData.length === 0) {\n                    return null\n                }\n                console.log(filterData)\n                return filterData[0].Mid\n            }\n            if (value === undefined || value === null) {\n                return {\n                    hr: null,\n                    rr: null,\n                    bt: null,\n                    spo2: null,\n                    abpd: null,\n                    abpm: null,\n                    abps: null,\n                    nbpm: null,\n                    nbps: null,\n                    nbpd: null\n                }\n            }\n            return {\n                hr: FilterList(value, \"hr\"),\n                rr: FilterList(value, \"rr\"),\n                bt: FilterList(value, \"bt\"),\n                spo2: FilterList(value, \"spo2\"),\n                abpd: FilterList(value, \"abpd\"),\n                abpm: FilterList(value, \"abpm\"),\n                abps: FilterList(value, \"abps\"),\n                nbpd: FilterList(value, \"nbpd\"),\n                nbps: FilterList(value, \"nbps\"),\n                nbpm: FilterList(value, \"nbpm\"),\n            }\n        }\n        function centervalueNull(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            return value\n        }\n        function Interval_grid(number) {\n            switch (number) {\n                case 0:\n                    return 24\n                case 1:\n                    return 18\n                case 2:\n                    return 21\n                case 3:\n                    return 14\n                default:\n                    return null\n            }\n        }\n        function formatPickerTimer(pickerdate, interval) {\n            const end = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    startTime: end - (24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n            if (interval === 1) {\n                return {\n                    startTime: end - (3 * 24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n            if (interval === 2) {\n                return {\n                    startTime: end - (7 * 24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n            else {\n                return {\n                    startTime: end - (14 * 24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n        }\n\n        const { Option } = Select;\n        const { source } = this.props\n        const pickerTimer = formatPickerTimer(this.props.PickerDate, this.props.select_interval)\n        const width = window.screen.availWidth - 171\n        const centervalue = centervaluetoNull(this.state.CenterMonitorValue)\n        return (\n            <div>\n                <div style={{ display: \"flex\", alignItems: \"center\", height: \"50px\" }}>\n                    <t1>生命徵象</t1>\n                    <div >\n                        <Button style={{ margin: \"0px 10px\" }} value={\"CM\"} type=\"primary\" onClick={this.sourcehandleChange}>Center Monitor</Button>\n                        <Button style={{}} value={\"NIS\"} type=\"primary\" onClick={this.sourcehandleChange}>NIS</Button>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\" }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"repeat(6,60px)\" }}>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <t4 style={{ display: \"flex\", justifyContent: \"center\", color: statecolor(\"HR\") }}>{\"HR\"}</t4>\n                                <t1 style={{ display: \"flex\", justifyContent: \"center\", color: statecolor(\"HR\") }}>{centervalueNull(centervalue.hr)}</t1>\n                            </div>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>NBP</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.nbpd)}/{centervalueNull(centervalue.nbps)}</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>({centervalueNull(centervalue.nbpm)})</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>ABP</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.abpd)}/{centervalueNull(centervalue.abps)}</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>({centervalueNull(centervalue.abpm)})</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <div style={{ fontSize: \"1rem\", color: \"#4773B8\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>\n                                    SpO<sub style={{ bottom: \"-1em\" }}>2</sub>\n                                </div>\n                                <div style={{ fontSize: \"1rem\", color: \"#4773B8\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.spo2)}%</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <div style={{ fontSize: \"1rem\", color: \"#7F3DB5\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>BT</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#7F3DB5\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>--</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <div style={{ fontSize: \"1rem\", color: \"#DE7531\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>RR</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#DE7531\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.rr)}</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"repeat(6,60px)\", position: \"relative\" }}>\n                        <div style={{ position: \"absolute\", height: \"340px\", width: width - 50, top: 5, left: 50 }} >\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + Interval_grid(this.props.select_interval) + \",1fr)\" }}>\n                                {this.Interval_grid_box()}\n                            </div>\n                        </div>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"hr_svg_\" + source}\n                            id_key={\"hr_id_\" + source}\n                            type={\"hr\"}\n                            source={this.state.statussource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={100}\n                            upper={160}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor=\"#779F50\"\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={200}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"nbp_svg\" + source}\n                            id_key={\"nbp_id\" + source}\n                            type={\"nbp\"}\n                            source={this.state.statussource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={55}\n                            upper={75}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#C12528\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"abp_svg\" + source}\n                            id_key={\"abp_id\" + source}\n                            type={\"abp\"}\n                            source={this.state.statussource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={55}\n                            upper={75}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#C12528\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"spo2_svg_\" + source}\n                            id_key={\"spo2_id_\" + source}\n                            type={\"spo2\"}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={90}\n                            upper={100}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#4773B8\"}\n                            colorshadow={\"#4773B8\"}\n                            min={60}\n                            max={100}\n                            source={this.state.statussource}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"bt_svg_\" + source}\n                            id_key={\"bt_id_\" + source}\n                            type={\"bt\"}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            source={this.state.statussource}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={36}\n                            upper={38}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#7F3DB5\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={33}\n                            max={43}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"rr_svg_\" + source}\n                            id_key={\"rr_id_\" + source}\n                            type={\"rr\"}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={20}\n                            upper={60}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#DE7531\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}\n                            source={this.state.statussource}>\n                        </Crosssectionvitalsignchart>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Vitalonchronic\n","import React, { Component } from 'react';\nimport { DatePicker, Button, Select } from 'antd';\nimport filterlogo from '../../Image/svg/filter.svg'\nimport Inoutonchronic from './Chronic_io'\nimport Chroniclab from './ChronicLab'\nimport Chronicrt from './ChronicRT'\nimport Orderonchronic from './ChronicOrder'\nimport Weightonchronic from './ChronicWeight'\nimport Vitalxaxis from '../../Module/Vitalxaxis'\nimport Vitalxaxisbot from '../../Module/Vitalxaxisbot'\nimport moment from 'moment'\nimport './Chroniclelayout.scss'\nimport Vitalonchronic from './Chronic_vital'\n\nclass Chroniclelayout extends Component {\n    state = {\n        display_Mode: false,\n        item: this.props.item_array,\n        scrollstate: 0,\n        PickerDate: moment(moment().format('YYYYMMDD'), \"YYYYMMDD\").valueOf(), //選擇日期\n        select_interval: 0, //選擇區間\n        statuschange: 0,\n    }\n\n    scrollToAnchor = (anchorName) => {\n        console.log(anchorName)\n        if (anchorName) {\n            let anchorElement = document.getElementById(anchorName);\n            if (anchorElement) { anchorElement.scrollIntoView(false); }\n        }\n    }\n    scroll_btn_style(index) {\n        console.log(index, this.state.scrollstate)\n        if (index === this.state.scrollstate) {\n            return true\n        }\n        else return false\n    }\n    onChange = (date, dateString) => {\n        console.log(date, dateString);\n\n        this.setState(\n            {\n                PickerDate: date.valueOf()\n            }\n        )\n    }\n    onSelectchange = (value) => {\n        this.setState(\n            {\n                select_interval: value\n            }\n        )\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDate } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const bTemp = bTime - (6 * day)\n                bronDate <= bTemp && this.onChange(moment(bTime))\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD'))\n                this.onChange(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= aTemp && this.onChange(moment(aTime))\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { Option } = Select;\n        // const dateFormat = 'YYYY/MM/DD';\n        const { caseinfo } = this.props\n        const crosssectioncontrollist =\n            [{ \"name\": \"生命徵象\", \"scrollpoint\": \"vital_sign_chronic\" },\n            { \"name\": \"輸出入\", \"scrollpoint\": \"input_output_chronic\" },\n            { \"name\": \"檢驗結果\", \"scrollpoint\": \"lab_chronic\" },\n            { \"name\": \"呼吸評估\", \"scrollpoint\": \"rt_chronic\" },\n            { \"name\": \"醫藥囑\", \"scrollpoint\": \"order_chronic\" },\n            { \"name\": \"體重\", \"scrollpoint\": \"infection_chronic\" }]\n        console.log(caseinfo.PBASINGNINFO.PBIRTHDT.toString())\n        let button = crosssectioncontrollist.map(\n            (item, index) => <Button onClick={this.scrollToAnchor.bind(this, item.scrollpoint)} key={index} style={{ borderRadius: \"16px\", color: \"rgba(245, 166, 35, 1)\", border: \"rgba(245, 166, 35, 1) 1px solid\" }}>{item.name}</Button>);\n        return (\n            <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", height: \"40px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"140px 120px auto\", gridColumnGap: \"5px\" }}>\n                        <DatePicker disabledDate={(current) => { return current > moment().startOf(\"day\") || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }} onChange={this.onChange} value={moment(this.state.PickerDate)} allowClear={false} />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\", marginLeft: \"10px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                        <Select defaultValue={this.state.select_interval} style={{ width: 120, marginLeft: \"10px\" }} onChange={this.onSelectchange}>\n                            <Option value={0}>一天</Option>\n                            <Option value={1}>三天</Option>\n                            <Option value={2}>一週</Option>\n                            <Option value={3}>兩週</Option>\n                        </Select>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(8,auto)\", gridColumnGap: \"15px\" }}>\n                        <t2 style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>項目切換:</t2>\n                        {button}\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }}>\n                            <img src={filterlogo} alt='filterlogo'></img>\n                        </div>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\", margin: \"10px 0px\" }}>\n                    <div></div>\n                    <Vitalxaxis max={200} min={0} select_interval={this.state.select_interval} select_date={this.state.PickerDate} id_key=\"xaxis_chronic\" svg_id=\"xaxis_svg_chronic\"></Vitalxaxis>\n                </div>\n                <div className='boxshadow'></div>\n                <div className='chroniclayout'>\n                    {/* Vital sign */}\n                    <div id=\"vital_sign_chronic\">\n                        <Vitalonchronic source={\"Chronic\"} PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"Vital\"></Vitalonchronic>\n                    </div>\n                    {/* I/O */}\n                    <div id=\"input_output_chronic\">\n                        <Inoutonchronic PickerDate={this.state.PickerDate} Status={\"Chronic\"} IntervalStatus={this.state.select_interval} caseinfo={caseinfo} title=\"輸出入\"></Inoutonchronic>\n                    </div>\n                    {/* Lab */}\n                    <div id=\"lab_chronic\">\n                        <Chroniclab PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"檢驗結果\"></Chroniclab>\n                    </div>\n                    {/* RT */}\n                    <div id=\"rt_chronic\">\n                        <Chronicrt PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo}></Chronicrt>\n                    </div>\n                    {/* Order */}\n                    <div id=\"order_chronic\">\n                        <Orderonchronic PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"\"></Orderonchronic>\n                    </div>\n                    {/* 體重 */}\n                    <div id=\"infection_chronic\">\n                        <Weightonchronic PickerDate={this.state.PickerDate} QTWPER={this.state.QTWPER} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"\"></Weightonchronic>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\", marginTop: \"30px\" }}>\n                    <div></div>\n                    <Vitalxaxisbot max={200} min={0} select_interval={this.state.select_interval} select_date={this.state.PickerDate} id_key=\"xaxis_bot_chronic\" svg_id=\"xaxis_bot_svg_chronic\"></Vitalxaxisbot>\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default Chroniclelayout;\n","import React, { Component } from 'react';\nimport './Flootsheetio.scss'\nimport * as RegFilter from '../../Function/FiliterReg'\nimport moment from 'moment';\nimport X2JS from 'x2js';\nimport * as ApiProvider from '../../API/ApiProvider'\n// import * as QDCR from '../../Resource/QDC'\n\nclass Flootsheetio extends Component {\n    state = {\n        itemNumber: \"day\",\n        preCID: null,\n        prePickerDate: null,\n        QDC: []\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDate } = this.props\n        const CID = caseinfo.CASEID\n        this.setState({ preCID: CID, prePickerDate: PickerDate })\n        this.getQDC(CID, PickerDate)\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDate } = this.props\n        const CID = caseinfo.CASEID\n        const preCID = this.state.preCID\n        const prePickerDate = this.state.prePickerDate\n        console.log(prePickerDate, PickerDate)\n        if (CID !== preCID || PickerDate !== prePickerDate) {\n            this.setState({ preCID: CID, prePickerDate: PickerDate })\n            this.getQDC(CID, PickerDate)\n        }\n    }\n    getQDC(CID, PickerDate) {\n        const xm2 = new X2JS()\n        const st = moment(PickerDate + (7 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        const et = moment(PickerDate + (31 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        ApiProvider.getQDC(CID, st, et)\n            .then(data => {\n                console.log(xm2.xml2js(data.data))\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                this.setState({\n                    QDC: parsedata\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n    }\n    SecondDataCell(dataJson, Title) {\n        const { PickerDate } = this.props\n        const st = PickerDate + (7 * 60 * 60 * 1000)\n        var cellRender = []\n        for (let index = 0; index < 24; index++) {\n            const startTime = st + (index * 60 * 60 * 1000)\n            const endTime = st + ((index + 1) * 60 * 60 * 1000)\n            const timeObjectString = dataJson.rec_dat.toString() + dataJson.rec_tim.toString()\n            const time = moment(timeObjectString, 'YYYYMMDDHHmm').valueOf()\n            if (time > startTime && time < endTime) {\n                cellRender.push(dataJson.value)\n            }\n            else {\n                cellRender.push(\"--\")\n            }\n        }\n        const data = cellRender.map((info, index) =>\n            <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                <t2>{info}</t2>\n            </centerstyle>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <centerstyle style={{ background: \"#cccccc\" }}>\n                    <t4>{Title}</t4>\n                </centerstyle>\n                {data}\n            </div>\n        );\n    }\n    FourthDataCell(dataJson, Title) {\n        function nullvalue(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            if (value === 0) {\n                return \"##\"\n            }\n            return value.toString().trim()\n        }\n        const { PickerDate } = this.props\n        const st = PickerDate + (7 * 60 * 60 * 1000)\n        var cellRender = []\n        for (let index = 0; index < 24; index++) {\n            const startTime = st + (index * 60 * 60 * 1000)\n            const endTime = st + ((index + 1) * 60 * 60 * 1000)\n            const filterData = dataJson.filter(function (value, index, arr) {\n                const timeObjectString = value.rec_dat.toString() + value.rec_tim.toString()\n                const time = moment(timeObjectString, 'YYYYMMDDHHmm').valueOf()\n                return time > startTime && time < endTime\n            })\n            if (filterData.length === 0) {\n                cellRender.push(\"--\")\n            }\n            // var sum = 0\n            for (let index = 0; index < filterData.length; index++) {\n                const element = filterData[index];\n                if (Title === \"滲液\") {\n                    cellRender.push(element.out_val1)\n                }\n                if (Title === \"嘔吐\") {\n                    const string = element.out_val1.toString() + \"/\" + element.nam.toString() + \"/\" + element.color.toString()\n                    cellRender.push(string)\n                }\n                if (Title === \"引流\") {\n                    const string = element.out_val1.toString() + \"/\" + element.nam.toString() + \"/\" + element.color.toString()\n                    cellRender.push(string)\n                }\n                if (Title === \"穿刺出\") {\n                    cellRender.push(element.out_val1)\n\n                }\n                if (Title === \"穿刺入\") {\n                    cellRender.push(element.inp_val1)\n\n                }\n                if (Title === \"透析出\") {\n                    cellRender.push(element.out_val1)\n\n                }\n                if (Title === \"透析入\") {\n                    cellRender.push(element.inp_val1)\n\n                }\n                if (Title === \"透析加總\") {\n                    const sum = Number(element.out_val1) - Number(element.inp_val1)\n                    cellRender.push(sum)\n\n                }\n                if (Title === \"沖洗出\") {\n                    cellRender.push(element.out_val1)\n\n                }\n                if (Title === \"沖洗入\") {\n                    cellRender.push(element.inp_val1)\n\n                }\n                if (Title === \"排尿\") {\n                    cellRender.push(element.inp_val1)\n\n                }\n            }\n\n        }\n        const data = cellRender.map((info, index) =>\n            <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                <t2>{nullvalue(info)}</t2>\n            </centerstyle>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <centerstyle style={{ background: \"#cccccc\" }}>\n                    <t4>{Title}</t4>\n                </centerstyle>\n                {data}\n            </div>\n        );\n    }\n\n    Thirdtablecell(dataJson, Title) {\n        const { PickerDate } = this.props\n        const st = PickerDate + (7 * 60 * 60 * 1000)\n        var cellRender = []\n\n        for (let index = 0; index < 24; index++) {\n            const startTime = st + (index * 60 * 60 * 1000)\n            const endTime = st + ((index + 1) * 60 * 60 * 1000)\n            const time = moment(dataJson.time, 'YYYYMMDDHHmm').valueOf()\n            if (time > startTime && time < endTime) {\n                cellRender.push(dataJson.value)\n            }\n            else {\n                cellRender.push(\"--\")\n            }\n        }\n\n        const data = cellRender.map((info, index) =>\n            <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                <t2>{info}</t2>\n            </centerstyle>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <centerstyle style={{ background: \"#cccccc\" }}>\n                    <t4>{Title}</t4>\n                </centerstyle>\n                {data}\n            </div>\n        );\n    }\n\n    Firsttablecell(dataList, Title) {\n        const { PickerDate } = this.props\n        const st = PickerDate + (7 * 60 * 60 * 1000)\n        var cellRender = []\n\n        for (let index = 0; index < 24; index++) {\n            const startTime = st + (index * 60 * 60 * 1000)\n            const endTime = st + ((index + 1) * 60 * 60 * 1000)\n            console.log(dataList)\n            const datafilter = dataList.filter(function (value, index, arr) {\n                const time = moment(value.rec_dat.toString() + value.rec_tim.toString(), 'YYYYMMDDHHmm').valueOf()\n                return time > startTime && time < endTime\n            })\n            var sum = 0\n            for (let index = 0; index < datafilter.length; index++) {\n                const element = datafilter[index];\n                sum = sum + Number(element.inp_val1)\n            }\n            cellRender.push(sum)\n        }\n\n        const data = cellRender.map((info, index) =>\n            <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                <t2>{info}</t2>\n            </centerstyle>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <centerstyle style={{ background: \"#cccccc\" }}>\n                    <t4>{Title}</t4>\n                </centerstyle>\n                {data}\n            </div>\n        );\n    }\n\n    RVList(cell) {\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <div style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', backgroundColor: \"#cccccc\", display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{\"RV\"}</div>\n                {cell}\n            </div>\n        );\n    }\n    render() {\n        function groupelement(array) {\n            function groupvalue(arr) {\n                const mapvalue = arr.map(function (value, index, arr) {\n                    return value.element\n                })\n                return mapvalue\n            }\n            var dataList = []\n            for (let index = 0; index < array.length; index++) {\n                const element = array[index];\n                const data = groupvalue(element)\n                if (element.length !== 0) {\n                    if (element[0].title === \"滲液\") {\n                        dataList.push({\n                            \"title\": element[0].title,\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"嘔吐\") {\n                        dataList.push({\n                            \"title\": element[0].title,\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"引流\") {\n                        const stringElement = element[0].element\n                        const string = stringElement.line + \"/\" + stringElement.pos\n                        dataList.push({\n                            \"title\": string,\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"穿刺\") {\n                        const stringElement = element[0].element\n                        if (stringElement.out_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"穿刺出\",\n                                \"element\": data\n                            })\n                        }\n                        if (stringElement.inp_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"穿刺入\",\n                                \"element\": data\n                            })\n                        }\n                    }\n                    if (element[0].title === \"透析\") {\n                        const stringElement = element[0].element\n                        if (stringElement.out_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"透析出\",\n                                \"element\": data\n                            })\n                        }\n                        if (stringElement.inp_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"透析入\",\n                                \"element\": data\n                            })\n                        }\n                        dataList.push({\n                            \"title\": \"透析加總\",\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"沖洗\") {\n                        const stringElement = element[0].element\n                        if (stringElement.out_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"沖洗出\",\n                                \"element\": data\n                            })\n                        }\n                        if (stringElement.inp_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"沖洗入\",\n                                \"element\": data\n                            })\n                        }\n                    }\n                    if (element[0].title === \"排便\") {\n                        dataList.push({\n                            \"title\": \"Stool\",\n                            \"element\": data\n                        })\n                        dataList.push({\n                            \"title\": \"Enema/Stimulation\",\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"排尿\") {\n                        const stringElement = element[0].element\n                        const string = stringElement.inp_val1\n                        dataList.push({\n                            \"title\": \"Urine\" + string,\n                            \"element\": data\n                        })\n                    }\n                }\n            }\n            return dataList\n        }\n        function groupfirstarray(arrayList) {\n            var result = arrayList.filter(function (value, index, arr) {\n                const res = arr.map(function (value, index, arr) {\n                    return value.compare\n                })\n                return res.indexOf(value.compare) === index;\n            });\n            var arrList = []\n            for (let index = 0; index < result.length; index++) {\n                const element = result[index];\n                const comparevalue = element.compare\n                const filterarray = arrayList.filter(function (value, index, arr) {\n                    return value.compare === comparevalue\n                })\n                arrList.push(filterarray)\n            }\n            return arrList\n        }\n        function nullvalue(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            if (value === 0) {\n                return \"#\"\n            }\n            return value.toString().trim()\n        }\n        function formatQDC(QDC) {\n            var FirstArray = []\n            var SecondArray = []\n            var ThirdArray = []\n            var FourthArray = []\n            if (Array.isArray(QDC)) {\n                for (let index = 0; index < QDC.length; index++) {\n                    const element = QDC[index];\n                    if (RegFilter.firstarea_Reg_IO().find(function (value, index, array) {\n                        return value === element.item\n                    })) {\n                        FirstArray.push({\n                            title: nullvalue(element.line) + \"/\" + nullvalue(element.nam) + \"/\" + nullvalue(element.pos),\n                            compare: nullvalue(element.line) + \"/\" + nullvalue(element.nam),\n                            element: element\n                        })\n                    }\n                    if (RegFilter.Secondarea_reg_IO().find(function (value, index, array) {\n                        return value === element.item\n                    })) {\n                        SecondArray.push({\n                            title: nullvalue(element.line) + \"/\" + nullvalue(element.nam) + \"/\" + nullvalue(element.pos),\n                            compare: nullvalue(element.line) + \"/\" + nullvalue(element.nam) + \"/\" + nullvalue(element.pos),\n                            element: element\n                        })\n                    }\n                    if (RegFilter.Thirdarea_reg_IO().find(function (value, index, array) {\n                        return value === element.item\n                    })) {\n                        ThirdArray.push({\n                            title: nullvalue(element.nam) + \"/\" + nullvalue(element.lost),\n                            compare: nullvalue(element.nam) + \"/\" + nullvalue(element.lost),\n                            element: element\n                        })\n                    }\n                    if (RegFilter.Fourtharea_reg_IO().find(function (value, index, array) {\n                        return value === element.item\n                    })) {\n                        FourthArray.push({\n                            title: element.item,\n                            compare: element.item,\n                            element: element\n                        })\n                    }\n                }\n            }\n            return {\n                \"FirstArray\": FirstArray,\n                \"SecondArray\": SecondArray,\n                \"ThirdArray\": ThirdArray,\n                \"FourthArray\": FourthArray\n            }\n        }\n\n\n\n        const { PickerDate } = this.props\n        const { QDC } = this.state\n        const dataList = formatQDC(QDC)\n        console.log(dataList.ThirdArray)\n        // const DataFirst = dataList.FirstArray\n        const FlootSheetFirstAreaData = groupfirstarray(dataList.FirstArray)\n        const FlootSheetSecondAreaData = groupfirstarray(dataList.SecondArray)\n        const FlootSheetThirdAreaData = groupfirstarray(dataList.ThirdArray)\n        const FlootSheetFourthAreaData = groupelement(groupfirstarray(dataList.FourthArray))\n        console.log(FlootSheetFirstAreaData)\n        console.log(FlootSheetSecondAreaData)\n        console.log(FlootSheetThirdAreaData)\n        console.log(FlootSheetFourthAreaData)\n        const start = PickerDate + 7 * 60 * 60 * 1000\n        const Firstdata = FlootSheetFirstAreaData.map(function (value, index, arr) {\n            const title = value[0].title\n            var timeForList = []\n            for (let index = 0; index < 24; index++) {\n                const startTime = start + (index * 60 * 60 * 1000)\n                const endTime = start + ((index + 1) * 60 * 60 * 1000)\n                var sum = 0\n                var elementList = []\n                for (let index = 0; index < value.length; index++) {\n                    const element = value[index].element;\n                    const valueSum = Number(element.inp_val1)\n                    const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    if (startTime <= elementTime && elementTime < endTime) {\n                        sum = sum + valueSum\n                        elementList.push(element)\n                    }\n                }\n                timeForList.push({\n                    value: sum,\n                    startTime: startTime,\n                    endTime: endTime,\n                    elementList: elementList\n                })\n            }\n            console.log(timeForList)\n            const cellMap = timeForList.map(function (info, index, arr) {\n                return (\n                    <div key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n                );\n            })\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                    <div style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', backgroundColor: \"#cccccc\", display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{title}</div>\n                    {cellMap}\n                </div>\n            );\n        })\n        const Secondedata = FlootSheetSecondAreaData.map(function (value, index, arr) {\n            const title = value[0].title\n            var timeForList = []\n            for (let index = 0; index < 24; index++) {\n                const startTime = start + (index * 60 * 60 * 1000)\n                const endTime = start + ((index + 1) * 60 * 60 * 1000)\n                var sum = 0\n                var elementList = []\n                for (let index = 0; index < value.length; index++) {\n                    const element = value[index].element;\n                    const valueSum = Number(element.inp_val1)\n                    const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    if (startTime <= elementTime && elementTime < endTime) {\n                        sum = sum + valueSum\n                        elementList.push(element)\n                    }\n                }\n                timeForList.push({\n                    value: sum,\n                    startTime: startTime,\n                    endTime: endTime,\n                    elementList: elementList\n                })\n            }\n            const cellMap = timeForList.map(function (info, index, arr) {\n                return (\n                    <div key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n                );\n            })\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                    <div style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', backgroundColor: \"#cccccc\", display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{title}</div>\n                    {cellMap}\n                </div>\n            );\n        })\n\n        const Thirddata = FlootSheetThirdAreaData.map(function (value, index, arr) {\n            const title = value[0].title\n            var timeForList = []\n            for (let index = 0; index < 24; index++) {\n                const startTime = start + (index * 60 * 60 * 1000)\n                const endTime = start + ((index + 1) * 60 * 60 * 1000)\n                var sum = 0\n                var elementList = []\n                for (let index = 0; index < value.length; index++) {\n                    const element = value[index].element;\n                    const valueSum = Number(element.inp_val1)\n                    const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    if (startTime <= elementTime && elementTime < endTime) {\n                        sum = sum + valueSum\n                        elementList.push(element)\n                    }\n                }\n                timeForList.push({\n                    value: sum,\n                    startTime: startTime,\n                    endTime: endTime,\n                    elementList: elementList\n                })\n            }\n            const cellMap = timeForList.map(function (info, index, arr) {\n                return (\n                    <div key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n                );\n            })\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                    <div style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', backgroundColor: \"#cccccc\", display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{title}</div>\n                    {cellMap}\n                </div>\n            );\n        })\n        function formatRV(List) {\n            var timeForList = []\n            for (let index = 0; index < 24; index++) {\n                const startTime = start + (index * 60 * 60 * 1000)\n                const endTime = start + ((index + 1) * 60 * 60 * 1000)\n                var sum = 0\n                var elementList = []\n                for (let index = 0; index < List.length; index++) {\n                    const element = List[index].element;\n                    const valueSum = Number(element.inp_val1)\n                    const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    if (startTime <= elementTime && elementTime < endTime) {\n                        sum = sum + valueSum\n                        elementList.push(element)\n                    }\n                }\n                timeForList.push({\n                    value: sum,\n                    startTime: startTime,\n                    endTime: endTime,\n                    elementList: elementList\n                })\n            }\n            return timeForList\n        }\n        const RVCellRender = formatRV(dataList.ThirdArray)\n        const cellMap = RVCellRender.map(function (info, index, arr) {\n            return (\n                <div key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n            );\n        })\n        const RV = this.RVList(cellMap)\n        const FourdataCellRender = FlootSheetFourthAreaData.map((value, index, arr) => {\n            const datajson = value.element\n            const title = value.title\n            return this.FourthDataCell(datajson, title)\n        })\n        return (\n            <div>\n                <div style={{ display: 'flex', alignItems: 'center', height: '50px' }}>\n                    <t1>I/O</t1>\n                </div>\n                <div style={{ display: Firstdata.length === 0 ? \"none\" : \"block\", border: \"1px solid black\", borderCollapse: \"collapse\" }}>\n                    {Firstdata}\n                </div>\n                <div style={{ display: Secondedata.length === 0 ? \"none\" : \"block\", border: \"1px solid black\", borderCollapse: \"collapse\" }}>\n                    {Secondedata}\n                </div>\n                <div style={{ display: Thirddata.length === 0 ? \"none\" : \"block\", border: \"1px solid black\", borderCollapse: \"collapse\" }}>\n                    {Thirddata}\n                    {RV}\n                </div>\n                <div style={{ display: FourdataCellRender.length === 0 ? \"none\" : \"block\", border: \"1px solid black\", borderCollapse: \"collapse\" }}>\n                    {FourdataCellRender}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Flootsheetio;","import React, { Component } from 'react';\nimport Flootsheetio from './Flootsheetio'\n// import Flowsheetvitalsign from './Flootsheetvitalsign'\nimport Vitalxaxis from '../../Module/Vitalxaxis'\nimport { DatePicker, Button } from 'antd';\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport './Flootsheetlayout.scss'\nimport X2JS from 'x2js';\nimport * as Wardstate from '../../Function/Wardstate'\n\nclass Flowsheetlayout extends Component {\n    state = {\n        PickerDate: moment(moment().format('YYYYMMDD')).valueOf(),\n        preCID: null,\n        QSPE: [],\n        // itemlist: []\n    }\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const CID = caseinfo.CASEID\n        const date = moment(moment().format('YYYYMMDD')).valueOf()\n        this.setState({ preCID: CID, PickerDate: date })\n        this.ApiData(CID, date)\n    }\n    componentDidUpdate() {\n        const CID = this.props.caseinfo.CASEID\n        const preCID = this.state.preCID\n        if (CID !== preCID) {\n            const date = this.state.PickerDate\n            this.setState({ preCID: CID, PickerDate: date })\n            this.ApiData(CID, date)\n        }\n    }\n    ApiData(CID, DateTime) {\n        const st = moment(DateTime + (7 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        const et = moment(DateTime + (31 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        ApiProvider.getQSPE(CID, st, et)\n            .then(data => {\n                const dataJson = Wardstate.XM2JSON(data.data)\n                // const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                if (Array.isArray(dataJson)) {\n                    this.setState({ QSPE: dataJson })\n                }\n                else {\n                    this.setState({\n                        QSPE: [dataJson]\n                    })\n                }\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n    }\n    onDateChange = (date, dateString) => {\n        const CID = this.props.caseinfo.CASEID\n        this.setState({ preCID: CID, PickerDate: date.valueOf() })\n        this.ApiData(date.valueOf())\n\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDate } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const bTemp = bTime - (6 * day)\n                bronDate <= bTemp && this.onDateChange(moment(bTime))\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD'))\n                this.onDateChange(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= aTemp && this.onDateChange(moment(aTime))\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const data = this.state.QSPE || [] //特殊護理事件\n        const splist = data.filter(function (value, index, array) {\n            if (value === undefined) {\n                return null\n            }\n            console.log(value)\n            const str = value.special\n            return str.match(\"@v\") === null\n        })\n        const specialListRender = splist.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ display: \"flex\", color: \"rgba(59, 151, 225, 1)\" }}>{value.special.toString().trim()}</div>\n            );\n        })\n        return (\n            <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\n                <div>\n                    {/* <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}> */}\n                    <div style={{ padding: \"0px 10px\", display: \"flex\" }}>\n                        <DatePicker disabledDate={(current) => { return current > moment().startOf(\"day\") || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }} width={120} value={moment(this.state.PickerDate)} allowClear={false} onChange={this.onDateChange} />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\", padding: \"2px 10px 0px 10px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                    </div>\n                    <div style={{ display: splist.length === 0 ? \"none\" : \"block\", border: \"rgba(238,238,238,1) 1px solid\", borderRadius: \"4px\" }}>\n                        <div style={{ fontSize: \"16px\", display: \"flex\", paddingLeft: \"5px\", alignItems: \"center\", backgroundColor: \"#cccccc\" }}>\n                            特殊護理事件:<t2 style={{ width: \"20px\", height: \"20px\", borderRadius: \"99em\", background: \"black\", color: \"white\", display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>{splist.length}</t2>\n                        </div>\n                        <div style={{ maxHeight: \"100px\", width: \"100%\", overflow: \"auto\" }}>\n                            {specialListRender}\n                        </div>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"20px\" }}>\n                    <div></div>\n                    <Vitalxaxis max={200} min={0} select_interval={0} select_date={this.state.PickerDate} id_key=\"xaxis_flootsheet\" svg_id=\"xaxis_svg_flootsheet\"></Vitalxaxis>\n                </div>\n                <div className='boxshadow'></div>\n                <div className='flootsheetlayout'>\n                    <Flootsheetio PickerDate={this.state.PickerDate} caseinfo={caseinfo}></Flootsheetio>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\" }}>\n                    <div></div>\n                    <Vitalxaxis max={200} min={0} select_interval={0} select_date={this.state.PickerDate} id_key=\"xaxis_flootsheet_bot\" svg_id=\"xaxis_svg_flootsheet_bot\"></Vitalxaxis>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Flowsheetlayout;\n","import React, { Component } from 'react';\nimport './Examchart.scss';\nimport * as d3 from \"d3\";\nimport moment from 'moment';\n\nclass Examchart extends Component {\n    state = {\n        change: false\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\".tooltip\").remove()\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n    drawChart() {\n\n        const { id_key, svg_id, max, min, lineChart } = this.props\n        const sT = new Date(moment(lineChart[0].date, 'YYYYMMDD').valueOf() - 24 * 60 * 60 * 1000)\n        const endT = new Date(moment(lineChart[lineChart.length - 1].date, 'YYYYMMDD') + 24 * 60 * 60 * 1000)\n\n        const fixLineChart = lineChart.filter(data => {\n            return data.value !== \"\"\n        })\n\n        // 邊界\n        const margin = { top: 20, right: 20, bottom: 30, left: 50 },\n            width = 1000 - margin.left - margin.right,\n            height = 500 - margin.top - margin.bottom;\n\n        let x = d3.scaleTime().domain([sT, endT]).range([0, width - margin.left - margin.right])\n        let y = d3.scaleLinear().domain([min, max]).range([height, 0])\n\n        var div = d3.select(\"#\" + id_key).append(\"div\")\n            .attr(\"class\", \"tooltip\")\n            .style(\"opacity\", 0);\n\n        let svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            .style(\"height\", height + margin.top + margin.bottom)\n            .style(\"width\", width + margin.left + margin.right)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        svg.append('g')\n            .call(d3.axisBottom(x).ticks(5).tickFormat(d3.timeFormat('%m/%d')))\n            .attr(\"transform\", `translate(0,${height})`)\n            .style('stroke', 'black')\n            .style('stroke-width', 1);\n\n        svg.append('g')\n            .call(d3.axisLeft(y))\n            .style('stroke', 'black')\n            .style('stroke-width', 1);\n\n        let line = d3.line()\n            .x(d => x(moment(d.date, 'YYYYMMDDHHmm').toDate()))\n            .y(d => y(d.value))\n            .curve(d3.curveMonotoneX);\n\n        let lines = svg.append('g').attr('class', 'lines');\n\n        lines.selectAll(\"circle\")\n            .data(fixLineChart)\n            .enter()\n            .append('g')\n            .append(\"circle\")\n            .attr(\"class\", \"lines-circle\")\n            .attr(\"cy\", d => y(d.value))\n            .attr(\"cx\", d => x(moment(d.date, 'YYYYMMDDHHmm').toDate()))\n            .attr('r', 5)\n            .on(\"mouseover\", function (d) {\n                div.transition()\n                    .duration(100)\n                    .style(\"opacity\", .9);\n                div.html(`檢驗時間 : ${d.date} <br/> 檢驗數值 : ${d.value}`)\n                    .style(\"left\", (d3.event.pageX - 200) + \"px\")\n                    .style(\"top\", (d3.event.pageY - 150) + \"px\");\n            })\n            .on(\"mouseout\", function (d) {\n                div.transition()\n                    .duration(300)\n                    .style(\"opacity\", 0);\n            })\n            .style('opacity', 1)\n            .style('fill', \"blue\");\n\n        lines\n            .selectAll('.line-group')\n            .data(fixLineChart)\n            .enter()\n            .append('g')\n            .attr('class', 'line-group')\n            .append('path')\n            .attr('class', 'line')\n            .attr('d', line(fixLineChart))\n            .style('stroke', 'black')\n            .style('fill', 'none');\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default Examchart;\n","import React, { Component } from 'react';\nimport { Select, Modal } from 'antd';\n// import * as ApiGithub from '../../API/ApiGithub'\nimport * as RegularData from '../../Data/RegularData'\nimport moment from 'moment'\nimport Examchart from './Examchart'\nimport { Button } from 'antd';\n\nclass Labview extends Component {\n    state = {\n        Selectus: this.props.SelectStatus,\n        PickerDateRange: [moment(), moment()],\n        visible: false,\n        lineCharttitle: '',\n        lineChart: [],\n        IRParse: RegularData.InspectionReportExtent()\n    }\n    componentDidMount() {\n        // ApiGithub.getExamReport()\n        //     .then(data => {\n        //         this.setState({\n        //             TitleList: data.data\n        //         })\n        //     })\n        //     .catch(err=>{\n        //         console.log(\"GithubAPI NG\" + err)\n        //     })\n        // this.setState({\n        //     TitleList: RegularData.ExamReportJson\n        // })\n    }\n\n    callbackDateFunction = (value) => {\n        this.props.parentDateCallback(value);\n    }\n    handleChange = (value) => {\n        this.callbackDateFunction(value)\n        this.setState({\n            Selectus: value\n        })\n    }\n    titleSearch = (value) => {\n        this.props.parentTitleCallback(value.target.value);\n    }\n    CellRender() {\n        const { DataList } = this.props\n        // console.log(DataList)\n        if (DataList.length === 0) {\n            return null\n        }\n        const DataListCell = DataList.map(function (element, index) {\n            const cellRender = element.Data.map(function (info, index) {\n                return (\n                    <centerstyle key={index} style={{ flex: 1, border: \"1px solid #cccccc\", borderCollapse: 'collapse' }}>\n                        <t3>{info}</t3>\n                    </centerstyle>\n                );\n            })\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"110px 1fr\", height: \"50px\" }}>\n                    <centerstyle style={{ border: \"1px solid #cccccc\", borderCollapse: 'collapse', paddingLeft: \"15px\" }}>\n                        <t3>{element.Time}</t3>\n                    </centerstyle>\n                    <div style={{ display: \"flex\", gridTemplateColumns: \"repeat(9,1fr)\" }}>\n                        {cellRender}\n                    </div>\n                </div >\n            );\n        })\n        return DataListCell\n    }\n\n    fixLineChartData = (e) => {\n        const { DataList } = this.props;\n        const value = e.target.value;\n        const number = e.target.getAttribute('index');\n\n        let showDate = DataList.map(data => {\n            let temp = {}\n            temp['date'] = data.Time;\n            temp['value'] = data.Data[number];\n            return temp\n        })\n\n        showDate.sort((x, y) => {\n            return moment(x.date, 'YYYYMMDDHHmm').valueOf() - moment(y.date, 'YYYYMMDDHHmm').valueOf()\n        })\n\n        this.setState({\n            lineCharttitle: value,\n            lineChart: showDate,\n        }, () => { this.showModel() });\n    }\n    showModel = () => {\n        this.setState({\n            visible: true,\n        });\n    }\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    charttableview = () => {\n\n        if (this.state.lineCharttitle === '') { return null }\n\n        const dataIR = this.state.IRParse\n        const key = Object.keys(dataIR)[this.state.Selectus]\n        const range = dataIR[key][this.state.lineCharttitle]\n\n        const lineChart = this.state.lineChart\n        const itemValue = []\n\n        if (range.min === undefined || range.max === undefined) {\n            lineChart.map(data => { itemValue.push(data.value) })\n        }\n\n        const max = range.max !== undefined ? range.max : Math.max(...itemValue)\n        const min = range.min !== undefined ? range.min : Math.min(...itemValue)\n\n        return (\n            <div style={{ margin: \"20px 0px\" }}>\n                <Examchart lineChart={lineChart} max={max} min={min} id_key={\"svgExamID\"} svg_id={\"svgExamSVG\"}></Examchart>\n            </div>\n        );\n    }\n\n    render() {\n        const { Option } = Select;\n        const visible = this.state.visible\n        const lineCharttitle = this.state.lineCharttitle\n        const handleOk = this.handleOk\n        const handleCancel = this.handleCancel\n        const fixLineChartData = this.fixLineChartData\n        const charttableview = this.charttableview()\n        const LabDataList = RegularData.ExamReportJson()\n        //0:CBC 1:電解質 2:肝功能 3:心臟 4:凝血 5:GAS 6:Glucose\n        const SelectList = LabDataList.map(function (info, index) {\n            // console.log(info.index)\n            return (\n                <Option key={info.index} value={info.index} >{info.select}</Option>\n            );\n        })\n        const SelectTitlefilter = LabDataList.filter(function (element, index) {\n            const selectdata = Select\n            return element.index = selectdata\n        })\n        if (SelectTitlefilter.length === 0) {\n            return null\n        }\n        const SelectTitle = SelectTitlefilter[this.state.Selectus].title\n        const SelectTitleRender = SelectTitle.map(function (info, index) {\n            return (\n                <centerstyle style={{ flex: 1 }} key={index}>\n                    <Button style={{ width: \"70px\", backgroundColor: \"transparent\", border: \"2px white solid\" }} index={index} value={info} onClick={fixLineChartData}>{info}</Button>\n                </centerstyle >\n            );\n        })\n        const ExamLab = this.CellRender()\n        // console.log(ExamLab)\n        return (\n            <div>\n                <Modal\n                    title={lineCharttitle}\n                    visible={visible}\n                    onOk={handleOk}\n                    onCancel={handleCancel}\n                    width={1200}\n                    footer={null}>\n                    {charttableview}\n                </Modal>\n                <t1>LAB(常規檢驗)</t1>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"auto 1fr\", marginTop: \"10px\", gridColumnGap: \"5px\" }}>\n                    <t2 style={{ display: \"flex\", alignItems: \"center\" }}>檢驗類別：</t2>\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                        <Select defaultValue={this.state.Selectus} style={{ width: \"90%\" }} onChange={this.handleChange}>\n                            {SelectList}\n                        </Select>\n                    </div>\n                </div>\n                <div style={{ marginTop: \"10px\", display: \"grid\", gridTemplateColumns: \"110px 1fr\", height: \"50px\", backgroundColor: \"#E2EDF3\" }}>\n                    <centerstyle>\n                        <t2>檢驗項目</t2>\n                    </centerstyle>\n                    <div style={{ display: \"flex\", gridTemplateColumns: \"repeat(9,1fr)\", justifycontent: \"space-between\" }} onClick={this.titleSearch}>\n                        {SelectTitleRender}\n                    </div>\n                </div>\n                <div>{this.state.Title}</div>\n                {ExamLab}\n            </div >\n        );\n    }\n}\n\nexport default Labview;\n","export function ExamReportJson() {\n    return [\n        {\n            \"select\": \"CBC檢驗:WBC、Band、Seg、Lym、Hgb、Hct、PLT\",\n            \"index\": 0,\n            \"title\": [\n                \"WBC\",\n                \"Band\",\n                \"Seg\",\n                \"Lym\",\n                \"Hgb\",\n                \"Hct\",\n                \"PLT\"\n            ]\n        },\n        {\n            \"select\": \"電解質與腎功能檢驗:Na、K、Cl、Ca++、Ca、Mg++、P、BUN、Cr\",\n            \"index\": 1,\n            \"title\": [\n                \"Na\",\n                \"K\",\n                \"Cl\",\n                \"Ca++\",\n                \"Ca\",\n                \"Mg++\",\n                \"P\",\n                \"BUN\",\n                \"Cr\"\n            ]\n        },\n        {\n            \"select\": \"肝功能檢驗:ALT、AST、TBil、DBil、r-GT、Alk-P、ALB\",\n            \"index\": 2,\n            \"title\": [\n                \"ALT\",\n                \"AST\",\n                \"TBil\",\n                \"DBil\",\n                \"r-GT\",\n                \"Alk-P\",\n                \"ALB\"\n            ]\n        },\n        {\n            \"select\": \"早產兒追蹤:Iron、TIBC、FeSat、LDH、Alk-P\",\n            \"index\": 3,\n            \"title\": [\n                \"Iron\",\n                \"TIBC\",\n                \"FeSat\",\n                \"LDH\",\n                \"Alk-P\"\n            ]\n        },\n        {\n            \"select\": \"心臟功能檢驗:CK、CK-MB、BNP、Trop-T\",\n            \"index\": 4,\n            \"title\": [\n                \"CK\",\n                \"CK-MB\",\n                \"BNP\",\n                \"Trop-T\"\n            ]\n        },\n        {\n            \"select\": \"凝血功能檢驗:PT、APTT、INR\",\n            \"index\": 5,\n            \"title\": [\n                \"PT\",\n                \"APTT\",\n                \"INR\"\n            ]\n        },\n        {\n            \"select\": \"Gas檢驗:PH、pCO2、pO2、HCO3、BE、O2Sat、FiO2\",\n            \"index\": 6,\n            \"title\": [\n                \"PH\",\n                \"pCO2\",\n                \"pO2\",\n                \"HCO3\",\n                \"BE\",\n                \"O2Sat\",\n                \"FiO2\"\n            ]\n        },\n        ,\n        {\n            \"select\": \"GAS(Additionary)檢驗:Hgb、Hct、Na、K、Ca++、BUN、Cr\",\n            \"index\": 7,\n            \"title\": [\n                \"Hgb\",\n                \"Hct\",\n                \"Na\",\n                \"K\",\n                \"Ca(Free)\",\n                \"BUN\",\n                \"Cr\"\n            ]\n        },\n        {\n            \"select\": \"Glucose檢驗:Glu(BedSide, Lab)\",\n            \"index\": 8,\n            \"title\": [\n                \"Glu(BedSide)\",\n                \"Glu(Lab)\"\n            ]\n        },\n        {\n            \"select\": \"黃疸檢查:TCB、MicroBil、TBil、DBil\",\n            \"index\": 9,\n            \"title\": [\n                \"TCB\",\n                \"MicroBil\",\n                \"TBil\",\n                \"DBil\"\n            ]\n        },\n        {\n            \"select\": \"感染指數:WBC、Band、Seg、Lym、PCT、CRP\",\n            \"index\": 10,\n            \"title\": [\n                \"WBC\",\n                \"Band\",\n                \"Seg\",\n                \"Lym\",\n                \"PCT\",\n                \"CRP\"\n            ]\n        }\n    ]\n}\nexport function FlagReg() {\n    return [\n        {\n            item: \"Respirator\",\n            \"ParseValueUD\": [\n                \"Restriction\"\n            ],\n            \"ParseValueTRT\": []\n        },\n        {\n            item: \"TPN\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"NPO\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"Anti\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"Foley\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"Drain\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        }\n    ]\n}\nexport function QDC() {\n    return {\n        \"Feeding\": [\n            \"進食\"\n        ],\n        \"IV\": [\n            \"血品\",\n            \"輸液\"\n        ],\n        \"Urine\": [\n            \"排尿\"\n        ],\n        \"Other\": [\n            \"失血\",\n            \"滲液\",\n            \"嘔吐\",\n            \"引流\",\n            \"穿刺\",\n            \"透析\",\n            \"沖洗\",\n            \"排便\"\n        ]\n    }\n}\n\nexport function ChronicLab() {\n    return {\n        \"Biochemical\": [\n        ],\n        \"Blood\": [\n            \"BLOOD\"\n        ],\n        \"Cultivate\": [\n\n        ],\n        \"GAS\": [\n\n        ],\n        \"Glu\": [\n\n        ],\n        \"Radiation\": [\n        ]\n    }\n}\n\nexport function NonLabExamReportParser() {\n    return [\n        {\n            parser_name: \"CBC\",\n            apply_condition: {\n                name: \"CBC|WBC|HB|PLT\",\n                sample: null,\n                lab: null,\n                start_time: null,\n                end_time: null,\n            },\n            mappings: [\n                {\n                    key: \"Hb\",\n                    regex_str: \"HB:\\\\s+(\\\\d+(.\\\\d)?)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"WBC\",\n                    regex_str: \"wbc:\\\\s+(\\\\d+)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"PLT\",\n                    regex_str: \"plt:\\\\s+(\\\\d+)\",\n                    regex_flags: 'ism',\n                    position: 1\n                }\n            ],\n            summary: \"[WBC;-]/[Hb;]/[PLT;-]\"\n        },\n        {\n            parser_name: \"Atypical Respiratory Panel\",\n            apply_condition: {\n                name: \"Atypical Respiratory Panel|CBC|PH|HB|PO2\",\n                sample: null,\n                lab: null,\n                start_time: null,\n                end_time: null,\n            },\n            mappings: [\n                {\n                    key: \"Hb\",\n                    regex_str: \"Hb:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"PH\",\n                    regex_str: \"PH:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"PO2\",\n                    regex_str: \"PO2:\\\\s+\\\\((\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"FIO2\",\n                    regex_str: \"FIO2:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"HCO3\",\n                    regex_str: \"HCO3:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                }\n            ],\n            summary: \"[PH;-]/[Hb;-]/[PO2;-]/[FIO2;-]/[HCO3;-]\"\n        }\n    ]\n}\n\nexport function NonLabExamORDListParser() {\n    return [\n        {\n            parser_name: \"ORDLIST\",\n            apply_condition: {\n                name: \"ORDLIST\",\n                sample: null,\n                lab: null,\n                start_time: null,\n                end_time: null,\n            },\n            mappings: [\n                {\n                    key: \"飲食類別\",\n                    regex_str: \"(CHEST\\\\s+KUB\\\\s+\\\\(FOR\\\\s+BABY\\\\)\\\\s+PORTABLE)|(BRAIN\\\\s+ECHO\\\\s+\\\\(NBD\\\\))\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"管路類別\",\n                    regex_str: \"(BLOOD\\\\s+GAS)|(Atypical\\\\s+Respiratory\\\\s+Panel)|(BLOOD\\\\s+PRODUCTS\\\\s+IRRADIATION)|(Aliqot\\\\s+and\\\\s+storage\\\\s+of\\\\s+blood)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"呼吸類別\",\n                    regex_str: \"(NT-pro-BNP)|(ANTIBODY\\\\s+SCREENING)\",\n                    regex_flags: 'ism',\n                    position: 1\n                }\n            ],\n            summary: \"[CHEST KUB;-]/[BLOOD GAS;-]/[Glucose;-]\"\n        }\n    ]\n}\n\nexport function InspectionReportExtent() {\n    return {\n        \"CBC\": {\n            \"WBC\": {\n                \"min\": 10000,\n                \"max\": 30000\n            },\n            \"Band\": {\n                \"min\": 0,\n                \"max\": 10\n            },\n            \"Seg\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"Lym\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"Hb\": {\n                \"min\": 10,\n                \"max\": 18\n            },\n            \"Hct\": {\n                \"min\": 30,\n                \"max\": 55\n            },\n            \"PLT\": {\n                \"min\": 100000,\n                \"max\": 450000\n            }\n        },\n        \"電解質與腎功能\": {\n            \"Na\": {\n                \"min\": 120,\n                \"max\": 160\n            },\n            \"K\": {\n                \"min\": 0,\n                \"max\": 8\n            },\n            \"Cl\": {\n                \"min\": 80,\n                \"max\": 120\n            },\n            \"Ca++\": {\n                \"min\": 0.5,\n                \"max\": 1.8\n            },\n            \"Ca\": {\n                \"min\": 6,\n                \"max\": 12\n            },\n            \"Mg++\": {\n                \"min\": 0,\n                \"max\": 8\n            },\n            \"P\": {\n                \"min\": 0,\n                \"max\": 10\n            },\n            \"BUN\": {\n                \"min\": 0,\n                \"max\": 60\n            },\n            \"Cr\": {\n                \"min\": 0,\n                \"max\": 5\n            }\n        },\n        \"肝功能\": {\n            \"ALT\": {\n                \"min\": 0,\n                \"max\": 200\n            },\n            \"AST\": {\n                \"min\": 0,\n                \"max\": 200\n            },\n            \"TBil\": {\n                \"min\": 0,\n                \"max\": 30\n            },\n            \"DBil\": {\n                \"min\": 0,\n                \"max\": 20\n            },\n            \"r-GT\": {\n                \"min\": 0,\n                \"max\": 200\n            },\n            \"Alk-P\": {\n                \"min\": 0,\n                \"max\": 1600\n            },\n            \"ALB\": {\n                \"min\": 0,\n                \"max\": 5\n            }\n        },\n        \"早產兒追蹤\": {\n            \"Iron\": {\n                \"min\": 0,\n                \"max\": 300\n            },\n            \"TIBC\": {\n                \"min\": 0,\n                \"max\": 300\n            },\n            \"FeSat\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"LDH\": {\n                \"min\": 0,\n                \"max\": 2000\n            },\n            \"Alk-P\": {\n                \"min\": 0,\n                \"max\": 1600\n            }\n        },\n        \"心臟功能\": {\n            \"CK\": {\n                \"min\": 0,\n                \"max\": 6000\n            },\n            \"CK-MB\": {\n                \"min\": 0,\n                \"max\": 2000\n            },\n            \"BNP\": {\n                \"min\": 0,\n                \"max\": 20000\n            },\n            \"Trop-T\": {\n                \"min\": 0,\n                \"max\": 1000\n            }\n        },\n        \"凝血功能\": {\n            \"PT\": {\n                \"min\": 0,\n                \"max\": 120\n            },\n            \"APTT\": {\n                \"min\": 0,\n                \"max\": 120\n            },\n            \"INR\": {\n                \"min\": 0,\n                \"max\": 4\n            }\n        },\n        \"Gas\": {\n            \"pH\": {\n                \"min\": 6.5,\n                \"max\": 7.7\n            },\n            \"pCO2\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"pO2\": {\n                \"min\": 0,\n                \"max\": 200\n            },\n            \"HCO3\": {\n                \"min\": 0,\n                \"max\": 40\n            },\n            \"BE\": {\n                \"min\": -30,\n                \"max\": 20\n            },\n            \"O2Sat\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"FiO2\": {\n                \"min\": 0,\n                \"max\": 100\n            }\n        },\n        \"GAS(Additionary)\": {\n            \"Hgb\": {\n                \"min\": 6,\n                \"max\": 22\n            },\n            \"Hct\": {\n                \"min\": 10,\n                \"max\": 70\n            },\n            \"Na\": {\n                \"min\": 120,\n                \"max\": 160\n            },\n            \"K\": {\n                \"min\": 0,\n                \"max\": 8\n            },\n            \"Ca++\": {\n                \"min\": 0.5,\n                \"max\": 1.8\n            },\n            \"BUN\": {\n                \"min\": 0,\n                \"max\": 60\n            },\n            \"Cr\": {\n                \"min\": 0,\n                \"max\": 5\n            }\n        },\n        \"Glucose\": {\n            \"Glu (BedSide)\": {\n                \"min\": 0,\n                \"max\": 300\n            },\n            \"Glu (Lab)\": {\n                \"min\": 0,\n                \"max\": 300\n            }\n        },\n        \"黃疸\": {\n            \"TCB\": {\n                \"min\": 0,\n                \"max\": 30\n            },\n            \"MicroBil\": {\n                \"min\": 0,\n                \"max\": 30\n            },\n            \"TBil\": {\n                \"min\": 0,\n                \"max\": 30\n            },\n            \"DBil\": {\n                \"min\": 0,\n                \"max\": 20\n            }\n        },\n        \"感染指數\": {\n            \"WBC\": {\n                \"min\": 10000,\n                \"max\": 30000\n            },\n            \"Band\": {\n                \"min\": 0,\n                \"max\": 0.05\n            },\n            \"Seg\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"Lym\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"PCT\": {\n                \"min\": 0,\n                \"max\": 20\n            },\n            \"CRP\": {\n                \"min\": 0,\n                \"max\": 20\n            }\n        }\n    }\n\n}\n","import React, { Component } from 'react';\nimport './ExamNonlabtablecell.scss'\n// import { Nonlablist } from '../../Data/Wardviewdata'\nimport moment from 'moment'\nimport NonlabviewtableCell from '../CrossSectionView/NonlabviewtableCell'\n// import { Modal } from 'antd';\n// import InsReportModal from '../ExamReportModal'\n\nclass Examnonlabviewtable extends Component {\n    state = {\n        visible: false\n    }\n\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            const resultKey = mapping.sample ? mapping.key + \"-\" + mapping.sample : mapping.key\n            allResult[resultKey] = []\n        });\n        allResult[\"全部\"] = []\n        inputs.forEach(input => {\n            let content = input.ORPROCED;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\" && (mapping.sample ? input.ORSPCN1.trim() === mapping.sample : true)) {\n                    const resultKey = mapping.sample ? mapping.key + \"-\" + mapping.sample : mapping.key\n                    allResult[resultKey].push(input)\n                }\n            });\n\n            allResult[\"全部\"].push(input)\n        });\n\n        return allResult;\n    }\n\n    render() {\n        function listforstatus(ordlist, ressect, pickerdaterange, StateMode, InputMode) {\n            if (StateMode !== 0) {\n                /*\n                預設 \n                全部 StateMode == 0\n                已開單 StateMode == 1, data.ORSTATUS == 30\n                已簽收 StateMode == 2, data.ORSTATUS == 31\n                已發報告 StateMode == 3, data.ORSTATUS == 32\n                */\n                const changeState = { '1': '30', '2': '31', '3': '32' }\n                ordlist = ordlist.filter(data => {\n                    return data.ORSTATUS === changeState[StateMode.toString()]\n                })\n            }\n\n            if (InputMode !== null) {\n                ordlist = ordlist.filter(data => {\n                    return data.ORPROCED.match(InputMode) !== null\n                })\n            }\n\n            var status_report = []\n            console.log(ordlist, ressect, pickerdaterange)\n            const et = pickerdaterange[1].valueOf() + (24 * 60 * 60 * 1000)\n            const st = pickerdaterange[0].valueOf()\n            if (Array.isArray(ordlist) && Array.isArray(ressect)) {\n                for (let index = 0; index < ordlist.length; index++) {\n                    const element = ordlist[index];\n                    const time = element.ORBGNDT.toString().trim() + element.ORBGNTM.toString().trim()\n                    const timeStamp = moment(time, 'YYYY-MM-DDHHmmss').valueOf()\n                    if (timeStamp > st && timeStamp < et) {\n                        const status = ressect.find(function (value, index, array) {\n                            return value.ORDCLNM === element.ORDCLNM\n                        })\n                        if (status) {\n                            status_report.push({\n                                \"status\": true,\n                                \"element\": element\n                            })\n                        }\n                        else {\n                            status_report.push({\n                                \"status\": false,\n                                \"element\": element\n                            })\n\n                        }\n                    }\n                }\n            }\n            return status_report\n        }\n\n        const { PickerDateRange, ORDLIST, RESSECT, StateMode, InputMode } = this.props\n\n        let clusteredData = {}\n        if (this.props.parser !== undefined) {\n            clusteredData = this.parse(ORDLIST, this.props.parser)\n        }\n\n        //filter data by selected class\n        let filteredData = clusteredData[this.props.selectedClass];\n\n        //Picker Date 前三天\n        const list = listforstatus(filteredData, RESSECT, PickerDateRange, StateMode, InputMode)\n        console.log(list)\n        const showModal = this.props.showModal\n        const nonlabcell = list.map(function (value, index, array) {\n            // console.log(value)\n            const time = moment(value.element.ORDATE.toString().trim() + value.element.ORTIME.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n            const come = value.element.ORSPCN1\n            const name = value.element.ORPROCED\n            const status = value.element.ORSTATUS\n\n            return (\n                <NonlabviewtableCell key={\"Examnonlabviewtable\" + index} come={come} time={time} name={name} status={status} hisId={value.element.ORHISTNO} caseId={value.element.ORDSEQCN} month={value.element.ORMM} seq={value.element.ORDSEQNO} showModal={showModal}></NonlabviewtableCell>\n            );\n        })\n\n        return (\n            <div style={{ marginTop: \"10px\" }}>\n                <div style={{ height: \"50px\", border: \"#E2EDF3 1px solid\", backgroundColor: \"#E2EDF3\", display: \"grid\", gridTemplateColumns: \"1fr 1.5fr 1fr 1fr 1fr\" }}>\n                    <t3 className='nonlabtebletitlecell'>檢驗日期</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗項目名稱</t3>\n                    <t3 className='nonlabtebletitlecell'>檢體來源</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗項目狀態</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗結果</t3>\n                </div>\n                <div className='nonlabviewtable'>\n                    {nonlabcell}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Examnonlabviewtable\n","import React, { Component } from 'react';\nimport Examnonlabviewtable from './ExamNonlabtablecell'\nimport { Input,  Select, Modal } from 'antd';\n// import moment from 'moment';\n// import searchlogo from '../../Image/svg/Search.svg'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport InsReportModal from '../ExamReportModal'\n\n// var mode_class, mode_state;\nclass Nonlabview extends Component {\n    state = {\n        ClassMode: \"全部\",\n        StateMode: 0,\n        InputMode: null,\n        parser: { \"mappings\": [] },\n        modalVisible: false,\n        modalReport: \"\"\n    }\n\n    componentDidMount() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"NonLabExamReport\");\n                parser.mappings = [{ \"key\": \"全部\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson ExamReportNonLab OK \" + JSON.stringify(parser))\n                this.setState({\n                    parser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    Inputvaluesearch = (event) => {\n        this.setState({ InputMode: event.target.value })\n    }\n\n    onChangeState = (value) => {\n        this.setState({ StateMode: value })\n    }\n\n    onChangeClass = (value) => {\n        this.setState({ ClassMode: value })\n    }\n\n    showModal = (report) => {\n        console.log(\"showModal :\" + JSON.stringify(report))\n        this.setState({\n            modalVisible: true,\n            modalReport: report\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    render() {\n        // var statetime = {\n        //     \"Starttime\": (+new Date()),\n        //     \"Endtime\": (+new Date())\n        // }\n        // const datearray = []\n        const { Option } = Select;\n        // function onChange(value, dateString) {\n        //     statetime.Starttime = (+new Date(dateString[0]))\n        //     statetime.Endtime = (+new Date(dateString[1]))\n        //     datearray.push(statetime.Starttime)\n        //     datearray.push(statetime.Endtime)\n        // }\n        // function Inputchange() {\n        //     const value = {\n        //         \"date\": datearray,\n        //         \"keyword\": document.getElementById(\"keywordsearch\").value\n        //     }\n        //     console.log(value)\n        // }\n        const { PickerDateRange, ORDLIST, RESSECT } = this.props\n        const { modalVisible, modalReport } = this.state\n        const showModal = this.showModal\n        const handleOk = this.handleOk\n        const handleCancel = this.handleCancel\n        return (\n            <div>\n                <t1>報告清單</t1>\n                <div style={{ display: 'grid', gridTemplateColumns: \"130px 130px auto\", gridColumnGap: \"5px\", marginTop: \"10px\" }}>\n                    <Select defaultValue={this.state.ClassMode} placeholder=\"選擇檢驗類別\" style={{ width: 120 }} onChange={this.onChangeClass}>\n                        {this.state.parser.mappings.map((mapping, index) => {\n                            return <Option key={index} value={mapping.sample ? mapping.key + \"-\" + mapping.sample : mapping.key}>{mapping.sample? mapping.key + \"-\" + mapping.sample : mapping.key}</Option>\n                        })}\n                    </Select>\n                    <Select defaultValue={this.state.StateMode} placeholder=\"選擇項目狀態\" style={{ width: 120 }} onChange={this.onChangeState}>\n                        <Option value={0}>全部</Option>\n                        <Option value={1}>已開單</Option>\n                        <Option value={2}>已簽收</Option>\n                        <Option value={3}>已發報告</Option>\n                    </Select>\n                    <Input id=\"keywordsearch\" placeholder=\"輸入關鍵字\" onChange={this.Inputvaluesearch} />\n                    {/* <div onClick={() => this.Inputvaluesearch()} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <img src={searchlogo} alt=\"searchlogo\" />\n                    </div> */}\n                </div>\n                <Examnonlabviewtable PickerDateRange={PickerDateRange} ORDLIST={ORDLIST} RESSECT={RESSECT} selectedClass={this.state.ClassMode} parser={this.state.parser} StateMode={this.state.StateMode} InputMode={this.state.InputMode} visible={modalVisible} showModal={showModal} handleOk={handleOk} handleCancel={handleCancel}></Examnonlabviewtable>\n                <Modal\n                    title={\"檢驗結果\"}\n                    visible={modalVisible}\n                    onOk={handleOk}\n                    onCancel={handleCancel}\n                    width={1000}\n                    footer={null}>\n                    <InsReportModal report={modalReport}></InsReportModal>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Nonlabview\n","import React, { Component } from 'react';\nimport Labview from './ExamLabview'\nimport { DatePicker, Button } from 'antd';\n// import searchlogo from '../../Image/svg/Search.svg'\n// import Examchart from './Examchart'\n// import Examaxis from './Examaxis'\nimport './ExamReport.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport Nonlabview from './NonLabview'\n// import * as RegularData from '../../Data/RegularData'\n\nclass Examreport extends Component {\n    state = {\n        selectdata: 0,\n        selectTitle: '',\n        PickerDateRange: [moment(moment().subtract(6, 'days').format('YYYYMMDD')),\n        moment(moment().format('YYYYMMDD'))],\n        RESDGLU1: [], //累積報告\n        RESLAB02: [], //累積報告\n        RESLAB01: [],  //累積報告\n        RESDBGAS: [],  //累積報告\n        RESLAB0C: [],//累積報告\n        ORDLIST: [],\n        RESSECT: []\n    }\n    constructor(props) {\n        super(props)\n        this.PickerDateRangeChange = this.PickerDateRangeChange.bind(this)\n    }\n\n    SelectDataList() {\n        function vallofnull(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"\"\n            }\n            return value.toString().trim()\n        }\n        const DateRange = this.state.PickerDateRange\n        console.log(`show DataRange : ${DateRange}`)\n        const selectData = this.state.selectdata\n        const st_timestamp = DateRange[0].valueOf()\n        const et_timestamp = DateRange[1].valueOf() + (24 * 60 * 60 * 1000)\n        // const { PickerDateRange, RESLAB02, RESDGLU1, RESLAB01, RESDBGAS, RESLAB0C, ORDLIST, RESSECT } = this.props\n        const RESLAB02 = this.state.RESLAB02\n        const RESDGLU1 = this.state.RESDGLU1\n        const RESLAB01 = this.state.RESLAB01\n        const RESDBGAS = this.state.RESDBGAS\n        const RESLAB0C = this.state.RESLAB0C\n\n\n        var CellData = []\n        console.log(selectData, RESLAB02, RESDGLU1, RESLAB01, RESDBGAS)\n        if (selectData === 0) { // CBC\n            for (let index = 0; index < RESLAB02.length; index++) {\n                const element = RESLAB02[index];\n                const WBC = vallofnull(element.RSV01)\n                const Band = vallofnull(element.RSV13)\n                const Seq = vallofnull(element.RSV14)\n                const Lym = vallofnull(element.RSV15)\n                const Hb = vallofnull(element.RSV03)\n                const Hct = vallofnull(element.RSV04)\n                const Plt = vallofnull(element.RSV09)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                console.log(\"time \" + time + \" st_timestamp \" + st_timestamp + \" et_timestamp \" + et_timestamp)\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [WBC, Band, Seq, Lym, Hb, Hct, Plt]\n                    })\n                }\n            }\n            console.log(\"CellData => \" + JSON.stringify(CellData))\n            return CellData\n        }\n        if (selectData === 1) { // 電解質與腎\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const Na = vallofnull(element.RSV13)\n                const K = vallofnull(element.RSV14)\n                const Cl = vallofnull(element.RSV15)\n                const CaFree = \"No\"\n                const CaTotal = vallofnull(element.RSV03)\n                const Mg = \"No\"\n                const P = vallofnull(element.RSV17)\n                const BUN = vallofnull(element.RSV05)\n                const Cr = vallofnull(element.RSV06)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [Na, K, Cl, CaFree, CaTotal, Mg, P, BUN, Cr]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 2) { // 肝功能\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const Alt = vallofnull(element.RSV11)\n                const AST = vallofnull(element.RSV12)\n                const TBil = vallofnull(element.RSV08)\n                const DBil = vallofnull(element.RSV25)\n                const rGGT = vallofnull(element.RSV19)\n                const Alkp = vallofnull(element.RSV09)\n                const Alb = vallofnull(element.RSV02)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [Alt, AST, TBil, DBil, rGGT, Alkp, Alb]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 3) { // 早產兒\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const Iron = vallofnull(element.RSV26)\n                const TIBC = vallofnull(element.RSV28)\n                const FeSat = parseInt(vallofnull(element.RSV26)) / parseInt(vallofnull(element.RSV26))\n                const LDH = vallofnull(element.RSV10)\n                const Alkp = vallofnull(element.RSV9)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [Iron, TIBC, FeSat, LDH, Alkp]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 4) { // 心臟\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const ck = vallofnull(element.RSV18)\n                const ckMB = vallofnull(element.RSV28)\n                const BNP = \"No\"\n                const Troponinl = vallofnull(element.RSV30)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [ck, ckMB, BNP, Troponinl]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 5) { // 凝血\n            for (let index = 0; index < RESLAB02.length; index++) {\n                const element = RESLAB02[index];\n                const PT = vallofnull(element.RSV10)\n                const APTT = vallofnull(element.RSV11)\n                const INR = vallofnull(element.RSV12)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [PT, APTT, INR]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 6) { // GAS(Acid-Base)\n            for (let index = 0; index < RESDBGAS.length; index++) {\n                const element = RESDBGAS[index];\n                const PH = vallofnull(element.SS07)\n                const pCO2 = vallofnull(element.SS06)\n                const pO2 = vallofnull(element.SS08)\n                const HCO3 = vallofnull(element.SS04)\n                const BE = vallofnull(element.SS01)\n                const Sample = \"No\"\n                const O2Sat = vallofnull(element.SS05)\n                const FiO2 = vallofnull(element.SS03)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [PH, pCO2, pO2, HCO3, BE, Sample, O2Sat, FiO2]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 7) { // GAS(Additionary)\n            for (let index = 0; index < RESDBGAS.length; index++) {\n                const element = RESDBGAS[index];\n                const Hb = vallofnull(element.SS11)\n                const Hct = vallofnull(element.SS12)\n                const Na = vallofnull(element.SS13)\n                const K = vallofnull(element.SS14)\n                const CaFree = vallofnull(element.SS15)\n                const Bun = vallofnull(element.SS16)\n                const Cr = vallofnull(element.SS17)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [Hb, Hct, Na, K, CaFree, Bun, Cr]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 8) { // Glucose\n            for (let index = 0; index < RESDGLU1.length; index++) {\n                const element = RESDGLU1[index]\n                const GluBeside = vallofnull(element.GLUFAST)\n                const GluLab = vallofnull(element.RSV16)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [GluBeside, GluLab]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 9) { // 黃疸\n            for (let index = 0; index < RESLAB0C.length; index++) {\n                const element = RESLAB0C[index]\n                const TCB = vallofnull(element.RSV01)\n                const MicroBil = vallofnull(element.RSV02)\n                const TBil = vallofnull(element.RSV03)\n                const DBil = vallofnull(element.RSV04)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [TCB, MicroBil, TBil, DBil]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 10) { // 感染指數\n            for (let index = 0; index < RESLAB02.length; index++) {\n                const elementOne = RESLAB02[index]\n                const elementTwo = RESLAB01[index]\n                const WBC = vallofnull(elementOne.RSV01)\n                const Band = vallofnull(elementOne.RSV13)\n                const Seg = vallofnull(elementOne.RSV14)\n                const Lym = vallofnull(elementOne.RSV15)\n                const PCT = \"NO\"\n                const CRP = vallofnull(elementTwo.RSV32)\n                const time = moment((elementOne.ORRESDT.toString() + elementOne.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((elementOne.ORRESDT.toString() + elementOne.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [WBC, Band, Seg, Lym, PCT, CRP]\n                    })\n                }\n            }\n            return CellData\n        }\n        return null\n\n    }\n\n    componentDidMount() {\n        this.APIUpdate(this.state.PickerDateRange)\n        this.SelectDataList = this.SelectDataList.bind(this)\n    }\n\n    // ChangeRangePicker(dates, datestrings) {\n\n    // }\n    APIUpdate(DateRange) {\n        console.log(DateRange)\n        function selectMonthInterval(PickerDate) {\n            const timestampInterval = new Date().getTime() - new Date(PickerDate).getTime()\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        const { caseinfo } = this.props\n\n        const st = DateRange[0].format(\"YYYY-MM-DD\")\n        const datePick = DateRange[0].format('YYYY/MM/DD')\n        console.log(DateRange, st, datePick)\n        // const TRANSDate = moment(caseinfo.TRANSINDT, 'YYYYMMDD').format('YYYY-MM-DD')\n        const MonthInterval = selectMonthInterval(datePick)\n        const RESDGLU1 = ApiProvider.getStoredProcedureRESDGLU1(caseinfo.HISID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESLAB02 = ApiProvider.getStoredProcedureRESLAB02(caseinfo.HISID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESLAB01 = ApiProvider.getStoredProcedureRESLAB01(caseinfo.HISID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESDBGAS = ApiProvider.getStoredProcedureRESDBGAS(caseinfo.HISID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESLAB0C = ApiProvider.getStoredProcedureRESLAB0C(caseinfo.HISID, st)\n            .then(data => {\n                console.log(data.data)\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const ORDLIST = ApiProvider.getStoredProcedureORDLIST(caseinfo.HISID, st, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                console.log(data.data)\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        const RESSECT = ApiProvider.getStoredProcedureRESSECT(caseinfo.HISID, MonthInterval, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        Promise.all([RESDGLU1, RESLAB02, RESLAB01, RESDBGAS, RESLAB0C, ORDLIST, RESSECT]).then(result => {\n            console.log(result)\n            this.setState({\n                RESDGLU1: result[0], //累積報告\n                RESLAB02: result[1],  //累積報告\n                RESLAB01: result[2],  //累積報告\n                RESDBGAS: result[3],  //累積報告\n                RESLAB0C: result[4],  //累積報告\n                ORDLIST: result[5],\n                RESSECT: result[6],\n            })\n        })\n    }\n    callbackDateFunction = (select) => {\n        // console.log(select)\n        this.setState({\n            selectdata: select\n        })\n    }\n\n    callbackTitleFunction = (select) => {\n        // console.log(select)\n        this.setState({\n            selectTitle: select\n        })\n    }\n\n    PickerDateRangeChange(date, dateString) {\n        console.log(date)\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDateRange } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const st = PickerDateRange[0].valueOf()\n        const et = PickerDateRange[1].valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                if (bronDate <= (st - day)) {\n                    const bTime = [moment(moment(st - day).format('YYYYMMDD')), moment(moment(et - day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(bTime)\n                }\n                break;\n            case 'N':\n                const nTime = [moment(moment().subtract(6, 'days').format('YYYYMMDD')), moment(moment().format('YYYYMMDD'))]\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                if (aTemp >= (et + day)) {\n                    const aTime = [moment(moment(st + day).format('YYYYMMDD')), moment(moment(et + day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(aTime)\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const momentDate = this.state.PickerDateRange\n        const data = this.SelectDataList()\n        console.log(\"SelectDataList => \" + data)\n        const { RangePicker } = DatePicker\n        const PickerDateRange = [momentDate[0].valueOf(), momentDate[1].valueOf()]\n\n        return (\n            <div className='examreportlayout'>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"250px 120px\", gridColumnGap: \"5px\", marginBottom: \"5px\" }}>\n                    <RangePicker\n                        // defaultValue={this.state.PickerDateRange}\n                        value={this.state.PickerDateRange}\n                        format={\"YYYY/MM/DD\"}\n                        allowClear={false}\n                        locale={\"zh_TW\"}\n                        disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                        // toString={(dates, datestrings) => { this.setState({ RangePicker: dates }) }}\n                        onChange={this.PickerDateRangeChange}\n                    />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" }}>\n                    <Labview selectvalue={this.state.selectdata}\n                        parentDateCallback={this.callbackDateFunction}\n                        DataList={data}\n                        SelectStatus={this.state.selectdata}\n                        PickerDateRange={PickerDateRange}\n                        parentTitleCallback={this.callbackTitleFunction}>\n                    </Labview>\n                    <Nonlabview ORDLIST={this.state.ORDLIST} RESSECT={this.state.RESSECT} caseinfo={caseinfo} PickerDateRange={PickerDateRange}></Nonlabview>\n                </div>\n                {/* {this.charttableview()} */}\n                <div style={{ display: \"flex\", justifyContent: 'center', alignItems: 'center' }}>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Examreport;\n","import React, { Component } from 'react';\nimport { DatePicker, Button } from 'antd';\nimport Prescriptionordertable from '../Prescriptionorder/Prescriptionorder'\nimport Treatmentorderlayout from '../Treatmentorder/Treatmentorder'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass Orderview extends Component {\n    state = {\n        UDORDER0: [],\n        TRTMNTQ1: [],\n        PickerDateRange: [moment(moment().subtract(6, 'days').format('YYYYMMDD')),\n        moment(moment().format('YYYYMMDD'))],\n    }\n    componentDidMount() {\n        this.apidata()\n    }\n    apidata() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID.toString().trim()\n        const CID = caseinfo.CASEID.toString().trim()\n        const UDORDER0 = ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureUDORDER0 NG \" + JSON.stringify(err))\n            });\n        const TRTMNTQ1 = ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureTRTMNTQ1 NG \" + JSON.stringify(err))\n            });\n        Promise.all([UDORDER0, TRTMNTQ1]).then(result => {\n            console.log(result)\n            this.setState({\n                UDORDER0: result[0],\n                TRTMNTQ1: result[1]\n            })\n        })\n    }\n\n    PickerDateRangeChange = (date, dateString) => {\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDateRange } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const st = PickerDateRange[0].valueOf()\n        const et = PickerDateRange[1].valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                if (bronDate <= (st - day)) {\n                    const bTime = [moment(moment(st - day).format('YYYYMMDD')), moment(moment(et - day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(bTime)\n                }\n                break;\n            case 'N':\n                const nTime = [moment(moment().subtract(6, 'days').format('YYYYMMDD')), moment(moment().format('YYYYMMDD'))]\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                if (aTemp >= (et + day)) {\n                    const aTime = [moment(moment(st + day).format('YYYYMMDD')), moment(moment(et + day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(aTime)\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const udata = this.state.UDORDER0\n        const tdata = this.state.TRTMNTQ1\n        const momentDate = this.state.PickerDateRange\n\n        const { RangePicker } = DatePicker\n        const PickerDateRange = [momentDate[0].valueOf(), momentDate[1].valueOf()]\n        if (udata.length === 0 || tdata.length === 0) {\n            //Loading\n            return null\n        }\n        // console.log(udata)\n        // console.log(PickerDateRange)\n\n        return (\n            <div>\n                <div style={{ maxHeight: '75vh', overflowY: 'auto' }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"250px 120px\", gridColumnGap: \"5px\", marginBottom: \"5px\" }}>\n                        <RangePicker\n                            value={this.state.PickerDateRange}\n                            format={\"YYYY/MM/DD\"}\n                            allowClear={false}\n                            locale={\"zh_TW\"}\n                            onChange={this.PickerDateRangeChange}\n                            disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                        />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" }}>\n                        <Prescriptionordertable PickerDateRange={PickerDateRange} UDORDER0={udata} searchbar={true} caseinfo={caseinfo}></Prescriptionordertable>\n                        <Treatmentorderlayout PickerDateRange={PickerDateRange} TRTMNT01={tdata} searchbar={true} caseinfo={caseinfo}></Treatmentorderlayout>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Orderview;\n","import React, { Component } from 'react';\nimport { Select } from 'antd';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n// import Notelist from './Notelist'\n// import searchlogo from '../../Image/svg/Search.svg'\n// import { Button } from 'antd'\nimport * as Wardstate from '../../Function/Wardstate'\nimport './Note.scss'\n// import X2JS from 'x2js';\n// import * as PR from '../../Resource/PRGTXQRY'\n\n\nvar dataRange = [];\nclass Noteview extends Component {\n    state = {\n        StartTime: null,\n        EndTime: null,\n        display_data: null,\n        context: null,\n        contentdisplay: false,\n\n\n        ADMDISP: [],\n        ADMLIST: [],\n        DISLIST: [],\n        DISDISP: [],\n        DTAROTQ4: [],\n        DTASOAPQ: [],\n        PCASELIST: [],\n        ERDISP: [],\n        PRGTXQRY: [],\n        PRGTXQRYDIS: [],\n        CPSLIST: [],\n        CPSDISP: [],\n        QPNOT: [],\n        QPNOTDIS: [],\n        OPSORAQ1: [],\n        OPSORAQ2: [],\n        SelectClass: 0\n\n    }\n    componentDidMount() {\n        this.apiData()\n    }\n\n    SelectADMDISP(ADISTNO, ADICASE) {\n        console.log(ADISTNO, ADICASE)\n        ApiProvider.getStoredProcedureADMDISP(ADISTNO, ADICASE)\n            .then(data => {\n                // console.log(data.data)\n                this.setState({\n                    ADMDISP: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureADMDISP NG \" + JSON.stringify(err));\n            });\n    }\n    SelectDISDISP(CID) {\n        // console.log(ADISTNO, ADICASE)\n        const { caseinfo } = this.props\n        ApiProvider.getStoredProcedureDISDISP(caseinfo.HISID, CID)\n            .then(data => {\n                // console.log(data.data)\n                this.setState({\n                    DISDISP: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureADMDISP NG \" + JSON.stringify(err));\n            });\n    }\n\n    SelectERDISP(CID) {\n        const { caseinfo } = this.props\n        ApiProvider.getStoredProcedureERDISP(caseinfo.HISID, CID)\n            .then(data => {\n                this.setState({\n                    ERDISP: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n    }\n    SelectDTASOAPQ(date, dpt) {\n        const { caseinfo } = this.props\n        //門診紀錄內容 需要時間和醫生編號\n        ApiProvider.getStoredProcedureDTASOAPQ(caseinfo.HISID, date, dpt)\n            .then(data => {\n                this.setState({\n                    DTASOAPQ: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureDTASOAPQ NG \" + JSON.stringify(err));\n            });\n    }\n    SelectPRGTXQRYDIS(List) {\n        this.setState({\n            PRGTXQRYDIS: List\n        })\n    }\n    SelectCPSDISP(HID, CID, SEQ) {\n        ApiProvider.getStoredProcedureCPSDISP(HID, CID, SEQ)\n            .then(data => {\n                console.log(data.data)\n                this.setState({\n                    CPSDISP: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n    }\n    SelectQPNOTDIS(data) {\n        this.setState({\n            QPNOTDIS: data\n        })\n    }\n\n    SelectOPSORAQ1(OPABGNDT, OPATIMES) {\n        const { caseinfo } = this.props\n        //門診紀錄內容 需要時間和醫生編號\n        ApiProvider.getStoredProcedureOPSORAQ2(caseinfo.HISID, OPABGNDT, OPATIMES)\n            .then(data => {\n                this.setState({\n                    OPSORAQ2: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureDTASOAPQ NG \" + JSON.stringify(err));\n            });\n    }\n    apiData() {\n        const { caseinfo } = this.props\n        //入院並摘\n        const ADMLIST = ApiProvider.getStoredProcedureADMLIST(caseinfo.HISID, \"DOC3924B\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureADMLIST NG \" + JSON.stringify(err));\n            });\n        //出院並摘\n        const DISLIST = ApiProvider.getStoredProcedureDISLIST(caseinfo.HISID, \"DOC3924B\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureDISLIST NG \" + JSON.stringify(err));\n            });\n\n        //門診紀錄清單\n        const DTAROTQ4 = ApiProvider.getStoredProcedureDTAROTQ4(caseinfo.HISID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureDTAROTQ4 NG \" + JSON.stringify(err));\n            });\n\n\n        //急診紀錄清單\n        const PCASELIST = ApiProvider.getStoredProcedurePCASELIST(caseinfo.HISID, \"DOC3924B\", \"E\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n\n\n\n\n        const CPSLIST = ApiProvider.getStoredProcedureCPSLIST(caseinfo.HISID, \"DOC3924B\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n\n        function nullvalue(value) {\n            if (value === null) {\n                return \"911\"\n            }\n            console.log(value)\n            const PRGTXQRYDATE = moment(value.PLOCDT, 'YYYYMMDD').format(\"YYYYMM\")\n            const D = PRGTXQRYDATE.substr(3, 3)\n            return D\n        }\n\n        const LIVEPLOC = nullvalue(caseinfo.PLOCSTART)\n        console.log(LIVEPLOC)\n        const PRGTXQRY = ApiProvider.getStoredProcedurePRGTXQRY(caseinfo.HISID, LIVEPLOC, caseinfo.CASEID)\n            .then(data => {\n                console.log(data.data)\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n        const transdt = caseinfo.TRANSINDT\n        const ST = moment(transdt, \"YYYYMMDD\").format(\"YYYYMMDDHHmm\")\n        const ET = moment().format(\"YYYYMMDDHHmm\")\n        console.log(caseinfo.CASEID, ST, ET)\n        const QPNOT = ApiProvider.getQPNOT(caseinfo.CASEID, ST, ET)\n            .then(data => {\n                const parseSource = Wardstate.XM2JSON(data.data)\n                return parseSource\n            })\n            .catch(err => {console.log(err)})\n        const OPSORAQ1 = ApiProvider.getStoredProcedureOPSORAQ1(caseinfo.HISID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => { console.log(err) })\n        Promise.all([ADMLIST, DISLIST, DTAROTQ4, PCASELIST, PRGTXQRY, CPSLIST, QPNOT, OPSORAQ1]).then(result => {\n            console.log(result)\n            this.setState({\n                ADMLIST: result[0],\n                DISLIST: result[1],\n                DTAROTQ4: result[2],\n                PCASELIST: result[3],\n                PRGTXQRY: result[4],\n                CPSLIST: result[5],\n                QPNOT: result[6],\n                OPSORAQ1: result[7]\n            })\n        })\n    }\n\n\n\n    callbackFunction = (item_array) => {\n        console.log(item_array)\n        this.setState(\n            {\n                display_data: item_array.NoteTime,\n                context: item_array.Content,\n                contentdisplay: true\n            }\n        )\n\n    }\n    handleChange = (value) => {\n\n        console.log(`selected ${value}`);\n        this.setState({\n            SelectClass: value,\n        });\n\n    }\n    onClickSearch() {\n        if (dataRange.length !== 0) {\n            this.setState(\n                {\n                    StartTime: dataRange[0],\n                    EndTime: dataRange[1]\n\n                }\n            )\n        }\n\n    }\n    onDateChange = (date, dateString) => {\n        console.log(date, dateString);\n    }\n    NotecontrolBar() {\n        const select_data = [\n            { item: \"入院病摘\", value: 0 },\n            { item: \"出院病摘\", value: 1 },\n            { item: \"門診紀錄\", value: 2 },\n            { item: \"急診紀錄\", value: 3 },\n            { item: \"病程紀錄\", value: 4 },\n            { item: \"會診紀錄\", value: 5 },\n            { item: \"護理紀錄\", value: 6 },\n            { item: \"手術記錄\", value: 7 }\n        ]\n        // const { RangePicker } = DatePicker;\n        const { Option } = Select;\n        const select_option = select_data.map((info, index) =>\n            <Option key={index} value={info.value}>{info.item}</Option>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"200px 220px 25px\", marginBottom: \"10px\" }}>\n                <Select defaultValue={0} style={{ width: 190 }} onChange={this.handleChange}>\n                    {select_option}\n                </Select>\n                {/* <RangePicker id=\"note_Range\" placeholder={[\"請輸入日期\", \"請輸入日期\"]} onChange={this.onDateChange} allowClear={false} />\n                <div onClick={() => this.onClickSearch()} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <img src={searchlogo} alt=\"searchlogo\" />\n                </div> */}\n            </div>\n        );\n    }\n\n    renderContentArray() {\n        const source = this.state.SelectClass\n        if (source === 0) {\n            const data = this.state.ADMDISP\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const fakeADMData = data\n                return fakeADMData.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{row.ADMDATA}</div>);\n\n            }\n        }\n        if (source === 1) {\n            const data = this.state.DISDISP\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const fakeADMData = data\n                return fakeADMData.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{row[\"1\"]}</div>);\n            }\n\n        }\n        if (source === 2) {\n\n            const data = this.state.DTASOAPQ\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                let textType = [];\n                let textObj = [];\n                for (var i = 0; i < data.length; i++) {\n                    console.log(data[i])\n                    //find type\n                    const type = data[i].DTSOAPTY;\n                    const lines = data[i].DTSOAPSQ;\n                    const content = data[i].DTSOAPTX;\n                    if (textType.indexOf(type) === -1) {\n                        //new type\n                        const newObj = {\n                            \"type\": type,\n                            \"lines\": lines,\n                            \"content\": content\n                        }\n                        textObj.push(newObj);\n                        textType.push(type);\n                    } else {\n                        //old type\n                        const idx = textObj.findIndex(item => item.type === type)\n                        textObj[idx].lines = lines;\n                        textObj[idx].content = textObj[idx].content + \"\\n\" + content\n                    }\n                }\n                let textResult = [];\n                for (let index = 0; index < textObj.length; index++) {\n                    textResult.push(textObj[index].type);\n                    textResult.push(textObj[index].content);\n                    textResult.push(\"\\n\");\n                }\n\n                return textResult.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{row}</div>);\n\n            }\n\n        }\n        if (source === 3) {\n            const data = this.state.ERDISP\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const fakeADMData = data\n                return fakeADMData.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{JSON.stringify(row, null, '\\t')}</div>);\n            }\n\n        }\n        if (source === 4) {\n            const data = this.state.PRGTXQRYDIS\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                var newList = []\n                console.log(data)\n                for (let index = 0; index < 5; index++) {\n                    if (index === 0) {\n                        const dataFilter = data.filter(function (info, index, arr) {\n                            return info.PRGTYPE.toString().trim() === \"D\"\n                        })\n                        if (dataFilter.length !== 0) {\n                            newList.push(dataFilter[0])\n                        }\n                    }\n\n                    if (index === 1) {\n                        const dataFilter = data.filter(function (info, index, arr) {\n                            return info.PRGTYPE.toString().trim() === \"S\"\n                        })\n                        if (dataFilter.length !== 0) {\n                            newList.push(dataFilter[0])\n                        }\n                    }\n\n                    if (index === 2) {\n                        const dataFilter = data.filter(function (info, index, arr) {\n                            return info.PRGTYPE.toString().trim() === \"O\"\n                        })\n                        if (dataFilter.length !== 0) {\n                            newList.push(dataFilter[0])\n                        }\n                    }\n\n                    if (index === 3) {\n                        const dataFilter = data.filter(function (info, index, arr) {\n                            return info.PRGTYPE.toString().trim() === \"A\"\n                        })\n                        if (dataFilter.length !== 0) {\n                            newList.push(dataFilter[0])\n                        }\n                    }\n\n                    if (index === 4) {\n                        const dataFilter = data.filter(function (info, index, arr) {\n                            return info.PRGTYPE.toString().trim() === \"P\"\n                        })\n                        if (dataFilter.length !== 0) {\n                            newList.push(dataFilter[0])\n                        }\n                    }\n\n                }\n                console.log(newList)\n                const dataMap = newList.map(function (info, index, arr) {\n                    return (\n                        <div key={index} style={{ marginBottom: \"10px\" }}>\n                            <div style={{ whiteSpace: \"pre-wrap\" }}>{info.PRGTYPE}</div>\n                            <div style={{ whiteSpace: \"pre-wrap\" }}>{info.PRGTX}</div>\n                        </div>\n                    );\n                })\n                return dataMap\n            }\n\n        }\n        if (source === 5) {\n            const data = this.state.CPSDISP\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const fakeADMData = data\n                return fakeADMData.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{row[\"1\"]}</div>);\n            }\n\n        }\n        if (source === 6) {\n            const data = this.state.QPNOTDIS\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                // Time: moment(v.rec_dat.toString() + v.rec_tim.toString(), \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\"),\n                // special: v.special,\n                // a: v.cre_nam,\n                // b: v.pro_not\n                const fakeADMData = data.map(function (info, index, arr) {\n                    const time = info.Time\n                    const cre_nam = info.cre_nam\n                    const pro_not = info.pro_not\n                    return (\n                        <div style={{ marginBottom: \"10px\" }}>\n                            <div>{time}</div>\n                            <div>{cre_nam === undefined ? \"--\" : cre_nam}</div>\n                            <div>{pro_not === undefined ? \"--\" : pro_not}</div>\n                        </div>\n                    );\n                })\n                return fakeADMData\n            }\n\n        }\n        if (source === 7) {\n            const data = this.state.OPSORAQ2\n            console.log(data)\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const fakeADMData = data\n                return fakeADMData.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{row.CONTENT}</div>);\n            }\n\n        }\n        else {\n            return null;\n\n        }\n\n\n\n    }\n    switchListRender() {\n        function groupfirstarray(arrayList) {\n            var result = arrayList.filter(function (value, index, arr) {\n                const res = arr.map(function (value, index, arr) {\n                    return moment(value.PRGDT.toString() + value.PRGTM.toString(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n                })\n                return res.indexOf(moment(value.PRGDT.toString() + value.PRGTM.toString(), \"YYYY-MM-DDHH:mm:ss\").valueOf()) === index;\n            });\n            var arrList = []\n            for (let index = 0; index < result.length; index++) {\n                const element = result[index];\n                const comparevalue = moment(element.PRGDT.toString() + element.PRGTM.toString(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n                const filterarray = arrayList.filter(function (value, index, arr) {\n                    return moment(value.PRGDT.toString() + value.PRGTM.toString(), \"YYYY-MM-DDHH:mm:ss\").valueOf() === comparevalue\n                })\n                arrList.push(filterarray)\n            }\n            return arrList\n        }\n        function grouparray(arrayList) {\n            var result = arrayList.filter(function (value, index, arr) {\n                const res = arr.map(function (value, index, arr) {\n                    return moment(value.rec_dat.toString(), \"YYYYMMDD\").valueOf()\n                })\n                return res.indexOf(moment(value.rec_dat.toString(), \"YYYYMMDD\").valueOf()) === index;\n            });\n            var arrList = []\n            for (let index = 0; index < result.length; index++) {\n                const element = result[index];\n                const comparevalue = moment(element.rec_dat.toString(), \"YYYYMMDD\").valueOf()\n                const filterarray = arrayList.filter(function (value, index, arr) {\n                    return moment(value.rec_dat.toString(), \"YYYYMMDD\").valueOf() === comparevalue\n                })\n                arrList.push(filterarray)\n            }\n            return arrList\n        }\n        const select = this.state.SelectClass\n        if (select === 0) {\n            const data = this.state.ADMLIST\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    const HID = object.ADISTNO.toString().trim()\n                    const CID = object.ADICASE.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", cursor: \"pointer\", textAlign: \"center\" }} onClick={() => this.SelectADMDISP(HID, CID)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.ADIDATE.toString().trim(), \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</div>\n                            <div style={{ fontSize: \"14px\" }}>{object.ADICASE}</div>\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 1) {\n            const data = this.state.DISLIST\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    const CID = object.DCASENO.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", cursor: \"pointer\" }} onClick={() => this.SelectDISDISP(CID)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.DDATEIN.toString().trim(), \"YYYY-MM-DD\").format(\"YYYY/MM/DD\")}</div>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.DDATEOUT.toString().trim(), \"YYYY-MM-DD\").format(\"YYYY/MM/DD\")}</div>\n                            {/* <div style={{ fontSize: \"14px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 2) {\n            const data = this.state.DTAROTQ4\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    const DPT = object.DTPDEPT.toString().trim()\n                    const DTPDATE = object.DTPDATE.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\" , cursor: \"pointer\"}} onClick={() => this.SelectDTASOAPQ(DTPDATE, DPT)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.DTPDATE.toString().trim(), \"YYYY-MM-DD\").format(\"YYYY/MM/DD\")}</div>\n                            <div style={{ fontSize: \"14px\" }}>{object.DTPTIME.toString().trim()}</div>\n                            <div style={{ fontSize: \"14px\" }}>{object.DTPDEPT.toString().trim()}</div>\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 3) {\n            const data = this.state.PCASELIST\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    const CID = object.PCASENO.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\", cursor: \"pointer\" }} onClick={() => this.SelectERDISP(CID)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.PDISDT.toString().trim(), \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</div>\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 4) {\n            const data = groupfirstarray(this.state.PRGTXQRY)\n            console.log(data)\n            // const data = groupfirstarray(PR.data)\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const List = data.map(function (info, index, arr) {\n                    const mapList = info.map(function (v, i, a) {\n                        return {\n                            PRGTX: v.PRGTX,\n                            PRGTYPE: v.PRGTYPE\n                        }\n                    })\n                    return {\n                        List: mapList,\n                        DT: info[0].PRGDT,\n                        TN: info[0].PRGTM\n                    }\n                })\n                const cellRander = List.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\" , cursor: \"pointer\"}} onClick={() => this.SelectPRGTXQRYDIS(object.List)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.DT.toString() + object.TN.toString(), \"YYYY-MM-DD HH:mm:ss\").format(\"MM/DD HH:mm\")}</div>\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 5) {\n            const data = this.state.CPSLIST\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    const CID = object.CPSCASE.toString().trim()\n                    const SEQ = object.CPSOSEQ.toString().trim()\n                    const HID = object.CPSHIST.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\", cursor: \"pointer\" }} onClick={() => this.SelectCPSDISP(HID, CID, SEQ)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.CPSENTDT.toString().trim(), \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</div>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.CPSENTTM.toString().trim(), \"HHmm\").format(\"HH:mm\")}</div>\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 6) {\n            const data = this.state.QPNOT\n            const List = grouparray(data)\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const mapList = List.map(function (info, index, arr) {\n                    console.log(info)\n                    const mapList = info.map(function (v, i, a) {\n                        return {\n                            Time: moment(v.rec_dat.toString() + v.rec_tim.toString(), \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\"),\n                            cre_nam: v.cre_nam,\n                            pro_not: v.pro_not\n                        }\n                    })\n                    return {\n                        List: mapList,\n                        DT: info[0].rec_dat.toString().trim()\n                    }\n                })\n                const cellRander = mapList.map((object, index, arr) => {\n                    console.log(object)\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\", cursor: \"pointer\" }} onClick={() => this.SelectQPNOTDIS(object.List)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.DT, \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</div>\n                            {/* 檢查 */}\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 7) {\n            const data = this.state.OPSORAQ1\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    // const DIS1 = object\n                    const OPABGNDT = object.OPABGNDT.toString().trim()\n                    const OPACOD1 = object.OPACOD1.toString().trim()\n                    const OPAMANNM = object.OPAMANNM.toString().trim()\n                    const OPATIMES = object.OPATIMES.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\", cursor: \"pointer\" }} onClick={() => this.SelectOPSORAQ1(OPABGNDT, OPATIMES)}>\n                            <div style={{ fontSize: \"14px\" }}>{OPABGNDT}</div>\n                            <div style={{ fontSize: \"14px\" }}>{OPACOD1}</div>\n                            <div style={{ fontSize: \"14px\" }}>{OPAMANNM}</div>\n                            {/* 檢查 */}\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n    }\n    render() {\n        const control = this.NotecontrolBar()\n        const renderContentArray = this.renderContentArray()\n        const listRender = this.switchListRender()\n        return (\n            <div className='Notelayout'>\n                {control}\n                <div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 7fr\", gridGap: \"10px\" }}>\n                        <div>\n                            <div style={{ backgroundColor: \"#e2edf3\", height: \"50px\", padding: '15px' }}>開立日期</div>\n                            <div style={{ padding: \"10px\", maxHeight: '700px', overflow: \"auto\" }}>\n                                {listRender}\n                            </div>\n                        </div>\n                        <div style={{ overflow: \"auto\" }}>\n                            <div style={{ backgroundColor: \"#e2edf3\", height: \"50px\", padding: '15px' }}>內容</div>\n                            <div style={{ maxHeight: '700px', overflow: \"auto\" }}>\n                                {renderContentArray}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Noteview;","import React, { Component } from 'react';\nimport { DatePicker, Button } from 'antd';\nimport GAS from '../CrossSectionView/GAS'\nimport RTbreathe from '../CrossSectionView/RTbreathe'\nimport './RTview.scss'\n// import X2JS from 'x2js';\n// import * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass RTview extends Component {\n    state = {\n        QSPE: [],\n        PickerDateRange: [moment(moment().subtract(6, 'days').format('YYYYMMDD')),\n        moment(moment().format('YYYYMMDD'))],\n    }\n    // componentDidMount() {\n    //     this.API_DATA(this.state.PickerDate)\n    // }\n    // API_DATA(Datetime) {\n    //     const xm2 = new X2JS()\n    //     const { caseinfo } = this.props\n    //     const st = moment(Datetime + (7 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n    //     const et = moment(Datetime + (31 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n    //     ApiProvider.getQSPE(caseinfo.CASEID, st, et)\n    //         .then(data => {\n    //             console.log(xm2.xml2js(data.data).outmsg.resconts.rescont)\n    //             const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n    //             console.log(parsedata)\n    //             if (Array.isArray(parsedata)) {\n    //                 this.setState({\n    //                     QSPE: parsedata\n    //                 })\n    //             }\n    //             else {\n    //                 const arr = []\n    //                 arr.push(parsedata)\n    //                 this.setState({\n    //                     QSPE: arr\n    //                 })\n    //             }\n    //         })\n    //         .catch(err => {\n    //             console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n    //         });\n    // }\n\n    PickerDateRangeChange = (date, dateString) => {\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDateRange } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n        console.log(bronDate)\n        const st = PickerDateRange[0].valueOf()\n        const et = PickerDateRange[1].valueOf()\n        console.log(bronDate,st)\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                if (bronDate <= (st - day)) {\n                    const bTime = [moment(moment(st - day)), moment(moment(et - day))]\n                    this.PickerDateRangeChange(bTime)\n                }\n                break;\n            case 'N':\n                const nTime = [moment(moment().subtract(6, 'days').format('YYYYMMDD')), moment()]\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTemp = moment(moment()).valueOf()\n                if (aTemp >= (et + day)) {\n                    const aTime = [moment(moment(st + day)), moment(moment(et + day))]\n                    this.PickerDateRangeChange(aTime)\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const { RangePicker } = DatePicker\n        const momentDate = this.state.PickerDateRange\n\n        const PickerDateRange = [momentDate[0].valueOf(), momentDate[1].valueOf()]\n\n        return (\n            <div className='rtviewlayout'>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"250px 120px\", gridColumnGap: \"5px\", marginBottom: \"5px\" }}>\n                    <RangePicker\n                        value={this.state.PickerDateRange}\n                        format={\"YYYY/MM/DD\"}\n                        allowClear={false}\n                        locale={\"zh_TW\"}\n                        onChange={this.PickerDateRangeChange}\n                        disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                    />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: '1fr 1fr', gridColumnGap: \"5px\" }}>\n                    <GAS PickerDateRange={PickerDateRange} caseinfo={caseinfo} searchbar={true} ></GAS>\n                    <RTbreathe PickerDateRange={PickerDateRange} caseinfo={caseinfo} searchbar={true} ></RTbreathe>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTview\n","import React, { Component } from 'react'\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Nurtionfeedingcell.scss'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Nurtionfeedingcell extends Component {\n    state = {\n        EditMode: false,\n        onEdit: false,\n        powerLogin: 0,\n        remark: '',\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { caseinfo, data } = this.props\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, data.ORDSEQNO, \"nurtionfeeding\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    onMouseEnter() {\n        this.setState(\n            {\n                EditMode: true\n            }\n        )\n    }\n    onMouseLeave() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    showModal = () => {\n        this.setState({\n            onEdit: true,\n        });\n    };\n\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    Moduledisplay(PName, ST) {\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": PName,\n            \"remarkId\": this.props.data.ORDSEQNO,\n            \"remark\": this.state.remark,\n            \"transinId\": this.props.caseinfo.TRANSINID,\n            \"type\": \"nurtionfeeding\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n        );\n    }\n\n    render() {\n        const { data } = this.props\n        console.log(data)\n        const startTime = moment(data.ORBGNDT.toString().trim(), \"YYYY-MM-DD\").format(\"MM/DD\")\n        const endTime = moment(data.ORENDDT.toString().trim(), \"YYYY-MM-DD\").format(\"MM/DD\")\n        const name = data.ORPROCED.toString().trim()\n\n        console.log(this.state.remark)\n\n        return (\n            <div onMouseEnter={() => this.onMouseEnter()} onMouseLeave={() => this.onMouseLeave()} style={{ position: \"relative\", height: \"100px\" }}>\n                <div className='nurtionfeedingcell' style={{ gridTemplateRows: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"1fr\" : \"1fr 1fr\"] }}>\n                    <div className='cellforstate'>\n                        <div className='celllayout'>\n                            <t3>{startTime}</t3>\n                        </div>\n                        <div className='celllayout'>\n                            <t3>{endTime}</t3>\n                        </div>\n                        <div className='celllayout'>\n                            <t3>{name}</t3>\n                        </div>\n                    </div>\n                    <div className='cellforremark' style={{ display: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"none\" : \"\"] }}>\n                        <t3>{this.state.remark}</t3>\n                    </div>\n                </div>\n                <div style={this.state.EditMode ? {\n                    display: this.state.powerLogin == 1 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", top: 0, right: 0, height: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"50px\" : \"100px\"], background: \"white\", width: \"77px\", border: \"rgba(232, 232, 232, 1) 1px solid\"\n                } : { display: \"none\" }}>\n                    < div onClick={() => this.showModal()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }} >\n                        <img src={chooseedit} alt='chooseedit'></img>\n                    </div>\n                </div>\n                {this.Moduledisplay(name, startTime)}\n            </div >\n        );\n    }\n}\n\nexport default Nurtionfeedingcell\n","import React, { Component } from 'react'\nimport * as ApiProvider from '../../API/ApiProvider'\n// import { DatePicker, Input } from 'antd';\n// import searchlogo from '../../Image/svg/Search.svg'\nimport Nurtionfeedingcell from './Nurtionfeedingcell'\nimport moment from 'moment';\nimport * as ApiGithub from '../../API/ApiGithub'\n\n\nclass Nurtionfeedingorder extends Component {\n    state = {\n        TRTMNTQ1: [],\n        parser: { \"mappings\": [] },\n        class: \"飲食類別\"\n    }\n    componentDidMount() {\n        this.getAPIFeedingData()\n        this.getTreatmentOrderFilter()\n    }\n    getAPIFeedingData() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID.toString().trim()\n        const CID = caseinfo.CASEID.toString().trim()\n        ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => {\n                console.log(\"getAPIFeedingData OK \" + JSON.stringify(data.data))\n                this.setState({\n                    TRTMNTQ1: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n    }\n    getTreatmentOrderFilter() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Treatment\");\n                parser.mappings = [{ \"key\": \"全部\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson Treatment OK \" + JSON.stringify(parser))\n                this.setState({\n                    parser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部\"] = []\n\n        inputs.forEach(input => {\n            let content = input.ORPROCED;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部\"].push(input)\n        });\n        return allResult;\n    }\n\n    render() {\n        const { caseinfo, PickerDateRange } = this.props\n        const title = [\"開始時間\", \"結束時間\", \"處置名稱\"]\n        const titleCellRender = title.map(function (element, index, arr) {\n            return (\n                <div key={index} style={{ padding: \"0px 10px\", display: \"flex\", alignItems: \"center\" }}>\n                    <div style={{ fontSize: \"14px\" }}>{element}</div>\n                </div>\n            );\n        })\n\n        const parse = this.parse;\n        let clusteredData = {}\n        if (this.state.parser !== undefined) {\n            clusteredData = parse(this.state.TRTMNTQ1, this.state.parser)\n        }\n        //filter data by selected class\n        let filteredData = clusteredData[this.state.class];\n        // console.log(`filteredData : ${JSON.stringify(filteredData)} , filteredData type : ${typeof (filteredData)}`)\n        let filterData = []\n        if (filteredData !== undefined) {\n            const ListCellData = filteredData\n            filterData = ListCellData.filter((element, index, arr) => {\n                const time = moment(element.ORBGNDT, 'YYYY-MM-DD').valueOf()\n                return PickerDateRange[0] <= time && time <= PickerDateRange[1]\n            })\n        }\n\n        const DataCellRender = filterData.map(function (element, index, arr) {\n            return (\n                <Nurtionfeedingcell key={index} data={element} caseinfo={caseinfo} ></Nurtionfeedingcell>\n            );\n        })\n\n        return (\n            <div>\n                <t1>Feeding Order</t1>\n                <div style={{ display: \"grid\", gridTemplateColumns: \" 1fr 1fr 2fr \", background: \"#cccccc\", height: \"50px\", marginTop: \"10px\" }}>\n                    {titleCellRender}\n                </div>\n                {filterData.length !== 0 && <div style={{ minHeight: \"120px\", maxHeight: \"400px\", overflowY: \"auto\" }}>\n                    {DataCellRender}\n                </div>}\n                {filterData.length === 0 && <div>今日無資料</div>}\n            </div>\n        );\n    }\n}\n\nexport default Nurtionfeedingorder\n","import React, { Component } from 'react'\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Nurtion_TPN_cell.scss'\nimport moment from 'moment'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Nurtiontpncell extends Component {\n    state = {\n        EditMode: false,\n        onEdit: false,\n        remark: null,\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { caseinfo, data } = this.props\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, data.UDORDSEQ, \"nurtiontpn\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    onMouseEnter() { this.setState({ EditMode: true }) }\n\n    onMouseLeave() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    showModal = () => {\n        this.setState({\n            onEdit: true,\n        });\n    };\n\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    Moduledisplay(PName, ST) {\n\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": PName,\n            \"remarkId\": this.props.data.UDORDSEQ,\n            \"remark\": this.state.remark,\n            \"transinId\": this.props.caseinfo.TRANSINID,\n            \"type\": \"nurtiontpn\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            // <RemarkModal caseinfo={caseinfo} type=\"nurtiontpn\" name={title} visible={this.state.onEdit} remark={this.state.remark} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n        );\n    }\n    render() {\n        const { data } = this.props\n        const TPNList = [\"VOL.\", \"AA\", \"Glu\", \"Na\", \"K\", \"Ca\", \"P\", \"Mg\"]\n        const TPNListcellRender = TPNList.map(function (info, index) {\n            return (\n                <centerstyle key={index} style={{ border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                    <t2>{info}</t2>\n                </centerstyle>\n            );\n        })\n        function TPNSubDataMap(data, TPNDATA) {\n            if (TPNDATA === undefined || TPNDATA === null) {\n                return []\n            }\n            const TPNSubData = [data.UDDOSAGE, data.TPNDATA.AA, data.TPNDATA.Glu, data.TPNDATA.Na, data.TPNDATA.K, data.TPNDATA.Ca, data.TPNDATA.P, data.TPNDATA.Mg]\n            const TPNSubDatacellRender = TPNSubData.map(function (info, index) {\n                return (\n                    <centerstyle key={index} style={{ border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                        <t2>{info}</t2>\n                    </centerstyle>\n                );\n            })\n            return TPNSubDatacellRender\n\n        }\n        const TPNSubDatacellRender = TPNSubDataMap(data, data.TPNDATA)\n        const RemarkData = this.state.remark\n        // function RemarkNull(value) {\n        //     // console.log(value)\n        //     if (value === null || value === undefined || value === \"\") {\n        //         return \"none\"\n        //     }\n        //     return \"flex\"\n        // }\n        // function RemarkNullheight(value) {\n        //     // console.log(value)\n        //     if (value === null || value === undefined || value === \"\") {\n        //         return \"90px\"\n        //     }\n        //     return \"120px\"\n        // }\n        // function statusstate(st, et, pt) {\n\n        // }\n        const startTime = moment(data.UDBGNDT.toString().trim(), \"YYYY-MM-DD-HH.mm.ss.00.000000\").format(\"MM/DD HH:mm:ss\")\n        const endTime = moment(data.UDENDDT.toString().trim(), \"YYYY-MM-DD-HH.mm.ss.00.000000\").format(\"MM/DD HH:mm:ss\")\n        const name = data.UDGNAME.toString().trim()\n        const status = \"生效中\"\n        return (\n            <div onMouseEnter={() => this.onMouseEnter()} onMouseLeave={() => this.onMouseLeave()} className='nurtiontpntablelayout'>\n                <div style={{ height: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"100px\" : \"130px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \" 1fr 1fr 60px 450px\", height: \"100px\" }} >\n                        <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                            <t3>{startTime}</t3>\n                        </div>\n                        <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                            <t3>{endTime}</t3>\n                        </div>\n                        <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                            <t3>{status}</t3>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"30px 70px\" }}>\n                            <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                                <t3>{name}</t3>\n                            </div>\n                            <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(8,1fr)\" }}>\n                                    {TPNListcellRender}\n                                </div>\n                                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(8,1fr)\" }}>\n                                    {TPNSubDatacellRender}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ display: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"none\" : \"block\"], border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\", padding: \"0px 5px\", alignItems: \"center\", height: \"30px\", width: \"100%\" }}>\n                        <t3>{RemarkData}</t3>\n                    </div>\n                </div>\n                <div style={this.state.EditMode ? {\n                    display: this.state.powerLogin == 1 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", top: 0, right: 0, height: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"100px\" : \"130px\"], background: \"white\", width: \"77px\", border: \"rgba(232, 232, 232, 1) 1px solid\"\n                } : { display: \"none\" }}>\n                    < div onClick={() => this.showModal()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }} >\n                        <img src={chooseedit} alt='chooseedit'></img>\n                    </div>\n                </div>\n                {this.Moduledisplay(name, startTime)}\n            </div >\n        );\n    }\n}\n\nexport default Nurtiontpncell\n","import React, { Component } from 'react'\nimport Nurtiontpncell from './Nurtion_TPN_cell'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as ApiGithub from '../../API/ApiGithub'\n\nclass Nurtiontpnorder extends Component {\n    state = {\n        onEdit: false,\n        tpndata: [],\n        UDORDER0: [],\n        tpnParsers: []\n    }\n    componentDidMount() {\n        const getAPITPNData = this.getAPITPNData.bind(this)\n        ApiGithub.getGitHubJson(\"TpnOrder.json\")\n            .then(data => {\n                let parser = data.data\n                console.log(\"getGitHubJson TPN Order OK \" + JSON.stringify(parser))\n                this.setState({\n                    tpnParsers: parser\n                }, () => {\n                    getAPITPNData()\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n    }\n    getAPITPNData() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID.toString().trim()\n        const CID = caseinfo.CASEID.toString().trim()\n        const { tpnParsers } = this.state\n        // console.log(HID, CID)\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                //const fakeData = [{\"UDDCPRSN\":\"DOC3941E\",\"UDDURAT\":\"007\",\"UDSUMQTY\":\"55\",\"UDDRGNAM\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDGNAME\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-14-09.17.00.000000\",\"UDDCPNAM\":\"何正尹　　\",\"UDDOSAGE\":\"55      \",\"UDORDSEQ\":\"0043\",\"UDBGNDT\":\"2019-08-13-08.50.00.000000\",\"UDDRGNO\":\"02145\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\"                                                                                                    \",\"UDDUNIT\":\"CC    \",\"UDROUTE\":\"IVD\",\"UDRPNAME\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDFREQN\":\"QD-TPN  \"},{\"UDDCPRSN\":\"DOC3964C\",\"UDDURAT\":\"014\",\"UDSUMQTY\":\"7\",\"UDDRGNAM\":\"Peditrace \\\"TPN\\\" sol for inj 10ml\",\"UDGNAME\":\"Peditrace \\\"TPN\\\" sol for inj 10ml\",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-20-10.22.00.000000\",\"UDDCPNAM\":\"李成彧　　\",\"UDDOSAGE\":\"1       \",\"UDORDSEQ\":\"0044\",\"UDBGNDT\":\"2019-08-13-08.50.00.000000\",\"UDDRGNO\":\"05208\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\"                                                                                                    \",\"UDDUNIT\":\"AMP   \",\"UDROUTE\":\"MSC\",\"UDRPNAME\":\"Peditrace \\\"TPN\\\" sol for inj 10ml\",\"UDFREQN\":\"QD-TPN  \"},{\"UDDCPRSN\":\"        \",\"UDDURAT\":\"001\",\"UDSUMQTY\":\"1\",\"UDDRGNAM\":\"Immunoglobulin *inj 60mg/ml 50ml\",\"UDGNAME\":\"Immunoglobulin *inj 60mg/ml 50ml\",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"Y\",\"UDSTATUS\":\"60\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-14-15.00.00.000000\",\"UDDCPNAM\":\"　　　　　\",\"UDDOSAGE\":\"1       \",\"UDORDSEQ\":\"0045\",\"UDBGNDT\":\"2019-08-13-15.17.00.000000\",\"UDDRGNO\":\"03852\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"BOT   \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"HM.imm.globulin *inj60mg/ml 50ml\",\"UDFREQN\":\"ST      \"},{\"UDDCPRSN\":\"DOC3941E\",\"UDDURAT\":\"007\",\"UDSUMQTY\":\"110\",\"UDDRGNAM\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDGNAME\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-16-10.44.00.000000\",\"UDDCPNAM\":\"何正尹　　\",\"UDDOSAGE\":\"55      \",\"UDORDSEQ\":\"0055\",\"UDBGNDT\":\"2019-08-14-09.17.00.000000\",\"UDDRGNO\":\"02145\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\"                                                                                                    \",\"UDDUNIT\":\"CC    \",\"UDROUTE\":\"IVD\",\"UDRPNAME\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDFREQN\":\"QD-TPN  \"}]\n\n                //create list need to do search\n                let tpnList = [] // All TPN data\n                let selected_parser = undefined\n                //fakeData.forEach(item => {\n                data.data.forEach(item => {\n                    //get parser\n                    selected_parser = this.select_parser(item, tpnParsers)\n                    if (selected_parser !== undefined) {\n                        const found = item.UDDRGNAM.match(RegExp(selected_parser.apply_condition.name, selected_parser.apply_condition.name_regex_flags))\n                        if (found !== null && found !== \"\") tpnList.push(item)\n                    }\n                });\n\n                console.log(\"tpnList\" + JSON.stringify(tpnList))\n                if (selected_parser !== undefined) {\n                    //parser 7 value from each TPN document （AA, Glu, Na, K, Ca, P, Mg）\n                    tpnList.forEach((item, index) => {\n                        ApiProvider.getStoredProcedureUDTEXTQ1(CID, item.UDORDSEQ)\n                            .then(data => {\n                                console.log(\"getStoredProcedureUDTEXTQ1 OK \" + JSON.stringify(data.data))\n\n                                //parse every line\n                                const result = this.parse(data.data, selected_parser)\n                                item.TPNDATA = result;\n                                //console.log(\"parse result: \" + JSON.stringify(item))\n                                tpnList.splice(index, 1, item)\n                                this.setState({\n                                    tpndata: tpnList\n                                })\n                            })\n                            .catch(err => {\n                                console.log(\"getStoredProcedureUDTEXTQ1 NG \" + err)\n                            });\n                    });\n                }\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureUDORDER0 NG \" + err)\n            });\n    }\n    select_parser = (input, parsers) => {\n        const inputBeginTime = moment(input.UDBGNDT, \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n        const inputEndTime = moment(input.UDENDDT, \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n        return parsers.find(x =>\n            input.UDDRGNAM.match(x.apply_condition.name)\n            && (!x.apply_condition.start_time || inputBeginTime >= x.apply_condition.start_time)\n            && (!x.apply_condition.end_time || inputEndTime < x.apply_condition.end_time)\n        )\n    }\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = \"\"\n        });\n\n        inputs.forEach(input => {\n            let content = input.UDWORD;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key] = match[mapping.position]\n                }\n            });\n        });\n        return allResult;\n    }\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    render() {\n        const { caseinfo, PickerDateRange } = this.props\n        const title = [\"開始時間\", \"結束時間\", \"狀態\", \"處置名稱\"]\n        const titilecell = title.map(function (info, index) {\n            return (\n                <div key={index} style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t4>{info}</t4>\n                </div>\n            );\n        })\n        const ListCellData = this.state.tpndata\n        const filterData = ListCellData.filter((element, index, arr) => {\n            const time = moment(moment(element.UDBGNDT, 'YYYY-MM-DD-HH.mm.ss.000000').format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n            return PickerDateRange[0] <= time && time <= PickerDateRange[1]\n        })\n        const DataCellRender = filterData.map(function (element, index, arr) {\n            return (\n                <Nurtiontpncell key={index} data={element} caseinfo={caseinfo} ></Nurtiontpncell>\n            );\n        })\n\n        return (\n            <div>\n                <t1>TPN order</t1>\n                <div style={{ display: \"grid\", gridTemplateColumns: \" 1fr 1fr 60px 450px\", background: \"#cccccc\", height: \"50px\", marginTop: \"10px\" }}>\n                    {titilecell}\n                </div>\n                <div style={{ minHeight: \"120px\", maxHeight: \"400px\", overflowY: \"auto\" }}>\n                    {DataCellRender}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Nurtiontpnorder\n","import React, { Component } from 'react'\nimport * as d3 from \"d3\";\nimport './Watervaluechart.scss'\nimport { Modal } from 'antd'\n// import { getRandomfornumber } from '../../Function/Wardstate'\nimport moment from 'moment';\n\nclass Watervaluechart extends Component {\n    state = {\n        visible: false,\n        select: null,\n        rowdata: null\n    };\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: true,\n            select: null,\n            rowdata: null\n        });\n    };\n    componentDidUpdate() {\n        const { svg_key } = this.props\n        d3.select(\"#\" + svg_key).remove()\n        this.drawChart()\n\n    }\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentWillUnmount() {\n    }\n\n    cal_svg_hight() {\n        const { axisTop, axisBot } = this.props\n        if (axisTop) {\n            if (axisBot) {\n                return 160\n            }\n            else {\n                return 130\n            }\n        }\n        else {\n            if (axisBot) {\n                return 130\n            }\n            else {\n                return 90\n            }\n        }\n    }\n\n    cal_svg_transform() {\n        const { axisTop, axisBot } = this.props\n        console.log(axisTop)\n        if (axisTop) {\n            if (axisBot) {\n                return 70\n            }\n            else {\n                return 50\n            }\n        }\n        else {\n            if (axisBot) {\n                return 5\n            }\n            else {\n                return 5\n            }\n        }\n    }\n\n    drawChart() {\n        function formatShiftDays(startTime, endTime) {\n            const shiftDays = parseInt((endTime - startTime) / (24 * 60 * 60 * 1000))\n            return shiftDays\n        }\n        const { svg_key, id_key, startTime, watervalueData } = this.props\n        const width = (window.screen.availWidth - 50) / 2 - 50, height = 400\n        const max = 500, min = 0\n        const shiftDays = formatShiftDays(moment(startTime, \"YYYYMMDD\").valueOf(), moment().valueOf())\n\n        if (watervalueData.length === 0) {\n            return null\n        }\n        const rectwidth = (width / shiftDays) - 2\n        var x = d3.scaleLinear()\n            .domain([0, watervalueData.length])\n            .range([0, width]);\n\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([min, max])\n            .range([height, 0])\n\n\n\n        var yAxis = d3.axisLeft(y)\n            .ticks(11)\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(10);\n\n        var xAxisBottom = d3.axisBottom(x)\n            .ticks(watervalueData.length)\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(height + 10)\n            .tickFormat(function (d) {\n                if (d % 10 === 0) {\n                    if (d > 0) {\n                        return 'D' + d\n                    }\n                    return null\n                }\n                else return null;\n            });\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_key)\n            .attr(\"viewBox\", [0, 0, width + 80, height + 50])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 30 + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n        svg.append(\"g\")\n            .call(xAxisBottom)\n            .attr(\"class\", \"axis\");\n\n\n        for (let index = 0; index < 11; index++) {\n            //上下虛線\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(index * 50))\n                .attr('x2', width)\n                .attr('y2', y(index * 50))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n        }\n\n        for (let index = 0; index < watervalueData.length; index++) {\n            //上下虛線\n            if (index % 10 === 0 && index > 0) {\n                svg.append('line')\n                    .attr('x1', x(0.5 + index))\n                    .attr('y1', y(min))\n                    .attr('x2', x(0.5 + index))\n                    .attr('y2', y(max))\n                    .style('stroke', 'rgba(187, 187, 187, 1)')\n                    .style('stroke-width', 1)\n                    .style('stroke-dasharray', 5.5);\n            }\n        }\n\n\n\n\n        // function rowdatageneral(number) {\n        //     const rowdata = {\n        //         'IV': {\n        //             \"max\": getRandomfornumber(number),\n        //             \"min\": 0\n        //         },\n        //         'feeding': {\n        //             \"max\": getRandomfornumber(number),\n        //             \"min\": 0\n        //         },\n        //         'Other': {\n        //             \"max\": getRandomfornumber(number),\n        //             \"min\": 0\n        //         }\n        //     }\n        //     return rowdata\n        // }\n        const select = this.state.select\n        if (select === null || select === undefined || select === \"\") {\n            d3.selectAll(\"rect#A123\").remove()\n        }\n        for (let index = 0; index < watervalueData.length; index++) {\n            const rowdata = watervalueData[index]\n            var svgrect = svg.append('g').on('click', () => {\n                if (rowdata === null) {\n\n                }\n                else {\n                    this.setState({\n                        visible: true,\n                        select: index,\n                        rowdata: rowdata\n                    });\n\n                }\n            })\n            console.log(select)\n            if (index === select) {\n                svgrect.append('rect')\n                    .attr('id', 'A123')\n                    .attr('width', rectwidth + 2)\n                    .attr('height', y(0) - y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .attr('x', x(index) - (rectwidth / 2) - 1)\n                    .attr('y', y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .style('fill', 'rgba(0,0,0,0)')\n                    .style('stroke', '#F5A623')\n                    .style('stroke-width', 2)\n                    .style('cursor', 'pointer');\n            }\n            else {\n                svgrect.append('rect')\n                    .attr('id', 'A123')\n                    .attr('width', rectwidth + 2)\n                    .attr('height', y(0) - y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .attr('x', x(index) - (rectwidth / 2) - 1)\n                    .attr('y', y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .style('fill', 'rgba(0,0,0,0)')\n                    .style('stroke', 'rgba(0,0,0,0)')\n                    .style('stroke-width', 2)\n                    .style('cursor', 'pointer')\n                    .style('opacity', 1);\n            }\n            svgrect.append('line')\n                .attr('x1', x(index))\n                .attr('y1', y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                .attr('x2', x(index))\n                .attr('y2', y(rowdata.IV + rowdata.Other))\n                .style('stroke', '#2E64A4')\n                .style('stroke-width', rectwidth)\n\n            svgrect.append('line')\n                .attr('x1', x(index))\n                .attr('y1', y(rowdata.IV + rowdata.Other))\n                .attr('x2', x(index))\n                .attr('y2', y(rowdata.Other))\n                .style('stroke', '#C3EFFF')\n                .style('stroke-width', rectwidth)\n\n\n            svgrect.append('line')\n                .attr('x1', x(index))\n                .attr('y1', y(rowdata.Other))\n                .attr('x2', x(index))\n                .attr('y2', y(0))\n                .style('stroke', '#3B97E1')\n                // .style('stroke', 'red')\n                .style('stroke-width', rectwidth)\n        }\n    }\n\n    ModalRender() {\n        function nulldata(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return 0\n            }\n            return value\n        }\n        const data = this.state.rowdata\n        if (data === null || data === undefined) {\n            return null\n        }\n        // function sumRowdata(data) {\n        //     if (data === null || data === undefined) {\n        //         return 0\n        //     }\n        //     return data * 0.8\n        // }\n        const select = this.state.select\n        const waterdata = this.props.watervalueData\n        const car = waterdata[select].Caloriessum\n        return (\n            <Modal\n                title=\"Basic Modal\"\n                visible={this.state.visible}\n                onOk={this.handleOk}\n                onCancel={this.handleCancel}\n                footer={null}\n            >\n                <div>IV:{nulldata(data.IV)}</div>\n                <div>Feeding:{nulldata(data.Feeding)}</div>\n                <div>Other:{nulldata(data.Other)}</div>\n                <div>總熱量:{car}kcal</div>\n            </Modal>\n        );\n    }\n    render() {\n        const { id_key } = this.props\n        const model = this.ModalRender()\n        return (\n            <div id={id_key}>\n                {model}\n            </div>\n        );\n    }\n}\n\nexport default Watervaluechart","import React, { Component } from 'react'\nimport Nurtionfeedingorder from './Nurtionfeeding'\nimport { Select, Button, DatePicker, Modal } from 'antd';\nimport WardlifeChart from '../../Wardview/Wardlifechart'\nimport Wardmonthafter from '../../Wardview/Wardmonthafter'\nimport Nurtiontpnorder from './Nurtion_TPN'\nimport Watervaluechart from './Watervaluechart'\nimport { gender } from '../../Function/Wardbedfunction'\nimport X2JS from 'x2js';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\nimport * as FiliterReg from '../../Function/FiliterReg'\nimport './Nurtion.scss'\n\nclass Nurtionview extends Component {\n    state = {\n        visible: false,\n        test_items_interval: 1,\n        UDORDER0: [],\n        QDC: [],\n        QTWER: [],\n        PickerDateRange: moment(moment().format('YYYYMMDD'))\n    }\n    componentDidMount() {\n        this.API_DATA()\n    }\n    API_DATA() {\n        const { caseinfo } = this.props\n        const xm2 = new X2JS()\n        const st = moment(caseinfo.TRANSINDT.toString(), 'YYYYMMDD').format('YYYYMMDDHHmm')\n        const et = moment().format(\"YYYYMMDDHHmm\")\n        // ApiProvider.getQDC(caseinfo.CASEID, st, et)\n        ApiProvider.getQDC(caseinfo.CASEID, st, et)\n            .then(data => {\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                console.log(parsedata)\n                this.setState({\n                    QDC: parsedata\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureUDORDER0(caseinfo.HISID, caseinfo.CASEID, \"123\")\n            .then(data => {\n                this.setState({\n                    UDORDER0: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n    }\n    switch_monthy() {\n        const { caseinfo } = this.props\n        console.log(caseinfo)\n        const grewinfo = {\n            \"WEEK_BORN\": Number(caseinfo.WEEK_BORN),\n            \"DAY_BORN\": Number(caseinfo.DAY_BORN),\n            \"BIRTHDAY\": caseinfo.PBASINGNINFO.PBIRTHDT\n        }\n        const WeightList = caseinfo.WEIGHT\n        const sex = gender(caseinfo.PBASINGNINFO.PSEX)\n        const switch_data = this.state.test_items_interval\n        switch (switch_data) {\n            case 1:\n                return <WardlifeChart grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife\"} svg_key={\"wardlife_svg\"} gender={sex}></WardlifeChart>\n            case 0:\n                return <Wardmonthafter grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife_after\"} svg_key={\"wardlife_after_svg\"} gender={sex}></Wardmonthafter>\n            default:\n                return null;\n        }\n    }\n\n    handleChange = (checkedValues) => {\n        console.log('checked = ', checkedValues);\n        this.setState(\n            {\n                test_items_interval: checkedValues\n            }\n        )\n\n    }\n    onOk = (value) => {\n        console.log('onOk: ', value);\n    }\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n    WaterValueControlBar() {\n        return (\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", marginRight: \"10px\" }}>\n                    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        <div style={{ height: \"10px\", width: \"10px\", background: \"#C3EFFF\", marginRight: \"5px\" }}></div>\n                        <t3>IV</t3>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        <div style={{ height: \"10px\", width: \"10px\", background: \"#2E64A4\", marginRight: \"5px\" }}></div>\n                        <t3>Feed</t3>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        <div style={{ height: \"10px\", width: \"10px\", background: \"#3B97E1\", marginRight: \"5px\" }}></div>\n                        <t3>Other</t3>\n                    </div>\n                </div>\n                {/* <Button type=\"primary\" onClick={this.showModal}>設定營養項目</Button> */}\n            </div>\n        );\n    }\n    GrowthCurveControlBar() {\n        const { Option } = Select;\n        return (\n            <div className='titlebutton'>\n                <Select defaultValue={1} style={{ width: 120 }} onChange={this.handleChange}>\n                    <Option value={0}>滿足月</Option>\n                    <Option value={1}>不滿足月</Option>\n                </Select>\n                <Button type=\"primary\" onClick={this.showModal}>新增體重</Button>\n                <Modal\n                    title=\"手動新增體重紀錄\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                        <div style={{ display: \"flex\", alignItems: \"center\" }}>選擇時間:</div>\n                        <DatePicker id=\"nurtion_datepicker\" style={{ width: \"400px\" }} showTime placeholder=\"選擇時間\" onOk={this.onOk} />\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n    WaterValueRender() {\n        function formatTimeArray(startTime) {\n            const shiftTimer = parseInt((moment().valueOf() - moment(startTime, \"YYYYMMDD\").valueOf()) / (23 * 60 * 60 * 1000))\n            console.log(startTime, shiftTimer)\n            var TimerArray = []\n            for (let index = 0; index < shiftTimer; index++) {\n                const Time = moment(moment(startTime, \"YYYYMMDD\").valueOf() + (index * 24 * 60 * 60 * 1000)).format(\"YYYY/MM/DD\")\n                TimerArray.push(Time)\n            }\n            return TimerArray\n        }\n        const { caseinfo } = this.props\n        const QDC = this.state.QDC\n        if (QDC.length === 0) {\n            return null\n        }\n        var FeedinfData = []\n        var IVData = []\n        var OtherData = []\n        var Calories = 0\n        for (let index = 0; index < QDC.length; index++) {\n            const element = QDC[index];\n            const feedstatus = FiliterReg.Feedarea_Reg_IO().find(function (value, index, array) {\n                return element.item === value\n            })\n            if (feedstatus) {\n                FeedinfData.push(element)\n            }\n            const IVstatus = FiliterReg.IVarea_reg_IO().find(function (value, index, array) {\n                return element.item === value\n            })\n            if (IVstatus) {\n                IVData.push(element)\n            }\n            const Otherstatus = FiliterReg.Otherarea_reg_IO().find(function (value, index, array) {\n                return element.item === value\n            })\n            if (Otherstatus) {\n                const invalue = element.inp_val1\n                if (invalue !== undefined) {\n                    OtherData.push(element)\n                }\n            }\n            console.log(element)\n\n\n        }\n\n        console.log(FeedinfData)\n        console.log(IVData)\n        console.log(OtherData)\n        function sumcar(List) {\n            var Calories = 0\n            for (let index = 0; index < List.length; index++) {\n                const element = List[index];\n                if (element.item === \"進食\") {\n                    if (element.lost === \"配方奶\") {\n                        Calories = Calories + Number(element.inp_val2) * 0.8\n                    }\n                    if (element.lost === \"母奶\") {\n                        Calories = Calories + Number(element.inp_val2) * 0.7\n\n                    }\n                }\n                if (element.nam !== undefined) {\n                    if (element.nam.toString().match(\"10%TPN\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                    if (element.nam.toString().match(\"15%TPN\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34 * 1.5\n                    }\n                    if (element.nam.toString().match(\"SMOFliquid\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                    if (element.nam.toString().match(\"D10\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                    if (element.nam.toString().match(\"D12\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34 * 1.2\n                    }\n                    if (element.nam.toString().match(\"D5W\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34 * 5\n                    }\n                    if (element.nam.toString().match(\"taita\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                }\n\n            }\n            return Calories\n\n        }\n        const startTime = caseinfo.TRANSINDT.toString()\n        const TimerList = formatTimeArray(startTime)\n        var watervalueDataList = []\n        for (let index = 0; index < TimerList.length; index++) {\n            const element = TimerList[index];\n            const filterFeedind = FeedinfData.filter(function (value, index, arr) {\n                return moment(element, \"YYYY/MM/DD\").valueOf() === moment(value.rec_dat.toString().trim(), \"YYYY/MM/DD\").valueOf()\n            })\n            const filterIV = IVData.filter(function (value, index, arr) {\n                return moment(element, \"YYYY/MM/DD\").valueOf() === moment(value.rec_dat.toString().trim(), \"YYYY/MM/DD\").valueOf()\n            })\n            const filterOther = OtherData.filter(function (value, index, arr) {\n                return moment(element, \"YYYY/MM/DD\").valueOf() === moment(value.rec_dat.toString().trim(), \"YYYY/MM/DD\").valueOf()\n            })\n\n            const feedingSum = SumData2(filterFeedind)\n            const IVSum = SumData(filterIV)\n            const OtherSum = SumData(filterOther)\n\n            const Caloriessum = sumcar(filterFeedind) + sumcar(filterIV) + sumcar(filterOther)\n            watervalueDataList.push({\n                Feeding: feedingSum,\n                IV: IVSum,\n                Other: OtherSum,\n                Time: element,\n                Caloriessum\n            })\n\n        }\n        function SumData(arr) {\n            var sum = 0;\n            for (var i = 0; i < arr.length; i++) {\n                sum += Number(arr[i].inp_val1);\n            };\n            return sum;\n        }\n\n        function SumData2(arr) {\n            var sum = 0;\n            for (var i = 0; i < arr.length; i++) {\n                sum += Number(arr[i].inp_val2);\n            };\n            return sum;\n        }\n\n\n        console.log(watervalueDataList)\n        return (\n            <Watervaluechart Calories={Calories} watervalueData={watervalueDataList} startTime={caseinfo.TRANSINDT} id_key={\"water_id\"} svg_key={\"water_svg\"} caseiddays='2019/11/11'></Watervaluechart>\n        );\n    }\n\n    PickerDateRangeChange = (date, dateString) => {\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const PickerDate = this.state.PickerDateRange.valueOf()\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const bTemp = bTime - (6 * day)\n                bronDate <= bTemp && this.PickerDateRangeChange(moment(bTime))\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD'))\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= aTemp && this.PickerDateRangeChange(moment(aTime))\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const GrowthCurve = this.switch_monthy()\n        const GrowthCurveControl = this.GrowthCurveControlBar()\n        const WaterValueControl = this.WaterValueControlBar()\n        const tpndata = this.state.UDORDER0\n        const feeddata = this.state.TRTMNTQ1\n        const TimeStampPickerDate = this.state.PickerDateRange.valueOf()\n        const { caseinfo } = this.props\n\n        if (tpndata.length === 0 || feeddata === 0) {\n            return null\n        }\n\n        const waterRender = this.WaterValueRender()\n        const PickerDateRange = [TimeStampPickerDate - (6 * 24 * 60 * 60 * 1000), TimeStampPickerDate]\n\n        return (\n            <div className='nurtionheight'>\n                <div className='nurtionlayout'>\n                    <div>\n                        <div className='nurtioncomponmentboxtitle'>\n                            <t1>生長曲線圖</t1>\n                            {GrowthCurveControl}\n                        </div>\n                        <div className='nurtioncomponmentboxcontent'>{GrowthCurve}</div>\n                    </div>\n                    <div>\n                        <div className='nurtioncomponmentboxtitle'>\n                            <t1>水量表</t1>\n                            <div className='titlebutton'>\n                                {WaterValueControl}\n                            </div>\n                        </div>\n                        <div className='nurtioncomponmentboxcontent'>\n                            {waterRender}\n                        </div>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"140px 120px\", gridColumnGap: \"5px\", margin: \"10px 0px 5px 0px\" }}>\n                    <DatePicker\n                        value={this.state.PickerDateRange}\n                        format={\"YYYY/MM/DD\"}\n                        allowClear={false}\n                        locale={\"zh_TW\"}\n                        onChange={this.PickerDateRangeChange}\n                    />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: '1fr 1fr', gridColumnGap: \"10px\", marginBottom: \"20px\" }}>\n                    <Nurtionfeedingorder PickerDateRange={PickerDateRange} caseinfo={caseinfo}></Nurtionfeedingorder>\n                    <Nurtiontpnorder PickerDateRange={PickerDateRange} caseinfo={caseinfo}></Nurtiontpnorder>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Nurtionview\n","import React, { Component } from 'react'\nimport './Infectionlabtable.scss'\n// import { chronicladdataoneday, chroniclabdatathird } from '../../Data/Wardviewdata'\n// import { arraychange } from '../../Function/Wardstate'\n\nclass Infectionlabtable extends Component {\n    switch_state() {\n        const chronic_state = 2\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 18\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    table_content() {\n        function FormatList(Datalist, st) {\n            var Render = []\n            for (let index = 0; index < 21; index++) {\n                const start = st + (index * 8 * 60 * 60 * 1000)\n                const end = st + ((index + 1) * 8 * 60 * 60 * 1000)\n                const FilterData = Datalist.filter(function (value, index, arr) {\n                    return value.Time > start && value.Time < end\n                })\n                var sum = 0\n                console.log(FilterData)\n                for (let index = 0; index < FilterData.length; index++) {\n                    const element = FilterData[index];\n                    sum = sum + Number(element.Data)\n                }\n                Render.push(sum)\n            }\n            return Render\n        }\n        function CellRander(List) {\n            const cellR = List.map(function (info, index) {\n                return (\n                    <centerstyle style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }} key={index}>\n                        <t2>{info}</t2>\n                    </centerstyle>\n                );\n            })\n            return cellR\n        }\n        const { PickerDate, WBCList, BandList, SegList, LymList, PCTList, CRPList, title } = this.props\n        console.log(PickerDate)\n        const st = PickerDate + (31 * 60 * 60 * 1000) - (7 * 24 * 60 * 60 * 1000)\n        var WBCRender = FormatList(WBCList, st)\n        var BandRender = FormatList(BandList, st)\n        var SegRender = FormatList(SegList, st)\n        var LymRender = FormatList(LymList, st)\n        var PCTRender = FormatList(PCTList, st)\n        var CRPRender = FormatList(CRPList, st)\n        const WBCcell = CellRander(WBCRender)\n        const Bandcell = CellRander(BandRender)\n        const Segcell = CellRander(SegRender)\n        const Lymcell = CellRander(LymRender)\n        const PCTcell = CellRander(PCTRender)\n        const CRPcell = CellRander(CRPRender)\n        return (\n            <div style={{ display: \"grid\", gridTemplateRows: \"repeat(\" + title.length + \",1fr)\" }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{WBCcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{Bandcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{Segcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{Lymcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{PCTcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{CRPcell}</div>\n            </div>\n        );\n    }\n    render() {\n        const { userdata, title } = this.props\n        const title_list = title.map((info, index) => <div className='Chronictabletitlelist' key={index}><t2>{info.title}</t2></div>)\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\" }}>\n                <div style={{ display: \"grid\", gridTemplateRows: \"repeat(\" + title.length + \",1fr)\" }}>\n                    {title_list}\n                </div>\n                {this.table_content()}\n            </div>\n        );\n    }\n}\n\nexport default Infectionlabtable","import React, { Component } from 'react'\nimport Infectionlabtable from './Infectionlabtable'\n\nclass Infectionlab extends Component {\n    render() {\n        const { WBCList, BandList, SegList, LymList, PCTList, CRPList,PickerDate } = this.props\n        const item_title = [{ title: \"WBC\" }, { title: \"Band\" }, { title: \"Seg\" }, { title: \"Lym\" }, { title: \"PCT\" }, { title: \"CRP\" }]\n        return (\n            <div style={{margin:\"10px 0px\"}}>\n                <Infectionlabtable PickerDate={PickerDate} title={item_title}  WBCList={WBCList} BandList={BandList} SegList={SegList} LymList={LymList} PCTList={PCTList} CRPList={CRPList}></Infectionlabtable>\n            </div>\n        );\n    }\n}\n\nexport default Infectionlab","import React, { Component } from 'react'\nimport { DatePicker } from 'antd'\nimport Vitalxaxis from '../../Module/Vitalxaxis'\n// import Infectionvitalsign from './Infectionvitalsign'\nimport Infectionlab from './Infectionlab'\nimport Orderonchronic from '../ChronicleView/ChronicOrder'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport './Infection.scss'\nimport Vitalonchronic from '../ChronicleView/Chronic_vital'\n\nclass Infectionview extends Component {\n    state = {\n        datasource: [],\n        statussource: \"CM\",\n        intervalselect: 2,\n        PickerDate: moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf(),\n        UDORDER0: [],\n        RESLAB02: [],\n        RESLAB01: [],\n        classParser: undefined,\n\n        hrdatasource: [],\n        rrdatasource: [],\n        spo2datasource: [],\n        abpdatasource: [],\n        nbpdatasource: [],\n        btdatasource: [],\n        QDVS: [],\n        QOXY: [],\n    }\n    componentDidMount() {\n        this.apidata()\n    }\n\n    apidata() {\n        const { caseinfo } = this.props\n        const dateTime = this.state.PickerDate\n        const et = dateTime + (31 * 60 * 60 * 1000)\n        const st = moment(et - (7 * 24 * 60 * 60 * 1000)).format(\"YYYY-MM-DD\")\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Prescription\");\n                console.log(\"getGitHubJson Prescription OK \" + JSON.stringify(parser))\n                this.setState({\n                    classParser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiProvider.getStoredProcedureUDORDER0(caseinfo.HISID, caseinfo.CASEID, \"123\")\n            .then(data => {\n                this.setState({\n                    UDORDER0: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        ApiProvider.getStoredProcedureRESLAB02(caseinfo.HISID, st)\n            .then(data => {\n                this.setState({\n                    RESLAB02: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESLAB01(caseinfo.HISID, st)\n            .then(data => {\n                this.setState({\n                    RESLAB01: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n    }\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        console.log(\"mappings\" + mappings)\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n\n        inputs.forEach(input => {\n            let content = input.UDGNAME;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n        });\n        return allResult;\n    }\n    sourcehandleChange = (value) => {\n        this.setState({\n            statussource: value\n        })\n\n    }\n\n\n    render() {\n        function vallofnull(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"\"\n            }\n            return value.toString().trim()\n        }\n        // const { Option } = Select;\n        const { caseinfo } = this.props\n        const { classParser, UDORDER0 } = this.state\n        const LabData = this.state.RESLAB02\n        const LabData2 = this.state.RESLAB01\n        const dateTime = this.state.PickerDate\n        const et = dateTime + (31 * 60 * 60 * 1000)\n        const st = et - (7 * 24 * 60 * 60 * 1000)\n        var WBCList = []\n        var BandList = []\n        var SegList = []\n        var LymList = []\n        var PCTList = []\n        var CRPList = []\n        if (Array.isArray(LabData)) {\n            if (LabData.length !== 0) {\n                for (let index = 0; index < LabData.length; index++) {\n                    const element = LabData[index];\n                    const WBC = vallofnull(element.RSV01)\n                    const Band = vallofnull(element.RSV13)\n                    const Seg = vallofnull(element.RSV14)\n                    const Lym = vallofnull(element.RSV15)\n                    const PCT = null\n                    const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                    if (st < time && time < et) {\n                        if (WBC !== null || WBC !== \"\" || WBC !== undefined) {\n                            WBCList.push({\n                                Time: time,\n                                Data: WBC\n                            })\n                        }\n                        if (Band !== null || Band !== \"\" || Band !== undefined) {\n                            BandList.push({\n                                Time: time,\n                                Data: Band\n                            })\n                        }\n                        if (Seg !== null || Seg !== \"\" || Seg !== undefined) {\n                            SegList.push({\n                                Time: time,\n                                Data: Seg\n                            })\n                        }\n                        if (Lym !== null || Lym !== \"\" || Lym !== undefined) {\n                            LymList.push({\n                                Time: time,\n                                Data: Lym\n                            })\n                        }\n                        if (PCT !== null || PCT !== \"\" || PCT !== undefined) {\n                            PCTList.push({\n                                Time: time,\n                                Data: PCT\n                            })\n                        }\n                    }\n                }\n            }\n        }\n        if (Array.isArray(LabData2)) {\n            if (LabData2.length !== 0) {\n                for (let index = 0; index < LabData2.length; index++) {\n                    const element = LabData2[index];\n                    const CRP = vallofnull(element.RSV30)\n                    const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                    if (st < time && time < et) {\n                        if (CRP !== null || CRP !== \"\" || CRP !== undefined) {\n                            CRPList.push({\n                                Time: time,\n                                Data: CRP\n                            })\n                        }\n                    }\n                }\n            }\n        }\n        console.log(WBCList, BandList, SegList, LymList, PCTList, CRPList)\n\n        let clusteredData = {}\n        if (classParser !== undefined) {\n            clusteredData = this.parse(UDORDER0, classParser)\n        }\n\n        //filter data by selected class\n        const filteredData = clusteredData[\"抗生素類別\"];\n\n        return (\n            <div style={{ padding: \"0px 20px\" }}>\n                <div className='Infectioncontrol'>\n                    <DatePicker\n                        disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                        defaultValue={moment(this.state.PickerDate)}\n                        onChange={(date, datestring) => { this.setState({ PickerDate: date.valueOf() }) }}\n                        allowClear={false} />\n                </div>\n                <div style={{ margin: \"10px 0px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\" }}>\n                        <div></div>\n                        <Vitalxaxis max={200} min={0} select_interval={2} select_date={new Date().getTime()} id_key=\"xaxis_infect\" svg_id=\"xaxis_svg_infect\"></Vitalxaxis>\n                    </div>\n                </div>\n                <div className='boxshadow'></div>\n                <div className='Infectionlayout'>\n                    <Vitalonchronic PickerDate={this.state.PickerDate} select_interval={2} caseinfo={caseinfo} source={\"infection\"} title=\"Vital\"></Vitalonchronic>\n                    {/* <Infectionvitalsign caseinfo={caseinfo} StatusSource={this.state.statussource} PickerDate={this.state.PickerDate}></Infectionvitalsign> */}\n                    {/* Order */}\n                    <Orderonchronic PickerDate={this.state.PickerDate} UDORDER0={filteredData} select_interval={2} caseinfo={caseinfo} source={\"infection\"}></Orderonchronic>\n                    <Infectionlab PickerDate={this.state.PickerDate} WBCList={WBCList} BandList={BandList} SegList={SegList} LymList={LymList} PCTList={PCTList} CRPList={CRPList}></Infectionlab>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\" }}>\n                    <div></div>\n                    <Vitalxaxis max={200} min={0} select_interval={2} select_date={new Date().getTime()} id_key=\"xaxis_flootsheet_bot\" svg_id=\"xaxis_svg_flootsheet_bot\"></Vitalxaxis>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Infectionview","import React, { Component } from 'react';\nimport editlogo from '../../Image/svg/Edit.svg'\n// import detaillogo from '../../Image/svg/details.svg'\nimport { Input, Button } from 'antd';\nimport './Bedsidecard.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Bedsidecard extends Component {\n    state = {\n        caseinfo: this.props.caseinfo,\n        EditMode: false,\n        remarkContent: \"\",\n        inputContent: \"\",\n        powerLogin: 0\n    }\n    componentDidMount() {\n        //bind function\n        this.onInputChange = this.onInputChange.bind(this);\n\n        //query patient remark\n        this.queryPatientRemark();\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    queryPatientRemark() {\n        ApiProvider.getOnePatientRemark(this.state.caseinfo.TRANSINID)\n            .then(data => {\n                console.log(\"queryPatientRemark OK \" + JSON.stringify(data));\n                this.setState({\n                    remarkContent: data.data[0].context\n                });\n            })\n            .catch(err => {\n                console.log(\"queryPatientRemark NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    onClickEnter() {\n        ApiProvider.createPatientRemark(this.state.inputContent, this.state.caseinfo.HISID, this.state.caseinfo.TRANSINID)\n            .then(data => {\n                console.log(\"createPatientRemark OK \" + JSON.stringify(data));\n                this.setState(\n                    {\n                        inputContent: \"\"\n                    }\n                )\n                this.queryPatientRemark();\n            })\n            .catch(err => {\n                console.log(\"createPatientRemark NG \" + JSON.stringify(err));\n            });\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    render() {\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div className='bedsidecardtitle'>\n                    <t1>床頭卡註記</t1>\n                    <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                        <img src={editlogo} alt=\"editlogo\" />\n                    </div>\n                </div>\n                <div className='bedsidecardcontext'>\n                    <t2>{this.state.remarkContent}</t2>\n                </div>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", backgroundColor: \"rgba(238,238,238,1)\" }}>\n                        <Input placeholder=\"輸入當日註記內容\" value={this.state.inputContent} onChange={this.onInputChange}></Input>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Bedsidecard\n","import React, { Component } from 'react';\nimport editlogo from '../../Image/svg/Edit.svg'\nimport { Checkbox, Input, Button } from 'antd';\nimport './Scheduletodo.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nconst TODO_DONE = \"已完成\";\nconst TODO_UNFINISH = \"未完成\";\n\nclass Scheduletodo extends Component {\n    state = {\n        EditMode: false,\n        displayMode: true, //true已完成 flase未完成\n        todolist: [],\n        caseinfo: this.props.caseinfo,\n        inputContent: undefined,\n        powerLogin: 0\n    }\n    componentDidMount() {\n        //bind function\n        this.onInputChange = this.onInputChange.bind(this);\n\n        //query patient notice\\\n        this.queryPatientTodo();\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    queryPatientTodo() {\n        ApiProvider.getOneTodo(this.state.caseinfo.TRANSINID, this.state.caseinfo.CASEID)\n            .then(data => {\n                console.log(\"queryPatientTodo OK \" + JSON.stringify(data));\n                this.setState({\n                    todolist: data.data\n                });\n            })\n            .catch(err => {\n                console.log(\"queryPatientTodo NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString()\n        ApiProvider.createTodo(this.state.caseinfo.CASEID, this.state.inputContent, timeNowStr, this.state.caseinfo.TRANSINID, TODO_UNFINISH)\n            .then(data => {\n                console.log(\"createTodo OK \" + JSON.stringify(data));\n                this.queryPatientTodo();\n            })\n            .catch(err => {\n                console.log(\"createTodo NG \" + JSON.stringify(err));\n            });\n        this.setState(\n            {\n                EditMode: false,\n                inputContent: undefined\n            }\n        )\n    }\n    onClickfinish() {\n        console.log(\"finish\")\n        this.setState(\n            {\n                displayMode: true\n            }\n        )\n    }\n    onClickunfisish() {\n        this.setState(\n            {\n                displayMode: false\n            }\n        )\n    }\n\n    onChange = (checkedValues) => {\n        console.log('checked = ', document.getElementById(\"finish\"));\n    }\n    onItemCheck = (event) => {\n        console.log('onItemCheck ' + JSON.stringify(event.target));\n\n        const itemToUpdate = this.state.todolist.find(item => item.time === event.target.value);\n        console.log('find item ' + JSON.stringify(itemToUpdate));\n\n        if ((this.state.displayMode === true && event.target.checked === false) || (this.state.displayMode === false && event.target.checked === true)) {\n            ApiProvider.createTodo(itemToUpdate.caseid, itemToUpdate.context, itemToUpdate.time, itemToUpdate.transinno, (itemToUpdate.type === TODO_DONE) ? TODO_UNFINISH : TODO_DONE)\n                .then(data => {\n                    console.log(\"updateTodo OK \" + JSON.stringify(data));\n                    this.queryPatientTodo();\n                })\n                .catch(err => {\n                    console.log(\"updateTodo NG \" + JSON.stringify(err));\n                });\n        }\n    }\n    render() {\n        // const button_style = {\n        //     finish: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\", borderRadius: \"16px\", border: \"rgba(245, 166, 35, 1) 1px solid\", color: \"rgba(245, 166, 35, 1)\" },\n        //     unfinish: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\", borderRadius: \"16px\", border: \"rgba(245, 166, 35, 1) 1px solid\", background: \"rgba(245, 166, 35, 1)\", color: \"white\" }\n        // }\n\n        const todolist_data = this.state.todolist\n        const finish_data = todolist_data.filter(function (item, index, array) {\n            return item.type === TODO_DONE;\n        });\n        const finish_value = finish_data.map(function (item, index, array) {\n            return item.time;\n        });\n        const unfinish_data = todolist_data.filter(function (item, index, array) {\n            return item.type === TODO_UNFINISH;\n        });\n\n        const onItemCheck = this.onItemCheck;\n        const finish_checkbox = finish_data.map(function (item, index, array) {\n            return (\n                <div key={index} className='scheduletodocell'>\n                    <Checkbox value={item.time} checked={true} onChange={onItemCheck} style={{ textDecoration: \"line-through\" }}>{item.context}</Checkbox>\n                </div>\n            );\n        });\n        const unfinish_checkbox = unfinish_data.map(function (item, index, array) {\n            return (\n                <div key={index} className='scheduletodocell'>\n                    <Checkbox value={item.time} checked={false} onChange={onItemCheck}>{item.context}</Checkbox>\n                </div>\n            );\n        });\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <t1>To Do List</t1>\n                <div className='scheduletodotitle'>\n                    <t1>待辦排程</t1>\n                    <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                        <img src={editlogo} alt=\"editlogo\" />\n                    </div>\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"10px 0px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"115px 115px\", gridColumnGap: \"10px\" }}>\n                        <div style={{ cursor: \"pointer\" }} className={this.state.displayMode ? 'finishbutton' : 'todobutton'} onClick={() => this.onClickunfisish()}>未完成</div>\n                        <div style={{ cursor: \"pointer\" }} onClick={() => this.onClickfinish()} className={this.state.displayMode ? 'todobutton' : 'finishbutton'}>已完成</div>\n                    </div>\n                </div>\n                <Checkbox.Group defaultValue={finish_value} style={{ width: '100%' }} onChange={this.onChange}>\n                    <div style={{ overflowY: \"auto\", maxHeight: \"200px\" }}>\n                        {this.state.displayMode ? finish_checkbox : unfinish_checkbox}\n                    </div>\n                </Checkbox.Group>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <Input placeholder=\"輸入當日註記內容\" value={this.state.inputContent} onChange={this.onInputChange}></Input>\n                        <Button type=\"primary\">新增</Button>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Scheduletodo\n","import React, { Component } from 'react';\nimport calenderlogo from '../../Image/svg/calender.svg'\nimport calenderwhitelogo from '../../Image/svg/calenderwhite.svg'\nimport pingcheck from '../../Image/svg/ping.svg'\nimport pingwhite from '../../Image/svg/pingwhite.svg'\nimport './Calendercell.scss'\nimport { mmddformat, weekdateformatcalender } from '../../Function/Timeformat'\n\nclass Calendercell extends Component {\n\n    sendcallback(timestamp, clickindex) {\n        this.props.parentCallback(timestamp, clickindex);\n    }\n    onClickCheck(timestamp, clickindex) {\n        this.sendcallback(timestamp, clickindex)\n    }\n\n    render() {\n        const { clickindex, state, newDate, timestamp, clickdate, data, today } = this.props;\n        function disableday(state) {\n            if (state) {\n                return (\n                    <div className='calendersubcontexticonsecond'>\n                        <img src={calenderlogo} alt='calenderlogo' />\n                        <img src={pingcheck} alt='pingcheck' />\n                    </div>\n                );\n            }\n            else {\n                return (\n                    <div className='calendersubcontexticonsecond'>\n                        <img src={calenderwhitelogo} alt='calenderlogo' />\n                        <img src={pingwhite} alt='pingcheck' />\n                    </div>\n                );\n            }\n        }\n        function disabledayinfo(state) {\n            const scheduleArray = data.scheduleList.filter(item => item.type === \"排程\");\n            const eventArray    = data.scheduleList.filter(item => item.type === \"事件\");\n\n            if (state) {\n                return (\n                    <div className='calendersubcontexticonsecond'>\n                        <t1>{scheduleArray.length}</t1>\n                        <t1>{eventArray.length}</t1>\n                    </div>\n                );\n            }\n            else {\n                return (\n                    <div className='calendersubcontexticonsecond'>\n                        <t1 className='displayinfo'>{scheduleArray.length}</t1>\n                        <t1 className='displayinfo'>{eventArray.length}</t1>\n                    </div>\n                );\n            }\n        }\n        function locl(state) {\n            /*if (state) {\n                return '當日'\n            }\n            else return null\n            */\n            if(timestamp === today) return  '當日'\n            else return null\n        }\n        function stateswitch() {\n\n            console.log(timestamp, clickdate)\n            if (mmddformat(clickdate) === mmddformat(timestamp)) {\n                return true\n            }\n            return false\n        }\n        return (\n            <div className={stateswitch() ? 'calendersubcontextclick' : 'calendersubcontext'} onClick={() => this.onClickCheck(timestamp, clickindex)}>\n                <div className={stateswitch() ? 'calendersubcontexttitleclick' : 'calendersubcontexttitle'}>\n                    <t2 className='calendersubcontexttitletoday'>{mmddformat(timestamp)}({weekdateformatcalender(timestamp)}){locl(newDate)}</t2>\n                </div>\n                <div className='calendersubcontexticon'>\n                    {disableday(state)}\n                </div>\n                <div className='calendersubcontexticon'>\n                    {disabledayinfo(state)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Calendercell","import React, { Component } from 'react';\nimport { DatePicker } from 'antd';\nimport { Select } from 'antd';\nimport './Calender.scss'\nimport { mmddformat, compareday, yyyymmfirstweeksate } from '../../Function/Timeformat'\nimport Calendercell from './Calendercell'\nimport { Icon } from 'antd'\nimport CrossectionSchedule from '../CrossSectionView/Crosssectionschedule'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment';\n\nconst SCHEDULE_TYPE_EVENT = \"事件\";\n// const SCHEDULE_TYPE_SCHEDULE = \"排程\";\nconst timeZoneOffset = 8 * 60 * 60 * 1000;\n\nclass Calender extends Component {\n    state = {\n        calendermode: 'week',\n        Clickdays: null,\n        ClickDate: null,\n        displayinfo: null,\n        scheduleRawData: [],\n        scheduleData: [],\n        startTimestamp: 0,\n        endTimestamp: 0,\n        todayBegin: 0,\n        noticeRawData: []\n    }\n    componentDidMount() {\n        const { startTimestamp, endTimestamp, todayBegin } = this.getStartEndTime();\n        this.setState({\n            startTimestamp: startTimestamp,\n            endTimestamp: endTimestamp,\n            todayBegin: todayBegin,\n            ClickDate: todayBegin\n        });\n        this.querySchedule(new Date(startTimestamp).toISOString().split('.')[0], new Date(endTimestamp).toISOString().split('.')[0]);\n        this.queryNotice();\n    }\n    getStartEndTime() {\n        const today = new Date();\n        const monthfirstweekday = new Date(today.getFullYear(), today.getMonth(), 1).getDay();\n        const firstCellBegin = new Date(today.getFullYear(), today.getMonth(), 1).getTime() - (monthfirstweekday * 24 * 60 * 60 * 1000) + timeZoneOffset;\n        const todayBegin = new Date(today.getFullYear(), today.getMonth(), today.getDate()).getTime() + timeZoneOffset;\n\n        const startTimestamp = (this.state.calendermode === 'week') ? todayBegin - 3 * 24 * 60 * 60 * 1000 : firstCellBegin;\n        const endTimestamp = (this.state.calendermode === 'week') ? startTimestamp + 7 * 24 * 60 * 60 * 1000 : startTimestamp + 35 * 24 * 60 * 60 * 1000;\n\n        return { startTimestamp, endTimestamp, todayBegin };\n    }\n    querySchedule(startTimestampStr, endTimestampStr) {\n        ApiProvider.getOnePatientSchedule(this.props.caseinfo.TRANSINID, startTimestampStr, endTimestampStr)\n            .then(data => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n\n                const itemList = data.data;\n                let refactoredList = [];\n                itemList.forEach(item => {\n                    const itemTimeStr = item.time.split('T')[0];\n                    let foundItemIndex = refactoredList.findIndex(element => element.time === itemTimeStr);\n                    if (foundItemIndex === -1) {\n                        //not found, create one\n                        let newItem = {\n                            time: itemTimeStr,\n                            timestamp: item.time,\n                            scheduleList: []\n                        }\n                        let newEvent = {\n                            type: item.type,\n                            timestamp: new Date(item.time).getTime(),\n                            writer: (item.type === SCHEDULE_TYPE_EVENT) ? \"林醫師\" : \"張醫師\",\n                            name: item.name,//this.props.caseinfo.PBASINGNINFO.PNAMEC,//(item.type === SCHEDULE_TYPE_EVENT) ? \"林ＯＯ\" : \"黃ＯＯ\",\n                            content: item.context,\n                            bednumber: item.bednumber\n                        }\n                        newItem.scheduleList.push(newEvent);\n                        refactoredList.push(newItem);\n                    } else {\n                        //found, update item\n                        let newEvent = {\n                            type: item.type,\n                            timestamp: new Date(item.time).getTime(),\n                            writer: (item.type === SCHEDULE_TYPE_EVENT) ? \"林醫師\" : \"張醫師\",\n                            name: item.name,//this.props.caseinfo.PBASINGNINFO.PNAMEC,//(item.type === SCHEDULE_TYPE_EVENT) ? \"林ＯＯ\" : \"黃ＯＯ\",\n                            content: item.context,\n                            bednumber: item.bednumber\n                        }\n                        refactoredList[foundItemIndex].scheduleList.push(newEvent);\n                    }\n                });\n                this.setState({\n                    scheduleRawData: data.data,\n                    scheduleData: refactoredList\n                });\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }\n    queryNotice() {\n        ApiProvider.getOnePatientNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID)\n            .then(result => {\n                console.log(\"getOnePatientNotice OK \" + JSON.stringify(result));\n                this.setState({\n                    noticeRawData: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientNotice NG \" + JSON.stringify(err));\n            });\n    }\n    callbackFunction = (timestamp, clickindex) => {\n        console.log(timestamp)\n        this.setState({\n            ClickDate: timestamp,\n            displayinfo: clickindex\n        })\n    }\n    onCancelClick() {\n        this.setState({\n            ClickDate: this.state.todayBegin,\n            displayinfo: null\n        })\n    }\n    handleChange = (value) => {\n        console.log(value)\n        this.setState({\n            calendermode: value,\n            displayinfo: null,\n            Clickdays: null\n        })\n    }\n    onChange = (timestamp) => {\n        console.log('changestate')\n    }\n    onClickCheck(timestampdate) {\n        this.setState({\n            onClickdays: timestampdate\n        })\n    }\n    getDataFromTimestamp(timestamp) {\n        const dateStr = new Date(timestamp).toISOString().split('T')[0];\n        const dataOfDayIndex = this.state.scheduleData.findIndex(element => element.time === dateStr);\n        const dataOfDay = (dataOfDayIndex === -1) ? { scheduleList: [] } : this.state.scheduleData[dataOfDayIndex];\n        return dataOfDay;\n    }\n    getNoticeFromTimestamp(timestamp) {\n        const dateStr = new Date(timestamp).toISOString().split('T')[0];\n        const noticeOfDayArray = this.state.noticeRawData.filter(element => element.time.indexOf(dateStr) > -1);\n        return noticeOfDayArray;\n    }\n    weekmode() {\n        var weekcontext = []\n        for (let index = 0; index < 7; index++) {\n            const timestampdate = this.state.startTimestamp + (index * 24 * 60 * 60 * 1000);\n            const date = mmddformat(timestampdate)\n            const dataOfDay = this.getDataFromTimestamp(timestampdate);\n            if (index - 3 === 0) {\n                weekcontext.push(\n                    <Calendercell clickindex={'week'} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={true} newDate={true} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n                );\n            }\n            else {\n                weekcontext.push(\n                    <Calendercell clickindex={'week'} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={compareday(timestampdate)} newDate={false} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n                );\n\n            }\n        }\n        return weekcontext\n    }\n    weekmonthmode(weeknumber, firstMonthWeekDay) {\n        var weekcontext = []\n        for (let index = 0; index < 7; index++) {\n            const timestampdate = new Date(firstMonthWeekDay).getTime() + (index * 24 * 60 * 60 * 1000) + timeZoneOffset;\n            const date = mmddformat(timestampdate)\n            const dataOfDay = this.getDataFromTimestamp(timestampdate)\n\n            if (new Date(mmddformat(new Date().getTime())).getTime() <= new Date(mmddformat(new Date(timestampdate).getTime())).getTime()) {\n                weekcontext.push(\n                    <Calendercell clickindex={weeknumber} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={true} newDate={true} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n                );\n            }\n            else {\n                weekcontext.push(\n                    <Calendercell clickindex={weeknumber} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={false} newDate={true} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n                );\n            }\n        }\n        return weekcontext\n    }\n\n    ShowModule(rowIndex) {\n        if (rowIndex === undefined) rowIndex = 0;\n        console.log(\"this.state.ClickDate\" + this.state.ClickDate);\n\n        const dataOfDay = this.getDataFromTimestamp(this.state.ClickDate);\n        const noticeOfDay = this.getNoticeFromTimestamp(this.state.ClickDate);\n\n        function checkmode(state) {\n            if (state === 'week') {\n                return 'calenderdisplayinformation'\n            }\n            if (state === rowIndex) {\n                return 'calenderdisplayinformation'\n            }\n            return 'calenderdisplayinformationnone'\n        }\n        console.log(moment(this.state.ClickDate).format(\"YYYYMMDDHHmmss\"))\n        return (\n            <div className={checkmode(this.state.displayinfo)}>\n                <div className='calenderModule'>\n                    <t1>詳細資訊</t1>\n                    <Icon type=\"close\" onClick={() => this.onCancelClick()} />\n                </div>\n                <div className='Modulelayout'>\n                    <CrossectionSchedule PickerDate={this.state.ClickDate} source={1} caseinfo={this.props.caseinfo} noticeData={noticeOfDay} scheduleData={dataOfDay} editstatus={true}></CrossectionSchedule>\n                </div>\n            </div>\n        );\n    }\n\n\n    setgroup() {\n        var calendermonthgroup = []\n        const monthfirstweekdate = new Date(yyyymmfirstweeksate(new Date())).getDay()\n        const firstMonthWeekDay = new Date(yyyymmfirstweeksate(new Date())).getTime() - (monthfirstweekdate * 24 * 60 * 60 * 1000)\n\n        for (let index = 0; index < 5; index++) {\n            calendermonthgroup.push(\n                <div className='calendercontextMonthRows'>\n                    {this.weekmonthmode(index, firstMonthWeekDay + (index * 7 * 24 * 60 * 60 * 1000))}\n                    {this.ShowModule(index)}\n                </div>\n            );\n\n        }\n        return calendermonthgroup\n    }\n    modechange(state) {\n        if (state === 'week') {\n            return (\n                <div className='calendercontext'>\n                    {this.weekmode()}\n                    {this.ShowModule()}\n                </div>\n            );\n        }\n        else {\n            // return (\n            //     <div>\n            //         {this.setgroup()}\n            //     </div>\n            // );\n            return this.setgroup()\n        }\n    }\n\n    SelectDatepickertype() {\n        const { MonthPicker } = DatePicker;\n        if (this.state.calendermode === 'month') {\n            return (\n                <MonthPicker placeholder=\"請選擇月份\" />\n            );\n        }\n        else {\n            return (\n                <DatePicker placeholder={['請選擇時間']} />\n            );\n        }\n    }\n    render() {\n        const { Option } = Select;\n        // const localday = new Date().getTime()\n        // function compareday(days) {\n        //     if (new Date(days).getTime() > new Date().getTime()) {\n        //         return true\n        //     }\n        //     return false\n        // }\n        return (\n            <div>\n                <t1 className='calendertitle'>行事曆</t1>\n                <div className='calendercontrol'>\n                    {this.SelectDatepickertype()}\n                    <Select defaultValue={this.state.calendermode} onChange={this.handleChange}>\n                        <Option value=\"week\">週</Option>\n                        <Option value=\"month\">月</Option>\n                    </Select>\n                </div>\n                {this.modechange(this.state.calendermode)}\n            </div>\n        );\n    }\n}\n\nexport default Calender\n","import React, { Component } from 'react';\nimport Notice from './Notice'\nimport Bedsidecard from './Bedsidecard'\nimport Scheduletodo from './Scheduletodo'\nimport Calender from './Calender'\nimport './Scheduleview.scss'\n\nclass Scheduleview extends Component {\n    render() {\n        function monthformat(month) {\n            return month + 1\n        }\n        function dateformat(time) {\n            return new Date(time).getFullYear() + \"-\" + monthformat(new Date(time).getMonth()) + \"-\" + new Date(time).getDate()\n        }\n        function exporttime(time) {\n            if (time === null) {\n                return \"--\"\n            }\n            else {\n                return dateformat(time)\n            }\n        }\n        const { caseinfo } = this.props\n        const time = new Date().getTime()\n\n        console.log(caseinfo)\n        return (\n            <div>\n                <div style={{ marginBottom: \"5px\" }}>\n                    <centerstyle>\n                        <div className='scheduletitle'>轉入時間:{dateformat(time)}/轉出時間\b:{exporttime(null)}</div>\n                    </centerstyle>\n                    <div className='boxshadow'></div>\n                </div>\n                <div className='schedulelayout'>\n                    <Bedsidecard caseinfo={caseinfo}></Bedsidecard>\n                    <Notice caseinfo={caseinfo}></Notice>\n                    <Calender caseinfo={caseinfo}></Calender>\n                    <Scheduletodo caseinfo={caseinfo}></Scheduletodo>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Scheduleview\n","import React, { Component } from 'react';\nimport Patientinfo from './Patientviewinfo'\nimport { Select, Modal } from 'antd';\nimport { bednumberformat, gender, birthdayweeks } from '../Function/Wardbedfunction'\nimport { Tabs } from 'antd';\nimport Crosssectionlayout from './CrossSectionView/Crosssectionlayout'\nimport Chroniclelayout from './ChronicleView/Chroniclelayout'\nimport Flowsheetlayout from './FlootSheetView/Flootsheetlayout'\nimport Examreport from './ExamReport/ExamReport'\nimport Orderview from './Orderview/Orderview'\nimport Noteview from './NoteView/Note'\nimport RTview from './RT/RTview'\nimport Nurtionview from './Nurtion/Nurtion'\nimport Infectionview from './Infection/Infection'\nimport Scheduleview from './Schedule/Scheduleview'\nimport * as ApiProvider from '../API/ApiProvider'\nimport X2JS from 'x2js';\nimport moment from 'moment';\nimport * as WardState from '../Function/Wardstate'\n\nclass Patientviewlayout extends Component {\n    state = {\n        TYPE: this.props.location.TYPE,\n        PBASINGNINFO: [],\n        PDOCNEW: [],\n        REMARK: [],\n        PLOC: [],\n        QMNC: [],\n        QENT: [],\n        QTWER: [],\n        tabstring: \"時間點檢視\",\n        visible: false,\n        PLOCSTART: null\n        // TYPE: this.props.location.TYPE,\n        // PBASINGNINFO: SimData.PBASIGNINFO,\n        // PDOCNEW: SimData.PDOCNEW,\n        // REMARK: SimData.REMARK,\n        // PLOC: SimData.PLOC,\n        // QMNC: SimData.QMNC,\n        // QTWER: SimData.QTWER,\n        // tabstring: \"時間點檢視\",\n        // visible: false,\n    }\n    componentDidMount() {\n        // const BEDNUMBER = Number(this.props.location.state.BEDNUMBER)\n        const CASEID = this.props.location.state.CASEID\n        const HISID = this.props.location.state.HISID\n        const PBASINFO = ApiProvider.getTablePBASINFO(HISID)\n            .then(data => {\n                return {\n                    PBASINGNINFO: data.data,\n                }\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n        const PDOCNEW = ApiProvider.getTablePDOCNEW(CASEID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getTablePDOCNEW NG \" + JSON.stringify(err));\n            });\n        const PLOC = ApiProvider.getTablePLOC(CASEID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n        // const pcaslist = ApiProvider.getStoredProcedurePCASELIST(HISID,\"DOC3924B\",\"E\")\n        Promise.all([PBASINFO, PDOCNEW, PLOC])\n            .then(result => {\n                console.log(\"API DATA = \" + result)\n                this.nis_status_shange(CASEID, result[0].PBASINGNINFO);\n                const PLOCLIST = result[2]\n                const PLOCTR = PLOCLIST[PLOCLIST.length - 1]\n                const PLOCSTART = PLOCLIST[0]\n                return {\n                    PBASINGNINFO: result[0].PBASINGNINFO,\n                    PDOCNEW: result[1],\n                    PLOC: PLOCTR,\n                    PLOCSTART: PLOCSTART\n                }\n            })\n            .then(result => {\n                this.setState({\n                    PBASINGNINFO: result.PBASINGNINFO,\n                    PDOCNEW: result.PDOCNEW,\n                    PLOC: result.PLOC,\n                    PLOCSTART: result.PLOCSTART\n                })\n            })\n    }\n\n    selectchange = (HBEDNUMBER) => {\n        const datalist = this.state.HBEDLIST\n        const filterdata = datalist.filter(function (info, index, array) {\n            return parseInt(info.HBEDNO) === HBEDNUMBER\n        })\n        if (filterdata.length === 0) {\n            return null\n        }\n        else {\n            const source = filterdata[0]\n            const HISID = source.PHISTNUM\n            const CASEID = source.PCASENO\n            const PBASINFO = ApiProvider.getTablePBASINFO(HISID)\n                .then(data => {\n                    return {\n                        PBASINGNINFO: data.data,\n                    }\n                })\n                .catch(err => {\n                    console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n                });\n            const PDOCNEW = ApiProvider.getTablePDOCNEW(CASEID)\n                .then(data => {\n                    return data.data\n                })\n                .catch(err => {\n                    console.log(\"Andy test getTablePDOCNEW NG \" + JSON.stringify(err));\n                });\n            const PLOC = ApiProvider.getTablePLOC(CASEID)\n                .then(data => {\n                    const matadata = data.data\n                    return matadata[matadata.length - 1]\n                })\n                .catch(err => {\n                    console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n                });\n            Promise.all([PBASINFO, PDOCNEW, PLOC])\n                .then(result => {\n                    this.nis_status_shange(CASEID, result[0].PBASINGNINFO);\n                    return {\n                        PBASINGNINFO: result[0].PBASINGNINFO,\n                        // BEDNUMBER: result[0].BEDNUMBER,\n                        PDOCNEW: result[1],\n                        PLOC: result[2]\n                    }\n                })\n                .then(result => {\n                    this.setState({\n                        PBASINGNINFO: result.PBASINGNINFO,\n                        PDOCNEW: result.PDOCNEW,\n                        PLOC: result.PLOC\n                    })\n                })\n                .catch(err => {\n                    console.log(\"error\")\n                })\n\n        }\n    }\n\n    nis_status_shange(CASEID, PBASINGNINFO) {\n        const xm2 = new X2JS()\n        ApiProvider.getQENT(CASEID)\n            .then(data => {\n                this.setState({\n                    QENT: WardState.XM2JSON(data.data)\n                })\n            })\n            .catch(err => { console.log(err) })\n        ApiProvider.getQMNC(CASEID)\n            .then(data => {\n                // const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                this.setState({\n                    QMNC: WardState.XM2JSON(data.data)\n                })\n                const starttime = moment(PBASINGNINFO.PBIRTHDT, 'YYYYMMDD').format(\"YYYYMMDDHHmm\")\n                const endtime = moment().format('YYYYMMDDHHmm')\n                ApiProvider.getQTWPER(CASEID, starttime, endtime)\n                    .then(data => {\n                        const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                        var weightlist = []\n                        for (let index = 0; index < parsedata.length; index++) {\n                            const element = parsedata[index];\n                            if (element.type === 'TW') {\n                                weightlist.push(element)\n                            }\n                        }\n                        this.setState({ QTWER: weightlist })\n                    })\n                    .catch(err => {\n                        console.log(\"Andy test getQTWPER NG \" + JSON.stringify(err));\n                    });\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n    }\n\n\n\n\n    onChange = (activkey) => {\n        this.setState({\n            tabstring: activkey\n        }\n        )\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    OptionSelectRender() {\n        function addzero(value) {\n            if (value < 10) {\n                return \"0\" + value\n            }\n            return value\n        }\n        function optionselect(LISTBED) {\n            const dataoption = LISTBED.map(function (info, index, array) {\n                return (\n                    <Option key={index} value={Number(info.HBEDNO)}>病床{addzero(parseInt(info.HBEDNO))}</Option>\n                );\n            })\n            return dataoption\n\n        }\n        const BedList = this.props.location.state.source\n        console.log(BedList)\n        const { Option } = Select;\n        const BEDNUMBER = Number(this.props.location.state.BEDNUMBER)\n        if (BedList !== null) {\n            return (\n                <Select defaultValue={Number(BEDNUMBER)} style={{ width: 120 }} onChange={this.selectchange}>\n                    {optionselect(BedList)}\n                </Select>\n            );\n        }\n        return null\n    }\n    fixpatientDate = (data) => {\n        const transdata = {\n            'cause': '住院原因',\n            'car_pho': '主要照顧者電話',\n            'care': '主要照顧者',\n            'con_1': '聯絡人1',\n            'con_p11': '聯絡人1電話',\n            'con_2': '聯絡人2',\n            'con_p21': '聯絡人2電話',\n            'dvs': '住院時生命徵象',\n            'habit': '飲食狀況',\n            'oxy': '住院時氧和評估',\n            'h_val': '住院時頭圍',\n            'b_val': '住院時胸圍',\n            'tall': '住院時身高',\n            'weight': '住院時體重'\n        }\n\n        const patientDate = []\n\n        for (let index in transdata) {\n            if (data[index] !== \"\") {\n                patientDate.push([transdata[index], data[index]])\n            }\n        }\n\n        return patientDate\n    }\n    render() {\n\n        const USERDATA = this.state.PBASINGNINFO\n        if (USERDATA.length === 0) {\n            return null\n        }\n        const BEDNUMBER = Number(this.props.location.state.BEDNUMBER)\n        const CASEID = this.props.location.state.CASEID\n        const HISID = this.props.location.state.HISID\n        const DOCLIST = this.state.PDOCNEW\n        const MainDoc = WardState.Doc(DOCLIST, \"B\")\n        const remark = this.state.REMARK.context\n        const ploc = this.state.PLOC\n        const transintime = ploc.PLOCTM.toString()\n        const transindt = ploc.PLOCDT.toString()\n        const transinid = \"NICU\" + transindt + transintime\n        const qmnc = this.state.QMNC\n        const bornWeeks = qmnc.weeks\n        const bornDays = qmnc.days\n        const wetghtList = this.state.QTWER\n        const { TabPane } = Tabs;\n        const selectrender = this.OptionSelectRender()\n        const caseinfo = {\n            \"HISID\": HISID,\n            \"CASEID\": CASEID,\n            \"WEEK_BORN\": bornWeeks,\n            \"DAY_BORN\": bornDays,\n            \"TRANSINID\": transinid,\n            \"TRANSINDT\": transindt,\n            \"WEIGHT\": wetghtList,\n            \"PBASINGNINFO\": USERDATA,\n            \"PLOCSTART\": this.state.PLOCSTART\n        }\n        const patientDetail = this.fixpatientDate(this.state.QENT)\n\n        return (\n            <div>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: 'center', height: \"40px\" }}>\n                    <t2>住院病人資訊 > 病床{bednumberformat(BEDNUMBER)} > {this.state.tabstring}</t2>\n                    {/* {selectrender} */}\n                </div>\n                <div className='infolayout'>\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(7,auto)\", gridColumnGap: \"10px\" }}>\n                            <div>\n                                <t2>病床{bednumberformat(Number(BEDNUMBER))}</t2>\n                                <t2 style={{ margin: \"0px 5px\" }}>{USERDATA.PNAMEC.toString().trim()}</t2>\n                                <t2>{birthdayweeks(moment(USERDATA.PBIRTHDT, \"YYYYMMDD\").format(\"YYYY/MM/DD\"))}週歲</t2>\n                            </div>\n                            <t2>性別:{gender(USERDATA.PSEX)}</t2>\n                            <t2>病歷號碼:{HISID}</t2>\n                            <t2>住院序號:{CASEID}</t2>\n                            <t2>主治醫師:{MainDoc.toString().trim()}醫師</t2>\n                            <t2>備註:{remark}</t2>\n                            <t2 style={{ color: \"blue\", textDecoration: \"underline\", cursor: \"pointer\" }} onClick={this.showModal}>病人基本資料</t2>\n                            <Modal\n                                title=\"病人基本資料\"\n                                visible={this.state.visible}\n                                onOk={this.handleOk}\n                                onCancel={this.handleCancel}\n                                width={800}\n                                footer={null}>\n                                <Patientinfo caseinfo={caseinfo} patientDetail={patientDetail}></Patientinfo>\n                            </Modal>\n                        </div>\n                    </div>\n                </div>\n                <Tabs defaultActiveKey={this.state.tabstring} tabPosition={'top'} onChange={this.onChange}>\n                    <TabPane tab=\"時間點檢視\" key=\"時間點檢視\">\n                        <Crosssectionlayout parentDateCallback={this.callback} caseinfo={caseinfo}></Crosssectionlayout>\n                    </TabPane>\n                    <TabPane tab=\"時間軸檢視\" key=\"時間軸檢視\">\n                        <Chroniclelayout caseinfo={caseinfo}></Chroniclelayout>\n                    </TabPane>\n                    <TabPane tab=\"輸出入細節\" key=\"輸出入細節\">\n                        <Flowsheetlayout caseinfo={caseinfo}></Flowsheetlayout>\n                    </TabPane>\n                    <TabPane tab=\"檢驗及報告\" key=\"檢驗及報告\">\n                        <Examreport caseinfo={caseinfo}>></Examreport>\n                    </TabPane>\n                    <TabPane tab=\"醫囑及藥囑\" key=\"醫囑及藥囑\">\n                        <Orderview caseinfo={caseinfo}>></Orderview>\n                    </TabPane>\n                    <TabPane tab=\"跨團隊紀錄\" key=\"跨團隊紀錄\">\n                        <Noteview caseinfo={caseinfo}>></Noteview>\n                    </TabPane>\n                    <TabPane tab=\"呼吸評估\" key=\"呼吸評估\">\n                        <RTview caseinfo={caseinfo}>></RTview>\n                    </TabPane>\n                    <TabPane tab=\"營養評估\" key=\"營養評估\">\n                        <Nurtionview caseinfo={caseinfo}>></Nurtionview>\n                    </TabPane>\n                    <TabPane tab=\"感染評估\" key=\"感染評估\">\n                        <Infectionview caseinfo={caseinfo}>></Infectionview>\n                    </TabPane>\n                    <TabPane tab=\"行事曆及註記\" key=\"行事曆及註記\">\n                        <Scheduleview caseinfo={caseinfo}>></Scheduleview>\n                    </TabPane>\n                </Tabs>\n            </div >\n        );\n    }\n}\n\nexport default Patientviewlayout;\n","import React, { Component } from 'react';\nimport { Table, Input, Select, Button, Modal, Icon } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider';\nconst { confirm } = Modal;\n\nclass Powersetting extends Component {\n    constructor(props) {\n        super();\n\n        this.addUserdata = this.addUserdata.bind(this)\n        this.adduserhandleChange = this.adduserhandleChange.bind(this)\n    }\n\n    state = {\n        MouseClick: 0,\n        name: '',\n        role: 0,\n        adduser: undefined,\n        userList: [],\n        power: ['僅可瀏覽病房總覽、歷史資料查詢', '可瀏覽和編輯病房總覽、歷史資料查詢', '可瀏覽和編輯權限設定、系統摘要'],\n        powerName: ['唯讀使用者', '一般使用者', '系統管理者'],\n        visible: false,\n        radioValue: 0,\n        pwdRadio: true,\n        inputUsername: '',\n        inputPassword: '',\n        inputName: '',\n        inputDoctorid: '',\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        this.nameChange = this.nameChange.bind(this)\n        this.queryUserdata = this.queryUserdata.bind(this)\n        this.inputuserName = this.inputuserName.bind(this)\n        this.inputPassword = this.inputPassword.bind(this)\n        this.inputName = this.inputName.bind(this)\n        this.inputDoctorid = this.inputDoctorid.bind(this)\n\n        ApiProvider.getAlluser()\n            .then(data => {\n                this.setState({ userList: data.data })\n            })\n            .catch(err => { })\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n\n    radioOnChange = e => {\n        this.setState({\n            radioValue: e.target.value,\n        }, () => {\n            if (this.state.radioValue === 1) {\n                this.setState({\n                    pwdRadio: true,\n                })\n                console.log(this.state.radioValue)\n            } else if (this.state.radioValue === 0) {\n                this.setState({\n                    pwdRadio: false,\n                })\n                console.log(this.state.radioValue)\n            }\n        })\n    };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    MouseClickTable(record) {\n        this.setState({\n            MouseClick: record\n        })\n    }\n\n    queryUserdata() {\n        const { userList, role } = this.state\n        let fixData = userList\n\n        if (role != 0) {\n            fixData = fixData.filter(data => data.role == (role - 1))\n        }\n\n        if (this.state.name !== '') {\n            console.log(this.state.name)\n            fixData = fixData.filter(data => data.name.match(this.state.name) != null)\n        }\n        return fixData\n    }\n\n    addUserdata() {//sso 只剩下4種角色 其他先傳空直\n        ApiProvider.register(this.state.inputName, '', this.state.adduser, this.state.inputUsername, 'none')\n            .then(data => {\n                ApiProvider.getAlluser()\n                    .then(data => {\n                        this.setState({ userList: data.data, inputUsername: '', inputPassword: '', inputName: '', inputDoctorid: '' })\n                    })\n                    .catch(err => { })\n            })\n            .catch(err => { })\n        this.setState({\n            visible: false,\n        });\n    }\n\n\n    showDeleteConfirm(name, account, role, roleString) {\n        const set_State = this.setState.bind(this)\n        confirm({\n            title: '請問您確定要刪除此帳號嗎?',\n            content: <div>姓名：{name}<br />角色：{roleString}<br />帳號：{account}</div>,\n            okText: 'Yes',\n            okType: 'danger',\n            cancelText: 'No',\n            onOk() {\n                ApiProvider.deleteUser(name, role, account).then(data => {\n                    ApiProvider.getAlluser()\n                        .then(data => {\n                            set_State({ userList: data.data })\n                        })\n                        .catch(err => { })\n                }).catch(err => { })\n            },\n            onCancel() {\n            },\n        });\n    }\n\n    EditStyle(key, name, account, role, roleString) {\n        if (key === this.state.MouseClick) {\n            return (\n                <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gridColumnGap: '10px' }}>\n                    <div>\n                        <Button onClick={this.showDeleteConfirm.bind(this, name, account, role, roleString)} type=\"dashed\">\n                            刪除\n                        </Button>\n                    </div>\n                </div>\n            );\n        }\n        else return null\n    }\n\n    handleChange = (value) => {\n        this.setState({ role: value })\n    }\n\n    adduserhandleChange(value) {\n        this.setState({ adduser: value })\n    }\n\n    nameChange(event) {\n        this.setState({ name: event.target.value })\n    }\n\n    inputuserName(event) {\n        this.setState({ inputUsername: event.target.value })\n    }\n\n    inputPassword(event) {\n        this.setState({ inputPassword: event.target.value })\n    }\n\n    inputName(event) {\n        this.setState({ inputName: event.target.value })\n    }\n\n    inputDoctorid(event) {\n        this.setState({ inputDoctorid: event.target.value })\n    }\n\n    Searchbar = () => {\n        const { Option } = Select;\n\n        return (\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <div style={{ fontSize: '16px' }}>\n                        角色:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Select defaultValue={this.state.role} style={{ width: 150 }} onChange={this.handleChange}>\n                            <Option value={0}>全部使用者</Option>\n                            <Option value={1}>唯讀使用者</Option>\n                            <Option value={2}>一般使用者</Option>\n                        </Select>\n                    </div>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        姓名:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"輸入個案姓名\" onChange={this.nameChange}></Input>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n    render() {\n\n        const columns = [\n            {\n                title: '編號',\n                dataIndex: 'id',\n                key: 'id',\n                width: \"10%\"\n            },\n            {\n                title: '姓名',\n                dataIndex: 'name',\n                key: 'name',\n                width: \"10%\"\n            },\n            {\n                title: '醫師帳號',\n                dataIndex: 'account',\n                key: 'account',\n                width: \"12%\"\n            },\n            {\n                title: '角色',\n                dataIndex: 'role',\n                key: 'role',\n                width: \"10%\"\n            },\n            {\n                title: '權限',\n                dataIndex: 'power',\n                key: 'power',\n                width: \"40%\"\n            },\n            {\n                dataIndex: 'clickstate',\n                key: 'clickstate',\n                width: \"7%\"\n            }\n        ];\n\n        const fixData = this.queryUserdata()\n\n        const userData = fixData.map((data, index) => {\n            let roleString = ''\n            let powerString = ''\n\n            roleString = this.state.powerName[data.role]\n            powerString = this.state.power[data.role]\n\n            return [\n                {\n                    key: ++index,\n                    id: index,\n                    name: data.name,\n                    role: roleString,\n                    power: powerString,\n                    account: data.username,\n                    doctorid: data.doctorid,\n                    clickstate: this.EditStyle(index, data.name, data.username, data.role, roleString)\n                }\n            ]\n        })\n\n        let myNewArray = [].concat.apply([], userData);\n        const { Option } = Select;\n\n        // if (this.state.userList.length === 0) {\n        //     return (\n        //         <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>\n        //             <Icon type=\"loading\" />\n        //         </div>\n        //     );\n        // }\n\n        return (\n            <div>\n                <div style={{ display: \"flex\", justifyContent: 'space-between', alignItems: 'center' }}>\n                    {this.Searchbar()}\n                    <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                        <Button style={{ width: \"100%\" }} onClick={this.showModal}>新增帳號</Button>\n                        <Modal\n                            title=\"新增帳號\"\n                            visible={this.state.visible}\n                            onOk={this.addUserdata}\n                            onCancel={this.handleCancel}\n                            width=\"570px\"\n                        >\n                            <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n\n                            </div>\n                            <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\", marginTop: \"10px\" }}>\n                                <div style={{ marginLeft: \"10px\" }}>\n                                    醫師帳號：\n                                <Input id=\"username\" value={this.state.inputUsername} onChange={this.inputuserName} placeholder=\"輸入帳號\" style={{ width: '120px' }} />\n                                </div>\n                                <div style={{ marginLeft: \"10px\" }}>\n                                    姓名：\n                                <Input id=\"name\" placeholder=\"輸入姓名\" value={this.state.inputName} onChange={this.inputName} style={{ width: '120px' }} />\n                                </div>\n                            </div>\n                            <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\", marginTop: \"10px\", marginLeft: \"13px\" }}>\n                                <div style={{ marginLeft: \"0px\" }}>\n                                    角色：{this.state.pwdRadio ?\n                                        <Select placeholder='選擇角色' style={{ width: 150 }} onChange={this.adduserhandleChange.bind(this)}>\n                                            <Option value={0}>唯讀使用者</Option>\n                                            <Option value={1}>一般使用者</Option>\n                                        </Select> :\n                                        <Select placeholder='選擇角色' style={{ width: 150 }} onChange={this.adduserhandleChange.bind(this)}>\n                                            <Option value={2}>系統設定管理員</Option>\n                                        </Select>}\n                                </div>\n                            </div>\n                            <div>\n                            </div>\n                        </Modal>\n                    </div>\n                </div>\n                <div style={{ marginTop: '20px' }}>\n                    <Table columns={columns} dataSource={myNewArray} onRow={record => {\n                        return {\n                            onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                            onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                        };\n                    }} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Powersetting;\n","import React, { Component } from 'react';\nimport { Table, Icon } from 'antd';\n\nclass Systemlogtable extends Component {\n    state = {\n        MouseClick: 0\n    }\n\n    MouseClickTable(record) {\n        this.setState({\n            MouseClick: record\n        })\n    }\n\n    render() {\n\n        const powerName = ['唯讀使用者', '一般使用者', '系統管理員']\n        const loginlog_table = this.props.loginlogList.map(\n            (info, index) => {\n                let managerName = ''\n                let dateTime = info.time.split(\"T\")[0] + ' ' + info.time.split(\"T\")[1].split(\".\")[0]\n\n                managerName = powerName[info.role]\n\n                return {\n                    key: index,\n                    time: dateTime,\n                    event: 'User ' + info.name + '(' + managerName + ') login system'\n                }\n            }\n        )\n\n        const apilog_table = this.props.apilogList.map((data, index) => {\n            if (data !== null) {\n                let date = data.split(\"- -\")[1].split(\"]\")[0].split(\"[\")[1].split(\" \")[0].split(\"/\")\n                const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n                for (let j = 0; j < months.length; j++) {\n                    if (date[1] === months[j]) {\n                        date[1] = months.indexOf(months[j]) + 1\n                    }\n                }\n                if (date[1] < 10) {\n                    date[1] = '0' + date[1]\n                }\n                let time = date[2].split(\":\")[0] + \"-\" + date[1] + \"-\" + date[0] + \" \" + date[2].split(\":\")[1] + \":\" + date[2].split(\":\")[2] + \":\" + date[2].split(\":\")[3]\n                let content = data.split(\"- -\")[1].split(\"]\")[1]\n\n                return {\n                    key: index,\n                    time: time,\n                    event: content\n                }\n            }\n            return null\n        })\n\n        const columns = [\n            {\n                title: '記錄時間',\n                dataIndex: 'time',\n                key: 'time',\n                width: \"1%\"\n            },\n            {\n                title: '事件',\n                dataIndex: 'event',\n                key: 'event',\n                width: \"10%\"\n            }\n        ]\n\n        // if (loginlog_table.length === 0 || apilog_table.length === 0) {\n        //     return (\n        //         <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>\n        //             <Icon type=\"loading\" />\n        //         </div>\n        //     );\n        // }\n\n        return (\n            <div style={{ marginTop: '20px' }}>\n                {\n                    this.props.optionValue ? <Table columns={columns} dataSource={apilog_table} onRow={record => {\n                        return {\n                            onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                            onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                        }\n                    }} pagination={{\n                        onChange: (page, pageSize) => {\n                            //console.log('current page: ', page)\n                            this.props.getPages(page)\n                        }\n                    }} /> :\n                        <Table columns={columns} dataSource={loginlog_table} onRow={record => {\n                            return {\n                                onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                                onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                            }\n                        }} pagination={{\n                            onChange: (page, pageSize) => {\n                                //console.log('current page: ', page)\n                                this.props.getPages(page)\n                            }\n                        }} />\n                }\n            </div>\n        )\n    }\n}\n\nexport default Systemlogtable\n","import React, { Component } from 'react';\nimport { Progress, Select, DatePicker } from 'antd';\nimport Systemlogtable from './Systemlogtable'\nimport * as ApiProvider from '../API/ApiProvider';\n\nclass Systemlog extends Component {\n\n    state = { startTime: \"\", endTime: \"\", totalSpace: 0, usingSpace: 0, percent: 0, option: 0, loginlogList: [], apilogList: [], page: 1 }\n\n    componentDidMount() {\n        ApiProvider.getSpace()\n            .then(data => {\n                const totalSpace = data.data[0].total / 1024 / 1024 / 1024\n                const usingSpace = (data.data[0].total - data.data[0].unuse) / 1024 / 1024 / 1024\n                const percent = (usingSpace / totalSpace) * 100\n                this.setState({ totalSpace: totalSpace.toFixed(2), usingSpace: usingSpace.toFixed(2), percent: percent.toFixed(2) })\n            })\n            .catch(err => { })\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    onChange(date, dateString) {\n        this.setState({ startTime: dateString[0], endTime: dateString[1] }, () => {\n            if (this.state.option === 0) {\n                this.queryLoginLogdata()\n            } else if (this.state.option === 1) {\n                this.queryApiLogdata()\n            }\n        });\n    }\n\n    queryLoginLogdata() {\n        if (this.state.startTime !== \"\" && this.state.endTime !== \"\") {\n            const st = new Date(this.state.startTime.split('-')[0], this.state.startTime.split('-')[1] - 1, this.state.startTime.split('-')[2]).toISOString().split('.')[0];\n            const et = new Date(this.state.endTime.split('-')[0], this.state.endTime.split('-')[1] - 1, this.state.endTime.split('-')[2]).toISOString().split('.')[0];\n\n            ApiProvider.getLoginlog(st, et)\n                .then(data => {\n                    this.setState({ loginlogList: data.data, apilogList: [] })\n                })\n                .catch(err => { })\n        }\n    }\n\n    queryApiLogdata() {\n        if (this.state.startTime !== \"\" && this.state.endTime !== \"\") {\n            ApiProvider.getApilog(this.state.startTime)\n                .then(data => {\n                    this.setState({ apilogList: data.data, loginlogList: [] })\n                })\n                .catch(err => { })\n        }\n    }\n\n    getPages(pages) {\n        this.setState({ page: pages }, () => {\n            //console.log('current page: ', this.state.page)\n        })\n    }\n\n    handleChange(value) {\n        this.setState({ option: value })\n    }\n    render() {\n        const { Option } = Select;\n        const { RangePicker } = DatePicker;\n        const onChange = this.onChange.bind(this);\n\n        return (\n            <div>\n                <div style={{ fontSize: '22px' }}>系統空間使用狀況</div>\n                <div style={{ marginTop: \"10px\" }}><Progress percent={this.state.percent} showInfo={false} /></div>\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginTop: \"10px\" }}>\n                    <div>\n                        <div>已使用空間/總空間</div>\n                        <div>{this.state.usingSpace}GB({this.state.percent}%)/{this.state.totalSpace}GB</div>\n                    </div>\n                    <div>\n                        <div>收案中的個案資料0.9GB(10.5%)</div>\n                        <div>0.9GB(10.5%)</div>\n                    </div>\n                </div>\n                <div style={{ marginTop: '20px' }}>\n                    <div style={{ fontSize: '22px' }}>Event Log</div>\n                    <div style={{ marginTop: \"10px\" }}>\n                        <Select placeholder='選擇log' style={{ width: 200 }} onChange={this.handleChange.bind(this)}>\n                            <Option value={0}>Login log</Option>\n                            <Option value={1}>API access log</Option>\n                        </Select>\n                        <RangePicker onChange={onChange} style={{ marginLeft: \"10px\", width: \"250px\" }} />\n                    </div>\n                    <div style={{ marginTop: '10px' }}>\n                        <Systemlogtable loginlogList={this.state.loginlogList} apilogList={this.state.apilogList} optionValue={this.state.option} getPages={this.getPages.bind(this)} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Systemlog\n","import React, { Component } from 'react';\nimport { Tabs } from 'antd';\nimport Powersetting from '../Systemgroup/powersetting'\nimport Systemlog from '../Systemgroup/Systemlog'\n// import Warningmanage from '../Systemgroup/Warningmanage'\n\n\nclass Systemcontrol extends Component {\n    state = {\n        powerLogin: 0\n    }\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    render() {\n\n        const { TabPane } = Tabs;\n        const bollogin = this.state.powerLogin == 2\n        return (\n            <div style={{ paddingLeft: \"24px\", paddingRight: \"24px\" }}>\n                <div style={{ fontSize: \"22px\", height: '50px', lineHeight: \"50px\" }}>系統設定</div>\n                <Tabs defaultActiveKey=\"5\" onChange={console.log(\"click\")} å>\n                    <TabPane tab=\"權限設定\" key=\"1\" >\n                        <Powersetting />\n                    </TabPane>\n                    {\n                        bollogin && <TabPane tab=\"系統摘要\" key=\"2\" >\n                            <Systemlog />\n                        </TabPane>\n                    }\n                    {/*<TabPane tab=\"裝置連線狀態管理\" key=\"3\">\n                    </TabPane> \n                    <TabPane tab=\"病人資料狀態管理\" key=\"3\">\n                    </TabPane>                  \n                    <TabPane tab=\"警示管理\" key=\"5\">\n                        <Warningmanage/>\n                    </TabPane>*/}\n                </Tabs>\n            </div>\n        );\n    }\n}\n\nexport default Systemcontrol;\n","import React, { Component } from 'react';\nimport './Layout.scss';\nimport Sidermenu from './Sidermenu';\nimport Bedview from '../Wardview/Bedinfo/Bedview'\nimport Historyview from '../Content/Historyview'\nimport Patientviewlayout from '../Patientview/Patientviewlayout'\nimport Systemcontrol from '../Content/Systemcontrol'\nimport { Route, Switch, Link } from 'react-router-dom';\nimport { yyyymmddformat, weekdateformat } from '../Function/Timeformat'\nimport { Icon } from 'antd'\n\nclass Layoutframe extends Component {\n    onClickLogout() {\n        sessionStorage.clear();\n    }\n    render() {\n        const UsrName = sessionStorage.getItem('user');\n        const url_path = this.props.location.pathname\n        return (\n            <div style={{ height: \"100vh\" }}>\n                <div className=\"header\">\n                    {/*eslint-disable-next-line*/}\n                    <div style={{ display: 'flex', alignItems: 'center', fontweight: \"default\", fontsize: \"20px\" }}>\n                        <t1>北榮NICU智慧醫療系統</t1>\n                        <Sidermenu path={url_path} routes={this.props.route}></Sidermenu>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"10px\" }}>\n                        <t3 style={{ color: 'white' }}>{UsrName}醫師 {yyyymmddformat(new Date())} {weekdateformat(new Date())}</t3>\n                        <Link to=\"/Login\" onClick={() => this.onClickLogout()}>\n                            <Icon style={{ color: \"white\" }} type=\"logout\" />\n                        </Link>\n                    </div>\n                </div>\n                <div className=\"content\">\n                    <Switch>\n                        <Route path={`${this.props.match.path}/ward`} component={Bedview} />\n                        <Route path={`${this.props.match.path}/history`} component={Historyview} />\n                        <Route path={`${this.props.match.path}/system`} component={Systemcontrol} />\n                        <Route path={`${this.props.match.path}/patient`} component={Patientviewlayout} />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Layoutframe;\n","import React, { Component, cloneElement } from 'react';\nimport { Button } from 'antd';\nimport { Redirect } from 'react-router-dom'\nimport { Input } from 'antd'\nimport * as ApiProvider from '../API/ApiProvider';\n\n\nclass Loginview extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: false,\n            permission: true,\n            statusstring: null\n        }\n        this.setRedirect = this.setRedirect.bind(this);   //把元件中的this繫結到handleClick方法中，這樣就會保持this一致          \n    };\n\n    componentDidMount() {\n        const account = document.querySelector('#account')\n        const password = document.querySelector('#password')\n        account.addEventListener('focus', () => {\n            account.addEventListener('keyup', e => {\n                if (e.keyCode === 13) {\n                    account.blur();\n                    password.focus();\n                }\n            })\n        })\n\n        password.addEventListener('focus', () => {\n            password.addEventListener('keyup', e => {\n                e.keyCode === 13 && this.setRedirect()\n            })\n        })\n    }\n\n    setRedirect = () => {\n        const account = document.getElementById(\"account\").value;\n        const password = document.getElementById(\"password\").value;\n        // const data = { username: account, password: password }\n        console.log(account, password)\n        ApiProvider.login(account, password)\n            .then(result => {\n                console.log(\"login OK \" + JSON.stringify(result));\n                const userData = result.data\n                const user = account\n                const role = userData[0].role\n                sessionStorage.setItem('user', user);\n                sessionStorage.setItem('role', role);\n                this.setState({\n                    redirect: true\n                })\n            })\n            .catch(err => {\n                console.log(\"login NG \" + JSON.stringify(err));\n                this.setState({\n                    permission: false,\n                    statusstring: \"帳號或密碼錯誤\"\n                })\n            });\n    }\n    renderRedirect = () => {\n        const login = sessionStorage.getItem('user');\n        const role = sessionStorage.getItem('role');\n        console.log(role)\n        if (login !== null) {\n            if (Number(role) === 2) {\n                return <Redirect from={\"/login\"} to={\"/nicu/system\"} />\n            }\n            return <Redirect from={\"/login\"} to={\"/nicu/ward/wardindex\"} />\n        }\n    }\n\n\n    render() {\n        return (\n            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"100vh\", width: \"100vw\", background: 'linear-gradient(to bottom, rgba(195, 239, 255, 1), rgba(46, 100, 164, 1))' }}>\n                {this.renderRedirect()}\n                <div style={{ display: 'flex', justifyContent: \"center\", alignItems: \"center\", flexWrap: \"wrap\" }}>\n                    <div style={{ color: \"white\", fontSize: \"26px\", textAlign: \"center\", width: \"100%\" }}>台北榮民總醫院 NICU智慧醫療系統</div>\n                    <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ width: \"350px\", height: \"250px\", borderRadius: \"4px\", backgroundColor: \"white\", textAlign: \"center\", padding: '25px', position: \"relative\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                                <div style={{ height: \"32px\", width: \"32px\", borderRadius: \"2px\", backgroundColor: \"rgba(46,100,164,1)\", color: \"white\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>L</div>\n                                <Input id=\"account\" style={{ marginLeft: \"20px\" }} placeholder=\"請輸入3270主機帳號\"></Input>\n                            </div>\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginTop: \"25px\" }}>\n                                <div style={{ height: \"32px\", width: \"32px\", borderRadius: \"2px\", backgroundColor: \"rgba(46,100,164,1)\", color: \"white\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>P</div>\n                                <Input type=\"password\" id=\"password\" style={{ marginLeft: \"20px\" }} placeholder=\"請輸入密碼\"></Input>\n                            </div>\n                            <Button style={{ width: \"280px\", backgroundColor: \"rgba(46, 100, 164, 1)\", color: \"white\", marginTop: \"70px\" }} onClick={this.setRedirect}>登入</Button>\n                            <div style={{ display: this.state.permission ? \"none\" : \"block\", color: \"red\", fontSize: \"1rem\" }}>{this.state.statusstring}</div>\n                        </div>\n                    </div>\n                    <div style={{ width: \"100%\", justifyContent: \"center\", alignItems: \"center\", display: \"flex\" }}>200206.005-T</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Loginview\n","import React from 'react';\nimport Homepage from './Homepage'\nimport './App.scss';\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\nimport Layoutframe from './Layout/Layout'\nimport Loginview from './Layout/Loginview'\nimport 'antd/dist/antd.css';\n\nfunction App() {\n  document.documentElement.style.fontSize = '14px'\n  return (\n    <BrowserRouter>\n      <Route exact path=\"/\" component={Homepage} />\n      <Redirect from={'/'} to={\"/login\"} />\n      <Route path=\"/nicu\" component={Layoutframe} />\n      <Route path=\"/login\" component={Loginview} />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/details.bc0482ca.svg\";"],"sourceRoot":""}