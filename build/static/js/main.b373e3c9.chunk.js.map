{"version":3,"sources":["Image/svg/file1.svg","Image/svg/file2.svg","Image/svg/filter.svg","Image/svg/edit2.svg","Image/svg/RT.svg","Image/svg/Wardview.svg","Image/svg/Historyview.svg","Image/svg/Control.svg","Image/svg/delete.svg","Image/svg/dragdown.svg","Image/svg/calender.svg","Image/svg/calenderwhite.svg","Image/svg/ping.svg","Image/svg/pingwhite.svg","Image/svg/Edit.svg","Image/svg/details.svg","Image/svg/Chooseedit.svg","Homepage.js","Layout/Sidermenu.js","Function/Wardstate.js","API/ApiProvider.js","API/ApiGithub.js","Wardview/Wardcardstatus.js","Wardview/WardCardvalue-k.js","Function/Wardbedfunction.js","Wardview/Wardcard/Wardcarddetail.js","Wardview/Wardcard/UnpreviewWardCardDetail.js","Commonfunction.js","Wardview/Wardnote.js","Wardview/Bedinfo.js","Function/Timeformat.js","Wardview/WardBedinformation.js","Module/Schedule_event.js","Wardview/Wardschedule.js","Wardview/Wardinfoindex.js","jsonResponse.js","Data/Wardviewdata.js","Patientview/CrossSectionView/Labview.js","Wardview/Wardlifechart.js","Wardview/Wardmonthafter.js","Wardview/Wardgrewchart.js","Patientview/Schedule/Notice.js","Patientview/CrossSectionView/Labviewitem.js","Function/FiliterReg.js","Wardview/Wardcardvitalsign.js","Wardview/Wardchart.js","Wardview/Wardunfousercheckbox.js","Patientview/Patientviewinfo.js","Wardview/Wardinfouser-k.js","Wardview/Bedinfo/Bedview.js","Content/Historyview.js","Patientview/CrossSectionView/Crossectionvitalsignchart.js","Patientview/CrossSectionView/Warningsettinglist.js","Patientview/CrossSectionView/Addnewwaring.js","Patientview/CrossSectionView/Vitalsign.js","Patientview/Controlbar.js","Module/iopage.js","Patientview/CrossSectionView/Crossection_io.js","Patientview/CrossSectionView/NonlabviewtableCell.js","Patientview/ExamReportModal.js","Patientview/CrossSectionView/Nonlabviewtable.js","Patientview/CrossSectionView/Nonlabview.js","Patientview/CrossSectionView/RTtable.js","Patientview/CrossSectionView/GAS.js","Patientview/CrossSectionView/RemarkModal.js","Patientview/CrossSectionView/RTbreathtablecell.js","Patientview/CrossSectionView/RTbreathetable.js","Patientview/CrossSectionView/RTbreathe.js","Patientview/Prescriptionorder/Prescriptionordertablecell.js","Patientview/Prescriptionorder/Prescriptionordertable.js","Patientview/Prescriptionorder/Prescriptionorder.js","Patientview/Treatmentorder/Treatmentordertablecell.js","Patientview/Treatmentorder/Treatmentordertable.js","Patientview/Treatmentorder/Treatmentorder.js","Module/Notecell.js","Module/Note.js","Patientview/CrossSectionView/Crosssectionschedule.js","Patientview/CrossSectionView/Crosssection_todo.js","Module/Todo.js","Patientview/CrossSectionView/Crosssectionlayout.js","Patientview/ChronicleView/Chronic_io.js","Patientview/ChronicleView/ChronicTableCellTooltipCell.js","Patientview/ChronicleView/ChronicTableCell.js","Patientview/ChronicleView/ChronicTable.js","Patientview/ChronicleView/ChronicLab.js","Patientview/ChronicleView/ChronicRTTableCell.js","Patientview/ChronicleView/ChronicRTTable.js","Patientview/ChronicleView/ChronicRT.js","Patientview/ChronicleView/ChronicOrderTable.js","Patientview/ChronicleView/ChronicOrder.js","Patientview/ChronicleView/ChronicWeightTable.js","Patientview/ChronicleView/ChronicWeight.js","Module/Vitalxaxis.js","Module/Vitalxaxisbot.js","Patientview/ChronicleView/Chronic_vital.js","Patientview/ChronicleView/Chronic_vital_chart.js","Patientview/ChronicleView/Chroniclelayout.js","Patientview/FlootSheetView/Flootsheetio.js","Patientview/FlootSheetView/Flootsheetlayout.js","Patientview/ExamReport/Examchart.js","Patientview/ExamReport/ExamLabview.js","Data/RegularData.js","Patientview/ExamReport/ExamNonlabtablecell.js","Patientview/ExamReport/Examaxis.js","Patientview/ExamReport/NonLabview.js","Patientview/ExamReport/ExamReport.js","Patientview/Orderview/Orderview.js","Patientview/NoteView/Notecell.js","Patientview/NoteView/Note.js","Patientview/NoteView/Notelist.js","Patientview/RT/RTview.js","Patientview/Nurtion/Nurtionfeedingcell.js","Patientview/Nurtion/Nurtionfeeding.js","Patientview/Nurtion/Nurtion_TPN_cell.js","Patientview/Nurtion/Nurtion_TPN.js","Patientview/Nurtion/Watervaluechart.js","Patientview/Nurtion/Nurtion.js","Patientview/Infection/Infectionlabtable.js","Patientview/Infection/Infectionvitalsign.js","Patientview/Infection/Infectionlab.js","Patientview/Infection/Infection.js","Patientview/Schedule/Bedsidecard.js","Patientview/Schedule/Scheduletodo.js","Patientview/Schedule/Calendercell.js","Patientview/Schedule/Calender.js","Patientview/Schedule/Scheduleview.js","Patientview/Patientviewlayout.js","Systemgroup/powersetting.js","Systemgroup/Systemlogtable.js","Systemgroup/Systemlog.js","Content/Systemcontrol.js","Systemgroup/Warningmanage.js","Layout/Layout.js","Layout/Loginview.js","App.js","serviceWorker.js","index.js","Image/svg/Search.svg"],"names":["module","exports","Homepage","Component","Sidermenu","state","powerLogin","powerLogins","Number","sessionStorage","getItem","this","setState","key","match","value","path","props","Selectkeynumber","rule","console","log","style","display","alignItems","marginLeft","height","gridTemplateColumns","gridColumnGap","to","class","select_hover","src","wardviewlogo","alt","historylogo","controllogo","statecolor","Labwarningvalue","title","simulationCentermonitordata","time","timeInterval","dataarray","k","dataset","i","newNum","Math","floor","random","push","simulationnisdata","BornWeight","weightlist","birthday","undefined","Array","isArray","findata","filter","index","rec_dat","type","length","parseInt","value2","NewestWeight","XM2JSON","data","xm2","X2JS","xml2js","status","outmsg","rescont","resconts","Doc","DocList","Main","element","PDTYPE","PDDOCNMC","toString","trim","selectweight","List","date","array","moment","valueOf","axios","defaults","baseURL","config","headers","getAlluser","get","getQDC","caseno","st","et","getQENT","getQSPE","getOnePatientNotice","transinno","HISID","getAllPatient","getOnePatientRemark","transid","getOneRemark","remarkid","getOnePatientSchedule","starttime","endtime","getStoredProcedureORDLIST","hisid","dpt","docid","getStoredProcedureRESDBGAS","getStoredProcedureRESDGLU1","getStoredProcedureRESDISP","month","seq","getStoredProcedureRESLAB01","getStoredProcedureRESLAB02","getStoredProcedureRESLAB0C","getStoredProcedureRESSECT","getStoredProcedureTRTMNTQ1","getStoredProcedureUDORDER0","getTablePBASINFO","PHISTNUM","getTablePDOCNEW","PCASENO","getTablePLOC","createTodo","caseid","context","body","post","getOneTodo","getPatientwardvalueMedian","startTime","endTime","getPatientwardvalueBoxPlot","interval","getVitalSignData","getHisidwardvalue","axiosGithub","create","timeout","getGitHubJson","string","Wardcarstatus","TRTMNTQ1","UDORDER0","FlagReg","TRQ1","ApiProvider","then","info","arr","ORSTATUS","catch","err","UDORDER","dataList","UDSTATUS","Reg","ApiGithub","Promise","all","result","parseFlagData","Flag","item","StatusUDORDER","some","UDDRGNAM","toLowerCase","UDGNAME","ParseValueUD","indexOf","StatusTRTMNTQ1","ORPROCED","ParseValueTRT","statusspan","source","style_change","AntiStatus","TPNStatus","NP0Status","FoleyStatus","DrainStatus","statuslist","InvasiveRespiratorStatus","NonInvasiveRespiratorStatus","RespiratorStatusParse","map","className","wardstatestringformat","WardCard","useState","CenterMonitorValue","SetCenterMonitorValue","SetHID","Timer","SetTimer","InitCenterData","useEffect","TimerID","setInterval","clearInterval","HID","phistnum","JSON","stringify","color","hr","spo2","abpd","abps","abpm","gridColumnsGap","rr","bt","bednumberformat","number","gender","pregancyweeksanddays","bornweeks","borndays","birthdays","localtoborndays","Date","getTime","Wardcarddetail","hoverstate","clickstate","mouse_hover","edit_hover","visible","pbasignfo","birthdayweight","weight","bornweek","bornday","nowweight","report","nonreport","remark","TRANSINID","TRANSINDT","TRANSINTM","handleCancel","e","showModal","API_DATA","beforeOneDay","mapList","ORRCPDT","ORRCPTM","format","datalist","list","datasize","typefrom","from","Birthday","PBIRTHDT","QTWER","Wardstate","QTWPER","QMNC","BornWeeks","weeks","BornDays","days","width","onCancel","footer","justifyContent","border","onClick","handleOk","gridTemplateRows","gridRowGap","HBEDNO","marginRight","placeholder","id","defaultValue","valueFormat","mode","previewmode","hbedlist","PBIRHDT","Weight","PNAMEC","PSEX","fileLogo","file2Logo","borderBottomWidth","borderBottomColor","borderBottomStyle","centerdata","centerMonitorData","padding","position","overflow","fontSize","textOverflow","whiteSpace","pathname","Modelrender","Unpreviewwardcarddetail","databool","statedata","document","getElementById","bednumber","marginBottom","backgroundColor","format_bednumber","editlogo","onOk","WardcardNote","_isMounted","editstate","AnnoceRawData","AnnoceDisplayData","inputContent","onInputChange","bind","queryAllAnnounce","parse","announceArray","event","target","announce","doc","newAnnounce","editor","findIndex","splice","announcelist","editstatus","localTime","utc","toDate","deleteimg","ondeleteannounce","placement","detail","annData","marginTop","onMouseUp","editlist","borderCollapse","onChange","AddNewannouce","margin","canceledit","okeditlist","Bedinformation","tableselect","sendReturnSelect","parentCallback","select","weekdatformat","weekday","selectkey","idkey","localtime","day","Month_format","getMonth","getDate","getDay","Unselect_tablestyle","borderLeftWidth","Selectswitch","cursor","textAlign","hbedcount","transoutcount","transincount","rtcount","nonrtcount","tpncount","yyyymmddformat","timestamp","getFullYear","formatmonth","Monthformat","yyyymmfirstweeksate","mmddformat","compareday","formatxArrayhalf","xAxisarray","formatendtime","Wardbedinformation","subselectdate","selectid","PickerDate","bedinfo","onChangeDate","datestring","apiData","callbackFunction","idnumber","trans","translist","pnamec","selectDateitem","filterdate","inType","transoutIncountperson","outType","transoutOutcountperson","transIn","transOut","transferListlayout","infolist","infoList","dateTime","Bedinfo","reverse","fontStyle","paddingLeft","showToday","disabledDate","current","startOf","allowClear","bedinfotitle","weekbedinfo","infoitem","Schedule_event_list","detailstate","items_interval","EditMode","selSchedule","Scheduledata","ID","caseinfo","querySchedule","queryALLSchedule","propsDate","stateDate","timeNowStr","toISOString","writter","name","PBASINGNINFO","PLOCSTART","getHours","getMinutes","scheduleData","checkbackground","ScheduleList","text","borderRadius","detaillogo","changestate","onChangeEditMode","Option","Select","EditButton","EditControl","listevent","onClickCancel","onClickEnter","Wardschedule","Wardinfoindex","fontWeight","growdata","Male_befor","y","min","max","FeMale_before","Male_after","FeMale_after","todo_data","Time","Content","Editor","simdata","Inputarray","MG_VALUE","PROC_VALUE","WardlifeChart","drawChart","svg_key","weightList","grewinfo","window","screen","availWidth","WEEK_BORN","DAY_BORN","BIRTHDAY","pregencyTimestamp","d3","domain","range","x","yAxis","ticks","tickSize","tickPadding","xAxis","tickFormat","d","svg","attr","append","call","datasource","rec_tim","id_key","Wardmonthafter","Month","Wardgrewchart","test_items_interval","Data","WeightList","testiteminterval","paddingRight","borderWidth","borderStyle","borderColor","borderTopLeftRadius","borderTopRightRadius","SwitchTestItemInterval","Onchangetimeinterval","switch_monthy","Notice","noticeData","TRID","preTRID","queryPatientImportant","transinid","updateTime","disableEdit","tooltiptext","t","displayTime","remarkcell","TextArea","Input","renderEditButton","autoSize","Labviewitem","Source","TimeR","TimeRender","RowsHeight","ListForTime","DataList","ORRESDT","ListForTimeAndTarget","forEach","parseTimestamp","split","QSPERegList","qspe","SettingValue","valueList","qspearray","SelectElement","special","DataArray","DataJson","Labviewlayout","parser","dummy_mg","dummy_pct","latestvalue","selected_parser","find","apply_condition","arrayLength","ORMM","CASEID","ORDSEQNO","RESDISP","selected_mapping","mappings","mapping","re","RegExp","regex_str","regex_flags","CONTENT","currentTimeStr","currentItemTimestamp","matchValue","updateLabviewIfNeed","currentIdx","background","ListEndData","RESDGLU1","RESLAB02","RESLAB01","RESDBGAS","RESSECT","RESDGLU1LIST","FiliterReg","RESLAB02LIST","RESLAB01LIST","RESDBGASLIST","RESSECT_MG_LIST","findLastestTargetValue","RESSECT_PROC_LIST","GLUFAST","WBC","RSV01","SEG","RSV14","LYMP","RSV15","HGB","RSV03","PLATELET","RSV09","NA","RSV13","K","CA","P","RSV17","ALB","RSV02","CRP","RSV32","PH","SS07","PCO2","SS06","BE","SS01","PO2","SS08","BUN","RSV05","CR","RSV06","ALT","RSV11","AST","RSV12","TBIL","RSV08","DBIL","RSV25","ALKP","TOTALCA","IRON","RSV26","TIBC","RSV27","FERRITIN","areainterval","nullvalue","TitleR","TitleRender","ORBGNDT","WardcardvitalsignChart","sourcedata","preHID","getCenterMonitor","selectType","axisTop","axisBot","circlrcolor","MAX","MIN","Upper","Lower","transformmargin","cal_svg_transform","time_now","time_array","time_axis_array","x_axis_time","time_array_reverse","time_axis_array_reverse","formatHour","tickValues","n","xAxisBottom","remove","cal_svg_hight","formatBoxWidth","viewwidth","lower","upper","LimitBoxTimer","interFormat","TimeArray","boxTime","formatBox","boxwidth","drawshadow","BoxPlotData","dataAbps","dataAbpd","q1","Q1","q2","Q2","q3","Q3","q4","Q4","Xtime","selectAll","enter","SBP","DBP","WardChart","CMvalue","vitalvalue","limitValue","colorshadow","nbpd","nbps","nbpm","data2","data_2_circlrcolor","Wardinfousercheckbox","checkboxselect","selectstate","updateOnePatientTodo","selectchange","checked","textDecoration","Patientinfo","patientData","patientDetail","Wardinfouser","Visible","setVisible","Report","SetReport","Nonreport","SetNonreport","SetRESLAB01","SetRESLAB02","SetRESDBGAS","RESLAB0C","SetRESLAB0C","scheduleList","todoList","QENT","SetQENT","TransInDt","location","parsedata","ORDERLISTMAP","ListWeight","DOCLIST","PDOCNEW","MainDoc","LiveDoc","MainNur","ICUMainDoc","transdata","patientDate","fixpatientDate","maxHeight","minHeight","displayTimeStr","Bedview","simplemode","SelectHISID","HBEDApiGet","simple_style","gridGap","Unsimple_style","wardcarddetaillist","selectID","cardID","component","WardinfouserK","filterdata","switch_titile_string","onWardcardDisplay","checkedChildren","unCheckedChildren","defaultChecked","Historyview","MouseClick","allPatientDisplayData","allPatientUnset","allPatientSet","selectedRowsArray","hospitalindex","selectedFile","fileList","uploading","doctor","transOuttime","handleUpload","fileData","formData","FormData","file","res","filename","setedUser","transouttime","unsetUser","onChangeName","onChangeHisid","onClickSearch","record","resultD","url","URL","createObjectURL","Blob","link","createElement","href","setAttribute","appendChild","click","hospitalnumber","delete","dateString","Group","RangePicker","DatePicker","locale","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","disabled","searchNO","searchTime","fn","transintime","searchName","search","genderswitch","psex","birweek","transage","transicutime","maindoc","EditStyle","onRemove","newFileList","slice","beforeUpload","showUploadList","handleDisplaySwitchChange","lineHeight","Searchbar","exportClick","deleteHistoryUser","columns","dataIndex","dataSource","onRow","onMouseEnter","MouseClickTable","onMouseLeave","Crosssectionvitalsignchart","change","prepickerdate","presource","preinterval","CID","svg_id","PHID","PCID","optionvalue","pickerdate","endTimeStamp","start","end","formatTimer","QDVS","QOXY","HRNISLIST","RRNISLIST","SBPNISLIST","DBPNISLIST","BTNISLIST","Spo2NISLIST","pluse","breath","systolic","diastolic","BT","temperature","concen","FormatNISData","centermonitorApiDataGet","prehid","xAxisvalue","formatxArray","xAxisbotvalue","formatbotaxis","xAxisbot","drawData","formatShift","Warningsetting","dragstate","onClickdrag","transform","dragdown","Addwarningsetting","onSelectDate","dates","dataStrings","dateCallback","onSelectHour","hourCallback","children","Vitalsign","vital_days","visibleConflict","chackstate_one","chackstate_three","addNewWarningDateStr","addNewWarningHourStr","handleSelectDate","handleSelectHour","hourString","handleOkConflict","handleCancelConflict","sourcehandleChange","intervalhandleChange","EndTime","Phistnum","gridarray","checknumber","onClickCheckgrid_three","onClickCheckgrid_one","sourcefrom","changevitaldays","vitaldays","bool","switchdata","centervalueNull","TabPane","Tabs","waringsettingarray","centervalue","FilterList","filterData","Mid","centervaluetoNull","vitaldaysBool","pickerTimer","defaultActiveKey","tab","flexDirection","top","left","onVitalCheck","bottom","Controlbar","display_Mode","item_array","scrollstate","sendData","itwm_array","sendDateData","parentDateCallback","scrollToAnchor","anchorName","anchorElement","scrollIntoView","checkedValues","onDateChange","trainDay","bron","bronDate","bTime","nTime","aTime","btn_style","unclick_style","display_style","displye_mode","right","boxShadow","zIndex","non_display_mode","check_area","check_text","btnlist","WEIGHT","WardState","DayWeight","btn","scrollpoint","add","endOf","shape","icon","newtime","oldtime","timestampdiff","daysdiff","open_display","displaylogo","IOpage","QDC","PreStatus","PreIntervalStatus","PreCID","PrePickerDate","RegQDC","CarloriesCal","intervalStatus","timer","interstatus","Result","ret","Status","IntervalStatus","getAPI","prestatus","preinterstatus","precid","mapcell","listTimerFormat","inter","TimerList","hourInterval","filterList","filterListALL","gridNumber","cellsum","sum","cellRenderSum","CellRender","parseFloat","toFixed","timerStruct","cellRender","stylechange","intervalstatus","QDCLIST","timearray","pickerTimeArray","formatData","caloriesCalonnam","nam","namstring","valueNumber","FormatFeedingList","FormatIVList","FormatUrineList","FormatOtherInList","FormatOtherOutList","lost","elementItem","Feeding","inp_val2","calories","IV","inp_val1","Urine","out_val2","Other","input_1","output_1","out_val1","OtherIn","OtherOut","formatQDCtoIO","Interval","timerFormat","feed","sumin","arr1","arr2","arr3","sumlist","sumIn","UrinForUnit","datamap","urineforWeightAndHourCrossection","sumout","sumOut","sumInTotal","Outout","element1","element2","sumInAndOut","TitleCellIn","TitleCellOut","Crossection_io","titlelab","NonlabviewtableCell","summary_str","select_parser","input","parsers","item_name","sample","lab","start_time","datetime","end_time","content","summerize","kv_pairs","summary","match_replacer","replacer","replace","caseId","hisId","datatime","result_kv_pairs","come","statusRender","statusFormat","canShowReport","ExamReportModal","showDetail","Nonlabviewtable","modalVisible","modalReport","ORDLIST","nonLabApiGet","storeProcedureTime","timestampInterval","selectMonthInterval","FormatList","StartTime","ORDLIST_Format","elemetnStatus","elementORBGNTime","ORBGNTM","ORDLISTFormat","nonlabcell","ORSPCN1","statis","ORHISTNO","ORDSEQCN","Nonlabviewlayout","RTtable","PreHID","PreTransInDate","GasListToCell","GasData","timeStamp","ORRESTM","PHValue","PCO2Value","PO2Value","HCO3Value","SS04","BEValue","O2SatValue","SS05","FiO2Value","SS03","GasCell","TRDT","getGasAPI","PreTRDT","GasTitleCell","GAS","PickerDateRange","RemarkModal","remarkValue","onOkClick","transinId","remarkId","createTime","rows","RTbreathetablecell","onCell","onEdit","newRemarkValue","setRemark","seachRemark","setting","Mode","Setting","onMouseMove","Mouse_move","Mouse_leave","Edit_state","chooseedit","RTbreathetable","createRTbreathetable","RTbreathe","preCID","QSPE","FilterReg","getQSPEApi","resultData","Prescriptionordertablecell","onMove","UDORDSEQ","checkStatus","SelectMode","ET","UDENDDT","Name","PName","UDRPNAME","Unit","UDDOSAGE","UDDUNIT","UDFREQN","UDROUTE","ST","UDBGNDT","on_Mouse","on_leave","Prescriptionordertable","titlecell","Prescriptionordertabletable","Prescriptionorderlayout","classParser","InputMode","onChangeClass","handleChange","onChangeinputKey","parseClass","inputs","allResult","activeList","clusteredData","filteredData","SortDataList","createST","createET","nowDate","DataFormat","searchbar","ControlBarRender","Treatmentordertablecell","QD","ORFREQN","ORENDDT","Treatmentordertable","TRTMNT01","Treatmentordertablecelllist","Treatmentorderlayout","DateRangeMode","Search_bar","Notecell","updatetime","updatedoctor","updatetime_format","wordBreak","Note","noteData","queryNotice","propDate","TRANSID","notelist","infoObj","updatedictor","Crossection_schedule","Crosssection_todo","queryTodo","renderTodoItem","Crosssectionlayout","Cross_item","SelectInterval","callbackDateFunction","PickerTimeStamp","NIS_API_IO","Datetime","TransinDate","MonthInterval","TimeStampPickerDate","display_item","Inoutonchronic","Chronictablecelltooltip","preStartTimeStamp","loading","resultStr","parserName","inputBeginTime","parser_name","startTimeStamp","apiGet","tooltipelement","summaryParse","allContent","infoTime","Cell","antIcon","spin","indicator","Chronictablecell","titleCell","objectElementCell","CellText","autoAdjustOverflow","overlayStyle","maxWidth","Tableonchronic","LabParse","SummaryParse","monthly","ApiPronider","chronic_state","fotmatTimerMonthly","prePickerDate","preInterval","ApiGet","TimeInterval","grid","ressect","parsrList","arrayBiochemical","arrayBlood","arrayCultivate","arrayGAS","arrayGlu","arrayRadiation","arrayOther","element_ORPROCED","BioFind","Biochemical","BloFind","Blood","CulFind","Cultivate","GasFind","GluFind","RadFind","Radiation","arrayList","LabFormat","statestatus","title_list","cell_list","entTimeStamp","slectInt","TimerForList","filterTimerForDataList","fotmatTimerForTimer","DataForTimer","toolTipID","Chroniclab","select_interval","Chronicrttablecell","cellelement","RTListRender","ToolTipRender","rtlogo","Chronicrttable","prePickerdate","timerList","listFilter","formatDataList","table_content","Chronicrt","Chronicordertable","whiteBlackListParser","excludeBlackListResult","UDGNAME_condition","UDRPNAME_condition","UDGNAME_re","UDGNAME_match","UDRPNAME_re","UDRPNAME_match","getUDORDER","changegridnumber","Tablecell","formatWidth","elementStart","elementEnd","widthRate","clientWidth","formatStart","formatEnd","formatStartPosition","arraylist","shift","formatUDORDER0","ListData","formatString","changegridstyle","celltable","Orderonchronic","Chronicweighttable","QTPWERList","TimerFormat","WeightListFormat","elementTime","elementValue","Value","sortWeight","sort","a","b","elementWidthList","time1","elementWidth","time2","FormatEndTimeStamp","datafilter","timeString","datafilterTime","diff","widthArray","timeString2","weightRectRender","render","paddingTop","Weightonchronic","Vitalxaxis","monthformat","select_date","select_time_format","nowtime","Start_time","intervaldays","xaxis","formatday","Vitalxaxisbot","select_date_zero","Vitalonchronic","check_state_one","check_state_three","check_state_oneweek","check_state_twoweek","statussource","value_interval","defaultdate","Interval_switch","onClickCheckgrid_oneweek","onClickCheckgrid_twoweek","formatPickerTimer","Interval_grid","Interval_grid_box","Chroniclelayout","statuschange","onSelectchange","button","filterlogo","Flootsheetio","itemNumber","dataJson","Title","timeObjectString","cell","groupfirstarray","compare","arrList","comparevalue","filterarray","FirstArray","SecondArray","ThirdArray","FourthArray","line","pos","formatQDC","FlootSheetFirstAreaData","FlootSheetSecondAreaData","FlootSheetThirdAreaData","FlootSheetFourthAreaData","stringElement","groupelement","Firstdata","timeForList","elementList","valueSum","cellMap","Secondedata","Thirddata","formatRV","RV","RVList","FourdataCellRender","datajson","FourthDataCell","Flowsheetlayout","ApiData","DateTime","splist","specialListRender","Examchart","lineChart","sT","endT","fixLineChart","cost","div","curve","lines","on","transition","duration","html","pageX","pageY","Labview","Selectus","SelectStatus","lineCharttitle","IRParse","titleSearch","parentTitleCallback","fixLineChartData","getAttribute","showDate","temp","showModel","charttableview","dataIR","Object","keys","itemValue","flex","LabDataList","SelectList","SelectTitlefilter","selectdata","SelectTitleRender","ExamLab","justifycontent","Examnonlabviewtable","StateMode","ordlist","pickerdaterange","changeState","status_report","ORDCLNM","listforstatus","selectedClass","ORDATE","ORTIME","Nonlabview","ClassMode","Inputvaluesearch","onChangeState","Examreport","selectTitle","subtract","callbackTitleFunction","PickerDateRangeChange","vallofnull","DateRange","selectData","st_timestamp","et_timestamp","CellData","Band","Seq","Lym","Hb","Hct","RSV04","Plt","Na","Cl","CaTotal","Cr","Alt","TBil","DBil","rGGT","RSV19","Alkp","Alb","Iron","RSV28","FeSat","LDH","RSV10","RSV9","ck","RSV18","ckMB","Troponinl","RSV30","PT","APTT","INR","pCO2","pO2","HCO3","O2Sat","FiO2","SS11","SS12","SS13","SS14","CaFree","SS15","Bun","SS16","SS17","GluBeside","GluLab","RSV16","TCB","MicroBil","elementOne","elementTwo","Seg","APIUpdate","SelectDataList","datePick","momentDate","selectvalue","Orderview","apidata","udata","tdata","overflowY","displayMode","display_date","datanumber","infoDate","rowdata","date_style","date_false","borderTopWidth","date_true","filterData_Date","NoteTime","roedata_layout","format_display_date","addZero","hhmmssformat","display_rowdate","dataRange","Noteview","display_data","contentdisplay","ADMDISP","ADMLIST","DISLIST","DISDISP","DTAROTQ4","DTASOAPQ","PCASELIST","ERDISP","PRGTXQRY","PRGTXQRYDIS","CPSLIST","CPSDISP","QPNOT","QPNOTDIS","OPSORAQ1","OPSORAQ2","SelectClass","ADISTNO","ADICASE","SEQ","OPABGNDT","OPATIMES","times","ttype","LIVEPLOC","PLOCDT","substr","transdt","select_option","row","ADMDATA","textType","textObj","DTSOAPTY","DTSOAPSQ","DTSOAPTX","newObj","idx","textResult","newList","dataFilter","PRGTYPE","PRGTX","cre_nam","pro_not","cellRander","object","SelectADMDISP","ADIDATE","DCASENO","SelectDISDISP","DDATEIN","DDATEOUT","DPT","DTPDEPT","DTPDATE","SelectDTASOAPQ","DTPTIME","SelectERDISP","PDISDT","PRGDT","PRGTM","v","DT","TN","SelectPRGTXQRYDIS","CPSCASE","CPSOSEQ","CPSHIST","SelectCPSDISP","CPSENTDT","CPSENTTM","grouparray","SelectQPNOTDIS","OPACOD1","OPAMANNM","SelectOPSORAQ1","control","NotecontrolBar","renderContentArray","listRender","switchListRender","RTview","Nurtionfeedingcell","FeedingOrderRemarks","Moduledisplay","Nurtionfeedingorder","getAPIFeedingData","getTreatmentOrderFilter","titleCellRender","DataCellRender","Nurtiontpncell","TPNListcellRender","TPNSubDatacellRender","TPNDATA","AA","Glu","Ca","Mg","RemarkData","Nurtiontpnorder","tpndata","tpnParsers","inputEndTime","UDWORD","getAPITPNData","tpnList","found","name_regex_flags","titilecell","Watervaluechart","watervalueData","shiftDays","formatShiftDays","rectwidth","svgrect","nulldata","car","Caloriessum","model","ModalRender","Nurtionview","sex","showTime","FeedinfData","IVData","OtherData","sumcar","Calories","shiftTimer","TimerArray","formatTimeArray","watervalueDataList","filterFeedind","filterIV","filterOther","feedingSum","SumData2","IVSum","SumData","OtherSum","caseiddays","GrowthCurve","GrowthCurveControl","GrowthCurveControlBar","WaterValueControl","WaterValueControlBar","feeddata","waterRender","WaterValueRender","Nurtionfeeding","Infectionlabtable","Datalist","Render","FilterData","CellRander","WBCList","BandList","SegList","LymList","PCTList","CRPList","WBCRender","BandRender","SegRender","LymRender","PCTRender","CRPRender","WBCcell","Bandcell","Segcell","Lymcell","PCTcell","CRPcell","switch_state","userdata","Infectionlab","Infectionview","intervalselect","hrdatasource","rrdatasource","spo2datasource","abpdatasource","nbpdatasource","btdatasource","LabData","LabData2","Bedsidecard","remarkContent","queryPatientRemark","TODO_DONE","TODO_UNFINISH","Scheduletodo","todolist","onItemCheck","itemToUpdate","queryPatientTodo","todolist_data","finish_data","finish_value","unfinish_data","finish_checkbox","unfinish_checkbox","onClickunfisish","onClickfinish","Calendercell","clickindex","sendcallback","newDate","clickdate","today","stateswitch","onClickCheck","weekdateformatcalender","calenderlogo","pingcheck","calenderwhitelogo","pingwhite","disableday","scheduleArray","eventArray","disabledayinfo","Calender","calendermode","Clickdays","ClickDate","displayinfo","scheduleRawData","startTimestamp","endTimestamp","todayBegin","noticeRawData","getStartEndTime","monthfirstweekday","firstCellBegin","startTimestampStr","endTimestampStr","itemList","refactoredList","itemTimeStr","foundItemIndex","newItem","newEvent","writer","timestampdate","onClickdays","dateStr","dataOfDayIndex","weekcontext","dataOfDay","getDataFromTimestamp","weeknumber","firstMonthWeekDay","rowIndex","noticeOfDay","getNoticeFromTimestamp","onCancelClick","calendermonthgroup","monthfirstweekdate","weekmonthmode","ShowModule","weekmode","setgroup","MonthPicker","SelectDatepickertype","modechange","Scheduleview","dateformat","exporttime","Patientviewlayout","TYPE","REMARK","PLOC","tabstring","HBEDNUMBER","HBEDLIST","PBASINFO","matadata","nis_status_shange","activkey","PLOCLIST","PLOCTR","BedList","BEDNUMBER","USERDATA","ploc","PLOCTM","transindt","qmnc","bornWeeks","bornDays","wetghtList","selectrender","OptionSelectRender","birthdayweeks","tabPosition","callback","confirm","Modal","Powersetting","role","adduser","userList","power","powerName","radioValue","pwdRadio","inputUsername","inputPassword","inputName","inputDoctorid","radioOnChange","addUserdata","adduserhandleChange","nameChange","queryUserdata","inputuserName","password","username","doctorid","account","roleString","set_State","okText","okType","cancelText","showDeleteConfirm","Search","onSearch","userData","powerString","myNewArray","concat","apply","Systemlogtable","loginlog_table","loginlogList","managerName","apilog_table","apilogList","months","j","optionValue","pagination","page","pageSize","getPages","Systemlog","totalSpace","usingSpace","percent","option","total","unuse","queryLoginLogdata","queryApiLogdata","pages","showInfo","Systemcontrol","bollogin","å","Layoutframe","clear","UsrName","url_path","fontweight","fontsize","routes","route","onClickLogout","Loginview","setRedirect","user","setItem","redirect","permission","statusstring","renderRedirect","login","addEventListener","keyCode","flexWrap","App","documentElement","exact","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b373e3c9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/file1.6f94c891.svg\";","module.exports = __webpack_public_path__ + \"static/media/file2.2b64f736.svg\";","module.exports = __webpack_public_path__ + \"static/media/filter.43b66bba.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit2.8fc62700.svg\";","module.exports = __webpack_public_path__ + \"static/media/RT.41b174eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Wardview.6c75f5a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/Historyview.0467b7bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Control.aa66ed95.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.870c0c52.svg\";","module.exports = __webpack_public_path__ + \"static/media/dragdown.0cdfe02a.svg\";","module.exports = __webpack_public_path__ + \"static/media/calender.da91395a.svg\";","module.exports = __webpack_public_path__ + \"static/media/calenderwhite.d66bfce7.svg\";","module.exports = __webpack_public_path__ + \"static/media/ping.c2141b87.svg\";","module.exports = __webpack_public_path__ + \"static/media/pingwhite.0f1e8cfb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Edit.a7d4c3ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/details.bc0482ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/Chooseedit.def74a6e.svg\";","import React, { Component } from 'react';\n\nclass Homepage extends Component {\n    render() {\n        return (\n            <div></div>\n        );\n    }\n}\n\nexport default Homepage","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport wardviewlogo from '../Image/svg/Wardview.svg'\nimport historylogo from '../Image/svg/Historyview.svg'\nimport controllogo from '../Image/svg/Control.svg'\nimport './Sidermenu.scss';\n\n\nclass Sidermenu extends Component {\n\n    state = {\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = Number(sessionStorage.getItem('role'))\n        this.setState({ powerLogin: powerLogins })\n    }\n\n    Selectkeynumber(key) {\n\n        switch (key) {\n            case '/nicu':\n                return 0;\n            case '/nicu/history':\n                return 1;\n            case '/nicu/system':\n                return 2;\n            default:\n                if (key.match('patient') != null) {\n                    return 0;\n                }\n                if (key.match('ward') != null) {\n                    return 0;\n                }\n                return '';\n        }\n    }\n\n    select_hover(value) {\n        const { path } = this.props\n        const keynumber = this.Selectkeynumber(path)\n        if (keynumber === value) {\n            return true\n        }\n        return false\n    }\n    render() {\n        // const linkstate = {\n        //     backgroundColor: \"rgba(59, 151, 225, 1)\",\n        //     display: 'flex',\n        //     paddingLeft: '15px',\n        //     paddingRight: '15px',\n        //     height: \"40px\"\n        // }\n        // const dislinkstate = {\n        //     backgroundColor: \"rgba(0, 0, 0, 0)\",\n        //     display: 'flex',\n        //     paddingLeft: '15px',\n        //     paddingRight: '15px',\n        //     height: \"40px\"\n        // }\n        // const linkfont = { color: \"rgba(25, 70,90, 1)\", fontweight: \"500px\", fontsize: \"18px\", margin: \"0px 10px 0px 2px\" }\n        // const dislinkfont = { color: \"rgba(46, 100, 164, 1)\", fontweight: \"500px\", fontsize: \"18px\", margin: \"0px 10px 0px 2px\" }\n        const rule = this.state.powerLogin\n        // const rule = 5\n        console.log(Number(sessionStorage.getItem('role')))\n        //sso custom => custom\n        return (\n            <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"20px\", height: '100%' }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto auto\", gridColumnGap: \"10px\" }}>\n                    <Link to=\"/nicu/ward/wardindex\" class={this.select_hover(0) ? \"linkstate\" : \"dislinkstate\"} style={{ display: rule === 5 ? \"none\" : \"flex\" }}>\n                        <img src={wardviewlogo} alt='wardviewlogo'></img>\n                        <centerstyle>\n                            <t2 class={this.select_hover(0) ? \"linkfont\" : \"dislinkfont\"}>住院病人資訊</t2>\n                        </centerstyle>\n                    </Link>\n                    <Link to=\"/nicu/history\" class={this.select_hover(1) ? \"linkstate\" : \"dislinkstate\"} style={{ display: rule >= 2 && rule < 5 ? \"flex\" : \"none\" }}>\n                        <img src={historylogo} alt='historyviewlogo'></img>\n                        <centerstyle>\n                            <t2 class={this.select_hover(1) ? \"linkfont\" : \"dislinkfont\"} >歷史病歷管理</t2>\n                        </centerstyle>\n                    </Link>\n                    <Link to='/nicu/system' class={this.select_hover(2) ? \"linkstate\" : \"dislinkstate\"} style={{ display: rule === 5 || rule === 4 ? \"flex\" : \"none\" }}>\n                        <img src={controllogo} alt='systemviewlogo'></img>\n                        <centerstyle>\n                            <t2 class={this.select_hover(2) ? \"linkfont\" : \"dislinkfont\"}>系統設定</t2>\n                        </centerstyle>\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Sidermenu\n","import X2JS from \"x2js\"\nimport moment from 'moment';\n\nexport function statecolor(state) {\n    if (state === 'HR') {\n        return \"#779F50\"\n    }\n    if (state === 'BP') {\n        return \"#C12528\"\n    }\n\n    if (state === 'ABP') {\n        return \"#C12528\"\n    }\n    if (state === 'NBP') {\n        return \"#C12528\"\n    }\n    if (state === 'SpO2') {\n        return \"#4773B8\"\n    }\n    if (state === 'BT') {\n        return \"#7F3DB5\"\n    }\n    if (state === 'RR') {\n        return \"#DE7531\"\n    }\n    return null\n}\n\n//parse flag\nexport function Respiratorswitch(Respirator) {\n    if (Respirator === '呼(非侵入)') {\n        return '呼(非侵入)'\n    }\n    if (Respirator === '呼(侵入)') {\n        return '呼吸'\n    }\n    return '呼吸'\n}\n\nexport function wardstatestringformat(item) {\n    //console.log(item);\n    switch (item.item) {\n        case \"Respirator\":\n            return Respiratorswitch(item.data)\n        case \"TPN\":\n            return \"TPN\"\n        case \"NPO\":\n            return \"NPO\"\n        case \"HD\":\n            return \"HD\"\n        case \"Anti\":\n            return \"Anti\"\n        case \"Foley\":\n            return \"Foley\"\n        case \"Drain\":\n            return \"Drain\"\n        default:\n            return item\n    }\n}\n\nexport function Labwarningvalue(value, title) {\n    if (title === \"Glucose\") {\n        if (value > 120 || value < 50) {\n            return false\n        }\n    }\n    if (title === \"WBC\") {\n        if (value < 10000 || value > 30000) {\n            return false\n        }\n    }\n    if (title === \"Hgb\") {\n        if (value < 10 || value > 18) {\n            return false\n        }\n    }\n    if (title === \"Platelet\") {\n        if (value < 100000 || value > 450000) {\n            return false\n        }\n    }\n    if (title === \"Na+\") {\n        if (value < 135 || value > 145) {\n            return false\n        }\n    }\n    if (title === \"K+\") {\n        if (value < 3.5 || value > 5.5) {\n            return false\n        }\n    }\n    if (title === \"Ca2+\") {\n        if (value < 0.8 || value > 1.4) {\n            return false\n        }\n    }\n    if (title === \"P\") {\n        if (value < 4.5 || value > 6.0) {\n            return false\n        }\n    }\n    if (title === \"Mg2+\") {\n        if (value < -1.5 || value > 4.5) {\n            return false\n        }\n    }\n    if (title === \"Alb\") {\n        if (value > 3) {\n            return false\n        }\n    }\n    if (title === \"CRP\") {\n        if (value < 1) {\n            return false\n        }\n    }\n    if (title === \"Procalcitionin\") {\n        if (value < 0.5) {\n            return false\n        }\n    }\n    if (title === \"pH\") {\n        if (value < 7.25 || value > 7.4) {\n            return false\n        }\n    }\n    if (title === \"PCO2\") {\n        if (value < 40 || value > 60) {\n            return false\n        }\n    }\n    if (title === \"BE\") {\n        if (value < -7 || value > 6) {\n            return false\n        }\n    }\n    if (title === \"PO2\") {\n        if (value < 40 || value > 90) {\n            return false\n        }\n    }\n    if (title === \"BUN\") {\n        if (value < 1) {\n            return false\n        }\n    }\n    if (title === \"Cr\") {\n        if (value < 1) {\n            return false\n        }\n    }\n    if (title === \"ALT\") {\n        if (value < 45) {\n            return false\n        }\n    }\n    if (title === \"AST\") {\n        if (value < 45) {\n            return false\n        }\n    }\n    if (title === \"TBil\") {\n        if (value < 2) {\n            return false\n        }\n    }\n    if (title === \"DBil\") {\n        if (value < 0.5) {\n            return false\n        }\n    }\n    if (title === \"ALKP\") {\n        if (value < 450) {\n            return false\n        }\n    }\n    if (title === \"Total Ca\") {\n        if (value < 8 || value > 12) {\n            return false\n        }\n    }\n    if (title === \"FeSat\") {\n        if (value < 0.15) {\n            return false\n        }\n    }\n    return true\n}\n\nexport function simulationCentermonitordata(time, timeInterval) {\n    var dataarray = [];\n    for (var k = 0; k < (timeInterval * 6); k++) {\n        var dataset = []; //建立空的資料陣列\n        for (var i = 0; i < timeInterval; i++) {\n            var newNum = Math.floor(Math.random() * 50) + 50;\n            dataset.push(newNum);\n        }\n        dataarray.push({\n            'data': dataset,\n            'time': time[k]\n        });\n    }\n    //console.log(dataarray);\n    return dataarray;\n}\n\nexport function simulationnisdata(time, timeInterval) {\n    var dataarray = [];\n    for (var k = 0; k < timeInterval; k++) {\n        var dataset = []; //建立空的資料陣列\n        var newNum = Math.floor(Math.random() * 50) + 50;\n        dataset.push(newNum);\n        dataarray.push({\n            'data': dataset,\n            'time': time[k]\n        });\n    }\n    //console.log(dataarray);\n    return dataarray;\n}\n\nexport function getRandom(number) {\n    return Math.floor(Math.random() * 5) + number;\n};\n\nexport function getRandomfornumber(number) {\n    return Math.floor(Math.random() * number);\n};\n\nexport function arraychange(list) {\n    var myNewArray = []\n    for (var i = 0; i < list.length; ++i) {\n        for (var j = 0; j < list[i].length; ++j) {\n            myNewArray.push(list[i][j]);\n        }\n    }\n    return myNewArray\n}\n\nexport function WeightList(weightlist) {\n    if (weightlist === undefined || weightlist === null) {\n        return \"--\"\n    }\n    const findata = weightlist.filter(function (value, index) {\n        return value.type === \"TW\"\n    })\n    if (findata.length === 0) {\n        return 0\n    }\n    else return findata\n}\n\nexport function BornWeight(weightlist, birthday) {\n    console.log(weightlist)\n    if (weightlist === undefined || weightlist === null) {\n        return \"--\"\n    }\n    if (Array.isArray(weightlist)) {\n        const findata = weightlist.filter(function (value, index) {\n            return value.rec_dat === birthday && value.type === \"TW\"\n        })\n        if (findata.length === 0) {\n            return 0\n        }\n        else return parseInt(Number(findata[0].value2) * 1000)\n    }\n    else {\n        return parseInt(Number(weightlist.value2) * 1000)\n    }\n}\n\nexport function NewestWeight(weightlist) {\n    if (weightlist === undefined) {\n        return \"--\"\n    }\n    if (weightlist.length === 0) {\n        return 0\n    }\n    if (Array.isArray(weightlist)) {\n        const findata = weightlist.filter(function (value, index) {\n            return value.type === \"TW\"\n        })\n        if (findata.length === 0) {\n            return \"--\"\n        }\n        return parseInt(Number(findata[0].value2) * 1000)\n    }\n    else {\n        return parseInt(Number(weightlist.value2) * 1000)\n    }\n\n}\n\nexport function XM2JSON(data) {\n    const xm2 = new X2JS()\n    if (data === undefined) {\n        return []\n    }\n    console.log(xm2.xml2js(data))\n    const status = xm2.xml2js(data).outmsg.rescont\n    if (Number(status) === '99') {\n        return []\n    }\n    const parsedata = xm2.xml2js(data).outmsg.resconts.rescont\n    return parsedata\n}\n\nexport function Doc(DocList, type) {\n    if (DocList === undefined || DocList === null || DocList === \"\") {\n        return \"\"\n    }\n    const Main = DocList.filter(function (element, index) {\n        return element.PDTYPE === type\n    })\n    if (Main.length === 0) {\n        return \"\"\n    }\n    return Main[0].PDDOCNMC.toString().trim()\n}\n\nexport function selectweight(List, date) {\n    if (List === undefined || List === null) {\n        return \"--\"\n    }\n    var array = []\n    for (let index = 0; index < List.length; index++) {\n        const element = List[index];\n        if (moment(element.rec_dat, 'YYYYMMDD').valueOf() < date) {\n            array.push(element)\n        }\n    }\n    if (array.length === 0) {\n        return 0\n    }\n    return Number(array[0].value2) * 1000\n}\n\n\n","import axios from 'axios';\n\n\naxios.defaults.baseURL = \"http://10.97.241.48/deploy/\";\n// axios.defaults.baseURL = \"http://172.24.7.33/deploy/\";\n// axios.defaults.baseURL = \"http://127.0.0.1:8888/deploy/\";\n\n//----------------------------------------------\n// announcement-controller 病房公告(Ward View)\n//----------------------------------------------\n//建立公告資訊\n/*\nexport function createAnnounce(context, editor, transinno, time) {\n  const body = {\n    context: context,\n    editor: editor,\n    transinno: transinno,\n    time: time\n  }\n  return axios.post(\"Announcement/createAnnouncement\", body);\n}*/\nexport function createAnnounce(announceArray) {\n  return axios.post(\"Announcement/createAnnouncement\", announceArray);\n}\n\n//刪除某天公告資訊\nexport function deleteAnnounce(transinno, dateTime) {\n  return axios.delete(\"Announcement/delannouncement/\" + transinno + \"/\" + dateTime);\n}\n\n//取得全部資訊\nexport function getAllAnnounce() {\n  return axios.get(\"Announcement/getAllannounce\");\n}\n\n//取得某位病人某天資訊\nexport function getOneAnnounce(transinno, dateTime) {\n  return axios.get(\"Announcement/getOneannouncement/\" + transinno + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// export/import-controller 匯入匯出\n//----------------------------------------------\n//匯出\nexport function exportJson(transinno) {\n  return axios.get(\"exportJson/\" + transinno);\n}\n\n//匯入\nexport function importJson(filename) {\n  return axios.get(\"importJson/\" + filename);\n}\n\n//下載檔案\nexport function downloadFile(filename) {\n  return axios.get(\"downloadFile/\" + filename);\n}\n\n//上傳檔案\nconst config = { headers: { 'Content-Type': 'multipart/form-data' } }\nexport function uploadFile(fileData) {\n  return axios.post(\"uploadFile\", fileData, config);\n}\n//----------------------------------------------\n// login-controller 登入與權限設定\n//----------------------------------------------\n//刪除帳號\nexport function deleteUser(name, role, username) {\n  return axios.delete(\"delUser/\" + name + \"/\" + role + \"/\" + username);\n}\n\n//查詢某帳號權限：1->read only 2->general user 3->general manager 4->system manager 5->super user\nexport function getAuth(username) {\n  return axios.get(\"getAuth/\" + username);\n}\n\n//取得系統空間\nexport function getSpace() {\n  return axios.get(\"getSpace\");\n}\n\n//登入\nexport function login(username, password) {\n  const body = {\n    username: username,\n    password: password\n  }\n  return axios.post(\"login\", body);\n}\n\nexport function getSSOLogin(username, password) {\n  return axios.get(\"LoginInSSO/\" + username + \"/\" + password);\n}\n\n//新增帳號與權限\nexport function register(name, password, role, username, doctorid) {\n  const body = {\n    name: name,\n    password: password,\n    role: role,\n    username: username,\n    doctorid: doctorid\n  }\n  return axios.post(\"register\", body);\n}\n\n//取得全部資訊\nexport function getAlluser() {\n  return axios.get(\"getAlluser\")\n}\n\n//角色、姓名搜尋其內容\nexport function searchUser(name, role) {\n  return axios.get(\"searchUser/\" + name + \"/\" + role);\n}\n\n//----------------------------------------------\n// log-controller 顯示Log日誌\n//----------------------------------------------\n\n//Show login log(根據起始時間查詢成功登入記錄)(time格式為yyyy-MM-ddTHH:mm:ss)\nexport function getLoginlog(startTime, endTime) {\n  return axios.get(\"getLoginlog/\" + startTime + \"/\" + endTime);\n}\n\n//Show API access log (date格式為yyyy-MM-dd)\nexport function getApilog(Time) {\n  return axios.get(\"getApilog/\" + Time)\n}\n\n//Show Debug log (date格式為yyyy-MM-dd)\nexport function getDebuglog(Time) {\n  return axios.get(\"getDebuglog/\" + Time)\n}\n\n//----------------------------------------------\n// breath-controller 呼吸RT\n//----------------------------------------------\n//createBreath\nexport function createBreath(editTime, hisid, model, note, setting) {\n  const body = {\n    editTime: editTime,\n    hisid: hisid,\n    model: model,\n    note: note,\n    setting: setting\n  }\n  return axios.post(\"breath/createBreath\", body);\n}\n\n//getBreath\nexport function getAllBreath() {\n  return axios.get(\"breath/getAllbreath\");\n}\n\n//updateNote\nexport function updateNote(editTime, hisid, model, note, setting) {\n  const body = {\n    editTime: editTime,\n    hisid: hisid,\n    model: model,\n    note: note,\n    setting: setting\n  }\n  return axios.put(\"breath/updatebnote/\" + editTime, body);\n}\n\n//----------------------------------------------\n// exam-cbc-controller Exam CBC Controller\n//----------------------------------------------\n//寫入CBC資訊\nexport function createExamCbc(band, hb, hct, hisid, lym, plt, seg, updateTime, wbc) {\n  const body = {\n    band: band,\n    hb: hb,\n    hct: hct,\n    hisid: hisid,\n    lym: lym,\n    plt: plt,\n    seg: seg,\n    updateTime: updateTime,\n    wbc: wbc\n  }\n  return axios.post(\"examcbc/createexamcbc\", body);\n}\n\n//取得全部資訊\nexport function getAllExamCbc() {\n  return axios.get(\"examcbc/getAllexamcbc\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamCbcOfPatient(hisid, dateTime) {\n  return axios.get(\"examcbc/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-cbc-two-controller Exam CBC Two Controller\n//----------------------------------------------\n//寫入CBC資訊\nexport function createExamCbcTwo(band, crp, hisid, lym, ptc, seg, updateTime, wbc) {\n  const body = {\n    band: band,\n    crp: crp,\n    hisid: hisid,\n    lym: lym,\n    ptc: ptc,\n    seg: seg,\n    updateTime: updateTime,\n    wbc: wbc\n  }\n  return axios.post(\"examcbctwo/createexamcbctwo\", body);\n}\n\n//取得全部資訊\nexport function getAllExamCbcTwo() {\n  return axios.get(\"examcbctwo/getAllexamcbctwo\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamCbcTwoOfPatient(hisid, dateTime) {\n  return axios.get(\"examcbctwo/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-cruor-controller Exam Cruor Controller\n//----------------------------------------------\n//createExamCruor\nexport function createExamCruor(apiT, hisid, inr, pt, updateTime) {\n  const body = {\n    apiT: apiT,\n    hisid: hisid,\n    inr: inr,\n    pt: pt,\n    updateTime: updateTime\n  }\n  return axios.post(\"examcruor/createexamcruor\", body);\n}\n\n//getExamCruor\nexport function getAllExamCruor() {\n  return axios.get(\"examcruor/getAllexamcruor\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamCruorOfPatient(hisid, dateTime) {\n  return axios.get(\"examcruor/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-electrolyte-controller Exam Electrolyte Controller\n//----------------------------------------------\n//createExamEletrolyte\nexport function createExamElectrolyte(bun, caFree, caTotal, caseid, cl, cr, hisid, k, mg, na, p, updateTime) {\n  const body = {\n    bun: bun,\n    caFree: caFree,\n    caTotal: caTotal,\n    caseid: caseid,\n    cl: cl,\n    cr: cr,\n    hisid: hisid,\n    k: k,\n    mg: mg,\n    na: na,\n    p: p,\n    updateTime: updateTime\n  }\n  return axios.post(\"examelectrolyte/createexamelectrolyte\", body);\n}\n\n//getExamElectrolyte\nexport function getAllExamElectrolyte() {\n  return axios.get(\"examelectrolyte/getAllexamelectrolyte\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamElectrolyteOfPatient(hisid, dateTime) {\n  return axios.get(\"examcruor/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-gas-addi-controller Exam GAS Addi Controller\n//----------------------------------------------\n//createExamGasAddi\nexport function createExamGasAddi(bun, caFree, cr, hb, hct, hisid, k, na, updateTime) {\n  const body = {\n    bun: bun,\n    caFree: caFree,\n    cr: cr,\n    hb: hb,\n    hct: hct,\n    hisid: hisid,\n    k: k,\n    na: na,\n    updateTime: updateTime\n  }\n  return axios.post(\"examgasaddi/createexamgasaddi\", body);\n}\n\n//getExamGasAddi\nexport function getAllExamGasAddi() {\n  return axios.get(\"examgasaddi/getAllexamgasaddi\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamGasAddiOfPatient(hisid, dateTime) {\n  return axios.get(\"examgasaddi/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-gas-controller Exam GAS Controller\n//----------------------------------------------\n//createExamGas\nexport function createExamGas(be, fiO2, hco3, hisid, o2Sat, pco2, ph, po2, sample, updateTime) {\n  const body = {\n    be: be,\n    fiO2: fiO2,\n    hco3: hco3,\n    hisid: hisid,\n    o2Sat: o2Sat,\n    pco2: pco2,\n    ph: ph,\n    po2: po2,\n    sample: sample,\n    updateTime: updateTime\n  }\n  return axios.post(\"examgas/createexamgas\", body);\n}\n\n//getExamGas\nexport function getAllExamGas() {\n  return axios.get(\"examgas/getAllexamgas\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamGasOfPatient(hisid, dateTime) {\n  return axios.get(\"examgas/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-glu-controller Exam Glu Controller\n//----------------------------------------------\n//createExamGlu\nexport function createExamGlu(gluBedside, gluLab, hisid, updateTime) {\n  const body = {\n    gluBedside: gluBedside,\n    gluLab: gluLab,\n    hisid: hisid,\n    updateTime: updateTime\n  }\n  return axios.post(\"examglu/createexamglu\", body);\n}\n\n//getExamGlu\nexport function getAllExamGlu() {\n  return axios.get(\"examglu/getAllexamglu\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamGluOfPatient(hisid, dateTime) {\n  return axios.get(\"examglu/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-heart-controller Exam Heart Controller\n//----------------------------------------------\n//createExamHeart\nexport function createExamHeart(bnp, caseid, ck, ckMB, hisid, tropoin, updateTime) {\n  const body = {\n    bnp: bnp,\n    caseid: caseid,\n    ck: ck,\n    ckMB: ckMB,\n    hisid: hisid,\n    tropoin: tropoin,\n    updateTime: updateTime\n  }\n  return axios.post(\"examheart/createexamheart\", body);\n}\n\n//getExamGlu\nexport function getAllExamHeart() {\n  return axios.get(\"examheart/getAllexamheart\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamHeartOfPatient(hisid, dateTime) {\n  return axios.get(\"examheart/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-jaundice-controller Exam Jaundice Controller\n//----------------------------------------------\n//createExamJaundice\nexport function createExamJaundice(dbil, hisid, microBil, tbil, tcb, updateTime) {\n  const body = {\n    dbil: dbil,\n    hisid: hisid,\n    microBil: microBil,\n    tbil: tbil,\n    tcb: tcb,\n    updateTime: updateTime\n  }\n  return axios.post(\"examjaundice/createexamjaundice\", body);\n}\n\n//getExamJaundice\nexport function getAllExamJaundice() {\n  return axios.get(\"examjaundice/getAllexamjaundice\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamJaundiceOfPatient(hisid, dateTime) {\n  return axios.get(\"examjaundice/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-liver-controller Exam Liver Controller\n//----------------------------------------------\n//createExamLiver\nexport function createExamLiver(alKp, alb, alt, ast, dbil, hisid, rggt, tbil, updateTime) {\n  const body = {\n    alKp: alKp,\n    alb: alb,\n    alt: alt,\n    ast: ast,\n    dbil: dbil,\n    hisid: hisid,\n    rggt: rggt,\n    tbil: tbil,\n    updateTime: updateTime\n  }\n  return axios.post(\"examliver/createexamliver\", body);\n}\n\n//getExamLiver\nexport function getAllExamLiver() {\n  return axios.get(\"examliver/getAllexamliver\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamLiverOfPatient(hisid, dateTime) {\n  return axios.get(\"examliver/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-premature-baby-controller Exam Premature Baby Controller\n//----------------------------------------------\n//createExamPrematureBaby\nexport function createExamPrematureBaby(alkp, feSat, hisid, iron, ldh, tibc, updateTime) {\n  const body = {\n    alkp: alkp,\n    feSat: feSat,\n    hisid: hisid,\n    iron: iron,\n    ldh: ldh,\n    tibc: tibc,\n    updateTime: updateTime\n  }\n  return axios.post(\"examprematurebaby/createexamprematurebaby\", body);\n}\n\n//getExamPrematureBaby\nexport function getAllExamPrematureBaby() {\n  return axios.get(\"examprematurebaby/getAllexamprematurebaby\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamPrematureBabyOfPatient(hisid, dateTime) {\n  return axios.get(\"examprematurebaby/getOnepatient\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-unstructured-controller Exam Unstructured Controller\n//----------------------------------------------\n//createExamUnstructured\nexport function createExamUnstructured(hisid, item, result, state, time) {\n  const body = {\n    hisid: hisid,\n    item: item,\n    result: result,\n    state: state,\n    time: time\n  }\n  return axios.post(\"examunstructured/createexamunstructured\", body);\n}\n\n//getExamUnstructured\nexport function getAllExamUnstructured() {\n  return axios.get(\"examunstructured/getAllexamunstructured\");\n}\n\n//----------------------------------------------\n// feeding-controller Feeding Controller\n//----------------------------------------------\n//createExamFeeding\nexport function createExamFeeding(editDoctor, editTime, endTime, hisid, name, notice, startTime) {\n  const body = {\n    editDoctor: editDoctor,\n    editTime: editTime,\n    endTime: endTime,\n    hisid: hisid,\n    name: name,\n    notice: notice,\n    startTime: startTime\n  }\n  return axios.post(\"feeding/createfeeding\", body);\n}\n\n//getExamFeeding\nexport function getAllExamFeeding() {\n  return axios.get(\"feeding/getAllfeeding\");\n}\n\n//----------------------------------------------\n// hospitalization-record-controller Hospitalization Record Controller\n//----------------------------------------------\n//createHospitalizationRecord\nexport function createHospitalizationRecord(hisid, hospitalDoctor, tricuactiveue, mainDoctor, nonReport, note, report, updateTime) {\n  const body = {\n    hisid: hisid,\n    hospitalDoctor: hospitalDoctor,\n    icuactive: tricuactiveue,\n    mainDoctor: mainDoctor,\n    nonReport: nonReport,\n    note: note,\n    report: report,\n    updateTime: updateTime\n  }\n  return axios.post(\"hospitalizationrecord/createhospitalizationrecord\", body);\n}\n\n//getHospitalizationRecord\nexport function getHospitalizationRecord() {\n  return axios.get(\"hospitalizationrecord/getAllhospitalizationrecord\");\n}\n\n//----------------------------------------------\n// io-controller IO Controller\n//----------------------------------------------\n//createIO\nexport function createIO(caseid, hisid, item, updateTime) {\n  const body = {\n    caseid: caseid,\n    hisid: hisid,\n    item: item,\n    updateTime: updateTime\n  }\n  return axios.post(\"io/createio\", body);\n}\n\n//getIO\nexport function getIO() {\n  return axios.get(\"io/getAllio\");\n}\n\n//----------------------------------------------\n// nis-controller NIS Controller\n//----------------------------------------------\n//getQDC\nexport function getQDC(caseno, st, et) {\n  return axios.get(\"QDC/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQENT\nexport function getQENT(caseno) {\n  return axios.get(\"QENT/\" + caseno);\n}\n\n//getQDVS\nexport function getQDVS(caseno, st, et) {\n  return axios.get(\"QDVS/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQMNC\nexport function getQMNC(caseno) {\n  return axios.get(\"QMNC/\" + caseno);\n}\n\n//getQOXY\nexport function getQOXY(caseno, st, et) {\n  return axios.get(\"QOXY/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQPNOT\nexport function getQPNOT(caseno, st, et) {\n  return axios.get(\"QPNOT/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQSPE\nexport function getQSPE(caseno, st, et) {\n  return axios.get(\"QSPE/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQTWPER\nexport function getQTWPER(caseno, st, et) {\n  return axios.get(\"QTWPER/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//----------------------------------------------\n// note-controller Note Controller\n//----------------------------------------------\n//createNote\nexport function createNote(caseid, context, editTime, hisid, type) {\n  const body = {\n    caseid: caseid,\n    context: context,\n    editTime: editTime,\n    hisid: hisid,\n    type: type\n  }\n  return axios.post(\"note/createnote\", body);\n}\n\n//getNote\nexport function getNote() {\n  return axios.get(\"note/getAllnote\");\n}\n\n//----------------------------------------------\n// notice-controller 待辦事項 Notice (Ward/Patient View)\n//----------------------------------------------\n//建立資訊\nexport function createNotice(hisid, context, time, transinno, doc) {\n  const body = {\n    hisid: hisid,\n    context: context,\n    time: time,\n    transinno: transinno,\n    doc: doc\n  }\n  return axios.post(\"notice/createNotice\", body);\n}\n\n//刪除某人某件資訊\nexport function deleteNotice(transinno, date) {\n  return axios.delete(\"notice/delnotice/\" + transinno + \"/\" + date);\n}\n\n//取得全部資訊\nexport function getAllNotice() {\n  return axios.get(\"notice/getAllnotice\");\n}\n\n//取得某位病人資訊\nexport function getOnePatientNotice(transinno, HISID, st, et) {\n  return axios.get(\"notice/getOnePatientNotice/\" + transinno + \"/\" + HISID + \"/\" + st + \"/\" + et);\n}\n\n//----------------------------------------------\n// patient-controller 基本資料(Ward View)\n//----------------------------------------------\n//填寫基本資料\nexport function createPatient(nonreport, pacseno, pbirthdt, pbirthweight, pblood, pday, phistnum, pnamec, psex, pweek, report, transinid) {\n  const body = {\n    nonreport: nonreport,\n    pacseno: pacseno,\n    pbirthdt: pbirthdt,\n    pbirthweight: pbirthweight,\n    pblood: pblood,\n    pday: pday,\n    phistnum: phistnum,\n    pnamec: pnamec,\n    psex: psex,\n    pweek: pweek,\n    report: report,\n    transinid: transinid\n  }\n  return axios.post(\"patient/createpatient\", body);\n}\n\n//刪除某位病人\nexport function deletePatient(transinid, caseid, hisid) {\n  return axios.delete(\"patient/delpatient/\" + transinid + \"/\" + caseid + \"/\" + hisid);\n}\n\n//取得全部資訊\nexport function getAllPatient() {\n  return axios.get(\"patient/getAllpatient\");\n}\n\n//取得某位病人資訊\nexport function getOnePatient(hisid) {\n  return axios.get(\"patient/getOnepatient/\" + hisid);\n}\n\n\n//----------------------------------------------\n// patient-important-matter-controller 病人重要注意事項(Patient View)\n//----------------------------------------------\n//建立事項資訊\nexport function createPatientImportantMatter(context, editor, hisid, updateTime, transinid) {\n  const body = {\n    context: context,\n    editor: editor,\n    hisid: hisid.trim(),\n    time: updateTime,\n    transinid: transinid\n  }\n  return axios.post(\"patientimportantmatter/createpatientimportantmatter\", body);\n}\n\n//刪除某日資訊\nexport function deletePatientImportantMatter(date) {\n  return axios.delete(\"patientimportantmatter/delpatientimportantmatter/\" + date);\n}\n\n//取得全部資訊\nexport function getAllPatientImportantMatter() {\n  return axios.get(\"patientimportantmatter/getAllpatientimportantmatter\");\n}\n\n//取得某位病人資訊\nexport function getOnePatientImportantMatter(transinid) {\n  return axios.get(\"patientimportantmatter/getOnepatient/\" + transinid);\n}\n\n//----------------------------------------------\n// patient-remark-controller 病人註記(Patient View)\n//----------------------------------------------\n//createPatientRemark\nexport function createPatientRemark(context, hisid, transid) {\n  const body = {\n    context: context,\n    hisid: hisid,\n    transid: transid\n  }\n  return axios.post(\"patientremark/createpatientremark\", body);\n}\n\n//delPatientremark\nexport function deletePatientRemark(transid) {\n  return axios.delete(\"patientremark/delpatientremark/\" + transid);\n}\n\n//getPatientRemark\nexport function getAllPatientRemark() {\n  return axios.get(\"patientremark/getAllpatientremark\");\n}\n\n//getOnePatientRemark\nexport function getOnePatientRemark(transid) {\n  return axios.get(\"patientremark/getOnepatientremark/\" + transid);\n}\n\n//----------------------------------------------\n// remark-controller 註記\n//----------------------------------------------\n//建立註記\n\nexport function createRemark(name, remark, remarkId, time, transinId, type, editor) {\n  const body = {\n    name: name,\n    remark: remark,\n    remarkid: remarkId,\n    time: time,\n    transinid: transinId,\n    type: type,\n    editor: editor,\n    remarkid: remarkId\n  }\n  return axios.post(\"Remark/createremark\", body);\n}\n\n//取得全部註記\nexport function getAllRemark() {\n  return axios.get(\"Remark/getAllremark\");\n}\n\n//取得某一類型註記\nexport function getOneRemark(transid, remarkid, type) {\n  return axios.get(\"Remark/getOneremark/\" + transid + \"/\" + remarkid + \"/\" + type);\n}\n\n//----------------------------------------------\n// patient-weight-controller 基本資料-體重(Ward View)\n//----------------------------------------------\n//填寫體重資訊\nexport function createPatientWeight(hisid, updateTime, weight) {\n  const body = {\n    hisid: hisid,\n    updateTime: updateTime,\n    weight: weight\n  }\n  return axios.post(\"patientweight/createpatientweight\", body);\n}\n\n//刪除某位病人體重資訊\nexport function deletePatientWeight(date) {\n  return axios.delete(\"patientweight/delpatientweight/\" + date);\n}\n\n//取得全部資訊\nexport function getAllPatientWeight() {\n  return axios.get(\"patientweight/getAllpatientweight\");\n}\n\n//取得某位病人體重資訊\nexport function getOnePatientWeight(hisid) {\n  return axios.get(\"patientweight/getOnepatientweight/\" + hisid);\n}\n\n//----------------------------------------------\n// prescription-order-controller Prescription Order\n//----------------------------------------------\n//建立Prescription Order資訊\nexport function createPrescriptionOrder(caseid, dosage, editTime, endTime, frequency, hisid, name, note, route, scientificName, startTime, state, unit) {\n  const body = {\n    caseid: caseid,\n    dosage: dosage,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    route: route,\n    scientificName: scientificName,\n    startTime: startTime,\n    state: state,\n    unit: unit\n  }\n  return axios.post(\"prescriptionorder/createprescriptionorder\", body);\n}\n\n//取得全部資訊\nexport function getAllPrescriptionOrder() {\n  return axios.get(\"prescriptionorder/getAllprescriptionorder\");\n}\n\n//更新Prescription Order備註\nexport function updatePrescriptionOrder(updateTime, caseid, dosage, editTime, endTime, frequency, hisid, name, note, route, scientificName, startTime, state, unit) {\n  const body = {\n    caseid: caseid,\n    dosage: dosage,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    route: route,\n    scientificName: scientificName,\n    startTime: startTime,\n    state: state,\n    unit: unit\n  }\n  return axios.put(\"prescriptionorder/updateponote/\" + updateTime, body);\n}\n\n//----------------------------------------------\n// schedule-controller 排程與事件(Ward/Patient View)\n//----------------------------------------------\n//建立排程資訊\nexport function createPatientSchedule(bednumber, context, time, transinno, type, writter, name, hisid) {\n  const body = {\n    bednumber: bednumber,\n    context: context,\n    time: time,\n    transinno: transinno,\n    type: type,\n    writter: writter,\n    name: name,\n    hisid: hisid\n  }\n  return axios.post(\"schedule/createschedule\", body);\n}\n\n//刪除某人某天排程資訊\nexport function deletePatientSchedule(transinno, date) {\n  return axios.delete(\"schedule/delschedule/\" + transinno + \"/\" + date);\n}\n\n//取得全部資訊\nexport function getAllSchedule() {\n  return axios.get(\"schedule/getAllschedule\");\n}\n\n//取得某位某時段病人資訊\nexport function getOnePatientSchedule(transinno, starttime, endtime) {\n  return axios.get(\"schedule/getOnepatient/\" + transinno + \"/\" + starttime + \"/\" + endtime);\n}\n\n//----------------------------------------------\n// sso-controller SSO Controller\n//----------------------------------------------\n//get_user_profile\nexport function ssoUserProfile(app_COMPANY_UUID, app_USER_BASIC_PROFILE, app_USER_NODE_UUID, privileged_APP_SSO_TOKEN, public_APP_USER_SSO_TOKEN_TO_QUERY) {\n  const body = {\n    app_COMPANY_UUID: app_COMPANY_UUID,\n    app_USER_BASIC_PROFILE: app_USER_BASIC_PROFILE,\n    app_USER_NODE_UUID: app_USER_NODE_UUID,\n    privileged_APP_SSO_TOKEN: privileged_APP_SSO_TOKEN,\n    public_APP_USER_SSO_TOKEN_TO_QUERY: public_APP_USER_SSO_TOKEN_TO_QUERY\n  }\n  return axios.post(\"nicu/get_user_profile\", body);\n}\n\n//get_uuid\nexport function ssoUuid(privileged_APP_SSO_TOKEN, public_APP_USER_SSO_TOKEN_TO_QUERY) {\n  const body = {\n    privileged_APP_SSO_TOKEN: privileged_APP_SSO_TOKEN,\n    public_APP_USER_SSO_TOKEN_TO_QUERY: public_APP_USER_SSO_TOKEN_TO_QUERY\n  }\n  return axios.post(\"nicu/get_uuid\", body);\n}\n\n//Login\nexport function ssoLogin(app_PRIVATE_ID, app_PRIVATE_PASSWD) {\n  const body = {\n    app_PRIVATE_ID: app_PRIVATE_ID,\n    app_PRIVATE_PASSWD: app_PRIVATE_PASSWD\n  }\n  return axios.post(\"nicu/login\", body);\n}\n\n//login_action\nexport function ssoLoginAction(login_name, password) {\n  const body = {\n    login_name: login_name,\n    password: password\n  }\n  return axios.post(\"nicu/login_a\", body);\n}\n\n//----------------------------------------------\n// stored-procedure-controller Stored Procedure Controller\n//----------------------------------------------\n//getADMDISP\nexport function getStoredProcedureADMDISP(hisid, caseno) {\n  return axios.get(\"ADMDISP/\" + hisid + \"/\" + caseno);\n}\n\n//getADMLIST\nexport function getStoredProcedureADMLIST(hisid, docid) {\n  return axios.get(\"ADMLIST/\" + hisid + \"/\" + docid);\n}\n\n//getCPSDISP\nexport function getStoredProcedureCPSDISP(hisid, caseno, seq) {\n  return axios.get(\"CPSDISP/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//getCPSLIST\nexport function getStoredProcedureCPSLIST(hisid, docid) {\n  return axios.get(\"CPSLIST/\" + hisid + \"/\" + docid);\n}\n\n//getDISDISP\nexport function getStoredProcedureDISDISP(hisid, caseno) {\n  return axios.get(\"DISDISP/\" + hisid + \"/\" + caseno);\n}\n\n//getDISLIST\nexport function getStoredProcedureDISLIST(hisid, docid) {\n  return axios.get(\"DISLIST/\" + hisid + \"/\" + docid);\n}\n\n//getDTAROTQ4\nexport function getStoredProcedureDTAROTQ4(hisid) {\n  return axios.get(\"DTAROTQ4/\" + hisid);\n}\n\n//getDTASOAPQ\nexport function getStoredProcedureDTASOAPQ(hisid, date, dpt) {\n  return axios.get(\"DTASOAPQ/\" + hisid + \"/\" + date + \"/\" + dpt);\n}\n\n//getERDISP\nexport function getStoredProcedureERDISP(hisid, caseno) {\n  return axios.get(\"ERDISP/\" + hisid + \"/\" + caseno);\n}\n\n//getOPSORAQ1\nexport function getStoredProcedureOPSORAQ1(hisid) {\n  return axios.get(\"OPSORAQ1/\" + hisid);\n}\n\n//getOPSORAQ2\nexport function getStoredProcedureOPSORAQ2(hisid, date, times) {\n  return axios.get(\"OPSORAQ2/\" + hisid + \"/\" + date + \"/\" + times);\n}\n\n//getORDLIST\nexport function getStoredProcedureORDLIST(hisid, date, dpt, docid) {\n  return axios.get(\"ORDLIST/\" + hisid + \"/\" + date + \"/\" + dpt + \"/\" + docid);\n}\n\n//getPCASELIST\nexport function getStoredProcedurePCASELIST(hisid, docid, ttype) {\n  return axios.get(\"PCASELIST/\" + hisid + \"/\" + docid + \"/\" + ttype);\n}\n\n//getPRGTXQRY\nexport function getStoredProcedurePRGTXQRY(hisid, date, caseno) {\n  return axios.get(\"PRGTXQRY/\" + date + \"/\" + hisid + \"/\" + caseno);\n}\n\n//getRESDBGAS\nexport function getStoredProcedureRESDBGAS(hisid, date) {\n  return axios.get(\"RESDBGAS/\" + hisid + \"/\" + date);\n}\n\n//getRESDGLU1\nexport function getStoredProcedureRESDGLU1(hisid, date) {\n  return axios.get(\"RESDGLU1/\" + hisid + \"/\" + date);\n}\n\n//getRESDISP\nexport function getStoredProcedureRESDISP(hisid, month, caseno, seq) {\n  return axios.get(\"RESDISP/\" + month + \"/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//getRESDNM2\nexport function getStoredProcedureRESDNM2(hisid, date) {\n  return axios.get(\"RESDNM2/\" + hisid + \"/\" + date);\n}\n\n//getRESLAB01\nexport function getStoredProcedureRESLAB01(hisid, date) {\n  return axios.get(\"RESLAB01/\" + hisid + \"/\" + date);\n}\n\n//getRESLAB02\nexport function getStoredProcedureRESLAB02(hisid, date) {\n  return axios.get(\"RESLAB02/\" + hisid + \"/\" + date);\n}\n\n//getRESLAB0C\nexport function getStoredProcedureRESLAB0C(hisid, date) {\n  return axios.get(\"RESLAB0C/\" + hisid + \"/\" + date);\n}\n\n//getRESSECT\nexport function getStoredProcedureRESSECT(hisid, month, dpt, docid) {\n  return axios.get(\"RESSECT/\" + month + \"/\" + hisid + \"/\" + dpt + \"/\" + docid);\n}\n\n//getTRTMNTQ1\nexport function getStoredProcedureTRTMNTQ1(hisid, caseno) {\n  return axios.get(\"TRTMNTQ1/\" + hisid + \"/\" + caseno);\n}\n\n//getUDORDER0\nexport function getStoredProcedureUDORDER0(hisid, caseno, seq) {\n  return axios.get(\"UDORDER0/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//getUDTEXTQ1\nexport function getStoredProcedureUDTEXTQ1(caseno, seq) {\n  return axios.get(\"UDTEXTQ1/\" + caseno + \"/\" + seq);\n}\n\n//getWARDFLAG\nexport function getStoredProcedureWARDFLAG(hisid, caseno, seq) {\n  return axios.get(\"WARDFLAG/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//----------------------------------------------\n// table-controller Table Controller\n//----------------------------------------------\n//getTableHBED\nexport function getTableHBED() {\n  return axios.get(\"HBED\");\n}\n\n//getTablePBASINFO\nexport function getTablePBASINFO(PHISTNUM) {\n  return axios.get(\"PBASINFO/\" + PHISTNUM);\n}\n\n//getTablePDOCNEW\nexport function getTablePDOCNEW(PCASENO) {\n  return axios.get(\"PDOCNEW/\" + PCASENO);\n}\n\n//getTablePLOC\nexport function getTablePLOC(PCASENO) {\n  return axios.get(\"PLOC/\" + PCASENO);\n}\n\n//----------------------------------------------\n// to-do-controller 待辦事項To Do List(Ward/Patient View)\n//----------------------------------------------\n//建立待辦資訊\nexport function createTodo(caseid, context, time, transinno, type) {\n  const body = {\n    caseid: caseid,\n    context: context,\n    time: time,\n    transinno: transinno,\n    type: type\n  }\n  return axios.post(\"todo/createtodo\", body);\n}\n\n//刪除某件待辦資訊\nexport function deleteTodo(index) {\n  return axios.delete(\"todo/deltodo/\" + index);\n}\n\n//取得全部資訊\nexport function getAllTodo() {\n  return axios.get(\"todo/getAlltodo\");\n}\n\n//取得某位病人資訊\nexport function getOneTodo(transinno, caseid) {\n  return axios.get(\"todo/getOnepatient/\" + transinno + \"/\" + caseid);\n}\n\n//----------------------------------------------\n// tpn-controller TPN Controller\n//----------------------------------------------\n//createTPN\nexport function createTPN(aa, ca, editTime, endTime, frequency, glu, hisid, k, mg, na, name, notice, p, startTime, state, tpn) {\n  const body = {\n    aa: aa,\n    ca: ca,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    glu: glu,\n    hisid: hisid,\n    k: k,\n    mg: mg,\n    na: na,\n    name: name,\n    notice: notice,\n    p: p,\n    startTime: startTime,\n    state: state,\n    tpn: tpn\n  }\n  return axios.post(\"tpn/createtpn\", body);\n}\n\n//getTPN\nexport function getAllTPN() {\n  return axios.get(\"tpn/getAlltpn\");\n}\n\n//----------------------------------------------\n// treatment-order-controller Treatment Order\n//----------------------------------------------\n//建立Treatment Order資訊\nexport function createTreatmentOrder(caseid, editTime, endTime, frequency, hisid, name, note, startTime, state) {\n  const body = {\n    caseid: caseid,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    startTime: startTime,\n    state: state\n  }\n  return axios.post(\"treatmentorder/createtreatmentorder\", body);\n}\n\n//取得全部資訊\nexport function getAllTreatmentOrder() {\n  return axios.get(\"treatmentorder/getAlltreatmentorder\");\n}\n\n//更新Treatment Order備註\nexport function updateTreatmentOrder(EditTime, caseid, editTime, endTime, frequency, hisid, name, note, startTime, state) {\n  const body = {\n    caseid: caseid,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    startTime: startTime,\n    state: state\n  }\n  return axios.put(\"treatmentorder/updatetonote/\" + EditTime, body);\n}\n\n//----------------------------------------------\n// ward-bed-information-history-controller 歷史病床資訊(Ward View)\n//----------------------------------------------\n//建立床位歷史資訊\nexport function createWardbedInformation(breath, hisid, nonBreath, onBedNumber, tpn, updateTime) {\n  const body = {\n    breath: breath,\n    hisid: hisid,\n    nonBreath: nonBreath,\n    onBedNumber: onBedNumber,\n    tpn: tpn,\n    updateTime: updateTime\n  }\n  return axios.post(\"wardbedinformation/createwardbedinformation\", body);\n}\n\n//取得全部資訊\nexport function getAllWardbedInformation() {\n  return axios.get(\"wardbedinformation/getAllwardbedinformation\");\n}\n\n//當日床位資訊\nexport function getOneWardbedInformation(date) {\n  return axios.get(\"wardbedinformation/getOnewardbedinformation/\" + date);\n}\n\n//近兩週床位資訊\nexport function getWeekWardbedInformation(date) {\n  return axios.get(\"wardbedinformation/getWeekswardbedinformation/\" + date);\n}\n\n//----------------------------------------------\n// ward-information-controller Ward Information Controller\n//----------------------------------------------\n//建立WardInformation資訊\nexport function createWardInformation(bednumber, caseid, hisid, indexId, today, transformintime, transformouttime) {\n  const body = {\n    bednumber: bednumber,\n    caseid: caseid,\n    hisid: hisid,\n    indexId: indexId,\n    today: today,\n    transformintime: transformintime,\n    transformouttime: transformouttime\n  }\n  return axios.post(\"wardinformation/createwardinformation\", body);\n}\n\n//取得全部資訊\nexport function getAllWardInformation() {\n  return axios.get(\"wardinformation/getAllwardinformation\");\n}\n\n//取得當日資訊\nexport function getOneWardInformation(date) {\n  return axios.get(\"wardinformation/getTodaywardinformation/\" + date);\n}\n\n//----------------------------------------------\n// ward-state-controller 病床狀態(Ward View)\n//----------------------------------------------\n//建立床位狀態資訊\nexport function createWardState(anti, breath, drain, foley, hd, hisid, npo, tpn) {\n  const body = {\n    anti: anti,\n    breath: breath,\n    drain: drain,\n    foley: foley,\n    hd: hd,\n    hisid: hisid,\n    npo: npo,\n    tpn: tpn\n  }\n  return axios.post(\"wardstate/createwardstate\", body);\n}\n\n//取得全部資訊\nexport function getAllWardState() {\n  return axios.get(\"wardstate/getAllwardstate\");\n}\n\n//取得某人床位狀態資訊\nexport function getOneWardState(hisid) {\n  return axios.get(\"wardstate/getOnewardstate/\" + hisid);\n}\n\n//----------------------------------------------\n// ward-value-controller 生命跡象(Ward/Patient View)\n//----------------------------------------------\n//建立生命跡象資訊\nexport function createWardValue(abpd, abpm, abps, bt, hr, nbpd, nbpm, nbps, phistnum, rr, spO2, time) {\n  const body = {\n    abpd: abpd,\n    abpm: abpm,\n    abps: abps,\n    bt: bt,\n    hr: hr,\n    nbpd: nbpd,\n    nbpm: nbpm,\n    nbps: nbps,\n    phistnum: phistnum,\n    rr: rr,\n    spO2: spO2,\n    time: time\n  }\n  return axios.post(\"wardvalue/createwardvalue\", body);\n}\n\nexport function getWardDebInfo(date) {\n  return axios.get(\"patient/getWardDebInfo/\" + date);\n}\n\nexport function getPatientwardvalueMedian(hisid, startTime, endTime) {\n  return axios.get(\"wardvalue/getPatientwardvalueMedian/\" + hisid + \"/\" + startTime + \"/\" + endTime);\n}\n\n\nexport function getPatientwardvalueBoxPlot(hisid, startTime, endTime, type, interval) {\n  return axios.get(\"wardvalue/getPatientwardvalueBoxPlot/\" + hisid + \"/\" + startTime + \"/\" + endTime + \"/\" + type + \"/\" + interval);\n}\n\nexport function getVitalSignData(hisid, startTime, endTime, type) {\n  return axios.get(\"wardvalue/getVitalSignData/\" + hisid + \"/\" + startTime + \"/\" + endTime + \"/\" + type);\n}\n\n//取得全部資訊\nexport function getAllWardValue() {\n  return axios.get(\"wardvalue/getAllwardvalue\");\n}\n\n//取得全部資訊\nexport function getHisidwardvalue(hisid) {\n  return axios.get(\"wardvalue/getHisidwardvalue/\" + hisid);\n}\n\n//取得某一段時間某一個人生命跡象(原始資料)\nexport function getPatientWardValue(endTime, hisid, startTime, interval, type) {\n  return axios.get(\"wardvalue/getPatientwardvalue/\" + hisid + \"/\" + startTime + \"/\" + endTime + \"/\" + type + \"/\" + interval);\n}\n\n//----------------------------------------------\n// water-volume-controller Water Volume Controller\n//----------------------------------------------\n//createWaterVolume\nexport function createWaterVolume(endTime, feed, hisid, iv, other, startTime, updateTime) {\n  const body = {\n    endTime: endTime,\n    feed: feed,\n    hisid: hisid,\n    iv: iv,\n    other: other,\n    startTime: startTime,\n    updateTime: updateTime\n  }\n  return axios.post(\"watervolume/createwatervolume\", body);\n}\n\n//取得全部資訊\nexport function getAllWaterVolume() {\n  return axios.get(\"watervolume/getAllwatervolume\");\n}\n","import axios from 'axios';\n\nconst githubApiUrl = \"https://raw.githubusercontent.com/gerrykiki/JsonRegObject/master/\";\n\n//create new instance of github API\nvar axiosGithub = axios.create({\n    baseURL: githubApiUrl,\n    timeout: 1000,\n    //headers: {'X-Custom-Header': 'foobar'}\n});\n\nexport function getGitHubJson(string) {\n    return axiosGithub.get(string);\n}\n\n// export function getExamReport() {\n//     return axios.get(\"ExamRepor.json\");\n// }\n\n","import React, { Component } from 'react';\nimport { wardstatestringformat } from '../Function/Wardstate'\nimport './Wardcardstatus.scss'\nimport * as ApiProvider from '../API/ApiProvider'\nimport * as ApiGithub from '../API/ApiGithub'\nimport moment from 'moment';\nimport * as RegularData from '../Data/RegularData'\n\nclass Wardcarstatus extends Component {\n    state = {\n        TRTMNTQ1: [],\n        UDORDER0: [],\n        FlagReg: []\n    }\n    componentDidMount() {\n        const { PCASENO, PHISTNUM } = this.props\n        console.log(PCASENO, PHISTNUM)\n        const TRQ1 = ApiProvider.getStoredProcedureTRTMNTQ1(PHISTNUM, PCASENO)\n            .then(data => {\n                console.log(data.data)\n                const rowList = data.data\n                const filterStatusList = rowList.filter(function (info, index, arr) {\n                    return Number(info.ORSTATUS) == 30\n                })\n                return filterStatusList\n            })\n            .catch(err => {\n\n            })\n        const UDORDER = ApiProvider.getStoredProcedureUDORDER0(PHISTNUM, PCASENO, \"123\")\n            .then(data => {\n                console.log(data.data)\n                var List = []\n                const dataList = data.data\n                if (Array.isArray(dataList)) {\n                    for (let index = 0; index < dataList.length; index++) {\n                        const status = Number(dataList[index].UDSTATUS)\n                        if (status === 80) {\n                            List.push(dataList[index])\n                        }\n                    }\n                }\n                return List\n            })\n            .catch(err => {\n\n            })\n        const Reg = ApiGithub.getGitHubJson(\"FlagReg.json\")\n            .then(data => {\n                console.log(data.data)\n                return data.data\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        Promise.all([TRQ1, UDORDER, Reg])\n            .then(result => {\n                this.setState({\n                    TRTMNTQ1: result[0],\n                    UDORDER0: result[1],\n                    FlagReg: result[2]\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    render() {\n        function RespiratorStatusParse(InvasiveRespiratorStatus, NonInvasiveRespiratorStatus) {\n            if (InvasiveRespiratorStatus === false && NonInvasiveRespiratorStatus === false) {\n                return \"false\"\n            }\n            if (InvasiveRespiratorStatus === true && NonInvasiveRespiratorStatus === true) {\n                return \"false\"\n            }\n            if (InvasiveRespiratorStatus === true) {\n                return '呼(侵入)'\n            }\n            if (NonInvasiveRespiratorStatus === true) {\n                return \"呼(非侵入)\"\n            }\n            return \"--\"\n        }\n\n        function parseFlagData(TRTMNTQ1, UDORDER, FlagReg, type) {\n            //filter  status 生效中\n            console.log(FlagReg)\n            if (FlagReg===undefined||FlagReg===null) {return null}\n            const Flag = FlagReg.filter(function (value, index, arr) {\n                return value.item === type\n            })\n            const StatusUDORDER = UDORDER.some(function (value, index, arr) {\n                const UDDRGNAM = value.UDDRGNAM.toLowerCase()\n                const UDGNAME = value.UDGNAME.toLowerCase()\n                const findFlag = Flag[0].ParseValueUD.some(function (value, index, arr) {\n                    return UDDRGNAM.indexOf(value) >= 0 || UDGNAME.indexOf(value)\n                })\n                return findFlag\n            })\n            const StatusTRTMNTQ1 = TRTMNTQ1.some(function (value, index, arr) {\n                const ORPROCED = value.ORPROCED.toLowerCase()\n                const findFlag = Flag[0].ParseValueTRT.some(function (value, index, arr) {\n                    return ORPROCED.match(value) !== null\n                })\n                return findFlag\n            })\n            if (StatusUDORDER === false && StatusTRTMNTQ1 === false) {\n                return false\n            }\n            return true\n        }\n\n        function statusspan(source) {\n            if (source.item === 'Respirator') {\n                return 'gridtwocoltwo'\n            }\n            else return 'gridtwocolone'\n        }\n        function style_change(source) {\n            if (source.item === 'Respirator') {\n                if (source.data === '呼(侵入)') {\n                    return 'statustrue'\n                }\n                if (source.data === '呼(非侵入)') {\n                    return 'statusfalse'\n                }\n                if (source.data === 'true') {\n                    return 'statustrue'\n                }\n                return 'statusfalse'\n\n            }\n            else {\n                if (source.data) {\n                    return 'statustrue'\n                }\n                else {\n                    return 'statusfalse'\n                }\n            }\n        }\n\n        const UDORDER = this.state.UDORDER0\n        const TRTMNTQ1 = this.state.TRTMNTQ1\n        const Flag = this.state.FlagReg\n        const AntiStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"Anti\")\n        const TPNStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"TPN\")\n        const NP0Status = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"NPO\")\n        const FoleyStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"Foley\")\n        const DrainStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"Drain\")\n        const InvasiveRespiratorStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"InvasiveRespirator\")\n        const NonInvasiveRespiratorStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"NonInvasiveRespirator\")\n        const RespiratorStatus = RespiratorStatusParse(InvasiveRespiratorStatus, NonInvasiveRespiratorStatus)\n\n        const StatusArray = [\n            { \"item\": \"Respirator\", \"data\": RespiratorStatus },\n            { \"item\": \"TPN\", \"data\": TPNStatus },\n            { \"item\": \"NPO\", \"data\": NP0Status },\n            { \"item\": \"Anti\", \"data\": AntiStatus },\n            { \"item\": \"Foley\", \"data\": FoleyStatus },\n            { \"item\": \"Drain\", \"data\": DrainStatus }\n        ]\n\n        const statuslist = StatusArray.map(function (info, index, arr) {\n            return (\n                <div key={index} className={statusspan(info)}>\n                    <t4 className={style_change(info)}>{wardstatestringformat(info)}</t4>\n                </div>\n            );\n        })\n        const source = this.props.source\n        return (\n            <div className={source ? \"warscardstatusgrid\" : \"wardinfouserstatusgrid\"}>\n                {statuslist}\n            </div >\n        );\n    }\n}\n\nexport default Wardcarstatus","import React, { useState, useEffect } from \"react\";\nimport { statecolor } from '../Function/Wardstate'\nimport Wardcarstatus from './Wardcardstatus'\nimport * as ApiProvider from '../API/ApiProvider'\nimport './Wardcardvalue.scss'\n\nexport function WardCard(props) {\n    const [CenterMonitorValue, SetCenterMonitorValue] = useState(null)\n    const [HID, SetHID] = useState(\"\")\n    const [Timer, SetTimer] = useState(0)\n    useEffect(() => {\n        const TimerID = setInterval(() => {\n            SetTimer(Timer + 1)\n        }, 5000)\n        return () => clearInterval(TimerID);\n    }, [Timer])\n\n    useEffect(() => {\n        const hisid = props.PHISTNUM.toString().trim()\n        // const hisid = \"TEST1234\"\n        ApiProvider.getHisidwardvalue(hisid)\n            .then(data => {\n                console.log(data.data)\n                const source = data.data\n                const HID = source.phistnum\n                SetCenterMonitorValue(source[0]);\n                SetHID(HID)\n            })\n            .catch(err => {\n                console.log(\"Andy test getHisidwardvalue NG \" + JSON.stringify(err));\n            });\n    }, [Timer]);\n    function InitCenterData(value) {\n        console.log(value)\n        if (value === undefined || value === null || value === \"\") {\n            return \"--\"\n        }\n        else return value\n    }\n    console.log(CenterMonitorValue)\n    if (CenterMonitorValue === null || CenterMonitorValue === undefined) {\n        return null\n    }\n    return (\n        <div className='Wardcardvaluelayout'>\n            <div className='Wardcardvitalvalue'>\n                <div className='valueRows'>\n                    <div>\n                        <t4 style={{ display: \"block\", color: statecolor('HR') }}>HR</t4>\n                        <t2 style={{ display: \"block\", color: statecolor('HR') }}>{InitCenterData(CenterMonitorValue.hr)}</t2>\n                    </div>\n                    <div>\n                        <t4 style={{ display: \"block\", color: statecolor('SpO2') }}>SpO<sub>2</sub></t4>\n                        <t2 style={{ display: \"block\", color: statecolor('SpO2') }}>{InitCenterData(CenterMonitorValue.spo2)}%</t2>\n                    </div>\n                </div>\n                <div className='valueRows'>\n                    <div>\n                        <t4 style={{ display: \"block\", color: statecolor('BP') }}>ABP</t4>\n                        <t2 style={{ display: \"block\", color: statecolor('BP') }}>{InitCenterData(CenterMonitorValue.abpd)}/{InitCenterData(CenterMonitorValue.abps)}({InitCenterData(CenterMonitorValue.abpm)})</t2>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnsGap: \"5px\" }}>\n                        <div>\n                            <t4 style={{ display: \"block\", color: statecolor('RR') }}>RR</t4>\n                            <t2 style={{ display: \"block\", color: statecolor('RR') }}>{InitCenterData(CenterMonitorValue.rr)}</t2>\n                        </div>\n                        <div>\n                            <t4 style={{ display: \"block\", color: statecolor('BT') }}>BT</t4>\n                            <t2 style={{ display: \"block\", color: statecolor('BT') }}>{InitCenterData(CenterMonitorValue.bt)}</t2>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Wardcarstatus source={true} PCASENO={props.PCASENO} PHISTNUM={props.PHISTNUM}></Wardcarstatus>\n        </div>\n    );\n}","function bednumberformat(number) {\n    if (number < 10) {\n        return '0' + number\n    }\n    return number\n}\n\nfunction gender(gender) {\n    if (gender === \"1\") {\n        return '男'\n    }\n    return '女'\n}\n\nfunction WardCardgender(gender) {\n    console.log(gender)\n    if (gender === \"M\") {\n        return '男'\n    }\n    return '女'\n}\n\nfunction pregancybirthdayweekday(pregancy, birthday) {\n    const pregancydays = (new Date(birthday).getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    const pregancyweeks = pregancydays / 7\n    const pregancyweeksdays = pregancydays % 7\n    return '[' + parseInt(pregancyweeks) + '+' + parseInt(pregancyweeksdays) + ']'\n}\n\nfunction pregancynowweek(pregancy) {\n    const pregancydays = (new Date().getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    console.log(pregancydays)\n    const pregancyweeks = pregancydays / 7\n    const pregancyweeksdays = pregancydays % 7\n    console.log(pregancyweeksdays)\n    return '[' + parseInt(pregancyweeks) + '+' + parseInt(pregancyweeksdays) + ']'\n}\n\nfunction pregancytoloaclweeks(pregancy) {\n    const pregancydays = (new Date().getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    console.log(pregancydays)\n    return parseInt(pregancydays / 7)\n}\n\nfunction pregancytolocaldays(pregancy) {\n    const pregancydays = (new Date().getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n\n    return parseInt(pregancydays % 7)\n}\n\nfunction pregancyweek(pregancy, birthday) {\n    const pregancydays = (new Date(birthday).getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    const pregancyweeks = pregancydays / 7\n    return parseInt(pregancyweeks)\n}\n\nfunction pregancydays(pregancy, birthday) {\n    const pregancydays = (new Date(birthday).getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    const pregancyweekdays = pregancydays % 7\n    return parseInt(pregancyweekdays)\n}\n\nfunction birthdayweeks(birthday) {\n    const birthdays = (new Date().getTime() - new Date(birthday).getTime()) / (24 * 60 * 60 * 1000)\n    return parseInt(birthdays / 7)\n}\n\nfunction pregancyweeksanddays(bornweeks, borndays, birthdays) {\n    if (bornweeks === null || bornweeks === undefined || bornweeks === \"\") {\n        return \"[ -- + -- ]\"\n    }\n    if (borndays === null || borndays === undefined || borndays === \"\") {\n        return \"[ -- + -- ]\"\n    }\n    if (birthdays === null || birthdays === undefined || birthdays === \"\") {\n        return \"[ -- + -- ]\"\n    }\n    const localtoborndays = parseInt((new Date().getTime() - new Date(birthdays).getTime()) / (24 * 60 * 60 * 1000)) + parseInt(borndays) + 1\n    const localweeks = parseInt(localtoborndays / 7) + parseInt(bornweeks)\n    const localdays = parseInt(localtoborndays % 7)\n    return \"[\" + localweeks + \"+\" + localdays + \"]\"\n\n}\n\nfunction WeightFormat(BornWeight, Weight) {\n    return BornWeight + \"g -> \" + Weight + \"g\"\n\n}\nexport { bednumberformat, gender, pregancybirthdayweekday, pregancynowweek, pregancyweek, pregancydays, birthdayweeks, pregancytoloaclweeks, pregancytolocaldays, pregancyweeksanddays, WardCardgender, WeightFormat }","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n//Component\nimport * as Wardstate from '../../Function/Wardstate'\nimport * as Wardcardvalue from '../WardCardvalue-k'\nimport { bednumberformat, WardCardgender, pregancyweeksanddays } from '../../Function/Wardbedfunction'\nimport './Wardcarddetail.scss'\n//image\nimport editlogo from '../../Image/svg/edit2.svg'\nimport fileLogo from '../../Image/svg/file1.svg'\nimport file2Logo from '../../Image/svg/file2.svg'\n//antdesign\nimport { Modal, Input, Button } from 'antd';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport X2JS from 'x2js';\nimport moment from 'moment';\n\nclass Wardcarddetail extends Component {\n    state = {\n        hoverstate: \"none\",\n        clickstate: false,\n        mouse_hover: false,\n        edit_hover: false,\n        visible: false,\n        pbasignfo: null,\n        birthdayweight: \"N\",\n        weight: 0,\n        bornweek: 0,\n        bornday: 0,\n        nowweight: 0,\n        report: 0,\n        nonreport: 0,\n        remark: \"\",\n        TRANSINID: \"\",\n        TRANSINDT: \"\",\n        TRANSINTM: \"\"\n    };\n\n    componentDidMount() {\n        this.API_DATA()\n    }\n\n    API_DATA() {\n        const { data } = this.props\n        const source = data\n        const HID = source.PHISTNUM\n        const TRANSINDT = source.TRANSINDT\n        const TRANSINID = source.TRANSINID\n        // const CID = source.PCASENO\n        const beforeOneDay = new Date().getTime() - (24 * 60 * 60 * 1000)\n        ApiProvider.getStoredProcedureRESSECT(HID, 1, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                const ReportList = data.data\n                const mapList = ReportList.filter(function (value, index, array) {\n                    const DTstring = value.ORRCPDT.toString()\n                    const TMstring = value.ORRCPTM.toString()\n                    const time = DTstring + TMstring\n                    return moment(time, 'YYYY-MM-DDHH:mm:ss').valueOf() > beforeOneDay\n                })\n                this.setState({\n                    report: mapList.length\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureRESSECT NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureORDLIST(HID, moment(TRANSINDT, \"YYYYMMDD\").format('YYYY-MM-DD'), \"ALL\", \"DOC3924B\")\n            .then(data => {\n                function datasize(datalist) {\n                    const list = []\n                    for (let index = 0; index < datalist.length; index++) {\n                        const element = datalist[index];\n                        if (element.ORSTATUS === \"31\") {\n                            list.push(element)\n                        }\n                    }\n                    return list.length\n                }\n                this.setState({\n                    nonreport: datasize(data.data)\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getOnePatientRemark(TRANSINID)\n            .then(data => {\n                this.setState({\n                    remark: data.data[0].context\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getOnePatientRemark NG \" + JSON.stringify(err));\n            })\n    }\n\n    //Module show\n    handleOk(string) {\n        this.setState({\n            visible: false\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n    showModal = () => {\n        this.setState({\n            visible: true\n        });\n    };\n\n    Modelrender() {\n        function typefrom(from) {\n            if (from === 'Custom') {\n                return true\n            }\n            return false\n        }\n        const { data } = this.props\n        const source = data\n        const Birthday = source.PBIRTHDT\n        const QTWER = Wardstate.XM2JSON(source.QTWPER)\n        const QMNC = Wardstate.XM2JSON(source.QMNC)\n        const BornWeight = Wardstate.BornWeight(QTWER, Birthday)\n        const BornWeeks = QMNC.weeks\n        const BornDays = QMNC.days\n        return (\n            <Modal\n                width={270}\n                title=\"填寫病床資訊\"\n                visible={this.state.visible}\n                onCancel={this.handleCancel}\n                footer={\n                    <div style={{ display: \"flex\", justifyContent: typefrom(source.type) ? 'space-between' : 'flex-end', alignItems: \"center\" }}>\n                        <Button key=\"delete\" style={typefrom(source.type) ? { border: \"1px solid rgba(208,2,27,1)\", color: \"rgba(208,2,27,1)\" } : { display: \"none\" }} onClick={this.handleCancel}>清床</Button>\n                        <div>\n                            <Button key=\"cancel\" onClick={this.handleCancel}>取消</Button>\n                            <Button key=\"ok\" type=\"primary\" onClick={this.handleOk}>儲存</Button>\n                        </div>\n                    </div>}>\n                <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr\", gridRowGap: \"10px\" }}>\n                    <div className='modulecontent'>\n                        <centerstyle>\n                            <t2>病床號碼:</t2>\n                        </centerstyle>\n                        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                            <div>{bednumberformat(parseInt(source.HBEDNO))}</div>\n                        </div>\n                    </div>\n                    <div className='modulecontent'>\n                        <centerstyle>\n                            <t2>病歷號碼:</t2>\n                        </centerstyle>\n                        <t2>{source.PHISTNUM}</t2>\n                    </div>\n                    <div className='modulecontent'>\n                        <centerstyle>\n                            <t2>出生週數:</t2>\n                        </centerstyle>\n                        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                            <div style={{ marginRight: \"20px\" }}>{BornWeeks}</div>\n                            <t2 style={{ marginRight: \"20px\" }}>週</t2>\n                            <div style={{ marginRight: \"20px\" }}>{BornDays}</div>\n                            <t2>日</t2>\n                        </div>\n                    </div>\n                    <div className='modulecontent'>\n                        <div style={{ display: 'flex', justifyContent: \"space-between\", alignItems: \"cneter\", width: \"69px\" }}>\n                            <t2>生</t2>\n                            <t2>日:</t2>\n                        </div>\n                        <t2>{moment(Birthday, 'YYYYMMDD').format('YYYY/MM/DD')}</t2>\n                    </div>\n                    <div className='modulecontent'>\n                        <centerstyle>\n                            <t2>出生體重:</t2>\n                        </centerstyle>\n                        <div style={{ display: 'flex' }}>\n                            <Input placeholder=\"1200\" id=\"weight\" defaultValue={BornWeight} />&nbsp;g\n                        </div>\n                    </div>\n                </div>\n            </Modal>\n        );\n    }\n    render() {\n        function modedisplay(mode) {\n            if (mode) {\n                return \"block\"\n            }\n            else {\n                return \"none\"\n            }\n        }\n        function valueFormat(value) {\n            if (value === \"\" || value === null || value === undefined) {\n                return \"--\"\n            }\n            return value.toString()\n        }\n        function valueBornWeight(value) {\n            if (value === \"\" || value === null || value === undefined || value === 0) {\n                return \"\"\n            }\n            return value.toString() + \"g → \"\n        }\n        const { data, previewmode, hbedlist } = this.props\n        const source = data\n        const Birthday = source.PBIRHDT\n        const QTWER = Wardstate.XM2JSON(source.QTWPER)\n        const QMNC = Wardstate.XM2JSON(source.QMNC)\n        // const QTWPER = source.QTWER\n        // const QMNC = source.QMNC\n        const BornWeight = Wardstate.BornWeight(QTWER, Birthday)\n        const Weight = Wardstate.NewestWeight(QTWER)\n        const BornWeeks = QMNC.weeks\n        const BornDays = QMNC.days\n        const remark = this.state.remark\n        if (source === undefined) {\n            return null\n        }\n        return (\n            <div>\n                <div className='wardcarddetailtitle'>\n                    <t3 style={{ color: \"rgba(61, 119, 181, 1)\" }}>{bednumberformat(Number(source.HBEDNO))},{source.PNAMEC.toString().trim()},{WardCardgender(source.PSEX)},{moment(Birthday, 'YYYYMMDD').format('YYYY/MM/DD')},{source.PHISTNUM}</t3>\n                    {/* <div onClick={this.showModal} className='wardcarddetileditbutton'>\n                        <img src={editlogo} alt='editlogo'></img>\n                    </div> */}\n                </div>\n                <div>\n                    <div className='wardinfoweeks'>\n                        <t2 style={{ color: \"rgba(59, 151, 225, 1)\" }}>[{valueFormat(BornWeeks)}+{valueFormat(BornDays)}]&rarr;{pregancyweeksanddays(BornWeeks, BornDays, moment(Birthday, 'YYYYMMDD').format('YYYY/MM/DD'))}</t2>\n                        <t4>{valueBornWeight(BornWeight)}{valueFormat(Weight)}g</t4>\n                        <div className='wardinforeportgroup'>\n                            <img src={fileLogo} alt='fileLogo'></img>\n                            <t4>{this.state.report}</t4>\n                            <img src={file2Logo} alt='file2Logo'></img>\n                            <t4>{this.state.nonreport}</t4>\n                        </div>\n                    </div>\n                    <div style={{ display: modedisplay(previewmode), borderBottomWidth: \"0.5px\", borderBottomColor: \"rgba(215, 238, 255, 1)\", borderBottomStyle: \"solid\" }}>\n                        <Wardcardvalue.WardCard centerdata={source.centerMonitorData} previewmode={previewmode} PHISTNUM={source.PHISTNUM} PCASENO={source.PCASENO}></Wardcardvalue.WardCard>\n                    </div>\n                    <div style={{ width: \"319px\", height: '30px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: \"0px 10px\", position: 'relative' }}>\n                        <div style={{ overflow: \"hidden\", fontSize: \"12px\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\" }}>{remark}</div>\n                        <Link className='patientviewbutton' to={{ pathname: \"/nicu/patient/\" + source.PHISTNUM, state: { \"source\": hbedlist, \"HISID\": source.PHISTNUM, \"CASEID\": source.PCASENO, \"BEDNUMBER\": source.HBEDNO, \"TYPE\": true, \"TRANSINID\": this.state.TRANSINID } }}>\n                            <centerstyle>\n                                <t4>進入病人資料頁面</t4>\n                            </centerstyle>\n                        </Link>\n                    </div>\n                </div>\n                {this.Modelrender()}\n            </div>\n        );\n    }\n}\n\nexport default Wardcarddetail;","import React, { Component } from 'react';\nimport { format_bednumber } from '../../Commonfunction'\nimport editlogo from '../../Image/svg/edit2.svg'\nimport { Modal, Input, DatePicker } from 'antd';\nimport './UnpreviewWardCardDetail.scss'\nimport { bednumberformat } from '../../Function/Wardbedfunction'\n\nclass Unpreviewwardcarddetail extends Component {\n    state = { visible: false, powerLogin: 0 };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n            databool: false,\n            data: null\n        });\n    };\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n\n    handleOk(string) {\n        console.log(string);\n\n        const bednumber = document.getElementById(\"bednumber\").value;\n        const hisnumber = document.getElementById(\"hisid\").value;\n        const birweek = document.getElementById(\"birweek\").value;\n        const birthday = string;\n        const weight = document.getElementById(\"weight\").value;\n        const statedata = {\n            \"BedNumber\": bednumber,\n            \"id\": hisnumber,\n            \"birweek\": birweek,\n            \"birthday\": birthday,\n            \"weight\": weight\n        }\n        console.log(statedata)\n        this.setState({\n            visible: false,\n            data: statedata,\n            databool: false\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    savestatus(string) {\n        console.log(string)\n    }\n\n    render() {\n        function modedisplay(mode) {\n            if (mode) {\n                return \"none\"\n            }\n            else {\n                return \"block\"\n            }\n        }\n        const number = this.props.bednumber\n        const { previewmode } = this.props\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div style={{ height: '40px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', backgroundColor: \"rgba(215, 238, 255, 1)\", padding: \"9px 10px\" }}>\n                    <t3 style={{ color: \"rgba(61, 119, 181, 1)\" }}>{format_bednumber(number)}/--</t3>\n                    <div className='wardcardeditbtn' onClick={this.showModal} style={{ display: this.state.powerLogin >= 2 ? \"flex\" : \"none\" }}>\n                        <img src={editlogo} alt='editlogo'></img>\n                    </div>\n                    <Modal\n                        width={270}\n                        title=\"填寫病床資訊\"\n                        visible={this.state.visible}\n                        onOk={() => this.handleOk(\"2019/12/12\")}\n                        onCancel={this.handleCancel}\n                    >\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr\", gridRowGap: \"10px\" }}>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>病床號碼:</t2>\n                                </centerstyle>\n                                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                    <div>{bednumberformat(number)}</div>\n                                </div>\n                            </div>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>病歷號碼:</t2>\n                                </centerstyle>\n                                <Input id=\"hisid_wardcard\" />\n                            </div>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>出生週數:</t2>\n                                </centerstyle>\n                                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                    <Input id='week' placeholder=\"20\" style={{ marginRight: \"5px\" }}></Input>\n                                    <t2 style={{ marginRight: \"5px\" }}>週</t2>\n                                    <Input id='days' placeholder=\"20\" style={{ marginRight: \"5px\" }}></Input>\n                                    <t2>日</t2>\n                                </div>\n                            </div>\n                            <div className='modulecontent'>\n                                <div style={{ display: 'flex', justifyContent: \"space-between\", alignItems: \"cneter\", width: \"69px\" }}>\n                                    <t2>生</t2>\n                                    <t2>日:</t2>\n                                </div>\n                                <DatePicker placeholder=\"選擇日期\" id=\"birthday\" />\n                            </div>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>出生體重:</t2>\n                                </centerstyle>\n                                <div style={{ display: 'flex' }}><Input placeholder=\"120\" id=\"weight\" />&nbsp;g</div>\n                            </div>\n                        </div>\n                    </Modal>\n                </div>\n                <div style={{ height: '30px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: \"10px\" }}>\n                    <div style={{ fontSize: '14px', color: \"black\" }}>\n                        \"無資料\"\n                    </div>\n                </div>\n                <div style={{ display: modedisplay(previewmode) }}>\n                    <div style={{ height: '30px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: \"10px\" }}></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Unpreviewwardcarddetail;","\nconst Month_format = (time) => {\n    switch (time) {\n        case 0:\n            return \"1\";\n        case 1:\n            return \"2\";\n        case 2:\n            return \"3\";\n        case 3:\n            return \"4\";\n        case 4:\n            return \"5\";\n        case 5:\n            return \"6\";\n        case 6:\n            return \"7\";\n        case 7:\n            return \"8\";\n        case 8:\n            return \"9\";\n        case 9:\n            return \"10\";\n        case 10:\n            return \"11\";\n        case 11:\n            return \"12\";\n        default:\n            return null;\n    }\n};\nconst format_bednumber = (number) => {\n    if (number < 10) {\n        return \"0\" + number;\n    }\n    return number;\n}\n\nexport { Month_format, format_bednumber }\n","import React, { Component } from 'react';\nimport { Input, Button } from 'antd';\nimport editlogo from '../Image/svg/Edit.svg'\nimport './Wardnote.scss'\nimport deleteimg from '../Image/svg/delete.svg'\nimport detail from '../Image/svg/details.svg'\nimport { Tooltip } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider';\nimport moment from 'moment'\n\nclass WardcardNote extends Component {\n    _isMounted = false;\n    state = {\n        editstate: false,\n        AnnoceRawData: [],\n        AnnoceDisplayData: [],\n        inputContent: undefined,\n        powerLogin: 0\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n    componentDidMount() {\n        this.onInputChange = this.onInputChange.bind(this);\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.queryAllAnnounce();\n    }\n    queryAllAnnounce() {\n        ApiProvider.getAllAnnounce()\n            .then(result => {\n                console.log(\"getAllAnnounce OK \" + JSON.stringify(result));\n                this.setState({\n                    AnnoceRawData: result.data,\n                    AnnoceDisplayData: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getAllAnnounce NG \" + JSON.stringify(err));\n            });\n    }\n    canceledit() {\n        //取消前先拿取server資料\n        this._isMounted = true\n        this.setState({\n            editstate: false,\n            AnnoceDisplayData: JSON.parse(JSON.stringify(this.state.AnnoceRawData))\n        });\n    }\n\n    okeditlist() {\n        //確定上傳\n        this.setState({\n            editstate: false\n        });\n        ApiProvider.createAnnounce(this.state.AnnoceDisplayData)\n            .then(result => {\n                console.log(\"createAnnounce OK \" + JSON.stringify(result));\n                this.queryAllAnnounce();\n            })\n            .catch(err => {\n                console.log(\"createAnnounce NG \" + JSON.stringify(err));\n            });\n    }\n\n    editlist() {\n        this.setState({\n            editstate: !this.state.editstate,\n            AnnoceDisplayData: (this.state.editstate) ? JSON.parse(JSON.stringify(this.state.AnnoceDisplayData)) : JSON.parse(JSON.stringify(this.state.AnnoceRawData))\n        });\n    }\n\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n\n    AddNewannouce() {\n        const announce = this.state.AnnoceDisplayData;\n\n        const doc = sessionStorage.getItem('user')\n        const newAnnounce = {\n            context: this.state.inputContent,\n            time: +(new Date()),\n            editor: doc + \"醫生\",\n            transinno: doc + moment().format(\"YYYYMMDDHHmmss\").toString()\n        }\n        announce.push(newAnnounce)\n        this.setState({\n            AnnoceDisplayData: announce,\n            inputContent: undefined\n        });\n    }\n\n    ondeleteannounce(element) {\n        const announce = this.state.AnnoceDisplayData;\n        const index = announce.findIndex(item => item === element);\n        announce.splice(index, 1);\n        this.setState({\n            AnnoceDisplayData: announce\n        });\n    }\n    announcelist(announcelist, status) {\n        var list = []\n        if (announcelist === null || announcelist.length === 0) {\n            list.push(\n                <div className='announcelistcontext'>無公告</div>\n            )\n        }\n        for (let index = 0; index < announcelist.length; index++) {\n            const element = announcelist[index];\n            list.push(\n                <div className='announcelistcontext'>\n                    <t2>{index + 1}.{element.context}</t2>\n                    {this.editstatus(element, status)}\n                </div>\n            )\n        }\n        return list\n    }\n    editstatus(element, status) {\n        console.log(element)\n        const time = moment(element.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n        const localTime = moment.utc(time).toDate()\n        const string = element.editor + '醫師於' + moment(localTime).format(\"MM/DD HH:mm\") + '更新'\n        if (status) {\n            return (\n                <img src={deleteimg} alt='deletelogo' onClick={() => this.ondeleteannounce(element)}></img>\n            );\n        }\n        return (\n            <Tooltip placement=\"top\" title={string}>\n                <img src={detail} alt='detaillogo'></img>\n            </Tooltip>\n        );\n    }\n    render() {\n\n        function changehight(state) {\n            if (!state) {\n                return 'wardnotecontextdisedit'\n            }\n            else {\n                return 'wardnotecontextonedit'\n\n            }\n        }\n        const annData = this.state.AnnoceDisplayData\n        return (\n            <div style={{ marginTop: '10px' }}>\n                <div className='wardnotetitle'>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>病房公告</t2>\n                    <div style={{ width: \"18px\" }} onMouseUp={() => this.editlist()} style={{ display: this.state.powerLogin >= 2 ? \"flex\" : \"none\" }}>\n                        <img src={editlogo} alt='editlogo'></img>\n                    </div>\n                </div>\n                <div>\n                    <div className={changehight(this.state.editstate)}>\n                        {this.announcelist(annData, this.state.editstate)}\n                    </div>\n                    <div style={{ display: this.state.editstate ? \"block\" : \"none\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"c\" }}>\n                        <div style={{ height: \"50px\", backgroundColor: \"rgba(238,238,238,1)\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                            <Input placeholder=\"新增公告內容\" style={{ marginLeft: \"16px\", width: \"315px\" }} value={this.state.inputContent} onChange={this.onInputChange} />\n                            <Button type=\"primary\" style={{ marginRight: \"16px\" }} onClick={() => this.AddNewannouce()}>\n                                新增\n                            </Button>\n                        </div>\n                        <div style={{ height: \"50px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <Button style={{ margin: \"10px\", width: \"90px\" }} onClick={() => this.canceledit()}>取消</Button>\n                            <Button type=\"primary\" style={{ margin: \"10px\", width: \"90px\" }} onClick={() => this.okeditlist()}>儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WardcardNote;\n","import React, { Component } from 'react';\nimport { Month_format } from '../Commonfunction'\n\nclass Bedinformation extends Component {\n    state = {\n        tableselect: false\n    }\n\n    SelectTruechange() {\n        this.setState({\n            tableselect: true\n        })\n    }\n\n    SelectFalsechange() {\n        this.setState({\n            tableselect: false\n        })\n    }\n\n    sendReturnSelect = (id) => {\n        console.log(id)\n        this.props.parentCallback(id);\n    }\n\n    Selectswitch(id, select) {\n        console.log(id, select)\n        if (id === select) {\n            return true\n        }\n        else return false\n    }\n    render() {\n        function weekdatformat(weekday) {\n            switch (weekday) {\n                case 0:\n                    return \"日\"\n                case 1:\n                    return \"一\"\n                case 2:\n                    return \"二\"\n                case 3:\n                    return \"三\"\n                case 4:\n                    return \"四\"\n                case 5:\n                    return \"五\"\n                case 6:\n                    return \"六\"\n                default:\n                    return null\n            }\n        }\n        const { selectkey, idkey, localtime, data } = this.props\n        const day = Month_format(new Date(localtime).getMonth()) + \"/\" + new Date(localtime).getDate()\n        const weekday = new Date(localtime).getDay()\n        const Unselect_tablestyle = { height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"1px solid rgba(238,238,238,1)\", borderLeftWidth: \"0px\" }\n        const select = this.Selectswitch(idkey,selectkey)\n        console.log(select)\n        if (data === null) {\n            return (\n                <div style={select ? { border: \"1px solid rgba(59, 151, 225, 1)\", backgroundColor: \"#ffe1c499\", marginTop: '-2px' } : { cursor: \"pointer\" }} onMouseUp={() => this.sendReturnSelect({ \"idkey\": idkey, \"time\": localtime })}>\n                    <div style={Unselect_tablestyle}>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                            <t2 style={{ textAlign: \"center\" }}>{day}</t2>\n                            <t2 style={{ textAlign: \"center\" }}>{weekdatformat(weekday)}</t2>\n                        </div>\n                    </div>\n                    <div style={Unselect_tablestyle}>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                            <t2 style={{ textAlign: \"center\" }}>0(12)</t2>\n                            <t2 style={{ textAlign: \"center\" }}>0%</t2>\n                        </div>\n                    </div>\n                    <t2 style={Unselect_tablestyle}>0</t2>\n                    <t2 style={Unselect_tablestyle}>0</t2>\n                    <t2 style={Unselect_tablestyle}>0</t2>\n                    <t2 style={Unselect_tablestyle}>0</t2>\n                    <t2 style={Unselect_tablestyle}>0</t2>\n                </div>\n            );\n\n        }\n        return (\n            <div style={select ? { border: \"1px solid rgba(59, 151, 225, 1)\", backgroundColor: \"#ffe1c499\", marginTop: '-2px' } : { cursor: \"pointer\" }} onMouseUp={() => this.sendReturnSelect({ \"idkey\": idkey, \"time\": localtime })}>\n                <div style={Unselect_tablestyle}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                        <t2 style={{ textAlign: \"center\" }}>{day}</t2>\n                        <t2 style={{ textAlign: \"center\" }}>{weekdatformat(weekday)}</t2>\n                    </div>\n                </div>\n                <div style={Unselect_tablestyle}>\n                    <div style={{ display: \"grid\" }}>\n                        <t2 style={{ textAlign: \"center\" }}>{data.hbedcount}({parseInt(parseInt(data.hbedcount) * 100 / 12)}%)</t2>\n                    </div>\n                </div>\n                <t2 style={Unselect_tablestyle}>{data.transoutcount}</t2>\n                <t2 style={Unselect_tablestyle}>{data.transincount}</t2>\n                <t2 style={Unselect_tablestyle}>{data.rtcount}</t2>\n                <t2 style={Unselect_tablestyle}>{data.nonrtcount}</t2>\n                <t2 style={Unselect_tablestyle}>{data.tpncount}</t2>\n            </div>\n        );\n    }\n}\n\nexport default Bedinformation\n","import moment from 'moment';\n\nfunction HISAPI_stringtodate(datestring) {\n    function addzero(value){\n        if (value < 10) {\n            return \"0\"+value\n        }\n        return value\n    }\n    console.log(datestring)\n    const datenumber = Number(datestring)\n    console.log(datenumber)\n    const dateformat = parseInt(datenumber / 10000) + '-' + parseInt(parseInt(datenumber / 100) % 100) + '-' + addzero(parseInt(datenumber % 100))\n    // console.log(\"dateformat = \" + dateformat)\n    return dateformat\n}\n\nfunction yyyymmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + \"/\" + Monthformat(new Date(timestamp).getMonth()) + \"/\" + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction yyyymmddstring(timestamp){\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + Monthformat(new Date(timestamp).getMonth()) + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction yyyymmfirstweeksate(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    return new Date(timestamp).getFullYear() + \"/\" + Monthformat(new Date(timestamp).getMonth()) + \"/1\"\n}\n\n\n\nfunction mmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return Monthformat(new Date(timestamp).getMonth()) + '/' + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction weekdateformat(timestamp) {\n    const param = new Date(timestamp).getDay()\n    const weekarray = ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六']\n    return weekarray[param]\n}\n\nfunction weekdateformatcalender(timestamp) {\n    const param = new Date(timestamp).getDay()\n    const weekarray = ['日', '一', '二', '三', '四', '五', '六']\n    return weekarray[param]\n}\n\nfunction hhmmssformat(timestamp) {\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return addZero(new Date(timestamp).getHours()) + ':' + addZero(new Date(timestamp).getMinutes())\n}\n\nfunction hhmmssformattohalf(timestamp) {\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return addZero(new Date(timestamp).getHours()) + ':30:00'\n}\n\n\nfunction yyyymmddHHmmfromat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return new Date(timestamp).getFullYear().toString() + Monthformat(new Date(timestamp).getMonth()).toString() + Dateformat(new Date(timestamp).getDate()).toString() + addZero(new Date(timestamp).getHours()).toString() + addZero(new Date(timestamp).getMinutes()).toString()\n}\n\nfunction MMDDhhmmfromat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return Monthformat(new Date(timestamp).getMonth()) + '/' + Dateformat(new Date(timestamp).getDate()) + ' ' + addZero(new Date(timestamp).getHours()) + ':' + addZero(new Date(timestamp).getMinutes())\n}\n\n\nfunction daysdiff(newtime, oldtime) {\n    const timestampdiff = new Date(newtime).getTime() - new Date(oldtime).getTime()\n    const dissdays = timestampdiff / (24 * 60 * 60 * 1000)\n    return parseInt(dissdays)\n}\n\n\nfunction disabledDate(current) {\n    // Can not select days before today and today\n    console.log(current)\n    return current && current < moment().endOf('day');\n}\n\nfunction compareday(date) {\n    console.log(new Date(date).getTime(), new Date().getTime())\n    if (new Date(date).getTime() > new Date().getTime()) {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunction formatxArrayhalf(time, interval) {\n    var xAxisarray = []\n    if (interval === 24) {\n        for (let index = 0; index < 144; index++) {\n            xAxisarray.push(time + (index * 10 * 60 * 1000))\n        }\n    }\n    if (interval === 18) {\n        for (let index = 0; index < 18; index++) {\n            xAxisarray.push(time + (60 * 60 * 1000 * 2) + (index * 60 * 60 * 1000 * 4))\n        }\n    }\n\n    if (interval === 21) {\n        for (let index = 0; index < 21; index++) {\n            xAxisarray.push(time + (60 * 60 * 1000 * 4) + (index * 60 * 60 * 1000 * 8))\n        }\n    }\n    if (interval === 14) {\n        for (let index = 0; index < 14; index++) {\n            xAxisarray.push(time + (60 * 60 * 1000 * 12) + (index * 60 * 60 * 1000 * 24))\n        }\n    }\n    return xAxisarray\n}\n\n\nfunction formatendtime(time) {\n    const endtime = new Date(yyyymmddformat(time)).getTime() + (31 * 60 * 60 * 1000)\n    return endtime\n}\n\nfunction formatintervaldays(days, interval) {\n    //false:一天 true:三天\n    if (interval === 1) {\n        return days - (24 * 60 * 60 * 1000) * 1\n\n    }\n    if (interval === 3) {\n        return days - (24 * 60 * 60 * 1000) * 3\n\n    }\n    else {\n        return null\n    }\n}\n\nfunction datestringformat(datestring) {\n    function addzero(value){\n        if (value < 10) {\n            return \"0\"+value\n        }\n        return value\n    }\n    const datenumber = Number(datestring)\n    const dateformat = parseInt(datenumber / 10000) + '/' + parseInt(parseInt(datenumber / 100) % 100) + '/' + addzero(parseInt(datenumber % 100))\n    // console.log(\"dateformat = \" + dateformat)\n    return dateformat\n}\n\nfunction apiyyyymmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + \"-\" + Monthformat(new Date(timestamp).getMonth()) + \"-\" + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction nisapiyyyymmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + Monthformat(new Date(timestamp).getMonth()) + Dateformat(new Date(timestamp).getDate())\n}\nexport {\n    yyyymmddformat,\n    weekdateformat,\n    hhmmssformat,\n    mmddformat,\n    MMDDhhmmfromat,\n    daysdiff,\n    disabledDate,\n    compareday,\n    weekdateformatcalender,\n    yyyymmfirstweeksate,\n    hhmmssformattohalf,\n    formatxArrayhalf,\n    formatendtime,\n    formatintervaldays,\n    datestringformat,\n    yyyymmddHHmmfromat,\n    yyyymmddstring,\n    apiyyyymmddformat,\n    nisapiyyyymmddformat,\n    HISAPI_stringtodate\n}","import React, { Component } from 'react';\nimport Bedinformation from './Bedinfo'\nimport { DatePicker } from 'antd';\nimport moment from 'moment';\nimport * as apiProvide from '../API/ApiProvider'\nimport { yyyymmddformat } from '../Function/Timeformat'\nimport './WardBedinformation.scss'\n\nclass Wardbedinformation extends Component {\n    state = {\n        subselectdate: null,\n        selectid: null,\n        PickerDate: moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf(),\n        bedinfo: []\n    }\n    componentDidMount() {\n        this.apiData(this.state.PickerDate)\n    }\n    apiData(PickerDate) {\n        apiProvide.getWardDebInfo(moment(PickerDate).format(\"YYYY-MM-DD\"))\n            .then(data => { this.setState({ bedinfo: data.data }) })\n            .catch(err => { console.log(err) })\n    }\n    onChangeDate = (date, datestring) => {\n        this.setState({\n            PickerDate: date.valueOf(),\n            selectid: null\n        })\n        this.apiData(this.state.PickerDate)\n    }\n    callbackFunction = (idnumber) => {\n        console.log(idnumber)\n        this.setState({\n            selectid: idnumber.idkey,\n            subselectdate: idnumber.time\n        })\n    }\n    transferListlayout(trans) {\n        var translist = []\n        for (let index = 0; index < trans.length; index++) {\n            const element = trans[index];\n            translist.push(\n                <div className='wardbedinfoitemcontextgridRow'>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>{element.caseid}</t2>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>{element.pnamec}</t2>\n                </div>\n            )\n        }\n        return translist\n    }\n    infoitem() {\n        const selectDateitem = this.state.subselectdate\n        const bedinfo = this.state.bedinfo\n        const filterdate = bedinfo.filter(function (info, index) {\n            const tempDate = moment(info.Date, 'YYYYMMDD')\n            return yyyymmddformat(tempDate) === yyyymmddformat(selectDateitem)\n        })\n        console.log(filterdate)\n\n        if (this.state.selectid === null) {\n            return null\n        }\n        else {\n            const inType = filterdate.length === 0 ? 0 : filterdate[0].transoutIncountperson.length\n            const outType = filterdate.length === 0 ? 0 : filterdate[0].transoutOutcountperson.length\n\n            const transIn = filterdate.length === 0 ? 0 : filterdate[0].transoutIncountperson\n            const transOut = filterdate.length === 0 ? 0 : filterdate[0].transoutOutcountperson\n            return (\n                <div>\n                    <div className='wardbedinfoitemtriangle'>\n                        <div className='triangle'></div>\n                    </div>\n                    <div className='wardbedinfoitemcontext'>\n                        <div className='wardbedinfoitemcontextgrid'>\n                            <div>\n                                <t2 className='wardbedinfoitemcontexttitle'>轉入病人清單</t2>\n                                <div className='wardbedinfoitemcontextgridlayout'>\n                                    {inType ? <div className='nopatient'>無病人</div> :\n                                        <div className='wardbedinfoitemcontextgridRow'>\n                                            <t2 className='wardbedinfoitemcontextgridRowStyle'>病歷號碼</t2>\n                                            <t2 className='wardbedinfoitemcontextgridRowStyle'>姓名</t2>\n                                        </div>}\n                                    {inType || this.transferListlayout(transIn)}\n                                </div>\n                            </div>\n                            <div>\n                                <t2 className='wardbedinfoitemcontexttitle'>轉出病人清單</t2>\n                                <div className='wardbedinfoitemcontextgridlayout'>\n                                    {outType ? <div className='nopatient'>無病人</div> :\n                                        <div className='wardbedinfoitemcontextgridRow'>\n                                            <t2 className='wardbedinfoitemcontextgridRowStyle'>病歷號碼</t2>\n                                            <t2 className='wardbedinfoitemcontextgridRowStyle'>姓名</t2>\n                                        </div>}\n                                    {outType || this.transferListlayout(transOut)}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n            // }\n        }\n\n    }\n    bedinfotitle() {\n        const maparray = ['日期', '佔床數', '轉出', '轉入', '侵入式呼吸器', '非侵入式呼吸器', '開立PN']\n        const title = maparray.map(function (info, index) {\n            return (\n                <div className='wardbedinfotablerowtitle'>\n                    <t2>{info}</t2>\n                </div>\n            );\n        })\n        return title\n    }\n    weekbedinfo() {\n        var infolist = []\n        const infoList = this.state.bedinfo\n        const dateTime = this.state.PickerDate\n        console.log(infoList)\n        for (let i = 0; i < 7; i++) {\n            const localtime = dateTime - (i * 24 * 60 * 60 * 1000);\n            const filterdate = infoList.filter(function (info, index) {\n                const tempDate = moment(info.Date, 'YYYYMMDD').valueOf()\n                return tempDate === localtime\n            })\n            if (filterdate.length === 0) {\n                infolist.push(\n                    <div onClick={() => { console.log(i) }}>\n                        <Bedinformation data={null} key={i} localtime={localtime} selectkey={this.state.selectid} idkey={i} parentCallback={this.callbackFunction}></Bedinformation>\n                    </div>\n                )\n            }\n            else {\n                infolist.push(\n                    <div onClick={() => { console.log(i) }}>\n                        <Bedinformation data={filterdate[0]} key={i} localtime={localtime} selectkey={this.state.selectid} idkey={i} parentCallback={this.callbackFunction}></Bedinformation>\n                    </div>\n                )\n            }\n        }\n        infolist.reverse()\n        return infolist\n\n    }\n    render() {\n        function disabledDate(current) {\n            // Can not select days before today and today\n            return current && current > moment().endOf('day');\n        }\n        return (\n            <div style={{ marginTop: \"10px\" }}>\n                <div className='wardbrdinfomationtitle'>\n                    <centerstyle>\n                        <t2 style={{ fontSize: \"16px\", color: \"rgba(0, 0, 0, .7)\" }}>病房每日統計</t2>\n                        <t2 style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"rgba(0, 0, 0, .7)\", paddingLeft: \"10px\" }}>每日上午七點統計</t2>\n                    </centerstyle>\n                    <div>\n                        <DatePicker showToday={true} disabledDate={(current) => { return current && current > moment().startOf('day') }} defaultValue={moment(this.state.PickerDate)} format={\"YYYY/MM/DD\"} onChange={this.onChangeDate} allowClear={false} />\n                    </div>\n                </div>\n                <div className='wardbedinformationcontext'>\n                    <div>\n                        {this.bedinfotitle()}\n                    </div>\n                    {this.weekbedinfo()}\n                </div>\n                {this.infoitem()}\n            </div>\n        );\n    }\n}\n\nexport default Wardbedinformation;\n","import React, { Component } from 'react';\nimport detaillogo from '../Image/svg/details.svg'\nimport editlogo from '../Image/svg/Edit.svg'\nimport { Tooltip, Input, Button, Select } from 'antd';\nimport './Schedule_event.scss'\nimport { yyyymmddformat, hhmmssformat } from '../Function/Timeformat'\nimport * as ApiProvider from '../API/ApiProvider';\n//資料\n// import { eventdata } from '../jsonResponse'\nimport { eventData } from '../Data/Wardviewdata-jack'\nimport moment from 'moment';\n\nclass Schedule_event_list extends Component {\n    state = {\n        detailstate: \"none\",\n        // pressitemstate: \"all\",\n        items_interval: 0,\n        powerLogin: 0,\n        EditMode: false,\n        inputContent: '',\n        selSchedule: '排程',\n\n        Scheduledata: [],\n        status: false,\n        PickerDate: moment().valueOf(),\n        TRANSINID: null\n    }\n\n    querySchedule(time, ID) {\n        const st = moment(moment(time).format(\"YYYY/MM/DD\"), \"YYYY/MM/DD\").valueOf()\n        const et = moment(moment(time).format(\"YYYY/MM/DD\"), \"YYYY/MM/DD\").valueOf() + (24 * 60 * 60 * 1000)\n        console.log(ID, st, et)\n        ApiProvider.getOnePatientSchedule(ID, st, et)\n            .then(data => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n                this.setState({ Scheduledata: data.data })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }\n\n    queryALLSchedule() {\n        ApiProvider.getAllSchedule()\n            .then(data => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n                this.setState({ Scheduledata: data.data })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }\n    componentDidMount() {\n        this.onInputChange = this.onInputChange.bind(this);\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        const source = this.props.source\n        if (source === 1) {\n            const ID = this.props.caseinfo.TRANSINID\n            const date = this.props.PickerDate\n            console.log(this.props.caseinfo)\n            if (ID === null) {\n\n            }\n            else {\n                this.setState({\n                    PickerDate: date,\n                    TRANSINID: ID\n                })\n                this.querySchedule(date, ID)\n            }\n        }\n        else {\n            //get ALL\n            this.queryALLSchedule()\n        }\n\n    }\n\n    componentDidUpdate() {\n        const source = this.props.source\n        if (this.state.status) {\n            this.setState({ status: false })\n            if (source === 1) {\n                const ID = this.props.caseinfo.TRANSINID\n                this.querySchedule(this.state.PickerDate, ID)\n            }\n            else {\n                //get ALL\n                this.queryALLSchedule()\n            }\n        }\n        const propsDate = this.props.PickerDate\n        const stateDate = this.state.PickerDate\n        if (propsDate !== stateDate) {\n            this.setState({ PickerDate: propsDate })\n            if (source === 1) {\n                const ID = this.props.caseinfo.TRANSINID\n                console.log(moment(propsDate).format(\"YYYYMMDDHHmmss\"))\n                console.log(moment(stateDate).format(\"YYYYMMDDHHmmss\"))\n                this.querySchedule(propsDate, ID)\n            }\n            else {\n                //get ALL\n            }\n        }\n    }\n    selSchedule(value) {\n        this.setState({ selSchedule: value })\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString()\n        const writter = sessionStorage.getItem(\"user\")\n        const name = this.props.caseinfo.PBASINGNINFO.PNAMEC\n        const hisid = this.props.caseinfo.HISID\n        ApiProvider.createPatientSchedule(this.props.caseinfo.PLOCSTART.HBEDNO, this.state.inputContent, timeNowStr, this.props.caseinfo.TRANSINID, this.state.selSchedule, writter, name, hisid)\n            .then(data => {\n                console.log(\" OK \" + JSON.stringify(data.data))\n                this.setState(\n                    {\n                        EditMode: false,\n                        inputContent: undefined,\n                        status: true\n                    })\n            })\n            .catch(err => {\n                console.log(\" Err \" + JSON.stringify(err))\n            })\n    }\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    timechange(timestamp) {\n        const changetime = new Date(timestamp).getHours() + \":\" + new Date(timestamp).getMinutes()\n        return changetime\n    }\n\n    // pressbtn(pressitem) {\n    //     this.setState(\n    //         {\n    //             pressitemstate: pressitem\n    //         }\n    //     );\n    // }\n    listevent() {\n        // var eventdatalist = eventdata\n        const scheduleData = this.props.data;\n        console.log(scheduleData)\n\n\n        function itemchange(changeitem) {\n            switch (changeitem) {\n                case \"事件\":\n                    return \"事\"\n                case \"排程\":\n                    return \"排\"\n                default:\n                    return \"\"\n            }\n        }\n\n        function checkbackground(string) {\n            switch (string) {\n                case \"排程\":\n                    return \"rgba(124,179,5,1)\"\n                case \"事件\":\n                    return \"rgba(124,179,5,1)\"\n                default:\n                    return \"rgba(124,179,5,1)\"\n            }\n        }\n        // function scheduleList(BtnType) {\n        //     if (BtnType === \"all\") {\n        //         return ScheduleList\n        //     }\n        //     const scheduleListFilter = ScheduleList.filter(function (info, index, arr) {\n        //         return info.type === BtnType\n        //     })\n        //     return scheduleListFilter\n        // }\n        // const eventstate = this.state.pressitemstate\n        const ScheduleList = this.state.Scheduledata\n        // const patientdata = this.props.caseinfo\n        // console.log(this.props)\n        if (ScheduleList.length === 0) {\n            return (<div>本日無排程</div>);\n        }\n        // const RenderData = scheduleList(eventstate)\n        const CellRender = ScheduleList.map(function (info, index, arr) {\n            const time = moment(info.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n            const localTime = moment.utc(time).toDate()\n            const text = <div>{info.writter}醫師於{moment(localTime).format(\"YYYY/MM/DD HH:mm:ss\")}更新</div>\n            return (\n                <div key={index} className='CellLayout'>\n                    <div className='Context'>\n                        <div style={{ height: '30px', width: \"60px\", borderRadius: \"4px\", backgroundColor: checkbackground(info.type), display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <t2 style={{ color: 'white' }}>床{info.bednumber}</t2>\n                            {/* itemchange(info.type) */}\n                        </div>\n                        <div style={{ fontSize: \"16px\" }}>{info.name} {moment(localTime).format(\"HH:mm\")} {info.context}</div>\n                    </div>\n                    <Tooltip placement=\"right\" title={text}>\n                        <div>\n                            <img src={detaillogo} alt='detaillogo'></img>\n                        </div>\n                    </Tooltip>\n                </div>\n            );\n        })\n        return CellRender\n    }\n\n\n    //測驗項目功能_區間按鈕樣式\n    // SwitchTestItemInterval(testiteminterval) {\n    //     const stylestate = this.state.pressitemstate\n    //     if (testiteminterval === stylestate) {\n    //         return 'buttonselect'\n    //     }\n    //     else return 'buttonUnselect'\n    // }\n    //測驗項目功能_區間按鈕選擇\n    Onchangetimeinterval(changestate) { this.setState({ items_interval: changestate }) }\n    EditControl() {\n        const edit = this.props.editstatus\n        if (edit) {\n            return (\n                <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin > 0 ? \"flex\" : \"none\" }}>\n                    <img src={editlogo} alt=\"editlogo\" />\n                </div>\n            );\n        }\n        return null\n    }\n    render() {\n        const { title } = this.props\n        const { Option } = Select\n        const EditButton = this.EditControl()\n        return (\n            <div className='ScheduleEventLayout'>\n                <div className='ScheduleEventTitle'>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t2>\n                    {EditButton}\n                </div>\n                <div className='ScheduleEventContext'>\n                    {/* <div className='ContextControl'>\n                        <div className='buttonGroup'>\n                            <div className={this.SwitchTestItemInterval(\"all\")} onClick={() => this.pressbtn(\"all\")}>\n                                <t2 className='titlecolor'>全部</t2>\n                            </div>\n                            <div className={this.SwitchTestItemInterval(\"排程\")} onClick={() => this.pressbtn(\"排程\")}>\n                                <t2 className='titlecolor'>排程</t2>\n\n                            </div>\n                            <div className={this.SwitchTestItemInterval(\"事件\")} onClick={() => this.pressbtn(\"事件\")}>\n                                <t2 className='titlecolor'>事件</t2>\n                            </div>\n                        </div>\n                    </div> */}\n                    <div className='ContextList'>\n                        {this.listevent()}\n                    </div>\n                </div>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <Select defaultValue={this.state.selSchedule} placeholder='選擇' style={{ width: 150 }} onChange={this.selSchedule.bind(this)}>\n                            <Option value='排程'>排程</Option>\n                            <Option value='事件'>事件</Option>\n                        </Select>\n                        <Input placeholder=\"輸入當日內容\" value={this.state.inputContent} onChange={this.onInputChange}></Input>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Schedule_event_list\n","import React, { Component } from 'react';\nimport Schedule_event_list from '../Module/Schedule_event'\n\nclass Wardschedule extends Component {\n\n    render() {\n        return (\n            <Schedule_event_list source={this.props.source} title=\"今日排程\" data={this.props.scheduleData} editstatus={this.props.editstatus} />\n        );\n    }\n}\n\n\nexport default Wardschedule\n","import React, { Component } from 'react';\nimport WardcardNote from './Wardnote'\nimport Wardbedinformation from './WardBedinformation'\nimport Wardschedule from './Wardschedule'\nimport './Wardinfoindex.scss'\nimport * as ApiProvider from '../API/ApiProvider';\n\nconst SCHEDULE_TYPE_EVENT = \"事件\";\n\nclass Wardinfoindex extends Component {\n    render() {\n        return (\n            <div className='Wardinfoindexcontent'>\n                <centerstyle>\n                    <t1 style={{ fontSize: \"18px\", color: \"rgba(0, 0, 0, .7)\", fontWeight: \"600px\" }}>NICU總覽</t1>\n                </centerstyle>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"5px\" }}>\n                    <WardcardNote></WardcardNote>\n                    <Wardschedule source={0} editstatus={false}></Wardschedule>\n                </div>\n                <Wardbedinformation></Wardbedinformation>\n            </div>\n        );\n    }\n}\n\nexport default Wardinfoindex;\n","// Get api\n\n\n\n//資料更新時間\nconst updatetime = {\n    'time': 1567051200000\n}\n\nconst eventdata = [\n    {\n        \"item\": \"schedule\",\n        \"time\": 1565748000000,\n        \"result\": \"手術前檢查\",\n        \"name\": \"林博偉\",\n        \"bednumber\": \"01\",\n        \"writter\": \"林天財\"\n    },\n    {\n        \"item\": \"event\",\n        \"time\": 1565748000000,\n        \"result\": \"傷口變大了\",\n        \"name\": \"王添財\",\n        \"bednumber\": \"02\",\n        \"writter\": \"林天財\"\n    }\n]\n\n//Ward_bed_vitalData_last POST\nconst ward_bed_lastData = [\n    {\n        \"MedicalNumber\": \"123456789\",\n        \"Data\": {\n            \"HR\": 120,\n            \"ABP1\": 45,\n            \"ABP2\": 30,\n            \"ABP3\": 35,\n            \"SpO2\": 96,\n            \"BT\": 37.5,\n            \"RR\": 22\n        },\n        \"Status\": {\n            \"Ventilator\": false,\n            \"TPN\": true,\n            \"NPO\": false,\n            \"ECMO\": false,\n            \"Antibiotics\": false,\n            \"Hemodialysis\": false,\n            \"Foley\": false,\n            \"Drain\": false\n        }\n    },\n    {\n        \"MedicalNumber\": \"987654321\",\n        \"Data\": {\n            \"HR\": 120,\n            \"ABP1\": 45,\n            \"ABP2\": 30,\n            \"ABP3\": 35,\n            \"SpO2\": 96,\n            \"BT\": 37.5,\n            \"RR\": 22\n        }\n    },\n    {\n        \"MedicalNumber\": \"123454321\",\n        \"Data\": {\n            \"HR\": 120,\n            \"ABP1\": 45,\n            \"ABP2\": 30,\n            \"ABP3\": 35,\n            \"SpO2\": 96,\n            \"BT\": 37.5,\n            \"RR\": 22\n        }\n    }\n]\n\nconst WardInfo = {\n    UpdateTime: 1567051200000,\n    Director: \"林又新\",\n    HeadNurse: \"鄭麗貞\",\n    BedTotal: 12,\n    SignBed: 7,\n    EmptyBed: 9,\n    TransferBed: 8,\n    NewPatient: 2,\n    Ventilator: 1,\n    NPO: 7,\n    TPN: 4,\n    ECMO: 8,\n    Antibiotics: 6,\n    Hemodialysis: 1,\n    Announcement: [\n        {\n            time: 1567051200000,\n            text: \"7/10 王大明醫師請假，下午請李小華醫師cover ，6/30XXX醫師留\",\n            writter: \"張大帥\"\n        },\n        {\n            time: 1567051250000,\n            text: \"「超音波用完請記得歸還原位」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        }\n    ]\n}\nconst labdata = [\n    [{ title: \"Glucose\", score: 77, date: \"2019/01/01\" }],\n    [{ title: \"WBC\", score: 19647, date: \"Seg 59%2019/01/01\" }],\n    [{ title: \"WBC\", score: 14.8, date: \"2019/01/01\" }],\n    [{ title: \"Platelet\", score: 125, date: \"2019/01/01\" }],\n    [\n        { title: \"Na+\", score: 125, date: \"2019/01/01\" },\n        { title: \"K+\", score: 125, date: \"2019/01/01\" },\n        { title: \"Ca2+\", score: 125, date: \"2019/01/01\" },\n        { title: \"P\", score: 125, date: \"2019/01/01\" },\n        { title: \"Mg2+\", score: 125, date: \"2019/01/01\" },\n    ],\n    [\n        { title: \"CRP\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Procalcitionin\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Current Antibiotics\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Bun\", score: 125, date: \"2019/01/01\" },\n        { title: \"Cr\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"ALT\", score: 125, date: \"2019/01/01\" },\n        { title: \"AST\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"TBIL\", score: 125, date: \"2019/01/01\" },\n        { title: \"D.Bil\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"ALKP\", score: 125, date: \"2019/01/01\" },\n        { title: \"Total Ca\", score: 125, date: \"2019/01/01\" },\n        { title: \"LDH\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Iron\", score: 125, date: \"2019/01/01\" },\n        { title: \"TIBC\", score: 125, date: \"2019/01/01\" },\n        { title: \"FeSat\", score: 125, date: \"2019/01/01\" },\n        { title: \"Ferritin\", score: 125, date: \"2019/01/01\" }\n    ]\n]\nconst jsonResponse = [\n    {\n        \"HISID\": \"H1234567\",\n        \"CASEID\": \"C1234567\",\n        \"name\": \"吳大胖之女\",\n        \"gender\": 1,\n        \"birthday\": \"2019/11/11\",\n        \"bednumber\": 1,\n        \"pregnancy\": \"2019/11/10\",\n        \"weightbirth\": 1400,\n        \"weight\": 2300,\n        'report': 3,\n        'nonreport': 3,\n        'note': '隨時注意病人血壓狀態隨時注意病人血壓狀態',\n        'type':'NIS',\n        'MainDoctor':'張大春',\n        'IcuInTime':'2019/11/11'\n    },\n    {\n        \"HISID\": \"H9876543\",\n        \"CASEID\": \"C12345622\",\n        \"name\": \"吳大胖之女\",\n        \"gender\": 1,\n        \"birthday\": \"2019/11/11\",\n        \"bednumber\": 2,\n        \"pregnancy\": \"2019/11/10\",\n        \"weightbirth\": 1400,\n        \"weight\": 2300,\n        'report': 3,\n        'nonreport': 3,\n        'note': '隨時注意病人血壓狀態隨時注意病人血壓狀態',\n        'type':'Custom',\n        'MainDoctor':'張大春',\n        'IcuInTime':'2019/11/11'\n    }\n]\n\n//Wardview TCP data\nconst centerrowdata = {\n    \"id\": 20190817001,\n    \"data\": {\n        \"Weight\": 5000,\n        \"WeightDif\": 700,\n        \"BP\": [\n            {\n                \"time\": 1565395200,\n                \"DBP\": 60,\n                \"SBP\": 90\n            }\n        ],\n        \"HR\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"RR\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"BT\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"Urine\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"Suger\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"SP\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ]\n    }\n}\n\nconst growdata = {\n    Male_befor: [\n        { y: 22, min: 420, max: 600 },\n        { y: 23, min: 470, max: 700 },\n        { y: 24, min: 510, max: 800 },\n        { y: 25, min: 570, max: 900 },\n        { y: 26, min: 610, max: 1040 },\n        { y: 27, min: 700, max: 1200 },\n        { y: 28, min: 790, max: 1340 },\n        { y: 29, min: 870, max: 1520 },\n        { y: 30, min: 1000, max: 1740 },\n        { y: 31, min: 1120, max: 2000 },\n        { y: 32, min: 1300, max: 2240 },\n        { y: 33, min: 1500, max: 2500 },\n        { y: 34, min: 1700, max: 2800 },\n        { y: 35, min: 1960, max: 3040 },\n        { y: 36, min: 2180, max: 3300 },\n        { y: 37, min: 2400, max: 3500 },\n        { y: 38, min: 2600, max: 3780 },\n        { y: 39, min: 2810, max: 3980 },\n        { y: 40, min: 3000, max: 4200 },\n        { y: 41, min: 3200, max: 4440 },\n        { y: 42, min: 3400, max: 4700 },\n        { y: 43, min: 3600, max: 5000 },\n        { y: 44, min: 3800, max: 5270 }\n    ],\n    FeMale_before: [\n        { y: 22, min: 400, max: 580 },\n        { y: 23, min: 430, max: 640 },\n        { y: 24, min: 490, max: 730 },\n        { y: 25, min: 550, max: 850 },\n        { y: 26, min: 580, max: 1000 },\n        { y: 27, min: 630, max: 1120 },\n        { y: 28, min: 700, max: 1300 },\n        { y: 29, min: 800, max: 1500 },\n        { y: 30, min: 900, max: 1700 },\n        { y: 31, min: 1050, max: 1910 },\n        { y: 32, min: 1200, max: 2180 },\n        { y: 33, min: 1400, max: 2400 },\n        { y: 34, min: 1600, max: 2680 },\n        { y: 35, min: 1850, max: 2930 },\n        { y: 36, min: 2050, max: 3200 },\n        { y: 37, min: 2300, max: 3490 },\n        { y: 38, min: 2480, max: 3700 },\n        { y: 39, min: 2680, max: 3900 },\n        { y: 40, min: 2820, max: 4100 },\n        { y: 41, min: 2980, max: 4300 },\n        { y: 42, min: 3150, max: 4520 },\n        { y: 43, min: 3300, max: 4740 },\n        { y: 44, min: 3500, max: 5000 }\n    ],\n    Male_after: [\n        { y: 0, min: 2500, max: 4300 },\n        { y: 1, min: 2600, max: 4500 },\n        { y: 2, min: 2800, max: 4900 },\n        { y: 3, min: 3100, max: 5200 },\n        { y: 4, min: 3400, max: 5600 },\n        { y: 5, min: 3600, max: 5900 },\n        { y: 6, min: 3800, max: 6300 }\n    ],\n    FeMale_after: [\n        { y: 0, min: 2400, max: 4200 },\n        { y: 1, min: 2500, max: 4400 },\n        { y: 2, min: 2700, max: 4600 },\n        { y: 3, min: 2900, max: 5000 },\n        { y: 4, min: 3100, max: 5300 },\n        { y: 5, min: 3300, max: 5600 },\n        { y: 6, min: 3500, max: 5900 }\n    ]\n}\n\nconst Note_data = [\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 }\n]\n\nconst todo_data = [\n    {\n        Time: 1566287810473,\n        Content: \"幫大明量體重\",\n        Flag: true,\n        Editor: \"修改者\"\n    },\n    {\n        Time: 1566287810473,\n        Content: \"幫大明量體重\",\n        Flag: true,\n        Editor: \"修改者\"\n    },\n    {\n        Time: 1566287810473,\n        Content: \"幫大明量體重\",\n        Flag: true,\n        Editor: \"修改者\"\n    }\n]\n\n\nexport { jsonResponse, centerrowdata, WardInfo, updatetime, ward_bed_lastData, labdata, eventdata, growdata, Note_data, todo_data };","// import { getRandom } from '../Function/Wardstate'\nfunction simdata() {\n    const Inputarray = []\n    for (let index = 0; index < 24; index++) {\n        const element = Math.floor(Math.random() * 100);\n        Inputarray.push(element)\n    }\n    return Inputarray\n}\n\n//Jack\n//Nurtion TPN_data\nconst tpn_row_data = [\n    {\n        TPNDispositionName: \"Check ABG\",\n        TPNStartTime: 1566287810473,\n        TPNEndTime: 1566287810473,\n        TPNRemarks: \"abc\",\n        TPNStatus: \"已取消\",\n        TPNData: [\n            { item: \"AA\", Data: 10 },\n            { item: \"Glu\", Data: 10 },\n            { item: \"Na\", Data: 10 },\n            { item: \"K\", Data: 10 },\n            { item: \"Ca\", Data: 10 },\n            { item: \"P\", Data: 10 },\n            { item: \"Mg\", Data: 10 },\n            { item: \"TPN\", Data: 70 },\n        ]\n    }\n]\n\n\n//Jack\n//Nurtion Feeding_data\nconst feeding_row_data = [\n    {\n        FeedingOrderDispositionName: \"Check ABG\",\n        FeedingOrderStartTime: 1566287810473,\n        FeedingOrderEndTime: 1566287810473,\n        FeedingOrderRemarks: \"abc\",\n    }\n]\n\n\n//Sim Floot sheet IO data\n//Jack\nconst io_source = [\n    {\n        \"item\": \"IV (ml) 1/2NS FOR DRUG\",\n        \"data\": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n    },\n    {\n        \"item\": \"IV (ml) D10W\",\n        \"data\": simdata()\n    },\n    {\n        \"item\": \"IV (ml) IVIG\",\n        \"data\": simdata()\n    },\n    {\n        \"item\": \"UAC (ml) 1/2NS+HEPARIN\",\n        \"data\": simdata()\n    },\n    {\n        \"item\": \"UAC (ml) NS+HEPARIN\",\n        \"data\": simdata()\n    },\n    {\n        \"item\": \"UAC (ml) 20%TPN\",\n        \"data\": simdata()\n    },\n    {\n        \"item\": \"UAC (ml) Albumin 4cc+D5W 2cc\",\n        \"data\": simdata()\n    },\n    {\n        \"item\": \"UVC (ml) D20W\",\n        \"data\": simdata()\n    },\n    {\n        \"item\": \"UVC (ml) Dopamin 21.6 mg in D5W\",\n        \"data\": simdata()\n    },\n    {\n        \"item\": \"UVC (ml)Dopamin 21.6 mg  in D5W\",\n        \"data\": simdata()\n    },\n    {\n        \"item\": \"FFP (ml)\",\n        \"data\": simdata()\n    },\n    {\n        \"item\": \"PRBC (ml)\",\n        \"data\": simdata()\n    },\n    {\n        \"item\": \"Plt.Ph (ml)\",\n        \"data\": simdata()\n    },\n    {\n        \"item\": \"PO (ml)\",\n        \"data\": simdata()\n    },\n    {\n        \"item\": \"NG/OG (ml)\",\n        \"data\": simdata()\n    },\n    {\n        \"item\": \"RV (ml)\",\n        \"data\": simdata()\n    }\n]\n//0:已開單 1:已簽收 2:已發報告\n//報告清單\n//Jack\nconst Nonlablist = [\n    {\n        \"time\": '2019-12-01',\n        \"item\": \"HSV-2 IgG (EIA)\",\n        \"status\": 0,\n        \"result\": \"--\"\n    },\n    {\n        \"time\": '2019-12-01',\n        \"item\": \"HSV-1 IgG (EIA)\",\n        \"status\": 0,\n        \"result\": \"--\"\n    },\n    {\n        \"time\": '2019-12-02',\n        \"item\": \"HSV IGM (EIA)\",\n        \"status\": 1,\n        \"result\": \"--\"\n    },\n    {\n        \"time\": '2019-12-03',\n        \"item\": \"CK,LDH,Lactate\",\n        \"status\": 1,\n        \"result\": \"--\"\n    },\n    {\n        \"time\": '2019-12-03',\n        \"item\": \"Crea\",\n        \"status\": 1,\n        \"result\": \"--\"\n    },\n    {\n        \"time\": '2019-12-03',\n        \"item\": \"BLOOD GAS\",\n        \"status\": 2,\n        \"result\": \"pH(7.452)\"\n    },\n    {\n        \"time\": '2019-12-05',\n        \"item\": \"CHEST KUB (FOR BABY) PORTABLE\",\n        \"status\": 0,\n        \"result\": \"--\"\n    },\n    {\n        \"time\": '2019-12-05',\n        \"item\": \"MICRO BILI\",\n        \"status\": 0,\n        \"result\": \"--\"\n    },\n    {\n        \"time\": '2019-12-05',\n        \"item\": \"BLOOD GAS\",\n        \"status\": 1,\n        \"result\": \"--\"\n    },\n    {\n        \"time\": '2019-12-05',\n        \"item\": \"M-mode and Sector Scan, DOPPLER COLOR\",\n        \"status\": 1,\n        \"result\": \"--\"\n    }\n]\n//Exam Report\n//Jack\nconst gasdata = [\n    {\n        \"time\": '2019-12-05 19:00',\n        \"PH\": 7.366,\n        \"PCO2\": 44.8,\n        \"PO2\": 36.2,\n        \"HCO3\": 25.9,\n        \"BE\": 0.7,\n        \"O2\": '--',\n        \"Sample\": 'Capillary',\n        \"SaCO2\": 94.9,\n    },\n    {\n        \"time\": '2019-12-06 14:30',\n        \"PH\": 7.185,\n        \"PCO2\": 45.2,\n        \"PO2\": 42.3,\n        \"HCO3\": 17.2,\n        \"BE\": -10.1,\n        \"O2\": '--',\n        \"Sample\": 'Capillary',\n        \"SaCO2\": 95.4,\n    },\n    {\n        \"time\": '2019-12-07 8:30',\n        \"PH\": 7.491,\n        \"PCO2\": 32.8,\n        \"PO2\": 30.1,\n        \"HCO3\": 25.3,\n        \"BE\": 3.1,\n        \"O2\": '--',\n        \"Sample\": 'Vein',\n        \"SaCO2\": 94.4,\n    },\n    {\n        \"time\": '2019-12-08 16:00',\n        \"PH\": 7.506,\n        \"PCO2\": 19.9,\n        \"PO2\": 65.2,\n        \"HCO3\": 15.9,\n        \"BE\": -4.1,\n        \"O2\": '--',\n        \"Sample\": 'Artery',\n        \"SaCO2\": 90.7,\n    },\n    {\n        \"time\": '2019-12-04 9:00',\n        \"PH\": 7.48,\n        \"PCO2\": 28.3,\n        \"PO2\": 70.6,\n        \"HCO3\": 21.3,\n        \"BE\": -0.4,\n        \"O2\": '--',\n        \"Sample\": 'Artery',\n        \"SaCO2\": 91.2,\n    }\n]\n\nconst wardstatedata = {\n    \"detaildata\": [\n        { \"item\": \"Depends\", \"time\": 1565395200, \"data\": true },\n        { \"item\": \"TPN\", \"time\": 1565395200, \"data\": true },\n        { \"item\": \"NPO\", \"time\": 1565395200, \"data\": false },\n        { \"item\": \"Anti\", \"time\": 1565395200, \"data\": false },\n        { \"item\": \"Foley\", \"time\": 1565395200, \"data\": true },\n        { \"item\": \"Drain\", \"time\": 1565395200, \"data\": false }\n    ],\n    \"data\": {\n        \"Weight\": 500,\n        \"WeightDif\": 700,\n        \"RowData\": [\n            { \"time\": 1565395200, \"item\": \"ABP_hight\", \"data\": 140 },\n            { \"time\": 1565395200, \"item\": \"ABP_low\", \"data\": 30 },\n            { \"time\": 1565395200, \"item\": \"ABP_avg\", \"data\": 40 },\n            { \"time\": 1565395200, \"item\": \"HR\", \"data\": 90 },\n            { \"time\": 1565395200, \"item\": \"RR\", \"data\": 90 },\n            { \"time\": 1565395200, \"item\": \"BT\", \"data\": 90 },\n            { \"time\": 1565395200, \"item\": \"Urine\", \"data\": 90 },\n            { \"time\": 1565395200, \"item\": \"Suger\", \"data\": 90 },\n            { \"time\": 1565395200, \"item\": \"SpO2\", \"data\": 90 }\n        ]\n    }\n}\nconst iodatain = [\n    [0, 4, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 4, 0],\n    [0, 1.5, 1, 5, 1.5, 1.6, 8.6, 1.6, 8.6, 0, 0, 3.6, 3.6, 3.6, 1.6, 1.5, 1.5, 1.5, 1.5, 0, 1.4, 1.4, 3, 1.4],\n    [0, 0, 0, 0, 0, 0, 0, 1.7, 0, 1.7, 1.8, 1.8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 5.5, 1.5, 1.5, 6.6, 8.6, 1.6, 10.3, 1.6, 1.7, 5.4, 5.4, 6.6, 1.6, 4.5, 1.5, 1.5, 1.5, 0, 1.4, 1.4, 3, 5.4, 4.4]\n]\nconst iodataout = [\n    [0, 0, 16.2, 0, 0, 0, 14.9, 0, 0, 0, 0, 23.3, 0, 0, 1, 0, 0, 0, 0, 0, 18.9, 0, 0, 12],\n    [0, 0, 5.4, 0, 0, 0, 2.5, 0, 0, 0, 0, 3.1, 0, 0, 0.2, 0, 0, 0, 0, 0, 2.1, 0, 0, 2.6],\n    [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 21.6, 1, 0, 0, 17.4, 0, 0, 0, 0, 26.4, 0.5, 0, 1.2, 0, 0, 0, 0, 0, 21, 0, 0, 14.6]\n]\nconst iodatainthirdday = [\n    [9, 5, 0, 6, 0, 4, 10, 0, 3, 5, 0, 3, 4, 5, 0, 6, 0, 4],\n    [4.5, 20.4, 8.8, 8.2, 4.4, 10.2, 4.6, 21.2, 9.6, 8.8, 4.5, 10.2, 4.5, 20.4, 8.8, 8.2, 4.4, 10.2],\n    [0, 1.7, 5.3, 0, 0, 0, 0, 1.7, 5.3, 0, 0, 0, 0, 1.7, 5.3, 0, 0, 0],\n    [13.5, 27.1, 14.1, 14.2, 4.4, 14.2, 14.6, 22.9, 17.9, 13.8, 4.5, 13.2, 8.5, 27.1, 14.1, 14.2, 4.4, 14.2]\n]\nconst iodataoutthirdday = [\n    [16.2, 14.9, 23.3, 1, 0, 30.9, 17.1, 16.2, 0, 21.5, 14.5, 11.1, 17.1, 16.1, 22.2, 1.69, 17.9, 11.5],\n    [2.7, 2.5, 3.8, 0.2, 0, 5.1, 2.8, 2.7, 0, 3.6, 2.4, 1.8, 2.8, 2.7, 3.7, 0.3, 3.0, 1.9],\n    [1, 0, 0, 0.5, 0, 0, 1, 0, 0, 0.5, 0, 0, 1, 0, 0, 0.5, 0, 0],\n    [22.6, 17.4, 26.4, 1.7, 0, 35.6, 18.1, 16.2, 0, 22, 14.5, 11.1, 18.1, 16.1, 22.2, 2.2, 17.9, 11.5]\n]\nconst iodatain_crossection = [\n    [9, 6, 9, 24],\n    [59, 63, 56, 178],\n    [0, 0, 0, 0],\n    [68, 69, 65, 202]\n]\nconst iodataout_crossection = [\n    [35, 72, 77, 184],\n    [2.9, 5.9, 6.4, 5.1],\n    [0, 0, 0.5, 0.5],\n    [37.9, 77.9, 83.9, 199.7]\n]\nconst iodatasum_crossection = [\n    [30.1, -8.9, -18.9, 2.3]\n]\nconst iodatasum_chronic_oneday = [\n    [0, 5.5, -20.1, 0.5, 6.6, 8.6, -15.8, 10.3, 1.6, 1.7, 5.4, -21, 6.1, 1.6, 3.3, 1.5, 1.5, 1.5, 0, 1.4, -19.6, 3, 5.4, -10.2]\n]\n\nconst iodatasum_chronic_thirdday = [\n    [-9.1, 9.7, -12.3, 12.5, 4.4, -21.4, -3.5, 6.7, 17.9, -8.2, -10.0, 2.1, -9.6, 11, -8.1, 12, -13.5, 2.7]\n]\nconst labdata = {\n    \"data\": [\n        {\n            \"item\": \"Glucose\",\n            \"time\": 1566287810473,\n            \"value\": 83\n        },\n        {\n            \"item\": \"WBC\",\n            \"time\": 1566287810473,\n            \"value\": 10300\n        },\n        {\n            \"item\": \"Seg\",\n            \"time\": 1566287810473,\n            \"value\": 44.6\n        },\n        {\n            \"item\": \"Lymp\",\n            \"time\": 1566287810473,\n            \"value\": 28.1\n        },\n        {\n            \"item\": \"Hgb\",\n            \"time\": 1566287810473,\n            \"value\": 10.3\n        },\n        {\n            \"item\": \"Platelet\",\n            \"time\": 1566287810473,\n            \"value\": 574000\n        },\n        {\n            \"item\": \"Na+\",\n            \"time\": 1566287810473,\n            \"value\": 141\n        },\n        {\n            \"item\": \"K+\",\n            \"time\": 1566287810473,\n            \"value\": 5.8\n        },\n        {\n            \"item\": \"Ca2+\",\n            \"time\": 1566287810473,\n            \"value\": 1.1\n        },\n        {\n            \"item\": \"P\",\n            \"time\": 1566287810473,\n            \"value\": 6.1\n        },\n        {\n            \"item\": \"Mg2+\",\n            \"time\": 1566287810473,\n            \"value\": 1.8\n        },\n        {\n            \"item\": \"Alb\",\n            \"time\": 1566287810473,\n            \"value\": 4.8\n        },\n        {\n            \"item\": \"CRP\",\n            \"time\": 1566287810473,\n            \"value\": 0.3\n        },\n        {\n            \"item\": \"Procalcitionin\",\n            \"time\": 1566287810473,\n            \"value\": 0.3\n        },\n        {\n            \"item\": \"pH\",\n            \"time\": 1566287810473,\n            \"value\": 7.185\n        },\n        {\n            \"item\": \"PCO2\",\n            \"time\": 1566287810473,\n            \"value\": 45.2\n        },\n        {\n            \"item\": \"BE\",\n            \"time\": 1566287810473,\n            \"value\": -10.1\n        },\n        {\n            \"item\": \"PO2\",\n            \"time\": 1566287810473,\n            \"value\": 42.3\n        },\n        {\n            \"item\": \"BUN\",\n            \"time\": 1566287810473,\n            \"value\": 7\n        },\n        {\n            \"item\": \"Cr\",\n            \"time\": 1566287810473,\n            \"value\": 0.8\n        },\n        {\n            \"item\": \"ALT\",\n            \"time\": 1566287810473,\n            \"value\": 29\n        },\n        {\n            \"item\": \"AST\",\n            \"time\": 1566287810473,\n            \"value\": 37\n        },\n        {\n            \"item\": \"TBil\",\n            \"time\": 1566287810473,\n            \"value\": 0.45\n        },\n        {\n            \"item\": \"DBil\",\n            \"time\": 1566287810473,\n            \"value\": 0.22\n        },\n        {\n            \"item\": \"ALKP\",\n            \"time\": 1566287810473,\n            \"value\": 387\n        },\n        {\n            \"item\": \"Total Ca\",\n            \"time\": 1566287810473,\n            \"value\": 10\n        },\n        {\n            \"item\": \"Iron\",\n            \"time\": 1566287810473,\n            \"value\": 75\n        },\n        {\n            \"item\": \"TIBC\",\n            \"time\": 1566287810473,\n            \"value\": 228\n        },\n        {\n            \"item\": \"FeSat\",\n            \"time\": 1566287810473,\n            \"value\": 0.33\n        },\n        {\n            \"item\": \"Ferritin\",\n            \"time\": 1566287810473,\n            \"value\": 235\n        }\n    ]\n}\nconst RTbreathelist = [\n    {\n        \"time\": '2019-12-01 12:30',\n        \"Mode\": \"HFOV\",\n        \"Setting\": \"FiO2: 30%, AMP: 24, MAP:9, Freq:15Hz\",\n        \"Note\": \"備註內容\"\n    },\n    {\n        \"time\": '2019-12-02 12:10',\n        \"Mode\": \"HFOV\",\n        \"Setting\": \"FiO2: 35%, AMP: 24, MAP:9, Freq:15Hz\",\n        \"Note\": \"備註內容\"\n    },\n    {\n        \"time\": '2019-12-03 10:10',\n        \"Mode\": \"PC\",\n        \"Setting\": \"FiO2: 55%, Rate: 40/min, RIP: 17, PEEP:7\",\n        \"Note\": \"備註內容\"\n    },\n    {\n        \"time\": '2019-12-04 08:20',\n        \"Mode\": \"PC\",\n        \"Setting\": \"FiO2: 55%, Rate: 40/min, RIP: 17, PEEP:7\",\n        \"Note\": \"備註內容\"\n    },\n    {\n        \"time\": '2019-12-05 23:10',\n        \"Mode\": \"PC\",\n        \"Setting\": \"FiO2: 58%, Rate: 40/min, RIP: 17, PEEP:7\",\n        \"Note\": \"備註內容\"\n    }\n]\nconst Prescriptionordertablelist = [\n    {\n        \"time\": '2019-10-06',\n        \"Name\": \"Heparin sod CCP#* inj 5000u/5ml\",\n        \"ProductName\": \"Agglutex #* inj 1000 u/ml 5 ml\",\n        \"Unit\": \"X1/VL/IVA/QD\",\n        \"State\": \"已結束\",\n        \"StartTime\": \"06/24 16:00\",\n        \"EndTime\": \"06/24 16:00\",\n        \"Note\": \"備註內容\"\n    },\n    {\n        \"time\": '2019-10-06',\n        \"Name\": \"Heparin sod CCP#* inj 5000u/5ml \",\n        \"ProductName\": \"Agglutex #* inj 1000 u/ml 5 ml\",\n        \"Unit\": \"X1/VL/IVA/STAT\",\n        \"State\": \"已結束\",\n        \"StartTime\": \"06/24 16:00\",\n        \"EndTime\": \"06/24 16:00\",\n        \"Note\": \"備註內容\"\n    },\n    {\n        \"time\": '2019-08-12',\n        \"Name\": \"Dextrose \\\"ST\\\" inj 5% 250 ml/BT\",\n        \"ProductName\": \"Vitagen \\\"ST\\\" inj 5% 250 ml/BT\",\n        \"Unit\": \"24/CC/IVD/STAT\",\n        \"State\": \"已結束\",\n        \"StartTime\": \"06/24 16:00\",\n        \"EndTime\": \"06/24 16:00\",\n        \"Note\": \"備註內容\"\n    },\n    {\n        \"time\": '2019-09-20',\n        \"Name\": \"Midazolam (Dormicum#^*inj5mg/5ml\",\n        \"ProductName\": \"Dormicum #^* inj 5 mg/5 ml\",\n        \"Unit\": \"0.04/AMP/IVA/OQT\",\n        \"State\": \"已結束\",\n        \"StartTime\": \"06/24 16:00\",\n        \"EndTime\": \"06/24 16:00\",\n        \"Note\": \"備註內容\"\n    },\n    {\n        \"time\": '2019-08-12',\n        \"Name\": \"Cefotaxime (Claforan)*inj 500 mg\",\n        \"ProductName\": \"Claforan iv * inj 500 mg\",\n        \"Unit\": \"60/MG/IVA/STAT\",\n        \"State\": \"已結束\",\n        \"StartTime\": \"06/24 16:00\",\n        \"EndTime\": \"06/24 16:00\",\n        \"Note\": \"備註內容\"\n    }\n]\nconst Treatmentorderlist = [\n    {\n        \"time\": '2019-11-19',\n        \"ActionName\": \"Check ABG (At Nursing Station)\",\n        \"qd\": \"Q12H\",\n        \"State\": \"生效中\",\n        \"StartTime\": \"06/06 20:00\",\n        \"EndTime\": \"06/06 20:00\",\n        \"Note\": \"備註內容\"\n    },\n    {\n        \"time\": '2019-11-15',\n        \"ActionName\": \"Blood Transfusion\",\n        \"qd\": \"ST\",\n        \"State\": \"已取消\",\n        \"StartTime\": \"2019-10-07\",\n        \"EndTime\": \"2020-10-08\",\n        \"Note\": \"備註內容\"\n    },\n    {\n        \"time\": '2019-11-17',\n        \"ActionName\": \"Pupil Dilatation\",\n        \"qd\": \"ONCALL\",\n        \"State\": \"進行中\",\n        \"StartTime\": \"2019-11-17\",\n        \"EndTime\": \"2020-02-15\",\n        \"Note\": \"備註內容\"\n    },\n    {\n        \"time\": '2019-11-10',\n        \"ActionName\": \"Pupil Dilatation\",\n        \"qd\": \"ST\",\n        \"State\": \"進行中\",\n        \"StartTime\": \"2019-11-10\",\n        \"EndTime\": \"2020-02-08\",\n        \"Note\": \"備註內容\"\n    },\n    {\n        \"time\": '2019-10-06',\n        \"ActionName\": \"非傾入式氧療設備\",\n        \"qd\": \"CONT\",\n        \"State\": \"進行中\",\n        \"StartTime\": \"2019-10-06\",\n        \"EndTime\": \"2019-10-07\",\n        \"Note\": \"備註內容\"\n    }\n]\nconst chronicladdataoneday = [\n    [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n]\n\nconst chroniclabdatathird = [\n    [0, 2, 1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0],\n    [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0],\n    [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],\n    [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0],\n    [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0],\n    [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0]\n]\nconst rtoneday = [\n    [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n]\n\nconst rethird = [\n    [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0]\n]\nconst cbcdata = [\n    {\n        time: \"2019-06-05 9:30\",\n        'data': [8100, 0, 33, 0, 12.1, 35, 279000]\n    },\n    {\n        time: \"2019-06-17 12:38\",\n        'data': [9640, 0, 40, 42.4, 13.4, 38.7, 407000]\n    }\n]\n\nconst electrolysis = [\n    {\n        time: \"2019-08-19 23:30\",\n        'data': [141, 5.2, 0, 0, 0.9, 10, 2.2, 4.5, 30, 0.6]\n    },\n    {\n        time: \"2019-08-20 14:52\",\n        'data': [140, 4.5, 103, 0.95, 11, 2.5, 5, 0, 0.8]\n    },\n    {\n        time: \"2019-08-22 14:51\",\n        'data': [139, 4.2, 0, 0, 0, 3, 0, 0, 0.5]\n    },\n    {\n        time: \"2019-08-26 21:10\",\n        'data': [139, 4.2, 0, 0, 0, 2.8, 0, 9, 0.4]\n    }\n]\n\n//x:0~6 y:2500~4000 after\nconst wardchartoncustombefore = [\n    {\n        x: 40,\n        y: 3300\n    },\n    {\n        x: 40.5,\n        y: 3400\n    },\n    {\n        x: 41,\n        y: 3500\n    },\n    {\n        x: 41.5,\n        y: 3650\n    },\n    {\n        x: 42,\n        y: 3750\n    }\n]\nconst wardchartdatasourcebefore = [\n    {\n        x: 40,\n        y: 3100\n    },\n    {\n        x: 40.5,\n        y: 3200\n    },\n    {\n        x: 41,\n        y: 3300\n    },\n    {\n        x: 41.5,\n        y: 3350\n    },\n    {\n        x: 42,\n        y: 3350\n    }\n]\n\n\n//x:0~6 y:2500~4000\nconst wardchartoncustom = [\n    {\n        x: 2.4,\n        y: 3300\n    },\n    {\n        x: 2.5,\n        y: 3400\n    },\n    {\n        x: 2.6,\n        y: 3500\n    },\n    {\n        x: 2.7,\n        y: 3650\n    },\n    {\n        x: 2.8,\n        y: 3750\n    }\n]\nconst wardchartdatasource = [\n    {\n        x: 2.4,\n        y: 3100\n    },\n    {\n        x: 2.5,\n        y: 3200\n    },\n    {\n        x: 2.6,\n        y: 3300\n    },\n    {\n        x: 2.7,\n        y: 3350\n    },\n    {\n        x: 2.8,\n        y: 3350\n    },\n    {\n        x: 2.9,\n        y: 3400\n    },\n    {\n        x: 3,\n        y: 3450\n    },\n    {\n        x: 3.1,\n        y: 3500\n    },\n    {\n        x: 3.15,\n        y: 3600\n    },\n    {\n        x: 3.2,\n        y: 3700\n    },\n    {\n        x: 3.3,\n        y: 3800\n    },\n    {\n        x: 3.4,\n        y: 3900\n    },\n    {\n        x: 3.5,\n        y: 4100\n    },\n    {\n        x: 3.6,\n        y: 4100\n    },\n    {\n        x: 3.7,\n        y: 4150\n    }\n]\n\n\nexport {\n    wardstatedata,\n    iodatain,\n    iodataout,\n    labdata,\n    Nonlablist,\n    gasdata,\n    RTbreathelist,\n    Prescriptionordertablelist,\n    Treatmentorderlist,\n    iodatainthirdday,\n    iodataoutthirdday,\n    iodatain_crossection,\n    iodataout_crossection,\n    chronicladdataoneday,\n    chroniclabdatathird,\n    rtoneday,\n    rethird,\n    iodatasum_crossection,\n    iodatasum_chronic_oneday,\n    iodatasum_chronic_thirdday,\n    cbcdata,\n    electrolysis,\n    tpn_row_data,\n    feeding_row_data,\n    wardchartdatasource,\n    wardchartoncustom,\n    wardchartoncustombefore,\n    wardchartdatasourcebefore\n}","import React, { Component } from 'react';\nimport Labviewitem from './Labviewitem'\nimport { labdata } from '../../Data/Wardviewdata'\nimport * as FiliterReg from '../../Function/FiliterReg'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport moment from 'moment'\nimport * as ApiGithub from '../../API/ApiGithub'\n\nvar MG_VALUE, PROC_VALUE;\nclass Labviewlayout extends Component {\n    state = {\n        parser: [{ \"apply_condition\": { \"name\": \"\" }, \"mappings\": [] }],\n        dummy_mg: 0,\n        dummy_pct: 0\n    }\n    componentDidMount() {\n        ApiGithub.getGitHubJson(\"Labview.json\")\n            .then(result => {\n                console.log(\"getGitHubJson Labview.json OK \" + JSON.stringify(result.data));\n                this.setState({\n                    parser: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getGitHubJson Labview.json NG \" + JSON.stringify(err));\n            })\n    }\n\n    findLastestTargetValue(arr, target) {\n        const { caseinfo } = this.props\n        const { parser } = this.state\n        let latestTimestamp = 0;\n        let latestvalue = undefined;\n        const selected_parser = parser.find(item => item.apply_condition.name.indexOf(target) > -1);\n        const arrayLength = arr.length;\n        arr.forEach((item, index) => {\n            ApiProvider.getStoredProcedureRESDISP(caseinfo.HISID, item.ORMM, caseinfo.CASEID, item.ORDSEQNO)\n                .then(data => {\n                    console.log(\"getStoredProcedureRESDISP OK \" + JSON.stringify(data.data));\n                    const RESDISP = data.data\n                    //const RESDISP = [{\"RECNO\":\"1\",\"PARTNO\":\"11 \",\"HISTNO\":\"45305666  \",\"ORBGNDT\":\"2019-11-12\",\"CONTENT\":\"    MG++:  (20.00)\",\"ORDSEQ\":\"1\",\"CASENO\":\"25358448\"},{\"RECNO\":\"2\",\"PARTNO\":\"11 \",\"HISTNO\":\"45305666  \",\"ORBGNDT\":\"2019-11-12\",\"CONTENT\":\"    Procalcitonin:  (25.00)\",\"ORDSEQ\":\"1\",\"CASENO\":\"25358448\"}]\n\n                    //search for target\n                    const selected_mapping = selected_parser.mappings.find(mapping => mapping.key === target)\n                    const re = new RegExp(selected_mapping.regex_str, selected_mapping.regex_flags)\n\n                    RESDISP.forEach(element => {\n                        const match = element.CONTENT.match(re)\n                        if (match !== null) {\n                            const currentTimeStr = item.ORRCPDT + \"-\" + item.ORRCPTM\n                            const currentItemTimestamp = moment(currentTimeStr.trim(), \"YYYY-MM-DD-HH.mm.ss\").valueOf()\n                            const matchValue = match[selected_mapping.position]\n\n                            if (matchValue !== \"\" && matchValue !== undefined && matchValue !== null && currentItemTimestamp > latestTimestamp) {\n                                latestvalue = matchValue\n                                if (target === \"mg\") {\n                                    MG_VALUE = latestvalue\n                                } else if (target === \"pct\") {\n                                    PROC_VALUE = latestvalue\n                                }\n                            }\n                        }\n                    })\n                    this.updateLabviewIfNeed(arrayLength, index, target)\n                })\n                .catch(err => {\n                    console.log(\"getStoredProcedureRESDISP NG \" + JSON.stringify(err));\n                    this.updateLabviewIfNeed(arrayLength, index, target)\n                });\n        })\n    }\n    updateLabviewIfNeed(arrayLength, currentIdx, target) {\n        const retryMax = 3\n        if (currentIdx === arrayLength - 1) {\n            if (target === \"mg\" && this.state.dummy_mg < retryMax) {\n                this.setState({ dummy_mg: this.state.dummy_mg + 1 })\n            } else if (target === \"pct\" && this.state.dummy_pct < retryMax) {\n                this.setState({ dummy_pct: this.state.dummy_pct + 1 })\n            }\n        }\n    }\n    TitleRender() {\n        const { Source } = this.props\n        if (Source === \"Wardview\") {\n            return null\n        }\n        else return (\n            <div style={{ height: '40px', paddingLeft: \"5px\", paddingRight: \"5px\", background: \"#cccccc\", display: \"flex\", alignItems: \"center\" }}>\n                <t1>檢驗報告</t1>\n            </div>\n        );\n    }\n    render() {\n        function ListEndData(array) {\n            if (array.length === 0) {\n                return \"--\"\n            }\n            return array[array.length - 1]\n        }\n        // const data = labdata.data\n        const { RESDGLU1, PickerDate, RESLAB02, RESLAB01, RESDBGAS, RESSECT, Source } = this.props\n        console.log(RESDGLU1)\n\n        const RESDGLU1LIST = FiliterReg.ListForTime(RESDGLU1, PickerDate)\n        const RESLAB02LIST = FiliterReg.ListForTime(RESLAB02, PickerDate)\n        const RESLAB01LIST = FiliterReg.ListForTime(RESLAB01, PickerDate)\n        const RESDBGASLIST = FiliterReg.ListForTime(RESDBGAS, PickerDate)\n        // const RESLAB0CLIST = FiliterReg.ListForTime(RESLAB0C, PickerDate)\n\n        const RESSECT_MG_LIST = FiliterReg.ListForTimeAndTarget(RESSECT, PickerDate, \"Mg\")\n        this.findLastestTargetValue(RESSECT_MG_LIST, \"mg\")\n\n        const RESSECT_PROC_LIST = FiliterReg.ListForTimeAndTarget(RESSECT, PickerDate, \"Procalcitonin\")\n        this.findLastestTargetValue(RESSECT_PROC_LIST, \"pct\")\n\n        const GLUFAST = ListEndData(RESDGLU1LIST.filter(function (value, index, array) {\n            return value.GLUFAST !== null\n        }))\n        const WBC = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV01 !== null\n        }))\n        const SEG = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV14 !== null\n        }))\n        const LYMP = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV15 !== null\n        }))\n        const HGB = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV03 !== null\n        }))\n        const PLATELET = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV09 !== null\n        }))\n        const NA = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV13 !== null\n        }))\n        const K = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV14 !== null\n        }))\n        const CA = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            // console.log(value.RSV15)\n            return value.RSV15 !== null\n        }))\n        const P = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV17 !== null\n        }))\n        const ALB = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV02 !== null\n        }))\n        const CRP = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV32 !== null\n        }))\n        const PH = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS07 !== null\n        }))\n        const PCO2 = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS06 !== null\n        }))\n        const BE = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS01 !== null\n        }))\n        const PO2 = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS08 !== null\n        }))\n        const BUN = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV05 !== null\n        }))\n        //02\n        const CR = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV06 !== null\n        }))\n        const ALT = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV11 !== null\n        }))\n        const AST = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV12 !== null\n        }))\n        const TBIL = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV08 !== null\n        }))\n        const DBIL = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV25 !== null\n        }))\n        const ALKP = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV09 !== null\n        }))\n        const TOTALCA = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV03 !== null\n        }))\n        const IRON = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV26 !== null\n        }))\n        const TIBC = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV27 !== null\n        }))\n        const FERRITIN = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV03 !== null\n        }))\n\n        function areainterval(source) {\n            if (source === \"Wardview\") {\n                return \"0px\"\n            }\n            else return \"10px\"\n        }\n\n        function nullvalue(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            return value.toString().trim()\n        }\n        const TitleR = this.TitleRender()\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                {TitleR}\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", gridColumnGap: areainterval(Source) }}>\n                    <div style={{ border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(GLUFAST.GLUFAST)} title={\"Glucose\"} time={GLUFAST.ORBGNDT}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(WBC.RSV01)} title={\"WBC\"} time={WBC.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(SEG.RSV14)} title={\"Seg\"} time={SEG.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(LYMP.RSV15)} title={\"Lymp\"} time={LYMP.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(HGB.RSV03)} title={\"Hgb\"} time={HGB.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PLATELET.RSV09)} title={\"Platelet\"} time={PLATELET.ORBGNDT}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"5fr 1fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(NA.RSV13)} title={\"Na+\"} time={NA.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(K.RSV14)} title={\"K+\"} time={K.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(CA.RSV15)} title={\"Ca+\"} time={CA.ORBGNDT}></Labviewitem> {/*parse*/}\n                        <Labviewitem Source={Source} value={nullvalue(P.RSV17)} title={\"P\"} time={P.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(MG_VALUE)} title={\"Mg2+\"} time={\"2019-12-12\"}></Labviewitem> {/*parse*/}\n                    </div>\n                    <div style={{ border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(ALB.RSV02)} title={\"Alb\"} time={ALB.ORBGNDT}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 4fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(CRP.RSV32)} title={\"CRP\"} time={CRP.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PROC_VALUE)} title={\"Procalcitionin\"} time={\"2019-12-12\"}></Labviewitem>  {/*parse*/}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(PH.SS07)} title={\"pH\"} time={PH.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PCO2.SS06)} title={\"PCO2\"} time={PCO2.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(BE.SS01)} title={\"BE\"} time={BE.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PO2.SS08)} title={\"PO2\"} time={PO2.ORBGNDT}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 2fr 2fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(BUN.RSV05)} title={\"BUN\"} time={BUN.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(CR.RSV06)} title={\"Cr\"} time={CR.ORBGNDT}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(ALT.RSV11)} title={\"ALT\"} time={ALT.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(AST.RSV12)} title={\"AST\"} time={AST.ORBGNDT}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(TBIL.RSV08)} title={\"TBil\"} time={TBIL.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(DBIL.RSV25)} title={\"DBil\"} time={DBIL.ORBGNDT}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 4fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(ALKP.RSV09)} title={\"ALKP\"} time={ALKP.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(TOTALCA.RSV03)} title={\"Total Ca\"} time={TOTALCA.ORBGNDT}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(IRON.RSV26)} title={\"Iron\"} time={IRON.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(TIBC.RSV27)} title={\"TIBC\"} time={TIBC.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={\"--\"} title={\"FeSat\"} time={\"2019-12-12\"}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(FERRITIN.RSV03)} title={\"Ferritin\"} time={FERRITIN.ORBGNDT}></Labviewitem> {/* No Data */}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Labviewlayout","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { growdata } from '../jsonResponse'\nimport { wardchartoncustombefore, wardchartdatasourcebefore } from '../Data/Wardviewdata'\nimport moment from 'moment';\n\nclass WardlifeChart extends Component {\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    drawChart() {\n        const { gender, svg_key, weightList, grewinfo } = this.props\n        const width = (window.screen.availWidth - 50) / 2 - 50, height = 400\n        //var d = new Date('2014,12,01,12:16:05');\n        //var vertigo = datarelease();\n        console.log(grewinfo)\n        if (grewinfo === null || grewinfo === undefined) {\n            return null\n        }\n        const bornweeks = Number(grewinfo.WEEK_BORN)\n        const borndays = Number(grewinfo.DAY_BORN)\n        const Birthday = grewinfo.BIRTHDAY\n        const pregencyTimestamp = moment(Birthday, \"YYYYMMDD\").valueOf() - ((bornweeks * 7) + borndays) * 24 * 60 * 60 * 1000\n\n\n\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([0, 6000])\n            .range([height, 0])\n\n        var x = d3.scaleLinear()\n            .domain([22, 44])\n            .range([0, width])\n\n        var yAxis = d3.axisLeft(y)\n            .ticks(12)\n            .tickSize(0, 0)\n            .tickPadding(10);\n\n\n        var xAxis = d3.axisTop(x)\n            .ticks(14)\n            .tickSize(0, 0)\n            .tickPadding(-15)\n            .tickFormat(function (d) { return 'W' + d; });\n\n\n        var svg = d3\n            .select(\"#\" + svg_key)\n            .attr(\"viewBox\", [0, 0, width + 80, height + 50])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 40 + \",\" + 20 + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(\" + 0 + \", \" + height + \")\");\n\n        for (let index = 0; index < 9; index++) {\n            const number = index * 500\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(number))\n                .attr('x2', width)\n                .attr('y2', y(number))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n\n        }\n\n        for (let index = 0; index < 13; index++) {\n            const number = index * 500\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(number))\n                .attr('x2', width)\n                .attr('y2', y(number))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n        }\n\n        for (let index = 22; index < 45; index++) {\n            if (index % 2 == 0) {\n                svg.append('line')\n                    .attr('x1', x(index))\n                    .attr('y1', 0)\n                    .attr('x2', x(index))\n                    .attr('y2', height)\n                    .style('stroke', 'rgba(187, 187, 187, 1)')\n                    .style('stroke-width', 1)\n                    .style('stroke-dasharray', 5.5);\n            }\n        }\n\n        if (gender === '1') {\n            for (let index = 0; index < growdata.Male_befor.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_befor[index].y))\n                    .attr('y1', y(growdata.Male_befor[index].min))\n                    .attr('x2', x(growdata.Male_befor[index + 1].y))\n                    .attr('y2', y(growdata.Male_befor[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 1.5);\n            }\n\n            for (let index = 0; index < growdata.Male_befor.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_befor[index].y))\n                    .attr('y1', y(growdata.Male_befor[index].max))\n                    .attr('x2', x(growdata.Male_befor[index + 1].y))\n                    .attr('y2', y(growdata.Male_befor[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 1.5);\n            }\n        }\n        else {\n            for (let index = 0; index < growdata.FeMale_before.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_before[index].y))\n                    .attr('y1', y(growdata.FeMale_before[index].min))\n                    .attr('x2', x(growdata.FeMale_before[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_before[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 1.5);\n            }\n\n            for (let index = 0; index < growdata.FeMale_before.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_before[index].y))\n                    .attr('y1', y(growdata.FeMale_before[index].max))\n                    .attr('x2', x(growdata.FeMale_before[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_before[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 1.5);\n            }\n        }\n        const datasource = weightList\n        console.log(datasource)\n        //x 週數 y體重 NIS\n        for (let index = 0; index < datasource.length; index++) {\n            const element = datasource[index];\n            const BornDay = element.rec_dat.toString().trim()\n            const BornTime = element.rec_tim.toString().trim()\n            const time = BornDay + BornTime\n            const weighttimestamp = moment(time, \"YYYYMMDDHHmm\").valueOf() //體重時間\n            const weeks = (weighttimestamp - pregencyTimestamp) / (7 * 24 * 60 * 60 * 1000) //體重週數\n            if (weeks < 22) {\n                continue\n            }\n            if (weeks > 44) {\n                continue\n            }\n            svg.append('circle')\n                .attr('cx', x(weeks))\n                .attr('cy', y(Number(element.value2) * 1000))\n                .attr('r', 3)\n                .style('fill', 'green')\n        }\n\n\n        // const datacustom = wardchartoncustombefore\n        // for (let index = 0; index < datacustom.length; index++) {\n        //     const element = datacustom[index];\n        //     svg.append('circle')\n        //         .attr('cx', x(element.x))\n        //         .attr('cy', y(element.y))\n        //         .attr('r', 3)\n        //         .style('fill', 'blue')\n        // }\n\n    }\n\n    render() {\n        const { id_key, svg_key } = this.props\n        return (\n            <div id={id_key}>\n                <svg id={svg_key}></svg>\n            </div>\n        );\n    }\n}\n\nexport default WardlifeChart;","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { growdata } from '../jsonResponse'\nimport moment from 'moment'\n\nclass Wardmonthafter extends Component {\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    drawChart() {\n        const { gender, svg_key,weightList,grewinfo } = this.props\n        const width = (window.screen.availWidth - 50) / 2 - 50, height = 400\n        console.log(grewinfo)\n        if (grewinfo === null || grewinfo === undefined) {\n            return null\n        }\n        const Birthday = grewinfo.BIRTHDAY\n        const pregencyTimestamp = moment(Birthday, \"YYYYMMDD\").valueOf()\n        //var vertigo = datarelease();\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([1000, 10000])\n            .range([height, 0])\n\n        var x = d3.scaleLinear()\n            .domain([0, 6])\n            .range([0, width])\n\n        var yAxis = d3.axisLeft(y)\n            .ticks(10)\n            .tickSize(0, 0)\n            .tickPadding(10);\n\n\n        var xAxis = d3.axisTop(x)\n            .ticks(6)\n            .tickSize(0, 0)\n            .tickPadding(-15)\n            .tickFormat(function (d) {\n                if (d === 0) {\n                    return \"birth\"\n                }\n                else return 'M' + d;\n            });\n\n\n        var svg = d3\n            .select(\"#\" + svg_key)\n            // .style(\"height\", \"300px\")\n            // .style(\"width\", svgwidth + \"px\")\n            // .select(\"svg\")\n            .attr(\"viewBox\", [0, 0, width + 80, height + 50])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 20 + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(\" + 0 + \", \" + height + \")\");\n\n        for (let index = 0; index < 7; index++) {\n            svg.append('line')\n                .attr('x1', x(index))\n                .attr('y1', 0)\n                .attr('x2', x(index))\n                .attr('y2', height)\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n\n        }\n\n        for (let index = 0; index < 19; index++) {\n            const number = index * 500 + 1000\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(number))\n                .attr('x2', width)\n                .attr('y2', y(number))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n\n        }\n\n        // for (let index = 22; index < 45; index++) {\n        //     svg.append('line')\n        //         .attr('x1', x(index))\n        //         .attr('y1', 0)\n        //         .attr('x2', x(index))\n        //         .attr('y2', height)\n        //         .style('stroke', 'rgba(187, 187, 187, 1)')\n        //         .style('stroke-width', 1)\n        //         .style('stroke-dasharray', 5.5);\n        // }\n\n        if (gender === '1') {\n            for (let index = 0; index < growdata.Male_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_after[index].y))\n                    .attr('y1', y(growdata.Male_after[index].min))\n                    .attr('x2', x(growdata.Male_after[index + 1].y))\n                    .attr('y2', y(growdata.Male_after[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 1.5);\n            }\n\n            for (let index = 0; index < growdata.Male_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_after[index].y))\n                    .attr('y1', y(growdata.Male_after[index].max))\n                    .attr('x2', x(growdata.Male_after[index + 1].y))\n                    .attr('y2', y(growdata.Male_after[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 1.5);\n            }\n        }\n        else {\n            for (let index = 0; index < growdata.FeMale_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_after[index].y))\n                    .attr('y1', y(growdata.FeMale_after[index].min))\n                    .attr('x2', x(growdata.FeMale_after[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_after[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 1.5);\n            }\n\n            for (let index = 0; index < growdata.FeMale_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_after[index].y))\n                    .attr('y1', y(growdata.FeMale_after[index].max))\n                    .attr('x2', x(growdata.FeMale_after[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_after[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 1.5);\n            }\n        }\n\n        const datasource = weightList\n        //x時間 y體重\n        for (let index = 0; index < datasource.length; index++) {\n            const element = datasource[index];\n            const BornDay = element.rec_dat.toString().trim()\n            const BornTime = element.rec_tim.toString().trim()\n            const time = BornDay + BornTime\n            const weighttimestamp = moment(time,\"YYYYMMDDHHmm\").valueOf() //體重時間\n            const Month = (weighttimestamp - pregencyTimestamp) / (30 * 24 * 60 * 60 * 1000) //體重週數\n            if (Month < 0 || Month > 6) {\n                continue\n            }\n            console.log(Month,Number(element.value2) * 1000)\n            svg.append('circle')\n                .attr('cx', x(Month))\n                .attr('cy', y(Number(element.value2) * 1000))\n                .attr('r', 3)\n                .style('fill', 'green')\n        }\n        // const datacustom = wardchartoncustom\n        // for (let index = 0; index < datacustom.length; index++) {\n        //     const element = datacustom[index];\n        //     svg.append('circle')\n        //         .attr('cx', x(element.x))\n        //         .attr('cy', y(element.y))\n        //         .attr('r', 3)\n        //         .style('fill', 'blue')\n        // }\n\n    }\n\n    render() {\n        const { id_key, svg_key } = this.props\n        return (\n            <div id={id_key}>\n                <svg id={svg_key}></svg>\n            </div>\n        );\n    }\n}\n\nexport default Wardmonthafter;\n","import React, { Component } from 'react';\nimport WardlifeChart from './Wardlifechart'\nimport Wardmonthafter from './Wardmonthafter'\n\n\nclass Wardgrewchart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            test_items_interval: 0\n        };\n    }\n    switch_monthy() {\n        const { Data, WeightList, grewinfo } = this.props\n        console.log(grewinfo)\n        const switch_data = this.state.test_items_interval\n        switch (switch_data) {\n            case 1:\n                return <WardlifeChart grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife\"} svg_key={\"wardlife_svg\"} gender={Data.PSEX}></WardlifeChart>\n            case 0:\n                return <Wardmonthafter grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife_after\"} svg_key={\"wardlife_after_svg\"} gender={Data.PSEX}></Wardmonthafter>\n            default:\n                return null;\n        }\n    }\n    //測驗項目功能_區間按鈕樣式\n    SwitchTestItemInterval(testiteminterval) {\n        const time_selectbtn_style = {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"40px\",\n            paddingRight: \"10px\",\n            paddingLeft: \"10px\",\n            borderRadius: \"16px\",\n            backgroundColor: \"rgba(245,166,35,1)\",\n            color: \"white\",\n            fontSize: \"1rem\",\n            borderWidth: \"1px\",\n            borderStyle: \"solid\",\n            borderColor: \"rgba(245,166,35,1)\",\n            cursor: \"pointer\"\n        }\n        const time_unselectbtn_style = {\n            display: \"flex\", justifyContent: \"center\",\n            alignItems: \"center\", height: \"40px\",\n            paddingRight: \"10px\", paddingLeft: \"10px\",\n            borderRadius: \"16px\", backgroundColor: \"white\",\n            color: \"rgba(245,166,35,1)\", fontSize: \"1rem\",\n            borderWidth: \"1px\", borderStyle: \"solid\",\n            borderColor: \"rgba(245,166,35,1)\",\n            cursor: \"pointer\"\n        }\n        if (testiteminterval === this.state.test_items_interval) {\n            return time_selectbtn_style\n        }\n        else return time_unselectbtn_style\n    }\n    //測驗項目功能_區間按鈕選擇\n    Onchangetimeinterval(changestate) {\n        this.setState(\n            {\n                test_items_interval: changestate\n            }\n        )\n    }\n    render() {\n        return (\n            <div>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: 'center', height: \"50px\", backgroundColor: \"#cccccc\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", paddingLeft: \"15px\" }}>\n                    <t2>生長曲線圖</t2>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"5px\" }}>\n                        <div style={this.SwitchTestItemInterval(0)} onMouseUp={() => this.Onchangetimeinterval(0)}>滿足月</div>\n                        <div style={this.SwitchTestItemInterval(1)} onMouseUp={() => this.Onchangetimeinterval(1)}>不滿足月</div>\n                    </div>\n                </div>\n                {this.switch_monthy()}\n            </div>\n        );\n    }\n}\nexport default Wardgrewchart","import React, { Component } from 'react';\nimport editlogo from '../../Image/svg/Edit.svg'\nimport detaillogo from '../../Image/svg/details.svg'\nimport { Tooltip, Input, Button } from 'antd';\nimport './Notice.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass Notice extends Component {\n    state = {\n        caseinfo: this.props.caseinfo,\n        EditMode: false,\n        noticeData: [],\n        inputContent: undefined,\n        powerLogin: 0\n    }\n    componentDidMount() {\n        //bind function\n        this.onInputChange = this.onInputChange.bind(this);\n        //query patient notice\n        console.log(\"caseinfo: \" + JSON.stringify(this.props.caseinfo));\n        const TRID = this.props.caseinfo.TRANSINID.toString().trim()\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins, preTRID: TRID })\n        this.queryPatientImportant(TRID);\n    }\n    componentDidUpdate() {\n        const TRID = this.props.caseinfo.TRANSINID.toString().trim()\n        const preTRID = this.state.preTRID\n        if (TRID !== preTRID) {\n            this.setState({ preTRID: TRID })\n            this.queryPatientImportant(TRID);\n        }\n    }\n    queryPatientImportant(TRID) {\n        ApiProvider.getOnePatientImportantMatter(TRID)\n            .then(data => {\n                console.log(\"getOnePatientImportantMatter OK \" + JSON.stringify(data));\n                this.setState({ noticeData: data.data });\n            })\n            .catch(err => {\n                console.log(\"getOnePatientImportantMatter NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString();\n        ApiProvider.createPatientImportantMatter(this.state.inputContent, \"\", this.state.caseinfo.HISID, timeNowStr, this.state.caseinfo.TRANSINID)\n            .then(data => {\n                console.log(\"createPatientImportantMatter OK \" + JSON.stringify(data));\n                this.queryPatientImportant();\n            })\n            .catch(err => {\n                console.log(\"createPatientImportantMatter NG \" + JSON.stringify(err));\n            });\n        this.setState(\n            {\n                EditMode: false,\n                inputContent: undefined\n            }\n        )\n    }\n    renderEditButton() {\n        if (this.props.disableEdit === true) {\n            return null;\n        } else {\n            return (\n                <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin > 0 ? \"flex\" : \"none\" }}>\n                    <img src={editlogo} alt=\"editlogo\" />\n                </div>\n            )\n        }\n    }\n\n    render() {\n        function remarkcellRender(dataList) {\n            if (Array.isArray(dataList)) {\n                if (dataList.length === 0) {\n                    return (\n                        <div style={{ padding: \"5px 15px\" }}>無病人註記</div>\n                    );\n                }\n                const remarkcell = dataList.map((info, index) =>\n                    <div key={index} className='noticecontext'>\n                        <div style={{ whiteSpace: \"pre-wrap\" }}>{info.context}</div>\n                        <Tooltip placement=\"topRight\" title={tooltiptext(info.Editor, info.time)}>\n                            <img src={detaillogo} alt=\"detaillogo\" />\n                        </Tooltip>\n                    </div>\n                )\n                return remarkcell\n            }\n            return (\n                <div style={{ padding: \"5px 15px\" }}>無病人註記</div>\n            );\n        }\n        function tooltiptext(editor, time) {\n            function nullvalue(value) {\n                if (value === null || value === undefined) {\n                    return \"--\"\n                }\n                return value\n            }\n            console.log(time)\n            const t = moment(time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n            const localTime = moment.utc(t).toDate()\n            const displayTime = moment(localTime).format(\"MM/DD HH:mm\")\n            return nullvalue(editor) + \"醫師於\" + displayTime + \"更新\"\n        }\n        const remarkcell = remarkcellRender(this.state.noticeData)\n        const { TextArea } = Input;\n        return (\n            <div style={{ marginBottom: '10px' }}>\n                <div className='noticetitle'>\n                    <t2>病人註記</t2>\n                    {this.renderEditButton()}\n                </div>\n                <div className='noticecontextborder'>\n                    {remarkcell}\n                </div>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", backgroundColor: \"rgba(238,238,238,1)\" }}>\n                        <TextArea id=\"noticeContent\" placeholder=\"輸入當日註記內容\" value={this.state.inputContent} onChange={this.onInputChange} autoSize={true}></TextArea>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Notice","import React, { Component } from 'react';\nimport { Labwarningvalue } from '../../Function/Wardstate'\nimport moment from 'moment'\n\nclass Labviewitem extends Component {\n    TimeRender(time) {\n        const { Source } = this.props\n        return (\n            <centerstyle>\n                <t3 style={{ color: \"rgba(0,0,0,0.4)\" }}>{moment(time, \"YYYY-MM-DD\").format(\"MM/DD\")}</t3>\n            </centerstyle>\n        );\n    }\n    render() {\n        function RowsGrid(source) {\n            if (source === \"Wardview\") {\n                return \"1fr 2fr\"\n            }\n            return \"1fr 2fr 1fr\"\n        }\n        function RowsHeight(source) {\n            if (source === \"Wardview\") {\n                return \"80px\"\n            }\n            return \"120px\"\n        }\n        const { value, title, time, Source } = this.props\n        const TimeR = this.TimeRender(time)\n        return (\n            <div style={{ display: \"grid\", gridTemplateRows: RowsGrid(Source), height: RowsHeight(Source) }}>\n                <centerstyle>\n                    <t3>{title}</t3>\n                </centerstyle>\n                <centerstyle>\n                    <t2 style={{ fontSize: \"20px\", color: Labwarningvalue(value, title) ? \"black\" : \"red\" }}>{value}</t2>\n                </centerstyle>\n                {TimeR}\n            </div>\n        );\n    }\n}\n\nexport default Labviewitem","export function firstarea_Reg_IO() {\n    return [\"輸液\"];\n}\n\nexport function Secondarea_reg_IO() {\n    return [\"血品\"];\n}\n\nexport function Thirdarea_reg_IO() {\n    return [\"進食\"];\n}\n\nexport function Fourtharea_reg_IO() {\n    return [\"失血\", \"滲液\", \"嘔吐\", \"引流\", \"穿刺\", \"透析\", \"沖洗\", \"排便\", \"排尿\"];\n}\n\n\n\nexport function Feedarea_Reg_IO() {\n    return [\"進食\"];\n}\n\nexport function IVarea_reg_IO() {\n    return [\"血品\", \"輸液\"];\n}\n\nexport function UOarea_reg_IO() {\n    return [\"排尿\"];\n}\n\nexport function Otherarea_reg_IO() {\n    return [\"失血\", \"滲液\", \"嘔吐\", \"引流\", \"穿刺\", \"透析\", \"沖洗\", \"排便\"];\n}\n\nexport function Select_Main_Doc(DOCLIST) {\n    console.log(DOCLIST)\n    const MainDoc = DOCLIST.filter(function (value, index, array) {\n        return value.PDTYPE === \"B\"\n    })\n    if (MainDoc.length === 0) {\n        return \"\"\n    }\n    else {\n        const data = MainDoc[0]\n        return data.PDDOCNMC\n    }\n}\n\nexport function SumFeedDataMapReduce(arr) {\n    const sumlist = arr.map(function (value, index) {\n        return Number(value.inp_val2)\n    })\n    var sum = 0\n    for (let index = 0; index < sumlist.length; index++) {\n        const element = sumlist[index];\n        sum = sum + element\n    }\n    return sum\n}\n\nexport function SumIVDataMapReduce(arr) {\n    const sumlist = arr.map(function (value, index) {\n        return Number(value.inp_val1)\n    })\n    var sum = 0\n    for (let index = 0; index < sumlist.length; index++) {\n        const element = sumlist[index];\n        sum = sum + element\n    }\n    return sum\n}\n\nexport function SumUrineDataMapReduce(arr) {\n    const sumlist = arr.map(function (value, index) {\n        return Number(value.inp_val1)\n    })\n    var sum = 0\n    for (let index = 0; index < sumlist.length; index++) {\n        const element = sumlist[index];\n        sum = sum + element\n    }\n    return sum\n}\nexport function SumInOtherDataMapReduce(arr) {\n    return arr.map(el => Number(el.inp_val1)).reduce((a, b) => a + b);\n}\nexport function SumOutOtherDataMapReduce(arr) {\n    return arr.map(el => Number(el.out_val1)).reduce((a, b) => a + b);\n}\n\n\n\n//累積報告\n\nexport function ListForTime(arr, time) {\n    var DataList = []\n    for (let index = 0; index < arr.length; index++) {\n        const element = arr[index];\n        if (new Date(element.ORRESDT).getTime() <= new Date(time).getTime()) {\n            DataList.push(element)\n        }\n    }\n    return DataList\n}\n\nexport function ListForTimeAndTarget(arr, time, target) {\n    var DataList = []\n    arr.forEach(element => {\n        const parseTimestamp = new Date(element.ORRCPDT.split(\"-\")[0], element.ORRCPDT.split(\"-\")[1], element.ORRCPDT.split(\"-\")[2]).getTime()\n        const nowTimestamp = new Date(time).getTime()\n        //console.log(\"parseTimestamp: \" + parseTimestamp + \"\\nnowTimestamp: \" + nowTimestamp)\n        //console.log(element.ORPROCED.indexOf(target))\n        if (parseTimestamp <= new Date(time).getTime() && element.ORPROCED.indexOf(target) > -1) {\n            DataList.push(element)\n        }\n    })\n    return DataList\n}\n\nexport function CaRegString(ressectobject) {\n    var select = []\n    if (Array.isArray(ressectobject)) {\n        for (let index = 0; index < ressectobject.length; index++) {\n            const element = ressectobject[index];\n            const elementstring = element.ORPROCED.toString()\n            if (elementstring.match(\"Ca++, free\") !== null) {\n                select.push(element)\n            }\n        }\n    }\n    if (select.length === 0) {\n        return \"null\"\n    }\n\n}\n\nexport function QSPERegList(qspe) {\n    function SettingValue(mode, value) {\n        if (value === undefined || value === null) {\n            return \"\"\n        }\n        const valueList = value.split(\"/\")\n        if (mode === 'NC') {\n            return \"Flow:\" + valueList[0]\n        }\n        if (mode === 'HF') {\n            return \"FiO2:\" + valueList[0] + \"/PEEP:\" + valueList[1]\n        }\n        if (mode === 'UW' || mode === 'bcpap' || mode === 'CPAP') {\n            return \"FiO2:\" + valueList[0] + \"/PEEP:\" + valueList[1]\n        }\n        if (mode === 'NIPPV' || mode.match(\"PC\") !== null) {\n            return \"FiO2:\" + valueList[0] + \"/Rate:\" + valueList[1] + \"/PIP:\" + valueList[2] + \"/PEEP:\" + valueList[3]\n        }\n        if (mode.match(\"HFOV\") !== null) {\n            return \"FiO2:\" + valueList[0] + \"/Amp:\" + valueList[1] + \"/MAP:\" + valueList[2] + \"/Freq:\" + valueList[3]\n        }\n        if (mode.match(\"HFPPV\") !== null) {\n            return \"FiO2:\" + valueList[0] + \"/Rate:\" + valueList[1] + \"/PIP:\" + valueList[2] + \"/PEEP:\" + valueList[3]\n        }\n        return value\n    }\n    function formatTimer(tm) {\n        if (tm / 1000 >= 1) {\n            return tm.toString().trim()\n        }\n        return \"0\" + tm.toString().trim()\n    }\n    var qspearray = []\n    if (Array.isArray(qspe)) {\n        for (let index = 0; index < qspe.length; index++) {\n            const element = qspe[index];\n            console.log(element)\n            if (element !== undefined) {\n                const SelectElement = element.special.toString()\n                if (SelectElement.match(\"@v\") !== null) {\n                    const DataArray = SelectElement.split(\" \")\n                    const title = DataArray[1]\n                    const value = DataArray[2]\n                    const DataJson = {\n                        \"Mode\": title,\n                        \"Setting\": SettingValue(title, value),\n                        \"Date\": element.rec_dat.toString().trim(),\n                        \"Time\": element.rec_tim,\n                    }\n                    console.log(element.rec_tim)\n                    qspearray.push(DataJson)\n                }\n            }\n            console.log(qspearray)\n        }\n    }\n    return qspearray\n}\n\nexport function QSPESetting(qspesettingarray) {\n    console.log(qspesettingarray)\n    const regString = qspesettingarray.Mode\n    const regValue = qspesettingarray.Setting.split(\"/\")\n    if (regString.match(\"RA\") !== null) {\n        return \"\"\n    }\n    if (regString.match(\"NC\") !== null) {\n        return \"Flow:\" + regValue[0]\n    }\n    if (regString.match(\"UW\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/PEEP:\" + regValue[1]\n    }\n    if (regString.match(\"bcpap\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/PEEP:\" + regValue[1]\n    }\n    if (regString.match(\"CPAP\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/PEEP:\" + regValue[1]\n    }\n    if (regString.match(\"NIPPV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Rate:\" + regValue[1] + \"/PIP:\" + regValue[2] + \"/PEEP:\" + regValue[3]\n    }\n    if (regString.match(\"HFOV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Rate:\" + regValue[1] + \"/PIP:\" + regValue[2] + \"/PEEP:\" + regValue[3]\n    }\n    if (regString.match(\"HFOV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Amp:\" + regValue[1] + \"/MAP:\" + regValue[2] + \"/Freq:\" + regValue[3]\n    }\n    if (regString.match(\"HFPPV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Rate:\" + regValue[1] + \"/PIP:\" + regValue[2] + \"/PEEP:\" + regValue[3]\n    }\n    return qspesettingarray.value\n}\n","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport './Wardcardvitalsign.scss';\nimport { mmddformat } from '../Function/Timeformat'\nimport * as ApiProvider from '../API/ApiProvider'\nimport moment from 'moment';\n\n\n\nclass WardcardvitalsignChart extends Component {\n    state = {\n        sourcedata: [],\n        preHID: null\n    }\n    componentDidUpdate() {\n        const { HISID } = this.props\n        const HID = HISID.toString().trim()\n        const preHID = this.state.preHID\n        if (HID !== preHID) {\n            const { svg_key } = this.props\n            this.setState({ preHID: HISID.toString().trim() })\n            this.getCenterMonitor()\n        }\n\n    }\n    componentDidMount() {\n        const { HISID } = this.props\n        this.setState({ preHID: HISID.toString().trim() })\n        this.getCenterMonitor()\n    }\n\n    getCenterMonitor() {\n        function selectType(type) {\n            switch (type) {\n                case \"div_hr\":\n                    return \"hr\"\n                case \"div_bp\":\n                    return \"nbp\"\n                case \"div_rr\":\n                    return \"rr\"\n                case \"div_spo\":\n                    return \"spo2\"\n                case \"div_abp\":\n                    return \"abp\"\n                case \"div_bt\":\n                    return \"bt\"\n                default:\n                    break;\n            }\n        }\n        // const simdata = vitalData.simdata\n        const endTime = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").format(\"YYYYMMDDHHmmss\");\n        const startTime = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf() - (24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\");\n        const { id_key, HISID } = this.props\n        const HID = HISID.toString().trim()\n        const type = selectType(id_key)\n        if (id_key === \"div_abp\") {\n            ApiProvider.getPatientwardvalueBoxPlot(HID, startTime, endTime, type, 0)\n                .then(data => {\n                    this.setState({\n                        sourcedata: data.data\n                    })\n                    this.drawChart()\n                })\n                .catch(err => { console.log(err) })\n        }\n        if (id_key === \"div_hr\" || id_key === \"div_rr\" || id_key === \"div_spo\") {\n\n            ApiProvider.getPatientwardvalueBoxPlot(HID, startTime, endTime, type, 0)\n                .then(data => {\n                    this.setState({\n                        sourcedata: data.data\n                    })\n                    this.drawChart()\n                })\n                .catch(err => { console.log(err) })\n        }\n        if (id_key === \"div_bp\") {\n\n            ApiProvider.getVitalSignData(HID, startTime, endTime, type)\n                .then(data => {\n                    this.setState({\n                        sourcedata: data.data\n                    })\n                    this.drawChart()\n                })\n                .catch(err => {\n                    console.log(err);\n                })\n        }\n    }\n    cal_svg_hight() {\n        const { axisTop, axisBot } = this.props\n        if (axisTop) {\n            if (axisBot) {\n                return 160\n            }\n            else {\n                return 130\n            }\n        }\n        else {\n            if (axisBot) {\n                return 100\n            }\n            else {\n                return 90\n            }\n        }\n    }\n\n    cal_svg_transform() {\n        const { axisTop, axisBot } = this.props\n        console.log(axisTop)\n        if (axisTop) {\n            if (axisBot) {\n                return 70\n            }\n            else {\n                return 50\n            }\n        }\n        else {\n            if (axisBot) {\n                return 5\n            }\n            else {\n                return 5\n            }\n        }\n    }\n\n    drawChart() {\n        function multiFormat(date) {\n            if (formatHour(date) % 4 === 0) {\n                return formatHour(date)\n            }\n            else return null\n        }\n        function multibotformat(date) {\n            if (new Date(date).getHours() === 0) {\n                return mmddformat(date)\n            }\n            else return null\n        }\n        const { svg_key, circlrcolor, axisTop, id_key, axisBot, MAX, MIN, Upper, Lower } = this.props\n        const width = window.screen.availWidth * 0.25, height = 70, transformmargin = this.cal_svg_transform(), margin = 20\n        // const borderwidth = width / 27\n        const time_now = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf()\n        const startTime = time_now - (24 * 60 * 60 * 1000);\n        console.log(time_now)\n\n        var time_array = []\n        var time_axis_array = []\n        for (let index = 0; index < 25; index++) {\n            time_array.push({ key: \"time\", x_axis_time: time_now - index * 60 * 60 * 1000 })\n            time_axis_array.push(time_now - index * 60 * 60 * 1000)\n        }\n        var time_array_reverse = time_array.reverse()\n        var time_axis_array_reverse = time_axis_array.reverse()\n        var formatHour = d3.timeFormat(\"%H\")\n\n        // const endTime = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf();\n\n\n        var x = d3.scaleLinear()\n            .domain([time_array_reverse[0].x_axis_time, time_array_reverse[24].x_axis_time])\n            .range([0, width - 40]);\n\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([MIN, MAX])\n            .range([height, 0])\n\n\n\n        var yAxis = d3.axisLeft(y)\n            .tickValues([MIN, MAX])\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(10);\n\n        var xAxisBottom = d3.axisBottom(x)\n            .tickValues(time_axis_array_reverse)\n            .tickSize(0, 0)\n            .tickPadding(height + 10)\n            .tickFormat(function (d) { return multibotformat(d); });\n\n\n        var xAxis = d3.axisTop(x)\n            .tickValues(time_axis_array_reverse)\n            .tickSize(0, 0)\n            .tickPadding(margin)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n        d3.select(\"#\" + svg_key).remove()\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_key)\n            .attr(\"viewBox\", [0, 0, width, this.cal_svg_hight()])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 30 + \",\" + transformmargin + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n        if (axisTop) {\n            svg.append(\"g\")\n                .call(xAxis)\n                .attr(\"class\", \"axis\");\n        }\n\n        if (axisBot) {\n            svg.append(\"g\")\n                .call(xAxisBottom)\n                .attr(\"class\", \"axis\");\n        }\n\n        //上下虛線\n        svg.append('line')\n            .attr('x1', 0)\n            .attr('y1', y(MAX))\n            .attr('x2', width)\n            .attr('y2', y(MAX))\n            .style('stroke', '#E0E0E0')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n        svg.append('line')\n            .attr('x1', 0)\n            .attr('y1', y(MIN))\n            .attr('x2', width)\n            .attr('y2', y(MIN))\n            .style('stroke', '#E0E0E0')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n\n        for (let index = 0; index < time_array_reverse.length; index++) {\n            svg.append('line')\n                .attr('x1', x(time_array_reverse[index].x_axis_time))\n                .attr('y1', 0)\n                .attr('x2', x(time_array_reverse[index].x_axis_time))\n                .attr('y2', height)\n                .style('stroke', '#E0E0E0')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n        }\n\n\n\n        drawshadow(startTime, 0, Lower, Upper)\n        function drawshadow(startTime, interval, lower, upper) {\n            const LimitBoxTimer = formatBox(startTime, interval, width)\n            for (let index = 0; index < LimitBoxTimer.length; index++) {\n                const boxwidth = formatBoxWidth(width, interval)\n                const element = LimitBoxTimer[index];\n                console.log(startTime)\n                svg.append('line')\n                    .attr('x1', x(element))\n                    .attr('y1', y(lower))\n                    .attr('x2', x(element))\n                    .attr('y2', y(upper))\n                    .style('stroke', circlrcolor)\n                    .style('opacity', 0.7)\n                    .style('stroke-width', boxwidth)\n\n                if (id_key === \"div_bp\" || id_key === \"div_abp\") {\n                    svg.append('line')\n                        .attr('x1', x(element))\n                        .attr('y1', y(35))\n                        .attr('x2', x(element))\n                        .attr('y2', y(55))\n                        .style('stroke', circlrcolor)\n                        .style('opacity', 0.3)\n                        .style('stroke-width', boxwidth)\n                }\n            }\n        }\n        function formatBox(startTime, interval) {\n            function interFormat(startTime, interval) {\n                var TimeArray = []\n                for (let index = 0; index < interval; index++) {\n                    if (interval === 24) {\n                        const boxTime = startTime + (30 * 60 * 1000) + (index * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 18) {\n                        const boxTime = startTime + (2 * 60 * 60 * 60 * 1000) + (index * 4 * 60 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 21) {\n                        const boxTime = startTime + (4 * 60 * 60 * 60 * 1000) + (index * 8 * 60 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else {\n                        const boxTime = startTime + (12 * 60 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                }\n                return TimeArray\n            }\n            if (interval === 0) {\n                return interFormat(startTime, 24)\n            }\n            if (interval === 1) {\n                return interFormat(startTime, 18)\n            }\n            if (interval === 2) {\n                return interFormat(startTime, 21)\n            }\n            return interFormat(startTime, 14)\n        }\n        function formatBoxWidth(viewwidth, interval) {\n            if (interval === 0) {\n                return viewwidth / 24\n            }\n            if (interval === 1) {\n                return viewwidth / 18\n            }\n            if (interval === 2) {\n                return viewwidth / 21\n            }\n            return viewwidth / 14\n        }\n        // var sim_data = this.state.sourcedata\n        const BoxPlotData = this.state.sourcedata\n        if (BoxPlotData.length === 0) {\n            return null\n        }\n\n        if (id_key === \"div_abp\") {\n            const dataAbps = BoxPlotData.abps\n            const dataAbpd = BoxPlotData.abpd\n            const boxwidth = 10\n            for (let index = 0; index < dataAbpd.length; index++) {\n                const element = dataAbpd[index];\n                const q1 = element.Q1\n                const q2 = element.Q2\n                const q3 = element.Q3\n                const q4 = element.Q4\n                const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                svg.append(\"line\")\n                    .attr(\"x1\", x(Xtime))\n                    .attr(\"x2\", x(Xtime))\n                    .attr(\"y1\", y(q1))\n                    .attr(\"y2\", y(q4))\n                    .attr(\"stroke\", circlrcolor)\n                    .style('opacity', 0.5)\n                    // .attr(\"stroke\", \"blcak\")\n                    .style('stroke-width', 1)\n\n                svg.append(\"rect\")\n                    .attr(\"x\", x(Xtime) - boxwidth / 2)\n                    .attr(\"y\", y(q3))\n                    .attr(\"height\", (y(q2) - y(q3)))\n                    .attr(\"width\", boxwidth)\n                    .attr(\"stroke\", circlrcolor)\n                    .style('opacity', 0.5)\n                    .style(\"fill\", \"rgba(255,255,255,1)\")\n                    .style('stroke-width', 1);\n\n                svg\n                    .selectAll(\"toto\")\n                    .data([q1, q4])\n                    .enter()\n                    .append(\"line\")\n                    .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                    .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                    .attr(\"y1\", function (d) { return (y(d)) })\n                    .attr(\"y2\", function (d) { return (y(d)) })\n                    .attr(\"stroke\", circlrcolor)\n                    .style('opacity', 0.5)\n                    .style('stroke-width', 1);\n            }\n            for (let index = 0; index < dataAbps.length; index++) {\n                const element = dataAbps[index];\n                const q1 = element.Q1\n                const q2 = element.Q2\n                const q3 = element.Q3\n                const q4 = element.Q4\n                const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                svg.append(\"line\")\n                    .attr(\"x1\", x(Xtime))\n                    .attr(\"x2\", x(Xtime))\n                    .attr(\"y1\", y(q1))\n                    .attr(\"y2\", y(q4))\n                    .attr(\"stroke\", circlrcolor)\n                    // .attr(\"stroke\", \"blcak\")\n                    .style('stroke-width', 1)\n\n                svg.append(\"rect\")\n                    .attr(\"x\", x(Xtime) - boxwidth / 2)\n                    .attr(\"y\", y(q3))\n                    .attr(\"height\", (y(q2) - y(q3)))\n                    .attr(\"width\", boxwidth)\n                    .attr(\"stroke\", circlrcolor)\n                    .style(\"fill\", \"rgba(255,255,255,1)\")\n                    .style('stroke-width', 1);\n\n                svg\n                    .selectAll(\"toto\")\n                    .data([q1, q4])\n                    .enter()\n                    .append(\"line\")\n                    .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                    .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                    .attr(\"y1\", function (d) { return (y(d)) })\n                    .attr(\"y2\", function (d) { return (y(d)) })\n                    .attr(\"stroke\", circlrcolor)\n                    .style('stroke-width', 1);\n            }\n        }\n        if (id_key === \"div_bp\") {\n            for (let index = 0; index < BoxPlotData.length; index++) {\n                const element = BoxPlotData[index];\n                const Xtime = moment(element.Time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                const SBP = element.SBP\n                const DBP = element.DBP\n                if (SBP === 0 || DBP === 0) {\n                    continue\n                }\n                svg.append('circle')\n                    .attr('cx', x(Xtime))\n                    .attr('cy', y(SBP))\n                    .attr('r', 3)\n                    .style('fill', circlrcolor)\n\n\n                svg.append('circle')\n                    .attr('cx', x(Xtime))\n                    .attr('cy', y(DBP))\n                    .attr('r', 3)\n                    .style('opacity', 0.5)\n                    .style('fill', circlrcolor)\n            }\n        }\n        if (id_key === \"div_hr\" || id_key === \"div_rr\" || id_key === \"div_spo\") {\n            // for (let index = 0; index < BoxPlotData.length; index++) {\n            //     const element = BoxPlotData[index];\n            //     const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + (30 * 60 * 1000)\n            //     svg.append('line')\n            //         .attr('x1', x(Xtime))\n            //         .attr('y1', y(Lower))\n            //         .attr('x2', x(Xtime))\n            //         .attr('y2', y(Upper))\n            //         .style('stroke', circlrcolor)\n            //         .style('opacity', 0.5)\n            //         // .style('stroke', 'red')\n            //         .style('stroke-width', borderwidth)\n\n            // }\n            for (let index = 0; index < BoxPlotData.length; index++) {\n                const element = BoxPlotData[index];\n                console.log(element)\n                const q1 = element.Q1\n                const q2 = element.Q2\n                const q3 = element.Q3\n                const q4 = element.Q4\n                const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + (30 * 60 * 1000)\n                console.log(q1, q2, q3, q4)\n                const boxwidth = 10\n                svg.append(\"line\")\n                    .attr(\"x1\", x(Xtime))\n                    .attr(\"x2\", x(Xtime))\n                    .attr(\"y1\", y(q1))\n                    .attr(\"y2\", y(q4))\n                    .attr(\"stroke\", circlrcolor)\n                    // .attr(\"stroke\", \"blcak\")\n                    .style('stroke-width', 1)\n\n                svg.append(\"rect\")\n                    .attr(\"x\", x(Xtime) - boxwidth / 2)\n                    .attr(\"y\", y(q3))\n                    .attr(\"height\", (y(q2) - y(q3)))\n                    .attr(\"width\", boxwidth)\n                    .attr(\"stroke\", circlrcolor)\n                    .style(\"fill\", \"rgba(255,255,255,1)\")\n                    .style('stroke-width', 1);\n\n                svg\n                    .selectAll(\"toto\")\n                    .data([q1, q4])\n                    .enter()\n                    .append(\"line\")\n                    .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                    .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                    .attr(\"y1\", function (d) { return (y(d)) })\n                    .attr(\"y2\", function (d) { return (y(d)) })\n                    .attr(\"stroke\", circlrcolor)\n                    .style('stroke-width', 1);\n\n            }\n        }\n\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default WardcardvitalsignChart;","import React, { Component } from 'react';\nimport WardcardvitalsignChart from './Wardcardvitalsign'\nimport { statecolor } from '../Function/Wardstate'\nimport * as ApiProvider from '../API/ApiProvider'\nimport './Wardchart.scss'\nimport moment from 'moment';\n\n\n\nclass WardChart extends Component {\n    state = {\n        data: []\n    }\n    render() {\n        function valueFormat(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"--\"\n            }\n            return value\n        }\n        const data = this.state.data\n        const { CMvalue, HISID } = this.props\n        const vitalvalue = CMvalue\n        if (vitalvalue === undefined || vitalvalue === null) {\n            return null\n        }\n        function limitValue(value, upper, lower) {\n            if (value > upper || value < lower) {\n                return false\n            }\n            return true\n        }\n        return (\n            <div className='Wardchartlayout'>\n                <div className='halfwardchart'>\n                    <div className='singlewardchart'>\n                        <div className='firstRowTitle'>\n                            <div style={{ width: \"120px\", height: \"90px\", backgroundColor: limitValue(vitalvalue.hr, 160, 100) ? \"white\" : statecolor('HR') }}>\n                                <centerstyle>\n                                    <t4 style={{ color: limitValue(vitalvalue.hr, 160, 100) ? statecolor('HR') : \"white\" }}>HR(min)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontSize: \"40px\", color: limitValue(vitalvalue.hr, 160, 100) ? statecolor('HR') : \"white\" }}>{valueFormat(vitalvalue.hr)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <WardcardvitalsignChart MAX={200} MIN={0} Upper={160} Lower={100} HISID={HISID} svg_key={\"svg_hr\"} id_key={\"div_hr\"} data={data} axisBot={false} axisTop={true} colorshadow={\"rgba(126, 211, 33, 0.1)\"} circlrcolor={\"#779F50\"}></WardcardvitalsignChart>\n                    </div>\n                    <div className='singlewardchart'>\n                        <div className='secondRowTitle'>\n                            <div style={{ width: \"120px\", height: \"90px\", backgroundColor: limitValue(vitalvalue.nbpd, 75, 55) ? \"white\" : statecolor('BP') }}>\n                                <centerstyle>\n                                    <t4 style={{ color: limitValue(vitalvalue.nbpd, 75, 55) ? statecolor('BP') : \"white\" }}>NBP(mmHg)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontSize: \"18px\", color: limitValue(vitalvalue.nbpd, 75, 55) ? statecolor('BP') : \"white\" }}>{valueFormat(vitalvalue.nbps)}/{valueFormat(vitalvalue.nbpd)}</div>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontSize: \"14px\", color: limitValue(vitalvalue.nbpd, 75, 55) ? statecolor('BP') : \"white\" }}>({valueFormat(vitalvalue.nbpm)})</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <WardcardvitalsignChart MAX={100} MIN={0} Upper={75} Lower={55} HISID={HISID} svg_key={\"svg_bp\"} id_key={\"div_bp\"} data={data} data2={true} axisBot={false} axisTop={false} colorshadow={\"rgba(240, 144, 144, 0.1)\"} circlrcolor={\"#C12528\"} data_2_circlrcolor={\"rgba(240, 144, 144, 0.5)\"}></WardcardvitalsignChart>\n                    </div>\n                    <div className='singlewardchart'>\n                        <div className='thirdRowTitle'>\n                            <div style={{ width: \"120px\", height: \"90px\", backgroundColor: limitValue(vitalvalue.abpd, 75, 55) ? \"white\" : statecolor('BP') }}>\n                                <centerstyle>\n                                    <t4 style={{ color: limitValue(vitalvalue.abpd, 75, 55) ? statecolor('BP') : \"white\" }}>BP(mmHg)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontSize: \"18px\", color: limitValue(vitalvalue.abpd, 75, 55) ? statecolor('BP') : \"white\" }}>{valueFormat(vitalvalue.abps)}/{valueFormat(vitalvalue.abpd)}</div>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontSize: \"14px\", color: limitValue(vitalvalue.abpd, 75, 55) ? statecolor('BP') : \"white\" }}>({valueFormat(vitalvalue.abpm)})</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <WardcardvitalsignChart MAX={100} MIN={0} Upper={75} Lower={55} HISID={HISID} svg_key={\"svg_abp\"} id_key={\"div_abp\"} data={data} data2={true} axisBot={true} axisTop={false} colorshadow={\"rgba(240, 144, 144, 0.1)\"} circlrcolor={\"#C12528\"} data_2_circlrcolor={\"rgba(240, 144, 144, 0.5)\"}></WardcardvitalsignChart>\n                    </div>\n                </div>\n                <div className='halfwardchart'>\n                    <div className='singlewardchart'>\n                        <div className='firstRowTitle'>\n                            <div style={{ width: \"120px\", height: \"90px\", backgroundColor: limitValue(vitalvalue.spo2, 100, 90) ? \"white\" : statecolor('SpO2') }}>\n                                <centerstyle>\n                                    <t4 style={{ color: limitValue(vitalvalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>SpO2(%)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontSize: \"40px\", color: limitValue(vitalvalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>{valueFormat(vitalvalue.spo2)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <div>\n                            <WardcardvitalsignChart MAX={100} MIN={60} Upper={100} Lower={90} HISID={HISID} svg_key={\"svg_spo\"} id_key={\"div_spo\"} data={data} axisBot={false} axisTop={true} colorshadow={\"rgba(0, 183, 255, 0.1)\"} circlrcolor={\"#4773B8\"}></WardcardvitalsignChart>\n                        </div>\n                    </div>\n                    <div className='singlewardchart'>\n                        <div className='secondRowTitle'>\n                            <div style={{ width: \"120px\", height: \"90px\", backgroundColor: limitValue(vitalvalue.bt, 38, 36) ? \"white\" : statecolor('BT') }}>\n                                <centerstyle>\n                                    <t4 style={{ color: limitValue(vitalvalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>BT(<sup>&ordm;</sup>C)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontSize: \"40px\", color: limitValue(vitalvalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>{valueFormat(vitalvalue.bt)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <WardcardvitalsignChart MAX={43} MIN={33} Upper={38} Lower={36} HISID={HISID} svg_key={\"svg_bt\"} id_key={\"div_bt\"} data={data} axisBot={false} axisTop={false} colorshadow={\"rgba(199, 162, 244,0.1)\"} circlrcolor={\"#7F3DB5\"}></WardcardvitalsignChart>\n                    </div>\n                    <div className='singlewardchart'>\n                        <div className='thirdRowTitle'>\n                            <div style={{ width: \"120px\", height: \"90px\", backgroundColor: limitValue(vitalvalue.rr, 60, 20) ? \"white\" : statecolor('RR') }}>\n                                <centerstyle>\n                                    <t4 style={{ color: limitValue(vitalvalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>RR(min)</t4>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontSize: \"40px\", color: limitValue(vitalvalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>{valueFormat(vitalvalue.rr)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <WardcardvitalsignChart MAX={100} MIN={0} Upper={60} Lower={20} HISID={HISID} svg_key={\"svg_rr\"} id_key={\"div_rr\"} data={data} axisBot={true} axisTop={false} colorshadow={\"rgba(255, 152, 0, 0.1)\"} circlrcolor={\"#DE7531\"}></WardcardvitalsignChart>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WardChart;","import React, { Component } from 'react';\nimport { Checkbox } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider'\n\nclass Wardinfousercheckbox extends Component {\n    state = {\n        checkboxselect: this.props.selectstate\n    }\n\n    updateOnePatientTodo() {\n        if (this.state.checkboxselect) {\n            ApiProvider.createTodo(this.props.item.caseid, this.props.item.context, this.props.item.time, this.props.item.transinno, '已完成')\n                .then(data => {\n                    console.log('updateOnePatientTodo ok ' + JSON.stringify(data))\n                })\n                .catch(err => {\n                    console.log('updateOnePatientTodo ng ' + JSON.stringify(err))\n                })\n        } else {\n            ApiProvider.createTodo(this.props.item.caseid, this.props.item.context, this.props.item.time, this.props.item.transinno, '未完成')\n                .then(data => {\n                    console.log('updateOnePatientTodo ok ' + JSON.stringify(data))\n                })\n                .catch(err => {\n                    console.log('updateOnePatientTodo ng ' + JSON.stringify(err))\n                })\n        }\n    }\n    selectchange() {\n        this.setState({\n            checkboxselect: !this.state.checkboxselect\n        }, this.updateOnePatientTodo)\n    }\n\n    render() {\n        const selectunstyle = {\n            fontSize: \"1rem\"\n        }\n        const selectstyle = {\n            textDecoration: \"line-through\", fontSize: \"1rem\"\n        }\n        return (\n            <div style={{ height: \"50px\", paddingLeft: \"15px\", display: \"flex\", alignItems: \"center\" }}>\n                <Checkbox onChange={() => this.selectchange()} checked={this.state.checkboxselect} style={this.state.checkboxselect ? selectstyle : selectunstyle}>{this.props.item.context}</Checkbox>\n            </div>\n        )\n    }\n\n}\n\nexport default Wardinfousercheckbox;","import React, { Component } from 'react';\nimport './Patientviewinfo.scss'\nclass Patientinfo extends Component {\n\n    state = { visible: false };\n    render() {\n        const { patientDetail } = this.props\n        // console.log(patientDetail)\n        const patientData = patientDetail.map(element =>\n            <div className='context'>\n                <div className='title'>{element[0]} ：</div>\n                <div className='item'>{element[1]}</div>\n            </div>\n        )\n\n        console.log(patientData)\n\n        return (\n            <div className='patientinfolayout'>\n                {patientData}\n            </div>\n        );\n    }\n}\n\nexport default Patientinfo\n","import React, { useState, useEffect } from \"react\";\nimport './Wardinfouser.scss'\nimport moment from 'moment'\nimport { Modal } from 'antd';\nimport * as Wardstate from '../Function/Wardstate'\nimport * as ApiProvider from '../API/ApiProvider'\nimport * as ApiGithub from '../API/ApiGithub'\nimport { pregancyweeksanddays, gender } from '../Function/Wardbedfunction'\nimport fileLogo from '../Image/svg/file1.svg'\nimport file2Logo from '../Image/svg/file2.svg'\nimport Wardgrewchart from './Wardgrewchart'\nimport Notice from '../Patientview/Schedule/Notice'\nimport Labviewlayout from '../Patientview/CrossSectionView/Labview'\nimport WardChart from './Wardchart'\nimport Wardinfousercheckbox from './Wardunfousercheckbox'\nimport { Link } from \"react-router-dom\";\nimport * as Reg from '../Data/RegularData';\nimport Patientinfo from '../Patientview/Patientviewinfo';\nimport Wardcarstatus from './Wardcardstatus'\n\n\nexport function Wardinfouser(props) {\n    const [Visible, setVisible] = useState(false);\n    const [Report, SetReport] = useState(0);\n    const [Nonreport, SetNonreport] = useState(0);\n    const [RESLAB01, SetRESLAB01] = useState([]);\n    const [RESLAB02, SetRESLAB02] = useState([]);\n    const [RESDBGAS, SetRESDBGAS] = useState([]);\n    const [RESLAB0C, SetRESLAB0C] = useState([]);\n    const [RESDGLU1, SetRESDGLU1] = useState([]);\n    const [RESSECT, SetRESSECT] = useState([]);\n    const [CenterMonitorValue, SetCenterMonitorValue] = useState([])\n    const [scheduleList, SetScheduleList] = useState([]);\n    const [todoList, SetTodoList] = useState([]);\n    const [QENT, SetQENT] = useState([]);\n    const [CID, SetCID] = useState(null);\n    const [HID, SetHID] = useState(null);\n    const [TransInDt, SetTransInDt] = useState(null);\n    const [Timer, SetTimer] = useState(0)\n\n    // useEffect(() => {\n    //     const caseinfo = props.location.state.data\n    //     const CASEID = caseinfo.PCASENO.toString()\n    //     const transindt = caseinfo.TRANSINDT.toString().trim()\n    //     const HISID = caseinfo.PHISTNUM.toString().trim()\n    //     console.log(CASEID, transindt)\n    //     SetCID(CASEID);\n    //     SetTransInDt(transindt);\n    //     SetHID(HISID)\n    // })\n\n    useEffect(() => {\n        const TimerID = setInterval(() => {\n            SetTimer(Timer + 1)\n        }, 5000)\n        return () => clearInterval(TimerID);\n    }, [Timer])\n\n    useEffect(() => {\n        const data = props.location.state.data\n        const hisid = data.PHISTNUM.toString().trim()\n        const time = moment(TransInDt, 'YYYYMMDD').format(\"YYYY-MM-DD\")\n        ApiProvider.getStoredProcedureRESLAB0C(hisid, time)\n            .then(data => { SetRESLAB0C(data.data) })\n    }, [props.location.state.data.PHISTNUM, props.location.state.data.TRANSINDT])\n\n    useEffect(() => {\n        const data = props.location.state.data\n        const hisid = data.PHISTNUM.toString().trim()\n        const time = moment(data.TRANSINDT.toString().trim(), 'YYYYMMDD').format(\"YYYY-MM-DD\")\n        ApiProvider.getStoredProcedureRESLAB01(hisid, time)\n            .then(data => { SetRESLAB01(data.data) })\n    }, [props.location.state.data.PHISTNUM, props.location.state.data.TRANSINDT])\n\n    useEffect(() => {\n        const data = props.location.state.data\n        const hisid = data.PHISTNUM.toString().trim()\n        // const caseid = data.PCASENO.toString().trim()\n        const time = moment(data.TRANSINDT.toString().trim(), 'YYYYMMDD').format(\"YYYY-MM-DD\")\n        ApiProvider.getStoredProcedureRESLAB02(hisid, time)\n            .then(data => { SetRESLAB02(data.data) })\n    }, [props.location.state.data.PHISTNUM, props.location.state.data.TRANSINDT])\n\n\n\n    useEffect(() => {\n        const data = props.location.state.data\n        const hisid = data.PHISTNUM.toString().trim()\n        // const caseid = data.PCASENO.toString().trim()\n        const time = moment(data.TRANSINDT.toString().trim(), 'YYYYMMDD').format(\"YYYY-MM-DD\")\n        ApiProvider.getStoredProcedureRESDBGAS(hisid, time)\n            .then(data => {\n                SetRESDBGAS(data.data)\n            })\n    }, [props.location.state.data.PHISTNUM, props.location.state.data.TRANSINDT])\n\n\n\n\n\n    useEffect(() => {\n        const data = props.location.state.data\n        const caseid = data.PCASENO.toString()\n        ApiProvider.getQENT(caseid)\n            .then(data => {\n                console.log(data.data)\n                const parsedata = Wardstate.XM2JSON(data.data)\n                SetQENT(parsedata)\n            })\n            .catch(err => {\n                console.log(\"Andy test getQENT NG \" + JSON.stringify(err));\n            });\n    }, [props.location.state.data.PCASENO]);\n\n    useEffect(() => {\n        const data = props.location.state.data\n        // const hisid = \"TEST1234\"\n        const hisid = data.PHISTNUM.toString()\n        ApiProvider.getHisidwardvalue(hisid)\n            .then(data => {\n                console.log(data.data)\n\n                SetCenterMonitorValue(data.data[0]);\n            })\n            .catch(err => {\n                console.log(\"Andy test getHisidwardvalue NG \" + JSON.stringify(err));\n            });\n    }, [Timer, props.location.state.data.PHISTNUM]);\n\n\n    useEffect(() => {\n        const data = props.location.state.data\n        const hisid = data.PHISTNUM.toString()\n        const beforeOneDay = new Date().getTime() - (24 * 60 * 60 * 1000)\n\n        ApiProvider.getStoredProcedureRESSECT(hisid, 1, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                const ReportList = data.data\n                const mapList = ReportList.filter(function (value, index, array) {\n                    const DTstring = value.ORRCPDT.toString()\n                    const TMstring = value.ORRCPTM.toString()\n                    const time = DTstring + TMstring\n                    return moment(time, 'YYYY-MM-DDHH:mm:ss').valueOf() > beforeOneDay\n                })\n                SetReport(mapList.length)\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureRESSECT NG \" + JSON.stringify(err));\n            });\n    }, [props.location.state.data.PHISTNUM]);\n\n    useEffect(() => {\n        const data = props.location.state.data\n        const hisid = data.PHISTNUM.toString()\n        const TRANSINDT = data.TRANSINDT\n\n        ApiProvider.getStoredProcedureORDLIST(hisid, moment(TRANSINDT, \"YYYYMMDD\").format('YYYY-MM-DD'), \"ALL\", \"DOC3924B\")\n            .then(data => {\n                const ORDERLIST = data.data\n                const ORDERLISTMAP = ORDERLIST.filter(function (element, index, arr) {\n                    return element.ORSTATUS === \"31\"\n                })\n                SetNonreport(ORDERLISTMAP.length)\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err));\n            });\n    }, [props.location.state.data.PHISTNUM, props.location.state.data.TRANSINDT]);\n\n\n\n\n    // useEffect(() => {\n    //     console.log(\"query schedule list\")\n\n    //     const data = props.location.state.data\n    //     const source = data\n    //     const PLOC = source.PLOC\n    //     const TRANSINID = source.TRANSINID.toString()\n\n    //     const now = new Date();\n    //     const todayBegin = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    //     const startTime = todayBegin.toISOString().split(\".\")[0];\n    //     const endTime = new Date(todayBegin.getTime() + 24 * 60 * 60 * 1000).toISOString().split(\".\")[0];\n    //     ApiProvider.getOnePatientSchedule(TRANSINID, startTime, endTime)\n    //         .then(result => {\n    //             console.log(\"getOnePatientSchedule OK \" + JSON.stringify(result.data));\n    //             SetScheduleList(result.data);\n    //         })\n    //         .catch(err => {\n    //             console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n    //         });\n    // }, [props.location.state.data.TRANSINID]);\n\n    // useEffect(() => {\n    //     console.log(\"query todo list\")\n\n    //     const data = props.location.state.data\n    //     const source = data\n    //     const PLOC = source.PLOC\n    //     const TRANSINID = source.TRANSINID.toString()\n\n\n    //     ApiProvider.getOneTodo(TRANSINID, source.PCASENO.toString())\n    //         .then(result => {\n    //             console.log(\"getOneTodo OK \" + JSON.stringify(result.data));\n    //             SetTodoList(result.data);\n    //         })\n    //         .catch(err => {\n    //             console.log(\"getOneTodo NG \" + JSON.stringify(err));\n    //         });\n    // }, [CASEIDSTATUS]);\n\n    function renderScheduleItem() {\n        if (scheduleList.length === 0) {\n            return (\n                <div>沒有排程</div>\n            )\n        } else {\n            return scheduleList.map((item, index) => {\n                if (item.type === \"排程\") {\n                    const rawDateStr = item.time;\n                    const time = moment(item.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n                    const localTime = moment.utc(time).toDate()\n                    const displayTimeStr = moment(localTime).format(\"MM/DD HH:mm\")\n                    return (\n                        <div key={index} style={{ height: \"50px\", display: 'grid', gridTemplateColumns: \"35% 65%\", borderBottomWidth: \"1px\", borderBottomColor: \"rgba(232, 232, 232, 1)\", borderBottomStyle: \"solid\" }}>\n                            <div style={{ fontSize: \"1rem\", display: \"flex\", paddingLeft: \"15px\", alignItems: \"center\" }}>{displayTimeStr}</div>\n                            <div style={{ fontSize: \"1rem\", display: \"flex\", paddingLeft: \"15px\", alignItems: \"center\" }}>{item.context}</div>\n                        </div>\n                    )\n                }\n            })\n        }\n    }\n    function renderTodoItem() {\n        if (todoList.length === 0) {\n            return (\n                <div>沒有待辦事項</div>\n            )\n        } else {\n            return todoList.map((item, index) => {\n                if (item.type === \"未完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={false}></Wardinfousercheckbox>)\n                } else if (item.type === \"已完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={true}></Wardinfousercheckbox>)\n                }\n\n            });\n        }\n    }\n\n\n\n\n\n    function valueFormat(value) {\n        if (value === \"\" || value === null || value === undefined) {\n            return \"--\"\n        }\n        return value.toString()\n    }\n    function valueBornWeight(value) {\n        if (value === \"\" || value === null || value === undefined || value === 0) {\n            return \"\"\n        }\n        return value.toString() + \"g → \"\n    }\n\n    function fixpatientDate(data) {\n        const transdata = {\n            'cause': '住院原因',\n            'car_pho': '主要照顧者電話',\n            'care': '主要照顧者',\n            'con_1': '聯絡人1',\n            'con_p11': '聯絡人1電話',\n            'con_2': '聯絡人2',\n            'con_p21': '聯絡人2電話',\n            'dvs': '住院時生命徵象',\n            'habit': '飲食狀況',\n            'oxy': '住院時氧和評估',\n            'h_val': '住院時頭圍',\n            'b_val': '住院時胸圍',\n            'tall': '住院時身高',\n            'weight': '住院時體重'\n        }\n\n        const patientDate = []\n\n        for (let index in transdata) {\n            if (data[index] !== \"\") {\n                patientDate.push([transdata[index], data[index]])\n            }\n        }\n\n        return patientDate\n    }\n\n    const data = props.location.state.data\n    const source = data\n    const Birthday = source.PBIRHDT\n    const QTWER = Wardstate.XM2JSON(source.QTWPER)\n    const QMNC = Wardstate.XM2JSON(source.QMNC)\n    const ListWeight = Wardstate.WeightList(QTWER)\n    const BornWeight = Wardstate.BornWeight(QTWER, Birthday)\n    const Weight = Wardstate.NewestWeight(QTWER)\n    const BornWeeks = QMNC.weeks\n    const BornDays = QMNC.days\n    const TRANSINID = source.TRANSINID\n    const DOCLIST = source.PDOCNEW\n    const MainDoc = Wardstate.Doc(DOCLIST, \"B\")\n    const LiveDoc = Wardstate.Doc(DOCLIST, \"D\")\n    const MainNur = Wardstate.Doc(DOCLIST, \"N\")\n    const ICUMainDoc = Wardstate.Doc(DOCLIST, \"U\")\n\n    // const PBASINFO = data.PBASINFO\n    const caseinfo = {\n        \"HISID\": source.PHISTNUM.toString(),\n        \"CASEID\": source.PCASENO.toString(),\n        \"WEEK_BORN\": BornWeeks,\n        \"DAY_BORN\": BornDays,\n        \"TRANSINID\": TRANSINID,\n        \"TRANSINDT\": TRANSINID,\n        \"WEIGHT\": QTWER,\n        \"PBASINGNINFO\": source\n    }\n\n    function RenderInfo() {\n        if (QENT.length === 0) {\n            return null\n        }\n        return (\n            <t3 className='wardblacktoindex' onClick={() => setVisible(true)}>查看病人基本資料</t3>\n        );\n    }\n    const grewinfo = {\n        \"WEEK_BORN\": BornWeeks,\n        \"DAY_BORN\": BornDays,\n        \"BIRTHDAY\": Birthday\n    }\n    const patientDetail = fixpatientDate(QENT)\n    return (\n        <div className='wardinfouserlayout'>\n            <Modal\n                width={800}\n                title=\"病人基本資料\"\n                visible={Visible}\n                onOk={() => setVisible(false)}\n                onCancel={() => setVisible(false)}\n                footer={null}>\n                <Patientinfo patientDetail={patientDetail}></Patientinfo>\n            </Modal>\n            <div className='wardinfopatient'>\n                <div style={{ height: '50px', display: 'grid', gridTemplateColumns: \"1fr 1fr 1fr\" }}>\n                    <Link to=\"/nicu/ward/wardindex\" style={{ alignItems: \"center\", display: \"flex\" }}>\n                        <t2 className='wardblacktoindex'>&larr;返回總覽</t2>\n                    </Link>\n                    <centerstyle>\n                        <t1>病人資訊摘要</t1>\n                    </centerstyle>\n                </div>\n                <div style={{ height: \"50px\" }}>\n                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <t2>床號:{Number(source.HBEDNO)},{source.PNAMEC.toString().trim()},{gender(source.PSEX)},{moment(Birthday, \"YYYYMMDD\").format(\"YYYY/MM/DD\")},{source.PHISTNUM.toString().trim()}</t2>\n                        <Wardcarstatus source={false} PCASENO={source.PCASENO} PHISTNUM={source.PHISTNUM}></Wardcarstatus>\n                    </div>\n                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                            <t2 style={{ marginRight: \"16px\" }}>[{valueFormat(BornWeeks)}+{valueFormat(BornDays)}]&rarr;{pregancyweeksanddays(BornWeeks, BornDays, moment(Birthday, 'YYYYMMDD').format('YYYY/MM/DD'))}</t2>\n                            <t4>{valueBornWeight(BornWeight)}{valueFormat(Weight)}g</t4>\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", width: \"70px\" }}>\n                                <img src={fileLogo} alt='fileLogo'></img>\n                                <t4>{Report}</t4>\n                                <img src={file2Logo} alt='file2Logo'></img>\n                                <t4>{Nonreport}</t4>\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,auto)\", gridColumnGap: \"10px\" }}>\n                            <t3>主治醫師 {MainDoc}</t3>\n                            <t3>加護主治醫師 {ICUMainDoc}</t3>\n                            <t3>住院醫師 {LiveDoc}</t3>\n                            <t3>專科護理師 {MainNur}</t3>\n                            {RenderInfo()}\n                        </div>\n                    </div>\n                </div>\n                <div className='wardinfousercontent'>\n                    <div style={{ padding: \"10px 15px\" }}>\n                        <WardChart HISID={source.PHISTNUM} CMvalue={CenterMonitorValue}></WardChart>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\" }}>\n                        <div style={{ borderRadius: \"4px\" }}>\n                            <div style={{ backgroundColor: \"#cccccc\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"50px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2>檢驗項目</t2>\n                            </div>\n                            <Labviewlayout Source={\"Wardview\"} PickerDate={moment(moment().format('YYYYMMDD')).valueOf()} RESLAB01={RESLAB01} RESLAB02={RESLAB02} RESDBGAS={RESDBGAS} RESLAB0C={RESLAB0C} RESDGLU1={RESDGLU1} RESSECT={RESSECT}></Labviewlayout>\n                        </div>\n                        <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\" }}>\n                            <Wardgrewchart grewinfo={grewinfo} Data={source} WeightList={ListWeight}></Wardgrewchart>\n                        </div>\n                    </div>\n                    <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\", marginTop: \"10px\" }}>\n                        {<Notice caseinfo={caseinfo} disableEdit={true}></Notice>}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\", marginTop: \"10px\" }}>\n                        <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\" }}>\n                            <div style={{ backgroundColor: \"#cccccc\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"50px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2>排程</t2>\n                            </div>\n                            <div style={{ maxHeight: \"200px\", overflow: 'auto', minHeight: \"50px\" }}>\n                                {renderScheduleItem()}\n                            </div>\n                        </div>\n                        <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\" }}>\n                            <div style={{ backgroundColor: \"#cccccc\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"50px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2>待辦事項</t2>\n                            </div>\n                            <div style={{ maxHeight: \"200px\", overflow: 'auto', minHeight: \"50px\" }}>\n                                {renderTodoItem()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n} \n","import React, { Component } from 'react';\nimport * as antswitch from 'antd';\nimport Wardcarddetail from '../Wardcard/Wardcarddetail';\nimport Unpreviewwardcarddetail from '../Wardcard/UnpreviewWardCardDetail'\nimport Wardinfoindex from '../Wardinfoindex'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport './Bedview.scss'\nimport moment from 'moment';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport * as WardinfouserK from '../Wardinfouser-k'\n\n\nclass Bedview extends Component {\n    state = {\n        index: true,\n        previewmode: false,\n        simplemode: true,\n        SelectHISID: null,\n        source: []\n    };\n    HBEDApiGet() {\n        ApiProvider.getTableHBED()\n            .then(data => {\n                this.setState({\n                    source: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n    }\n    componentDidMount() {\n        this.HBEDApiGet()\n    }\n\n    onWardcardDisplay() {\n        //WardCard Border\n        function ChangeColor(selectID, cardID) {\n            if (selectID === cardID) {\n                return \"1px solid rgba(245, 166, 35, 1)\"\n            }\n            return \"1px solid rgba(59, 151, 225, 1)\"\n        }\n        const simple_style = { display: \"grid\", gridTemplateColumns: \"322px 1fr\", gridGap: \"5px\", marginTop: \"5px\" }\n        const Unsimple_style = { display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr 1fr\", gridTemplateRows: \"1fr 1fr 1fr\", gridGap: \"5px\", marginTop: \"5px\" }\n        const source = this.state.source;\n        const wardcarddetaillist = []\n        //simplemode true:病人摘要檢視(開) false:病人摘要檢視(關)\n        //previewmode true:床頭卡顯示(繁) flase:床頭卡顯示(簡) \n        if (this.state.simplemode) {\n            for (let index = 0; index < source.length; index++) {\n                const element = source[index]\n                const string = \"/nicu/ward/wardinfo/\" + element.HBEDNO\n                if (element.PHISTNUM.toString().trim() !== \"\") {\n                    wardcarddetaillist.push(\n                        <Link to={{ pathname: string, state: { data: element } }} style={{ border: ChangeColor(this.state.SelectHISID, element.PHISTNUM), borderRadius: \"4px\" }} onClick={() => { this.setState({ SelectHISID: element.PHISTNUM }) }}>\n                            <Wardcarddetail key={index} data={element} previewmode={this.state.previewmode} hbedlist={source} />\n                        </Link>\n                    )\n                }\n            }\n            return (\n                <div style={this.state.simplemode ? simple_style : Unsimple_style}>\n                    <div className='wardcardcontent'>\n                        {wardcarddetaillist}\n                    </div>\n                    <Switch>\n                        <Route path={`${this.props.match.path}/wardindex`} component={Wardinfoindex} />\n                        <Route path={`${this.props.match.path}/wardinfo`} component={WardinfouserK.Wardinfouser} />\n                    </Switch>\n                </div>\n            );\n        }\n        else {\n            for (let index = 1; index < 15; index++) {\n                const element = source.filter(function (value, i) {\n                    return Number(value.HBEDNO) === index\n                })\n                if (index === 4 || index === 13) {\n                    continue\n                }\n                if (element.length === 0) {\n                    wardcarddetaillist.push(\n                        <div style={{ border: \"1px solid rgba(59, 151, 225, 1)\" }}>\n                            <Unpreviewwardcarddetail bednumber={index} key={index} previewmode={this.state.previewmode} />\n                        </div>\n                    )\n                }\n                else {\n                    console.log(element)\n                    if (element[0].PHISTNUM.toString().trim() === \"\") {\n                        wardcarddetaillist.push(\n                            <div style={{ border: \"1px solid rgba(59, 151, 225, 1)\" }}>\n                                <Unpreviewwardcarddetail bednumber={index} key={index} previewmode={this.state.previewmode} />\n                            </div>\n                        )\n                    }\n                    else {\n                        console.log(element)\n                        wardcarddetaillist.push(\n                            <div style={{ border: \"1px solid rgba(59, 151, 225, 1)\" }}>\n                                <Wardcarddetail key={index} data={element[0]} previewmode={this.state.previewmode} hbedlist={source} />\n                            </div>\n                        )\n                    }\n                }\n            }\n            return (\n                <div style={this.state.simplemode ? simple_style : Unsimple_style}>\n                    {wardcarddetaillist}\n                </div>\n            );\n        }\n    }\n\n\n\n    render() {\n        function switch_titile_string(hisid, source) {\n            function addzero(value) {\n                if (value < 10) {\n                    return \"0\" + value\n                }\n                else return value\n            }\n            if (hisid === null) {\n                return \"NICU總覽\"\n            }\n            else {\n                const filterdata = source.filter(function (item, index, array) {\n                    return item.PHISTNUM === HISID;\n                });\n                const HBEDNUMBER = addzero(parseInt(filterdata[0].HBEDNO))\n                return \"床號\" + HBEDNUMBER + \"病人資訊摘要\"\n            }\n        }\n        const source = this.state.source\n        const HISID = this.state.SelectHISID\n        const title = switch_titile_string(HISID, source)\n        const WardCard = this.onWardcardDisplay()\n\n        return (\n            <div>\n                <div style={{ height: \"40px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ color: \"rgba(0, 0, 0, 0.85)\" }}>住院病人資訊 > {title}</t2>\n                </div>\n                <div style={{ height: \"25px\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"10px\" }}>\n                        <antswitch.Switch checkedChildren=\"即時生命徵象(繁)\" unCheckedChildren=\"即時生命徵象(簡)\" defaultChecked={this.state.previewmode} onChange={(checked) => { this.setState({ previewmode: checked }) }} />\n                        <antswitch.Switch checkedChildren=\"顯示摘要(開)\" unCheckedChildren=\"顯示摘要(關)\" defaultChecked={this.state.simplemode} onChange={(checked) => { this.setState({ simplemode: checked }) }} />\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto auto\", gridColumnGap: \"10px\" }}>\n                        <t3>資料更新時間</t3>\n                        <t3>{moment().format('YYYY/MM/DD HH:mm:ss')}</t3>\n                    </div>\n                </div>\n                {WardCard}\n            </div>\n        );\n    }\n}\n\nexport default Bedview;\n","import React, { Component } from 'react';\nimport { Icon, Upload, Table, Input, DatePicker, Button } from 'antd';\nimport { Link } from 'react-router-dom';\nimport * as ApiProvider from '../API/ApiProvider';\nimport moment from 'moment';\n\nclass Historyview extends Component {\n    state = {\n        MouseClick: 0,\n        allPatientDisplayData: [],\n        allPatientUnset: [],\n        allPatientSet: [],\n        selectedRowsArray: [],\n        hospitalindex: '',\n        selectedFile: null,\n        fileList: [],\n        uploading: false,\n        name: '',\n        hisid: '',\n        doctor: '',\n        transOuttime: undefined\n    }\n\n    componentDidMount() {\n        this.onChangeName = this.onChangeName.bind(this)\n        this.onChangeHisid = this.onChangeHisid.bind(this)\n        //this.onChangeDoctor = this.onChangeDoctor.bind(this)\n        this.onClickSearch = this.onClickSearch.bind(this)\n        this.onChangeDate = this.onChangeDate.bind(this)\n        console.log(\"Historyview componentDidMount\")\n        ApiProvider.getAllPatient()\n            .then(result => {\n                console.log(\"getAllPatient OK \" + JSON.stringify(result));\n                const setedUser = result.data.filter(item => item.transouttime !== \"unset\");\n                const unsetUser = result.data.filter(item => item.transouttime === \"unset\");\n                this.setState({\n                    allPatientDisplayData: setedUser,\n                    allPatientUnset: unsetUser,\n                    allPatientSet: setedUser\n                });\n            })\n            .catch(err => {\n                console.log(\"getAllPatient NG \" + JSON.stringify(err));\n            });\n    }\n\n    MouseClickTable(record) {\n        //console.log(this.state.MouseClick)\n        this.setState({\n            MouseClick: record\n        })\n    }\n\n    EditStyle(HISID, CASEID, TRANSINID, key) {\n        if (key === this.state.MouseClick) {\n            return (\n                <Link to={{ pathname: \"/nicu/patient/\" + HISID, state: { \"source\": [], \"HISID\": HISID, \"CASEID\": CASEID, \"BEDNUMBER\": 0, \"TYPE\": false, \"TRANSINID\": TRANSINID } }} style={{ height: \"40px\", width: \"100px\", borderRadius: \"4px\" }}>檢視</Link>\n            );\n        }\n        else return null\n    }\n\n    genderswitch(key) {\n        if (key === \"M\") {\n            return '男'\n        }\n        else {\n            return '女'\n        }\n    }\n\n    bornweeks(birthday) {\n        //console.log(Math.floor(birthday / 7))\n        //console.log(birthday % 7)\n        const weeks = Math.floor(birthday / 7)\n        const days = birthday % 7\n        if (days === 0) {\n            return weeks + '週歲'\n        }\n        else return weeks + '週' + days + '天'\n    }\n\n    exportClick() {\n        this.state.selectedRowsArray.map((data, index) => {\n            ApiProvider.exportJson(data.hospitalindex)\n                .then(result => {\n                    ApiProvider.downloadFile(result.data.filename)\n                        .then(resultD => {\n                            const url = window.URL.createObjectURL(new Blob([JSON.stringify(resultD.data)]));\n                            const link = document.createElement('a');\n                            link.href = url;\n                            link.setAttribute('download', result.data.filename);\n                            document.body.appendChild(link);\n                            link.click();\n                        }).catch(err => { })\n                })\n                .catch(err => { })\n        })\n    }\n\n    handleUpload = () => {\n        const { fileList } = this.state\n        const formData = new FormData()\n        fileList.forEach(file => {\n            formData.append('file', file)\n        })\n\n        this.setState({\n            uploading: true,\n        })\n\n        ApiProvider.uploadFile(formData)\n            .then(res => {\n                ApiProvider.importJson(res.data)\n                    .then(result => {\n                        ApiProvider.getAllPatient()\n                            .then(result => {\n                                const setedUser = result.data.filter(item => item.transouttime !== \"unset\");\n                                const unsetUser = result.data.filter(item => item.transouttime === \"unset\");\n                                this.setState({\n                                    allPatientDisplayData: setedUser,\n                                    allPatientUnset: unsetUser,\n                                    allPatientSet: setedUser\n                                });\n                            })\n                            .catch(err => {\n                                console.log(\"getAllPatient NG \" + JSON.stringify(err));\n                            });\n                    })\n                    .catch(err => { })\n            })\n            .catch(err => { })\n    }\n\n    deleteHistoryUser() {\n        this.state.selectedRowsArray.map((data, index) => {\n            ApiProvider.deletePatient(data.hospitalindex, data.hospitalnumber, data.id)\n                .then(res => {\n                    ApiProvider.getAllPatient()\n                        .then(result => {\n                            const setedUser = result.data.filter(item => item.transouttime !== \"unset\");\n                            const unsetUser = result.data.filter(item => item.transouttime === \"unset\");\n                            this.setState({\n                                allPatientDisplayData: setedUser,\n                                allPatientUnset: unsetUser,\n                                allPatientSet: setedUser\n                            });\n                        })\n                        .catch(err => {\n                            console.log(\"getAllPatient NG \" + JSON.stringify(err));\n                        });\n                })\n                .catch(err => { })\n        })\n    }\n\n    onChangeName(event) {\n        this.setState({ name: event.target.value })\n    }\n    onChangeHisid(event) {\n        this.setState({ hisid: event.target.value })\n    }\n    //onChangeDoctor(event) {\n    //this.setState({ doctor: event.target.value })\n    //}\n    onClickSearch() {\n        // ApiProvider.getAllPatient()\n        //     .then(result => {\n        //         const setedUser = result.data.filter(item => item.transouttime !== \"unset\" && item.hisid === this.state.hisid && item.pnamec === this.state.name);\n        //         const unsetUser = result.data.filter(item => item.transouttime === \"unset\" && item.hisid === this.state.hisid && item.pnamec === this.state.name);\n        //         console.log(this.state.transOuttime)\n        //         this.setState({\n        //             allPatientDisplayData: setedUser,\n        //             allPatientUnset: unsetUser,\n        //             allPatientSet: setedUser\n        //         });\n        //     })\n        //     .catch(err => {\n        //         console.log(\"getAllPatient NG \" + JSON.stringify(err));\n        //     });\n    }\n    onChangeDate(date, dateString) {\n        this.setState({ transOuttime: dateString })\n    }\n\n    Searchbar() {\n        const InputGroup = Input.Group;\n        const { RangePicker } = DatePicker;\n\n        return (\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <div style={{ fontSize: '16px' }}>\n                        個案姓名:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"輸入個案姓名\" onChange={this.onChangeName} value={this.state.name}></Input>\n                    </div>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        轉入時間:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        {/* <InputGroup compact> */}\n                        {/* <DatePicker placeholder=\"選擇轉出時間\" onChange={this.onChangeDate} /> */}\n                        <RangePicker style={{ width: \"250px\" }} format={\"YYYY/MM/DD\"} locale={\"zh_TW\"}\n                            placeholder={[\"請輸入日期\", \"請輸入日期\"]} onChange={this.onChangeDate} allowClear={false} />\n                        {/* </InputGroup> */}\n                    </div>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        病歷號碼:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"輸入病歷號碼\" onChange={this.onChangeHisid} value={this.state.hisid}></Input>\n                    </div>\n                </div>\n                {/*<div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        主治醫生:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"選擇主治醫師\" onChange={this.onChangeDoctor} value={this.state.doctor}></Input>\n                    </div>\n        </div>*/}\n                {/* <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <Button shape=\"circle\" icon=\"search\" onClick={this.onClickSearch} />\n                </div> */}\n            </div>\n        );\n    }\n\n    handleDisplaySwitchChange(event) {\n        // console.log(event.target.value)\n        console.log(this.state.allPatientSet)\n        console.log(this.state.allPatientUnset)\n        this.setState({\n            allPatientDisplayData: event.target.value == 'in' ? this.state.allPatientSet : this.state.allPatientUnset\n        })\n    }\n\n\n    render() {\n        // rowSelection object indicates the need for row selection\n        const rowSelection = {\n            onChange: (selectedRowKeys, selectedRows) => {\n                //console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows)\n                this.setState({ selectedRowsArray: selectedRows })\n            },\n            getCheckboxProps: record => ({\n                disabled: record.name === 'Disabled User', // Column configuration not to be checked\n                name: record.name,\n            }),\n        };\n        const columns = [\n            {\n                title: '病歷號碼',\n                dataIndex: 'id',\n                key: 'id',\n                width: \"10%\"\n            },\n            {\n                title: '個案名稱',\n                dataIndex: 'name',\n                key: 'name',\n                width: \"15%\"\n            },\n            {\n                title: '性別',\n                dataIndex: 'gender',\n                key: 'gender',\n                width: \"7%\"\n            },\n            {\n                title: '出生體重',\n                dataIndex: 'weight',\n                key: 'weight',\n                width: \"8%\"\n            },\n            {\n                title: '出生周數',\n                dataIndex: 'birweek',\n                key: 'birweek',\n                width: \"8%\"\n            },\n            {\n                title: '轉入時年齡',\n                dataIndex: 'transage',\n                key: 'transage',\n                width: \"10%\"\n            },\n            {\n                title: '院序號',\n                dataIndex: 'hospitalnumber',\n                key: 'hospitalnumber',\n                width: \"10%\"\n            },\n            {\n                title: '索引號',\n                dataIndex: 'hospitalindex',\n                key: 'hospitalindex',\n                width: \"17%\"\n            },\n            {\n                title: '轉入ICU時間',\n                dataIndex: 'transicutime',\n                key: 'transicutime',\n                width: \"10%\"\n            },\n            //{\n            //title: '主治醫師',\n            //dataIndex: 'maindoc',\n            //key: 'maindoc',\n            //width: \"10%\"\n            //},\n            {\n                dataIndex: 'clickstate',\n                key: 'clickstate',\n                width: \"5%\"\n            }\n        ];\n        function search(data, searchName) {\n            if (searchName === \"\" || searchName === undefined || searchName === null) {\n                return data\n            }\n            const filterData = data.filter(function (item, index, arr) {\n                console.log(item)\n                const fn = item.pnamec.toString().trim()\n                return fn.indexOf(searchName) >= 0\n            })\n            return filterData\n        }\n        function searchTime(data, searchTime) {\n            if (searchTime === \"\" || searchTime === undefined || searchTime === null) {\n                return data\n            }\n            const filterData = data.filter(function (item, index, arr) {\n                // console.log(item)\n                const fn = moment(item.transintime.toString().trim(), \"YYYYMMDD\").valueOf()\n                const st = moment(searchTime[0].toString().trim(), \"YYYYMMDD\").valueOf()\n                const et = moment(searchTime[1].toString().trim(), \"YYYYMMDD\").valueOf()\n                return st <= fn && fn <= et\n            })\n            return filterData\n        }\n\n        function searchNO(data, searchNO) {\n            if (searchNO === \"\" || searchNO === undefined || searchNO === null) {\n                return data\n            }\n            const filterData = data.filter(function (item, index, arr) {\n                console.log(item)\n                const HID = item.hisid.toString().trim()\n                return HID.match(searchNO)\n            })\n            return filterData\n        }\n        const rowData = this.state.allPatientDisplayData\n        const d = search(rowData, this.state.name)\n        const f = searchTime(d, this.state.transOuttime)\n        const H = searchNO(f, this.state.hisid)\n        const data = H.map((item, index) => {\n            return {\n                key: index,\n                id: item.hisid,\n                name: item.pnamec,\n                gender: this.genderswitch(item.psex),\n                weight: \"--\",\n                birweek: \"--\",\n                transage: \"--\",\n                hospitalnumber: item.caseid,\n                hospitalindex: item.transinid,\n                transicutime: item.transouttime,\n                maindoc: \"--\",\n                clickstate: this.EditStyle(item.hisid, item.caseid, item.transinid, index)\n            }\n        });\n\n        const { uploading, fileList } = this.state;\n        const props = {\n            onRemove: file => {\n                this.setState(state => {\n                    const index = state.fileList.indexOf(file);\n                    const newFileList = state.fileList.slice();\n                    newFileList.splice(index, 1);\n                    return {\n                        fileList: newFileList,\n                    };\n                });\n            },\n            beforeUpload: file => {\n                this.setState(state => ({\n                    fileList: [...state.fileList, file],\n                }));\n                return false;\n            },\n            fileList,\n            showUploadList: false\n        };\n        const handleDisplaySwitchChange = this.handleDisplaySwitchChange.bind(this);\n\n        return (\n            <div style={{ paddingLeft: \"24px\", paddingRight: \"24px\" }}>\n                <div style={{ fontSize: \"22px\", height: '50px', lineHeight: \"50px\" }}>\n                    歷史病歷管理\n                    <Button type=\"primary\" value=\"in\" style={{ borderRadius: \"50px\", fontSize: \"10px\", marginLeft: \"10px\" }} onClick={handleDisplaySwitchChange}>住院中</Button>\n                    <Button type=\"primary\" value=\"out\" style={{ borderRadius: \"50px\", fontSize: \"10px\", marginLeft: \"10px\" }} onClick={handleDisplaySwitchChange}>已轉出</Button>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\", height: '50px', gridColumnGap: \"10px\" }}>\n                    {this.Searchbar()}\n                    <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gridGap: \"10px\" }}>\n                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                            <Upload {...props}>\n                                <Button>\n                                    <Icon type=\"upload\" /> 選擇檔案\n                                </Button>\n                            </Upload>\n                            <Button\n                                onClick={this.handleUpload.bind(this)}\n                                disabled={fileList.length === 0}\n                                style={{ width: \"100%\" }}\n                            >\n                                匯入\n                            </Button>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                            <Button onClick={this.exportClick.bind(this)} style={{ width: \"100%\" }}>匯出</Button>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                            <Button onClick={this.deleteHistoryUser.bind(this)} style={{ width: \"100%\" }}>刪除</Button>\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <Table rowSelection={rowSelection} columns={columns} dataSource={data} onRow={record => {\n                        return {\n                            onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                            onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                        };\n                    }} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Historyview;\n","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport './Crosssectionvitalsignchart.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport X2JS from 'x2js';\n\nclass Crosssectionvitalsignchart extends Component {\n    state = {\n        change: false,\n        sourcedata: [],\n        prepickerdate: null,\n        presource: null,\n        preinterval: null\n    }\n\n    centermonitorApiDataGet() {\n        function formatTimer(interval, pickerdate) {\n            const endTimeStamp = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    start: moment(endTimeStamp - (24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                    interval: 0\n                }\n            }\n            if (interval === 1) {\n                return {\n                    start: moment(endTimeStamp - (3 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                    interval: 1\n                }\n            }\n            if (interval === 2) {\n                return {\n                    start: moment(endTimeStamp - (7 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                    interval: 2\n                }\n            }\n            return {\n                start: moment(endTimeStamp - (14 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                interval: 3\n            }\n        }\n        const { type, interval, PickerDate, HID, source, CID, svg_id } = this.props\n        const PHID = HID.toString().trim()\n        const PCID = CID.toString().trim()\n        // console.log(interval, PickerDate)\n        const optionvalue = formatTimer(interval, PickerDate)\n        if (source === \"CM\") {\n            if (type === \"abp\") {\n                ApiProvider.getPatientwardvalueBoxPlot(PHID, optionvalue.start, optionvalue.end, type, optionvalue.interval)\n                    .then(data => {\n                        console.log(data.data)\n                        d3.select(\"#\" + svg_id).remove()\n                        this.drawChart(data.data);\n                    })\n                    .catch(err => { console.log(err) })\n            }\n            if (type === \"hr\" || type === \"rr\" || type === \"spo2\") {\n                ApiProvider.getPatientwardvalueBoxPlot(PHID, optionvalue.start, optionvalue.end, type, optionvalue.interval)\n                    .then(data => {\n                        console.log(data.data)\n                        d3.select(\"#\" + svg_id).remove()\n                        this.drawChart(data.data);\n                    })\n                    .catch(err => { console.log(err) })\n            }\n            if (type === \"nbp\") {\n                ApiProvider.getVitalSignData(PHID, optionvalue.start, optionvalue.end, type)\n                    .then(data => {\n                        console.log(data.data)\n                        d3.select(\"#\" + svg_id).remove()\n                        this.drawChart(data.data);\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    })\n            }\n            if (type === \"bt\") {\n                d3.select(\"#\" + svg_id).remove()\n                this.drawChart([]);\n            }\n        }\n        if (source === \"NIS\") {\n            const xm2 = new X2JS()\n            const st = moment(optionvalue.start, \"YYYYMMDDHHmmss\").format(\"YYYYMMDDHHmm\")\n            const et = moment(optionvalue.end, \"YYYYMMDDHHmmss\").format(\"YYYYMMDDHHmm\")\n            const QDVS = ApiProvider.getQDVS(PCID, st, et)\n                .then(data => {\n                    return xm2.xml2js(data.data).outmsg.resconts.rescont\n                })\n                .catch(err => { console.log(err) })\n\n            const QOXY = ApiProvider.getQOXY(PCID, st, et)\n                .then(data => {\n                    return xm2.xml2js(data.data).outmsg.resconts.rescont\n\n                })\n                .catch(err => { console.log(err) })\n            Promise.all([QDVS, QOXY]).then(result => {\n                function FormatNISData(QDVS, QOXY, type) {\n                    var HRNISLIST = []\n                    var RRNISLIST = []\n                    var SBPNISLIST = []\n                    var DBPNISLIST = []\n                    var BTNISLIST = []\n                    var Spo2NISLIST = []\n                    if (Array.isArray(QDVS)) {\n                        for (let index = 0; index < QDVS.length; index++) {\n                            const element = QDVS[index];\n                            const hr = element.pluse\n                            const rr = element.breath\n                            const SBP = element.systolic\n                            const DBP = element.diastolic\n                            const BT = element.temperature\n                            const time = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                            HRNISLIST.push({\n                                Data: hr,\n                                Time: time\n                            })\n                            RRNISLIST.push({\n                                Data: rr,\n                                Time: time\n                            })\n                            SBPNISLIST.push({\n                                Data: SBP,\n                                Time: time\n                            })\n                            DBPNISLIST.push({\n                                Data: DBP,\n                                Time: time\n                            })\n                            BTNISLIST.push({\n                                Data: BT,\n                                Time: time\n                            })\n                        }\n                    }\n                    if (Array.isArray(QOXY)) {\n                        for (let index = 0; index < QOXY.length; index++) {\n                            const element = QOXY[index];\n                            const spo2 = element.concen\n                            const time = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                            Spo2NISLIST.push({\n                                Data: spo2,\n                                Time: time\n\n                            })\n                        }\n                    }\n                    console.log(Spo2NISLIST)\n                    if (type === \"hr\") { return HRNISLIST }\n                    if (type === \"rr\") { return RRNISLIST }\n                    if (type === \"spo2\") { return Spo2NISLIST }\n                    if (type === \"abp\") { return [SBPNISLIST, DBPNISLIST] }\n                    if (type === \"bt\") { return BTNISLIST }\n                    return []\n                }\n                // console.log(FormatNISData(result[0], result[1], type))\n                d3.select(\"#\" + svg_id).remove()\n                this.drawChart(FormatNISData(result[0], result[1], type))\n            })\n        }\n    }\n    componentDidUpdate() {\n\n        const { svg_id, interval, PickerDate, HID, source, CID } = this.props\n        const PrePickerDate = this.state.prepickerdate\n        if (PrePickerDate !== PickerDate) {\n            this.setState({ prepickerdate: this.props.PickerDate })\n            this.centermonitorApiDataGet()\n        }\n        const Presource = this.state.presource\n        if (Presource !== source) {\n            this.setState({ presource: source })\n            this.centermonitorApiDataGet()\n        }\n        const Preinterval = this.state.preinterval\n        if (interval !== Preinterval) {\n            this.setState({ preinterval: interval })\n            this.centermonitorApiDataGet()\n        }\n        const PreHID = this.state.prehid\n        if (HID !== PreHID) {\n            this.setState({ prehid: HID })\n            this.centermonitorApiDataGet()\n        }\n    }\n\n    componentDidMount() {\n\n        this.setState({\n            prepickerdate: this.props.PickerDate,\n            presource: this.props.source,\n            preinterval: this.props.interval,\n            prehid: this.props.prehid\n        })\n        this.centermonitorApiDataGet()\n\n    }\n    drawChart(sourcedata) {\n        function formatxArray(startTime, interval) {\n            var xAxisarray = []\n            if (interval === 0) {\n                for (let index = 0; index < 25; index++) {\n                    if (index % 4 === 0) {\n                        xAxisarray.push(startTime + (index * 60 * 60 * 1000))\n                    }\n                }\n            }\n            else if (interval === 1) {\n                for (let index = 0; index < 19; index++) {\n                    if (index % 2 === 0) {\n                        xAxisarray.push(startTime + (index * 4 * 60 * 60 * 1000))\n                    }\n                }\n            }\n            else if (interval === 2) {\n                for (let index = 0; index < 21; index++) {\n                    xAxisarray.push(startTime + (index * 60 * 60 * 1000 * 8))\n                }\n            }\n            else {\n                for (let index = 0; index < 14; index++) {\n                    xAxisarray.push(startTime + (index * 60 * 60 * 1000 * 24))\n                }\n            }\n            return xAxisarray\n        }\n\n        function formatbotaxis(time, interval) {\n            var xAxisarray = []\n            if (interval === 0) {\n                xAxisarray.push(startTime + (17 * 60 * 60 * 1000))\n            }\n            else if (interval === 1) {\n                for (let index = 0; index < 3; index++) {\n                    xAxisarray.push(startTime + (17 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000))\n                }\n            }\n            else if (interval === 2) {\n                for (let index = 0; index < 21; index++) {\n                    xAxisarray.push(time + (index * 60 * 60 * 1000 * 8))\n                }\n            }\n            else {\n                for (let index = 0; index < 14; index++) {\n                    xAxisarray.push(time + (index * 60 * 60 * 1000 * 24))\n                }\n            }\n            return xAxisarray\n        }\n\n        var formatHour = d3.timeFormat(\"%H\")\n\n        var formatDay = d3.timeFormat(\"%b %d\")\n        function multiFormat(date) {\n            return formatHour(date)\n        }\n\n        function timeBotmultiFormat(date) {\n            return formatDay(date)\n        }\n        //vitaldays true:threeday\n        const {\n            id_key,\n            svg_id,\n            startTime,\n            endTime,\n            height,\n            width,\n            interval, //0:1天 1:3天 2:1週 3:2週 \n            axisBot,\n            axisTop,\n            circlrcolor,\n            max,\n            min,\n            upper,\n            lower,\n            source,\n            type\n        } = this.props\n\n        // const width = window.screen.availWidth * 0.25, height = 100, viewwidth = width - 50, rect_width = width / 46\n        const viewwidth = width - 50\n        // const EndTime = formatendtime(defaultdate)\n        // var vital_interval = formatintervaldays(EndTime, vitaldays)\n\n        var y = d3.scaleLinear()\n            .domain([min, max])\n            .range([height, 0])\n\n        var x = d3.scaleLinear()\n            .domain([startTime, endTime])\n            .range([0, viewwidth - 1])\n\n\n        var yAxis = d3.axisLeft(y)\n            .tickValues([min, max])\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(15);\n\n\n        const xAxisvalue = formatxArray(startTime, interval)\n        const xAxisbotvalue = formatbotaxis(startTime, interval)\n\n        var xAxis = d3.axisTop(x)\n            .tickValues(xAxisvalue)\n            .tickSize(0, 0)\n            .tickPadding(5)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n        var xAxisbot = d3.axisBottom(x)\n            .tickValues(xAxisbotvalue)\n            .tickSize(0, 0)\n            .tickPadding(height + 10)\n            .tickFormat(function (d) { return moment(d).format(\"MM/DD\") });\n\n        var svg\n        if (axisTop) {\n            svg = d3.select(\"#\" + id_key)\n                .append(\"svg\")\n                .attr(\"id\", svg_id)\n                .style(\"width\", width + 10)\n                .style(\"height\", height + 25)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + 50 + \",\" + 20 + \")\");\n        }\n        else {\n            if (axisBot) {\n                svg = d3.select(\"#\" + id_key)\n                    .append(\"svg\")\n                    .attr(\"id\", svg_id)\n                    .style(\"width\", width)\n                    .style(\"height\", height + 25)\n                    .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + 50 + \",\" + 5 + \")\");\n            }\n            else {\n\n                svg = d3.select(\"#\" + id_key)\n                    .append(\"svg\")\n                    .attr(\"id\", svg_id)\n                    .style(\"width\", width)\n                    .style(\"height\", height + 10)\n                    .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + 50 + \",\" + 5 + \")\");\n            }\n        }\n\n        if (axisTop) {\n            svg.append(\"g\")\n                .call(xAxis)\n                .attr(\"class\", \"axis\");\n        }\n\n        if (axisBot) {\n            svg.append(\"g\")\n                .call(xAxisbot)\n                .attr(\"class\", \"axis\");\n\n        }\n\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n        //上下橫線\n        svg.append('line')\n            .attr('x1', x(startTime))\n            .attr('y1', y(max))\n            .attr('x2', x(endTime))\n            .attr('y2', y(max))\n            .style('stroke', 'rgba(220,220,220,1)')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n        svg.append('line')\n            .attr('x1', x(startTime))\n            .attr('y1', y(min))\n            .attr('x2', x(endTime))\n            .attr('y2', y(min))\n            .style('stroke', 'rgba(220,220,220,1)')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n\n        if (interval === 0) {\n            for (let index = 0; index < 25; index++) {\n                if (index % 8 === 0) {\n                    svg.append('line')\n                        .attr('x1', x(startTime + (index * 60 * 60 * 1000)))\n                        .attr('y1', 0)\n                        .attr('x2', x(startTime + (index * 60 * 60 * 1000)))\n                        .attr('y2', height)\n                        .style('stroke', 'black')\n                        .style('stroke-width', 2);\n                }\n                else {\n                    svg.append('line')\n                        .attr('x1', x(startTime + (index * 60 * 60 * 1000)))\n                        .attr('y1', 0)\n                        .attr('x2', x(startTime + (index * 60 * 60 * 1000)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(220,220,220,1)')\n                        .style('stroke-width', 1)\n                        .style('stroke-dasharray', 5.5);\n                }\n            }\n\n            drawshadow(startTime, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n\n        }\n        if (interval === 1) {\n            for (let index = 0; index < 19; index++) {\n                if (index % 2 === 0) {\n                    svg.append('line')\n                        .attr('x1', x(startTime + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y1', 0)\n                        .attr('x2', x(startTime + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y2', height)\n                        .style('stroke', 'black')\n                        .style('stroke-width', 2);\n                }\n                else {\n                    svg.append('line')\n                        .attr('x1', x(startTime + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y1', 0)\n                        .attr('x2', x(startTime + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(220,220,220,1)')\n                        .style('stroke-width', 1)\n                        .style('stroke-dasharray', 5.5);\n                }\n            }\n\n            drawshadow(startTime, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n        }\n        if (interval === 2) {\n            for (let index = 0; index < 22; index++) {\n                svg.append('line')\n                    .attr('x1', x(startTime + (index * 60 * 60 * 1000 * 8)))\n                    .attr('y1', 0)\n                    .attr('x2', x(startTime + (index * 60 * 60 * 1000 * 8)))\n                    .attr('y2', height)\n                    .style('stroke', 'black')\n                    .style('stroke-width', 1);\n            }\n\n            drawshadow(startTime, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n        }\n        if (interval === 3) {\n            for (let index = 0; index < 15; index++) {\n                svg.append('line')\n                    .attr('x1', x(startTime + (index * 60 * 60 * 1000 * 24)))\n                    .attr('y1', 0)\n                    .attr('x2', x(startTime + (index * 60 * 60 * 1000 * 24)))\n                    .attr('y2', height)\n                    .style('stroke', 'black')\n                    .style('stroke-width', 1);\n            }\n\n            drawshadow(startTime, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n        }\n\n        function formatBox(startTime, interval) {\n            function interFormat(startTime, interval) {\n                var TimeArray = []\n                for (let index = 0; index < interval; index++) {\n                    if (interval === 24) {\n                        const boxTime = startTime + (30 * 60 * 1000) + (index * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 18) {\n                        const boxTime = startTime + (2 * 60 * 60 * 1000) + (index * 4 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 21) {\n                        const boxTime = startTime + (4 * 60 * 60 * 1000) + (index * 8 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else {\n                        const boxTime = startTime + (12 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                }\n                return TimeArray\n            }\n            if (interval === 0) {\n                return interFormat(startTime, 24)\n            }\n            if (interval === 1) {\n                return interFormat(startTime, 18)\n            }\n            if (interval === 2) {\n                return interFormat(startTime, 21)\n            }\n            return interFormat(startTime, 14)\n        }\n        function formatBoxWidth(viewwidth, interval) {\n            if (interval === 0) {\n                return viewwidth / 24\n            }\n            if (interval === 1) {\n                return viewwidth / 18\n            }\n            if (interval === 2) {\n                return viewwidth / 21\n            }\n            return viewwidth / 14\n        }\n        function drawshadow(startTime, interval, lower, upper, type) {\n            const LimitBoxTimer = formatBox(startTime, interval)\n            for (let index = 0; index < LimitBoxTimer.length; index++) {\n                const boxwidth = formatBoxWidth(width, interval)\n                // console.log(boxwidth)\n                const element = LimitBoxTimer[index];\n                svg.append('line')\n                    .attr('x1', x(element))\n                    .attr('y1', y(lower))\n                    .attr('x2', x(element))\n                    .attr('y2', y(upper))\n                    .style('stroke', circlrcolor)\n                    .style('opacity', 0.7)\n                    .style('stroke-width', boxwidth)\n\n                if (type === \"nbp\" || type === \"abp\") {\n                    svg.append('line')\n                        .attr('x1', x(element))\n                        .attr('y1', y(35))\n                        .attr('x2', x(element))\n                        .attr('y2', y(55))\n                        .style('stroke', circlrcolor)\n                        .style('opacity', 0.3)\n                        .style('stroke-width', boxwidth)\n                }\n            }\n        }\n        function drawData(type, source, sourcedata, interval, boxwidth) {\n            function formatShift(interval) {\n                if (interval === 0) {\n                    return 30 * 60 * 1000\n                }\n                if (interval === 1) {\n                    return 2 * 60 * 60 * 1000\n                }\n                if (interval === 2) {\n                    return 4 * 60 * 60 * 1000\n                }\n                return 12 * 60 * 60 * 1000\n            }\n            // console.log(source)\n            if (source === \"CM\") {\n                if (type === \"abp\") {\n                    const dataAbps = sourcedata.abps\n                    const dataAbpd = sourcedata.abpd\n                    for (let index = 0; index < dataAbpd.length; index++) {\n                        const element = dataAbpd[index];\n                        const q1 = element.Q1\n                        const q2 = element.Q2\n                        const q3 = element.Q3\n                        const q4 = element.Q4\n                        const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + formatShift(interval)\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(q1))\n                            .attr(\"y2\", y(q4))\n                            .attr(\"stroke\", circlrcolor)\n                            .style('opacity', 0.5)\n                            // .attr(\"stroke\", \"blcak\")\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q2) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style('opacity', 0.5)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg\n                            .selectAll(\"toto\")\n                            .data([q1, q4])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('opacity', 0.5)\n                            .style('stroke-width', 1);\n                    }\n                    for (let index = 0; index < dataAbps.length; index++) {\n                        const element = dataAbps[index];\n                        const q1 = element.Q1\n                        const q2 = element.Q2\n                        const q3 = element.Q3\n                        const q4 = element.Q4\n                        const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + formatShift(interval)\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(q1))\n                            .attr(\"y2\", y(q4))\n                            .attr(\"stroke\", circlrcolor)\n                            // .attr(\"stroke\", \"blcak\")\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q2) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg\n                            .selectAll(\"toto\")\n                            .data([q1, q4])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1);\n                    }\n                }\n                if (type === \"hr\" || type === \"rr\" || type === \"spo2\") {\n                    for (let index = 0; index < sourcedata.length; index++) {\n                        const element = sourcedata[index];\n                        const q1 = element.Q1\n                        const q2 = element.Q2\n                        const q3 = element.Q3\n                        const q4 = element.Q4\n                        const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + formatShift(interval)\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(q1))\n                            .attr(\"y2\", y(q4))\n                            .attr(\"stroke\", circlrcolor)\n                            // .attr(\"stroke\", \"blcak\")\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q2) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg\n                            .selectAll(\"toto\")\n                            .data([q1, q4])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1);\n\n                    }\n                }\n                if (type === \"nbp\") {\n                    for (let index = 0; index < sourcedata.length; index++) {\n                        const element = sourcedata[index];\n                        const Xtime = moment(element.Time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                        const SBP = element.SBP\n                        const DBP = element.DBP\n                        // console.log(SBP)\n                        if (SBP === 0 || DBP === 0) {\n                            continue\n                        }\n                        else {\n                            // console.log(element)\n                            svg.append('circle')\n                                .attr('cx', x(Xtime))\n                                .attr('cy', y(SBP))\n                                .attr('r', 3)\n                                .style('fill', circlrcolor)\n\n\n                            svg.append('circle')\n                                .attr('cx', x(Xtime))\n                                .attr('cy', y(DBP))\n                                .attr('r', 3)\n                                .style('opacity', 0.5)\n                                .style('fill', circlrcolor)\n                        }\n\n                    }\n                }\n            }\n            else {\n                if (type === \"abp\" || type === \"nbp\") {\n                    if (sourcedata === undefined) {\n                        return null\n                    }\n                    if (sourcedata.length === 0) {\n                        return null\n                    }\n                    const SBP = sourcedata[0]\n                    const DBP = sourcedata[1]\n                    for (let index = 0; index < SBP.length; index++) {\n                        const element = SBP[index];\n                        svg.append('circle')\n                            .attr('cx', x(element.Time))\n                            .attr('cy', y(element.Data))\n                            .attr('r', 3)\n                            .style('fill', circlrcolor)\n\n                    }\n\n                    for (let index = 0; index < DBP.length; index++) {\n                        const element = DBP[index];\n                        svg.append('circle')\n                            .attr('cx', x(element.Time))\n                            .attr('cy', y(element.Data))\n                            .attr('r', 3)\n                            .style('fill', circlrcolor)\n                            .style('opacity', 0.5)\n\n                    }\n                }\n                else {\n                    for (let index = 0; index < sourcedata.length; index++) {\n                        const element = sourcedata[index];\n                        svg.append('circle')\n                            .attr('cx', x(element.Time))\n                            .attr('cy', y(element.Data))\n                            .attr('r', 3)\n                            .style('fill', circlrcolor)\n\n                    }\n                }\n\n            }\n        }\n    }\n\n    changestate() {\n        this.setState({\n            change: !this.state.change\n        })\n    }\n    render() {\n        const { svg_id, source, id_key } = this.props\n        return (\n            <div id={id_key}>\n            </div>\n        );\n    }\n}\n\nexport default Crosssectionvitalsignchart;","import React, { Component } from 'react';\nimport dragdown from '../../Image/svg/dragdown.svg'\n\nclass Warningsetting extends Component {\n    state = {\n        dragstate: false\n    }\n    onClickdrag = () => {\n        this.setState(\n            {\n                dragstate: !this.state.dragstate\n            }\n        )\n    }\n    render() {\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div style={{ height: 50, background: \"rgba(238,238,238,1)\", padding: \"10px 16px\", display: \"flex\", justifyContent: \"space-between\" }}>\n                    <div style={{ display: \"flex\" }}>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>2019-06-01 08:00</div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", marginLeft: \"20px\" }}>\n                            <div style={{ border: \"red 1px solid\", borderRadius: \"4px\", cursor: \"pointer\", color: \"red\", padding: \"5px 20px\", background: \"white\" }}>刪除</div>\n                        </div>\n                    </div>\n                    <div onClick={this.onClickdrag} style={{ transform: this.state.dragstate ? \"scaleY(1)\" : \"scaleY(-1)\" }}>\n                        <img src={dragdown} alt=\"dragdown\"></img>\n                    </div>\n                </div>\n                <div style={{ display: this.state.dragstate ? \"block\" : \"none\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 4fr 1fr 4fr\" }}>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>HR</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>ABP</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>NBP</div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>SpO2</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>BT</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>RR</div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ height: 50, padding: \"10px 16px\", display: \"flex\", alignItems: \"center\" }}>生效時間範圍:2019-06-01 08:00~2019-06-31 08:00</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Warningsetting","import React, { Component } from 'react';\nimport {Input,Button,DatePicker,Select} from 'antd'\n\nclass Addwarningsetting extends Component {\n    onSelectDate = (dates, dataStrings) => {\n        console.log(\"dates\" + JSON.stringify(dates));// \"2019-12-11T08:17:08.350Z\"\n        console.log(\"dataStrings\" + JSON.stringify(dataStrings));// \"2019-12-11\"\n        this.props.dateCallback(dataStrings);\n    }\n    onSelectHour = value => {\n        console.log(value);\n        this.props.hourCallback(value);\n    }\n    render() {\n        //generate select child (hours of a day)\n        const { Option } = Select;\n        const children = [];\n        for (let i = 0; i < 23; i++) {\n            children.push(<Option key={i.toString()}>{i.toString()}</Option>);\n        }\n        return (\n            <div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"100px 150px 150px\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", border: \"1px rgba(238,238,238,1) solid\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"1px rgba(238,238,238,1) solid\" }}>HR</div>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                                    <Button type=\"primary\">預設值</Button>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", border: \"1px rgba(238,238,238,1) solid\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"1px rgba(238,238,238,1) solid\" }}>ABP</div>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>SBP圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>DBP圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                                    <Button type=\"primary\">預設值</Button>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", border: \"1px rgba(238,238,238,1) solid\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"1px rgba(238,238,238,1) solid\" }}>NBP</div>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                                    <Button type=\"primary\">預設值</Button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"100px 150px 150px\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", border: \"1px rgba(238,238,238,1) solid\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"1px rgba(238,238,238,1) solid\" }}>SPO2</div>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                                    <Button type=\"primary\">預設值</Button>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", border: \"1px rgba(238,238,238,1) solid\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"1px rgba(238,238,238,1) solid\" }}>BT</div>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                                    <Button type=\"primary\">預設值</Button>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", border: \"1px rgba(238,238,238,1) solid\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"1px rgba(238,238,238,1) solid\" }}>RR</div>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>圖表範圍:</div>\n                                        <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n                                            <Input style={{ width: \"100px\" }} defaultValue={3} /> ~ <Input style={{ width: \"100px\" }} min={1} max={10} defaultValue={3} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                                    <Button type=\"primary\">預設值</Button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", marginTop: \"10px\" }}>\n                    <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>設定生效時間:</div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <DatePicker onChange={this.onSelectDate} style={{ width: \"70%\" }} />\n                        <Select defaultValue=\"0\" onChange={this.onSelectHour} style={{ width: \"20%\", marginLeft: \"8px\" }}>\n                            {children}\n                        </Select>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Addwarningsetting","import React, { Component } from 'react';\nimport { Button, Select, Modal, Tabs, DatePicker, Input, Icon } from 'antd';\nimport Crosssectionvitalsignchart from './Crossectionvitalsignchart'\nimport Warningsetting from './Warningsettinglist'\nimport Addwarningsetting from './Addnewwaring'\nimport './Vitalsign.scss'\nimport { formatxArrayhalf, formatendtime } from '../../Function/Timeformat'\nimport { simulationCentermonitordata, simulationnisdata } from '../../Function/Wardstate'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\n\nclass Vitalsign extends Component {\n\n    state = {\n        vital_days: 0, //false:一天 true:三天\n        source: \"CM\", //false:中央站 true:NIS\n        visible: false,\n        visibleConflict: false,\n        chackstate_one: 0,\n        chackstate_three: 0,\n        datasource: null,\n        addNewWarningDateStr: null,\n        addNewWarningHourStr: null,\n\n        CenterMonitorValue: null\n    }\n\n    componentDidMount() {\n        const startTime = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf() - (60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\")\n        const endTime = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf()).format(\"YYYYMMDDHHmmss\")\n        const PHISTNUM = this.props.caseinfo.HISID.toString().trim()\n        this.getVitalSignData(startTime, endTime, PHISTNUM)\n    }\n\n    getVitalSignData(startTime, EndTime, Phistnum) {\n        ApiProvider.getPatientwardvalueMedian(Phistnum, startTime, EndTime)\n            .then(data => {\n                console.log(data.data)\n                this.setState({\n                    CenterMonitorValue: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n                this.setState({\n                    CenterMonitorValue: null\n                })\n            })\n    }\n\n    onVitalCheck() {\n        var gridarray = []\n        if (this.state.vital_days === 1) {\n            for (let index = 0; index < 18; index++) {\n                const checknumber = index + 1\n                if (checknumber === this.state.chackstate_three) {\n                    gridarray.push(<div key={index} style={{ height: 330, width: \"100%\", border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_three(checknumber)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ height: 330, width: \"100%\" }} onClick={() => this.onClickCheckgrid_three(checknumber)}></div>)\n            }\n        }\n        else {\n            for (let index = 0; index < 24; index++) {\n                const checknumber = index + 1\n                if (checknumber === this.state.chackstate_one) {\n                    gridarray.push(<div key={index} style={{ height: 330, width: \"100%\", border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_one(checknumber)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ height: 330, width: \"100%\" }} onClick={() => this.onClickCheckgrid_one(checknumber)}></div>)\n            }\n        }\n        return gridarray;\n    }\n\n    onClickCheckgrid_one(number) {\n        //1:7 2:8 3:9 ........\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (24 * 60 * 60 * 1000)\n        const endtime = ST + (number * 60 * 60 * 1000)\n        const starttime = endtime - 60 * 60 * 1000\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ chackstate_one: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n    onClickCheckgrid_three(number) {\n        console.log(number)\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (3 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 4) * 60 * 60 * 1000)\n        const starttime = endtime - (4 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ chackstate_three: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleSelectDate = dataStrings => {\n        //console.log(\"dataStrings\"+dataStrings);\n        this.setState({\n            addNewWarningDateStr: dataStrings\n        })\n    }\n\n    handleSelectHour = hourString => {\n        //console.log(\"hourString\"+hourString);\n        this.setState({\n            addNewWarningHourStr: hourString\n        })\n    }\n\n    handleOk = e => {\n        //console.log(e);\n        console.log(\"# add warning time: \" + this.state.addNewWarningDateStr + \"/\" + this.state.addNewWarningHourStr);\n        this.setState({\n            visibleConflict: true\n        });\n    };\n\n    handleOkConflict = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n            visibleConflict: false\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancelConflict = e => {\n        console.log(e);\n        this.setState({\n            visible: true,\n            visibleConflict: false,\n        });\n    };\n\n    sourcehandleChange = (value) => {\n        this.setState({ source: value })\n    }\n\n\n    intervalhandleChange = (value) => {\n\n        // this.vitalDataGet(value, PickerDate)\n        this.setState({\n            vital_days: value,\n            chackstate_one: 0,\n            chackstate_three: 0,\n            // datasource: this.switchdata(value, this.state.source)\n\n        })\n\n    }\n\n\n    switchdata(value, sourcefrom) {\n        const { PickerDate } = this.props\n\n        function changevitaldays(vitaldays) {\n            if (vitaldays === 3) {\n                return 18\n            }\n            else {\n                return 24\n            }\n        }\n        var interval\n        if (value === null && value === undefined) {\n\n            interval = this.state.vital_days\n        }\n        else {\n\n            interval = value\n        }\n        const starttime = formatendtime(PickerDate) - (interval * 24 * 60 * 60 * 1000)\n        if (sourcefrom) {\n            const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n            const data = simulationnisdata(datatime, changevitaldays(interval))\n            return data\n        }\n        else {\n\n            const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n            const data = simulationCentermonitordata(datatime, changevitaldays(interval))\n            return data\n        }\n    }\n\n\n    switch_source(bool) {\n        this.setState(\n            {\n                source: bool,\n                datasource: this.switchdata(this.state.vital_days, bool)\n            });\n    }\n\n    render() {\n        function centervalueNull(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            return value\n        }\n        function centervaluetoNull(value) {\n            function FilterList(DataList, type) {\n                const filterData = DataList.filter(function (value, index, arr) {\n                    return value.type === type\n                })\n                if (filterData.length === 0) {\n                    return null\n                }\n                console.log(filterData)\n                return filterData[0].Mid\n            }\n            if (value === undefined || value === null) {\n                return {\n                    hr: null,\n                    rr: null,\n                    bt: null,\n                    spo2: null,\n                    abpd: null,\n                    abpm: null,\n                    abps: null,\n                    nbpm: null,\n                    nbps: null,\n                    nbpd: null\n                }\n            }\n            return {\n                hr: FilterList(value, \"hr\"),\n                rr: FilterList(value, \"rr\"),\n                bt: FilterList(value, \"bt\"),\n                spo2: FilterList(value, \"spo2\"),\n                abpd: FilterList(value, \"abpd\"),\n                abpm: FilterList(value, \"abpm\"),\n                abps: FilterList(value, \"abps\"),\n                nbpd: FilterList(value, \"nbpd\"),\n                nbps: FilterList(value, \"nbps\"),\n                nbpm: FilterList(value, \"nbpm\"),\n            }\n        }\n        const { Option } = Select;\n        const { TabPane } = Tabs;\n        const width = window.screen.availWidth * 0.25\n        const waringsettingarray = []\n        for (let index = 0; index < 20; index++) {\n            waringsettingarray.push(<Warningsetting key={index}></Warningsetting>)\n\n        }\n        const handleSelectDate = this.handleSelectDate;\n        const handleSelectHour = this.handleSelectHour;\n        const centervalue = centervaluetoNull(this.state.CenterMonitorValue)\n\n\n        function vitaldaysBool(vitaldays) {\n            if (vitaldays === 3) {\n                return true\n            }\n            return false\n        }\n\n        function formatPickerTimer(pickerdate, interval) {\n            if (interval === 0) {\n                return {\n                    startTime: pickerdate + (7 * 60 * 60 * 1000),\n                    endTime: pickerdate + (31 * 60 * 60 * 1000)\n                }\n            }\n            else {\n                return {\n                    startTime: pickerdate + (31 * 60 * 60 * 1000) - (3 * 24 * 60 * 60 * 1000),\n                    endTime: pickerdate + (31 * 60 * 60 * 1000)\n                }\n\n            }\n        }\n        const pickerTimer = formatPickerTimer(this.props.PickerDate, this.state.vital_days)\n        const PickerDate = this.props.PickerDate\n        // console.log(hrdatasource)\n        return (\n            <div>\n                <Modal\n                    title=\"生命徵象警示範圍設定\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    width={1000}>\n                    <Tabs defaultActiveKey=\"1\">\n                        <TabPane tab=\"新增警示設定\" key=\"1\">\n                            <Addwarningsetting dateCallback={handleSelectDate} hourCallback={handleSelectHour}></Addwarningsetting>\n                        </TabPane>\n                        <TabPane tab=\"警示設定清單\" key=\"2\">\n                            <div style={{ maxHeight: \"400px\", overflow: \"auto\" }}>\n                                {waringsettingarray}\n                            </div>\n                        </TabPane>\n                    </Tabs>\n                </Modal>\n                <Modal\n                    title=\"您設定的生效時間範圍與以下的歷史變更紀錄時間衝突，是否確定要覆蓋？\"\n                    visible={this.state.visibleConflict}\n                    onOk={this.handleOkConflict}\n                    onCancel={this.handleCancelConflict}\n                    width={1000}>\n                    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                        <Icon type=\"info-circle\" style={{ color: \"darkorange\", width: \"24px\", height: \"24px\" }} />\n                        <div style={{ marginLeft: \"8px\" }}>\n                            <p>點選\"確定\"將覆蓋資料，點選\"取消\"回到設定頁面</p>\n                            <p>1. HR：</p>\n                            <p>舊設定值：2019-08-01 ~ 2019-08-11</p>\n                            <p>新設定值：2019-08-01 ~ 2019-08-20</p>\n                        </div>\n                    </div>\n                </Modal>\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', height: \"50px\", backgroundColor: \"#cccccc\", padding: \"0px 5px\" }}>\n                    <div style={{ display: 'flex', alignItems: \"center\" }}>\n                        <t1>Vital Sign</t1>\n                        <Select defaultValue={\"CM\"} style={{ width: 160, marginLeft: \"16px\" }} onChange={this.sourcehandleChange}>\n                            <Option value={\"CM\"}>Center Monitor</Option>\n                            <Option value={\"NIS\"}>NIS</Option>\n                        </Select>\n                        <Select defaultValue={0} style={{ width: 90, marginLeft: \"15px\" }} onChange={this.intervalhandleChange}>\n                            <Option value={0}>一天</Option>\n                            <Option value={1}>三天</Option>\n                        </Select>\n                    </div>\n                    {/* <Button width={90} type=\"primary\" onClick={this.showModal}>閾值調整</Button> */}\n                </div>\n                <div style={{ borderRadius: \"4px\", border: \"rgba(232,232,232,1) 1px solid\", height: \"400px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"80px 1fr 80px 1fr\" }}>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#779F50\", display: \"flex\", justifyContent: \"center\" }}>HR</div>\n                                    <div style={{ fontSize: \"2rem\", color: \"#779F50\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.hr)}</div>\n                                </div>\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>NBP</div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.nbpd)}/{centervalueNull(centervalue.nbps)}</div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>({centervalueNull(centervalue.nbpm)})</div>\n                                </div>\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>ABP</div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.abpd)}/{centervalueNull(centervalue.abps)}</div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>({centervalueNull(centervalue.abpm)})</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ position: \"relative\" }}>\n                            <div style={{ position: \"absolute\", top: 20, left: 50, width: width - 50, height: 330 }}>\n                                <div style={{ display: \"grid\", gridTemplateColumns: vitaldaysBool(this.state.vital_days) ? \"repeat(18, 1fr)\" : \"repeat(24,1fr)\" }}>\n                                    {this.onVitalCheck()}\n                                </div>\n                            </div>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"HR_svg\"}\n                                id_key={\"HR_div\"}\n                                type={\"hr\"}\n                                source={this.state.source}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={100}\n                                upper={160}\n                                axisBot={false}\n                                axisTop={true}\n                                circlrcolor=\"#779F50\"\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={200}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"NBP_svg\"}\n                                id_key={\"NBP_div\"}\n                                type={\"nbp\"}\n                                source={this.state.source}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={55}\n                                upper={75}\n                                axisBot={false}\n                                axisTop={false}\n                                circlrcolor={\"#C12528\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={100}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"ABP_svg\"}\n                                id_key={\"ABP_div\"}\n                                type={\"abp\"}\n                                source={this.state.source}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={55}\n                                upper={75}\n                                axisBot={true}\n                                axisTop={false}\n                                circlrcolor={\"#C12528\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={100}>\n                            </Crosssectionvitalsignchart>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#4773B8\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>\n                                        SpO<sub style={{ bottom: \"-1em\" }}>2</sub>\n                                    </div>\n                                    <div style={{ fontSize: \"2rem\", color: \"#4773B8\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.spo2)}%</div>\n                                </div>\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#7F3DB5\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>BT</div>\n                                    <div style={{ fontSize: \"2rem\", color: \"#7F3DB5\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>--</div>\n                                </div>\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                <div>\n                                    <div style={{ fontSize: \"1rem\", color: \"#DE7531\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>RR</div>\n                                    <div style={{ fontSize: \"2rem\", color: \"#DE7531\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.rr)}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ position: \"relative\" }}>\n                            <div style={{ position: \"absolute\", top: 20, left: 50, width: width - 50, height: 330 }}>\n                                <div style={{ display: \"grid\", gridTemplateColumns: vitaldaysBool(this.state.vital_days) ? \"repeat(18, 1fr)\" : \"repeat(24,1fr)\" }}>\n                                    {this.onVitalCheck()}\n                                </div>\n                            </div>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"SpO2_svg\"}\n                                id_key={\"SpO2_div\"}\n                                type={\"spo2\"}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={90}\n                                upper={100}\n                                axisBot={false}\n                                axisTop={true}\n                                circlrcolor={\"#4773B8\"}\n                                colorshadow={\"#4773B8\"}\n                                min={60}\n                                max={100}\n                                source={this.state.source}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"BT_svg\"}\n                                id_key={\"BT_div\"}\n                                type={\"bt\"}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                source={this.state.source}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={36}\n                                upper={38}\n                                axisBot={false}\n                                axisTop={false}\n                                circlrcolor={\"#7F3DB5\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={33}\n                                max={48}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"RR_svg\"}\n                                id_key={\"RR_div\"}\n                                type={\"spo2\"}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={20}\n                                upper={60}\n                                axisBot={true}\n                                axisTop={false}\n                                circlrcolor={\"#DE7531\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={100}\n                                source={this.state.source}>\n                            </Crosssectionvitalsignchart>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Vitalsign;","import React, { Component } from 'react';\nimport { Button, DatePicker, Checkbox } from 'antd';\nimport moment from 'moment';\nimport displaylogo from '../Image/svg/filter.svg'\nimport { daysdiff, datestringformat, yyyymmddHHmmfromat, yyyymmddformat } from '../Function/Timeformat'\nimport { pregancyweeksanddays } from '../Function/Wardbedfunction'\nimport './Controlbar.scss'\nimport * as ApiProvider from '../API/ApiProvider';\nimport * as WardState from '../Function/Wardstate'\n\nclass Controlbar extends Component {\n    state = {\n        display_Mode: false,\n        item: this.props.item_array,\n        scrollstate: 0,\n    }\n    sendData = (itwm_array) => {\n        this.props.parentCallback(itwm_array);\n    }\n\n\n    sendDateData = (PickerDate) => {\n        this.props.parentDateCallback(PickerDate);\n    }\n    //快速滑動\n    scrollToAnchor = (anchorName) => {\n        if (anchorName) {\n            let anchorElement = document.getElementById(anchorName);\n            if (anchorElement) { anchorElement.scrollIntoView(); }\n        }\n    }\n    onChange = (checkedValues) => {\n        this.sendData(checkedValues)\n\n    }\n    onDateChange = (date, dateString) => {\n        this.sendDateData(date.valueOf())\n    }\n    open_display() {\n        this.setState({\n            display_Mode: !this.state.display_Mode\n        })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo, PickerDate } = this.props\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const btemp = bTime - (6 * day)\n                bronDate <= btemp && this.sendDateData(bTime)\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD')).valueOf()\n                this.sendDateData(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const atemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= atemp && this.sendDateData(aTime)\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n\n        const btn_style = {\n            unclick_style: { borderRadius: \"16px\", color: \"rgba(245, 166, 35, 1)\", border: \"rgba(245, 166, 35, 1) 1px solid\" }\n        }\n\n\n\n        function Monthformat(month) {\n            return month + 1\n        }\n        function timeformat(timestring) {\n            return new Date(timestring).getFullYear() + \"/\" + Monthformat(new Date(timestring).getMonth()) + \"/\" + new Date(timestring).getDate()\n        }\n        function valueFormat(value) {\n            if (value === \"\" || value === null || value === undefined) {\n                return \"--\"\n            }\n            return value.toString()\n        }\n        function valueBornWeight(value) {\n            if (value === \"\" || value === null || value === undefined || value === 0) {\n                return \"\"\n            }\n            return value.toString() + \"g → \"\n        }\n        const display_style = {\n            displye_mode: { position: \"absolute\", right: '0px', top: \"50px\", width: \"200px\", background: \"white\", boxShadow: \"3px 3px 12px\", zIndex: \"100\" },\n            non_display_mode: { display: \"none\" },\n            check_area: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\" },\n            check_text: { padding: \"10px\", width: \"140px\", borderRadius: \"4px\", borderColor: 'rgba(0, 0, 0, 0.15)', borderStyle: \"solid\", borderWidth: \"1px\", marginLeft: \"10px\" }\n        }\n\n        function disabledDate(current) {\n            // Can not select days before today and today\n            const endvalue = moment(caseinfo.PBASINGNINFO.PBIRTHDT, 'YYYYMMDD')\n            return endvalue.endOf('day') > current || current > moment().endOf('day')\n        }\n\n        const { caseinfo, btnlist, PickerDate } = this.props\n        const weightList = caseinfo.WEIGHT\n        const Birthday = caseinfo.PBASINGNINFO.PBIRTHDT\n        console.log(Birthday)\n        const BornWeight = WardState.BornWeight(weightList, Birthday)\n        const DayWeight = WardState.selectweight(weightList, PickerDate)\n        const btn = btnlist.map(\n            (item, index) => <Button onClick={this.scrollToAnchor.bind(this, item.scrollpoint)} key={index} style={btn_style.unclick_style}>\n                <t3>{item.name}</t3>\n            </Button>\n        )\n        console.log(moment(PickerDate))\n        return (\n            <div>\n                <div className='controlbarlayout'>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"140px 120px auto\", gridColumnGap: \"5px\" }}>\n                        <DatePicker width={140} onChange={this.onDateChange} value={moment(PickerDate)} allowClear={false} showToday={false} disabledDate={(current) => { return current > moment().startOf(\"day\") || current < moment(Birthday, \"YYYYMMDD\").add(-1,\"days\").endOf(\"day\") }} />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"2px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                        <div style={{ display: 'grid', gridTemplateColumns: \"repeat(3,auto)\", gridColumnGap: \"5px\" }}>\n                            <centerstyle><t2>週數:[{caseinfo.WEEK_BORN}+{caseinfo.DAY_BORN}]&rarr;{pregancyweeksanddays(caseinfo.WEEK_BORN, caseinfo.DAY_BORN, moment(Birthday, 'YYYYMMDD').format('YYYY/MM/DD'))}</t2></centerstyle>\n                            <centerstyle><t2>體重:{valueBornWeight(BornWeight)}{valueFormat(DayWeight)}g</t2></centerstyle>\n                            <centerstyle><t2>住院第{daysdiff(moment(PickerDate).format('YYYY/MM/DD'), moment(caseinfo.TRANSINDT, 'YYYYMMDD').format('YYYY/MM/DD'))}天</t2></centerstyle>\n                        </div>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: 'center', position: \"relative\" }}>\n                        <t2>項目切換：</t2>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,auto)\", gridColumnGap: \"5px\" }}>{btn}</div>\n                        <div onClick={() => this.open_display()} style={{ cursor: \"pointer\", marginLeft: \"5px\" }}>\n                            <img src={displaylogo} alt='displaylogo' style={{ width: '15px', height: '15px' }}></img>\n                        </div>\n                        <div style={this.state.display_Mode ? display_style.displye_mode : display_style.non_display_mode}>\n                            <t2 className='controlmoduletitle'>Displayed</t2>\n                            <div style={{ marginTop: \"10px\", marginBottom: \"20px\" }}>\n                                <Checkbox.Group defaultValue={this.state.item} id={\"checkbox_group\"} style={{ width: '100%', display: \"grid\", gridTemplateRows: \"repeat(6,1fr)\", gridRowGap: \"5px\" }} onChange={this.onChange}>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={0}></Checkbox>\n                                        <t3 style={display_style.check_text}>Vital Sign & I/O</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={1} ></Checkbox>\n                                        <t3 style={display_style.check_text}>Lab</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={2}></Checkbox>\n                                        <t3 style={display_style.check_text}>RT</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={3}></Checkbox>\n                                        <t3 style={display_style.check_text}>Order</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={4}></Checkbox>\n                                        <t3 style={display_style.check_text}>Schedule</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={5}></Checkbox>\n                                        <t3 style={display_style.check_text}>To Do List</t3>\n                                    </div>\n                                </Checkbox.Group>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className='boxshadow'></div>\n            </div >\n\n        );\n    }\n}\n\nexport default Controlbar;\n","import React, { Component } from 'react';\nimport './iopage.scss'\nimport moment from 'moment';\nimport * as WardState from '../Function/Wardstate'\nimport * as ApiProvider from '../API/ApiProvider'\nimport * as ApiGithub from '../API/ApiGithub'\nimport X2JS from 'x2js';\nimport * as QDCList from '../Resource/QDC'\n\nclass IOpage extends Component {\n    state = {\n        QDC: [],\n        PreStatus: null,\n        PreIntervalStatus: null,\n        PreCID: null,\n        PrePickerDate: null,\n        RegQDC: null,\n        CarloriesCal: []\n    }\n    getAPI(caseid, pickerdate, intervalStatus, status) {\n        if (caseid === undefined || caseid === null) {\n            return null\n        }\n        if (pickerdate === undefined || pickerdate === null) {\n            return null\n        }\n        if (intervalStatus === undefined || intervalStatus === null) {\n            return null\n        }\n        if (status === undefined || status === null) {\n            return null\n        }\n        function formatTimer(pickerdate, interstatus, status) {\n            const endTimeStamp = pickerdate + 31 * 60 * 60 * 1000\n            if (status === \"Crossection\") {\n                return {\n                    start: moment(endTimeStamp - (3 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            if (interstatus === 0) {\n                return {\n                    start: moment(endTimeStamp - (24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            if (interstatus === 1) {\n                return {\n                    start: moment(endTimeStamp - (3 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            if (interstatus === 2) {\n                return {\n                    start: moment(endTimeStamp - (7 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            return {\n                start: moment(endTimeStamp - (14 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n            }\n        }\n        const xm2 = new X2JS()\n        const timer = formatTimer(pickerdate, intervalStatus, status)\n        ApiProvider.getQDC(caseid, timer.start, timer.end)\n            .then(data => {\n                const Result = xm2.xml2js(data.data).outmsg\n                if (Number(Result.ret) === 0) {\n                    const parsedata = Result.resconts.rescont\n                    if (Array.isArray(parsedata)) {\n                        this.setState({ QDC: parsedata })\n                    }\n                    else {\n                        this.setState({ QDC: [parsedata] })\n                    }\n                }\n\n            })\n            .catch(err => {\n                console.log(\"getQDC NG \" + JSON.stringify(err));\n            });\n        // this.setState({ QDC: QDCList.data.outmsg.resconts.rescont })\n        ApiGithub.getGitHubJson(\"IOReg_QDC.json\")\n            .then(data => {\n                this.setState({ RegQDC: data.data })\n            })\n            .catch(err => {\n                console.log(\"getGithubNG\" + JSON.stringify(err))\n            })\n    }\n    componentDidMount() {\n        const { Status, IntervalStatus, caseinfo, PickerDate } = this.props\n        this.setState({ PreStatus: Status, PreIntervalStatus: IntervalStatus, PreCID: caseinfo.CASEID, PrePickerDate: PickerDate })\n        this.getAPI(caseinfo.CASEID, PickerDate, IntervalStatus, Status)\n\n    }\n    componentDidUpdate() {\n        const { Status, IntervalStatus, caseinfo, PickerDate } = this.props\n        const prestatus = this.state.PreStatus\n        const preinterstatus = this.state.PreIntervalStatus\n        const precid = this.state.PreCID\n        const prepickerdate = this.state.PrePickerDate\n        if (prepickerdate !== PickerDate || caseinfo.CASEID !== precid || IntervalStatus !== preinterstatus || Status !== prestatus) {\n            console.log(Status, IntervalStatus, caseinfo, PickerDate)\n            this.setState({ PreStatus: Status, PreIntervalStatus: IntervalStatus, PreCID: caseinfo.CASEID, PrePickerDate: PickerDate })\n            this.getAPI(caseinfo.CASEID, PickerDate, IntervalStatus, Status)\n        }\n    }\n    cellRender(arr) {\n        const { Status, IntervalStatus } = this.props\n        const mapcell = arr.map(function (value, index, array) {\n            return (\n                <div key={index} style={{ border: \"1px solid #cccccc\", borderCollapse: \"collapse\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <t2>{parseInt(value)}</t2>\n                </div>\n            );\n        })\n        if (Status === \"Crossection\") {\n            return (\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4,1fr)\" }}>\n                    {mapcell}\n                </div>\n            );\n        }\n        else {\n            if (IntervalStatus === 0) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(24,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n            if (IntervalStatus === 1) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(18,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n            if (IntervalStatus === 2) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(21,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n            if (IntervalStatus === 3) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(14,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n        }\n    }\n    render() {\n        function pickerTimeArray(pickerdate, intervalstatus, status) {\n            const et = pickerdate + (31 * 60 * 60 * 1000)\n            var timearray = []\n            if (status === \"Crossection\") {\n                const st = pickerdate + (7 * 60 * 60 * 1000)\n                for (let index = 0; index < 3; index++) {\n                    const time = st + (index * 8 * 60 * 60 * 1000)\n                    timearray.push(time)\n                }\n            }\n            else {\n                //IntervalStatus 0:1天 1:3天 2:一週 3:兩週\n                if (intervalstatus === 0) {\n                    const st = et - (24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 24; index++) {\n                        const time = st + (index * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (intervalstatus === 1) {\n                    const st = et - (3 * 24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 18; index++) {\n                        const time = st + (index * 4 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (intervalstatus === 2) {\n                    const st = et - (7 * 24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 21; index++) {\n                        const time = st + (index * 8 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (intervalstatus === 3) {\n                    const st = et - (14 * 24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 14; index++) {\n                        const time = st + (index * 24 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n            }\n            return timearray\n        }\n\n        function starttime(status, intervalstatus, time) {\n            if (status === \"Crossection\") {\n                return time - (24 * 60 * 60 * 1000)\n            }\n            if (intervalstatus === 0) {\n                return time - (24 * 60 * 60 * 1000)\n            }\n            if (intervalstatus === 1) {\n                return time - (3 * 24 * 60 * 60 * 1000)\n            }\n            if (intervalstatus === 2) {\n                return time - (7 * 24 * 60 * 60 * 1000)\n            }\n            return time - (14 * 24 * 60 * 60 * 1000)\n\n        }\n\n        function IntervalToDataArray(startTime, status, intervalstatus, element) {\n            if (Array.isArray(element)) {\n                if (status === 'Crossection') {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (8 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                if (intervalstatus === 0) {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (1 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                if (intervalstatus === 1) {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (4 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                if (intervalstatus === 2) {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (8 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                const filterdata = element.filter(function (value, index, arr) {\n                    const valueTimeString = value.rec_dat + value.rec_tim\n                    const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                    const endTime = startTime + (24 * 60 * 60 * 1000)\n                    return valueTime > startTime && valueTime < endTime\n                })\n                return filterdata\n            }\n            return []\n        }\n\n        function SumforEach(arr) {\n            var sum = 0;\n            arr.forEach(function (element) {\n                sum += Number(element);\n            });\n            return sum;\n        }\n\n\n        function formatQDCtoIO(QDC) {\n            function caloriesCal(lost, value) {\n                if (lost === \"配方奶\") {\n                    return Number(value) * 0.8\n                }\n                if (lost === \"母奶\") {\n                    return Number(value) * 0.7\n                }\n                return 0\n            }\n            function caloriesCalonnam(nam, value) {\n                if (nam === null || nam === undefined || nam === \"\") {\n                    return 0\n                }\n                const namstring = nam.toString()\n                const valueNumber = Number(value)\n                if (valueNumber === null || valueNumber === undefined) { return 0 }\n                if (namstring.match(\"10%TPN\") !== null) { return valueNumber * 0.34 }\n                if (namstring.match(\"SMOFliquid\") !== null) { return valueNumber * 1.8 }\n                if (namstring.match(\"D10\") !== null) { return valueNumber * 0.34 }\n                if (namstring.match(\"D12\") !== null) { return valueNumber * 0.34 * 1.2 }\n                if (namstring.match(\"D50\") !== null) { return valueNumber * 0.34 * 5 }\n                if (namstring.match(\"taita\") !== null) { return valueNumber * 0.34 }\n                return 0\n            }\n            var FormatFeedingList = []\n            var FormatIVList = []\n            var FormatUrineList = []\n            var FormatOtherInList = []\n            var FormatOtherOutList = []\n            for (let index = 0; index < QDC.length; index++) {\n                const element = QDC[index];\n                const elementItem = element.item;\n                const time = moment(element.rec_dat.toString().trim() + element.rec_tim.toString().trim(), \"YYYYMMDDHHmm\").valueOf()\n                const nam = element.nam\n                const FeedingReg = RegQDC.Feeding\n                const filterFeedingStatus = FeedingReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterFeedingStatus) {\n                    FormatFeedingList.push({\n                        time: time,\n                        value: Number(element.inp_val2),\n                        calories: caloriesCal(element.lost, element.inp_val2),\n                        element: element\n                    })\n                }\n                const IVReg = RegQDC.IV\n                const filterIVStatus = IVReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterIVStatus) {\n                    FormatIVList.push({\n                        time: time,\n                        value: Number(element.inp_val1),\n                        calories: caloriesCalonnam(nam, element.inp_val1),\n                        element: element\n                    })\n                }\n                const UrineReg = RegQDC.Urine\n                const filterUrineStatus = UrineReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterUrineStatus) {\n                    FormatUrineList.push({\n                        time: time,\n                        value: Number(element.out_val2),\n                        calories: caloriesCalonnam(nam, element.out_val2),\n                        element: element\n                    })\n                }\n                const OtherReg = RegQDC.Other\n                const filterOtherStatus = OtherReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterOtherStatus) {\n                    const input_1 = Number(element.inp_val1)\n                    const output_1 = Number(element.out_val1)\n                    if (elementItem === \"排便\") {\n                        // FormatOtherInList.push({\n                        //     time: time,\n                        //     value: 1,\n                        //     calories: 0,\n                        //     element: element\n                        // })\n                        FormatOtherOutList.push({\n                            time: time,\n                            value: 1,\n                            calories: 0,\n                            element: element\n                        })\n                    }\n                    else {\n                        if (input_1 === null || input_1 === undefined) {\n                            FormatOtherOutList.push({\n                                time: time,\n                                value: Number(element.inp_val1),\n                                calories: caloriesCalonnam(nam, element.inp_val1),\n                                element: element\n                            })\n                        }\n                        if (output_1 === null || output_1 === undefined) {\n                            FormatOtherInList.push({\n                                time: time,\n                                value: Number(element.output_1),\n                                calories: 0,\n                                element: element\n                            })\n                        }\n                    }\n                }\n\n            }\n            return {\n                Feeding: FormatFeedingList,\n                IV: FormatIVList,\n                OtherIn: FormatOtherInList,\n                Urine: FormatUrineList,\n                OtherOut: FormatOtherOutList\n            }\n        }\n        function timerFormat(PickerDate, Interval, Status) {\n            const EndTime = PickerDate + (31 * 60 * 60 * 1000)\n            console.log(Status)\n            if (Status === 'Crossection') {\n                return {\n                    interval: 3,\n                    hourInterval: 8,\n                    startTime: EndTime - (24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            if (Interval === 0) {\n                return {\n                    interval: 24,\n                    hourInterval: 1,\n                    startTime: EndTime - (24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            if (Interval === 1) {\n                return {\n                    interval: 18,\n                    hourInterval: 4,\n                    startTime: EndTime - (3 * 24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            if (Interval === 2) {\n                return {\n                    interval: 21,\n                    hourInterval: 8,\n                    startTime: EndTime - (7 * 24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            return {\n                interval: 14,\n                hourInterval: 24,\n                startTime: EndTime - (14 * 24 * 60 * 60 * 1000),\n                endTime: EndTime\n            }\n        }\n        function listTimerFormat(List, timer, status) {\n            const inter = timer.interval\n            var TimerList = []\n            for (let index = 0; index < inter; index++) {\n                const st = timer.startTime + (index * timer.hourInterval * 60 * 60 * 1000)\n                const et = timer.startTime + ((index + 1) * timer.hourInterval * 60 * 60 * 1000)\n                const filterList = List.filter(function (info, index, arr) {\n                    const time = info.time\n                    return st <= time && time < et\n                })\n                TimerList.push(filterList)\n            }\n            if (status === 'Crossection') {\n                const st = timer.startTime\n                const et = timer.endTime\n                const filterListALL = List.filter(function (info, index, arr) {\n                    const time = info.time\n                    return st <= time && time < et\n                })\n                TimerList.push(filterListALL)\n            }\n            return TimerList\n        }\n\n        function sumIn(arr1, arr2, arr3) {\n            var sumlist = []\n            for (let index = 0; index < arr1.length; index++) {\n                const element1 = arr1[index];\n                const element2 = arr2[index];\n                const element3 = arr3[index];\n                const sum = element1 + element2 + element3\n                sumlist.push(sum)\n            }\n            return sumlist\n        }\n        function sumOut(arr1, arr2) {\n            var sumlist = []\n            for (let index = 0; index < arr1.length; index++) {\n                const element1 = arr1[index];\n                const element2 = arr2[index];\n                const sum = element1 + element2\n                sumlist.push(sum)\n            }\n            return sumlist\n        }\n        function sumInAndOut(Input, Outout) {\n            var sumlist = []\n            for (let index = 0; index < Input.length; index++) {\n                const element1 = Input[index];\n                const element2 = Outout[index];\n                const sum = parseFloat(element1 - element2).toFixed(2)\n                sumlist.push(sum)\n            }\n            return sumlist\n        }\n        function gridNumber(interval, status) {\n            if (status === \"Crossection\") {\n                return 4\n            }\n            return interval\n        }\n        function cellsum(list) {\n            const CellSum = list.map(function (info, index, arr) {\n                var sum = 0\n                for (let index = 0; index < info.length; index++) {\n                    const element = info[index];\n                    sum = sum + element.value\n                }\n                return sum\n            })\n            return CellSum\n        }\n        function cellRenderSum(list) {\n            const CellRender = list.map(function (info, index, arr) {\n                if (info.length === 0) {\n                    return (\n                        <div key={index} style={{ borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #cccccc\", borderCollapse: 'collapse' }}>--</div>\n\n                    );\n                }\n                return (\n                    <div key={index} style={{ borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #cccccc\", borderCollapse: 'collapse' }}>{parseFloat(info).toFixed(2)}</div>\n                );\n            })\n            return (\n                <div style={{ display: 'grid', gridTemplateColumns: 'repeat( ' + gridNumber(timerStruct.interval, Status) + ' ,1fr)' }}>\n                    {CellRender}\n                </div>\n            );\n        }\n        function cellRender(list) {\n            const CellRender = list.map(function (info, index, arr) {\n                var sum = 0\n                if (info.length === 0) {\n                    return (\n                        <div key={index} style={{ borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #cccccc\", borderCollapse: 'collapse' }}>--</div>\n                    );\n                }\n                for (let index = 0; index < info.length; index++) {\n                    const element = info[index];\n                    sum = sum + element.value\n                }\n                return (\n                    <div key={index} style={{ borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #cccccc\", borderCollapse: 'collapse' }}>{parseFloat(sum).toFixed(2)}</div>\n                );\n            })\n            return (\n                <div style={{ display: 'grid', gridTemplateColumns: 'repeat( ' + gridNumber(timerStruct.interval, Status) + ' ,1fr)' }}>\n                    {CellRender}\n                </div>\n            );\n        }\n\n\n        function formatTime(time) {\n            if (Number(time) / 1000 >= 1) {\n                return time.toString().trim()\n            }\n            return \"0\" + time.toString().trim()\n        }\n\n        function stylechange(status) {\n            const chronicstyle = \"140px 1fr\"\n            const crossectionstyle = \"1fr 4fr\"\n            if (status === \"Crossection\") {\n                return crossectionstyle\n            }\n            else return chronicstyle\n        }\n\n        function urineforWeightAndHourCrossection(Urine, weight) {\n            const datamap = Urine.map(function (info, index, arr) {\n                var sum = 0\n                for (let index = 0; index < info.length; index++) {\n                    const element = info[index];\n                    sum = sum + element.value\n                }\n                if (sum === 0) {\n                    return 0\n                }\n                if (weight === null || weight === undefined) {\n                    return \"--\"\n                }\n                return parseFloat(sum / weight / 8).toFixed(2)\n            })\n            for (let index = 0; index < Urine.length; index++) {\n                const element = Urine[index];\n                console.log(element)\n                \n            }\n            return datamap\n        }\n        const { Status, IntervalStatus, caseinfo, PickerDate } = this.props\n        const timeInterval = pickerTimeArray(PickerDate, IntervalStatus, Status)\n        const et = PickerDate + (31 * 60 * 60 * 1000)\n        const st = starttime(Status, IntervalStatus, et)\n        const WEIGHT = caseinfo.WEIGHT\n        const dateWeoght = WardState.selectweight(WEIGHT, PickerDate)\n        const QDCLIST = this.state.QDC\n        const Weight = 1000\n        const RegQDC = this.state.RegQDC\n        console.log(RegQDC, PickerDate)\n        if (RegQDC === null || RegQDC === undefined) { return null }\n        const formatData = formatQDCtoIO(QDCLIST)\n        const timerStruct = timerFormat(PickerDate, IntervalStatus, Status)\n        const feed = listTimerFormat(formatData.Feeding, timerStruct, Status)\n        const IV = listTimerFormat(formatData.IV, timerStruct, Status)\n        const OtherIn = listTimerFormat(formatData.OtherIn, timerStruct, Status)\n        const sumin = sumIn(cellsum(feed), cellsum(IV), cellsum(OtherIn))\n        const Urine = listTimerFormat(formatData.Urine, timerStruct, Status)\n        const UrinForUnit = urineforWeightAndHourCrossection(Urine, 1000)\n        const OtherOut = listTimerFormat(formatData.OtherOut, timerStruct, Status)\n        const sumout = sumOut(cellsum(Urine), cellsum(OtherOut))\n        console.log(Urine)\n        const sumInTotal = sumInAndOut(sumin, sumout)\n        //====================================================================\n\n\n        const titleInarray = ['Feed', 'IV', 'Other', 'In:Sum']\n        const titleOutarray = ['U/O', 'ml/kg/hr', 'Other', 'Out:Sum']\n        const TitleCellIn = titleInarray.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ border: \"1px solid #cccccc\", borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", backgroundColor: Status === \"Crossection\" ? \"white\" : \"#cccccc\" }}>\n                    <t2>{value}</t2>\n                </div>\n            );\n        })\n\n        const TitleCellOut = titleOutarray.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ border: \"1px solid #cccccc\", borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", backgroundColor: Status === \"Crossection\" ? \"white\" : \"#cccccc\" }}>\n                    <t2>{value}</t2>\n                </div>\n            );\n        })\n        return (\n            <div>\n                <div style={{ display: \"grid\", gridTemplateColumns: stylechange(Status) }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"40px 40px 40px 40px\" }}>\n                        {TitleCellIn}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"40px 40px 40px 40px\" }}>\n                        {cellRender(feed)}\n                        {cellRender(IV)}\n                        {cellRender(OtherIn)}\n                        {cellRenderSum(sumin)}\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: stylechange(Status) }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"40px 40px 40px 40px\" }}>\n                        {TitleCellOut}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"40px 40px 40px 40px\" }}>\n                        {cellRender(Urine)}\n                        {cellRenderSum(UrinForUnit)}\n                        {cellRender(OtherOut)}\n                        {cellRenderSum(sumout)}\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: stylechange(Status) }}>\n                    <div style={{ border: \"1px solid #cccccc\", borderCollapse: \"collapse\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" , backgroundColor: Status === \"Crossection\" ? \"white\" : \"#cccccc\" }}>\n                        <t2>I-O</t2>\n                    </div>\n                    {cellRenderSum(sumInTotal)}\n                    {/* {totalcell} */}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default IOpage;","import React, { Component } from 'react';\nimport IOpage from '../../Module/iopage'\n\nclass Crossection_io extends Component {\n    render() {\n        const { caseinfo, title, PickerDate } = this.props\n        const titlearray = ['白班', '小夜', '大夜', '全日']\n        const titlelab = titlearray.map(function (info, index) {\n            return (\n                <centerstyle key={index}>\n                    <t2>{info}</t2>\n                </centerstyle>\n            );\n        })\n        return (\n            //510\n            <div>\n                <div style={{ lineHeight: \"50px\", backgroundColor: \"#cccccc\", padding: \"0px 5px\" }}>\n                    <t1>{title}</t1>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr\", height: \"40px\" }}>\n                    <div></div>\n                    {titlelab}\n                </div>\n                <IOpage PickerDate={PickerDate} caseinfo={caseinfo} Status={\"Crossection\"} IntervalStatus={0}></IOpage>\n            </div>\n        );\n    }\n}\n\nexport default Crossection_io","import React, { Component } from 'react';\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport * as ApiGithub from '../../API/ApiGithub'\nimport './NonlabviewtableCell.scss'\n\nconst STATUS_REPORT = 0\n\nexport default class NonlabviewtableCell extends Component {\n    state = {\n        Result: [],\n        parser: { \"mappings\": [] },\n        summary_str: \"--\",\n        RESDISP: []\n    }\n\n    componentDidMount() {\n        //call API\n        const { caseId, hisId, month, seq, name, time, status } = this.props;\n\n        if (caseId !== undefined && hisId !== undefined && month !== undefined && seq !== undefined) {\n            ApiProvider.getStoredProcedureRESDISP(hisId.trim(), month, caseId.trim(), seq)\n                .then(result => {\n                    console.log(\"getStoredProcedureRESDISP OK \" + JSON.stringify(result.data));\n                    //const fakeData = [{\"RECNO\":\"1\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"正式報告\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"2\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"                                臺北榮民總醫院兒童醫學部報告\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"3\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  病患資訊：      新生兒加護病房 - 1 黃苡齊 4565531-0 女性 5月大 NBD\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"4\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  申請序號 / 工作號：  0ANWCEA/            開立時間：   20200115    0304\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"5\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  開醫囑者：                     簽收時間：   20200115    0305\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"6\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  報告人 ：       NUR2325 袁藝榛         報告時間：   20200115    0305\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"7\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  檢體 ：        Blood\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"8\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  醫囑名稱：      BLOOD GAS\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"9\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   Sample:(Capillary)\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"10\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   PH:  (7.37)      Hb:   ()       BUN: ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"11\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   PO2:  (43)  mmHg   Hct:  (39)  %     Cr:  ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"12\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   PCO2: (59)  mmHg   FIO2:  (40.0) %\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"13\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   HCO3: (34.1) mmol/L  NA+:  (151)  mmol/L\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"14\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   BE:  (7.1)  mmol/L  K+:   (6.0)  mmol/L\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"15\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   SAT:  (77)  %     Cl-:  ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"16\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   TCO2: (35.9) mmol/L  iCA++: (1.44) mmol/L\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"17\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"                AnGap: ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"18\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"                MG++:  ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"19\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"20\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   COMMENT:\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"}];\n\n                    this.setState({\n                        RESDISP: result.data\n                        //RESDISP: fakeData\n                    })\n\n                    let input = {\n                        item_name: name.trim(),\n                        content: \"\",\n                        sample: \"\",\n                        lab: \"\",\n                        datatime: moment(time).format(\"YYYY-MM-DD HH:mm\")\n                    }\n\n                    //fakeData.forEach(item => {\n                    result.data.forEach(item => {\n                        input.content = `${input.content} \"\\n\" ${item.CONTENT}`;\n                    });\n\n                    //status 0:正式報告 只有0需要做parse\n                    //console.log(\"status: \" + JSON.stringify(status));\n                    if(parseInt(status) === STATUS_REPORT) {\n                        ApiGithub.getGitHubJson(\"Summary.json\")\n                        .then(data => {\n                            console.log(\"get Summary.json OK \" + JSON.stringify(data.data));\n\n                            const selected_parser = this.select_parser(input, data.data)\n                            console.log(\"selected_parser \" + JSON.stringify(selected_parser));\n                            this.setState({\n                                parser: selected_parser\n                            })\n\n                            if (selected_parser !== undefined) {\n                                const result_kv_pairs = this.parse(input, selected_parser)\n                                console.log(\"result_kv_pairs \" + JSON.stringify(result_kv_pairs));\n\n                                const summary_str = this.summerize(result_kv_pairs, selected_parser)\n                                console.log(\"summary_str \" + JSON.stringify(summary_str));\n\n                                this.setState({\n                                    summary_str: summary_str\n                                })\n                            }\n                        })\n                        .catch(err => {\n                            console.log(err)\n                        })\n                    }\n                })\n                .catch(err => {\n                    console.log(\"getStoredProcedureRESDISP NG \" + JSON.stringify(err));\n                });\n        }\n    }\n\n    select_parser = (input, parsers) => {\n        return parsers.find(x =>\n            input.item_name.match(x.apply_condition.name)\n            && (!x.apply_condition.sample || input.sample.match(x.apply_condition.sample))\n            && (!x.apply_condition.lab || input.lab.match(x.apply_condition.lab))\n            && (!x.apply_condition.start_time || input.datetime >= x.apply_condition.start_time)\n            && (!x.apply_condition.end_time || input.datetime < x.apply_condition.end_time)\n        )\n    }\n\n    parse = (input, parser) => {\n        let mappings = parser.mappings\n        let content = input.content\n        let result = {}\n        mappings.forEach(mapping => {\n            const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n            const match = content.match(re)\n            result[mapping.key] = match && match[mapping.position]\n        });\n        return result;\n    }\n\n    summerize = (kv_pairs, parser) => {\n        let summary_str = parser.summary\n        for (const key in kv_pairs) {\n            let match_replacer = summary_str.match(RegExp(\"\\\\[\" + key + \"(;(.*?))?\\\\]\"))\n            let replacer = \"\"\n            if (match_replacer && match_replacer.length === 3) {\n                replacer = match_replacer[2]\n            }\n            summary_str = summary_str.replace(RegExp(\"\\\\[\" + key + \"(;.*?)?\\\\]\"), kv_pairs[key] || replacer)\n        }\n        return summary_str;\n    }\n\n    render() {\n        function statusFormat(status) {\n            if (status === 0) {\n                return \"正式報告\"\n            }\n            if (status === 1) {\n                return \"已簽收\"\n\n            }\n            if (status === 2) {\n                return \"待送檢\"\n            }\n            return status\n        }\n        //status 0:正式報告 只有0需要做parse\n        const { time, name, status, come, showModal } = this.props;\n        const { summary_str, RESDISP } = this.state;\n        const statusRender = statusFormat(status)\n        const canShowReport = summary_str !== \"--\"\n        return (\n            <div style={{ height: \"50px\", display: \"grid\", gridTemplateColumns: \"1fr 200px 1fr 1fr 1fr\" }}>\n                <t3 className='nonlabteblecell'>{moment(time).format('MM/DD HH:mm')}</t3>\n                <t3 className='nonlabteblecell'>{name}</t3>\n                <t3 className='nonlabteblecell'>{come}</t3>\n                <t3 className='nonlabteblecell'>{statusRender}</t3>\n                {canShowReport  && <t3 className='nonlabteblecell' onClick={() => showModal(RESDISP)} style={{ color: \"blue\", textDecoration: \"underline\", cursor: \"pointer\" }}>{summary_str}</t3>}\n                {!canShowReport && <t3 className='nonlabteblecell'>{summary_str}</t3>}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Modal, List, Divider } from 'antd'\n\nclass ExamReportModal extends Component {\n    render() {\n        const reportDetail = this.props.report\n        const showDetail = reportDetail.map((data, index) => {\n            return data.CONTENT !== \"\" ? <div key={ \"ExamReportModal\" + index } style={{ whiteSpace: \"pre-wrap\" }}>{data.CONTENT}</div> : \"\"\n        })\n        return (\n            <div>{showDetail}</div>\n        );\n    }\n}\n\nexport default ExamReportModal\n","import React, { Component } from 'react';\nimport './Nonlabviewtable.scss'\nimport NonlabviewtableCell from './NonlabviewtableCell'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider'\nimport { Modal } from 'antd';\nimport InsReportModal from '../ExamReportModal'\n\nclass Nonlabviewtable extends Component {\n    state = {\n        visible: false,\n\n        modalVisible: false,\n        modalReport: \"\",\n        ORDLIST: [],\n        RESSECT: []\n    }\n    componentDidMount() {\n        this.nonLabApiGet()\n    }\n    nonLabApiGet() {\n        function selectMonthInterval(storeProcedureTime) {\n            const timestampInterval = moment() - moment(storeProcedureTime, \"YYYY-MM-DD\").valueOf()\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        const { caseinfo } = this.props\n        const storeProcedureTime = moment(caseinfo.TRANSINDT, \"YYYYMMDD\").format(\"YYYY-MM-DD\")\n        const MonthInterval = selectMonthInterval(storeProcedureTime)\n        ApiProvider.getStoredProcedureORDLIST(caseinfo.HISID, storeProcedureTime, \"ALL\", \"DOC3924B\")\n            .then(data => { this.setState({ ORDLIST: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureORDLIST NG \" + JSON.stringify(err)) });\n        // ApiProvider.getStoredProcedureRESSECT(caseinfo.HISID, MonthInterval, \"ALL\", \"DOC3924B\")\n        //     .then(data => { this.setState({ RESSECT: data.data }) })\n        //     .catch(err => { console.log(\"getStoredProcedureRESSECT NG \" + JSON.stringify(err)) });\n    }\n    showModal = (report) => {\n        console.log(\"showModal :\" + JSON.stringify(report))\n        this.setState({\n            modalVisible: true,\n            modalReport: report\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n    render() {\n        function ORDLISTFormat(ORDLIST, StartTime, EndTime) {\n            var ORDLIST_Format = []\n            if (Array.isArray(ORDLIST)) {\n                for (let index = 0; index < ORDLIST.length; index++) {\n                    const element = ORDLIST[index];\n                    const elemetnStatus = Number(element.ORSTATUS)\n                    const elementORBGNTime = moment(element.ORBGNDT.toString().trim() + element.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n                    if (StartTime <= elementORBGNTime && elementORBGNTime <= EndTime) {\n                        if (elemetnStatus === 64) {\n                            //正式報告\n                            ORDLIST_Format.push({\n                                time: elementORBGNTime,\n                                status: 0,\n                                element: element\n                            })\n                        }\n                        if (elemetnStatus === 38) {\n                            //已簽收 \n                            ORDLIST_Format.push({\n                                time: elementORBGNTime,\n                                status: 1,\n                                element: element\n                            })\n                        }\n                        if (elemetnStatus === 31) {\n                            //待送檢\n                            ORDLIST_Format.push({\n                                time: elementORBGNTime,\n                                status: 2,\n                                element: element\n                            })\n                        }\n                        if (elemetnStatus === 82 || elemetnStatus === 60 || elemetnStatus === 61) {\n                            //已取消 不顯示\n                            continue\n                        }\n                        //Other\n                        ORDLIST_Format.push({\n                            time: elementORBGNTime,\n                            status: elemetnStatus,\n                            element: element\n                        })\n                    }\n                }\n            }\n            return ORDLIST_Format\n        }\n        const { modalVisible, modalReport, ORDLIST } = this.state\n        const { StartTime, EndTime } = this.props\n        const FormatList = ORDLISTFormat(ORDLIST, StartTime, EndTime)\n\n        const showModal = this.showModal\n        const handleOk = this.handleOk\n        const handleCancel = this.handleCancel\n        const nonlabcell = FormatList.map(function (value, index, array) {\n            const come = value.element.ORSPCN1;\n            const time = value.time\n            const name = value.element.ORPROCED;\n            const status = value.status;\n            return (\n                <NonlabviewtableCell key={\"Nonlabviewtable\" + index} come={come} time={time} name={name} statis={status} hisId={value.element.ORHISTNO} caseId={value.element.ORDSEQCN} month={value.element.ORMM} seq={value.element.ORDSEQNO} showModal={showModal}></NonlabviewtableCell>\n            );\n        })\n        return (\n            <div>\n                <div style={{ height: \"50px\", border: \"#E2EDF3 1px solid\", backgroundColor: \"#E2EDF3\", display: \"grid\", gridTemplateColumns: \"1fr 1.5fr 1fr 1fr 1fr\" }}>\n                    <t3 className='nonlabtebletitlecell'>檢驗日期</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗項目名稱</t3>\n                    <t3 className='nonlabtebletitlecell'>檢體來源</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗項目狀態</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗結果</t3>\n                </div>\n                <div className='nonlabviewtable'>\n                    {nonlabcell}\n                </div>\n                <Modal\n                    title={\"檢驗結果\"}\n                    visible={modalVisible}\n                    onOk={handleOk}\n                    onCancel={handleCancel}\n                    width={1000}\n                    footer={null}>\n                    <InsReportModal report={modalReport}></InsReportModal>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Nonlabviewtable\n","import React, { Component } from 'react';\nimport Nonlabviewtable from './Nonlabviewtable'\n\n\nclass Nonlabviewlayout extends Component {\n    render() {\n        // const { PickerDate } = this.props\n        // const { modalVisible, modalReport } = this.state\n        // const showModal = this.showModal\n        // const handleOk = this.handleOk\n        // const handleCancel = this.handleCancel\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div style={{ display: 'flex', alignItems: 'center', height: '40px', paddingLeft: \"5px\", paddingRight: \"5px\", background: \"#cccccc\" }}>\n                    <t1>報告清單</t1>\n                </div>\n                <Nonlabviewtable caseinfo={this.props.caseinfo} StartTime={this.props.StartTime} EndTime={this.props.EndTime}></Nonlabviewtable>\n            </div>\n        );\n    }\n}\n\nexport default Nonlabviewlayout","import React, { Component } from 'react';\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider'\n\n\n\nclass RTtable extends Component {\n    state = {\n        RESDBGAS: [],\n        PreHID: null,\n        PreTransInDate: null\n    }\n    componentDidMount() {\n        const HID = this.props.caseinfo.HISID\n        const TRDT = this.props.caseinfo.TRANSINDT\n        this.setState({ PreHID: HID, PreTransInDate: TRDT })\n        this.getGasAPI()\n    }\n    componentDidUpdate() {\n        const HID = this.props.caseinfo.HISID\n        const TRDT = this.props.caseinfo.TRANSINDT\n        const PreHID = this.state.PreHID\n        const PreTRDT = this.state.PreTransInDate\n        if (HID !== PreHID || TRDT !== PreTRDT) {\n            this.setState({ PreHID: HID, PreTransInDate: TRDT })\n            this.getGasAPI()\n        }\n    }\n    getGasAPI() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID\n        const TransInDate = moment(caseinfo.TRANSINDT, \"YYYYMMDD\").format(\"YYYY-MM-DD\")\n        ApiProvider.getStoredProcedureRESDBGAS(HID, TransInDate)\n            .then(data => { this.setState({ RESDBGAS: data.data }) })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDBGAS NG \" + JSON.stringify(err));\n            });\n    }\n    GasListToCell = () => {\n        function formatGasData(GasDataList, st, et) {\n            const filterTimer = GasDataList.filter(function (element, index, arr) {\n                const timeStamp = moment(element.ORRESDT.toString().trim() + element.ORRESTM.toString().trim(), 'YYYY-MM-DDHH.mm.ss').valueOf()\n                return st <= timeStamp && timeStamp <= et\n            })\n            const cellMap = filterTimer.map(function (element, index, arr) {\n                const PHValue = element.SS07\n                const PCO2Value = element.SS06\n                const PO2Value = element.SS08\n                const HCO3Value = element.SS04\n                const BEValue = element.SS01\n                const SampleValue = \"123\" //Parse\n                const O2SatValue = element.SS05\n                const FiO2Value = element.SS03\n                const timeStamp = moment(element.ORRESDT.toString().trim() + element.ORRESTM.toString().trim(), 'YYYY-MM-DDHH.mm.ss').valueOf()\n                const time = moment(timeStamp).format(\"MM/DD HH:mm\")\n                const gasDataArray = [time, PHValue, PCO2Value, PO2Value, HCO3Value, BEValue, O2SatValue, SampleValue, FiO2Value]\n                const GasCell = gasDataArray.map(function (value, index, array) {\n                    return (\n                        <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\" }}>\n                            <t3>{value}</t3>\n                        </centerstyle>\n                    );\n                })\n                return (\n                    <div key={index} style={{ height: \"50px\", display: \"grid\", gridTemplateColumns: \"110px repeat(8,1fr)\" }}>{GasCell}</div>\n                );\n            })\n            return cellMap\n\n        }\n        const { Timer } = this.props\n        const startTime = Timer[0]\n        const endTime = Timer[1]\n        const GasData = this.state.RESDBGAS\n        const CellRander = formatGasData(GasData, startTime, endTime)\n        //for loop filter three days\n\n        return CellRander\n    }\n\n    render() {\n        const GasTitleList = ['起迄', 'PH', 'PCO2', 'PO2', 'HCO3', 'BE', 'O2', 'Sample', 'FiO2']\n        const GasTitleCell = GasTitleList.map(function (value, index, array) {\n            return (\n                <centerstyle key={index} style={{ borderCollapse: \"collapse\" }}>\n                    <t3>{value}</t3>\n                </centerstyle>\n            );\n        })\n\n        return (\n            <div>\n                <div style={{ height: \"50px\", border: \"rgba(238,238,238,1) 1px solid\", backgroundColor: \"#E2EDF3\", display: \"grid\", gridTemplateColumns: \"110px repeat(8,1fr)\" }}>\n                    {GasTitleCell}\n                </div>\n                <div style={{ maxHeight: \"400px\", overflow: \"auto\" }}>\n                    {this.GasListToCell()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTtable\n","import React, { Component } from 'react';\nimport RTtable from './RTtable'\nclass GAS extends Component {\n\n\n    render() {\n        const { caseinfo, PickerDateRange } = this.props\n\n        return (\n            <div style={{ marginBottom: \"20px\" }}>\n                <t1>GAS累積報告</t1>\n                <RTtable Timer={PickerDateRange} caseinfo={caseinfo}></RTtable>\n            </div>\n        );\n    }\n}\n\nexport default GAS\n","import React, { Component } from 'react';\nimport { Modal, Input } from 'antd';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nexport default class RemarkModal extends Component {\n    state = {\n        remark: this.props.remarkValue.remark,\n        editor: this.props.remarkValue.editor,\n    }\n\n\n    \n    componentDidMount() {\n        console.log(\"RemarkModal componentDidMount\");\n        console.log(\"RemarkModal caseinfo: \" + JSON.stringify(this.props.caseinfo));\n        this.onInputChange = this.onInputChange.bind(this);\n        this.onOkClick = this.onOkClick.bind(this);\n    }\n\n    onInputChange(event) {\n        this.setState({ remark: event.target.value })\n    }\n\n    onOkClick() {\n        const { name, transinId, type, remarkId } = this.props.remarkValue\n        const { remark, editor, } = this.state;\n        let fixTime = moment().format('X');\n\n\n        // console.log(`editor : ${editor}`)\n        // console.log(`name : ${name}`)\n        // console.log(`remark : ${remark}`)\n        // console.log(`remarkId : ${remarkId}`)\n        // console.log(`fixTime: ${fixTime}`)\n        // console.log(`transinId : ${transinId}`)\n        // console.log(`type : ${type}`)\n\n        ApiProvider.createRemark(name, remark, remarkId, fixTime, transinId, type, editor)\n            .then(result => {\n                console.log(\"createRemark OK \" + JSON.stringify(result));\n                this.props.onOk(result.data.remark);\n            })\n            .catch(err => {\n                console.log(\"createRemark NG \" + JSON.stringify(err));\n            });\n    }\n\n    render() {\n        const { TextArea } = Input;\n        const { createTime, name } = this.props.remarkValue;\n        const onCancel = this.props.onCancel;\n        const onOk = this.onOkClick.bind(this);\n\n        return (\n            <Modal\n                title=\"備註\"\n                visible={this.props.visible}\n                onOk={onOk}\n                onCancel={onCancel}>\n                <div style={{ display: \"grid\", gridTemplateRows: \"30px 30px 30px 30px\" }}>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div>開立時間: {createTime}</div>\n                        <div>上次編輯時間: </div>\n                        {/* <div>上次編輯時間: {this.state.editTime}</div> */}\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div>處理名稱: {name}</div>\n                        <div>上次編輯人: {this.state.editor}</div>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div>頻次:</div>\n                        <div>開立醫師: {this.state.editor}</div>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>備註內容:</div>\n                    <TextArea rows={5} placeholder=\"請輸入備註內容\" value={this.state.remark} onChange={this.onInputChange} />\n                </div>\n            </Modal>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './RTbreathtablecell.scss'\nimport * as FiliterReg from '../../Function/FiliterReg'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass RTbreathetablecell extends Component {\n    state = {\n        onCell: false,\n        onEdit: false,\n        remark: '',\n        powerLogin: 0\n    }\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n    Mouse_move() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onCell: true\n                }\n            )\n        }\n    }\n\n    Mouse_leave() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onCell: false\n                }\n            )\n        }\n    }\n\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    }\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    seachRemark = () => {\n        const { caseinfo, value } = this.props\n        console.log(value)\n        const id = `Breath${moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").valueOf()}`\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, id, \"RTbreath\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    render() {\n        const { value, caseinfo } = this.props\n        console.log(value)\n        const id = `Breath${moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").valueOf()}`\n        const time = moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\")\n        const setting = value.Mode.toString().trim()\n        const mode = value.Setting.toString().trim()\n\n        const remarkValue = {\n            \"createTime\": time,\n            \"name\": setting,\n            \"remarkId\": id,\n            \"remark\": this.state.remark,\n            \"transinId\": caseinfo.TRANSINID,\n            \"type\": \"RTbreath\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <div>\n                <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n                <div onMouseMove={() => this.Mouse_move()} onMouseLeave={() => this.Mouse_leave()} className=\"RTtablecell\">\n                    <t3 className='RTBreathDateCell'>{time}</t3>\n                    <div style={{ display: \"grid\", gridTemplateRows: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"100px\" : \"50px 50px\"] }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\" }}>\n                            <t3 style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\", padding: \"0px 5px\" }}>{setting}</t3>\n                            <t3 style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\", padding: \"0px 5px\" }}>{mode}</t3>\n                        </div>\n                        <t3 style={{ display: \"flex\", alignItems: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\", padding: \"0px 5px\", display: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"none\" : \"\"] }}>{this.state.remark}</t3>\n                    </div>\n                    <div style={this.state.onCell ? { display: this.state.powerLogin >= 2 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", right: 0, height: \"100px\", background: \"white\", width: \"77px\", border: \"rgba(238,238,238,1) 1px solid\" } : { display: \"none\" }}>\n                        <div onClick={() => this.Edit_state()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <img src={chooseedit} alt='chooseedit'></img>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTbreathetablecell\n","import React, { Component } from 'react';\nimport RTbreathetablecell from './RTbreathtablecell'\nimport * as FilterReg from '../../Function/FiliterReg'\nimport moment from 'moment'\n\nclass RTbreathetable extends Component {\n\n    createRTbreathetable = () => {\n        const { DataList, caseinfo } = this.props\n\n        const RTbreathetable = DataList.map(\n            (value, index, array) =>\n                <RTbreathetablecell key={index} value={value} caseinfo={caseinfo}></RTbreathetablecell>\n        )\n        return RTbreathetable\n    }\n\n    render() {\n        return (\n            <div>\n                <div style={{ height: \"50px\", display: \"grid\", gridTemplateColumns: \"1fr 3fr 3fr\", backgroundColor: \"#E2EDF3\", border: \"rgba(238,238,238,1) 1px solid\" }}>\n                    <t3 style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>紀錄日期</t3>\n                    <t3 style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>Mode</t3>\n                    <t3 style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>Setting</t3>\n                </div>\n                <div style={{ maxHeight: \"400px\", overflow: \"auto\" }}>\n                    {this.createRTbreathetable()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTbreathetable\n","import React, { Component } from 'react';\nimport RTbreathetable from './RTbreathetable'\nimport { DatePicker } from 'antd';\nimport * as FilterReg from '../../Function/FiliterReg'\nimport X2JS from 'x2js';\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as QSPEList from '../../Resource/QSPE'\n\nclass RTbreathe extends Component {\n    state = {\n        preCID: null,\n        QSPE: []\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDateRange } = this.props\n        this.setState({ preCID: caseinfo.CASEID })\n        this.getQSPEApi(caseinfo.CASEID, PickerDateRange[0], PickerDateRange[1])\n\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDateRange } = this.props\n        const CID = caseinfo.CASEID\n        const preCID = this.state.preCID\n        if (CID !== preCID) {\n            this.setState({ preCID: caseinfo.CASEID })\n            this.getQSPEApi(caseinfo.CASEID, PickerDateRange[0], PickerDateRange[1])\n        }\n    }\n    getQSPEApi(CID, st, et) {\n        const xm2 = new X2JS()\n        console.log(CID, st, et)\n        const start = moment(st).format(\"YYYYMMDDHHmm\")\n        const end = moment(et).format(\"YYYYMMDDHHmm\")\n        ApiProvider.getQSPE(CID, start, end)\n            .then(data => {\n                console.log(xm2.xml2js(data.data).outmsg.resconts.rescont)\n                const result = xm2.xml2js(data.data).outmsg\n                if (Number(result.ret) === 0) {\n                    const resultData = result.resconts.rescont\n                    if (Array.isArray(resultData)) {\n                        this.setState({ QSPE: resultData })\n                    }\n                    else {\n                        this.setState({ QSPE: [resultData] })\n                    }\n                }\n                return []\n            })\n            .catch(err => {\n                console.log(\"getQSPE NG \" + JSON.stringify(err))\n            });\n        // this.setState({ QSPE: QSPEList.data })\n    }\n\n    createRTbreathetable = () => {\n        const { caseinfo, PickerDateRange } = this.props\n        const QSPE = this.state.QSPE\n        let DataList = FilterReg.QSPERegList(QSPE)\n        DataList = DataList.filter(data => {\n            let time = moment(data.Date + data.Time, \"YYYYMMDDHHmm\").valueOf()\n            return PickerDateRange[0] <= time && time <= PickerDateRange[1]\n        })\n        console.log(DataList)\n        return <RTbreathetable DataList={DataList} caseinfo={caseinfo}></RTbreathetable>\n    }\n\n    render() {\n        return (\n            <div style={{ marginBottom: \"20px\" }}>\n                <t1>呼吸器設定紀錄</t1>\n                {this.createRTbreathetable()}\n            </div>\n        );\n    }\n}\n\nexport default RTbreathe\n","import React, { Component } from 'react';\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Prescriptionordertablecell.scss'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Prescriptionordertablecell extends Component {\n    state = {\n        onEdit: false,\n        onMove: false,\n        remark: '',\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { caseinfo, value } = this.props\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, value.UDORDSEQ, \"prescription\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    on_Mouse() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: true\n                }\n            )\n        }\n    }\n    on_leave() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: false\n                }\n            )\n        }\n    }\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    checkStatus = () => {\n        const { value, SelectMode } = this.props\n        const ET = moment(value.UDENDDT, \"YYYY-MM-DD-HH:mm:ss.000000\").valueOf()\n\n        if (SelectMode !== 0) {\n            const Status = SelectMode === 0 || SelectMode === 1 ? \"生效中\" : \"已結束\";\n            return Status\n        } else {\n            const nowT = moment().valueOf()\n            const Status = ET < nowT ? \"已結束\" : \"生效中\";\n            return Status\n        }\n    }\n\n    render() {\n        const { caseinfo, value } = this.props\n        const Name = value.UDGNAME.toString()\n        const PName = value.UDRPNAME.toString()\n        const Unit = value.UDDOSAGE.toString() + \"/\" + value.UDDUNIT.toString() + \"/\" + value.UDFREQN.toString() + \"/\" + value.UDROUTE.toString()\n        const ST = moment(value.UDBGNDT, \"YYYY-MM-DD-HH:mm:ss.000000\").format('MM/DD HH:mm')\n        const ET = moment(value.UDENDDT, \"YYYY-MM-DD-HH:mm:ss.000000\").format('MM/DD HH:mm')\n        const Status = this.checkStatus()\n\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": PName,\n            \"remarkId\": value.UDORDSEQ,\n            \"remark\": this.state.remark,\n            \"transinId\": caseinfo.TRANSINID,\n            \"type\": \"prescription\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <div onMouseMove={() => this.on_Mouse()} onMouseLeave={() => this.on_leave()} className='prescriptiontablecell'>\n                <div style={{ display: \"grid\", gridTemplateRows: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"100px\" : \"80px 50px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 2fr 1fr 1fr 1fr\" }}>\n                        <div className='prescriptiontablecellcontext'><t4 className='prescriptiontablecellcontexttext'>{Name}</t4></div>\n                        <div className='prescriptiontablecellcontext'><t4 className='prescriptiontablecellcontexttext'>{PName}</t4></div>\n                        <div className='prescriptiontablecellcontext'><t3 className='prescriptiontablecellcontexttext'>{Unit}</t3></div>\n                        <div className='prescriptiontablecellcontext'><t3 className='prescriptiontablecellcontexttext'>{Status}</t3></div>\n                        <div className='prescriptiontablecellcontext'><t3 className='prescriptiontablecellcontexttext'>{ST}</t3></div>\n                        <div className='prescriptiontablecellcontext'><t3 className='prescriptiontablecellcontexttext'>{ET}</t3></div>\n                    </div>\n                    <t3 style={{ display: \"flex\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\", padding: \"0px 5px\", display: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"none\" : \"\"] }}>{this.state.remark}</t3>\n                    <div style={this.state.onMove ? { display: this.state.powerLogin >= 2 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", right: 0, height: [this.state.remark === undefined || this.state.remark === \"\" ? \"100px\" : \"130px\"], background: \"white\", width: \"77px\", border: \"rgba(238,238,238,1) 1px solid\" } : { display: \"none\" }}>\n                        <div onClick={() => this.Edit_state()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <img src={chooseedit} alt='chooseedit'></img>\n                        </div>\n                    </div>\n                </div>\n                <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            </div >\n        );\n    }\n}\n\nexport default Prescriptionordertablecell\n","import React, { Component } from 'react';\nimport Prescriptionordertablecell from './Prescriptionordertablecell'\nimport './Prescriptionordertable.scss'\n\n\nclass Prescriptionordertable extends Component {\n    render() {\n        const { UDORDER0, caseinfo, SelectMode } = this.props\n        const title = [\"學名\", \"商品名\", \"劑量/單位/途徑/頻次\", \"狀態\", \"開始日期\", \"結束日期\"]\n        const titlecell = title.map(function (value, index, arr) {\n            return (\n                <t3 className='title'>{value}</t3>\n            );\n        })\n        const Prescriptionordertabletable = UDORDER0.map(\n            (value, index, array) =>\n                <Prescriptionordertablecell caseinfo={caseinfo} key={index} value={value} SelectMode={SelectMode}></Prescriptionordertablecell>\n        )\n        return (\n            <div>\n                <div className='Prescriptionordertablelayout'>\n                    {titlecell}\n                </div>\n                <div style={{ maxHeight: \"400px\", overflow: \"auto\" }}>\n                    {Prescriptionordertabletable}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Prescriptionordertable\n","import React, { Component } from 'react';\nimport Prescriptionordertable from './Prescriptionordertable'\nimport { DatePicker, Select, Input } from 'antd';\nimport './Prescriptionorder.scss'\nimport moment from 'moment'\nimport * as ApiGithub from '../../API/ApiGithub'\n\nclass Prescriptionorderlayout extends Component {\n    state = {\n        classParser: { \"mappings\": [] },\n        class: \"全部\",\n        SelectMode: 0,\n        InputMode: null,\n    }\n    componentDidMount() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Prescription\");\n                parser.mappings = [{ \"key\": \"全部\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson Prescription OK \" + JSON.stringify(parser))\n                this.setState({\n                    classParser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    onChangeClass = (value) => {\n        this.setState({ class: value })\n    }\n\n    handleChange = (value) => {\n        this.setState({ SelectMode: value })\n    }\n\n    onChangeinputKey = (event) => {\n        this.setState({ InputMode: event.target.value })\n    }\n\n    ControlBarRender() {\n        const { Option } = Select;\n        return (\n\n            <div class=\"searchBar\" style={{ display: \"grid\", gridTemplateColumns: \"140px 140px auto\", gridColumnGap: \"10px\", marginBottom: \"5px\" }}>\n                <Select defaultValue={this.state.class} style={{ width: 140 }} onChange={this.onChangeClass}>\n                    {this.state.classParser.mappings.map((mapping, index) => {\n                        return <Option value={mapping.key}>{mapping.key}</Option>\n                    })}\n                </Select>\n                <Select defaultValue={this.state.SelectMode} style={{ width: 140 }} onChange={this.handleChange}>\n                    <Option value={0}>全</Option>\n                    <Option value={1}>生效中</Option>\n                    <Option value={2}>失效/已結束/取消</Option>\n                </Select>\n                <Input id=\"prescriptionorderinput\" placeholder=\"輸入藥囑關鍵字\" onChange={this.onChangeinputKey} />\n            </div >\n        );\n    }\n\n    parseClass = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部\"] = []\n\n        inputs.forEach(input => {\n            let content = input.UDGNAME;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部\"].push(input)\n        });\n        return allResult;\n    }\n\n    onClickSearch = () => {\n        const { UDORDER0 } = this.props\n        //const UDORDER0 = [{\"UDDCPRSN\":\"        \",\"UDDURAT\":\"001\",\"UDSUMQTY\":\"1\",\"UDDRGNAM\":\"Cefotaxime (Claforan)*inj 500 mg\",\"UDGNAME\":\"Cefotaxime (Claforan)*inj 500 mg\",\"UDORSIGN\":\"DOC3964C\",\"UDSELF\":\"N\",\"UDSTATUS\":\"60\",\"UDPERNAM\":\"李成彧　　\",\"UDENDDT\":\"2019-08-13-15.00.00.000000\",\"UDDCPNAM\":\"　　　　　\",\"UDDOSAGE\":\"60      \",\"UDORDSEQ\":\"0011\",\"UDBGNDT\":\"2019-08-12-13.04.00.000000\",\"UDDRGNO\":\"01325\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"MG    \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"Claforan iv * inj 500 mg        \",\"UDFREQN\":\"STAT    \"},{\"UDDCPRSN\":\"DOC3941E\",\"UDDURAT\":\"014\",\"UDSUMQTY\":\"2\",\"UDDRGNAM\":\"Heparin sod \\\"CCP#* inj 5000u/5ml\",\"UDGNAME\":\"Heparin sod \\\"CCP#* inj 5000u/5ml\",\"UDORSIGN\":\"DOC3934E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"陳裕璇　　\",\"UDENDDT\":\"2019-08-19-11.45.00.000000\",\"UDDCPNAM\":\"何正尹　　\",\"UDDOSAGE\":\"X1      \",\"UDORDSEQ\":\"0025\",\"UDBGNDT\":\"2019-08-12-19.38.00.000000\",\"UDDRGNO\":\"00607\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"VL    \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"Agglutex #* inj 1000 u/ml 5 ml  \",\"UDFREQN\":\"QD      \"},{\"UDDCPRSN\":\"DOC3941E\",\"UDDURAT\":\"001\",\"UDSUMQTY\":\"0\",\"UDDRGNAM\":\"Immunoglobulin *inj 60mg/ml 50ml\",\"UDGNAME\":\"Immunoglobulin *inj 60mg/ml 50ml\",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-14-10.20.00.000000\",\"UDDCPNAM\":\"何正尹　　\",\"UDDOSAGE\":\"1       \",\"UDORDSEQ\":\"0054\",\"UDBGNDT\":\"2019-08-14-08.51.00.000000\",\"UDDRGNO\":\"03852\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"BOT   \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"HM.imm.globulin *inj60mg/ml 50ml\",\"UDFREQN\":\"STAT    \"},{\"UDDCPRSN\":\"DOC3941E\",\"UDDURAT\":\"007\",\"UDSUMQTY\":\"110\",\"UDDRGNAM\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDGNAME\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-16-10.44.00.000000\",\"UDDCPNAM\":\"何正尹　　\",\"UDDOSAGE\":\"55      \",\"UDORDSEQ\":\"0055\",\"UDBGNDT\":\"2019-08-14-09.17.00.000000\",\"UDDRGNO\":\"02145\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\"                                                                                                    \",\"UDDUNIT\":\"CC    \",\"UDROUTE\":\"IVD\",\"UDRPNAME\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDFREQN\":\"QD-TPN  \"},{\"UDDCPRSN\":\"DOC3915L\",\"UDDURAT\":\"005\",\"UDSUMQTY\":\"4\",\"UDDRGNAM\":\"Fluconazole inj 100 mg/50 ml    \",\"UDGNAME\":\"Fluconazole inj 100 mg/50 ml    \",\"UDORSIGN\":\"DOC3964C\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"李成彧　　\",\"UDENDDT\":\"2019-08-18-08.57.00.000000\",\"UDDCPNAM\":\"李苡萱　　\",\"UDDOSAGE\":\"6.6     \",\"UDORDSEQ\":\"0053\",\"UDBGNDT\":\"2019-08-14-10.07.00.000000\",\"UDDRGNO\":\"01885\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"MG    \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"Diflucan iv inj 100 mg/50 ml    \",\"UDFREQN\":\"QPM     \"},{\"UDDCPRSN\":\"        \",\"UDDURAT\":\"001\",\"UDSUMQTY\":\"1\",\"UDDRGNAM\":\"Dextrose inj 10% 500 ml         \",\"UDGNAME\":\"Dextrose inj 10% 500 ml         \",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"60\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-15-15.00.00.000000\",\"UDDCPNAM\":\"　　　　　\",\"UDDOSAGE\":\"30      \",\"UDORDSEQ\":\"0060\",\"UDBGNDT\":\"2019-08-14-10.48.00.000000\",\"UDDRGNO\":\"80051\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"CC    \",\"UDROUTE\":\"IVD\",\"UDRPNAME\":\"Dextrose inj 10% 500 ml \\\"YF\\\"    \",\"UDFREQN\":\"ST      \"},{\"UDDCPRSN\":\"        \",\"UDDURAT\":\"001\",\"UDSUMQTY\":\"0\",\"UDDRGNAM\":\"Dopamine #* inj 200 mg/5 ml     \",\"UDGNAME\":\"Dopamine #* inj 200 mg/5 ml     \",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"60\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-15-15.00.00.000000\",\"UDDCPNAM\":\"　　　　　\",\"UDDOSAGE\":\"20      \",\"UDORDSEQ\":\"0058\",\"UDBGNDT\":\"2019-08-14-10.48.00.000000\",\"UDDRGNO\":\"02220\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"MG    \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"Dopamin #* inj 200 mg/5 ml \\\"VPP\\\"\",\"UDFREQN\":\"ST      \"},{\"UDDCPRSN\":\"DOC3941E\",\"UDDURAT\":\"014\",\"UDSUMQTY\":\"5\",\"UDDRGNAM\":\"Dextrose inj 10% 500 ml         \",\"UDGNAME\":\"Dextrose inj 10% 500 ml         \",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-19-11.45.00.000000\",\"UDDCPNAM\":\"何正尹　　\",\"UDDOSAGE\":\"30      \",\"UDORDSEQ\":\"0059\",\"UDBGNDT\":\"2019-08-14-10.48.00.000000\",\"UDDRGNO\":\"80051\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"CC    \",\"UDROUTE\":\"IVD\",\"UDRPNAME\":\"Dextrose inj 10% 500 ml \\\"YF\\\"    \",\"UDFREQN\":\"QD      \"},{\"UDDCPRSN\":\"        \",\"UDDURAT\":\"001\",\"UDSUMQTY\":\"1\",\"UDDRGNAM\":\"Salbutamol inh. sol 5 mg/2.5 ml \",\"UDGNAME\":\"Salbutamol inh. sol 5 mg/2.5 ml \",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"60\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-15-15.00.00.000000\",\"UDDCPNAM\":\"　　　　　\",\"UDDOSAGE\":\"1       \",\"UDORDSEQ\":\"0061\",\"UDBGNDT\":\"2019-08-14-13.51.00.000000\",\"UDDRGNO\":\"03120\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"AMP   \",\"UDROUTE\":\"IH \",\"UDRPNAME\":\"Ventolin inh. sol 5 mg/2.5 ml   \",\"UDFREQN\":\"ST      \"}]\n        const parseClass = this.parseClass\n\n        let ListData = [];\n        const activeList = UDORDER0.filter(element => element.UDSTATUS === \"80\")\n        console.log(\"activeList \" + JSON.stringify(activeList));\n\n        let clusteredData = {}\n        if (this.state.classParser !== undefined) {\n            clusteredData = parseClass(activeList, this.state.classParser)\n        }\n        console.log(\"clusteredData \" + JSON.stringify(clusteredData));\n\n        //filter data by selected class\n        let filteredData = clusteredData[this.state.class];\n\n        ListData = this.SortDataList(filteredData)\n        return ListData\n    }\n\n    SortDataList = (DataList) => {\n        const { PickerDateRange } = this.props\n        const { InputMode, SelectMode } = this.state\n        console.log(moment(PickerDateRange[0]).format('YYYYMMDD'), moment(PickerDateRange[1]).format('YYYYMMDD'))\n\n        if (SelectMode !== 0) {\n            console.log(SelectMode)\n            /*\n            預設\n            全部 SelectMode == 0\n            已生效 SelectMode == 1, < 現在時間 <\n            失效 SelectMode == 2, < 現在時間\n            */\n            DataList = DataList.filter(data => {\n                const createST = moment(data.UDBGNDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n                const createET = moment(data.UDENDDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n                const nowDate = moment().valueOf()\n\n                switch (SelectMode) {\n                    case 1:\n                        return createST <= nowDate && nowDate <= createET\n                        break;\n                    case 2:\n                        // console.log(createET, nowDate)\n                        return createET < nowDate\n                        break;\n                    default: return null;\n                }\n            })\n        }\n\n        if (InputMode !== null) {\n            // console.log(InputMode)\n            DataList = DataList.filter(data => {\n                return data.UDGNAME.match(InputMode) !== null || data.UDRPNAME.match(InputMode) !== null\n            })\n        }\n\n        var DataFormat = []\n\n        const st = PickerDateRange[0]\n        const et = PickerDateRange[1] + (24 * 60 * 60 * 1000)\n\n        DataList.forEach(element => {\n            const time = moment(element.UDBGNDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n            console.log(time)\n            if (st <= time && time <= et) {\n                DataFormat.push(element)\n            }\n        })\n        return DataFormat\n    }\n\n    render() {\n        const { searchbar, caseinfo } = this.props\n        const { SelectMode } = this.state\n\n        const filterData = this.onClickSearch()\n\n        return (\n            <div>\n                <div className={searchbar ? 'PrescriptionOrderSearchBar' : 'PrescriptionOrderNonSearchBar'}>\n                    <t1>Prescription Order</t1>\n                </div>\n                {searchbar ? this.ControlBarRender() : null}\n                <Prescriptionordertable caseinfo={caseinfo} UDORDER0={filterData} SelectMode={SelectMode} ></Prescriptionordertable>\n            </div>\n        );\n    }\n}\n\nexport default Prescriptionorderlayout\n","import React, { Component } from 'react';\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Treatmentordertablecell.scss'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Treatmentordertablecell extends Component {\n    state = {\n        onEdit: false,\n        onMove: false,\n        remark: this.props.info.remark,\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { info } = this.props\n        ApiProvider.getOneRemark(this.props.caseinfo.TRANSINID, info.ORDSEQNO, \"treatment\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    on_Mouse() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: true\n                }\n            )\n        }\n    }\n    on_leave() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: false\n                }\n            )\n        }\n    }\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    render() {\n        const { info } = this.props\n        // console.log(info)\n        const Name = info.ORPROCED\n        const QD = info.ORFREQN\n        const Status = info.ORSTATUS\n        const ST = moment(info.ORBGNDT.toString(), 'YYYY-MM-DD').format(\"MM/DD\")\n        const ET = moment(info.ORENDDT.toString(), 'YYYY-MM-DD').format(\"MM/DD\")\n\n\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": Name,\n            \"remarkId\": info.ORDSEQNO,\n            \"remark\": this.state.remark,\n            \"transinId\": this.props.caseinfo.TRANSINID,\n            \"type\": \"treatment\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <div onMouseMove={() => this.on_Mouse()} onMouseLeave={() => this.on_leave()} className=\"treatmentordercell\">\n                <div style={{ display: \"grid\", gridTemplateRows: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"100px\" : \"80px 50px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 3fr 1fr 1fr\" }}>\n                        <t3 className='cellstyle'>{ST}</t3>\n                        <t3 className='cellstyle'>{ET}</t3>\n                        <t3 className='cellstyle'>{Name}</t3>\n                        <t3 className='cellstyle'>{QD}</t3>\n                        <t3 className='cellstyle'>{Status}</t3>\n                    </div>\n                    <t3 className='cellstyle' style={{ display: [this.state.remark === undefined || this.state.remark === \"\" ? \"none\" : \"\"] }}>{this.state.remark}</t3>\n                    <div style={this.state.onMove ? { display: this.state.powerLogin >= 2 ? \"flex\" : \"none\", justifyContent: \"center\", alignItems: \"center\", position: 'absolute', right: 0, height: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"100px\" : \"130px\"], background: \"white\", width: \"77px\", border: \"rgba(238,238,238,1) 1px solid\" } : { display: \"none\" }}>\n                        <div onClick={() => this.Edit_state()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <img src={chooseedit} alt='chooseedit'></img>\n                        </div>\n                    </div>\n                </div>\n                <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            </div>\n        );\n    }\n}\nexport default Treatmentordertablecell\n","import React, { Component } from 'react';\nimport Treatmentordertablecell from './Treatmentordertablecell'\nimport './Treatmentordertable.scss'\n\nclass Treatmentordertable extends Component {\n    render() {\n        const { TRTMNT01, caseinfo, PickerDate } = this.props\n\n        if (TRTMNT01 === null || TRTMNT01 === undefined) {\n            return null\n        }\n        const DataList = TRTMNT01 //SortDataList(TRTMNT01, PickerDate)\n        const Treatmentordertablecelllist = DataList.map(\n            (info, index) => <Treatmentordertablecell caseinfo={caseinfo} key={index} info={info}></Treatmentordertablecell>\n\n        )\n        const titlearray = ['開始日期', '結束日期', '處置名稱', '頻次', '狀態']\n        function titlecell(array) {\n            const result = array.map(function (info, index) {\n                return (\n                    <t3 className=\"treatmentordertablecellstyle\" key={index}>{info}</t3>\n                );\n            })\n            return result\n        }\n        return (\n            <div>\n                <div className='treatmentordertable'>\n                    {titlecell(titlearray)}\n                </div>\n                <div style={{ maxHeight: \"400px\", overflow: \"auto\" }}>\n                    {Treatmentordertablecelllist}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Treatmentordertable\n","import React, { Component } from 'react';\nimport Treatmentordertable from './Treatmentordertable'\nimport { DatePicker, Select, Input, Button } from 'antd';\nimport * as ApiGithub from '../../API/ApiGithub'\nimport moment from 'moment'\nimport './Treatmentorder.scss'\n\nclass Treatmentorderlayout extends Component {\n    state = {\n        // PickerDateRange: [moment().subtract(6, 'days'), moment()],\n        parser: { \"mappings\": [] },\n        DateRangeMode: {},\n        class: \"全部\",\n        SelectMode: 0,\n        InputMode: '',\n    }\n\n    componentDidMount() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Treatment\");\n                parser.mappings = [{ \"key\": \"全部\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson Treatment OK \" + JSON.stringify(parser))\n                this.setState({\n                    parser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    // onChange = (date, dateString) => {\n    //     this.setState({\n    //         PickerDateRange: date\n    //     })\n    // }\n\n    onChangeClass = (value) => {\n        this.setState({ class: value })\n    }\n\n    handleChange = (value) => {\n        this.setState({ SelectMode: value })\n    }\n\n    onChangeinputKey = (event) => {\n        this.setState({ InputMode: event.target.value })\n    }\n\n    Search_bar = () => {\n        const { RangePicker } = DatePicker;\n        const { Option } = Select;\n\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 140px auto\", gridColumnGap: \"10px\", marginBottom: \"5px\" }}>\n                {/* <RangePicker defaultValue={this.state.PickerDateRange} format={\"YYYY/MM/DD\"}\n                    locale={\"zh_TW\"} placeholder={[\"請輸入日期\", \"請輸入日期\"]} onChange={this.onChange} allowClear={false} /> */}\n                <Select defaultValue={this.state.class} style={{ width: 140 }} onChange={this.onChangeClass}>\n                    {this.state.parser.mappings.map((mapping, index) => {\n                        return <Option key={index} value={mapping.key}>{mapping.key}</Option>\n                    })}\n                </Select>\n                <Select defaultValue={0} style={{ width: 140 }} onChange={this.handleChange}>\n                    <Option value={0}>全部</Option>\n                    <Option value={1}>生效中</Option>\n                    <Option value={2}>失效/已結束/取消</Option>\n                </Select>\n                <Input placeholder=\"輸入藥囑關鍵字\" value={this.state.InputMode} onChange={this.onChangeinputKey} />\n            </div >\n        );\n\n    }\n\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部\"] = []\n\n        inputs.forEach(input => {\n            let content = input.ORPROCED;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部\"].push(input)\n        });\n        return allResult;\n    }\n\n    onClickSearch = () => {\n        const { TRTMNT01 } = this.props\n        const parse = this.parse;\n\n        const activeList = TRTMNT01.filter(element => element.ORSTATUS === \"80\")\n        console.log(\"activeList \" + JSON.stringify(activeList));\n\n        let clusteredData = {}\n        if (this.state.parser !== undefined) {\n            clusteredData = parse(activeList, this.state.parser)\n        }\n\n        //filter data by selected class\n        let filteredData = clusteredData[this.state.class];\n\n        const ListData = this.SortDataList(filteredData)\n\n        return ListData\n    }\n\n    SortDataList = (DataList) => {\n        // console.log(JSON.stringify(DataList))\n        const { PickerDateRange } = this.props\n        const { InputMode, SelectMode } = this.state\n\n        if (SelectMode !== 0) {\n            /*\n            預設\n            全部 SelectMode == 0\n            已生效 SelectMode == 1, < 現在時間 <\n            失效 SelectMode == 2, < 現在時間\n            */\n            DataList = DataList.filter(data => {\n                const createST = moment(data.ORBGNDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n                const createET = moment(data.ORENDDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n                const nowDate = moment().valueOf()\n\n                switch (SelectMode) {\n                    case 1:\n                        return createST <= nowDate && nowDate <= createET\n                        break;\n                    case 2:\n                        return createET < nowDate\n                        break;\n                    default: return null;\n                }\n            })\n        }\n\n        if (InputMode !== '') {\n            DataList = DataList.filter(data => {\n                return data.ORPROCED.match(InputMode) !== null\n            })\n        }\n\n        var DataFormat = []\n\n        const st = PickerDateRange[0]\n        const et = PickerDateRange[1] + (24 * 60 * 60 * 1000)\n\n        DataList.forEach(element => {\n        \tconsole.log(element)\n            const time = moment(element.ORBGNDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n            console.log(time)\n            if (st <= time && time <= et) {\n                DataFormat.push(element)\n            }\n        })\n        return DataFormat\n    }\n\n    render() {\n        const { searchbar, caseinfo } = this.props\n\n        const filterData = this.onClickSearch()\n\n        return (\n            <div>\n                <div className={searchbar ? \"order_style\" : \"crossection_style\"}>\n                    <t1>Treatment Order</t1>\n                </div>\n                {searchbar ? this.Search_bar() : null}\n                <Treatmentordertable caseinfo={caseinfo} TRTMNT01={filterData} ></Treatmentordertable>\n            </div>\n        );\n    }\n}\n\nexport default Treatmentorderlayout\n","import React, { Component } from 'react';\nimport detaillogo from '../Image/svg/details.svg'\nimport { Tooltip } from 'antd';\n\nclass Notecell extends Component {\n    \n    updatetime_format(updatetime){\n        function monthformat(month){\n            return month + 1\n        }\n        return new Date(updatetime).getFullYear() + \"-\" + monthformat(new Date(updatetime).getMonth()) + \"-\" +new Date(updatetime).getDate() + \" \" + new Date(updatetime).getHours() + \":\" + new Date(updatetime).getMinutes()\n    }\n    render() {\n        const { info } = this.props\n        const text = info.updatedoctor + \"醫師於\" + this.updatetime_format(info.updatetime) + \"更新\"   \n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"19fr 1fr\", minHeight: \"50px\" }}>\n                <div style={{ wordBreak: \"break-all\", fontSize: \"1.3rem\", display: \"flex\", alignItems: \"center\" }}>{info.data}</div>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <Tooltip placement=\"right\" title={text}>\n                        <div>\n                            <img src={detaillogo} alt='detaillogo'></img>\n                        </div>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Notecell","import React, { Component } from 'react';\nimport Notecell from './Notecell'\nimport editlogo from '../Image/svg/Edit.svg'\nimport { Input, Button } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider';\nimport moment from 'moment';\nclass Note extends Component {\n    state = {\n        powerLogin: 0,\n        EditMode: false,\n        inputContent: '',\n        noteData: [],\n        PickerDate: moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.queryNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.HISID, this.state.PickerDate)\n    }\n    componentDidUpdate() {\n        const propDate = this.props.PickerDate\n        const stateDate = this.state.PickerDate\n        if (propDate !== stateDate) {\n            this.setState({ PickerDate: propDate })\n            this.queryNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.HISID, propDate)\n        }\n    }\n    queryNotice(TRANSID, HISID, pickerdate) {\n        const st = moment(moment(pickerdate).format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n        const et = moment(moment(pickerdate).format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf() + (24 * 60 * 60 * 1000)\n        console.log(TRANSID, HISID, st, et)\n        console.log(moment(st).format(\"YYYY/MM/DD\"))\n        console.log(moment(et).format(\"YYYY/MM/DD\"))\n        ApiProvider.getOnePatientNotice(TRANSID, HISID, st, et)\n            .then(result => {\n                console.log(\"getOnePatientNotice OK \" + JSON.stringify(result));\n                this.setState({\n                    noteData: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientNotice NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n    // queryOnePatientNotice() {\n    //     ApiProvider.getOnePatientNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID)\n    //         .then(data => {\n    //             console.log(\" OK \" + JSON.stringify(data))\n    //             this.setState({ noteData: data.data })\n    //         }).catch(err => { })\n    // }\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString()\n        const doc = sessionStorage.getItem('user')\n        ApiProvider.createNotice(this.props.caseinfo.HISID, this.state.inputContent, timeNowStr, this.props.caseinfo.TRANSINID, doc)\n            .then(data => {\n                this.queryNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID, this.props.PickerDate)\n            })\n            .catch(err => {\n                console.log(\" Err \" + JSON.stringify(err))\n            })\n        this.setState(\n            {\n                EditMode: false,\n                inputContent: undefined\n            }\n        )\n    }\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    EditControl() {\n        const edit = this.props.editstatus\n        if (edit) {\n            return (\n                <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin > 0 ? \"flex\" : \"none\" }}>\n                    <img src={editlogo} alt=\"editlogo\" />\n                </div>\n            );\n        }\n        return null\n    }\n    render() {\n        const List = this.state.noteData\n        console.log(List)\n        const notelist = List.map((info, index) => {\n            const time = moment(info.time, \"YYYY-MM-DD[T]HH:mm:ss.000+0000\").format('YYYY-MM-DD HH:mm:ss')\n            const localTime = moment.utc(time).toDate()\n            const infoObj = {\n                updatedictor: info.doc,\n                updatetime: moment(localTime).format(\"YYYY/MM/DD HH:mm:ss\"),\n                data: info.context\n            }\n            return <Notecell key={index} info={infoObj}></Notecell>\n        })\n        const EditButton = this.EditControl()\n        return (\n            <div style={{ marginTop: \"10px\", borderRadius: \"4px\" }}>\n                <div style={{ height: \"35px\", backgroundColor: \"#71b0e46e\", padding: \"0px 5px\", display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{this.props.title}</t2>\n                    {EditButton}\n                </div>\n                <div style={{ height: \"300px\" }}>\n                    <div style={{ maxHeight: \"300px\", overflow: \"auto\" }}>\n                        {notelist}\n                    </div>\n                    <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                        <div style={{ padding: \"5px 10px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <Input placeholder=\"輸入當日內容\" value={this.state.inputContent} onChange={this.onInputChange.bind(this)}></Input>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                                <Button onClick={() => this.onClickCancel()}>取消</Button>\n                                <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default Note\n","import React, { Component } from 'react';\nimport Schedule_event_list from '../../Module/Schedule_event'\nimport Note from '../../Module/Note'\nclass Crossection_schedule extends Component {\n    render() {\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\" }}>\n                <Schedule_event_list source={this.props.source} PickerDate={this.props.PickerDate} title=\"排程\" caseinfo={this.props.caseinfo} editstatus={this.props.editstatus}></Schedule_event_list>\n                <Note title=\"當日評論Comment\" PickerDate={this.props.PickerDate} caseinfo={this.props.caseinfo} data={this.props.noticeData} editstatus={this.props.editstatus}></Note>\n            </div>\n        );\n    }\n}\n\nexport default Crossection_schedule;\n","import React, { Component } from 'react';\nimport Todolayout from '../../Module/Todo';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport Wardinfousercheckbox from '../../Wardview/Wardunfousercheckbox';\n\nclass Crosssection_todo extends Component {\n    state = {\n        todoList: []\n    }\n\n    componentDidMount() {\n        this.queryTodo();\n    }\n\n    queryTodo() {\n        ApiProvider.getOneTodo(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID)\n        .then(result => {\n            console.log(\"getOneTodo OK \" + JSON.stringify(result.data));\n            this.setState({\n                todoList: result.data\n            })\n        })\n        .catch(err => {\n            console.log(\"getOneTodo NG \" + JSON.stringify(err));\n        });\n    }\n\n    renderTodoItem() {\n        if (this.state.todoList.length === 0) {\n            return (\n                <div>沒有待辦事項</div>\n            )\n        } else {\n            return this.state.todoList.map((item, index) => {\n                if (item.type === \"未完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={false}></Wardinfousercheckbox>)\n                } else if (item.type === \"已完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={true}></Wardinfousercheckbox>)\n                }\n\n            });\n        }\n    }\n\n    render() {\n        const renderTodoItem = this.renderTodoItem.bind(this);\n        return (\n            <div>\n                <div style={{display:\"flex\",alignItems:\"center\",padding:\"0px 5px\",backgroundColor:\"#cccccc\",height:\"50px\"}}>\n                    <t2>To Do List</t2>\n                </div>\n                {renderTodoItem()}\n            </div>\n        );\n    }\n}\n\nexport default Crosssection_todo\n","import React, { Component } from 'react';\nimport { Checkbox ,Tooltip} from 'antd';\nimport { todo_data } from '../jsonResponse'\nimport detaillogo from '../Image/svg/details.svg'\nimport './Todo.scss'\n\nclass Todolayout extends Component {\n    state = {\n        Editstate: \"none\"\n    }\n\n    Editclick(editchange) {\n        console.log(editchange)\n        this.setState(\n            {\n                Editstate: editchange\n            }\n        );\n    }\n\n    updatetime_format(updatetime){\n\n        function monthformat(month){\n            return month + 1\n        }\n        \n        return new Date(updatetime).getFullYear() + \"-\" + monthformat(new Date(updatetime).getMonth()) + \"-\" +new Date(updatetime).getDate() + \" \" + new Date(updatetime).getHours() + \":\" + new Date(updatetime).getMinutes()\n    }\n\n    detail_text(info){\n        return info.Editor + \"醫師於\" + this.updatetime_format(info.Time) + \"更新\" \n    }\n    onChange = (checkedValues) => {\n        console.log('checked = ', checkedValues);\n        \n\n    }\n    render() {\n        const { title } = this.props\n        const checkbox_list = todo_data.map((info, index) =>\n            <div key={index} class='checkboxcell'>\n                <Checkbox style={{ fontSize: \"16px\" }} defaultChecked={info.Flag} value={index}>{info.Content}</Checkbox>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <Tooltip placement=\"right\" title={this.detail_text(info)}>\n                        <div>\n                            <img src={detaillogo} alt='detaillogo'></img>\n                        </div>\n                    </Tooltip>\n                </div>\n            </div>)\n        return (\n            <div>\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', height: '50px', padding:\"0px 5px\", background: \"#E2EDF3\" }}>\n                    <t2>{title}</t2>\n                </div>\n                <div style={{ maxHeight: \"250px\",overflowY:'auto' }}>\n                    {/*To do list */}\n                    <Checkbox.Group style={{ width: '100%' }} onChange={this.onChange}>{checkbox_list}</Checkbox.Group>\n                </div>\n                {/* <div style={{ display: this.state.Editstate }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"50px 50px\", paddingRight: \"16px\", paddingLeft: \"16px\", backgroundColor: \"rgba(238,238,238,1)\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                <div style={{ marginRight: \"10px\" }}>待辦時間:</div>\n                                <DatePicker placeholder=\"Select month\" style={{ marginRight: \"10px\" }} />\n                                <TimePicker defaultValue={moment('12:08', format)} format={format} />\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                <div style={{ marginRight: \"10px\" }}>結束時間:</div>\n                                <DatePicker placeholder=\"Select month\" style={{ marginRight: \"10px\" }} />\n                                <TimePicker defaultValue={moment('12:08', format)} format={format} />\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"11fr 1fr\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}><Input placeholder=\"待辦內容\" /></div>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                                <Button type=\"primary\" style={{ width: \"70%\" }}>新增</Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ display: 'flex', justifyContent: \"center\", alignItems: \"center\", padding: \"9px\" }}>\n                        <Button style={{ height: \"35px\", width: \"100px\", borderRadius: \"4px\" }} onClick={() => this.Editclick(\"none\")}>取消</Button>\n                        <div style={{ width: \"20px\" }}></div>\n                        <Button type=\"primary\" style={{ height: \"35px\", width: \"100px\", borderRadius: \"4px\" }}>儲存</Button>\n                    </div>\n                </div> */}\n            </div>\n        );\n    }\n}\n\nexport default Todolayout","import React, { Component } from 'react';\nimport Vitalsign from './Vitalsign';\nimport Controlbar from '../Controlbar';\nimport Crossection_io from './Crossection_io'\nimport Labviewlayout from './Labview'\nimport Nonlabviewlayout from './Nonlabview'\nimport GAS from './GAS'\nimport RTbreathe from './RTbreathe'\nimport Prescriptionorderlayout from '../Prescriptionorder/Prescriptionorder'\nimport Treatmentorderlayout from '../Treatmentorder/Treatmentorder'\nimport Crossection_schedule from './Crosssectionschedule'\nimport Crosssection_todo from './Crosssection_todo'\nimport './Crosssectionlayout.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass Crosssectionlayout extends Component {\n    state = {\n        Cross_item: [0, 1, 2, 3, 4, 5],\n        RESDGLU1: [],\n        RESLAB02: [],\n        RESLAB01: [],\n        RESDBGAS: [],\n        RESLAB0C: [],\n        RESSECT: [],\n        UDORDER0: [],\n        TRTMNTQ1: [],\n\n        PickerDate: moment(moment().format('YYYYMMDD')).valueOf(),\n\n        SelectInterval: 1,\n\n        preCID: null,\n        preHID: null\n    }\n    componentDidMount() {\n        const CID = this.props.caseinfo.CASEID\n        const HID = this.props.caseinfo.HISID\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        this.setState({\n            preCID: CID,\n            preHID: HID\n        })\n        this.NIS_API_IO(this.state.PickerDate, CID, HID, TRDT)\n    }\n    componentDidUpdate() {\n        const CID = this.props.caseinfo.CASEID\n        const HID = this.props.caseinfo.HISID\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        const { preCID, preHID } = this.state\n        if (preCID !== CID || preHID !== HID) {\n            this.setState({\n                preCID: CID,\n                preHID: HID\n            })\n            this.NIS_API_IO(this.state.PickerDate, CID, HID, TRDT)\n        }\n    }\n    NIS_API_IO(Datetime, CID, HID, TRDT) {\n        function selectMonthInterval(Datetime) {\n            const timestampInterval = new Date().getTime() - Datetime\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        const TransinDate = moment(TRDT).format(\"YYYY-MM-DD\")\n        const MonthInterval = selectMonthInterval(Datetime)\n        ApiProvider.getStoredProcedureRESDGLU1(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESDGLU1: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDGLU1 NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESLAB02(HID, TransinDate)\n            .then(data => {\n                this.setState({ RESLAB02: data.data })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESLAB02 NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESLAB01(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESLAB01: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESLAB01 NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESDBGAS(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESDBGAS: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDBGAS NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESLAB0C(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESLAB0C: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESLAB0C NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESSECT(HID, MonthInterval, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                this.setState({\n                    RESSECT: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESSECT NG \" + JSON.stringify(err))\n            });\n\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                this.setState({\n                    UDORDER0: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureUDORDER0 NG \" + JSON.stringify(err))\n            });\n        ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => {\n                this.setState({\n                    TRTMNTQ1: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureTRTMNTQ1 NG \" + JSON.stringify(err))\n            });\n    }\n\n    callbackFunction = (item_array) => {\n        this.setState({ Cross_item: item_array })\n    }\n\n    callbackDateFunction = (PickerTimeStamp) => {\n        console.log(PickerTimeStamp)\n        this.setState({ PickerDate: PickerTimeStamp })\n    }\n\n    display_item(number) {\n        const item = this.state.Cross_item\n        var filter = item.some(function (item, index, array) {\n            return item === number\n        });\n        return filter\n    }\n    render() {\n        const crosssectioncontrollist = [\n            {\n                \"name\": \"生命徵象/輸出入\",\n                \"scrollpoint\": \"vitalsignIO\"\n            },\n            {\n                \"name\": \"檢驗結果\",\n                \"scrollpoint\": \"lab\"\n            },\n            {\n                \"name\": \"呼吸評估\",\n                \"scrollpoint\": \"rt\"\n            },\n            {\n                \"name\": \"醫藥囑\",\n                \"scrollpoint\": \"order\"\n            },\n            {\n                \"name\": \"行事曆及註記\",\n                \"scrollpoint\": \"schedule\"\n            }\n        ]\n        const { caseinfo } = this.props\n        const TimeStampPickerDate = this.state.PickerDate\n        const endTime = TimeStampPickerDate + (31 * 60 * 60 * 1000)\n        const startTime = endTime - (3 * 24 * 60 * 60 * 1000)\n        const PickerDateRange = [TimeStampPickerDate - (6 * 24 * 60 * 60 * 1000), TimeStampPickerDate]\n        console.log(moment(PickerDateRange[0]).format('YYYYMMDD'), moment(PickerDateRange[1]).format('YYYYMMDD'))\n\n        return (\n            <div>\n                <Controlbar caseinfo={caseinfo} PickerDate={this.state.PickerDate} parentDateCallback={this.callbackDateFunction} parentCallback={this.callbackFunction} btnlist={crosssectioncontrollist} item_array={this.state.Cross_item}></Controlbar>\n                <div id=\"crossection\" className='crossectioncontent'>\n                    <div id={\"vitalsignIO\"} style={this.display_item(0) ? { display: \"grid\", gridTemplateColumns: \"2fr 1fr\", gridGap: \"10px\", marginBottom: \"10px\" } : { display: \"none\" }}>\n                        <Vitalsign PickerDate={this.state.PickerDate} caseinfo={caseinfo}></Vitalsign>\n                        <Crossection_io PickerDate={this.state.PickerDate} caseinfo={caseinfo} title=\"I/O\"></Crossection_io>\n                    </div>\n                    <div id={\"lab\"} style={this.display_item(1) ? { display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" } : { display: \"none\" }}>\n                        <Labviewlayout PickerDate={this.state.PickerDate} caseinfo={caseinfo} RESLAB01={this.state.RESLAB01} RESLAB02={this.state.RESLAB02} RESDBGAS={this.state.RESDBGAS} RESLAB0C={this.state.RESLAB0C} RESDGLU1={this.state.RESDGLU1} RESSECT={this.state.RESSECT}></Labviewlayout>\n                        <Nonlabviewlayout caseinfo={caseinfo} StartTime={startTime} EndTime={endTime}></Nonlabviewlayout>\n                    </div>\n                    <div id={\"rt\"} style={this.display_item(2) ? { display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" } : { display: \"none\" }}>\n                        <GAS caseinfo={caseinfo} PickerDateRange={PickerDateRange} searchbar={false}></GAS>\n                        <RTbreathe caseinfo={caseinfo} PickerDateRange={PickerDateRange} searchbar={false}></RTbreathe>\n                    </div>\n                    <div id={\"order\"} style={this.display_item(3) ? { display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" } : { display: \"none\" }}>\n                        <Prescriptionorderlayout UDORDER0={this.state.UDORDER0} caseinfo={caseinfo} searchbar={false} PickerDateRange={PickerDateRange}></Prescriptionorderlayout>\n                        <Treatmentorderlayout TRTMNT01={this.state.TRTMNTQ1} caseinfo={caseinfo} searchbar={false} PickerDateRange={PickerDateRange}></Treatmentorderlayout>\n                    </div>\n                    <div id={\"schedule\"} style={this.display_item(4) ? null : { display: \"none\" }}>\n                        <Crossection_schedule source={1} PickerDate={this.state.PickerDate} editstatus={false} caseinfo={caseinfo}></Crossection_schedule>\n                    </div>\n                    <div style={this.display_item(5) ? null : { display: \"none\" }}>\n                        <Crosssection_todo caseinfo={caseinfo} ></Crosssection_todo>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Crosssectionlayout;\n","import React, { Component } from 'react';\nimport IOpage from '../../Module/iopage'\n\nclass Inoutonchronic extends Component {\n    render() {\n        const { title, caseinfo, IntervalStatus, PickerDate } = this.props\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <t1>{title}</t1>\n                <IOpage caseinfo={caseinfo} Status={\"Chronic\"} IntervalStatus={IntervalStatus} PickerDate={PickerDate}></IOpage>\n            </div>\n        );\n    }\n}\n\nexport default Inoutonchronic","import React, { Component } from 'react'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport { Spin, Icon } from 'antd';\nimport moment from 'moment'\n\nclass Chronictablecelltooltip extends Component {\n    state = {\n        preStartTimeStamp: null,\n        loading: true,\n        resultStr: \"--\"\n    }\n    componentDidUpdate() {\n        const { startTimeStamp } = this.props\n        const { preStartTimeStamp } = this.state\n        if (startTimeStamp !== preStartTimeStamp) {\n            console.log(\"Chronictablecelltooltip componentDidUpdate\")\n        }\n    }\n    componentDidMount() {\n        const { startTimeStamp } = this.props\n        this.setState({ preStartTimeStamp: startTimeStamp })\n        console.log(\"Chronictablecelltooltip componentDidMount\")\n        this.apiGet()\n    }\n    apiGet() {\n        const { tooltipelement, caseinfo } = this.props\n        const ORMM = tooltipelement.ORMM.toString().trim()\n        const ORDSEQNO = tooltipelement.ORDSEQNO.toString().trim()\n        //RESDISP\n        ApiProvider.getStoredProcedureRESDISP(caseinfo.HISID, ORMM, caseinfo.CASEID, ORDSEQNO)\n        .then(result => {\n            console.log(\"getStoredProcedureRESDISP OK \" + JSON.stringify(result.data))\n            //const fakeData = [{\"RECNO\":\"1\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"正式報告\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"2\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"                                臺北榮民總醫院病理檢驗部報告\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"3\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  病患資訊：         新生兒加護病房 - 8 張恩慈之男 4599819-4 男性 3天大 NBD\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"4\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  申請序號 / 工作號：     0APKHTG/2502091284       開立時間：    20200207  0809\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"5\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  開醫囑者：         DOC3915L 李苡萱         簽收時間：    20200209  1850\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"6\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  報告人 ：          LABE1523 林宜慧         報告時間：    20200209  1850\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"7\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  檢體 ：           Blood\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"8\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  醫囑名稱：         Crea,ALT,Mg,NA,K,P,\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"9\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"   項目     H/L  結果   前次結果 單位     參考值\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"10\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"   BUN            ()\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"11\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"   Na        145  ()   mmol/L   136~145 mmol/L\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"12\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"   K         4.0   ()   mmol/L   3.5~5.1 mmol/L\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"}]\n\n            //parse content\n            const parsers = this.props.summaryParse\n            const parser  = result.data.length > 0 ? this.select_parser(\"Chronic table\", result.data[0], parsers) : undefined\n            \n            if(parser !== undefined) {\n                //concat all content\n                let allContent = \"\"\n                //fakeData.forEach(item => {\n                result.data.forEach(item => {\n                    allContent = `${allContent} \"\\n\" ${item.CONTENT}`;\n                });\n                //console.log(\"allContent\" + JSON.stringify(allContent))\n\n                const result = this.parse(allContent, parser)\n                //console.log(\"result\" + JSON.stringify(result))\n\n                const resultStr = this.summerize(result, parser)\n                //console.log(\"resultStr\" + JSON.stringify(resultStr))\n\n                this.setState({resultStr: resultStr})\n            }\n\n            this.setState({loading: false})\n        })\n        .catch(err => {\n            console.log(\"getStoredProcedureRESDISP NG \" + JSON.stringify(err))\n            this.setState({loading: false})\n        })\n    }\n    select_parser = (parserName, input, parsers) => {\n        const inputBeginTime = moment(input.ORBGNDT, \"YYYY-MM-DD\").valueOf()\n        return parsers.find(x =>\n            parserName.match(x.parser_name)\n            && (!x.apply_condition.start_time || inputBeginTime >= x.apply_condition.start_time)\n        )\n    }\n    parse = (input, parser) => {\n        let mappings = parser.mappings\n        let result = {}\n        mappings.forEach(mapping => {\n            const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n            const match = input.match(re)\n            result[mapping.key] = match && match[mapping.position]\n        });\n        return result;\n    }\n    summerize = (kv_pairs, parser) => {\n        let summary_str = parser.summary\n        for (const key in kv_pairs) {\n            let match_replacer = summary_str.match(RegExp(\"\\\\[\" + key + \"(:(.*?))?\\\\]\"))\n            let replacer = \"\"\n            if (match_replacer && match_replacer.length === 3) {\n                replacer = match_replacer[2]\n            }\n            const match = summary_str.match(RegExp(\"\\\\[\" + key + \":(.*?)?\\\\]\"))\n            summary_str = summary_str.replace(match[0], match[0].replace(match[1], kv_pairs[key] || replacer))\n        }\n        return summary_str;\n    }\n    render() {\n        const { tooltipelement } = this.props\n        const { loading, resultStr } = this.state\n        const infoTime = tooltipelement.ORRCPTM.toString().trim()\n        const name = tooltipelement.ORPROCED.toString().trim()\n        const reportname = tooltipelement.ORPROCED.toString().trim() + tooltipelement.ORSPCN1.toString().trim()\n        const cellRenderData = [reportname, infoTime, resultStr]\n        const Cell = cellRenderData.map(function (value, index) {\n            if(loading) {\n                const antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n                return (\n                    <Spin key={index} indicator={antIcon} />\n                );\n            } else {\n                return (\n                    <div key={index} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"0px 5px\" }}>\n                        {value}\n                    </div>\n                );\n            }\n            \n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"300px 100px 200px\" }}>{Cell}</div>\n        );\n    }\n}\n\nexport default Chronictablecelltooltip","import React, { Component } from 'react'\nimport { Tooltip } from 'antd'\nimport moment from 'moment'\nimport Chronictablecelltooltip from './ChronicTableCellTooltipCell'\n\nclass Chronictablecell extends Component {\n    CellText() {\n        const { element, caseinfo, summaryParse } = this.props\n        const start = moment(element.StartTime).format(\"YYYY/MM/DD HH:mm:ss\")\n        const startTimeStamp = moment(element.StartTime).valueOf()\n        const end = moment(element.EndTime).format(\"HH:mm:ss\")\n        const title = [\"報告類別\", \"採檢時間\", \"檢驗數據\"]\n        const titleCell = title.map(function (value, index) {\n            return (\n                <div key={index} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"0px 5px\" }}>\n                    {value}\n                </div>\n            );\n        })\n        const objectElement = element.element\n        const objectElementCell = objectElement.map(function (info, index, arr) {\n            return (\n                <Chronictablecelltooltip key={index} startTimeStamp={startTimeStamp} tooltipelement={info} caseinfo={caseinfo} summaryParse={summaryParse}></Chronictablecelltooltip>\n            );\n        })\n        return (\n            <div>\n                <div>{start}-{end}</div>\n                <div>檢驗檢查項目 : {element.title}類</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"300px 100px 200px\" }}>\n                    {titleCell}\n                </div>\n                {objectElementCell}\n            </div>\n        );\n    }\n    render() {\n        function valueNull(value) {\n            if (value === null || value === undefined || value === 0) {\n                return \"--\"\n            }\n            return value\n        }\n        const { element } = this.props\n        const TitleRender = this.CellText()\n        if (element.element.length === 0) {\n            return (\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>--</div>\n            );\n        }\n        return (\n            <Tooltip title={TitleRender} autoAdjustOverflow={true} overlayStyle={{ maxWidth: \"800px\" }}>\n                <div style={{ fontSize: \"16px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                    {valueNull(element.element.length)}\n                </div>\n            </Tooltip>\n        );\n    }\n}\n\nexport default Chronictablecell","import React, { Component } from 'react'\nimport moment from 'moment'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport * as ApiPronider from '../../API/ApiProvider'\nimport Chronictablecell from './ChronicTableCell'\nimport * as RSData from '../../Resource/RESSECT'\n\nclass Tableonchronic extends Component {\n    state = {\n        LabParse: [],\n        SummaryParse: [{apply_condition: \"\", mappings: []}],\n        RESSECT: [],\n        preHID: null\n    }\n\n    ApiGet(HID, monthly) {\n        ApiGithub.getGitHubJson(\"Chronic_Lab.json\")\n            .then(data => {\n                this.setState({\n                    LabParse: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiGithub.getGitHubJson(\"Summary.json\")\n            .then(data => {\n                this.setState({\n                    SummaryParse: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiPronider.getStoredProcedureRESSECT(HID, \"1\", \"ALL\", \"DOC3924B\")\n            .then(data => {\n                this.setState({ RESSECT: data.data })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        // this.setState({ RESSECT: RSData.data })\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDate, chronic_state } = this.props\n        const HID = caseinfo.HISID\n        const monthly = this.fotmatTimerMonthly(PickerDate)\n        this.setState({ preHID: caseinfo.HISID, prePickerDate: PickerDate, preInterval: chronic_state })\n        this.ApiGet(HID, monthly)\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDate, chronic_state } = this.props\n        const HID = caseinfo.HISID\n        const { preHID, prePickerDate, preInterval } = this.state\n        const monthly = this.fotmatTimerMonthly(PickerDate)\n        if (HID !== preHID || prePickerDate !== PickerDate || preInterval !== chronic_state) {\n            this.setState({ preHID: caseinfo.HISID, prePickerDate: PickerDate, preInterval: chronic_state })\n            this.ApiGet(HID, monthly)\n        }\n    }\n\n    fotmatTimerMonthly(pickerdate) {\n        const timestampInterval = moment().valueOf() - pickerdate\n        const timestampMonth = 30 * 24 * 60 * 60 * 1000\n        const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n        return MonthInt\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    render() {\n        function DataForTimer(dataList, interval, pickerdate) {\n            function starttime(interval, entTimeStamp) {\n                if (interval === 0) {\n                    return entTimeStamp - (24 * 60 * 60 * 1000)\n                }\n                if (interval === 1) {\n                    return entTimeStamp - (3 * 24 * 60 * 60 * 1000)\n                }\n                if (interval === 2) {\n                    return entTimeStamp - (7 * 24 * 60 * 60 * 1000)\n                }\n                return entTimeStamp - (14 * 24 * 60 * 60 * 1000)\n            }\n\n            function fotmatTimerForTimer(interval, st, list, title, grid) {\n                var TimerForList = []\n                for (let index = 0; index < interval; index++) {\n                    const StartTime = st + (index * grid * 60 * 60 * 1000)\n                    const EndTime = st + ((index + 1) * grid * 60 * 60 * 1000)\n                    const filterTimerForDataList = list.filter(function (element, index, arr) {\n                        const time = element.ORRCPDT.toString().trim() + element.ORRCPTM.toString().trim()\n                        const timestamp = moment(time, 'YYYY-MM-DDHH:mm:ss').valueOf()\n                        return StartTime <= timestamp && timestamp < EndTime\n                    })\n                    TimerForList.push({\n                        StartTime: StartTime,\n                        EndTime: EndTime,\n                        element: filterTimerForDataList,\n                        title: title\n                    })\n                }\n                return TimerForList\n            }\n            console.log(dataList.array)\n            const et = pickerdate + (31 * 60 * 60 * 1000)\n            const st = starttime(interval, et)\n            const slectInt = TimeInterval(interval)\n            const DataTransForTimer = fotmatTimerForTimer(slectInt.interval, st, dataList.array, dataList.title, slectInt.grid)\n            return DataTransForTimer\n        }\n\n\n\n        function LabFormat(ressect, parsrList) {\n            var arrayBiochemical = []\n            var arrayBlood = []\n            var arrayCultivate = []\n            var arrayGAS = []\n            var arrayGlu = []\n            var arrayRadiation = []\n            var arrayOther = []\n\n            console.log(parsrList)\n            for (let index = 0; index < ressect.length; index++) {\n                const element = ressect[index];\n                const element_ORPROCED = element.ORPROCED\n                const BioFind = parsrList.Biochemical.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const BloFind = parsrList.Blood.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const CulFind = parsrList.Cultivate.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const GasFind = parsrList.GAS.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const GluFind = parsrList.GAS.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const RadFind = parsrList.Radiation.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                if (BioFind) {\n                    arrayBiochemical.push(element)\n                }\n                if (BloFind) {\n                    arrayBlood.push(element)\n                }\n                if (CulFind) {\n                    arrayCultivate.push(element)\n                }\n                if (GasFind) {\n                    arrayGAS.push(element)\n                }\n                if (GluFind) {\n                    arrayGlu.push(element)\n                }\n                if (RadFind) {\n                    arrayRadiation.push(element)\n                }\n                if (BioFind === false && BloFind === false && CulFind === false && GasFind === false && RadFind === false) {\n                    arrayOther.push(element)\n                }\n            }\n            const arrayList = []\n            arrayList.push({\n                title: \"生化\",\n                array: arrayBiochemical,\n            })\n            arrayList.push({\n                title: \"血液\",\n                array: arrayBlood,\n            })\n            arrayList.push({\n                title: \"培養\",\n                array: arrayCultivate,\n            })\n            arrayList.push({\n                title: \"GAS\",\n                array: arrayGAS,\n            })\n            arrayList.push({\n                title: \"Glu\",\n                array: arrayGlu,\n            })\n            arrayList.push({\n                title: \"放射\",\n                array: arrayRadiation,\n            })\n            arrayList.push({\n                title: \"其他\",\n                array: arrayOther,\n            })\n            return arrayList\n        }\n        function TimeInterval(interval) {\n            if (interval === 0) {\n                return { interval: 24, grid: 1 }\n            }\n            if (interval === 1) {\n                return { interval: 18, grid: 4 }\n            }\n            if (interval === 2) {\n                return { interval: 21, grid: 8 }\n            }\n            return { interval: 14, grid: 24 }\n        }\n        const { chronic_state, caseinfo, PickerDate, title } = this.props\n        const { LabParse, RESSECT, SummaryParse } = this.state\n        if (LabParse === null || LabParse === undefined || LabParse.length === 0) {\n            return null\n        }\n        if (RESSECT === null || RESSECT === undefined || RESSECT.length === 0) {\n            return null\n        }\n        const data = LabFormat(RESSECT, LabParse)\n        const statestatus = TimeInterval(chronic_state)\n        const title_list = title.map((info, index) =>\n            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"40px\", border: \"1px solid rgba(238,238,238,1)\", borderCollapse: \"collapse\", backgroundColor: \"#cccccc\" }} key={index}>\n                <t2>{info.title}</t2>\n            </div>\n        )\n        const cell_list = data.map(function (value, index, arr) {\n            const DataList = DataForTimer(value, chronic_state, PickerDate)\n            return DataList\n        })\n        console.log(data)\n        const cellRender = cell_list.map(function (value, index, array) {\n            const valuecell = value.map(function (element, index, arr) {\n                const toolTipID = \"ChronicTableTootip\" + index\n                return (\n                    <Chronictablecell key={toolTipID} element={element} caseinfo={caseinfo} summaryParse={SummaryParse}></Chronictablecell>\n                );\n            })\n            return valuecell\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\" }}>\n                <div style={{ display: \"grid\", gridTemplateRows: \"repeat(\" + title.length + \",1fr)\" }}>\n                    {title_list}\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + statestatus.interval + \",1fr)\", gridTemplateRows: \"repeat(7,1fr)\" }}>\n                    {cellRender}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Tableonchronic","import React, { Component } from 'react'\nimport Tableonchronic from './ChronicTable'\n\nclass Chroniclab extends Component {\n    render() {\n        const { title, caseinfo, select_interval, PickerDate } = this.props\n        const item_title = [{ title: \"生化\" }, { title: \"血液\" }, { title: \"培養\" }, { title: \"GAS\" }, { title: \"Glu\" }, { title: \"放射\" }, { title: \"其他\" }]\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <t1>{title}</t1>\n                <Tableonchronic title={item_title} caseinfo={caseinfo} chronic_state={select_interval} PickerDate={PickerDate}></Tableonchronic>\n            </div>\n        );\n    }\n}\n\nexport default Chroniclab","import React, { Component } from 'react'\nimport rtlogo from '../../Image/svg/RT.svg'\nimport { Tooltip } from 'antd'\nimport moment from 'moment'\n\nclass Chronicrttablecell extends Component {\n    ToolTipRender() {\n        const { cellelement } = this.props\n        const startTime = moment(cellelement.startTime).format(\"MM/DD HH:mm\")\n        const endTime = moment(cellelement.endTime).format(\"MM/DD HH:mm\")\n        const RTListRender = cellelement.element.map(function (info, index, arr) {\n            const time = moment(info.Date + info.Time, \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\")\n            const Mode = info.Mode\n            const Setting = info.Setting\n            return (\n                <div>\n                    <div>Time:{time}</div>\n                    <div>Mode:{Mode}</div>\n                    <div>Setting:{Setting}</div>\n                </div>\n            );\n        })\n\n        return (\n            <div>\n                <div>{startTime}~{endTime}</div>\n                {RTListRender}\n            </div>\n        );\n    }\n    render() {\n        function changetext(text) {\n            if (text === 0) {\n                return '--'\n            }\n            return <img src={rtlogo} alt=\"rtlogo\" />\n        }\n        const { cellelement } = this.props\n        if (cellelement.length === 0) {\n            return <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center', border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>--</div>\n        }\n        return (\n            <Tooltip placement=\"right\" autoAdjustOverflow={true} overlayStyle={{ background: \"white\" }} title={this.ToolTipRender()} overlayStyle={{ maxWidth: \"800px\" }}>\n                <centerstyle style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                    {changetext(cellelement.length)}\n                </centerstyle>\n            </Tooltip>\n        );\n    }\n}\nexport default Chronicrttablecell","import React, { Component } from 'react'\nimport rtlogo from '../../Image/svg/RT.svg'\nimport { Tooltip } from 'antd'\nimport * as FilterReg from '../../Function/FiliterReg'\nimport moment from 'moment'\nimport X2JS from 'x2js';\nimport * as ApiProvider from '../../API/ApiProvider'\nimport Chronicrttablecell from './ChronicRTTableCell'\nimport * as QSPEList from '../../Resource/QSPE'\n\nclass Chronicrttable extends Component {\n    state = {\n        QSPE: [],\n        preCID: null,\n        prePickerdate: null,\n        preInterval: null\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDate, select_interval } = this.props\n        this.setState({ preCID: caseinfo.CASEID, prePickerdate: PickerDate, preInterval: select_interval })\n        const timer = this.timerFormat(PickerDate, select_interval)\n        const start = moment(timer.StartTime).format(\"YYYYMMDDHHmm\")\n        const end = moment(timer.EndTime).format(\"YYYYMMDDHHmm\")\n        this.getQSPE(caseinfo.CASEID, start, end)\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDate, select_interval } = this.props\n        const { preCID, prePickerdate, preInterval } = this.state\n        if (caseinfo.CASEID !== preCID || PickerDate !== prePickerdate || preInterval !== select_interval) {\n            const { caseinfo, PickerDate } = this.props\n            this.setState({ preCID: caseinfo.CASEID, prePickerdate: PickerDate, preInterval: select_interval })\n            const timer = this.timerFormat(PickerDate, select_interval)\n            const start = moment(timer.StartTime).format(\"YYYYMMDDHHmm\")\n            const end = moment(timer.EndTime).format(\"YYYYMMDDHHmm\")\n            this.getQSPE(caseinfo.CASEID, start, end)\n        }\n\n    }\n    getQSPE(CID, st, et) {\n        const xm2 = new X2JS()\n        ApiProvider.getQSPE(CID, st, et)\n            .then(data => {\n                console.log(xm2.xml2js(data.data).outmsg.resconts.rescont)\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                if (Array.isArray(parsedata)) {\n                    this.setState({ QSPE: parsedata })\n                }\n                else {\n                    this.setState({ QSPE: [parsedata] })\n                }\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        // this.setState({ QSPE: QSPEList.data })\n    }\n\n    timerFormat(PickerDate, Interval) {\n        const EndTime = PickerDate + (31 * 60 * 60 * 1000)\n        if (Interval === 0) {\n            return {\n                StartTime: EndTime - (24 * 60 * 60 * 1000),\n                EndTime: EndTime,\n                Interval: 24,\n                grid: 1\n            }\n        }\n        if (Interval === 1) {\n            return {\n                StartTime: EndTime - (3 * 24 * 60 * 60 * 1000),\n                EndTime: EndTime,\n                Interval: 18,\n                grid: 4\n            }\n\n        }\n        if (Interval === 2) {\n            return {\n                StartTime: EndTime - (7 * 24 * 60 * 60 * 1000),\n                EndTime: EndTime,\n                Interval: 21,\n                grid: 8\n            }\n\n        }\n        return {\n            StartTime: EndTime - (14 * 24 * 60 * 60 * 1000),\n            EndTime: EndTime,\n            Interval: 14,\n            grid: 24\n        }\n    }\n\n\n\n    table_content() {\n        function formatDataList(startTime, interval, list, grid) {\n            var timerList = []\n            for (let index = 0; index < interval; index++) {\n                const start = startTime + (index * grid * 60 * 60 * 1000)\n                const end = startTime + ((index + 1) * grid * 60 * 60 * 1000)\n                const listFilter = list.filter(function (info, index, arr) {\n                    const time = moment(info.Date.toString() + info.Time.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    return start <= time && time < end\n                })\n                timerList.push({\n                    length: listFilter.length,\n                    element: listFilter,\n                    startTime: start,\n                    endTime: end\n                })\n            }\n            return timerList\n        }\n\n        const { select_interval, PickerDate } = this.props\n        const QSPE = this.state.QSPE\n        const dataList = FilterReg.QSPERegList(QSPE)\n        if (dataList === null || dataList === undefined || dataList.length === 0) {\n            return null\n        }\n        const timer = this.timerFormat(PickerDate, select_interval)\n        const calldata = formatDataList(timer.StartTime, timer.Interval, dataList, timer.grid)\n        const cellRender = calldata.map(function (value, index, arr) {\n            return (\n                <Chronicrttablecell key={index} cellelement={value}></Chronicrttablecell>\n            );\n        })\n        return cellRender\n    }\n    render() {\n        const { select_interval, PickerDate } = this.props\n        const timer = this.timerFormat(PickerDate, select_interval)\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\", height: \"40px\" }}>\n                <div style={{ backgroundColor: \"#cccccc\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <t2>呼吸評估</t2>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + timer.Interval + \",1fr)\" }}>\n                    {this.table_content()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chronicrttable","import React, { Component } from 'react'\nimport Chronicrttable from './ChronicRTTable'\n\nclass Chronicrt extends Component {\n    render() {\n        const {caseinfo, select_interval, PickerDate } = this.props\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <Chronicrttable PickerDate={PickerDate} title={{ title: \"RT\" }} caseinfo={caseinfo} select_interval={select_interval}></Chronicrttable>\n            </div>\n        );\n    }\n}\n\nexport default Chronicrt","import React, { Component } from 'react'\nimport './ChronicOrderTable.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport * as UDOR from '../../Resource/UDORDER0'\n\nclass Chronicordertable extends Component {\n    state = {\n        UDORDER: [],\n        whiteBlackListParser: [],\n        preHID: null,\n        preCID: null\n    }\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        this.setState({ preHID: HID, preCID: CID })\n        this.getUDORDER(HID, CID)\n\n    }\n    componentDidUpdate() {\n        const { caseinfo } = this.props\n        const { preHID, preCID } = this.state\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        if (preHID !== HID || preCID !== CID) {\n            this.setState({ preHID: HID, preCID: CID })\n            this.getUDORDER(HID, CID)\n        }\n    }\n    getUDORDER(HID, CID) {\n        ApiGithub.getGitHubJson(\"WhiteBlackList.json\")\n            .then(data => {\n                let parser = data.data;\n                this.setState({ whiteBlackListParser: parser })\n            })\n            .catch(err => { console.log(err) })\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                this.setState({ UDORDER: data.data })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        // this.setState({ UDORDER: UDOR.data })\n    }\n    // 0:一天 1:三天 2:一週 3:兩週\n    switch_state() {\n        const { chronic_state } = this.props\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 21\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    select_parser = (input, parser) => {\n        if (parser === undefined) return undefined;\n        return parser.find(x =>\n            input.match(x.parser_name)\n        )\n    }\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let excludeBlackListResult = [];\n        const UDGNAME_condition = mappings.find(item => item.key === \"UDGNAME\");\n        const UDRPNAME_condition = mappings.find(item => item.key === \"UDRPNAME\");\n        if (inputs === undefined) return []\n        inputs.forEach(input => {\n            const UDGNAME_re = new RegExp(UDGNAME_condition.regex_str, UDGNAME_condition.regex_flags)\n            const UDGNAME_match = input.UDGNAME.match(UDGNAME_re)\n\n            const UDRPNAME_re = new RegExp(UDRPNAME_condition.regex_str, UDRPNAME_condition.regex_flags)\n            const UDRPNAME_match = input.UDRPNAME.match(UDRPNAME_re)\n\n            if (UDGNAME_match === null && UDRPNAME_match === null) {\n                excludeBlackListResult.push(input);\n            }\n        });\n\n        return excludeBlackListResult;\n    }\n    celltable() {\n        function changegridnumber(key) {\n            switch (key) {\n                case 0:\n                    return 24\n                case 1:\n                    return 18\n                case 2:\n                    return 21\n                case 3:\n                    return 14\n                default:\n                    break;\n            }\n        }\n        const { chronic_state } = this.props\n        const number = changegridnumber(chronic_state)\n        var arr = []\n        for (let index = 0; index < number; index++) {\n            arr.push(\n                <div key={index} className='cell'></div>\n            )\n\n        }\n        return arr\n    }\n    render() {\n        function changegridstyle(key) {\n            switch (key) {\n                case 0:\n                    return 'ordertableoneday'\n                case 1:\n                    return 'ordertablethirdday'\n                case 2:\n                    return 'ordertableoneweek'\n                case 3:\n                    return 'ordertabletwoweek'\n                default:\n                    return null\n            }\n        }\n        function ListData(UDORDER0, interval, pickerdate) {\n            function startTimeFormat(st, sttimeString) {\n                if (sttimeString < st) {\n                    return st\n                }\n                return sttimeString\n            }\n            function endTimeFormat(et, ettimestring) {\n                if (et < ettimestring) {\n                    return et\n                }\n                return ettimestring\n            }\n            function shiftWeight(startTime, st, et) {\n                const width = document.body.clientWidth - 220\n                const shiftTimeStampWidth = width * (startTime - st) / (et - st)\n                return shiftTimeStampWidth\n\n            }\n            function WeightWidth(startTime, EndTime, st, et) {\n                const width = document.body.clientWidth - 220\n                const TimeStampWidth = width * (EndTime - startTime) / (et - st)\n                return TimeStampWidth\n            }\n\n            function formatTimer(pickerdate, interval) {\n                const endTime = pickerdate + (31 * 60 * 60 * 1000)\n                if (interval === 0) {\n                    return {\n                        startTime: endTime - (24 * 60 * 60 * 1000),\n                        endTime: endTime\n                    }\n                }\n                if (interval === 1) {\n                    return {\n                        startTime: endTime - (3 * 24 * 60 * 60 * 1000),\n                        endTime: endTime\n                    }\n                }\n                if (interval === 2) {\n                    return {\n                        startTime: endTime - (7 * 24 * 60 * 60 * 1000),\n                        endTime: endTime\n                    }\n                }\n                return {\n                    startTime: endTime - (14 * 24 * 60 * 60 * 1000),\n                    endTime: endTime\n                }\n            }\n            function formatWidth(startTime, endTime, elementStart, elementEnd) {\n                function formatStart(elementStart, startTime) {\n                    if (elementStart <= startTime) {\n                        return startTime\n                    }\n                    return elementStart\n                }\n                function formatEnd(elementEnd, endTime) {\n                    if (elementEnd <= endTime) {\n                        return elementEnd\n                    }\n                    return endTime\n                }\n                const width = document.body.clientWidth - 220\n                const widthRate = width / (endTime - startTime)\n                const start = formatStart(elementStart, startTime)\n                const end = formatEnd(elementEnd, endTime)\n                return (end - start) * widthRate\n            }\n            function formatStartPosition(startTime, endTime, elementStart) {\n                const width = document.body.clientWidth - 220\n                if (elementStart <= startTime) {\n                    return 0\n                }\n                const widthRate = width / (endTime - startTime)\n                return (elementStart - startTime) * widthRate\n            }\n            function formatUDORDER0(UDORDER0, timer) {\n                var arraylist = []\n                const startTime = timer.startTime\n                const endTime = timer.endTime\n                for (let index = 0; index < UDORDER0.length; index++) {\n                    const element = UDORDER0[index];\n                    const elementStart = moment(element.UDBGNDT.toString(), \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n                    const elementEnd = moment(element.UDENDDT.toString(), \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n                    if (endTime < elementStart || elementEnd < startTime) {\n                        continue\n                    }\n                    const shift = formatStartPosition(startTime, endTime, elementStart)\n                    const width = formatWidth(startTime, endTime, elementStart, elementEnd)\n                    arraylist.push({\n                        \"width\": width,\n                        \"shift\": shift,\n                        \"element\": element\n                    })\n                }\n                return arraylist\n            }\n            const timer = formatTimer(pickerdate, interval)\n            if (UDORDER0 === undefined || UDORDER0 === null) {\n                return []\n            }\n            if (UDORDER0.length === 0) {\n                return []\n            }\n            const formatUDORDER = formatUDORDER0(UDORDER0, timer)\n            return formatUDORDER\n        }\n\n\n\n        const { chronic_state, PickerDate } = this.props\n        // console.log(UDORDER0)\n        // console.log(ListData(UDORDER0, chronic_state, PickerDate))\n\n        //filter white list\n\n        const UDORDER0 = this.state.UDORDER\n        const parser = this.state.whiteBlackListParser\n        const selected_parser = this.select_parser(\"Black List\", parser)\n\n        let filteredData = [];\n        if (selected_parser !== undefined) {\n            filteredData = this.parse(UDORDER0, selected_parser)\n        }\n\n        const datalist = ListData(filteredData, chronic_state, PickerDate)\n        // const datalist = ListData(UDORDER0, chronic_state, PickerDate)\n\n        const Tablecell = datalist.map(function (value, index, array) {\n            function formatString(value) {\n                if (value === undefined || value === null) {\n                    return \"--\"\n                }\n                return value.toString().trim()\n            }\n            // console.log(value.width)\n            return (\n                <div key={index} style={{ padding: \"10px 0px\", paddingLeft: value.shift + \"px\" }}>\n                    <div style={{ width: value.width + \"px\", height: \"20px\", backgroundColor: \"#3B97E1\", color: \"black\", padding: \"0px 5px\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\" }}>{formatString(value.element.UDGNAME)}</div>\n                </div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\", position: 'relative' }}>\n                <div style={{ background: \"#CCCCCC\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <t2>醫藥囑</t2>\n                </div>\n                <div className={changegridstyle(chronic_state)}>{this.celltable()}</div>\n                <div style={{ position: 'absolute', left: 140, height: \"250px\", overflow: \"hidden\" }}>\n                    {Tablecell}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chronicordertable","import React, { Component } from 'react'\nimport Chronicordertable from './ChronicOrderTable'\nimport * as ApiGithub from '../../API/ApiGithub'\n\nclass Orderonchronic extends Component {\n    render() {\n        const { caseinfo, select_interval, UDORDER0,PickerDate } = this.props\n        const item_title = [{ title: \"醫藥囑\" }]\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <Chronicordertable title={item_title} caseinfo={caseinfo} chronic_state={select_interval} UDORDER0={UDORDER0} PickerDate={PickerDate}></Chronicordertable>\n            </div>\n        );\n    }\n}\n\nexport default Orderonchronic","import React, { Component } from 'react'\nimport './ChronicWeightTable.scss'\nimport moment from 'moment'\nimport * as QTWPER from '../../Resource/QTWPER'\nimport * as ApiProvider from '../../API/ApiProvider'\n\nclass Chronicweighttable extends Component {\n    // 0:一天 1:三天 2:一週 3:兩週\n    state = {QTWPER: null}\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const weight = caseinfo.WEIGHT\n        console.log(caseinfo)\n        this.setState({ QTWPER: weight })\n        // this.setState({ QTWPER: QTWPER.data.outmsg.resconts.rescont })\n    }\n\n    switch_state() {\n        const { chronic_state } = this.props\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 21\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    celltable() {\n        function changegridnumber(key) {\n            switch (key) {\n                case 0:\n                    return 24\n                case 1:\n                    return 18\n                case 2:\n                    return 21\n                case 3:\n                    return 14\n                default:\n                    break;\n            }\n        }\n        const { chronic_state } = this.props\n        const number = changegridnumber(chronic_state)\n        var arr = []\n        for (let index = 0; index < number; index++) {\n            arr.push(\n                <div key={index} className='cell'></div>\n            )\n\n        }\n        return arr\n    }\n    weightRectRender() {\n        function TimerFormat(interval, pickerdate) {\n            const endTime = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    startTime: endTime - (24 * 60 * 60 * 1000),\n                    endTime: endTime,\n                    interval: 24,\n                    grid: 1\n                }\n            }\n            if (interval === 1) {\n                return {\n                    startTime: endTime - (3 * 24 * 60 * 60 * 1000),\n                    endTime: endTime,\n                    interval: 18,\n                    grid: 4\n                }\n            }\n            if (interval === 2) {\n                return {\n                    startTime: endTime - (7 * 24 * 60 * 60 * 1000),\n                    endTime: endTime,\n                    interval: 21,\n                    grid: 8\n                }\n            }\n            return {\n                startTime: endTime - (14 * 24 * 60 * 60 * 1000),\n                endTime: endTime,\n                interval: 14,\n                grid: 24\n            }\n        }\n        const { chronic_state, caseinfo, PickerDate } = this.props\n        const QTPWERList = caseinfo.WEIGHT\n        console.log(QTPWERList)\n        if (QTPWERList === undefined || QTPWERList === null) {\n            return null\n        }\n        const WeightList = QTPWERList.filter(function (info, index, arr) {\n            return info.type === \"TW\"\n        })\n\n        const timer = TimerFormat(chronic_state, PickerDate)\n        const width = document.body.clientWidth - 220\n        const widthRate = width / (timer.endTime - timer.startTime)\n        var WeightListFormat = []\n        for (let index = 0; index < WeightList.length; index++) {\n            const element = WeightList[index];\n            const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n            if (timer.startTime <= elementTime && elementTime <= timer.endTime) {\n                const elementValue = parseFloat(Number(element.value2) * 1000).toFixed(2)\n                WeightListFormat.push({\n                    Time: elementTime,\n                    Value: elementValue\n                })\n            }\n        }\n        const sortWeight = WeightListFormat.sort(function (a, b) {\n            return a.Value > b.Value ? 1 : -1;\n        });\n        console.log(sortWeight)\n        var shift = 0\n        var elementWidthList = []\n        for (let index = 0; index < sortWeight.length; index++) {\n            const element = sortWeight[index];\n            if (index === 0) {\n                shift = (element.Time - timer.startTime) * widthRate\n            }\n            if (sortWeight.length - 1 === index) {\n                const time1 = element.Time\n                const time2 = timer.endTime\n                const elementWidth = (time2 - time1) * widthRate\n                elementWidthList.push({\n                    Value: element.Value,\n                    width: elementWidth\n                })\n            }\n            else {\n                const time1 = sortWeight[index].Time\n                const time2 = sortWeight[index + 1].Time\n                console.log(time2 - time1)\n                const elementWidth = (time2 - time1) * widthRate\n                elementWidthList.push({\n                    Value: element.Value,\n                    width: elementWidth\n                })\n            }\n        }\n        return {\n            shift: shift,\n            elementWidthList: elementWidthList\n        }\n    }\n    render() {\n        const { chronic_state, caseinfo, PickerDate } = this.props\n        console.log(chronic_state)\n        const weight = caseinfo.WEIGHT\n        console.log(caseinfo.WEIGHT)\n        function FormatEndTimeStamp(start, interval) {\n            if (interval === 0) {\n                return start - (24 * 60 * 60 * 1000)\n            }\n            if (interval === 1) {\n                return start - (3 * 24 * 60 * 60 * 1000)\n\n            }\n            if (interval === 2) {\n                return start - (7 * 24 * 60 * 60 * 1000)\n\n            }\n            if (interval === 3) {\n                return start - (14 * 24 * 60 * 60 * 1000)\n\n            }\n        }\n        const end = PickerDate + (31 * 60 * 60 * 1000)\n        const start = FormatEndTimeStamp(end, chronic_state)\n        const datafilter = weight.filter(function (value, index, arr) {\n            const timeString = value.rec_dat.toString() + value.rec_tim.toString()\n            const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n            // console.log(start, time, end)\n            return start < time && time < end\n        })\n        const datafilterTime = datafilter.map(function (value, index, arr) {\n            const timeString = value.rec_dat.toString() + value.rec_tim.toString()\n            const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n            return time\n        })\n        console.log(weight, datafilter, datafilterTime)\n        const diff = end - start\n        var widthArray = []\n        if (datafilter.length === 0) {\n            // const element = weight[0]\n            // widthArray.push({\n            //     width: 100,\n            //     weight: (element.value2) * 1000\n            // })\n        }\n        if (datafilter.length === 1) {\n            for (let index = 0; index < datafilter.length; index++) {\n                const element = datafilter[index];\n                const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                const width = parseInt(100 * (time - start) / diff)\n                widthArray.push({\n                    width: width,\n                    weight: Number(element.value2) * 1000\n                })\n            }\n        }\n        else {\n            for (let index = 0; index < datafilter.length - 1; index++) {\n                const element = datafilter[index];\n                if (index === 0) {\n                    const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                    const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                    const width = parseInt(100 * (time - start) / diff)\n                    widthArray.push({\n                        width: width,\n                        weight: Number(element.value2) * 1000\n                    })\n                }\n                else if (index === (datafilterTime.length - 1)) {\n                    const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                    const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                    const width = parseInt(100 * (end - time) / diff)\n                    widthArray.push({\n                        width: width,\n                        weight: Number(element.value2) * 1000\n                    })\n                }\n                else {\n                    const element2 = datafilter[index + 1]\n                    const timeString2 = element2.rec_dat.toString() + element2.rec_tim.toString()\n                    const time2 = moment(timeString2, \"YYYYMMDDHHmm\").valueOf()\n                    const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                    const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                    const width = parseInt(100 * (time2 - time) / diff)\n                    widthArray.push({\n                        width: width,\n                        weight: Number(element.value2) * 1000\n                    })\n                }\n            }\n        }\n        console.log(widthArray)\n        function changegridstyle(key) {\n            switch (key) {\n                case 0:\n                    return 'chronicweighttableoneday'\n                case 1:\n                    return 'chronicweighttablethreeday'\n                case 2:\n                    return 'chronicweighttableoneweek'\n                case 3:\n                    return 'chronicweighttabletwoweek'\n                default:\n                    return null\n            }\n        }\n        const list = this.weightRectRender()\n        if (list === null || list === undefined) {\n            return null\n        }\n        const render = list.elementWidthList.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ border: \"1px black solid\", borderCollapse: \"collapse\", width: value.width + '%', height: \"20\", backgroundColor: \"#3B97E1\", color: \"white\", display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>{value.Value}g</div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\", position: 'relative' }}>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", background: \"#cccccc\" }}>\n                    <t2>體重</t2>\n                </div>\n                <div className={changegridstyle(chronic_state)}>{this.celltable()}</div>\n                <div style={{ position: 'absolute', left: 140, paddingTop: \"15px\" }}>\n                    <div style={{ paddingLeft: list.shift + \"px\", display: \"flex\", width: 'calc(100vw - 220px)', overflow: \"hidden\" }}>\n                        {render}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chronicweighttable","import React, { Component } from 'react'\nimport Chronicweighttable from './ChronicWeightTable'\n\nclass Weightonchronic extends Component {\n    render() {\n        const { caseinfo, PickerDate, select_interval } = this.props\n        const item_title = [{ title: \"體重\" }]\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <Chronicweighttable PickerDate={PickerDate} title={item_title} caseinfo={caseinfo} chronic_state={select_interval}></Chronicweighttable>\n            </div>\n        );\n    }\n}\n\nexport default Weightonchronic","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport '../Patientview/CrossSectionView/Crosssectionvitalsignchart.scss'\n\nclass Vitalxaxis extends Component {\n    state = {\n        change: false\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n    drawChart() {\n        function nowtime(time) {\n            return time + (7 * 60 * 60 * 1000)\n        }\n        function monthformat(month) {\n            return month + 1\n        }\n        function intervaldays(select_date, select_interval) {\n            switch (select_interval) {\n                //一天\n                case 0:\n                    return select_date - 86400000 * 1\n                //三天\n                case 1:\n                    return select_date - 86400000 * 3\n                //一週\n                case 2:\n                    return select_date - 86400000 * 7\n                //兩週\n                case 3:\n                    return select_date - 86400000 * 14\n                default:\n                    return null\n            }\n        }\n\n        const { id_key, svg_id, axisBot, axisTop, circlrcolor, max, min, select_interval, select_date } = this.props\n        const viewwidth = window.screen.availWidth - 220\n        //選取時間(0點)\n        const select_date_zero = new Date(new Date(select_date).getFullYear() + ',' + monthformat(new Date(select_date).getMonth()) + ',' + new Date(select_date).getDate()).getTime()\n        //選取時間(7點)\n        const select_time_format = nowtime(select_date_zero)\n        //select_intercal:0一天 1三天 2兩週\n        const Start_time = intervaldays(select_time_format, select_interval)\n        var xaxis = []\n        if (select_interval === 0) {\n            for (let index = 0; index < 24; index++) {\n                const time = Start_time + (30 * 60 * 1000) + (index * 60 * 60 * 1000)\n                xaxis.push(time)\n            }\n        }\n        if (select_interval === 1) {\n            for (let index = 0; index < 21; index++) {\n                const time = Start_time + (2 * 60 * 60 * 1000) + (index * 60 * 60 * 1000 * 4)\n                xaxis.push(time)\n            }\n        }\n\n        if (select_interval === 2) {\n            for (let index = 0; index < 21; index++) {\n                const time = Start_time + (4 * 60 * 60 * 1000) + (index * 60 * 60 * 1000 * 8)\n                xaxis.push(time)\n            }\n        }\n\n        if (select_interval === 3) {\n            for (let index = 0; index < 14; index++) {\n                const time = Start_time + (12 * 60 * 60 * 1000) + (index * 60 * 60 * 1000 * 24)\n                xaxis.push(time)\n            }\n        }\n        var x = d3.scaleLinear()\n            .domain([Start_time, select_time_format])\n            .range([0, viewwidth])\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            // .attr(\"viewbox\", [0, 0, viewwidth + 60, 25])\n            .style(\"width\", viewwidth + 100)\n            .style(\"height\", 25)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 15 + \")\");\n\n        var formatHour = d3.timeFormat(\"%H\")\n        var formatday = d3.timeFormat(\"%d\")\n        function multiFormat(date) {\n            if (select_interval === 0) {\n                return formatHour(date) + '~' + formatHour(date + (60 * 60 * 1000))\n            }\n            if (select_interval === 1) {\n                return formatHour(date - (2 * 60 * 60 * 1000)) + '~' + formatHour(date + (2 * 60 * 60 * 1000))\n            }\n            if (select_interval === 2) {\n                return formatHour(date - (4 * 60 * 60 * 1000)) + '~' + formatHour(date + (4 * 60 * 60 * 1000))\n            }\n            if (select_interval === 3) {\n                return monthformat(new Date(date).getMonth()) + '/' + formatday(date)\n            }\n            return formatHour(date)\n        }\n        var xAxis = d3.axisTop(x)\n            .tickValues(xaxis)\n            .tickSize(0, 0)\n            .tickPadding(5)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\");\n\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default Vitalxaxis;","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport '../Patientview/CrossSectionView/Crosssectionvitalsignchart.scss'\nimport { yyyymmddformat } from '../Function/Timeformat'\nimport moment from 'moment';\n\nclass Vitalxaxisbot extends Component {\n    state = {\n        change: false\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n    drawChart() {\n        function intervaldays(select_date, select_interval) {\n            switch (select_interval) {\n                //一天\n                case 0:\n                    return select_date - 86400000 * 1\n                //三天\n                case 1:\n                    return select_date - 86400000 * 3\n                //一週\n                case 2:\n                    return select_date - 86400000 * 7\n                //兩週\n                case 3:\n                    return select_date - 86400000 * 14\n                default:\n                    return null\n            }\n        }\n\n        const { id_key, svg_id, axisBot, axisTop, circlrcolor, max, min, select_interval, select_date } = this.props\n        const viewwidth = window.screen.availWidth - 228, height = 100, viewhieght = height + 10, rect_width = viewwidth / 46\n        //選取時間(0點)\n        const select_date_zero = yyyymmddformat(select_date)\n        //選取時間(7點)\n        const select_time_format = new Date(select_date_zero).getTime() + (31 * 60 * 60 * 1000)\n        //select_intercal:0一天 1三天 2兩週\n        const Start_time = intervaldays(select_time_format, select_interval)\n        console.log(Start_time)\n        var xaxis = []\n        if (select_interval === 0) {\n            const time = Start_time + (17 * 60 * 60 * 1000)\n            console.log(time)\n            xaxis.push(time)\n        }\n        if (select_interval === 1) {\n            for (let index = 0; index < 3; index++) {\n                const time = Start_time + (12 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000)\n                xaxis.push(time)\n            }\n        }\n\n        if (select_interval === 2) {\n            for (let index = 0; index < 7; index++) {\n                const time = Start_time + (12 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000)\n                xaxis.push(time)\n            }\n        }\n\n\n        if (select_interval === 3) {\n            for (let index = 0; index < 14; index++) {\n                const time = Start_time + (12 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000)\n                xaxis.push(time)\n            }\n        }\n        var x = d3.scaleLinear()\n            .domain([Start_time, select_time_format])\n            .range([0, viewwidth - 1])\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            // .attr(\"viewbox\", [0, 0, viewwidth + 60, 25])\n            .style(\"width\", viewwidth)\n            .style(\"height\", 25)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + -10 + \")\");\n\n\n        function multiFormat(date) {\n            return moment(date).format(\"MM/DD\")\n        }\n\n\n        var xAxis = d3.axisBottom(x)\n            .tickValues(xaxis)\n            .tickSize(0, 0)\n            .tickPadding(10)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\");\n\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default Vitalxaxisbot;","import React, { Component } from 'react'\nimport { Select } from 'antd';\nimport Chronicvitalchart from './Chronic_vital_chart'\nimport { statecolor, simulationCentermonitordata, simulationnisdata } from '../../Function/Wardstate'\nimport { formatxArrayhalf, formatendtime } from '../../Function/Timeformat'\nimport './Chronic_vital.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport Crosssectionvitalsignchart from '../CrossSectionView/Crossectionvitalsignchart'\n\n\nclass Vitalonchronic extends Component {\n    state = {\n        check_state_one: 0,\n        check_state_three: 0,\n        check_state_oneweek: 0,\n        check_state_twoweek: 0,\n        statussource: \"CM\",\n        CenterMonitorValue: []\n    }\n\n    componentDidMount() {\n        const startTime = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf() - (60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\")\n        const endTime = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf()).format(\"YYYYMMDDHHmmss\")\n        const PHISTNUM = this.props.caseinfo.HISID.toString().trim()\n        this.getVitalSignData(startTime, endTime, PHISTNUM)\n    }\n\n    getVitalSignData(startTime, EndTime, Phistnum) {\n        ApiProvider.getPatientwardvalueMedian(Phistnum, startTime, EndTime)\n            .then(data => {\n                console.log(data.data)\n                this.setState({\n                    CenterMonitorValue: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n                this.setState({\n                    CenterMonitorValue: null\n                })\n            })\n    }\n\n    switchdata(value_interval, sourcefrom) {\n        console.log(sourcefrom)\n        const { defaultdate } = this.props\n        function changevitaldays(vitaldays) {\n            if (vitaldays === 3) {\n                return 18\n            }\n            else {\n                return 24\n            }\n        }\n\n        function Interval_switch(interval) {\n            if (interval === 0) {\n                return 1\n            }\n            if (interval === 1) {\n                return 3\n            }\n        }\n        const interval = Interval_switch(value_interval)\n        const starttime = formatendtime(defaultdate) - (interval * 24 * 60 * 60 * 1000)\n        if (sourcefrom === 'NIS') {\n            const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n            const data = simulationnisdata(datatime, changevitaldays(interval))\n            console.log(data)\n            return data\n        }\n        else {\n\n            const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n            const data = simulationCentermonitordata(datatime, changevitaldays(interval))\n            return data\n        }\n    }\n    Interval_grid_box() {\n        var gridarray = []\n        console.log(this.props.select_interval)\n        if (this.props.select_interval === 0) {\n            for (let index = 0; index < 24; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_one) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: 360, border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_one(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: 360 }} onClick={() => this.onClickCheckgrid_one(number)}></div>)\n            }\n        }\n        if (this.props.select_interval === 1) {\n            for (let index = 0; index < 18; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_three) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: 360, border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_three(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: 360 }} onClick={() => this.onClickCheckgrid_three(number)}></div>)\n            }\n        }\n        if (this.props.select_interval === 2) {\n            for (let index = 0; index < 21; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_oneweek) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: 360, border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_oneweek(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: 360 }} onClick={() => this.onClickCheckgrid_oneweek(number)}></div>)\n            }\n        }\n        if (this.props.select_interval === 3) {\n            for (let index = 0; index < 14; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_twoweek) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: 360, border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_twoweek(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: 360 }} onClick={() => this.onClickCheckgrid_twoweek(number)}></div>)\n            }\n        }\n        return gridarray\n    }\n\n    onClickCheckgrid_one(number) {\n        console.log(number)\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (24 * 60 * 60 * 1000)\n        const endtime = ST + (number * 60 * 60 * 1000)\n        const starttime = endtime - 60 * 60 * 1000\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ check_state_one: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n    onClickCheckgrid_three(number) {\n        console.log(number)\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (3 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 4) * 60 * 60 * 1000)\n        const starttime = endtime - (4 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ chackstate_three: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n\n    onClickCheckgrid_oneweek(number) {\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (7 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 8) * 60 * 60 * 1000)\n        const starttime = endtime - (8 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ check_state_oneweek: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n    onClickCheckgrid_twoweek(number) {\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (14 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 24) * 60 * 60 * 1000)\n        const starttime = endtime - (24 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ check_state_twoweek: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n\n    sourcehandleChange = (value) => {\n        this.setState({ statussource: value })\n    }\n    render() {\n        function centervaluetoNull(value) {\n            function FilterList(DataList, type) {\n                const filterData = DataList.filter(function (value, index, arr) {\n                    return value.type === type\n                })\n                if (filterData.length === 0) {\n                    return null\n                }\n                console.log(filterData)\n                return filterData[0].Mid\n            }\n            if (value === undefined || value === null) {\n                return {\n                    hr: null,\n                    rr: null,\n                    bt: null,\n                    spo2: null,\n                    abpd: null,\n                    abpm: null,\n                    abps: null,\n                    nbpm: null,\n                    nbps: null,\n                    nbpd: null\n                }\n            }\n            return {\n                hr: FilterList(value, \"hr\"),\n                rr: FilterList(value, \"rr\"),\n                bt: FilterList(value, \"bt\"),\n                spo2: FilterList(value, \"spo2\"),\n                abpd: FilterList(value, \"abpd\"),\n                abpm: FilterList(value, \"abpm\"),\n                abps: FilterList(value, \"abps\"),\n                nbpd: FilterList(value, \"nbpd\"),\n                nbps: FilterList(value, \"nbps\"),\n                nbpm: FilterList(value, \"nbpm\"),\n            }\n        }\n        function centervalueNull(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            return value\n        }\n        function Interval_grid(number) {\n            switch (number) {\n                case 0:\n                    return 24\n                case 1:\n                    return 18\n                case 2:\n                    return 21\n                case 3:\n                    return 14\n                default:\n                    return null\n            }\n        }\n        function formatPickerTimer(pickerdate, interval) {\n            const end = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    startTime: end - (24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n            if (interval === 1) {\n                return {\n                    startTime: end - (3 * 24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n            if (interval === 2) {\n                return {\n                    startTime: end - (7 * 24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n            else {\n                return {\n                    startTime: end - (14 * 24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n        }\n\n        const { Option } = Select;\n        const { source } = this.props\n        const pickerTimer = formatPickerTimer(this.props.PickerDate, this.props.select_interval)\n        const width = window.screen.availWidth - 171\n        const centervalue = centervaluetoNull(this.state.CenterMonitorValue)\n        return (\n            <div>\n                <div style={{ display: \"flex\", alignItems: \"center\", height: \"50px\" }}>\n                    <t1>生命徵象</t1>\n                    <Select defaultValue={this.state.statussource} style={{ width: 200, marginLeft: \"20px\" }} onChange={this.sourcehandleChange}>\n                        <Option value={'CM'}>Center Monitor</Option>\n                        <Option value={'NIS'}>NIS</Option>\n                    </Select>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\" }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"repeat(6,60px)\" }}>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <t4 style={{ display: \"flex\", justifyContent: \"center\", color: statecolor(\"HR\") }}>{\"HR\"}</t4>\n                                <t1 style={{ display: \"flex\", justifyContent: \"center\", color: statecolor(\"HR\") }}>{centervalueNull(centervalue.hr)}</t1>\n                            </div>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>NBP</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.nbpd)}/{centervalueNull(centervalue.nbps)}</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>({centervalueNull(centervalue.nbpm)})</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>ABP</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.abpd)}/{centervalueNull(centervalue.abps)}</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#C12528\", display: \"flex\", justifyContent: \"center\" }}>({centervalueNull(centervalue.abpm)})</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <div style={{ fontSize: \"1rem\", color: \"#4773B8\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>\n                                    SpO<sub style={{ bottom: \"-1em\" }}>2</sub>\n                                </div>\n                                <div style={{ fontSize: \"1rem\", color: \"#4773B8\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.spo2)}%</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <div style={{ fontSize: \"1rem\", color: \"#7F3DB5\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>BT</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#7F3DB5\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>--</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div>\n                                <div style={{ fontSize: \"1rem\", color: \"#DE7531\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>RR</div>\n                                <div style={{ fontSize: \"1rem\", color: \"#DE7531\", width: \"100px\", display: \"flex\", justifyContent: \"center\" }}>{centervalueNull(centervalue.rr)}</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"repeat(6,60px)\", position: \"relative\" }}>\n                        <div style={{ position: \"absolute\", height: \"340px\", width: width - 50, top: 5, left: 50 }} >\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + Interval_grid(this.props.select_interval) + \",1fr)\" }}>\n                                {this.Interval_grid_box()}\n                            </div>\n                        </div>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"hr_svg_\" + source}\n                            id_key={\"hr_id_\" + source}\n                            type={\"hr\"}\n                            source={this.state.statussource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={100}\n                            upper={160}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor=\"#779F50\"\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={200}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"nbp_svg\" + source}\n                            id_key={\"nbp_id\" + source}\n                            type={\"nbp\"}\n                            source={this.state.statussource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={55}\n                            upper={75}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#C12528\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"abp_svg\" + source}\n                            id_key={\"abp_id\" + source}\n                            type={\"abp\"}\n                            source={this.state.statussource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={55}\n                            upper={75}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#C12528\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"spo2_svg_\" + source}\n                            id_key={\"spo2_id_\" + source}\n                            type={\"spo2\"}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={90}\n                            upper={100}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#4773B8\"}\n                            colorshadow={\"#4773B8\"}\n                            min={60}\n                            max={100}\n                            source={this.state.statussource}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"bt_svg_\" + source}\n                            id_key={\"bt_id_\" + source}\n                            type={\"bt\"}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            source={this.state.statussource}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={36}\n                            upper={38}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#7F3DB5\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={33}\n                            max={48}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"rr_svg_\" + source}\n                            id_key={\"rr_id_\" + source}\n                            type={\"rr\"}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={20}\n                            upper={60}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#DE7531\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}\n                            source={this.state.statussource}>\n                        </Crosssectionvitalsignchart>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Vitalonchronic","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport '../CrossSectionView/Crosssectionvitalsignchart.scss'\nimport { yyyymmddformat, hhmmssformattohalf } from '../../Function/Timeformat'\nimport moment from 'moment'\n\nclass Chronicvitalchart extends Component {\n    state = {\n        change: false\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n    drawChart() {\n        function intervaldays(select_date, select_interval) {\n            switch (select_interval) {\n                //一天\n                case 0:\n                    return select_date - (24 * 60 * 60 * 1000) * 1\n                //三天\n                case 1:\n                    return select_date - (24 * 60 * 60 * 1000) * 3\n                //一週\n                case 2:\n                    return select_date - (24 * 60 * 60 * 1000) * 7\n                //兩週\n                case 3:\n                    return select_date - (24 * 60 * 60 * 1000) * 14\n                default:\n                    return null\n            }\n        }\n\n        const { id_key, svg_id, circlrcolor, max, min, select_interval, select_date, datasource, statussource, NisData } = this.props\n        const viewwidth = window.screen.availWidth - 220, height = 50\n        //選取時間(0點)\n        const select_date_zero = yyyymmddformat(select_date)\n        //選取時間(7點)\n        const End_time_format = new Date(select_date_zero).getTime() + (31 * 60 * 60 * 1000)\n        //select_intercal:0一天 1三天 2兩週\n        const Start_time = intervaldays(End_time_format, select_interval)\n        console.log(NisData)\n        var y = d3.scaleLinear()\n            .domain([min, max])\n            .range([height, 0])\n        // console.log(Start_time, End_time_format)\n        var x = d3.scaleLinear()\n            .domain([Start_time, End_time_format])\n            .range([0, viewwidth - 1])\n\n        // console.log(viewhieght, viewwidth)\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            .style(\"width\", viewwidth + 50)\n            .style(\"height\", \"100px\")\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 5 + \")\");\n\n        var yAxis = d3.axisLeft(y)\n            .tickValues([min, max])\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(10);\n\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n        svg.append('line')\n            .attr('x1', x(Start_time))\n            .attr('y1', y(max))\n            .attr('x2', x(End_time_format))\n            .attr('y2', y(max))\n            .style('stroke', 'rgba(220,220,220,1)')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n        svg.append('line')\n            .attr('x1', x(Start_time))\n            .attr('y1', y(min))\n            .attr('x2', x(End_time_format))\n            .attr('y2', y(min))\n            .style('stroke', 'rgba(220,220,220,1)')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n        //一天\n\n        function drawshadow(data, number, midinterval) {\n            console.log(data)\n            for (let index = 0; index < data.length; index++) {\n                const borderwidth = viewwidth / number\n                const element = data[index];\n                const Xtime = moment(element.Time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + (midinterval * 60 * 1000)\n                svg.append('line')\n                    .attr('x1', x(Xtime))\n                    .attr('y1', y(20))\n                    .attr('x2', x(Xtime))\n                    .attr('y2', y(120))\n                    .style('stroke', circlrcolor)\n                    .style('opacity', 0.2)\n                    // .style('stroke', 'red')\n                    .style('stroke-width', borderwidth)\n\n\n            }\n        }\n        if (select_interval === 0) {\n            for (let index = 0; index < 25; index++) {\n                if (index % 8 === 0) {\n                    svg.append('line')\n                        .attr('x1', x(Start_time + (index * 60 * 60 * 1000)))\n                        .attr('y1', 0)\n                        .attr('x2', x(Start_time + (index * 60 * 60 * 1000)))\n                        .attr('y2', height)\n                        .style('stroke', 'black')\n                        .style('stroke-width', 1);\n                }\n                else {\n                    svg.append('line')\n                        .attr('x1', x(Start_time + (index * 60 * 60 * 1000)))\n                        .attr('y1', 0)\n                        .attr('x2', x(Start_time + (index * 60 * 60 * 1000)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(220,220,220,1)')\n                        .style('stroke-width', 1)\n                        .style('stroke-dasharray', 5.5);\n                }\n            }\n            if (datasource !== null && datasource !== undefined) {\n                if (statussource === 'CM') {\n                    drawshadow(datasource, 24, 30)\n                    for (let index = 0; index < datasource.length; index++) {\n                        const element = datasource[index];\n                        const eledata = element.Data\n                        const boxwidth = 5\n                        const data_sorted = eledata.sort(d3.ascending)\n                        const q1 = d3.quantile(data_sorted, .25)\n                        // const median = d3.quantile(data_sorted, .5)\n                        const q3 = d3.quantile(data_sorted, .75)\n                        const interQuantileRange = q3 - q1\n                        const minbox = data_sorted[0]\n                        const maxbox = data_sorted[data_sorted.length - 1]\n                        const Xtime = moment(element.Time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + (30 * 60 * 1000)\n                        if (eledata.length === 0) {\n                            continue\n                        }\n\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(minbox))\n                            .attr(\"y2\", y(maxbox))\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 0.5)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q1) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style(\"fill\", circlrcolor)\n                            .style('stroke-width', 0.5);\n\n                        svg.selectAll(\"toto\")\n                            .data([minbox, maxbox])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 0.5);\n\n                    }\n                }\n                else {\n                    if (NisData !== null) {\n                        if (NisData !== undefined) {\n                            for (let index = 0; index < NisData.length; index++) {\n                                const element = NisData[index];\n                                svg.append('circle')\n                                    .attr('cx', x(element.Time))\n                                    .attr('cy', y(element.Data))\n                                    .attr('r', 3)\n                                    .style('fill', circlrcolor)\n                            }\n                        }\n                    }\n                }\n\n            }\n            else {\n\n            }\n        }\n\n        // 三天\n        if (select_interval === 1) {\n            for (let index = 0; index < 22; index++) {\n                if (index % 2 === 0) {\n                    svg.append('line')\n                        .attr('x1', x(Start_time + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y1', 0)\n                        .attr('x2', x(Start_time + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y2', height)\n                        .style('stroke', 'black')\n                        .style('stroke-width', 1);\n                }\n                else {\n                    svg.append('line')\n                        .attr('x1', x(Start_time + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y1', 0)\n                        .attr('x2', x(Start_time + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(220,220,220,1)')\n                        .style('stroke-width', 1)\n                        .style('stroke-dasharray', 5.5);\n                }\n            }\n            if (datasource !== null) {\n                if (statussource === 'CM') {\n                    drawshadow(datasource, 18, 120)\n                    for (let index = 0; index < datasource.length; index++) {\n                        const element = datasource[index];\n                        console.log(element)\n                        const eledata = element.Data\n                        const boxwidth = 10\n                        const data_sorted = eledata.sort(d3.ascending)\n                        const q1 = d3.quantile(data_sorted, .25)\n                        // const median = d3.quantile(data_sorted, .5)\n                        const q3 = d3.quantile(data_sorted, .75)\n                        const interQuantileRange = q3 - q1\n                        const minbox = data_sorted[0]\n                        const maxbox = data_sorted[data_sorted.length - 1]\n                        const Xtime = moment(element.Time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + (120 * 60 * 1000)\n                        if (eledata.length === 0) {\n                            continue\n                        }\n\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(minbox))\n                            .attr(\"y2\", y(maxbox))\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q1) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg.selectAll(\"toto\")\n                            .data([minbox, maxbox])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1);\n\n                    }\n                }\n                else {\n                    // statussource == NIS\n\n                    if (NisData !== null || NisData !== undefined) {\n                        for (let index = 0; index < NisData.length; index++) {\n                            const element = NisData[index];\n                            svg.append('circle')\n                                .attr('cx', x(element.Time))\n                                .attr('cy', y(element.Data))\n                                .attr('r', 3)\n                                .style('fill', circlrcolor)\n                        }\n                    }\n                }\n\n            }\n            else {\n\n            }\n        }\n\n        //一週\n        if (select_interval === 2) {\n            for (let index = 0; index < 22; index++) {\n                svg.append('line')\n                    .attr('x1', x(Start_time + (index * 60 * 60 * 1000 * 8)))\n                    .attr('y1', 0)\n                    .attr('x2', x(Start_time + (index * 60 * 60 * 1000 * 8)))\n                    .attr('y2', height)\n                    .style('stroke', 'black')\n                    .style('stroke-width', 1);\n            }\n            if (datasource !== null) {\n                if (statussource === 'CM') {\n\n                    drawshadow(datasource, 21, 240)\n                    for (let index = 0; index < datasource.length; index++) {\n                        const element = datasource[index];\n                        const eledata = element.Data\n                        const boxwidth = 10\n                        const data_sorted = eledata.sort(d3.ascending)\n                        const q1 = d3.quantile(data_sorted, .25)\n                        // const median = d3.quantile(data_sorted, .5)\n                        const q3 = d3.quantile(data_sorted, .75)\n                        const interQuantileRange = q3 - q1\n                        const minbox = data_sorted[0]\n                        const maxbox = data_sorted[data_sorted.length - 1]\n                        const Xtime = moment(element.Time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + (240 * 60 * 1000)\n                        if (eledata.length === 0) {\n                            continue\n                        }\n\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(minbox))\n                            .attr(\"y2\", y(maxbox))\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q1) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg.selectAll(\"toto\")\n                            .data([minbox, maxbox])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1);\n\n                    }\n                }\n                else {\n                    // console.log(datasource)\n\n\n                    if (NisData !== null || NisData !== undefined) {\n                        for (let index = 0; index < NisData.length; index++) {\n                            const element = NisData[index];\n                            svg.append('circle')\n                                .attr('cx', x(element.Time))\n                                .attr('cy', y(element.Data))\n                                .attr('r', 3)\n                                .style('fill', circlrcolor)\n                        }\n                    }\n                }\n\n            }\n            else {\n\n            }\n        }\n        //兩週\n        if (select_interval === 3) {\n            for (let index = 0; index < 15; index++) {\n                svg.append('line')\n                    .attr('x1', x(Start_time + (index * 60 * 60 * 1000 * 24)))\n                    .attr('y1', 0)\n                    .attr('x2', x(Start_time + (index * 60 * 60 * 1000 * 24)))\n                    .attr('y2', height)\n                    .style('stroke', 'black')\n                    .style('stroke-width', 1);\n            }\n            if (datasource !== null) {\n                if (statussource === 'CM') {\n\n                    drawshadow(datasource, 14, 720)\n                    for (let index = 0; index < datasource.length; index++) {\n                        const element = datasource[index];\n                        const eledata = element.Data\n                        const boxwidth = 10\n                        const data_sorted = eledata.sort(d3.ascending)\n                        const q1 = d3.quantile(data_sorted, .25)\n                        // const median = d3.quantile(data_sorted, .5)\n                        const q3 = d3.quantile(data_sorted, .75)\n                        const interQuantileRange = q3 - q1\n                        const minbox = data_sorted[0]\n                        const maxbox = data_sorted[data_sorted.length - 1]\n                        const Xtime = moment(element.Time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + (720 * 60 * 1000)\n                        if (eledata.length === 0) {\n                            continue\n                        }\n\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(minbox))\n                            .attr(\"y2\", y(maxbox))\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q1) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg.selectAll(\"toto\")\n                            .data([minbox, maxbox])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1);\n\n                    }\n                }\n                else {\n                    // console.log(datasource)\n                    if (NisData !== null || NisData !== undefined) {\n                        for (let index = 0; index < NisData.length; index++) {\n                            const element = NisData[index];\n                            svg.append('circle')\n                                .attr('cx', x(element.Time))\n                                .attr('cy', y(element.Data))\n                                .attr('r', 3)\n                                .style('fill', circlrcolor)\n                        }\n                    }\n                }\n\n            }\n        }\n    }\n\n    render() {\n        const { id_key, NisData } = this.props\n        return (\n            <div id={id_key} ></div>\n        );\n    }\n}\n\nexport default Chronicvitalchart;","import React, { Component } from 'react';\nimport { DatePicker, Button, Select } from 'antd';\nimport filterlogo from '../../Image/svg/filter.svg'\nimport Inoutonchronic from './Chronic_io'\nimport Chroniclab from './ChronicLab'\nimport Chronicrt from './ChronicRT'\nimport Orderonchronic from './ChronicOrder'\nimport Weightonchronic from './ChronicWeight'\nimport Vitalxaxis from '../../Module/Vitalxaxis'\nimport Vitalxaxisbot from '../../Module/Vitalxaxisbot'\nimport moment from 'moment'\nimport './Chroniclelayout.scss'\nimport Vitalonchronic from './Chronic_vital'\n\nclass Chroniclelayout extends Component {\n    state = {\n        display_Mode: false,\n        item: this.props.item_array,\n        scrollstate: 0,\n        PickerDate: moment(moment().format('YYYYMMDD'), \"YYYYMMDD\").valueOf(), //選擇日期\n        select_interval: 0, //選擇區間\n        statuschange: 0,\n    }\n\n    scrollToAnchor = (anchorName) => {\n        console.log(anchorName)\n        if (anchorName) {\n            let anchorElement = document.getElementById(anchorName);\n            if (anchorElement) { anchorElement.scrollIntoView(false); }\n        }\n    }\n    scroll_btn_style(index) {\n        console.log(index, this.state.scrollstate)\n        if (index === this.state.scrollstate) {\n            return true\n        }\n        else return false\n    }\n    onChange = (date, dateString) => {\n        console.log(date, dateString);\n\n        this.setState(\n            {\n                PickerDate: date.valueOf()\n            }\n        )\n    }\n    onSelectchange = (value) => {\n        this.setState(\n            {\n                select_interval: value\n            }\n        )\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDate } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const bTemp = bTime - (6 * day)\n                bronDate <= bTemp && this.onChange(moment(bTime))\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD'))\n                this.onChange(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= aTemp && this.onChange(moment(aTime))\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { Option } = Select;\n        // const dateFormat = 'YYYY/MM/DD';\n        const { caseinfo } = this.props\n        const crosssectioncontrollist =\n            [{ \"name\": \"生命徵象\", \"scrollpoint\": \"vital_sign_chronic\" },\n            { \"name\": \"輸出入\", \"scrollpoint\": \"input_output_chronic\" },\n            { \"name\": \"檢驗結果\", \"scrollpoint\": \"lab_chronic\" },\n            { \"name\": \"呼吸評估\", \"scrollpoint\": \"rt_chronic\" },\n            { \"name\": \"醫藥囑\", \"scrollpoint\": \"order_chronic\" },\n            { \"name\": \"體重\", \"scrollpoint\": \"infection_chronic\" }]\n        console.log(caseinfo.PBASINGNINFO.PBIRTHDT.toString())\n        let button = crosssectioncontrollist.map(\n            (item, index) => <Button onClick={this.scrollToAnchor.bind(this, item.scrollpoint)} key={index} style={{ borderRadius: \"16px\", color: \"rgba(245, 166, 35, 1)\", border: \"rgba(245, 166, 35, 1) 1px solid\" }}>{item.name}</Button>);\n        return (\n            <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", height: \"40px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"140px 120px auto\", gridColumnGap: \"5px\" }}>\n                        <DatePicker disabledDate={(current) => { return current > moment().startOf(\"day\") || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }} onChange={this.onChange} value={moment(this.state.PickerDate)} allowClear={false} />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\", marginLeft: \"10px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                        <Select defaultValue={this.state.select_interval} style={{ width: 120, marginLeft: \"10px\" }} onChange={this.onSelectchange}>\n                            <Option value={0}>一天</Option>\n                            <Option value={1}>三天</Option>\n                            <Option value={2}>一週</Option>\n                            <Option value={3}>兩週</Option>\n                        </Select>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(8,auto)\", gridColumnGap: \"15px\" }}>\n                        <t2 style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>項目切換:</t2>\n                        {button}\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <img src={filterlogo} alt='filterlogo'></img>\n                        </div>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\", margin: \"10px 0px\" }}>\n                    <div></div>\n                    <Vitalxaxis max={200} min={0} select_interval={this.state.select_interval} select_date={this.state.PickerDate} id_key=\"xaxis_chronic\" svg_id=\"xaxis_svg_chronic\"></Vitalxaxis>\n                </div>\n                <div className='boxshadow'></div>\n                <div className='chroniclayout'>\n                    {/* Vital sign */}\n                    <div id=\"vital_sign_chronic\">\n                        <Vitalonchronic source={\"Chronic\"} PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"Vital\"></Vitalonchronic>\n                    </div>\n                    {/* I/O */}\n                    <div id=\"input_output_chronic\">\n                        <Inoutonchronic PickerDate={this.state.PickerDate} Status={\"Chronic\"} IntervalStatus={this.state.select_interval} caseinfo={caseinfo} title=\"輸出入\"></Inoutonchronic>\n                    </div>\n                    {/* Lab */}\n                    <div id=\"lab_chronic\">\n                        <Chroniclab PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"檢驗結果\"></Chroniclab>\n                    </div>\n                    {/* RT */}\n                    <div id=\"rt_chronic\">\n                        <Chronicrt PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo}></Chronicrt>\n                    </div>\n                    {/* Order */}\n                    <div id=\"order_chronic\">\n                        <Orderonchronic PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"\"></Orderonchronic>\n                    </div>\n                    {/* 體重 */}\n                    <div id=\"infection_chronic\">\n                        <Weightonchronic PickerDate={this.state.PickerDate} QTWPER={this.state.QTWPER} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"\"></Weightonchronic>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\", marginTop: \"30px\" }}>\n                    <div></div>\n                    <Vitalxaxisbot max={200} min={0} select_interval={this.state.select_interval} select_date={this.state.PickerDate} id_key=\"xaxis_bot_chronic\" svg_id=\"xaxis_bot_svg_chronic\"></Vitalxaxisbot>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chroniclelayout;\n","import React, { Component } from 'react';\nimport './Flootsheetio.scss'\nimport * as RegFilter from '../../Function/FiliterReg'\nimport moment from 'moment';\nimport X2JS from 'x2js';\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as QDCR from '../../Resource/QDC'\n\nclass Flootsheetio extends Component {\n    state = {\n        itemNumber: \"day\",\n        preCID: null,\n        prePickerDate: null,\n        QDC: []\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDate } = this.props\n        const CID = caseinfo.CASEID\n        this.setState({ preCID: CID, prePickerDate: PickerDate })\n        this.getQDC(CID, PickerDate)\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDate } = this.props\n        const CID = caseinfo.CASEID\n        const preCID = this.state.preCID\n        const prePickerDate = this.state.prePickerDate\n        console.log(prePickerDate, PickerDate)\n        if (CID !== preCID || PickerDate !== prePickerDate) {\n            this.setState({ preCID: CID, prePickerDate: PickerDate })\n            this.getQDC(CID, PickerDate)\n        }\n    }\n    getQDC(CID, PickerDate) {\n        const xm2 = new X2JS()\n        const st = moment(PickerDate + (7 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        const et = moment(PickerDate + (31 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        ApiProvider.getQDC(CID, st, et)\n            .then(data => {\n                console.log(xm2.xml2js(data.data))\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                this.setState({\n                    QDC: parsedata\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n    }\n    SecondDataCell(dataJson, Title) {\n        const { PickerDate } = this.props\n        const st = PickerDate + (7 * 60 * 60 * 1000)\n        var cellRender = []\n        for (let index = 0; index < 24; index++) {\n            const startTime = st + (index * 60 * 60 * 1000)\n            const endTime = st + ((index + 1) * 60 * 60 * 1000)\n            const timeObjectString = dataJson.rec_dat.toString() + dataJson.rec_tim.toString()\n            const time = moment(timeObjectString, 'YYYYMMDDHHmm').valueOf()\n            if (time > startTime && time < endTime) {\n                cellRender.push(dataJson.value)\n            }\n            else {\n                cellRender.push(\"--\")\n            }\n        }\n        const data = cellRender.map((info, index) =>\n            <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                <t2>{info}</t2>\n            </centerstyle>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <centerstyle style={{ background: \"#cccccc\" }}>\n                    <t4>{Title}</t4>\n                </centerstyle>\n                {data}\n            </div>\n        );\n    }\n    FourthDataCell(dataJson, Title) {\n        function nullvalue(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            if (value === 0) {\n                return \"##\"\n            }\n            return value.toString().trim()\n        }\n        const { PickerDate } = this.props\n        const st = PickerDate + (7 * 60 * 60 * 1000)\n        var cellRender = []\n        for (let index = 0; index < 24; index++) {\n            const startTime = st + (index * 60 * 60 * 1000)\n            const endTime = st + ((index + 1) * 60 * 60 * 1000)\n            const filterData = dataJson.filter(function (value, index, arr) {\n                const timeObjectString = value.rec_dat.toString() + value.rec_tim.toString()\n                const time = moment(timeObjectString, 'YYYYMMDDHHmm').valueOf()\n                return time > startTime && time < endTime\n            })\n            if (filterData.length === 0) {\n                cellRender.push(\"--\")\n            }\n            var sum = 0\n            for (let index = 0; index < filterData.length; index++) {\n                const element = filterData[index];\n                if (Title === \"滲液\") {\n                    cellRender.push(element.out_val1)\n                }\n                if (Title === \"嘔吐\") {\n                    const string = element.out_val1.toString() + \"/\" + element.nam.toString() + \"/\" + element.color.toString()\n                    cellRender.push(string)\n                }\n                if (Title === \"引流\") {\n                    const string = element.out_val1.toString() + \"/\" + element.nam.toString() + \"/\" + element.color.toString()\n                    cellRender.push(string)\n                }\n                if (Title === \"穿刺出\") {\n                    cellRender.push(element.out_val1)\n\n                }\n                if (Title === \"穿刺入\") {\n                    cellRender.push(element.inp_val1)\n\n                }\n                if (Title === \"透析出\") {\n                    cellRender.push(element.out_val1)\n\n                }\n                if (Title === \"透析入\") {\n                    cellRender.push(element.inp_val1)\n\n                }\n                if (Title === \"透析加總\") {\n                    const sum = Number(element.out_val1) - Number(element.inp_val1)\n                    cellRender.push(sum)\n\n                }\n                if (Title === \"沖洗出\") {\n                    cellRender.push(element.out_val1)\n\n                }\n                if (Title === \"沖洗入\") {\n                    cellRender.push(element.inp_val1)\n\n                }\n                if (Title === \"排尿\") {\n                    cellRender.push(element.inp_val1)\n\n                }\n            }\n\n        }\n        const data = cellRender.map((info, index) =>\n            <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                <t2>{nullvalue(info)}</t2>\n            </centerstyle>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <centerstyle style={{ background: \"#cccccc\" }}>\n                    <t4>{Title}</t4>\n                </centerstyle>\n                {data}\n            </div>\n        );\n    }\n\n    Thirdtablecell(dataJson, Title) {\n        const { PickerDate } = this.props\n        const st = PickerDate + (7 * 60 * 60 * 1000)\n        var cellRender = []\n\n        for (let index = 0; index < 24; index++) {\n            const startTime = st + (index * 60 * 60 * 1000)\n            const endTime = st + ((index + 1) * 60 * 60 * 1000)\n            const time = moment(dataJson.time, 'YYYYMMDDHHmm').valueOf()\n            if (time > startTime && time < endTime) {\n                cellRender.push(dataJson.value)\n            }\n            else {\n                cellRender.push(\"--\")\n            }\n        }\n\n        const data = cellRender.map((info, index) =>\n            <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                <t2>{info}</t2>\n            </centerstyle>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <centerstyle style={{ background: \"#cccccc\" }}>\n                    <t4>{Title}</t4>\n                </centerstyle>\n                {data}\n            </div>\n        );\n    }\n\n    Firsttablecell(dataList, Title) {\n        const { PickerDate } = this.props\n        const st = PickerDate + (7 * 60 * 60 * 1000)\n        var cellRender = []\n\n        for (let index = 0; index < 24; index++) {\n            const startTime = st + (index * 60 * 60 * 1000)\n            const endTime = st + ((index + 1) * 60 * 60 * 1000)\n            console.log(dataList)\n            const datafilter = dataList.filter(function (value, index, arr) {\n                const time = moment(value.rec_dat.toString() + value.rec_tim.toString(), 'YYYYMMDDHHmm').valueOf()\n                return time > startTime && time < endTime\n            })\n            var sum = 0\n            for (let index = 0; index < datafilter.length; index++) {\n                const element = datafilter[index];\n                sum = sum + Number(element.inp_val1)\n            }\n            cellRender.push(sum)\n        }\n\n        const data = cellRender.map((info, index) =>\n            <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                <t2>{info}</t2>\n            </centerstyle>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <centerstyle style={{ background: \"#cccccc\" }}>\n                    <t4>{Title}</t4>\n                </centerstyle>\n                {data}\n            </div>\n        );\n    }\n\n    RVList(cell) {\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <div style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', backgroundColor: \"#cccccc\", display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{\"RV\"}</div>\n                {cell}\n            </div>\n        );\n    }\n    render() {\n        function groupelement(array) {\n            function groupvalue(arr) {\n                const mapvalue = arr.map(function (value, index, arr) {\n                    return value.element\n                })\n                return mapvalue\n            }\n            var dataList = []\n            for (let index = 0; index < array.length; index++) {\n                const element = array[index];\n                const data = groupvalue(element)\n                if (element.length !== 0) {\n                    if (element[0].title === \"滲液\") {\n                        dataList.push({\n                            \"title\": element[0].title,\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"嘔吐\") {\n                        dataList.push({\n                            \"title\": element[0].title,\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"引流\") {\n                        const stringElement = element[0].element\n                        const string = stringElement.line + \"/\" + stringElement.pos\n                        dataList.push({\n                            \"title\": string,\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"穿刺\") {\n                        const stringElement = element[0].element\n                        if (stringElement.out_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"穿刺出\",\n                                \"element\": data\n                            })\n                        }\n                        if (stringElement.inp_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"穿刺入\",\n                                \"element\": data\n                            })\n                        }\n                    }\n                    if (element[0].title === \"透析\") {\n                        const stringElement = element[0].element\n                        if (stringElement.out_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"透析出\",\n                                \"element\": data\n                            })\n                        }\n                        if (stringElement.inp_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"透析入\",\n                                \"element\": data\n                            })\n                        }\n                        dataList.push({\n                            \"title\": \"透析加總\",\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"沖洗\") {\n                        const stringElement = element[0].element\n                        if (stringElement.out_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"沖洗出\",\n                                \"element\": data\n                            })\n                        }\n                        if (stringElement.inp_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"沖洗入\",\n                                \"element\": data\n                            })\n                        }\n                    }\n                    if (element[0].title === \"排便\") {\n                        dataList.push({\n                            \"title\": \"Stool\",\n                            \"element\": data\n                        })\n                        dataList.push({\n                            \"title\": \"Enema/Stimulation\",\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"排尿\") {\n                        const stringElement = element[0].element\n                        const string = stringElement.inp_val1\n                        dataList.push({\n                            \"title\": \"Urine\" + string,\n                            \"element\": data\n                        })\n                    }\n                }\n            }\n            return dataList\n        }\n        function groupfirstarray(arrayList) {\n            var result = arrayList.filter(function (value, index, arr) {\n                const res = arr.map(function (value, index, arr) {\n                    return value.compare\n                })\n                return res.indexOf(value.compare) === index;\n            });\n            var arrList = []\n            for (let index = 0; index < result.length; index++) {\n                const element = result[index];\n                const comparevalue = element.compare\n                const filterarray = arrayList.filter(function (value, index, arr) {\n                    return value.compare === comparevalue\n                })\n                arrList.push(filterarray)\n            }\n            return arrList\n        }\n        function nullvalue(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            if (value === 0) {\n                return \"#\"\n            }\n            return value.toString().trim()\n        }\n        function formatQDC(QDC) {\n            var FirstArray = []\n            var SecondArray = []\n            var ThirdArray = []\n            var FourthArray = []\n            if (Array.isArray(QDC)) {\n                for (let index = 0; index < QDC.length; index++) {\n                    const element = QDC[index];\n                    if (RegFilter.firstarea_Reg_IO().find(function (value, index, array) {\n                        return value === element.item\n                    })) {\n                        FirstArray.push({\n                            title: nullvalue(element.line) + \"/\" + nullvalue(element.nam) + \"/\" + nullvalue(element.pos),\n                            compare: nullvalue(element.line) + \"/\" + nullvalue(element.nam),\n                            element: element\n                        })\n                    }\n                    if (RegFilter.Secondarea_reg_IO().find(function (value, index, array) {\n                        return value === element.item\n                    })) {\n                        SecondArray.push({\n                            title: nullvalue(element.line) + \"/\" + nullvalue(element.nam) + \"/\" + nullvalue(element.pos),\n                            compare: nullvalue(element.line) + \"/\" + nullvalue(element.nam) + \"/\" + nullvalue(element.pos),\n                            element: element\n                        })\n                    }\n                    if (RegFilter.Thirdarea_reg_IO().find(function (value, index, array) {\n                        return value === element.item\n                    })) {\n                        ThirdArray.push({\n                            title: nullvalue(element.nam) + \"/\" + nullvalue(element.lost),\n                            compare: nullvalue(element.nam) + \"/\" + nullvalue(element.lost),\n                            element: element\n                        })\n                    }\n                    if (RegFilter.Fourtharea_reg_IO().find(function (value, index, array) {\n                        return value === element.item\n                    })) {\n                        FourthArray.push({\n                            title: element.item,\n                            compare: element.item,\n                            element: element\n                        })\n                    }\n                }\n            }\n            return {\n                \"FirstArray\": FirstArray,\n                \"SecondArray\": SecondArray,\n                \"ThirdArray\": ThirdArray,\n                \"FourthArray\": FourthArray\n            }\n        }\n\n\n\n        const { PickerDate } = this.props\n        const { QDC } = this.state\n        const dataList = formatQDC(QDC)\n        console.log(dataList.ThirdArray)\n        // const DataFirst = dataList.FirstArray\n        const FlootSheetFirstAreaData = groupfirstarray(dataList.FirstArray)\n        const FlootSheetSecondAreaData = groupfirstarray(dataList.SecondArray)\n        const FlootSheetThirdAreaData = groupfirstarray(dataList.ThirdArray)\n        const FlootSheetFourthAreaData = groupelement(groupfirstarray(dataList.FourthArray))\n        console.log(FlootSheetFirstAreaData)\n        console.log(FlootSheetSecondAreaData)\n        console.log(FlootSheetThirdAreaData)\n        console.log(FlootSheetFourthAreaData)\n        const start = PickerDate + 7 * 60 * 60 * 1000\n        const Firstdata = FlootSheetFirstAreaData.map(function (value, index, arr) {\n            const title = value[0].title\n            var timeForList = []\n            for (let index = 0; index < 24; index++) {\n                const startTime = start + (index * 60 * 60 * 1000)\n                const endTime = start + ((index + 1) * 60 * 60 * 1000)\n                var sum = 0\n                var elementList = []\n                for (let index = 0; index < value.length; index++) {\n                    const element = value[index].element;\n                    const valueSum = Number(element.inp_val1)\n                    const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    if (startTime <= elementTime && elementTime < endTime) {\n                        sum = sum + valueSum\n                        elementList.push(element)\n                    }\n                }\n                timeForList.push({\n                    value: sum,\n                    startTime: startTime,\n                    endTime: endTime,\n                    elementList: elementList\n                })\n            }\n            console.log(timeForList)\n            const cellMap = timeForList.map(function (info, index, arr) {\n                return (\n                    <div key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n                );\n            })\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                    <div style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', backgroundColor: \"#cccccc\", display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{title}</div>\n                    {cellMap}\n                </div>\n            );\n        })\n        const Secondedata = FlootSheetSecondAreaData.map(function (value, index, arr) {\n            const title = value[0].title\n            var timeForList = []\n            for (let index = 0; index < 24; index++) {\n                const startTime = start + (index * 60 * 60 * 1000)\n                const endTime = start + ((index + 1) * 60 * 60 * 1000)\n                var sum = 0\n                var elementList = []\n                for (let index = 0; index < value.length; index++) {\n                    const element = value[index].element;\n                    const valueSum = Number(element.inp_val1)\n                    const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    if (startTime <= elementTime && elementTime < endTime) {\n                        sum = sum + valueSum\n                        elementList.push(element)\n                    }\n                }\n                timeForList.push({\n                    value: sum,\n                    startTime: startTime,\n                    endTime: endTime,\n                    elementList: elementList\n                })\n            }\n            const cellMap = timeForList.map(function (info, index, arr) {\n                return (\n                    <div key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n                );\n            })\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                    <div style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', backgroundColor: \"#cccccc\", display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{title}</div>\n                    {cellMap}\n                </div>\n            );\n        })\n\n        const Thirddata = FlootSheetThirdAreaData.map(function (value, index, arr) {\n            const title = value[0].title\n            var timeForList = []\n            for (let index = 0; index < 24; index++) {\n                const startTime = start + (index * 60 * 60 * 1000)\n                const endTime = start + ((index + 1) * 60 * 60 * 1000)\n                var sum = 0\n                var elementList = []\n                for (let index = 0; index < value.length; index++) {\n                    const element = value[index].element;\n                    const valueSum = Number(element.inp_val1)\n                    const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    if (startTime <= elementTime && elementTime < endTime) {\n                        sum = sum + valueSum\n                        elementList.push(element)\n                    }\n                }\n                timeForList.push({\n                    value: sum,\n                    startTime: startTime,\n                    endTime: endTime,\n                    elementList: elementList\n                })\n            }\n            const cellMap = timeForList.map(function (info, index, arr) {\n                return (\n                    <div key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n                );\n            })\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                    <div style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', backgroundColor: \"#cccccc\", display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{title}</div>\n                    {cellMap}\n                </div>\n            );\n        })\n        function formatRV(List) {\n            var timeForList = []\n            for (let index = 0; index < 24; index++) {\n                const startTime = start + (index * 60 * 60 * 1000)\n                const endTime = start + ((index + 1) * 60 * 60 * 1000)\n                var sum = 0\n                var elementList = []\n                for (let index = 0; index < List.length; index++) {\n                    const element = List[index].element;\n                    const valueSum = Number(element.inp_val1)\n                    const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    if (startTime <= elementTime && elementTime < endTime) {\n                        sum = sum + valueSum\n                        elementList.push(element)\n                    }\n                }\n                timeForList.push({\n                    value: sum,\n                    startTime: startTime,\n                    endTime: endTime,\n                    elementList: elementList\n                })\n            }\n            return timeForList\n        }\n        const RVCellRender = formatRV(dataList.ThirdArray)\n        const cellMap = RVCellRender.map(function (info, index, arr) {\n            return (\n                <div key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n            );\n        })\n        const RV = this.RVList(cellMap)\n        const FourdataCellRender = FlootSheetFourthAreaData.map((value, index, arr) => {\n            const datajson = value.element\n            const title = value.title\n            return this.FourthDataCell(datajson, title)\n        })\n        return (\n            <div>\n                <div style={{ display: 'flex', alignItems: 'center', height: '50px' }}>\n                    <t1>I/O</t1>\n                </div>\n                <div style={{ display: Firstdata.length === 0 ? \"none\" : \"block\", border: \"1px solid black\", borderCollapse: \"collapse\" }}>\n                    {Firstdata}\n                </div>\n                <div style={{ display: Secondedata.length === 0 ? \"none\" : \"block\", border: \"1px solid black\", borderCollapse: \"collapse\" }}>\n                    {Secondedata}\n                </div>\n                <div style={{ display: Thirddata.length === 0 ? \"none\" : \"block\", border: \"1px solid black\", borderCollapse: \"collapse\" }}>\n                    {Thirddata}\n                    {RV}\n                </div>\n                <div style={{ display: FourdataCellRender.length === 0 ? \"none\" : \"block\", border: \"1px solid black\", borderCollapse: \"collapse\" }}>\n                    {FourdataCellRender}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Flootsheetio;","import React, { Component } from 'react';\nimport Flootsheetio from './Flootsheetio'\n// import Flowsheetvitalsign from './Flootsheetvitalsign'\nimport Vitalxaxis from '../../Module/Vitalxaxis'\nimport { DatePicker, Button } from 'antd';\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport './Flootsheetlayout.scss'\nimport X2JS from 'x2js';\nimport * as Wardstate from '../../Function/Wardstate'\n\nclass Flowsheetlayout extends Component {\n    state = {\n        PickerDate: moment(moment().format('YYYYMMDD')).valueOf(),\n        preCID: null,\n        QSPE: [],\n        // itemlist: []\n    }\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const CID = caseinfo.CASEID\n        const date = moment(moment().format('YYYYMMDD')).valueOf()\n        this.setState({ preCID: CID, PickerDate: date })\n        this.ApiData(CID, date)\n    }\n    componentDidUpdate() {\n        const CID = this.props.caseinfo.CASEID\n        const preCID = this.state.preCID\n        if (CID !== preCID) {\n            const date = this.state.PickerDate\n            this.setState({ preCID: CID, PickerDate: date })\n            this.ApiData(CID, date)\n        }\n    }\n    ApiData(CID, DateTime) {\n        const st = moment(DateTime + (7 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        const et = moment(DateTime + (31 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        ApiProvider.getQSPE(CID, st, et)\n            .then(data => {\n                const dataJson = Wardstate.XM2JSON(data.data)\n                // const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                if (Array.isArray(dataJson)) {\n                    this.setState({ QSPE: dataJson })\n                }\n                else {\n                    this.setState({\n                        QSPE: [dataJson]\n                    })\n                }\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n    }\n    onDateChange = (date, dateString) => {\n        const CID = this.props.caseinfo.CASEID\n        this.setState({ preCID: CID, PickerDate: date.valueOf() })\n        this.ApiData(date.valueOf())\n\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDate } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const bTemp = bTime - (6 * day)\n                bronDate <= bTemp && this.onDateChange(moment(bTime))\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD'))\n                this.onDateChange(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= aTemp && this.onDateChange(moment(aTime))\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const data = this.state.QSPE || [] //特殊護理事件\n        const splist = data.filter(function (value, index, array) {\n            if (value === undefined) {\n                return null\n            }\n            console.log(value)\n            const str = value.special\n            return str.match(\"@v\") === null\n        })\n        const specialListRender = splist.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ display: \"flex\", color: \"rgba(59, 151, 225, 1)\" }}>{value.special.toString().trim()}</div>\n            );\n        })\n        return (\n            <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\n                <div>\n                    {/* <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}> */}\n                    <div style={{ padding: \"0px 10px\", display: \"flex\" }}>\n                        <DatePicker disabledDate={(current) => { return current > moment().startOf(\"day\") || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }} width={120} value={moment(this.state.PickerDate)} allowClear={false} onChange={this.onDateChange} />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\", padding: \"2px 10px 0px 10px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                    </div>\n                    <div style={{ display: splist.length === 0 ? \"none\" : \"block\", border: \"rgba(238,238,238,1) 1px solid\", borderRadius: \"4px\" }}>\n                        <div style={{ fontSize: \"16px\", display: \"flex\", paddingLeft: \"5px\", alignItems: \"center\", backgroundColor: \"#cccccc\" }}>\n                            特殊護理事件:<t2 style={{ width: \"20px\", height: \"20px\", borderRadius: \"99em\", background: \"black\", color: \"white\", display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>{splist.length}</t2>\n                        </div>\n                        <div style={{ maxHeight: \"100px\", width: \"100%\", overflow: \"auto\" }}>\n                            {specialListRender}\n                        </div>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"20px\" }}>\n                    <div></div>\n                    <Vitalxaxis max={200} min={0} select_interval={0} select_date={this.state.PickerDate} id_key=\"xaxis_flootsheet\" svg_id=\"xaxis_svg_flootsheet\"></Vitalxaxis>\n                </div>\n                <div className='boxshadow'></div>\n                <div className='flootsheetlayout'>\n                    <Flootsheetio PickerDate={this.state.PickerDate} caseinfo={caseinfo}></Flootsheetio>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\" }}>\n                    <div></div>\n                    <Vitalxaxis max={200} min={0} select_interval={0} select_date={this.state.PickerDate} id_key=\"xaxis_flootsheet_bot\" svg_id=\"xaxis_svg_flootsheet_bot\"></Vitalxaxis>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Flowsheetlayout;\n","import React, { Component } from 'react';\nimport './Examchart.scss';\nimport * as d3 from \"d3\";\nimport moment from 'moment';\n\nclass Examchart extends Component {\n    state = {\n        change: false\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\".tooltip\").remove()\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n    drawChart() {\n\n        const { id_key, svg_id, max, min, lineChart } = this.props\n        const sT = new Date(moment(lineChart[0].date, 'YYYYMMDD').valueOf() - 24 * 60 * 60 * 1000)\n        const endT = new Date(moment(lineChart[lineChart.length - 1].date, 'YYYYMMDD') + 24 * 60 * 60 * 1000)\n\n        const fixLineChart = lineChart.filter(data => {\n            return data.value !== \"\"\n        })\n\n        // 邊界\n        const margin = { top: 20, right: 20, bottom: 30, left: 50 },\n            width = 1000 - margin.left - margin.right,\n            height = 500 - margin.top - margin.bottom;\n\n        const cost = (max - min) / 2\n        console.log(`min : ${min}, max : ${max}, cost : ${cost}`)\n\n        let x = d3.scaleTime().domain([sT, endT]).range([0, width - margin.left - margin.right])\n        let y = d3.scaleLinear().domain([min - cost, max + cost]).range([height, 0])\n\n        var div = d3.select(\"#\" + id_key).append(\"div\")\n            .attr(\"class\", \"tooltip\")\n            .style(\"opacity\", 0);\n\n        let svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            .style(\"height\", height + margin.top + margin.bottom)\n            .style(\"width\", width + margin.left + margin.right)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        svg.append('g')\n            .call(d3.axisBottom(x).ticks(5).tickFormat(d3.timeFormat('%m/%d')))\n            .attr(\"transform\", `translate(0,${height})`)\n            .style('stroke', 'black')\n            .style('stroke-width', 1);\n\n        svg.append('g')\n            .call(d3.axisLeft(y))\n            .style('stroke', 'black')\n            .style('stroke-width', 1);\n\n        let line = d3.line()\n            .x(d => x(moment(d.date, 'YYYYMMDDHHmm').toDate()))\n            .y(d => y(d.value))\n            .curve(d3.curveMonotoneX);\n\n        let lines = svg.append('g').attr('class', 'lines');\n\n        lines.selectAll(\"circle\")\n            .data(fixLineChart)\n            .enter()\n            .append('g')\n            .append(\"circle\")\n            .attr(\"class\", \"lines-circle\")\n            .attr(\"cy\", d => y(d.value))\n            .attr(\"cx\", d => x(moment(d.date, 'YYYYMMDDHHmm').toDate()))\n            .attr('r', 5)\n            .on(\"mouseover\", function (d) {\n                div.transition()\n                    .duration(100)\n                    .style(\"opacity\", .9);\n                div.html(`檢驗時間 : ${d.date} <br/> 檢驗數值 : ${d.value}`)\n                    .style(\"left\", (d3.event.pageX - 200) + \"px\")\n                    .style(\"top\", (d3.event.pageY - 150) + \"px\");\n            })\n            .on(\"mouseout\", function (d) {\n                div.transition()\n                    .duration(300)\n                    .style(\"opacity\", 0);\n            })\n            .style('opacity', 1)\n            .style('fill', \"blue\");\n\n        lines\n            .selectAll('.line-group')\n            .data(fixLineChart)\n            .enter()\n            .append('g')\n            .attr('class', 'line-group')\n            .append('path')\n            .attr('class', 'line')\n            .attr('d', line(fixLineChart))\n            .style('stroke', 'black')\n            .style('fill', 'none');\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default Examchart;\n","import React, { Component } from 'react';\nimport { Select, Modal } from 'antd';\nimport * as ApiGithub from '../../API/ApiGithub'\nimport * as RegularData from '../../Data/RegularData'\nimport moment from 'moment'\nimport Examchart from './Examchart'\nimport { Button } from 'antd';\n\nclass Labview extends Component {\n    state = {\n        Selectus: this.props.SelectStatus,\n        PickerDateRange: [moment(), moment()],\n        visible: false,\n        lineCharttitle: '',\n        lineChart: [],\n        IRParse: RegularData.InspectionReportExtent()\n    }\n    componentDidMount() {\n        // ApiGithub.getExamReport()\n        //     .then(data => {\n        //         this.setState({\n        //             TitleList: data.data\n        //         })\n        //     })\n        //     .catch(err=>{\n        //         console.log(\"GithubAPI NG\" + err)\n        //     })\n        // this.setState({\n        //     TitleList: RegularData.ExamReportJson\n        // })\n    }\n\n    callbackDateFunction = (value) => {\n        this.props.parentDateCallback(value);\n    }\n    handleChange = (value) => {\n        this.callbackDateFunction(value)\n        this.setState({\n            Selectus: value\n        })\n    }\n    titleSearch = (value) => {\n        this.props.parentTitleCallback(value.target.value);\n    }\n    CellRender() {\n        const { DataList } = this.props\n        // console.log(DataList)\n        if (DataList.length === 0) {\n            return null\n        }\n        const DataListCell = DataList.map(function (element, index) {\n            const cellRender = element.Data.map(function (info, index) {\n                return (\n                    <centerstyle key={index} style={{ flex: 1, border: \"1px solid #cccccc\", borderCollapse: 'collapse' }}>\n                        <t3>{info}</t3>\n                    </centerstyle>\n                );\n            })\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"110px 1fr\", height: \"50px\" }}>\n                    <centerstyle style={{ border: \"1px solid #cccccc\", borderCollapse: 'collapse', paddingLeft: \"15px\" }}>\n                        <t3>{element.Time}</t3>\n                    </centerstyle>\n                    <div style={{ display: \"flex\", gridTemplateColumns: \"repeat(9,1fr)\" }}>\n                        {cellRender}\n                    </div>\n                </div >\n            );\n        })\n        return DataListCell\n    }\n\n    fixLineChartData = (e) => {\n        const { DataList } = this.props;\n        const value = e.target.value;\n        const number = e.target.getAttribute('index');\n\n        let showDate = DataList.map(data => {\n            let temp = {}\n            temp['date'] = data.Time;\n            temp['value'] = data.Data[number];\n            return temp\n        })\n\n        showDate.sort((x, y) => {\n            return moment(x.date, 'YYYYMMDDHHmm').valueOf() - moment(y.date, 'YYYYMMDDHHmm').valueOf()\n        })\n\n        this.setState({\n            lineCharttitle: value,\n            lineChart: showDate,\n        }, () => { this.showModel() });\n    }\n    showModel = () => {\n        this.setState({\n            visible: true,\n        });\n    }\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    charttableview = () => {\n\n        if (this.state.lineCharttitle === '') { return null }\n\n        const dataIR = this.state.IRParse\n        const key = Object.keys(dataIR)[this.state.Selectus]\n        const range = dataIR[key][this.state.lineCharttitle]\n\n        const lineChart = this.state.lineChart\n        const itemValue = []\n\n        if (range.min === undefined || range.max === undefined) {\n            lineChart.map(data => { itemValue.push(data.value) })\n        }\n\n        const max = range.max !== undefined ? range.max : Math.max(...itemValue)\n        const min = range.min !== undefined ? range.min : Math.min(...itemValue)\n\n        return (\n            <div style={{ margin: \"20px 0px\" }}>\n                <Examchart lineChart={lineChart} max={max} min={min} id_key={\"svgExamID\"} svg_id={\"svgExamSVG\"}></Examchart>\n            </div>\n        );\n    }\n\n    render() {\n        const { Option } = Select;\n        const visible = this.state.visible\n        const lineCharttitle = this.state.lineCharttitle\n        const handleOk = this.handleOk\n        const handleCancel = this.handleCancel\n        const fixLineChartData = this.fixLineChartData\n        const charttableview = this.charttableview()\n        const LabDataList = RegularData.ExamReportJson()\n        //0:CBC 1:電解質 2:肝功能 3:心臟 4:凝血 5:GAS 6:Glucose\n        const SelectList = LabDataList.map(function (info, index) {\n            // console.log(info.index)\n            return (\n                <Option key={info.index} value={info.index} >{info.select}</Option>\n            );\n        })\n        const SelectTitlefilter = LabDataList.filter(function (element, index) {\n            const selectdata = Select\n            return element.index = selectdata\n        })\n        if (SelectTitlefilter.length === 0) {\n            return null\n        }\n        const SelectTitle = SelectTitlefilter[this.state.Selectus].title\n        const SelectTitleRender = SelectTitle.map(function (info, index) {\n            return (\n                <centerstyle style={{ flex: 1 }} key={index}>\n                    <Button style={{ width: \"70px\", backgroundColor: \"transparent\", border: \"2px white solid\" }} index={index} value={info} onClick={fixLineChartData}>{info}</Button>\n                </centerstyle >\n            );\n        })\n        const ExamLab = this.CellRender()\n        // console.log(ExamLab)\n        return (\n            <div>\n                <Modal\n                    title={lineCharttitle}\n                    visible={visible}\n                    onOk={handleOk}\n                    onCancel={handleCancel}\n                    width={1200}\n                    footer={null}>\n                    {charttableview}\n                </Modal>\n                <t1>LAB(常規檢驗)</t1>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"auto 1fr\", marginTop: \"10px\", gridColumnGap: \"5px\" }}>\n                    <t2 style={{ display: \"flex\", alignItems: \"center\" }}>檢驗類別：</t2>\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                        <Select defaultValue={this.state.Selectus} style={{ width: \"90%\" }} onChange={this.handleChange}>\n                            {SelectList}\n                        </Select>\n                    </div>\n                </div>\n                <div style={{ marginTop: \"10px\", display: \"grid\", gridTemplateColumns: \"110px 1fr\", height: \"50px\", backgroundColor: \"#E2EDF3\" }}>\n                    <centerstyle>\n                        <t2>檢驗項目</t2>\n                    </centerstyle>\n                    <div style={{ display: \"flex\", gridTemplateColumns: \"repeat(9,1fr)\", justifycontent: \"space-between\" }} onClick={this.titleSearch}>\n                        {SelectTitleRender}\n                    </div>\n                </div>\n                <div>{this.state.Title}</div>\n                {ExamLab}\n            </div >\n        );\n    }\n}\n\nexport default Labview;\n","export function ExamReportJson() {\n    return [\n        {\n            \"select\": \"CBC檢驗:WBC、Band、Seg、Lym、Hb、Hct、PLT\",\n            \"index\": 0,\n            \"title\": [\n                \"WBC\",\n                \"Band\",\n                \"Seg\",\n                \"Lym\",\n                \"Hb\",\n                \"Hct\",\n                \"PLT\"\n            ]\n        },\n        {\n            \"select\": \"電解質與腎功能檢驗:Na、K、Cl、Ca(Free, Total)、Mg、P、BUN、Cr\",\n            \"index\": 1,\n            \"title\": [\n                \"Na\",\n                \"K\",\n                \"Cl\",\n                \"Ca(Free)\",\n                \"Ca(Total)\",\n                \"Mg\",\n                \"P\",\n                \"BUN\",\n                \"Cr\"\n            ]\n        },\n        {\n            \"select\": \"肝功能檢驗:ALT、AST、TBil、DBil、rGGT、Alkp、Alb\",\n            \"index\": 2,\n            \"title\": [\n                \"ALT\",\n                \"AST\",\n                \"TBil\",\n                \"DBil\",\n                \"rGGT\",\n                \"Alkp\",\n                \"Alb\"\n            ]\n        },\n        {\n            \"select\": \"早產兒追蹤:Iron、TIBC、FeSat、LDH、Alkp\",\n            \"index\": 3,\n            \"title\": [\n                \"Iron\",\n                \"TIBC\",\n                \"FeSat\",\n                \"LDH\",\n                \"Alkp\"\n            ]\n        },\n        {\n            \"select\": \"心臟功能檢驗:ck、ck-MB、BNP、Troponin I\",\n            \"index\": 4,\n            \"title\": [\n                \"ck\",\n                \"ck-MB\",\n                \"BNP\",\n                \"Troponin I\"\n            ]\n        },\n        {\n            \"select\": \"凝血功能檢驗:PT、APTT、INR\",\n            \"index\": 5,\n            \"title\": [\n                \"PT\",\n                \"APTT\",\n                \"INR\"\n            ]\n        },\n        {\n            \"select\": \"GAS(Acid-Base)檢驗:PH、pCO2、pO2、HCO3、BE、Sample、O2Sat、FiO2\",\n            \"index\": 6,\n            \"title\": [\n                \"PH\",\n                \"pCO2\",\n                \"pO2\",\n                \"HCO3\",\n                \"BE\",\n                \"Sample\",\n                \"O2Sat\",\n                \"FiO2\"\n            ]\n        },\n        ,\n        {\n            \"select\": \"GAS(Additionary)檢驗:Hb(Hgb)、Hct、Na、K、Ca(Free)、Bun、Cr\",\n            \"index\": 7,\n            \"title\": [\n                \"Hb(Hgb)\",\n                \"Hct\",\n                \"Na\",\n                \"K\",\n                \"Ca(Free)\",\n                \"Bun\",\n                \"Cr\"\n            ]\n        },\n        {\n            \"select\": \"Glucose檢驗:Glu(BedSide, Lab)\",\n            \"index\": 8,\n            \"title\": [\n                \"Glu(BedSide)\",\n                \"Glu(Lab)\"\n            ]\n        },\n        {\n            \"select\": \"黃疸檢查:TCB、MicroBil、TBil、DBil\",\n            \"index\": 9,\n            \"title\": [\n                \"TCB\",\n                \"MicroBil\",\n                \"TBil\",\n                \"DBil\"\n            ]\n        },\n        {\n            \"select\": \"感染指數:WBC、Band、Seg、Lym、PCT(procalcitonin)、CRP\",\n            \"index\": 10,\n            \"title\": [\n                \"WBC\",\n                \"Band\",\n                \"Seg\",\n                \"Lym\",\n                \"PCT(procalcitonin)\",\n                \"CRP\"\n            ]\n        }\n    ]\n}\nexport function FlagReg() {\n    return [\n        {\n            item: \"Respirator\",\n            \"ParseValueUD\": [\n                \"Restriction\"\n            ],\n            \"ParseValueTRT\": []\n        },\n        {\n            item: \"TPN\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"NPO\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"Anti\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"Foley\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"Drain\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        }\n    ]\n}\nexport function QDC() {\n    return {\n        \"Feeding\": [\n            \"進食\"\n        ],\n        \"IV\": [\n            \"血品\",\n            \"輸液\"\n        ],\n        \"Urine\": [\n            \"排尿\"\n        ],\n        \"Other\": [\n            \"失血\",\n            \"滲液\",\n            \"嘔吐\",\n            \"引流\",\n            \"穿刺\",\n            \"透析\",\n            \"沖洗\",\n            \"排便\"\n        ]\n    }\n}\n\nexport function ChronicLab() {\n    return {\n        \"Biochemical\": [\n        ],\n        \"Blood\": [\n            \"BLOOD\"\n        ],\n        \"Cultivate\": [\n\n        ],\n        \"GAS\": [\n\n        ],\n        \"Glu\": [\n\n        ],\n        \"Radiation\": [\n        ]\n    }\n}\n\nexport function NonLabExamReportParser() {\n    return [\n        {\n            parser_name: \"CBC\",\n            apply_condition: {\n                name: \"CBC|WBC|HB|PLT\",\n                sample: null,\n                lab: null,\n                start_time: null,\n                end_time: null,\n            },\n            mappings: [\n                {\n                    key: \"Hb\",\n                    regex_str: \"HB:\\\\s+(\\\\d+(.\\\\d)?)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"WBC\",\n                    regex_str: \"wbc:\\\\s+(\\\\d+)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"PLT\",\n                    regex_str: \"plt:\\\\s+(\\\\d+)\",\n                    regex_flags: 'ism',\n                    position: 1\n                }\n            ],\n            summary: \"[WBC;-]/[Hb;]/[PLT;-]\"\n        },\n        {\n            parser_name: \"Atypical Respiratory Panel\",\n            apply_condition: {\n                name: \"Atypical Respiratory Panel|CBC|PH|HB|PO2\",\n                sample: null,\n                lab: null,\n                start_time: null,\n                end_time: null,\n            },\n            mappings: [\n                {\n                    key: \"Hb\",\n                    regex_str: \"Hb:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"PH\",\n                    regex_str: \"PH:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"PO2\",\n                    regex_str: \"PO2:\\\\s+\\\\((\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"FIO2\",\n                    regex_str: \"FIO2:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"HCO3\",\n                    regex_str: \"HCO3:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                }\n            ],\n            summary: \"[PH;-]/[Hb;-]/[PO2;-]/[FIO2;-]/[HCO3;-]\"\n        }\n    ]\n}\n\nexport function NonLabExamORDListParser() {\n    return [\n        {\n            parser_name: \"ORDLIST\",\n            apply_condition: {\n                name: \"ORDLIST\",\n                sample: null,\n                lab: null,\n                start_time: null,\n                end_time: null,\n            },\n            mappings: [\n                {\n                    key: \"飲食類別\",\n                    regex_str: \"(CHEST\\\\s+KUB\\\\s+\\\\(FOR\\\\s+BABY\\\\)\\\\s+PORTABLE)|(BRAIN\\\\s+ECHO\\\\s+\\\\(NBD\\\\))\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"管路類別\",\n                    regex_str: \"(BLOOD\\\\s+GAS)|(Atypical\\\\s+Respiratory\\\\s+Panel)|(BLOOD\\\\s+PRODUCTS\\\\s+IRRADIATION)|(Aliqot\\\\s+and\\\\s+storage\\\\s+of\\\\s+blood)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"呼吸類別\",\n                    regex_str: \"(NT-pro-BNP)|(ANTIBODY\\\\s+SCREENING)\",\n                    regex_flags: 'ism',\n                    position: 1\n                }\n            ],\n            summary: \"[CHEST KUB;-]/[BLOOD GAS;-]/[Glucose;-]\"\n        }\n    ]\n}\n\nexport function InspectionReportExtent() {\n    return {\n        \"CBC\": {\n            \"WBC\": {\n                \"min\": 10000,\n                \"max\": 30000\n            },\n            \"Band\": {\n                \"min\": 0,\n                \"max\": 0.05\n            },\n            \"Seg\": {\n            },\n            \"Lym\": {\n            },\n            \"Hb\": {\n                \"min\": 10,\n                \"max\": 18\n            },\n            \"Hct\": {\n                \"min\": 0.3,\n                \"max\": 0.55\n            },\n            \"PLT\": {\n                \"min\": 100,\n                \"max\": 450\n            }\n        },\n        \"電解質與腎功能\": {\n            \"Na\": {\n                \"min\": 135,\n                \"max\": 145\n            },\n            \"K\": {\n                \"min\": 3.5,\n                \"max\": 5.5\n            },\n            \"Cl\": {\n            },\n            \"Ca(Free)\": {\n                \"min\": 0.8,\n                \"max\": 1.4\n            },\n            \"Ca(Total)\": {\n                \"min\": 8,\n                \"max\": 12\n            },\n            \"Mg\": {\n                \"min\": 1.5,\n                \"max\": 4.0\n            },\n            \"P\": {\n                \"min\": 4.5,\n                \"max\": 6.0\n            },\n            \"BUN\": {\n                \"min\": 0,\n                \"max\": 20\n            },\n            \"Cr\": {\n                \"min\": 0,\n                \"max\": 1\n            }\n        },\n        \"肝功能\": {\n            \"ALT\": {\n                \"min\": 0,\n                \"max\": 45\n            },\n            \"AST\": {\n                \"min\": 0,\n                \"max\": 45\n            },\n            \"TBil\": {\n                \"min\": 0,\n                \"max\": 2\n            },\n            \"DBil\": {\n                \"min\": 0,\n                \"max\": 0.2\n            },\n            \"rGGT\": {\n                \"min\": 0,\n                \"max\": 50\n            },\n            \"Alkp\": {\n                \"min\": 0,\n                \"max\": 450\n            },\n            \"Alb\": {\n                \"min\": 3.0,\n                \"max\": undefined\n            }\n        },\n        \"早產兒追蹤\": {\n            \"Iron\": {\n            },\n            \"TIBC\": {\n            },\n            \"FeSat\": {\n            },\n            \"LDH\": {\n            },\n            \"Alkp\": {\n            }\n        },\n        \"心臟功能\": {\n            \"kp\": {\n            },\n            \"ck-MB\": {\n            },\n            \"BNP\": {\n            },\n            \"Troponin I\": {\n                \"min\": 0,\n                \"max\": 0.5\n            }\n        },\n        \"凝血功能\": {\n            \"PT\": {\n            },\n            \"APTT\": {\n            },\n            \"INR\": {\n                \"min\": 0.8,\n                \"max\": 1.5\n            }\n        },\n        \"GAS(Acid-Base)\": {\n            \"pH\": {\n                \"min\": 7.25,\n                \"max\": 7.4\n            },\n            \"pCO2\": {\n                \"min\": 40,\n                \"max\": 60\n            },\n            \"pO2\": {\n                \"min\": 40,\n                \"max\": 90\n            },\n            \"HCO3\": {\n            },\n            \"BE\": {\n                \"min\": -7,\n                \"max\": 6\n            },\n            \"Sample\": {\n            },\n            \"O2Sat\": {\n            },\n            \"FiO2\": {\n            }\n        },\n        \"GAS(Additionary)\": {\n            \"Hb (Hgb)\": {\n            },\n            \"Hct\": {\n            },\n            \"Na\": {\n            },\n            \"K\": {\n            },\n            \"Ca(Free)\": {\n            },\n            \"Bun\": {\n            },\n            \"Cr\": {\n            }\n        },\n        \"Glucose\": {\n            \"Glu (BedSide)\": {\n                \"min\": 50,\n                \"max\": 120\n            },\n            \"Glu (Lab)\": {\n                \"min\": 50,\n                \"max\": 120\n            }\n        },\n        \"黃疸\": {\n            \"TCB\": {\n            },\n            \"MicroBil\": {\n            },\n            \"TBil\": {\n            },\n            \"DBil\": {\n            }\n        },\n        \"感染指數\": {\n            \"WBC\": {\n                \"min\": 10000,\n                \"max\": 30000\n            },\n            \"Band\": {\n                \"min\": 0,\n                \"max\": 0.05\n            },\n            \"Seg\": {\n            },\n            \"Lym\": {\n            },\n            \"PCT (procalcitonin)\": {\n                \"min\": 0,\n                \"max\": 0.5\n            },\n            \"CRP\": {\n                \"min\": 0,\n                \"max\": 0.5\n            }\n        }\n    }\n\n}\n","import React, { Component } from 'react';\nimport './ExamNonlabtablecell.scss'\n// import { Nonlablist } from '../../Data/Wardviewdata'\nimport moment from 'moment'\nimport NonlabviewtableCell from '../CrossSectionView/NonlabviewtableCell'\nimport { Modal } from 'antd';\nimport InsReportModal from '../ExamReportModal'\n\nclass Examnonlabviewtable extends Component {\n    state = {\n        visible: false\n    }\n\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部\"] = []\n\n        inputs.forEach(input => {\n            let content = input.ORPROCED;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部\"].push(input)\n        });\n\n        return allResult;\n    }\n\n    render() {\n        function listforstatus(ordlist, ressect, pickerdaterange, StateMode, InputMode) {\n            if (StateMode !== 0) {\n                /*\n                預設 \n                全部 StateMode == 0\n                已開單 StateMode == 1, data.ORSTATUS == 30\n                已簽收 StateMode == 2, data.ORSTATUS == 31\n                已發報告 StateMode == 3, data.ORSTATUS == 32\n                */\n                const changeState = { '1': '30', '2': '31', '3': '32' }\n                ordlist = ordlist.filter(data => {\n                    return data.ORSTATUS == changeState[StateMode.toString()]\n                })\n            }\n\n            if (InputMode !== null) {\n                ordlist = ordlist.filter(data => {\n                    return data.ORPROCED.match(InputMode) !== null\n                })\n            }\n\n            var status_report = []\n            console.log(ordlist, ressect, pickerdaterange)\n            const et = pickerdaterange[1].valueOf() + (24 * 60 * 60 * 1000)\n            const st = pickerdaterange[0].valueOf()\n            if (Array.isArray(ordlist) && Array.isArray(ressect)) {\n                for (let index = 0; index < ordlist.length; index++) {\n                    const element = ordlist[index];\n                    const time = element.ORBGNDT.toString().trim() + element.ORBGNTM.toString().trim()\n                    const timeStamp = moment(time, 'YYYY-MM-DDHHmmss').valueOf()\n                    if (timeStamp > st && timeStamp < et) {\n                        const status = ressect.find(function (value, index, array) {\n                            return value.ORDCLNM === element.ORDCLNM\n                        })\n                        if (status) {\n                            status_report.push({\n                                \"status\": true,\n                                \"element\": element\n                            })\n                        }\n                        else {\n                            status_report.push({\n                                \"status\": false,\n                                \"element\": element\n                            })\n\n                        }\n                    }\n                }\n            }\n            return status_report\n        }\n        function statusflag(status) {\n            switch (status) {\n                case 0:\n                    return '已開單'\n                case 1:\n                    return '已簽收'\n                case 2:\n                    return '已發報告'\n                default:\n                    return '--'\n            }\n        }\n        const { PickerDateRange, ORDLIST, RESSECT, StateMode, InputMode } = this.props\n\n        let clusteredData = {}\n        if (this.props.parser !== undefined) {\n            clusteredData = this.parse(ORDLIST, this.props.parser)\n        }\n\n        //filter data by selected class\n        let filteredData = clusteredData[this.props.selectedClass];\n\n        //Picker Date 前三天\n        const list = listforstatus(filteredData, RESSECT, PickerDateRange, StateMode, InputMode)\n        console.log(list)\n        const showModal = this.props.showModal\n        const nonlabcell = list.map(function (value, index, array) {\n            // console.log(value)\n            const time = moment(value.element.ORDATE.toString().trim() + value.element.ORTIME.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n            const come = value.element.ORSPCN1\n            const name = value.element.ORPROCED\n            const status = value.element.ORSTATUS\n\n            return (\n                <NonlabviewtableCell key={\"Examnonlabviewtable\" + index} come={come} time={time} name={name} status={status} hisId={value.element.ORHISTNO} caseId={value.element.ORDSEQCN} month={value.element.ORMM} seq={value.element.ORDSEQNO} showModal={showModal}></NonlabviewtableCell>\n            );\n        })\n\n        return (\n            <div style={{ marginTop: \"10px\" }}>\n                <div style={{ height: \"50px\", border: \"#E2EDF3 1px solid\", backgroundColor: \"#E2EDF3\", display: \"grid\", gridTemplateColumns: \"1fr 1.5fr 1fr 1fr 1fr\" }}>\n                    <t3 className='nonlabtebletitlecell'>檢驗日期</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗項目名稱</t3>\n                    <t3 className='nonlabtebletitlecell'>檢體來源</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗項目狀態</t3>\n                    <t3 className='nonlabtebletitlecell'>檢驗結果</t3>\n                </div>\n                <div className='nonlabviewtable'>\n                    {nonlabcell}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Examnonlabviewtable\n","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nclass Examaxis extends Component {\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n    drawChart() {\n        function formattimetoInteger(time) {\n            return new Date(time).getTime()\n        }\n        function monthformat(month) {\n            return month + 1\n        }\n\n        var formatday = d3.timeFormat(\"%d\")\n        function multiFormat(date) {\n\n            return monthformat(new Date(date).getMonth()) + \"/\" + formatday(date)\n        }\n        const {Time, id_key, svg_id, axisBot, axisTop, max, min } = this.props\n        const Start_time = formattimetoInteger(Time[0])\n        const End_time = formattimetoInteger(Time[1])\n        const interval = (End_time - Start_time) / (24 * 60 * 60 * 1000)\n        const viewwidth = window.screen.availWidth - 218 - 15\n\n        var time_interval = []\n        for (let index = 0; index < interval + 1; index++) {\n            const element = Start_time + index * 24 * 60 * 60 * 1000\n            time_interval.push(element)\n        }\n        var x = d3.scaleLinear().domain([Start_time, End_time]).range([0, viewwidth])\n        var y = d3.scaleLinear().domain([min, max]).range([100, 0])\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            .attr(\"viewbox\", [0, 0, viewwidth + 30, 20])\n            .style(\"height\", 20)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 30 + \",\" + 20 + \")\");\n\n\n        var xAxis = d3.axisTop(x)\n            .tickValues(time_interval)\n            .tickPadding(0)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n\n        var xAxisbot = d3.axisBottom(x)\n            .tickValues(time_interval)\n            .tickPadding(-10)\n            .tickSize(0,0)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n        if (axisTop) {\n            svg.append(\"g\")\n                .call(xAxis)\n                .attr({\n                    'font-size': \"10px\",\n                    'fill': 'black'\n                })\n        }\n        if (axisBot) {\n            svg.append(\"g\")\n                .call(xAxisbot)\n                .attr({\n                    'font-size': \"10px\",\n                    'fill': 'black'\n                })\n        }\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key} style={{ height: \"20px\" }}></div>\n        );\n    }\n}\n\nexport default Examaxis;","import React, { Component } from 'react';\nimport Examnonlabviewtable from './ExamNonlabtablecell'\nimport { DatePicker, Input, Button, Select, Modal } from 'antd';\nimport moment from 'moment';\nimport searchlogo from '../../Image/svg/Search.svg'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport InsReportModal from '../ExamReportModal'\n\n// var mode_class, mode_state;\nclass Nonlabview extends Component {\n    state = {\n        ClassMode: \"全部\",\n        StateMode: 0,\n        InputMode: null,\n        parser: { \"mappings\": [] },\n        modalVisible: false,\n        modalReport: \"\"\n    }\n\n    componentDidMount() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"NonLabExamReport\");\n                parser.mappings = [{ \"key\": \"全部\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson ExamReportNonLab OK \" + JSON.stringify(parser))\n                this.setState({\n                    parser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    Inputvaluesearch = (event) => {\n        this.setState({ InputMode: event.target.value })\n    }\n\n    onChangeState = (value) => {\n        this.setState({ StateMode: value })\n    }\n\n    onChangeClass = (value) => {\n        this.setState({ ClassMode: value })\n    }\n\n    showModal = (report) => {\n        console.log(\"showModal :\" + JSON.stringify(report))\n        this.setState({\n            modalVisible: true,\n            modalReport: report\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    render() {\n        var statetime = {\n            \"Starttime\": (+new Date()),\n            \"Endtime\": (+new Date())\n        }\n        // const datearray = []\n        const { Option } = Select;\n        // function onChange(value, dateString) {\n        //     statetime.Starttime = (+new Date(dateString[0]))\n        //     statetime.Endtime = (+new Date(dateString[1]))\n        //     datearray.push(statetime.Starttime)\n        //     datearray.push(statetime.Endtime)\n        // }\n        // function Inputchange() {\n        //     const value = {\n        //         \"date\": datearray,\n        //         \"keyword\": document.getElementById(\"keywordsearch\").value\n        //     }\n        //     console.log(value)\n        // }\n        const { PickerDateRange, ORDLIST, RESSECT } = this.props\n        const { modalVisible, modalReport } = this.state\n        const showModal = this.showModal\n        const handleOk = this.handleOk\n        const handleCancel = this.handleCancel\n        return (\n            <div>\n                <t1>報告清單</t1>\n                <div style={{ display: 'grid', gridTemplateColumns: \"130px 130px auto\", gridColumnGap: \"5px\", marginTop: \"10px\" }}>\n                    <Select defaultValue={this.state.ClassMode} placeholder=\"選擇檢驗類別\" style={{ width: 120 }} onChange={this.onChangeClass}>\n                        {this.state.parser.mappings.map((mapping, index) => {\n                            return <Option key={index} value={mapping.key}>{mapping.key}</Option>\n                        })}\n                    </Select>\n                    <Select defaultValue={this.state.StateMode} placeholder=\"選擇項目狀態\" style={{ width: 120 }} onChange={this.onChangeState}>\n                        <Option value={0}>全部</Option>\n                        <Option value={1}>已開單</Option>\n                        <Option value={2}>已簽收</Option>\n                        <Option value={3}>已發報告</Option>\n                    </Select>\n                    <Input id=\"keywordsearch\" placeholder=\"輸入關鍵字\" onChange={this.Inputvaluesearch} />\n                    {/* <div onClick={() => this.Inputvaluesearch()} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <img src={searchlogo} alt=\"searchlogo\" />\n                    </div> */}\n                </div>\n                <Examnonlabviewtable PickerDateRange={PickerDateRange} ORDLIST={ORDLIST} RESSECT={RESSECT} selectedClass={this.state.ClassMode} parser={this.state.parser} StateMode={this.state.StateMode} InputMode={this.state.InputMode} visible={modalVisible} showModal={showModal} handleOk={handleOk} handleCancel={handleCancel}></Examnonlabviewtable>\n                <Modal\n                    title={\"檢驗結果\"}\n                    visible={modalVisible}\n                    onOk={handleOk}\n                    onCancel={handleCancel}\n                    width={1000}\n                    footer={null}>\n                    <InsReportModal report={modalReport}></InsReportModal>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Nonlabview\n","import React, { Component } from 'react';\nimport Labview from './ExamLabview'\nimport { DatePicker, Button } from 'antd';\nimport searchlogo from '../../Image/svg/Search.svg'\nimport Examchart from './Examchart'\nimport Examaxis from './Examaxis'\nimport './ExamReport.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport Nonlabview from './NonLabview'\nimport * as RegularData from '../../Data/RegularData'\n\nclass Examreport extends Component {\n    state = {\n        selectdata: 0,\n        selectTitle: '',\n        PickerDateRange: [moment(moment().subtract(6, 'days').format('YYYYMMDD')),\n        moment(moment().format('YYYYMMDD'))],\n        RESDGLU1: [], //累積報告\n        RESLAB02: [], //累積報告\n        RESLAB01: [],  //累積報告\n        RESDBGAS: [],  //累積報告\n        RESLAB0C: [],//累積報告\n        ORDLIST: [],\n        RESSECT: []\n    }\n    constructor(props) {\n        super(props)\n        this.PickerDateRangeChange = this.PickerDateRangeChange.bind(this)\n    }\n\n    SelectDataList() {\n        function vallofnull(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"\"\n            }\n            return value.toString().trim()\n        }\n        const DateRange = this.state.PickerDateRange\n        console.log(`show DataRange : ${DateRange}`)\n        const selectData = this.state.selectdata\n        const st_timestamp = DateRange[0].valueOf()\n        const et_timestamp = DateRange[1].valueOf() + (24 * 60 * 60 * 1000)\n        // const { PickerDateRange, RESLAB02, RESDGLU1, RESLAB01, RESDBGAS, RESLAB0C, ORDLIST, RESSECT } = this.props\n        const RESLAB02 = this.state.RESLAB02\n        const RESDGLU1 = this.state.RESDGLU1\n        const RESLAB01 = this.state.RESLAB01\n        const RESDBGAS = this.state.RESDBGAS\n        const RESLAB0C = this.state.RESLAB0C\n\n\n        var CellData = []\n        console.log(selectData, RESLAB02, RESDGLU1, RESLAB01, RESDBGAS)\n        if (selectData === 0) { // CBC\n            for (let index = 0; index < RESLAB02.length; index++) {\n                const element = RESLAB02[index];\n                const WBC = vallofnull(element.RSV01)\n                const Band = vallofnull(element.RSV13)\n                const Seq = vallofnull(element.RSV14)\n                const Lym = vallofnull(element.RSV15)\n                const Hb = vallofnull(element.RSV03)\n                const Hct = vallofnull(element.RSV04)\n                const Plt = vallofnull(element.RSV09)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                console.log(\"time \" + time + \" st_timestamp \" + st_timestamp + \" et_timestamp \" + et_timestamp)\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [WBC, Band, Seq, Lym, Hb, Hct, Plt]\n                    })\n                }\n            }\n            console.log(\"CellData => \" + JSON.stringify(CellData))\n            return CellData\n        }\n        if (selectData === 1) { // 電解質與腎\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const Na = vallofnull(element.RSV13)\n                const K = vallofnull(element.RSV14)\n                const Cl = vallofnull(element.RSV15)\n                const CaFree = \"No\"\n                const CaTotal = vallofnull(element.RSV03)\n                const Mg = \"No\"\n                const P = vallofnull(element.RSV17)\n                const BUN = vallofnull(element.RSV05)\n                const Cr = vallofnull(element.RSV06)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [Na, K, Cl, CaFree, CaTotal, Mg, P, BUN, Cr]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 2) { // 肝功能\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const Alt = vallofnull(element.RSV11)\n                const AST = vallofnull(element.RSV12)\n                const TBil = vallofnull(element.RSV08)\n                const DBil = vallofnull(element.RSV25)\n                const rGGT = vallofnull(element.RSV19)\n                const Alkp = vallofnull(element.RSV09)\n                const Alb = vallofnull(element.RSV02)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [Alt, AST, TBil, DBil, rGGT, Alkp, Alb]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 3) { // 早產兒\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const Iron = vallofnull(element.RSV26)\n                const TIBC = vallofnull(element.RSV28)\n                const FeSat = parseInt(vallofnull(element.RSV26)) / parseInt(vallofnull(element.RSV26))\n                const LDH = vallofnull(element.RSV10)\n                const Alkp = vallofnull(element.RSV9)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [Iron, TIBC, FeSat, LDH, Alkp]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 4) { // 心臟\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const ck = vallofnull(element.RSV18)\n                const ckMB = vallofnull(element.RSV28)\n                const BNP = \"No\"\n                const Troponinl = vallofnull(element.RSV30)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [ck, ckMB, BNP, Troponinl]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 5) { // 凝血\n            for (let index = 0; index < RESLAB02.length; index++) {\n                const element = RESLAB02[index];\n                const PT = vallofnull(element.RSV10)\n                const APTT = vallofnull(element.RSV11)\n                const INR = vallofnull(element.RSV12)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [PT, APTT, INR]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 6) { // GAS(Acid-Base)\n            for (let index = 0; index < RESDBGAS.length; index++) {\n                const element = RESDBGAS[index];\n                const PH = vallofnull(element.SS07)\n                const pCO2 = vallofnull(element.SS06)\n                const pO2 = vallofnull(element.SS08)\n                const HCO3 = vallofnull(element.SS04)\n                const BE = vallofnull(element.SS01)\n                const Sample = \"No\"\n                const O2Sat = vallofnull(element.SS05)\n                const FiO2 = vallofnull(element.SS03)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [PH, pCO2, pO2, HCO3, BE, Sample, O2Sat, FiO2]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 7) { // GAS(Additionary)\n            for (let index = 0; index < RESDBGAS.length; index++) {\n                const element = RESDBGAS[index];\n                const Hb = vallofnull(element.SS11)\n                const Hct = vallofnull(element.SS12)\n                const Na = vallofnull(element.SS13)\n                const K = vallofnull(element.SS14)\n                const CaFree = vallofnull(element.SS15)\n                const Bun = vallofnull(element.SS16)\n                const Cr = vallofnull(element.SS17)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [Hb, Hct, Na, K, CaFree, Bun, Cr]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 8) { // Glucose\n            for (let index = 0; index < RESDGLU1.length; index++) {\n                const element = RESDGLU1[index]\n                const GluBeside = vallofnull(element.GLUFAST)\n                const GluLab = vallofnull(element.RSV16)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [GluBeside, GluLab]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 9) { // 黃疸\n            for (let index = 0; index < RESLAB0C.length; index++) {\n                const element = RESLAB0C[index]\n                const TCB = vallofnull(element.RSV01)\n                const MicroBil = vallofnull(element.RSV02)\n                const TBil = vallofnull(element.RSV03)\n                const DBil = vallofnull(element.RSV04)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [TCB, MicroBil, TBil, DBil]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 10) { // 感染指數\n            for (let index = 0; index < RESLAB02.length; index++) {\n                const elementOne = RESLAB02[index]\n                const elementTwo = RESLAB01[index]\n                const WBC = vallofnull(elementOne.RSV01)\n                const Band = vallofnull(elementOne.RSV13)\n                const Seg = vallofnull(elementOne.RSV14)\n                const Lym = vallofnull(elementOne.RSV15)\n                const PCT = \"NO\"\n                const CRP = vallofnull(elementTwo.RSV32)\n                const time = moment((elementOne.ORRESDT.toString() + elementOne.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((elementOne.ORRESDT.toString() + elementOne.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [WBC, Band, Seg, Lym, PCT, CRP]\n                    })\n                }\n            }\n            return CellData\n        }\n        return null\n\n    }\n\n    componentDidMount() {\n        this.APIUpdate(this.state.PickerDateRange)\n        this.SelectDataList = this.SelectDataList.bind(this)\n    }\n\n    // ChangeRangePicker(dates, datestrings) {\n\n    // }\n    APIUpdate(DateRange) {\n        console.log(DateRange)\n        function selectMonthInterval(PickerDate) {\n            const timestampInterval = new Date().getTime() - new Date(PickerDate).getTime()\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        const { caseinfo } = this.props\n\n        const st = DateRange[0].format(\"YYYY-MM-DD\")\n        const datePick = DateRange[0].format('YYYY/MM/DD')\n        console.log(DateRange, st, datePick)\n        // const TRANSDate = moment(caseinfo.TRANSINDT, 'YYYYMMDD').format('YYYY-MM-DD')\n        const MonthInterval = selectMonthInterval(datePick)\n        const RESDGLU1 = ApiProvider.getStoredProcedureRESDGLU1(caseinfo.HISID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESLAB02 = ApiProvider.getStoredProcedureRESLAB02(caseinfo.HISID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESLAB01 = ApiProvider.getStoredProcedureRESLAB01(caseinfo.HISID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESDBGAS = ApiProvider.getStoredProcedureRESDBGAS(caseinfo.HISID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESLAB0C = ApiProvider.getStoredProcedureRESLAB0C(caseinfo.HISID, st)\n            .then(data => {\n                console.log(data.data)\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const ORDLIST = ApiProvider.getStoredProcedureORDLIST(caseinfo.HISID, st, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                console.log(data.data)\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        const RESSECT = ApiProvider.getStoredProcedureRESSECT(caseinfo.HISID, MonthInterval, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        Promise.all([RESDGLU1, RESLAB02, RESLAB01, RESDBGAS, RESLAB0C, ORDLIST, RESSECT]).then(result => {\n            console.log(result)\n            this.setState({\n                RESDGLU1: result[0], //累積報告\n                RESLAB02: result[1],  //累積報告\n                RESLAB01: result[2],  //累積報告\n                RESDBGAS: result[3],  //累積報告\n                RESLAB0C: result[4],  //累積報告\n                ORDLIST: result[5],\n                RESSECT: result[6],\n            })\n        })\n    }\n    callbackDateFunction = (select) => {\n        // console.log(select)\n        this.setState({\n            selectdata: select\n        })\n    }\n\n    callbackTitleFunction = (select) => {\n        // console.log(select)\n        this.setState({\n            selectTitle: select\n        })\n    }\n\n    PickerDateRangeChange(date, dateString) {\n        console.log(date)\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDateRange } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const st = PickerDateRange[0].valueOf()\n        const et = PickerDateRange[1].valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                if (bronDate <= (st - day)) {\n                    const bTime = [moment(moment(st - day).format('YYYYMMDD')), moment(moment(et - day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(bTime)\n                }\n                break;\n            case 'N':\n                const nTime = [moment(moment().subtract(6, 'days').format('YYYYMMDD')), moment(moment().format('YYYYMMDD'))]\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                if (aTemp >= (et + day)) {\n                    const aTime = [moment(moment(st + day).format('YYYYMMDD')), moment(moment(et + day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(aTime)\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const momentDate = this.state.PickerDateRange\n        const data = this.SelectDataList()\n        console.log(\"SelectDataList => \" + data)\n        const { RangePicker } = DatePicker\n        const PickerDateRange = [momentDate[0].valueOf(), momentDate[1].valueOf()]\n\n        return (\n            <div className='examreportlayout'>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"250px 120px\", gridColumnGap: \"5px\", marginBottom: \"5px\" }}>\n                    <RangePicker\n                        // defaultValue={this.state.PickerDateRange}\n                        value={this.state.PickerDateRange}\n                        format={\"YYYY/MM/DD\"}\n                        allowClear={false}\n                        locale={\"zh_TW\"}\n                        disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                        // toString={(dates, datestrings) => { this.setState({ RangePicker: dates }) }}\n                        onChange={this.PickerDateRangeChange}\n                    />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" }}>\n                    <Labview selectvalue={this.state.selectdata}\n                        parentDateCallback={this.callbackDateFunction}\n                        DataList={data}\n                        SelectStatus={this.state.selectdata}\n                        PickerDateRange={PickerDateRange}\n                        parentTitleCallback={this.callbackTitleFunction}>\n                    </Labview>\n                    <Nonlabview ORDLIST={this.state.ORDLIST} RESSECT={this.state.RESSECT} caseinfo={caseinfo} PickerDateRange={PickerDateRange}></Nonlabview>\n                </div>\n                {/* {this.charttableview()} */}\n                <div style={{ display: \"flex\", justifyContent: 'center', alignItems: 'center' }}>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Examreport;\n","import React, { Component } from 'react';\nimport { DatePicker, Button } from 'antd';\nimport Prescriptionordertable from '../Prescriptionorder/Prescriptionorder'\nimport Treatmentorderlayout from '../Treatmentorder/Treatmentorder'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass Orderview extends Component {\n    state = {\n        UDORDER0: [],\n        TRTMNTQ1: [],\n        PickerDateRange: [moment(moment().subtract(6, 'days').format('YYYYMMDD')),\n        moment(moment().format('YYYYMMDD'))],\n    }\n    componentDidMount() {\n        this.apidata()\n    }\n    apidata() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID.toString().trim()\n        const CID = caseinfo.CASEID.toString().trim()\n        const UDORDER0 = ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureUDORDER0 NG \" + JSON.stringify(err))\n            });\n        const TRTMNTQ1 = ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureTRTMNTQ1 NG \" + JSON.stringify(err))\n            });\n        Promise.all([UDORDER0, TRTMNTQ1]).then(result => {\n            console.log(result)\n            this.setState({\n                UDORDER0: result[0],\n                TRTMNTQ1: result[1]\n            })\n        })\n    }\n\n    PickerDateRangeChange = (date, dateString) => {\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDateRange } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const st = PickerDateRange[0].valueOf()\n        const et = PickerDateRange[1].valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                if (bronDate <= (st - day)) {\n                    const bTime = [moment(moment(st - day).format('YYYYMMDD')), moment(moment(et - day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(bTime)\n                }\n                break;\n            case 'N':\n                const nTime = [moment(moment().subtract(6, 'days').format('YYYYMMDD')), moment(moment().format('YYYYMMDD'))]\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                if (aTemp >= (et + day)) {\n                    const aTime = [moment(moment(st + day).format('YYYYMMDD')), moment(moment(et + day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(aTime)\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const udata = this.state.UDORDER0\n        const tdata = this.state.TRTMNTQ1\n        const momentDate = this.state.PickerDateRange\n\n        const { RangePicker } = DatePicker\n        const PickerDateRange = [momentDate[0].valueOf(), momentDate[1].valueOf()]\n        if (udata.length === 0 || tdata.length === 0) {\n            //Loading\n            return null\n        }\n        // console.log(udata)\n        // console.log(PickerDateRange)\n\n        return (\n            <div>\n                <div style={{ maxHeight: '75vh', overflowY: 'auto' }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"250px 120px\", gridColumnGap: \"5px\", marginBottom: \"5px\" }}>\n                        <RangePicker\n                            value={this.state.PickerDateRange}\n                            format={\"YYYY/MM/DD\"}\n                            allowClear={false}\n                            locale={\"zh_TW\"}\n                            onChange={this.PickerDateRangeChange}\n                            disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                        />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" }}>\n                        <Prescriptionordertable PickerDateRange={PickerDateRange} UDORDER0={udata} searchbar={true} caseinfo={caseinfo}></Prescriptionordertable>\n                        <Treatmentorderlayout PickerDateRange={PickerDateRange} TRTMNT01={tdata} searchbar={true} caseinfo={caseinfo}></Treatmentorderlayout>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Orderview;\n","import React, { Component } from 'react';\nimport {hhmmssformat,mmddformat} from '../../Function/Timeformat'\n\nclass Notecell extends Component {\n    state = {\n        displayMode: \"none\"\n    }\n\n\n    sendData(info) {\n        console.log(info)\n        this.props.parentCallback(info);\n    }\n\n    display_rowdate(value) {\n        console.log(value)\n        const state = this.state.displayMode\n        if (value === 0) {\n\n        }\n        else {\n            if (state === 'none') {\n                this.setState(\n                    {\n                        displayMode: \"block\"\n                    }\n                )\n            }\n            else {\n                this.setState(\n                    {\n                        displayMode: \"none\"\n                    }\n                )\n            }\n        }\n\n    }\n\n    format_display_date(date) {\n        const { display_date } = this.props\n        if (date === display_date) {\n            return true\n        }\n        else return false\n    }\n\n    render() {\n        function clickstyle(datanumber) {\n            if (datanumber === 0) {\n                return \"default\"\n            }\n            else return \"pointer\"\n        }\n        const { infoDate, rowdata } = this.props\n        const date_style = {\n            date_false:{ height: \"40px\", display: \"flex\", alignItems: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderTopWidth: \"0px\", cursor: \"pointer\" },\n            date_true:{ height: \"40px\", display: \"flex\", alignItems: \"center\",background:\"rgba(59, 151, 225,1)\", border: \"rgb(59, 151, 225) 100% 1px solid\", borderTopWidth: \"0px\", cursor: \"pointer\" }\n        }\n        var filterData_Date = rowdata.filter(function (item, index, array) {\n            return item.NoteTime - infoDate < 24 * 60 * 60 * 1000 && item.NoteTime - infoDate > 0;       // 取得大於五歲的\n        });\n        const roedata_layout = filterData_Date.map((info, index) =>\n            <div onClick={() => this.sendData(info)} key={index} style={this.format_display_date(info.NoteTime)?date_style.date_true:date_style.date_false}>{hhmmssformat(info.NoteTime)}</div>\n        )\n\n        return (\n            <div style={{ marginTop: \"10px\" }}>\n                <div onClick={() => this.display_rowdate(filterData_Date.length)} style={{ height: \"40px\", display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\", border: \"rgba(238,238,238,1) 1px solid\", cursor: clickstyle(filterData_Date.length) }}>\n                    <div>{mmddformat(infoDate)}</div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", width: \"30px\", height: \"30px\", borderRadius: \"99em\", background: \"rgba(59, 151, 225, 1)\", color: \"white\" }}>{filterData_Date.length}</div>\n                </div>\n                <div style={{ display: this.state.displayMode }}>{roedata_layout}</div>\n            </div>\n        );\n    }\n}\n\nexport default Notecell","import React, { Component } from 'react';\nimport { DatePicker, Select } from 'antd';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\nimport Notelist from './Notelist'\nimport searchlogo from '../../Image/svg/Search.svg'\nimport { Button } from 'antd'\nimport './Note.scss'\nimport X2JS from 'x2js';\nimport * as PR from '../../Resource/PRGTXQRY'\n\n\nvar dataRange = [];\nclass Noteview extends Component {\n    state = {\n        StartTime: null,\n        EndTime: null,\n        display_data: null,\n        context: null,\n        contentdisplay: false,\n\n\n        ADMDISP: [],\n        ADMLIST: [],\n        DISLIST: [],\n        DISDISP: [],\n        DTAROTQ4: [],\n        DTASOAPQ: [],\n        PCASELIST: [],\n        ERDISP: [],\n        PRGTXQRY: [],\n        PRGTXQRYDIS: [],\n        CPSLIST: [],\n        CPSDISP: [],\n        QPNOT: [],\n        QPNOTDIS: [],\n        OPSORAQ1: [],\n        OPSORAQ2: [],\n        SelectClass: 0\n\n    }\n    componentDidMount() {\n        this.apiData()\n    }\n\n    SelectADMDISP(ADISTNO, ADICASE) {\n        console.log(ADISTNO, ADICASE)\n        ApiProvider.getStoredProcedureADMDISP(ADISTNO, ADICASE)\n            .then(data => {\n                // console.log(data.data)\n                this.setState({\n                    ADMDISP: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureADMDISP NG \" + JSON.stringify(err));\n            });\n    }\n    SelectDISDISP(CID) {\n        // console.log(ADISTNO, ADICASE)\n        const { caseinfo } = this.props\n        ApiProvider.getStoredProcedureDISDISP(caseinfo.HISID, CID)\n            .then(data => {\n                // console.log(data.data)\n                this.setState({\n                    DISDISP: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureADMDISP NG \" + JSON.stringify(err));\n            });\n    }\n\n    SelectERDISP(CID) {\n        const { caseinfo } = this.props\n        ApiProvider.getStoredProcedureERDISP(caseinfo.HISID, CID)\n            .then(data => {\n                this.setState({\n                    ERDISP: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n    }\n    SelectDTASOAPQ(date, dpt) {\n        const { caseinfo } = this.props\n        //門診紀錄內容 需要時間和醫生編號\n        ApiProvider.getStoredProcedureDTASOAPQ(caseinfo.HISID, date, dpt)\n            .then(data => {\n                this.setState({\n                    DTASOAPQ: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureDTASOAPQ NG \" + JSON.stringify(err));\n            });\n    }\n    SelectPRGTXQRYDIS(List) {\n        this.setState({\n            PRGTXQRYDIS: List\n        })\n    }\n    SelectCPSDISP(HID, CID, SEQ) {\n        ApiProvider.getStoredProcedureCPSDISP(HID, CID, SEQ)\n            .then(data => {\n                console.log(data.data)\n                this.setState({\n                    CPSDISP: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n    }\n    SelectQPNOTDIS(data) {\n        this.setState({\n            QPNOTDIS: data\n        })\n    }\n\n    SelectOPSORAQ1(OPABGNDT, OPATIMES) {\n        const { caseinfo } = this.props\n        //門診紀錄內容 需要時間和醫生編號\n        ApiProvider.getStoredProcedureOPSORAQ2(caseinfo.HISID, OPABGNDT, OPATIMES)\n            .then(data => {\n                this.setState({\n                    OPSORAQ2: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureDTASOAPQ NG \" + JSON.stringify(err));\n            });\n    }\n    apiData() {\n        const { caseinfo } = this.props\n        //入院並摘\n        const ADMLIST = ApiProvider.getStoredProcedureADMLIST(caseinfo.HISID, \"DOC3924B\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureADMLIST NG \" + JSON.stringify(err));\n            });\n        //出院並摘\n        const DISLIST = ApiProvider.getStoredProcedureDISLIST(caseinfo.HISID, \"DOC3924B\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureDISLIST NG \" + JSON.stringify(err));\n            });\n\n        //門診紀錄清單\n        const DTAROTQ4 = ApiProvider.getStoredProcedureDTAROTQ4(caseinfo.HISID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureDTAROTQ4 NG \" + JSON.stringify(err));\n            });\n\n\n        //急診紀錄清單\n        const PCASELIST = ApiProvider.getStoredProcedurePCASELIST(caseinfo.HISID, \"DOC3924B\", \"E\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n\n\n\n\n        const CPSLIST = ApiProvider.getStoredProcedureCPSLIST(caseinfo.HISID, \"DOC3924B\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n\n        function nullvalue(value) {\n            if (value === null) {\n                return \"911\"\n            }\n            console.log(value)\n            const PRGTXQRYDATE = moment(value.PLOCDT, 'YYYYMMDD').format(\"YYYYMM\")\n            const D = PRGTXQRYDATE.substr(3, 3)\n            return D\n        }\n\n        const LIVEPLOC = nullvalue(caseinfo.PLOCSTART)\n        console.log(LIVEPLOC)\n        const PRGTXQRY = ApiProvider.getStoredProcedurePRGTXQRY(caseinfo.HISID, LIVEPLOC, caseinfo.CASEID)\n            .then(data => {\n                console.log(data.data)\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n        const transdt = caseinfo.TRANSINDT\n        const ST = moment(transdt, \"YYYYMMDD\").format(\"YYYYMMDDHHmm\")\n        const ET = moment().format(\"YYYYMMDDHHmm\")\n\n        const QPNOT = ApiProvider.getQPNOT(caseinfo.CASEID, ST, ET)\n            .then(data => {\n                const xm2 = new X2JS()\n                const source = data.data\n                const parseSource = xm2.xml2js(source).outmsg.resconts.rescont\n                return parseSource\n            })\n            .catch(err => {\n\n            })\n        const OPSORAQ1 = ApiProvider.getStoredProcedureOPSORAQ1(caseinfo.HISID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => { console.log(err) })\n        Promise.all([ADMLIST, DISLIST, DTAROTQ4, PCASELIST, PRGTXQRY, CPSLIST, QPNOT, OPSORAQ1]).then(result => {\n            console.log(result)\n            this.setState({\n                ADMLIST: result[0],\n                DISLIST: result[1],\n                DTAROTQ4: result[2],\n                PCASELIST: result[3],\n                PRGTXQRY: result[4],\n                CPSLIST: result[5],\n                QPNOT: result[6],\n                OPSORAQ1: result[7]\n            })\n        })\n    }\n\n\n\n    callbackFunction = (item_array) => {\n        console.log(item_array)\n        this.setState(\n            {\n                display_data: item_array.NoteTime,\n                context: item_array.Content,\n                contentdisplay: true\n            }\n        )\n\n    }\n    handleChange = (value) => {\n\n        console.log(`selected ${value}`);\n        this.setState({\n            SelectClass: value,\n        });\n\n    }\n    onClickSearch() {\n        if (dataRange.length !== 0) {\n            this.setState(\n                {\n                    StartTime: dataRange[0],\n                    EndTime: dataRange[1]\n\n                }\n            )\n        }\n\n    }\n    onDateChange = (date, dateString) => {\n        console.log(date, dateString);\n    }\n    NotecontrolBar() {\n        const select_data = [\n            { item: \"入院病摘\", value: 0 },\n            { item: \"出院病摘\", value: 1 },\n            { item: \"門診紀錄\", value: 2 },\n            { item: \"急診紀錄\", value: 3 },\n            { item: \"病程紀錄\", value: 4 },\n            { item: \"會診紀錄\", value: 5 },\n            { item: \"護理紀錄\", value: 6 },\n            { item: \"手術記錄\", value: 7 }\n        ]\n        const { RangePicker } = DatePicker;\n        const { Option } = Select;\n        const select_option = select_data.map((info, index) =>\n            <Option key={index} value={info.value}>{info.item}</Option>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"200px 220px 25px\", marginBottom: \"10px\" }}>\n                <Select defaultValue={0} style={{ width: 190 }} onChange={this.handleChange}>\n                    {select_option}\n                </Select>\n                {/* <RangePicker id=\"note_Range\" placeholder={[\"請輸入日期\", \"請輸入日期\"]} onChange={this.onDateChange} allowClear={false} />\n                <div onClick={() => this.onClickSearch()} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <img src={searchlogo} alt=\"searchlogo\" />\n                </div> */}\n            </div>\n        );\n    }\n\n    renderContentArray() {\n        const source = this.state.SelectClass\n        if (source === 0) {\n            const data = this.state.ADMDISP\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const fakeADMData = data\n                return fakeADMData.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{row.ADMDATA}</div>);\n\n            }\n        }\n        if (source === 1) {\n            const data = this.state.DISDISP\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const fakeADMData = data\n                return fakeADMData.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{row[\"1\"]}</div>);\n            }\n\n        }\n        if (source === 2) {\n\n            const data = this.state.DTASOAPQ\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                let textType = [];\n                let textObj = [];\n                for (var i = 0; i < data.length; i++) {\n                    console.log(data[i])\n                    //find type\n                    const type = data[i].DTSOAPTY;\n                    const lines = data[i].DTSOAPSQ;\n                    const content = data[i].DTSOAPTX;\n                    if (textType.indexOf(type) === -1) {\n                        //new type\n                        const newObj = {\n                            \"type\": type,\n                            \"lines\": lines,\n                            \"content\": content\n                        }\n                        textObj.push(newObj);\n                        textType.push(type);\n                    } else {\n                        //old type\n                        const idx = textObj.findIndex(item => item.type === type)\n                        textObj[idx].lines = lines;\n                        textObj[idx].content = textObj[idx].content + \"\\n\" + content\n                    }\n                }\n                let textResult = [];\n                for (var i = 0; i < textObj.length; i++) {\n                    textResult.push(textObj[i].type);\n                    textResult.push(textObj[i].content);\n                    textResult.push(\"\\n\");\n                }\n\n                return textResult.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{row}</div>);\n\n            }\n\n        }\n        if (source === 3) {\n            const data = this.state.ERDISP\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const fakeADMData = data\n                return fakeADMData.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{JSON.stringify(row, null, '\\t')}</div>);\n            }\n\n        }\n        if (source === 4) {\n            const data = this.state.PRGTXQRYDIS\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                var newList = []\n                console.log(data)\n                for (let index = 0; index < 5; index++) {\n                    if (index === 0) {\n                        const dataFilter = data.filter(function (info, index, arr) {\n                            return info.PRGTYPE.toString().trim() === \"D\"\n                        })\n                        if (dataFilter.length !== 0) {\n                            newList.push(dataFilter[0])\n                        }\n                    }\n\n                    if (index === 1) {\n                        const dataFilter = data.filter(function (info, index, arr) {\n                            return info.PRGTYPE.toString().trim() === \"S\"\n                        })\n                        if (dataFilter.length !== 0) {\n                            newList.push(dataFilter[0])\n                        }\n                    }\n\n                    if (index === 2) {\n                        const dataFilter = data.filter(function (info, index, arr) {\n                            return info.PRGTYPE.toString().trim() === \"O\"\n                        })\n                        if (dataFilter.length !== 0) {\n                            newList.push(dataFilter[0])\n                        }\n                    }\n\n                    if (index === 3) {\n                        const dataFilter = data.filter(function (info, index, arr) {\n                            return info.PRGTYPE.toString().trim() === \"A\"\n                        })\n                        if (dataFilter.length !== 0) {\n                            newList.push(dataFilter[0])\n                        }\n                    }\n\n                    if (index === 4) {\n                        const dataFilter = data.filter(function (info, index, arr) {\n                            return info.PRGTYPE.toString().trim() === \"P\"\n                        })\n                        if (dataFilter.length !== 0) {\n                            newList.push(dataFilter[0])\n                        }\n                    }\n\n                }\n                console.log(newList)\n                const dataMap = newList.map(function (info, index, arr) {\n                    return (\n                        <div key={index} style={{ marginBottom: \"10px\" }}>\n                            <div style={{ whiteSpace: \"pre-wrap\" }}>{info.PRGTYPE}</div>\n                            <div style={{ whiteSpace: \"pre-wrap\" }}>{info.PRGTX}</div>\n                        </div>\n                    );\n                })\n                return dataMap\n            }\n\n        }\n        if (source === 5) {\n            const data = this.state.CPSDISP\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const fakeADMData = data\n                return fakeADMData.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{row[\"1\"]}</div>);\n            }\n\n        }\n        if (source === 6) {\n            const data = this.state.QPNOTDIS\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                // Time: moment(v.rec_dat.toString() + v.rec_tim.toString(), \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\"),\n                // special: v.special,\n                // a: v.cre_nam,\n                // b: v.pro_not\n                const fakeADMData = data.map(function (info, index, arr) {\n                    const time = info.Time\n                    const cre_nam = info.cre_nam\n                    const pro_not = info.pro_not\n                    return (\n                        <div style={{ marginBottom: \"10px\" }}>\n                            <div>{time}</div>\n                            <div>{cre_nam === undefined ? \"--\" : cre_nam}</div>\n                            <div>{pro_not === undefined ? \"--\" : pro_not}</div>\n                        </div>\n                    );\n                })\n                return fakeADMData\n            }\n\n        }\n        if (source === 7) {\n            const data = this.state.OPSORAQ2\n            console.log(data)\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const fakeADMData = data\n                return fakeADMData.map(row => <div style={{ whiteSpace: \"pre-wrap\" }}>{row.CONTENT}</div>);\n            }\n\n        }\n        else {\n            return null;\n\n        }\n\n\n\n    }\n    switchListRender() {\n        function groupfirstarray(arrayList) {\n            var result = arrayList.filter(function (value, index, arr) {\n                const res = arr.map(function (value, index, arr) {\n                    return moment(value.PRGDT.toString() + value.PRGTM.toString(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n                })\n                return res.indexOf(moment(value.PRGDT.toString() + value.PRGTM.toString(), \"YYYY-MM-DDHH:mm:ss\").valueOf()) === index;\n            });\n            var arrList = []\n            for (let index = 0; index < result.length; index++) {\n                const element = result[index];\n                const comparevalue = moment(element.PRGDT.toString() + element.PRGTM.toString(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n                const filterarray = arrayList.filter(function (value, index, arr) {\n                    return moment(value.PRGDT.toString() + value.PRGTM.toString(), \"YYYY-MM-DDHH:mm:ss\").valueOf() === comparevalue\n                })\n                arrList.push(filterarray)\n            }\n            return arrList\n        }\n        function grouparray(arrayList) {\n            var result = arrayList.filter(function (value, index, arr) {\n                const res = arr.map(function (value, index, arr) {\n                    return moment(value.rec_dat.toString(), \"YYYYMMDD\").valueOf()\n                })\n                return res.indexOf(moment(value.rec_dat.toString(), \"YYYYMMDD\").valueOf()) === index;\n            });\n            var arrList = []\n            for (let index = 0; index < result.length; index++) {\n                const element = result[index];\n                const comparevalue = moment(element.rec_dat.toString(), \"YYYYMMDD\").valueOf()\n                const filterarray = arrayList.filter(function (value, index, arr) {\n                    return moment(value.rec_dat.toString(), \"YYYYMMDD\").valueOf() === comparevalue\n                })\n                arrList.push(filterarray)\n            }\n            return arrList\n        }\n        const select = this.state.SelectClass\n        if (select === 0) {\n            const data = this.state.ADMLIST\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    const HID = object.ADISTNO.toString().trim()\n                    const CID = object.ADICASE.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", cursor: \"pointer\", textAlign: \"center\" }} onClick={() => this.SelectADMDISP(HID, CID)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.ADIDATE.toString().trim(), \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</div>\n                            <div style={{ fontSize: \"14px\" }}>{object.ADICASE}</div>\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 1) {\n            const data = this.state.DISLIST\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    const CID = object.DCASENO.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\" }} onClick={() => this.SelectDISDISP(CID)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.DDATEIN.toString().trim(), \"YYYY-MM-DD\").format(\"YYYY/MM/DD\")}</div>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.DDATEOUT.toString().trim(), \"YYYY-MM-DD\").format(\"YYYY/MM/DD\")}</div>\n                            {/* <div style={{ fontSize: \"14px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 2) {\n            const data = this.state.DTAROTQ4\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    const DPT = object.DTPDEPT.toString().trim()\n                    const DTPDATE = object.DTPDATE.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\" }} onClick={() => this.SelectDTASOAPQ(DTPDATE, DPT)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.DTPDATE.toString().trim(), \"YYYY-MM-DD\").format(\"YYYY/MM/DD\")}</div>\n                            <div style={{ fontSize: \"14px\" }}>{object.DTPTIME.toString().trim()}</div>\n                            <div style={{ fontSize: \"14px\" }}>{object.DTPDEPT.toString().trim()}</div>\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 3) {\n            const data = this.state.PCASELIST\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    const CID = object.PCASENO.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\" }} onClick={() => this.SelectERDISP(CID)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.PDISDT.toString().trim(), \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</div>\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 4) {\n            const data = groupfirstarray(this.state.PRGTXQRY)\n            console.log(data)\n            // const data = groupfirstarray(PR.data)\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const List = data.map(function (info, index, arr) {\n                    const mapList = info.map(function (v, i, a) {\n                        return {\n                            PRGTX: v.PRGTX,\n                            PRGTYPE: v.PRGTYPE\n                        }\n                    })\n                    return {\n                        List: mapList,\n                        DT: info[0].PRGDT,\n                        TN: info[0].PRGTM\n                    }\n                })\n                const cellRander = List.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\" }} onClick={() => this.SelectPRGTXQRYDIS(object.List)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.DT.toString() + object.TN.toString(), \"YYYY-MM-DD HH:mm:ss\").format(\"MM/DD HH:mm\")}</div>\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 5) {\n            const data = this.state.CPSLIST\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    const CID = object.CPSCASE.toString().trim()\n                    const SEQ = object.CPSOSEQ.toString().trim()\n                    const HID = object.CPSHIST.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\" }} onClick={() => this.SelectCPSDISP(HID, CID, SEQ)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.CPSENTDT.toString().trim(), \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</div>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.CPSENTTM.toString().trim(), \"HHmm\").format(\"HH:mm\")}</div>\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 6) {\n            const data = this.state.QPNOT\n            const List = grouparray(data)\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const mapList = List.map(function (info, index, arr) {\n                    console.log(info)\n                    const mapList = info.map(function (v, i, a) {\n                        return {\n                            Time: moment(v.rec_dat.toString() + v.rec_tim.toString(), \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\"),\n                            cre_nam: v.cre_nam,\n                            pro_not: v.pro_not\n                        }\n                    })\n                    return {\n                        List: mapList,\n                        DT: info[0].rec_dat.toString().trim()\n                    }\n                })\n                const cellRander = mapList.map((object, index, arr) => {\n                    console.log(object)\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\" }} onClick={() => this.SelectQPNOTDIS(object.List)}>\n                            <div style={{ fontSize: \"14px\" }}>{moment(object.DT, \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</div>\n                            {/* 檢查 */}\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n        if (select === 7) {\n            const data = this.state.OPSORAQ1\n            if (data.length === 0) {\n                return null\n            }\n            else {\n                const cellRander = data.map((object, index, arr) => {\n                    // const HID = object.ADISTNO.toString().trim()\n                    // const DIS1 = object\n                    const OPABGNDT = object.OPABGNDT.toString().trim()\n                    const OPACOD1 = object.OPACOD1.toString().trim()\n                    const OPAMANNM = object.OPAMANNM.toString().trim()\n                    const OPATIMES = object.OPATIMES.toString().trim()\n                    return (\n                        <div key={index} style={{ padding: \"5px 10px\", border: \"1px solid #cccccc\", marginTop: \"5px\" }} onClick={() => this.SelectOPSORAQ1(OPABGNDT, OPATIMES)}>\n                            <div style={{ fontSize: \"14px\" }}>{OPABGNDT}</div>\n                            <div style={{ fontSize: \"14px\" }}>{OPACOD1}</div>\n                            <div style={{ fontSize: \"14px\" }}>{OPAMANNM}</div>\n                            {/* 檢查 */}\n                            {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n                        </div>\n                    );\n                })\n                return (\n                    // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n                    <div>{cellRander}</div>\n                );\n            }\n        }\n    }\n    render() {\n        const control = this.NotecontrolBar()\n        const renderContentArray = this.renderContentArray()\n        const listRender = this.switchListRender()\n        return (\n            <div className='Notelayout'>\n                {control}\n                <div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 7fr\", gridGap: \"10px\" }}>\n                        <div>\n                            <div style={{ backgroundColor: \"#e2edf3\", height: \"50px\", padding: '15px' }}>開立日期</div>\n                            <div style={{ padding: \"10px\", maxHeight: '700px', overflow: \"auto\" }}>\n                                {listRender}\n                            </div>\n                        </div>\n                        <div style={{ overflow: \"auto\" }}>\n                            <div style={{ backgroundColor: \"#e2edf3\", height: \"50px\", padding: '15px' }}>內容</div>\n                            <div style={{ maxHeight: '700px', overflow: \"auto\" }}>\n                                {renderContentArray}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Noteview;","import React, { Component } from 'react';\nimport { Button } from 'antd'\nimport Notecell from './Notecell'\n\nclass Notelist extends Component {\n    state = {\n        display: true\n    }\n    callbackFunction = (item_array) => {\n        console.log(item_array)\n        this.sendData(item_array)\n \n    }\n\n    sendData(info) {\n        console.log(info)\n        this.props.parentCallback(info);\n    }\n\n    Date_format(startTime, interval) {\n        var array = []\n        for (let index = 0; index < interval + 1; index++) {\n            const element = startTime + (index * 24 * 60 * 60 * 1000)\n            array.push(element)\n        }\n        console.log(array)\n        return array\n    }\n\n    render() {\n        const { start, End,note_data,display_data } = this.props\n        const startTime = new Date(start).getTime() - (8 * 60 * 60 * 1000)\n        const endTime = new Date(End).getTime() - (8 * 60 * 60 * 1000)\n        const interval = (endTime - startTime) / (1000 * 60 * 60 * 24)\n        var arraydata\n        var date_item\n        if (interval === 0) {\n            arraydata = null\n        }\n        else {\n            arraydata = this.Date_format(startTime, interval)\n            date_item = arraydata.map((info, index) =>\n                <Notecell display_date={display_data} parentCallback={this.callbackFunction}  rowdata={note_data} key={index} infoDate={info}></Notecell>\n            )\n        }\n        \n        return (\n            <div style={{ maxHeight: '60vh', overflowY: 'auto' }}>\n                {date_item}\n            </div>\n        );\n    }\n}\n\nexport default Notelist","import React, { Component } from 'react';\nimport { DatePicker, Button } from 'antd';\nimport GAS from '../CrossSectionView/GAS'\nimport RTbreathe from '../CrossSectionView/RTbreathe'\nimport './RTview.scss'\nimport X2JS from 'x2js';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass RTview extends Component {\n    state = {\n        QSPE: [],\n        PickerDateRange: [moment(moment().subtract(6, 'days').format('YYYYMMDD')),\n        moment(moment().format('YYYYMMDD'))],\n    }\n    // componentDidMount() {\n    //     this.API_DATA(this.state.PickerDate)\n    // }\n    // API_DATA(Datetime) {\n    //     const xm2 = new X2JS()\n    //     const { caseinfo } = this.props\n    //     const st = moment(Datetime + (7 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n    //     const et = moment(Datetime + (31 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n    //     ApiProvider.getQSPE(caseinfo.CASEID, st, et)\n    //         .then(data => {\n    //             console.log(xm2.xml2js(data.data).outmsg.resconts.rescont)\n    //             const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n    //             console.log(parsedata)\n    //             if (Array.isArray(parsedata)) {\n    //                 this.setState({\n    //                     QSPE: parsedata\n    //                 })\n    //             }\n    //             else {\n    //                 const arr = []\n    //                 arr.push(parsedata)\n    //                 this.setState({\n    //                     QSPE: arr\n    //                 })\n    //             }\n    //         })\n    //         .catch(err => {\n    //             console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n    //         });\n    // }\n\n    PickerDateRangeChange = (date, dateString) => {\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDateRange } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const st = PickerDateRange[0].valueOf()\n        const et = PickerDateRange[1].valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                if (bronDate <= (st - day)) {\n                    const bTime = [moment(moment(st - day).format('YYYYMMDD')), moment(moment(et - day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(bTime)\n                }\n                break;\n            case 'N':\n                const nTime = [moment(moment().subtract(6, 'days').format('YYYYMMDD')), moment(moment().format('YYYYMMDD'))]\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                if (aTemp >= (et + day)) {\n                    const aTime = [moment(moment(st + day).format('YYYYMMDD')), moment(moment(et + day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(aTime)\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const { RangePicker } = DatePicker\n        const momentDate = this.state.PickerDateRange\n\n        const PickerDateRange = [momentDate[0].valueOf(), momentDate[1].valueOf()]\n\n        return (\n            <div className='rtviewlayout'>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"250px 120px\", gridColumnGap: \"5px\", marginBottom: \"5px\" }}>\n                    <RangePicker\n                        value={this.state.PickerDateRange}\n                        format={\"YYYY/MM/DD\"}\n                        allowClear={false}\n                        locale={\"zh_TW\"}\n                        onChange={this.PickerDateRangeChange}\n                        disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                    />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: '1fr 1fr', gridColumnGap: \"5px\" }}>\n                    <GAS PickerDateRange={PickerDateRange} caseinfo={caseinfo} searchbar={true} ></GAS>\n                    <RTbreathe PickerDateRange={PickerDateRange} caseinfo={caseinfo} searchbar={true} ></RTbreathe>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTview\n","import React, { Component } from 'react'\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Nurtionfeedingcell.scss'\nimport { yyyymmddformat } from '../../Function/Timeformat'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Nurtionfeedingcell extends Component {\n    state = {\n        EditMode: false,\n        onEdit: false,\n        remark: this.props.data.FeedingOrderRemarks,\n        powerLogin: 0,\n        remark: '',\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { caseinfo, data } = this.props\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, data.ORDSEQNO, \"nurtionfeeding\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    onMouseEnter() {\n        this.setState(\n            {\n                EditMode: true\n            }\n        )\n    }\n    onMouseLeave() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    showModal = () => {\n        this.setState({\n            onEdit: true,\n        });\n    };\n\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    Moduledisplay(PName, ST) {\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": PName,\n            \"remarkId\": this.props.data.ORDSEQNO,\n            \"remark\": this.state.remark,\n            \"transinId\": this.props.caseinfo.TRANSINID,\n            \"type\": \"nurtionfeeding\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n        );\n    }\n\n    render() {\n        const { data } = this.props\n        console.log(data)\n        const startTime = moment(data.ORBGNDT.toString().trim(), \"YYYY-MM-DD\").format(\"MM/DD\")\n        const endTime = moment(data.ORENDDT.toString().trim(), \"YYYY-MM-DD\").format(\"MM/DD\")\n        const name = data.ORPROCED.toString().trim()\n\n        console.log(this.state.remark)\n\n        return (\n            <div onMouseEnter={() => this.onMouseEnter()} onMouseLeave={() => this.onMouseLeave()} style={{ position: \"relative\", height: \"100px\" }}>\n                <div className='nurtionfeedingcell' style={{ gridTemplateRows: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"1fr\" : \"1fr 1fr\"] }}>\n                    <div className='cellforstate'>\n                        <div className='celllayout'>\n                            <t3>{startTime}</t3>\n                        </div>\n                        <div className='celllayout'>\n                            <t3>{endTime}</t3>\n                        </div>\n                        <div className='celllayout'>\n                            <t3>{name}</t3>\n                        </div>\n                    </div>\n                    <div className='cellforremark' style={{ display: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"none\" : \"\"] }}>\n                        <t3>{this.state.remark}</t3>\n                    </div>\n                </div>\n                <div style={this.state.EditMode ? {\n                    display: this.state.powerLogin >= 2 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", top: 0, right: 0, height: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"50px\" : \"100px\"], background: \"white\", width: \"77px\", border: \"rgba(232, 232, 232, 1) 1px solid\"\n                } : { display: \"none\" }}>\n                    < div onClick={() => this.showModal()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }} >\n                        <img src={chooseedit} alt='chooseedit'></img>\n                    </div>\n                </div>\n                {this.Moduledisplay(name, startTime)}\n            </div >\n        );\n    }\n}\n\nexport default Nurtionfeedingcell\n","import React, { Component } from 'react'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport { DatePicker, Input } from 'antd';\nimport searchlogo from '../../Image/svg/Search.svg'\nimport Nurtionfeedingcell from './Nurtionfeedingcell'\nimport moment from 'moment';\nimport * as ApiGithub from '../../API/ApiGithub'\n\n\nclass Nurtionfeedingorder extends Component {\n    state = {\n        TRTMNTQ1: [],\n        parser: { \"mappings\": [] },\n        class: \"飲食類別\"\n    }\n    componentDidMount() {\n        this.getAPIFeedingData()\n        this.getTreatmentOrderFilter()\n    }\n    getAPIFeedingData() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID.toString().trim()\n        const CID = caseinfo.CASEID.toString().trim()\n        ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => {\n                console.log(\"getAPIFeedingData OK \" + JSON.stringify(data.data))\n                this.setState({\n                    TRTMNTQ1: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n    }\n    getTreatmentOrderFilter() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Treatment\");\n                parser.mappings = [{ \"key\": \"全部\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson Treatment OK \" + JSON.stringify(parser))\n                this.setState({\n                    parser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部\"] = []\n\n        inputs.forEach(input => {\n            let content = input.ORPROCED;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部\"].push(input)\n        });\n        return allResult;\n    }\n\n    render() {\n        const { caseinfo, PickerDateRange } = this.props\n        const title = [\"開始時間\", \"結束時間\", \"處置名稱\"]\n        const titleCellRender = title.map(function (element, index, arr) {\n            return (\n                <div key={index} style={{ padding: \"0px 10px\", display: \"flex\", alignItems: \"center\" }}>\n                    <div style={{ fontSize: \"14px\" }}>{element}</div>\n                </div>\n            );\n        })\n\n        const parse = this.parse;\n        let clusteredData = {}\n        if (this.state.parser !== undefined) {\n            clusteredData = parse(this.state.TRTMNTQ1, this.state.parser)\n        }\n        //filter data by selected class\n        let filteredData = clusteredData[this.state.class];\n        // console.log(`filteredData : ${JSON.stringify(filteredData)} , filteredData type : ${typeof (filteredData)}`)\n        let filterData = []\n        if (filteredData !== undefined) {\n            const ListCellData = filteredData\n            filterData = ListCellData.filter((element, index, arr) => {\n                const time = moment(element.ORBGNDT, 'YYYY-MM-DD').valueOf()\n                return PickerDateRange[0] <= time && time <= PickerDateRange[1]\n            })\n        }\n\n        const DataCellRender = filterData.map(function (element, index, arr) {\n            return (\n                <Nurtionfeedingcell key={index} data={element} caseinfo={caseinfo} ></Nurtionfeedingcell>\n            );\n        })\n\n        return (\n            <div>\n                <t1>Feeding Order</t1>\n                <div style={{ display: \"grid\", gridTemplateColumns: \" 1fr 1fr 2fr \", background: \"#cccccc\", height: \"50px\", marginTop: \"10px\" }}>\n                    {titleCellRender}\n                </div>\n                {filterData.length !== 0 && <div style={{ minHeight: \"120px\", maxHeight: \"400px\", overflowY: \"auto\" }}>\n                    {DataCellRender}\n                </div>}\n                {filterData.length === 0 && <div>今日無資料</div>}\n            </div>\n        );\n    }\n}\n\nexport default Nurtionfeedingorder\n","import React, { Component } from 'react'\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Nurtion_TPN_cell.scss'\nimport moment from 'moment'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Nurtiontpncell extends Component {\n    state = {\n        EditMode: false,\n        onEdit: false,\n        remark: null,\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { caseinfo, data } = this.props\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, data.UDORDSEQ, \"nurtiontpn\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    onMouseEnter() {\n        this.setState(\n            {\n                EditMode: true\n            }\n        )\n    }\n    onMouseLeave() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    showModal = () => {\n        this.setState({\n            onEdit: true,\n        });\n    };\n\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    Moduledisplay(PName, ST) {\n\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": PName,\n            \"remarkId\": this.props.data.UDORDSEQ,\n            \"remark\": this.state.remark,\n            \"transinId\": this.props.caseinfo.TRANSINID,\n            \"type\": \"nurtiontpn\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            // <RemarkModal caseinfo={caseinfo} type=\"nurtiontpn\" name={title} visible={this.state.onEdit} remark={this.state.remark} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n        );\n    }\n    render() {\n        const { data } = this.props\n        const TPNList = [\"VOL.\", \"AA\", \"Glu\", \"Na\", \"K\", \"Ca\", \"P\", \"Mg\"]\n        const TPNListcellRender = TPNList.map(function (info, index) {\n            return (\n                <centerstyle key={index} style={{ border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                    <t2>{info}</t2>\n                </centerstyle>\n            );\n        })\n        const TPNSubData = [data.UDDOSAGE, data.TPNDATA.AA, data.TPNDATA.Glu, data.TPNDATA.Na, data.TPNDATA.K, data.TPNDATA.Ca, data.TPNDATA.P, data.TPNDATA.Mg]\n        const TPNSubDatacellRender = TPNSubData.map(function (info, index) {\n            return (\n                <centerstyle key={index} style={{ border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                    <t2>{info}</t2>\n                </centerstyle>\n            );\n        })\n        const RemarkData = this.state.remark\n        function RemarkNull(value) {\n            // console.log(value)\n            if (value === null || value === undefined || value === \"\") {\n                return \"none\"\n            }\n            return \"flex\"\n        }\n        function RemarkNullheight(value) {\n            // console.log(value)\n            if (value === null || value === undefined || value === \"\") {\n                return \"90px\"\n            }\n            return \"120px\"\n        }\n        // function statusstate(st, et, pt) {\n\n        // }\n        const startTime = moment(data.UDBGNDT.toString().trim(), \"YYYY-MM-DD-HH.mm.ss.00.000000\").format(\"MM/DD HH:mm:ss\")\n        const endTime = moment(data.UDENDDT.toString().trim(), \"YYYY-MM-DD-HH.mm.ss.00.000000\").format(\"MM/DD HH:mm:ss\")\n        const name = data.UDGNAME.toString().trim()\n        const status = \"生效中\"\n        return (\n            <div onMouseEnter={() => this.onMouseEnter()} onMouseLeave={() => this.onMouseLeave()} className='nurtiontpntablelayout'>\n                <div style={{ height: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"100px\" : \"130px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \" 1fr 1fr 60px 450px\", height: \"100px\" }} >\n                        <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                            <t3>{startTime}</t3>\n                        </div>\n                        <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                            <t3>{endTime}</t3>\n                        </div>\n                        <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                            <t3>{status}</t3>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"30px 70px\" }}>\n                            <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                                <t3>{name}</t3>\n                            </div>\n                            <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(8,1fr)\" }}>\n                                    {TPNListcellRender}\n                                </div>\n                                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(8,1fr)\" }}>\n                                    {TPNSubDatacellRender}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ display: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"none\" : \"block\"], border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\", padding: \"0px 5px\", alignItems: \"center\", height: \"30px\", width: \"100%\" }}>\n                        <t3>{RemarkData}</t3>\n                    </div>\n                </div>\n                <div style={this.state.EditMode ? {\n                    display: this.state.powerLogin >= 2 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", top: 0, right: 0, height: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"100px\" : \"130px\"], background: \"white\", width: \"77px\", border: \"rgba(232, 232, 232, 1) 1px solid\"\n                } : { display: \"none\" }}>\n                    < div onClick={() => this.showModal()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }} >\n                        <img src={chooseedit} alt='chooseedit'></img>\n                    </div>\n                </div>\n                {this.Moduledisplay(name, startTime)}\n            </div>\n        );\n    }\n}\n\nexport default Nurtiontpncell\n","import React, { Component } from 'react'\nimport { DatePicker, Input } from 'antd';\nimport searchlogo from '../../Image/svg/Search.svg'\nimport Nurtiontpncell from './Nurtion_TPN_cell'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as ApiGithub from '../../API/ApiGithub'\n\nclass Nurtiontpnorder extends Component {\n    state = {\n        onEdit: false,\n        tpndata: [],\n        UDORDER0: [],\n        tpnParsers: []\n    }\n    componentDidMount() {\n        const getAPITPNData = this.getAPITPNData.bind(this)\n        ApiGithub.getGitHubJson(\"TpnOrder.json\")\n            .then(data => {\n                let parser = data.data\n                console.log(\"getGitHubJson TPN Order OK \" + JSON.stringify(parser))\n                this.setState({\n                    tpnParsers: parser\n                }, () => {\n                    getAPITPNData()\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n    }\n    getAPITPNData() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID.toString().trim()\n        const CID = caseinfo.CASEID.toString().trim()\n        const { tpnParsers } = this.state\n        // console.log(HID, CID)\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                //const fakeData = [{\"UDDCPRSN\":\"DOC3941E\",\"UDDURAT\":\"007\",\"UDSUMQTY\":\"55\",\"UDDRGNAM\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDGNAME\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-14-09.17.00.000000\",\"UDDCPNAM\":\"何正尹　　\",\"UDDOSAGE\":\"55      \",\"UDORDSEQ\":\"0043\",\"UDBGNDT\":\"2019-08-13-08.50.00.000000\",\"UDDRGNO\":\"02145\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\"                                                                                                    \",\"UDDUNIT\":\"CC    \",\"UDROUTE\":\"IVD\",\"UDRPNAME\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDFREQN\":\"QD-TPN  \"},{\"UDDCPRSN\":\"DOC3964C\",\"UDDURAT\":\"014\",\"UDSUMQTY\":\"7\",\"UDDRGNAM\":\"Peditrace \\\"TPN\\\" sol for inj 10ml\",\"UDGNAME\":\"Peditrace \\\"TPN\\\" sol for inj 10ml\",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-20-10.22.00.000000\",\"UDDCPNAM\":\"李成彧　　\",\"UDDOSAGE\":\"1       \",\"UDORDSEQ\":\"0044\",\"UDBGNDT\":\"2019-08-13-08.50.00.000000\",\"UDDRGNO\":\"05208\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\"                                                                                                    \",\"UDDUNIT\":\"AMP   \",\"UDROUTE\":\"MSC\",\"UDRPNAME\":\"Peditrace \\\"TPN\\\" sol for inj 10ml\",\"UDFREQN\":\"QD-TPN  \"},{\"UDDCPRSN\":\"        \",\"UDDURAT\":\"001\",\"UDSUMQTY\":\"1\",\"UDDRGNAM\":\"Immunoglobulin *inj 60mg/ml 50ml\",\"UDGNAME\":\"Immunoglobulin *inj 60mg/ml 50ml\",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"Y\",\"UDSTATUS\":\"60\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-14-15.00.00.000000\",\"UDDCPNAM\":\"　　　　　\",\"UDDOSAGE\":\"1       \",\"UDORDSEQ\":\"0045\",\"UDBGNDT\":\"2019-08-13-15.17.00.000000\",\"UDDRGNO\":\"03852\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"BOT   \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"HM.imm.globulin *inj60mg/ml 50ml\",\"UDFREQN\":\"ST      \"},{\"UDDCPRSN\":\"DOC3941E\",\"UDDURAT\":\"007\",\"UDSUMQTY\":\"110\",\"UDDRGNAM\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDGNAME\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-16-10.44.00.000000\",\"UDDCPNAM\":\"何正尹　　\",\"UDDOSAGE\":\"55      \",\"UDORDSEQ\":\"0055\",\"UDBGNDT\":\"2019-08-14-09.17.00.000000\",\"UDDRGNO\":\"02145\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\"                                                                                                    \",\"UDDUNIT\":\"CC    \",\"UDROUTE\":\"IVD\",\"UDRPNAME\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDFREQN\":\"QD-TPN  \"}]\n\n                //create list need to do search\n                let tpnList = [] // All TPN data\n                let selected_parser = undefined\n                //fakeData.forEach(item => {\n                data.data.forEach(item => {\n                    //get parser\n                    selected_parser = this.select_parser(item, tpnParsers)\n                    if (selected_parser !== undefined) {\n                        const found = item.UDDRGNAM.match(RegExp(selected_parser.apply_condition.name, selected_parser.apply_condition.name_regex_flags))\n                        if (found !== null && found !== \"\") tpnList.push(item)\n                    }\n                });\n\n                console.log(\"tpnList\" + JSON.stringify(tpnList))\n                if (selected_parser !== undefined) {\n                    //parser 7 value from each TPN document （AA, Glu, Na, K, Ca, P, Mg）\n                    tpnList.forEach((item, index) => {\n                        ApiProvider.getStoredProcedureUDTEXTQ1(CID, item.UDORDSEQ)\n                            .then(data => {\n                                console.log(\"getStoredProcedureUDTEXTQ1 OK \" + JSON.stringify(data.data))\n\n                                //parse every line\n                                const result = this.parse(data.data, selected_parser)\n                                item.TPNDATA = result;\n                                //console.log(\"parse result: \" + JSON.stringify(item))\n                                tpnList.splice(index, 1, item)\n                                this.setState({\n                                    tpndata: tpnList\n                                })\n                            })\n                            .catch(err => {\n                                console.log(\"getStoredProcedureUDTEXTQ1 NG \" + err)\n                            });\n                    });\n                }\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureUDORDER0 NG \" + err)\n            });\n    }\n    select_parser = (input, parsers) => {\n        const inputBeginTime = moment(input.UDBGNDT, \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n        const inputEndTime = moment(input.UDENDDT, \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n        return parsers.find(x =>\n            input.UDDRGNAM.match(x.apply_condition.name)\n            && (!x.apply_condition.start_time || inputBeginTime >= x.apply_condition.start_time)\n            && (!x.apply_condition.end_time || inputEndTime < x.apply_condition.end_time)\n        )\n    }\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = \"\"\n        });\n\n        inputs.forEach(input => {\n            let content = input.UDWORD;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key] = match[mapping.position]\n                }\n            });\n        });\n        return allResult;\n    }\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    render() {\n        const { caseinfo, PickerDateRange } = this.props\n        const title = [\"開始時間\", \"結束時間\", \"狀態\", \"處置名稱\"]\n        const titilecell = title.map(function (info, index) {\n            return (\n                <div key={index} style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t4>{info}</t4>\n                </div>\n            );\n        })\n        const ListCellData = this.state.tpndata\n        const filterData = ListCellData.filter((element, index, arr) => {\n            const time = moment(moment(element.UDBGNDT, 'YYYY-MM-DD-HH.mm.ss.000000').format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n            return PickerDateRange[0] <= time && time <= PickerDateRange[1]\n        })\n        const DataCellRender = filterData.map(function (element, index, arr) {\n            return (\n                <Nurtiontpncell key={index} data={element} caseinfo={caseinfo} ></Nurtiontpncell>\n            );\n        })\n\n        return (\n            <div>\n                <t1>TPN order</t1>\n                <div style={{ display: \"grid\", gridTemplateColumns: \" 1fr 1fr 60px 450px\", background: \"#cccccc\", height: \"50px\", marginTop: \"10px\" }}>\n                    {titilecell}\n                </div>\n                <div style={{ minHeight: \"120px\", maxHeight: \"400px\", overflowY: \"auto\" }}>\n                    {DataCellRender}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Nurtiontpnorder\n","import React, { Component } from 'react'\nimport * as d3 from \"d3\";\nimport './Watervaluechart.scss'\nimport { Modal } from 'antd'\nimport { getRandomfornumber } from '../../Function/Wardstate'\nimport moment from 'moment';\n\nclass Watervaluechart extends Component {\n    state = {\n        visible: false,\n        select: null,\n        rowdata: null\n    };\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: true,\n            select: null,\n            rowdata: null\n        });\n    };\n    componentDidUpdate() {\n        const { svg_key } = this.props\n        d3.select(\"#\" + svg_key).remove()\n        this.drawChart()\n\n    }\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentWillUnmount() {\n    }\n\n    cal_svg_hight() {\n        const { axisTop, axisBot } = this.props\n        if (axisTop) {\n            if (axisBot) {\n                return 160\n            }\n            else {\n                return 130\n            }\n        }\n        else {\n            if (axisBot) {\n                return 130\n            }\n            else {\n                return 90\n            }\n        }\n    }\n\n    cal_svg_transform() {\n        const { axisTop, axisBot } = this.props\n        console.log(axisTop)\n        if (axisTop) {\n            if (axisBot) {\n                return 70\n            }\n            else {\n                return 50\n            }\n        }\n        else {\n            if (axisBot) {\n                return 5\n            }\n            else {\n                return 5\n            }\n        }\n    }\n\n    drawChart() {\n        function formatShiftDays(startTime, endTime) {\n            const shiftDays = parseInt((endTime - startTime) / (24 * 60 * 60 * 1000))\n            return shiftDays\n        }\n        const { svg_key, id_key, startTime, watervalueData } = this.props\n        const width = (window.screen.availWidth - 50) / 2 - 50, height = 400\n        const max = 500, min = 0\n        const shiftDays = formatShiftDays(moment(startTime, \"YYYYMMDD\").valueOf(), moment().valueOf())\n\n        if (watervalueData.length === 0) {\n            return null\n        }\n        const rectwidth = (width / shiftDays) - 2\n        var x = d3.scaleLinear()\n            .domain([0, watervalueData.length])\n            .range([0, width]);\n\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([min, max])\n            .range([height, 0])\n\n\n\n        var yAxis = d3.axisLeft(y)\n            .ticks(11)\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(10);\n\n        var xAxisBottom = d3.axisBottom(x)\n            .ticks(watervalueData.length)\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(height + 10)\n            .tickFormat(function (d) {\n                if (d % 10 === 0) {\n                    if (d > 0) {\n                        return 'D' + d\n                    }\n                    return null\n                }\n                else return null;\n            });\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_key)\n            .attr(\"viewBox\", [0, 0, width + 80, height + 50])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 30 + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n        svg.append(\"g\")\n            .call(xAxisBottom)\n            .attr(\"class\", \"axis\");\n\n\n        for (let index = 0; index < 11; index++) {\n            //上下虛線\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(index * 50))\n                .attr('x2', width)\n                .attr('y2', y(index * 50))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n        }\n\n        for (let index = 0; index < watervalueData.length; index++) {\n            //上下虛線\n            if (index % 10 === 0 && index > 0) {\n                svg.append('line')\n                    .attr('x1', x(0.5 + index))\n                    .attr('y1', y(min))\n                    .attr('x2', x(0.5 + index))\n                    .attr('y2', y(max))\n                    .style('stroke', 'rgba(187, 187, 187, 1)')\n                    .style('stroke-width', 1)\n                    .style('stroke-dasharray', 5.5);\n            }\n        }\n\n\n\n\n        function rowdatageneral(number) {\n            const rowdata = {\n                'IV': {\n                    \"max\": getRandomfornumber(number),\n                    \"min\": 0\n                },\n                'feeding': {\n                    \"max\": getRandomfornumber(number),\n                    \"min\": 0\n                },\n                'Other': {\n                    \"max\": getRandomfornumber(number),\n                    \"min\": 0\n                }\n            }\n            return rowdata\n        }\n        const select = this.state.select\n        if (select === null || select == undefined || select === \"\") {\n            d3.selectAll(\"rect#A123\").remove()\n        }\n        for (let index = 0; index < watervalueData.length; index++) {\n            const rowdata = watervalueData[index]\n            var svgrect = svg.append('g').on('click', () => {\n                if (rowdata === null) {\n\n                }\n                else {\n                    this.setState({\n                        visible: true,\n                        select: index,\n                        rowdata: rowdata\n                    });\n\n                }\n            })\n            console.log(select)\n            if (index === select) {\n                svgrect.append('rect')\n                    .attr('id', 'A123')\n                    .attr('width', rectwidth + 2)\n                    .attr('height', y(0) - y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .attr('x', x(index) - (rectwidth / 2) - 1)\n                    .attr('y', y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .style('fill', 'rgba(0,0,0,0)')\n                    .style('stroke', '#F5A623')\n                    .style('stroke-width', 2)\n                    .style('cursor', 'pointer');\n            }\n            else {\n                svgrect.append('rect')\n                    .attr('id', 'A123')\n                    .attr('width', rectwidth + 2)\n                    .attr('height', y(0) - y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .attr('x', x(index) - (rectwidth / 2) - 1)\n                    .attr('y', y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .style('fill', 'rgba(0,0,0,0)')\n                    .style('stroke', 'rgba(0,0,0,0)')\n                    .style('stroke-width', 2)\n                    .style('cursor', 'pointer')\n                    .style('opacity', 1);\n            }\n            svgrect.append('line')\n                .attr('x1', x(index))\n                .attr('y1', y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                .attr('x2', x(index))\n                .attr('y2', y(rowdata.IV + rowdata.Other))\n                .style('stroke', '#2E64A4')\n                .style('stroke-width', rectwidth)\n\n            svgrect.append('line')\n                .attr('x1', x(index))\n                .attr('y1', y(rowdata.IV + rowdata.Other))\n                .attr('x2', x(index))\n                .attr('y2', y(rowdata.Other))\n                .style('stroke', '#C3EFFF')\n                .style('stroke-width', rectwidth)\n\n\n            svgrect.append('line')\n                .attr('x1', x(index))\n                .attr('y1', y(rowdata.Other))\n                .attr('x2', x(index))\n                .attr('y2', y(0))\n                .style('stroke', '#3B97E1')\n                // .style('stroke', 'red')\n                .style('stroke-width', rectwidth)\n        }\n    }\n\n    ModalRender() {\n        function nulldata(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return 0\n            }\n            return value\n        }\n        const data = this.state.rowdata\n        if (data === null || data === undefined) {\n            return null\n        }\n        function sumRowdata(data) {\n            if (data === null || data === undefined) {\n                return 0\n            }\n            return data * 0.8\n        }\n        const select = this.state.select\n        const waterdata = this.props.watervalueData\n        const car = waterdata[select].Caloriessum\n        return (\n            <Modal\n                title=\"Basic Modal\"\n                visible={this.state.visible}\n                onOk={this.handleOk}\n                onCancel={this.handleCancel}\n                footer={null}\n            >\n                <div>IV:{nulldata(data.IV)}</div>\n                <div>Feeding:{nulldata(data.Feeding)}</div>\n                <div>Other:{nulldata(data.Other)}</div>\n                <div>總熱量:{car}kcal</div>\n            </Modal>\n        );\n    }\n    render() {\n        const { id_key } = this.props\n        const model = this.ModalRender()\n        return (\n            <div id={id_key}>\n                {model}\n            </div>\n        );\n    }\n}\n\nexport default Watervaluechart","import React, { Component } from 'react'\nimport Nurtionfeedingorder from './Nurtionfeeding'\nimport { Select, Button, DatePicker, Modal } from 'antd';\nimport WardlifeChart from '../../Wardview/Wardlifechart'\nimport Wardmonthafter from '../../Wardview/Wardmonthafter'\nimport Nurtiontpnorder from './Nurtion_TPN'\nimport Watervaluechart from './Watervaluechart'\nimport { gender } from '../../Function/Wardbedfunction'\nimport X2JS from 'x2js';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\nimport * as FiliterReg from '../../Function/FiliterReg'\nimport './Nurtion.scss'\n\nclass Nurtionview extends Component {\n    state = {\n        visible: false,\n        test_items_interval: 1,\n        UDORDER0: [],\n        QDC: [],\n        QTWER: [],\n        PickerDateRange: moment(moment().format('YYYYMMDD'))\n    }\n    componentDidMount() {\n        this.API_DATA()\n    }\n    API_DATA() {\n        const { caseinfo } = this.props\n        const xm2 = new X2JS()\n        const st = moment(caseinfo.TRANSINDT.toString(), 'YYYYMMDD').format('YYYYMMDDHHmm')\n        const et = moment().format(\"YYYYMMDDHHmm\")\n        // ApiProvider.getQDC(caseinfo.CASEID, st, et)\n        ApiProvider.getQDC(caseinfo.CASEID, st, et)\n            .then(data => {\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                console.log(parsedata)\n                this.setState({\n                    QDC: parsedata\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureUDORDER0(caseinfo.HISID, caseinfo.CASEID, \"123\")\n            .then(data => {\n                this.setState({\n                    UDORDER0: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n    }\n    switch_monthy() {\n        const { caseinfo } = this.props\n        console.log(caseinfo)\n        const grewinfo = {\n            \"WEEK_BORN\": Number(caseinfo.WEEK_BORN),\n            \"DAY_BORN\": Number(caseinfo.DAY_BORN),\n            \"BIRTHDAY\": caseinfo.PBASINGNINFO.PBIRTHDT\n        }\n        const WeightList = caseinfo.WEIGHT\n        const sex = gender(caseinfo.PBASINGNINFO.PSEX)\n        const switch_data = this.state.test_items_interval\n        switch (switch_data) {\n            case 1:\n                return <WardlifeChart grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife\"} svg_key={\"wardlife_svg\"} gender={sex}></WardlifeChart>\n            case 0:\n                return <Wardmonthafter grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife_after\"} svg_key={\"wardlife_after_svg\"} gender={sex}></Wardmonthafter>\n            default:\n                return null;\n        }\n    }\n\n    handleChange = (checkedValues) => {\n        console.log('checked = ', checkedValues);\n        this.setState(\n            {\n                test_items_interval: checkedValues\n            }\n        )\n\n    }\n    onOk = (value) => {\n        console.log('onOk: ', value);\n    }\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n    WaterValueControlBar() {\n        return (\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", marginRight: \"10px\" }}>\n                    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        <div style={{ height: \"10px\", width: \"10px\", background: \"#C3EFFF\", marginRight: \"5px\" }}></div>\n                        <t3>IV</t3>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        <div style={{ height: \"10px\", width: \"10px\", background: \"#2E64A4\", marginRight: \"5px\" }}></div>\n                        <t3>Feed</t3>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        <div style={{ height: \"10px\", width: \"10px\", background: \"#3B97E1\", marginRight: \"5px\" }}></div>\n                        <t3>Other</t3>\n                    </div>\n                </div>\n                {/* <Button type=\"primary\" onClick={this.showModal}>設定營養項目</Button> */}\n            </div>\n        );\n    }\n    GrowthCurveControlBar() {\n        const { Option } = Select;\n        return (\n            <div className='titlebutton'>\n                <Select defaultValue={1} style={{ width: 120 }} onChange={this.handleChange}>\n                    <Option value={0}>滿足月</Option>\n                    <Option value={1}>不滿足月</Option>\n                </Select>\n                <Button type=\"primary\" onClick={this.showModal}>新增體重</Button>\n                <Modal\n                    title=\"手動新增體重紀錄\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                        <div style={{ display: \"flex\", alignItems: \"center\" }}>選擇時間:</div>\n                        <DatePicker id=\"nurtion_datepicker\" style={{ width: \"400px\" }} showTime placeholder=\"選擇時間\" onOk={this.onOk} />\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n    WaterValueRender() {\n        function formatTimeArray(startTime) {\n            const shiftTimer = parseInt((moment().valueOf() - moment(startTime, \"YYYYMMDD\").valueOf()) / (23 * 60 * 60 * 1000))\n            console.log(startTime, shiftTimer)\n            var TimerArray = []\n            for (let index = 0; index < shiftTimer; index++) {\n                const Time = moment(moment(startTime, \"YYYYMMDD\").valueOf() + (index * 24 * 60 * 60 * 1000)).format(\"YYYY/MM/DD\")\n                TimerArray.push(Time)\n            }\n            return TimerArray\n        }\n        const { caseinfo } = this.props\n        const QDC = this.state.QDC\n        if (QDC.length === 0) {\n            return null\n        }\n        var FeedinfData = []\n        var IVData = []\n        var OtherData = []\n        var Calories = 0\n        for (let index = 0; index < QDC.length; index++) {\n            const element = QDC[index];\n            const feedstatus = FiliterReg.Feedarea_Reg_IO().find(function (value, index, array) {\n                return element.item === value\n            })\n            if (feedstatus) {\n                FeedinfData.push(element)\n            }\n            const IVstatus = FiliterReg.IVarea_reg_IO().find(function (value, index, array) {\n                return element.item === value\n            })\n            if (IVstatus) {\n                IVData.push(element)\n            }\n            const Otherstatus = FiliterReg.Otherarea_reg_IO().find(function (value, index, array) {\n                return element.item === value\n            })\n            if (Otherstatus) {\n                const invalue = element.inp_val1\n                if (invalue !== undefined) {\n                    OtherData.push(element)\n                }\n            }\n            console.log(element)\n\n\n        }\n\n        console.log(FeedinfData)\n        console.log(IVData)\n        console.log(OtherData)\n        function sumcar(List) {\n            var Calories = 0\n            for (let index = 0; index < List.length; index++) {\n                const element = List[index];\n                if (element.item === \"進食\") {\n                    if (element.lost === \"配方奶\") {\n                        Calories = Calories + Number(element.inp_val2) * 0.8\n                    }\n                    if (element.lost === \"母奶\") {\n                        Calories = Calories + Number(element.inp_val2) * 0.7\n\n                    }\n                }\n                if (element.nam !== undefined) {\n                    if (element.nam.toString().match(\"10%TPN\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                    if (element.nam.toString().match(\"15%TPN\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34 * 1.5\n                    }\n                    if (element.nam.toString().match(\"SMOFliquid\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                    if (element.nam.toString().match(\"D10\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                    if (element.nam.toString().match(\"D12\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34 * 1.2\n                    }\n                    if (element.nam.toString().match(\"D5W\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34 * 5\n                    }\n                    if (element.nam.toString().match(\"taita\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                }\n\n            }\n            return Calories\n\n        }\n        const startTime = caseinfo.TRANSINDT.toString()\n        const TimerList = formatTimeArray(startTime)\n        var watervalueDataList = []\n        for (let index = 0; index < TimerList.length; index++) {\n            const element = TimerList[index];\n            const filterFeedind = FeedinfData.filter(function (value, index, arr) {\n                return moment(element, \"YYYY/MM/DD\").valueOf() === moment(value.rec_dat.toString().trim(), \"YYYY/MM/DD\").valueOf()\n            })\n            const filterIV = IVData.filter(function (value, index, arr) {\n                return moment(element, \"YYYY/MM/DD\").valueOf() === moment(value.rec_dat.toString().trim(), \"YYYY/MM/DD\").valueOf()\n            })\n            const filterOther = OtherData.filter(function (value, index, arr) {\n                return moment(element, \"YYYY/MM/DD\").valueOf() === moment(value.rec_dat.toString().trim(), \"YYYY/MM/DD\").valueOf()\n            })\n\n            const feedingSum = SumData2(filterFeedind)\n            const IVSum = SumData(filterIV)\n            const OtherSum = SumData(filterOther)\n\n            const Caloriessum = sumcar(filterFeedind) + sumcar(filterIV) + sumcar(filterOther)\n            watervalueDataList.push({\n                Feeding: feedingSum,\n                IV: IVSum,\n                Other: OtherSum,\n                Time: element,\n                Caloriessum\n            })\n\n        }\n        function SumData(arr) {\n            var sum = 0;\n            for (var i = 0; i < arr.length; i++) {\n                sum += Number(arr[i].inp_val1);\n            };\n            return sum;\n        }\n\n        function SumData2(arr) {\n            var sum = 0;\n            for (var i = 0; i < arr.length; i++) {\n                sum += Number(arr[i].inp_val2);\n            };\n            return sum;\n        }\n\n\n        console.log(watervalueDataList)\n        return (\n            <Watervaluechart Calories={Calories} watervalueData={watervalueDataList} startTime={caseinfo.TRANSINDT} id_key={\"water_id\"} svg_key={\"water_svg\"} caseiddays='2019/11/11'></Watervaluechart>\n        );\n    }\n\n    PickerDateRangeChange = (date, dateString) => {\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const PickerDate = this.state.PickerDateRange.valueOf()\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const bTemp = bTime - (6 * day)\n                bronDate <= bTemp && this.PickerDateRangeChange(moment(bTime))\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD'))\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= aTemp && this.PickerDateRangeChange(moment(aTime))\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const GrowthCurve = this.switch_monthy()\n        const GrowthCurveControl = this.GrowthCurveControlBar()\n        const WaterValueControl = this.WaterValueControlBar()\n        const tpndata = this.state.UDORDER0\n        const feeddata = this.state.TRTMNTQ1\n        const TimeStampPickerDate = this.state.PickerDateRange.valueOf()\n        const { caseinfo } = this.props\n\n        if (tpndata.length === 0 || feeddata === 0) {\n            return null\n        }\n\n        const waterRender = this.WaterValueRender()\n        const PickerDateRange = [TimeStampPickerDate - (6 * 24 * 60 * 60 * 1000), TimeStampPickerDate]\n\n        return (\n            <div className='nurtionheight'>\n                <div className='nurtionlayout'>\n                    <div>\n                        <div className='nurtioncomponmentboxtitle'>\n                            <t1>生長曲線圖</t1>\n                            {GrowthCurveControl}\n                        </div>\n                        <div className='nurtioncomponmentboxcontent'>{GrowthCurve}</div>\n                    </div>\n                    <div>\n                        <div className='nurtioncomponmentboxtitle'>\n                            <t1>水量表</t1>\n                            <div className='titlebutton'>\n                                {WaterValueControl}\n                            </div>\n                        </div>\n                        <div className='nurtioncomponmentboxcontent'>\n                            {waterRender}\n                        </div>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"250px 120px\", gridColumnGap: \"5px\", margin: \"10px 0px 5px 0px\" }}>\n                    <DatePicker\n                        value={this.state.PickerDateRange}\n                        format={\"YYYY/MM/DD\"}\n                        allowClear={false}\n                        locale={\"zh_TW\"}\n                        onChange={this.PickerDateRangeChange}\n                    />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: '1fr 1fr', gridColumnGap: \"10px\", marginBottom: \"20px\" }}>\n                    <Nurtionfeedingorder PickerDateRange={PickerDateRange} caseinfo={caseinfo}></Nurtionfeedingorder>\n                    <Nurtiontpnorder PickerDateRange={PickerDateRange} caseinfo={caseinfo}></Nurtiontpnorder>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Nurtionview\n","import React, { Component } from 'react'\nimport './Infectionlabtable.scss'\nimport { chronicladdataoneday, chroniclabdatathird } from '../../Data/Wardviewdata'\nimport { arraychange } from '../../Function/Wardstate'\n\nclass Infectionlabtable extends Component {\n    switch_state() {\n        const chronic_state = 2\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 18\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    table_content() {\n        function FormatList(Datalist, st) {\n            var Render = []\n            for (let index = 0; index < 21; index++) {\n                const start = st + (index * 8 * 60 * 60 * 1000)\n                const end = st + ((index + 1) * 8 * 60 * 60 * 1000)\n                const FilterData = Datalist.filter(function (value, index, arr) {\n                    return value.Time > start && value.Time < end\n                })\n                var sum = 0\n                console.log(FilterData)\n                for (let index = 0; index < FilterData.length; index++) {\n                    const element = FilterData[index];\n                    sum = sum + Number(element.Data)\n                }\n                Render.push(sum)\n            }\n            return Render\n        }\n        function CellRander(List) {\n            const cellR = List.map(function (info, index) {\n                return (\n                    <centerstyle style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }} key={index}>\n                        <t2>{info}</t2>\n                    </centerstyle>\n                );\n            })\n            return cellR\n        }\n        const { PickerDate, WBCList, BandList, SegList, LymList, PCTList, CRPList, title } = this.props\n        console.log(PickerDate)\n        const st = PickerDate + (31 * 60 * 60 * 1000) - (7 * 24 * 60 * 60 * 1000)\n        var WBCRender = FormatList(WBCList, st)\n        var BandRender = FormatList(BandList, st)\n        var SegRender = FormatList(SegList, st)\n        var LymRender = FormatList(LymList, st)\n        var PCTRender = FormatList(PCTList, st)\n        var CRPRender = FormatList(CRPList, st)\n        const WBCcell = CellRander(WBCRender)\n        const Bandcell = CellRander(BandRender)\n        const Segcell = CellRander(SegRender)\n        const Lymcell = CellRander(LymRender)\n        const PCTcell = CellRander(PCTRender)\n        const CRPcell = CellRander(CRPRender)\n        return (\n            <div style={{ display: \"grid\", gridTemplateRows: \"repeat(\" + title.length + \",1fr)\" }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{WBCcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{Bandcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{Segcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{Lymcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{PCTcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{CRPcell}</div>\n            </div>\n        );\n    }\n    render() {\n        const { userdata, title } = this.props\n        const title_list = title.map((info, index) => <div className='Chronictabletitlelist' key={index}><t2>{info.title}</t2></div>)\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\" }}>\n                <div style={{ display: \"grid\", gridTemplateRows: \"repeat(\" + title.length + \",1fr)\" }}>\n                    {title_list}\n                </div>\n                {this.table_content()}\n            </div>\n        );\n    }\n}\n\nexport default Infectionlabtable","import React, { Component } from 'react';\nimport { Select } from 'antd';\nimport Crosssectionvitalsignchart from '../CrossSectionView/Crossectionvitalsignchart'\nimport { statecolor } from '../../Function/Wardstate'\nimport moment from 'moment';\n\nclass Infectionvitalsign extends Component {\n    state = {\n        check_state_one: 0,\n    }\n\n    Interval_grid_box() {\n        var gridarray = []\n        for (let index = 0; index < 21; index++) {\n            const number = index + 1\n            if (number === this.state.check_state_one) {\n                gridarray.push(<div style={{ width: \"100%\", height: 350, border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_one(number)}></div>)\n            }\n            else gridarray.push(<div style={{ width: \"100%\", height: 350 }} onClick={() => this.onClickCheckgrid_one(number)}></div>)\n        }\n        return gridarray\n    }\n\n    onClickCheckgrid_one(number) {\n        // //1:7 2:8 3:9 ........\n        // const { defaultdate } = this.props\n        // const starttime = (defaultdate - (24 * 60 * 60 * 1000) + (7 * 60 * 60 * 1000)) + ((number - 1) * (60 * 60 * 1000))\n        // const endtime = (defaultdate - (24 * 60 * 60 * 1000) + (7 * 60 * 60 * 1000)) + ((number) * (60 * 60 * 1000))\n        // console.log(starttime, endtime)\n        console.log(number)\n        this.setState(\n            {\n                check_state_one: number\n\n            }\n        )\n    }\n    constructor() {\n        super()\n        this.state = {\n            displMode: 0\n        }\n    }\n\n    render() {\n        function formatPickerTimer(pickerdate) {\n            return {\n                startTime: pickerdate + (31 * 60 * 60 * 1000) - (7 * 24 * 60 * 60 * 1000),\n                endTime: pickerdate + (31 * 60 * 60 * 1000)\n            }\n        }\n        const { Option } = Select;\n        const { PickerDate, StatusSource, selectday, hrdatasource, rrdatasource, spo2datasource, btdatasource, abpdatasource, nbpdatasource, QDVS, QOXY } = this.props\n        const viewwidth = window.screen.availWidth - 220\n        const title_list = [{ item: \"HR\" }, { item: \"ABP\" }, { item: \"NBP\" }, { item: \"SpO2\" }, { item: \"BT\" }, { item: \"RR\" }]\n        const vital_title = title_list.map((info, index) =>\n            <div key={index} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"60px\" }}>\n                <div>\n                    <t4 style={{ display: \"flex\", justifyContent: \"center\", color: statecolor(info.item) }}>{info.item}</t4>\n                    <t1 style={{ display: \"flex\", justifyContent: \"center\", color: statecolor(info.item) }}>123</t1>\n                </div>\n            </div>\n        )\n        const pickerTimer = formatPickerTimer(PickerDate)\n        console.log(moment(pickerTimer.startTime).format(\"YYYY/MM/DD HH:mm\"))\n        const width = window.screen.availWidth - 171\n        return (\n            <div style={{ margin: \"10px 0px\" }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\" }}>\n                    <div>\n                        {vital_title}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"repeat(6,60px)\", position: \"relative\" }}>\n                        <div style={{ position: \"absolute\", top: 5, left: 50, height: 350, width: viewwidth }}>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(21,1fr)\" }}>\n                                {this.Interval_grid_box()}\n                            </div>\n                        </div>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"hr_svg_Infection\"}\n                            id_key={\"hr_id_Infection\"}\n                            type={\"hr\"}\n                            source={StatusSource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={2}\n                            lower={100}\n                            upper={160}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor=\"#779F50\"\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={200}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"abp_svg_Infection\"}\n                            id_key={\"abp_id_Infection\"}\n                            type={\"abp\"}\n                            source={StatusSource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={2}\n                            lower={55}\n                            upper={75}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#C12528\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"nbp_svg_Infection\"}\n                            id_key={\"nbp_id_Infection\"}\n                            type={\"nbp\"}\n                            source={StatusSource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={2}\n                            lower={55}\n                            upper={75}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#C12528\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"spo2_svg_Infection\"}\n                            id_key={\"spo2_id_Infection\"}\n                            type={\"spo2\"}\n                            source={StatusSource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={2}\n                            lower={55}\n                            upper={75}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#4773B8\"}\n                            colorshadow={\"#4773B8\"}\n                            min={0}\n                            max={100}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"bt_svg_Infection\"}\n                            id_key={\"bt_id_Infection\"}\n                            type={\"bt\"}\n                            source={StatusSource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={2}\n                            lower={55}\n                            upper={75}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#7F3DB5\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"rr_svg_Infection\"}\n                            id_key={\"rr_id_Infection\"}\n                            type={\"rr\"}\n                            source={StatusSource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={50}\n                            width={width}\n                            interval={2}\n                            lower={55}\n                            upper={75}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#DE7531\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}>\n                        </Crosssectionvitalsignchart>\n                    </div>\n                    {/* <div style={this.state.needFixed ? scrollstyle : stablestyle}><Chroniclescale patid='flootsheetscale'></Chroniclescale></div> */}\n                </div>\n            </div>\n        );\n    }\n}\nexport default Infectionvitalsign","import React, { Component } from 'react'\nimport Infectionlabtable from './Infectionlabtable'\n\nclass Infectionlab extends Component {\n    render() {\n        const { WBCList, BandList, SegList, LymList, PCTList, CRPList,PickerDate } = this.props\n        const item_title = [{ title: \"WBC\" }, { title: \"Band\" }, { title: \"Seg\" }, { title: \"Lym\" }, { title: \"PCT\" }, { title: \"CRP\" }]\n        return (\n            <div style={{margin:\"10px 0px\"}}>\n                <Infectionlabtable PickerDate={PickerDate} title={item_title}  WBCList={WBCList} BandList={BandList} SegList={SegList} LymList={LymList} PCTList={PCTList} CRPList={CRPList}></Infectionlabtable>\n            </div>\n        );\n    }\n}\n\nexport default Infectionlab","import React, { Component } from 'react'\nimport { DatePicker, Select } from 'antd'\nimport Vitalxaxis from '../../Module/Vitalxaxis'\nimport Infectionvitalsign from './Infectionvitalsign'\nimport Infectionlab from './Infectionlab'\nimport { formatxArrayhalf, formatendtime } from '../../Function/Timeformat'\nimport { simulationCentermonitordata, simulationnisdata } from '../../Function/Wardstate'\nimport Orderonchronic from '../ChronicleView/ChronicOrder'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport './Infection.scss'\nimport Vitalonchronic from '../ChronicleView/Chronic_vital'\n\nclass Infectionview extends Component {\n    state = {\n        datasource: [],\n        statussource: \"CM\",\n        intervalselect: 2,\n        PickerDate: moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf(),\n        UDORDER0: [],\n        RESLAB02: [],\n        RESLAB01: [],\n        classParser: undefined,\n\n        hrdatasource: [],\n        rrdatasource: [],\n        spo2datasource: [],\n        abpdatasource: [],\n        nbpdatasource: [],\n        btdatasource: [],\n        QDVS: [],\n        QOXY: [],\n    }\n    componentDidMount() {\n        this.apidata()\n    }\n\n    apidata() {\n        const { caseinfo } = this.props\n        const dateTime = this.state.PickerDate\n        const et = dateTime + (31 * 60 * 60 * 1000)\n        const st = moment(et - (7 * 24 * 60 * 60 * 1000)).format(\"YYYY-MM-DD\")\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Prescription\");\n                console.log(\"getGitHubJson Prescription OK \" + JSON.stringify(parser))\n                this.setState({\n                    classParser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiProvider.getStoredProcedureUDORDER0(caseinfo.HISID, caseinfo.CASEID, \"123\")\n            .then(data => {\n                this.setState({\n                    UDORDER0: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        ApiProvider.getStoredProcedureRESLAB02(caseinfo.HISID, st)\n            .then(data => {\n                this.setState({\n                    RESLAB02: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESLAB01(caseinfo.HISID, st)\n            .then(data => {\n                this.setState({\n                    RESLAB01: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n    }\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        console.log(\"mappings\" + mappings)\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n\n        inputs.forEach(input => {\n            let content = input.UDGNAME;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n        });\n        return allResult;\n    }\n    sourcehandleChange = (value) => {\n        this.setState({\n            statussource: value\n        })\n\n    }\n    switchdata(value_interval, sourcefrom) {\n        console.log(sourcefrom)\n        // const { defaultdate } = this.props\n        const defaultdate = new Date()\n        function changevitaldays(vitaldays) {\n            if (vitaldays === 3) {\n                return 18\n            }\n            if (vitaldays === 7) {\n                return 21\n            }\n            else {\n                return 24\n            }\n        }\n\n        function Interval_switch(interval) {\n            if (interval === 0) {\n                return 1\n            }\n            if (interval === 1) {\n                return 3\n            }\n\n            if (interval === 2) {\n                return 7\n            }\n        }\n        const interval = Interval_switch(value_interval)\n        const starttime = formatendtime(defaultdate) - (interval * 24 * 60 * 60 * 1000)\n        if (sourcefrom === 'NIS') {\n            const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n            const data = simulationnisdata(datatime, changevitaldays(interval))\n            return data\n        }\n        else {\n            const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n            const data = simulationCentermonitordata(datatime, changevitaldays(interval))\n            return data\n        }\n    }\n\n    render() {\n        function vallofnull(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"\"\n            }\n            return value.toString().trim()\n        }\n        const { Option } = Select;\n        const { caseinfo } = this.props\n        const { classParser, UDORDER0 } = this.state\n        const LabData = this.state.RESLAB02\n        const LabData2 = this.state.RESLAB01\n        const dateTime = this.state.PickerDate\n        const et = dateTime + (31 * 60 * 60 * 1000)\n        const st = et - (7 * 24 * 60 * 60 * 1000)\n        var WBCList = []\n        var BandList = []\n        var SegList = []\n        var LymList = []\n        var PCTList = []\n        var CRPList = []\n        if (Array.isArray(LabData)) {\n            if (LabData.length !== 0) {\n                for (let index = 0; index < LabData.length; index++) {\n                    const element = LabData[index];\n                    const WBC = vallofnull(element.RSV01)\n                    const Band = vallofnull(element.RSV13)\n                    const Seg = vallofnull(element.RSV14)\n                    const Lym = vallofnull(element.RSV15)\n                    const PCT = null\n                    const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                    if (st < time && time < et) {\n                        if (WBC !== null || WBC !== \"\" || WBC !== undefined) {\n                            WBCList.push({\n                                Time: time,\n                                Data: WBC\n                            })\n                        }\n                        if (Band !== null || Band !== \"\" || Band !== undefined) {\n                            BandList.push({\n                                Time: time,\n                                Data: Band\n                            })\n                        }\n                        if (Seg !== null || Seg !== \"\" || Seg !== undefined) {\n                            SegList.push({\n                                Time: time,\n                                Data: Seg\n                            })\n                        }\n                        if (Lym !== null || Lym !== \"\" || Lym !== undefined) {\n                            LymList.push({\n                                Time: time,\n                                Data: Lym\n                            })\n                        }\n                        if (PCT !== null || PCT !== \"\" || PCT !== undefined) {\n                            PCTList.push({\n                                Time: time,\n                                Data: PCT\n                            })\n                        }\n                    }\n                }\n            }\n        }\n        if (Array.isArray(LabData2)) {\n            if (LabData2.length !== 0) {\n                for (let index = 0; index < LabData2.length; index++) {\n                    const element = LabData2[index];\n                    const CRP = vallofnull(element.RSV30)\n                    const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                    if (st < time && time < et) {\n                        if (CRP !== null || CRP !== \"\" || CRP !== undefined) {\n                            CRPList.push({\n                                Time: time,\n                                Data: CRP\n                            })\n                        }\n                    }\n                }\n            }\n        }\n        console.log(WBCList, BandList, SegList, LymList, PCTList, CRPList)\n\n        let clusteredData = {}\n        if (classParser !== undefined) {\n            clusteredData = this.parse(UDORDER0, classParser)\n        }\n\n        //filter data by selected class\n        const filteredData = clusteredData[\"抗生素類別\"];\n\n        return (\n            <div style={{ padding: \"0px 20px\" }}>\n                <div className='Infectioncontrol'>\n                    <DatePicker\n                        disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                        defaultValue={moment(this.state.PickerDate)}\n                        onChange={(date, datestring) => { this.setState({ PickerDate: date.valueOf() }) }}\n                        allowClear={false} />\n                </div>\n                <div style={{ margin: \"10px 0px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\" }}>\n                        <div></div>\n                        <Vitalxaxis max={200} min={0} select_interval={2} select_date={new Date().getTime()} id_key=\"xaxis_infect\" svg_id=\"xaxis_svg_infect\"></Vitalxaxis>\n                    </div>\n                </div>\n                <div className='boxshadow'></div>\n                <div className='Infectionlayout'>\n                    <Vitalonchronic PickerDate={this.state.PickerDate} select_interval={2} caseinfo={caseinfo} source={\"infection\"} title=\"Vital\"></Vitalonchronic>\n                    {/* <Infectionvitalsign caseinfo={caseinfo} StatusSource={this.state.statussource} PickerDate={this.state.PickerDate}></Infectionvitalsign> */}\n                    {/* Order */}\n                    <Orderonchronic PickerDate={this.state.PickerDate} UDORDER0={filteredData} select_interval={2} caseinfo={caseinfo} title=\"\"></Orderonchronic>\n                    <Infectionlab PickerDate={this.state.PickerDate} WBCList={WBCList} BandList={BandList} SegList={SegList} LymList={LymList} PCTList={PCTList} CRPList={CRPList}></Infectionlab>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\" }}>\n                    <div></div>\n                    <Vitalxaxis max={200} min={0} select_interval={2} select_date={new Date().getTime()} id_key=\"xaxis_flootsheet_bot\" svg_id=\"xaxis_svg_flootsheet_bot\"></Vitalxaxis>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Infectionview","import React, { Component } from 'react';\nimport editlogo from '../../Image/svg/Edit.svg'\nimport detaillogo from '../../Image/svg/details.svg'\nimport { Input, Button } from 'antd';\nimport './Bedsidecard.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Bedsidecard extends Component {\n    state = {\n        caseinfo: this.props.caseinfo,\n        EditMode: false,\n        remarkContent: \"\",\n        inputContent: \"\",\n        powerLogin: 0\n    }\n    componentDidMount() {\n        //bind function\n        this.onInputChange = this.onInputChange.bind(this);\n\n        //query patient remark\n        this.queryPatientRemark();\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    queryPatientRemark() {\n        ApiProvider.getOnePatientRemark(this.state.caseinfo.TRANSINID)\n        .then(data => {\n            console.log(\"queryPatientRemark OK \" + JSON.stringify(data));\n            this.setState({\n                remarkContent: data.data[0].context\n            });\n        })\n        .catch(err => {\n            console.log(\"queryPatientRemark NG \" + JSON.stringify(err));\n        });\n    }\n    onInputChange(event) {\n        this.setState({inputContent: event.target.value})\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    onClickEnter() {\n        ApiProvider.createPatientRemark(this.state.inputContent, this.state.caseinfo.HISID, this.state.caseinfo.TRANSINID)\n        .then(data => {\n            console.log(\"createPatientRemark OK \" + JSON.stringify(data));\n            this.setState(\n                {\n                    inputContent: \"\"\n                }\n            )\n            this.queryPatientRemark();\n        })\n        .catch(err => {\n            console.log(\"createPatientRemark NG \" + JSON.stringify(err));\n        });\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    render() {\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div className='bedsidecardtitle'>\n                    <t1>床頭卡註記</t1>\n                    <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin > 0 ? \"flex\" : \"none\" }}>\n                        <img src={editlogo} alt=\"editlogo\" />\n                    </div>\n                </div>\n                <div className='bedsidecardcontext'>\n                    <t2>{this.state.remarkContent}</t2>\n                </div>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", backgroundColor: \"rgba(238,238,238,1)\" }}>\n                        <Input placeholder=\"輸入當日註記內容\" value={this.state.inputContent} onChange={this.onInputChange}></Input>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Bedsidecard","import React, { Component } from 'react';\nimport editlogo from '../../Image/svg/Edit.svg'\nimport { Checkbox, Input, Button } from 'antd';\nimport './Scheduletodo.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nconst TODO_DONE = \"已完成\";\nconst TODO_UNFINISH = \"未完成\";\n\nclass Scheduletodo extends Component {\n    state = {\n        EditMode: false,\n        displayMode: true, //true已完成 flase未完成\n        todolist: [],\n        caseinfo: this.props.caseinfo,\n        inputContent: undefined,\n        powerLogin: 0\n    }\n    componentDidMount() {\n        //bind function\n        this.onInputChange = this.onInputChange.bind(this);\n\n        //query patient notice\\\n        this.queryPatientTodo();\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    queryPatientTodo() {\n        ApiProvider.getOneTodo(this.state.caseinfo.TRANSINID, this.state.caseinfo.CASEID)\n            .then(data => {\n                console.log(\"queryPatientTodo OK \" + JSON.stringify(data));\n                this.setState({\n                    todolist: data.data\n                });\n            })\n            .catch(err => {\n                console.log(\"queryPatientTodo NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString()\n        ApiProvider.createTodo(this.state.caseinfo.CASEID, this.state.inputContent, timeNowStr, this.state.caseinfo.TRANSINID, TODO_UNFINISH)\n            .then(data => {\n                console.log(\"createTodo OK \" + JSON.stringify(data));\n                this.queryPatientTodo();\n            })\n            .catch(err => {\n                console.log(\"createTodo NG \" + JSON.stringify(err));\n            });\n        this.setState(\n            {\n                EditMode: false,\n                inputContent: undefined\n            }\n        )\n    }\n    onClickfinish() {\n        console.log(\"finish\")\n        this.setState(\n            {\n                displayMode: true\n            }\n        )\n    }\n    onClickunfisish() {\n        this.setState(\n            {\n                displayMode: false\n            }\n        )\n    }\n\n    onChange = (checkedValues) => {\n        console.log('checked = ', document.getElementById(\"finish\"));\n    }\n    onItemCheck = (event) => {\n        console.log('onItemCheck ' + JSON.stringify(event.target));\n\n        const itemToUpdate = this.state.todolist.find(item => item.time === event.target.value);\n        console.log('find item ' + JSON.stringify(itemToUpdate));\n\n        if ((this.state.displayMode === true && event.target.checked === false) || (this.state.displayMode === false && event.target.checked === true)) {\n            ApiProvider.createTodo(itemToUpdate.caseid, itemToUpdate.context, itemToUpdate.time, itemToUpdate.transinno, (itemToUpdate.type === TODO_DONE) ? TODO_UNFINISH : TODO_DONE)\n                .then(data => {\n                    console.log(\"updateTodo OK \" + JSON.stringify(data));\n                    this.queryPatientTodo();\n                })\n                .catch(err => {\n                    console.log(\"updateTodo NG \" + JSON.stringify(err));\n                });\n        }\n    }\n    render() {\n        // const button_style = {\n        //     finish: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\", borderRadius: \"16px\", border: \"rgba(245, 166, 35, 1) 1px solid\", color: \"rgba(245, 166, 35, 1)\" },\n        //     unfinish: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\", borderRadius: \"16px\", border: \"rgba(245, 166, 35, 1) 1px solid\", background: \"rgba(245, 166, 35, 1)\", color: \"white\" }\n        // }\n\n        const todolist_data = this.state.todolist\n        const finish_data = todolist_data.filter(function (item, index, array) {\n            return item.type === TODO_DONE;\n        });\n        const finish_value = finish_data.map(function (item, index, array) {\n            return item.time;\n        });\n        const unfinish_data = todolist_data.filter(function (item, index, array) {\n            return item.type === TODO_UNFINISH;\n        });\n\n        const onItemCheck = this.onItemCheck;\n        const finish_checkbox = finish_data.map(function (item, index, array) {\n            return (\n                <div key={index} className='scheduletodocell'>\n                    <Checkbox value={item.time} checked={true} onChange={onItemCheck} style={{ textDecoration: \"line-through\" }}>{item.context}</Checkbox>\n                </div>\n            );\n        });\n        const unfinish_checkbox = unfinish_data.map(function (item, index, array) {\n            return (\n                <div key={index} className='scheduletodocell'>\n                    <Checkbox value={item.time} checked={false} onChange={onItemCheck}>{item.context}</Checkbox>\n                </div>\n            );\n        });\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <t1>To Do List</t1>\n                <div className='scheduletodotitle'>\n                    <t1>待辦排程</t1>\n                    <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin > 0 ? \"flex\" : \"none\" }}>\n                        <img src={editlogo} alt=\"editlogo\" />\n                    </div>\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"10px 0px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"115px 115px\", gridColumnGap: \"10px\" }}>\n                        <div className={this.state.displayMode ? 'finishbutton' : 'todobutton'} onClick={() => this.onClickunfisish()}>未完成</div>\n                        <div onClick={() => this.onClickfinish()} className={this.state.displayMode ? 'todobutton' : 'finishbutton'}>已完成</div>\n                    </div>\n                </div>\n                <Checkbox.Group defaultValue={finish_value} style={{ width: '100%' }} onChange={this.onChange}>\n                    <div style={{ overflowY: \"auto\", maxHeight: \"200px\" }}>\n                        {this.state.displayMode ? finish_checkbox : unfinish_checkbox}\n                    </div>\n                </Checkbox.Group>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <Input placeholder=\"輸入當日註記內容\" value={this.state.inputContent} onChange={this.onInputChange}></Input>\n                        <Button type=\"primary\">新增</Button>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Scheduletodo","import React, { Component } from 'react';\nimport calenderlogo from '../../Image/svg/calender.svg'\nimport calenderwhitelogo from '../../Image/svg/calenderwhite.svg'\nimport pingcheck from '../../Image/svg/ping.svg'\nimport pingwhite from '../../Image/svg/pingwhite.svg'\nimport './Calendercell.scss'\nimport { mmddformat, weekdateformatcalender } from '../../Function/Timeformat'\n\nclass Calendercell extends Component {\n\n    sendcallback(timestamp, clickindex) {\n        this.props.parentCallback(timestamp, clickindex);\n    }\n    onClickCheck(timestamp, clickindex) {\n        this.sendcallback(timestamp, clickindex)\n    }\n\n    render() {\n        const { clickindex, state, newDate, timestamp, clickdate, data, today } = this.props;\n        function disableday(state) {\n            if (state) {\n                return (\n                    <div className='calendersubcontexticonsecond'>\n                        <img src={calenderlogo} alt='calenderlogo' />\n                        <img src={pingcheck} alt='pingcheck' />\n                    </div>\n                );\n            }\n            else {\n                return (\n                    <div className='calendersubcontexticonsecond'>\n                        <img src={calenderwhitelogo} alt='calenderlogo' />\n                        <img src={pingwhite} alt='pingcheck' />\n                    </div>\n                );\n            }\n        }\n        function disabledayinfo(state) {\n            const scheduleArray = data.scheduleList.filter(item => item.type === \"排程\");\n            const eventArray    = data.scheduleList.filter(item => item.type === \"事件\");\n\n            if (state) {\n                return (\n                    <div className='calendersubcontexticonsecond'>\n                        <t1>{scheduleArray.length}</t1>\n                        <t1>{eventArray.length}</t1>\n                    </div>\n                );\n            }\n            else {\n                return (\n                    <div className='calendersubcontexticonsecond'>\n                        <t1 className='displayinfo'>{scheduleArray.length}</t1>\n                        <t1 className='displayinfo'>{eventArray.length}</t1>\n                    </div>\n                );\n            }\n        }\n        function locl(state) {\n            /*if (state) {\n                return '當日'\n            }\n            else return null\n            */\n            if(timestamp === today) return  '當日'\n            else return null\n        }\n        function stateswitch() {\n\n            console.log(timestamp, clickdate)\n            if (mmddformat(clickdate) === mmddformat(timestamp)) {\n                return true\n            }\n            return false\n        }\n        return (\n            <div className={stateswitch() ? 'calendersubcontextclick' : 'calendersubcontext'} onClick={() => this.onClickCheck(timestamp, clickindex)}>\n                <div className={stateswitch() ? 'calendersubcontexttitleclick' : 'calendersubcontexttitle'}>\n                    <t2 className='calendersubcontexttitletoday'>{mmddformat(timestamp)}({weekdateformatcalender(timestamp)}){locl(newDate)}</t2>\n                </div>\n                <div className='calendersubcontexticon'>\n                    {disableday(state)}\n                </div>\n                <div className='calendersubcontexticon'>\n                    {disabledayinfo(state)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Calendercell","import React, { Component } from 'react';\nimport { DatePicker } from 'antd';\nimport { Select } from 'antd';\nimport './Calender.scss'\nimport { mmddformat, compareday, yyyymmfirstweeksate } from '../../Function/Timeformat'\nimport Calendercell from './Calendercell'\nimport { Icon } from 'antd'\nimport Crossection_schedule from '../CrossSectionView/Crosssectionschedule'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment';\n\nconst SCHEDULE_TYPE_EVENT = \"事件\";\nconst SCHEDULE_TYPE_SCHEDULE = \"排程\";\nconst timeZoneOffset = 8 * 60 * 60 * 1000;\n\nclass Calender extends Component {\n    state = {\n        calendermode: 'week',\n        Clickdays: null,\n        ClickDate: null,\n        displayinfo: null,\n        scheduleRawData: [],\n        scheduleData: [],\n        startTimestamp: 0,\n        endTimestamp: 0,\n        todayBegin: 0,\n        noticeRawData: []\n    }\n    componentDidMount() {\n        const {startTimestamp, endTimestamp, todayBegin} = this.getStartEndTime();\n        this.setState({\n            startTimestamp: startTimestamp,\n            endTimestamp: endTimestamp,\n            todayBegin: todayBegin,\n            ClickDate: todayBegin\n        });\n        this.querySchedule(new Date(startTimestamp).toISOString().split('.')[0], new Date(endTimestamp).toISOString().split('.')[0]);\n        this.queryNotice();\n    }\n    getStartEndTime() {\n        const today = new Date();\n        const monthfirstweekday = new Date(today.getFullYear(), today.getMonth(), 1).getDay();\n        const firstCellBegin = new Date(today.getFullYear(), today.getMonth(), 1).getTime() - (monthfirstweekday * 24 * 60 * 60 * 1000) + timeZoneOffset;\n        const todayBegin = new Date(today.getFullYear(), today.getMonth(), today.getDate()).getTime() + timeZoneOffset;\n\n        const startTimestamp = (this.state.calendermode === 'week') ? todayBegin -  3 * 24 * 60 * 60 * 1000 : firstCellBegin;\n        const endTimestamp   = (this.state.calendermode === 'week') ? startTimestamp + 7 * 24 * 60 * 60 * 1000 : startTimestamp + 35 * 24 * 60 * 60 * 1000;\n\n        return {startTimestamp, endTimestamp, todayBegin};\n    }\n    querySchedule(startTimestampStr, endTimestampStr) {\n        ApiProvider.getOnePatientSchedule(this.props.caseinfo.TRANSINID, startTimestampStr, endTimestampStr)\n        .then(data => {\n            console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n\n            const itemList = data.data;\n            let refactoredList = [];\n            itemList.forEach(item => {\n                const itemTimeStr = item.time.split('T')[0];\n                let foundItemIndex = refactoredList.findIndex(element => element.time === itemTimeStr);\n                if(foundItemIndex === -1) {\n                    //not found, create one\n                    let newItem = {\n                        time: itemTimeStr,\n                        timestamp: item.time,\n                        scheduleList: []\n                    }\n                    let newEvent = {\n                        type: item.type,\n                        timestamp: new Date(item.time).getTime(),\n                        writer: (item.type === SCHEDULE_TYPE_EVENT) ? \"林醫師\" : \"張醫師\",\n                        name: item.name,//this.props.caseinfo.PBASINGNINFO.PNAMEC,//(item.type === SCHEDULE_TYPE_EVENT) ? \"林ＯＯ\" : \"黃ＯＯ\",\n                        content: item.context,\n                        bednumber: item.bednumber\n                    }\n                    newItem.scheduleList.push(newEvent);\n                    refactoredList.push(newItem);\n                } else {\n                    //found, update item\n                    let newEvent = { \n                        type: item.type,\n                        timestamp: new Date(item.time).getTime(),\n                        writer: (item.type === SCHEDULE_TYPE_EVENT) ? \"林醫師\" : \"張醫師\",\n                        name: item.name,//this.props.caseinfo.PBASINGNINFO.PNAMEC,//(item.type === SCHEDULE_TYPE_EVENT) ? \"林ＯＯ\" : \"黃ＯＯ\",\n                        content: item.context,\n                        bednumber: item.bednumber\n                    }\n                    refactoredList[foundItemIndex].scheduleList.push(newEvent);\n                }\n            });\n            this.setState({\n                scheduleRawData: data.data,\n                scheduleData: refactoredList\n            });\n        })\n        .catch(err => {\n            console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n        });\n    }\n    queryNotice() {\n        ApiProvider.getOnePatientNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID)\n        .then(result => {\n            console.log(\"getOnePatientNotice OK \" + JSON.stringify(result));\n            this.setState({\n                noticeRawData: result.data\n            })\n        })\n        .catch(err => {\n            console.log(\"getOnePatientNotice NG \" + JSON.stringify(err));\n        });\n    }\n    callbackFunction = (timestamp, clickindex) => {\n        console.log(timestamp)\n        this.setState({\n            ClickDate: timestamp,\n            displayinfo: clickindex\n        })\n    }\n    onCancelClick() {\n        this.setState({\n            ClickDate: this.state.todayBegin,\n            displayinfo: null\n        })\n    }\n    handleChange = (value) => {\n        console.log(value)\n        this.setState({\n            calendermode: value,\n            displayinfo: null,\n            Clickdays: null\n        })\n    }\n    onChange = (timestamp) => {\n        console.log('changestate')\n    }\n    onClickCheck(timestampdate) {\n        this.setState({\n            onClickdays: timestampdate\n        })\n    }\n    getDataFromTimestamp(timestamp) {\n        const dateStr = new Date(timestamp).toISOString().split('T')[0];\n        const dataOfDayIndex = this.state.scheduleData.findIndex(element => element.time === dateStr);\n        const dataOfDay = (dataOfDayIndex === -1) ? {scheduleList: []} : this.state.scheduleData[dataOfDayIndex];\n        return dataOfDay;\n    }\n    getNoticeFromTimestamp(timestamp) {\n        const dateStr = new Date(timestamp).toISOString().split('T')[0];\n        const noticeOfDayArray = this.state.noticeRawData.filter(element => element.time.indexOf(dateStr) > -1);\n        return noticeOfDayArray;\n    }\n    weekmode() {\n        var weekcontext = []\n        for (let index = 0; index < 7; index++) {\n            const timestampdate = this.state.startTimestamp + (index * 24 * 60 * 60 * 1000);\n            const date = mmddformat(timestampdate)\n            const dataOfDay = this.getDataFromTimestamp(timestampdate);\n            if (index - 3 === 0) {\n                weekcontext.push(\n                    <Calendercell clickindex={'week'} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={true} newDate={true} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n                );\n            }\n            else {\n                weekcontext.push(\n                    <Calendercell clickindex={'week'} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={compareday(timestampdate)} newDate={false} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n                );\n\n            }\n        }\n        return weekcontext\n    }\n    weekmonthmode(weeknumber, firstMonthWeekDay) {\n        var weekcontext = []\n        for (let index = 0; index < 7; index++) {\n            const timestampdate = new Date(firstMonthWeekDay).getTime() + (index * 24 * 60 * 60 * 1000) + timeZoneOffset;\n            const date = mmddformat(timestampdate)\n            const dataOfDay = this.getDataFromTimestamp(timestampdate)\n\n            if (new Date(mmddformat(new Date().getTime())).getTime() <= new Date(mmddformat(new Date(timestampdate).getTime())).getTime()) {\n                weekcontext.push(\n                    <Calendercell clickindex={weeknumber} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={true} newDate={true} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n                );\n            }\n            else {\n                weekcontext.push(\n                    <Calendercell clickindex={weeknumber} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={false} newDate={true} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n                );\n            }\n        }\n        return weekcontext\n    }\n\n    ShowModule(rowIndex) {\n        if(rowIndex === undefined) rowIndex = 0;\n        console.log(\"this.state.ClickDate\" + this.state.ClickDate);\n\n        const dataOfDay = this.getDataFromTimestamp(this.state.ClickDate);\n        const noticeOfDay = this.getNoticeFromTimestamp(this.state.ClickDate);\n\n        function checkmode(state) {\n            if (state === 'week') {\n                return 'calenderdisplayinformation'\n            }\n            if (state === rowIndex) {\n                return 'calenderdisplayinformation'\n            }\n            return 'calenderdisplayinformationnone'\n        }\n        console.log(moment(this.state.ClickDate).format(\"YYYYMMDDHHmmss\"))\n        return (\n            <div className={checkmode(this.state.displayinfo)}>\n                <div className='calenderModule'>\n                    <t1>詳細資訊</t1>\n                    <Icon type=\"close\" onClick={() => this.onCancelClick()} />\n                </div>\n                <div className='Modulelayout'>\n                    <Crossection_schedule PickerDate={this.state.ClickDate} source={1} caseinfo={this.props.caseinfo} noticeData={noticeOfDay} scheduleData={dataOfDay} editstatus={true}></Crossection_schedule>\n                </div>\n            </div>\n        );\n    }\n\n\n    setgroup() {\n        var calendermonthgroup = []\n        const monthfirstweekdate = new Date(yyyymmfirstweeksate(new Date())).getDay()\n        const firstMonthWeekDay = new Date(yyyymmfirstweeksate(new Date())).getTime() - (monthfirstweekdate * 24 * 60 * 60 * 1000)\n\n        for (let index = 0; index < 5; index++) {\n            calendermonthgroup.push(\n                <div className='calendercontextMonthRows'>\n                    {this.weekmonthmode(index, firstMonthWeekDay + (index * 7 * 24 * 60 * 60 * 1000))}\n                    {this.ShowModule(index)}\n                </div>\n            );\n\n        }\n        return calendermonthgroup\n    }\n    modechange(state) {\n        if (state === 'week') {\n            return (\n                <div className='calendercontext'>\n                    {this.weekmode()}\n                    {this.ShowModule()}\n                </div>\n            );\n        }\n        else {\n            // return (\n            //     <div>\n            //         {this.setgroup()}\n            //     </div>\n            // );\n            return this.setgroup()\n        }\n    }\n\n    SelectDatepickertype() {\n        const { MonthPicker } = DatePicker;\n        if (this.state.calendermode === 'month') {\n            return (\n                <MonthPicker placeholder=\"請選擇月份\" />\n            );\n        }\n        else {\n            return (\n                <DatePicker placeholder={['請選擇時間']} />\n            );\n        }\n    }\n    render() {\n        const { Option } = Select;\n        // const localday = new Date().getTime()\n        // function compareday(days) {\n        //     if (new Date(days).getTime() > new Date().getTime()) {\n        //         return true\n        //     }\n        //     return false\n        // }\n        return (\n            <div>\n                <t1 className='calendertitle'>行事曆</t1>\n                <div className='calendercontrol'>\n                    {this.SelectDatepickertype()}\n                    <Select defaultValue={this.state.calendermode} onChange={this.handleChange}>\n                        <Option value=\"week\">週</Option>\n                        <Option value=\"month\">月</Option>\n                    </Select>\n                </div>\n                {this.modechange(this.state.calendermode)}\n            </div>\n        );\n    }\n}\n\nexport default Calender","import React, { Component } from 'react';\nimport Notice from './Notice'\nimport Bedsidecard from './Bedsidecard'\nimport Scheduletodo from './Scheduletodo'\nimport Calender from './Calender'\nimport './Scheduleview.scss'\n\nclass Scheduleview extends Component {\n    render() {\n        function monthformat(month) {\n            return month + 1\n        }\n        function dateformat(time) {\n            return new Date(time).getFullYear() + \"-\" + monthformat(new Date(time).getMonth()) + \"-\" + new Date(time).getDate()\n        }\n        function exporttime(time) {\n            if (time === null) {\n                return \"--\"\n            }\n            else {\n                return dateformat(time)\n            }\n        }\n        const { caseinfo } = this.props\n        const time = new Date().getTime()\n\n        console.log(caseinfo)\n        return (\n            <div>\n                <div style={{ marginBottom: \"5px\" }}>\n                    <centerstyle>\n                        <div className='scheduletitle'>轉入時間:{dateformat(time)}/轉出時間\b:{exporttime(null)}</div>\n                    </centerstyle>\n                    <div className='boxshadow'></div>\n                </div>\n                <div className='schedulelayout'>\n                    <Bedsidecard caseinfo={caseinfo}></Bedsidecard>\n                    <Notice caseinfo={caseinfo}></Notice>\n                    <Calender caseinfo={caseinfo}></Calender>\n                    <Scheduletodo caseinfo={caseinfo}></Scheduletodo>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Scheduleview\n","import React, { Component } from 'react';\nimport Patientinfo from './Patientviewinfo'\nimport { Select, Modal, Button } from 'antd';\nimport { bednumberformat, gender, birthdayweeks } from '../Function/Wardbedfunction'\nimport { Tabs } from 'antd';\nimport Crosssectionlayout from './CrossSectionView/Crosssectionlayout'\nimport Chroniclelayout from './ChronicleView/Chroniclelayout'\nimport Flowsheetlayout from './FlootSheetView/Flootsheetlayout'\nimport Examreport from './ExamReport/ExamReport'\nimport Orderview from './Orderview/Orderview'\nimport Noteview from './NoteView/Note'\nimport RTview from './RT/RTview'\nimport Nurtionview from './Nurtion/Nurtion'\nimport Infectionview from './Infection/Infection'\nimport Scheduleview from './Schedule/Scheduleview'\nimport * as ApiProvider from '../API/ApiProvider'\nimport X2JS from 'x2js';\nimport moment from 'moment';\nimport * as WardState from '../Function/Wardstate'\n\nclass Patientviewlayout extends Component {\n    state = {\n        TYPE: this.props.location.TYPE,\n        PBASINGNINFO: [],\n        PDOCNEW: [],\n        REMARK: [],\n        PLOC: [],\n        QMNC: [],\n        QENT: [],\n        QTWER: [],\n        tabstring: \"時間點檢視\",\n        visible: false,\n        PLOCSTART: null\n        // TYPE: this.props.location.TYPE,\n        // PBASINGNINFO: SimData.PBASIGNINFO,\n        // PDOCNEW: SimData.PDOCNEW,\n        // REMARK: SimData.REMARK,\n        // PLOC: SimData.PLOC,\n        // QMNC: SimData.QMNC,\n        // QTWER: SimData.QTWER,\n        // tabstring: \"時間點檢視\",\n        // visible: false,\n    }\n    componentDidMount() {\n        // const BEDNUMBER = Number(this.props.location.state.BEDNUMBER)\n        const CASEID = this.props.location.state.CASEID\n        const HISID = this.props.location.state.HISID\n        const PBASINFO = ApiProvider.getTablePBASINFO(HISID)\n            .then(data => {\n                return {\n                    PBASINGNINFO: data.data,\n                }\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n        const PDOCNEW = ApiProvider.getTablePDOCNEW(CASEID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getTablePDOCNEW NG \" + JSON.stringify(err));\n            });\n        const PLOC = ApiProvider.getTablePLOC(CASEID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n        // const pcaslist = ApiProvider.getStoredProcedurePCASELIST(HISID,\"DOC3924B\",\"E\")\n        Promise.all([PBASINFO, PDOCNEW, PLOC])\n            .then(result => {\n                console.log(\"API DATA = \" + result)\n                this.nis_status_shange(CASEID, result[0].PBASINGNINFO);\n                const PLOCLIST = result[2]\n                const PLOCTR = PLOCLIST[PLOCLIST.length - 1]\n                const PLOCSTART = PLOCLIST[0]\n                return {\n                    PBASINGNINFO: result[0].PBASINGNINFO,\n                    PDOCNEW: result[1],\n                    PLOC: PLOCTR,\n                    PLOCSTART: PLOCSTART\n                }\n            })\n            .then(result => {\n                this.setState({\n                    PBASINGNINFO: result.PBASINGNINFO,\n                    PDOCNEW: result.PDOCNEW,\n                    PLOC: result.PLOC,\n                    PLOCSTART: result.PLOCSTART\n                })\n            })\n    }\n\n    selectchange = (HBEDNUMBER) => {\n        const datalist = this.state.HBEDLIST\n        const filterdata = datalist.filter(function (info, index, array) {\n            return parseInt(info.HBEDNO) === HBEDNUMBER\n        })\n        if (filterdata.length === 0) {\n            return null\n        }\n        else {\n            const source = filterdata[0]\n            const HISID = source.PHISTNUM\n            const CASEID = source.PCASENO\n            const PBASINFO = ApiProvider.getTablePBASINFO(HISID)\n                .then(data => {\n                    return {\n                        PBASINGNINFO: data.data,\n                    }\n                })\n                .catch(err => {\n                    console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n                });\n            const PDOCNEW = ApiProvider.getTablePDOCNEW(CASEID)\n                .then(data => {\n                    return data.data\n                })\n                .catch(err => {\n                    console.log(\"Andy test getTablePDOCNEW NG \" + JSON.stringify(err));\n                });\n            const PLOC = ApiProvider.getTablePLOC(CASEID)\n                .then(data => {\n                    const matadata = data.data\n                    return matadata[matadata.length - 1]\n                })\n                .catch(err => {\n                    console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n                });\n            Promise.all([PBASINFO, PDOCNEW, PLOC])\n                .then(result => {\n                    this.nis_status_shange(CASEID, result[0].PBASINGNINFO);\n                    return {\n                        PBASINGNINFO: result[0].PBASINGNINFO,\n                        // BEDNUMBER: result[0].BEDNUMBER,\n                        PDOCNEW: result[1],\n                        PLOC: result[2]\n                    }\n                })\n                .then(result => {\n                    this.setState({\n                        PBASINGNINFO: result.PBASINGNINFO,\n                        PDOCNEW: result.PDOCNEW,\n                        PLOC: result.PLOC\n                    })\n                })\n                .catch(err => {\n                    console.log(\"error\")\n                })\n\n        }\n    }\n\n    nis_status_shange(CASEID, PBASINGNINFO) { \n        const xm2 = new X2JS()\n        ApiProvider.getQENT(CASEID)\n            .then(data => {\n                this.setState({\n                    QENT: WardState.XM2JSON(data.data)\n                })\n            })\n            .catch(err => { console.log(err) })\n        ApiProvider.getQMNC(CASEID)\n            .then(data => {\n                // const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                this.setState({\n                    QMNC: WardState.XM2JSON(data.data)\n                })\n                const starttime = moment(PBASINGNINFO.PBIRTHDT, 'YYYYMMDD').format(\"YYYYMMDDHHmm\")\n                const endtime = moment().format('YYYYMMDDHHmm')\n                ApiProvider.getQTWPER(CASEID, starttime, endtime)\n                    .then(data => {\n                        const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                        var weightlist = []\n                        for (let index = 0; index < parsedata.length; index++) {\n                            const element = parsedata[index];\n                            if (element.type === 'TW') {\n                                weightlist.push(element)\n                            }\n                        }\n                        this.setState({QTWER: weightlist})\n                    })\n                    .catch(err => {\n                        console.log(\"Andy test getQTWPER NG \" + JSON.stringify(err));\n                    });\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n    }\n\n\n\n\n    onChange = (activkey) => {\n        this.setState({\n            tabstring: activkey\n        }\n        )\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    OptionSelectRender() {\n        function addzero(value) {\n            if (value < 10) {\n                return \"0\" + value\n            }\n            return value\n        }\n        function optionselect(LISTBED) {\n            const dataoption = LISTBED.map(function (info, index, array) {\n                return (\n                    <Option key={index} value={Number(info.HBEDNO)}>病床{addzero(parseInt(info.HBEDNO))}</Option>\n                );\n            })\n            return dataoption\n\n        }\n        const BedList = this.props.location.state.source\n        console.log(BedList)\n        const { Option } = Select;\n        const BEDNUMBER = Number(this.props.location.state.BEDNUMBER)\n        if (BedList !== null) {\n            return (\n                <Select defaultValue={Number(BEDNUMBER)} style={{ width: 120 }} onChange={this.selectchange}>\n                    {optionselect(BedList)}\n                </Select>\n            );\n        }\n        return null\n    }\n    fixpatientDate = (data) => {\n        const transdata = {\n            'cause': '住院原因',\n            'car_pho': '主要照顧者電話',\n            'care': '主要照顧者',\n            'con_1': '聯絡人1',\n            'con_p11': '聯絡人1電話',\n            'con_2': '聯絡人2',\n            'con_p21': '聯絡人2電話',\n            'dvs': '住院時生命徵象',\n            'habit': '飲食狀況',\n            'oxy': '住院時氧和評估',\n            'h_val': '住院時頭圍',\n            'b_val': '住院時胸圍',\n            'tall': '住院時身高',\n            'weight': '住院時體重'\n        }\n\n        const patientDate = []\n\n        for (let index in transdata) {\n            if (data[index] !== \"\") {\n                patientDate.push([transdata[index], data[index]])\n            }\n        }\n\n        return patientDate\n    }\n    render() {\n\n        const USERDATA = this.state.PBASINGNINFO\n        if (USERDATA.length === 0) {\n            return null\n        }\n        const BEDNUMBER = Number(this.props.location.state.BEDNUMBER)\n        const CASEID = this.props.location.state.CASEID\n        const HISID = this.props.location.state.HISID\n        const DOCLIST = this.state.PDOCNEW\n        const MainDoc = WardState.Doc(DOCLIST, \"B\")\n        const remark = this.state.REMARK.context\n        const ploc = this.state.PLOC\n        const transintime = ploc.PLOCTM.toString()\n        const transindt = ploc.PLOCDT.toString()\n        const transinid = \"NICU\" + transindt + transintime\n        const qmnc = this.state.QMNC\n        const bornWeeks = qmnc.weeks\n        const bornDays = qmnc.days\n        const wetghtList = this.state.QTWER\n        const { TabPane } = Tabs;\n        const selectrender = this.OptionSelectRender()\n        const caseinfo = {\n            \"HISID\": HISID,\n            \"CASEID\": CASEID,\n            \"WEEK_BORN\": bornWeeks,\n            \"DAY_BORN\": bornDays,\n            \"TRANSINID\": transinid,\n            \"TRANSINDT\": transindt,\n            \"WEIGHT\": wetghtList,\n            \"PBASINGNINFO\": USERDATA,\n            \"PLOCSTART\": this.state.PLOCSTART\n        }\n        const patientDetail = this.fixpatientDate(this.state.QENT)\n\n        return (\n            <div>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: 'center', height: \"40px\" }}>\n                    <t2>住院病人資訊 > 病床{bednumberformat(BEDNUMBER)} > {this.state.tabstring}</t2>\n                    {selectrender}\n                </div>\n                <div className='infolayout'>\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(7,auto)\", gridColumnGap: \"10px\" }}>\n                            <div>\n                                <t2>病床{bednumberformat(Number(BEDNUMBER))}</t2>\n                                <t2 style={{ margin: \"0px 5px\" }}>{USERDATA.PNAMEC.toString().trim()}</t2>\n                                <t2>{birthdayweeks(moment(USERDATA.PBIRTHDT, \"YYYYMMDD\").format(\"YYYY/MM/DD\"))}週歲</t2>\n                            </div>\n                            <t2>性別:{gender(USERDATA.PSEX)}</t2>\n                            <t2>病歷號碼:{HISID}</t2>\n                            <t2>住院序號:{CASEID}</t2>\n                            <t2>主治醫師:{MainDoc.toString().trim()}醫師</t2>\n                            <t2>備註:{remark}</t2>\n                            <t2 style={{ color: \"blue\", textDecoration: \"underline\", cursor: \"pointer\" }} onClick={this.showModal}>病人基本資料</t2>\n                            <Modal\n                                title=\"病人基本資料\"\n                                visible={this.state.visible}\n                                onOk={this.handleOk}\n                                onCancel={this.handleCancel}\n                                width={800}\n                                footer={null}>\n                                <Patientinfo patientDetail={patientDetail}></Patientinfo>\n                            </Modal>\n                        </div>\n                    </div>\n                </div>\n                <Tabs defaultActiveKey={this.state.tabstring} tabPosition={'top'} onChange={this.onChange}>\n                    <TabPane tab=\"時間點檢視\" key=\"時間點檢視\">\n                        <Crosssectionlayout parentDateCallback={this.callback} caseinfo={caseinfo}></Crosssectionlayout>\n                    </TabPane>\n                    <TabPane tab=\"時間軸檢視\" key=\"時間軸檢視\">\n                        <Chroniclelayout caseinfo={caseinfo}></Chroniclelayout>\n                    </TabPane>\n                    <TabPane tab=\"輸出入細節\" key=\"輸出入細節\">\n                        <Flowsheetlayout caseinfo={caseinfo}></Flowsheetlayout>\n                    </TabPane>\n                    <TabPane tab=\"檢驗及報告\" key=\"檢驗及報告\">\n                        <Examreport caseinfo={caseinfo}>></Examreport>\n                    </TabPane>\n                    <TabPane tab=\"醫囑及藥囑\" key=\"醫囑及藥囑\">\n                        <Orderview caseinfo={caseinfo}>></Orderview>\n                    </TabPane>\n                    <TabPane tab=\"跨團隊紀錄\" key=\"跨團隊紀錄\">\n                        <Noteview caseinfo={caseinfo}>></Noteview>\n                    </TabPane>\n                    <TabPane tab=\"呼吸評估\" key=\"呼吸評估\">\n                        <RTview caseinfo={caseinfo}>></RTview>\n                    </TabPane>\n                    <TabPane tab=\"營養評估\" key=\"營養評估\">\n                        <Nurtionview caseinfo={caseinfo}>></Nurtionview>\n                    </TabPane>\n                    <TabPane tab=\"感染評估\" key=\"感染評估\">\n                        <Infectionview caseinfo={caseinfo}>></Infectionview>\n                    </TabPane>\n                    <TabPane tab=\"行事曆及註記\" key=\"行事曆及註記\">\n                        <Scheduleview caseinfo={caseinfo}>></Scheduleview>\n                    </TabPane>\n                </Tabs>\n            </div >\n        );\n    }\n}\n\nexport default Patientviewlayout;\n","import React, { Component } from 'react';\nimport { Table, Input, Select, Button, Modal, Radio } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider';\nconst { confirm } = Modal;\n\nclass Powersetting extends Component {\n    constructor(props) {\n        super();\n\n        this.addUserdata = this.addUserdata.bind(this)\n        this.adduserhandleChange = this.adduserhandleChange.bind(this)\n    }\n\n    state = {\n        MouseClick: 0,\n        name: undefined,\n        role: undefined,\n        adduser: undefined,\n        userList: [],\n        power: ['僅可瀏覽平台、無法瀏覽管理者', '可瀏覽和編輯平台筆記、無法瀏覽管理者', '可瀏覽和編輯平台筆記、可瀏覽權限設定畫面', '可管理所有角色帳號、可瀏覽和編輯平台筆記、可瀏覽權限設定、系統摘要', '可管理所有角色帳號、可瀏覽和編輯平台筆記、可瀏覽權限設定、系統摘要、歷史畫面','僅可瀏覽權限設定、系統摘要'],\n        powerName: ['唯讀使用者', '一般使用者', '一般使用者管理員', '系統設定管理員', '超級管理者','系統管理者'],\n        visible: false,\n        radioValue: 0,\n        pwdRadio: true,\n        inputUsername: '',\n        inputPassword: '',\n        inputName: '',\n        inputDoctorid: '',\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        this.nameChange = this.nameChange.bind(this)\n        this.queryUserdata = this.queryUserdata.bind(this)\n        this.inputuserName = this.inputuserName.bind(this)\n        this.inputPassword = this.inputPassword.bind(this)\n        this.inputName = this.inputName.bind(this)\n        this.inputDoctorid = this.inputDoctorid.bind(this)\n\n        ApiProvider.getAlluser()\n            .then(data => {\n                this.setState({ userList: data.data })\n            })\n            .catch(err => { })\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n\n    radioOnChange = e => {\n        this.setState({\n            radioValue: e.target.value,\n        }, () => {\n            if (this.state.radioValue === 1) {\n                this.setState({\n                    pwdRadio: true,\n                })\n                console.log(this.state.radioValue)\n            } else if (this.state.radioValue === 0) {\n                this.setState({\n                    pwdRadio: false,\n                })\n                console.log(this.state.radioValue)\n            }\n        })\n    };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    MouseClickTable(record) {\n        this.setState({\n            MouseClick: record\n        })\n    }\n\n    queryUserdata() {\n        if (this.state.role !== undefined && this.state.name !== undefined) {\n            ApiProvider.searchUser(this.state.name, this.state.role)\n                .then(data => {\n                    this.setState({ userList: data.data })\n                })\n                .catch(err => { })\n        }\n    }\n\n    addUserdata() {//sso 只剩下4種角色 其他先傳空直\n        ApiProvider.register(this.state.inputName, '', this.state.adduser, this.state.inputUsername, 'none')\n            .then(data => {\n                ApiProvider.getAlluser()\n                    .then(data => {\n                        this.setState({ userList: data.data, inputUsername: '', inputPassword: '', inputName: '', inputDoctorid: '' })\n                    })\n                    .catch(err => { })\n            })\n            .catch(err => { })\n        this.setState({\n            visible: false,\n        });\n    }\n\n\n    showDeleteConfirm(name, account, role, roleString) {\n        const set_State = this.setState.bind(this)\n        confirm({\n            title: '請問您確定要刪除此帳號嗎?',\n            content: <div>姓名：{name}<br />角色：{roleString}<br />帳號：{account}</div>,\n            okText: 'Yes',\n            okType: 'danger',\n            cancelText: 'No',\n            onOk() {\n                ApiProvider.deleteUser(name, role, account).then(data => {\n                    ApiProvider.getAlluser()\n                        .then(data => {\n                            set_State({ userList: data.data })\n                        })\n                        .catch(err => { })\n                }).catch(err => { })\n            },\n            onCancel() {\n            },\n        });\n    }\n\n    EditStyle(key, name, account, role, roleString) {\n        if (key === this.state.MouseClick) {\n            return (\n                <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gridColumnGap: '10px' }}>\n                    <div>\n                        <Button onClick={this.showDeleteConfirm.bind(this, name, account, role, roleString)} type=\"dashed\">\n                            刪除\n                        </Button>\n                    </div>\n                </div>\n            );\n        }\n        else return null\n    }\n\n    handleChange(value) {\n        this.setState({ role: value })\n    }\n\n    adduserhandleChange(value) {\n        this.setState({ adduser: value })\n    }\n\n    nameChange(event) {\n        this.setState({ name: event.target.value })\n    }\n\n    inputuserName(event) {\n        this.setState({ inputUsername: event.target.value })\n    }\n\n    inputPassword(event) {\n        this.setState({ inputPassword: event.target.value })\n    }\n\n    inputName(event) {\n        this.setState({ inputName: event.target.value })\n    }\n\n    inputDoctorid(event) {\n        this.setState({ inputDoctorid: event.target.value })\n    }\n\n    Searchbar() {\n        const { Option } = Select;\n        const { Search } = Input;\n        return (\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <div style={{ fontSize: '16px' }}>\n                        角色:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Select placeholder='選擇角色' style={{ width: 150 }} onChange={this.handleChange.bind(this)}>\n                            <Option value={0}>唯讀使用者</Option>\n                            <Option value={1}>一般使用者</Option>\n                            <Option value={2}>一般使用者管理員</Option>\n                            <Option value={3}>系統設定管理員</Option>\n                            {/*<Option value={4}>超級管理者</Option>*/}\n                        </Select>\n                    </div>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        姓名:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Search placeholder=\"輸入個案姓名\" onChange={this.nameChange} value={this.state.name} onSearch={this.queryUserdata}></Search>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    render() {\n \n        const columns = [\n            {\n                title: '編號',\n                dataIndex: 'id',\n                key: 'id',\n                width: \"10%\"\n            },\n            {\n                title: '姓名',\n                dataIndex: 'name',\n                key: 'name',\n                width: \"10%\"\n            },\n            {\n                title: '醫師帳號',\n                dataIndex: 'account',\n                key: 'account',\n                width: \"12%\"\n            },\n            {\n                title: '角色',\n                dataIndex: 'role',\n                key: 'role',\n                width: \"10%\"\n            },\n            {\n                title: '權限',\n                dataIndex: 'power',\n                key: 'power',\n                width: \"40%\"\n            },\n            {\n                dataIndex: 'clickstate',\n                key: 'clickstate',\n                width: \"7%\"\n            }\n        ];\n\n        const userData = this.state.userList.map((data, index) => {\n            let roleString = ''\n            let powerString = ''\n\n            roleString = this.state.powerName[data.role]\n            powerString = this.state.power[data.role]\n\n            return [\n                {\n                    key: ++index,\n                    id: index,\n                    name: data.name,\n                    role: roleString,\n                    power: powerString,\n                    account: data.username,\n                    doctorid: data.doctorid,\n                    clickstate: this.EditStyle(index, data.name, data.username, data.role, roleString)\n                }\n            ]\n        })\n        let myNewArray = [].concat.apply([], userData);\n        const { Option } = Select;\n        return (\n            <div>\n                <div style={{ display: \"flex\", justifyContent: 'space-between', alignItems: 'center' }}>\n                    {this.Searchbar()}\n                    <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                        <Button style={{ width: \"100%\" }} onClick={this.showModal}>新增帳號</Button>\n                        <Modal\n                            title=\"新增帳號\"\n                            visible={this.state.visible}\n                            onOk={this.addUserdata}\n                            onCancel={this.handleCancel}\n                            width=\"570px\"\n                        >\n                            <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                                {/*<Radio.Group onChange={this.radioOnChange.bind(this)}>\n                                    <Radio value={0}>一般帳號</Radio>\n                                    <Radio value={1}>SSO帳號</Radio>\n                                </Radio.Group>*/}\n                            </div>\n                            <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\", marginTop: \"10px\" }}>\n                                <div style={{ marginLeft: \"10px\" }}>\n                                    醫師帳號：\n                                <Input id=\"username\" value={this.state.inputUsername} onChange={this.inputuserName} placeholder=\"輸入帳號\" style={{ width: '120px' }} />\n                                </div>\n                                {/*<div style={{ marginLeft: \"10px\" }}>\n                                    密碼：\n                                <Input type=\"password\" id=\"password\" value={this.state.inputPassword} onChange={this.inputPassword} disabled={this.state.pwdRadio} placeholder=\"輸入密碼\" style={{ width: '120px' }} />\n                                </div>*/}\n                                <div style={{ marginLeft: \"10px\" }}>\n                                    姓名：\n                                <Input id=\"name\" placeholder=\"輸入姓名\" value={this.state.inputName} onChange={this.inputName} style={{ width: '120px' }} />\n                                </div>\n                            </div>\n                            {/*<div style={{ display: \"flex\", justifyContent: 'left', alignItems: \"left\", marginTop: \"10px\", marginLeft: \"13px\" }}>\n                                <div style={{ marginLeft: \"0px\" }}>\n                                    醫師編號：\n                                <Input id=\"doctorid\" disabled={this.state.pwdRadio} placeholder=\"請輸入醫師編號\" value={this.state.inputDoctorid} onChange={this.inputDoctorid} style={{ width: '160px' }} />\n                                </div>\n                            </div>*/}\n                            <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\", marginTop: \"10px\", marginLeft: \"13px\" }}>\n                                <div style={{ marginLeft: \"0px\" }}>\n                                    角色：{this.state.pwdRadio ?\n                                        <Select placeholder='選擇角色' style={{ width: 150 }} onChange={this.adduserhandleChange.bind(this)}>\n                                            <Option value={0}>唯讀使用者</Option>\n                                            <Option value={1}>一般使用者</Option>\n                                            <Option value={2} disabled={this.state.powerLogin >= 3 ? false : true}>一般使用者管理員</Option>\n                                        </Select> :\n                                        <Select placeholder='選擇角色' style={{ width: 150 }} onChange={this.adduserhandleChange.bind(this)}>\n                                            <Option value={3}>系統設定管理員</Option>\n                                        </Select>}\n                                </div>\n                            </div>\n                            <div>\n\n                            </div>\n                        </Modal>\n                    </div>\n                </div>\n                <div style={{ marginTop: '20px' }}>\n                    <Table columns={columns} dataSource={myNewArray} onRow={record => {\n                        return {\n                            onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                            onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                        };\n                    }} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Powersetting;","import React, { Component } from 'react';\nimport { Table } from 'antd';\n\nclass Systemlogtable extends Component {\n    state = {\n        MouseClick: 0\n    }\n\n    MouseClickTable(record) {\n        this.setState({\n            MouseClick: record\n        })\n    }\n\n    render() {\n\n        const powerName = ['唯讀使用者', '一般使用者', '一般使用者管理員', '系統設定管理員', '超級管理者']\n        const loginlog_table = this.props.loginlogList.map(\n            (info, index) => {\n                let managerName = ''\n                let dateTime = info.time.split(\"T\")[0] + ' ' + info.time.split(\"T\")[1].split(\".\")[0]\n\n                managerName = powerName[info.role]\n\n                return {\n                    key: index,\n                    time: dateTime,\n                    event: 'User ' + info.name + '(' + managerName + ') login system'\n                }\n            }\n        )\n\n        const apilog_table = this.props.apilogList.map((data, index) => {\n            if (data !== null) {\n                let date = data.split(\"- -\")[1].split(\"]\")[0].split(\"[\")[1].split(\" \")[0].split(\"/\")\n                const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n                for (let j = 0; j < months.length; j++) {\n                    if (date[1] == months[j]) {\n                        date[1] = months.indexOf(months[j]) + 1\n                    }\n                }\n                if (date[1] < 10) {\n                    date[1] = '0' + date[1]\n                }\n                let time = date[2].split(\":\")[0] + \"-\" + date[1] + \"-\" + date[0] + \" \" + date[2].split(\":\")[1] + \":\" + date[2].split(\":\")[2] + \":\" + date[2].split(\":\")[3]\n                let content = data.split(\"- -\")[1].split(\"]\")[1]\n\n                return {\n                    key: index,\n                    time: time,\n                    event: content\n                }\n            }\n        })\n\n        const columns = [\n            {\n                title: '記錄時間',\n                dataIndex: 'time',\n                key: 'time',\n                width: \"1%\"\n            },\n            {\n                title: '事件',\n                dataIndex: 'event',\n                key: 'event',\n                width: \"10%\"\n            }\n        ]\n\n        return (\n            <div style={{ marginTop: '20px' }}>\n                {\n                    this.props.optionValue ? <Table columns={columns} dataSource={apilog_table} onRow={record => {\n                        return {\n                            onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                            onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                        }\n                    }} pagination={{\n                        onChange: (page, pageSize) => {\n                            //console.log('current page: ', page)\n                            this.props.getPages(page)\n                        }\n                    }} /> :\n                        <Table columns={columns} dataSource={loginlog_table} onRow={record => {\n                            return {\n                                onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                                onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                            }\n                        }} pagination={{\n                            onChange: (page, pageSize) => {\n                                //console.log('current page: ', page)\n                                this.props.getPages(page)\n                            }\n                        }} />\n                }\n            </div>\n        )\n    }\n}\n\nexport default Systemlogtable","import React, { Component } from 'react';\nimport { Progress, Select, DatePicker } from 'antd';\nimport Systemlogtable from './Systemlogtable'\nimport * as ApiProvider from '../API/ApiProvider';\n\nclass Systemlog extends Component {\n\n    state = { startTime: \"\", endTime: \"\", totalSpace: 0, usingSpace: 0, percent: 0, option: 0, loginlogList: [], apilogList: [], page: 1 }\n\n    componentDidMount() {\n        ApiProvider.getSpace()\n            .then(data => {\n                const totalSpace = data.data[0].total / 1024 / 1024 / 1024\n                const usingSpace = (data.data[0].total - data.data[0].unuse) / 1024 / 1024 / 1024\n                const percent = (usingSpace / totalSpace) * 100\n                this.setState({ totalSpace: totalSpace.toFixed(2), usingSpace: usingSpace.toFixed(2), percent: percent.toFixed(2) })\n            })\n            .catch(err => { })\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    onChange(date, dateString) {\n        this.setState({ startTime: dateString[0], endTime: dateString[1] }, () => {\n            if (this.state.option == 0) {\n                this.queryLoginLogdata()\n            } else if (this.state.option == 1) {\n                this.queryApiLogdata()\n            }\n        });\n    }\n\n    queryLoginLogdata() {\n        if (this.state.startTime !== \"\" && this.state.endTime !== \"\") {\n            const st = new Date(this.state.startTime.split('-')[0], this.state.startTime.split('-')[1] - 1, this.state.startTime.split('-')[2]).toISOString().split('.')[0];\n            const et = new Date(this.state.endTime.split('-')[0], this.state.endTime.split('-')[1] - 1, this.state.endTime.split('-')[2]).toISOString().split('.')[0];\n\n            ApiProvider.getLoginlog(st, et)\n                .then(data => {\n                    this.setState({ loginlogList: data.data, apilogList: [] })\n                })\n                .catch(err => { })\n        }\n    }\n\n    queryApiLogdata() {\n        if (this.state.startTime !== \"\" && this.state.endTime !== \"\") {\n            ApiProvider.getApilog(this.state.startTime)\n                .then(data => {\n                    this.setState({ apilogList: data.data, loginlogList: [] })\n                })\n                .catch(err => { })\n        }\n    }\n\n    getPages(pages) {\n        this.setState({ page: pages },()=>{\n            //console.log('current page: ', this.state.page)\n        })     \n    }\n\n    handleChange(value) {\n        this.setState({ option: value })\n    }\n    render() {\n        const { Option } = Select;\n        const { RangePicker } = DatePicker;\n        const onChange = this.onChange.bind(this);\n\n        return (\n            <div>\n                <div style={{ fontSize: '22px' }}>系統空間使用狀況</div>\n                <div style={{ marginTop: \"10px\" }}><Progress percent={this.state.percent} showInfo={false} /></div>\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginTop: \"10px\" }}>\n                    <div>\n                        <div>已使用空間/總空間</div>\n                        <div>{this.state.usingSpace}GB({this.state.percent}%)/{this.state.totalSpace}GB</div>\n                    </div>\n                    <div>\n                        <div>收案中的個案資料0.9GB(10.5%)</div>\n                        <div>0.9GB(10.5%)</div>\n                    </div>\n                </div>\n                <div style={{ marginTop: '20px' }}>\n                    <div style={{ fontSize: '22px' }}>Event Log</div>\n                    <div style={{ marginTop: \"10px\" }}>\n                        <Select placeholder='選擇log' style={{ width: 200 }} onChange={this.handleChange.bind(this)}>\n                            <Option value={0}>Login log</Option>\n                            <Option value={1}>API access log</Option>\n                        </Select>\n                        <RangePicker onChange={onChange} style={{ marginLeft: \"10px\", width: 400 }} />\n                    </div>\n                    <div style={{ marginTop: '10px' }}>\n                        <Systemlogtable loginlogList={this.state.loginlogList} apilogList={this.state.apilogList} optionValue={this.state.option} getPages={this.getPages.bind(this)} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Systemlog","import React, { Component } from 'react';\nimport { Tabs } from 'antd';\nimport Powersetting from '../Systemgroup/powersetting'\nimport Systemlog from '../Systemgroup/Systemlog'\nimport Warningmanage from '../Systemgroup/Warningmanage'\n\n\nclass Systemcontrol extends Component {\n    state = {\n        powerLogin: 0\n    }\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    render() {\n\n        const { TabPane } = Tabs;\n        const bollogin = this.state.powerLogin > 2\n        return (\n            <div style={{ paddingLeft: \"24px\", paddingRight: \"24px\" }}>\n                <div style={{ fontSize: \"22px\", height: '50px', lineHeight: \"50px\" }}>系統設定</div>\n                <Tabs defaultActiveKey=\"5\" onChange={console.log(\"click\")} å>\n                    <TabPane tab=\"權限設定\" key=\"1\" >\n                        <Powersetting />\n                    </TabPane>\n                    {\n                        bollogin && <TabPane tab=\"系統摘要\" key=\"2\" >\n                            <Systemlog />\n                        </TabPane>\n                    }\n                    {/*<TabPane tab=\"裝置連線狀態管理\" key=\"3\">\n                    </TabPane> \n                    <TabPane tab=\"病人資料狀態管理\" key=\"3\">\n                    </TabPane>                  \n                    <TabPane tab=\"警示管理\" key=\"5\">\n                        <Warningmanage/>\n                    </TabPane>*/}\n                </Tabs>\n            </div>\n        );\n    }\n}\n\nexport default Systemcontrol;","import React, { Component } from 'react';\nimport { Checkbox, Select, Radio, Input, Button } from 'antd';\n\nclass Warningmanage extends Component {\n    state = {\n        value: 1,\n    };\n\n    onRadioChange = e => {\n        console.log('radio checked', e.target.value);\n        this.setState({\n            value: e.target.value,\n        });\n    };\n\n    Step5function() {\n        const { Option } = Select;\n\n        return (\n            <div style={{ marginTop: '20px' }}>\n                <div style={{ color: 'rgba(59, 151, 225, 1)', fontSize: '16px' }}>Step.5</div>\n                <div style={{ borderWidth: '1px', borderColor: 'rgba(59, 151, 225, 1)', borderStyle: 'solid', borderRadius: '8px', width: '100%', padding: '30px', display: 'flex', alignItems: 'center' }}>\n                    <div>\n                        <div style={{ fontSize: '16px', marginBottom: '20px' }}>設定警示Profile</div>\n                        <div>\n                            <Radio.Group onChange={this.onChange} value={this.state.value}>\n                                <Radio style={{ display: 'block', height: '50px', lineHeight: '50px' }} value={1}>\n                                    不設定為Profile，直接儲存本次設定\n                                </Radio>\n                                <Radio style={{ display: 'block', height: '50px', lineHeight: '50px' }} value={1}>\n                                    將此設定規則儲存為套件Profile\n                                    <Select value='藍色' style={{ width: 150, marginLeft: 10, marginRight: 10 }}>\n                                        <Option value={0}>主要管理者</Option>\n                                        <Option value={1}>一般管理者</Option>\n                                        <Option value={2}>唯獨使用者</Option>\n                                    </Select>\n                                </Radio>\n                            </Radio.Group>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    Step4function() {\n        const { Option } = Select;\n\n        return (\n            <div style={{ marginTop: '20px' }}>\n                <div style={{ color: 'rgba(59, 151, 225, 1)', fontSize: '16px' }}>Step.4</div>\n                <div style={{ borderWidth: '1px', borderColor: 'rgba(59, 151, 225, 1)', borderStyle: 'solid', borderRadius: '8px', width: '100%', padding: '30px', display: 'flex', alignItems: 'center' }}>\n                    <div>\n                        <div style={{ fontSize: '16px', marginBottom: '20px' }}>設定警示呈現方式</div>\n                        <div>\n                            <Radio.Group onChange={this.onChange} value={this.state.value}>\n                                <Radio style={{ display: 'block', height: '50px', lineHeight: '50px' }} value={1}>\n                                    箭頭呈現\n                                    <Select placeholder='選擇方向' style={{ width: 150, marginLeft: 10, marginRight: 10 }}>\n                                        <Option value={0}>主要管理者</Option>\n                                        <Option value={1}>一般管理者</Option>\n                                        <Option value={2}>唯獨使用者</Option>\n                                    </Select>\n                                </Radio>\n                                <Radio style={{ display: 'block', height: '50px', lineHeight: '50px' }} value={1}>\n                                    區塊呈現\n                                    <Input style={{ width: 150, marginLeft: 10, marginRight: 10 }} placeholder='請輸入Profile name' />\n                                </Radio>\n                            </Radio.Group>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    Step3function() {\n        const { Option } = Select;\n\n        return (\n            <div style={{ marginTop: '20px' }}>\n                <div style={{ color: 'rgba(59, 151, 225, 1)', fontSize: '16px' }}>Step.3</div>\n                <div style={{ borderWidth: '1px', borderColor: 'rgba(59, 151, 225, 1)', borderStyle: 'solid', borderRadius: '8px', width: '100%', padding: '30px', display: 'flex', alignItems: 'center' }}>\n                    <div>\n                        <div style={{ fontSize: '16px', marginBottom: '20px' }}>設定警示類型</div>\n                        <div>\n                            <Radio.Group onChange={this.onChange} value={this.state.value}>\n                                <Radio style={{ display: 'block', height: '150px', lineHeight: '50px' }} value={1}>\n                                    閾值警示\n                                    <div style={{ height: '50px', marginLeft: '30px', display: 'flex', alignItems: 'center' }}>\n                                        <Checkbox>超過閾值</Checkbox>\n                                        <Input style={{ width: 150, marginLeft: 10, marginRight: 10 }} placeholder='請輸入數值' />\n                                        <div>以上（合）時，顯示警示燈號</div>\n                                    </div>\n                                    <div style={{ height: '50px', marginLeft: '30px', display: 'flex', alignItems: 'center' }}>\n                                        <Checkbox>超過閾值</Checkbox>\n                                        <Input style={{ width: 150, marginLeft: 10, marginRight: 10 }} placeholder='請輸入數值' />\n                                        <div>以下（合）時，顯示警示燈號</div>\n                                    </div>\n                                </Radio>\n                                <Radio style={{ display: 'block', height: '100px', lineHeight: '50px' }} value={2}>\n                                    與特定觀察值比較\n                                    <div style={{ height: '50px', marginLeft: '30px', display: 'flex', alignItems: 'center' }}>\n                                        <div>與</div>\n                                        <Select value='前一筆' style={{ width: 100, marginLeft: 10, marginRight: 10 }}>\n                                            <Option value={0}>主要管理者</Option>\n                                            <Option value={1}>一般管理者</Option>\n                                            <Option value={2}>唯獨使用者</Option>\n                                        </Select>\n                                        <div>觀察值比較</div>\n                                        <Select value='高於' style={{ width: 100, marginLeft: 10, marginRight: 5 }}>\n                                            <Option value={0}>主要管理者</Option>\n                                            <Option value={1}>一般管理者</Option>\n                                            <Option value={2}>唯獨使用者</Option>\n                                        </Select>\n                                        <Input style={{ width: 100, marginLeft: 5, marginRight: 10 }} placeholder='請輸入數值' />\n                                        <div>%，則亮燈</div>\n                                    </div>\n                                </Radio>\n                            </Radio.Group>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    Step2function() {\n        const { Option } = Select;\n\n        function handleChange(value) {\n            console.log(`selected ${value}`);\n        }\n        return (\n            <div style={{ marginTop: '20px' }}>\n                <div style={{ color: 'rgba(59, 151, 225, 1)', fontSize: '16px' }}>Step.2</div>\n                <div style={{ borderWidth: '1px', borderColor: 'rgba(59, 151, 225, 1)', borderStyle: 'solid', borderRadius: '8px', width: '100%', padding: '30px', display: 'flex', alignItems: 'center' }}>\n                    <div>\n                        <div style={{ fontSize: '16px', marginBottom: '20px' }}>設定警示適用對象</div>\n                        <div>\n                            <Radio.Group onChange={this.onRadioChange} value={this.state.value}>\n                                <Radio style={{ display: 'block', height: '50px', lineHeight: '50px' }} value={1}>Option A</Radio>\n                                <Radio style={{ display: 'block', height: '150px', lineHeight: '50px' }} value={2}>\n                                    Option b\n                                    <div style={{ marginLeft: \"20px\" }}>\n                                        <Radio.Group onChange={this.onChange} value={this.state.value}>\n                                            <Radio style={{ display: 'block', height: '50px', lineHeight: '50px' }} value={1}>\n                                                <Select placeholder='選擇角色' style={{ width: 200, marginLeft: 10 }} onChange={handleChange}>\n                                                    <Option value={0}>主要管理者</Option>\n                                                    <Option value={1}>一般管理者</Option>\n                                                    <Option value={2}>唯獨使用者</Option>\n                                                </Select>\n                                            </Radio>\n                                            <Radio style={{ display: 'block', height: '50px', lineHeight: '50px' }} value={2}>\n                                                <Input style={{ width: 450, marginLeft: 10 }} placeholder='0-20週' />\n                                            </Radio>\n                                        </Radio.Group>\n                                    </div>\n                                </Radio>\n                            </Radio.Group>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    Step1function() {\n        const { Option } = Select;\n\n        function handleChange(value) {\n            console.log(`selected ${value}`);\n        }\n        return (\n            <div>\n                <div style={{ color: 'rgba(59, 151, 225, 1)', fontSize: '16px' }}>Step.1</div>\n                <div style={{ borderWidth: '1px', borderColor: 'rgba(59, 151, 225, 1)', borderStyle: 'solid', borderRadius: '8px', width: '100%', padding: '30px', display: 'flex', alignItems: 'center' }}>\n                    <div>\n                        <div style={{ fontSize: '16px', marginBottom: '20px' }}>選擇臨床警示項目</div>\n                        <div>\n                            <Select placeholder='選擇角色' style={{ width: 200 }} onChange={handleChange}>\n                                <Option value={0}>主要管理者</Option>\n                                <Option value={1}>一般管理者</Option>\n                                <Option value={2}>唯獨使用者</Option>\n                            </Select>\n                            <Select placeholder='選擇角色' style={{ width: 200, marginLeft: '20px' }} onChange={handleChange}>\n                                <Option value={0}>主要管理者</Option>\n                                <Option value={1}>一般管理者</Option>\n                                <Option value={2}>唯獨使用者</Option>\n                            </Select>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    render() {\n        const { Option } = Select;\n\n        function handleChange(value) {\n            console.log(`selected ${value}`);\n        }\n\n        function onChange(e) {\n            console.log(`checked = ${e.target.checked}`);\n        }\n        return (\n            <div>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <Checkbox onChange={onChange}></Checkbox>\n                    <div style={{ marginLeft: '10px' }}>套用已儲存Profile</div>\n                    <Select placeholder='選擇角色' style={{ width: 200, marginLeft: \"10px\" }} onChange={handleChange}>\n                        <Option value={0}>主要管理者</Option>\n                        <Option value={1}>一般管理者</Option>\n                        <Option value={2}>唯獨使用者</Option>\n                    </Select>\n                </div>\n                {this.Step1function()}\n                {this.Step2function()}\n                {this.Step3function()}\n                {this.Step4function()}\n                {this.Step5function()}\n                <div style={{ padding: '30px', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                    <Button style={{ width: '150px', height: '50px' }}>取消</Button>\n                    <Button style={{ width: '150px', height: '50px', marginLeft: '20px' }}>儲存</Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Warningmanage","import React, { Component } from 'react';\nimport './Layout.scss';\nimport Sidermenu from './Sidermenu';\nimport Bedview from '../Wardview/Bedinfo/Bedview'\nimport Historyview from '../Content/Historyview'\nimport Patientviewlayout from '../Patientview/Patientviewlayout'\nimport Systemcontrol from '../Content/Systemcontrol'\nimport { Route, Switch, Link } from 'react-router-dom';\nimport { yyyymmddformat, weekdateformat } from '../Function/Timeformat'\nimport { Icon } from 'antd'\n\nclass Layoutframe extends Component {\n    onClickLogout() {\n        sessionStorage.clear();\n    }\n    render() {\n        const UsrName = sessionStorage.getItem('user');\n        const url_path = this.props.location.pathname\n        return (\n            <div style={{ height: \"100vh\" }}>\n                <div className=\"header\">\n                    {/*eslint-disable-next-line*/}\n                    <div style={{ display: 'flex', alignItems: 'center', fontweight: \"default\", fontsize: \"20px\" }}>\n                        <t1>北榮NICU智慧醫療系統</t1>\n                        <Sidermenu path={url_path} routes={this.props.route}></Sidermenu>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"10px\" }}>\n                        <t3 style={{ color: 'white' }}>{UsrName}醫師 {yyyymmddformat(new Date())} {weekdateformat(new Date())}</t3>\n                        <Link to=\"/Login\" onClick={() => this.onClickLogout()}>\n                            <Icon style={{ color: \"white\" }} type=\"logout\" />\n                        </Link>\n                    </div>\n                </div>\n                <div className=\"content\">\n                    <Switch>\n                        <Route path={`${this.props.match.path}/ward`} component={Bedview} />\n                        <Route path={`${this.props.match.path}/history`} component={Historyview} />\n                        <Route path={`${this.props.match.path}/system`} component={Systemcontrol} />\n                        <Route path={`${this.props.match.path}/patient`} component={Patientviewlayout} />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Layoutframe;\n","import React, { Component } from 'react';\nimport { Button } from 'antd';\nimport { Redirect } from 'react-router-dom'\nimport { Input, Icon } from 'antd'\nimport Cookies from 'js-cookie'\nimport * as ApiProvider from '../API/ApiProvider';\n\n\nclass Loginview extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: false,\n            permission: true,\n            statusstring: null\n        }\n        this.setRedirect = this.setRedirect.bind(this);   //把元件中的this繫結到handleClick方法中，這樣就會保持this一致          \n    };\n\n    componentDidMount() {\n        window.addEventListener('keyup', e => {\n            console.log(\"check keyCode\")\n            e.keyCode === 13 && this.setRedirect()\n        })\n    }\n\n    setRedirect = () => {\n        const account = document.getElementById(\"account\").value;\n        const password = document.getElementById(\"password\").value;\n        const data = { username: account, password: password }\n        console.log(account, password)\n        ApiProvider.login(account, password)\n            .then(result => {\n                console.log(\"login OK \" + JSON.stringify(result));\n                const userData = result.data\n                const user = account\n                const role = userData[0].role\n                sessionStorage.setItem('user', user);\n                sessionStorage.setItem('role', role);\n                this.setState({\n                    redirect: true\n                })\n            })\n            .catch(err => {\n                console.log(\"login NG \" + JSON.stringify(err));\n                this.setState({\n                    permission: false,\n                    statusstring: \"帳號或密碼錯誤\"\n                })\n            });\n    }\n    renderRedirect = () => {\n        const login = sessionStorage.getItem('user');\n        const role = sessionStorage.getItem('role');\n        console.log(role)\n        if (login !== null) {\n            if (Number(role) === 5) {\n                return <Redirect from={\"/login\"} to={\"/nicu/system\"} />\n            }\n            return <Redirect from={\"/login\"} to={\"/nicu/ward/wardindex\"} />\n        }\n        // else if (login !== null) {\n        //     return <Redirect from={\"/login\"} to={\"/nicu\"} />\n        // }\n    }\n\n\n    render() {\n        return (\n            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"100vh\", width: \"100vw\", background: 'linear-gradient(to bottom, rgba(195, 239, 255, 1), rgba(46, 100, 164, 1))' }}>\n                {this.renderRedirect()}\n                <div style={{ display: 'flex', justifyContent: \"center\", alignItems: \"center\", flexWrap: \"wrap\" }}>\n                    <div style={{ color: \"white\", fontSize: \"26px\", textAlign: \"center\", width: \"100%\" }}>台北榮民總醫院 NICU智慧醫療系統</div>\n                    <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ width: \"350px\", height: \"250px\", borderRadius: \"4px\", backgroundColor: \"white\", textAlign: \"center\", padding: '25px', position: \"relative\" }}>\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                                <div style={{ height: \"32px\", width: \"32px\", borderRadius: \"2px\", backgroundColor: \"rgba(46,100,164,1)\", color: \"white\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>L</div>\n                                <Input id=\"account\" style={{ marginLeft: \"20px\" }} placeholder=\"請輸入3270主機帳號\"></Input>\n                            </div>\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginTop: \"25px\" }}>\n                                <div style={{ height: \"32px\", width: \"32px\", borderRadius: \"2px\", backgroundColor: \"rgba(46,100,164,1)\", color: \"white\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>P</div>\n                                <Input type=\"password\" id=\"password\" style={{ marginLeft: \"20px\" }} placeholder=\"請輸入密碼\"></Input>\n                            </div>\n                            <Button style={{ width: \"280px\", backgroundColor: \"rgba(46, 100, 164, 1)\", color: \"white\", marginTop: \"70px\" }} onClick={this.setRedirect}>登入</Button>\n                            <div style={{ display: this.state.permission ? \"none\" : \"block\", color: \"red\", fontSize: \"1rem\" }}>{this.state.statusstring}</div>\n                        </div>\n                    </div>\n                    <div style={{ width: \"100%\", justifyContent: \"center\", alignItems: \"center\", display: \"flex\" }}>200206.005-T</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Loginview\n","import React from 'react';\nimport Homepage from './Homepage'\nimport './App.scss';\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\nimport Layoutframe from './Layout/Layout'\nimport Loginview from './Layout/Loginview'\nimport 'antd/dist/antd.css';\n\nfunction App() {\n  document.documentElement.style.fontSize = '14px'\n  return (\n    <BrowserRouter>\n      <Route exact path=\"/\" component={Homepage} />\n      <Redirect from={'/'} to={\"/login\"} />\n      <Route path=\"/nicu\" component={Layoutframe} />\n      <Route path=\"/login\" component={Loginview} />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Search.d99586da.svg\";"],"sourceRoot":""}