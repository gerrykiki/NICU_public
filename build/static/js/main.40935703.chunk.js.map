{"version":3,"sources":["Image/svg/edit2.svg","Image/svg/filter.svg","Image/svg/Wardview.svg","Image/svg/Historyview.svg","Image/svg/Control.svg","Image/svg/file1.svg","Image/svg/file2.svg","Image/svg/delete.svg","Image/svg/dragdown.svg","Image/svg/RT.svg","Image/svg/calender.svg","Image/svg/calenderwhite.svg","Image/svg/ping.svg","Image/svg/pingwhite.svg","Image/Logo/1200px-Taipei_Veterans_General_Hospital_Emblem.svg.png","Image/svg/Edit.svg","Homepage.js","Layout/Sidermenu.js","Function/Wardstate.js","API/ApiProvider.js","API/ApiGithub.js","Wardview/Wardcardstatus.js","Wardview/WardCardvalue-k.js","Function/Wardbedfunction.js","Wardview/Wardcard/Wardcarddetail.js","Wardview/Wardcard/UnpreviewWardCardDetail.js","Commonfunction.js","Wardview/Wardnote.js","Wardview/Bedinfo.js","Function/Timeformat.js","Patientview/CrossSectionView/Labview.js","Wardview/WardBedinformation.js","Module/Schedule_event.js","Wardview/Wardschedule.js","Wardview/Wardinfoindex.js","jsonResponse.js","Wardview/Wardlifechart.js","Wardview/Wardmonthafter.js","Wardview/Wardgrewchart.js","Patientview/Schedule/Notice.js","Patientview/CrossSectionView/Labviewitem.js","Function/FiliterReg.js","Wardview/Wardcardvitalsign.js","Wardview/Wardchart.js","Wardview/Wardunfousercheckbox.js","Patientview/Patientviewinfo.js","Wardview/Wardinfouser-k.js","Wardview/Bedinfo/Bedview.js","Content/Historyview.js","Patientview/CrossSectionView/Crossectionvitalsignchart.js","Patientview/CrossSectionView/Vitalsign.js","Patientview/CrossSectionView/Warningsettinglist.js","Patientview/Controlbar.js","Module/iopage.js","Patientview/CrossSectionView/Crossection_io.js","Patientview/CrossSectionView/NonlabviewtableCell.js","Patientview/ExamReportModal.js","Patientview/CrossSectionView/Nonlabviewtable.js","Patientview/CrossSectionView/Nonlabview.js","Patientview/CrossSectionView/RTtable.js","Patientview/CrossSectionView/GAS.js","Patientview/CrossSectionView/RemarkModal.js","Patientview/CrossSectionView/RTbreathtablecell.js","Patientview/CrossSectionView/RTbreathetable.js","Patientview/CrossSectionView/RTbreathe.js","Patientview/Prescriptionorder/Prescriptionordertablecell.js","Patientview/Prescriptionorder/Prescriptionordertable.js","Patientview/Prescriptionorder/Prescriptionorder.js","Patientview/Treatmentorder/Treatmentordertablecell.js","Patientview/Treatmentorder/Treatmentordertable.js","Patientview/Treatmentorder/Treatmentorder.js","Module/Notecell.js","Module/Note.js","Patientview/CrossSectionView/Crosssectionschedule.js","Patientview/CrossSectionView/Crosssection_todo.js","Patientview/CrossSectionView/Crosssectionlayout.js","Patientview/ChronicleView/Chronic_io.js","Patientview/ChronicleView/ChronicTableCellTooltipCell.js","Patientview/ChronicleView/ChronicTableCell.js","Patientview/ChronicleView/ChronicTable.js","Patientview/ChronicleView/ChronicLab.js","Patientview/ChronicleView/ChronicRTTableCell.js","Patientview/ChronicleView/ChronicRTTable.js","Patientview/ChronicleView/ChronicRT.js","Patientview/ChronicleView/ChronicOrderTable.js","Patientview/ChronicleView/ChronicOrder.js","Patientview/ChronicleView/ChronicWeightTable.js","Patientview/ChronicleView/ChronicWeight.js","Module/Vitalxaxis.js","Module/Vitalxaxisbot.js","Patientview/ChronicleView/Chronic_vital.js","Patientview/ChronicleView/Chroniclelayout.js","Patientview/FlootSheetView/Flootsheetio.js","Patientview/FlootSheetView/Flootsheetlayout.js","Patientview/ExamReport/Examchart.js","Patientview/ExamReport/ExamLabview.js","Data/RegularData.js","Patientview/ExamReport/ExamNonlabtablecell.js","Patientview/ExamReport/NonLabview.js","Patientview/ExamReport/ExamReport.js","Patientview/Orderview/Orderview.js","Patientview/NoteView/Note.js","Patientview/RT/RTview.js","Patientview/Nurtion/Nurtionfeedingcell.js","Patientview/Nurtion/Nurtionfeeding.js","Patientview/Nurtion/Nurtion_TPN_cell.js","Patientview/Nurtion/Nurtion_TPN.js","Patientview/Nurtion/Watervaluechart.js","Patientview/Nurtion/Nurtion.js","Patientview/Infection/Infectionlabtable.js","Patientview/Infection/Infectionlab.js","Patientview/Infection/Infection.js","Patientview/Schedule/Bedsidecard.js","Patientview/Schedule/Scheduletodo.js","Patientview/Schedule/Calendercell.js","Patientview/Schedule/Calender.js","Patientview/Schedule/Scheduleview.js","Patientview/Patientviewlayout.js","Systemgroup/powersetting.js","Systemgroup/Systemlogtable.js","Systemgroup/Systemlog.js","Content/Systemcontrol.js","Layout/Layout.js","Layout/Loginview.js","App.js","serviceWorker.js","index.js","Image/svg/Chooseedit.svg","Image/svg/details.svg"],"names":["module","exports","Homepage","Component","Sidermenu","state","powerLogin","Number","sessionStorage","getItem","powerLogins","this","setState","key","match","value","path","props","Selectkeynumber","rule","console","log","style","display","alignItems","marginLeft","height","gridTemplateColumns","gridColumnGap","to","class","select_hover","src","wardviewlogo","alt","historylogo","controllogo","CalculateAge","BornStatus","startDate","moment","date","minus","diff","undefined","week","day","Math","floor","month","statecolor","Labwarningvalue","title","BornWeight","weightlist","birthday","Array","isArray","findata","filter","index","rec_dat","type","length","parseInt","value2","NewestWeight","XM2JSON","data","xm2","X2JS","status","xml2js","outmsg","ret","parsedata","resconts","rescont","QMNCXM2JSON","Doc","DocList","Main","element","PDTYPE","PDDOCNMC","toString","trim","selectweight","List","array","valueOf","push","getPersionalStatus","hisid","axios","get","defaults","baseURL","config","headers","getAlluser","getQDC","caseno","st","et","getQENT","getQMNC","getQSPE","getQTWPER","getOnePatientNotice","transinno","HISID","getAllPatient","getOnePatientRemark","transid","getOneRemark","remarkid","getOnePatientSchedule","starttime","endtime","getStoredProcedureORDLIST","dpt","docid","getStoredProcedureRESDBGAS","getStoredProcedureRESDGLU1","getStoredProcedureRESDISP","seq","getStoredProcedureRESLAB01","getStoredProcedureRESLAB02","getStoredProcedureRESLAB0C","getStoredProcedureRESSECT","getStoredProcedureTRTMNTQ1","getStoredProcedureUDORDER0","getTablePBASINFO","PHISTNUM","getTablePDOCNEW","PCASENO","getTablePLOC","createTodo","caseid","context","time","body","post","getOneTodo","getPatientwardvalueBoxPlot","startTime","endTime","interval","getVitalSignData","getHisidwardvalue","axiosGithub","create","timeout","getGitHubJson","string","Wardcarstatus","TRTMNTQ1","UDORDER0","FlagReg","TRQ1","ApiProvider","then","info","arr","ORSTATUS","catch","err","UDORDER","dataList","UDSTATUS","Reg","ApiGithub","Promise","all","result","parseFlagData","Flag","item","StatusUDORDER","some","UDDRGNAM","toLowerCase","UDGNAME","ParseValueUD","indexOf","StatusTRTMNTQ1","ORPROCED","ParseValueTRT","statusspan","source","style_change","AntiStatus","TPNStatus","NP0Status","FoleyStatus","DrainStatus","statuslist","InvasiveRespiratorStatus","NonInvasiveRespiratorStatus","RespiratorStatusParse","map","className","Respirator","wardstatestringformat","WardCard","useState","CenterMonitorValue","SetCenterMonitorValue","SetHID","Timer","SetTimer","InitCenterData","useEffect","TimerID","setInterval","clearInterval","HID","phistnum","JSON","stringify","color","hr","spo2","fontWeight","fontSize","abpd","abps","abpm","gridColumnsGap","rr","bt","bednumberformat","number","gender","pregancyweeksanddays","bornweeks","borndays","birthdays","localtoborndays","Date","getTime","BornChangeWeek","BornChangeDay","BornChangeWeight","Wardcarddetail","hoverstate","clickstate","mouse_hover","edit_hover","visible","pbasignfo","birthdayweight","weight","bornweek","bornday","nowweight","report","nonreport","remark","TRANSINID","TRANSINDT","TRANSINTM","modatstatus","persionstatus","handleCancel","e","showModal","add","format","TRID","API_DATA","mapList","ORRCPDT","ORRCPTM","name","sex","parseFloat","toFixed","pname","psex","bweight","bweek","bday","personstatus","typefrom","from","PNAMEC","PSEX","Birthday","PBIRHDT","BornWeeks","BornDays","BornWeekAndDay","viewstatus","dataArrayRender","HBEDNO","defaultValue","onChange","margin","width","onCancel","footer","justifyContent","border","onClick","handleOk","valueFormat","statusPersion","QMNC","QTWER","Wardstate","weeks","days","previewmode","hbedlist","QTWPER","Weight","AgeStatus","role","cursor","editlogo","fileLogo","file2Logo","borderBottomWidth","borderBottomColor","borderBottomStyle","centerdata","centerMonitorData","padding","position","overflow","textOverflow","whiteSpace","pathname","Modelrender","Unpreviewwardcarddetail","databool","statedata","document","getElementById","mode","bednumber","marginBottom","backgroundColor","format_bednumber","onOk","gridTemplateRows","gridRowGap","id","placeholder","marginRight","WardcardNote","_isMounted","editstate","AnnoceRawData","AnnoceDisplayData","inputContent","onInputChange","bind","queryAllAnnounce","parse","announceArray","event","target","announce","doc","newAnnounce","editor","findIndex","splice","announcelist","list","editstatus","localTime","utc","toDate","deleteimg","ondeleteannounce","placement","detail","annData","sort","a","b","marginTop","onMouseUp","editlist","borderCollapse","AddNewannouce","canceledit","okeditlist","Bedinformation","tableselect","sendReturnSelect","selectkey","idkey","localtime","select","Selectswitch","parentCallback","weekdatformat","weekday","Month_format","getMonth","getDate","getDay","Unselect_tablestyle","borderLeftWidth","textAlign","borderStyle","borderWidth","borderColor","hbedcount","transoutcount","transincount","rtcount","nonrtcount","tpncount","yyyymmddformat","timestamp","getFullYear","formatmonth","Monthformat","yyyymmfirstweeksate","mmddformat","daysdiff","newtime","oldtime","timestampdiff","compareday","MG_VALUE","PROC_VALUE","Wardbedinformation","subselectdate","selectid","PickerDate","bedinfo","onChangeDate","datestring","apiData","callbackFunction","idnumber","trainDay","bTime","nTime","aTime","trans","RenderCell","pnamec","selectDateitem","filterdate","inType","transoutIncountperson","outType","transoutOutcountperson","transIn","transOut","transferListlayout","infolist","infoList","dateTime","i","Bedinfo","reverse","fontStyle","paddingLeft","showToday","disabledDate","current","startOf","allowClear","shape","icon","bedinfotitle","weekbedinfo","infoitem","Schedule_event_list","detailstate","items_interval","EditMode","selSchedule","Scheduledata","ID","caseinfo","querySchedule","queryALLSchedule","propsDate","stateDate","timeNowStr","toISOString","writter","PBASINGNINFO","PLOCSTART","getHours","getMinutes","scheduleData","ScheduleList","text","borderRadius","detaillogo","changestate","onChangeEditMode","EditButton","EditControl","listevent","onClickCancel","onClickEnter","Wardschedule","Wardinfoindex","growdata","Male_befor","y","min","max","FeMale_before","Male_after","FeMale_after","WardlifeChart","drawChart","svg_key","weightList","grewinfo","window","screen","availWidth","WEEK_BORN","DAY_BORN","BIRTHDAY","pregencyTimestamp","tick","Row","tickValues","d3","domain","range","x","yAxis","ticks","tickSize","tickPadding","tickFormat","d","xAxis","yRightAxis","svg","append","attr","call","datasource","rec_tim","id_key","Wardmonthafter","Month","Wardgrewchart","test_items_interval","Data","WeightList","testiteminterval","paddingRight","borderTopLeftRadius","borderTopRightRadius","SwitchTestItemInterval","Onchangetimeinterval","switch_monthy","Notice","noticeData","preTRID","queryPatientImportant","transinid","updateTime","disableEdit","tooltiptext","t","displayTime","fixData","remarkcell","Editor","TextArea","Input","renderEditButton","autoSize","Labviewitem","fixtitle","Source","TimeR","TimeRender","ListForTime","DataList","ORRESDT","ListForTimeAndTarget","forEach","split","QSPERegList","qspe","SettingValue","valueList","qspearray","SelectElement","special","DataArray","DataJson","Labviewlayout","parser","dummy_mg","dummy_pct","RESDGLU1","RESLAB02","RESLAB01","RESDBGAS","RESLAB0C","RESSECT","prePickerDate","preHID","preTRDT","TRDT","getLabData","TransinDate","MonthInterval","timestampInterval","selectMonthInterval","latestvalue","selected_parser","find","apply_condition","arrayLength","ORMM","CASEID","ORDSEQNO","RESDISP","selected_mapping","mappings","mapping","re","RegExp","regex_str","regex_flags","CONTENT","currentTimeStr","currentItemTimestamp","matchValue","updateLabviewIfNeed","currentIdx","ListEndData","RESDGLU1LIST","FiliterReg","RESLAB02LIST","RESLAB01LIST","RESDBGASLIST","RESSECT_MG_LIST","findLastestTargetValue","RESSECT_PROC_LIST","GLUFAST","WBC","RSV01","SEG","RSV14","LYMP","RSV15","HGB","RSV03","PLATELET","RSV09","NA","RSV13","K","CA","P","RSV17","ALB","RSV02","CRP","RSV32","PH","SS07","PCO2","SS06","BE","SS01","PO2","SS08","BUN","RSV05","CR","RSV06","ALT","RSV11","AST","RSV12","TBIL","RSV08","DBIL","RSV25","ALKP","TOTALCA","IRON","RSV26","TIBC","RSV27","FERRITIN","areainterval","nullvalue","TitleR","TitleRender","ORBGNDT","WardcardvitalsignChart","sourcedata","getCenterMonitor","selectType","axisTop","axisBot","circlrcolor","MAX","MIN","Upper","Lower","transformmargin","cal_svg_transform","time_now","time_array","time_axis_array","x_axis_time","time_array_reverse","time_axis_array_reverse","formatHour","n","xAxisBottom","remove","cal_svg_hight","formatBoxWidth","viewwidth","lower","upper","LimitBoxTimer","interFormat","TimeArray","boxTime","formatBox","boxwidth","drawshadow","BoxPlotData","dataAbps","dataAbpd","q1","Q1","q2","Q2","q3","Q3","q4","Q4","Xtime","selectAll","enter","Time","SBP","DBP","WardChart","pbStatus","changePb","decidePB","nbpd","CMvalue","vitalvalue","limitValue","flexDirection","lineHeight","nbps","nbpm","colorshadow","data2","data_2_circlrcolor","Wardinfousercheckbox","checkboxselect","selectstate","updateOnePatientTodo","selectchange","checked","textDecoration","Patientinfo","preCID","QENT","CID","patientDetail","transdata","patientDate","fixpatientDate","patientData","Wardinfouser","Visible","setVisible","scheduleList","SetScheduleList","todoList","SetTodoList","location","PLOC","now","todayBegin","ListWeight","DOCLIST","PDOCNEW","MainDoc","LiveDoc","MainNur","ICUMainDoc","sytle","maxHeight","minHeight","displayTimeStr","Bedview","simplemode","SelectHISID","HBEDApiGet","simple_style","gridGap","Unsimple_style","wardcarddetaillist","component","WardinfouserK","filterdata","switch_titile_string","onWardcardDisplay","checkedChildren","unCheckedChildren","defaultChecked","Historyview","MouseClick","allPatientDisplayData","allPatientUnset","allPatientSet","selectedRowsArray","hospitalindex","selectedFile","fileList","uploading","doctor","transOuttime","deletedisable","selectedRowKeys","handleUpload","fileData","formData","FormData","file","res","filename","setedUser","transouttime","unsetUser","onChangeName","onChangeHisid","onClickSearch","record","resultD","url","URL","createObjectURL","Blob","link","createElement","href","setAttribute","appendChild","click","hospitalnumber","delete","dateString","Group","RangePicker","DatePicker","locale","rowSelection","selectedRows","getCheckboxProps","disabled","searchNO","searchTime","fn","transintime","searchName","search","genderswitch","birweek","transage","transicutime","maindoc","EditStyle","onRemove","newFileList","slice","beforeUpload","showUploadList","handleDisplaySwitchChange","Searchbar","exportClick","deleteHistoryUser","columns","dataIndex","dataSource","onRow","onMouseEnter","MouseClickTable","onMouseLeave","Crosssectionvitalsignchart","change","prepickerdate","presource","preinterval","prewidth","svg_id","PHID","PCID","optionvalue","pickerdate","endTimeStamp","start","end","formatTimer","nowDateForSeven","newDateForZero","formatPickerDate","QDVS","QOXY","HRNISLIST","RRNISLIST","SBPNISLIST","DBPNISLIST","BTNISLIST","Spo2NISLIST","pluse","breath","systolic","diastolic","BT","temperature","concen","FormatNISData","centermonitorApiDataGet","prehid","xAxisvalue","xAxisarray","formatxArray","xAxisbotvalue","formatbotaxis","xAxisbot","drawData","formatShift","Vitalsign","vital_days","visibleConflict","chackstate_one","chackstate_three","addNewWarningDateStr","addNewWarningHourStr","preHISID","checkStateNumber","Phistnum","timeCheck","checkNum","nowDaySeven","sevenFormat","PickerDateSeven","hourFormat","EndTime","Interval","formatvital_daysToInterval","gridarray","checknumber","onClickCheckgrid","End","intervalforhour","centervalueNull","centervalue","FilterList","filterData","Mid","centervaluetoNull","pickerTimer","top","left","onVitalCheck","Controlbar","display_Mode","item_array","scrollstate","sendData","itwm_array","sendDateData","parentDateCallback","scrollToAnchor","anchorName","anchorElement","scrollIntoView","checkedValues","onDateChange","bron","PBIRTHDT","bronDate","btn_style","unclick_style","display_style","displye_mode","right","background","boxShadow","zIndex","non_display_mode","check_area","check_text","btnlist","WEIGHT","WardState","DayWeight","btn","scrollpoint","endOf","alignContent","open_display","displaylogo","calcBorderLeft","intervalStatus","Status","IOpage","QDC","PreStatus","PreIntervalStatus","PreCID","PrePickerDate","RegQDC","CarloriesCal","timer","interstatus","Result","IntervalStatus","getAPI","prestatus","preinterstatus","precid","mapcell","listTimerFormat","inter","TimerList","hourInterval","filterList","filterListALL","gridNumber","cellsum","sum","cellRenderSum","rows","rowColorStyle","CellRender","SE","Other","timerStruct","cellRender","stylechange","intervalstatus","QDCLIST","timearray","pickerTimeArray","formatData","caloriesCalonnam","nam","namstring","valueNumber","FormatFeedingList","FormatIVList","FormatUrineList","FormatOtherInList","FormatOtherOutList","lost","elementItem","Feeding","inp_val2","calories","IV","inp_val1","Urine","out_val2","input_1","output_1","out_val1","OtherIn","OtherOut","formatQDCtoIO","timerFormat","feed","sumin","arr1","arr2","arr3","sumlist","sumIn","UrinForUnit","datamap","urineforWeightAndHourCrossection","sumout","sumOut","sumInTotal","Outout","element1","element2","sumInAndOut","TitleCellIn","TitleCellOut","CrossectionIo","titlelab","NonlabviewtableCell","summary_str","select_parser","input","parsers","item_name","sample","lab","start_time","datetime","end_time","content","summerize","kv_pairs","summary","match_replacer","replacer","replace","caseId","hisId","datatime","result_kv_pairs","come","statusRender","statusFormat","canShowReport","ExamReportModal","showDetail","Nonlabviewtable","modalVisible","modalReport","ORDLIST","nonLabApiGet","storeProcedureTime","FormatList","StartTime","ORDLIST_Format","elemetnStatus","elementORBGNTime","ORBGNTM","ORDLISTFormat","nonlabcell","ORSPCN1","statis","ORHISTNO","ORDSEQCN","titlecell","tempStyle","Nonlabviewlayout","RTtable","PreHID","PreTransInDate","GasListToCell","GasDataList","filterTimer","timeStamp","ORRESTM","decideStyle","PHValue","PCO2Value","PO2Value","HCO3Value","SS04","BEValue","O2SatValue","SS05","FiO2Value","SS03","GasCell","tempValue","isNaN","formatGasData","getGasAPI","PreTRDT","GasTitleCell","tempSub","String","justifyItems","overflowY","GAS","PickerDateRange","searchbar","RemarkModal","remarkValue","onOkClick","transinId","remarkId","createTime","okText","cancelText","RTbreathetablecell","onCell","onEdit","newRemarkValue","setRemark","seachRemark","Mode","setting","Setting","onMouseMove","Mouse_move","Mouse_leave","Edit_state","chooseedit","RTbreathetable","createRTbreathetable","titleCellRender","RTbreathe","QSPE","FilterReg","preST","preET","getQSPEApi","ST","ET","resultData","Prescriptionordertablecell","onMove","UDORDSEQ","checkStatus","SelectMode","UDENDDT","Name","PName","UDRPNAME","Unit","UDDOSAGE","UDDUNIT","UDFREQN","UDROUTE","UDBGNDT","on_Mouse","on_leave","Prescriptionordertable","Prescriptionordertabletable","Prescriptionorderlayout","classParser","InputMode","onChangeClass","handleChange","onChangeinputKey","parseClass","inputs","allResult","activeList","clusteredData","filteredData","SortDataList","regex","DataFormat","getGithub","getUDORDER0","Start","Option","Select","ControlBarRender","Treatmentordertablecell","QD","ORFREQN","ORENDDT","Treatmentordertable","TRTMNT01","Treatmentordertablecelllist","Treatmentorderlayout","DateRangeMode","Search_bar","createST","createET","nowDate","getTreatmentQ1","Notecell","updatetime","updatedoctor","updatetime_format","wordBreak","Note","noteData","queryNotice","propDate","TRANSID","notelist","infoObj","updatedictor","CrossectionSchedule","CrosssectionTodo","queryTodo","renderTodoItem","Crosssectionlayout","Cross_item","SelectInterval","callbackDateFunction","PickerTimeStamp","NIS_API_IO","Datetime","TimeStampPickerDate","display_item","Prescriptionorder","Treatmentorder","Inoutonchronic","Chronictablecelltooltip","preStartTimeStamp","loading","resultStr","parserName","inputBeginTime","parser_name","startTimeStamp","apiGet","tooltipelement","summaryParse","allContent","Cell","antIcon","spin","indicator","Chronictablecell","titleCell","objectElementCell","checkLineColor","lineColor","CellText","borderLeft","autoAdjustOverflow","overlayStyle","maxWidth","Tableonchronic","LabParse","SummaryParse","monthly","ApiPronider","chronic_state","fotmatTimerMonthly","preInterval","ApiGet","TimeLine","lineStyle","TimeInterval","grid","openTimeline","ressect","parsrList","arrayBiochemical","arrayBlood","arrayCultivate","arrayGAS","arrayGlu","arrayRadiation","arrayOther","element_ORPROCED","BioFind","Biochemical","BloFind","Blood","CulFind","Cultivate","GasFind","GluFind","RadFind","Radiation","arrayList","LabFormat","statestatus","title_list","cell_list","entTimeStamp","slectInt","TimerForList","filterTimerForDataList","fotmatTimerForTimer","DataForTimer","toolTipID","Chroniclab","select_interval","Chronicrttablecell","cellelement","RTListRender","ToolTipRender","rtlogo","Chronicrttable","prePickerdate","timerList","listFilter","formatDataList","table_content","Chronicrt","Chronicordertable","whiteBlackListParser","tpnParsers","excludeBlackListResult","UDGNAME_condition","UDRPNAME_condition","UDGNAME_re","UDGNAME_match","UDRPNAME_re","UDRPNAME_match","getUDORDER","openTimeLine","changegridnumber","rawData","filteredRawData","selected_tpn_parser","found","name_regex_flags","selected_white_black_list_parser","Tablecell","formatWidth","elementStart","elementEnd","widthRate","clientWidth","formatStart","formatEnd","formatStartPosition","arraylist","shift","formatUDORDER0","ListData","formatString","changegridstyle","celltable","overflowX","Orderonchronic","Chronicweighttable","QTPWERList","TimerFormat","WeightListFormat","elementTime","elementValue","Value","sortWeight","elementWidthList","time1","elementWidth","time2","FormatEndTimeStamp","datafilter","timeString","datafilterTime","widthArray","timeString2","weightRectRender","render","paddingTop","Weightonchronic","Vitalxaxis","innerWidth","debounceWindowSize","debounce","recalcWindowSize","addEventListener","func","wait","immediate","args","arguments","callNow","clearTimeout","setTimeout","apply","removeEventListener","monthformat","select_date","select_time_format","nowtime","Start_time","intervaldays","xaxis","formatday","Vitalxaxisbot","subtract","End_time","Vitalonchronic","check_state_one","check_state_three","check_state_oneweek","check_state_twoweek","statussource","sourcehandleChange","onClickCheckgrid_one","onClickCheckgrid_three","onClickCheckgrid_oneweek","onClickCheckgrid_twoweek","formatPickerTimer","fromInfection","onSelectchange","Interval_grid","Interval_grid_box","Chroniclelayout","statuschange","onChangeCross","button","filterlogo","Flootsheetio","itemNumber","elementList","dataJson","Title","timeObjectString","borderRight","borderTop","borderBottom","cell","groupfirstarray","compare","arrList","comparevalue","filterarray","FirstArray","SecondArray","ThirdArray","FourthArray","line","pos","formatQDC","FlootSheetFirstAreaData","FlootSheetSecondAreaData","FlootSheetThirdAreaData","FlootSheetFourthAreaData","stringElement","groupelement","Firstdata","timeForList","valueSum","cellMap","Secondedata","borderRightWidth","Thirddata","formatRV","FourdataCellRender","RVList","datajson","FourthDataCell","Flowsheetlayout","ApiData","DateTime","splist","specialListRender","Examchart","lineChart","sT","endT","fixLineChart","div","curve","lines","on","transition","duration","html","pageX","pageY","lineCharttitle","wordWrap","Labview","Selectus","SelectStatus","IRParse","titleSearch","parentTitleCallback","fixLineChartData","getAttribute","showDate","temp","showModel","charttableview","Object","keys","itemValue","flex","LabDataList","SelectList","SelectTitlefilter","selectdata","SelectTitleRender","ExamLab","Examnonlabviewtable","resultKey","StateMode","ordlist","pickerdaterange","changeState","status_report","ORDCLNM","tempA","tempTimeA","tempB","listforstatus","selectedClass","ORDATE","ORTIME","Nonlabview","ClassMode","Inputvaluesearch","onChangeState","Examreport","selectTitle","callbackTitleFunction","PickerDateRangeChange","vallofnull","DateRange","selectData","st_timestamp","et_timestamp","CellData","Band","Seq","Lym","Hb","Hct","RSV04","Plt","Na","Cl","CaTotal","Cr","Alt","TBil","DBil","rGGT","RSV19","Alkp","Alb","Iron","RSV28","FeSat","LDH","RSV10","RSV9","ck","RSV18","ckMB","Troponinl","RSV30","PT","APTT","INR","pCO2","pO2","HCO3","O2Sat","FiO2","SS11","SS12","SS13","SS14","CaFree","SS15","Bun","SS16","SS17","GluBeside","GluLab","RSV16","TCB","MicroBil","elementOne","elementTwo","Seg","APIUpdate","SelectDataList","datePick","momentDate","selectvalue","Orderview","apidata","udata","tdata","dataRange","Noteview","display_data","contentdisplay","ADMDISP","ADMLIST","DISLIST","DISDISP","DTAROTQ4","DTASOAPQ","PCASELIST","ERDISP","PRGTXQRY","PRGTXQRYDIS","CPSLIST","CPSDISP","QPNOT","QPNOTDIS","OPSORAQ1","OPSORAQ2","SelectClass","NoteTime","Content","ADISTNO","ADICASE","SEQ","OPABGNDT","OPATIMES","times","ttype","LIVEPLOC","PLOCDT","substr","transdt","columnGap","gridAutoColumns","gridAutoFlow","row","ADMDATA","textType","textObj","DTSOAPTY","DTSOAPSQ","DTSOAPTX","newObj","idx","textResult","newList","dataFilter","PRGTYPE","PRGTX","cre_nam","pro_not","cellRander","object","tabIndex","SelectADMDISP","ADIDATE","DCASENO","SelectDISDISP","DDATEIN","DDATEOUT","DPT","DTPDEPT","DTPDATE","SelectDTASOAPQ","DTPTIME","SelectERDISP","PDISDT","PRGDT","PRGTM","v","DT","TN","SelectPRGTXQRYDIS","CPSCASE","CPSOSEQ","CPSHIST","SelectCPSDISP","CPSENTDT","CPSENTTM","grouparray","SelectQPNOTDIS","OPACOD1","OPAMANNM","SelectOPSORAQ1","control","NotecontrolBar","renderContentArray","listRender","switchListRender","RTview","Nurtionfeedingcell","Moduledisplay","Nurtionfeedingorder","getAPIFeedingData","getTreatmentOrderFilter","DataCellRender","Nurtiontpncell","TPNListcellRender","TPNSubDatacellRender","TPNDATA","AA","Glu","Ca","Mg","TPNSubDataMap","RemarkData","Nurtiontpnorder","tpndata","inputEndTime","UDWORD","getAPITPNData","tpnList","titilecell","Watervaluechart","rowdata","watervalueData","shiftDays","formatShiftDays","rectwidth","svgrect","nulldata","car","Caloriessum","model","ModalRender","Nurtionview","showTime","FeedinfData","IVData","OtherData","sumcar","Calories","shiftTimer","TimerArray","formatTimeArray","watervalueDataList","filterFeedind","filterIV","filterOther","feedingSum","SumData2","IVSum","SumData","OtherSum","caseiddays","GrowthCurve","GrowthCurveControl","GrowthCurveControlBar","WaterValueControl","WaterValueControlBar","feeddata","waterRender","WaterValueRender","Nurtionfeeding","Infectionlabtable","Datalist","Render","FilterData","CellRander","WBCList","BandList","SegList","LymList","PCTList","CRPList","WBCRender","BandRender","SegRender","LymRender","PCTRender","CRPRender","WBCcell","Bandcell","Segcell","Lymcell","PCTcell","CRPcell","switch_state","userdata","Infectionlab","Infectionview","intervalselect","hrdatasource","rrdatasource","spo2datasource","abpdatasource","nbpdatasource","btdatasource","LabData","LabData2","Bedsidecard","remarkContent","queryPatientRemark","TODO_DONE","TODO_UNFINISH","Scheduletodo","displayMode","todolist","onItemCheck","itemToUpdate","queryPatientTodo","todolist_data","finish_data","finish_value","unfinish_data","finish_checkbox","unfinish_checkbox","onClickunfisish","onClickfinish","Calendercell","clickindex","sendcallback","newDate","clickdate","today","stateswitch","onClickCheck","weekdateformatcalender","calenderlogo","pingcheck","calenderwhitelogo","pingwhite","disableday","scheduleArray","eventArray","disabledayinfo","Calender","calendermode","Clickdays","ClickDate","displayinfo","scheduleRawData","startTimestamp","endTimestamp","noticeRawData","getStartEndTime","monthfirstweekday","firstCellBegin","startTimestampStr","endTimestampStr","itemList","refactoredList","itemTimeStr","foundItemIndex","newItem","newEvent","writer","timestampdate","onClickdays","dateStr","dataOfDayIndex","weekcontext","dataOfDay","getDataFromTimestamp","weeknumber","firstMonthWeekDay","rowIndex","noticeOfDay","getNoticeFromTimestamp","onCancelClick","calendermonthgroup","monthfirstweekdate","weekmonthmode","ShowModule","weekmode","setgroup","MonthPicker","SelectDatepickertype","modechange","Scheduleview","dateformat","exporttime","Patientviewlayout","TYPE","REMARK","tabstring","HBEDNUMBER","HBEDLIST","PBASINFO","matadata","nis_status_shange","activkey","getPersonStatus","BedList","BEDNUMBER","apiStatus","USERDATA","ploc","PLOCTM","transindt","TabPane","Tabs","defaultActiveKey","tabPosition","tab","callback","confirm","Modal","Powersetting","adduser","userList","power","powerName","radioValue","pwdRadio","inputUsername","inputPassword","inputName","inputDoctorid","radioOnChange","nameChange","addUserdata","adduserhandleChange","queryUserdata","inputuserName","password","username","doctorid","account","roleString","set_State","okType","showDeleteConfirm","userData","powerString","myNewArray","concat","Systemlogtable","loginlog_table","loginlogList","managerName","apilog_table","apilogList","months","j","optionValue","pagination","page","pageSize","getPages","Systemlog","totalSpace","usingSpace","percent","option","total","unuse","queryLoginLogdata","queryApiLogdata","pages","showInfo","Systemcontrol","bollogin","å","Layoutframe","clear","UsrName","url_path","fontweight","fontsize","routes","route","onClickLogout","Loginview","setRedirect","user","setItem","redirect","permission","statusstring","renderRedirect","login","querySelector","keyCode","blur","focus","logo","flexWrap","App","documentElement","zhTW","exact","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.40935703.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/edit2.8fc62700.svg\";","module.exports = __webpack_public_path__ + \"static/media/filter.43b66bba.svg\";","module.exports = __webpack_public_path__ + \"static/media/Wardview.6c75f5a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/Historyview.0467b7bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Control.aa66ed95.svg\";","module.exports = __webpack_public_path__ + \"static/media/file1.6f94c891.svg\";","module.exports = __webpack_public_path__ + \"static/media/file2.2b64f736.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.870c0c52.svg\";","module.exports = __webpack_public_path__ + \"static/media/dragdown.0cdfe02a.svg\";","module.exports = __webpack_public_path__ + \"static/media/RT.41b174eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/calender.da91395a.svg\";","module.exports = __webpack_public_path__ + \"static/media/calenderwhite.d66bfce7.svg\";","module.exports = __webpack_public_path__ + \"static/media/ping.c2141b87.svg\";","module.exports = __webpack_public_path__ + \"static/media/pingwhite.0f1e8cfb.svg\";","module.exports = __webpack_public_path__ + \"static/media/1200px-Taipei_Veterans_General_Hospital_Emblem.svg.b744f9a1.png\";","module.exports = __webpack_public_path__ + \"static/media/Edit.a7d4c3ff.svg\";","import React, { Component } from 'react';\n\nclass Homepage extends Component {\n    render() {\n        return (\n            <div></div>\n        );\n    }\n}\n\nexport default Homepage","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport wardviewlogo from '../Image/svg/Wardview.svg'\nimport historylogo from '../Image/svg/Historyview.svg'\nimport controllogo from '../Image/svg/Control.svg'\nimport './Sidermenu.scss';\n\n\nclass Sidermenu extends Component {\n\n    state = {\n        powerLogin: Number(sessionStorage.getItem('role'))\n    }\n\n    componentDidMount() {\n        const powerLogins = Number(sessionStorage.getItem('role'))\n        this.setState({ powerLogin: powerLogins })\n    }\n\n    Selectkeynumber(key) {\n\n        switch (key) {\n            case '/nicu':\n                return 0;\n            case '/nicu/history':\n                return 1;\n            case '/nicu/system':\n                return 2;\n            default:\n                if (key.match('patient') != null) {\n                    return 0;\n                }\n                if (key.match('ward') != null) {\n                    return 0;\n                }\n                return '';\n        }\n    }\n\n    select_hover(value) {\n        const { path } = this.props\n        const keynumber = this.Selectkeynumber(path)\n        if (keynumber === value) {\n            return true\n        }\n        return false\n    }\n    render() {\n        // const linkstate = {\n        //     backgroundColor: \"rgba(59, 151, 225, 1)\",\n        //     display: 'flex',\n        //     paddingLeft: '15px',\n        //     paddingRight: '15px',\n        //     height: \"40px\"\n        // }\n        // const dislinkstate = {\n        //     backgroundColor: \"rgba(0, 0, 0, 0)\",\n        //     display: 'flex',\n        //     paddingLeft: '15px',\n        //     paddingRight: '15px',\n        //     height: \"40px\"\n        // }\n        // const linkfont = { color: \"rgba(25, 70,90, 1)\", fontweight: \"500px\", fontsize: \"18px\", margin: \"0px 10px 0px 2px\" }\n        // const dislinkfont = { color: \"rgba(46, 100, 164, 1)\", fontweight: \"500px\", fontsize: \"18px\", margin: \"0px 10px 0px 2px\" }\n        const rule = this.state.powerLogin\n        console.log(rule)\n        // const rule = 5\n        console.log(rule == 2)\n        //sso custom => custom\n        return (\n            <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"20px\", height: '100%' }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto auto\", gridColumnGap: \"10px\" }}>\n                    <Link to=\"/nicu/ward/wardindex\" class={this.select_hover(0) ? \"linkstate\" : \"dislinkstate\"} style={{ display: rule == 2 ? \"none\" : \"flex\" }}>\n                        <img src={wardviewlogo} alt='wardviewlogo'></img>\n                        <centerstyle>\n                            <t2 class={this.select_hover(0) ? \"linkfont\" : \"dislinkfont\"}>住院病人資訊</t2>\n                        </centerstyle>\n                    </Link>\n                    <Link to=\"/nicu/history\" class={this.select_hover(1) ? \"linkstate\" : \"dislinkstate\"} style={{ display: rule == 1 ? \"flex\" : \"none\" }}>\n                        <img src={historylogo} alt='historyviewlogo'></img>\n                        <centerstyle>\n                            <t2 class={this.select_hover(1) ? \"linkfont\" : \"dislinkfont\"} >歷史病歷管理</t2>\n                        </centerstyle>\n                    </Link>\n                    <Link to='/nicu/system' class={this.select_hover(2) ? \"linkstate\" : \"dislinkstate\"} style={{ display: rule == 2 ? \"flex\" : \"none\" }}>\n                        <img src={controllogo} alt='systemviewlogo'></img>\n                        <centerstyle>\n                            <t2 class={this.select_hover(2) ? \"linkfont\" : \"dislinkfont\"}>系統設定</t2>\n                        </centerstyle>\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Sidermenu\n","import X2JS from \"x2js\"\nimport moment from 'moment';\n\n\nexport function CalculateAge(BornStatus) {\n    const startDate = moment(BornStatus.date);\n    const endDate = moment();\n    const minus = endDate.diff(startDate, 'days');\n    // console.log(BornStatus.date)\n    // console.log(BornStatus.week, BornStatus.day)\n    // console.log(Math.floor(BornStatus.week + (BornStatus.day + minus) / 7))\n    if (BornStatus.week === undefined || BornStatus.day === undefined || BornStatus.date === undefined) {\n        return \"--\"\n    }\n    if (BornStatus.week < 37) {\n        const week = Math.floor(BornStatus.week + (BornStatus.day + minus) / 7);\n        const day = Math.floor((BornStatus.day + minus) % 7);\n        // console.log(BornStatus.day, minus)\n        return week < 40 ? `${week}週+${day}天` : day > 30 ? `矯齡${Math.floor(day / 30)}月${Math.floor(day % 30)}天` : `矯齡${day}天大`\n    }\n    const month = Math.floor((minus) / 30);\n    const day = Math.floor(minus % 30);\n    return month > 0 ? `${month}月+${day}天` : `${day}天大`\n}\n\n\nexport function statecolor(state) {\n    if (state === 'HR') {\n        return \"rgb(100,140,60)\"\n    }\n    if (state === 'BP') {\n        return \"rgb(193,37,40) \"\n    }\n\n    if (state === 'ABP') {\n        return \"#C12528\"\n    }\n    if (state === 'NBP') {\n        return \"#C12528\"\n    }\n    if (state === 'SpO2') {\n        return \"rgb(60,105,160) \"\n    }\n    if (state === 'BT') {\n        return \"rgb(127,61,181)\"\n    }\n    if (state === 'RR') {\n        return \"rgb(200,110,40) \"\n    }\n    return null\n}\n\n//parse flag\nexport function Respiratorswitch(Respirator) {\n    if (Respirator === '呼(非侵入)') {\n        return '非侵入呼吸器'\n    }\n    if (Respirator === '呼(侵入)') {\n        return '侵入性呼吸器'\n    }\n    return '呼吸器'\n}\n\nexport function wardstatestringformat(item) {\n    //console.log(item);\n    switch (item.item) {\n        case \"Respirator\":\n            return Respiratorswitch(item.data)\n        case \"TPN\":\n            return \"TPN\"\n        case \"NPO\":\n            return \"NPO\"\n        case \"HD\":\n            return \"HD\"\n        case \"Abx\":\n            return \"Abx\"\n        case \"CVC\":\n            return \"CVC\"\n        case \"Xanth\":\n            return \"Xanth\"\n        case \"Phototherapy\":\n            return \"照光\"\n        case \"DNR\":\n            return \"DNR\"\n        default:\n            return item.item\n    }\n}\n\nexport function Labwarningvalue(value, title) {\n    if (title === \"Glucose\") {\n        if (value > 120 || value < 50) {\n            return false\n        }\n    }\n    if (title === \"WBC\") {\n        if (value < 10000 || value > 30000) {\n            return false\n        }\n    }\n    if (title === \"Hgb\") {\n        if (value < 10 || value > 18) {\n            return false\n        }\n    }\n    if (title === \"Platelet\") {\n        if (value < 100000 || value > 450000) {\n            return false\n        }\n    }\n    if (title === \"Na+\") {\n        if (value < 135 || value > 145) {\n            return false\n        }\n    }\n    if (title === \"K+\") {\n        if (value < 3.5 || value > 5.5) {\n            return false\n        }\n    }\n    if (title === \"Ca2+\") {\n        if (value < 0.8 || value > 1.4) {\n            return false\n        }\n    }\n    if (title === \"P\") {\n        if (value < 4.5 || value > 6.0) {\n            return false\n        }\n    }\n    if (title === \"Mg2+\") {\n        if (value < -1.5 || value > 4.5) {\n            return false\n        }\n    }\n    if (title === \"Alb\") {\n        if (value > 3) {\n            return false\n        }\n    }\n    if (title === \"CRP\") {\n        if (value < 1) {\n            return false\n        }\n    }\n    if (title === \"Procalcitionin\") {\n        if (value < 0.5) {\n            return false\n        }\n    }\n    if (title === \"pH\") {\n        if (value < 7.25 || value > 7.4) {\n            return false\n        }\n    }\n    if (title === \"PCO2\") {\n        if (value < 40 || value > 60) {\n            return false\n        }\n    }\n    if (title === \"BE\") {\n        if (value < -7 || value > 6) {\n            return false\n        }\n    }\n    if (title === \"PO2\") {\n        if (value < 40 || value > 90) {\n            return false\n        }\n    }\n    if (title === \"BUN\") {\n        if (value < 1) {\n            return false\n        }\n    }\n    if (title === \"Cr\") {\n        if (value < 1) {\n            return false\n        }\n    }\n    if (title === \"ALT\") {\n        if (value < 45) {\n            return false\n        }\n    }\n    if (title === \"AST\") {\n        if (value < 45) {\n            return false\n        }\n    }\n    if (title === \"TBil\") {\n        if (value < 2) {\n            return false\n        }\n    }\n    if (title === \"DBil\") {\n        if (value < 0.5) {\n            return false\n        }\n    }\n    if (title === \"ALKP\") {\n        if (value < 450) {\n            return false\n        }\n    }\n    if (title === \"Total Ca\") {\n        if (value < 8 || value > 12) {\n            return false\n        }\n    }\n    if (title === \"FeSat\") {\n        if (value < 0.15) {\n            return false\n        }\n    }\n    return true\n}\n\n\nexport function getRandom(number) {\n    return Math.floor(Math.random() * 5) + number;\n};\n\nexport function getRandomfornumber(number) {\n    return Math.floor(Math.random() * number);\n};\n\nexport function arraychange(list) {\n    var myNewArray = []\n    for (var i = 0; i < list.length; ++i) {\n        for (var j = 0; j < list[i].length; ++j) {\n            myNewArray.push(list[i][j]);\n        }\n    }\n    return myNewArray\n}\n\nexport function WeightList(weightlist) {\n    if (weightlist === undefined || weightlist === null) {\n        return \"--\"\n    }\n    const findata = weightlist.filter(function (value, index) {\n        return value.type === \"TW\"\n    })\n    if (findata.length === 0) {\n        return 0\n    }\n    else return findata\n}\n\nexport function BornWeight(weightlist, birthday) {\n    console.log(weightlist)\n    if (weightlist === undefined || weightlist === null) {\n        return \"--\"\n    }\n    if (Array.isArray(weightlist)) {\n        const findata = weightlist.filter(function (value, index) {\n            return value.rec_dat === birthday && value.type === \"TW\"\n        })\n        if (findata.length === 0) {\n            return 0\n        }\n        else return parseInt(Number(findata[0].value2) * 1000)\n    }\n    else {\n        return parseInt(Number(weightlist.value2) * 1000)\n    }\n}\n\nexport function NewestWeight(weightlist) {\n    if (weightlist === undefined) {\n        return \"--\"\n    }\n    if (weightlist.length === 0) {\n        return 0\n    }\n    if (Array.isArray(weightlist)) {\n        const findata = weightlist.filter(function (value, index) {\n            return value.type === \"TW\"\n        })\n        if (findata.length === 0) {\n            return \"--\"\n        }\n        return parseInt(Number(findata[0].value2) * 1000)\n    }\n    else {\n        return parseInt(Number(weightlist.value2) * 1000)\n    }\n\n}\n\nexport function XM2JSON(data) {\n    const xm2 = new X2JS()\n    if (data === undefined) {\n        return []\n    }\n    const status = xm2.xml2js(data).outmsg.ret\n    if (Number(status) === 0) {\n        const parsedata = xm2.xml2js(data).outmsg.resconts.rescont\n        if (!Array.isArray(parsedata)) {\n            return [parsedata]\n        }\n        return parsedata\n    }\n    return []\n}\n\nexport function QMNCXM2JSON(data) {\n    const xm2 = new X2JS()\n    if (data === undefined) {\n        return []\n    }\n    const status = xm2.xml2js(data).outmsg.ret\n    if (Number(status) === 0) {\n        const parsedata = xm2.xml2js(data).outmsg.resconts.rescont\n        console.log(parsedata)\n        return parsedata\n    }\n    return []\n}\n\nexport function Doc(DocList, type) {\n    if (DocList === undefined || DocList === null || DocList === \"\") {\n        return \"\"\n    }\n    const Main = DocList.filter(function (element, index) {\n        return element.PDTYPE === type\n    })\n    if (Main.length === 0) {\n        return \"\"\n    }\n    return Main[0].PDDOCNMC.toString().trim()\n}\n\nexport function selectweight(List, date) {\n    if (List === undefined || List === null) {\n        return \"--\"\n    }\n    var array = []\n    for (let index = 0; index < List.length; index++) {\n        const element = List[index];\n        if (moment(element.rec_dat, 'YYYYMMDD').valueOf() < date) {\n            array.push(element)\n        }\n    }\n    if (array.length === 0) {\n        return 0\n    }\n    return Number(array[0].value2) * 1000\n}\n\n\n","import axios from 'axios';\n\n\naxios.defaults.baseURL = \"http://10.97.241.48/deploy/\";\n// axios.defaults.baseURL = \"http://172.24.7.33/deploy/\";\n// axios.defaults.baseURL = \"http://127.0.0.1:8888/deploy/\";\n\n//----------------------------------------------\n// announcement-controller 病房公告(Ward View)\n//----------------------------------------------\n//建立公告資訊\n/*\nexport function createAnnounce(context, editor, transinno, time) {\n  const body = {\n    context: context,\n    editor: editor,\n    transinno: transinno,\n    time: time\n  }\n  return axios.post(\"Announcement/createAnnouncement\", body);\n}*/\n\n//Create bweek bday bweight\nexport function createPatientInfo(hisid, pname, psex, bweight, bweek, bday) {\n  const body = {\n    \"bday\": bday,\n    \"bweek\": bweek,\n    \"bweight\": bweight,\n    \"hisid\": hisid,\n    \"pname\": pname,\n    \"psex\": psex\n  }\n  return axios.post(\"patientinfo/createPatientInfo\", body)\n}\n\nexport function getPersionalStatus(hisid) {\n  return axios.get(\"patientinfo/getOnePatientInfo/\" + hisid);\n}\n\nexport function createAnnounce(announceArray) {\n  return axios.post(\"Announcement/createAnnouncement\", announceArray);\n}\n\n//刪除某天公告資訊\nexport function deleteAnnounce(transinno, dateTime) {\n  return axios.delete(\"Announcement/delannouncement/\" + transinno + \"/\" + dateTime);\n}\n\n//取得全部資訊\nexport function getAllAnnounce() {\n  return axios.get(\"Announcement/getAllannounce\");\n}\n\n//取得某位病人某天資訊\nexport function getOneAnnounce(transinno, dateTime) {\n  return axios.get(\"Announcement/getOneannouncement/\" + transinno + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// export/import-controller 匯入匯出\n//----------------------------------------------\n//匯出\nexport function exportJson(transinno) {\n  return axios.get(\"exportJson/\" + transinno);\n}\n\n//匯入\nexport function importJson(filename) {\n  return axios.get(\"importJson/\" + filename);\n}\n\n//下載檔案\nexport function downloadFile(filename) {\n  return axios.get(\"downloadFile/\" + filename);\n}\n\n//上傳檔案\nconst config = { headers: { 'Content-Type': 'multipart/form-data' } }\nexport function uploadFile(fileData) {\n  return axios.post(\"uploadFile\", fileData, config);\n}\n//----------------------------------------------\n// login-controller 登入與權限設定\n//----------------------------------------------\n//刪除帳號\nexport function deleteUser(name, role, username) {\n  return axios.delete(\"delUser/\" + name + \"/\" + role + \"/\" + username);\n}\n\n//查詢某帳號權限：1->read only 2->general user 3->general manager 4->system manager 5->super user\nexport function getAuth(username) {\n  return axios.get(\"getAuth/\" + username);\n}\n\n//取得系統空間\nexport function getSpace() {\n  return axios.get(\"getSpace\");\n}\n\n//登入\nexport function login(username, password) {\n  const body = {\n    username: username,\n    password: password\n  }\n  return axios.post(\"login\", body);\n}\n\nexport function getSSOLogin(username, password) {\n  return axios.get(\"LoginInSSO/\" + username + \"/\" + password);\n}\n\n//新增帳號與權限\nexport function register(name, password, role, username, doctorid) {\n  const body = {\n    name: name,\n    password: password,\n    role: role,\n    username: username,\n    doctorid: doctorid\n  }\n  return axios.post(\"register\", body);\n}\n\n//取得全部資訊\nexport function getAlluser() {\n  return axios.get(\"getAlluser\")\n}\n\n//角色、姓名搜尋其內容\nexport function searchUser(name, role) {\n  return axios.get(\"searchUser/\" + name + \"/\" + role);\n}\n\n//----------------------------------------------\n// log-controller 顯示Log日誌\n//----------------------------------------------\n\n//Show login log(根據起始時間查詢成功登入記錄)(time格式為yyyy-MM-ddTHH:mm:ss)\nexport function getLoginlog(startTime, endTime) {\n  return axios.get(\"getLoginlog/\" + startTime + \"/\" + endTime);\n}\n\n//Show API access log (date格式為yyyy-MM-dd)\nexport function getApilog(Time) {\n  return axios.get(\"getApilog/\" + Time)\n}\n\n//Show Debug log (date格式為yyyy-MM-dd)\nexport function getDebuglog(Time) {\n  return axios.get(\"getDebuglog/\" + Time)\n}\n\n//----------------------------------------------\n// breath-controller 呼吸RT\n//----------------------------------------------\n//createBreath\nexport function createBreath(editTime, hisid, model, note, setting) {\n  const body = {\n    editTime: editTime,\n    hisid: hisid,\n    model: model,\n    note: note,\n    setting: setting\n  }\n  return axios.post(\"breath/createBreath\", body);\n}\n\n//getBreath\nexport function getAllBreath() {\n  return axios.get(\"breath/getAllbreath\");\n}\n\n//updateNote\nexport function updateNote(editTime, hisid, model, note, setting) {\n  const body = {\n    editTime: editTime,\n    hisid: hisid,\n    model: model,\n    note: note,\n    setting: setting\n  }\n  return axios.put(\"breath/updatebnote/\" + editTime, body);\n}\n\n//----------------------------------------------\n// exam-cbc-controller Exam CBC Controller\n//----------------------------------------------\n//寫入CBC資訊\nexport function createExamCbc(band, hb, hct, hisid, lym, plt, seg, updateTime, wbc) {\n  const body = {\n    band: band,\n    hb: hb,\n    hct: hct,\n    hisid: hisid,\n    lym: lym,\n    plt: plt,\n    seg: seg,\n    updateTime: updateTime,\n    wbc: wbc\n  }\n  return axios.post(\"examcbc/createexamcbc\", body);\n}\n\n//取得全部資訊\nexport function getAllExamCbc() {\n  return axios.get(\"examcbc/getAllexamcbc\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamCbcOfPatient(hisid, dateTime) {\n  return axios.get(\"examcbc/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-cbc-two-controller Exam CBC Two Controller\n//----------------------------------------------\n//寫入CBC資訊\nexport function createExamCbcTwo(band, crp, hisid, lym, ptc, seg, updateTime, wbc) {\n  const body = {\n    band: band,\n    crp: crp,\n    hisid: hisid,\n    lym: lym,\n    ptc: ptc,\n    seg: seg,\n    updateTime: updateTime,\n    wbc: wbc\n  }\n  return axios.post(\"examcbctwo/createexamcbctwo\", body);\n}\n\n//取得全部資訊\nexport function getAllExamCbcTwo() {\n  return axios.get(\"examcbctwo/getAllexamcbctwo\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamCbcTwoOfPatient(hisid, dateTime) {\n  return axios.get(\"examcbctwo/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-cruor-controller Exam Cruor Controller\n//----------------------------------------------\n//createExamCruor\nexport function createExamCruor(apiT, hisid, inr, pt, updateTime) {\n  const body = {\n    apiT: apiT,\n    hisid: hisid,\n    inr: inr,\n    pt: pt,\n    updateTime: updateTime\n  }\n  return axios.post(\"examcruor/createexamcruor\", body);\n}\n\n//getExamCruor\nexport function getAllExamCruor() {\n  return axios.get(\"examcruor/getAllexamcruor\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamCruorOfPatient(hisid, dateTime) {\n  return axios.get(\"examcruor/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-electrolyte-controller Exam Electrolyte Controller\n//----------------------------------------------\n//createExamEletrolyte\nexport function createExamElectrolyte(bun, caFree, caTotal, caseid, cl, cr, hisid, k, mg, na, p, updateTime) {\n  const body = {\n    bun: bun,\n    caFree: caFree,\n    caTotal: caTotal,\n    caseid: caseid,\n    cl: cl,\n    cr: cr,\n    hisid: hisid,\n    k: k,\n    mg: mg,\n    na: na,\n    p: p,\n    updateTime: updateTime\n  }\n  return axios.post(\"examelectrolyte/createexamelectrolyte\", body);\n}\n\n//getExamElectrolyte\nexport function getAllExamElectrolyte() {\n  return axios.get(\"examelectrolyte/getAllexamelectrolyte\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamElectrolyteOfPatient(hisid, dateTime) {\n  return axios.get(\"examcruor/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-gas-addi-controller Exam GAS Addi Controller\n//----------------------------------------------\n//createExamGasAddi\nexport function createExamGasAddi(bun, caFree, cr, hb, hct, hisid, k, na, updateTime) {\n  const body = {\n    bun: bun,\n    caFree: caFree,\n    cr: cr,\n    hb: hb,\n    hct: hct,\n    hisid: hisid,\n    k: k,\n    na: na,\n    updateTime: updateTime\n  }\n  return axios.post(\"examgasaddi/createexamgasaddi\", body);\n}\n\n//getExamGasAddi\nexport function getAllExamGasAddi() {\n  return axios.get(\"examgasaddi/getAllexamgasaddi\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamGasAddiOfPatient(hisid, dateTime) {\n  return axios.get(\"examgasaddi/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-gas-controller Exam GAS Controller\n//----------------------------------------------\n//createExamGas\nexport function createExamGas(be, fiO2, hco3, hisid, o2Sat, pco2, ph, po2, sample, updateTime) {\n  const body = {\n    be: be,\n    fiO2: fiO2,\n    hco3: hco3,\n    hisid: hisid,\n    o2Sat: o2Sat,\n    pco2: pco2,\n    ph: ph,\n    po2: po2,\n    sample: sample,\n    updateTime: updateTime\n  }\n  return axios.post(\"examgas/createexamgas\", body);\n}\n\n//getExamGas\nexport function getAllExamGas() {\n  return axios.get(\"examgas/getAllexamgas\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamGasOfPatient(hisid, dateTime) {\n  return axios.get(\"examgas/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-glu-controller Exam Glu Controller\n//----------------------------------------------\n//createExamGlu\nexport function createExamGlu(gluBedside, gluLab, hisid, updateTime) {\n  const body = {\n    gluBedside: gluBedside,\n    gluLab: gluLab,\n    hisid: hisid,\n    updateTime: updateTime\n  }\n  return axios.post(\"examglu/createexamglu\", body);\n}\n\n//getExamGlu\nexport function getAllExamGlu() {\n  return axios.get(\"examglu/getAllexamglu\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamGluOfPatient(hisid, dateTime) {\n  return axios.get(\"examglu/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-heart-controller Exam Heart Controller\n//----------------------------------------------\n//createExamHeart\nexport function createExamHeart(bnp, caseid, ck, ckMB, hisid, tropoin, updateTime) {\n  const body = {\n    bnp: bnp,\n    caseid: caseid,\n    ck: ck,\n    ckMB: ckMB,\n    hisid: hisid,\n    tropoin: tropoin,\n    updateTime: updateTime\n  }\n  return axios.post(\"examheart/createexamheart\", body);\n}\n\n//getExamGlu\nexport function getAllExamHeart() {\n  return axios.get(\"examheart/getAllexamheart\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamHeartOfPatient(hisid, dateTime) {\n  return axios.get(\"examheart/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-jaundice-controller Exam Jaundice Controller\n//----------------------------------------------\n//createExamJaundice\nexport function createExamJaundice(dbil, hisid, microBil, tbil, tcb, updateTime) {\n  const body = {\n    dbil: dbil,\n    hisid: hisid,\n    microBil: microBil,\n    tbil: tbil,\n    tcb: tcb,\n    updateTime: updateTime\n  }\n  return axios.post(\"examjaundice/createexamjaundice\", body);\n}\n\n//getExamJaundice\nexport function getAllExamJaundice() {\n  return axios.get(\"examjaundice/getAllexamjaundice\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamJaundiceOfPatient(hisid, dateTime) {\n  return axios.get(\"examjaundice/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-liver-controller Exam Liver Controller\n//----------------------------------------------\n//createExamLiver\nexport function createExamLiver(alKp, alb, alt, ast, dbil, hisid, rggt, tbil, updateTime) {\n  const body = {\n    alKp: alKp,\n    alb: alb,\n    alt: alt,\n    ast: ast,\n    dbil: dbil,\n    hisid: hisid,\n    rggt: rggt,\n    tbil: tbil,\n    updateTime: updateTime\n  }\n  return axios.post(\"examliver/createexamliver\", body);\n}\n\n//getExamLiver\nexport function getAllExamLiver() {\n  return axios.get(\"examliver/getAllexamliver\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamLiverOfPatient(hisid, dateTime) {\n  return axios.get(\"examliver/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-premature-baby-controller Exam Premature Baby Controller\n//----------------------------------------------\n//createExamPrematureBaby\nexport function createExamPrematureBaby(alkp, feSat, hisid, iron, ldh, tibc, updateTime) {\n  const body = {\n    alkp: alkp,\n    feSat: feSat,\n    hisid: hisid,\n    iron: iron,\n    ldh: ldh,\n    tibc: tibc,\n    updateTime: updateTime\n  }\n  return axios.post(\"examprematurebaby/createexamprematurebaby\", body);\n}\n\n//getExamPrematureBaby\nexport function getAllExamPrematureBaby() {\n  return axios.get(\"examprematurebaby/getAllexamprematurebaby\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamPrematureBabyOfPatient(hisid, dateTime) {\n  return axios.get(\"examprematurebaby/getOnepatient\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-unstructured-controller Exam Unstructured Controller\n//----------------------------------------------\n//createExamUnstructured\nexport function createExamUnstructured(hisid, item, result, state, time) {\n  const body = {\n    hisid: hisid,\n    item: item,\n    result: result,\n    state: state,\n    time: time\n  }\n  return axios.post(\"examunstructured/createexamunstructured\", body);\n}\n\n//getExamUnstructured\nexport function getAllExamUnstructured() {\n  return axios.get(\"examunstructured/getAllexamunstructured\");\n}\n\n//----------------------------------------------\n// feeding-controller Feeding Controller\n//----------------------------------------------\n//createExamFeeding\nexport function createExamFeeding(editDoctor, editTime, endTime, hisid, name, notice, startTime) {\n  const body = {\n    editDoctor: editDoctor,\n    editTime: editTime,\n    endTime: endTime,\n    hisid: hisid,\n    name: name,\n    notice: notice,\n    startTime: startTime\n  }\n  return axios.post(\"feeding/createfeeding\", body);\n}\n\n//getExamFeeding\nexport function getAllExamFeeding() {\n  return axios.get(\"feeding/getAllfeeding\");\n}\n\n//----------------------------------------------\n// hospitalization-record-controller Hospitalization Record Controller\n//----------------------------------------------\n//createHospitalizationRecord\nexport function createHospitalizationRecord(hisid, hospitalDoctor, tricuactiveue, mainDoctor, nonReport, note, report, updateTime) {\n  const body = {\n    hisid: hisid,\n    hospitalDoctor: hospitalDoctor,\n    icuactive: tricuactiveue,\n    mainDoctor: mainDoctor,\n    nonReport: nonReport,\n    note: note,\n    report: report,\n    updateTime: updateTime\n  }\n  return axios.post(\"hospitalizationrecord/createhospitalizationrecord\", body);\n}\n\n//getHospitalizationRecord\nexport function getHospitalizationRecord() {\n  return axios.get(\"hospitalizationrecord/getAllhospitalizationrecord\");\n}\n\n//----------------------------------------------\n// io-controller IO Controller\n//----------------------------------------------\n//createIO\nexport function createIO(caseid, hisid, item, updateTime) {\n  const body = {\n    caseid: caseid,\n    hisid: hisid,\n    item: item,\n    updateTime: updateTime\n  }\n  return axios.post(\"io/createio\", body);\n}\n\n//getIO\nexport function getIO() {\n  return axios.get(\"io/getAllio\");\n}\n\n//----------------------------------------------\n// nis-controller NIS Controller\n//----------------------------------------------\n//getQDC\nexport function getQDC(caseno, st, et) {\n  return axios.get(\"QDC/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQENT\nexport function getQENT(caseno) {\n  return axios.get(\"QENT/\" + caseno);\n}\n\n//getQDVS\nexport function getQDVS(caseno, st, et) {\n  return axios.get(\"QDVS/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQMNC\nexport function getQMNC(caseno) {\n  return axios.get(\"QMNC/\" + caseno);\n}\n\n//getQOXY\nexport function getQOXY(caseno, st, et) {\n  return axios.get(\"QOXY/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQPNOT\nexport function getQPNOT(caseno, st, et) {\n  return axios.get(\"QPNOT/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQSPE\nexport function getQSPE(caseno, st, et) {\n  return axios.get(\"QSPE/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQTWPER\nexport function getQTWPER(caseno, st, et) {\n  return axios.get(\"QTWPER/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//----------------------------------------------\n// note-controller Note Controller\n//----------------------------------------------\n//createNote\nexport function createNote(caseid, context, editTime, hisid, type) {\n  const body = {\n    caseid: caseid,\n    context: context,\n    editTime: editTime,\n    hisid: hisid,\n    type: type\n  }\n  return axios.post(\"note/createnote\", body);\n}\n\n//getNote\nexport function getNote() {\n  return axios.get(\"note/getAllnote\");\n}\n\n//----------------------------------------------\n// notice-controller 待辦事項 Notice (Ward/Patient View)\n//----------------------------------------------\n//建立資訊\nexport function createNotice(hisid, context, time, transinno, doc) {\n  const body = {\n    hisid: hisid,\n    context: context,\n    time: time,\n    transinno: transinno,\n    doc: doc\n  }\n  return axios.post(\"notice/createNotice\", body);\n}\n\n//刪除某人某件資訊\nexport function deleteNotice(transinno, date) {\n  return axios.delete(\"notice/delnotice/\" + transinno + \"/\" + date);\n}\n\n//取得全部資訊\nexport function getAllNotice() {\n  return axios.get(\"notice/getAllnotice\");\n}\n\n//取得某位病人資訊\nexport function getOnePatientNotice(transinno, HISID, st, et) {\n  return axios.get(\"notice/getOnePatientNotice/\" + transinno + \"/\" + HISID + \"/\" + st + \"/\" + et);\n}\n\n//----------------------------------------------\n// patient-controller 基本資料(Ward View)\n//----------------------------------------------\n//填寫基本資料\nexport function createPatient(nonreport, pacseno, pbirthdt, pbirthweight, pblood, pday, phistnum, pnamec, psex, pweek, report, transinid) {\n  const body = {\n    nonreport: nonreport,\n    pacseno: pacseno,\n    pbirthdt: pbirthdt,\n    pbirthweight: pbirthweight,\n    pblood: pblood,\n    pday: pday,\n    phistnum: phistnum,\n    pnamec: pnamec,\n    psex: psex,\n    pweek: pweek,\n    report: report,\n    transinid: transinid\n  }\n  return axios.post(\"patient/createpatient\", body);\n}\n\n//刪除某位病人\nexport function deletePatient(transinid, caseid, hisid) {\n  return axios.delete(\"patient/delpatient/\" + transinid + \"/\" + caseid + \"/\" + hisid);\n}\n\n//取得全部資訊\nexport function getAllPatient() {\n  return axios.get(\"patient/getAllpatient\");\n}\n\n//取得某位病人資訊\nexport function getOnePatient(hisid) {\n  return axios.get(\"patient/getOnepatient/\" + hisid);\n}\n\n\n//----------------------------------------------\n// patient-important-matter-controller 病人重要注意事項(Patient View)\n//----------------------------------------------\n//建立事項資訊\nexport function createPatientImportantMatter(context, editor, hisid, updateTime, transinid) {\n  const body = {\n    context: context,\n    editor: editor,\n    hisid: hisid.trim(),\n    time: updateTime,\n    transinid: transinid\n  }\n  return axios.post(\"patientimportantmatter/createpatientimportantmatter\", body);\n}\n\n//刪除某日資訊\nexport function deletePatientImportantMatter(date) {\n  return axios.delete(\"patientimportantmatter/delpatientimportantmatter/\" + date);\n}\n\n//取得全部資訊\nexport function getAllPatientImportantMatter() {\n  return axios.get(\"patientimportantmatter/getAllpatientimportantmatter\");\n}\n\n//取得某位病人資訊\nexport function getOnePatientImportantMatter(transinid) {\n  return axios.get(\"patientimportantmatter/getOnepatient/\" + transinid);\n}\n\n//----------------------------------------------\n// patient-remark-controller 病人註記(Patient View)\n//----------------------------------------------\n//createPatientRemark\nexport function createPatientRemark(context, hisid, transid) {\n  const body = {\n    context: context,\n    hisid: hisid,\n    transid: transid\n  }\n  return axios.post(\"patientremark/createpatientremark\", body);\n}\n\n//delPatientremark\nexport function deletePatientRemark(transid) {\n  return axios.delete(\"patientremark/delpatientremark/\" + transid);\n}\n\n//getPatientRemark\nexport function getAllPatientRemark() {\n  return axios.get(\"patientremark/getAllpatientremark\");\n}\n\n//getOnePatientRemark\nexport function getOnePatientRemark(transid) {\n  return axios.get(\"patientremark/getOnepatientremark/\" + transid);\n}\n\n//----------------------------------------------\n// remark-controller 註記\n//----------------------------------------------\n//建立註記\n\nexport function createRemark(name, remark, remarkId, time, transinId, type, editor) {\n  const body = {\n    name: name,\n    remark: remark,\n    remarkid: remarkId,\n    time: time,\n    transinid: transinId,\n    type: type,\n    editor: editor\n  }\n  return axios.post(\"Remark/createremark\", body);\n}\n\n//取得全部註記\nexport function getAllRemark() {\n  return axios.get(\"Remark/getAllremark\");\n}\n\n//取得某一類型註記\nexport function getOneRemark(transid, remarkid, type) {\n  return axios.get(\"Remark/getOneremark/\" + transid + \"/\" + remarkid + \"/\" + type);\n}\n\n//----------------------------------------------\n// patient-weight-controller 基本資料-體重(Ward View)\n//----------------------------------------------\n//填寫體重資訊\nexport function createPatientWeight(hisid, updateTime, weight) {\n  const body = {\n    hisid: hisid,\n    updateTime: updateTime,\n    weight: weight\n  }\n  return axios.post(\"patientweight/createpatientweight\", body);\n}\n\n//刪除某位病人體重資訊\nexport function deletePatientWeight(date) {\n  return axios.delete(\"patientweight/delpatientweight/\" + date);\n}\n\n//取得全部資訊\nexport function getAllPatientWeight() {\n  return axios.get(\"patientweight/getAllpatientweight\");\n}\n\n//取得某位病人體重資訊\nexport function getOnePatientWeight(hisid) {\n  return axios.get(\"patientweight/getOnepatientweight/\" + hisid);\n}\n\n//----------------------------------------------\n// prescription-order-controller Prescription Order\n//----------------------------------------------\n//建立Prescription Order資訊\nexport function createPrescriptionOrder(caseid, dosage, editTime, endTime, frequency, hisid, name, note, route, scientificName, startTime, state, unit) {\n  const body = {\n    caseid: caseid,\n    dosage: dosage,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    route: route,\n    scientificName: scientificName,\n    startTime: startTime,\n    state: state,\n    unit: unit\n  }\n  return axios.post(\"prescriptionorder/createprescriptionorder\", body);\n}\n\n//取得全部資訊\nexport function getAllPrescriptionOrder() {\n  return axios.get(\"prescriptionorder/getAllprescriptionorder\");\n}\n\n//更新Prescription Order備註\nexport function updatePrescriptionOrder(updateTime, caseid, dosage, editTime, endTime, frequency, hisid, name, note, route, scientificName, startTime, state, unit) {\n  const body = {\n    caseid: caseid,\n    dosage: dosage,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    route: route,\n    scientificName: scientificName,\n    startTime: startTime,\n    state: state,\n    unit: unit\n  }\n  return axios.put(\"prescriptionorder/updateponote/\" + updateTime, body);\n}\n\n//----------------------------------------------\n// schedule-controller 排程與事件(Ward/Patient View)\n//----------------------------------------------\n//建立排程資訊\nexport function createPatientSchedule(bednumber, context, time, transinno, type, writter, name, hisid) {\n  const body = {\n    bednumber: bednumber,\n    context: context,\n    time: time,\n    transinno: transinno,\n    type: type,\n    writter: writter,\n    name: name,\n    hisid: hisid\n  }\n  return axios.post(\"schedule/createschedule\", body);\n}\n\n//刪除某人某天排程資訊\nexport function deletePatientSchedule(transinno, date) {\n  return axios.delete(\"schedule/delschedule/\" + transinno + \"/\" + date);\n}\n\n//取得全部資訊\nexport function getAllSchedule() {\n  return axios.get(\"schedule/getAllschedule\");\n}\n\n//取得某位某時段病人資訊\nexport function getOnePatientSchedule(transinno, starttime, endtime) {\n  return axios.get(\"schedule/getOnepatient/\" + transinno + \"/\" + starttime + \"/\" + endtime);\n}\n\n//----------------------------------------------\n// sso-controller SSO Controller\n//----------------------------------------------\n//get_user_profile\nexport function ssoUserProfile(app_COMPANY_UUID, app_USER_BASIC_PROFILE, app_USER_NODE_UUID, privileged_APP_SSO_TOKEN, public_APP_USER_SSO_TOKEN_TO_QUERY) {\n  const body = {\n    app_COMPANY_UUID: app_COMPANY_UUID,\n    app_USER_BASIC_PROFILE: app_USER_BASIC_PROFILE,\n    app_USER_NODE_UUID: app_USER_NODE_UUID,\n    privileged_APP_SSO_TOKEN: privileged_APP_SSO_TOKEN,\n    public_APP_USER_SSO_TOKEN_TO_QUERY: public_APP_USER_SSO_TOKEN_TO_QUERY\n  }\n  return axios.post(\"nicu/get_user_profile\", body);\n}\n\n//get_uuid\nexport function ssoUuid(privileged_APP_SSO_TOKEN, public_APP_USER_SSO_TOKEN_TO_QUERY) {\n  const body = {\n    privileged_APP_SSO_TOKEN: privileged_APP_SSO_TOKEN,\n    public_APP_USER_SSO_TOKEN_TO_QUERY: public_APP_USER_SSO_TOKEN_TO_QUERY\n  }\n  return axios.post(\"nicu/get_uuid\", body);\n}\n\n//Login\nexport function ssoLogin(app_PRIVATE_ID, app_PRIVATE_PASSWD) {\n  const body = {\n    app_PRIVATE_ID: app_PRIVATE_ID,\n    app_PRIVATE_PASSWD: app_PRIVATE_PASSWD\n  }\n  return axios.post(\"nicu/login\", body);\n}\n\n//login_action\nexport function ssoLoginAction(login_name, password) {\n  const body = {\n    login_name: login_name,\n    password: password\n  }\n  return axios.post(\"nicu/login_a\", body);\n}\n\n//----------------------------------------------\n// stored-procedure-controller Stored Procedure Controller\n//----------------------------------------------\n//getADMDISP\nexport function getStoredProcedureADMDISP(hisid, caseno) {\n  return axios.get(\"ADMDISP/\" + hisid + \"/\" + caseno);\n}\n\n//getADMLIST\nexport function getStoredProcedureADMLIST(hisid, docid) {\n  return axios.get(\"ADMLIST/\" + hisid + \"/\" + docid);\n}\n\n//getCPSDISP\nexport function getStoredProcedureCPSDISP(hisid, caseno, seq) {\n  return axios.get(\"CPSDISP/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//getCPSLIST\nexport function getStoredProcedureCPSLIST(hisid, docid) {\n  return axios.get(\"CPSLIST/\" + hisid + \"/\" + docid);\n}\n\n//getDISDISP\nexport function getStoredProcedureDISDISP(hisid, caseno) {\n  return axios.get(\"DISDISP/\" + hisid + \"/\" + caseno);\n}\n\n//getDISLIST\nexport function getStoredProcedureDISLIST(hisid, docid) {\n  return axios.get(\"DISLIST/\" + hisid + \"/\" + docid);\n}\n\n//getDTAROTQ4\nexport function getStoredProcedureDTAROTQ4(hisid) {\n  return axios.get(\"DTAROTQ4/\" + hisid);\n}\n\n//getDTASOAPQ\nexport function getStoredProcedureDTASOAPQ(hisid, date, dpt) {\n  return axios.get(\"DTASOAPQ/\" + hisid + \"/\" + date + \"/\" + dpt);\n}\n\n//getERDISP\nexport function getStoredProcedureERDISP(hisid, caseno) {\n  return axios.get(\"ERDISP/\" + hisid + \"/\" + caseno);\n}\n\n//getOPSORAQ1\nexport function getStoredProcedureOPSORAQ1(hisid) {\n  return axios.get(\"OPSORAQ1/\" + hisid);\n}\n\n//getOPSORAQ2\nexport function getStoredProcedureOPSORAQ2(hisid, date, times) {\n  return axios.get(\"OPSORAQ2/\" + hisid + \"/\" + date + \"/\" + times);\n}\n\n//getORDLIST\nexport function getStoredProcedureORDLIST(hisid, date, dpt, docid) {\n  return axios.get(\"ORDLIST/\" + hisid + \"/\" + date + \"/\" + dpt + \"/\" + docid);\n}\n\n//getPCASELIST\nexport function getStoredProcedurePCASELIST(hisid, docid, ttype) {\n  return axios.get(\"PCASELIST/\" + hisid + \"/\" + docid + \"/\" + ttype);\n}\n\n//getPRGTXQRY\nexport function getStoredProcedurePRGTXQRY(hisid, date, caseno) {\n  return axios.get(\"PRGTXQRY/\" + date + \"/\" + hisid + \"/\" + caseno);\n}\n\n//getRESDBGAS\nexport function getStoredProcedureRESDBGAS(hisid, date) {\n  return axios.get(\"RESDBGAS/\" + hisid + \"/\" + date);\n}\n\n//getRESDGLU1\nexport function getStoredProcedureRESDGLU1(hisid, date) {\n  return axios.get(\"RESDGLU1/\" + hisid + \"/\" + date);\n}\n\n//getRESDISP\nexport function getStoredProcedureRESDISP(hisid, month, caseno, seq) {\n  return axios.get(\"RESDISP/\" + month + \"/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//getRESDNM2\nexport function getStoredProcedureRESDNM2(hisid, date) {\n  return axios.get(\"RESDNM2/\" + hisid + \"/\" + date);\n}\n\n//getRESLAB01\nexport function getStoredProcedureRESLAB01(hisid, date) {\n  return axios.get(\"RESLAB01/\" + hisid + \"/\" + date);\n}\n\n//getRESLAB02\nexport function getStoredProcedureRESLAB02(hisid, date) {\n  return axios.get(\"RESLAB02/\" + hisid + \"/\" + date);\n}\n\n//getRESLAB0C\nexport function getStoredProcedureRESLAB0C(hisid, date) {\n  return axios.get(\"RESLAB0C/\" + hisid + \"/\" + date);\n}\n\n//getRESSECT\nexport function getStoredProcedureRESSECT(hisid, month, dpt, docid) {\n  return axios.get(\"RESSECT/\" + month + \"/\" + hisid + \"/\" + dpt + \"/\" + docid);\n}\n\n//getTRTMNTQ1\nexport function getStoredProcedureTRTMNTQ1(hisid, caseno) {\n  return axios.get(\"TRTMNTQ1/\" + hisid + \"/\" + caseno);\n}\n\n//getUDORDER0\nexport function getStoredProcedureUDORDER0(hisid, caseno, seq) {\n  return axios.get(\"UDORDER0/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//getUDTEXTQ1\nexport function getStoredProcedureUDTEXTQ1(caseno, seq) {\n  return axios.get(\"UDTEXTQ1/\" + caseno + \"/\" + seq);\n}\n\n//getWARDFLAG\nexport function getStoredProcedureWARDFLAG(hisid, caseno, seq) {\n  return axios.get(\"WARDFLAG/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//----------------------------------------------\n// table-controller Table Controller\n//----------------------------------------------\n//getTableHBED\nexport function getTableHBED() {\n  return axios.get(\"HBED\");\n}\n\n//getTablePBASINFO\nexport function getTablePBASINFO(PHISTNUM) {\n  return axios.get(\"PBASINFO/\" + PHISTNUM);\n}\n\n//getTablePDOCNEW\nexport function getTablePDOCNEW(PCASENO) {\n  return axios.get(\"PDOCNEW/\" + PCASENO);\n}\n\n//getTablePLOC\nexport function getTablePLOC(PCASENO) {\n  return axios.get(\"PLOC/\" + PCASENO);\n}\n\n//----------------------------------------------\n// to-do-controller 待辦事項To Do List(Ward/Patient View)\n//----------------------------------------------\n//建立待辦資訊\nexport function createTodo(caseid, context, time, transinno, type) {\n  const body = {\n    caseid: caseid,\n    context: context,\n    time: time,\n    transinno: transinno,\n    type: type\n  }\n  return axios.post(\"todo/createtodo\", body);\n}\n\n//刪除某件待辦資訊\nexport function deleteTodo(index) {\n  return axios.delete(\"todo/deltodo/\" + index);\n}\n\n//取得全部資訊\nexport function getAllTodo() {\n  return axios.get(\"todo/getAlltodo\");\n}\n\n//取得某位病人資訊\nexport function getOneTodo(transinno, caseid) {\n  return axios.get(\"todo/getOnepatient/\" + transinno + \"/\" + caseid);\n}\n\n//----------------------------------------------\n// tpn-controller TPN Controller\n//----------------------------------------------\n//createTPN\nexport function createTPN(aa, ca, editTime, endTime, frequency, glu, hisid, k, mg, na, name, notice, p, startTime, state, tpn) {\n  const body = {\n    aa: aa,\n    ca: ca,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    glu: glu,\n    hisid: hisid,\n    k: k,\n    mg: mg,\n    na: na,\n    name: name,\n    notice: notice,\n    p: p,\n    startTime: startTime,\n    state: state,\n    tpn: tpn\n  }\n  return axios.post(\"tpn/createtpn\", body);\n}\n\n//getTPN\nexport function getAllTPN() {\n  return axios.get(\"tpn/getAlltpn\");\n}\n\n//----------------------------------------------\n// treatment-order-controller Treatment Order\n//----------------------------------------------\n//建立Treatment Order資訊\nexport function createTreatmentOrder(caseid, editTime, endTime, frequency, hisid, name, note, startTime, state) {\n  const body = {\n    caseid: caseid,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    startTime: startTime,\n    state: state\n  }\n  return axios.post(\"treatmentorder/createtreatmentorder\", body);\n}\n\n//取得全部資訊\nexport function getAllTreatmentOrder() {\n  return axios.get(\"treatmentorder/getAlltreatmentorder\");\n}\n\n//更新Treatment Order備註\nexport function updateTreatmentOrder(EditTime, caseid, editTime, endTime, frequency, hisid, name, note, startTime, state) {\n  const body = {\n    caseid: caseid,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    startTime: startTime,\n    state: state\n  }\n  return axios.put(\"treatmentorder/updatetonote/\" + EditTime, body);\n}\n\n//----------------------------------------------\n// ward-bed-information-history-controller 歷史病床資訊(Ward View)\n//----------------------------------------------\n//建立床位歷史資訊\nexport function createWardbedInformation(breath, hisid, nonBreath, onBedNumber, tpn, updateTime) {\n  const body = {\n    breath: breath,\n    hisid: hisid,\n    nonBreath: nonBreath,\n    onBedNumber: onBedNumber,\n    tpn: tpn,\n    updateTime: updateTime\n  }\n  return axios.post(\"wardbedinformation/createwardbedinformation\", body);\n}\n\n//取得全部資訊\nexport function getAllWardbedInformation() {\n  return axios.get(\"wardbedinformation/getAllwardbedinformation\");\n}\n\n//當日床位資訊\nexport function getOneWardbedInformation(date) {\n  return axios.get(\"wardbedinformation/getOnewardbedinformation/\" + date);\n}\n\n//近兩週床位資訊\nexport function getWeekWardbedInformation(date) {\n  return axios.get(\"wardbedinformation/getWeekswardbedinformation/\" + date);\n}\n\n//----------------------------------------------\n// ward-information-controller Ward Information Controller\n//----------------------------------------------\n//建立WardInformation資訊\nexport function createWardInformation(bednumber, caseid, hisid, indexId, today, transformintime, transformouttime) {\n  const body = {\n    bednumber: bednumber,\n    caseid: caseid,\n    hisid: hisid,\n    indexId: indexId,\n    today: today,\n    transformintime: transformintime,\n    transformouttime: transformouttime\n  }\n  return axios.post(\"wardinformation/createwardinformation\", body);\n}\n\n//取得全部資訊\nexport function getAllWardInformation() {\n  return axios.get(\"wardinformation/getAllwardinformation\");\n}\n\n//取得當日資訊\nexport function getOneWardInformation(date) {\n  return axios.get(\"wardinformation/getTodaywardinformation/\" + date);\n}\n\n//----------------------------------------------\n// ward-state-controller 病床狀態(Ward View)\n//----------------------------------------------\n//建立床位狀態資訊\nexport function createWardState(anti, breath, drain, foley, hd, hisid, npo, tpn) {\n  const body = {\n    anti: anti,\n    breath: breath,\n    drain: drain,\n    foley: foley,\n    hd: hd,\n    hisid: hisid,\n    npo: npo,\n    tpn: tpn\n  }\n  return axios.post(\"wardstate/createwardstate\", body);\n}\n\n//取得全部資訊\nexport function getAllWardState() {\n  return axios.get(\"wardstate/getAllwardstate\");\n}\n\n//取得某人床位狀態資訊\nexport function getOneWardState(hisid) {\n  return axios.get(\"wardstate/getOnewardstate/\" + hisid);\n}\n\n//----------------------------------------------\n// ward-value-controller 生命跡象(Ward/Patient View)\n//----------------------------------------------\n//建立生命跡象資訊\nexport function createWardValue(abpd, abpm, abps, bt, hr, nbpd, nbpm, nbps, phistnum, rr, spO2, time) {\n  const body = {\n    abpd: abpd,\n    abpm: abpm,\n    abps: abps,\n    bt: bt,\n    hr: hr,\n    nbpd: nbpd,\n    nbpm: nbpm,\n    nbps: nbps,\n    phistnum: phistnum,\n    rr: rr,\n    spO2: spO2,\n    time: time\n  }\n  return axios.post(\"wardvalue/createwardvalue\", body);\n}\n\nexport function getWardDebInfo(date) {\n  return axios.get(\"patient/getWardDebInfo/\" + date);\n}\n\nexport function getPatientwarMidValue(hisid, time, interval) {\n  return axios.get(\"wardvalue/getPatientwarMidValue/\" + hisid + \"/\" + time + \"/\" + interval);\n}\n\nexport function getPatientwardvalueMedian(hisid, startTime, endTime) {\n  return axios.get(\"wardvalue/getPatientwardvalueMedian/\" + hisid + \"/\" + startTime + \"/\" + endTime);\n}\n\n\nexport function getPatientwardvalueBoxPlot(hisid, startTime, endTime, type, interval) {\n  return axios.get(\"wardvalue/getPatientwardvalueBoxPlot/\" + hisid + \"/\" + startTime + \"/\" + endTime + \"/\" + type + \"/\" + interval);\n}\n\nexport function getVitalSignData(hisid, startTime, endTime, type) {\n  return axios.get(\"wardvalue/getVitalSignData/\" + hisid + \"/\" + startTime + \"/\" + endTime + \"/\" + type);\n}\n\n//取得全部資訊\nexport function getAllWardValue() {\n  return axios.get(\"wardvalue/getAllwardvalue\");\n}\n\n//取得全部資訊\nexport function getHisidwardvalue(hisid) {\n  return axios.get(\"wardvalue/getHisidwardvalue/\" + hisid);\n}\n\n//取得某一段時間某一個人生命跡象(原始資料)\nexport function getPatientWardValue(endTime, hisid, startTime, interval, type) {\n  return axios.get(\"wardvalue/getPatientwardvalue/\" + hisid + \"/\" + startTime + \"/\" + endTime + \"/\" + type + \"/\" + interval);\n}\n\n//----------------------------------------------\n// water-volume-controller Water Volume Controller\n//----------------------------------------------\n//createWaterVolume\nexport function createWaterVolume(endTime, feed, hisid, iv, other, startTime, updateTime) {\n  const body = {\n    endTime: endTime,\n    feed: feed,\n    hisid: hisid,\n    iv: iv,\n    other: other,\n    startTime: startTime,\n    updateTime: updateTime\n  }\n  return axios.post(\"watervolume/createwatervolume\", body);\n}\n\n//取得全部資訊\nexport function getAllWaterVolume() {\n  return axios.get(\"watervolume/getAllwatervolume\");\n}\n","import axios from 'axios';\n\nconst githubApiUrl = \"https://raw.githubusercontent.com/gerrykiki/JsonRegObject/master/\";\n\n//create new instance of github API\nvar axiosGithub = axios.create({\n    baseURL: githubApiUrl,\n    timeout: 1000,\n    //headers: {'X-Custom-Header': 'foobar'}\n});\n\nexport function getGitHubJson(string) {\n    return axiosGithub.get(string);\n}\n\n// export function getExamReport() {\n//     return axios.get(\"ExamRepor.json\");\n// }\n\n","import React, { Component } from 'react';\nimport { wardstatestringformat } from '../Function/Wardstate'\nimport './Wardcardstatus.scss'\nimport * as ApiProvider from '../API/ApiProvider'\nimport * as ApiGithub from '../API/ApiGithub'\n// import moment from 'moment';\n// import * as RegularData from '../Data/RegularData'\n\nclass Wardcarstatus extends Component {\n    state = {\n        TRTMNTQ1: [],\n        UDORDER0: [],\n        FlagReg: []\n    }\n    componentDidMount() {\n        const { PCASENO, PHISTNUM } = this.props\n        console.log(PCASENO, PHISTNUM)\n        const TRQ1 = ApiProvider.getStoredProcedureTRTMNTQ1(PHISTNUM, PCASENO)\n            .then(data => {\n                console.log(data.data)\n                const rowList = data.data\n                const filterStatusList = rowList.filter(function (info, index, arr) {\n                    return Number(info.ORSTATUS) === 30\n                })\n                return filterStatusList\n            })\n            .catch(err => {\n\n            })\n        const UDORDER = ApiProvider.getStoredProcedureUDORDER0(PHISTNUM, PCASENO, \"123\")\n            .then(data => {\n                console.log(data.data)\n                var List = []\n                const dataList = data.data\n                if (Array.isArray(dataList)) {\n                    for (let index = 0; index < dataList.length; index++) {\n                        const status = Number(dataList[index].UDSTATUS)\n                        if (status === 80) {\n                            List.push(dataList[index])\n                        }\n                    }\n                }\n                return List\n            })\n            .catch(err => {\n\n            })\n        const Reg = ApiGithub.getGitHubJson(\"FlagReg.json\")\n            .then(data => {\n                console.log(data.data)\n                return data.data\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        Promise.all([TRQ1, UDORDER, Reg])\n            .then(result => {\n                this.setState({\n                    TRTMNTQ1: result[0],\n                    UDORDER0: result[1],\n                    FlagReg: result[2]\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    render() {\n        function RespiratorStatusParse(InvasiveRespiratorStatus, NonInvasiveRespiratorStatus) {\n            if (InvasiveRespiratorStatus === false && NonInvasiveRespiratorStatus === false) {\n                return \"false\"\n            }\n            if (InvasiveRespiratorStatus === true && NonInvasiveRespiratorStatus === true) {\n                return \"false\"\n            }\n            if (InvasiveRespiratorStatus === true) {\n                return '呼(侵入)'\n            }\n            if (NonInvasiveRespiratorStatus === true) {\n                return \"呼(非侵入)\"\n            }\n            return \"--\"\n        }\n\n        function parseFlagData(TRTMNTQ1, UDORDER, FlagReg, type) {\n            //filter  status 生效中\n            console.log(FlagReg, type)\n            if (FlagReg === undefined || FlagReg === null) { return null }\n            const Flag = FlagReg.filter(function (value, index, arr) {\n                return value.item === type\n            })\n            if (Flag.length === 0) {\n                return null\n            }\n            const StatusUDORDER = UDORDER.some(function (value, index, arr) {\n                const UDDRGNAM = value.UDDRGNAM.toLowerCase()\n                const UDGNAME = value.UDGNAME.toLowerCase()\n                const findFlag = Flag[0].ParseValueUD.some(function (value, index, arr) {\n                    return UDDRGNAM.indexOf(value) >= 0 || UDGNAME.indexOf(value)\n                })\n                return findFlag\n            })\n            const StatusTRTMNTQ1 = TRTMNTQ1.some(function (value, index, arr) {\n                const ORPROCED = value.ORPROCED.toLowerCase()\n                const findFlag = Flag[0].ParseValueTRT.some(function (value, index, arr) {\n                    console.log(value)\n                    // return ORPROCED.match(value) !== null\n                    return value\n                })\n                return findFlag\n            })\n            if (StatusUDORDER === false && StatusTRTMNTQ1 === false) {\n                return false\n            }\n            return true\n        }\n\n        function statusspan(source) {\n            if (source.item === 'Respirator') {\n                return 'gridtwocoltwo'\n            }\n            else return 'gridtwocolone'\n        }\n        function style_change(source) {\n            if (source.item === 'Respirator') {\n                if (source.data === '呼(侵入)') {\n                    return 'statustrue'\n                }\n                if (source.data === '呼(非侵入)') {\n                    return 'statusfalse'\n                }\n                if (source.data === 'true') {\n                    return 'statustrue'\n                }\n                return 'statusfalse'\n\n            }\n            else {\n                if (source.data) {\n                    return 'statustrue'\n                }\n                else {\n                    return 'statusfalse'\n                }\n            }\n        }\n\n        const UDORDER = this.state.UDORDER0\n        const TRTMNTQ1 = this.state.TRTMNTQ1\n        const Flag = this.state.FlagReg\n        \n\n        const AntiStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"Anti\")\n        const TPNStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"TPN\")\n        const NP0Status = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"NPO\")\n        const FoleyStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"Foley\")\n        const DrainStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"Drain\")\n        const InvasiveRespiratorStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"InvasiveRespirator\")\n        const NonInvasiveRespiratorStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"NonInvasiveRespirator\")\n        const RespiratorStatus = RespiratorStatusParse(InvasiveRespiratorStatus, NonInvasiveRespiratorStatus)\n\n        const StatusArray = [\n            { \"item\": \"Respirator\", \"data\": RespiratorStatus },\n            { \"item\": \"CVC\", \"data\": FoleyStatus },\n            { \"item\": \"NPO\", \"data\": NP0Status },\n            { \"item\": \"TPN\", \"data\": TPNStatus },\n            { \"item\": \"Abx\", \"data\": AntiStatus },\n            { \"item\": \"Xanth\", \"data\": [] },\n            { \"item\": \"照光\", \"data\": [] },\n            { \"item\": \"DNR\", \"data\": DrainStatus }\n        ]\n\n        const statuslist = StatusArray.map(function (info, index, arr) {\n            return (\n                <div key={index} className={statusspan(info)}>\n                    <t4 className={style_change(info)}>{wardstatestringformat(info)}</t4>\n                </div>\n            );\n        })\n        const source = this.props.source\n        return (\n            <div className={source ? \"warscardstatusgrid\" : \"wardinfouserstatusgrid\"}>\n                {statuslist}\n            </div >\n        );\n    }\n}\n\nexport default Wardcarstatus\n","import React, { useState, useEffect } from \"react\";\nimport { statecolor } from '../Function/Wardstate'\nimport Wardcarstatus from './Wardcardstatus'\nimport * as ApiProvider from '../API/ApiProvider'\nimport './Wardcardvalue.scss'\n\nexport function WardCard(props) {\n    const [CenterMonitorValue, SetCenterMonitorValue] = useState(null)\n    const [HID, SetHID] = useState(\"\")\n    const [Timer, SetTimer] = useState(0)\n    useEffect(() => {\n        const TimerID = setInterval(() => {\n            SetTimer(Timer + 1)\n        }, 5000)\n        return () => clearInterval(TimerID);\n    }, [Timer])\n\n    useEffect(() => {\n        const hisid = props.PHISTNUM.toString().trim()\n        // const hisid = \"TEST1234\"\n        ApiProvider.getHisidwardvalue(hisid)\n            .then(data => {\n                console.log(data.data)\n                const source = data.data\n                const HID = source.phistnum\n                SetCenterMonitorValue(source[0]);\n                SetHID(HID)\n            })\n            .catch(err => {\n                console.log(\"Andy test getHisidwardvalue NG \" + JSON.stringify(err));\n            });\n    }, [Timer]);\n    function InitCenterData(value) {\n        console.log(value)\n        if (value === undefined || value === null || value === \"\") {\n            return \"--\"\n        }\n        else return value\n    }\n    console.log(CenterMonitorValue)\n    if (CenterMonitorValue === null || CenterMonitorValue === undefined) {\n        return null\n    }\n    return (\n        <div className='Wardcardvaluelayout'>\n            <div className='Wardcardvitalvalue'>\n                <div className='valueRows'>\n                    <div >\n                        <t4 style={{ display: \"block\", color: statecolor('HR'), }}>HR</t4>\n                        <t2 className=\"bothWordValue\" style={{ color: statecolor('HR') }}>{InitCenterData(CenterMonitorValue.hr)}</t2>\n                    </div>\n                    <div >\n                        <t4 style={{ display: \"block\", color: statecolor('SpO2') }}>SpO<sub>2</sub></t4>\n                        <t2 className=\"bothWordValue\" style={{ color: statecolor('SpO2') }}>\n                            {InitCenterData(CenterMonitorValue.spo2)}\n                            <span style={{ fontWeight: \"400\", fontSize: \"12px\" }}>%</span>\n                        </t2>\n                    </div>\n                </div>\n                <div className='valueRows'>\n                    <div >\n                        <t4 style={{ display: \"block\", color: statecolor('BP') }}>ABP</t4>\n                        <t2 className=\"bothWordValue\" style={{ color: statecolor('BP') }}>{InitCenterData(CenterMonitorValue.abpd)}/{InitCenterData(CenterMonitorValue.abps)}({InitCenterData(CenterMonitorValue.abpm)})</t2>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnsGap: \"5px\" }}>\n                        <div >\n                            <t4 style={{ display: \"block\", color: statecolor('RR') }}>RR</t4>\n                            <t2 className=\"bothWordValue\" style={{ color: statecolor('RR') }}>{InitCenterData(CenterMonitorValue.rr)}</t2>\n                        </div>\n                        <div >\n                            <t4 style={{ display: \"block\", color: statecolor('BT') }}>BT</t4>\n                            <t2 className=\"bothWordValue\" style={{ color: statecolor('BT') }}>\n                                {InitCenterData(CenterMonitorValue.bt)}\n                                <span style={{ fontWeight: \"400\", fontSize: \"12px\" }}>&deg;C</span>\n                            </t2>\n                        </div>\n                    </div>\n                </div>\n            </div >\n            <Wardcarstatus source={true} PCASENO={props.PCASENO} PHISTNUM={props.PHISTNUM}></Wardcarstatus>\n        </div >\n    );\n}\n","function bednumberformat(number) {\n    if (number < 10) {\n        return '0' + number\n    }\n    return number\n}\n\nfunction gender(gender) {\n    if (gender === \"1\") {\n        return '男'\n    }\n    return '女'\n}\n\nfunction WardCardgender(gender) {\n    console.log(gender)\n    if (gender === \"M\") {\n        return '男'\n    }\n    return '女'\n}\n\nfunction pregancybirthdayweekday(pregancy, birthday) {\n    const pregancydays = (new Date(birthday).getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    const pregancyweeks = pregancydays / 7\n    const pregancyweeksdays = pregancydays % 7\n    return '[' + parseInt(pregancyweeks) + '+' + parseInt(pregancyweeksdays) + ']'\n}\n\nfunction pregancynowweek(pregancy) {\n    const pregancydays = (new Date().getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    console.log(pregancydays)\n    const pregancyweeks = pregancydays / 7\n    const pregancyweeksdays = pregancydays % 7\n    console.log(pregancyweeksdays)\n    return '[' + parseInt(pregancyweeks) + '+' + parseInt(pregancyweeksdays) + ']'\n}\n\nfunction pregancytoloaclweeks(pregancy) {\n    const pregancydays = (new Date().getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    console.log(pregancydays)\n    return parseInt(pregancydays / 7)\n}\n\nfunction pregancytolocaldays(pregancy) {\n    const pregancydays = (new Date().getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n\n    return parseInt(pregancydays % 7)\n}\n\nfunction pregancyweek(pregancy, birthday) {\n    const pregancydays = (new Date(birthday).getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    const pregancyweeks = pregancydays / 7\n    return parseInt(pregancyweeks)\n}\n\nfunction pregancydays(pregancy, birthday) {\n    const pregancydays = (new Date(birthday).getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    const pregancyweekdays = pregancydays % 7\n    return parseInt(pregancyweekdays)\n}\n\nfunction birthdayweeks(birthday) {\n    const birthdays = (new Date().getTime() - new Date(birthday).getTime()) / (24 * 60 * 60 * 1000)\n    return parseInt(birthdays / 7)\n}\n\nfunction pregancyweeksanddays(bornweeks, borndays, birthdays) {\n    if (bornweeks === null || bornweeks === undefined || bornweeks === \"\") {\n        return \"-- + --\"\n    }\n    if (borndays === null || borndays === undefined || borndays === \"\") {\n        return \"-- + --\"\n    }\n    if (birthdays === null || birthdays === undefined || birthdays === \"\") {\n        return \"-- + --\"\n    }\n    const localtoborndays = parseInt((new Date().getTime() - new Date(birthdays).getTime()) / (24 * 60 * 60 * 1000)) + parseInt(borndays) + 1\n    const localweeks = parseInt(localtoborndays / 7) + parseInt(bornweeks)\n    const localdays = parseInt(localtoborndays % 7)\n    return localweeks + \"+\" + localdays\n\n}\n\nfunction WeightFormat(BornWeight, Weight) {\n    return BornWeight + \"g -> \" + Weight + \"g\"\n\n}\nexport { bednumberformat, gender, pregancybirthdayweekday, pregancynowweek, pregancyweek, pregancydays, birthdayweeks, pregancytoloaclweeks, pregancytolocaldays, pregancyweeksanddays, WardCardgender, WeightFormat }\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n//Component\nimport * as Wardstate from '../../Function/Wardstate'\nimport * as Wardcardvalue from '../WardCardvalue-k'\nimport { bednumberformat, WardCardgender } from '../../Function/Wardbedfunction'\nimport './Wardcarddetail.scss'\n//image\nimport editlogo from '../../Image/svg/edit2.svg'\nimport fileLogo from '../../Image/svg/file1.svg'\nimport file2Logo from '../../Image/svg/file2.svg'\n//antdesign\nimport { Modal, InputNumber, Button } from 'antd';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment';\n\nvar BornChangeWeek = 0\nvar BornChangeDay = 0\nvar BornChangeWeight = 0\nclass Wardcarddetail extends Component {\n    state = {\n        hoverstate: \"none\",\n        clickstate: false,\n        mouse_hover: false,\n        edit_hover: false,\n        visible: false,\n        pbasignfo: null,\n        birthdayweight: \"N\",\n        weight: 0,\n        bornweek: 0,\n        bornday: 0,\n        nowweight: 0,\n        report: 0,\n        nonreport: 0,\n        remark: \"\",\n        TRANSINID: \"\",\n        TRANSINDT: \"\",\n        TRANSINTM: \"\",\n\n        modatstatus: true,\n        persionstatus: []\n    };\n\n    componentDidMount() {\n        const { data } = this.props\n        const HID = data.PHISTNUM\n        const date = moment().add(-1, \"days\")\n        console.log(date.format(\"YYYY-MM-DD HH:mm:ss\"))\n        const TRID = data.TRID\n        this.API_DATA(HID, date, TRID)\n    }\n\n    API_DATA(HID, date, TRID) {\n        ApiProvider.getStoredProcedureRESSECT(HID, 1, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                const ReportList = data.data\n                const mapList = ReportList.filter(function (value, index, array) {\n                    const DTstring = value.ORRCPDT.toString()\n                    const TMstring = value.ORRCPTM.toString()\n                    const time = DTstring + TMstring\n                    return moment(time, 'YYYY-MM-DDHH:mm:ss').valueOf() > date.valueOf()\n                })\n                this.setState({ report: mapList.length })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureRESSECT NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureORDLIST(HID, date.format('YYYY-MM-DD'), \"ALL\", \"DOC3924B\")\n            .then(data => {\n                const filter = data.data.filter(function (info, index, arr) {\n                    return info.ORSTATUS === \"31\"\n                })\n                this.setState({ nonreport: filter.length })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getOnePatientRemark(TRID)\n            .then(data => {\n                this.setState({\n                    remark: data.data[0].context\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getOnePatientRemark NG \" + JSON.stringify(err));\n            })\n        ApiProvider.getPersionalStatus(HID)\n            .then(data => { console.log(data.data); this.setState({ persionstatus: data.data }) })\n            .catch(err => { console.log(err) })\n    }\n\n    //Module show\n    handleOk(HID, name, sex) {\n        console.log(HID, name, sex)\n        const week = Number(BornChangeWeek)\n        const day = Number(BornChangeDay)\n        const weight = parseFloat(Number(BornChangeWeight) / 1000).toFixed(3)\n        if (weight === undefined || weight === 0 || weight === null || week === 0 || day === 0 || week === undefined || week === null || day === null || day === undefined) {\n            console.log(\"No Input\")\n            this.setState({ modatstatus: false })\n\n        }\n        else if (Number(day) > 6) {\n            this.setState({ modatstatus: false })\n        }\n        else {\n            console.log(\"Create\")\n            ApiProvider.createPatientInfo(HID, name, sex, weight, week, day)\n                .then(data => { console.log(data.data); this.setState({ visible: false, modatstatus: true }) })\n                .catch(err => { console.log(err) })\n        }\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n            modatstatus: true\n        });\n    };\n    showModal = () => { this.setState({ visible: true }); };\n\n    Modelrender(personstatus) {\n        function typefrom(from) {\n            if (from === 'Custom') {\n                return true\n            }\n            return false\n        }\n        function BornWeekAndDay(BornWeeks, BornDays) {\n            if (BornWeeks === null || BornWeeks === undefined || BornWeeks === \"\") {\n                return []\n            }\n            return [BornWeeks, BornDays]\n        }\n        const { data } = this.props\n        const source = data\n        const HID = source.PHISTNUM.toString().trim()\n        const name = source.PNAMEC.toString().trim()\n        const sex = source.PSEX.toString().trim()\n        const Birthday = source.PBIRHDT\n        const BornWeight = personstatus.BornWeight\n        const BornWeeks = personstatus.BornWeeks\n        const BornWdays = personstatus.BornDays\n        const BornStatus = BornWeekAndDay(BornWeeks, BornWdays)\n        console.log(personstatus)\n        const viewstatus = this.state.modatstatus\n        const dataArray = [\n            { item: \"病床號碼:\", value: bednumberformat(parseInt(source.HBEDNO)) },\n            { item: \"病歷號碼:\", value: source.PHISTNUM.toString().trim() },\n            { item: \"出生週數:\", value: BornStatus },\n            { item: \"生日:\", value: moment(Birthday, 'YYYYMMDD').format('YYYY/MM/DD') },\n            { item: \"出生體重:\", value: BornWeight }\n        ]\n        const dataArrayRender = dataArray.map(function (info, index, arr) {\n            if (info.item === \"出生體重:\") {\n                return (\n                    <div key={index} >\n                        <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\", height: \"50px\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                                {info.item}\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                                <InputNumber defaultValue={info.value} onChange={(value) => { BornChangeWeight = value }}></InputNumber>\n                                <div style={{ margin: \"0px 5px\" }}>g</div>\n                            </div>\n                        </div>\n                        <div style={{ display: viewstatus ? \"none\" : \"block\", color: \"red\" }}>輸入錯誤</div>\n                    </div>\n                );\n            }\n            if (info.item === \"出生週數:\") {\n                if (info.value.length === 0) {\n                    return (\n                        <div key={index}>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\", height: \"50px\" }}>\n                                <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                                    {info.item}\n                                </div>\n                                <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                                    <InputNumber onChange={(value) => { BornChangeWeek = value }}></InputNumber>\n                                    <div style={{ margin: \"0px 5px\" }}>週</div>\n                                    <InputNumber onChange={(value) => { BornChangeDay = value }}></InputNumber>\n                                    <div style={{ margin: \"0px 5px\" }}>日</div>\n                                </div>\n                            </div>\n                            <div style={{ display: viewstatus ? \"none\" : \"block\", color: \"red\" }}>輸入錯誤</div>\n                        </div>\n                    );\n                }\n                return (\n                    <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\", height: \"50px\" }}>\n                        <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                            {info.item}\n                        </div>\n                        <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                            {info.value[0]}\n                            <div style={{ margin: \"0px 5px\" }}>週</div>\n                            {info.value[1]}\n                            <div style={{ margin: \"0px 5px\" }}>日</div>\n                        </div>\n                    </div>\n                );\n            }\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\", height: \"50px\" }}>\n                    <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                        {info.item}\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                        {info.value}\n                    </div>\n                </div>\n            );\n        })\n        return (\n            <Modal\n                width={400}\n                title=\"填寫病床資訊\"\n                visible={this.state.visible}\n                onCancel={this.handleCancel}\n                footer={\n                    <div style={{ display: \"flex\", justifyContent: typefrom(source.type) ? 'space-between' : 'flex-end', alignItems: \"center\" }}>\n                        <Button key=\"delete\" style={typefrom(source.type) ? { border: \"1px solid rgba(208,2,27,1)\", color: \"rgba(208,2,27,1)\" } : { display: \"none\" }} onClick={this.handleCancel}>清床</Button>\n                        <div>\n                            <Button key=\"cancel\" onClick={this.handleCancel}>取消</Button>\n                            <Button key=\"ok\" type=\"primary\" onClick={() => { console.log(HID, name, sex); this.handleOk(HID, name, sex) }}>儲存</Button>\n                        </div>\n                    </div>}>\n                {dataArrayRender}\n            </Modal>\n        );\n    }\n    render() {\n        function valueFormat(value) {\n            if (value === \"\" || value === null || value === undefined) {\n                return \"--\"\n            }\n            return value.toString()\n        }\n        function valueBornWeight(value) {\n            if (value === \"\" || value === null || value === undefined || value === 0) {\n                return \"\"\n            }\n            return value.toString()\n        }\n        function statusPersion(persionstatus, QMNC, QTWER, Birthday) {\n            console.log(persionstatus)\n            if (persionstatus.length === 0) {\n                const BornWeight = Wardstate.BornWeight(QTWER, Birthday)\n                const BornWeeks = QMNC.weeks\n                const BornDays = QMNC.days\n                return {\n                    BornWeight: BornWeight,\n                    BornWeeks: BornWeeks,\n                    BornDays: BornDays\n                }\n            }\n            const Weight = Number(persionstatus[0].bweight) * 1000\n            const BornWeeks = Number(persionstatus[0].bweek)\n            const BornDays = Number(persionstatus[0].bday)\n            return {\n                BornWeight: Weight,\n                BornWeeks: BornWeeks,\n                BornDays: BornDays\n            }\n        }\n        const { data, previewmode, hbedlist } = this.props\n        const { persionstatus } = this.state\n        const source = data\n        const Birthday = source.PBIRHDT\n        const QTWER = Wardstate.XM2JSON(source.QTWPER)\n        const QMNC = Wardstate.QMNCXM2JSON(source.QMNC)\n        const Weight = Wardstate.NewestWeight(QTWER)\n        const BornWeight = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornWeight\n        const BornWeeks = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornWeeks\n        const BornDays = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornDays\n        const remark = this.state.remark\n        if (source === undefined) { return null }\n        const status = {\n            date: moment(Birthday, \"YYYYMMDD\").valueOf(),\n            week: BornWeeks,\n            day: BornDays\n        }\n        const AgeStatus = Wardstate.CalculateAge(status)\n        const role = Number(sessionStorage.getItem('role'))\n        return (\n            <div>\n                <div className='wardcarddetailtitle'>\n                    <t3 style={{ color: \"rgba(0, 26, 109)\", fontSize: \"14px\", fontWeight: \"600\" }}>NI-{bednumberformat(Number(source.HBEDNO))}</t3>\n                    <t3 style={{ color: \"rgba(0, 26, 109)\", fontSize: \"16px\", fontWeight: \"600\" }}>{source.PNAMEC.toString().trim()}</t3>\n                    <t3 style={{ color: \"rgba(0, 26, 109)\", fontSize: \"14px\", fontWeight: \"600\" }}>{source.PHISTNUM}</t3>\n                    <t3 style={{ color: \"rgba(0, 26, 109, .7)\", fontSize: \"12px\" }}>{WardCardgender(source.PSEX)}</t3>\n                    <t3 style={{ color: \"rgba(0, 26, 109, .7)\", fontSize: \"12px\" }}>{moment(Birthday, 'YYYYMMDD').format('MM/DD')}生</t3>\n\n                    {/* <t3 style={{ color: \"rgba(61, 119, 181, 1)\" }}>{bednumberformat(Number(source.HBEDNO))},{source.PNAMEC.toString().trim()},{WardCardgender(source.PSEX)},{moment(Birthday, 'YYYYMMDD').format('YYYY/MM/DD')},{source.PHISTNUM}</t3> */}\n                    {role == 1 && <div onClick={this.showModal} className='wardcarddetileditbutton' style={{ cursor: \"pointer\" }}>\n                        <img src={editlogo} alt='editlogo'></img>\n                    </div>}\n                </div>\n                <div>\n                    <div className='wardinfoweeks'>\n                        <t3 style={{ color: \"rgba(0, 26, 109)\" }}>\n                            {valueFormat(BornWeeks)}+{valueFormat(BornDays)}&gt;<span style={{ fontWeight: \"900\" }}>{AgeStatus}</span>\n                        </t3>\n                        <t3 style={{ color: \"rgba(0, 26, 109)\" }}>\n                            {valueBornWeight(BornWeight)}g&gt;\n                            <span style={{ fontWeight: \"900\" }}>{valueFormat(Weight)}g</span>\n                        </t3>\n                        <div className='wardinforeportgroup'>\n                            <img src={fileLogo} alt='fileLogo'></img>\n                            <div style={{ fontSize: \"12px\" }}>{this.state.report}</div>\n                            <img src={file2Logo} alt='file2Logo'></img>\n                            <div style={{ fontSize: \"12px\" }}>{this.state.nonreport}</div>\n                        </div>\n                    </div>\n                    <div style={{ display: previewmode ? \"block\" : \"none\", borderBottomWidth: \"0.5px\", borderBottomColor: \"rgba(215, 238, 255, 1)\", borderBottomStyle: \"solid\" }}>\n                        <Wardcardvalue.WardCard centerdata={source.centerMonitorData} previewmode={previewmode} PHISTNUM={source.PHISTNUM} PCASENO={source.PCASENO}></Wardcardvalue.WardCard>\n                    </div>\n                    <div style={{ height: '30px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: \"0px 10px\", position: 'relative' }}>\n                        <div style={{ overflow: \"hidden\", fontSize: \"12px\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\", width: \"250px\" }}>{remark}</div>\n                        <Link className='patientviewbutton' to={{ pathname: \"/nicu/patient/\" + source.PHISTNUM, state: { \"source\": hbedlist, \"HISID\": source.PHISTNUM, \"CASEID\": source.PCASENO, \"BEDNUMBER\": source.HBEDNO, \"TYPE\": true, \"TRANSINID\": this.state.TRANSINID } }}>\n                            <centerstyle>\n                                <div style={{ fontSize: \"12px\" }}>進入病人資料頁面</div>\n                            </centerstyle>\n                        </Link>\n                    </div>\n                </div>\n                {this.Modelrender(statusPersion(persionstatus, QMNC, QTWER, Birthday))}\n            </div>\n        );\n    }\n}\n\nexport default Wardcarddetail;\n","import React, { Component } from 'react';\nimport { format_bednumber } from '../../Commonfunction'\nimport editlogo from '../../Image/svg/edit2.svg'\nimport { Modal, Input, DatePicker } from 'antd';\nimport './UnpreviewWardCardDetail.scss'\nimport { bednumberformat } from '../../Function/Wardbedfunction'\n\nclass Unpreviewwardcarddetail extends Component {\n    state = { visible: false, powerLogin: 0 };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n            databool: false,\n            data: null\n        });\n    };\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n\n    handleOk(string) {\n        console.log(string);\n\n        const bednumber = document.getElementById(\"bednumber\").value;\n        const hisnumber = document.getElementById(\"hisid\").value;\n        const birweek = document.getElementById(\"birweek\").value;\n        const birthday = string;\n        const weight = document.getElementById(\"weight\").value;\n        const statedata = {\n            \"BedNumber\": bednumber,\n            \"id\": hisnumber,\n            \"birweek\": birweek,\n            \"birthday\": birthday,\n            \"weight\": weight\n        }\n        console.log(statedata)\n        this.setState({\n            visible: false,\n            data: statedata,\n            databool: false\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    savestatus(string) {\n        console.log(string)\n    }\n\n    render() {\n        function modedisplay(mode) {\n            if (mode) {\n                return \"none\"\n            }\n            else {\n                return \"block\"\n            }\n        }\n        const number = this.props.bednumber\n        const { previewmode } = this.props\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div style={{ height: '40px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', backgroundColor: \"rgba(215, 238, 255, 1)\", padding: \"9px 10px\" }}>\n                    <t3 style={{ color: \"rgba(61, 119, 181, 1)\" }}>{format_bednumber(number)}/--</t3>\n                    <div className='wardcardeditbtn' onClick={this.showModal} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                        <img src={editlogo} alt='editlogo'></img>\n                    </div>\n                    <Modal\n                        width={270}\n                        title=\"填寫病床資訊\"\n                        visible={this.state.visible}\n                        onOk={() => this.handleOk(\"2019/12/12\")}\n                        onCancel={this.handleCancel}\n                    >\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr\", gridRowGap: \"10px\" }}>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>病床號碼:</t2>\n                                </centerstyle>\n                                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                    <div>{bednumberformat(number)}</div>\n                                </div>\n                            </div>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>病歷號碼:</t2>\n                                </centerstyle>\n                                <Input id=\"hisid_wardcard\" />\n                            </div>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>出生週數:</t2>\n                                </centerstyle>\n                                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                    <Input id='week' placeholder=\"20\" style={{ marginRight: \"5px\" }}></Input>\n                                    <t2 style={{ marginRight: \"5px\" }}>週</t2>\n                                    <Input id='days' placeholder=\"20\" style={{ marginRight: \"5px\" }}></Input>\n                                    <t2>日</t2>\n                                </div>\n                            </div>\n                            <div className='modulecontent'>\n                                <div style={{ display: 'flex', justifyContent: \"space-between\", alignItems: \"cneter\", width: \"69px\" }}>\n                                    <t2>生</t2>\n                                    <t2>日:</t2>\n                                </div>\n                                <DatePicker placeholder=\"選擇日期\" id=\"birthday\" />\n                            </div>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>出生體重:</t2>\n                                </centerstyle>\n                                <div style={{ display: 'flex' }}><Input placeholder=\"120\" id=\"weight\" />&nbsp;g</div>\n                            </div>\n                        </div>\n                    </Modal>\n                </div>\n                <div style={{ height: '30px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: \"10px\" }}>\n                    <div style={{ fontSize: '14px', color: \"black\" }}>\n                        \"無資料\"\n                    </div>\n                </div>\n                <div style={{ display: modedisplay(previewmode) }}>\n                    <div style={{ height: '30px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: \"10px\" }}></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Unpreviewwardcarddetail;\n","\nconst Month_format = (time) => {\n    switch (time) {\n        case 0:\n            return \"1\";\n        case 1:\n            return \"2\";\n        case 2:\n            return \"3\";\n        case 3:\n            return \"4\";\n        case 4:\n            return \"5\";\n        case 5:\n            return \"6\";\n        case 6:\n            return \"7\";\n        case 7:\n            return \"8\";\n        case 8:\n            return \"9\";\n        case 9:\n            return \"10\";\n        case 10:\n            return \"11\";\n        case 11:\n            return \"12\";\n        default:\n            return null;\n    }\n};\nconst format_bednumber = (number) => {\n    if (number < 10) {\n        return \"0\" + number;\n    }\n    return number;\n}\n\nexport { Month_format, format_bednumber }\n","import React, { Component } from 'react';\nimport { Input, Button } from 'antd';\nimport editlogo from '../Image/svg/Edit.svg'\nimport './Wardnote.scss'\nimport deleteimg from '../Image/svg/delete.svg'\nimport detail from '../Image/svg/details.svg'\nimport { Tooltip } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider';\nimport moment from 'moment'\n\nclass WardcardNote extends Component {\n    _isMounted = false;\n    state = {\n        editstate: false,\n        AnnoceRawData: [],\n        AnnoceDisplayData: [],\n        inputContent: undefined,\n        powerLogin: 0\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n    componentDidMount() {\n        this.onInputChange = this.onInputChange.bind(this);\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.queryAllAnnounce();\n    }\n    queryAllAnnounce() {\n        ApiProvider.getAllAnnounce()\n            .then(result => {\n                console.log(\"getAllAnnounce OK \" + JSON.stringify(result));\n                this.setState({\n                    AnnoceRawData: result.data,\n                    AnnoceDisplayData: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getAllAnnounce NG \" + JSON.stringify(err));\n            });\n    }\n    canceledit() {\n        //取消前先拿取server資料\n        this._isMounted = true\n        this.setState({\n            editstate: false,\n            AnnoceDisplayData: JSON.parse(JSON.stringify(this.state.AnnoceRawData))\n        });\n    }\n\n    okeditlist() {\n        //確定上傳\n        this.setState({\n            editstate: false\n        });\n        ApiProvider.createAnnounce(this.state.AnnoceDisplayData)\n            .then(result => {\n                console.log(\"createAnnounce OK \" + JSON.stringify(result));\n                this.queryAllAnnounce();\n            })\n            .catch(err => {\n                console.log(\"createAnnounce NG \" + JSON.stringify(err));\n            });\n    }\n\n    editlist() {\n        this.setState({\n            editstate: !this.state.editstate,\n            AnnoceDisplayData: (this.state.editstate) ? JSON.parse(JSON.stringify(this.state.AnnoceDisplayData)) : JSON.parse(JSON.stringify(this.state.AnnoceRawData))\n        });\n    }\n\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n\n    AddNewannouce() {\n        const announce = this.state.AnnoceDisplayData;\n\n        const doc = sessionStorage.getItem('user')\n        const newAnnounce = {\n            context: this.state.inputContent,\n            time: +(new Date()),\n            editor: doc + \"醫生\",\n            transinno: doc + moment().format(\"YYYYMMDDHHmmss\").toString()\n        }\n        announce.push(newAnnounce)\n        this.setState({\n            AnnoceDisplayData: announce,\n            inputContent: undefined\n        });\n    }\n\n    ondeleteannounce(element) {\n        const announce = this.state.AnnoceDisplayData;\n        const index = announce.findIndex(item => item === element);\n        announce.splice(index, 1);\n        this.setState({ AnnoceDisplayData: announce });\n    }\n    announcelist(announcelist, status) {\n        var list = []\n        if (announcelist === null || announcelist.length === 0) {\n            list.push(\n                <div className='announcelistcontext'>無公告</div>\n            )\n        }\n        for (let index = 0; index < announcelist.length; index++) {\n            const element = announcelist[index];\n            list.push(\n                <div className='announcelistcontext'>\n                    <t2>{index + 1}.{element.context}</t2>\n                    {this.editstatus(element, status)}\n                </div>\n            )\n        }\n        return list\n    }\n    editstatus(element, status) {\n        console.log(element)\n        const time = moment(element.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n        const localTime = moment.utc(time).toDate()\n        const string = element.editor + '醫師於' + moment(localTime).format(\"MM/DD HH:mm\") + '更新'\n        if (status) {\n            return (\n                <img src={deleteimg} alt='deletelogo' onClick={() => this.ondeleteannounce(element)}></img>\n            );\n        }\n        return (\n            <Tooltip placement=\"top\" title={string}>\n                <img src={detail} alt='detaillogo'></img>\n            </Tooltip>\n        );\n    }\n    render() {\n\n        function changehight(state) {\n            if (!state) {\n                return 'wardnotecontextdisedit'\n            }\n            else {\n                return 'wardnotecontextonedit'\n\n            }\n        }\n        let annData = this.state.AnnoceDisplayData\n\n        annData = annData.sort((a, b) => {\n            let tempTimeA = moment(a.time, \"YYYY-MM-DD[T]HH:mm:ss\").valueOf()\n            let tempTimeB = moment(b.time, \"YYYY-MM-DD[T]HH:mm:ss\").valueOf()\n            return tempTimeA < tempTimeB ? 1 : -1\n        })\n\n        return (\n            <div style={{ marginTop: '10px' }}>\n                <div className='wardnotetitle'>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>病房公告</t2>\n                    <div onMouseUp={() => this.editlist()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", width: \"18px\", cursor: \"pointer\" }}>\n                        <img src={editlogo} alt='editlogo'></img>\n                    </div>\n                </div>\n                <div>\n                    <div className={changehight(this.state.editstate)}>\n                        {this.announcelist(annData, this.state.editstate)}\n                    </div>\n                    <div style={{ display: this.state.editstate ? \"block\" : \"none\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"c\" }}>\n                        <div style={{ height: \"50px\", backgroundColor: \"rgba(238,238,238,1)\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                            <Input placeholder=\"新增公告內容\" style={{ marginLeft: \"16px\", width: \"315px\" }} value={this.state.inputContent} onChange={this.onInputChange} />\n                            <Button type=\"primary\" style={{ marginRight: \"16px\" }} onClick={() => this.AddNewannouce()}>\n                                新增\n                            </Button>\n                        </div>\n                        <div style={{ height: \"50px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <Button style={{ margin: \"10px\", width: \"90px\" }} onClick={() => this.canceledit()}>取消</Button>\n                            <Button type=\"primary\" style={{ margin: \"10px\", width: \"90px\" }} onClick={() => this.okeditlist()}>儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WardcardNote;\n","import React, { Component } from 'react';\nimport { Month_format } from '../Commonfunction'\n\nclass Bedinformation extends Component {\n    state = {\n        tableselect: false\n    }\n\n    SelectTruechange() {\n        this.setState({\n            tableselect: true\n        })\n    }\n\n    SelectFalsechange() {\n        this.setState({\n            tableselect: false\n        })\n    }\n\n    sendReturnSelect = (id) => {\n        const { selectkey, idkey, localtime } = this.props\n        const select = this.Selectswitch(idkey, selectkey)\n        console.log(id)\n        if (select) {\n            const data = { \"idkey\": null, \"time\": localtime }\n            this.props.parentCallback(data);\n        }\n        else {\n            this.props.parentCallback(id);\n        }\n    }\n\n    Selectswitch(id, select) {\n        console.log(id, select)\n        if (id === select) {\n            return true\n        }\n        else return false\n    }\n    render() {\n        function weekdatformat(weekday) {\n            switch (weekday) {\n                case 0:\n                    return \"日\"\n                case 1:\n                    return \"一\"\n                case 2:\n                    return \"二\"\n                case 3:\n                    return \"三\"\n                case 4:\n                    return \"四\"\n                case 5:\n                    return \"五\"\n                case 6:\n                    return \"六\"\n                default:\n                    return null\n            }\n        }\n        const { selectkey, idkey, localtime, data } = this.props\n        const day = Month_format(new Date(localtime).getMonth()) + \"/\" + new Date(localtime).getDate()\n        const weekday = new Date(localtime).getDay()\n        const Unselect_tablestyle = { height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"1px solid rgba(238,238,238,1)\", borderLeftWidth: \"0px\" }\n        const select = this.Selectswitch(idkey, selectkey)\n        console.log(select)\n        if (data === null) {\n            return (\n                <div>\n                    <div style={select ? { border: \"1px solid rgba(59, 151, 225, 1)\", backgroundColor: \"#ffe1c499\", marginTop: '-2px' } : { cursor: \"pointer\" }} onMouseUp={() => this.sendReturnSelect({ \"idkey\": idkey, \"time\": localtime })}>\n                        <div style={Unselect_tablestyle}>\n                            <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                <t2 style={{ textAlign: \"center\" }}>{day}</t2>\n                                <t2 style={{ textAlign: \"center\" }}>{weekdatformat(weekday)}</t2>\n                            </div>\n                        </div>\n                        <div style={Unselect_tablestyle}>\n                            <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                <t2 style={{ textAlign: \"center\" }}>0(12)</t2>\n                                <t2 style={{ textAlign: \"center\" }}>0%</t2>\n                            </div>\n                        </div>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                    </div>\n                    <div style={{ display: select ? \"flex\" : \"none\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ width: 0, height: 0, borderStyle: \"solid\", borderWidth: \"17.3px 10px 0 10px\", borderColor: \"rgba(255,190,5,1) transparent transparent transparent\" }}></div>\n                    </div>\n                </div>\n            );\n\n        }\n        return (\n            <div>\n                <div style={select ? { border: \"1px solid rgba(59, 151, 225, 1)\", backgroundColor: \"#ffe1c499\", marginTop: '-2px' } : { cursor: \"pointer\" }} onMouseUp={() => this.sendReturnSelect({ \"idkey\": idkey, \"time\": localtime })}>\n                    <div style={Unselect_tablestyle}>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                            <t2 style={{ textAlign: \"center\" }}>{day}</t2>\n                            <t2 style={{ textAlign: \"center\" }}>{weekdatformat(weekday)}</t2>\n                        </div>\n                    </div>\n                    <div style={Unselect_tablestyle}>\n                        <div style={{ display: \"grid\" }}>\n                            <t2 style={{ textAlign: \"center\" }}>{data.hbedcount}({parseInt(parseInt(data.hbedcount) * 100 / 12)}%)</t2>\n                        </div>\n                    </div>\n                    <t2 style={Unselect_tablestyle}>{data.transoutcount}</t2>\n                    <t2 style={Unselect_tablestyle}>{data.transincount}</t2>\n                    <t2 style={Unselect_tablestyle}>{data.rtcount}</t2>\n                    <t2 style={Unselect_tablestyle}>{data.nonrtcount}</t2>\n                    <t2 style={Unselect_tablestyle}>{data.tpncount}</t2>\n                </div>\n                <div style={{ display: select ? \"flex\" : \"none\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <div style={{ width: 0, height: 0, borderStyle: \"solid\", borderWidth: \"17.3px 10px 0 10px\", borderColor: \"rgba(255,190,5,1) transparent transparent transparent\" }}></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Bedinformation\n","import moment from 'moment';\n\nfunction HISAPI_stringtodate(datestring) {\n    function addzero(value){\n        if (value < 10) {\n            return \"0\"+value\n        }\n        return value\n    }\n    console.log(datestring)\n    const datenumber = Number(datestring)\n    console.log(datenumber)\n    const dateformat = parseInt(datenumber / 10000) + '-' + parseInt(parseInt(datenumber / 100) % 100) + '-' + addzero(parseInt(datenumber % 100))\n    // console.log(\"dateformat = \" + dateformat)\n    return dateformat\n}\n\nfunction yyyymmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + \"/\" + Monthformat(new Date(timestamp).getMonth()) + \"/\" + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction yyyymmddstring(timestamp){\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + Monthformat(new Date(timestamp).getMonth()) + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction yyyymmfirstweeksate(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    return new Date(timestamp).getFullYear() + \"/\" + Monthformat(new Date(timestamp).getMonth()) + \"/1\"\n}\n\n\n\nfunction mmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return Monthformat(new Date(timestamp).getMonth()) + '/' + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction weekdateformat(timestamp) {\n    const param = new Date(timestamp).getDay()\n    const weekarray = ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六']\n    return weekarray[param]\n}\n\nfunction weekdateformatcalender(timestamp) {\n    const param = new Date(timestamp).getDay()\n    const weekarray = ['日', '一', '二', '三', '四', '五', '六']\n    return weekarray[param]\n}\n\nfunction hhmmssformat(timestamp) {\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return addZero(new Date(timestamp).getHours()) + ':' + addZero(new Date(timestamp).getMinutes())\n}\n\nfunction hhmmssformattohalf(timestamp) {\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return addZero(new Date(timestamp).getHours()) + ':30:00'\n}\n\n\nfunction yyyymmddHHmmfromat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return new Date(timestamp).getFullYear().toString() + Monthformat(new Date(timestamp).getMonth()).toString() + Dateformat(new Date(timestamp).getDate()).toString() + addZero(new Date(timestamp).getHours()).toString() + addZero(new Date(timestamp).getMinutes()).toString()\n}\n\nfunction MMDDhhmmfromat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return Monthformat(new Date(timestamp).getMonth()) + '/' + Dateformat(new Date(timestamp).getDate()) + ' ' + addZero(new Date(timestamp).getHours()) + ':' + addZero(new Date(timestamp).getMinutes())\n}\n\n\nfunction daysdiff(newtime, oldtime) {\n    const timestampdiff = new Date(newtime).getTime() - new Date(oldtime).getTime()\n    const dissdays = timestampdiff / (24 * 60 * 60 * 1000)\n    return parseInt(dissdays)\n}\n\n\nfunction disabledDate(current) {\n    // Can not select days before today and today\n    console.log(current)\n    return current && current < moment().endOf('day');\n}\n\nfunction compareday(date) {\n    console.log(new Date(date).getTime(), new Date().getTime())\n    if (new Date(date).getTime() > new Date().getTime()) {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunction formatxArrayhalf(time, interval) {\n    var xAxisarray = []\n    if (interval === 24) {\n        for (let index = 0; index < 144; index++) {\n            xAxisarray.push(time + (index * 10 * 60 * 1000))\n        }\n    }\n    if (interval === 18) {\n        for (let index = 0; index < 18; index++) {\n            xAxisarray.push(time + (60 * 60 * 1000 * 2) + (index * 60 * 60 * 1000 * 4))\n        }\n    }\n\n    if (interval === 21) {\n        for (let index = 0; index < 21; index++) {\n            xAxisarray.push(time + (60 * 60 * 1000 * 4) + (index * 60 * 60 * 1000 * 8))\n        }\n    }\n    if (interval === 14) {\n        for (let index = 0; index < 14; index++) {\n            xAxisarray.push(time + (60 * 60 * 1000 * 12) + (index * 60 * 60 * 1000 * 24))\n        }\n    }\n    return xAxisarray\n}\n\n\nfunction formatendtime(time) {\n    const endtime = new Date(yyyymmddformat(time)).getTime() + (31 * 60 * 60 * 1000)\n    return endtime\n}\n\nfunction formatintervaldays(days, interval) {\n    //false:一天 true:三天\n    if (interval === 1) {\n        return days - (24 * 60 * 60 * 1000) * 1\n\n    }\n    if (interval === 3) {\n        return days - (24 * 60 * 60 * 1000) * 3\n\n    }\n    else {\n        return null\n    }\n}\n\nfunction datestringformat(datestring) {\n    function addzero(value){\n        if (value < 10) {\n            return \"0\"+value\n        }\n        return value\n    }\n    const datenumber = Number(datestring)\n    const dateformat = parseInt(datenumber / 10000) + '/' + parseInt(parseInt(datenumber / 100) % 100) + '/' + addzero(parseInt(datenumber % 100))\n    // console.log(\"dateformat = \" + dateformat)\n    return dateformat\n}\n\nfunction apiyyyymmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + \"-\" + Monthformat(new Date(timestamp).getMonth()) + \"-\" + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction nisapiyyyymmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + Monthformat(new Date(timestamp).getMonth()) + Dateformat(new Date(timestamp).getDate())\n}\nexport {\n    yyyymmddformat,\n    weekdateformat,\n    hhmmssformat,\n    mmddformat,\n    MMDDhhmmfromat,\n    daysdiff,\n    disabledDate,\n    compareday,\n    weekdateformatcalender,\n    yyyymmfirstweeksate,\n    hhmmssformattohalf,\n    formatxArrayhalf,\n    formatendtime,\n    formatintervaldays,\n    datestringformat,\n    yyyymmddHHmmfromat,\n    yyyymmddstring,\n    apiyyyymmddformat,\n    nisapiyyyymmddformat,\n    HISAPI_stringtodate\n}","import React, { Component } from 'react';\nimport Labviewitem from './Labviewitem'\n// import { labdata } from '../../Data/Wardviewdata'\nimport * as FiliterReg from '../../Function/FiliterReg'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport moment from 'moment'\nimport * as ApiGithub from '../../API/ApiGithub'\n\nvar MG_VALUE, PROC_VALUE;\nclass Labviewlayout extends Component {\n    state = {\n        parser: [{ \"apply_condition\": { \"name\": \"\" }, \"mappings\": [] }],\n        dummy_mg: 0,\n        dummy_pct: 0,\n\n        RESDGLU1: [],\n        RESLAB02: [],\n        RESLAB01: [],\n        RESDBGAS: [],\n        RESLAB0C: [],\n        RESSECT: [],\n\n        prePickerDate: null,\n        preHID: null,\n        preTRDT: null\n    }\n    componentDidMount() {\n        ApiGithub.getGitHubJson(\"Labview.json\")\n            .then(result => {\n                console.log(\"getGitHubJson Labview.json OK \" + JSON.stringify(result.data));\n                this.setState({\n                    parser: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getGitHubJson Labview.json NG \" + JSON.stringify(err));\n            })\n        const { PickerDate, caseinfo } = this.props\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        this.setState({ prePickerDate: PickerDate, preHID: caseinfo.HISID, preTRDT: TRDT })\n        this.getLabData(PickerDate, caseinfo.HISID, TRDT)\n    }\n\n    componentDidUpdate() {\n        const { PickerDate, caseinfo } = this.props\n        const { prePickerDate, preHID, preTRDT } = this.state\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        if (prePickerDate !== PickerDate || preHID !== caseinfo.HISID || preTRDT !== TRDT) {\n            this.setState({ prePickerDate: PickerDate, preHID: caseinfo.HISID, preTRDT: TRDT })\n            this.getLabData(PickerDate, caseinfo.HISID, TRDT)\n        }\n    }\n    getLabData(PickerDate, HID, TRDT) {\n        function selectMonthInterval(PickerDate) {\n            const timestampInterval = new Date().getTime() - PickerDate\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        const TransinDate = moment(TRDT).format(\"YYYY-MM-DD\")\n        const MonthInterval = selectMonthInterval(PickerDate)\n        ApiProvider.getStoredProcedureRESDGLU1(HID, TransinDate)\n            .then(data => { this.setState({ RESDGLU1: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESDGLU1 NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESLAB02(HID, TransinDate)\n            .then(data => { this.setState({ RESLAB02: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESLAB02 NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESLAB01(HID, TransinDate)\n            .then(data => { this.setState({ RESLAB01: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESLAB01 NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESDBGAS(HID, TransinDate)\n            .then(data => { this.setState({ RESDBGAS: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESDBGAS NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESLAB0C(HID, TransinDate)\n            .then(data => { this.setState({ RESLAB0C: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESLAB0C NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESSECT(HID, MonthInterval, \"ALL\", \"DOC3924B\")\n            .then(data => { this.setState({ RESSECT: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESSECT NG \" + JSON.stringify(err)) });\n    }\n    findLastestTargetValue(arr, target) {\n        const { caseinfo } = this.props\n        const { parser } = this.state\n        let latestTimestamp = 0;\n        let latestvalue = undefined;\n        const selected_parser = parser.find(item => item.apply_condition.name.match(target) !== null);\n        const arrayLength = arr.length;\n        arr.forEach((item, index) => {\n            ApiProvider.getStoredProcedureRESDISP(caseinfo.HISID, item.ORMM, caseinfo.CASEID, item.ORDSEQNO)\n                .then(data => {\n                    console.log(\"getStoredProcedureRESDISP OK \" + JSON.stringify(data.data));\n                    const RESDISP = data.data\n                    //const RESDISP = [{\"RECNO\":\"1\",\"PARTNO\":\"11 \",\"HISTNO\":\"45305666  \",\"ORBGNDT\":\"2019-11-12\",\"CONTENT\":\"    MG++:  (20.00)\",\"ORDSEQ\":\"1\",\"CASENO\":\"25358448\"},{\"RECNO\":\"2\",\"PARTNO\":\"11 \",\"HISTNO\":\"45305666  \",\"ORBGNDT\":\"2019-11-12\",\"CONTENT\":\"    Procalcitonin:  (25.00)\",\"ORDSEQ\":\"1\",\"CASENO\":\"25358448\"}]\n\n                    //search for target\n                    const selected_mapping = selected_parser.mappings.find(mapping => mapping.key === target)\n                    const re = new RegExp(selected_mapping.regex_str, selected_mapping.regex_flags)\n\n                    RESDISP.forEach(element => {\n                        const match = element.CONTENT.match(re)\n                        if (match !== null) {\n                            const currentTimeStr = item.ORRCPDT + \"-\" + item.ORRCPTM\n                            const currentItemTimestamp = moment(currentTimeStr.trim(), \"YYYY-MM-DD-HH.mm.ss\").valueOf()\n                            const matchValue = match[selected_mapping.position]\n\n                            if (matchValue !== \"\" && matchValue !== undefined && matchValue !== null && currentItemTimestamp > latestTimestamp) {\n                                latestvalue = matchValue\n                                if (target === \"mg\") {\n                                    MG_VALUE = latestvalue\n                                } else if (target === \"pct\") {\n                                    PROC_VALUE = latestvalue\n                                }\n                            }\n                        }\n                    })\n                    this.updateLabviewIfNeed(arrayLength, index, target)\n                })\n                .catch(err => {\n                    console.log(\"getStoredProcedureRESDISP NG \" + JSON.stringify(err));\n                    this.updateLabviewIfNeed(arrayLength, index, target)\n                });\n        })\n    }\n    updateLabviewIfNeed(arrayLength, currentIdx, target) {\n        const retryMax = 3\n        if (currentIdx === arrayLength - 1) {\n            if (target === \"mg\" && this.state.dummy_mg < retryMax) {\n                this.setState({ dummy_mg: this.state.dummy_mg + 1 })\n            } else if (target === \"pct\" && this.state.dummy_pct < retryMax) {\n                this.setState({ dummy_pct: this.state.dummy_pct + 1 })\n            }\n        }\n    }\n    TitleRender() {\n        const { Source } = this.props\n        if (Source === \"Wardview\") {\n            return null\n        }\n        else return (\n            <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                <t1 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>最近實驗室數據</t1>\n            </div>\n        );\n    }\n    render() {\n        function ListEndData(array) {\n            if (array.length === 0) {\n                return \"--\"\n            }\n            return array[array.length - 1]\n        }\n        // const data = labdata.data\n        const { PickerDate, Source } = this.props\n        const { RESDGLU1, RESLAB02, RESLAB01, RESDBGAS, RESSECT } = this.state\n        console.log(RESDGLU1)\n\n        const RESDGLU1LIST = FiliterReg.ListForTime(RESDGLU1, PickerDate)\n        const RESLAB02LIST = FiliterReg.ListForTime(RESLAB02, PickerDate)\n        const RESLAB01LIST = FiliterReg.ListForTime(RESLAB01, PickerDate)\n        const RESDBGASLIST = FiliterReg.ListForTime(RESDBGAS, PickerDate)\n        // const RESLAB0CLIST = FiliterReg.ListForTime(RESLAB0C, PickerDate)\n\n        const RESSECT_MG_LIST = FiliterReg.ListForTimeAndTarget(RESSECT, PickerDate, \"Mg\")\n        this.findLastestTargetValue(RESSECT_MG_LIST, \"mg\")\n\n        const RESSECT_PROC_LIST = FiliterReg.ListForTimeAndTarget(RESSECT, PickerDate, \"Procalcitonin\")\n        this.findLastestTargetValue(RESSECT_PROC_LIST, \"pct\")\n\n        const GLUFAST = ListEndData(RESDGLU1LIST.filter(function (value, index, array) {\n            return value.GLUFAST !== null\n        }))\n        const WBC = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV01 !== null\n        }))\n        const SEG = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV14 !== null\n        }))\n        const LYMP = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV15 !== null\n        }))\n        const HGB = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV03 !== null\n        }))\n        const PLATELET = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV09 !== null\n        }))\n        const NA = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV13 !== null\n        }))\n        const K = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV14 !== null\n        }))\n        const CA = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            // console.log(value.RSV15)\n            return value.RSV15 !== null\n        }))\n        const P = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV17 !== null\n        }))\n        const ALB = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV02 !== null\n        }))\n        const CRP = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV32 !== null\n        }))\n        const PH = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS07 !== null\n        }))\n        const PCO2 = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS06 !== null\n        }))\n        const BE = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS01 !== null\n        }))\n        const PO2 = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS08 !== null\n        }))\n        const BUN = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV05 !== null\n        }))\n        //02\n        const CR = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV06 !== null\n        }))\n        const ALT = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV11 !== null\n        }))\n        const AST = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV12 !== null\n        }))\n        const TBIL = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV08 !== null\n        }))\n        const DBIL = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV25 !== null\n        }))\n        const ALKP = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV09 !== null\n        }))\n        const TOTALCA = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV03 !== null\n        }))\n        const IRON = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV26 !== null\n        }))\n        const TIBC = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV27 !== null\n        }))\n        const FERRITIN = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV03 !== null\n        }))\n\n        function areainterval(source) {\n            if (source === \"Wardview\") {\n                return \"0px\"\n            }\n            else return \"10px\"\n        }\n\n        function nullvalue(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            return value.toString().trim()\n        }\n        const TitleR = this.TitleRender()\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                {TitleR}\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", gridColumnGap: areainterval(Source) }}>\n                    <div style={{ border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(GLUFAST.GLUFAST)} title={\"Glucose\"} time={GLUFAST.ORBGNDT}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(WBC.RSV01)} title={\"WBC\"} time={WBC.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(SEG.RSV14)} title={\"Seg\"} time={SEG.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(LYMP.RSV15)} title={\"Lymp\"} time={LYMP.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(HGB.RSV03)} title={\"Hgb\"} time={HGB.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PLATELET.RSV09)} title={\"Platelet\"} time={PLATELET.ORBGNDT}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"5fr 1fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(NA.RSV13)} title={\"Na\"} time={NA.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(K.RSV14)} title={\"K\"} time={K.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(CA.RSV15)} title={\"Ca\"} time={CA.ORBGNDT}></Labviewitem> {/*parse*/}\n                        <Labviewitem Source={Source} value={nullvalue(P.RSV17)} title={\"P\"} time={P.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(MG_VALUE)} title={\"Mg\"} time={\"2019-12-12\"}></Labviewitem> {/*parse*/}\n                    </div>\n                    <div style={{ border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(ALB.RSV02)} title={\"ALB\"} time={ALB.ORBGNDT}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 4fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(CRP.RSV32)} title={\"CRP\"} time={CRP.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PROC_VALUE)} title={\"PCT\"} time={\"2019-12-12\"}></Labviewitem>  {/*parse*/}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(PH.SS07)} title={\"pH\"} time={PH.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PCO2.SS06)} title={\"PCO\"} time={PCO2.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(BE.SS01)} title={\"BE\"} time={BE.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PO2.SS08)} title={\"PO\"} time={PO2.ORBGNDT}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 2fr 2fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(BUN.RSV05)} title={\"BUN\"} time={BUN.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(CR.RSV06)} title={\"Cr\"} time={CR.ORBGNDT}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(ALT.RSV11)} title={\"ALT\"} time={ALT.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(AST.RSV12)} title={\"AST\"} time={AST.ORBGNDT}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(TBIL.RSV08)} title={\"TBil\"} time={TBIL.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(DBIL.RSV25)} title={\"DBil\"} time={DBIL.ORBGNDT}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 4fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(ALKP.RSV09)} title={\"ALK-P\"} time={ALKP.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(TOTALCA.RSV03)} title={\"Total Ca\"} time={TOTALCA.ORBGNDT}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(IRON.RSV26)} title={\"Iron\"} time={IRON.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(TIBC.RSV27)} title={\"TIBC\"} time={TIBC.ORBGNDT}></Labviewitem>\n                        <Labviewitem Source={Source} value={\"--\"} title={\"FeSat\"} time={\"2019-12-12\"}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(FERRITIN.RSV03)} title={\"Ferritin\"} time={FERRITIN.ORBGNDT}></Labviewitem> {/* No Data */}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Labviewlayout\n","import React, { Component } from 'react';\nimport Bedinformation from './Bedinfo'\nimport { DatePicker, Button } from 'antd';\nimport moment from 'moment';\nimport * as apiProvide from '../API/ApiProvider'\nimport { yyyymmddformat } from '../Function/Timeformat'\nimport './WardBedinformation.scss'\n\nclass Wardbedinformation extends Component {\n    state = {\n        subselectdate: null,\n        selectid: null,\n        PickerDate: moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf(),\n        bedinfo: []\n    }\n    componentDidMount() {\n        this.apiData(this.state.PickerDate)\n    }\n    apiData(PickerDate) {\n        apiProvide.getWardDebInfo(moment(PickerDate).format(\"YYYY-MM-DD\"))\n            .then(data => { console.log(data.data); this.setState({ bedinfo: data.data }) })\n            .catch(err => { console.log(err) })\n    }\n    onChangeDate = (date, datestring) => {\n        this.setState({\n            PickerDate: date.valueOf(),\n            selectid: null\n        })\n        this.apiData(this.state.PickerDate)\n    }\n    callbackFunction = (idnumber) => {\n        console.log(idnumber)\n        this.setState({\n            selectid: idnumber.idkey,\n            subselectdate: idnumber.time\n        })\n    }\n    transferListlayout(trans) {\n        const RenderCell = trans.map(function (element, index, arr) {\n            return (\n                <div className='wardbedinfoitemcontextgridRow'>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>{element.caseid}</t2>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>{element.pnamec}</t2>\n                </div>\n            );\n        })\n        return (\n            <div>\n                <div className='wardbedinfoitemcontextgridRow'>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>病歷號碼</t2>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>姓名</t2>\n                </div>\n                {RenderCell}\n            </div>\n        );\n    }\n    infoitem() {\n        const selectDateitem = this.state.subselectdate\n        const bedinfo = this.state.bedinfo\n        const filterdate = bedinfo.filter(function (info, index) {\n            const tempDate = moment(info.Date, 'YYYYMMDD')\n            return yyyymmddformat(tempDate) === yyyymmddformat(selectDateitem)\n        })\n        console.log(filterdate)\n\n        if (this.state.selectid === null) {\n            return null\n        }\n        else {\n            const inType = filterdate.length === 0 ? 0 : filterdate[0].transoutIncountperson.length\n            const outType = filterdate.length === 0 ? 0 : filterdate[0].transoutOutcountperson.length\n\n            const transIn = filterdate.length === 0 ? 0 : filterdate[0].transoutIncountperson\n            const transOut = filterdate.length === 0 ? 0 : filterdate[0].transoutOutcountperson\n            // console.log(inType)\n            // console.log(outType)\n            // console.log(transIn)\n            // console.log(transOut)\n            return (\n                <div>\n                    {/* <div className='wardbedinfoitemtriangle'>\n                        <div className='triangle'></div>\n                    </div> */}\n                    <div className='wardbedinfoitemcontext'>\n                        <div className='wardbedinfoitemcontextgrid'>\n                            <div>\n                                <t2 className='wardbedinfoitemcontexttitle'>轉入病人清單</t2>\n                                <div className='wardbedinfoitemcontextgridlayout'>\n                                    {inType === 0 ? <div className='nopatient'>無病人</div> : this.transferListlayout(transIn)}\n                                </div>\n                            </div>\n                            <div>\n                                <t2 className='wardbedinfoitemcontexttitle'>轉出病人清單</t2>\n                                <div className='wardbedinfoitemcontextgridlayout'>\n                                    {outType === 0 ? <div className='nopatient'>無病人</div> : this.transferListlayout(transOut)}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n            // }\n        }\n\n    }\n    bedinfotitle() {\n        const maparray = ['日期', '佔床數', '轉出', '轉入', '侵入式呼吸器', '非侵入式呼吸器', '開立PN']\n        const title = maparray.map(function (info, index) {\n            return (\n                <div className='wardbedinfotablerowtitle'>\n                    <t2>{info}</t2>\n                </div>\n            );\n        })\n        return title\n    }\n    weekbedinfo() {\n        var infolist = []\n        const infoList = this.state.bedinfo\n        const dateTime = this.state.PickerDate\n        console.log(infoList)\n        for (let i = 0; i < 7; i++) {\n            const localtime = dateTime - (i * 24 * 60 * 60 * 1000);\n            const filterdate = infoList.filter(function (info, index) {\n                const tempDate = moment(info.Date, 'YYYYMMDD').valueOf()\n                return tempDate === localtime\n            })\n            if (filterdate.length === 0) {\n                infolist.push(\n                    <div onClick={() => { console.log(i) }}>\n                        <Bedinformation data={null} key={i} localtime={localtime} selectkey={this.state.selectid} idkey={i} parentCallback={this.callbackFunction}></Bedinformation>\n                    </div>\n                )\n            }\n            else {\n                infolist.push(\n                    <div onClick={() => { console.log(i) }}>\n                        <Bedinformation data={filterdate[0]} key={i} localtime={localtime} selectkey={this.state.selectid} idkey={i} parentCallback={this.callbackFunction}></Bedinformation>\n                    </div>\n                )\n            }\n        }\n        infolist.reverse()\n        return infolist\n\n    }\n\n    trainDay = (e) => {\n        // const { caseinfo } = this.props\n        const { PickerDate } = this.state\n        // const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        // const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                // const bTemp = bTime - (6 * day)\n                // bronDate <= bTemp && this.onChange(moment(bTime))\n                this.onChangeDate(moment(bTime))\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD'))\n                this.onChangeDate(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= aTemp && this.onChangeDate(moment(aTime))\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        return (\n            <div style={{ marginTop: \"10px\" }}>\n                <div className='wardbrdinfomationtitle'>\n                    <centerstyle>\n                        <t2 style={{ fontSize: \"16px\", color: \"rgba(0, 0, 0, .7)\" }}>病房每日統計</t2>\n                        <t2 style={{ fontSize: \"16px\", fontStyle: \"italic\", color: \"rgba(0, 0, 0, .7)\", paddingLeft: \"10px\" }}>每日上午七點統計</t2>\n                    </centerstyle>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"140px 120px\", gridColumnGap: \"5px\" }}>\n                        <DatePicker showToday={true} disabledDate={(current) => { return current && current > moment().startOf('day') }} value={moment(this.state.PickerDate)} format={\"YYYY/MM/DD\"} onChange={this.onChangeDate} allowClear={false} />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\", marginLeft: \"10px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                    </div>\n                </div>\n                <div className='wardbedinformationcontext'>\n                    <div>\n                        {this.bedinfotitle()}\n                    </div>\n                    {this.weekbedinfo()}\n                </div>\n                {this.infoitem()}\n            </div>\n        );\n    }\n}\n\nexport default Wardbedinformation;\n","import React, { Component } from 'react';\nimport detaillogo from '../Image/svg/details.svg'\nimport editlogo from '../Image/svg/Edit.svg'\nimport { Tooltip, Input, Button } from 'antd';\nimport './Schedule_event.scss'\nimport * as ApiProvider from '../API/ApiProvider';\n//資料\n// import { eventdata } from '../jsonResponse'\nimport moment from 'moment';\n\nclass Schedule_event_list extends Component {\n    state = {\n        detailstate: \"none\",\n        // pressitemstate: \"all\",\n        items_interval: 0,\n        powerLogin: 0,\n        EditMode: false,\n        inputContent: '',\n        selSchedule: '排程',\n\n        Scheduledata: [],\n        status: false,\n        PickerDate: moment().valueOf(),\n        TRANSINID: null\n    }\n\n    querySchedule(time, ID) {\n        const st = moment(moment(time).format(\"YYYY/MM/DD\"), \"YYYY/MM/DD\").valueOf()\n        const et = moment(moment(time).format(\"YYYY/MM/DD\"), \"YYYY/MM/DD\").valueOf() + (24 * 60 * 60 * 1000)\n        console.log(ID, st, et)\n        ApiProvider.getOnePatientSchedule(ID, st, et)\n            .then(data => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n                this.setState({ Scheduledata: data.data })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }\n\n    queryALLSchedule() {\n        ApiProvider.getAllSchedule()\n            .then(data => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n                this.setState({ Scheduledata: data.data })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }\n    componentDidMount() {\n        this.onInputChange = this.onInputChange.bind(this);\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        const source = this.props.source\n        if (source === 1) {\n            const ID = this.props.caseinfo.TRANSINID\n            const date = this.props.PickerDate\n            console.log(this.props.caseinfo)\n            if (ID === null) {\n\n            }\n            else {\n                this.setState({\n                    PickerDate: date,\n                    TRANSINID: ID\n                })\n                this.querySchedule(date, ID)\n            }\n        }\n        else {\n            //get ALL\n            this.queryALLSchedule()\n        }\n\n    }\n\n    componentDidUpdate() {\n        const source = this.props.source\n        if (this.state.status) {\n            this.setState({ status: false })\n            if (source === 1) {\n                const ID = this.props.caseinfo.TRANSINID\n                this.querySchedule(this.state.PickerDate, ID)\n            }\n            else {\n                //get ALL\n                this.queryALLSchedule()\n            }\n        }\n        const propsDate = this.props.PickerDate\n        const stateDate = this.state.PickerDate\n        if (propsDate !== stateDate) {\n            this.setState({ PickerDate: propsDate })\n            if (source === 1) {\n                const ID = this.props.caseinfo.TRANSINID\n                console.log(moment(propsDate).format(\"YYYYMMDDHHmmss\"))\n                console.log(moment(stateDate).format(\"YYYYMMDDHHmmss\"))\n                this.querySchedule(propsDate, ID)\n            }\n            else {\n                //get ALL\n            }\n        }\n    }\n    selSchedule(value) {\n        this.setState({ selSchedule: value })\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString()\n        const writter = sessionStorage.getItem(\"user\")\n        const name = this.props.caseinfo.PBASINGNINFO.PNAMEC\n        const hisid = this.props.caseinfo.HISID\n        ApiProvider.createPatientSchedule(this.props.caseinfo.PLOCSTART.HBEDNO, this.state.inputContent, timeNowStr, this.props.caseinfo.TRANSINID, this.state.selSchedule, writter, name, hisid)\n            .then(data => {\n                console.log(\" OK \" + JSON.stringify(data.data))\n                this.setState(\n                    {\n                        EditMode: false,\n                        inputContent: undefined,\n                        status: true\n                    })\n            })\n            .catch(err => {\n                console.log(\" Err \" + JSON.stringify(err))\n            })\n    }\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    timechange(timestamp) {\n        const changetime = new Date(timestamp).getHours() + \":\" + new Date(timestamp).getMinutes()\n        return changetime\n    }\n\n    // pressbtn(pressitem) {\n    //     this.setState(\n    //         {\n    //             pressitemstate: pressitem\n    //         }\n    //     );\n    // }\n    listevent() {\n        // var eventdatalist = eventdata\n        const scheduleData = this.props.data;\n        console.log(scheduleData)\n\n\n        // function itemchange(changeitem) {\n        //     switch (changeitem) {\n        //         case \"事件\":\n        //             return \"事\"\n        //         case \"排程\":\n        //             return \"排\"\n        //         default:\n        //             return \"\"\n        //     }\n        // }\n\n        // function checkbackground(string) {\n        //     switch (string) {\n        //         case \"排程\":\n        //             return \"rgba(124,179,5,1)\"\n        //         case \"事件\":\n        //             return \"rgba(124,179,5,1)\"\n        //         default:\n        //             return \"rgba(124,179,5,1)\"\n        //     }\n        // }\n\n        // function scheduleList(BtnType) {\n        //     if (BtnType === \"all\") {\n        //         return ScheduleList\n        //     }\n        //     const scheduleListFilter = ScheduleList.filter(function (info, index, arr) {\n        //         return info.type === BtnType\n        //     })\n        //     return scheduleListFilter\n        // }\n        // const eventstate = this.state.pressitemstate\n        let ScheduleList = this.state.Scheduledata\n        // const patientdata = this.props.caseinfo\n        // console.log(this.props)\n        if (ScheduleList.length === 0) {\n            return <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\" }}>\n                本日無排程\n                    </div>\n        }\n        // const RenderData = scheduleList(eventstate)\n\n        ScheduleList = ScheduleList.sort((a, b) => {\n            let tempTimeA = moment(moment(a.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss'), \"YYYYMMDD\").valueOf()\n            let tempTimeB = moment(moment(b.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss'), \"YYYYMMDD\").valueOf()\n            return tempTimeA < tempTimeB ? 1 : -1\n        })\n\n        const CellRender = ScheduleList.map(function (info, index, arr) {\n            const time = moment(info.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n            const localTime = moment.utc(time).toDate()\n            const text = <div>{info.writter}醫師於{moment(localTime).format(\"YYYY/MM/DD HH:mm:ss\")}更新</div>\n            return (\n                <div key={index} className='CellLayout'>\n                    <div className='Context'>\n                        <div style={{ height: '30px', width: \"60px\", borderRadius: \"4px\", backgroundColor: \"rgba(124,179,5,1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <t2 style={{ color: 'white' }}>床{info.bednumber}</t2>\n                            {/* itemchange(info.type) */}\n                        </div>\n                        <div style={{ fontSize: \"16px\" }}>{info.name} {moment(localTime).format(\"HH:mm\")} {info.context}</div>\n                    </div>\n                    <Tooltip placement=\"right\" title={text}>\n                        <div>\n                            <img src={detaillogo} alt='detaillogo'></img>\n                        </div>\n                    </Tooltip>\n                </div>\n            );\n        })\n        return CellRender\n    }\n\n\n    //測驗項目功能_區間按鈕樣式\n    // SwitchTestItemInterval(testiteminterval) {\n    //     const stylestate = this.state.pressitemstate\n    //     if (testiteminterval === stylestate) {\n    //         return 'buttonselect'\n    //     }\n    //     else return 'buttonUnselect'\n    // }\n    //測驗項目功能_區間按鈕選擇\n    Onchangetimeinterval(changestate) { this.setState({ items_interval: changestate }) }\n    EditControl() {\n        const edit = this.props.editstatus\n        if (edit) {\n            return (\n                <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                    <img src={editlogo} alt=\"editlogo\" />\n                </div>\n            );\n        }\n        return null\n    }\n    render() {\n        const { title } = this.props\n        const EditButton = this.EditControl()\n        return (\n            <div className='ScheduleEventLayout'>\n                <div className='ScheduleEventTitle'>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t2>\n                    {EditButton}\n                </div>\n                <div className='ScheduleEventContext'>\n                    <div className='ContextList'>\n                        {this.listevent()}\n                    </div>\n                </div>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        {/* <Select defaultValue={this.state.selSchedule} placeholder='選擇' style={{ width: 150 }} onChange={this.selSchedule.bind(this)}>\n                            <Option value='排程'>排程</Option>\n                            <Option value='事件'>事件</Option>\n                        </Select> */}\n                        <div value='排程' style={{ display: \"grid\", width: 150, height: \"32px\", justifyContent: \"center\", alignItems: \"center\", border: \"1px solid #d9d9d9\", borderRadius: \"4px\", marginRight: \"5px\" }}>排程</div>\n                        <Input placeholder=\"輸入當日內容\" value={this.state.inputContent} onChange={this.onInputChange}></Input>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Schedule_event_list\n","import React, { Component } from 'react';\nimport Schedule_event_list from '../Module/Schedule_event'\n\nclass Wardschedule extends Component {\n\n    render() {\n        return (\n            <Schedule_event_list source={this.props.source} title=\"今日排程\" data={this.props.scheduleData} editstatus={this.props.editstatus} />\n        );\n    }\n}\n\n\nexport default Wardschedule\n","import React, { Component } from 'react';\nimport WardcardNote from './Wardnote'\nimport Wardbedinformation from './WardBedinformation'\nimport Wardschedule from './Wardschedule'\nimport './Wardinfoindex.scss'\n// import * as ApiProvider from '../API/ApiProvider';\n\n// const SCHEDULE_TYPE_EVENT = \"事件\";\n\nclass Wardinfoindex extends Component {\n    render() {\n        return (\n            <div className='Wardinfoindexcontent'>\n                <div style={{ fontSize: \"22px\", color: \"rgba(0, 0, 0, .7)\", fontWeight: \"600\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>NICU總覽</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"5px\" }}>\n                    <WardcardNote></WardcardNote>\n                    <Wardschedule source={0} editstatus={false}></Wardschedule>\n                </div>\n                <Wardbedinformation></Wardbedinformation>\n            </div>\n        );\n    }\n}\n\nexport default Wardinfoindex;\n","// Get api\n\n\n\n//資料更新時間\nconst updatetime = {\n    'time': 1567051200000\n}\n\nconst eventdata = [\n    {\n        \"item\": \"schedule\",\n        \"time\": 1565748000000,\n        \"result\": \"手術前檢查\",\n        \"name\": \"林博偉\",\n        \"bednumber\": \"01\",\n        \"writter\": \"林天財\"\n    },\n    {\n        \"item\": \"event\",\n        \"time\": 1565748000000,\n        \"result\": \"傷口變大了\",\n        \"name\": \"王添財\",\n        \"bednumber\": \"02\",\n        \"writter\": \"林天財\"\n    }\n]\n\n//Ward_bed_vitalData_last POST\nconst ward_bed_lastData = [\n    {\n        \"MedicalNumber\": \"123456789\",\n        \"Data\": {\n            \"HR\": 120,\n            \"ABP1\": 45,\n            \"ABP2\": 30,\n            \"ABP3\": 35,\n            \"SpO2\": 96,\n            \"BT\": 37.5,\n            \"RR\": 22\n        },\n        \"Status\": {\n            \"Ventilator\": false,\n            \"TPN\": true,\n            \"NPO\": false,\n            \"ECMO\": false,\n            \"Antibiotics\": false,\n            \"Hemodialysis\": false,\n            \"Foley\": false,\n            \"Drain\": false\n        }\n    },\n    {\n        \"MedicalNumber\": \"987654321\",\n        \"Data\": {\n            \"HR\": 120,\n            \"ABP1\": 45,\n            \"ABP2\": 30,\n            \"ABP3\": 35,\n            \"SpO2\": 96,\n            \"BT\": 37.5,\n            \"RR\": 22\n        }\n    },\n    {\n        \"MedicalNumber\": \"123454321\",\n        \"Data\": {\n            \"HR\": 120,\n            \"ABP1\": 45,\n            \"ABP2\": 30,\n            \"ABP3\": 35,\n            \"SpO2\": 96,\n            \"BT\": 37.5,\n            \"RR\": 22\n        }\n    }\n]\n\nconst WardInfo = {\n    UpdateTime: 1567051200000,\n    Director: \"林又新\",\n    HeadNurse: \"鄭麗貞\",\n    BedTotal: 12,\n    SignBed: 7,\n    EmptyBed: 9,\n    TransferBed: 8,\n    NewPatient: 2,\n    Ventilator: 1,\n    NPO: 7,\n    TPN: 4,\n    ECMO: 8,\n    Antibiotics: 6,\n    Hemodialysis: 1,\n    Announcement: [\n        {\n            time: 1567051200000,\n            text: \"7/10 王大明醫師請假，下午請李小華醫師cover ，6/30XXX醫師留\",\n            writter: \"張大帥\"\n        },\n        {\n            time: 1567051250000,\n            text: \"「超音波用完請記得歸還原位」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        }\n    ]\n}\nconst labdata = [\n    [{ title: \"Glucose\", score: 77, date: \"2019/01/01\" }],\n    [{ title: \"WBC\", score: 19647, date: \"Seg 59%2019/01/01\" }],\n    [{ title: \"WBC\", score: 14.8, date: \"2019/01/01\" }],\n    [{ title: \"Platelet\", score: 125, date: \"2019/01/01\" }],\n    [\n        { title: \"Na+\", score: 125, date: \"2019/01/01\" },\n        { title: \"K+\", score: 125, date: \"2019/01/01\" },\n        { title: \"Ca2+\", score: 125, date: \"2019/01/01\" },\n        { title: \"P\", score: 125, date: \"2019/01/01\" },\n        { title: \"Mg2+\", score: 125, date: \"2019/01/01\" },\n    ],\n    [\n        { title: \"CRP\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Procalcitionin\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Current Antibiotics\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Bun\", score: 125, date: \"2019/01/01\" },\n        { title: \"Cr\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"ALT\", score: 125, date: \"2019/01/01\" },\n        { title: \"AST\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"TBIL\", score: 125, date: \"2019/01/01\" },\n        { title: \"D.Bil\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"ALKP\", score: 125, date: \"2019/01/01\" },\n        { title: \"Total Ca\", score: 125, date: \"2019/01/01\" },\n        { title: \"LDH\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Iron\", score: 125, date: \"2019/01/01\" },\n        { title: \"TIBC\", score: 125, date: \"2019/01/01\" },\n        { title: \"FeSat\", score: 125, date: \"2019/01/01\" },\n        { title: \"Ferritin\", score: 125, date: \"2019/01/01\" }\n    ]\n]\nconst jsonResponse = [\n    {\n        \"HISID\": \"H1234567\",\n        \"CASEID\": \"C1234567\",\n        \"name\": \"吳大胖之女\",\n        \"gender\": 1,\n        \"birthday\": \"2019/11/11\",\n        \"bednumber\": 1,\n        \"pregnancy\": \"2019/11/10\",\n        \"weightbirth\": 1400,\n        \"weight\": 2300,\n        'report': 3,\n        'nonreport': 3,\n        'note': '隨時注意病人血壓狀態隨時注意病人血壓狀態',\n        'type':'NIS',\n        'MainDoctor':'張大春',\n        'IcuInTime':'2019/11/11'\n    },\n    {\n        \"HISID\": \"H9876543\",\n        \"CASEID\": \"C12345622\",\n        \"name\": \"吳大胖之女\",\n        \"gender\": 1,\n        \"birthday\": \"2019/11/11\",\n        \"bednumber\": 2,\n        \"pregnancy\": \"2019/11/10\",\n        \"weightbirth\": 1400,\n        \"weight\": 2300,\n        'report': 3,\n        'nonreport': 3,\n        'note': '隨時注意病人血壓狀態隨時注意病人血壓狀態',\n        'type':'Custom',\n        'MainDoctor':'張大春',\n        'IcuInTime':'2019/11/11'\n    }\n]\n\n//Wardview TCP data\nconst centerrowdata = {\n    \"id\": 20190817001,\n    \"data\": {\n        \"Weight\": 5000,\n        \"WeightDif\": 700,\n        \"BP\": [\n            {\n                \"time\": 1565395200,\n                \"DBP\": 60,\n                \"SBP\": 90\n            }\n        ],\n        \"HR\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"RR\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"BT\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"Urine\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"Suger\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"SP\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ]\n    }\n}\n\nconst growdata = {\n    Male_befor: [\n        { y: 22, min: 420, max: 600 },\n        { y: 23, min: 470, max: 700 },\n        { y: 24, min: 510, max: 800 },\n        { y: 25, min: 570, max: 900 },\n        { y: 26, min: 610, max: 1040 },\n        { y: 27, min: 700, max: 1200 },\n        { y: 28, min: 790, max: 1340 },\n        { y: 29, min: 870, max: 1520 },\n        { y: 30, min: 1000, max: 1740 },\n        { y: 31, min: 1120, max: 2000 },\n        { y: 32, min: 1300, max: 2240 },\n        { y: 33, min: 1500, max: 2500 },\n        { y: 34, min: 1700, max: 2800 },\n        { y: 35, min: 1960, max: 3040 },\n        { y: 36, min: 2180, max: 3300 },\n        { y: 37, min: 2400, max: 3500 },\n        { y: 38, min: 2600, max: 3780 },\n        { y: 39, min: 2810, max: 3980 },\n        { y: 40, min: 3000, max: 4200 },\n        { y: 41, min: 3200, max: 4440 },\n        { y: 42, min: 3400, max: 4700 },\n        { y: 43, min: 3600, max: 5000 },\n        { y: 44, min: 3800, max: 5270 }\n    ],\n    FeMale_before: [\n        { y: 22, min: 400, max: 580 },\n        { y: 23, min: 430, max: 640 },\n        { y: 24, min: 490, max: 730 },\n        { y: 25, min: 550, max: 850 },\n        { y: 26, min: 580, max: 1000 },\n        { y: 27, min: 630, max: 1120 },\n        { y: 28, min: 700, max: 1300 },\n        { y: 29, min: 800, max: 1500 },\n        { y: 30, min: 900, max: 1700 },\n        { y: 31, min: 1050, max: 1910 },\n        { y: 32, min: 1200, max: 2180 },\n        { y: 33, min: 1400, max: 2400 },\n        { y: 34, min: 1600, max: 2680 },\n        { y: 35, min: 1850, max: 2930 },\n        { y: 36, min: 2050, max: 3200 },\n        { y: 37, min: 2300, max: 3490 },\n        { y: 38, min: 2480, max: 3700 },\n        { y: 39, min: 2680, max: 3900 },\n        { y: 40, min: 2820, max: 4100 },\n        { y: 41, min: 2980, max: 4300 },\n        { y: 42, min: 3150, max: 4520 },\n        { y: 43, min: 3300, max: 4740 },\n        { y: 44, min: 3500, max: 5000 }\n    ],\n    Male_after: [\n        { y: 0, min: 2500, max: 4300 },\n        { y: 1, min: 2600, max: 4500 },\n        { y: 2, min: 2800, max: 4900 },\n        { y: 3, min: 3100, max: 5200 },\n        { y: 4, min: 3400, max: 5600 },\n        { y: 5, min: 3600, max: 5900 },\n        { y: 6, min: 3800, max: 6300 }\n    ],\n    FeMale_after: [\n        { y: 0, min: 2400, max: 4200 },\n        { y: 1, min: 2500, max: 4400 },\n        { y: 2, min: 2700, max: 4600 },\n        { y: 3, min: 2900, max: 5000 },\n        { y: 4, min: 3100, max: 5300 },\n        { y: 5, min: 3300, max: 5600 },\n        { y: 6, min: 3500, max: 5900 }\n    ]\n}\n\nconst Note_data = [\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 }\n]\n\nconst todo_data = [\n    {\n        Time: 1566287810473,\n        Content: \"幫大明量體重\",\n        Flag: true,\n        Editor: \"修改者\"\n    },\n    {\n        Time: 1566287810473,\n        Content: \"幫大明量體重\",\n        Flag: true,\n        Editor: \"修改者\"\n    },\n    {\n        Time: 1566287810473,\n        Content: \"幫大明量體重\",\n        Flag: true,\n        Editor: \"修改者\"\n    }\n]\n\n\nexport { jsonResponse, centerrowdata, WardInfo, updatetime, ward_bed_lastData, labdata, eventdata, growdata, Note_data, todo_data };","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { growdata } from '../jsonResponse'\nimport moment from 'moment';\n\n//40週後\nclass WardlifeChart extends Component {\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    drawChart() {\n        const { gender, svg_key, weightList, grewinfo } = this.props\n        const width = (window.screen.availWidth - 650) / 2, height = 350\n        //var d = new Date('2014,12,01,12:16:05');\n        //var vertigo = datarelease();\n        console.log(grewinfo)\n        if (grewinfo === null || grewinfo === undefined) {\n            return null\n        }\n        const bornweeks = Number(grewinfo.WEEK_BORN)\n        const borndays = Number(grewinfo.DAY_BORN)\n        const Birthday = grewinfo.BIRTHDAY\n        const pregencyTimestamp = moment(Birthday, \"YYYYMMDD\").valueOf() - ((bornweeks * 7) + borndays) * 24 * 60 * 60 * 1000\n\n\n        function tickValues(growdata, gender) {\n            if (gender === 'M' || gender === '1') {\n                console.log(Row)\n                const Row = growdata.Male_befor\n                return [Row[Row.length - 1].min, Row[Row.length - 1].max]\n            }\n            const Row = growdata.FeMale_before\n            console.log(Row)\n            return [Row[Row.length - 1].min, Row[Row.length - 1].max]\n        }\n\n        const tick = tickValues(growdata, gender)\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([1500, 7000])\n            .range([height, 0])\n\n        var x = d3.scaleLinear()\n            .domain([22, 44])\n            .range([0, width])\n\n\n        var yAxis = d3.axisLeft(y)\n            .ticks(10)\n            .tickSize(0, 0)\n            .tickPadding(10)\n            .tickFormat(function (d, index) { return index === 11 ? d + \"(g)\" : d });\n\n\n        var xAxis = d3.axisTop(x)\n            .ticks(14)\n            .tickSize(0, 0)\n            .tickPadding(-15)\n            .tickFormat(function (d, index) { return d + 'W'; });\n\n        var yRightAxis = d3.axisLeft(y)\n            .tickValues(tick)\n            .tickSize(0, 0)\n            .tickPadding(-40)\n            .tickFormat(function (d, index) {\n                console.log(index)\n                if (index === 0) {\n                    return \"10th%\"\n                }\n                if (index === 1) {\n                    return \"90th%\"\n                }\n                return null\n            });\n        var svg = d3\n            .select(\"#\" + svg_key)\n            .style(\"height\", \"400px\")\n            .style(\"width\", \"100%\")\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 20 + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(\" + 0 + \", \" + height + \")\");\n\n        svg.append(\"g\")\n            .call(yRightAxis)\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(\" + width + \", \" + 0 + \")\");\n\n        for (let index = 0; index < 13; index++) {\n            const number = index * 500 + 1000\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(number))\n                .attr('x2', width)\n                .attr('y2', y(number))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n\n        }\n\n        // for (let index = 0; index < 13; index++) {\n        //     const number = index * 500\n        //     svg.append('line')\n        //         .attr('x1', 0)\n        //         .attr('y1', y(number))\n        //         .attr('x2', width)\n        //         .attr('y2', y(number))\n        //         .style('stroke', 'rgba(187, 187, 187, 1)')\n        //         .style('stroke-width', 1)\n        //         .style('stroke-dasharray', 5.5);\n        // }\n\n        for (let index = 22; index < 45; index++) {\n            if (index % 2 == 0) {\n                svg.append('line')\n                    .attr('x1', x(index))\n                    .attr('y1', 0)\n                    .attr('x2', x(index))\n                    .attr('y2', height)\n                    .style('stroke', 'rgba(187, 187, 187, 1)')\n                    .style('stroke-width', 1)\n                    .style('stroke-dasharray', 5.5);\n            }\n        }\n\n        if (gender === 'M' || gender === '1') {\n            for (let index = 0; index < growdata.Male_befor.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_befor[index].y))\n                    .attr('y1', y(growdata.Male_befor[index].min))\n                    .attr('x2', x(growdata.Male_befor[index + 1].y))\n                    .attr('y2', y(growdata.Male_befor[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 1.5);\n            }\n\n            for (let index = 0; index < growdata.Male_befor.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_befor[index].y))\n                    .attr('y1', y(growdata.Male_befor[index].max))\n                    .attr('x2', x(growdata.Male_befor[index + 1].y))\n                    .attr('y2', y(growdata.Male_befor[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 1.5);\n            }\n        }\n        else {\n            for (let index = 0; index < growdata.FeMale_before.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_before[index].y))\n                    .attr('y1', y(growdata.FeMale_before[index].min))\n                    .attr('x2', x(growdata.FeMale_before[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_before[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 1.5);\n            }\n\n            for (let index = 0; index < growdata.FeMale_before.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_before[index].y))\n                    .attr('y1', y(growdata.FeMale_before[index].max))\n                    .attr('x2', x(growdata.FeMale_before[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_before[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 1.5);\n            }\n        }\n        const datasource = weightList\n        console.log(datasource)\n        //x 週數 y體重 NIS\n        for (let index = 0; index < datasource.length; index++) {\n            const element = datasource[index];\n            const BornDay = element.rec_dat.toString().trim()\n            const BornTime = element.rec_tim.toString().trim()\n            const time = BornDay + BornTime\n            const weighttimestamp = moment(time, \"YYYYMMDDHHmm\").valueOf() //體重時間\n            const weeks = (weighttimestamp - pregencyTimestamp) / (7 * 24 * 60 * 60 * 1000) //體重週數\n            if (weeks < 22) {\n                continue\n            }\n            if (weeks > 44) {\n                continue\n            }\n            svg.append('circle')\n                .attr('cx', x(weeks))\n                .attr('cy', y(Number(element.value2) * 1000))\n                .attr('r', 3)\n                .style('fill', 'green')\n        }\n\n\n    }\n\n    render() {\n        const { id_key, svg_key } = this.props\n        return (\n            <div id={id_key}>\n                <svg id={svg_key}></svg>\n            </div>\n        );\n    }\n}\n\nexport default WardlifeChart;","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { growdata } from '../jsonResponse'\nimport moment from 'moment'\n\n//40週前\nclass Wardmonthafter extends Component {\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    drawChart() {\n        const { gender, svg_key, weightList, grewinfo } = this.props\n        const width = (window.screen.availWidth - 650) / 2, height = 350\n        console.log(grewinfo)\n        if (grewinfo === null || grewinfo === undefined) {\n            return null\n        }\n        const Birthday = grewinfo.BIRTHDAY\n        const pregencyTimestamp = moment(Birthday, \"YYYYMMDD\").valueOf()\n        //var vertigo = datarelease();\n\n        function tickValues(growdata, gender) {\n            if (gender === 'M' || gender === '1') {\n                const Row = growdata.Male_after\n                console.log(Row)\n                return [Row[Row.length - 1].min, Row[Row.length - 1].max]\n            }\n            const Row = growdata.FeMale_after\n            console.log(Row)\n            return [Row[Row.length - 1].min, Row[Row.length - 1].max]\n\n        }\n\n        const tick = tickValues(growdata, gender)\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([1500, 7000])\n            .range([height, 0])\n\n\n\n        var x = d3.scaleLinear()\n            .domain([0, 6])\n            .range([0, width])\n\n        var yAxis = d3.axisLeft(y)\n            .ticks(10)\n            .tickSize(0, 0)\n            .tickPadding(10)\n            .tickFormat(function (d, index) { return index === 11 ? d + \"(g)\" : d });\n\n        var yRightAxis = d3.axisLeft(y)\n            .tickValues(tick)\n            .tickSize(0, 0)\n            .tickPadding(-40)\n            .tickFormat(function (d, index) {\n                if (index === 0) {return \"10th%\"}\n                if (index === 1) {return \"90th%\"}\n                return null\n            });\n\n\n        var xAxis = d3.axisTop(x)\n            .ticks(6)\n            .tickSize(0, 0)\n            .tickPadding(-15)\n            .tickFormat(function (d) {\n                return d + \"m\";\n            });\n\n\n        var svg = d3\n            .select(\"#\" + svg_key)\n            .style(\"height\", \"400px\")\n            .style(\"width\", \"100%\")\n            // .select(\"svg\")\n            // .attr(\"viewBox\", [0, 0, width, height])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 20 + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(\" + 0 + \", \" + height + \")\");\n\n\n        svg.append(\"g\")\n            .call(yRightAxis)\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(\" + width + \", \" + 0 + \")\");\n\n        for (let index = 0; index < 7; index++) {\n            svg.append('line')\n                .attr('x1', x(index))\n                .attr('y1', 0)\n                .attr('x2', x(index))\n                .attr('y2', height)\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n\n        }\n\n        for (let index = 0; index < 13; index++) {\n            const number = index * 500 + 1000\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(number))\n                .attr('x2', width)\n                .attr('y2', y(number))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n\n        }\n\n        // for (let index = 22; index < 45; index++) {\n        //     svg.append('line')\n        //         .attr('x1', x(index))\n        //         .attr('y1', 0)\n        //         .attr('x2', x(index))\n        //         .attr('y2', height)\n        //         .style('stroke', 'rgba(187, 187, 187, 1)')\n        //         .style('stroke-width', 1)\n        //         .style('stroke-dasharray', 5.5);\n        // }\n\n        if (gender === 'M' || gender === '1') {\n            for (let index = 0; index < growdata.Male_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_after[index].y))\n                    .attr('y1', y(growdata.Male_after[index].min))\n                    .attr('x2', x(growdata.Male_after[index + 1].y))\n                    .attr('y2', y(growdata.Male_after[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 1.5);\n            }\n\n            for (let index = 0; index < growdata.Male_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_after[index].y))\n                    .attr('y1', y(growdata.Male_after[index].max))\n                    .attr('x2', x(growdata.Male_after[index + 1].y))\n                    .attr('y2', y(growdata.Male_after[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 1.5);\n            }\n        }\n        else {\n            for (let index = 0; index < growdata.FeMale_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_after[index].y))\n                    .attr('y1', y(growdata.FeMale_after[index].min))\n                    .attr('x2', x(growdata.FeMale_after[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_after[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 1.5);\n            }\n\n            for (let index = 0; index < growdata.FeMale_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_after[index].y))\n                    .attr('y1', y(growdata.FeMale_after[index].max))\n                    .attr('x2', x(growdata.FeMale_after[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_after[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 1.5);\n            }\n        }\n\n        const datasource = weightList\n        //x時間 y體重\n        for (let index = 0; index < datasource.length; index++) {\n            const element = datasource[index];\n            const BornDay = element.rec_dat.toString().trim()\n            const BornTime = element.rec_tim.toString().trim()\n            const time = BornDay + BornTime\n            const weighttimestamp = moment(time, \"YYYYMMDDHHmm\").valueOf() //體重時間\n            const Month = (weighttimestamp - pregencyTimestamp) / (30 * 24 * 60 * 60 * 1000) //體重週數\n            if (Month < 0 || Month > 6) {\n                continue\n            }\n            console.log(Month, Number(element.value2) * 1000)\n            svg.append('circle')\n                .attr('cx', x(Month))\n                .attr('cy', y(Number(element.value2) * 1000))\n                .attr('r', 3)\n                .style('fill', 'green')\n        }\n        // const datacustom = wardchartoncustom\n        // for (let index = 0; index < datacustom.length; index++) {\n        //     const element = datacustom[index];\n        //     svg.append('circle')\n        //         .attr('cx', x(element.x))\n        //         .attr('cy', y(element.y))\n        //         .attr('r', 3)\n        //         .style('fill', 'blue')\n        // }\n\n    }\n\n    render() {\n        const { id_key, svg_key } = this.props\n        return (\n            <div id={id_key}>\n                <svg id={svg_key}></svg>\n            </div>\n        );\n    }\n}\n\nexport default Wardmonthafter;\n","import React, { Component } from 'react';\nimport WardlifeChart from './Wardlifechart'\nimport Wardmonthafter from './Wardmonthafter'\n\n\nclass Wardgrewchart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            test_items_interval: 0\n        };\n    }\n    switch_monthy() {\n        const { Data, WeightList, grewinfo } = this.props\n        console.log(Data)\n        const switch_data = this.state.test_items_interval\n        switch (switch_data) {\n            case 1:\n                return <WardlifeChart grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife\"} svg_key={\"wardlife_svg\"} gender={Data.PSEX}></WardlifeChart>\n            case 0:\n                return <Wardmonthafter grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife_after\"} svg_key={\"wardlife_after_svg\"} gender={Data.PSEX}></Wardmonthafter>\n            default:\n                return null;\n        }\n    }\n    //測驗項目功能_區間按鈕樣式\n    SwitchTestItemInterval(testiteminterval) {\n        const time_selectbtn_style = {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"32px\",\n            padding: \"0px 5px\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#001a6dbb\",\n            color: \"white\",\n            fontSize: \"1rem\",\n            borderWidth: \"1px\",\n            borderStyle: \"solid\",\n            borderColor: \"#001a6d88\",\n            cursor: \"pointer\"\n        }\n        const time_unselectbtn_style = {\n            display: \"flex\", justifyContent: \"center\",\n            alignItems: \"center\", height: \"32px\",\n            paddingRight: \"10px\", paddingLeft: \"10px\",\n            borderRadius: \"4px\", backgroundColor: \"white\",\n            color: \"#001a6d88\", fontSize: \"1rem\",\n            borderWidth: \"1px\", borderStyle: \"solid\",\n            borderColor: \"#001a6d88\",\n            cursor: \"pointer\"\n        }\n        if (testiteminterval === this.state.test_items_interval) {\n            return time_selectbtn_style\n        }\n        else return time_unselectbtn_style\n    }\n    //測驗項目功能_區間按鈕選擇\n    Onchangetimeinterval(changestate) {\n        this.setState(\n            {\n                test_items_interval: changestate\n            }\n        )\n    }\n    render() {\n        return (\n            <div>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: 'center', backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>生長曲線圖</t2>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"5px\", alignItems: \"center\" }}>\n                        <div style={this.SwitchTestItemInterval(0)} onMouseUp={() => this.Onchangetimeinterval(0)}>40週後</div>\n                        <div style={this.SwitchTestItemInterval(1)} onMouseUp={() => this.Onchangetimeinterval(1)}>40週前</div>\n                    </div>\n                </div>\n                {this.switch_monthy()}\n            </div>\n        );\n    }\n}\nexport default Wardgrewchart\n","import React, { Component } from 'react';\nimport editlogo from '../../Image/svg/Edit.svg'\nimport detaillogo from '../../Image/svg/details.svg'\nimport { Tooltip, Input, Button } from 'antd';\nimport './Notice.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass Notice extends Component {\n    state = {\n        caseinfo: this.props.caseinfo,\n        EditMode: false,\n        noticeData: [],\n        inputContent: undefined,\n        powerLogin: 0\n    }\n    componentDidMount() {\n        //bind function\n        this.onInputChange = this.onInputChange.bind(this);\n        //query patient notice\n        console.log(\"caseinfo: \" + JSON.stringify(this.props.caseinfo));\n        const TRID = this.props.caseinfo.TRANSINID.toString().trim()\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins, preTRID: TRID })\n        this.queryPatientImportant(TRID);\n    }\n    componentDidUpdate() {\n        const TRID = this.props.caseinfo.TRANSINID.toString().trim()\n        const preTRID = this.state.preTRID\n        if (TRID !== preTRID) {\n            this.setState({ preTRID: TRID })\n            this.queryPatientImportant(TRID);\n        }\n    }\n    queryPatientImportant(TRID) {\n        ApiProvider.getOnePatientImportantMatter(TRID)\n            .then(data => {\n                console.log(\"getOnePatientImportantMatter OK \" + JSON.stringify(data));\n                this.setState({ noticeData: data.data });\n            })\n            .catch(err => {\n                console.log(\"getOnePatientImportantMatter NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString();\n        ApiProvider.createPatientImportantMatter(this.state.inputContent, \"\", this.state.caseinfo.HISID, timeNowStr, this.state.caseinfo.TRANSINID)\n            .then(data => {\n                console.log(\"createPatientImportantMatter OK \" + JSON.stringify(data));\n                this.queryPatientImportant();\n            })\n            .catch(err => {\n                console.log(\"createPatientImportantMatter NG \" + JSON.stringify(err));\n            });\n        this.setState(\n            {\n                EditMode: false,\n                inputContent: undefined\n            }\n        )\n    }\n    renderEditButton() {\n        if (this.props.disableEdit === true) {\n            return null;\n        } else {\n            return (\n                <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                    <img src={editlogo} alt=\"editlogo\" />\n                </div>\n            )\n        }\n    }\n\n    render() {\n        function remarkcellRender(dataList) {\n            if (Array.isArray(dataList)) {\n                if (dataList.length === 0) {\n                    return (\n                        <div style={{ height: \"50px\", paddingLeft: \"15px\", display: \"flex\", alignItems: \"center\" }}>\n                            無病人註記\n                        </div>\n                    );\n                }\n                const remarkcell = dataList.map((info, index) =>\n                    <div key={index} className='noticecontext'>\n                        <div style={{ whiteSpace: \"pre-wrap\" }}>{info.context}</div>\n                        <Tooltip placement=\"topRight\" title={tooltiptext(info.Editor, info.time)}>\n                            <img src={detaillogo} alt=\"detaillogo\" />\n                        </Tooltip>\n                    </div>\n                )\n                return remarkcell\n            }\n            return (\n                <div style={{ height: \"50px\", paddingLeft: \"15px\", display: \"flex\", alignItems: \"center\" }}>\n                    無病人註記\n                </div>\n                // <div style={{ padding: \"5px 15px\" }}>無病人註記</div>\n            );\n        }\n        function tooltiptext(editor, time) {\n            function nullvalue(value) {\n                if (value === null || value === undefined) {\n                    return \"--\"\n                }\n                return value\n            }\n            console.log(time)\n            const t = moment(time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n            const localTime = moment.utc(t).toDate()\n            const displayTime = moment(localTime).format(\"MM/DD HH:mm\")\n            return nullvalue(editor) + \"醫師於\" + displayTime + \"更新\"\n        }\n\n        const fixData = this.state.noticeData.sort((a, b) => {\n            let tempTimeA = moment(a.time, 'YYYY-MM-DD').valueOf()\n            let tempTimeB = moment(b.time, 'YYYY-MM-DD').valueOf()\n            return tempTimeA < tempTimeB ? 1 : -1\n        })\n\n        const remarkcell = remarkcellRender(fixData)\n        const { TextArea } = Input;\n        return (\n            <div style={{ marginBottom: '10px' }}>\n                {this.props.disableEdit\n                    ?\n                    <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                        <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>病人註記</t2>\n                    </div>\n                    :\n                    <div className='noticetitle'>\n                        <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>病人註記</t2>\n                        {this.renderEditButton()}\n                    </div>}\n                <div className='noticecontextborder'>\n                    {remarkcell}\n                </div>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", backgroundColor: \"rgba(238,238,238,1)\" }}>\n                        <TextArea id=\"noticeContent\" placeholder=\"輸入當日註記內容\" value={this.state.inputContent} onChange={this.onInputChange} autoSize={true}></TextArea>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Notice\n","import React, { Component } from 'react';\nimport { Labwarningvalue } from '../../Function/Wardstate'\nimport moment from 'moment'\n\nclass Labviewitem extends Component {\n    TimeRender(time) {\n        return (\n            <centerstyle>\n                <t3 style={{ color: \"rgba(0,0,0,0.4)\" }}>{moment(time, \"YYYY-MM-DD\").format(\"MM/DD\")}</t3>\n            </centerstyle>\n        );\n    }\n\n    fixtitle = (title) => {\n        switch (title) {\n            case 'Seg':\n            case 'Lymp':\n                return (\n                    <div>\n                        <t3>{title}</t3>\n                        <t3 style={{ fontSize: \"10px\" }}>%</t3>\n                    </div>\n                );\n            case 'Na':\n            case 'K':\n            case 'Ca':\n                return (\n                    <div>\n                        <t3>{title}</t3>\n                        <sup>+</sup>\n                    </div>\n                );\n            case 'Mg':\n                return (\n                    <div>\n                        <t3>{title}</t3>\n                        <sup>2+</sup>\n                    </div>\n                );\n            case 'PCO':\n            case 'PO':\n                return (\n                    <div>\n                        <t3>{title}</t3>\n                        <sub>2</sub>\n                    </div>\n                );\n            default:\n                break\n\n        }\n        // if (title.includes('+')) {\n        //     const temptitle = title.replace('+', '')\n        //     return (\n        //         <div>\n        //             <t3>{temptitle}</t3>\n        //             <sup>+</sup>\n        //         </div>\n        //     );\n        // }\n        // if (title == 'Seg' || title == 'Lymp') {\n        //     return (\n        //         <div>\n        //             <t3>{title}</t3>\n        //             <t3 style={{ fontSize: \"10px\" }}>%</t3>\n        //         </div>\n        //     );\n        // }\n        // if (title == 'PCO2' || title == 'PO2') {\n        //     const temptitle = title.replace('2', '')\n        //     return (\n        //         <div>\n        //             <t3>{temptitle}</t3>\n        //             <sub>2</sub>\n        //         </div>\n        //     );\n        // }\n        return title\n    }\n\n    render() {\n        function RowsGrid(source) {\n            if (source === \"Wardview\") {\n                return \"1fr 1fr 1fr\"\n            }\n            return \"1fr 1fr 1fr\"\n        }\n        function RowsHeight(source) {\n            if (source === \"Wardview\") {\n                return \"80px\"\n            }\n            return \"80px\"\n        }\n        const { value, title, time, Source } = this.props\n        console.log(time)\n        const TimeR = this.TimeRender(time)\n\n        const fixtitle = this.fixtitle(title)\n\n        return (\n            <div style={{ display: \"grid\", gridTemplateRows: RowsGrid(Source), height: RowsHeight(Source) }}>\n                <centerstyle>\n                    {/* <t3>{title}</t3> */}\n                    {fixtitle}\n                </centerstyle>\n                <centerstyle>\n                    <t2 style={{ fontSize: \"20px\", color: Labwarningvalue(value, title) ? \"black\" : \"red\" }}>{value}</t2>\n                </centerstyle>\n                {value == '--' || TimeR}\n            </div>\n        );\n    }\n}\n\nexport default Labviewitem\n","import React from 'react'\nexport function firstarea_Reg_IO() {\n    return [\"輸液\"];\n}\n\nexport function Secondarea_reg_IO() {\n    return [\"血品\"];\n}\n\nexport function Thirdarea_reg_IO() {\n    return [\"進食\"];\n}\n\nexport function Fourtharea_reg_IO() {\n    return [\"失血\", \"滲液\", \"嘔吐\", \"引流\", \"穿刺\", \"透析\", \"沖洗\", \"排便\", \"排尿\"];\n}\n\n\n\nexport function Feedarea_Reg_IO() {\n    return [\"進食\"];\n}\n\nexport function IVarea_reg_IO() {\n    return [\"血品\", \"輸液\"];\n}\n\nexport function UOarea_reg_IO() {\n    return [\"排尿\"];\n}\n\nexport function Otherarea_reg_IO() {\n    return [\"失血\", \"滲液\", \"嘔吐\", \"引流\", \"穿刺\", \"透析\", \"沖洗\", \"排便\"];\n}\n\nexport function Select_Main_Doc(DOCLIST) {\n    console.log(DOCLIST)\n    const MainDoc = DOCLIST.filter(function (value, index, array) {\n        return value.PDTYPE === \"B\"\n    })\n    if (MainDoc.length === 0) {\n        return \"\"\n    }\n    else {\n        const data = MainDoc[0]\n        return data.PDDOCNMC\n    }\n}\n\nexport function SumFeedDataMapReduce(arr) {\n    const sumlist = arr.map(function (value, index) {\n        return Number(value.inp_val2)\n    })\n    var sum = 0\n    for (let index = 0; index < sumlist.length; index++) {\n        const element = sumlist[index];\n        sum = sum + element\n    }\n    return sum\n}\n\nexport function SumIVDataMapReduce(arr) {\n    const sumlist = arr.map(function (value, index) {\n        return Number(value.inp_val1)\n    })\n    var sum = 0\n    for (let index = 0; index < sumlist.length; index++) {\n        const element = sumlist[index];\n        sum = sum + element\n    }\n    return sum\n}\n\nexport function SumUrineDataMapReduce(arr) {\n    const sumlist = arr.map(function (value, index) {\n        return Number(value.inp_val1)\n    })\n    var sum = 0\n    for (let index = 0; index < sumlist.length; index++) {\n        const element = sumlist[index];\n        sum = sum + element\n    }\n    return sum\n}\nexport function SumInOtherDataMapReduce(arr) {\n    return arr.map(el => Number(el.inp_val1)).reduce((a, b) => a + b);\n}\nexport function SumOutOtherDataMapReduce(arr) {\n    return arr.map(el => Number(el.out_val1)).reduce((a, b) => a + b);\n}\n\n\n\n//累積報告\n\nexport function ListForTime(arr, time) {\n    var DataList = []\n    for (let index = 0; index < arr.length; index++) {\n        const element = arr[index];\n        if (new Date(element.ORRESDT).getTime() <= new Date(time).getTime()) {\n            DataList.push(element)\n        }\n    }\n    return DataList\n}\n\nexport function ListForTimeAndTarget(arr, time, target) {\n    var DataList = []\n    arr.forEach(element => {\n        const parseTimestamp = new Date(element.ORRCPDT.split(\"-\")[0], element.ORRCPDT.split(\"-\")[1], element.ORRCPDT.split(\"-\")[2]).getTime()\n        // const nowTimestamp = new Date(time).getTime()\n        //console.log(\"parseTimestamp: \" + parseTimestamp + \"\\nnowTimestamp: \" + nowTimestamp)\n        //console.log(element.ORPROCED.indexOf(target))\n        if (parseTimestamp <= new Date(time).getTime() && element.ORPROCED.indexOf(target) > -1) {\n            DataList.push(element)\n        }\n    })\n    return DataList\n}\n\nexport function CaRegString(ressectobject) {\n    var select = []\n    if (Array.isArray(ressectobject)) {\n        for (let index = 0; index < ressectobject.length; index++) {\n            const element = ressectobject[index];\n            const elementstring = element.ORPROCED.toString()\n            if (elementstring.match(\"Ca++, free\") !== null) {\n                select.push(element)\n            }\n        }\n    }\n    if (select.length === 0) {\n        return \"null\"\n    }\n\n}\n\nexport function QSPERegList(qspe) {\n    function SettingValue(mode, value) {\n        if (value === undefined || value === null) {\n            return \"\"\n        }\n        const valueList = value.split(\"/\")\n        if (mode === 'NC') {\n            return (<div>Flow:{valueList[0]}L/min</div>)\n        }\n        if (mode === 'HF') {\n            return (<div style={{ display: \"inline\" }}>FiO<sub>2</sub>:{valueList[0]}% ,PEEP:{valueList[1]}cmH<sub>2</sub>O</div>)\n        }\n        if (mode === 'UW' || mode === 'bcpap' || mode === 'CPAP') {\n            return (<div style={{ display: \"inline\" }}>FiO<sub>2</sub>:{valueList[0]}% ,PEEP:{valueList[1]}cmH<sub>2</sub>O</div>)\n        }\n        if (mode === 'NIPPV' || mode.match(\"PC\") !== null) {\n            // return (<sub>123</sub>)\n            return (<div style={{ display: \"inline\" }}>FiO<sub>2</sub>:{valueList[0]}% ,Rate:{valueList[1]}/min ,PIP:{valueList[2]}mmH<sub>2</sub>O ,PEEP:{valueList[3]}cmH<sub>2</sub>O</div>)\n        }\n        if (mode.match(\"HFOV\") !== null) {\n            return (<div style={{ display: \"inline\" }}>FiO<sub>2</sub>:{valueList[0]}% ,Amp:{valueList[1]}cmH<sub>2</sub>O ,MAP:{valueList[2]}cmH<sub>2</sub>O ,Freq:{valueList[3]}Hz</div>)\n        }\n        if (mode.match(\"HFPPV\") !== null) {\n            return (<div style={{ display: \"inline\" }}>FiO<sub>2</sub>:{valueList[0]}% ,Rate:{valueList[1]}/min ,PIP:{valueList[2]}mmH<sub>2</sub>O ,PEEP:{valueList[3]}cmH<sub>2</sub>O\"</div>)\n        }\n        return value\n    }\n\n    var qspearray = []\n    if (Array.isArray(qspe)) {\n        for (let index = 0; index < qspe.length; index++) {\n            const element = qspe[index];\n            console.log(element)\n            if (element !== undefined) {\n                const SelectElement = element.special.toString()\n                if (SelectElement.match(\"@v\") !== null) {\n                    const DataArray = SelectElement.split(\" \")\n                    const title = DataArray[1]\n                    const value = DataArray[2]\n                    const DataJson = {\n                        \"Mode\": title,\n                        \"Setting\": SettingValue(title, value),\n                        \"Date\": element.rec_dat.toString().trim(),\n                        \"Time\": element.rec_tim,\n                    }\n                    console.log(element.rec_tim)\n                    qspearray.push(DataJson)\n                }\n            }\n            console.log(qspearray)\n        }\n    }\n    return qspearray\n}\n\nexport function QSPESetting(qspesettingarray) {\n    console.log(qspesettingarray)\n    const regString = qspesettingarray.Mode\n    const regValue = qspesettingarray.Setting.split(\"/\")\n    if (regString.match(\"RA\") !== null) {\n        return \"\"\n    }\n    if (regString.match(\"NC\") !== null) {\n        return \"Flow:\" + regValue[0]\n    }\n    if (regString.match(\"UW\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/PEEP:\" + regValue[1]\n    }\n    if (regString.match(\"bcpap\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/PEEP:\" + regValue[1]\n    }\n    if (regString.match(\"CPAP\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/PEEP:\" + regValue[1]\n    }\n    if (regString.match(\"NIPPV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Rate:\" + regValue[1] + \"/PIP:\" + regValue[2] + \"/PEEP:\" + regValue[3]\n    }\n    if (regString.match(\"HFOV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Rate:\" + regValue[1] + \"/PIP:\" + regValue[2] + \"/PEEP:\" + regValue[3]\n    }\n    if (regString.match(\"HFOV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Amp:\" + regValue[1] + \"/MAP:\" + regValue[2] + \"/Freq:\" + regValue[3]\n    }\n    if (regString.match(\"HFPPV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Rate:\" + regValue[1] + \"/PIP:\" + regValue[2] + \"/PEEP:\" + regValue[3]\n    }\n    return qspesettingarray.value\n}\n","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport './Wardcardvitalsign.scss';\nimport { mmddformat } from '../Function/Timeformat'\nimport * as ApiProvider from '../API/ApiProvider'\nimport moment from 'moment';\n\n\n\nclass WardcardvitalsignChart extends Component {\n    state = {\n        sourcedata: [],\n        preHID: null\n    }\n    componentDidUpdate() {\n        const { HISID } = this.props\n        const HID = HISID.toString().trim()\n        const preHID = this.state.preHID\n        if (HID !== preHID) {\n            this.setState({ preHID: HISID.toString().trim() })\n            this.getCenterMonitor()\n        }\n\n    }\n    componentDidMount() {\n        const { HISID } = this.props\n        this.setState({ preHID: HISID.toString().trim() })\n        this.getCenterMonitor()\n    }\n\n    getCenterMonitor() {\n        function selectType(type) {\n            switch (type) {\n                case \"div_hr\":\n                    return \"hr\"\n                case \"div_bp\":\n                    return \"nbp\"\n                case \"div_rr\":\n                    return \"rr\"\n                case \"div_spo\":\n                    return \"spo2\"\n                case \"div_abp\":\n                    return \"abp\"\n                case \"div_bt\":\n                    return \"bt\"\n                default:\n                    break;\n            }\n        }\n        // const simdata = vitalData.simdata\n        const endTime = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").format(\"YYYYMMDDHHmmss\");\n        const startTime = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf() - (24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\");\n        const { id_key, HISID } = this.props\n        const HID = HISID.toString().trim()\n        const type = selectType(id_key)\n        if (id_key === \"div_abp\") {\n            ApiProvider.getPatientwardvalueBoxPlot(HID, startTime, endTime, type, 0)\n                .then(data => {\n                    this.setState({\n                        sourcedata: data.data\n                    })\n                    this.drawChart()\n                })\n                .catch(err => { console.log(err) })\n        }\n        if (id_key === \"div_hr\" || id_key === \"div_rr\" || id_key === \"div_spo\") {\n\n            ApiProvider.getPatientwardvalueBoxPlot(HID, startTime, endTime, type, 0)\n                .then(data => {\n                    this.setState({\n                        sourcedata: data.data\n                    })\n                    this.drawChart()\n                })\n                .catch(err => { console.log(err) })\n        }\n        if (id_key === \"div_bp\") {\n\n            ApiProvider.getVitalSignData(HID, startTime, endTime, type)\n                .then(data => {\n                    this.setState({\n                        sourcedata: data.data\n                    })\n                    this.drawChart()\n                })\n                .catch(err => {\n                    console.log(err);\n                })\n        }\n    }\n    cal_svg_hight() {\n        const { axisTop, axisBot } = this.props\n        if (axisTop) {\n            if (axisBot) {\n                return 160\n            }\n            else {\n                return 130\n            }\n        }\n        else {\n            if (axisBot) {\n                return 100\n            }\n            else {\n                return 90\n            }\n        }\n    }\n\n    cal_svg_transform() {\n        const { axisTop, axisBot } = this.props\n        console.log(axisTop)\n        if (axisTop) {\n            if (axisBot) {\n                return 70\n            }\n            else {\n                return 50\n            }\n        }\n        else {\n            if (axisBot) {\n                return 5\n            }\n            else {\n                return 5\n            }\n        }\n    }\n\n    drawChart() {\n        function multiFormat(date) {\n            if (formatHour(date) % 4 === 0) {\n                return formatHour(date)\n            }\n            else return null\n        }\n        function multibotformat(date) {\n            if (new Date(date).getHours() === 0) {\n                return mmddformat(date)\n            }\n            else return null\n        }\n        const { svg_key, circlrcolor, axisTop, id_key, axisBot, MAX, MIN, Upper, Lower } = this.props\n        const width = window.screen.availWidth * 0.25, height = 70, transformmargin = this.cal_svg_transform(), margin = 20\n        // const borderwidth = width / 27\n        const time_now = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf()\n        const startTime = time_now - (24 * 60 * 60 * 1000);\n        console.log(time_now)\n\n        var time_array = []\n        var time_axis_array = []\n        for (let index = 0; index < 25; index++) {\n            time_array.push({ key: \"time\", x_axis_time: time_now - index * 60 * 60 * 1000 })\n            time_axis_array.push(time_now - index * 60 * 60 * 1000)\n        }\n        var time_array_reverse = time_array.reverse()\n        var time_axis_array_reverse = time_axis_array.reverse()\n        var formatHour = d3.timeFormat(\"%H\")\n\n        // const endTime = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf();\n\n\n        var x = d3.scaleLinear()\n            .domain([time_array_reverse[0].x_axis_time, time_array_reverse[24].x_axis_time])\n            .range([0, width - 40]);\n\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([MIN, MAX])\n            .range([height, 0])\n\n\n\n        var yAxis = d3.axisLeft(y)\n            .tickValues([MIN, MAX])\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(10);\n\n        var xAxisBottom = d3.axisBottom(x)\n            .tickValues(time_axis_array_reverse)\n            .tickSize(0, 0)\n            .tickPadding(height + 10)\n            .tickFormat(function (d) { return multibotformat(d); });\n\n\n        var xAxis = d3.axisTop(x)\n            .tickValues(time_axis_array_reverse)\n            .tickSize(0, 0)\n            .tickPadding(margin)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n        d3.select(\"#\" + svg_key).remove()\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_key)\n            .attr(\"viewBox\", [0, 0, width, this.cal_svg_hight()])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 30 + \",\" + transformmargin + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n        if (axisTop) {\n            svg.append(\"g\")\n                .call(xAxis)\n                .attr(\"class\", \"axis\");\n        }\n\n        if (axisBot) {\n            svg.append(\"g\")\n                .call(xAxisBottom)\n                .attr(\"class\", \"axis\");\n        }\n\n        //上下虛線\n        svg.append('line')\n            .attr('x1', 0)\n            .attr('y1', y(MAX))\n            .attr('x2', width)\n            .attr('y2', y(MAX))\n            .style('stroke', '#E0E0E0')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n        svg.append('line')\n            .attr('x1', 0)\n            .attr('y1', y(MIN))\n            .attr('x2', width)\n            .attr('y2', y(MIN))\n            .style('stroke', '#E0E0E0')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n\n        for (let index = 0; index < time_array_reverse.length; index++) {\n            svg.append('line')\n                .attr('x1', x(time_array_reverse[index].x_axis_time))\n                .attr('y1', 0)\n                .attr('x2', x(time_array_reverse[index].x_axis_time))\n                .attr('y2', height)\n                .style('stroke', '#E0E0E0')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n        }\n\n\n\n        drawshadow(startTime, 0, Lower, Upper)\n        function drawshadow(startTime, interval, lower, upper) {\n            const LimitBoxTimer = formatBox(startTime, interval, width)\n            for (let index = 0; index < LimitBoxTimer.length; index++) {\n                const boxwidth = formatBoxWidth(width, interval)\n                const element = LimitBoxTimer[index];\n                console.log(startTime)\n                svg.append('line')\n                    .attr('x1', x(element))\n                    .attr('y1', y(lower))\n                    .attr('x2', x(element))\n                    .attr('y2', y(upper))\n                    .style('stroke', circlrcolor)\n                    .style('opacity', 0.7)\n                    .style('stroke-width', boxwidth)\n\n                if (id_key === \"div_bp\" || id_key === \"div_abp\") {\n                    svg.append('line')\n                        .attr('x1', x(element))\n                        .attr('y1', y(35))\n                        .attr('x2', x(element))\n                        .attr('y2', y(55))\n                        .style('stroke', circlrcolor)\n                        .style('opacity', 0.3)\n                        .style('stroke-width', boxwidth)\n                }\n            }\n        }\n        function formatBox(startTime, interval) {\n            function interFormat(startTime, interval) {\n                var TimeArray = []\n                for (let index = 0; index < interval; index++) {\n                    if (interval === 24) {\n                        const boxTime = startTime + (30 * 60 * 1000) + (index * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 18) {\n                        const boxTime = startTime + (2 * 60 * 60 * 60 * 1000) + (index * 4 * 60 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 21) {\n                        const boxTime = startTime + (4 * 60 * 60 * 60 * 1000) + (index * 8 * 60 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else {\n                        const boxTime = startTime + (12 * 60 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                }\n                return TimeArray\n            }\n            if (interval === 0) {\n                return interFormat(startTime, 24)\n            }\n            if (interval === 1) {\n                return interFormat(startTime, 18)\n            }\n            if (interval === 2) {\n                return interFormat(startTime, 21)\n            }\n            return interFormat(startTime, 14)\n        }\n        function formatBoxWidth(viewwidth, interval) {\n            if (interval === 0) {\n                return viewwidth / 24\n            }\n            if (interval === 1) {\n                return viewwidth / 18\n            }\n            if (interval === 2) {\n                return viewwidth / 21\n            }\n            return viewwidth / 14\n        }\n        // var sim_data = this.state.sourcedata\n        const BoxPlotData = this.state.sourcedata\n        if (BoxPlotData.length === 0) {\n            return null\n        }\n\n        if (id_key === \"div_abp\") {\n            const dataAbps = BoxPlotData.abps\n            const dataAbpd = BoxPlotData.abpd\n            const boxwidth = 10\n            for (let index = 0; index < dataAbpd.length; index++) {\n                const element = dataAbpd[index];\n                const q1 = element.Q1\n                const q2 = element.Q2\n                const q3 = element.Q3\n                const q4 = element.Q4\n                const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                svg.append(\"line\")\n                    .attr(\"x1\", x(Xtime))\n                    .attr(\"x2\", x(Xtime))\n                    .attr(\"y1\", y(q1))\n                    .attr(\"y2\", y(q4))\n                    .attr(\"stroke\", circlrcolor)\n                    .style('opacity', 0.5)\n                    // .attr(\"stroke\", \"blcak\")\n                    .style('stroke-width', 1)\n\n                svg.append(\"rect\")\n                    .attr(\"x\", x(Xtime) - boxwidth / 2)\n                    .attr(\"y\", y(q3))\n                    .attr(\"height\", (y(q2) - y(q3)))\n                    .attr(\"width\", boxwidth)\n                    .attr(\"stroke\", circlrcolor)\n                    .style('opacity', 0.5)\n                    .style(\"fill\", \"rgba(255,255,255,1)\")\n                    .style('stroke-width', 1);\n\n                svg\n                    .selectAll(\"toto\")\n                    .data([q1, q4])\n                    .enter()\n                    .append(\"line\")\n                    .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                    .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                    .attr(\"y1\", function (d) { return (y(d)) })\n                    .attr(\"y2\", function (d) { return (y(d)) })\n                    .attr(\"stroke\", circlrcolor)\n                    .style('opacity', 0.5)\n                    .style('stroke-width', 1);\n            }\n            for (let index = 0; index < dataAbps.length; index++) {\n                const element = dataAbps[index];\n                const q1 = element.Q1\n                const q2 = element.Q2\n                const q3 = element.Q3\n                const q4 = element.Q4\n                const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                svg.append(\"line\")\n                    .attr(\"x1\", x(Xtime))\n                    .attr(\"x2\", x(Xtime))\n                    .attr(\"y1\", y(q1))\n                    .attr(\"y2\", y(q4))\n                    .attr(\"stroke\", circlrcolor)\n                    // .attr(\"stroke\", \"blcak\")\n                    .style('stroke-width', 1)\n\n                svg.append(\"rect\")\n                    .attr(\"x\", x(Xtime) - boxwidth / 2)\n                    .attr(\"y\", y(q3))\n                    .attr(\"height\", (y(q2) - y(q3)))\n                    .attr(\"width\", boxwidth)\n                    .attr(\"stroke\", circlrcolor)\n                    .style(\"fill\", \"rgba(255,255,255,1)\")\n                    .style('stroke-width', 1);\n\n                svg\n                    .selectAll(\"toto\")\n                    .data([q1, q4])\n                    .enter()\n                    .append(\"line\")\n                    .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                    .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                    .attr(\"y1\", function (d) { return (y(d)) })\n                    .attr(\"y2\", function (d) { return (y(d)) })\n                    .attr(\"stroke\", circlrcolor)\n                    .style('stroke-width', 1);\n            }\n        }\n        if (id_key === \"div_bp\") {\n            for (let index = 0; index < BoxPlotData.length; index++) {\n                const element = BoxPlotData[index];\n                const Xtime = moment(element.Time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                const SBP = element.SBP\n                const DBP = element.DBP\n                if (SBP === 0 || DBP === 0) {\n                    continue\n                }\n                svg.append('circle')\n                    .attr('cx', x(Xtime))\n                    .attr('cy', y(SBP))\n                    .attr('r', 3)\n                    .style('fill', circlrcolor)\n\n\n                svg.append('circle')\n                    .attr('cx', x(Xtime))\n                    .attr('cy', y(DBP))\n                    .attr('r', 3)\n                    .style('opacity', 0.5)\n                    .style('fill', circlrcolor)\n            }\n        }\n        if (id_key === \"div_hr\" || id_key === \"div_rr\" || id_key === \"div_spo\") {\n            // for (let index = 0; index < BoxPlotData.length; index++) {\n            //     const element = BoxPlotData[index];\n            //     const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + (30 * 60 * 1000)\n            //     svg.append('line')\n            //         .attr('x1', x(Xtime))\n            //         .attr('y1', y(Lower))\n            //         .attr('x2', x(Xtime))\n            //         .attr('y2', y(Upper))\n            //         .style('stroke', circlrcolor)\n            //         .style('opacity', 0.5)\n            //         // .style('stroke', 'red')\n            //         .style('stroke-width', borderwidth)\n\n            // }\n            for (let index = 0; index < BoxPlotData.length; index++) {\n                const element = BoxPlotData[index];\n                console.log(element)\n                const q1 = element.Q1\n                const q2 = element.Q2\n                const q3 = element.Q3\n                const q4 = element.Q4\n                const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + (30 * 60 * 1000)\n                console.log(q1, q2, q3, q4)\n                const boxwidth = 10\n                svg.append(\"line\")\n                    .attr(\"x1\", x(Xtime))\n                    .attr(\"x2\", x(Xtime))\n                    .attr(\"y1\", y(q1))\n                    .attr(\"y2\", y(q4))\n                    .attr(\"stroke\", circlrcolor)\n                    // .attr(\"stroke\", \"blcak\")\n                    .style('stroke-width', 1)\n\n                svg.append(\"rect\")\n                    .attr(\"x\", x(Xtime) - boxwidth / 2)\n                    .attr(\"y\", y(q3))\n                    .attr(\"height\", (y(q2) - y(q3)))\n                    .attr(\"width\", boxwidth)\n                    .attr(\"stroke\", circlrcolor)\n                    .style(\"fill\", \"rgba(255,255,255,1)\")\n                    .style('stroke-width', 1);\n\n                svg\n                    .selectAll(\"toto\")\n                    .data([q1, q4])\n                    .enter()\n                    .append(\"line\")\n                    .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                    .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                    .attr(\"y1\", function (d) { return (y(d)) })\n                    .attr(\"y2\", function (d) { return (y(d)) })\n                    .attr(\"stroke\", circlrcolor)\n                    .style('stroke-width', 1);\n\n            }\n        }\n\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default WardcardvitalsignChart;","import React, { Component } from 'react';\nimport WardcardvitalsignChart from './Wardcardvitalsign'\nimport { statecolor } from '../Function/Wardstate'\n// import * as ApiProvider from '../API/ApiProvider'\nimport './Wardchart.scss'\n// import moment from 'moment';\n\n\n\nclass WardChart extends Component {\n    state = {\n        data: [],\n        pbStatus: true\n    }\n\n    changePb = () => {\n        this.setState({\n            pbStatus: false\n        })\n    }\n\n    decidePB = (hr, nbpd, abpd) => {\n        const status = this.state.pbStatus\n        if (status) {\n            hr > 160 || hr < 100 && this.changePb()\n            nbpd > 75 || nbpd < 55 && this.changePb()\n            abpd > 75 || abpd < 55 && this.changePb()\n        }\n    }\n\n    render() {\n        function valueFormat(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"--\"\n            }\n            return value\n        }\n        const data = this.state.data\n        const { CMvalue, HISID } = this.props\n        const vitalvalue = CMvalue\n        if (vitalvalue === undefined || vitalvalue === null) {\n            return null\n        }\n\n        this.decidePB(vitalvalue.hr, vitalvalue.nbpd, vitalvalue.abpd)\n\n        function limitValue(value, upper, lower) {\n            if (value > upper || value < lower) {\n                return false\n            }\n            return true\n        }\n\n        const status = this.state.pbStatus\n        return (\n            <div className='Wardchartlayout'>\n                <div className='halfwardchart'>\n                    <div className='singlewardchart'>\n                        <div className='firstRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"150px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: status ? \"white\" : statecolor('HR') }}>\n                                <centerstyle>\n                                    <t3 style={{ color: status ? statecolor('HR') : \"white\" }}>HR(min)</t3>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"40px\", lineHeight: \"44px\", paddingRight: \"3px\", color: status ? statecolor('HR') : \"white\" }}>{valueFormat(vitalvalue.hr)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <div className='secondRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"150px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: status ? \"white\" : statecolor('BP') }}>\n                                <centerstyle>\n                                    <t3 style={{ color: status ? statecolor('BP') : \"white\" }}>NBP(mmHg)</t3>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"30px\", lineHeight: \"34px\", color: status ? statecolor('BP') : \"white\" }}>{valueFormat(vitalvalue.nbps)}/{valueFormat(vitalvalue.nbpd)}</div>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"20px\", lineHeight: \"22px\", color: status ? statecolor('BP') : \"white\" }}>({valueFormat(vitalvalue.nbpm)})</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <div className='thirdRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"150px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: status ? \"white\" : statecolor('BP') }}>\n                                <centerstyle>\n                                    <t3 style={{ color: status ? statecolor('BP') : \"white\" }}>ABP(mmHg)</t3>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"30px\", lineHeight: \"34px\", color: status ? statecolor('BP') : \"white\" }}>{valueFormat(vitalvalue.abps)}/{valueFormat(vitalvalue.abpd)}</div>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"20px\", lineHeight: \"22px\", color: status ? statecolor('BP') : \"white\" }}>({valueFormat(vitalvalue.abpm)})</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ position: \"relative\" }}>\n                        <WardcardvitalsignChart MAX={200} MIN={0} Upper={160} Lower={100} HISID={HISID} svg_key={\"svg_hr\"} id_key={\"div_hr\"} data={data} axisBot={false} axisTop={true} colorshadow={\"rgba(126, 211, 33, 0.1)\"} circlrcolor={\"#779F50\"}></WardcardvitalsignChart>\n                        <WardcardvitalsignChart MAX={100} MIN={0} Upper={75} Lower={55} HISID={HISID} svg_key={\"svg_bp\"} id_key={\"div_bp\"} data={data} data2={true} axisBot={false} axisTop={false} colorshadow={\"rgba(240, 144, 144, 0.1)\"} circlrcolor={\"#C12528\"} data_2_circlrcolor={\"rgba(240, 144, 144, 0.5)\"}></WardcardvitalsignChart>\n                        <WardcardvitalsignChart MAX={100} MIN={0} Upper={75} Lower={55} HISID={HISID} svg_key={\"svg_abp\"} id_key={\"div_abp\"} data={data} data2={true} axisBot={true} axisTop={false} colorshadow={\"rgba(240, 144, 144, 0.1)\"} circlrcolor={\"#C12528\"} data_2_circlrcolor={\"rgba(240, 144, 144, 0.5)\"}></WardcardvitalsignChart>\n                    </div>\n                </div>\n                <div className='halfwardchart'>\n                    <div className='singlewardchart'>\n                        <div className='firstRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"150px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: limitValue(vitalvalue.spo2, 100, 90) ? \"white\" : statecolor('SpO2') }}>\n                                <centerstyle>\n                                    <t3 style={{ color: limitValue(vitalvalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>\n                                        SpO\n                                        <sub >2</sub>\n                                        (%)\n                                    </t3>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"40px\", lineHeight: \"44px\", paddingRight: \"3px\", color: limitValue(vitalvalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>{valueFormat(vitalvalue.spo2)}%</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <div className='secondRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"150px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: limitValue(vitalvalue.bt, 38, 36) ? \"white\" : statecolor('BT') }}>\n                                <centerstyle>\n                                    <t3 style={{ color: limitValue(vitalvalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>BT(<sup>&ordm;</sup>C)</t3>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"40px\", lineHeight: \"44px\", paddingRight: \"3px\", color: limitValue(vitalvalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>{valueFormat(vitalvalue.bt)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <div className='thirdRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"150px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: limitValue(vitalvalue.rr, 60, 20) ? \"white\" : statecolor('RR') }}>\n                                <centerstyle>\n                                    <t3 style={{ color: limitValue(vitalvalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>RR(min)</t3>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"40px\", lineHeight: \"44px\", paddingRight: \"3px\", color: limitValue(vitalvalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>{valueFormat(vitalvalue.rr)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ position: \"relative\" }}>\n                        <WardcardvitalsignChart MAX={100} MIN={60} Upper={100} Lower={90} HISID={HISID} svg_key={\"svg_spo\"} id_key={\"div_spo\"} data={data} axisBot={false} axisTop={true} colorshadow={\"rgba(0, 183, 255, 0.1)\"} circlrcolor={\"#4773B8\"}></WardcardvitalsignChart>\n                        <WardcardvitalsignChart MAX={41} MIN={34} Upper={38} Lower={36} HISID={HISID} svg_key={\"svg_bt\"} id_key={\"div_bt\"} data={data} axisBot={false} axisTop={false} colorshadow={\"rgba(199, 162, 244,0.1)\"} circlrcolor={\"#7F3DB5\"}></WardcardvitalsignChart>\n                        <WardcardvitalsignChart MAX={100} MIN={0} Upper={60} Lower={20} HISID={HISID} svg_key={\"svg_rr\"} id_key={\"div_rr\"} data={data} axisBot={true} axisTop={false} colorshadow={\"rgba(255, 152, 0, 0.1)\"} circlrcolor={\"#DE7531\"}></WardcardvitalsignChart>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WardChart;\n","import React, { Component } from 'react';\nimport { Checkbox } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider'\n\nclass Wardinfousercheckbox extends Component {\n    state = {\n        checkboxselect: this.props.selectstate\n    }\n\n    updateOnePatientTodo() {\n        if (this.state.checkboxselect) {\n            ApiProvider.createTodo(this.props.item.caseid, this.props.item.context, this.props.item.time, this.props.item.transinno, '已完成')\n                .then(data => {\n                    console.log('updateOnePatientTodo ok ' + JSON.stringify(data))\n                })\n                .catch(err => {\n                    console.log('updateOnePatientTodo ng ' + JSON.stringify(err))\n                })\n        } else {\n            ApiProvider.createTodo(this.props.item.caseid, this.props.item.context, this.props.item.time, this.props.item.transinno, '未完成')\n                .then(data => {\n                    console.log('updateOnePatientTodo ok ' + JSON.stringify(data))\n                })\n                .catch(err => {\n                    console.log('updateOnePatientTodo ng ' + JSON.stringify(err))\n                })\n        }\n    }\n    selectchange() {\n        this.setState({\n            checkboxselect: !this.state.checkboxselect\n        }, this.updateOnePatientTodo)\n    }\n\n    render() {\n        const selectunstyle = {\n            fontSize: \"1rem\"\n        }\n        const selectstyle = {\n            textDecoration: \"line-through\", fontSize: \"1rem\"\n        }\n        return (\n            <div style={{ height: \"50px\", paddingLeft: \"15px\", display: \"flex\", alignItems: \"center\" }}>\n                <Checkbox onChange={() => this.selectchange()} checked={this.state.checkboxselect} style={this.state.checkboxselect ? selectstyle : selectunstyle}>{this.props.item.context}</Checkbox>\n            </div>\n        )\n    }\n\n}\n\nexport default Wardinfousercheckbox;","import React, { Component } from 'react';\nimport './Patientviewinfo.scss'\nimport { Icon } from 'antd'\nimport * as Wardstate from '../Function/Wardstate'\nimport * as ApiProvider from '../API/ApiProvider'\nclass Patientinfo extends Component {\n\n    state = { preCID: null, QENT: [] };\n    componentDidMount() {\n        const { caseinfo } = this.props\n        console.log(caseinfo)\n        const CID = caseinfo.CASEID\n        this.setState({ preCID: CID })\n        this.getQENT(CID)\n    }\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const { preCID } = this.state\n        const CID = caseinfo.CASEID\n        if (CID !== preCID) {\n            this.setState({ preCID: CID })\n            this.getQENT(CID)\n\n        }\n    }\n    getQENT(CID) {\n        console.log(CID)\n        ApiProvider.getQENT(CID)\n            .then(data => {\n                const parsedata = Wardstate.QMNCXM2JSON(data.data)\n                console.log(parsedata)\n                this.setState({ QENT: parsedata })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQENT NG \" + JSON.stringify(err));\n            });\n    }\n    render() {\n        function fixpatientDate(data) {\n            const transdata = {\n                'cause': '住院原因',\n                'car_pho': '主要照顧者電話',\n                'care': '主要照顧者',\n                'con_1': '聯絡人1',\n                'con_p11': '聯絡人1電話',\n                'con_2': '聯絡人2',\n                'con_p21': '聯絡人2電話',\n                'dvs': '住院時生命徵象',\n                'habit': '飲食狀況',\n                'oxy': '住院時氧合評估',\n                'h_val': '住院時頭圍',\n                'b_val': '住院時胸圍',\n                'tall': '住院時身高',\n                'weight': '住院時體重'\n            }\n\n            const patientDate = []\n\n            for (let index in transdata) {\n                if (data[index] !== \"\") {\n                    patientDate.push([transdata[index], data[index]])\n                }\n            }\n\n            return patientDate\n        }\n\n        const patientDetail = fixpatientDate(this.state.QENT)\n        const patientData = patientDetail.map(element =>\n            <div className='context'>\n                <div className='title'>{element[0]} ：</div>\n                <div className='item'>{element[1]}</div>\n            </div>\n        )\n        if (this.state.preCID === null || patientDetail.length === 0) {\n            return (\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>\n                    <Icon type=\"loading\" />\n                </div>\n            );\n        }\n        return (\n            <div className='patientinfolayout'>\n                {patientData}\n            </div>\n        );\n    }\n}\n\nexport default Patientinfo\n","import React, { useState, useEffect } from \"react\";\nimport './Wardinfouser.scss'\nimport moment from 'moment'\nimport { Modal } from 'antd';\nimport * as Wardstate from '../Function/Wardstate'\nimport * as ApiProvider from '../API/ApiProvider'\n// import * as ApiGithub from '../API/ApiGithub'\nimport { gender } from '../Function/Wardbedfunction'\nimport Wardgrewchart from './Wardgrewchart'\nimport Notice from '../Patientview/Schedule/Notice'\nimport Labviewlayout from '../Patientview/CrossSectionView/Labview'\nimport WardChart from './Wardchart'\nimport Wardinfousercheckbox from './Wardunfousercheckbox'\nimport { Link } from \"react-router-dom\";\n// import * as Reg from '../Data/RegularData';\nimport Patientinfo from '../Patientview/Patientviewinfo';\nimport Wardcarstatus from './Wardcardstatus'\n\n\nexport function Wardinfouser(props) {\n    const [Visible, setVisible] = useState(false);\n    const [Report, SetReport] = useState(0);\n    const [Nonreport, SetNonreport] = useState(0);\n    const [CenterMonitorValue, SetCenterMonitorValue] = useState([])\n    const [scheduleList, SetScheduleList] = useState([]);\n    const [todoList, SetTodoList] = useState([]);\n    const [Timer, SetTimer] = useState(0)\n\n    useEffect(() => {\n        const TimerID = setInterval(() => {\n            SetTimer(Timer + 1)\n        }, 5000)\n        return () => clearInterval(TimerID);\n    }, [Timer])\n\n\n    useEffect(() => {\n        const data = props.location.state.data\n        // const hisid = \"TEST1234\"\n        const hisid = data.PHISTNUM.toString()\n        ApiProvider.getHisidwardvalue(hisid)\n            .then(data => {\n                console.log(data.data)\n\n                SetCenterMonitorValue(data.data[0]);\n            })\n            .catch(err => {\n                console.log(\"Andy test getHisidwardvalue NG \" + JSON.stringify(err));\n            });\n    }, [Timer, props.location.state.data.PHISTNUM]);\n\n\n\n    useEffect(() => {\n        console.log(\"query schedule list\")\n\n        const data = props.location.state.data\n        const source = data\n        const PLOC = source.PLOC\n        const TRANSINID = source.TRANSINID.toString()\n\n        const now = new Date();\n        const todayBegin = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n        const startTime = todayBegin.toISOString().split(\".\")[0];\n        const endTime = new Date(todayBegin.getTime() + 24 * 60 * 60 * 1000).toISOString().split(\".\")[0];\n        ApiProvider.getOnePatientSchedule(TRANSINID, startTime, endTime)\n            .then(result => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(result.data));\n                SetScheduleList(result.data);\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }, [props.location.state.data.TRANSINID]);\n\n    useEffect(() => {\n        console.log(\"query todo list\")\n\n        const data = props.location.state.data\n        const source = data\n        const PLOC = source.PLOC\n        const TRANSINID = source.TRANSINID.toString()\n\n\n        ApiProvider.getOneTodo(TRANSINID, source.PCASENO.toString())\n            .then(result => {\n                console.log(\"getOneTodo OK \" + JSON.stringify(result.data));\n                SetTodoList(result.data);\n            })\n            .catch(err => {\n                console.log(\"getOneTodo NG \" + JSON.stringify(err));\n            });\n    }, [props.location.state.data.PCASENO]);\n\n    function renderScheduleItem() {\n        if (scheduleList.length === 0) {\n            return (\n                <div style={{ height: \"50px\", paddingLeft: \"15px\", display: \"flex\", alignItems: \"center\" }}>\n                    沒有排程\n                </div>\n                // <div>沒有排程</div>\n            )\n        } else {\n            return scheduleList.map((item, index) => {\n                if (item.type === \"排程\") {\n                    // const rawDateStr = item.time;\n                    const time = moment(item.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n                    const localTime = moment.utc(time).toDate()\n                    const displayTimeStr = moment(localTime).format(\"MM/DD HH:mm\")\n                    return (\n                        <div key={index} style={{ height: \"50px\", display: 'grid', gridTemplateColumns: \"35% 65%\", borderBottomWidth: \"1px\", borderBottomColor: \"rgba(232, 232, 232, 1)\", borderBottomStyle: \"solid\", paddingLeft: \"15px\" }}>\n                            <div style={{ fontSize: \"1rem\", display: \"flex\", paddingLeft: \"15px\", alignItems: \"center\" }}>{displayTimeStr}</div>\n                            <div style={{ fontSize: \"1rem\", display: \"flex\", paddingLeft: \"15px\", alignItems: \"center\" }}>{item.context}</div>\n                        </div>\n                    )\n                }\n            })\n        }\n    }\n    function renderTodoItem() {\n        if (todoList.length === 0) {\n            return (\n                <div style={{ height: \"50px\", paddingLeft: \"15px\", display: \"flex\", alignItems: \"center\" }}>\n                    沒有待辦事項\n                </div>\n                // <div>沒有待辦事項</div>\n            )\n        } else {\n            return todoList.map((item, index) => {\n                if (item.type === \"未完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={false}></Wardinfousercheckbox>)\n                } else if (item.type === \"已完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={true}></Wardinfousercheckbox>)\n                }\n\n            });\n        }\n    }\n\n\n\n\n\n    function valueFormat(value) {\n        if (value === \"\" || value === null || value === undefined) {\n            return \"--\"\n        }\n        return value.toString()\n    }\n    function valueBornWeight(value) {\n        if (value === \"\" || value === null || value === undefined || value === 0) {\n            return \"\"\n        }\n        return value.toString() + \"g → \"\n    }\n\n\n    const data = props.location.state.data\n    const source = data\n    const Birthday = source.PBIRHDT\n    const QTWER = Wardstate.XM2JSON(source.QTWPER)\n    const QMNC = Wardstate.XM2JSON(source.QMNC)\n    const ListWeight = Wardstate.WeightList(QTWER)\n    const BornWeight = Wardstate.BornWeight(QTWER, Birthday)\n    const Weight = Wardstate.NewestWeight(QTWER)\n    const BornWeeks = QMNC.weeks\n    const BornDays = QMNC.days\n    const TRANSINID = source.TRANSINID\n    const TRANSINDT = source.TRANSINDT\n    const DOCLIST = source.PDOCNEW\n    const MainDoc = Wardstate.Doc(DOCLIST, \"B\")\n    const LiveDoc = Wardstate.Doc(DOCLIST, \"D\")\n    const MainNur = Wardstate.Doc(DOCLIST, \"N\")\n    const ICUMainDoc = Wardstate.Doc(DOCLIST, \"U\")\n    // function arrayForDoc(MainDoc, LiveDoc, MainNur, ICUMainDoc){\n    //     if (condition) {\n\n    //     }\n    // }\n    const status = {\n        date: moment(Birthday, \"YYYYMMDD\").valueOf(),\n        week: BornWeeks,\n        day: BornDays\n    }\n    console.log(status)\n    const AgeStatus = Wardstate.CalculateAge(status)\n\n    // const PBASINFO = data.PBASINFO\n    const caseinfo = {\n        \"HISID\": source.PHISTNUM.toString(),\n        \"CASEID\": source.PCASENO.toString(),\n        \"WEEK_BORN\": BornWeeks,\n        \"DAY_BORN\": BornDays,\n        \"TRANSINID\": TRANSINID,\n        \"TRANSINDT\": TRANSINDT,\n        \"WEIGHT\": QTWER,\n        \"PBASINGNINFO\": source\n    }\n\n    const grewinfo = {\n        \"WEEK_BORN\": BornWeeks,\n        \"DAY_BORN\": BornDays,\n        \"BIRTHDAY\": Birthday\n    }\n    // const patientDetail = fixpatientDate(QENT)\n    return (\n        <div className='wardinfouserlayout'>\n            <Modal\n                width={800}\n                title=\"入院時評估\"\n                visible={Visible}\n                onOk={() => setVisible(false)}\n                onCancel={() => setVisible(false)}\n                footer={null}>\n                <Patientinfo caseinfo={caseinfo}></Patientinfo>\n            </Modal>\n            <div className='wardinfopatient'>\n                <div style={{ height: '50px', display: 'grid', gridTemplateColumns: \"1fr 1fr 1fr\" }}>\n                    <Link to=\"/nicu/ward/wardindex\" style={{ alignItems: \"center\", display: \"flex\" }}>\n                        <t2 className='wardblacktoindex'>&larr;返回總覽</t2>\n                    </Link>\n                    <centerstyle>\n                        <t1 sytle={{ fontSize: \"22px\" }}>NICU-{Number(source.HBEDNO)} {source.PNAMEC.toString().trim()}</t1>\n                    </centerstyle>\n                    <Link to={{ pathname: \"/nicu/patient/\" + source.PHISTNUM.toString().trim(), state: { \"source\": null, \"HISID\": caseinfo.HISID, \"CASEID\": caseinfo.CASEID, \"BEDNUMBER\": Number(source.HBEDNO), \"TYPE\": true, \"TRANSINID\": caseinfo.TRANSINID } }} style={{ alignItems: \"center\", justifyContent: \"flex-end\", display: \"flex\" }}>\n                        <t2 className='wardblacktoindex'>進入病人資料頁面&rarr;</t2>\n                    </Link>\n                </div>\n                <div style={{ height: \"50px\" }}>\n                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <t2>病歷號:{source.PHISTNUM}</t2>\n                        <t2>性別:{gender(source.PSEX)}</t2>\n                        <t2>生日:{moment(Birthday, \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</t2>\n                        <t2>住院:{source.TRANSINDT}</t2>\n                        <Wardcarstatus source={false} PCASENO={source.PCASENO} PHISTNUM={source.PHISTNUM}></Wardcarstatus>\n                    </div>\n                    <div style={{ display: 'flex', justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\" }}>\n                            <t3 style={{ color: \"rgba(0,0,0,0.7)\" }}>\n                                {valueFormat(BornWeeks)}+{valueFormat(BornDays)}&gt;\n                                <span style={{ fontWeight: \"900\" }}>{AgeStatus}</span>\n                            </t3>\n                            <t3 style={{ color: \"rgba(0,0,0,0.7)\", marginLeft: 60 }}>\n                                {valueBornWeight(BornWeight)}g&gt;\n                            <span style={{ fontWeight: \"900\" }}>{valueFormat(Weight)}g</span>\n                            </t3>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,auto)\", gridColumnGap: \"10px\" }}>\n                            <t3>主治 {MainDoc}</t3>\n                            {MainDoc == ICUMainDoc || <t3>加護 {ICUMainDoc}</t3>}\n                            {MainDoc == LiveDoc || <t3>住院 {LiveDoc}</t3>}\n                            {MainNur == '' || <t3>NP {MainNur}</t3>}\n                            <div className='wardblacktoindex' onClick={() => setVisible(true)}>入院時評估</div>\n                        </div>\n                    </div>\n                </div>\n                <div className='wardinfousercontent'>\n                    <div style={{ padding: \"10px 15px\" }}>\n                        <WardChart HISID={source.PHISTNUM} CMvalue={CenterMonitorValue}></WardChart>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\", padding: \"0px 3px\" }}>\n                        <div style={{ borderRadius: \"4px\" }}>\n                            <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>檢驗項目</t2>\n                            </div>\n                            <Labviewlayout Source={\"Wardview\"} PickerDate={moment(moment().format('YYYYMMDD')).valueOf()} caseinfo={caseinfo}></Labviewlayout>\n                        </div>\n                        <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\" }}>\n                            <Wardgrewchart grewinfo={grewinfo} Data={source} WeightList={ListWeight} type={true}></Wardgrewchart>\n                        </div>\n                    </div>\n                    <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\", marginTop: \"10px\", marginRight: \"3px\" }}>\n                        {<Notice caseinfo={caseinfo} disableEdit={true}></Notice>}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\", marginTop: \"10px\", paddingRight: \"3px\" }}>\n                        <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\" }}>\n                            <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>排程</t2>\n                            </div>\n                            <div style={{ maxHeight: \"200px\", overflow: 'auto', minHeight: \"50px\" }}>\n                                {renderScheduleItem()}\n                            </div>\n                        </div>\n                        <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\" }}>\n                            <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>待辦事項</t2>\n                            </div>\n                            <div style={{ maxHeight: \"200px\", overflow: 'auto', minHeight: \"50px\" }}>\n                                {renderTodoItem()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div >\n    );\n} \n","import React, { Component } from 'react';\nimport * as antswitch from 'antd';\nimport Wardcarddetail from '../Wardcard/Wardcarddetail';\nimport Unpreviewwardcarddetail from '../Wardcard/UnpreviewWardCardDetail'\nimport Wardinfoindex from '../Wardinfoindex'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport './Bedview.scss'\nimport moment from 'moment';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport * as WardinfouserK from '../Wardinfouser-k'\n\n\nclass Bedview extends Component {\n    state = {\n        index: true,\n        previewmode: false,\n        simplemode: true,\n        SelectHISID: null,\n        source: []\n    };\n    HBEDApiGet() {\n        ApiProvider.getTableHBED()\n            .then(data => { this.setState({ source: data.data }) })\n            .catch(err => { console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err)); });\n    }\n    componentDidMount() { this.HBEDApiGet() }\n\n    onWardcardDisplay() {\n        const simple_style = { display: \"grid\", gridTemplateColumns: \"350px 1fr\", gridGap: \"5px\", marginTop: \"5px\" }\n        const Unsimple_style = { display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr 1fr\", gridTemplateRows: \"1fr 1fr 1fr\", gridGap: \"5px\", marginTop: \"5px\" }\n        const source = this.state.source;\n        if (source === null || source === undefined || source.length === 0) {\n            return null\n        }\n        const wardcarddetaillist = []\n        //simplemode true:病人摘要檢視(開) false:病人摘要檢視(關)\n        //previewmode true:床頭卡顯示(繁) flase:床頭卡顯示(簡) \n        if (this.state.simplemode) {\n            for (let index = 0; index < source.length; index++) {\n                const element = source[index]\n                const string = \"/nicu/ward/wardinfo/\" + element.HBEDNO\n                if (element.PHISTNUM.toString().trim() !== \"\") {\n                    wardcarddetaillist.push(\n                        <Link to={{ pathname: string, state: { data: element } }}\n                            style={{ border: this.state.SelectHISID === element.PHISTNUM ? \"2px solid rgb(59,151,224)\" : \"1px solid rgba(59,151,224,0.4)\", borderRadius: \"4px\" }}\n                            onClick={() => { this.setState({ SelectHISID: element.PHISTNUM }) }}>\n                            <Wardcarddetail key={index} data={element} previewmode={this.state.previewmode} hbedlist={source} />\n                        </Link>\n                    )\n                }\n            }\n            return (\n                <div style={this.state.simplemode ? simple_style : Unsimple_style}>\n                    <div className='wardcardcontent'>\n                        {wardcarddetaillist}\n                    </div>\n                    <Switch>\n                        <Route path={`${this.props.match.path}/wardindex`} component={Wardinfoindex} />\n                        <Route path={`${this.props.match.path}/wardinfo`} component={WardinfouserK.Wardinfouser} />\n                    </Switch>\n                </div>\n            );\n        }\n        else {\n            for (let index = 1; index < 15; index++) {\n                const element = source.filter(function (value, i) {\n                    return Number(value.HBEDNO) === index\n                })\n                if (index === 4 || index === 13) {\n                    //沒有4號以及13號床\n                    continue\n                }\n                if (element.length === 0) {\n                    wardcarddetaillist.push(\n                        <div style={{ border: \"1px solid rgba(59, 151, 225, 1)\" }}>\n                            <Unpreviewwardcarddetail bednumber={index} key={index} previewmode={this.state.previewmode} />\n                        </div>\n                    )\n                }\n                else {\n                    if (element[0].PHISTNUM.toString().trim() === \"\") {\n                        wardcarddetaillist.push(\n                            <div style={{ border: \"1px solid rgba(59, 151, 225, 1)\" }}>\n                                <Unpreviewwardcarddetail bednumber={index} key={index} previewmode={this.state.previewmode} />\n                            </div>\n                        )\n                    }\n                    else {\n                        wardcarddetaillist.push(\n                            <div style={{ border: \"1px solid rgba(59, 151, 225, 1)\" }}>\n                                <Wardcarddetail key={index} data={element[0]} previewmode={this.state.previewmode} hbedlist={source} />\n                            </div>\n                        )\n                    }\n                }\n            }\n            return (\n                <div style={this.state.simplemode ? simple_style : Unsimple_style}>\n                    {wardcarddetaillist}\n                </div>\n            );\n        }\n    }\n\n\n\n    render() {\n        function switch_titile_string(hisid, source) {\n            function addzero(value) {\n                if (value < 10) {\n                    return \"0\" + value\n                }\n                else return value\n            }\n            if (hisid === null) {\n                return \"NICU總覽\"\n            }\n            else {\n                const filterdata = source.filter(function (item, index, array) {\n                    return item.PHISTNUM === HISID;\n                });\n                const HBEDNUMBER = addzero(parseInt(filterdata[0].HBEDNO))\n                return \"床號\" + HBEDNUMBER + \"病人資訊摘要\"\n            }\n        }\n        const source = this.state.source\n        const HISID = this.state.SelectHISID\n        const title = switch_titile_string(HISID, source)\n        const WardCard = this.onWardcardDisplay()\n\n        return (\n            <div>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridGap: \"5px\" }}>\n                        <div style={{ height: \"40px\", display: \"flex\", alignItems: \"center\" }}>\n                            <t2 style={{ color: \"rgba(0, 0, 0, 0.85)\" }}>住院病人資訊 > {title}</t2>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: 'center', width: \"200px\" }}>\n                            <antswitch.Switch style={{ backgroundColor: this.state.previewmode === true ? \"#001a6d\" : \"rgba(0, 0, 0, 0.25)\" }} checkedChildren=\"即時生命徵象\" unCheckedChildren=\"即時生命徵象\" defaultChecked={this.state.previewmode} onChange={(checked) => { this.setState({ previewmode: checked }) }} />\n                            <antswitch.Switch style={{ backgroundColor: this.state.simplemode === true ? \"#001a6d\" : \"rgba(0, 0, 0, 0.25)\" }} checkedChildren=\"顯示摘要\" unCheckedChildren=\"顯示摘要\" defaultChecked={this.state.simplemode} onChange={(checked) => { this.setState({ simplemode: checked }) }} />\n                        </div>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto auto\", gridColumnGap: \"10px\" }}>\n                        <t3>資料更新時間</t3>\n                        <t3>{moment().format('YYYY/MM/DD HH:mm:ss')}</t3>\n                    </div>\n                </div>\n                {WardCard}\n            </div>\n        );\n    }\n}\n\nexport default Bedview;\n","import React, { Component } from 'react';\nimport { Icon, Upload, Table, Input, DatePicker, Button } from 'antd';\nimport { Link } from 'react-router-dom';\nimport * as ApiProvider from '../API/ApiProvider';\nimport moment from 'moment';\n\nclass Historyview extends Component {\n    state = {\n        MouseClick: 0,\n        allPatientDisplayData: [],\n        allPatientUnset: [],\n        allPatientSet: [],\n        selectedRowsArray: [],\n        hospitalindex: '',\n        selectedFile: null,\n        fileList: [],\n        uploading: false,\n        name: '',\n        hisid: '',\n        doctor: '',\n        transOuttime: undefined,\n        deletedisable: true,\n        selectedRowKeys: []\n    }\n\n    componentDidMount() {\n        this.onChangeName = this.onChangeName.bind(this)\n        this.onChangeHisid = this.onChangeHisid.bind(this)\n        //this.onChangeDoctor = this.onChangeDoctor.bind(this)\n        this.onClickSearch = this.onClickSearch.bind(this)\n        this.onChangeDate = this.onChangeDate.bind(this)\n        console.log(\"Historyview componentDidMount\")\n        ApiProvider.getAllPatient()\n            .then(result => {\n                console.log(\"getAllPatient OK \" + JSON.stringify(result));\n                const setedUser = result.data.filter(item => item.transouttime === \"unset\");\n                const unsetUser = result.data.filter(item => item.transouttime !== \"unset\");\n                this.setState({\n                    allPatientDisplayData: setedUser,\n                    allPatientUnset: unsetUser,\n                    allPatientSet: setedUser\n                });\n            })\n            .catch(err => {\n                console.log(\"getAllPatient NG \" + JSON.stringify(err));\n            });\n    }\n\n    MouseClickTable(record) {\n        //console.log(this.state.MouseClick)\n        this.setState({\n            MouseClick: record\n        })\n    }\n\n    EditStyle(HISID, CASEID, TRANSINID, key) {\n        if (key === this.state.MouseClick) {\n            return (\n                <Link to={{ pathname: \"/nicu/patient/\" + HISID, state: { \"source\": [], \"HISID\": HISID, \"CASEID\": CASEID, \"BEDNUMBER\": 0, \"TYPE\": false, \"TRANSINID\": TRANSINID } }} style={{ height: \"40px\", width: \"100px\", borderRadius: \"4px\" }}>檢視</Link>\n            );\n        }\n        else return null\n    }\n\n    genderswitch(key) {\n        if (key === \"M\") {\n            return '男'\n        }\n        else {\n            return '女'\n        }\n    }\n\n    bornweeks(birthday) {\n        //console.log(Math.floor(birthday / 7))\n        //console.log(birthday % 7)\n        const weeks = Math.floor(birthday / 7)\n        const days = birthday % 7\n        if (days === 0) {\n            return weeks + '週歲'\n        }\n        else return weeks + '週' + days + '天'\n    }\n\n    exportClick() {\n        this.state.selectedRowsArray.map((data, index) => {\n            ApiProvider.exportJson(data.hospitalindex)\n                .then(result => {\n                    ApiProvider.downloadFile(result.data.filename)\n                        .then(resultD => {\n                            const url = window.URL.createObjectURL(new Blob([JSON.stringify(resultD.data)]));\n                            const link = document.createElement('a');\n                            link.href = url;\n                            link.setAttribute('download', result.data.filename);\n                            document.body.appendChild(link);\n                            link.click();\n                        }).catch(err => { })\n                })\n                .catch(err => { })\n        })\n    }\n\n    handleUpload = () => {\n        const { fileList } = this.state\n        const formData = new FormData()\n        fileList.forEach(file => {\n            formData.append('file', file)\n        })\n\n        this.setState({\n            uploading: true,\n        })\n\n        ApiProvider.uploadFile(formData)\n            .then(res => {\n                ApiProvider.importJson(res.data)\n                    .then(result => {\n                        ApiProvider.getAllPatient()\n                            .then(result => {\n                                const setedUser = result.data.filter(item => item.transouttime !== \"unset\");\n                                const unsetUser = result.data.filter(item => item.transouttime === \"unset\");\n                                this.setState({\n                                    allPatientDisplayData: setedUser,\n                                    allPatientUnset: unsetUser,\n                                    allPatientSet: setedUser\n                                });\n                            })\n                            .catch(err => {\n                                console.log(\"getAllPatient NG \" + JSON.stringify(err));\n                            });\n                    })\n                    .catch(err => { })\n            })\n            .catch(err => { })\n    }\n\n    deleteHistoryUser() {\n        this.state.selectedRowsArray.map((data, index) => {\n            ApiProvider.deletePatient(data.hospitalindex, data.hospitalnumber, data.id)\n                .then(res => {\n                    ApiProvider.getAllPatient()\n                        .then(result => {\n                            const setedUser = result.data.filter(item => item.transouttime === \"unset\");\n                            const unsetUser = result.data.filter(item => item.transouttime !== \"unset\");\n                            this.setState({\n                                allPatientDisplayData: unsetUser,\n                                allPatientUnset: unsetUser,\n                                allPatientSet: setedUser,\n                                selectedRowKeys: []\n                            });\n                        })\n                        .catch(err => {\n                            console.log(\"getAllPatient NG \" + JSON.stringify(err));\n                        });\n                })\n                .catch(err => { })\n        })\n    }\n\n    onChangeName(event) {\n        this.setState({ name: event.target.value })\n    }\n    onChangeHisid(event) {\n        this.setState({ hisid: event.target.value })\n    }\n    //onChangeDoctor(event) {\n    //this.setState({ doctor: event.target.value })\n    //}\n    onClickSearch() {\n        // ApiProvider.getAllPatient()\n        //     .then(result => {\n        //         const setedUser = result.data.filter(item => item.transouttime !== \"unset\" && item.hisid === this.state.hisid && item.pnamec === this.state.name);\n        //         const unsetUser = result.data.filter(item => item.transouttime === \"unset\" && item.hisid === this.state.hisid && item.pnamec === this.state.name);\n        //         console.log(this.state.transOuttime)\n        //         this.setState({\n        //             allPatientDisplayData: setedUser,\n        //             allPatientUnset: unsetUser,\n        //             allPatientSet: setedUser\n        //         });\n        //     })\n        //     .catch(err => {\n        //         console.log(\"getAllPatient NG \" + JSON.stringify(err));\n        //     });\n    }\n    onChangeDate(date, dateString) {\n        this.setState({ transOuttime: dateString })\n    }\n\n    Searchbar() {\n        const InputGroup = Input.Group;\n        const { RangePicker } = DatePicker;\n\n        return (\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        病歷號碼:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"輸入病歷號碼\" onChange={this.onChangeHisid} value={this.state.hisid}></Input>\n                    </div>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <div style={{ fontSize: '16px' }}>\n                        個案姓名:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"輸入個案姓名\" onChange={this.onChangeName} value={this.state.name}></Input>\n                    </div>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        轉入時間:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        {/* <InputGroup compact> */}\n                        {/* <DatePicker placeholder=\"選擇轉出時間\" onChange={this.onChangeDate} /> */}\n                        <RangePicker style={{ width: \"250px\" }} format={\"YYYY/MM/DD\"} locale={\"zh_TW\"}\n                            placeholder={[\"請輸入日期\", \"請輸入日期\"]} onChange={this.onChangeDate} allowClear={false} />\n                        {/* </InputGroup> */}\n                    </div>\n                </div>\n\n                {/*<div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        主治醫生:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"選擇主治醫師\" onChange={this.onChangeDoctor} value={this.state.doctor}></Input>\n                    </div>\n        </div>*/}\n                {/* <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <Button shape=\"circle\" icon=\"search\" onClick={this.onClickSearch} />\n                </div> */}\n            </div>\n        );\n    }\n\n    handleDisplaySwitchChange(event) {\n        // console.log(event.target.value)\n        console.log(this.state.allPatientSet)\n        console.log(this.state.allPatientUnset)\n        this.setState({\n            allPatientDisplayData: event.target.value == 'in' ? this.state.allPatientSet : this.state.allPatientUnset,\n            deletedisable: event.target.value == 'in' ? true : false\n        })\n    }\n\n\n    render() {\n        // rowSelection object indicates the need for row selection\n        const { selectedRowKeys } = this.state\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: (selectedRowKeys, selectedRows) => {\n                //console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows)\n                this.setState({ \n                    selectedRowsArray: selectedRows,\n                    selectedRowKeys: selectedRowKeys\n                })\n            },\n            getCheckboxProps: record => ({\n                disabled: record.name === 'Disabled User', // Column configuration not to be checked\n                name: record.name,\n            }),\n        };\n        const columns = [\n            {\n                title: '轉出時的床號',\n                dataIndex: 'hbedno',\n                key: 'hbedno',\n                width: \"8%\"\n            },\n            {\n                title: '病歷號碼',\n                dataIndex: 'id',\n                key: 'id',\n                width: \"8%\"\n            },\n            {\n                title: '個案名稱',\n                dataIndex: 'name',\n                key: 'name',\n                width: \"8%\"\n            },\n            {\n                title: '性別',\n                dataIndex: 'gender',\n                key: 'gender',\n                width: \"6%\"\n            },\n            {\n                title: '出生體重',\n                dataIndex: 'weight',\n                key: 'weight',\n                width: \"6%\"\n            },\n            {\n                title: '出生周數',\n                dataIndex: 'birweek',\n                key: 'birweek',\n                width: \"6%\"\n            },\n            {\n                title: '轉入時年齡',\n                dataIndex: 'transinage',\n                key: 'transinage',\n                width: \"6%\"\n            },\n            {\n                title: '轉出時年齡',\n                dataIndex: 'transoutage',\n                key: 'transoutage',\n                width: \"6%\"\n            },\n            {\n                title: '院序號',\n                dataIndex: 'hospitalnumber',\n                key: 'hospitalnumber',\n                width: \"15%\"\n            },\n            {\n                title: '索引號',\n                dataIndex: 'hospitalindex',\n                key: 'hospitalindex',\n                width: \"15%\"\n            },\n            {\n                title: '轉出ICU時間',\n                dataIndex: 'transicutime',\n                key: 'transicutime',\n                width: \"9%\"\n            },\n            //{\n            //title: '主治醫師',\n            //dataIndex: 'maindoc',\n            //key: 'maindoc',\n            //width: \"10%\"\n            //},\n            {\n                dataIndex: 'clickstate',\n                key: 'clickstate',\n                width: \"7%\"\n            }\n        ];\n        function search(data, searchName) {\n            if (searchName === \"\" || searchName === undefined || searchName === null) {\n                return data\n            }\n            const filterData = data.filter(function (item, index, arr) {\n                console.log(item)\n                const fn = item.pnamec.toString().trim()\n                return fn.indexOf(searchName) >= 0\n            })\n            return filterData\n        }\n        function searchTime(data, searchTime) {\n            if (searchTime === \"\" || searchTime === undefined || searchTime === null) {\n                return data\n            }\n            const filterData = data.filter(function (item, index, arr) {\n                // console.log(item)\n                const fn = moment(item.transintime.toString().trim(), \"YYYYMMDD\").valueOf()\n                const st = moment(searchTime[0].toString().trim(), \"YYYYMMDD\").valueOf()\n                const et = moment(searchTime[1].toString().trim(), \"YYYYMMDD\").valueOf()\n                return st <= fn && fn <= et\n            })\n            return filterData\n        }\n\n        function searchNO(data, searchNO) {\n            if (searchNO === \"\" || searchNO === undefined || searchNO === null) {\n                return data\n            }\n            const filterData = data.filter(function (item, index, arr) {\n                console.log(item)\n                const HID = item.hisid.toString().trim()\n                return HID.match(searchNO)\n            })\n            return filterData\n        }\n        const rowData = this.state.allPatientDisplayData\n        const d = search(rowData, this.state.name)\n        const f = searchTime(d, this.state.transOuttime)\n        const H = searchNO(f, this.state.hisid)\n        const data = H.map((item, index) => {\n            return {\n                key: index,\n                id: item.hisid,\n                name: item.pnamec,\n                gender: this.genderswitch(item.psex),\n                weight: \"--\",\n                birweek: \"--\",\n                transage: \"--\",\n                hospitalnumber: item.caseid,\n                hospitalindex: item.transinid,\n                transicutime: item.transouttime,\n                maindoc: \"--\",\n                clickstate: this.EditStyle(item.hisid, item.caseid, item.transinid, index)\n            }\n        });\n\n        const { uploading, fileList } = this.state;\n        const props = {\n            onRemove: file => {\n                this.setState(state => {\n                    const index = state.fileList.indexOf(file);\n                    const newFileList = state.fileList.slice();\n                    newFileList.splice(index, 1);\n                    return {\n                        fileList: newFileList,\n                    };\n                });\n            },\n            beforeUpload: file => {\n                this.setState(state => ({\n                    fileList: [...state.fileList, file],\n                }));\n                return false;\n            },\n            fileList,\n            showUploadList: false\n        };\n        const handleDisplaySwitchChange = this.handleDisplaySwitchChange.bind(this);\n        return (\n            <div style={{ paddingLeft: \"24px\", paddingRight: \"24px\" }}>\n                <div style={{ fontSize: \"22px\", height: '50px', lineHeight: \"50px\" }}>\n                    歷史病歷管理\n                    <Button type=\"primary\" value=\"in\" style={{ borderRadius: \"50px\", fontSize: \"10px\", marginLeft: \"10px\" }} onClick={handleDisplaySwitchChange}>住院中</Button>\n                    <Button type=\"primary\" value=\"out\" style={{ borderRadius: \"50px\", fontSize: \"10px\", marginLeft: \"10px\" }} onClick={handleDisplaySwitchChange}>已轉出</Button>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\", height: '50px', gridColumnGap: \"10px\" }}>\n                    {this.Searchbar()}\n                    <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gridGap: \"10px\", marginRight: this.state.deletedisable == false ? 0 : -200}}>\n                        <div style={{ display: \"flex\", justifyContent: 'space-between', alignItems: \"center\" }}>\n                            <Upload {...props}>\n                                <Button style={{ width: \"100%\" }}>\n                                    <Icon type=\"upload\" /> 選擇檔案\n                                </Button>\n                            </Upload>\n                            <Button\n                                onClick={this.handleUpload.bind(this)}\n                                disabled={fileList.length === 0}\n                                style={{ width: \"100%\" }}\n                            >\n                                匯入\n                            </Button>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                            <Button onClick={this.exportClick.bind(this)} style={{ width: \"100%\" }}>匯出</Button>\n                        </div>\n                        {this.state.deletedisable == false ?\n                            <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                                <Button onClick={this.deleteHistoryUser.bind(this)} style={{ width: \"100%\" }}>刪除</Button>\n                            </div>\n                        : null\n                        }\n                    </div>\n                </div>\n                <div>\n                    <Table rowSelection={rowSelection} columns={columns} dataSource={data} onRow={record => {\n                        return {\n                            onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                            onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                        };\n                    }} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Historyview;\n","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport './Crosssectionvitalsignchart.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport X2JS from 'x2js';\n\nclass Crosssectionvitalsignchart extends Component {\n    state = {\n        change: false,\n        sourcedata: [],\n        prepickerdate: null,\n        presource: null,\n        preinterval: null,\n        prewidth: null,\n    }\n\n    centermonitorApiDataGet() {\n        function formatTimer(interval, pickerdate) {\n            const endTimeStamp = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    start: moment(endTimeStamp - (24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                    interval: 0\n                }\n            }\n            if (interval === 1) {\n                return {\n                    start: moment(endTimeStamp - (3 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                    interval: 1\n                }\n            }\n            if (interval === 2) {\n                return {\n                    start: moment(endTimeStamp - (7 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                    interval: 2\n                }\n            }\n            return {\n                start: moment(endTimeStamp - (14 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                interval: 3\n            }\n        }\n        function formatPickerDate(PickerDate) {\n            const nowDateForSeven = moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf() + (7 * 60 * 60 * 1000)\n            const newDateForZero = moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n            const now = moment().valueOf()\n            if (PickerDate === newDateForZero) {\n                if (now < nowDateForSeven) {\n                    return PickerDate - (24 * 60 * 60 * 1000)\n                }\n                return PickerDate\n            }\n            return PickerDate\n        }\n        const { type, interval, PickerDate, HID, source, CID, svg_id } = this.props\n        const PHID = HID.toString().trim()\n        const PCID = CID.toString().trim()\n        // console.log(interval, PickerDate)\n        const forPicker = formatPickerDate(PickerDate)\n        const optionvalue = formatTimer(interval, forPicker)\n        if (source === \"CM\") {\n            if (type === \"abp\") {\n                ApiProvider.getPatientwardvalueBoxPlot(PHID, optionvalue.start, optionvalue.end, type, optionvalue.interval)\n                    .then(data => {\n                        console.log(data.data)\n                        d3.select(\"#\" + svg_id).remove()\n                        this.drawChart(data.data);\n                    })\n                    .catch(err => { console.log(err) })\n            }\n            if (type === \"hr\" || type === \"rr\" || type === \"spo2\") {\n                ApiProvider.getPatientwardvalueBoxPlot(PHID, optionvalue.start, optionvalue.end, type, optionvalue.interval)\n                    .then(data => {\n                        console.log(data.data)\n                        d3.select(\"#\" + svg_id).remove()\n                        this.drawChart(data.data);\n                    })\n                    .catch(err => { console.log(err) })\n            }\n            if (type === \"nbp\") {\n                ApiProvider.getVitalSignData(PHID, optionvalue.start, optionvalue.end, type)\n                    .then(data => {\n                        console.log(data.data)\n                        d3.select(\"#\" + svg_id).remove()\n                        this.drawChart(data.data);\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    })\n            }\n            if (type === \"bt\") {\n                d3.select(\"#\" + svg_id).remove()\n                this.drawChart([]);\n            }\n        }\n        if (source === \"NIS\") {\n            const xm2 = new X2JS()\n            const st = moment(optionvalue.start, \"YYYYMMDDHHmmss\").format(\"YYYYMMDDHHmm\")\n            const et = moment(optionvalue.end, \"YYYYMMDDHHmmss\").format(\"YYYYMMDDHHmm\")\n            const QDVS = ApiProvider.getQDVS(PCID, st, et)\n                .then(data => {\n                    return xm2.xml2js(data.data).outmsg.resconts.rescont\n                })\n                .catch(err => { console.log(err) })\n\n            const QOXY = ApiProvider.getQOXY(PCID, st, et)\n                .then(data => {\n                    return xm2.xml2js(data.data).outmsg.resconts.rescont\n\n                })\n                .catch(err => { console.log(err) })\n            Promise.all([QDVS, QOXY]).then(result => {\n                function FormatNISData(QDVS, QOXY, type) {\n                    var HRNISLIST = []\n                    var RRNISLIST = []\n                    var SBPNISLIST = []\n                    var DBPNISLIST = []\n                    var BTNISLIST = []\n                    var Spo2NISLIST = []\n                    if (Array.isArray(QDVS)) {\n                        for (let index = 0; index < QDVS.length; index++) {\n                            const element = QDVS[index];\n                            const hr = element.pluse\n                            const rr = element.breath\n                            const SBP = element.systolic\n                            const DBP = element.diastolic\n                            const BT = element.temperature\n                            const time = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                            HRNISLIST.push({\n                                Data: hr,\n                                Time: time\n                            })\n                            RRNISLIST.push({\n                                Data: rr,\n                                Time: time\n                            })\n                            SBPNISLIST.push({\n                                Data: SBP,\n                                Time: time\n                            })\n                            DBPNISLIST.push({\n                                Data: DBP,\n                                Time: time\n                            })\n                            BTNISLIST.push({\n                                Data: BT,\n                                Time: time\n                            })\n                        }\n                    }\n                    if (Array.isArray(QOXY)) {\n                        for (let index = 0; index < QOXY.length; index++) {\n                            const element = QOXY[index];\n                            const spo2 = element.concen\n                            const time = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                            Spo2NISLIST.push({\n                                Data: spo2,\n                                Time: time\n\n                            })\n                        }\n                    }\n                    console.log(Spo2NISLIST)\n                    if (type === \"hr\") { return HRNISLIST }\n                    if (type === \"rr\") { return RRNISLIST }\n                    if (type === \"spo2\") { return Spo2NISLIST }\n                    if (type === \"abp\") { return [SBPNISLIST, DBPNISLIST] }\n                    if (type === \"bt\") { return BTNISLIST }\n                    return []\n                }\n                // console.log(FormatNISData(result[0], result[1], type))\n                d3.select(\"#\" + svg_id).remove()\n                this.drawChart(FormatNISData(result[0], result[1], type))\n            })\n        }\n    }\n    componentDidUpdate() {\n        const { interval, PickerDate, HID, source, width } = this.props\n        const PrePickerDate = this.state.prepickerdate\n        if (PrePickerDate !== PickerDate) {\n            this.setState({ prepickerdate: this.props.PickerDate })\n            this.centermonitorApiDataGet()\n        }\n        const Presource = this.state.presource\n        if (Presource !== source) {\n            this.setState({ presource: source })\n            this.centermonitorApiDataGet()\n        }\n        if(this.state.prewidth !== width){\n            this.setState({prewidth: width});\n            this.centermonitorApiDataGet();\n        }\n        const Preinterval = this.state.preinterval\n        if (interval !== Preinterval) {\n            this.setState({ preinterval: interval })\n            this.centermonitorApiDataGet()\n        }\n        const PreHID = this.state.prehid\n        if (HID !== PreHID) {\n            this.setState({ prehid: HID })\n            this.centermonitorApiDataGet()\n        }\n    }\n\n    componentDidMount() {\n\n        this.setState({\n            prepickerdate: this.props.PickerDate,\n            presource: this.props.source,\n            preinterval: this.props.interval,\n            prehid: this.props.prehid,\n            prewidth: this.props.width,\n        })\n        this.centermonitorApiDataGet()\n\n    }\n    drawChart(sourcedata) {\n        function formatxArray(startTime, interval) {\n            var xAxisarray = []\n            if (interval === 0) {\n                for (let index = 0; index < 25; index++) {\n                    if (index % 4 === 0) {\n                        xAxisarray.push(startTime + (index * 60 * 60 * 1000))\n                    }\n                }\n            }\n            else if (interval === 1) {\n                for (let index = 0; index < 19; index++) {\n                    if (index % 2 === 0) {\n                        xAxisarray.push(startTime + (index * 4 * 60 * 60 * 1000))\n                    }\n                }\n            }\n            else if (interval === 2) {\n                for (let index = 0; index < 21; index++) {\n                    xAxisarray.push(startTime + (index * 60 * 60 * 1000 * 8))\n                }\n            }\n            else {\n                for (let index = 0; index < 14; index++) {\n                    xAxisarray.push(startTime + (index * 60 * 60 * 1000 * 24))\n                }\n            }\n            return xAxisarray\n        }\n\n        function formatbotaxis(time, interval) {\n            var xAxisarray = []\n            if (interval === 0) {\n                xAxisarray.push(startTime + (17 * 60 * 60 * 1000))\n            }\n            else if (interval === 1) {\n                for (let index = 0; index < 3; index++) {\n                    xAxisarray.push(startTime + (17 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000))\n                }\n            }\n            else if (interval === 2) {\n                for (let index = 0; index < 21; index++) {\n                    xAxisarray.push(time + (index * 60 * 60 * 1000 * 8))\n                }\n            }\n            else {\n                for (let index = 0; index < 14; index++) {\n                    xAxisarray.push(time + (index * 60 * 60 * 1000 * 24))\n                }\n            }\n            return xAxisarray\n        }\n\n        var formatHour = d3.timeFormat(\"%H\")\n\n        function multiFormat(date) {\n            return formatHour(date)\n        }\n\n\n        //vitaldays true:threeday\n        const {\n            id_key,\n            svg_id,\n            startTime,\n            endTime,\n            height,\n            width,\n            interval, //0:1天 1:3天 2:1週 3:2週 \n            axisBot,\n            axisTop,\n            circlrcolor,\n            max,\n            min,\n            upper,\n            lower,\n            source,\n            type\n        } = this.props\n\n        // const width = window.screen.availWidth * 0.25, height = 100, viewwidth = width - 50, rect_width = width / 46\n        const viewwidth = width - 50\n        // const EndTime = formatendtime(defaultdate)\n        // var vital_interval = formatintervaldays(EndTime, vitaldays)\n\n        var y = d3.scaleLinear()\n            .domain([min, max])\n            .range([height, 0])\n\n        var x = d3.scaleLinear()\n            .domain([startTime, endTime])\n            .range([0, viewwidth - 1])\n\n\n        var yAxis = d3.axisLeft(y)\n            .tickValues([min, max])\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(15);\n\n\n        const xAxisvalue = formatxArray(startTime, interval)\n        const xAxisbotvalue = formatbotaxis(startTime, interval)\n\n        var xAxis = d3.axisTop(x)\n            .tickValues(xAxisvalue)\n            .tickSize(0, 0)\n            .tickPadding(5)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n        var xAxisbot = d3.axisBottom(x)\n            .tickValues(xAxisbotvalue)\n            .tickSize(0, 0)\n            .tickPadding(height + 10)\n            .tickFormat(function (d) { return moment(d).format(\"MM/DD\") });\n\n        var svg\n        if (axisTop) {\n            svg = d3.select(\"#\" + id_key)\n                .append(\"svg\")\n                .attr(\"id\", svg_id)\n                .style(\"width\", width + 10)\n                .style(\"height\", height + 25)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + 50 + \",\" + 20 + \")\");\n        }\n        else {\n            if (axisBot) {\n                svg = d3.select(\"#\" + id_key)\n                    .append(\"svg\")\n                    .attr(\"id\", svg_id)\n                    .style(\"width\", width)\n                    .style(\"height\", height + 25)\n                    .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + 50 + \",\" + 5 + \")\");\n            }\n            else {\n\n                svg = d3.select(\"#\" + id_key)\n                    .append(\"svg\")\n                    .attr(\"id\", svg_id)\n                    .style(\"width\", width)\n                    .style(\"height\", height + 10)\n                    .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + 50 + \",\" + 5 + \")\");\n            }\n        }\n\n        if (axisTop) {\n            svg.append(\"g\")\n                .call(xAxis)\n                .attr(\"class\", \"axis\");\n        }\n\n        if (axisBot) {\n            svg.append(\"g\")\n                .call(xAxisbot)\n                .attr(\"class\", \"axis\");\n\n        }\n\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n        //上下橫線\n        svg.append('line')\n            .attr('x1', x(startTime))\n            .attr('y1', y(max))\n            .attr('x2', x(endTime))\n            .attr('y2', y(max))\n            .style('stroke', 'rgba(220,220,220,1)')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n        svg.append('line')\n            .attr('x1', x(startTime))\n            .attr('y1', y(min))\n            .attr('x2', x(endTime))\n            .attr('y2', y(min))\n            .style('stroke', 'rgba(220,220,220,1)')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n\n        if (interval === 0) {\n            for (let index = 0; index < 25; index++) {\n                if((index % 24) === 0){\n                    svg.append('line')\n                    .attr('x1', x(startTime + (index * 60 * 60 * 1000)))\n                    .attr('y1', 0)\n                    .attr('x2', x(startTime + (index * 60 * 60 * 1000)))\n                    .attr('y2', height)\n                    .style('stroke', 'rgba(0,0,0,0.7)')\n                    .style('stroke-width', 2);\n                } else if (index % 8 === 0) {\n                    svg.append('line')\n                        .attr('x1', x(startTime + (index * 60 * 60 * 1000)))\n                        .attr('y1', 0)\n                        .attr('x2', x(startTime + (index * 60 * 60 * 1000)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(0,0,0,0.5)')\n                        .style('stroke-width', 2);\n                }\n                else {\n                    svg.append('line')\n                        .attr('x1', x(startTime + (index * 60 * 60 * 1000)))\n                        .attr('y1', 0)\n                        .attr('x2', x(startTime + (index * 60 * 60 * 1000)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(220,220,220,1)')\n                        .style('stroke-width', 1)\n                        .style('stroke-dasharray', 5.5);\n                }\n            }\n\n            drawshadow(startTime, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n\n        }\n        if (interval === 1) {\n            for (let index = 0; index < 19; index++) {\n                if((index % 6) === 0){\n                    svg.append('line')\n                        .attr('x1', x(startTime + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y1', 0)\n                        .attr('x2', x(startTime + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(0,0,0,0.7)')\n                        .style('stroke-width', 2);\n                } else if (index % 2 === 0) {\n                    svg.append('line')\n                        .attr('x1', x(startTime + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y1', 0)\n                        .attr('x2', x(startTime + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(0,0,0,0.5)')\n                        .style('stroke-width', 2);\n                }\n                else {\n                    svg.append('line')\n                        .attr('x1', x(startTime + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y1', 0)\n                        .attr('x2', x(startTime + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(220,220,220,1)')\n                        .style('stroke-width', 1)\n                        .style('stroke-dasharray', 5.5);\n                }\n            }\n\n            drawshadow(startTime, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n        }\n        if (interval === 2) {\n            for (let index = 0; index < 22; index++) {\n                if((index % 3) === 0){\n                    svg.append('line')\n                    .attr('x1', x(startTime + (index * 60 * 60 * 1000 * 8)))\n                    .attr('y1', 0)\n                    .attr('x2', x(startTime + (index * 60 * 60 * 1000 * 8)))\n                    .attr('y2', height)\n                    .style('stroke', 'rgba(0,0,0,0.7)')\n                    .style('stroke-width', 2);\n                }else{\n                    svg.append('line')\n                    .attr('x1', x(startTime + (index * 60 * 60 * 1000 * 8)))\n                    .attr('y1', 0)\n                    .attr('x2', x(startTime + (index * 60 * 60 * 1000 * 8)))\n                    .attr('y2', height)\n                    .style('stroke', 'rgba(0,0,0,0.5)')\n                    .style('stroke-width', 2);\n                }\n                \n            }\n\n            drawshadow(startTime, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n        }\n        if (interval === 3) {\n            for (let index = 0; index < 15; index++) {\n                svg.append('line')\n                    .attr('x1', x(startTime + (index * 60 * 60 * 1000 * 24)))\n                    .attr('y1', 0)\n                    .attr('x2', x(startTime + (index * 60 * 60 * 1000 * 24)))\n                    .attr('y2', height)\n                    .style('stroke', 'rgba(0,0,0,0.7)')\n                    .style('stroke-width', 2);\n            }\n\n            drawshadow(startTime, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n        }\n\n        function formatBox(startTime, interval) {\n            function interFormat(startTime, interval) {\n                var TimeArray = []\n                for (let index = 0; index < interval; index++) {\n                    if (interval === 24) {\n                        const boxTime = startTime + (30 * 60 * 1000) + (index * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 18) {\n                        const boxTime = startTime + (2 * 60 * 60 * 1000) + (index * 4 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 21) {\n                        const boxTime = startTime + (4 * 60 * 60 * 1000) + (index * 8 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else {\n                        const boxTime = startTime + (12 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                }\n                return TimeArray\n            }\n            if (interval === 0) {\n                return interFormat(startTime, 24)\n            }\n            if (interval === 1) {\n                return interFormat(startTime, 18)\n            }\n            if (interval === 2) {\n                return interFormat(startTime, 21)\n            }\n            return interFormat(startTime, 14)\n        }\n        function formatBoxWidth(viewwidth, interval) {\n            if (interval === 0) {\n                return viewwidth / 24\n            }\n            if (interval === 1) {\n                return viewwidth / 18\n            }\n            if (interval === 2) {\n                return viewwidth / 21\n            }\n            return viewwidth / 14\n        }\n        function drawshadow(startTime, interval, lower, upper, type) {\n            const LimitBoxTimer = formatBox(startTime, interval)\n            for (let index = 0; index < LimitBoxTimer.length; index++) {\n                const boxwidth = formatBoxWidth(width, interval)\n                // console.log(boxwidth)\n                const element = LimitBoxTimer[index];\n                svg.append('line')\n                    .attr('x1', x(element))\n                    .attr('y1', y(lower))\n                    .attr('x2', x(element))\n                    .attr('y2', y(upper))\n                    .style('stroke', circlrcolor)\n                    .style('opacity', 0.5)\n                    .style('stroke-width', boxwidth)\n\n                if (type === \"nbp\" || type === \"abp\") {\n                    svg.append('line')\n                        .attr('x1', x(element))\n                        .attr('y1', y(35))\n                        .attr('x2', x(element))\n                        .attr('y2', y(55))\n                        .style('stroke', circlrcolor)\n                        .style('opacity', 0.2)\n                        .style('stroke-width', boxwidth)\n                }\n            }\n        }\n        function drawData(type, source, sourcedata, interval, boxwidth) {\n            function formatShift(interval) {\n                if (interval === 0) {\n                    return 30 * 60 * 1000\n                }\n                if (interval === 1) {\n                    return 2 * 60 * 60 * 1000\n                }\n                if (interval === 2) {\n                    return 4 * 60 * 60 * 1000\n                }\n                return 12 * 60 * 60 * 1000\n            }\n            // console.log(source)\n            if (source === \"CM\") {\n                if (type === \"abp\") {\n                    const dataAbps = sourcedata.abps\n                    const dataAbpd = sourcedata.abpd\n                    for (let index = 0; index < dataAbpd.length; index++) {\n                        const element = dataAbpd[index];\n                        const q1 = element.Q1\n                        const q2 = element.Q2\n                        const q3 = element.Q3\n                        const q4 = element.Q4\n                        const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + formatShift(interval)\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(q1))\n                            .attr(\"y2\", y(q4))\n                            .attr(\"stroke\", circlrcolor)\n                            .style('opacity', 0.5)\n                            // .attr(\"stroke\", \"blcak\")\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q2) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style('opacity', 0.5)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg\n                            .selectAll(\"toto\")\n                            .data([q1, q4])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('opacity', 0.5)\n                            .style('stroke-width', 1);\n                    }\n                    for (let index = 0; index < dataAbps.length; index++) {\n                        const element = dataAbps[index];\n                        const q1 = element.Q1\n                        const q2 = element.Q2\n                        const q3 = element.Q3\n                        const q4 = element.Q4\n                        const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + formatShift(interval)\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(q1))\n                            .attr(\"y2\", y(q4))\n                            .attr(\"stroke\", circlrcolor)\n                            // .attr(\"stroke\", \"blcak\")\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q2) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg\n                            .selectAll(\"toto\")\n                            .data([q1, q4])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1);\n                    }\n                }\n                if (type === \"hr\" || type === \"rr\" || type === \"spo2\") {\n                    for (let index = 0; index < sourcedata.length; index++) {\n                        const element = sourcedata[index];\n                        const q1 = element.Q1\n                        const q2 = element.Q2\n                        const q3 = element.Q3\n                        const q4 = element.Q4\n                        const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + formatShift(interval)\n                        console.log(Xtime)\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(q1))\n                            .attr(\"y2\", y(q4))\n                            .attr(\"stroke\", circlrcolor)\n                            // .attr(\"stroke\", \"blcak\")\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q2) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg\n                            .selectAll(\"toto\")\n                            .data([q1, q4])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1);\n\n                    }\n                }\n                if (type === \"nbp\") {\n                    for (let index = 0; index < sourcedata.length; index++) {\n                        const element = sourcedata[index];\n                        const Xtime = moment(element.Time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                        const SBP = element.SBP\n                        const DBP = element.DBP\n                        // console.log(SBP)\n                        if (SBP === 0 || DBP === 0) {\n                            continue\n                        }\n                        else {\n                            // console.log(element)\n                            svg.append('circle')\n                                .attr('cx', x(Xtime))\n                                .attr('cy', y(SBP))\n                                .attr('r', 3)\n                                .style('fill', circlrcolor)\n\n\n                            svg.append('circle')\n                                .attr('cx', x(Xtime))\n                                .attr('cy', y(DBP))\n                                .attr('r', 3)\n                                .style('opacity', 0.5)\n                                .style('fill', circlrcolor)\n                        }\n\n                    }\n                }\n            }\n            else {\n                if (type === \"abp\" || type === \"nbp\") {\n                    if (sourcedata === undefined) {\n                        return null\n                    }\n                    if (sourcedata.length === 0) {\n                        return null\n                    }\n                    const SBP = sourcedata[0]\n                    const DBP = sourcedata[1]\n                    for (let index = 0; index < SBP.length; index++) {\n                        const element = SBP[index];\n                        svg.append('circle')\n                            .attr('cx', x(element.Time))\n                            .attr('cy', y(element.Data))\n                            .attr('r', 3)\n                            .style('fill', circlrcolor)\n\n                    }\n\n                    for (let index = 0; index < DBP.length; index++) {\n                        const element = DBP[index];\n                        svg.append('circle')\n                            .attr('cx', x(element.Time))\n                            .attr('cy', y(element.Data))\n                            .attr('r', 3)\n                            .style('fill', circlrcolor)\n                            .style('opacity', 0.5)\n\n                    }\n                }\n                else {\n                    for (let index = 0; index < sourcedata.length; index++) {\n                        const element = sourcedata[index];\n                        svg.append('circle')\n                            .attr('cx', x(element.Time))\n                            .attr('cy', y(element.Data))\n                            .attr('r', 3)\n                            .style('fill', circlrcolor)\n\n                    }\n                }\n\n            }\n        }\n    }\n\n    changestate() {\n        this.setState({\n            change: !this.state.change\n        })\n    }\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default Crosssectionvitalsignchart;","import React, { Component } from 'react';\nimport { Select, Modal, Tabs, Icon, Button } from 'antd';\nimport Crosssectionvitalsignchart from './Crossectionvitalsignchart'\nimport Warningsetting from './Warningsettinglist'\n// import Addwarningsetting from './Addnewwaring'\nimport './Vitalsign.scss'\n// import { formatxArrayhalf, formatendtime } from '../../Function/Timeformat'\n// import { simulationCentermonitordata, simulationnisdata } from '../../Function/Wardstate'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport '../../Wardview/Wardchart.scss'\nimport { statecolor } from '../../Function/Wardstate'\n\n\nclass Vitalsign extends Component {\n\n    state = {\n        vital_days: 0, //false:一天 true:三天\n        source: \"CM\", //false:中央站 true:NIS\n        visible: false,\n        visibleConflict: false,\n        chackstate_one: 0,\n        chackstate_three: 0,\n        datasource: null,\n        addNewWarningDateStr: null,\n        addNewWarningHourStr: null,\n\n        CenterMonitorValue: null,\n        preHISID: null,\n        prePickerDate: null,\n        checkStateNumber: null,\n\n        pbStatus: true\n    }\n    componentDidUpdate() {\n        const { PickerDate } = this.props\n        const { prePickerDate } = this.state\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        const preHISID = this.state.preHISID\n        const Time = moment(this.timeCheck(PickerDate, this.state.vital_days).time).format(\"YYYYMMDDHHmmss\")\n        if (Phistnum !== preHISID || PickerDate !== prePickerDate) {\n            this.setState({ preHISID: Phistnum, prePickerDate: PickerDate, checkStateNumber: this.timeCheck(PickerDate, this.state.vital_days).checkNum })\n            this.getVitalSignData(Time.time, Phistnum)\n        }\n    }\n    componentDidMount() {\n        //選取現在時間\n        const { PickerDate } = this.props\n        const Time = moment(this.timeCheck(PickerDate, this.state.vital_days).time).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ preHISID: Phistnum, prePickerDate: PickerDate, checkStateNumber: this.timeCheck(PickerDate, this.state.vital_days).checkNum })\n        this.getVitalSignData(Time, Phistnum)\n    }\n\n    changePb = () => {\n        this.setState({\n            pbStatus: false\n        })\n    }\n\n    decidePB = (hr, nbpd, abpd) => {\n        const status = this.state.pbStatus\n        if (status) {\n            hr > 160 || hr < 100 && this.changePb()\n            nbpd > 75 || nbpd < 55 && this.changePb()\n            abpd > 75 || abpd < 55 && this.changePb()\n        }\n    }\n\n    timeCheck(PickerDate, interval) {\n        function sevenFormat(nowDaySeven) {\n            const now = moment().valueOf()\n            if (now < nowDaySeven) {\n                return nowDaySeven - (24 * 60 * 60 * 1000)\n            }\n            return nowDaySeven\n        }\n        const nowDaySeven = moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf() + (7 * 60 * 60 * 1000)\n        const time = sevenFormat(nowDaySeven)\n        const PickerDateSeven = PickerDate + (7 * 60 * 60 * 1000)\n        const hourFormat = moment().get('hours')\n        console.log(hourFormat)\n        if (PickerDateSeven === time) {\n            //選取到今天\n            const EndTime = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf()\n            if (interval === 0) {\n                return {\n                    time: EndTime - (60 * 60 * 1000),\n                    checkNum: hourFormat - 7\n                }\n            }\n            const format = parseInt(hourFormat % 4) + 1\n            console.log(moment(time + (24 * 60 * 60 * 1000)).diff(moment(EndTime - (format * 60 * 60 * 1000)), \"hours\"))\n            console.log(18 - (moment(time + (24 * 60 * 60 * 1000)).diff(moment(EndTime - (format * 60 * 60 * 1000)), \"hours\")))\n            return {\n                time: EndTime - (format * 60 * 60 * 1000),\n                checkNum: 18 - parseInt((moment(time + (24 * 60 * 60 * 1000)).diff(moment(EndTime - (format * 60 * 60 * 1000)), \"hours\") / 4))\n            }\n\n        }\n        const EndTime = moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf() + (31 * 60 * 60 * 1000)\n        if (interval === 0) {\n            return {\n                time: EndTime - (60 * 60 * 1000),\n                checkNum: 24\n            }\n        }\n        return {\n            time: EndTime - (4 * 60 * 60 * 1000),\n            checkNum: 18\n        }\n\n    }\n\n    getVitalSignData(Time, Phistnum) {\n        const Interval = this.formatvital_daysToInterval()\n        console.log(Time)\n        ApiProvider.getPatientwarMidValue(Phistnum, Time, Interval)\n            .then(data => { console.log(data.data); this.setState({ CenterMonitorValue: data.data }) })\n            .catch(err => { console.log(err) })\n    }\n\n    onVitalCheck(interval) {\n        var gridarray = []\n        if (interval === 1) {\n            for (let index = 0; index < 18; index++) {\n                const checknumber = index + 1\n                if (checknumber === this.state.checkStateNumber) {\n                    gridarray.push(<div key={index} style={{ height: 330, width: \"100%\", border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => { console.log(index) }}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ height: 330, width: \"100%\", cursor: \"pointer\" }} onClick={() => this.onClickCheckgrid(checknumber, interval)}></div>)\n            }\n        }\n        else {\n            for (let index = 0; index < 24; index++) {\n                const checknumber = index + 1\n                if (checknumber === this.state.checkStateNumber) {\n                    gridarray.push(<div key={index} style={{ height: 330, width: \"100%\", border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => { console.log(index) }}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ height: 330, width: \"100%\", cursor: \"pointer\" }} onClick={() => this.onClickCheckgrid(checknumber, interval)}></div>)\n            }\n        }\n        return gridarray;\n    }\n\n    formatvital_daysToInterval() {\n        const vitaldays = this.state.vital_days\n        if (vitaldays === 0) {\n            return 0\n        }\n        return 1;\n    }\n\n    onClickCheckgrid(number, Interval) {\n        function startTime(PickerDate, Interval) {\n            const End = PickerDate + (31 * 60 * 60 * 1000)\n            if (Interval === 0) {\n                return End - (24 * 60 * 60 * 1000)\n            }\n            return End - (3 * 24 * 60 * 60 * 1000)\n        }\n        function intervalforhour(Interval) {\n            if (Interval === 0) {\n                return 1;\n            }\n            return 4;\n        }\n        const { PickerDate } = this.props\n        const time = moment(startTime(PickerDate, Interval) + (intervalforhour(Interval) * (number - 1) * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ checkStateNumber: number })\n        this.getVitalSignData(time, Phistnum)\n    }\n\n    render() {\n        function valueFormat(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"--\"\n            }\n            return value\n        }\n        function centervalueNull(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            return value\n        }\n        function centervaluetoNull(value) {\n            function FilterList(DataList, type) {\n                const filterData = DataList.filter(function (value, index, arr) {\n                    return value.type === type\n                })\n                if (filterData.length === 0) {\n                    return null\n                }\n                return filterData[0].Mid\n            }\n            if (value === undefined || value === null) {\n                return {\n                    hr: null,\n                    rr: null,\n                    bt: null,\n                    spo2: null,\n                    abpd: null,\n                    abpm: null,\n                    abps: null,\n                    nbpm: null,\n                    nbps: null,\n                    nbpd: null\n                }\n            }\n            return {\n                hr: FilterList(value, \"hr\"),\n                rr: FilterList(value, \"rr\"),\n                bt: FilterList(value, \"bt\"),\n                spo2: FilterList(value, \"spo2\"),\n                abpd: FilterList(value, \"abpd\"),\n                abpm: FilterList(value, \"abpm\"),\n                abps: FilterList(value, \"abps\"),\n                nbpd: FilterList(value, \"nbpd\"),\n                nbps: FilterList(value, \"nbps\"),\n                nbpm: FilterList(value, \"nbpm\"),\n            }\n        }\n\n        function limitValue(value, upper, lower) {\n            if (value > upper || value < lower) {\n                return false\n            }\n            return true\n        }\n\n        function vitaldaysBool(vitaldays) {\n            if (vitaldays === 3) {\n                return true\n            }\n            return false\n        }\n\n        function formatPickerTimer(pickerdate, interval) {\n            if (interval === 0) {\n                return {\n                    startTime: pickerdate + (7 * 60 * 60 * 1000),\n                    endTime: pickerdate + (31 * 60 * 60 * 1000)\n                }\n            }\n            else {\n                return {\n                    startTime: pickerdate + (31 * 60 * 60 * 1000) - (3 * 24 * 60 * 60 * 1000),\n                    endTime: pickerdate + (31 * 60 * 60 * 1000)\n                }\n\n            }\n        }\n        const width = window.screen.availWidth * 0.25\n        const centervalue = centervaluetoNull(this.state.CenterMonitorValue)\n        const pickerTimer = formatPickerTimer(this.props.PickerDate, this.state.vital_days)\n        const PickerDate = this.props.PickerDate\n        console.log(this.state.CenterMonitorValue)\n\n        this.decidePB(centervalue.hr, centervalue.nbpd, centervalue.abpd)\n        const status = this.state.pbStatus\n        return (\n            <div>\n                <div style={{ display: 'flex', alignItems: 'center', height: \"36px\", backgroundColor: \"#71b0e46e\", padding: \"0px 16px\" }}>\n                    <div style={{ fontSize: \"16px\" }}>生命徵象</div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridGap: \"5px\", marginLeft: \"20px\" }}>\n                        <div className={this.state.source === \"CM\" ? \"vitalBtnSource\" : \"vitalBtnSelectSource\"} style={{ marginRight: \"1px\" }} onClick={() => { this.setState({ source: \"CM\", checkStateNumber: null }) }}>\n                            中央站資訊\n                        </div>\n                        <div className={this.state.source === \"NIS\" ? \"vitalBtnSource\" : \"vitalBtnSelectSource\"} onClick={() => { this.setState({ source: \"NIS\", checkStateNumber: null }) }}>\n                            護理系統資訊\n                        </div>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridGap: \"2px\", marginLeft: \"15px\" }}>\n                        <div className={this.state.vital_days === 0 ? \"vitalBtnInterval\" : \"vitalBtnSelectInterval\"} style={{ marginRight: \"1px\" }} onClick={() => { this.setState({ vital_days: 0, checkStateNumber: this.timeCheck(PickerDate, 0).checkNum }) }}>\n                            顯示一天\n                        </div>\n                        <div className={this.state.vital_days === 1 ? \"vitalBtnInterval\" : \"vitalBtnSelectInterval\"} onClick={() => { this.setState({ vital_days: 1, checkStateNumber: this.timeCheck(PickerDate, 1).checkNum }) }}>\n                            顯示三天\n                        </div>\n                    </div>\n                </div>\n                <div className='Wardchartlayout'>\n                    <div className=\"halfwardchart\">\n                        <div className='singlewardchart'>\n                            <div className=\"rowTitle\" >\n                                <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"150px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: status ? \"white\" : statecolor('HR') }}>\n                                    <t3 style={{ color: status ? statecolor('HR') : \"white\" }}>HR</t3>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"40px\", lineHeight: \"44px\", paddingRight: \"3px\", color: status ? statecolor('HR') : \"white\" }}>{centervalueNull(centervalue.hr)}</div>\n                                </div>\n                            </div>\n                            <div className=\"rowTitle\">\n                                <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"150px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: status ? \"white\" : statecolor('BP') }}>\n                                    <div style={{ color: status ? statecolor('BP') : \"white\" }}>NBP(mmHg)</div>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"30px\", lineHeight: \"34px\", color: status ? statecolor('BP') : \"white\" }}>{centervalueNull(centervalue.nbps)}/{centervalueNull(centervalue.nbpd)}</div>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"20px\", lineHeight: \"22px\", color: status ? statecolor('BP') : \"white\" }}>({centervalueNull(centervalue.nbpm)})</div>\n                                </div>\n                            </div>\n                            <div className=\"rowTitle\">\n                                <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"150px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: status ? \"white\" : statecolor('BP') }}>\n                                    <div style={{ color: status ? statecolor('BP') : \"white\" }}>ABP(mmHg)</div>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"30px\", lineHeight: \"34px\", color: status ? statecolor('BP') : \"white\" }}>{centervalueNull(centervalue.abps)}/{centervalueNull(centervalue.abpd)}</div>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"20px\", lineHeight: \"22px\", color: status ? statecolor('BP') : \"white\" }}>({centervalueNull(centervalue.abpm)})</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ position: \"relative\" }}>\n                            <div style={{ position: \"absolute\", top: 20, left: 50, width: width - 50, height: 330 }}>\n                                <div style={{ display: \"grid\", gridTemplateColumns: this.state.vital_days === 1 ? \"repeat(18, 1fr)\" : \"repeat(24,1fr)\" }}>\n                                    {this.onVitalCheck(this.state.vital_days)}\n                                </div>\n                            </div>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"HR_svg\"}\n                                id_key={\"HR_div\"}\n                                type={\"hr\"}\n                                source={this.state.source}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={100}\n                                upper={160}\n                                axisBot={false}\n                                axisTop={true}\n                                circlrcolor=\"#779F50\"\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={200}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"NBP_svg\"}\n                                id_key={\"NBP_div\"}\n                                type={\"nbp\"}\n                                source={this.state.source}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={55}\n                                upper={75}\n                                axisBot={false}\n                                axisTop={false}\n                                circlrcolor={\"#C12528\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={100}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"ABP_svg\"}\n                                id_key={\"ABP_div\"}\n                                type={\"abp\"}\n                                source={this.state.source}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={55}\n                                upper={75}\n                                axisBot={true}\n                                axisTop={false}\n                                circlrcolor={\"#C12528\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={100}>\n                            </Crosssectionvitalsignchart>\n                        </div>\n                    </div>\n                    <div className=\"halfwardchart\">\n                        <div className='singlewardchart'>\n                            <div className=\"rowTitle\" >\n                                <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"150px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: limitValue(centervalue.spo2, 100, 90) ? \"white\" : statecolor('SpO2') }}>\n                                    <t3 style={{ color: limitValue(centervalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>\n                                        SpO\n                                        <sub >2</sub>\n                                        (%)\n                                    </t3>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"40px\", lineHeight: \"44px\", paddingRight: \"3px\", color: limitValue(centervalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>{centervalueNull(centervalue.spo2)}%</div>\n                                </div>\n                            </div>\n                            <div className=\"rowTitle\" >\n                                <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"150px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: limitValue(centervalue.bt, 38, 36) ? \"white\" : statecolor('BT') }}>\n                                    <div style={{ color: limitValue(centervalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>BT</div>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"40px\", lineHeight: \"44px\", paddingRight: \"3px\", color: limitValue(centervalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>{valueFormat(centervalue.bt)}</div>\n                                </div>\n                            </div>\n                            <div className=\"rowTitle\">\n                                <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"150px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: limitValue(centervalue.rr, 60, 20) ? \"white\" : statecolor('RR') }}>\n                                    <div style={{ color: limitValue(centervalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>RR(min)</div>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"40px\", lineHeight: \"44px\", paddingRight: \"3px\", color: limitValue(centervalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>{centervalueNull(centervalue.rr)}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ position: \"relative\" }}>\n                            <div style={{ position: \"absolute\", top: 20, left: 50, width: width - 50, height: 330 }}>\n                                <div style={{ display: \"grid\", gridTemplateColumns: this.state.vital_days === 1 ? \"repeat(18, 1fr)\" : \"repeat(24,1fr)\" }}>\n                                    {this.onVitalCheck(this.state.vital_days)}\n                                </div>\n                            </div>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"SpO2_svg\"}\n                                id_key={\"SpO2_div\"}\n                                type={\"spo2\"}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={90}\n                                upper={100}\n                                axisBot={false}\n                                axisTop={true}\n                                circlrcolor={\"#4773B8\"}\n                                colorshadow={\"#4773B8\"}\n                                min={60}\n                                max={100}\n                                source={this.state.source}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"BT_svg\"}\n                                id_key={\"BT_div\"}\n                                type={\"bt\"}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                source={this.state.source}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={36}\n                                upper={38}\n                                axisBot={false}\n                                axisTop={false}\n                                circlrcolor={\"#7F3DB5\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={34}\n                                max={41}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"RR_svg\"}\n                                id_key={\"RR_div\"}\n                                type={\"spo2\"}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={20}\n                                upper={60}\n                                axisBot={true}\n                                axisTop={false}\n                                circlrcolor={\"#DE7531\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={100}\n                                source={this.state.source}>\n                            </Crosssectionvitalsignchart>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n\n}\n\nexport default Vitalsign;\n","import React, { Component } from 'react';\nimport dragdown from '../../Image/svg/dragdown.svg'\n\nclass Warningsetting extends Component {\n    state = {\n        dragstate: false\n    }\n    onClickdrag = () => {\n        this.setState(\n            {\n                dragstate: !this.state.dragstate\n            }\n        )\n    }\n    render() {\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div style={{ height: 50, background: \"rgba(238,238,238,1)\", padding: \"10px 16px\", display: \"flex\", justifyContent: \"space-between\" }}>\n                    <div style={{ display: \"flex\" }}>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>2019-06-01 08:00</div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", marginLeft: \"20px\" }}>\n                            <div style={{ border: \"red 1px solid\", borderRadius: \"4px\", cursor: \"pointer\", color: \"red\", padding: \"5px 20px\", background: \"white\" }}>刪除</div>\n                        </div>\n                    </div>\n                    <div onClick={this.onClickdrag} style={{ transform: this.state.dragstate ? \"scaleY(1)\" : \"scaleY(-1)\" }}>\n                        <img src={dragdown} alt=\"dragdown\"></img>\n                    </div>\n                </div>\n                <div style={{ display: this.state.dragstate ? \"block\" : \"none\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 4fr 1fr 4fr\" }}>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>HR</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>ABP</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>NBP</div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>SpO2</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>BT</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>RR</div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ height: 50, padding: \"10px 16px\", display: \"flex\", alignItems: \"center\" }}>生效時間範圍:2019-06-01 08:00~2019-06-31 08:00</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Warningsetting","import React, { Component } from 'react';\nimport { Button, DatePicker, Checkbox } from 'antd';\nimport moment from 'moment';\nimport displaylogo from '../Image/svg/filter.svg'\nimport { daysdiff } from '../Function/Timeformat'\nimport { pregancyweeksanddays } from '../Function/Wardbedfunction'\nimport './Controlbar.scss'\n// import * as ApiProvider from '../API/ApiProvider';\nimport * as WardState from '../Function/Wardstate'\nimport locale from 'antd/es/date-picker/locale/zh_TW';\n\n\nclass Controlbar extends Component {\n    state = {\n        display_Mode: false,\n        item: this.props.item_array,\n        scrollstate: 0,\n    }\n    sendData = (itwm_array) => {\n        this.props.parentCallback(itwm_array);\n    }\n\n\n    sendDateData = (PickerDate) => {\n        this.props.parentDateCallback(PickerDate);\n    }\n    //快速滑動\n    scrollToAnchor = (anchorName) => {\n        if (anchorName) {\n            let anchorElement = document.getElementById(anchorName);\n            if (anchorElement) { anchorElement.scrollIntoView(); }\n        }\n    }\n    onChange = (checkedValues) => {\n        this.sendData(checkedValues)\n\n    }\n    onDateChange = (date, dateString) => {\n        this.sendDateData(date.valueOf())\n    }\n    open_display() {\n        this.setState({\n            display_Mode: !this.state.display_Mode\n        })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo, PickerDate } = this.props\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const btemp = bTime - (6 * day)\n                bronDate <= btemp && this.sendDateData(bTime)\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD')).valueOf()\n                this.sendDateData(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const atemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= atemp && this.sendDateData(aTime)\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n\n        const btn_style = {\n            unclick_style: { borderRadius: \"4px\", color: \"#001a6d88\", border: \"1px solid #001a6d88\", padding: \"0px 4px\", height: \"30px\" }\n        }\n\n        function Monthformat(month) {\n            return month + 1\n        }\n        function timeformat(timestring) {\n            return new Date(timestring).getFullYear() + \"/\" + Monthformat(new Date(timestring).getMonth()) + \"/\" + new Date(timestring).getDate()\n        }\n        function valueFormat(value) {\n            if (value === \"\" || value === null || value === undefined) {\n                return \"--\"\n            }\n            return value.toString()\n        }\n        function valueBornWeight(value) {\n            if (value === \"\" || value === null || value === undefined || value === 0) {\n                return \"\"\n            }\n            return value.toString() + \"g → \"\n        }\n        const display_style = {\n            displye_mode: { position: \"absolute\", right: '0px', top: \"50px\", width: \"200px\", background: \"white\", boxShadow: \"3px 3px 12px\", zIndex: \"100\", borderRadius: \"4px\" },\n            non_display_mode: { display: \"none\" },\n            check_area: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\" },\n            check_text: { padding: \"4px\", width: \"140px\", borderRadius: \"4px\", borderColor: 'rgba(0, 0, 0, 0.15)', borderStyle: \"solid\", borderWidth: \"1px\", marginLeft: \"10px\", borderRadius: \"4px\" }\n        }\n\n        function disabledDate(current) {\n            // Can not select days before today and today\n            const endvalue = moment(caseinfo.PBASINGNINFO.PBIRTHDT, 'YYYYMMDD')\n            return endvalue.endOf('day') > current || current > moment().endOf('day')\n        }\n\n        const { caseinfo, btnlist, PickerDate } = this.props\n        const weightList = caseinfo.WEIGHT\n        const Birthday = caseinfo.PBASINGNINFO.PBIRTHDT\n        console.log(Birthday)\n        const BornWeight = WardState.BornWeight(weightList, Birthday)\n        const DayWeight = WardState.selectweight(weightList, PickerDate)\n        const btn = btnlist.map(\n            (item, index) => <Button onClick={this.scrollToAnchor.bind(this, item.scrollpoint)} key={index} style={btn_style.unclick_style}>\n                <t3>{item.name}</t3>\n            </Button>\n        )\n        console.log(moment(PickerDate))\n        return (\n            // <div>\n            <div className='controlbarlayout'>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto auto\", gridColumnGap: \"30px\" }}>\n                    <DatePicker locale={locale} width={140} onChange={this.onDateChange} value={moment(PickerDate)} allowClear={false} showToday={false} disabledDate={(current) => { return current > moment().startOf(\"day\") || current < moment(Birthday, \"YYYYMMDD\").add(-1, \"days\").endOf(\"day\") }} />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"2px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                    <div style={{ display: 'grid', gridTemplateColumns: \"repeat(3,auto)\", gridColumnGap: \"30px\", alignContent: \"center\" }}>\n                        <t2>矯正週數：{pregancyweeksanddays(caseinfo.WEEK_BORN, caseinfo.DAY_BORN, moment(Birthday, 'YYYYMMDD').format('YYYY/MM/DD'))}</t2>\n                        <t2>體重：{valueFormat(DayWeight)}g</t2>\n                        <t2>住院第{daysdiff(moment(PickerDate).format('YYYY/MM/DD'), moment(caseinfo.TRANSINDT, 'YYYYMMDD').format('YYYY/MM/DD'))}天</t2>\n                    </div>\n                </div>\n                <div style={{ display: \"flex\", alignItems: 'center', position: \"relative\" }}>\n                    <t2>快速切換：</t2>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,auto)\", gridColumnGap: \"5px\" }}>{btn}</div>\n                    <div onClick={() => this.open_display()} style={{ cursor: \"pointer\", marginLeft: \"5px\" }}>\n                        <img src={displaylogo} alt='displaylogo' style={{ width: '15px', height: '15px' }}></img>\n                    </div>\n                    <div style={this.state.display_Mode ? display_style.displye_mode : display_style.non_display_mode}>\n                        <t2 className='controlmoduletitle'>快速切換</t2>\n                        <div style={{ marginTop: \"10px\", marginBottom: \"20px\" }}>\n                            <Checkbox.Group defaultValue={this.state.item} id={\"checkbox_group\"} style={{ width: '100%', display: \"grid\", gridTemplateRows: \"repeat(5,1fr)\", gridRowGap: \"5px\" }} onChange={this.onChange}>\n                                <div style={display_style.check_area}>\n                                    <Checkbox value={0}></Checkbox>\n                                    <t3 style={display_style.check_text}>生命徵象</t3>\n                                </div>\n                                <div style={display_style.check_area}>\n                                    <Checkbox value={1} ></Checkbox>\n                                    <t3 style={display_style.check_text}>檢驗</t3>\n                                </div>\n                                <div style={display_style.check_area}>\n                                    <Checkbox value={2}></Checkbox>\n                                    <t3 style={display_style.check_text}>呼吸評估</t3>\n                                </div>\n                                <div style={display_style.check_area}>\n                                    <Checkbox value={3}></Checkbox>\n                                    <t3 style={display_style.check_text}>醫藥囑</t3>\n                                </div>\n                                <div style={display_style.check_area}>\n                                    <Checkbox value={4}></Checkbox>\n                                    <t3 style={display_style.check_text}>行事曆及註記</t3>\n                                </div>\n                                {/* <div style={display_style.check_area}>\n                                        <Checkbox value={5}></Checkbox>\n                                        <t3 style={display_style.check_text}>To Do List</t3>\n                                    </div> */}\n                            </Checkbox.Group>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            //     <div className='boxshadow'></div>\n            // </div >\n\n        );\n    }\n}\n\nexport default Controlbar;\n","import React, { Component } from 'react';\nimport './iopage.scss'\nimport moment from 'moment';\nimport * as WardState from '../Function/Wardstate'\nimport * as ApiProvider from '../API/ApiProvider'\nimport * as ApiGithub from '../API/ApiGithub'\nimport X2JS from 'x2js';\nimport * as QDCList from '../Resource/QDC'\n\nconst calcBorderLeft = (intervalStatus, index, Status) => {\n    if (Status === \"Crossection\") {\n        return '1px solid #eeeeee';\n    }\n    if(intervalStatus === 0){\n        if(index % 24 === 0){\n            return '2px solid rgba(0,0,0,0.7)';\n        }else if (index % 8 === 0){\n            return '2px solid rgba(0,0,0,0.5)';\n        } else {\n            return '1px solid #eeeeee';\n        }\n    } else if (intervalStatus === 1){\n        if(index % 6 === 0){\n            return '2px solid rgba(0,0,0,0.7)';\n        }else if (index % 2 === 0){\n            return '2px solid rgba(0,0,0,0.5)';\n        } else {\n            return '1px solid #eeeeee';\n        }\n    } else if (intervalStatus === 2) {\n        if(index % 3 === 0){\n            return '2px solid rgba(0,0,0,0.7)';\n        }else {\n            return '2px solid rgba(0,0,0,0.5)';\n        }\n    }else {\n        return '2px solid rgba(0,0,0,0.7)';\n    }\n}\n\nclass IOpage extends Component {\n    state = {\n        QDC: [],\n        PreStatus: null,\n        PreIntervalStatus: null,\n        PreCID: null,\n        PrePickerDate: null,\n        RegQDC: null,\n        CarloriesCal: []\n    }\n    getAPI(caseid, pickerdate, intervalStatus, status) {\n        if (caseid === undefined || caseid === null) {\n            return null\n        }\n        if (pickerdate === undefined || pickerdate === null) {\n            return null\n        }\n        if (intervalStatus === undefined || intervalStatus === null) {\n            return null\n        }\n        if (status === undefined || status === null) {\n            return null\n        }\n        function formatTimer(pickerdate, interstatus, status) {\n            const endTimeStamp = pickerdate + 31 * 60 * 60 * 1000\n            if (status === \"Crossection\") {\n                return {\n                    start: moment(endTimeStamp - (3 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            if (interstatus === 0) {\n                return {\n                    start: moment(endTimeStamp - (24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            if (interstatus === 1) {\n                return {\n                    start: moment(endTimeStamp - (3 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            if (interstatus === 2) {\n                return {\n                    start: moment(endTimeStamp - (7 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            return {\n                start: moment(endTimeStamp - (14 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n            }\n        }\n        const xm2 = new X2JS()\n        const timer = formatTimer(pickerdate, intervalStatus, status)\n        ApiProvider.getQDC(caseid, timer.start, timer.end)\n            .then(data => {\n                const Result = xm2.xml2js(data.data).outmsg\n                if (Number(Result.ret) === 0) {\n                    const parsedata = Result.resconts.rescont\n                    if (Array.isArray(parsedata)) {\n                        this.setState({ QDC: parsedata })\n                    }\n                    else {\n                        this.setState({ QDC: [parsedata] })\n                    }\n                }\n\n            })\n            .catch(err => {\n                console.log(\"getQDC NG \" + JSON.stringify(err));\n            });\n        // this.setState({ QDC: QDCList.data.outmsg.resconts.rescont })\n        ApiGithub.getGitHubJson(\"IOReg_QDC.json\")\n            .then(data => {\n                this.setState({ RegQDC: data.data })\n            })\n            .catch(err => {\n                console.log(\"getGithubNG\" + JSON.stringify(err))\n            })\n    }\n    componentDidMount() {\n        const { Status, IntervalStatus, caseinfo, PickerDate } = this.props\n        this.setState({ PreStatus: Status, PreIntervalStatus: IntervalStatus, PreCID: caseinfo.CASEID, PrePickerDate: PickerDate })\n        this.getAPI(caseinfo.CASEID, PickerDate, IntervalStatus, Status)\n\n    }\n    componentDidUpdate() {\n        const { Status, IntervalStatus, caseinfo, PickerDate } = this.props\n        const prestatus = this.state.PreStatus\n        const preinterstatus = this.state.PreIntervalStatus\n        const precid = this.state.PreCID\n        const prepickerdate = this.state.PrePickerDate\n        if (prepickerdate !== PickerDate || caseinfo.CASEID !== precid || IntervalStatus !== preinterstatus || Status !== prestatus) {\n            console.log(Status, IntervalStatus, caseinfo, PickerDate)\n            this.setState({ PreStatus: Status, PreIntervalStatus: IntervalStatus, PreCID: caseinfo.CASEID, PrePickerDate: PickerDate })\n            this.getAPI(caseinfo.CASEID, PickerDate, IntervalStatus, Status)\n        }\n    }\n    cellRender(arr) {\n        const { Status, IntervalStatus } = this.props\n        const mapcell = arr.map(function (value, index, array) {\n            return (\n                <div key={index} style={{ border: \"1px solid #eeeeee\", borderCollapse: \"collapse\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <t2>{parseInt(value)}</t2>\n                </div>\n            );\n        })\n        if (Status === \"Crossection\") {\n            return (\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4,1fr)\" }}>\n                    {mapcell}\n                </div>\n            );\n        }\n        else {\n            if (IntervalStatus === 0) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(24,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n            if (IntervalStatus === 1) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(18,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n            if (IntervalStatus === 2) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(21,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n            if (IntervalStatus === 3) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(14,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n        }\n    }\n    render() {\n        function pickerTimeArray(pickerdate, intervalstatus, status) {\n            const et = pickerdate + (31 * 60 * 60 * 1000)\n            var timearray = []\n            if (status === \"Crossection\") {\n                const st = pickerdate + (7 * 60 * 60 * 1000)\n                for (let index = 0; index < 3; index++) {\n                    const time = st + (index * 8 * 60 * 60 * 1000)\n                    timearray.push(time)\n                }\n            }\n            else {\n                //IntervalStatus 0:1天 1:3天 2:一週 3:兩週\n                if (intervalstatus === 0) {\n                    const st = et - (24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 24; index++) {\n                        const time = st + (index * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (intervalstatus === 1) {\n                    const st = et - (3 * 24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 18; index++) {\n                        const time = st + (index * 4 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (intervalstatus === 2) {\n                    const st = et - (7 * 24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 21; index++) {\n                        const time = st + (index * 8 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (intervalstatus === 3) {\n                    const st = et - (14 * 24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 14; index++) {\n                        const time = st + (index * 24 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n            }\n            return timearray\n        }\n\n        function starttime(status, intervalstatus, time) {\n            if (status === \"Crossection\") {\n                return time - (24 * 60 * 60 * 1000)\n            }\n            if (intervalstatus === 0) {\n                return time - (24 * 60 * 60 * 1000)\n            }\n            if (intervalstatus === 1) {\n                return time - (3 * 24 * 60 * 60 * 1000)\n            }\n            if (intervalstatus === 2) {\n                return time - (7 * 24 * 60 * 60 * 1000)\n            }\n            return time - (14 * 24 * 60 * 60 * 1000)\n\n        }\n\n        function IntervalToDataArray(startTime, status, intervalstatus, element) {\n            if (Array.isArray(element)) {\n                if (status === 'Crossection') {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (8 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                if (intervalstatus === 0) {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (1 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                if (intervalstatus === 1) {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (4 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                if (intervalstatus === 2) {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (8 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                const filterdata = element.filter(function (value, index, arr) {\n                    const valueTimeString = value.rec_dat + value.rec_tim\n                    const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                    const endTime = startTime + (24 * 60 * 60 * 1000)\n                    return valueTime > startTime && valueTime < endTime\n                })\n                return filterdata\n            }\n            return []\n        }\n\n        function SumforEach(arr) {\n            var sum = 0;\n            arr.forEach(function (element) {\n                sum += Number(element);\n            });\n            return sum;\n        }\n\n\n        function formatQDCtoIO(QDC) {\n            function caloriesCal(lost, value) {\n                if (lost === \"配方奶\") {\n                    return Number(value) * 0.8\n                }\n                if (lost === \"母奶\") {\n                    return Number(value) * 0.7\n                }\n                return 0\n            }\n            function caloriesCalonnam(nam, value) {\n                if (nam === null || nam === undefined || nam === \"\") {\n                    return 0\n                }\n                const namstring = nam.toString()\n                const valueNumber = Number(value)\n                if (valueNumber === null || valueNumber === undefined) { return 0 }\n                if (namstring.match(\"10%TPN\") !== null) { return valueNumber * 0.34 }\n                if (namstring.match(\"SMOFliquid\") !== null) { return valueNumber * 1.8 }\n                if (namstring.match(\"D10\") !== null) { return valueNumber * 0.34 }\n                if (namstring.match(\"D12\") !== null) { return valueNumber * 0.34 * 1.2 }\n                if (namstring.match(\"D50\") !== null) { return valueNumber * 0.34 * 5 }\n                if (namstring.match(\"taita\") !== null) { return valueNumber * 0.34 }\n                return 0\n            }\n            var FormatFeedingList = []\n            var FormatIVList = []\n            var FormatUrineList = []\n            var FormatOtherInList = []\n            var FormatOtherOutList = []\n            for (let index = 0; index < QDC.length; index++) {\n                const element = QDC[index];\n                const elementItem = element.item;\n                const time = moment(element.rec_dat.toString().trim() + element.rec_tim.toString().trim(), \"YYYYMMDDHHmm\").valueOf()\n                const nam = element.nam\n                const FeedingReg = RegQDC.Feeding\n                const filterFeedingStatus = FeedingReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterFeedingStatus) {\n                    FormatFeedingList.push({\n                        time: time,\n                        value: Number(element.inp_val2),\n                        calories: caloriesCal(element.lost, element.inp_val2),\n                        element: element\n                    })\n                }\n                const IVReg = RegQDC.IV\n                const filterIVStatus = IVReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterIVStatus) {\n                    FormatIVList.push({\n                        time: time,\n                        value: Number(element.inp_val1),\n                        calories: caloriesCalonnam(nam, element.inp_val1),\n                        element: element\n                    })\n                }\n                const UrineReg = RegQDC.Urine\n                const filterUrineStatus = UrineReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterUrineStatus) {\n                    FormatUrineList.push({\n                        time: time,\n                        value: Number(element.out_val2),\n                        calories: caloriesCalonnam(nam, element.out_val2),\n                        element: element\n                    })\n                }\n                const OtherReg = RegQDC.Other\n                const filterOtherStatus = OtherReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterOtherStatus) {\n                    const input_1 = Number(element.inp_val1)\n                    const output_1 = Number(element.out_val1)\n                    if (elementItem === \"排便\") {\n                        // FormatOtherInList.push({\n                        //     time: time,\n                        //     value: 1,\n                        //     calories: 0,\n                        //     element: element\n                        // })\n                        FormatOtherOutList.push({\n                            time: time,\n                            value: 1,\n                            calories: 0,\n                            element: element\n                        })\n                    }\n                    else {\n                        if (input_1 === null || input_1 === undefined) {\n                            FormatOtherOutList.push({\n                                time: time,\n                                value: Number(element.inp_val1),\n                                calories: caloriesCalonnam(nam, element.inp_val1),\n                                element: element\n                            })\n                        }\n                        if (output_1 === null || output_1 === undefined) {\n                            FormatOtherInList.push({\n                                time: time,\n                                value: Number(element.output_1),\n                                calories: 0,\n                                element: element\n                            })\n                        }\n                    }\n                }\n\n            }\n            return {\n                Feeding: FormatFeedingList,\n                IV: FormatIVList,\n                OtherIn: FormatOtherInList,\n                Urine: FormatUrineList,\n                OtherOut: FormatOtherOutList\n            }\n        }\n        function timerFormat(PickerDate, Interval, Status) {\n            const EndTime = PickerDate + (31 * 60 * 60 * 1000)\n            console.log(Status)\n            if (Status === 'Crossection') {\n                return {\n                    interval: 3,\n                    hourInterval: 8,\n                    startTime: EndTime - (24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            if (Interval === 0) {\n                return {\n                    interval: 24,\n                    hourInterval: 1,\n                    startTime: EndTime - (24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            if (Interval === 1) {\n                return {\n                    interval: 18,\n                    hourInterval: 4,\n                    startTime: EndTime - (3 * 24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            if (Interval === 2) {\n                return {\n                    interval: 21,\n                    hourInterval: 8,\n                    startTime: EndTime - (7 * 24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            return {\n                interval: 14,\n                hourInterval: 24,\n                startTime: EndTime - (14 * 24 * 60 * 60 * 1000),\n                endTime: EndTime\n            }\n        }\n        function listTimerFormat(List, timer, status) {\n            const inter = timer.interval\n            var TimerList = []\n            for (let index = 0; index < inter; index++) {\n                const st = timer.startTime + (index * timer.hourInterval * 60 * 60 * 1000)\n                const et = timer.startTime + ((index + 1) * timer.hourInterval * 60 * 60 * 1000)\n                const filterList = List.filter(function (info, index, arr) {\n                    const time = info.time\n                    return st <= time && time < et\n                })\n                TimerList.push(filterList)\n            }\n            if (status === 'Crossection') {\n                const st = timer.startTime\n                const et = timer.endTime\n                const filterListALL = List.filter(function (info, index, arr) {\n                    const time = info.time\n                    return st <= time && time < et\n                })\n                TimerList.push(filterListALL)\n            }\n            return TimerList\n        }\n\n        function sumIn(arr1, arr2, arr3) {\n            var sumlist = []\n            for (let index = 0; index < arr1.length; index++) {\n                const element1 = arr1[index];\n                const element2 = arr2[index];\n                const element3 = arr3[index];\n                const sum = element1 + element2 + element3\n                sumlist.push(sum)\n            }\n            return sumlist\n        }\n        function sumOut(arr1, arr2) {\n            var sumlist = []\n            for (let index = 0; index < arr1.length; index++) {\n                const element1 = arr1[index];\n                const element2 = arr2[index];\n                const sum = element1 + element2\n                sumlist.push(sum)\n            }\n            return sumlist\n        }\n        function sumInAndOut(Input, Outout) {\n            var sumlist = []\n            for (let index = 0; index < Input.length; index++) {\n                const element1 = Input[index];\n                const element2 = Outout[index];\n                const sum = parseFloat(element1 - element2).toFixed(1)\n                sumlist.push(sum)\n            }\n            return sumlist\n        }\n        function gridNumber(interval, status) {\n            if (status === \"Crossection\") {\n                return 4\n            }\n            return interval\n        }\n        function cellsum(list) {\n            const CellSum = list.map(function (info, index, arr) {\n                var sum = 0\n                for (let index = 0; index < info.length; index++) {\n                    const element = info[index];\n                    sum = sum + element.value\n                }\n                return sum\n            })\n            return CellSum\n        }\n        function cellRenderSum(Status, list, rows, type, IntervalStatus) {\n            const rowColorStyle = {\n                '0': {\n                    'SE': `rgba(15, 75, 175, 0.2)`,\n                    'Other': `rgba(15, 75, 175, 0.05)`,\n                },\n                '1': {\n                    'SE': `rgba(175,75,25,0.2)`,\n                    'Other': `rgba(175,75,25,0.05)`,\n                },\n                '2': {\n                    'SE': `rgba(100,180,200,.6)`,\n                    'Other': `rgba(100,180,200,.3)`,\n                }\n            }\n\n            const CellRender = list.map(function (info, index, arr) {\n                if (info.length === 0 || info.length === undefined) {\n                    return (\n                        <div key={index} style={{\n                            borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #eeeeee\", borderCollapse: 'collapse',\n                            borderLeft: calcBorderLeft(IntervalStatus, index, Status),\n                            backgroundColor: Status !== \"Crossection\" ? \"white\":index === 3 ? rowColorStyle[rows].SE:rowColorStyle[rows].Other}}>\n                            {Status === \"Crossection\" && <div style={{\n                                fontWeight: (Status === \"Crossection\" && index === 3) ? \"600\" : \"\",\n                                color: \"black\"\n                            }}>--</div>}\n                        </div>\n\n                    );\n                }\n                return (\n                    <div key={index} style={{\n                        borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #eeeeee\", borderCollapse: 'collapse',\n                        borderLeft: calcBorderLeft(IntervalStatus, index, Status),\n                        backgroundColor: Status !== \"Crossection\" ?\n                            (parseFloat(info) === '' ? 'white' : rowColorStyle[rows].Other):(index === 3 ? rowColorStyle[rows].SE : rowColorStyle[rows].Other)\n                    }}>\n                        {(parseFloat(info) === '' && Status !== \"Crossection\") || <div style={{\n                            fontWeight: (Status === \"Crossection\" && index === 3) ? \"600\" : \"\",\n                            color: (type === 1 && (parseFloat(info) < 0.5 || parseFloat(info) > 5)) ? \"red\"\n                                :\n                                type === 2 && parseFloat(info) < 0 ? \"red\"\n                                    :\n                                    type === 2 && parseFloat(info) >= 0 ? \"blue\" : \"black\"\n                        }}>\n                            {(parseFloat(info) === '' || parseFloat(info) === 0) ? '--'\n                                :\n                                parseFloat(info) >= 0 ? `+${parseFloat(info).toFixed(1)}` : parseFloat(info).toFixed(1)}\n                        </div>}\n                    </div>\n                );\n            })\n            return (\n                <div style={{ display: 'grid', gridTemplateColumns: 'repeat( ' + gridNumber(timerStruct.interval, Status) + ' ,1fr)' }}>\n                    {CellRender}\n                </div>\n            );\n        }\n        function cellRender(Status, list, rows, IntervalStatus) {\n            const rowColorStyle = {\n                '0': {\n                    'SE': `rgba(15, 75, 175, 0.2)`,\n                    'Other': `rgba(15, 75, 175, 0.05)`,\n                },\n                '1': {\n                    'SE': `rgba(175,75,25,0.2)`,\n                    'Other': `rgba(175,75,25,0.05)`,\n                },\n            }\n            const CellRender = list.map(function (info, index, arr) {\n                var sum = 0\n                if (info.length === 0 || info.length === undefined) {\n                    return (\n                        <div key={index} style={{\n                            borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #eeeeee\", borderCollapse: 'collapse',\n                            borderLeft: calcBorderLeft(IntervalStatus, index, Status),\n                            backgroundColor: Status !== \"Crossection\" ? \"white\"\n\n                                :\n                                index === 3 ? rowColorStyle[rows].SE\n                                    :\n                                    rowColorStyle[rows].Other\n                        }}>\n                            {Status === \"Crossection\" && <div style={{\n                                fontWeight: index === 3 ? \"600\" : \"\",\n                                color: \"black\"\n                            }}>--</div>}\n                        </div>\n                    );\n                }\n                for (let index = 0; index < info.length; index++) {\n                    const element = info[index];\n                    sum = sum + element.value\n                }\n                return (\n                    <div key={index} style={{\n                        borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #eeeeee\", borderCollapse: 'collapse',\n                        borderLeft: calcBorderLeft(IntervalStatus, index, Status),\n                        backgroundColor: Status !== \"Crossection\" ?\n                            (parseFloat(sum) === '' ? 'white' : rowColorStyle[rows].Other)\n\n                            :\n                            (index === 3 ? rowColorStyle[rows].SE : rowColorStyle[rows].Other)\n                    }}>\n                        {(parseFloat(sum) === '' && Status !== \"Crossection\") || <div style={{\n                            fontWeight: (Status === \"Crossection\" && index === 3) ? \"600\" : \"\",\n                            color: \"black\"\n                        }}>\n                            {parseFloat(info) === '' ? '--'\n                                : parseFloat(sum) === 0 ? parseFloat(sum) : parseFloat(sum).toFixed(1)}\n                        </div>}\n                    </div>\n                );\n            })\n            return (\n                <div style={{ borderCollapse: \"collapse\", display: 'grid', gridTemplateColumns: 'repeat( ' + gridNumber(timerStruct.interval, Status) + ' ,1fr)' }}>\n                    {CellRender}\n                </div>\n            );\n        }\n\n\n        function formatTime(time) {\n            if (Number(time) / 1000 >= 1) {\n                return time.toString().trim()\n            }\n            return \"0\" + time.toString().trim()\n        }\n\n        function stylechange(status) {\n            const chronicstyle = \"140px 1fr\"\n            const crossectionstyle = \"1fr 4fr\"\n            if (status === \"Crossection\") {\n                return crossectionstyle\n            }\n            else return chronicstyle\n        }\n\n        function urineforWeightAndHourCrossection(Urine, weight) {\n            const datamap = Urine.map(function (info, index, arr) {\n                var sum = 0\n                for (let index = 0; index < info.length; index++) {\n                    const element = info[index];\n                    sum = sum + element.value\n                }\n                if (sum === 0) {\n                    return 0\n                }\n                if (weight === null || weight === undefined) {\n                    return \"--\"\n                }\n                return parseFloat(sum / weight / 8).toFixed(1)\n            })\n            for (let index = 0; index < Urine.length; index++) {\n                const element = Urine[index];\n                console.log(element)\n\n            }\n            return datamap\n        }\n        const { Status, IntervalStatus, caseinfo, PickerDate } = this.props\n        const timeInterval = pickerTimeArray(PickerDate, IntervalStatus, Status)\n        const et = PickerDate + (31 * 60 * 60 * 1000)\n        const st = starttime(Status, IntervalStatus, et)\n        const WEIGHT = caseinfo.WEIGHT\n        const dateWeoght = WardState.selectweight(WEIGHT, PickerDate)\n        const QDCLIST = this.state.QDC\n        const Weight = 1000\n        const RegQDC = this.state.RegQDC\n        console.log(RegQDC, PickerDate)\n        if (RegQDC === null || RegQDC === undefined) { return null }\n        const formatData = formatQDCtoIO(QDCLIST)\n        const timerStruct = timerFormat(PickerDate, IntervalStatus, Status)\n        const feed = listTimerFormat(formatData.Feeding, timerStruct, Status)\n        const IV = listTimerFormat(formatData.IV, timerStruct, Status)\n        const OtherIn = listTimerFormat(formatData.OtherIn, timerStruct, Status)\n        const sumin = sumIn(cellsum(feed), cellsum(IV), cellsum(OtherIn))\n        const Urine = listTimerFormat(formatData.Urine, timerStruct, Status)\n        const UrinForUnit = urineforWeightAndHourCrossection(Urine, 1000)\n        const OtherOut = listTimerFormat(formatData.OtherOut, timerStruct, Status)\n        const sumout = sumOut(cellsum(Urine), cellsum(OtherOut))\n        console.log(Urine)\n        const sumInTotal = sumInAndOut(sumin, sumout)\n        //====================================================================\n\n\n        const titleInarray = ['進食', '點滴', '其他', '總輸入']\n        const titleOutarray = ['排尿', 'ml/kg/hr', '其他', '總排出']\n        const TitleCellIn = titleInarray.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ border: \"1px solid #eeeeee\", borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', backgroundColor: \"rgba(15,75,175,0.2)\" }}>\n                    <t2>{value}</t2>\n                </div>\n            );\n        })\n\n        const TitleCellOut = titleOutarray.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ border: \"1px solid #eeeeee\", borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', backgroundColor: \"rgba(175,75,25,0.2)\" }}>\n                    <t2>{value}</t2>\n                </div>\n            );\n        })\n        return (\n            <div>\n                <div style={{ display: \"grid\", gridTemplateColumns: stylechange(Status) }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"40px 40px 40px 40px\" }}>\n                        {TitleCellIn}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"40px 40px 40px 40px\" }}>\n                        {cellRender(Status, feed, '0', IntervalStatus)}\n                        {cellRender(Status, IV, '0', IntervalStatus)}\n                        {cellRender(Status, OtherIn, '0', IntervalStatus)}\n                        {cellRenderSum(Status, sumin, '0', 0, IntervalStatus)}\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: stylechange(Status), marginTop: \"8px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"40px 40px 40px 40px\", borderCollapse: \"collapse\" }}>\n                        {TitleCellOut}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"40px 40px 40px 40px\", borderCollapse: \"collapse\" }}>\n                        {cellRender(Status, Urine, '1', IntervalStatus)}\n                        {cellRenderSum(Status, UrinForUnit, '1', 1, IntervalStatus)}\n                        {cellRender(Status, OtherOut, '1', IntervalStatus)}\n                        {cellRenderSum(Status, sumout, '1', 0, IntervalStatus)}\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: stylechange(Status), marginTop: \"8px\" }}>\n                    <div style={{ border: \"1px solid #eeeeee\", borderCollapse: \"collapse\", display: \"flex\", alignItems: \"center\", backgroundColor: Status === \"Crossection\" ? \"rgba(100,180,200,.6)\" : \"#eeeeee\", height: \"40px\" }}>\n                        {Status === \"Crossection\" ?\n                            <t2 style={{ fontSize: \"16px\", fontWeight: \"600\" }}>I-O</t2>\n                            :\n                            <t2 >IO</t2>}\n                    </div>\n                    {cellRenderSum(Status, sumInTotal, '2', 2, IntervalStatus)}\n                    {/* {totalcell} */}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default IOpage;\n","import React, { Component } from 'react';\nimport IOpage from '../../Module/iopage'\nimport moment from 'moment';\n\n\nclass CrossectionIo extends Component {\n    render() {\n        const { caseinfo, title, PickerDate } = this.props\n        const titlearray = ['白班', '小夜', '大夜', '全日']\n        const titlelab = titlearray.map(function (info, index) {\n            return (\n                <centerstyle key={index}>\n                    <t2 style={{ fontWeight: index === 3 ? '600' : \"\" }}>{info}</t2>\n                </centerstyle>\n            );\n        })\n        // console.log(moment(PickerDate).format('MM/DD'))\n        return (\n            //510\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t1 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t1>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr\", height: \"40px\" }}>\n                    <div style={{ display: 'flex', justifyContent: \"center\", alignItems: \"center\" }}>{moment(PickerDate).format('M/DD')}</div>\n                    {titlelab}\n                </div>\n                <IOpage PickerDate={PickerDate} caseinfo={caseinfo} Status={\"Crossection\"} IntervalStatus={0}></IOpage>\n            </div>\n        );\n    }\n}\n\nexport default CrossectionIo\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport * as ApiGithub from '../../API/ApiGithub'\nimport './NonlabviewtableCell.scss'\n\nconst STATUS_REPORT = 0\n\nexport default class NonlabviewtableCell extends Component {\n    state = {\n        Result: [],\n        parser: { \"mappings\": [] },\n        summary_str: \"--\",\n        RESDISP: []\n    }\n\n    componentDidMount() {\n        //call API\n        const { caseId, hisId, month, seq, name, time, status } = this.props;\n\n        if (caseId !== undefined && hisId !== undefined && month !== undefined && seq !== undefined) {\n            ApiProvider.getStoredProcedureRESDISP(hisId.trim(), month, caseId.trim(), seq)\n                .then(result => {\n                    console.log(\"getStoredProcedureRESDISP OK \" + JSON.stringify(result.data));\n                    //const fakeData = [{\"RECNO\":\"1\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"正式報告\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"2\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"                                臺北榮民總醫院兒童醫學部報告\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"3\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  病患資訊：      新生兒加護病房 - 1 黃苡齊 4565531-0 女性 5月大 NBD\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"4\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  申請序號 / 工作號：  0ANWCEA/            開立時間：   20200115    0304\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"5\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  開醫囑者：                     簽收時間：   20200115    0305\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"6\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  報告人 ：       NUR2325 袁藝榛         報告時間：   20200115    0305\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"7\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  檢體 ：        Blood\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"8\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"  醫囑名稱：      BLOOD GAS\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"9\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   Sample:(Capillary)\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"10\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   PH:  (7.37)      Hb:   ()       BUN: ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"11\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   PO2:  (43)  mmHg   Hct:  (39)  %     Cr:  ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"12\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   PCO2: (59)  mmHg   FIO2:  (40.0) %\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"13\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   HCO3: (34.1) mmol/L  NA+:  (151)  mmol/L\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"14\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   BE:  (7.1)  mmol/L  K+:   (6.0)  mmol/L\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"15\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   SAT:  (77)  %     Cl-:  ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"16\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   TCO2: (35.9) mmol/L  iCA++: (1.44) mmol/L\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"17\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"                AnGap: ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"18\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"                MG++:  ()\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"19\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"},{\"RECNO\":\"20\",\"PARTNO\":\"01 \",\"HISTNO\":\"45655310  \",\"ORBGNDT\":\"2020-01-15\",\"CONTENT\":\"   COMMENT:\",\"ORDSEQ\":\"1220\",\"CASENO\":\"25026885\"}];\n\n                    this.setState({\n                        RESDISP: result.data\n                        //RESDISP: fakeData\n                    })\n\n                    let input = {\n                        item_name: name.trim(),\n                        content: \"\",\n                        sample: \"\",\n                        lab: \"\",\n                        datatime: moment(time).format(\"YYYY-MM-DD HH:mm\")\n                    }\n\n                    //fakeData.forEach(item => {\n                    result.data.forEach(item => {\n                        input.content = `${input.content} \"\\n\" ${item.CONTENT}`;\n                    });\n\n                    //status 0:正式報告 只有0需要做parse\n                    //console.log(\"status: \" + JSON.stringify(status));\n                    if (parseInt(status) === STATUS_REPORT) {\n                        ApiGithub.getGitHubJson(\"Summary.json\")\n                            .then(data => {\n                                console.log(\"get Summary.json OK \" + JSON.stringify(data.data));\n\n                                const selected_parser = this.select_parser(input, data.data)\n                                console.log(\"selected_parser \" + JSON.stringify(selected_parser));\n                                this.setState({\n                                    parser: selected_parser\n                                })\n\n                                if (selected_parser !== undefined) {\n                                    const result_kv_pairs = this.parse(input, selected_parser)\n                                    console.log(\"result_kv_pairs \" + JSON.stringify(result_kv_pairs));\n\n                                    const summary_str = this.summerize(result_kv_pairs, selected_parser)\n                                    console.log(\"summary_str \" + JSON.stringify(summary_str));\n\n                                    this.setState({\n                                        summary_str: summary_str\n                                    })\n                                }\n                            })\n                            .catch(err => {\n                                console.log(err)\n                            })\n                    }\n                })\n                .catch(err => {\n                    console.log(\"getStoredProcedureRESDISP NG \" + JSON.stringify(err));\n                });\n        }\n    }\n\n    select_parser = (input, parsers) => {\n        return parsers.find(x =>\n            input.item_name.match(x.apply_condition.name)\n            && (!x.apply_condition.sample || input.sample.match(x.apply_condition.sample))\n            && (!x.apply_condition.lab || input.lab.match(x.apply_condition.lab))\n            && (!x.apply_condition.start_time || input.datetime >= x.apply_condition.start_time)\n            && (!x.apply_condition.end_time || input.datetime < x.apply_condition.end_time)\n        )\n    }\n\n    parse = (input, parser) => {\n        let mappings = parser.mappings\n        let content = input.content\n        let result = {}\n        mappings.forEach(mapping => {\n            const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n            const match = content.match(re)\n            result[mapping.key] = match && match[mapping.position]\n        });\n        return result;\n    }\n\n    summerize = (kv_pairs, parser) => {\n        let summary_str = parser.summary\n        for (const key in kv_pairs) {\n            let match_replacer = summary_str.match(RegExp(\"\\\\[\" + key + \"(;(.*?))?\\\\]\"))\n            let replacer = \"\"\n            if (match_replacer && match_replacer.length === 3) {\n                replacer = match_replacer[2]\n            }\n            summary_str = summary_str.replace(RegExp(\"\\\\[\" + key + \"(;.*?)?\\\\]\"), kv_pairs[key] || replacer)\n        }\n        return summary_str;\n    }\n\n    render() {\n        function statusFormat(status) {\n            if (status === 0) {\n                return \"正式報告\"\n            }\n            if (status === 1) {\n                return \"已簽收\"\n\n            }\n            if (status === 2) {\n                return \"待送檢\"\n            }\n            return status\n        }\n        //status 0:正式報告 只有0需要做parse\n        const { time, name, status, come, showModal } = this.props;\n        const { summary_str, RESDISP } = this.state;\n        const statusRender = statusFormat(status)\n        const canShowReport = parseInt(status) === 0\n        return (\n            <div style={{ height: \"40px\", display: \"grid\", gridTemplateColumns: \"90px 250px 80px 80px 1fr\" }}>\n                <t3 className='nonlabteblecell'>{moment(time).format('MM/DD HH:mm')}</t3>\n                <t3 className='nonlabteblecell'>{name}</t3>\n                <t3 className='nonlabteblecell'>{come}</t3>\n                <t3 className='nonlabteblecell'>{statusRender}</t3>\n                {canShowReport && <t3 className='nonlabteblecell' onClick={() => showModal(RESDISP)} style={{ color: \"blue\", textDecoration: \"underline\", cursor: \"pointer\" }}>{summary_str}</t3>}\n                {!canShowReport && <t3 className='nonlabteblecell'>{summary_str}</t3>}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nclass ExamReportModal extends Component {\n    render() {\n        const reportDetail = this.props.report\n        const showDetail = reportDetail.map((data, index) => {\n            return data.CONTENT !== \"\" ? <div key={ \"ExamReportModal\" + index } style={{ whiteSpace: \"pre-wrap\" }}>{data.CONTENT}</div> : \"\"\n        })\n        return (\n            <div>{showDetail}</div>\n        );\n    }\n}\n\nexport default ExamReportModal\n","import React, { Component } from 'react';\nimport './Nonlabviewtable.scss'\nimport NonlabviewtableCell from './NonlabviewtableCell'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider'\nimport { Modal } from 'antd';\nimport InsReportModal from '../ExamReportModal'\nimport * as ORDERLIST from '../../Resource/ORDERLIST'\n\nclass Nonlabviewtable extends Component {\n    state = {\n        visible: false,\n\n        modalVisible: false,\n        modalReport: \"\",\n        ORDLIST: [],\n        RESSECT: []\n    }\n    componentDidMount() {\n        this.nonLabApiGet()\n    }\n    nonLabApiGet() {\n        function selectMonthInterval(storeProcedureTime) {\n            const timestampInterval = moment() - moment(storeProcedureTime, \"YYYY-MM-DD\").valueOf()\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        // ApiProvider.getStoredProcedureRESSECT(caseinfo.HISID, MonthInterval, \"ALL\", \"DOC3924B\")\n        //     .then(data => { this.setState({ RESSECT: data.data }) })\n        //     .catch(err => { console.log(\"getStoredProcedureRESSECT NG \" + JSON.stringify(err)) });\n        const { caseinfo } = this.props\n        const storeProcedureTime = moment(caseinfo.TRANSINDT, \"YYYYMMDD\").format(\"YYYY-MM-DD\")\n        const MonthInterval = selectMonthInterval(storeProcedureTime)\n        ApiProvider.getStoredProcedureORDLIST(caseinfo.HISID, storeProcedureTime, \"ALL\", \"DOC3924B\")\n            .then(data => { this.setState({ ORDLIST: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureORDLIST NG \" + JSON.stringify(err)) });\n        // this.setState({ ORDLIST: ORDERLIST.data })\n    }\n    showModal = (report) => {\n        console.log(\"showModal :\" + JSON.stringify(report))\n        this.setState({\n            modalVisible: true,\n            modalReport: report\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n    render() {\n        function ORDLISTFormat(ORDLIST, StartTime, EndTime) {\n            var ORDLIST_Format = []\n            if (Array.isArray(ORDLIST)) {\n                for (let index = 0; index < ORDLIST.length; index++) {\n                    const element = ORDLIST[index];\n                    const elemetnStatus = Number(element.ORSTATUS)\n                    const elementORBGNTime = moment(element.ORBGNDT.toString().trim() + element.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n                    if (StartTime <= elementORBGNTime && elementORBGNTime <= EndTime) {\n                        if (elemetnStatus === 64) {\n                            //正式報告\n                            ORDLIST_Format.push({\n                                time: elementORBGNTime,\n                                status: 0,\n                                element: element\n                            })\n                        }\n                        if (elemetnStatus === 38) {\n                            //已簽收 \n                            ORDLIST_Format.push({\n                                time: elementORBGNTime,\n                                status: 1,\n                                element: element\n                            })\n                        }\n                        if (elemetnStatus === 31) {\n                            //待送檢\n                            ORDLIST_Format.push({\n                                time: elementORBGNTime,\n                                status: 2,\n                                element: element\n                            })\n                        }\n                        if (elemetnStatus === 82 || elemetnStatus === 60 || elemetnStatus === 61) {\n                            //已取消 不顯示\n                            continue\n                        }\n                        //Other\n                        ORDLIST_Format.push({\n                            time: elementORBGNTime,\n                            status: elemetnStatus,\n                            element: element\n                        })\n                    }\n                }\n            }\n            return ORDLIST_Format\n        }\n        const { modalVisible, modalReport, ORDLIST } = this.state\n        const { StartTime, EndTime } = this.props\n        const FormatList = ORDLISTFormat(ORDLIST, StartTime, EndTime)\n        const showModal = this.showModal\n        const handleOk = this.handleOk\n        const handleCancel = this.handleCancel\n        const nonlabcell = FormatList.map(function (value, index, array) {\n            const come = value.element.ORSPCN1;\n            const time = value.time\n            const name = value.element.ORPROCED;\n            const status = value.status;\n            return (\n                <NonlabviewtableCell key={\"Nonlabviewtable\" + index} come={come} time={time} name={name} statis={status} hisId={value.element.ORHISTNO} caseId={value.element.ORDSEQCN} month={value.element.ORMM} seq={value.element.ORDSEQNO} showModal={showModal}></NonlabviewtableCell>\n            );\n        })\n        const title = [\"時間\", \"檢驗項目\", \"檢體\", \"狀態\", \"報告\"]\n        const titlecell = title.map(function (value, index, arr) {\n            const tempStyle = index == 1\n            return (\n                <t3 className='nonlabtebletitlecell' style={{ justifyContent: tempStyle ? \"left\" : \"center\" }}>{value}</t3>\n            );\n        })\n\n\n        return (\n            <div>\n                <div style={{ height: \"30px\", border: \"rgba(238,238,238,1) 1px solid\", backgroundColor: \"rgba(226, 237, 243,.5)\", display: \"grid\", gridTemplateColumns: \"90px 250px 80px 80px 1fr\" }}>\n                    {titlecell}\n                </div>\n                {JSON.stringify(FormatList) !== '[]' ?\n                    <div className='nonlabviewtable'>{nonlabcell} </div>\n                    :\n                    <div style={{ height: \"50px\", paddingLeft: \"3.5%\", display: \"flex\", alignItems: \"center\" }}>\n                        無資料\n                    </div>}\n                <Modal\n                    title={\"檢驗結果\"}\n                    visible={modalVisible}\n                    onOk={handleOk}\n                    onCancel={handleCancel}\n                    width={1000}\n                    footer={null}>\n                    <InsReportModal report={modalReport}></InsReportModal>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Nonlabviewtable\n","import React, { Component } from 'react';\nimport Nonlabviewtable from './Nonlabviewtable'\n\n\nclass Nonlabviewlayout extends Component {\n    render() {\n        // const { PickerDate } = this.props\n        // const { modalVisible, modalReport } = this.state\n        // const showModal = this.showModal\n        // const handleOk = this.handleOk\n        // const handleCancel = this.handleCancel\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t1 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>近三日報告清單</t1>\n                </div>\n                <Nonlabviewtable caseinfo={this.props.caseinfo} StartTime={this.props.StartTime} EndTime={this.props.EndTime}></Nonlabviewtable>\n            </div>\n        );\n    }\n}\n\nexport default Nonlabviewlayout\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider'\n\nclass RTtable extends Component {\n    state = {\n        RESDBGAS: [],\n        PreHID: null,\n        PreTransInDate: null,\n    }\n    componentDidMount() {\n        const HID = this.props.caseinfo.HISID\n        const TRDT = this.props.caseinfo.TRANSINDT\n        this.setState({ PreHID: HID, PreTransInDate: TRDT })\n        this.getGasAPI()\n    }\n    componentDidUpdate() {\n        const HID = this.props.caseinfo.HISID\n        const TRDT = this.props.caseinfo.TRANSINDT\n        const PreHID = this.state.PreHID\n        const PreTRDT = this.state.PreTransInDate\n        if (HID !== PreHID || TRDT !== PreTRDT) {\n            this.setState({ PreHID: HID, PreTransInDate: TRDT })\n            this.getGasAPI()\n        }\n    }\n    getGasAPI() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID\n        const TransInDate = moment(caseinfo.TRANSINDT, \"YYYYMMDD\").format(\"YYYY-MM-DD\")\n        ApiProvider.getStoredProcedureRESDBGAS(HID, TransInDate)\n            .then(data => { this.setState({ RESDBGAS: data.data }) })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDBGAS NG \" + JSON.stringify(err));\n            });\n    }\n    GasListToCell = () => {\n        function formatGasData(GasDataList, st, et) {\n            let filterTimer = GasDataList.filter(function (element, index, arr) {\n                const timeStamp = moment(element.ORRESDT.toString().trim() + element.ORRESTM.toString().trim(), 'YYYY-MM-DDHH.mm.ss').valueOf()\n                return st <= timeStamp && timeStamp <= et\n            })\n\n            filterTimer = filterTimer.sort((a, b) => {\n                let tempTimeA = moment(a.ORRESDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n                let tempTimeB = moment(b.ORRESDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n\n            const decideStyle = {\n                \"1\": { \"min\": 6.5, \"max\": 7.7 },\n                \"2\": { \"min\": 0, \"max\": 100 },\n                \"3\": { \"min\": 0, \"max\": 200 },\n                \"4\": { \"min\": 0, \"max\": 40 },\n                \"5\": { \"min\": -30, \"max\": 20 },\n                \"6\": { \"min\": 0, \"max\": 100 },\n                \"7\": { \"min\": 0, \"max\": 100 }\n            }\n\n            const cellMap = filterTimer.map(function (element, index, arr) {\n                const PHValue = element.SS07\n                const PCO2Value = element.SS06\n                const PO2Value = element.SS08\n                const HCO3Value = element.SS04\n                const BEValue = element.SS01\n                const O2SatValue = element.SS05\n                const FiO2Value = element.SS03\n                const timeStamp = moment(element.ORRESDT.toString().trim() + element.ORRESTM.toString().trim(), 'YYYY-MM-DDHH.mm.ss').valueOf()\n                const time = moment(timeStamp).format(\"MM/DD HH:mm\")\n                const gasDataArray = [time, PHValue, PCO2Value, PO2Value, HCO3Value, BEValue, O2SatValue, FiO2Value]\n                const GasCell = gasDataArray.map(function (value, index, array) {\n                    let tempStyle = false\n                    const tempValue = parseFloat(value)\n\n                    if (index != 0 && (tempValue > decideStyle[index.toString()].max || tempValue < decideStyle[index.toString()].min) || isNaN(tempValue) == true) {\n                        tempStyle = true;\n                    }\n\n                    return (\n                        <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\" }}>\n                            <t2 style={{ color: tempStyle ? \"red\" : \"black\", fontWeight: 600 }}>{value}</t2>\n                        </centerstyle>\n                    );\n                })\n                return (\n                    <div key={index} style={{ height: \"40px\", display: \"grid\", gridTemplateColumns: \"110px repeat(7,1fr)\" }}>{GasCell}</div>\n                );\n            })\n            return cellMap\n\n        }\n        const { Timer } = this.props\n        const startTime = Timer[0]\n        const endTime = Timer[1]\n        const GasData = this.state.RESDBGAS\n        const CellRander = formatGasData(GasData, startTime, endTime)\n        //for loop filter three days\n\n        return CellRander\n    }\n\n    render() {\n        const GasTitleList = ['時間', 'pH', `PCO2`, 'PO2', 'HCO2', 'BE', 'O2SAT', 'FiO2']\n        // const GasTitleList = ['時間', 'pH', `PCO`, 'PO', 'HCO', 'BE', 'O2SAT', 'FiO']\n        const GasTitleCell = GasTitleList.map(function (value, index, array) {\n            // let temp = value == 'PCO' || value == 'PO' || value == 'HCO' || value == 'FiO' ? true : false\n            const tempSub = value.indexOf(2) !== -1\n            let tempValue = []\n            if (tempSub) {\n                tempValue = value.split(2).filter(String)\n                tempValue = tempValue.map((value, index) => {\n                    return (\n                        <div style={{ fontSize: \"14px\" }}>\n                            {value}\n                            {index === 0 && <sub>2</sub>}\n                        </div>\n                    )\n                })\n            }\n\n            return (\n                <centerstyle key={index} style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", borderCollapse: \"collapse\" }}>\n                    {tempSub ? tempValue : <div style={{ fontSize: \"14px\" }}>{value}</div>}\n                </centerstyle>\n            );\n        })\n        const GasListToCell = this.GasListToCell()\n\n        return (\n            <div>\n                <div style={{ justifyItems: \"center\", height: \"30px\", border: \"rgba(238,238,238,1) 1px solid\", backgroundColor: \"rgba(226, 237, 243,.5)\", display: \"grid\", gridTemplateColumns: \"110px repeat(7,1fr)\" }}>\n                    {GasTitleCell}\n                </div>\n                {\n                    GasListToCell.length !== 0 ?\n                        <div style={{ minHeight: \"120px\", maxHeight: \"400px\", overflowY: \"auto\" }}>\n                            {GasListToCell}\n                        </div>\n                        :\n                        <div style={{ height: \"50px\", paddingLeft: \"5%\", display: \"flex\", alignItems: \"center\" }}>\n                            無資料\n                    </div>\n                }\n            </div >\n        );\n    }\n}\n\nexport default RTtable\n","import React, { Component } from 'react';\nimport RTtable from './RTtable'\nclass GAS extends Component {\n\n\n    render() {\n        const { caseinfo, PickerDateRange, searchbar } = this.props\n\n        return (\n            <div style={{ marginBottom: \"20px\" }}>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>\n                        {searchbar ? \"GAS累積報告\" : \"近三日血液氣體分析\"}\n                    </t2>\n                </div>\n                <RTtable Timer={PickerDateRange} caseinfo={caseinfo}></RTtable>\n            </div>\n        );\n    }\n}\n\nexport default GAS\n","import React, { Component } from 'react';\nimport { Modal, Input } from 'antd';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nexport default class RemarkModal extends Component {\n    state = {\n        remark: this.props.remarkValue.remark,\n        editor: this.props.remarkValue.editor,\n    }\n\n\n\n    componentDidMount() {\n        console.log(\"RemarkModal componentDidMount\");\n        console.log(\"RemarkModal caseinfo: \" + JSON.stringify(this.props.caseinfo));\n        this.onInputChange = this.onInputChange.bind(this);\n        this.onOkClick = this.onOkClick.bind(this);\n    }\n\n    onInputChange(event) {\n        this.setState({ remark: event.target.value })\n    }\n\n    onOkClick() {\n        const { name, transinId, type, remarkId } = this.props.remarkValue\n        const { remark, editor, } = this.state;\n        let fixTime = moment().format('X');\n\n\n        // console.log(`editor : ${editor}`)\n        // console.log(`name : ${name}`)\n        // console.log(`remark : ${remark}`)\n        // console.log(`remarkId : ${remarkId}`)\n        // console.log(`fixTime: ${fixTime}`)\n        // console.log(`transinId : ${transinId}`)\n        // console.log(`type : ${type}`)\n\n        ApiProvider.createRemark(name, remark, remarkId, fixTime, transinId, type, editor)\n            .then(result => {\n                console.log(\"createRemark OK \" + JSON.stringify(result));\n                this.props.onOk(result.data.remark);\n            })\n            .catch(err => {\n                console.log(\"createRemark NG \" + JSON.stringify(err));\n            });\n    }\n\n    render() {\n        const { TextArea } = Input;\n        const { createTime, name } = this.props.remarkValue;\n        const onCancel = this.props.onCancel;\n        const onOk = this.onOkClick.bind(this);\n\n        return (\n            <Modal\n                title=\"註記功能\"\n                visible={this.props.visible}\n                onOk={onOk}\n                okText=\"儲存\"\n                cancelText=\"取消\"\n                onCancel={onCancel}>\n                <div style={{ display: \"grid\", gridTemplateRows: \"30px 30px 30px 30px\" }}>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div>開立時間: {createTime}</div>\n                        <div>上次編輯時間: </div>\n                        {/* <div>上次編輯時間: {this.state.editTime}</div> */}\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div>處理名稱: {name}</div>\n                        <div>上次編輯者: {this.state.editor}</div>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div>頻次:</div>\n                        <div>開立醫師: {this.state.editor}</div>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>註記內容:</div>\n                    <TextArea rows={5} placeholder=\"請輸入備註內容\" value={this.state.remark} onChange={this.onInputChange} />\n                </div>\n            </Modal>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './RTbreathtablecell.scss'\n// import * as FiliterReg from '../../Function/FiliterReg'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass RTbreathetablecell extends Component {\n    state = {\n        onCell: false,\n        onEdit: false,\n        remark: '',\n        powerLogin: 0\n    }\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n    Mouse_move() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onCell: true\n                }\n            )\n        }\n    }\n\n    Mouse_leave() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onCell: false\n                }\n            )\n        }\n    }\n\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    }\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    seachRemark = () => {\n        const { caseinfo, value } = this.props\n        console.log(value)\n        const id = `Breath${moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").valueOf()}`\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, id, \"RTbreath\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    render() {\n        const { value, caseinfo } = this.props\n        console.log(value)\n        const id = `Breath${moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").valueOf()}`\n        const time = moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\")\n        const mode = value.Mode.toString().trim()\n        const setting = value.Setting\n\n        const remarkValue = {\n            \"createTime\": time,\n            \"name\": setting,\n            \"remarkId\": id,\n            \"remark\": this.state.remark,\n            \"transinId\": caseinfo.TRANSINID,\n            \"type\": \"RTbreath\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <div>\n                <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n                <div onMouseMove={() => this.Mouse_move()} onMouseLeave={() => this.Mouse_leave()} className=\"RTtablecell\" style={{ height: this.state.remark ? '60px' : '40px' }}>\n                    <t3 className='RTBreathDateCell' style={{ height: this.state.remark ? '60px' : '40px' }}>{time}</t3>\n                    <div style={{ display: \"grid\", gridTemplateRows: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"40px\" : \"40px 20px\"] }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"2.5fr 6fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\", padding: \"0px 5px\" }}>{mode}</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\", padding: \"0px 5px\" }}>{setting}</div>\n                        </div>\n                        <t3 style={{ alignItems: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\", padding: \"0px 5px\", color: \"rgb(0,120,00)\", fontWeight: 400, height: \"20px\", display: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"none\" : \"\"] }}>{this.state.remark}</t3>\n                    </div>\n                    <div style={this.state.onCell ? { display: this.state.powerLogin == 1 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", right: 0, height: this.state.remark ? '60px' : '40px', background: \"transparent\", width: \"77px\", border: \"rgba(238,238,238,1) 1px solid\" } : { display: \"none\" }}>\n                        <div onClick={() => this.Edit_state()} style={{ width: this.state.remark ? '40px' : '30px', height: this.state.remark ? '40px' : '30px', borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }}>\n                            <img src={chooseedit} alt='chooseedit'></img>\n                        </div>\n                    </div>\n                </div>\n                <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            </div>\n        );\n    }\n}\n\nexport default RTbreathetablecell\n","import React, { Component } from 'react';\nimport RTbreathetablecell from './RTbreathtablecell'\n// import * as FilterReg from '../../Function/FiliterReg'\n// import moment from 'moment'\n\nclass RTbreathetable extends Component {\n    createRTbreathetable = () => {\n        const { DataList, caseinfo, searchbar } = this.props\n\n        const RTbreathetable = DataList.map(\n            (value, index, array) =>\n                <RTbreathetablecell key={index} value={value} caseinfo={caseinfo} searchbar={searchbar}></RTbreathetablecell>\n        )\n\n        return DataList.length !== 0 ? RTbreathetable :\n            <div style={{ height: \"50px\", paddingLeft: \"3.5%\", display: \"flex\", alignItems: \"center\" }}>\n                無資料\n                    </div>\n    }\n\n    render() {\n        const title = [\"時間\", \"模式\", \"設定\"]\n        const titleCellRender = title.map(function (element, index, arr) {\n            return (\n                <div key={index} style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", borderCollapse: \"collapse\" }}>\n                    <div style={{ fontSize: \"14px\" }}>{element}</div>\n                </div>\n            );\n        })\n\n        return (\n            <div>\n                <div style={{ height: \"30px\", display: \"grid\", gridTemplateColumns: \"90px 1fr 3fr\", backgroundColor: \"rgba(226, 237, 243,.5)\", border: \"rgba(238,238,238,1) 1px solid\", justifyItems: \"center\" }}>\n                    {titleCellRender}\n                </div>\n                <div style={{ maxHeight: \"400px\", overflow: \"auto\" }}>\n                    {this.createRTbreathetable()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTbreathetable\n","import React, { Component } from 'react';\nimport RTbreathetable from './RTbreathetable'\n// import { DatePicker } from 'antd';\nimport * as FilterReg from '../../Function/FiliterReg'\nimport X2JS from 'x2js';\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as QSPEList from '../../Resource/QSPE'\n\nclass RTbreathe extends Component {\n    state = {\n        preCID: null,\n        QSPE: []\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDateRange } = this.props\n        this.setState({ preCID: caseinfo.CASEID, preST: PickerDateRange[0], preET: PickerDateRange[1] })\n        this.getQSPEApi(caseinfo.CASEID, PickerDateRange[0], PickerDateRange[1])\n\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDateRange } = this.props\n        const { preCID, preST, preET } = this.state\n        const CID = caseinfo.CASEID\n        const ST = PickerDateRange[0]\n        const ET = PickerDateRange[1]\n        if (CID !== preCID || ST !== preST || ET !== preET) {\n            this.setState({ preCID: caseinfo.CASEID, preST: PickerDateRange[0], preET: PickerDateRange[1] })\n            this.getQSPEApi(caseinfo.CASEID, PickerDateRange[0], PickerDateRange[1])\n        }\n    }\n    getQSPEApi(CID, st, et) {\n        const xm2 = new X2JS()\n        console.log(CID, st, et)\n        const start = moment(st).format(\"YYYYMMDDHHmm\")\n        const end = moment(et).format(\"YYYYMMDDHHmm\")\n        console.log(\"QSPE:\" + start, end)\n        ApiProvider.getQSPE(CID, start, end)\n            .then(data => {\n                console.log(xm2.xml2js(data.data).outmsg.resconts.rescont)\n                const result = xm2.xml2js(data.data).outmsg\n                if (Number(result.ret) === 0) {\n                    const resultData = result.resconts.rescont\n                    if (Array.isArray(resultData)) {\n                        this.setState({ QSPE: resultData })\n                    }\n                    else {\n                        this.setState({ QSPE: [resultData] })\n                    }\n                }\n                return []\n            })\n            .catch(err => {\n                console.log(\"getQSPE NG \" + JSON.stringify(err))\n            });\n    }\n\n    createRTbreathetable = () => {\n        const { caseinfo, PickerDateRange, searchbar } = this.props\n        const { QSPE } = this.state\n        let DataList = FilterReg.QSPERegList(QSPE)\n        //這邊不用再分時間\n        // DataList = DataList.filter(data => {\n        //     let time = moment(data.Date + data.Time, \"YYYYMMDDHHmm\").valueOf()\n        //     return PickerDateRange[0] <= time && time <= PickerDateRange[1]\n        // })\n\n        // DataList = DataList.sort((a, b) => {\n        //     let tempTimeA = moment(a.Date + a.Time, \"YYYYMMDDHHmm\").valueOf()\n        //     let tempTimeB = moment(b.Date + b.Time, \"YYYYMMDDHHmm\").valueOf()\n        //     return tempTimeA < tempTimeB ? 1 : -1\n        // })\n        return <RTbreathetable DataList={DataList} caseinfo={caseinfo} searchbar={searchbar}></RTbreathetable>\n    }\n\n    render() {\n        const { searchbar } = this.props\n        return (\n            <div style={{ marginBottom: \"20px\" }}>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>\n                        {searchbar ? \"呼吸器設定紀錄\" : \"近三日呼吸器設定\"}\n                    </t2>\n                </div>\n                {this.createRTbreathetable()}\n            </div>\n        );\n    }\n}\n\nexport default RTbreathe\n","import React, { Component } from 'react';\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Prescriptionordertablecell.scss'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Prescriptionordertablecell extends Component {\n    state = {\n        onEdit: false,\n        onMove: false,\n        remark: '',\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { caseinfo, value } = this.props\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, value.UDORDSEQ, \"prescription\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    on_Mouse() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: true\n                }\n            )\n        }\n    }\n    on_leave() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: false\n                }\n            )\n        }\n    }\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    checkStatus = () => {\n        const { value, SelectMode } = this.props\n        const ET = moment(value.UDENDDT, \"YYYY-MM-DD-HH:mm:ss.000000\").valueOf()\n\n        if (SelectMode !== 0) {\n            const Status = SelectMode === 0 || SelectMode === 1 ? \"生效中\" : \"已結束\";\n            return Status\n        } else {\n            const nowT = moment().valueOf()\n            const Status = ET < nowT ? \"已結束\" : \"生效中\";\n            return Status\n        }\n    }\n\n    render() {\n        const { caseinfo, value } = this.props\n        const Name = value.UDGNAME.toString()\n        const PName = value.UDRPNAME.toString()\n        const Unit = value.UDDOSAGE.toString() + \"/\" + value.UDDUNIT.toString() + \"/\" + value.UDFREQN.toString() + \"/\" + value.UDROUTE.toString()\n        const ST = moment(value.UDBGNDT, \"YYYY-MM-DD-HH:mm:ss.000000\").format('MM/DD HH:mm')\n        const ET = moment(value.UDENDDT, \"YYYY-MM-DD-HH:mm:ss.000000\").format('MM/DD HH:mm')\n        const Status = this.checkStatus()\n\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": PName,\n            \"remarkId\": value.UDORDSEQ,\n            \"remark\": this.state.remark,\n            \"transinId\": caseinfo.TRANSINID,\n            \"type\": \"prescription\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <div onMouseMove={() => this.on_Mouse()} onMouseLeave={() => this.on_leave()} className='prescriptiontablecell' style={{ height: this.state.remark ? '60px' : '40px' }}>\n                <div style={{ display: \"grid\", gridTemplateRows: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"40px\" : \"40px 20px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"180px 1fr 140px 70px\" }}>\n                        <div className='prescriptiontablecellcontext'><t3 className='prescriptiontablecellcontexttext'>{ST} - {ET}</t3></div>\n                        <div className='prescriptiontablecellcontext'><t2 className='prescriptiontablecellcontexttext' style={{ color: \"black\", fontWeight: 600 }}>{Name}</t2></div>\n                        <div className='prescriptiontablecellcontext'><t3 className='prescriptiontablecellcontexttext'>{Unit}</t3></div>\n                        <div className='prescriptiontablecellcontext'><t3 className='prescriptiontablecellcontexttext'>{Status}</t3></div>\n                    </div>\n                    <t3 style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\", padding: \"0px 5px\", color: \"rgb(0,120,00)\", fontWeight: 400, height: \"20px\", display: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"none\" : \"\"] }}>{this.state.remark}</t3>\n                    <div style={this.state.onMove ?\n                        { display: this.state.powerLogin == 1 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", right: 0, height: [this.state.remark === undefined || this.state.remark === \"\" ? \"40px\" : \"60px\"], background: \"transparent\", width: \"77px\", border: \"rgba(238,238,238,1) 1px solid\" }\n                        :\n                        { display: \"none\" }}>\n                        <div onClick={() => this.Edit_state()} style={{ width: this.state.remark ? '40px' : '30px', height: this.state.remark ? '40px' : '30px', borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }}>\n                            <img src={chooseedit} alt='chooseedit'></img>\n                        </div>\n                    </div>\n                </div>\n                <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            </div>\n        );\n    }\n}\n\nexport default Prescriptionordertablecell\n","import React, { Component } from 'react';\nimport Prescriptionordertablecell from './Prescriptionordertablecell'\nimport './Prescriptionordertable.scss'\n\n\nclass Prescriptionordertable extends Component {\n    render() {\n        const { UDORDER0, caseinfo, SelectMode } = this.props\n\n        const title = [\"時間起迄\", \"學名\", \"用法\", \"狀態\"]\n        const titlecell = title.map(function (value, index, arr) {\n            return (\n                <t3 className='title'>{value}</t3>\n            );\n        })\n        const Prescriptionordertabletable = UDORDER0.map(\n            (value, index, array) =>\n                <Prescriptionordertablecell caseinfo={caseinfo} key={index} value={value} SelectMode={SelectMode}></Prescriptionordertablecell>\n        )\n        return (\n            <div>\n                <div className='Prescriptionordertablelayout'>\n                    {titlecell}\n                </div>\n                <div style={{ minHeight: \"120px\", maxHeight: \"400px\", overflowY: \"auto\" }}>\n                    {JSON.stringify(UDORDER0) !== '[]' ?\n                        Prescriptionordertabletable\n                        :\n                        <div style={{ height: \"50px\", paddingLeft: \"4%\", display: \"flex\", alignItems: \"center\" }}>\n                            無資料\n                    </div>}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Prescriptionordertable\n","import React, { Component } from 'react';\nimport Prescriptionordertable from './Prescriptionordertable'\nimport { Select, Input } from 'antd';\nimport moment from 'moment'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as UDORDER from '../../Resource/UDORDER0'\n\nclass Prescriptionorderlayout extends Component {\n    state = {\n        classParser: { \"mappings\": [] },\n        class: \"全部類別\",\n        SelectMode: 0,\n        InputMode: null,\n        preHID: null,\n        preCID: null,\n        UDORDER0: []\n    }\n    componentDidMount() {\n        this.getGithub()\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        this.setState({ preHID: HID, preCID: CID })\n        this.getUDORDER0(HID, CID)\n    }\n    componentDidUpdate() {\n        const { caseinfo } = this.props\n        const { preHID, preCID } = this.state\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        if (HID !== preHID || CID !== preCID) {\n            this.setState({ preHID: HID, preCID: CID })\n            this.getUDORDER0(HID, CID)\n        }\n    }\n    getGithub() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Prescription\");\n                parser.mappings = [{ \"key\": \"全部類別\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson Prescription OK \" + JSON.stringify(parser))\n                this.setState({\n                    classParser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    getUDORDER0(HID, CID, Start, End) {\n\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                // const RowData = data.data\n                // const SortFromRangeDate = RowData.filter(function (info, index, arr) {\n                //     return\n                // })\n                this.setState({ UDORDER0: data.data })\n            })\n            .catch(err => { console.log(\"getStoredProcedureUDORDER0 NG \" + JSON.stringify(err)) });\n        // this.setState({ UDORDER0: UDORDER.data })\n    }\n\n\n    onChangeClass = (value) => {\n        this.setState({ class: value })\n    }\n\n    handleChange = (value) => {\n        this.setState({ SelectMode: value })\n    }\n\n    onChangeinputKey = (event) => {\n        this.setState({ InputMode: event.target.value })\n    }\n\n    ControlBarRender() {\n        const { Option } = Select;\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"110px 135px auto\", gridColumnGap: \"10px\" }}>\n                <Select defaultValue={this.state.class} style={{ width: 110 }} onChange={this.onChangeClass}>\n                    {this.state.classParser.mappings.map((mapping, index) => {\n                        return <Option value={mapping.key}>{mapping.key}</Option>\n                    })}\n                </Select>\n                <Select defaultValue={this.state.SelectMode} style={{ width: 135 }} onChange={this.handleChange}>\n                    <Option value={0}>全部狀態</Option>\n                    <Option value={1}>生效中</Option>\n                    <Option value={2}>失效/已結束/取消</Option>\n                </Select>\n                <Input id=\"prescriptionorderinput\" placeholder=\"輸入藥囑關鍵字\" onChange={this.onChangeinputKey} />\n            </div >\n        );\n    }\n\n    parseClass = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部類別\"] = []\n\n        inputs.forEach(input => {\n            let content = input.UDGNAME;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部類別\"].push(input)\n        });\n        return allResult;\n    }\n\n    onClickSearch = () => {\n        const { UDORDER0 } = this.state\n        const parseClass = this.parseClass\n\n        let ListData = [];\n        const activeList = UDORDER0.filter(element => element.UDSTATUS === \"80\")\n\n        let clusteredData = {}\n        if (this.state.classParser !== undefined) {\n            clusteredData = parseClass(activeList, this.state.classParser)\n        }\n\n        //filter data by selected class\n        let filteredData = clusteredData[this.state.class];\n\n        ListData = this.SortDataList(filteredData)\n        return ListData\n    }\n\n    SortDataList = (DataList) => {\n        const { PickerDateRange } = this.props\n        const { InputMode, SelectMode } = this.state\n\n        // if (SelectMode !== 0) {\n        //     console.log(SelectMode)\n        //     /*\n        //     預設\n        //     全部 SelectMode == 0\n        //     已生效 SelectMode == 1, < 現在時間 <\n        //     失效 SelectMode == 2, < 現在時間\n        //     */\n        //     DataList = DataList.filter(data => {\n        //         const createST = moment(data.UDBGNDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n        //         const createET = moment(data.UDENDDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n        //         const nowDate = moment().valueOf()\n\n        //         switch (SelectMode) {\n        //             case 1:\n        //                 return createST <= nowDate && nowDate <= createET\n        //             case 2:\n        //                 // console.log(createET, nowDate)\n        //                 return createET < nowDate\n        //             default: return null;\n        //         }\n        //     })\n        // }\n\n        if (InputMode !== null) {\n            // console.log(InputMode)\n            const regex = new RegExp(InputMode, \"i\");\n            DataList = DataList.filter(data => {\n                return data.UDGNAME.match(regex) !== null || data.UDRPNAME.match(regex) !== null\n            })\n        }\n\n        let DataFormat = []\n\n        const st = PickerDateRange[0]\n        const et = PickerDateRange[1] + (24 * 60 * 60 * 1000)\n\n        DataList.forEach(element => {\n            const time = moment(element.UDBGNDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n            // console.log(time)\n            if (st <= time && time <= et) {\n                DataFormat.push(element)\n            }\n        })\n        // console.log(DataFormat)\n        DataFormat = DataFormat.sort((a, b) => {\n            console.log(a)\n            console.log(b)\n            let tempTimeA = moment(a.UDBGNDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n            let tempTimeB = moment(b.UDBGNDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n            return tempTimeA < tempTimeB ? 1 : -1\n        })\n\n        // return DataFormat\n        return DataList\n    }\n\n    render() {\n        const { searchbar, caseinfo } = this.props\n        const { SelectMode } = this.state\n\n        const filterData = this.onClickSearch()\n\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"grid\", gridTemplateColumns: \"2fr 3fr\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{searchbar ? \"藥物處方\" : \"當日處方\"}</t2>\n                    {searchbar ? this.ControlBarRender() : null}\n                </div>\n                <Prescriptionordertable caseinfo={caseinfo} UDORDER0={filterData} SelectMode={SelectMode} ></Prescriptionordertable>\n            </div>\n        );\n    }\n}\n\nexport default Prescriptionorderlayout\n","import React, { Component } from 'react';\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Treatmentordertablecell.scss'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Treatmentordertablecell extends Component {\n    state = {\n        onEdit: false,\n        onMove: false,\n        remark: this.props.info.remark,\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { info } = this.props\n        ApiProvider.getOneRemark(this.props.caseinfo.TRANSINID, info.ORDSEQNO, \"treatment\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    on_Mouse() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: true\n                }\n            )\n        }\n    }\n    on_leave() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: false\n                }\n            )\n        }\n    }\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    render() {\n        const { info } = this.props\n        // console.log(info)\n        const Name = info.ORPROCED\n        const QD = info.ORFREQN\n        const Status = info.ORSTATUS\n        const ST = moment(info.ORBGNDT.toString(), 'YYYY-MM-DD').format(\"MM/DD\")\n        const ET = moment(info.ORENDDT.toString(), 'YYYY-MM-DD').format(\"MM/DD\")\n\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": Name,\n            \"remarkId\": info.ORDSEQNO,\n            \"remark\": this.state.remark,\n            \"transinId\": this.props.caseinfo.TRANSINID,\n            \"type\": \"treatment\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <div onMouseMove={() => this.on_Mouse()} onMouseLeave={() => this.on_leave()} className=\"treatmentordercell\" style={{ height: this.state.remark ? '60px' : '40px' }}>\n                <div style={{ display: \"grid\", gridTemplateRows: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"40px\" : \"40px 20px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"100px 1fr 1fr 40px 70px\" }}>\n                        <t3 className='cellstyle'>{ST} - {ET}</t3>\n                        <t3 className='cellstyle' style={{ color: \"black\", fontWeight: 600 }}>{Name}</t3>\n                        <t3 className='cellstyle'>{this.state.remark}</t3>\n                        <t3 className='cellstyle'>{QD}</t3>\n                        <t3 className='cellstyle'>{Status}</t3>\n                    </div>\n                    <t3 className='cellstyle' style={{ color: \"rgb(0,120,00)\", fontWeight: 400, height: \"20px\", display: [this.state.remark === undefined || this.state.remark === \"\" ? \"none\" : \"\"] }}>{this.state.remark}</t3>\n                    <div style={this.state.onMove ? { display: this.state.powerLogin == 1 ? \"flex\" : \"none\", justifyContent: \"center\", alignItems: \"center\", position: 'absolute', right: 0, height: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"40px\" : \"60px\"], background: \"transparent\", width: \"77px\", border: \"rgba(238,238,238,1) 1px solid\" } : { display: \"none\" }}>\n                        <div onClick={() => this.Edit_state()} style={{ width: this.state.remark ? '40px' : '30px', height: this.state.remark ? '40px' : '30px', borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }}>\n                            <img src={chooseedit} alt='chooseedit'></img>\n                        </div>\n                    </div>\n                </div>\n                <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            </div>\n        );\n    }\n}\nexport default Treatmentordertablecell\n","import React, { Component } from 'react';\nimport Treatmentordertablecell from './Treatmentordertablecell'\nimport './Treatmentordertable.scss'\n\nclass Treatmentordertable extends Component {\n    render() {\n        const { TRTMNT01, caseinfo, PickerDate } = this.props\n\n        if (TRTMNT01 === null || TRTMNT01 === undefined) {\n            return null\n        }\n        // const DataList = TRTMNT01 //SortDataList(TRTMNT01, PickerDate)\n        const Treatmentordertablecelllist = TRTMNT01.map(\n            (info, index) => <Treatmentordertablecell caseinfo={caseinfo} key={index} info={info}></Treatmentordertablecell>\n\n        )\n        const titlearray = ['時間起迄', '處置名稱', '備註內容', '頻次', '狀態']\n        const titlecell = titlearray.map(function (info, index) {\n            return (\n                <t3 className=\"treatmentordertablecellstyle\" key={index}>{info}</t3>\n            );\n        })\n\n        return (\n            <div>\n                <div className='treatmentordertable'>\n                    {titlecell}\n                </div>\n                <div style={{ minHeight: \"120px\", maxHeight: \"400px\", overflowY: \"auto\" }}>\n                    {JSON.stringify(TRTMNT01) !== '[]' ?\n                        Treatmentordertablecelllist\n                        :\n                        <div style={{ height: \"50px\", paddingLeft: \"4%\", display: \"flex\", alignItems: \"center\" }}>\n                            無資料\n                    </div>}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Treatmentordertable\n","import React, { Component } from 'react';\nimport Treatmentordertable from './Treatmentordertable'\nimport { Select, Input } from 'antd';\nimport * as ApiGithub from '../../API/ApiGithub'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\n\nclass Treatmentorderlayout extends Component {\n    state = {\n        // PickerDateRange: [moment().subtract(6, 'days'), moment()],\n        parser: { \"mappings\": [] },\n        DateRangeMode: {},\n        class: \"全部類別\",\n        SelectMode: 0,\n        InputMode: '',\n        preHID: null,\n        preCID: null,\n        TRTMNTQ1: []\n    }\n\n    componentDidMount() {\n        this.getGithub()\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        this.setState({ preHID: HID, preCID: CID })\n        this.getTreatmentQ1(HID, CID)\n    }\n    componentDidUpdate() {\n        const { caseinfo } = this.props\n        const { preHID, preCID } = this.state\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        if (HID !== preHID || CID !== preCID) {\n            this.setState({ preHID: HID, preCID: CID })\n            this.getTreatmentQ1(HID, CID)\n        }\n\n\n    }\n    getGithub() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Treatment\");\n                parser.mappings = [{ \"key\": \"全部類別\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson Treatment OK \" + JSON.stringify(parser))\n                this.setState({\n                    parser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    getTreatmentQ1(HID, CID) {\n        ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => { this.setState({ TRTMNTQ1: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureTRTMNTQ1 NG \" + JSON.stringify(err)) });\n    }\n\n    onChangeClass = (value) => {\n        this.setState({ class: value })\n    }\n\n    handleChange = (value) => {\n        this.setState({ SelectMode: value })\n    }\n\n    onChangeinputKey = (event) => {\n        this.setState({ InputMode: event.target.value })\n    }\n\n    Search_bar = () => {\n        // const { RangePicker } = DatePicker;\n        const { Option } = Select;\n\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"110px 135px auto\", gridColumnGap: \"10px\" }}>\n                <Select defaultValue={this.state.class} style={{ width: 110 }} onChange={this.onChangeClass}>\n                    {this.state.parser.mappings.map((mapping, index) => {\n                        return <Option key={index} value={mapping.key}>{mapping.key}</Option>\n                    })}\n                </Select>\n                <Select defaultValue={0} style={{ width: 135 }} onChange={this.handleChange}>\n                    <Option value={0}>全部狀態</Option>\n                    <Option value={1}>生效中</Option>\n                    <Option value={2}>失效/已結束/取消</Option>\n                </Select>\n                <Input placeholder=\"輸入藥囑關鍵字\" value={this.state.InputMode} onChange={this.onChangeinputKey} />\n            </div >\n        );\n\n    }\n\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部類別\"] = []\n\n        inputs.forEach(input => {\n            let content = input.ORPROCED;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部類別\"].push(input)\n        });\n        return allResult;\n    }\n\n    onClickSearch = () => {\n        const { TRTMNT01 } = this.props\n        const parse = this.parse;\n\n        const activeList = TRTMNT01.filter(element => element.ORSTATUS === \"80\")\n        console.log(\"activeList \" + JSON.stringify(activeList));\n\n        let clusteredData = {}\n        if (this.state.parser !== undefined) {\n            clusteredData = parse(activeList, this.state.parser)\n        }\n\n        //filter data by selected class\n        let filteredData = clusteredData[this.state.class];\n\n        const ListData = this.SortDataList(filteredData)\n\n        return ListData\n    }\n\n    SortDataList = (DataList) => {\n        // console.log(JSON.stringify(DataList))\n        const { PickerDateRange } = this.props\n        const { InputMode, SelectMode } = this.state\n\n        if (SelectMode !== 0) {\n            /*\n            預設\n            全部 SelectMode == 0\n            已生效 SelectMode == 1, < 現在時間 <\n            失效 SelectMode == 2, < 現在時間\n            */\n            DataList = DataList.filter(data => {\n                const createST = moment(data.ORBGNDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n                const createET = moment(data.ORENDDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n                const nowDate = moment().valueOf()\n\n                switch (SelectMode) {\n                    case 1:\n                        return createST <= nowDate && nowDate <= createET\n\n                    case 2:\n                        return createET < nowDate\n\n                    default: return null;\n                }\n            })\n        }\n\n        if (InputMode !== '') {\n            const regex = new RegExp(InputMode, \"i\");\n            DataList = DataList.filter(data => {\n                return data.ORPROCED.match(regex) !== null\n            })\n        }\n\n        let DataFormat = []\n\n        const st = PickerDateRange[0]\n        const et = PickerDateRange[1] + (24 * 60 * 60 * 1000)\n\n        DataList.forEach(element => {\n            console.log(element)\n            const time = moment(element.ORBGNDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n            console.log(time)\n            if (st <= time && time <= et) {\n                DataFormat.push(element)\n            }\n        })\n\n        DataFormat = DataFormat.sort((a, b) => {\n            let tempTimeA = moment(a.ORBGNDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n            let tempTimeB = moment(b.ORBGNDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n            return tempTimeA < tempTimeB ? 1 : -1\n        })\n\n        return DataFormat\n    }\n\n    render() {\n        const { searchbar, caseinfo } = this.props\n\n        const filterData = this.onClickSearch()\n\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"grid\", gridTemplateColumns: \"2fr 3fr\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{searchbar ? \"治療處置\" : \"當日處置\"}</t2>\n                    {searchbar ? this.Search_bar() : null}\n                </div>\n                <Treatmentordertable caseinfo={caseinfo} TRTMNT01={filterData} ></Treatmentordertable>\n            </div>\n        );\n    }\n}\n\nexport default Treatmentorderlayout\n","import React, { Component } from 'react';\nimport detaillogo from '../Image/svg/details.svg'\nimport { Tooltip } from 'antd';\n\nclass Notecell extends Component {\n    \n    updatetime_format(updatetime){\n        function monthformat(month){\n            return month + 1\n        }\n        return new Date(updatetime).getFullYear() + \"-\" + monthformat(new Date(updatetime).getMonth()) + \"-\" +new Date(updatetime).getDate() + \" \" + new Date(updatetime).getHours() + \":\" + new Date(updatetime).getMinutes()\n    }\n    render() {\n        const { info } = this.props\n        const text = info.updatedoctor + \"醫師於\" + this.updatetime_format(info.updatetime) + \"更新\"   \n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"19fr 1fr\", minHeight: \"50px\" }}>\n                <div style={{ wordBreak: \"break-all\", fontSize: \"1.3rem\", display: \"flex\", alignItems: \"center\" }}>{info.data}</div>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <Tooltip placement=\"right\" title={text}>\n                        <div>\n                            <img src={detaillogo} alt='detaillogo'></img>\n                        </div>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Notecell","import React, { Component } from 'react';\nimport Notecell from './Notecell'\nimport editlogo from '../Image/svg/Edit.svg'\nimport { Input, Button } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider';\nimport moment from 'moment';\nclass Note extends Component {\n    state = {\n        powerLogin: 0,\n        EditMode: false,\n        inputContent: '',\n        noteData: [],\n        PickerDate: moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.queryNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.HISID, this.state.PickerDate)\n    }\n    componentDidUpdate() {\n        const propDate = this.props.PickerDate\n        const stateDate = this.state.PickerDate\n        if (propDate !== stateDate) {\n            this.setState({ PickerDate: propDate })\n            this.queryNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.HISID, propDate)\n        }\n    }\n    queryNotice(TRANSID, HISID, pickerdate) {\n        const st = moment(moment(pickerdate).format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n        const et = moment(moment(pickerdate).format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf() + (24 * 60 * 60 * 1000)\n        console.log(TRANSID, HISID, st, et)\n        console.log(moment(st).format(\"YYYY/MM/DD\"))\n        console.log(moment(et).format(\"YYYY/MM/DD\"))\n        ApiProvider.getOnePatientNotice(TRANSID, HISID, st, et)\n            .then(result => {\n                console.log(\"getOnePatientNotice OK \" + JSON.stringify(result));\n                this.setState({\n                    noteData: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientNotice NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n    // queryOnePatientNotice() {\n    //     ApiProvider.getOnePatientNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID)\n    //         .then(data => {\n    //             console.log(\" OK \" + JSON.stringify(data))\n    //             this.setState({ noteData: data.data })\n    //         }).catch(err => { })\n    // }\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString()\n        const doc = sessionStorage.getItem('user')\n        ApiProvider.createNotice(this.props.caseinfo.HISID, this.state.inputContent, timeNowStr, this.props.caseinfo.TRANSINID, doc)\n            .then(data => {\n                this.queryNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID, this.props.PickerDate)\n            })\n            .catch(err => {\n                console.log(\" Err \" + JSON.stringify(err))\n            })\n        this.setState(\n            {\n                EditMode: false,\n                inputContent: undefined\n            }\n        )\n    }\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    EditControl() {\n        const edit = this.props.editstatus\n        if (edit) {\n            return (\n                <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                    <img src={editlogo} alt=\"editlogo\" />\n                </div>\n            );\n        }\n        return null\n    }\n    render() {\n        const List = this.state.noteData\n        console.log(JSON.stringify(List))\n        const notelist = List.map((info, index) => {\n            const time = moment(info.time, \"YYYY-MM-DD[T]HH:mm:ss.000+0000\").format('YYYY-MM-DD HH:mm:ss')\n            const localTime = moment.utc(time).toDate()\n            const infoObj = {\n                updatedictor: info.doc,\n                updatetime: moment(localTime).format(\"YYYY/MM/DD HH:mm:ss\"),\n                data: info.context\n            }\n            return <Notecell key={index} info={infoObj}></Notecell>\n        })\n        const EditButton = this.EditControl()\n        return (\n            <div style={{ marginTop: \"10px\" }}>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\", justifyContent: 'space-between' }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{this.props.title}</t2>\n                    {EditButton}\n                </div>\n                <div >\n                    {JSON.stringify(List) !== '[]' ? <div style={{ minHeight: \"120px\", maxHeight: \"400px\", overflow: \"auto\" }}>\n                        {notelist}\n                    </div> :\n                        <div style={{ height: \"50px\", paddingLeft: \"2.5%\", display: \"flex\", alignItems: \"center\" }}>\n                            本日無排程\n                    </div>}\n                    <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                        <div style={{ padding: \"5px 10px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <Input placeholder=\"輸入當日內容\" value={this.state.inputContent} onChange={this.onInputChange.bind(this)}></Input>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                                <Button onClick={() => this.onClickCancel()}>取消</Button>\n                                <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default Note\n","import React, { Component } from 'react';\nimport Schedule_event_list from '../../Module/Schedule_event'\nimport Note from '../../Module/Note'\nclass CrossectionSchedule extends Component {\n    render() {\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\" }}>\n                <Schedule_event_list source={this.props.source} PickerDate={this.props.PickerDate} title=\"排程\" caseinfo={this.props.caseinfo} editstatus={this.props.editstatus}></Schedule_event_list>\n                <Note title=\"當日評論Comment\" PickerDate={this.props.PickerDate} caseinfo={this.props.caseinfo} data={this.props.noticeData} editstatus={this.props.editstatus}></Note>\n            </div>\n        );\n    }\n}\n\nexport default CrossectionSchedule;\n","import React, { Component } from 'react';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport Wardinfousercheckbox from '../../Wardview/Wardunfousercheckbox';\n\nclass CrosssectionTodo extends Component {\n    state = {\n        todoList: []\n    }\n\n    componentDidMount() {\n        this.queryTodo();\n    }\n\n    queryTodo() {\n        ApiProvider.getOneTodo(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID)\n            .then(result => {\n                console.log(\"getOneTodo OK \" + JSON.stringify(result.data));\n                this.setState({\n                    todoList: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getOneTodo NG \" + JSON.stringify(err));\n            });\n    }\n\n    renderTodoItem() {\n        if (this.state.todoList.length === 0) {\n            return (\n                <div>沒有待辦事項</div>\n            )\n        } else {\n            return this.state.todoList.map((item, index) => {\n                if (item.type === \"未完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={false}></Wardinfousercheckbox>);\n                } else {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={true}></Wardinfousercheckbox>);\n                }\n\n            });\n        }\n    }\n\n    render() {\n        const renderTodoItem = this.renderTodoItem.bind(this);\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\", marginTop: \"10px\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>待辦排程</t2>\n                </div>\n                {renderTodoItem()}\n            </div>\n        );\n    }\n}\n\nexport default CrosssectionTodo\n","import React, { Component } from 'react';\nimport Vitalsign from './Vitalsign';\nimport Controlbar from '../Controlbar';\nimport CrossectionIo from './Crossection_io'\nimport Labviewlayout from './Labview'\nimport Nonlabviewlayout from './Nonlabview'\nimport GAS from './GAS'\nimport RTbreathe from './RTbreathe'\nimport Prescriptionorderlayout from '../Prescriptionorder/Prescriptionorder'\nimport Treatmentorderlayout from '../Treatmentorder/Treatmentorder'\nimport CrossectionSchedule from './Crosssectionschedule'\nimport CrosssectionTodo from './Crosssection_todo'\nimport './Crosssectionlayout.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass Crosssectionlayout extends Component {\n    state = {\n        Cross_item: [0, 1, 2, 3, 4, 5],\n        RESDGLU1: [],\n        RESLAB02: [],\n        RESLAB01: [],\n        RESDBGAS: [],\n        RESLAB0C: [],\n        RESSECT: [],\n        UDORDER0: [],\n        TRTMNTQ1: [],\n\n        PickerDate: moment(moment().format('YYYYMMDD')).valueOf(),\n\n        SelectInterval: 1,\n\n        preCID: null,\n        preHID: null\n    }\n    componentDidMount() {\n        const CID = this.props.caseinfo.CASEID\n        const HID = this.props.caseinfo.HISID\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        this.setState({\n            preCID: CID,\n            preHID: HID\n        })\n        this.NIS_API_IO(this.state.PickerDate, CID, HID, TRDT)\n    }\n    componentDidUpdate() {\n        const CID = this.props.caseinfo.CASEID\n        const HID = this.props.caseinfo.HISID\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        const { preCID, preHID } = this.state\n        if (preCID !== CID || preHID !== HID) {\n            this.setState({\n                preCID: CID,\n                preHID: HID\n            })\n            this.NIS_API_IO(this.state.PickerDate, CID, HID, TRDT)\n        }\n    }\n    NIS_API_IO(Datetime, CID, HID, TRDT) {\n        function selectMonthInterval(Datetime) {\n            const timestampInterval = new Date().getTime() - Datetime\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        const TransinDate = moment(TRDT).format(\"YYYY-MM-DD\")\n        const MonthInterval = selectMonthInterval(Datetime)\n        ApiProvider.getStoredProcedureRESDGLU1(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESDGLU1: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDGLU1 NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESLAB02(HID, TransinDate)\n            .then(data => {\n                this.setState({ RESLAB02: data.data })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESLAB02 NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESLAB01(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESLAB01: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESLAB01 NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESDBGAS(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESDBGAS: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDBGAS NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESLAB0C(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESLAB0C: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESLAB0C NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESSECT(HID, MonthInterval, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                this.setState({\n                    RESSECT: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESSECT NG \" + JSON.stringify(err))\n            });\n\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                this.setState({\n                    UDORDER0: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureUDORDER0 NG \" + JSON.stringify(err))\n            });\n        ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => {\n                this.setState({\n                    TRTMNTQ1: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureTRTMNTQ1 NG \" + JSON.stringify(err))\n            });\n    }\n\n    callbackFunction = (item_array) => {\n        this.setState({ Cross_item: item_array })\n    }\n\n    callbackDateFunction = (PickerTimeStamp) => {\n        console.log(PickerTimeStamp)\n        this.setState({ PickerDate: PickerTimeStamp })\n    }\n\n    display_item(number) {\n        const item = this.state.Cross_item\n        var filter = item.some(function (item, index, array) {\n            return item === number\n        });\n        return filter\n    }\n    render() {\n        const crosssectioncontrollist = [\n            {\n                \"name\": \"生命徵象\",\n                \"scrollpoint\": \"vitalsignIO\"\n            },\n            {\n                \"name\": \"檢驗\",\n                \"scrollpoint\": \"lab\"\n            },\n            {\n                \"name\": \"呼吸評估\",\n                \"scrollpoint\": \"rt\"\n            },\n            {\n                \"name\": \"醫藥囑\",\n                \"scrollpoint\": \"order\"\n            },\n            {\n                \"name\": \"行事曆及註記\",\n                \"scrollpoint\": \"schedule\"\n            }\n        ]\n        const { caseinfo } = this.props\n        const TimeStampPickerDate = this.state.PickerDate\n        const endTime = TimeStampPickerDate + (31 * 60 * 60 * 1000)\n        const startTime = endTime - (3 * 24 * 60 * 60 * 1000)\n        const PickerDateRange = [TimeStampPickerDate - (6 * 24 * 60 * 60 * 1000), TimeStampPickerDate]\n        // console.log(moment(PickerDateRange[0]).format('YYYYMMDD'), moment(PickerDateRange[1]).format('YYYYMMDD'))\n\n        return (\n            <div>\n                <Controlbar caseinfo={caseinfo} PickerDate={this.state.PickerDate} parentDateCallback={this.callbackDateFunction} parentCallback={this.callbackFunction} btnlist={crosssectioncontrollist} item_array={this.state.Cross_item}></Controlbar>\n                <div id=\"crossection\" className='crossectioncontent'>\n                    <div id={\"vitalsignIO\"} style={this.display_item(0) ? { display: \"grid\", gridTemplateColumns: \"2fr 1fr\", gridGap: \"10px\", marginBottom: \"10px\" } : { display: \"none\" }}>\n                        <Vitalsign PickerDate={this.state.PickerDate} caseinfo={caseinfo}></Vitalsign>\n                        <CrossectionIo PickerDate={this.state.PickerDate} caseinfo={caseinfo} title=\"輸出入\"></CrossectionIo>\n                    </div>\n                    <div id={\"lab\"} style={this.display_item(1) ? { display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" } : { display: \"none\" }}>\n                        <Labviewlayout PickerDate={this.state.PickerDate} caseinfo={caseinfo} RESLAB01={this.state.RESLAB01} RESLAB02={this.state.RESLAB02} RESDBGAS={this.state.RESDBGAS} RESLAB0C={this.state.RESLAB0C} RESDGLU1={this.state.RESDGLU1} RESSECT={this.state.RESSECT}></Labviewlayout>\n                        <Nonlabviewlayout caseinfo={caseinfo} StartTime={startTime} EndTime={endTime}></Nonlabviewlayout>\n                    </div>\n                    <div id={\"rt\"} style={this.display_item(2) ? { display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" } : { display: \"none\" }}>\n                        <GAS caseinfo={caseinfo} PickerDateRange={PickerDateRange} searchbar={false}></GAS>\n                        <RTbreathe caseinfo={caseinfo} PickerDateRange={PickerDateRange} searchbar={false}></RTbreathe>\n                    </div>\n                    <div id={\"order\"} style={this.display_item(3) ? { display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" } : { display: \"none\" }}>\n                        <Prescriptionorderlayout UDORDER0={this.state.UDORDER0} caseinfo={caseinfo} searchbar={false} PickerDateRange={PickerDateRange}></Prescriptionorderlayout>\n                        <Treatmentorderlayout TRTMNT01={this.state.TRTMNTQ1} caseinfo={caseinfo} searchbar={false} PickerDateRange={PickerDateRange}></Treatmentorderlayout>\n                    </div>\n                    <div id={\"schedule\"} style={this.display_item(4) ? null : { display: \"none\" }}>\n                        <CrossectionSchedule source={1} PickerDate={this.state.PickerDate} editstatus={false} caseinfo={caseinfo}></CrossectionSchedule>\n                    </div>\n                    <div style={this.display_item(5) ? null : { display: \"none\" }}>\n                        <CrosssectionTodo caseinfo={caseinfo} ></CrosssectionTodo>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Crosssectionlayout;\n","import React, { Component } from 'react';\nimport IOpage from '../../Module/iopage'\n\nclass Inoutonchronic extends Component {\n    render() {\n        const { title, caseinfo, IntervalStatus, PickerDate } = this.props\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                {/* 樣式修改issue10 */}\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t2>\n                </div>\n                <IOpage caseinfo={caseinfo} Status={\"Chronic\"} IntervalStatus={IntervalStatus} PickerDate={PickerDate}></IOpage>\n            </div>\n        );\n    }\n}\n\nexport default Inoutonchronic\n","import React, { Component } from 'react'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport { Spin, Icon } from 'antd';\nimport moment from 'moment'\n\nclass Chronictablecelltooltip extends Component {\n    state = {\n        preStartTimeStamp: null,\n        loading: true,\n        resultStr: \"--\"\n    }\n    componentDidUpdate() {\n        const { startTimeStamp } = this.props\n        const { preStartTimeStamp } = this.state\n        if (startTimeStamp !== preStartTimeStamp) {\n            console.log(\"Chronictablecelltooltip componentDidUpdate\")\n        }\n    }\n    componentDidMount() {\n        const { startTimeStamp } = this.props\n        this.setState({ preStartTimeStamp: startTimeStamp })\n        console.log(\"Chronictablecelltooltip componentDidMount\")\n        this.apiGet()\n    }\n    apiGet() {\n        const { tooltipelement, caseinfo } = this.props\n        const ORMM = tooltipelement.ORMM.toString().trim()\n        const ORDSEQNO = tooltipelement.ORDSEQNO.toString().trim()\n        //RESDISP\n        ApiProvider.getStoredProcedureRESDISP(caseinfo.HISID, ORMM, caseinfo.CASEID, ORDSEQNO)\n            .then(data => {\n                console.log(\"getStoredProcedureRESDISP OK \" + JSON.stringify(data.data))\n                //const fakeData = [{\"RECNO\":\"1\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"正式報告\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"2\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"                                臺北榮民總醫院病理檢驗部報告\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"3\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  病患資訊：         新生兒加護病房 - 8 張恩慈之男 4599819-4 男性 3天大 NBD\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"4\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  申請序號 / 工作號：     0APKHTG/2502091284       開立時間：    20200207  0809\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"5\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  開醫囑者：         DOC3915L 李苡萱         簽收時間：    20200209  1850\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"6\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  報告人 ：          LABE1523 林宜慧         報告時間：    20200209  1850\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"7\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  檢體 ：           Blood\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"8\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"  醫囑名稱：         Crea,ALT,Mg,NA,K,P,\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"9\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"   項目     H/L  結果   前次結果 單位     參考值\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"10\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"   BUN            ()\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"11\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"   Na        145  ()   mmol/L   136~145 mmol/L\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"},{\"RECNO\":\"12\",\"PARTNO\":\"02 \",\"HISTNO\":\"45998194  \",\"ORBGNDT\":\"2020-02-10\",\"CONTENT\":\"   K         4.0   ()   mmol/L   3.5~5.1 mmol/L\",\"ORDSEQ\":\"41\",\"CASENO\":\"25663876\"}]\n\n                //parse content\n                const parsers = this.props.summaryParse\n                const parser = data.data.length > 0 ? this.select_parser(\"Chronic table\", data.data[0], parsers) : undefined\n\n                if (parser !== undefined) {\n                    //concat all content\n                    let allContent = \"\"\n                    //fakeData.forEach(item => {\n                    data.data.forEach(item => {\n                        allContent = `${allContent} \"\\n\" ${item.CONTENT}`;\n                    });\n                    //console.log(\"allContent\" + JSON.stringify(allContent))\n\n                    const result = this.parse(allContent, parser)\n                    //console.log(\"result\" + JSON.stringify(result))\n\n                    const resultStr = this.summerize(result, parser)\n                    //console.log(\"resultStr\" + JSON.stringify(resultStr))\n\n                    this.setState({ resultStr: resultStr })\n                }\n\n                this.setState({ loading: false })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDISP NG \" + JSON.stringify(err))\n                this.setState({ loading: false })\n            })\n    }\n    select_parser = (parserName, input, parsers) => {\n        const inputBeginTime = moment(input.ORBGNDT, \"YYYY-MM-DD\").valueOf()\n        return parsers.find(x =>\n            parserName.match(x.parser_name)\n            && (!x.apply_condition.start_time || inputBeginTime >= x.apply_condition.start_time)\n        )\n    }\n    parse = (input, parser) => {\n        let mappings = parser.mappings\n        let result = {}\n        mappings.forEach(mapping => {\n            const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n            const match = input.match(re)\n            result[mapping.key] = match && match[mapping.position]\n        });\n        return result;\n    }\n    summerize = (kv_pairs, parser) => {\n        let summary_str = parser.summary\n        for (const key in kv_pairs) {\n            let match_replacer = summary_str.match(RegExp(\"\\\\[\" + key + \"(:(.*?))?\\\\]\"))\n            let replacer = \"\"\n            if (match_replacer && match_replacer.length === 3) {\n                replacer = match_replacer[2]\n            }\n            const match = summary_str.match(RegExp(\"\\\\[\" + key + \":(.*?)?\\\\]\"))\n            summary_str = summary_str.replace(match[0], match[0].replace(match[1], kv_pairs[key] || replacer))\n        }\n        return summary_str;\n    }\n    render() {\n        const { tooltipelement } = this.props\n        const { loading, resultStr } = this.state\n        const infoTime = tooltipelement.ORRCPTM.toString().trim()\n        const name = tooltipelement.ORPROCED.toString().trim()\n        const reportname = tooltipelement.ORSPCN1.toString().trim()\n        const cellRenderData = [infoTime, name, reportname, resultStr]\n        const Cell = cellRenderData.map(function (value, index) {\n            if (loading) {\n                const antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n                return (\n                    <Spin key={index} indicator={antIcon} />\n                );\n            } else {\n                return (\n                    <div key={index} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"0px 5px\" }}>\n                        {value}\n                    </div>\n                );\n            }\n\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"100px 150px 150px 200px\" }}>{Cell}</div>\n        );\n    }\n}\n\nexport default Chronictablecelltooltip","import React, { Component } from 'react'\nimport { Tooltip } from 'antd'\nimport moment from 'moment'\nimport Chronictablecelltooltip from './ChronicTableCellTooltipCell'\n\nclass Chronictablecell extends Component {\n    CellText() {\n        const { element, caseinfo, summaryParse } = this.props\n        const start = moment(element.StartTime).format(\"YYYY/MM/DD HH:mm:ss\")\n        const startTimeStamp = moment(element.StartTime).valueOf()\n        const end = moment(element.EndTime).format(\"HH:mm:ss\")\n        const title = [\"採檢時間\", \"檢驗項目\", \"檢體\", \"報告\"]\n        const titleCell = title.map(function (value, index) {\n            return (\n                <div key={index} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"0px 5px\" }}>\n                    {value}\n                </div>\n            );\n        })\n        const objectElement = element.element\n        const objectElementCell = objectElement.map(function (info, index, arr) {\n            return (\n                <Chronictablecelltooltip key={index} startTimeStamp={startTimeStamp} tooltipelement={info} caseinfo={caseinfo} summaryParse={summaryParse}></Chronictablecelltooltip>\n            );\n        })\n        return (\n            <div>\n                {/* <div>{start}-{end}</div>\n                <div>檢驗檢查項目 : {element.title}類</div> */}\n                <div style={{ display: \"grid\", gridTemplateColumns: \"100px 150px 150px 200px\" }}>\n                    {titleCell}\n                </div>\n                {objectElementCell}\n            </div>\n        );\n    }\n    render() {\n        function checkLineColor(lineColor) {\n            if(lineColor === null){\n                return '';\n            }else{\n                return `${lineColor.width} solid ${lineColor.color}`;\n            }\n        }\n        function valueNull(value) {\n            if (value === null || value === undefined || value === 0) {\n                return \"--\"\n            }\n            return value\n        }\n        const { element } = this.props\n        const TitleRender = this.CellText()\n        if (element.element.length === 0) {\n            return (\n                <div style={{ height: '40px', display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', borderLeft: checkLineColor(this.props.lineColor) }}>--</div>\n            );\n        }\n        return (\n            <Tooltip title={TitleRender} autoAdjustOverflow={true} overlayStyle={{ maxWidth: \"800px\" }}>\n                <div style={{ height: '40px',fontSize: \"16px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', cursor: \"pointer\", borderLeft: checkLineColor(this.props.lineColor) }}>\n                    {valueNull(element.element.length)}\n                </div>\n            </Tooltip>\n        );\n    }\n}\n\nexport default Chronictablecell","import React, { Component } from 'react'\nimport moment from 'moment'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport * as ApiPronider from '../../API/ApiProvider'\nimport Chronictablecell from './ChronicTableCell'\nimport * as RSData from '../../Resource/RESSECT'\n\nclass Tableonchronic extends Component {\n    state = {\n        LabParse: [],\n        SummaryParse: [{ apply_condition: \"\", mappings: [] }],\n        RESSECT: [],\n        preHID: null\n    }\n\n    ApiGet(HID, monthly) {\n        ApiGithub.getGitHubJson(\"Chronic_Lab.json\")\n            .then(data => {\n                this.setState({\n                    LabParse: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiGithub.getGitHubJson(\"Summary.json\")\n            .then(data => {\n                this.setState({\n                    SummaryParse: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiPronider.getStoredProcedureRESSECT(HID, \"1\", \"ALL\", \"DOC3924B\")\n            .then(data => {\n                this.setState({ RESSECT: data.data })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        // this.setState({ RESSECT: RSData.data })\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDate, chronic_state } = this.props\n        const HID = caseinfo.HISID\n        const monthly = this.fotmatTimerMonthly(PickerDate)\n        this.setState({ preHID: caseinfo.HISID, prePickerDate: PickerDate, preInterval: chronic_state })\n        this.ApiGet(HID, monthly)\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDate, chronic_state } = this.props\n        const HID = caseinfo.HISID\n        const { preHID, prePickerDate, preInterval } = this.state\n        const monthly = this.fotmatTimerMonthly(PickerDate)\n        if (HID !== preHID || prePickerDate !== PickerDate || preInterval !== chronic_state) {\n            this.setState({ preHID: caseinfo.HISID, prePickerDate: PickerDate, preInterval: chronic_state })\n            this.ApiGet(HID, monthly)\n        }\n    }\n\n    fotmatTimerMonthly(pickerdate) {\n        const timestampInterval = moment().valueOf() - pickerdate\n        const timestampMonth = 30 * 24 * 60 * 60 * 1000\n        const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n        return MonthInt\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    render() {\n        function DataForTimer(dataList, interval, pickerdate) {\n            function starttime(interval, entTimeStamp) {\n                if (interval === 0) {\n                    return entTimeStamp - (24 * 60 * 60 * 1000)\n                }\n                if (interval === 1) {\n                    return entTimeStamp - (3 * 24 * 60 * 60 * 1000)\n                }\n                if (interval === 2) {\n                    return entTimeStamp - (7 * 24 * 60 * 60 * 1000)\n                }\n                return entTimeStamp - (14 * 24 * 60 * 60 * 1000)\n            }\n\n            function fotmatTimerForTimer(interval, st, list, title, grid) {\n                var TimerForList = []\n                for (let index = 0; index < interval; index++) {\n                    const StartTime = st + (index * grid * 60 * 60 * 1000)\n                    const EndTime = st + ((index + 1) * grid * 60 * 60 * 1000)\n                    const filterTimerForDataList = list.filter(function (element, index, arr) {\n                        const time = element.ORRCPDT.toString().trim() + element.ORRCPTM.toString().trim()\n                        const timestamp = moment(time, 'YYYY-MM-DDHH:mm:ss').valueOf()\n                        return StartTime <= timestamp && timestamp < EndTime\n                    })\n                    TimerForList.push({\n                        StartTime: StartTime,\n                        EndTime: EndTime,\n                        element: filterTimerForDataList,\n                        title: title\n                    })\n                }\n                return TimerForList\n            }\n            console.log(dataList.array)\n            const et = pickerdate + (31 * 60 * 60 * 1000)\n            const st = starttime(interval, et)\n            const slectInt = TimeInterval(interval)\n            const DataTransForTimer = fotmatTimerForTimer(slectInt.interval, st, dataList.array, dataList.title, slectInt.grid)\n            return DataTransForTimer\n        }\n\n\n\n        function LabFormat(ressect, parsrList) {\n            var arrayBiochemical = []\n            var arrayBlood = []\n            var arrayCultivate = []\n            var arrayGAS = []\n            var arrayGlu = []\n            var arrayRadiation = []\n            var arrayOther = []\n\n            console.log(parsrList)\n            for (let index = 0; index < ressect.length; index++) {\n                const element = ressect[index];\n                const element_ORPROCED = element.ORPROCED\n                const BioFind = parsrList.Biochemical.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const BloFind = parsrList.Blood.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const CulFind = parsrList.Cultivate.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const GasFind = parsrList.GAS.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const GluFind = parsrList.GAS.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const RadFind = parsrList.Radiation.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                if (BioFind) {\n                    arrayBiochemical.push(element)\n                }\n                if (BloFind) {\n                    arrayBlood.push(element)\n                }\n                if (CulFind) {\n                    arrayCultivate.push(element)\n                }\n                if (GasFind) {\n                    arrayGAS.push(element)\n                }\n                if (GluFind) {\n                    arrayGlu.push(element)\n                }\n                if (RadFind) {\n                    arrayRadiation.push(element)\n                }\n                if (BioFind === false && BloFind === false && CulFind === false && GasFind === false && RadFind === false) {\n                    arrayOther.push(element)\n                }\n            }\n            const arrayList = []\n            arrayList.push({\n                title: \"生化\",\n                array: arrayBiochemical,\n            })\n            arrayList.push({\n                title: \"血液\",\n                array: arrayBlood,\n            })\n            arrayList.push({\n                title: \"培養\",\n                array: arrayCultivate,\n            })\n            arrayList.push({\n                title: \"GAS\",\n                array: arrayGAS,\n            })\n            arrayList.push({\n                title: \"Glu\",\n                array: arrayGlu,\n            })\n            arrayList.push({\n                title: \"放射\",\n                array: arrayRadiation,\n            })\n            arrayList.push({\n                title: \"其他\",\n                array: arrayOther,\n            })\n            return arrayList\n        }\n        function TimeLine(interval, index) {\n            const lineStyle = {\n                width: '',\n                color: '',\n            }\n            if (interval === 0) {\n                                if (index === 0 || (index % 24) === 0) {\n                    lineStyle.width = '2px';\n                    lineStyle.color = 'rgba(0,0,0,0.7)';\n                    return lineStyle;\n                } else if (index % 8 === 0) {\n                    lineStyle.width = '2px';\n                    lineStyle.color = 'rgba(0,0,0,0.5)';\n                    return lineStyle;\n                }\n                else {\n                    lineStyle.width = '1px';\n                    lineStyle.color = '#eeeeee';\n                    return lineStyle;\n                }                  \n            }\n            if (interval === 1) {                \n                if (index === 0 || (index % 6) === 0) {\n                    lineStyle.width = '2px';\n                    lineStyle.color = 'rgba(0,0,0,0.7)';\n                    return lineStyle;\n                } else if (index % 2 === 0) {\n                    lineStyle.width = '2px';\n                    lineStyle.color = 'rgba(0,0,0,0.5)';\n                    return lineStyle;\n                }\n                else {\n                    lineStyle.width = '1px';\n                    lineStyle.color = '#eeeeee';\n                    return lineStyle;\n                }               \n            }\n            if (interval === 2) {               \n                if (index === 0 || (index % 3) === 0) {\n                    lineStyle.width = '2px';\n                    lineStyle.color = 'rgba(0,0,0,0.7)';\n                    return lineStyle;\n                } else {\n                    lineStyle.width = '2px';\n                    lineStyle.color = 'rgba(0,0,0,0.5)';\n                    return lineStyle;\n                }  \n            }\n            if (interval === 3) {              \n                lineStyle.width = '2px';\n                lineStyle.color = 'rgba(0,0,0,0.7)';\n                return lineStyle;                \n            }\n        }\n        function TimeInterval(interval) {\n            if (interval === 0) {\n                return { interval: 24, grid: 1 }\n            }\n            if (interval === 1) {\n                return { interval: 18, grid: 4 }\n            }\n            if (interval === 2) {\n                return { interval: 21, grid: 8 }\n            }\n            return { interval: 14, grid: 24 }\n        }\n        const { chronic_state, caseinfo, PickerDate, title,openTimeline } = this.props\n        const { LabParse, RESSECT, SummaryParse } = this.state\n        if (LabParse === null || LabParse === undefined || LabParse.length === 0) {\n            return null\n        }\n        if (RESSECT === null || RESSECT === undefined || RESSECT.length === 0) {\n            return null\n        }\n        const data = LabFormat(RESSECT, LabParse)\n        const statestatus = TimeInterval(chronic_state)\n        const title_list = title.map((info, index) =>\n            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"40px\", border: \"1px solid rgba(238,238,238,1)\", borderCollapse: \"collapse\", backgroundColor: \"#cccccc\" }} key={index}>\n                <t2>{info.title}</t2>\n            </div>\n        )\n        const cell_list = data.map(function (value, index, arr) {\n            const DataList = DataForTimer(value, chronic_state, PickerDate)\n            return DataList\n        })\n        console.log(data)\n        const cellRender = cell_list.map(function (value, index, array) {\n            const valuecell = value.map(function (element, index, arr) {\n                const toolTipID = \"ChronicTableTootip\" + index\n                return (\n                    <Chronictablecell lineColor={openTimeline ? TimeLine(chronic_state, index) : null} key={toolTipID} element={element} caseinfo={caseinfo} summaryParse={SummaryParse}></Chronictablecell>\n                );\n            })\n            return valuecell\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\" }}>\n                <div style={{ display: \"grid\", gridTemplateRows: \"repeat(\" + title.length + \",1fr)\" }}>\n                    {title_list}\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + statestatus.interval + \",1fr)\", gridTemplateRows: \"repeat(7,1fr)\" }}>\n                    {cellRender}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Tableonchronic","import React, { Component } from 'react'\nimport Tableonchronic from './ChronicTable'\n\nclass Chroniclab extends Component {\n    render() {\n        const { title, caseinfo, select_interval, PickerDate } = this.props\n        const item_title = [{ title: \"生化\" }, { title: \"血液\" }, { title: \"培養\" }, { title: \"GAS\" }, { title: \"Glu\" }, { title: \"放射\" }, { title: \"其他\" }]\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                {/* 樣式修改issue10 */}\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t2>\n                </div>\n                <Tableonchronic openTimeline={true} title={item_title} caseinfo={caseinfo} chronic_state={select_interval} PickerDate={PickerDate}></Tableonchronic>\n            </div>\n        );\n    }\n}\n\nexport default Chroniclab\n","import React, { Component } from 'react'\nimport rtlogo from '../../Image/svg/RT.svg'\nimport { Tooltip } from 'antd'\nimport moment from 'moment'\n\nclass Chronicrttablecell extends Component {\n    ToolTipRender() {\n        const { cellelement } = this.props\n        const startTime = moment(cellelement.startTime).format(\"MM/DD HH:mm\")\n        const endTime = moment(cellelement.endTime).format(\"MM/DD HH:mm\")\n        const RTListRender = cellelement.element.map(function (info, index, arr) {\n            const time = moment(info.Date + info.Time, \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\")\n            const Mode = info.Mode\n            const Setting = info.Setting\n            return (\n                <div>\n                    <div>Time:{time}</div>\n                    <div>Mode:{Mode}</div>\n                    <div style={{ display: \"flex\" }}>\n                        <div>Setting:</div>\n                        <div>{Setting}</div>\n                    </div>\n                </div>\n            );\n        })\n\n        return (\n            <div>\n                <div>{startTime}~{endTime}</div>\n                {RTListRender}\n            </div>\n        );\n    }\n    render() {\n        function checkLineColor(lineColor) {\n            if(lineColor === null){\n                return '';\n            }else{\n                return `${lineColor.width} solid ${lineColor.color}`;\n            }\n        }\n        function changetext(text) {\n            if (text === 0) {\n                return '--'\n            }\n            return <img src={rtlogo} alt=\"rtlogo\" />\n        }\n        const { cellelement } = this.props\n        if (cellelement.length === 0) {\n            return <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center', border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse',borderLeft: checkLineColor(this.props.lineColor) }}>--</div>\n        }\n        return (\n            <Tooltip placement=\"right\" autoAdjustOverflow={true} title={this.ToolTipRender()} overlayStyle={{ maxWidth: \"800px\", background: \"white\" }}>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', cursor: \"pointer\", borderLeft: checkLineColor(this.props.lineColor) }}>\n                    {changetext(cellelement.length)}\n                </div>\n            </Tooltip >\n        );\n    }\n}\nexport default Chronicrttablecell","import React, { Component } from 'react'\nimport * as FilterReg from '../../Function/FiliterReg'\nimport moment from 'moment'\nimport X2JS from 'x2js';\nimport * as ApiProvider from '../../API/ApiProvider'\nimport Chronicrttablecell from './ChronicRTTableCell'\nimport * as QSPEList from '../../Resource/QSPE'\n\nconst TimeLine = (interval, index) => {\n    const lineStyle = {\n        width: '',\n        color: '',\n    }\n    if (interval === 0) {\n        if (index === 0 || (index % 24) === 0) {\n            lineStyle.width = '2px';\n            lineStyle.color = 'rgba(0,0,0,0.7)';\n            return lineStyle;\n        } else if (index % 8 === 0) {\n            lineStyle.width = '2px';\n            lineStyle.color = 'rgba(0,0,0,0.5)';\n            return lineStyle;\n        }\n        else {\n            lineStyle.width = '1px';\n            lineStyle.color = '#eeeeee';\n            return lineStyle;\n        }\n    }\n    if (interval === 1) {\n        if (index === 0 || (index % 6) === 0) {\n            lineStyle.width = '2px';\n            lineStyle.color = 'rgba(0,0,0,0.7)';\n            return lineStyle;\n        } else if (index % 2 === 0) {\n            lineStyle.width = '2px';\n            lineStyle.color = 'rgba(0,0,0,0.5)';\n            return lineStyle;\n        }\n        else {\n            lineStyle.width = '1px';\n            lineStyle.color = '#eeeeee';\n            return lineStyle;\n        }\n    }\n    if (interval === 2) {\n        if (index === 0 || (index % 3) === 0) {\n            lineStyle.width = '2px';\n            lineStyle.color = 'rgba(0,0,0,0.7)';\n            return lineStyle;\n        } else {\n            lineStyle.width = '2px';\n            lineStyle.color = 'rgba(0,0,0,0.5)';\n            return lineStyle;\n        }\n    }\n    if (interval === 3) {\n        lineStyle.width = '2px';\n        lineStyle.color = 'rgba(0,0,0,0.7)';\n        return lineStyle;\n    }\n}\n\nclass Chronicrttable extends Component {\n    state = {\n        QSPE: [],\n        preCID: null,\n        prePickerdate: null,\n        preInterval: null\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDate, select_interval } = this.props\n        this.setState({ preCID: caseinfo.CASEID, prePickerdate: PickerDate, preInterval: select_interval })\n        const timer = this.timerFormat(PickerDate, select_interval)\n        const start = moment(timer.StartTime).format(\"YYYYMMDDHHmm\")\n        const end = moment(timer.EndTime).format(\"YYYYMMDDHHmm\")\n        this.getQSPE(caseinfo.CASEID, start, end)\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDate, select_interval } = this.props\n        const { preCID, prePickerdate, preInterval } = this.state\n        if (caseinfo.CASEID !== preCID || PickerDate !== prePickerdate || preInterval !== select_interval) {\n            const { caseinfo, PickerDate } = this.props\n            this.setState({ preCID: caseinfo.CASEID, prePickerdate: PickerDate, preInterval: select_interval })\n            const timer = this.timerFormat(PickerDate, select_interval)\n            const start = moment(timer.StartTime).format(\"YYYYMMDDHHmm\")\n            const end = moment(timer.EndTime).format(\"YYYYMMDDHHmm\")\n            this.getQSPE(caseinfo.CASEID, start, end)\n        }\n\n    }\n    getQSPE(CID, st, et) {\n        const xm2 = new X2JS()\n        console.log(\"QSPE:\" + st, et)\n        ApiProvider.getQSPE(CID, st, et)\n            .then(data => {\n                console.log(xm2.xml2js(data.data).outmsg.resconts.rescont)\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                if (Array.isArray(parsedata)) {\n                    this.setState({ QSPE: parsedata })\n                }\n                else {\n                    this.setState({ QSPE: [parsedata] })\n                }\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        // this.setState({ QSPE: QSPEList.data })\n    }\n\n    timerFormat(PickerDate, Interval) {\n        const EndTime = PickerDate + (31 * 60 * 60 * 1000)\n        if (Interval === 0) {\n            return {\n                StartTime: EndTime - (24 * 60 * 60 * 1000),\n                EndTime: EndTime,\n                Interval: 24,\n                grid: 1\n            }\n        }\n        if (Interval === 1) {\n            return {\n                StartTime: EndTime - (3 * 24 * 60 * 60 * 1000),\n                EndTime: EndTime,\n                Interval: 18,\n                grid: 4\n            }\n\n        }\n        if (Interval === 2) {\n            return {\n                StartTime: EndTime - (7 * 24 * 60 * 60 * 1000),\n                EndTime: EndTime,\n                Interval: 21,\n                grid: 8\n            }\n\n        }\n        return {\n            StartTime: EndTime - (14 * 24 * 60 * 60 * 1000),\n            EndTime: EndTime,\n            Interval: 14,\n            grid: 24\n        }\n    }\n\n\n\n    table_content() {\n        function formatDataList(startTime, interval, list, grid) {\n            var timerList = []\n            for (let index = 0; index < interval; index++) {\n                const start = startTime + (index * grid * 60 * 60 * 1000)\n                const end = startTime + ((index + 1) * grid * 60 * 60 * 1000)\n                const listFilter = list.filter(function (info, index, arr) {\n                    const time = moment(info.Date.toString() + info.Time.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    return start <= time && time < end\n                })\n                timerList.push({\n                    length: listFilter.length,\n                    element: listFilter,\n                    startTime: start,\n                    endTime: end\n                })\n            }\n            return timerList\n        }\n\n        const { select_interval, PickerDate } = this.props\n        const QSPE = this.state.QSPE\n        const dataList = FilterReg.QSPERegList(QSPE)\n        if (dataList === null || dataList === undefined || dataList.length === 0) {\n            return null\n        }\n        const timer = this.timerFormat(PickerDate, select_interval)\n        const calldata = formatDataList(timer.StartTime, timer.Interval, dataList, timer.grid)\n        const cellRender = calldata.map(function (value, index, arr) {\n            return (\n                <Chronicrttablecell lineColor={TimeLine(select_interval, index)} key={index} cellelement={value}></Chronicrttablecell>\n            );\n        })\n        return cellRender\n    }\n    render() {\n        const { select_interval, PickerDate } = this.props\n        const timer = this.timerFormat(PickerDate, select_interval)\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\", height: \"40px\" }}>\n                <div style={{ display: \"flex\", paddingLeft: \"16px\", alignItems: \"center\" }}>\n                    <t2>呼吸治療設定</t2>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + timer.Interval + \",1fr)\" }}>\n                    {this.table_content()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chronicrttable","import React, { Component } from 'react'\nimport Chronicrttable from './ChronicRTTable'\n\nclass Chronicrt extends Component {\n    render() {\n        const {caseinfo, select_interval, PickerDate } = this.props\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <Chronicrttable PickerDate={PickerDate} title={{ title: \"RT\" }} caseinfo={caseinfo} select_interval={select_interval}></Chronicrttable>\n            </div>\n        );\n    }\n}\n\nexport default Chronicrt","import React, { Component } from 'react'\nimport './ChronicOrderTable.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport * as UDOR from '../../Resource/UDORDER0'\n\nclass Chronicordertable extends Component {\n    state = {\n        UDORDER: [],\n        whiteBlackListParser: [],\n        tpnParsers: [],\n        preHID: null,\n        preCID: null\n    }\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        this.setState({ preHID: HID, preCID: CID })\n        this.getUDORDER(HID, CID)\n\n    }\n    componentDidUpdate() {\n        const { caseinfo } = this.props\n        const { preHID, preCID } = this.state\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        if (preHID !== HID || preCID !== CID) {\n            this.setState({ preHID: HID, preCID: CID })\n            this.getUDORDER(HID, CID)\n        }\n    }\n    getUDORDER(HID, CID) {\n        ApiGithub.getGitHubJson(\"WhiteBlackList.json\")\n            .then(data => {\n                let parser = data.data;\n                this.setState({ whiteBlackListParser: parser })\n            })\n            .catch(err => { console.log(err) })\n        ApiGithub.getGitHubJson(\"TpnOrder.json\")\n            .then(data => {\n                let parser = data.data\n                this.setState({ tpnParsers: parser })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                this.setState({ UDORDER: data.data })\n                //this.setState({ UDORDER: fakeData })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        // this.setState({ UDORDER: UDOR.data })\n    }\n    // 0:一天 1:三天 2:一週 3:兩週\n    switch_state() {\n        const { chronic_state } = this.props\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 21\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    select_parser = (input, parser) => {\n        if (parser === undefined) return undefined;\n        return parser.find(x =>\n            input.match(x.parser_name)\n        )\n    }\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let excludeBlackListResult = [];\n        const UDGNAME_condition = mappings.find(item => item.key === \"UDGNAME\");\n        const UDRPNAME_condition = mappings.find(item => item.key === \"UDRPNAME\");\n        if (inputs === undefined) return []\n        inputs.forEach(input => {\n            const UDGNAME_re = new RegExp(UDGNAME_condition.regex_str, UDGNAME_condition.regex_flags)\n            const UDGNAME_match = input.UDGNAME.match(UDGNAME_re)\n\n            const UDRPNAME_re = new RegExp(UDRPNAME_condition.regex_str, UDRPNAME_condition.regex_flags)\n            const UDRPNAME_match = input.UDRPNAME.match(UDRPNAME_re)\n\n            if (UDGNAME_match === null || UDRPNAME_match === null) {\n                excludeBlackListResult.push(input);\n            }\n        });\n\n        return excludeBlackListResult;\n    }\n    celltable() {\n        function changegridnumber(key) {\n            switch (key) {\n                case 0:\n                    return 24\n                case 1:\n                    return 18\n                case 2:\n                    return 21\n                case 3:\n                    return 14\n                default:\n                    break;\n            }\n        }\n        const { chronic_state, openTimeLine } = this.props\n\n        function TimeLine(interval, index) {\n            if (interval === 0) {\n                if (index === 0 || (index % 24) === 0) {\n                    return '2px rgba(0,0,0,0.7) solid';\n                } else if (index % 8 === 0) {\n                    return '2px rgba(0,0,0,0.5) solid';\n                }\n                else {\n                    return '1px #eeeeee solid';\n                }\n            }\n            if (interval === 1) {\n                if (index === 0 || (index % 6) === 0) {\n                    return '2px rgba(0,0,0,0.7) solid';\n                } else if (index % 2 === 0) {\n                    return '2px rgba(0,0,0,0.5) solid';\n                }\n                else {\n                    return '1px #eeeeee solid';\n                }\n            }\n            if (interval === 2) {\n\n                if (index === 0 || (index % 3) === 0) {\n                    return '2px rgba(0,0,0,0.7) solid';\n                } else {\n                    return '2px rgba(0,0,0,0.5) solid';\n                }\n            }\n            if (interval === 3) {\n                return '2px rgba(0,0,0,0.7) solid';\n            }\n        }\n        function checkLineColor(openTimeLine, chronic_state, index) {\n            if (openTimeLine) {\n                return TimeLine(chronic_state, index);\n            }\n        }\n        const number = changegridnumber(chronic_state)\n        var arr = []\n        for (let index = 0; index < number; index++) {\n            arr.push(\n                <div key={index} className='cell' style={{ borderLeft: checkLineColor(openTimeLine, chronic_state, index) }}></div>\n            )\n\n        }\n        return arr\n    }\n    render() {\n        function changegridstyle(key) {\n            switch (key) {\n                case 0:\n                    return 'ordertableoneday'\n                case 1:\n                    return 'ordertablethirdday'\n                case 2:\n                    return 'ordertableoneweek'\n                case 3:\n                    return 'ordertabletwoweek'\n                default:\n                    return null\n            }\n        }\n        function ListData(UDORDER0, interval, pickerdate) {\n\n            function formatTimer(pickerdate, interval) {\n                const endTime = pickerdate + (31 * 60 * 60 * 1000)\n                if (interval === 0) {\n                    return {\n                        startTime: endTime - (24 * 60 * 60 * 1000),\n                        endTime: endTime\n                    }\n                }\n                if (interval === 1) {\n                    return {\n                        startTime: endTime - (3 * 24 * 60 * 60 * 1000),\n                        endTime: endTime\n                    }\n                }\n                if (interval === 2) {\n                    return {\n                        startTime: endTime - (7 * 24 * 60 * 60 * 1000),\n                        endTime: endTime\n                    }\n                }\n                return {\n                    startTime: endTime - (14 * 24 * 60 * 60 * 1000),\n                    endTime: endTime\n                }\n            }\n            function formatWidth(startTime, endTime, elementStart, elementEnd) {\n                function formatStart(elementStart, startTime) {\n                    if (elementStart <= startTime) {\n                        return startTime\n                    }\n                    return elementStart\n                }\n                function formatEnd(elementEnd, endTime) {\n                    if (elementEnd <= endTime) {\n                        return elementEnd\n                    }\n                    return endTime\n                }\n                const width = document.body.clientWidth - 220\n                const widthRate = width / (endTime - startTime)\n                const start = formatStart(elementStart, startTime)\n                const end = formatEnd(elementEnd, endTime)\n                return (end - start) * widthRate\n            }\n            function formatStartPosition(startTime, endTime, elementStart) {\n                const width = document.body.clientWidth - 220\n                if (elementStart <= startTime) {\n                    return 0\n                }\n                const widthRate = width / (endTime - startTime)\n                return ((elementStart - startTime) * widthRate)\n            }\n            function formatUDORDER0(UDORDER0, timer) {\n                var arraylist = []\n                const startTime = timer.startTime\n                const endTime = timer.endTime\n                for (let index = 0; index < UDORDER0.length; index++) {\n                    const element = UDORDER0[index];\n                    const elementStart = moment(element.UDBGNDT.toString(), \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n                    const elementEnd = moment(element.UDENDDT.toString(), \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n                    if (endTime < elementStart || elementEnd < startTime) {\n                        continue\n                    }\n                    const shift = formatStartPosition(startTime, endTime, elementStart)\n                    const width = formatWidth(startTime, endTime, elementStart, elementEnd)\n                    arraylist.push({\n                        \"width\": width,\n                        \"shift\": shift,\n                        \"element\": element\n                    })\n                }\n                return arraylist\n            }\n            const timer = formatTimer(pickerdate, interval)\n            if (UDORDER0 === undefined || UDORDER0 === null) {\n                return []\n            }\n            if (UDORDER0.length === 0) {\n                return []\n            }\n            const formatUDORDER = formatUDORDER0(UDORDER0, timer)\n            return formatUDORDER\n        }\n\n\n\n        const { chronic_state, PickerDate, source } = this.props\n\n\n        const rawData = this.state.UDORDER\n\n        //filter TPN items for infection page\n        let filteredRawData = []\n        if (source === \"infection\") {\n            const selected_tpn_parser = this.select_parser(\"TPN Order\", this.state.tpnParsers)\n            console.log(\"selected_tpn_parser: \" + JSON.stringify(selected_tpn_parser))\n            if (selected_tpn_parser !== undefined) {\n                rawData.forEach(item => {\n                    const found = item.UDDRGNAM.match(RegExp(selected_tpn_parser.apply_condition.name, selected_tpn_parser.apply_condition.name_regex_flags))\n                    if (found !== null && found !== \"\") filteredRawData.push(item)\n                })\n            }\n        } else {\n            filteredRawData = rawData\n        }\n\n        let filteredData = [];\n        const selected_white_black_list_parser = this.select_parser(\"Black List\", this.state.whiteBlackListParser)\n        if (selected_white_black_list_parser !== undefined) {\n            filteredData = this.parse(filteredRawData, selected_white_black_list_parser)\n        }\n\n        const datalist = ListData(filteredData, chronic_state, PickerDate)\n        // const datalist = ListData(UDORDER0, chronic_state, PickerDate)\n\n        const Tablecell = datalist.map(function (value, index, array) {\n            function formatString(value) {\n                if (value === undefined || value === null) {\n                    return \"--\"\n                }\n                return value.toString().trim()\n            }\n            // console.log(value.width)\n            return (\n                <div key={index} style={{ padding: \"5px 0px\", paddingLeft: value.shift + 2 + \"px\" }}>\n                    <div style={{ width: value.width + \"px\", height: \"20px\", backgroundColor: \"#3B97E1\", color: \"black\", padding: \"0px 5px\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\" }}>{formatString(value.element.UDGNAME)}</div>\n                </div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\", position: 'relative' }}>\n                <div style={{ background: \"#CCCCCC\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <t2>醫藥囑</t2>\n                </div>\n                <div className={changegridstyle(chronic_state)} style={{ height: Tablecell.length ? Tablecell.length * 30 : 40 + \"px\" }}>{this.celltable()}</div>\n                <div style={{ position: 'absolute', left: 140, minHeight: \"40px\", overflowX: \"hidden\" }}>\n                    {Tablecell}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chronicordertable","import React, { Component } from 'react'\nimport Chronicordertable from './ChronicOrderTable'\n// import * as ApiGithub from '../../API/ApiGithub'\n\nclass Orderonchronic extends Component {\n    render() {\n        const { caseinfo, select_interval, UDORDER0,PickerDate } = this.props \n        const item_title = [{ title: \"醫藥囑\" }]\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <Chronicordertable openTimeLine={true} title={item_title} caseinfo={caseinfo} chronic_state={select_interval} UDORDER0={UDORDER0} PickerDate={PickerDate} source={this.props.source}></Chronicordertable>\n            </div>\n        );\n    }\n}\n\nexport default Orderonchronic","import React, { Component } from 'react'\nimport './ChronicWeightTable.scss'\nimport moment from 'moment'\nimport * as QTWPER from '../../Resource/QTWPER'\n// import * as ApiProvider from '../../API/ApiProvider'\n\nclass Chronicweighttable extends Component {\n    // 0:一天 1:三天 2:一週 3:兩週\n    state = { QTWPER: null }\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const weight = caseinfo.WEIGHT\n        console.log(caseinfo)\n        this.setState({ QTWPER: weight })\n        // this.setState({ QTWPER: QTWPER.data.outmsg.resconts.rescont })\n    }\n\n    switch_state() {\n        const { chronic_state } = this.props\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 21\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    celltable() {\n        function changegridnumber(key) {\n            switch (key) {\n                case 0:\n                    return 24\n                case 1:\n                    return 18\n                case 2:\n                    return 21\n                case 3:\n                    return 14\n                default:\n                    break;\n            }\n        }\n        const { chronic_state, openTimeLine } = this.props\n        const number = changegridnumber(chronic_state);       \n        function TimeLine(interval, index) {            \n            if (interval === 0) {              \n                if (index === 0 || (index % 24) === 0) {                   \n                    return '2px rgba(0,0,0,0.7) solid';\n                } else if (index % 8 === 0) {\n                    return '2px rgba(0,0,0,0.5) solid';\n                }\n                else {                  \n                    return '1px #eeeeee solid';\n                }              \n            }\n            if (interval === 1) {               \n                if (index === 0 || (index % 6) === 0) {\n                    return '2px rgba(0,0,0,0.7) solid';\n                } else if (index % 2 === 0) {\n                    return '2px rgba(0,0,0,0.5) solid';\n                }\n                else {\n                    return '1px #eeeeee solid';\n                }               \n            }\n            if (interval === 2) {\n             \n                if (index === 0 || (index % 3) === 0) {\n                    return '2px rgba(0,0,0,0.7) solid';\n                } else {\n                    return '2px rgba(0,0,0,0.5) solid';\n                }               \n            }\n            if (interval === 3) {\n                return '2px rgba(0,0,0,0.7) solid';               \n            }\n        }\n        function checkLineColor(openTimeLine, chronic_state,index) {\n            if(openTimeLine){                \n                return TimeLine(chronic_state,index);\n            }\n        }\n        var arr = []\n        for (let index = 0; index < number; index++) {\n            arr.push(\n                <div key={index} className='cell' style={{borderLeft: checkLineColor(openTimeLine, chronic_state,index)}}></div>\n            )\n\n        }\n        return arr\n    }\n    weightRectRender() {\n        function TimerFormat(interval, pickerdate) {\n            const endTime = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    startTime: endTime - (24 * 60 * 60 * 1000),\n                    endTime: endTime,\n                    interval: 24,\n                    grid: 1\n                }\n            }\n            if (interval === 1) {\n                return {\n                    startTime: endTime - (3 * 24 * 60 * 60 * 1000),\n                    endTime: endTime,\n                    interval: 18,\n                    grid: 4\n                }\n            }\n            if (interval === 2) {\n                return {\n                    startTime: endTime - (7 * 24 * 60 * 60 * 1000),\n                    endTime: endTime,\n                    interval: 21,\n                    grid: 8\n                }\n            }\n            return {\n                startTime: endTime - (14 * 24 * 60 * 60 * 1000),\n                endTime: endTime,\n                interval: 14,\n                grid: 24\n            }\n        }\n        const { chronic_state, caseinfo, PickerDate } = this.props\n        // const QTPWERList = caseinfo.WEIGHT\n        const QTPWERList = this.state.QTWPER\n        console.log(QTPWERList)\n        if (QTPWERList === undefined || QTPWERList === null) {\n            return null\n        }\n        const WeightList = QTPWERList.filter(function (info, index, arr) {\n            return info.type === \"TW\"\n        })\n\n        const timer = TimerFormat(chronic_state, PickerDate)\n        const width = document.body.clientWidth - 220\n        const widthRate = width / (timer.endTime - timer.startTime)\n        var WeightListFormat = []\n        for (let index = 0; index < WeightList.length; index++) {\n            const element = WeightList[index];\n            const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n            // if (timer.startTime > elementTime) {\n            //     const elementValue = parseInt(Number(element.value2) * 1000)\n            //     WeightListFormat.splice(0, 1, {\n            //         Time: elementTime,\n            //         Value: elementValue\n            //     })\n            // }\n            if (timer.startTime <= elementTime && elementTime <= timer.endTime) {\n                const elementValue = parseInt(Number(element.value2) * 1000)\n                WeightListFormat.push({\n                    Time: elementTime,\n                    Value: elementValue\n                })\n            }\n        }\n        const sortWeight = WeightListFormat.sort(function (a, b) {\n            return a.Value > b.Value ? 1 : -1;\n        });\n        console.log(sortWeight)\n        var shift = 0\n        var elementWidthList = []\n        for (let index = 0; index < sortWeight.length; index++) {\n            const element = sortWeight[index];\n            if (index === 0) {\n                shift = (element.Time - timer.startTime) * widthRate\n            }\n            if (sortWeight.length - 1 === index) {\n                const time1 = element.Time\n                const time2 = timer.endTime\n                const elementWidth = (time2 - time1) * widthRate\n                elementWidthList.push({\n                    Value: element.Value,\n                    width: elementWidth\n                })\n            }\n            else {\n                const time1 = sortWeight[index].Time\n                const time2 = sortWeight[index + 1].Time\n                console.log(time2 - time1)\n                const elementWidth = (time2 - time1) * widthRate\n                elementWidthList.push({\n                    Value: element.Value,\n                    width: elementWidth\n                })\n            }\n        }\n        return {\n            shift: shift,\n            elementWidthList: elementWidthList\n        }\n    }\n    render() {\n        const { chronic_state, caseinfo, PickerDate } = this.props\n        console.log(chronic_state)\n        // const weight = caseinfo.WEIGHT\n        const weight = this.state.QTWPER\n        if (weight===null) {\n            return null\n        }\n        console.log(weight)\n        function FormatEndTimeStamp(start, interval) {\n            if (interval === 0) {\n                return start - (24 * 60 * 60 * 1000)\n            }\n            if (interval === 1) {\n                return start - (3 * 24 * 60 * 60 * 1000)\n\n            }\n            if (interval === 2) {\n                return start - (7 * 24 * 60 * 60 * 1000)\n\n            }\n            if (interval === 3) {\n                return start - (14 * 24 * 60 * 60 * 1000)\n\n            }\n        }\n        const end = PickerDate + (31 * 60 * 60 * 1000)\n        const start = FormatEndTimeStamp(end, chronic_state)\n        const datafilter = weight.filter(function (value, index, arr) {\n            const timeString = value.rec_dat.toString() + value.rec_tim.toString()\n            const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n            // console.log(start, time, end)\n            return start < time && time < end\n        })\n        const datafilterTime = datafilter.map(function (value, index, arr) {\n            const timeString = value.rec_dat.toString() + value.rec_tim.toString()\n            const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n            return time\n        })\n        console.log(weight, datafilter, datafilterTime)\n        const diff = end - start\n        var widthArray = []\n        if (datafilter.length === 0) {\n            // const element = weight[0]\n            // widthArray.push({\n            //     width: 100,\n            //     weight: (element.value2) * 1000\n            // })\n        }\n        if (datafilter.length === 1) {\n            for (let index = 0; index < datafilter.length; index++) {\n                const element = datafilter[index];\n                const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                const width = parseInt(100 * (time - start) / diff)\n                widthArray.push({\n                    width: width,\n                    weight: Number(element.value2) * 1000\n                })\n            }\n        }\n        else {\n            for (let index = 0; index < datafilter.length - 1; index++) {\n                const element = datafilter[index];\n                if (index === 0) {\n                    const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                    const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                    const width = parseInt(100 * (time - start) / diff)\n                    widthArray.push({\n                        width: width,\n                        weight: Number(element.value2) * 1000\n                    })\n                }\n                else if (index === (datafilterTime.length - 1)) {\n                    const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                    const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                    const width = parseInt(100 * (end - time) / diff)\n                    widthArray.push({\n                        width: width,\n                        weight: Number(element.value2) * 1000\n                    })\n                }\n                else {\n                    const element2 = datafilter[index + 1]\n                    const timeString2 = element2.rec_dat.toString() + element2.rec_tim.toString()\n                    const time2 = moment(timeString2, \"YYYYMMDDHHmm\").valueOf()\n                    const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                    const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                    const width = parseInt(100 * (time2 - time) / diff)\n                    widthArray.push({\n                        width: width,\n                        weight: Number(element.value2) * 1000\n                    })\n                }\n            }\n        }\n        console.log(widthArray)\n        function changegridstyle(key) {\n            switch (key) {\n                case 0:\n                    return 'chronicweighttableoneday'\n                case 1:\n                    return 'chronicweighttablethreeday'\n                case 2:\n                    return 'chronicweighttableoneweek'\n                case 3:\n                    return 'chronicweighttabletwoweek'\n                default:\n                    return null\n            }\n        }\n        const list = this.weightRectRender()\n        if (list === null || list === undefined) {\n            return null\n        }\n        const render = list.elementWidthList.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ border: \"1px black solid\", borderCollapse: \"collapse\", width: value.width + '%', height: \"20\", backgroundColor: \"#3B97E1\", color: \"white\", display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>{value.Value}g</div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\", position: 'relative' }}>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", background: \"#cccccc\" }}>\n                    <t2>體重</t2>\n                </div>\n                <div className={changegridstyle(chronic_state)}>{this.celltable()}</div>\n                <div style={{ position: 'absolute', left: 140, paddingTop: \"15px\" }}>\n                    <div style={{ paddingLeft: list.shift + \"px\", display: \"flex\", width: 'calc(100vw - 220px)', overflow: \"hidden\" }}>\n                        {render}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chronicweighttable\n","import React, { Component } from 'react'\nimport Chronicweighttable from './ChronicWeightTable'\n\nclass Weightonchronic extends Component {\n    render() {\n        const { caseinfo, PickerDate, select_interval } = this.props\n        const item_title = [{ title: \"體重\" }] \n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <Chronicweighttable openTimeLine={true} PickerDate={PickerDate} title={item_title} caseinfo={caseinfo} chronic_state={select_interval}></Chronicweighttable>\n            </div>\n        );\n    }\n}\n\nexport default Weightonchronic","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport '../Patientview/CrossSectionView/Crosssectionvitalsignchart.scss'\n\nclass Vitalxaxis extends Component {\n    state = {\n        change: false,\n        viewwidth: window.innerWidth - 220\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n        window.addEventListener('resize', this.debounceWindowSize);\n    }\n    debounce(func, wait, immediate) {\n        var timeout;\n        return () => {\n            var context = this, args = arguments;\n            var later = function() {\n                timeout = null;\n                if (!immediate) func.apply(context, args);\n            };\n            var callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) func.apply(context, args);\n        };\n    }\n\n    debounceWindowSize = this.debounce(this.recalcWindowSize, 500);\n\n    componentWillUnmount(){\n        window.removeEventListener('resize', this.debounceWindowSize);\n    }\n\n    recalcWindowSize() {\n        this.setState({ viewwidth: window.innerWidth - 220 });\n    }\n\n    drawChart() {\n        function nowtime(time) {\n            return time + (7 * 60 * 60 * 1000)\n        }\n        function monthformat(month) {\n            return month + 1\n        }\n        function intervaldays(select_date, select_interval) {\n            switch (select_interval) {\n                //一天\n                case 0:\n                    return select_date - 86400000 * 1\n                //三天\n                case 1:\n                    return select_date - 86400000 * 3\n                //一週\n                case 2:\n                    return select_date - 86400000 * 7\n                //兩週\n                case 3:\n                    return select_date - 86400000 * 14\n                default:\n                    return null\n            }\n        }\n\n        const { id_key, svg_id,select_interval, select_date } = this.props\n        // const viewwidth = window.screen.availWidth - 220\n        //選取時間(0點)\n        const select_date_zero = new Date(new Date(select_date).getFullYear() + ',' + monthformat(new Date(select_date).getMonth()) + ',' + new Date(select_date).getDate()).getTime()\n        //選取時間(7點)\n        const select_time_format = nowtime(select_date_zero)\n        //select_intercal:0一天 1三天 2兩週\n        const Start_time = intervaldays(select_time_format, select_interval)\n        var xaxis = []\n        if (select_interval === 0) {\n            for (let index = 0; index < 24; index++) {\n                const time = Start_time + (30 * 60 * 1000) + (index * 60 * 60 * 1000)\n                xaxis.push(time)\n            }\n        }\n        if (select_interval === 1) {\n            for (let index = 0; index < 21; index++) {\n                const time = Start_time + (2 * 60 * 60 * 1000) + (index * 60 * 60 * 1000 * 4)\n                xaxis.push(time)\n            }\n        }\n\n        if (select_interval === 2) {\n            for (let index = 0; index < 21; index++) {\n                const time = Start_time + (4 * 60 * 60 * 1000) + (index * 60 * 60 * 1000 * 8)\n                xaxis.push(time)\n            }\n        }\n\n        if (select_interval === 3) {\n            for (let index = 0; index < 14; index++) {\n                const time = Start_time + (12 * 60 * 60 * 1000) + (index * 60 * 60 * 1000 * 24)\n                xaxis.push(time)\n            }\n        }\n        var x = d3.scaleLinear()\n            .domain([Start_time, select_time_format])\n            .range([0, this.state.viewwidth])\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            // .attr(\"viewbox\", [0, 0, viewwidth + 60, 25])\n            .style(\"width\", this.state.viewwidth + 100)\n            .style(\"height\", 25)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 15 + \")\");\n\n        var formatHour = d3.timeFormat(\"%H\")\n        var formatday = d3.timeFormat(\"%d\")\n        function multiFormat(date) {\n            if (select_interval === 0) {\n                return formatHour(date) + '~' + formatHour(date + (60 * 60 * 1000))\n            }\n            if (select_interval === 1) {\n                return formatHour(date - (2 * 60 * 60 * 1000)) + '~' + formatHour(date + (2 * 60 * 60 * 1000))\n            }\n            if (select_interval === 2) {\n                return formatHour(date - (4 * 60 * 60 * 1000)) + '~' + formatHour(date + (4 * 60 * 60 * 1000))\n            }\n            if (select_interval === 3) {\n                return monthformat(new Date(date).getMonth()) + '/' + formatday(date)\n            }\n            return formatHour(date)\n        }\n        var xAxis = d3.axisTop(x)\n            .tickValues(xaxis)\n            .tickSize(0, 0)\n            .tickPadding(5)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\");\n\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default Vitalxaxis;","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport '../Patientview/CrossSectionView/Crosssectionvitalsignchart.scss'\nimport { yyyymmddformat } from '../Function/Timeformat'\nimport moment from 'moment';\n\nclass Vitalxaxisbot extends Component {\n    state = {\n        change: false,\n        viewwidth: window.innerWidth - 221\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n        window.addEventListener('resize', this.debounceWindowSize);\n    }\n\n    debounce(func, wait, immediate) {\n        var timeout;\n        return () => {\n            var context = this, args = arguments;\n            var later = function() {\n                timeout = null;\n                if (!immediate) func.apply(context, args);\n            };\n            var callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) func.apply(context, args);\n        };\n    }\n\n    debounceWindowSize = this.debounce(this.recalcWindowSize, 500);\n\n    componentWillUnmount(){\n        window.removeEventListener('resize', this.debounceWindowSize);\n    }\n\n    recalcWindowSize() {\n        this.setState({ viewwidth: window.innerWidth - 221 });\n    }\n\n    drawChart() {\n        function intervaldays(select_date, select_interval) {\n            switch (select_interval) {\n                //一天\n                case 0:\n                    return moment(select_date).add(7, 'hours').valueOf();\n                //三天\n                case 1:\n                    return moment(select_date).subtract(2, 'days').add(7, 'hours').valueOf();\n                //一週\n                case 2:\n                    return moment(select_date).subtract(6, 'days').add(7, 'hours').valueOf();\n                //兩週\n                case 3:\n                    return select_date - 86400000 * 14\n                default:\n                    return null\n            }\n        }\n\n        const { id_key, svg_id, select_interval, select_date } = this.props;\n        const Start_time = intervaldays(select_date, select_interval)\n        const End_time = moment(select_date).add(1, 'day').startOf('day').add(7, 'hours').valueOf();\n        console.log('$$$$$$$$$$$', Start_time, End_time);\n        var xaxis = []       \n        if (select_interval === 0) {\n            xaxis.push(moment(Start_time).valueOf());\n            const time = moment(Start_time).add(1, 'day').startOf('day').valueOf();\n            xaxis.push(time)\n        }\n        if (select_interval === 1) {\n            xaxis.push(Start_time);\n            for (let index = 1; index < 4; index++) {\n                const time = moment(Start_time).add(index, 'days').startOf('day').valueOf();\n                xaxis.push(time)\n            }\n        }\n\n        if (select_interval === 2) {\n            xaxis.push(Start_time);\n            for (let index = 1; index < 8; index++) {\n                const time = moment(Start_time).add(index, 'days').startOf('day').valueOf();\n                xaxis.push(time)\n            }\n        }\n\n        console.log('$$$$$$$$$$$$$$$', xaxis, '$$$$$$$$$$$$$$$$');\n        // if (select_interval === 3) {\n        //     for (let index = 0; index < 14; index++) {\n        //         const time = Start_time + (12 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000)\n        //         xaxis.push(time)\n        //     }\n        // }\n        var x = d3.scaleLinear()\n            .domain([Start_time, End_time])\n            .range([0, this.state.viewwidth - 1])\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            // .attr(\"viewbox\", [0, 0, viewwidth + 60, 25])\n            .style(\"width\", this.state.viewwidth)\n            .style(\"height\", 25)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + -9 + \")\");\n\n\n        function multiFormat(date) {\n            return moment(date).format(\"MM/DD\")\n        }\n\n\n        var xAxis = d3.axisBottom(x)\n            .tickValues(xaxis)\n            .tickSize(0, 0)\n            .tickPadding(10)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\");\n\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default Vitalxaxisbot;","import React, { Component } from 'react'\nimport { Select, Button } from 'antd';\n// import Chronicvitalchart from './Chronic_vital_chart'\nimport { statecolor } from '../../Function/Wardstate'\nimport { formatxArrayhalf, formatendtime } from '../../Function/Timeformat'\nimport './Chronic_vital.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport Crosssectionvitalsignchart from '../CrossSectionView/Crossectionvitalsignchart'\nimport '../../Wardview/Wardchart.scss'\n\n\nclass Vitalonchronic extends Component {\n    state = {\n        check_state_one: 0,\n        check_state_three: 0,\n        check_state_oneweek: 0,\n        check_state_twoweek: 0,\n        statussource: \"CM\",\n        CenterMonitorValue: [],\n        width: window.innerWidth - 171,\n        pbStatus: true\n    }\n\n    debounce(func, wait, immediate) {\n        var timeout;\n        return () => {\n            var context = this, args = arguments;\n            var later = function() {\n                timeout = null;\n                if (!immediate) func.apply(context, args);\n            };\n            var callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) func.apply(context, args);\n        };\n    }\n\n    debounceWindowSize = this.debounce(this.recalcWindowSize, 500);\n\n    componentDidMount() {\n        this.onClickCheckgrid_one(24);\n        window.addEventListener('resize', this.debounceWindowSize);\n    }\n\n    componentWillUnmount(){\n        window.removeEventListener('resize', this.debounceWindowSize);\n    }\n\n    recalcWindowSize() {\n        this.setState({ width: window.innerWidth - 171 });\n    }\n\n    getVitalSignData(startTime, EndTime, Phistnum) {\n        ApiProvider.getPatientwardvalueMedian(Phistnum, startTime, EndTime)\n            .then(data => {\n                console.log(data.data)\n                this.setState({\n                    CenterMonitorValue: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n                this.setState({\n                    CenterMonitorValue: null\n                })\n            })\n    }\n\n    // switchdata(value_interval, sourcefrom) {\n    //     console.log(sourcefrom)\n    //     const { defaultdate } = this.props\n    //     function changevitaldays(vitaldays) {\n    //         if (vitaldays === 3) {\n    //             return 18\n    //         }\n    //         else {\n    //             return 24\n    //         }\n    //     }\n\n    //     function Interval_switch(interval) {\n    //         if (interval === 0) {\n    //             return 1\n    //         }\n    //         if (interval === 1) {\n    //             return 3\n    //         }\n    //     }\n    //     const interval = Interval_switch(value_interval)\n    //     const starttime = formatendtime(defaultdate) - (interval * 24 * 60 * 60 * 1000)\n    //     if (sourcefrom === 'NIS') {\n    //         const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n    //         const data = simulationnisdata(datatime, changevitaldays(interval))\n    //         console.log(data)\n    //         return data\n    //     }\n    //     else {\n\n    //         const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n    //         const data = simulationCentermonitordata(datatime, changevitaldays(interval))\n    //         return data\n    //     }\n    // }\n    Interval_grid_box() {\n        var gridarray = []\n        console.log(this.props.select_interval)\n        if (this.props.select_interval === 0) {\n            for (let index = 0; index < 24; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_one) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: 360, border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_one(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: 360 }} onClick={() => this.onClickCheckgrid_one(number)}></div>)\n            }\n        }\n        if (this.props.select_interval === 1) {\n            for (let index = 0; index < 18; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_three) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: 360, border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_three(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: 360 }} onClick={() => this.onClickCheckgrid_three(number)}></div>)\n            }\n        }\n        if (this.props.select_interval === 2) {\n            for (let index = 0; index < 21; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_oneweek) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: 360, border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_oneweek(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: 360 }} onClick={() => this.onClickCheckgrid_oneweek(number)}></div>)\n            }\n        }\n        if (this.props.select_interval === 3) {\n            for (let index = 0; index < 14; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_twoweek) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: 360, border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_twoweek(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: 360 }} onClick={() => this.onClickCheckgrid_twoweek(number)}></div>)\n            }\n        }\n        return gridarray\n    }\n\n    onClickCheckgrid_one(number) {\n        console.log(number)\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (24 * 60 * 60 * 1000)\n        const endtime = ST + (number * 60 * 60 * 1000)\n        const starttime = endtime - 60 * 60 * 1000\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ check_state_one: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n    onClickCheckgrid_three(number) {\n        console.log(number)\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (3 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 4) * 60 * 60 * 1000)\n        const starttime = endtime - (4 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ chackstate_three: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n\n    onClickCheckgrid_oneweek(number) {\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (7 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 8) * 60 * 60 * 1000)\n        const starttime = endtime - (8 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ check_state_oneweek: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n    onClickCheckgrid_twoweek(number) {\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (14 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 24) * 60 * 60 * 1000)\n        const starttime = endtime - (24 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ check_state_twoweek: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n\n    sourcehandleChange = (value) => {\n        this.setState({ statussource: value })\n    }\n    render() {\n        function centervaluetoNull(value) {\n            function FilterList(DataList, type) {\n                const filterData = DataList.filter(function (value, index, arr) {\n                    return value.type === type\n                })\n                if (filterData.length === 0) {\n                    return null\n                }\n                console.log(filterData)\n                return filterData[0].Mid\n            }\n            if (value === undefined || value === null) {\n                return {\n                    hr: null,\n                    rr: null,\n                    bt: null,\n                    spo2: null,\n                    abpd: null,\n                    abpm: null,\n                    abps: null,\n                    nbpm: null,\n                    nbps: null,\n                    nbpd: null\n                }\n            }\n            return {\n                hr: FilterList(value, \"hr\"),\n                rr: FilterList(value, \"rr\"),\n                bt: FilterList(value, \"bt\"),\n                spo2: FilterList(value, \"spo2\"),\n                abpd: FilterList(value, \"abpd\"),\n                abpm: FilterList(value, \"abpm\"),\n                abps: FilterList(value, \"abps\"),\n                nbpd: FilterList(value, \"nbpd\"),\n                nbps: FilterList(value, \"nbps\"),\n                nbpm: FilterList(value, \"nbpm\"),\n            }\n        }\n        function centervalueNull(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            return value\n        }\n        function Interval_grid(number) {\n            switch (number) {\n                case 0:\n                    return 24\n                case 1:\n                    return 18\n                case 2:\n                    return 21\n                case 3:\n                    return 14\n                default:\n                    return null\n            }\n        }\n        function formatPickerTimer(pickerdate, interval) {\n            const end = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    startTime: end - (24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n            if (interval === 1) {\n                return {\n                    startTime: end - (3 * 24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n            if (interval === 2) {\n                return {\n                    startTime: end - (7 * 24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n            else {\n                return {\n                    startTime: end - (14 * 24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n        }\n        function limitValue(value, upper, lower) {\n            if (value > upper || value < lower) {\n                return false\n            }\n            return true\n        }\n        function valueFormat(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"--\"\n            }\n            return value\n        }\n\n        const { Option } = Select;\n        const { source } = this.props\n        const pickerTimer = formatPickerTimer(this.props.PickerDate, this.props.select_interval)\n        const centervalue = centervaluetoNull(this.state.CenterMonitorValue)\n        const { width } = this.state;\n        const status = this.state.pbStatus\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\", marginTop: \"10px\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>生命徵象</t2>\n                    {/* <div >\n                        <Button style={{ margin: \"0px 10px\" }} value={\"CM\"} type=\"primary\" onClick={this.sourcehandleChange}>Center Monitor</Button>\n                        <Button style={{}} value={\"NIS\"} type=\"primary\" onClick={this.sourcehandleChange}>NIS</Button>\n                    </div> */}\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridGap: \"5px\", marginLeft: \"20px\" }}>\n                        <div className={this.state.statussource === \"CM\" ? \"vitalBtnSource\" : \"vitalBtnSelectSource\"} style={{ marginRight: \"1px\" }} onClick={() => this.sourcehandleChange('CM')}>\n                            中央站資訊\n                        </div>\n                        <div className={this.state.statussource === \"NIS\" ? \"vitalBtnSource\" : \"vitalBtnSelectSource\"} onClick={() => this.sourcehandleChange('NIS')}>\n                            護理系統資訊\n                        </div>\n                    </div>\n                    {\n                        this.props.fromInfection ? null\n                            :\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto auto auto\", gridGap: \"2px\", marginLeft: \"15px\" }}>\n                                <div className={this.props.select_interval === 0 ? \"vitalBtnInterval\" : \"vitalBtnSelectInterval\"} style={{ marginRight: \"1px\" }} onClick={() => this.props.onSelectchange(0)}>\n                                    顯示一天\n                                </div>\n                                <div className={this.props.select_interval === 1 ? \"vitalBtnInterval\" : \"vitalBtnSelectInterval\"} style={{ marginRight: \"1px\" }} onClick={() => this.props.onSelectchange(1)}>\n                                    顯示三天\n                                </div>\n                                <div className={this.props.select_interval === 2 ? \"vitalBtnInterval\" : \"vitalBtnSelectInterval\"} style={{ marginRight: \"1px\" }} onClick={() => this.props.onSelectchange(2)}>\n                                    顯示一週\n                                </div>\n                                <div className={this.props.select_interval === 3 ? \"vitalBtnInterval\" : \"vitalBtnSelectInterval\"} onClick={() => this.props.onSelectchange(3)}>\n                                    顯示二週\n                                </div>\n                            </div>\n                    }\n                </div>\n\n                <div className=\"halfwardchart\">\n                    <div style={{ display: \"grid\", gridTemplateRows: \"repeat(6,100px)\" }}>\n                        <div className=\"rowTitle\">\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"90px\", padding: \"0px 2px\", backgroundColor: status ? \"white\" : statecolor('HR') }}>\n                                <t3 style={{ color: status ? statecolor('HR') : \"white\" }}>HR</t3>\n                                <div style={{ fontWeight: \"600\", fontSize: \"40px\", lineHeight: \"44px\", paddingRight: \"3px\", color: status ? statecolor('HR') : \"white\" }}>{centervalueNull(centervalue.hr)}</div>\n                            </div>\n                        </div>\n                        <div className=\"rowTitle\">\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"150px\", padding: \"0px 2px\", backgroundColor: status ? \"white\" : statecolor('BP') }}>\n                                <div style={{ color: status ? statecolor('BP') : \"white\" }}>NBP(mmHg)</div>\n                                <div style={{ fontWeight: \"600\", fontSize: \"30px\", lineHeight: \"34px\", color: status ? statecolor('BP') : \"white\" }}>{centervalueNull(centervalue.nbps)}/{centervalueNull(centervalue.nbpd)}</div>\n                                <div style={{ fontWeight: \"600\", fontSize: \"20px\", lineHeight: \"22px\", color: status ? statecolor('BP') : \"white\" }}>({centervalueNull(centervalue.nbpm)})</div>\n                            </div>\n                        </div>\n                        <div className=\"rowTitle\">\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"150px\", padding: \"0px 2px\", backgroundColor: status ? \"white\" : statecolor('BP') }}>\n                                <div style={{ color: status ? statecolor('BP') : \"white\" }}>ABP(mmHg)</div>\n                                <div style={{ fontWeight: \"600\", fontSize: \"30px\", lineHeight: \"34px\", color: status ? statecolor('BP') : \"white\" }}>{centervalueNull(centervalue.abps)}/{centervalueNull(centervalue.abpd)}</div>\n                                <div style={{ fontWeight: \"600\", fontSize: \"20px\", lineHeight: \"22px\", color: status ? statecolor('BP') : \"white\" }}>({centervalueNull(centervalue.abpm)})</div>\n                            </div>\n                        </div>\n                        <div className=\"rowTitle\">\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"150px\", padding: \"0px 2px\", backgroundColor: limitValue(centervalue.spo2, 100, 90) ? \"white\" : statecolor('SpO2') }}>\n                                <div style={{ color: limitValue(centervalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>\n                                    SpO\n                                    <sub >2</sub>\n                                    (%)\n                                </div>\n                                <div style={{ fontWeight: \"600\", fontSize: \"40px\", lineHeight: \"44px\", paddingRight: \"3px\", color: limitValue(centervalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>{centervalueNull(centervalue.spo2)}%</div>\n                            </div>\n                        </div>\n                        <div className=\"rowTitle\">\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"150px\", padding: \"0px 2px\", backgroundColor: limitValue(centervalue.bt, 38, 36) ? \"white\" : statecolor('BT') }}>\n                                <div style={{ color: limitValue(centervalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>BT</div>\n                                <div style={{ fontWeight: \"600\", fontSize: \"40px\", lineHeight: \"44px\", paddingRight: \"3px\", color: limitValue(centervalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>{valueFormat(centervalue.bt)}</div>\n                            </div>\n                        </div>\n                        <div className=\"rowTitle\">\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"150px\", padding: \"0px 2px\", backgroundColor: limitValue(centervalue.rr, 60, 20) ? \"white\" : statecolor('RR') }}>\n                                <div style={{ color: limitValue(centervalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>RR(min)</div>\n                                <div style={{ fontWeight: \"600\", fontSize: \"40px\", lineHeight: \"44px\", paddingRight: \"3px\", color: limitValue(centervalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>{centervalueNull(centervalue.rr)}</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ position: \"relative\" }}>\n                        <div style={{ position: \"absolute\", height: \"340px\", width: width - 50, top: 5, left: 50 }} >\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + Interval_grid(this.props.select_interval) + \",1fr)\" }}>\n                                {this.Interval_grid_box()}\n                            </div>\n                        </div>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"hr_svg_\" + source}\n                            id_key={\"hr_id_\" + source}\n                            type={\"hr\"}\n                            source={this.state.statussource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={85}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={100}\n                            upper={160}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor=\"#779F50\"\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={200}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"nbp_svg\" + source}\n                            id_key={\"nbp_id\" + source}\n                            type={\"nbp\"}\n                            source={this.state.statussource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={85}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={55}\n                            upper={75}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#C12528\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"abp_svg\" + source}\n                            id_key={\"abp_id\" + source}\n                            type={\"abp\"}\n                            source={this.state.statussource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={85}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={55}\n                            upper={75}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#C12528\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"spo2_svg_\" + source}\n                            id_key={\"spo2_id_\" + source}\n                            type={\"spo2\"}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={85}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={90}\n                            upper={100}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#4773B8\"}\n                            colorshadow={\"#4773B8\"}\n                            min={60}\n                            max={100}\n                            source={this.state.statussource}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"bt_svg_\" + source}\n                            id_key={\"bt_id_\" + source}\n                            type={\"bt\"}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            source={this.state.statussource}\n                            height={85}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={36}\n                            upper={38}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#7F3DB5\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={33}\n                            max={43}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"rr_svg_\" + source}\n                            id_key={\"rr_id_\" + source}\n                            type={\"rr\"}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={85}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={20}\n                            upper={60}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#DE7531\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}\n                            source={this.state.statussource}>\n                        </Crosssectionvitalsignchart>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default Vitalonchronic\n","import React, { Component } from 'react';\nimport { DatePicker, Button, Select, Checkbox } from 'antd';\nimport filterlogo from '../../Image/svg/filter.svg'\nimport Inoutonchronic from './Chronic_io'\nimport Chroniclab from './ChronicLab'\nimport Chronicrt from './ChronicRT'\nimport Orderonchronic from './ChronicOrder'\nimport Weightonchronic from './ChronicWeight'\nimport Vitalxaxis from '../../Module/Vitalxaxis'\nimport Vitalxaxisbot from '../../Module/Vitalxaxisbot'\nimport moment from 'moment'\nimport './Chroniclelayout.scss'\nimport Vitalonchronic from './Chronic_vital'\nimport locale from 'antd/es/date-picker/locale/zh_TW';\n\nclass Chroniclelayout extends Component {\n    state = {\n        display_Mode: false,\n        Cross_item: [0, 1, 2, 3, 4, 5],\n        scrollstate: 0,\n        PickerDate: moment(moment().format('YYYYMMDD'), \"YYYYMMDD\").valueOf(), //選擇日期\n        select_interval: 0, //選擇區間\n        statuschange: 0,\n    }\n    onChangeCross = (checkedValues) => {\n        this.setState({ Cross_item: checkedValues })\n    }\n\n    open_display() {\n        this.setState({\n            display_Mode: !this.state.display_Mode\n        })\n    }\n    scrollToAnchor = (anchorName) => {\n        console.log(anchorName)\n        if (anchorName) {\n            let anchorElement = document.getElementById(anchorName);\n            if (anchorElement) { anchorElement.scrollIntoView(); }\n        }\n    }\n    scroll_btn_style(index) {\n        console.log(index, this.state.scrollstate)\n        if (index === this.state.scrollstate) {\n            return true\n        }\n        else return false\n    }\n    onChange = (date, dateString) => {\n        console.log(date, dateString);\n\n        this.setState(\n            {\n                PickerDate: date.valueOf()\n            }\n        )\n    }\n    onSelectchange = (value) => {\n        this.setState(\n            {\n                select_interval: value\n            }\n        )\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDate } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const bTemp = bTime - (6 * day)\n                bronDate <= bTemp && this.onChange(moment(bTime))\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD'))\n                this.onChange(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= aTemp && this.onChange(moment(aTime))\n                break;\n            default:\n                break;\n        }\n    }\n\n    display_item(number) {\n        const item = this.state.Cross_item\n        var filter = item.some(function (item, index, array) {\n            return item === number\n        });\n        return filter\n    }\n\n    render() {\n        const { Option } = Select;\n        // const dateFormat = 'YYYY/MM/DD';\n        const { caseinfo } = this.props\n        const crosssectioncontrollist =\n            [{ \"name\": \"生命徵象\", \"scrollpoint\": \"vital_sign_chronic\" },\n            { \"name\": \"輸出入\", \"scrollpoint\": \"input_output_chronic\" },\n            { \"name\": \"檢驗結果\", \"scrollpoint\": \"lab_chronic\" },\n            { \"name\": \"呼吸評估\", \"scrollpoint\": \"rt_chronic\" },\n            { \"name\": \"醫藥囑\", \"scrollpoint\": \"order_chronic\" },\n            { \"name\": \"體重\", \"scrollpoint\": \"infection_chronic\" }]\n        console.log(caseinfo.PBASINGNINFO.PBIRTHDT.toString())\n\n        const btn_style = {\n            unclick_style: { borderRadius: \"4px\", color: \"#001a6d88\", border: \"1px solid #001a6d88\", padding: \"0px 4px\", height: \"30px\" }\n        }\n\n        let button = crosssectioncontrollist.map(\n            (item, index) => <Button onClick={this.scrollToAnchor.bind(this, item.scrollpoint)} key={index} style={btn_style.unclick_style}>\n                <t3>{item.name}</t3>\n            </Button >);\n\n        const display_style = {\n            displye_mode: { position: \"absolute\", right: '0px', top: \"50px\", width: \"200px\", background: \"white\", boxShadow: \"3px 3px 12px\", zIndex: \"100\", borderRadius: \"4px\" },\n            non_display_mode: { display: \"none\" },\n            check_area: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\" },\n            check_text: { padding: \"4px\", width: \"140px\", borderRadius: \"4px\", borderColor: 'rgba(0, 0, 0, 0.15)', borderStyle: \"solid\", borderWidth: \"1px\", marginLeft: \"10px\", borderRadius: \"4px\" }\n        }\n        return (\n            <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", height: \"40px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"140px 120px auto\", gridColumnGap: \"5px\" }}>\n                        <DatePicker locale={locale} disabledDate={(current) => { return current > moment().startOf(\"day\") || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }} onChange={this.onChange} value={moment(this.state.PickerDate)} allowClear={false} />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\", marginLeft: \"10px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", position: \"relative\" }}>\n                        <t2 >快速切換：</t2>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(6,auto)\", gridColumnGap: \"5px\" }}>{button}</div>\n                        <div onClick={() => this.open_display()} style={{ cursor: \"pointer\", marginLeft: \"5px\" }}>\n                            <img src={filterlogo} alt='filterlogo' style={{ width: '15px', height: '15px' }}></img>\n                        </div>\n                        <div style={this.state.display_Mode ? display_style.displye_mode : display_style.non_display_mode}>\n                            <t2 className='controlmoduletitle'>顯示切換</t2>\n                            <div style={{ marginTop: \"10px\", marginBottom: \"20px\" }}>\n                                <Checkbox.Group defaultValue={this.state.Cross_item} id={\"checkbox_group\"} style={{ width: '100%', display: \"grid\", gridTemplateRows: \"repeat(6,1fr)\", gridRowGap: \"5px\" }} onChange={this.onChangeCross}>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={0}></Checkbox>\n                                        <t3 style={display_style.check_text}>生命徵象</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={1} ></Checkbox>\n                                        <t3 style={display_style.check_text}>輸出入</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={2}></Checkbox>\n                                        <t3 style={display_style.check_text}>檢驗結果</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={3}></Checkbox>\n                                        <t3 style={display_style.check_text}>呼吸評估</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={4}></Checkbox>\n                                        <t3 style={display_style.check_text}>醫藥囑</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={5}></Checkbox>\n                                        <t3 style={display_style.check_text}>體重</t3>\n                                    </div>\n                                </Checkbox.Group>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\", marginTop: \"10px\" }}>\n                    <div></div>\n                    <Vitalxaxisbot max={200} min={0} select_interval={this.state.select_interval} select_date={this.state.PickerDate} id_key=\"xaxis_bot_chronic\" svg_id=\"xaxis_bot_svg_chronic\"></Vitalxaxisbot>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\", margin: \"10px 0px\" }}>\n                    <div></div>\n                    <Vitalxaxis max={200} min={0} select_interval={this.state.select_interval} select_date={this.state.PickerDate} id_key=\"xaxis_chronic\" svg_id=\"xaxis_svg_chronic\"></Vitalxaxis>\n                </div>\n                <div className='boxshadow'></div>\n                <div className='chroniclayout'>\n                    {/* Vital sign */}\n                    <div id=\"vital_sign_chronic\" style={{ display: this.display_item(0) ? \"grid\" : \"none\" }}>\n                        <Vitalonchronic source={\"Chronic\"} PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"Vital\" onSelectchange={this.onSelectchange}></Vitalonchronic>\n                    </div>\n                    {/* RT */}\n                    <div id=\"rt_chronic\" style={{ display: this.display_item(3) ? \"block\" : \"none\" }}>\n                        <Chronicrt PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo}></Chronicrt>\n                    </div>\n                    {/* I/O */}\n                    <div id=\"input_output_chronic\" style={{ display: this.display_item(1) ? \"block\" : \"none\" }}>\n                        <Inoutonchronic PickerDate={this.state.PickerDate} Status={\"Chronic\"} IntervalStatus={this.state.select_interval} caseinfo={caseinfo} title=\"輸出入\"></Inoutonchronic>\n                    </div>\n                    {/* Lab */}\n                    <div id=\"lab_chronic\" style={{ display: this.display_item(2) ? \"block\" : \"none\" }}>\n                        <Chroniclab PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"檢驗結果\"></Chroniclab>\n                    </div>\n                    {/* Order */}\n                    <div id=\"order_chronic\" style={{ display: this.display_item(4) ? \"block\" : \"none\" }}>\n                        <Orderonchronic PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"\"></Orderonchronic>\n                    </div>\n                    {/* 體重 */}\n                    <div id=\"infection_chronic\" style={{ display: this.display_item(5) ? \"block\" : \"none\" }}>\n                        <Weightonchronic PickerDate={this.state.PickerDate} QTWPER={this.state.QTWPER} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"\"></Weightonchronic>\n                    </div>\n                </div>                \n            </div >\n        );\n    }\n}\n\nexport default Chroniclelayout;\n","import React, { Component } from 'react';\nimport './Flootsheetio.scss'\nimport * as RegFilter from '../../Function/FiliterReg'\nimport moment from 'moment';\nimport X2JS from 'x2js';\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as QDCR from '../../Resource/QDC'\nimport { Row, Col, Divider, Tooltip } from 'antd';\n\nclass Flootsheetio extends Component {\n    state = {\n        itemNumber: \"day\",\n        preCID: null,\n        prePickerDate: null,\n        QDC: []\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDate } = this.props\n        const CID = caseinfo.CASEID\n        this.setState({ preCID: CID, prePickerDate: PickerDate })\n        this.getQDC(CID, PickerDate)\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDate } = this.props\n        const CID = caseinfo.CASEID\n        const preCID = this.state.preCID\n        const prePickerDate = this.state.prePickerDate\n        console.log(prePickerDate, PickerDate)\n        if (CID !== preCID || PickerDate !== prePickerDate) {\n            this.setState({ preCID: CID, prePickerDate: PickerDate })\n            this.getQDC(CID, PickerDate)\n        }\n    }\n\n    ToolTipRender(elementList) {\n        console.log(elementList)\n    }\n\n    getQDC(CID, PickerDate) {\n        const xm2 = new X2JS()\n        const st = moment(PickerDate + (7 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        const et = moment(PickerDate + (31 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        ApiProvider.getQDC(CID, st, et)\n            .then(data => {\n                console.log(xm2.xml2js(data.data))\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                this.setState({\n                    QDC: parsedata\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        // this.setState({ QDC: QDCR.data.outmsg.resconts.rescont })\n    }\n    SecondDataCell(dataJson, Title) {\n        const { PickerDate } = this.props\n        const st = PickerDate + (7 * 60 * 60 * 1000)\n        var cellRender = []\n        for (let index = 0; index < 24; index++) {\n            const startTime = st + (index * 60 * 60 * 1000)\n            const endTime = st + ((index + 1) * 60 * 60 * 1000)\n            const timeObjectString = dataJson.rec_dat.toString() + dataJson.rec_tim.toString()\n            const time = moment(timeObjectString, 'YYYYMMDDHHmm').valueOf()\n            if (time > startTime && time < endTime) {\n                cellRender.push(dataJson.value)\n            }\n            else {\n                cellRender.push(\"--\")\n            }\n        }\n        const data = cellRender.map((info, index) =>\n            <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                <t2>{info}</t2>\n            </centerstyle>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <centerstyle style={{ background: \"rgb(220, 205, 200)\" }}>\n                    <t4>{Title}</t4>\n                </centerstyle>\n                {data}\n            </div>\n        );\n    }\n    FourthDataCell(dataJson, Title) {\n        function nullvalue(value) {\n            if (value === undefined || value === null || value === 0) {\n                return \"\"\n            }\n            return value.toString().trim()\n        }\n        const { PickerDate } = this.props\n        const st = PickerDate + (7 * 60 * 60 * 1000)\n        var cellRender = []\n        for (let index = 0; index < 24; index++) {\n            const startTime = st + (index * 60 * 60 * 1000)\n            const endTime = st + ((index + 1) * 60 * 60 * 1000)\n            const filterData = dataJson.filter(function (value, index, arr) {\n                const timeObjectString = value.rec_dat.toString() + value.rec_tim.toString()\n                const time = moment(timeObjectString, 'YYYYMMDDHHmm').valueOf()\n                return time > startTime && time < endTime\n            })\n            if (filterData.length === 0) {\n                cellRender.push(\"\")\n            }\n            // var sum = 0\n            for (let index = 0; index < filterData.length; index++) {\n                const element = filterData[index];\n                if (Title === \"滲液\") {\n                    cellRender.push(element.out_val1)\n                }\n                if (Title === \"嘔吐\") {\n                    const string = element.out_val1.toString() + \"/\" + element.nam.toString() + \"/\" + element.color.toString()\n                    cellRender.push(string)\n                }\n                if (Title === \"引流\") {\n                    const string = element.out_val1.toString() + \"/\" + element.nam.toString() + \"/\" + element.color.toString()\n                    cellRender.push(string)\n                }\n                if (Title === \"穿刺出\") {\n                    cellRender.push(element.out_val1)\n\n                }\n                if (Title === \"穿刺入\") {\n                    cellRender.push(element.inp_val1)\n\n                }\n                if (Title === \"透析出\") {\n                    cellRender.push(element.out_val1)\n\n                }\n                if (Title === \"透析入\") {\n                    cellRender.push(element.inp_val1)\n\n                }\n                if (Title === \"透析加總\") {\n                    const sum = Number(element.out_val1) - Number(element.inp_val1)\n                    cellRender.push(sum)\n\n                }\n                if (Title === \"沖洗出\") {\n                    cellRender.push(element.out_val1)\n\n                }\n                if (Title === \"沖洗入\") {\n                    cellRender.push(element.inp_val1)\n\n                }\n                if (Title === \"排尿\") {\n                    cellRender.push(element.inp_val1)\n\n                }\n            }\n\n        }\n        const data = cellRender.map((info, index) =>\n            <centerstyle key={index} style={{ borderRight: (index + 1) % 8 == 0 && index != 0 ? 'rgb(140, 118, 162) 5px solid' : 'rgb(140, 118, 162) 1px solid', borderTop: \"rgb(140, 118, 162) 1px solid\", borderBottom: 'rgb(140, 118, 162) 1px solid', borderCollapse: 'collapse' }}>\n                <t2>{nullvalue(info)}</t2>\n            </centerstyle>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <centerstyle style={{ borderRight: \"rgb(140, 118, 162) 5px solid\", borderBottom: \"rgb(140, 118, 162) 1px solid\", borderTop: \"rgb(140, 118, 162) 1px solid\", background: \"rgb(212, 202, 221)\" }}>\n                    <t4>{Title}</t4>\n                </centerstyle>\n                {data}\n            </div>\n        );\n    }\n\n    Thirdtablecell(dataJson, Title) {\n        const { PickerDate } = this.props\n        const st = PickerDate + (7 * 60 * 60 * 1000)\n        var cellRender = []\n\n        for (let index = 0; index < 24; index++) {\n            const startTime = st + (index * 60 * 60 * 1000)\n            const endTime = st + ((index + 1) * 60 * 60 * 1000)\n            const time = moment(dataJson.time, 'YYYYMMDDHHmm').valueOf()\n            if (time > startTime && time < endTime) {\n                cellRender.push(dataJson.value)\n            }\n            else {\n                cellRender.push(\"--\")\n            }\n        }\n\n        const data = cellRender.map((info, index) =>\n            <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                <t2>{info}</t2>\n            </centerstyle>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <centerstyle style={{ background: \"rgb(230, 217, 154)\" }}>\n                    <t4>{Title}</t4>\n                </centerstyle>\n                {data}\n            </div>\n        );\n    }\n\n    Firsttablecell(dataList, Title) {\n        const { PickerDate } = this.props\n        const st = PickerDate + (7 * 60 * 60 * 1000)\n        var cellRender = []\n\n        for (let index = 0; index < 24; index++) {\n            const startTime = st + (index * 60 * 60 * 1000)\n            const endTime = st + ((index + 1) * 60 * 60 * 1000)\n            console.log(dataList)\n            const datafilter = dataList.filter(function (value, index, arr) {\n                const time = moment(value.rec_dat.toString() + value.rec_tim.toString(), 'YYYYMMDDHHmm').valueOf()\n                return time > startTime && time < endTime\n            })\n            var sum = 0\n            for (let index = 0; index < datafilter.length; index++) {\n                const element = datafilter[index];\n                sum = sum + Number(element.inp_val1)\n            }\n            cellRender.push(sum)\n        }\n\n        const data = cellRender.map((info, index) =>\n            <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }}>\n                <t2>{info}</t2>\n            </centerstyle>\n        )\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <centerstyle style={{ background: \"rgb(195, 225, 225)\" }}>\n                    <t4>{Title}</t4>\n                </centerstyle>\n                {data}\n            </div>\n        );\n    }\n\n    RVList(cell) {\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                <div style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', backgroundColor: \"#cccccc\", display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{\"RV\"}</div>\n                {cell}\n            </div>\n        );\n    }\n    render() {\n        function groupelement(array) {\n            function groupvalue(arr) {\n                const mapvalue = arr.map(function (value, index, arr) {\n                    return value.element\n                })\n                return mapvalue\n            }\n            var dataList = []\n            for (let index = 0; index < array.length; index++) {\n                const element = array[index];\n                const data = groupvalue(element)\n                if (element.length !== 0) {\n                    if (element[0].title === \"滲液\") {\n                        dataList.push({\n                            \"title\": element[0].title,\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"嘔吐\") {\n                        dataList.push({\n                            \"title\": element[0].title,\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"引流\") {\n                        const stringElement = element[0].element\n                        const string = stringElement.line + \"/\" + stringElement.pos\n                        dataList.push({\n                            \"title\": string,\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"穿刺\") {\n                        const stringElement = element[0].element\n                        if (stringElement.out_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"穿刺出\",\n                                \"element\": data\n                            })\n                        }\n                        if (stringElement.inp_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"穿刺入\",\n                                \"element\": data\n                            })\n                        }\n                    }\n                    if (element[0].title === \"透析\") {\n                        const stringElement = element[0].element\n                        if (stringElement.out_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"透析出\",\n                                \"element\": data\n                            })\n                        }\n                        if (stringElement.inp_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"透析入\",\n                                \"element\": data\n                            })\n                        }\n                        dataList.push({\n                            \"title\": \"透析加總\",\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"沖洗\") {\n                        const stringElement = element[0].element\n                        if (stringElement.out_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"沖洗出\",\n                                \"element\": data\n                            })\n                        }\n                        if (stringElement.inp_val1 !== undefined) {\n                            dataList.push({\n                                \"title\": \"沖洗入\",\n                                \"element\": data\n                            })\n                        }\n                    }\n                    if (element[0].title === \"排便\") {\n                        dataList.push({\n                            \"title\": \"Stool\",\n                            \"element\": data\n                        })\n                        dataList.push({\n                            \"title\": \"Enema/Stimulation\",\n                            \"element\": data\n                        })\n                    }\n                    if (element[0].title === \"排尿\") {\n                        const stringElement = element[0].element\n                        const string = stringElement.inp_val1\n                        dataList.push({\n                            \"title\": \"Urine\" + string,\n                            \"element\": data\n                        })\n                    }\n                }\n            }\n            return dataList\n        }\n        function groupfirstarray(arrayList) {\n            var result = arrayList.filter(function (value, index, arr) {\n                const res = arr.map(function (value, index, arr) {\n                    return value.compare\n                })\n                return res.indexOf(value.compare) === index;\n            });\n            var arrList = []\n            for (let index = 0; index < result.length; index++) {\n                const element = result[index];\n                const comparevalue = element.compare\n                const filterarray = arrayList.filter(function (value, index, arr) {\n                    return value.compare === comparevalue\n                })\n                arrList.push(filterarray)\n            }\n            return arrList\n        }\n        function nullvalue(value) {\n            if (value === undefined || value === null || value === 0) {\n                return \"\"\n            }\n            return value.toString().trim()\n        }\n        function formatQDC(QDC) {\n            var FirstArray = []\n            var SecondArray = []\n            var ThirdArray = []\n            var FourthArray = []\n            if (Array.isArray(QDC)) {\n                for (let index = 0; index < QDC.length; index++) {\n                    const element = QDC[index];\n                    if (RegFilter.firstarea_Reg_IO().find(function (value, index, array) {\n                        return value === element.item\n                    })) {\n                        FirstArray.push({\n                            title: nullvalue(element.line) + \"/\" + nullvalue(element.nam) + \"/\" + nullvalue(element.pos),\n                            compare: nullvalue(element.line) + \"/\" + nullvalue(element.nam),\n                            element: element\n                        })\n                    }\n                    if (RegFilter.Secondarea_reg_IO().find(function (value, index, array) {\n                        return value === element.item\n                    })) {\n                        SecondArray.push({\n                            title: nullvalue(element.line) + \"/\" + nullvalue(element.nam) + \"/\" + nullvalue(element.pos),\n                            compare: nullvalue(element.line) + \"/\" + nullvalue(element.nam) + \"/\" + nullvalue(element.pos),\n                            element: element\n                        })\n                    }\n                    if (RegFilter.Thirdarea_reg_IO().find(function (value, index, array) {\n                        return value === element.item\n                    })) {\n                        ThirdArray.push({\n                            title: nullvalue(element.nam) + \"/\" + nullvalue(element.lost),\n                            compare: nullvalue(element.nam) + \"/\" + nullvalue(element.lost),\n                            element: element\n                        })\n                    }\n                    if (RegFilter.Fourtharea_reg_IO().find(function (value, index, array) {\n                        return value === element.item\n                    })) {\n                        FourthArray.push({\n                            title: element.item,\n                            compare: element.item,\n                            element: element\n                        })\n                    }\n                }\n            }\n            return {\n                \"FirstArray\": FirstArray,\n                \"SecondArray\": SecondArray,\n                \"ThirdArray\": ThirdArray,\n                \"FourthArray\": FourthArray\n            }\n        }\n\n\n\n        const { PickerDate } = this.props\n        const { QDC } = this.state\n        const dataList = formatQDC(QDC)\n        console.log(dataList.ThirdArray)\n        // const DataFirst = dataList.FirstArray\n        const FlootSheetFirstAreaData = groupfirstarray(dataList.FirstArray)\n        const FlootSheetSecondAreaData = groupfirstarray(dataList.SecondArray)\n        const FlootSheetThirdAreaData = groupfirstarray(dataList.ThirdArray)\n        const FlootSheetFourthAreaData = groupelement(groupfirstarray(dataList.FourthArray))\n        console.log(FlootSheetFirstAreaData)\n        console.log(FlootSheetSecondAreaData)\n        console.log(FlootSheetThirdAreaData)\n        console.log(FlootSheetFourthAreaData)\n        const start = PickerDate + 7 * 60 * 60 * 1000\n        const Firstdata = FlootSheetFirstAreaData.map((value, index, arr) => {\n            const title = value[0].title\n            var timeForList = []\n            for (let index = 0; index < 24; index++) {\n                const startTime = start + (index * 60 * 60 * 1000)\n                const endTime = start + ((index + 1) * 60 * 60 * 1000)\n                var sum = 0\n                var elementList = []\n                for (let index = 0; index < value.length; index++) {\n                    const element = value[index].element;\n                    const valueSum = Number(element.inp_val1)\n                    const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    if (startTime <= elementTime && elementTime < endTime) {\n                        sum = sum + valueSum\n                        elementList.push(element)\n                    }\n                }\n                timeForList.push({\n                    value: sum,\n                    startTime: startTime,\n                    endTime: endTime,\n                    elementList: elementList\n                })\n            }\n            console.log(timeForList)\n            const cellMap = timeForList.map((info, index, arr) => {\n                return (\n                    <div key={index} style={{ borderRight: (index + 1) % 8 == 0 && index != 0 ? 'rgb(160, 200, 200) 5px solid' : 'rgb(160, 200, 200) 1px solid', borderBottom: \"rgb(160, 200, 200) 1px solid\", borderTop: \"rgb(160, 200, 200) 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n                );\n            })\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                    <div style={{ borderRight: 'rgb(160, 200, 200) 5px solid', borderBottom: \"rgb(160, 200, 200) 1px solid\", borderTop: \"rgb(160, 200, 200) 1px solid\", borderCollapse: 'collapse', backgroundColor: \"rgb(195, 225, 225)\", display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{title}</div>\n                    {cellMap}\n                </div>\n            );\n        })\n        const Secondedata = FlootSheetSecondAreaData.map(function (value, index, arr) {\n            const title = value[0].title\n            var timeForList = []\n            for (let index = 0; index < 24; index++) {\n                const startTime = start + (index * 60 * 60 * 1000)\n                const endTime = start + ((index + 1) * 60 * 60 * 1000)\n                var sum = 0\n                var elementList = []\n                for (let index = 0; index < value.length; index++) {\n                    const element = value[index].element;\n                    const valueSum = Number(element.inp_val1)\n                    const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    if (startTime <= elementTime && elementTime < endTime) {\n                        sum = sum + valueSum\n                        elementList.push(element)\n                    }\n                }\n                timeForList.push({\n                    value: sum,\n                    startTime: startTime,\n                    endTime: endTime,\n                    elementList: elementList\n                })\n            }\n            const cellMap = timeForList.map(function (info, index, arr) {\n                return (\n                    <div key={index} style={{ borderRight: (index + 1) % 8 == 0 && index != 0 ? 'rgb(210, 175, 165) 5px solid' : 'rgb(210, 175, 165) 1px solid', borderTop: \"rgb(210, 175, 165) 1px solid\", borderBottom: 'rgb(210, 175, 165) 1px solid', borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n                );\n            })\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                    <div style={{ borderRightWidth: 5, borderRight: 'rgb(210, 175, 165) 5px solid', borderTop: \"rgb(210, 175, 165) 1px solid\", borderBottom: 'rgb(210, 175, 165) 1px solid', borderCollapse: 'collapse', backgroundColor: \"rgb(220, 205, 200)\", display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{title}</div>\n                    {cellMap}\n                </div>\n            );\n        })\n\n        const Thirddata = FlootSheetThirdAreaData.map(function (value, index, arr) {\n            const title = value[0].title\n            var timeForList = []\n            for (let index = 0; index < 24; index++) {\n                const startTime = start + (index * 60 * 60 * 1000)\n                const endTime = start + ((index + 1) * 60 * 60 * 1000)\n                var sum = 0\n                var elementList = []\n                for (let index = 0; index < value.length; index++) {\n                    const element = value[index].element;\n                    const valueSum = Number(element.inp_val1)\n                    const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    if (startTime <= elementTime && elementTime < endTime) {\n                        sum = sum + valueSum\n                        elementList.push(element)\n                    }\n                }\n                timeForList.push({\n                    value: sum,\n                    startTime: startTime,\n                    endTime: endTime,\n                    elementList: elementList\n                })\n            }\n            const cellMap = timeForList.map(function (info, index, arr) {\n                return (\n                    <div key={index} style={{ borderRight: (index + 1) % 8 == 0 && index != 0 ? 'rgb(179, 173, 50) 5px solid' : 'rgb(179, 173, 50) 1px solid', borderTop: \"rgb(179, 173, 50) 1px solid\", borderBottom: 'rgb(179, 173, 50) 1px solid', borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n                );\n            })\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                    <div style={{ borderRightWidth: 5, borderRight: \"rgb(179, 173, 50) 5px solid\", borderBottom: \"rgb(179, 173, 50) 1px solid\", borderTop: \"rgb(179, 173, 50) 1px solid\", borderCollapse: 'collapse', backgroundColor: \"rgb(230, 217, 154)\", display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{title}</div>\n                    {cellMap}\n                </div>\n            );\n        })\n        function formatRV(List) {\n            var timeForList = []\n            for (let index = 0; index < 24; index++) {\n                const startTime = start + (index * 60 * 60 * 1000)\n                const endTime = start + ((index + 1) * 60 * 60 * 1000)\n                var sum = 0\n                var elementList = []\n                for (let index = 0; index < List.length; index++) {\n                    const element = List[index].element;\n                    const valueSum = Number(element.inp_val1)\n                    const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    if (startTime <= elementTime && elementTime < endTime) {\n                        sum = sum + valueSum\n                        elementList.push(element)\n                    }\n                }\n                timeForList.push({\n                    value: sum,\n                    startTime: startTime,\n                    endTime: endTime,\n                    elementList: elementList\n                })\n            }\n            return timeForList\n        }\n        const RVCellRender = formatRV(dataList.ThirdArray)\n        const cellMap = RVCellRender.map(function (info, index, arr) {\n            return (\n                <div key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n            );\n        })\n        const RV = this.RVList(cellMap)\n        const FourdataCellRender = FlootSheetFourthAreaData.map((value, index, arr) => {\n            const datajson = value.element\n            const title = value.title\n            return this.FourthDataCell(datajson, title)\n        })\n\n\n\n\n        return (\n\n            <div>\n\n                {/* <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <div style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>I/O</div>\n                </div> */}\n\n                {/* <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>I/O</t2>\n                </div> */}\n                <div style={{ margin: \"0 auto\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"stretch\", maxWidth: \"1360px\" }}>\n\n                    {Firstdata.length != 0 ?\n                        '輸液'\n                        : null}\n\n                    <div style={{ backgroundColor: \"rgb(195, 225, 225)\", display: Firstdata.length === 0 ? \"none\" : \"block\", border: \"5px solid rgb(160, 200, 200)\", borderCollapse: \"collapse\" }}>\n                        {Firstdata}\n                    </div>\n                    {Secondedata.length != 0 ?\n                        '血品'\n                        : null}\n\n\n                    <div style={{ backgroundColor: \"rgb(220, 205, 200)\", display: Secondedata.length === 0 ? \"none\" : \"block\", border: \"5px solid rgb(210, 175, 165)\", borderCollapse: \"collapse\" }}>\n                        {Secondedata}\n                    </div>\n                    {Thirddata.length != 0 ?\n                        '進食'\n                        : null}\n                    <div style={{ backgroundColor: \"rgb(230, 217, 154)\", display: Thirddata.length === 0 ? \"none\" : \"block\", border: \"5px solid rgb(179, 173, 50)\", borderCollapse: \"collapse\" }}>\n                        {Thirddata}\n                        {/* {RV} */}\n                    </div>\n                    {FourdataCellRender.length != 0 ?\n                        '排泄引流'\n                        : null}\n                    <div style={{ backgroundColor: \"rgb(212, 202, 221)\", display: FourdataCellRender.length === 0 ? \"none\" : \"block\", border: \"5px solid rgb(140, 118, 162)\", borderCollapse: \"collapse\" }}>\n                        {FourdataCellRender}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Flootsheetio;\n","import React, { Component } from \"react\";\nimport Flootsheetio from \"./Flootsheetio\";\n// import Flowsheetvitalsign from './Flootsheetvitalsign'\nimport Vitalxaxis from \"../../Module/Vitalxaxis\";\nimport { DatePicker, Button } from \"antd\";\nimport moment from \"moment\";\nimport * as ApiProvider from \"../../API/ApiProvider\";\nimport \"./Flootsheetlayout.scss\";\nimport X2JS from \"x2js\";\nimport * as Wardstate from \"../../Function/Wardstate\";\nimport locale from \"antd/es/date-picker/locale/zh_TW\";\nimport { pregancyweeksanddays } from \"../../Function/Wardbedfunction\";\nimport { daysdiff } from \"../../Function/Timeformat\";\nimport * as WardState from \"../../Function/Wardstate\";\n\nclass Flowsheetlayout extends Component {\n  state = {\n    PickerDate: moment(moment().format(\"YYYYMMDD\")).valueOf(),\n    preCID: null,\n    QSPE: []\n    // itemlist: []\n  };\n  componentDidMount() {\n    const { caseinfo } = this.props;\n    const CID = caseinfo.CASEID;\n    const date = moment(moment().format(\"YYYYMMDD\")).valueOf();\n    this.setState({ preCID: CID, PickerDate: date });\n    this.ApiData(CID, date);\n  }\n  componentDidUpdate() {\n    const CID = this.props.caseinfo.CASEID;\n    const preCID = this.state.preCID;\n    if (CID !== preCID) {\n      const date = this.state.PickerDate;\n      this.setState({ preCID: CID, PickerDate: date });\n      this.ApiData(CID, date);\n    }\n  }\n  ApiData(CID, DateTime) {\n    const st = moment(DateTime + 7 * 60 * 60 * 1000).format(\"YYYYMMDDHHmm\");\n    const et = moment(DateTime + 31 * 60 * 60 * 1000).format(\"YYYYMMDDHHmm\");\n    ApiProvider.getQSPE(CID, st, et)\n      .then(data => {\n        const dataJson = Wardstate.XM2JSON(data.data);\n        // const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n        if (Array.isArray(dataJson)) {\n          this.setState({ QSPE: dataJson });\n        } else {\n          this.setState({\n            QSPE: [dataJson]\n          });\n        }\n      })\n      .catch(err => {\n        console.log(\n          \"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err)\n        );\n      });\n  }\n  onDateChange = (date, dateString) => {\n    const CID = this.props.caseinfo.CASEID;\n    this.setState({ preCID: CID, PickerDate: date.valueOf() });\n    this.ApiData(date.valueOf());\n  };\n\n  trainDay = e => {\n    const { caseinfo } = this.props;\n    const { PickerDate } = this.state;\n    const bron = caseinfo.PBASINGNINFO.PBIRTHDT;\n    const bronDate = moment(moment(bron).format(\"YYYYMMDD\")).valueOf();\n\n    const day = 24 * 60 * 60 * 1000;\n\n    switch (e.target.value) {\n      case \"B\":\n        const bTime = PickerDate - day;\n        const bTemp = bTime - 6 * day;\n        bronDate <= bTemp && this.onDateChange(moment(bTime));\n        break;\n      case \"N\":\n        const nTime = moment(moment().format(\"YYYYMMDD\"));\n        this.onDateChange(nTime);\n        break;\n      case \"A\":\n        const aTime = PickerDate + day;\n        const aTemp = moment(moment().format(\"YYYYMMDD\")).valueOf();\n        aTime <= aTemp && this.onDateChange(moment(aTime));\n        break;\n      default:\n        break;\n    }\n  };\n\n\n  render() {\n    console.log(\"this.props\", this.props);\n    const { caseinfo, btnlist, PickerDate } = this.props;\n    const data = this.state.QSPE || []; //特殊護理事件\n    const splist = data.filter(function(value, index, array) {\n      if (value === undefined) {\n        return null;\n      }\n      console.log(value);\n      const str = value.special;\n      return str.match(\"@v\") === null;\n    });\n    const specialListRender = splist.map(function(value, index, arr) {\n      return (\n        <div\n          key={index}\n          style={{ display: \"flex\", color: \"rgba(59, 151, 225, 1)\" }}\n        >\n          {value.special.toString().trim()}\n        </div>\n      );\n    });\n    function valueFormat(value) {\n      if (value === \"\" || value === null || value === undefined) {\n        return \"--\";\n      }\n      return value.toString();\n    }\n\n    const weightList = caseinfo.WEIGHT;\n    const Birthday = caseinfo.PBASINGNINFO.PBIRTHDT;\n    const BornWeight = WardState.BornWeight(weightList, Birthday);\n    const DayWeight = WardState.selectweight(weightList, PickerDate);\n    return (\n      <div>\n        <div style={{ display: \"flex\" }}>\n          <DatePicker\n            disabledDate={current => {\n              return (\n                current > moment().startOf(\"day\") ||\n                current <\n                  moment(\n                    caseinfo.PBASINGNINFO.PBIRTHDT.toString(),\n                    \"YYYYMMDD\"\n                  ).endOf()\n              );\n            }}\n            width={120}\n            value={moment(this.state.PickerDate)}\n            allowClear={false}\n            onChange={this.onDateChange}\n          />\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"1fr 1fr 1fr\",\n              gridColumnGap: \"1px\",\n              padding: \"2px 10px 0px 10px\"\n            }}\n          >\n            <Button\n              value=\"B\"\n              shape=\"circle\"\n              icon=\"left-circle\"\n              onClick={this.trainDay}\n            />\n            <Button\n              value=\"N\"\n              shape=\"circle\"\n              icon=\"pause-circle\"\n              onClick={this.trainDay}\n            />\n            <Button\n              value=\"A\"\n              shape=\"circle\"\n              icon=\"right-circle\"\n              onClick={this.trainDay}\n            />\n          </div>\n          {/* fix issue */}\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(3,auto)\",\n              gridColumnGap: \"30px\",\n              alignContent: \"center\"\n            }}\n          >\n            <t2>\n              矯正週數：\n              {pregancyweeksanddays(\n                caseinfo.WEEK_BORN,\n                caseinfo.DAY_BORN,\n                moment(Birthday, \"YYYYMMDD\").format(\"YYYY/MM/DD\")\n              )}\n            </t2>\n            <t2>體重：{valueFormat(DayWeight)}g</t2>\n            <t2>\n              住院第\n              {daysdiff(\n                moment(PickerDate).format(\"YYYY/MM/DD\"),\n                moment(caseinfo.TRANSINDT, \"YYYYMMDD\").format(\"YYYY/MM/DD\")\n              )}\n              天\n            </t2>\n          </div>\n        </div>\n        <div style={{ display: splist.length === 0 ? \"none\" : \"block\" }}>\n          <div\n            style={{\n              backgroundColor: \"#71b0e46e\",\n              borderTopLeftRadius: \"4px\",\n              borderTopRightRadius: \"4px\",\n              height: \"36px\",\n              padding: \"0px 16px\",\n              display: \"flex\",\n              alignItems: \"center\"\n            }}\n          >\n            <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>\n              特殊護理事件：\n            </t2>\n            <t2\n              style={{\n                width: \"20px\",\n                height: \"20px\",\n                borderRadius: \"99em\",\n                background: \"black\",\n                color: \"white\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              }}\n            >\n              {splist.length}\n            </t2>\n          </div>\n          <div style={{ maxHeight: \"100px\", width: \"100%\", overflow: \"auto\" }}>\n            {specialListRender}\n          </div>\n        </div>\n        <div className=\"flootsheetlayout\">\n          <Flootsheetio\n            PickerDate={this.state.PickerDate}\n            caseinfo={caseinfo}\n          ></Flootsheetio>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Flowsheetlayout;\n","import React, { Component } from 'react';\nimport './Examchart.scss';\nimport * as d3 from \"d3\";\nimport moment from 'moment';\n\nclass Examchart extends Component {\n    state = {\n        change: false\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\".tooltip\").remove()\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n    drawChart() {\n        const { id_key, svg_id, max, min, lineChart } = this.props\n\n        const sT = new Date(moment(lineChart[0].date, 'YYYYMMDD').valueOf() - 24 * 60 * 60 * 1000)\n        const endT = new Date(moment(lineChart[lineChart.length - 1].date, 'YYYYMMDD') + 24 * 60 * 60 * 1000)\n\n        const fixLineChart = lineChart.filter(data => {\n            return data.value !== \"\"\n        })\n\n        // 邊界\n        const margin = { top: 20, right: 20, bottom: 30, left: 50 },\n            width = 1000 - margin.left - margin.right,\n            height = 500 - margin.top - margin.bottom;\n\n        let x = d3.scaleTime().domain([sT, endT]).range([0, width - margin.left - margin.right])\n        let y = d3.scaleLinear().domain([min, max]).range([height, 0])\n\n        var div = d3.select(\"#\" + id_key).append(\"div\")\n            .attr(\"class\", \"tooltip\")\n            .style(\"opacity\", 0);\n\n        let svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            .style(\"height\", height + margin.top + margin.bottom)\n            .style(\"width\", width + margin.left + margin.right)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        svg.append('g')\n            .call(d3.axisBottom(x).ticks(5).tickFormat(d3.timeFormat('%m/%d')))\n            .attr(\"transform\", `translate(0,${height})`)\n            .style('stroke', 'black')\n            .style('stroke-width', 1);\n\n        svg.append('g')\n            .call(d3.axisLeft(y))\n            .style('stroke', 'black')\n            .style('stroke-width', 1);\n\n        let line = d3.line()\n            .x(d => x(moment(d.date, 'YYYYMMDDHHmm').toDate()))\n            .y(d => y(d.value))\n            .curve(d3.curveMonotoneX);\n\n        let lines = svg.append('g').attr('class', 'lines');\n\n        lines.selectAll(\"circle\")\n            .data(fixLineChart)\n            .enter()\n            .append('g')\n            .append(\"circle\")\n            .attr(\"class\", \"lines-circle\")\n            .attr(\"cy\", d => y(d.value))\n            .attr(\"cx\", d => x(moment(d.date, 'YYYYMMDDHHmm').toDate()))\n            .attr('r', 5)\n            .on(\"mouseover\", function (d) {\n                div.transition()\n                    .duration(100)\n                    .style(\"opacity\", .9);\n                div.html(`檢驗時間 : ${d.date} <br/> 檢驗數值 : ${d.value}`)\n                    .style(\"left\", (d3.event.pageX - 200) + \"px\")\n                    .style(\"top\", (d3.event.pageY - 150) + \"px\");\n            })\n            .on(\"mouseout\", function (d) {\n                div.transition()\n                    .duration(300)\n                    .style(\"opacity\", 0);\n            })\n            .style('opacity', 1)\n            .style('fill', \"blue\");\n\n        lines\n            .selectAll('.line-group')\n            .data(fixLineChart)\n            .enter()\n            .append('g')\n            .attr('class', 'line-group')\n            .append('path')\n            .attr('class', 'line')\n            .attr('d', line(fixLineChart))\n            .style('stroke', 'black')\n            .style('fill', 'none');\n    }\n\n    render() {\n        const { id_key, lineCharttitle } = this.props\n\n        const title = lineCharttitle == 'Band' || lineCharttitle == 'Seg' || lineCharttitle == 'Lym' ? true : false\n\n        return (\n            <div>\n                <div style={{ padding: \"0px 24px 16px\", color: \"rgba(0, 0, 0, 0.65)\", background: \"#fff\", borderBottom: \"1px solid #e8e8e8\", borderRadius: \"4px 4px 0 0\" }}>\n                    <span style={{ color: \"rgba(0, 0, 0, 0.85)\", fontSize: \"20px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>{lineCharttitle}</span>\n                    {title && <span style={{ color: \"rgba(0, 0, 0, 0.65)\", fontSize: \"16px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>%</span>}\n                </div>\n                <div id={id_key}></div>\n            </div>\n        );\n    }\n}\n\nexport default Examchart;\n","import React, { Component } from 'react';\nimport { Select, Modal } from 'antd';\n// import * as ApiGithub from '../../API/ApiGithub'\nimport * as RegularData from '../../Data/RegularData'\nimport moment from 'moment'\nimport Examchart from './Examchart'\nimport { Button } from 'antd';\n\nclass Labview extends Component {\n    state = {\n        Selectus: this.props.SelectStatus,\n        PickerDateRange: [moment(), moment()],\n        visible: false,\n        lineCharttitle: '',\n        lineChart: [],\n        IRParse: RegularData.InspectionReportExtent()\n    }\n    componentDidMount() {\n        // ApiGithub.getExamReport()\n        //     .then(data => {\n        //         this.setState({\n        //             TitleList: data.data\n        //         })\n        //     })\n        //     .catch(err=>{\n        //         console.log(\"GithubAPI NG\" + err)\n        //     })\n        // this.setState({\n        //     TitleList: RegularData.ExamReportJson\n        // })\n    }\n\n    callbackDateFunction = (value) => {\n        this.props.parentDateCallback(value);\n    }\n    handleChange = (value) => {\n        this.callbackDateFunction(value)\n        this.setState({\n            Selectus: value\n        })\n    }\n    titleSearch = (value) => {\n        this.props.parentTitleCallback(value.target.value);\n    }\n    CellRender() {\n        const { DataList } = this.props\n        // console.log(DataList)\n        if (DataList.length === 0) {\n            return <div style={{ height: \"50px\", paddingLeft: \"5%\", display: \"flex\", alignItems: \"center\" }}>\n                無資料\n                    </div>\n        }\n        const DataListCell = DataList.map(function (element, index) {\n            const cellRender = element.Data.map(function (info, index) {\n                return (\n                    <centerstyle key={index} style={{ flex: 1, border: \"1px solid #cccccc\", borderCollapse: 'collapse' }}>\n                        <t3>{info}</t3>\n                    </centerstyle>\n                );\n            })\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"110px 1fr\", height: \"50px\" }}>\n                    <centerstyle style={{ display: \"flex\", border: \"1px solid #cccccc\", borderCollapse: 'collapse' }}>\n                        <t3>{element.Time}</t3>\n                    </centerstyle>\n                    <div style={{ display: \"flex\", gridTemplateColumns: \"repeat(9,1fr)\" }}>\n                        {cellRender}\n                    </div>\n                </div>\n            );\n        })\n        return DataListCell\n    }\n\n    fixLineChartData = (e) => {\n        const { DataList } = this.props;\n        const value = e.target.value;\n        const number = e.target.getAttribute('index');\n        console.log(DataList)\n        let showDate = DataList.map(data => {\n            let temp = {}\n            temp['date'] = data.Time;\n            temp['value'] = data.Data[number];\n            return temp\n        })\n\n        if (showDate === null || showDate.length === 0) {\n            return null\n        }\n\n        showDate.sort((x, y) => {\n            return moment(x.date, 'YYYYMMDDHHmm').valueOf() - moment(y.date, 'YYYYMMDDHHmm').valueOf()\n        })\n\n        this.setState({\n            lineCharttitle: value,\n            lineChart: showDate,\n        }, () => { this.showModel() });\n    }\n    showModel = () => {\n        this.setState({\n            visible: true,\n        });\n    }\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    charttableview = () => {\n        const { IRParse, Selectus, lineCharttitle, lineChart } = this.state\n\n        if (lineCharttitle === '') { return null }\n\n        const key = Object.keys(IRParse)[Selectus]\n        const rangeKey = IRParse[key]\n        // console.log(lineCharttitle)\n        // console.log(rangeKey[lineCharttitle])\n        // console.log(lineCharttitle)\n        const range = rangeKey[lineCharttitle]\n        const itemValue = []\n        //主要崩潰點在這 因為你會了key但是lineCharttitle還有值 這樣會變成undefined這樣就crash了 你下面定義是有range情況下的max是不是undefined 但是你本身range就是undefined 所以會找不到range中的max\n        if (range === undefined) {return null}\n        const max = range.max !== undefined ? range.max : Math.max(...itemValue)\n        const min = range.min !== undefined ? range.min : Math.min(...itemValue)\n\n        return (\n            <div style={{ margin: \"20px 0px\" }}>\n                <Examchart lineChart={lineChart} lineCharttitle={lineCharttitle} max={max} min={min} id_key={\"svgExamID\"} svg_id={\"svgExamSVG\"}></Examchart>\n            </div>\n        );\n    }\n\n    render() {\n        const { Option } = Select;\n        const visible = this.state.visible\n        // const lineCharttitle = this.state.lineCharttitle\n        const handleOk = this.handleOk\n        const handleCancel = this.handleCancel\n        const fixLineChartData = this.fixLineChartData\n        const charttableview = this.charttableview()\n        const LabDataList = RegularData.ExamReportJson()\n        //0:CBC 1:電解質 2:肝功能 3:心臟 4:凝血 5:GAS 6:Glucose\n        const SelectList = LabDataList.map(function (info, index) {\n            // console.log(info.index)\n            return (\n                <Option key={info.index} value={info.index} >{info.select}</Option>\n            );\n        })\n        const SelectTitlefilter = LabDataList.filter(function (element, index) {\n            const selectdata = Select\n            return element.index = selectdata\n        })\n        if (SelectTitlefilter.length === 0) {\n            return null\n        }\n        const SelectTitle = SelectTitlefilter[this.state.Selectus].title\n        const SelectTitleRender = SelectTitle.map(function (info, index) {\n            return (\n                <centerstyle style={{ flex: 1 }} key={index}>\n                    <Button style={{ height: \"26px\", width: \"70px\", backgroundColor: \"transparent\", border: \"2px white solid\" }} index={index} value={info} onClick={fixLineChartData}>{info}</Button>\n                </centerstyle>\n            );\n        })\n        const ExamLab = this.CellRender()\n\n        return (\n            <div>\n                <Modal\n                    visible={visible}\n                    onOk={handleOk}\n                    onCancel={handleCancel}\n                    width={1200}\n                    footer={null}>\n                    {charttableview}\n                </Modal>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", paddingLeft: \"16px\", display: \"grid\", gridTemplateColumns: \"120px 1fr\", alignItems: \"center\" }}>\n                    <div style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>累積報告</div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto 1fr\", gridColumnGap: \"5px\" }}>\n                        <t2 style={{ display: \"flex\", alignItems: \"center\" }}>檢驗類別：</t2>\n                        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                            <Select defaultValue={this.state.Selectus} style={{ width: \"100%\" }} onChange={this.handleChange}>\n                                {SelectList}\n                            </Select>\n                        </div>\n                    </div>\n                </div>\n                <div style={{ marginTop: \"10px\", backgroundColor: \"rgba(226, 237, 243,.5)\", height: \"30px\", display: \"grid\", gridTemplateColumns: \"110px 1fr\", alignItems: \"center\", border: \"rgba(238,238,238,1) 1px solid\" }}>\n                    {/* <div style={{ marginTop: \"10px\", display: \"grid\", gridTemplateColumns: \"110px 1fr\", height: \"50px\", backgroundColor: \"#E2EDF3\" }}> */}\n                    <centerstyle>\n                        <t2 style={{ display: \"flex\", justifyItems: \"center\" }}>檢驗項目</t2>\n                    </centerstyle>\n                    <div style={{ display: \"flex\" }} onClick={this.titleSearch}>\n                        {SelectTitleRender}\n                    </div>\n                </div>\n                {/* <div>{this.state.Title}</div> */}\n                <div style={{ minHeight: \"120px\", maxHeight: \"400px\", overflowY: \"auto\" }} >\n                    {ExamLab}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Labview;\n","export function ExamReportJson() {\n    return [\n        {\n            \"select\": \"CBC檢驗:WBC、Band、Seg、Lym、Hgb、Hct、PLT\",\n            \"index\": 0,\n            \"title\": [\n                \"WBC\",\n                \"Band\",\n                \"Seg\",\n                \"Lym\",\n                \"Hgb\",\n                \"Hct\",\n                \"PLT\"\n            ]\n        },\n        {\n            \"select\": \"電解質與腎功能檢驗:Na、K、Cl、Ca++、Ca、Mg++、P、BUN、Cr\",\n            \"index\": 1,\n            \"title\": [\n                \"Na\",\n                \"K\",\n                \"Cl\",\n                \"Ca++\",\n                \"Ca\",\n                \"Mg++\",\n                \"P\",\n                \"BUN\",\n                \"Cr\"\n            ]\n        },\n        {\n            \"select\": \"肝功能檢驗:ALT、AST、TBil、DBil、r-GT、Alk-P、ALB\",\n            \"index\": 2,\n            \"title\": [\n                \"ALT\",\n                \"AST\",\n                \"TBil\",\n                \"DBil\",\n                \"r-GT\",\n                \"Alk-P\",\n                \"ALB\"\n            ]\n        },\n        {\n            \"select\": \"早產兒追蹤:Iron、TIBC、FeSat、LDH、Alk-P\",\n            \"index\": 3,\n            \"title\": [\n                \"Iron\",\n                \"TIBC\",\n                \"FeSat\",\n                \"LDH\",\n                \"Alk-P\"\n            ]\n        },\n        {\n            \"select\": \"心臟功能檢驗:CK、CK-MB、BNP、Trop-T\",\n            \"index\": 4,\n            \"title\": [\n                \"CK\",\n                \"CK-MB\",\n                \"BNP\",\n                \"Trop-T\"\n            ]\n        },\n        {\n            \"select\": \"凝血功能檢驗:PT、APTT、INR\",\n            \"index\": 5,\n            \"title\": [\n                \"PT\",\n                \"APTT\",\n                \"INR\"\n            ]\n        },\n        {\n            \"select\": \"Gas檢驗:PH、pCO2、pO2、HCO3、BE、O2Sat、FiO2\",\n            \"index\": 6,\n            \"title\": [\n                \"PH\",\n                \"pCO2\",\n                \"pO2\",\n                \"HCO3\",\n                \"BE\",\n                \"O2Sat\",\n                \"FiO2\"\n            ]\n        },\n        ,\n        {\n            \"select\": \"GAS(Additionary)檢驗:Hgb、Hct、Na、K、Ca++、BUN、Cr\",\n            \"index\": 7,\n            \"title\": [\n                \"Hgb\",\n                \"Hct\",\n                \"Na\",\n                \"K\",\n                \"Ca(Free)\",\n                \"BUN\",\n                \"Cr\"\n            ]\n        },\n        {\n            \"select\": \"Glucose檢驗:Glu(BedSide, Lab)\",\n            \"index\": 8,\n            \"title\": [\n                \"Glu(BedSide)\",\n                \"Glu(Lab)\"\n            ]\n        },\n        {\n            \"select\": \"黃疸檢查:TCB、MicroBil、TBil、DBil\",\n            \"index\": 9,\n            \"title\": [\n                \"TCB\",\n                \"MicroBil\",\n                \"TBil\",\n                \"DBil\"\n            ]\n        },\n        {\n            \"select\": \"感染指數:WBC、Band、Seg、Lym、PCT、CRP\",\n            \"index\": 10,\n            \"title\": [\n                \"WBC\",\n                \"Band\",\n                \"Seg\",\n                \"Lym\",\n                \"PCT\",\n                \"CRP\"\n            ]\n        }\n    ]\n}\nexport function FlagReg() {\n    return [\n        {\n            item: \"Respirator\",\n            \"ParseValueUD\": [\n                \"Restriction\"\n            ],\n            \"ParseValueTRT\": []\n        },\n        {\n            item: \"TPN\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"NPO\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"Anti\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"Foley\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"Drain\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        }\n    ]\n}\nexport function QDC() {\n    return {\n        \"Feeding\": [\n            \"進食\"\n        ],\n        \"IV\": [\n            \"血品\",\n            \"輸液\"\n        ],\n        \"Urine\": [\n            \"排尿\"\n        ],\n        \"Other\": [\n            \"失血\",\n            \"滲液\",\n            \"嘔吐\",\n            \"引流\",\n            \"穿刺\",\n            \"透析\",\n            \"沖洗\",\n            \"排便\"\n        ]\n    }\n}\n\nexport function ChronicLab() {\n    return {\n        \"Biochemical\": [\n        ],\n        \"Blood\": [\n            \"BLOOD\"\n        ],\n        \"Cultivate\": [\n\n        ],\n        \"GAS\": [\n\n        ],\n        \"Glu\": [\n\n        ],\n        \"Radiation\": [\n        ]\n    }\n}\n\nexport function NonLabExamReportParser() {\n    return [\n        {\n            parser_name: \"CBC\",\n            apply_condition: {\n                name: \"CBC|WBC|HB|PLT\",\n                sample: null,\n                lab: null,\n                start_time: null,\n                end_time: null,\n            },\n            mappings: [\n                {\n                    key: \"Hb\",\n                    regex_str: \"HB:\\\\s+(\\\\d+(.\\\\d)?)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"WBC\",\n                    regex_str: \"wbc:\\\\s+(\\\\d+)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"PLT\",\n                    regex_str: \"plt:\\\\s+(\\\\d+)\",\n                    regex_flags: 'ism',\n                    position: 1\n                }\n            ],\n            summary: \"[WBC;-]/[Hb;]/[PLT;-]\"\n        },\n        {\n            parser_name: \"Atypical Respiratory Panel\",\n            apply_condition: {\n                name: \"Atypical Respiratory Panel|CBC|PH|HB|PO2\",\n                sample: null,\n                lab: null,\n                start_time: null,\n                end_time: null,\n            },\n            mappings: [\n                {\n                    key: \"Hb\",\n                    regex_str: \"Hb:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"PH\",\n                    regex_str: \"PH:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"PO2\",\n                    regex_str: \"PO2:\\\\s+\\\\((\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"FIO2\",\n                    regex_str: \"FIO2:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"HCO3\",\n                    regex_str: \"HCO3:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                }\n            ],\n            summary: \"[PH;-]/[Hb;-]/[PO2;-]/[FIO2;-]/[HCO3;-]\"\n        }\n    ]\n}\n\nexport function NonLabExamORDListParser() {\n    return [\n        {\n            parser_name: \"ORDLIST\",\n            apply_condition: {\n                name: \"ORDLIST\",\n                sample: null,\n                lab: null,\n                start_time: null,\n                end_time: null,\n            },\n            mappings: [\n                {\n                    key: \"飲食類別\",\n                    regex_str: \"(CHEST\\\\s+KUB\\\\s+\\\\(FOR\\\\s+BABY\\\\)\\\\s+PORTABLE)|(BRAIN\\\\s+ECHO\\\\s+\\\\(NBD\\\\))\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"管路類別\",\n                    regex_str: \"(BLOOD\\\\s+GAS)|(Atypical\\\\s+Respiratory\\\\s+Panel)|(BLOOD\\\\s+PRODUCTS\\\\s+IRRADIATION)|(Aliqot\\\\s+and\\\\s+storage\\\\s+of\\\\s+blood)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"呼吸類別\",\n                    regex_str: \"(NT-pro-BNP)|(ANTIBODY\\\\s+SCREENING)\",\n                    regex_flags: 'ism',\n                    position: 1\n                }\n            ],\n            summary: \"[CHEST KUB;-]/[BLOOD GAS;-]/[Glucose;-]\"\n        }\n    ]\n}\n\nexport function InspectionReportExtent() {\n    return {\n        \"CBC\": {\n            \"WBC\": {\n                \"min\": 10000,\n                \"max\": 30000\n            },\n            \"Band\": {\n                \"min\": 0,\n                \"max\": 10\n            },\n            \"Seg\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"Lym\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"Hgb\": {\n                \"min\": 10,\n                \"max\": 18\n            },\n            \"Hct\": {\n                \"min\": 30,\n                \"max\": 55\n            },\n            \"PLT\": {\n                \"min\": 100000,\n                \"max\": 450000\n            }\n        },\n        \"電解質與腎功能\": {\n            \"Na\": {\n                \"min\": 120,\n                \"max\": 160\n            },\n            \"K\": {\n                \"min\": 0,\n                \"max\": 8\n            },\n            \"Cl\": {\n                \"min\": 80,\n                \"max\": 120\n            },\n            \"Ca++\": {\n                \"min\": 0.5,\n                \"max\": 1.8\n            },\n            \"Ca\": {\n                \"min\": 6,\n                \"max\": 12\n            },\n            \"Mg++\": {\n                \"min\": 0,\n                \"max\": 8\n            },\n            \"P\": {\n                \"min\": 0,\n                \"max\": 10\n            },\n            \"BUN\": {\n                \"min\": 0,\n                \"max\": 60\n            },\n            \"Cr\": {\n                \"min\": 0,\n                \"max\": 5\n            }\n        },\n        \"肝功能\": {\n            \"ALT\": {\n                \"min\": 0,\n                \"max\": 200\n            },\n            \"AST\": {\n                \"min\": 0,\n                \"max\": 200\n            },\n            \"TBil\": {\n                \"min\": 0,\n                \"max\": 30\n            },\n            \"DBil\": {\n                \"min\": 0,\n                \"max\": 20\n            },\n            \"r-GT\": {\n                \"min\": 0,\n                \"max\": 200\n            },\n            \"Alk-P\": {\n                \"min\": 0,\n                \"max\": 1600\n            },\n            \"ALB\": {\n                \"min\": 0,\n                \"max\": 5\n            }\n        },\n        \"早產兒追蹤\": {\n            \"Iron\": {\n                \"min\": 0,\n                \"max\": 300\n            },\n            \"TIBC\": {\n                \"min\": 0,\n                \"max\": 300\n            },\n            \"FeSat\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"LDH\": {\n                \"min\": 0,\n                \"max\": 2000\n            },\n            \"Alk-P\": {\n                \"min\": 0,\n                \"max\": 1600\n            }\n        },\n        \"心臟功能\": {\n            \"CK\": {\n                \"min\": 0,\n                \"max\": 6000\n            },\n            \"CK-MB\": {\n                \"min\": 0,\n                \"max\": 2000\n            },\n            \"BNP\": {\n                \"min\": 0,\n                \"max\": 20000\n            },\n            \"Trop-T\": {\n                \"min\": 0,\n                \"max\": 1000\n            }\n        },\n        \"凝血功能\": {\n            \"PT\": {\n                \"min\": 0,\n                \"max\": 120\n            },\n            \"APTT\": {\n                \"min\": 0,\n                \"max\": 120\n            },\n            \"INR\": {\n                \"min\": 0,\n                \"max\": 4\n            }\n        },\n        \"Gas\": {\n            \"pH\": {\n                \"min\": 6.5,\n                \"max\": 7.7\n            },\n            \"pCO2\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"pO2\": {\n                \"min\": 0,\n                \"max\": 200\n            },\n            \"HCO3\": {\n                \"min\": 0,\n                \"max\": 40\n            },\n            \"BE\": {\n                \"min\": -30,\n                \"max\": 20\n            },\n            \"O2Sat\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"FiO2\": {\n                \"min\": 0,\n                \"max\": 100\n            }\n        },\n        \"GAS(Additionary)\": {\n            \"Hgb\": {\n                \"min\": 6,\n                \"max\": 22\n            },\n            \"Hct\": {\n                \"min\": 10,\n                \"max\": 70\n            },\n            \"Na\": {\n                \"min\": 120,\n                \"max\": 160\n            },\n            \"K\": {\n                \"min\": 0,\n                \"max\": 8\n            },\n            \"Ca++\": {\n                \"min\": 0.5,\n                \"max\": 1.8\n            },\n            \"BUN\": {\n                \"min\": 0,\n                \"max\": 60\n            },\n            \"Cr\": {\n                \"min\": 0,\n                \"max\": 5\n            }\n        },\n        \"Glucose\": {\n            \"Glu (BedSide)\": {\n                \"min\": 0,\n                \"max\": 300\n            },\n            \"Glu (Lab)\": {\n                \"min\": 0,\n                \"max\": 300\n            }\n        },\n        \"黃疸\": {\n            \"TCB\": {\n                \"min\": 0,\n                \"max\": 30\n            },\n            \"MicroBil\": {\n                \"min\": 0,\n                \"max\": 30\n            },\n            \"TBil\": {\n                \"min\": 0,\n                \"max\": 30\n            },\n            \"DBil\": {\n                \"min\": 0,\n                \"max\": 20\n            }\n        },\n        \"感染指數\": {\n            \"WBC\": {\n                \"min\": 0,\n                \"max\": 40000\n            },\n            \"Band\": {\n                \"min\": 0,\n                \"max\": 0.05\n            },\n            \"Seg\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"Lym\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"PCT\": {\n                \"min\": 0,\n                \"max\": 20\n            },\n            \"CRP\": {\n                \"min\": 0,\n                \"max\": 20\n            }\n        }\n    }\n\n}\n","import React, { Component } from 'react';\nimport './ExamNonlabtablecell.scss'\n// import { Nonlablist } from '../../Data/Wardviewdata'\nimport moment from 'moment'\nimport NonlabviewtableCell from '../CrossSectionView/NonlabviewtableCell'\n// import { Modal } from 'antd';\n// import InsReportModal from '../ExamReportModal'\n\nclass Examnonlabviewtable extends Component {\n    state = {\n        visible: false\n    }\n\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            const resultKey = mapping.sample ? mapping.key + \"-\" + mapping.sample : mapping.key\n            allResult[resultKey] = []\n        });\n        allResult[\"全部\"] = []\n        inputs.forEach(input => {\n            let content = input.ORPROCED;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\" && (mapping.sample ? input.ORSPCN1.trim() === mapping.sample : true)) {\n                    const resultKey = mapping.sample ? mapping.key + \"-\" + mapping.sample : mapping.key\n                    allResult[resultKey].push(input)\n                }\n            });\n\n            allResult[\"全部\"].push(input)\n        });\n\n        return allResult;\n    }\n\n    render() {\n        function listforstatus(ordlist, ressect, pickerdaterange, StateMode, InputMode) {\n            if (StateMode !== 0) {\n                /*\n                預設 \n                全部 StateMode == 0\n                已開單 StateMode == 1, data.ORSTATUS == 30\n                已簽收 StateMode == 2, data.ORSTATUS == 31\n                已發報告 StateMode == 3, data.ORSTATUS == 32\n                */\n                const changeState = { '1': '30', '2': '31', '3': '32' }\n                ordlist = ordlist.filter(data => {\n                    return data.ORSTATUS === changeState[StateMode.toString()]\n                })\n            }\n\n            if (InputMode !== null) {\n                const regex = new RegExp(InputMode, \"i\");\n                ordlist = ordlist.filter(data => {\n                    return data.ORPROCED.match(regex) !== null\n                })\n            }\n\n            let status_report = []\n            console.log(ordlist, ressect, pickerdaterange)\n            const et = pickerdaterange[1].valueOf() + (24 * 60 * 60 * 1000)\n            const st = pickerdaterange[0].valueOf()\n            if (Array.isArray(ordlist) && Array.isArray(ressect)) {\n                for (let index = 0; index < ordlist.length; index++) {\n                    const element = ordlist[index];\n                    const time = element.ORBGNDT.toString().trim() + element.ORBGNTM.toString().trim()\n                    const timeStamp = moment(time, 'YYYY-MM-DDHHmmss').valueOf()\n                    if (timeStamp > st && timeStamp < et) {\n                        const status = ressect.find(function (value, index, array) {\n                            return value.ORDCLNM === element.ORDCLNM\n                        })\n                        if (status) {\n                            status_report.push({\n                                \"status\": true,\n                                \"element\": element\n                            })\n                        }\n                        else {\n                            status_report.push({\n                                \"status\": false,\n                                \"element\": element\n                            })\n\n                        }\n                    }\n                }\n            }\n\n            status_report = status_report.sort((a, b) => {\n                let tempA = a.ORBGNDT.toString().trim() + a.ORBGNTM.toString().trim()\n                let tempTimeA = moment(tempA, 'YYYY-MM-DDHHmmss').valueOf()\n                let tempB = b.ORBGNDT.toString().trim() + b.ORBGNTM.toString().trim()\n                let tempTimeB = moment(tempB, 'YYYY-MM-DDHHmmss').valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n\n            return status_report\n        }\n\n        const { PickerDateRange, ORDLIST, RESSECT, StateMode, InputMode } = this.props\n\n        let clusteredData = {}\n        if (this.props.parser !== undefined) {\n            clusteredData = this.parse(ORDLIST, this.props.parser)\n        }\n\n        //filter data by selected class\n        let filteredData = clusteredData[this.props.selectedClass];\n\n        //Picker Date 前三天\n        const list = listforstatus(filteredData, RESSECT, PickerDateRange, StateMode, InputMode)\n        // console.log(list)\n        const showModal = this.props.showModal\n        const nonlabcell = list.map(function (value, index, array) {\n            // console.log(value)\n            const time = moment(value.element.ORDATE.toString().trim() + value.element.ORTIME.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n            const come = value.element.ORSPCN1\n            const name = value.element.ORPROCED\n            const status = value.element.ORSTATUS\n\n            return (\n                <NonlabviewtableCell key={\"Examnonlabviewtable\" + index} come={come} time={time} name={name} status={status} hisId={value.element.ORHISTNO} caseId={value.element.ORDSEQCN} month={value.element.ORMM} seq={value.element.ORDSEQNO} showModal={showModal}></NonlabviewtableCell>\n            );\n        })\n\n        const title = [\"時間\", \"檢驗項目\", \"檢體\", \"狀態\", \"報告\"]\n        const titlecell = title.map(function (value, index, arr) {\n            const tempStyle = index == 1\n            return (\n                <t3 className='nonlabtebletitlecell' style={{ justifyContent: tempStyle ? \"left\" : \"center\" }}>{value}</t3>\n            );\n        })\n\n        return (\n            <div style={{ marginTop: \"10px\" }}>\n                <div style={{ height: \"30px\", border: \"rgba(238,238,238,1) 1px solid\", backgroundColor: \"rgba(226, 237, 243,.5)\", display: \"grid\", gridTemplateColumns: \"1fr 1.5fr 1fr 1fr 1fr\" }}>\n                    {titlecell}\n                </div>\n                {JSON.stringify(list) !== '[]' ?\n                    <div className='nonlabviewtable'>{nonlabcell} </div>\n                    :\n                    <div style={{ height: \"50px\", paddingLeft: \"5%\", display: \"flex\", alignItems: \"center\" }}>\n                        無資料\n                    </div>}\n            </div>\n        );\n    }\n}\n\nexport default Examnonlabviewtable\n","import React, { Component } from 'react';\nimport Examnonlabviewtable from './ExamNonlabtablecell'\nimport { Input, Select, Modal } from 'antd';\n// import moment from 'moment';\n// import searchlogo from '../../Image/svg/Search.svg'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport InsReportModal from '../ExamReportModal'\n\n// var mode_class, mode_state;\nclass Nonlabview extends Component {\n    state = {\n        ClassMode: \"全部類別\",\n        StateMode: 0,\n        InputMode: null,\n        parser: { \"mappings\": [] },\n        modalVisible: false,\n        modalReport: \"\"\n    }\n\n    componentDidMount() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"NonLabExamReport\");\n                parser.mappings = [{ \"key\": \"全部類別\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson ExamReportNonLab OK \" + JSON.stringify(parser))\n                this.setState({\n                    parser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    Inputvaluesearch = (event) => {\n        this.setState({ InputMode: event.target.value })\n    }\n\n    onChangeState = (value) => {\n        this.setState({ StateMode: value })\n    }\n\n    onChangeClass = (value) => {\n        this.setState({ ClassMode: value })\n    }\n\n    showModal = (report) => {\n        console.log(\"showModal :\" + JSON.stringify(report))\n        this.setState({\n            modalVisible: true,\n            modalReport: report\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    render() {\n        // var statetime = {\n        //     \"Starttime\": (+new Date()),\n        //     \"Endtime\": (+new Date())\n        // }\n        // const datearray = []\n        const { Option } = Select;\n        // function onChange(value, dateString) {\n        //     statetime.Starttime = (+new Date(dateString[0]))\n        //     statetime.Endtime = (+new Date(dateString[1]))\n        //     datearray.push(statetime.Starttime)\n        //     datearray.push(statetime.Endtime)\n        // }\n        // function Inputchange() {\n        //     const value = {\n        //         \"date\": datearray,\n        //         \"keyword\": document.getElementById(\"keywordsearch\").value\n        //     }\n        //     console.log(value)\n        // }\n        const { PickerDateRange, ORDLIST, RESSECT } = this.props\n        const { modalVisible, modalReport } = this.state\n        const showModal = this.showModal\n        const handleOk = this.handleOk\n        const handleCancel = this.handleCancel\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>檢驗單及報告</t2>\n                </div>\n                <div style={{ display: 'grid', gridTemplateColumns: \"130px 130px auto\", gridColumnGap: \"5px\", marginTop: \"10px\" }}>\n                    <Select defaultValue={this.state.ClassMode} placeholder=\"選擇檢驗類別\" style={{ width: 120 }} onChange={this.onChangeClass}>\n                        {this.state.parser.mappings.map((mapping, index) => {\n                            return <Option key={index} value={mapping.sample ? mapping.key + \"-\" + mapping.sample : mapping.key}>{mapping.sample ? mapping.key + \"-\" + mapping.sample : mapping.key}</Option>\n                        })}\n                    </Select>\n                    <Select defaultValue={this.state.StateMode} placeholder=\"選擇項目狀態\" style={{ width: 120 }} onChange={this.onChangeState}>\n                        <Option value={0}>全部狀態</Option>\n                        <Option value={1}>已開單</Option>\n                        <Option value={2}>已簽收</Option>\n                        <Option value={3}>已發報告</Option>\n                    </Select>\n                    <Input id=\"keywordsearch\" placeholder=\"輸入關鍵字\" onChange={this.Inputvaluesearch} />\n                    {/* <div onClick={() => this.Inputvaluesearch()} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <img src={searchlogo} alt=\"searchlogo\" />\n                    </div> */}\n                </div>\n\n                <Examnonlabviewtable PickerDateRange={PickerDateRange} ORDLIST={ORDLIST} RESSECT={RESSECT} selectedClass={this.state.ClassMode} parser={this.state.parser} StateMode={this.state.StateMode} InputMode={this.state.InputMode} visible={modalVisible} showModal={showModal} handleOk={handleOk} handleCancel={handleCancel}></Examnonlabviewtable>\n                <Modal\n                    title={\"檢驗結果\"}\n                    visible={modalVisible}\n                    onOk={handleOk}\n                    onCancel={handleCancel}\n                    width={1000}\n                    footer={null}>\n                    <InsReportModal report={modalReport}></InsReportModal>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Nonlabview\n","import React, { Component } from 'react';\nimport Labview from './ExamLabview'\nimport { DatePicker, Button } from 'antd';\nimport './ExamReport.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport Nonlabview from './NonLabview'\nimport locale from 'antd/es/date-picker/locale/zh_TW';\n// import * as RegularData from '../../Data/RegularData'\n\nclass Examreport extends Component {\n    state = {\n        selectdata: 0,\n        selectTitle: '',\n        PickerDateRange: [moment(moment().subtract(6, 'days').format('YYYYMMDD')),\n        moment(moment().format('YYYYMMDD'))],\n        RESDGLU1: [], //累積報告\n        RESLAB02: [], //累積報告\n        RESLAB01: [],  //累積報告\n        RESDBGAS: [],  //累積報告\n        RESLAB0C: [],//累積報告\n        ORDLIST: [],\n        RESSECT: []\n    }\n    constructor(props) {\n        super(props)\n        this.PickerDateRangeChange = this.PickerDateRangeChange.bind(this)\n    }\n\n    SelectDataList() {\n        function vallofnull(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"\"\n            }\n            return value.toString().trim()\n        }\n        const DateRange = this.state.PickerDateRange\n        console.log(`show DataRange : ${DateRange}`)\n        const selectData = this.state.selectdata\n        const st_timestamp = DateRange[0].valueOf()\n        const et_timestamp = DateRange[1].valueOf() + (24 * 60 * 60 * 1000)\n        // const { PickerDateRange, RESLAB02, RESDGLU1, RESLAB01, RESDBGAS, RESLAB0C, ORDLIST, RESSECT } = this.props\n        const RESLAB02 = this.state.RESLAB02\n        const RESDGLU1 = this.state.RESDGLU1\n        const RESLAB01 = this.state.RESLAB01\n        const RESDBGAS = this.state.RESDBGAS\n        const RESLAB0C = this.state.RESLAB0C\n\n\n        var CellData = []\n        console.log(selectData, RESLAB02, RESDGLU1, RESLAB01, RESDBGAS)\n        if (selectData === 0) { // CBC\n            for (let index = 0; index < RESLAB02.length; index++) {\n                const element = RESLAB02[index];\n                const WBC = vallofnull(element.RSV01)\n                const Band = vallofnull(element.RSV13)\n                const Seq = vallofnull(element.RSV14)\n                const Lym = vallofnull(element.RSV15)\n                const Hb = vallofnull(element.RSV03)\n                const Hct = vallofnull(element.RSV04)\n                const Plt = vallofnull(element.RSV09)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                console.log(\"time \" + time + \" st_timestamp \" + st_timestamp + \" et_timestamp \" + et_timestamp)\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [WBC, Band, Seq, Lym, Hb, Hct, Plt]\n                    })\n                }\n            }\n            console.log(\"CellData => \" + JSON.stringify(CellData))\n            return CellData\n        }\n        if (selectData === 1) { // 電解質與腎\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const Na = vallofnull(element.RSV13)\n                const K = vallofnull(element.RSV14)\n                const Cl = vallofnull(element.RSV15)\n                const CaFree = \"No\"\n                const CaTotal = vallofnull(element.RSV03)\n                const Mg = \"No\"\n                const P = vallofnull(element.RSV17)\n                const BUN = vallofnull(element.RSV05)\n                const Cr = vallofnull(element.RSV06)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [Na, K, Cl, CaFree, CaTotal, Mg, P, BUN, Cr]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 2) { // 肝功能\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const Alt = vallofnull(element.RSV11)\n                const AST = vallofnull(element.RSV12)\n                const TBil = vallofnull(element.RSV08)\n                const DBil = vallofnull(element.RSV25)\n                const rGGT = vallofnull(element.RSV19)\n                const Alkp = vallofnull(element.RSV09)\n                const Alb = vallofnull(element.RSV02)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [Alt, AST, TBil, DBil, rGGT, Alkp, Alb]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 3) { // 早產兒\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const Iron = vallofnull(element.RSV26)\n                const TIBC = vallofnull(element.RSV28)\n                const FeSat = parseInt(vallofnull(element.RSV26)) / parseInt(vallofnull(element.RSV26))\n                const LDH = vallofnull(element.RSV10)\n                const Alkp = vallofnull(element.RSV9)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [Iron, TIBC, FeSat, LDH, Alkp]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 4) { // 心臟\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const ck = vallofnull(element.RSV18)\n                const ckMB = vallofnull(element.RSV28)\n                const BNP = \"No\"\n                const Troponinl = vallofnull(element.RSV30)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [ck, ckMB, BNP, Troponinl]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 5) { // 凝血\n            for (let index = 0; index < RESLAB02.length; index++) {\n                const element = RESLAB02[index];\n                const PT = vallofnull(element.RSV10)\n                const APTT = vallofnull(element.RSV11)\n                const INR = vallofnull(element.RSV12)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [PT, APTT, INR]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 6) { // GAS(Acid-Base)\n            for (let index = 0; index < RESDBGAS.length; index++) {\n                const element = RESDBGAS[index];\n                const PH = vallofnull(element.SS07)\n                const pCO2 = vallofnull(element.SS06)\n                const pO2 = vallofnull(element.SS08)\n                const HCO3 = vallofnull(element.SS04)\n                const BE = vallofnull(element.SS01)\n                const O2Sat = vallofnull(element.SS05)\n                const FiO2 = vallofnull(element.SS03)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [PH, pCO2, pO2, HCO3, BE, O2Sat, FiO2]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 7) { // GAS(Additionary)\n            for (let index = 0; index < RESDBGAS.length; index++) {\n                const element = RESDBGAS[index];\n                const Hb = vallofnull(element.SS11)\n                const Hct = vallofnull(element.SS12)\n                const Na = vallofnull(element.SS13)\n                const K = vallofnull(element.SS14)\n                const CaFree = vallofnull(element.SS15)\n                const Bun = vallofnull(element.SS16)\n                const Cr = vallofnull(element.SS17)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [Hb, Hct, Na, K, CaFree, Bun, Cr]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 8) { // Glucose\n            for (let index = 0; index < RESDGLU1.length; index++) {\n                const element = RESDGLU1[index]\n                const GluBeside = vallofnull(element.GLUFAST)\n                const GluLab = vallofnull(element.RSV16)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [GluBeside, GluLab]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 9) { // 黃疸\n            for (let index = 0; index < RESLAB0C.length; index++) {\n                const element = RESLAB0C[index]\n                const TCB = vallofnull(element.RSV01)\n                const MicroBil = vallofnull(element.RSV02)\n                const TBil = vallofnull(element.RSV03)\n                const DBil = vallofnull(element.RSV04)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [TCB, MicroBil, TBil, DBil]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 10) { // 感染指數\n            for (let index = 0; index < RESLAB02.length; index++) {\n                const elementOne = RESLAB02[index]\n                const elementTwo = RESLAB01[index]\n                const WBC = vallofnull(elementOne.RSV01)\n                const Band = vallofnull(elementOne.RSV13)\n                const Seg = vallofnull(elementOne.RSV14)\n                const Lym = vallofnull(elementOne.RSV15)\n                const PCT = \"NO\"\n                const CRP = vallofnull(elementTwo.RSV32)\n                const time = moment((elementOne.ORRESDT.toString() + elementOne.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((elementOne.ORRESDT.toString() + elementOne.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD HH:mm\"),\n                        Data: [WBC, Band, Seg, Lym, PCT, CRP]\n                    })\n                }\n            }\n            return CellData\n        }\n        return null\n\n    }\n\n    componentDidMount() {\n        this.APIUpdate(this.state.PickerDateRange)\n        this.SelectDataList = this.SelectDataList.bind(this)\n    }\n\n    // ChangeRangePicker(dates, datestrings) {\n\n    // }\n    APIUpdate(DateRange) {\n        console.log(DateRange)\n        function selectMonthInterval(PickerDate) {\n            const timestampInterval = new Date().getTime() - new Date(PickerDate).getTime()\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        const { caseinfo } = this.props\n\n        const st = DateRange[0].format(\"YYYY-MM-DD\")\n        const datePick = DateRange[0].format('YYYY/MM/DD')\n        console.log(DateRange, st, datePick)\n        // const TRANSDate = moment(caseinfo.TRANSINDT, 'YYYYMMDD').format('YYYY-MM-DD')\n        const MonthInterval = selectMonthInterval(datePick)\n        const RESDGLU1 = ApiProvider.getStoredProcedureRESDGLU1(caseinfo.HISID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESLAB02 = ApiProvider.getStoredProcedureRESLAB02(caseinfo.HISID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESLAB01 = ApiProvider.getStoredProcedureRESLAB01(caseinfo.HISID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESDBGAS = ApiProvider.getStoredProcedureRESDBGAS(caseinfo.HISID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESLAB0C = ApiProvider.getStoredProcedureRESLAB0C(caseinfo.HISID, st)\n            .then(data => {\n                console.log(data.data)\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const ORDLIST = ApiProvider.getStoredProcedureORDLIST(caseinfo.HISID, st, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                console.log(data.data)\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        const RESSECT = ApiProvider.getStoredProcedureRESSECT(caseinfo.HISID, MonthInterval, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        Promise.all([RESDGLU1, RESLAB02, RESLAB01, RESDBGAS, RESLAB0C, ORDLIST, RESSECT]).then(result => {\n            console.log(result)\n            this.setState({\n                RESDGLU1: result[0], //累積報告\n                RESLAB02: result[1],  //累積報告\n                RESLAB01: result[2],  //累積報告\n                RESDBGAS: result[3],  //累積報告\n                RESLAB0C: result[4],  //累積報告\n                ORDLIST: result[5],\n                RESSECT: result[6],\n            })\n        })\n    }\n    callbackDateFunction = (select) => {\n        // console.log(select)\n        this.setState({\n            selectdata: select\n        })\n    }\n\n    callbackTitleFunction = (select) => {\n        // console.log(select)\n        this.setState({\n            selectTitle: select\n        })\n    }\n\n    PickerDateRangeChange(date, dateString) {\n        console.log(date)\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDateRange } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const st = PickerDateRange[0].valueOf()\n        const et = PickerDateRange[1].valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                if (bronDate <= (st - day)) {\n                    const bTime = [moment(moment(st - day).format('YYYYMMDD')), moment(moment(et - day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(bTime)\n                }\n                break;\n            case 'N':\n                const nTime = [moment(moment().subtract(6, 'days').format('YYYYMMDD')), moment(moment().format('YYYYMMDD'))]\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                if (aTemp >= (et + day)) {\n                    const aTime = [moment(moment(st + day).format('YYYYMMDD')), moment(moment(et + day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(aTime)\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const momentDate = this.state.PickerDateRange\n        let data = this.SelectDataList()\n\n        data = data.sort((a, b) => {\n            let tempTimeA = moment(a.Time, 'YYYY-MM-DDHHmmss').valueOf()\n            let tempTimeB = moment(b.Time, 'YYYY-MM-DDHHmmss').valueOf()\n            return tempTimeA < tempTimeB ? 1 : -1\n        })\n\n        console.log(\"SelectDataList => \" + data)\n        const { RangePicker } = DatePicker\n        const PickerDateRange = [momentDate[0].valueOf(), momentDate[1].valueOf()]\n\n        return (\n            <div className='examreportlayout'>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"250px 120px\", gridColumnGap: \"5px\", marginBottom: \"5px\" }}>\n                    <RangePicker\n                        // defaultValue={this.state.PickerDateRange}\n                        value={this.state.PickerDateRange}\n                        format={\"YYYY/MM/DD\"}\n                        allowClear={false}\n                        locale={locale}\n                        disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                        // toString={(dates, datestrings) => { this.setState({ RangePicker: dates }) }}\n                        onChange={this.PickerDateRangeChange}\n                    />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" }}>\n                    <Labview selectvalue={this.state.selectdata}\n                        parentDateCallback={this.callbackDateFunction}\n                        DataList={data}\n                        SelectStatus={this.state.selectdata}\n                        PickerDateRange={PickerDateRange}\n                        parentTitleCallback={this.callbackTitleFunction}>\n                    </Labview>\n                    <Nonlabview ORDLIST={this.state.ORDLIST} RESSECT={this.state.RESSECT} caseinfo={caseinfo} PickerDateRange={PickerDateRange}></Nonlabview>\n                </div>\n                {/* {this.charttableview()} */}\n                <div style={{ display: \"flex\", justifyContent: 'center', alignItems: 'center' }}>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Examreport;\n","import React, { Component } from 'react';\nimport { DatePicker, Button } from 'antd';\nimport Prescriptionordertable from '../Prescriptionorder/Prescriptionorder'\nimport Treatmentorderlayout from '../Treatmentorder/Treatmentorder'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass Orderview extends Component {\n    state = {\n        UDORDER0: [],\n        TRTMNTQ1: [],\n        PickerDateRange: [moment(moment().subtract(6, 'days').format('YYYYMMDD')),\n        moment(moment().format('YYYYMMDD'))],\n    }\n    componentDidMount() {\n        this.apidata()\n    }\n    apidata() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID.toString().trim()\n        const CID = caseinfo.CASEID.toString().trim()\n        const UDORDER0 = ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureUDORDER0 NG \" + JSON.stringify(err))\n            });\n        const TRTMNTQ1 = ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureTRTMNTQ1 NG \" + JSON.stringify(err))\n            });\n        Promise.all([UDORDER0, TRTMNTQ1]).then(result => {\n            console.log(result)\n            this.setState({\n                UDORDER0: result[0],\n                TRTMNTQ1: result[1]\n            })\n        })\n    }\n\n    PickerDateRangeChange = (date, dateString) => {\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDateRange } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const st = PickerDateRange[0].valueOf()\n        const et = PickerDateRange[1].valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                if (bronDate <= (st - day)) {\n                    const bTime = [moment(moment(st - day).format('YYYYMMDD')), moment(moment(et - day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(bTime)\n                }\n                break;\n            case 'N':\n                const nTime = [moment(moment().subtract(6, 'days').format('YYYYMMDD')), moment(moment().format('YYYYMMDD'))]\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                if (aTemp >= (et + day)) {\n                    const aTime = [moment(moment(st + day).format('YYYYMMDD')), moment(moment(et + day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(aTime)\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const udata = this.state.UDORDER0\n        const tdata = this.state.TRTMNTQ1\n        const momentDate = this.state.PickerDateRange\n\n        const { RangePicker } = DatePicker\n        const PickerDateRange = [momentDate[0].valueOf(), momentDate[1].valueOf()]\n        if (udata.length === 0 || tdata.length === 0) {\n            //Loading\n            return null\n        }\n        // console.log(udata)\n        // console.log(PickerDateRange)\n\n        return (\n            <div>\n                <div style={{ maxHeight: '75vh', overflowY: 'auto' }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"250px 120px\", gridColumnGap: \"5px\", marginBottom: \"5px\" }}>\n                        <RangePicker\n                            value={this.state.PickerDateRange}\n                            format={\"YYYY/MM/DD\"}\n                            allowClear={false}\n                            locale={\"zh_TW\"}\n                            onChange={this.PickerDateRangeChange}\n                            disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                        />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" }}>\n                        <Prescriptionordertable PickerDateRange={PickerDateRange} UDORDER0={udata} searchbar={true} caseinfo={caseinfo}></Prescriptionordertable>\n                        <Treatmentorderlayout PickerDateRange={PickerDateRange} TRTMNT01={tdata} searchbar={true} caseinfo={caseinfo}></Treatmentorderlayout>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Orderview;\n","import React, { Component } from \"react\";\nimport { Select, Button } from \"antd\";\nimport * as ApiProvider from \"../../API/ApiProvider\";\nimport moment from \"moment\";\n// import Notelist from './Notelist'\n// import searchlogo from '../../Image/svg/Search.svg'\nimport * as Wardstate from \"../../Function/Wardstate\";\nimport \"./Note.scss\";\n// import X2JS from 'x2js';\n// import * as PR from '../../Resource/PRGTXQRY'\n\nvar dataRange = [];\nclass Noteview extends Component {\n  state = {\n    StartTime: null,\n    EndTime: null,\n    display_data: null,\n    context: null,\n    contentdisplay: false,\n\n    ADMDISP: [],\n    ADMLIST: [],\n    DISLIST: [],\n    DISDISP: [],\n    DTAROTQ4: [],\n    DTASOAPQ: [],\n    PCASELIST: [],\n    ERDISP: [],\n    PRGTXQRY: [],\n    PRGTXQRYDIS: [],\n    CPSLIST: [],\n    CPSDISP: [],\n    QPNOT: [],\n    QPNOTDIS: [],\n    OPSORAQ1: [],\n    OPSORAQ2: [],\n    SelectClass: 0\n  };\n  componentDidMount() {\n    this.apiData();\n  }\n\n  SelectADMDISP(ADISTNO, ADICASE) {\n    console.log(ADISTNO, ADICASE);\n    ApiProvider.getStoredProcedureADMDISP(ADISTNO, ADICASE)\n      .then(data => {\n        // console.log(data.data)\n        this.setState({\n          ADMDISP: data.data\n        });\n      })\n      .catch(err => {\n        console.log(\n          \"Andy test getStoredProcedureADMDISP NG \" + JSON.stringify(err)\n        );\n      });\n  }\n  SelectDISDISP(CID) {\n    // console.log(ADISTNO, ADICASE)\n    const { caseinfo } = this.props;\n    ApiProvider.getStoredProcedureDISDISP(caseinfo.HISID, CID)\n      .then(data => {\n        // console.log(data.data)\n        this.setState({\n          DISDISP: data.data\n        });\n      })\n      .catch(err => {\n        console.log(\n          \"Andy test getStoredProcedureADMDISP NG \" + JSON.stringify(err)\n        );\n      });\n  }\n\n  SelectERDISP(CID) {\n    const { caseinfo } = this.props;\n    ApiProvider.getStoredProcedureERDISP(caseinfo.HISID, CID)\n      .then(data => {\n        this.setState({\n          ERDISP: data.data\n        });\n      })\n      .catch(err => {\n        console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n      });\n  }\n  SelectDTASOAPQ(date, dpt) {\n    const { caseinfo } = this.props;\n    //門診紀錄內容 需要時間和醫生編號\n    ApiProvider.getStoredProcedureDTASOAPQ(caseinfo.HISID, date, dpt)\n      .then(data => {\n        this.setState({\n          DTASOAPQ: data.data\n        });\n      })\n      .catch(err => {\n        console.log(\n          \"Andy test getStoredProcedureDTASOAPQ NG \" + JSON.stringify(err)\n        );\n      });\n  }\n  SelectPRGTXQRYDIS(List) {\n    this.setState({\n      PRGTXQRYDIS: List\n    });\n  }\n  SelectCPSDISP(HID, CID, SEQ) {\n    ApiProvider.getStoredProcedureCPSDISP(HID, CID, SEQ)\n      .then(data => {\n        console.log(data.data);\n        this.setState({\n          CPSDISP: data.data\n        });\n      })\n      .catch(err => {\n        console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n      });\n  }\n  SelectQPNOTDIS(data) {\n    this.setState({\n      QPNOTDIS: data\n    });\n  }\n\n  SelectOPSORAQ1(OPABGNDT, OPATIMES) {\n    const { caseinfo } = this.props;\n    //門診紀錄內容 需要時間和醫生編號\n    ApiProvider.getStoredProcedureOPSORAQ2(caseinfo.HISID, OPABGNDT, OPATIMES)\n      .then(data => {\n        this.setState({\n          OPSORAQ2: data.data\n        });\n      })\n      .catch(err => {\n        console.log(\n          \"Andy test getStoredProcedureDTASOAPQ NG \" + JSON.stringify(err)\n        );\n      });\n  }\n  apiData() {\n    const { caseinfo } = this.props;\n    //入院並摘\n    const ADMLIST = ApiProvider.getStoredProcedureADMLIST(caseinfo.HISID, \"DOC3924B\")\n      .then(data => {\n        return data.data;\n      })\n      .catch(err => {\n        console.log(\n          \"Andy test getStoredProcedureADMLIST NG \" + JSON.stringify(err)\n        );\n      });\n    //出院並摘\n    const DISLIST = ApiProvider.getStoredProcedureDISLIST(\n      caseinfo.HISID,\n      \"DOC3924B\"\n    )\n      .then(data => {\n        return data.data;\n      })\n      .catch(err => {\n        console.log(\n          \"Andy test getStoredProcedureDISLIST NG \" + JSON.stringify(err)\n        );\n      });\n\n    //門診紀錄清單\n    const DTAROTQ4 = ApiProvider.getStoredProcedureDTAROTQ4(caseinfo.HISID)\n      .then(data => {\n        return data.data;\n      })\n      .catch(err => {\n        console.log(\n          \"Andy test getStoredProcedureDTAROTQ4 NG \" + JSON.stringify(err)\n        );\n      });\n\n    //急診紀錄清單\n    const PCASELIST = ApiProvider.getStoredProcedurePCASELIST(\n      caseinfo.HISID,\n      \"DOC3924B\",\n      \"E\"\n    )\n      .then(data => {\n        return data.data;\n      })\n      .catch(err => {\n        console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n      });\n\n    const CPSLIST = ApiProvider.getStoredProcedureCPSLIST(\n      caseinfo.HISID,\n      \"DOC3924B\"\n    )\n      .then(data => {\n        return data.data;\n      })\n      .catch(err => {\n        console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n      });\n\n    function nullvalue(value) {\n      if (value === null) {\n        return \"911\";\n      }\n      console.log(value);\n      const PRGTXQRYDATE = moment(value.PLOCDT, \"YYYYMMDD\").format(\"YYYYMM\");\n      const D = PRGTXQRYDATE.substr(3, 3);\n      return D;\n    }\n\n    const LIVEPLOC = nullvalue(caseinfo.PLOCSTART);\n    console.log(LIVEPLOC);\n    const PRGTXQRY = ApiProvider.getStoredProcedurePRGTXQRY(\n      caseinfo.HISID,\n      LIVEPLOC,\n      caseinfo.CASEID\n    )\n      .then(data => {\n        console.log(data.data);\n        return data.data;\n      })\n      .catch(err => {\n        console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n      });\n    const transdt = caseinfo.TRANSINDT;\n    const ST = moment(transdt, \"YYYYMMDD\").format(\"YYYYMMDDHHmm\");\n    const ET = moment().format(\"YYYYMMDDHHmm\");\n    console.log(caseinfo.CASEID, ST, ET);\n    const QPNOT = ApiProvider.getQPNOT(caseinfo.CASEID, ST, ET)\n      .then(data => {\n        console.log(data.data)\n        const parseSource = Wardstate.XM2JSON(data.data);\n        return parseSource;\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    const OPSORAQ1 = ApiProvider.getStoredProcedureOPSORAQ1(caseinfo.HISID)\n      .then(data => {\n        return data.data;\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    Promise.all([\n      ADMLIST,\n      DISLIST,\n      DTAROTQ4,\n      PCASELIST,\n      PRGTXQRY,\n      CPSLIST,\n      QPNOT,\n      OPSORAQ1\n    ]).then(result => {\n      console.log(result);\n      this.setState({\n        ADMLIST: result[0],\n        DISLIST: result[1],\n        DTAROTQ4: result[2],\n        PCASELIST: result[3],\n        PRGTXQRY: result[4],\n        CPSLIST: result[5],\n        QPNOT: result[6],\n        OPSORAQ1: result[7]\n      });\n    });\n  }\n\n  callbackFunction = item_array => {\n    console.log(item_array);\n    this.setState({\n      display_data: item_array.NoteTime,\n      context: item_array.Content,\n      contentdisplay: true\n    });\n  };\n  handleChange = e => {\n    console.log(`selected ${typeof e}`);\n    console.log(`selected ${e}`);\n    let value = parseInt(e, 10);\n    this.setState({\n      SelectClass: value\n    });\n  };\n  onClickSearch() {\n    if (dataRange.length !== 0) {\n      this.setState({\n        StartTime: dataRange[0],\n        EndTime: dataRange[1]\n      });\n    }\n  }\n  onDateChange = (date, dateString) => {\n    console.log(date, dateString);\n  };\n  NotecontrolBar() {\n    const select_data = [\n      { item: \"入院病摘\", value: 0 },\n      { item: \"出院病摘\", value: 1 },\n      { item: \"門診紀錄\", value: 2 },\n      { item: \"急診紀錄\", value: 3 },\n      { item: \"病程紀錄\", value: 4 },\n      { item: \"會診紀錄\", value: 5 },\n      { item: \"護理紀錄\", value: 6 },\n      { item: \"手術記錄\", value: 7 }\n    ];\n    // // const { RangePicker } = DatePic\n    const items = (\n      <div\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"100px 100px 100px 100px\",\n          columnGap: \"10px\",\n          marginBottom: \"10px\",\n          gridAutoColumns: \"100px\",\n          gridAutoFlow: \"column\"\n        }}\n      >\n        {select_data.map(info => {\n          return (\n            <Button\n              onClick={e => this.handleChange(e.target.value)}\n              className=\"topMenu\"\n              style={{\n                borderRadius: \"4px\",\n                color: \"#001a6d88\",\n                border: \"1px solid #001a6d88\",\n                paddingLeft: \"4px\",\n                paddingRight: \"4px\",\n                height: \"30px\",\n                gridTemplateColumns: \"column\",\n                cursor: \"pointer\"\n              }}\n              value={info.value}\n            >\n              {info.item}\n            </Button>\n          );\n        })}\n      </div>\n    );\n\n    return items;\n  }\n\n  renderContentArray() {\n    const source = this.state.SelectClass;\n    if (source === 0) {\n      const data = this.state.ADMDISP;\n      if (data.length === 0) {\n        return null;\n      } else {\n        const fakeADMData = data;\n        return fakeADMData.map(row => (\n          <div style={{ whiteSpace: \"pre-wrap\" }}>{row.ADMDATA}</div>\n        ));\n      }\n    }\n    if (source === 1) {\n      const data = this.state.DISDISP;\n      if (data.length === 0) {\n        return null;\n      } else {\n        const fakeADMData = data;\n        return fakeADMData.map(row => (\n          <div style={{ whiteSpace: \"pre-wrap\" }}>{row[\"1\"]}</div>\n        ));\n      }\n    }\n    if (source === 2) {\n      const data = this.state.DTASOAPQ;\n      if (data.length === 0) {\n        return null;\n      } else {\n        let textType = [];\n        let textObj = [];\n        for (var i = 0; i < data.length; i++) {\n          console.log(data[i]);\n          //find type\n          const type = data[i].DTSOAPTY;\n          const lines = data[i].DTSOAPSQ;\n          const content = data[i].DTSOAPTX;\n          if (textType.indexOf(type) === -1) {\n            //new type\n            const newObj = {\n              type: type,\n              lines: lines,\n              content: content\n            };\n            textObj.push(newObj);\n            textType.push(type);\n          } else {\n            //old type\n            const idx = textObj.findIndex(item => item.type === type);\n            textObj[idx].lines = lines;\n            textObj[idx].content = textObj[idx].content + \"\\n\" + content;\n          }\n        }\n        let textResult = [];\n        for (let index = 0; index < textObj.length; index++) {\n          textResult.push(textObj[index].type);\n          textResult.push(textObj[index].content);\n          textResult.push(\"\\n\");\n        }\n\n        return textResult.map(row => (\n          <div style={{ whiteSpace: \"pre-wrap\" }}>{row}</div>\n        ));\n      }\n    }\n    if (source === 3) {\n      const data = this.state.ERDISP;\n      if (data.length === 0) {\n        return null;\n      } else {\n        const fakeADMData = data;\n        return fakeADMData.map(row => (\n          <div style={{ whiteSpace: \"pre-wrap\" }}>\n            {JSON.stringify(row, null, \"\\t\")}\n          </div>\n        ));\n      }\n    }\n    if (source === 4) {\n      const data = this.state.PRGTXQRYDIS;\n      if (data.length === 0) {\n        return null;\n      } else {\n        var newList = [];\n        console.log(data);\n        for (let index = 0; index < 5; index++) {\n          if (index === 0) {\n            const dataFilter = data.filter(function (info, index, arr) {\n              return info.PRGTYPE.toString().trim() === \"D\";\n            });\n            if (dataFilter.length !== 0) {\n              newList.push(dataFilter[0]);\n            }\n          }\n\n          if (index === 1) {\n            const dataFilter = data.filter(function (info, index, arr) {\n              return info.PRGTYPE.toString().trim() === \"S\";\n            });\n            if (dataFilter.length !== 0) {\n              newList.push(dataFilter[0]);\n            }\n          }\n\n          if (index === 2) {\n            const dataFilter = data.filter(function (info, index, arr) {\n              return info.PRGTYPE.toString().trim() === \"O\";\n            });\n            if (dataFilter.length !== 0) {\n              newList.push(dataFilter[0]);\n            }\n          }\n\n          if (index === 3) {\n            const dataFilter = data.filter(function (info, index, arr) {\n              return info.PRGTYPE.toString().trim() === \"A\";\n            });\n            if (dataFilter.length !== 0) {\n              newList.push(dataFilter[0]);\n            }\n          }\n\n          if (index === 4) {\n            const dataFilter = data.filter(function (info, index, arr) {\n              return info.PRGTYPE.toString().trim() === \"P\";\n            });\n            if (dataFilter.length !== 0) {\n              newList.push(dataFilter[0]);\n            }\n          }\n        }\n        console.log(newList);\n        const dataMap = newList.map(function (info, index, arr) {\n          return (\n            <div key={index} style={{ marginBottom: \"10px\" }}>\n              <div style={{ whiteSpace: \"pre-wrap\" }}>{info.PRGTYPE}</div>\n              <div style={{ whiteSpace: \"pre-wrap\" }}>{info.PRGTX}</div>\n            </div>\n          );\n        });\n        return dataMap;\n      }\n    }\n    if (source === 5) {\n      const data = this.state.CPSDISP;\n      if (data.length === 0) {\n        return null;\n      } else {\n        const fakeADMData = data;\n        return fakeADMData.map(row => (\n          <div style={{ whiteSpace: \"pre-wrap\" }}>{row[\"1\"]}</div>\n        ));\n      }\n    }\n    if (source === 6) {\n      const data = this.state.QPNOTDIS;\n      if (data.length === 0) {\n        return null;\n      } else {\n        // Time: moment(v.rec_dat.toString() + v.rec_tim.toString(), \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\"),\n        // special: v.special,\n        // a: v.cre_nam,\n        // b: v.pro_not\n        const fakeADMData = data.map(function (info, index, arr) {\n          const time = info.Time;\n          const cre_nam = info.cre_nam;\n          const pro_not = info.pro_not;\n          return (\n            <div style={{ marginBottom: \"10px\" }}>\n              <div>{time}</div>\n              <div>{cre_nam === undefined ? \"--\" : cre_nam}</div>\n              <div>{pro_not === undefined ? \"--\" : pro_not}</div>\n            </div>\n          );\n        });\n        return fakeADMData;\n      }\n    }\n    if (source === 7) {\n      const data = this.state.OPSORAQ2;\n      console.log(data);\n      if (data.length === 0) {\n        return null;\n      } else {\n        const fakeADMData = data;\n        return fakeADMData.map(row => (\n          <div style={{ whiteSpace: \"pre-wrap\" }}>{row.CONTENT}</div>\n        ));\n      }\n    } else {\n      return null;\n    }\n  }\n  switchListRender() {\n    function groupfirstarray(arrayList) {\n      var result = arrayList.filter(function (value, index, arr) {\n        const res = arr.map(function (value, index, arr) {\n          return moment(\n            value.PRGDT.toString() + value.PRGTM.toString(),\n            \"YYYY-MM-DDHH:mm:ss\"\n          ).valueOf();\n        });\n        return (\n          res.indexOf(\n            moment(\n              value.PRGDT.toString() + value.PRGTM.toString(),\n              \"YYYY-MM-DDHH:mm:ss\"\n            ).valueOf()\n          ) === index\n        );\n      });\n      var arrList = [];\n      for (let index = 0; index < result.length; index++) {\n        const element = result[index];\n        const comparevalue = moment(\n          element.PRGDT.toString() + element.PRGTM.toString(),\n          \"YYYY-MM-DDHH:mm:ss\"\n        ).valueOf();\n        const filterarray = arrayList.filter(function (value, index, arr) {\n          return (\n            moment(\n              value.PRGDT.toString() + value.PRGTM.toString(),\n              \"YYYY-MM-DDHH:mm:ss\"\n            ).valueOf() === comparevalue\n          );\n        });\n        arrList.push(filterarray);\n      }\n      return arrList;\n    }\n    function grouparray(arrayList) {\n      console.log(arrayList)\n      var result = arrayList.filter(function (value, index, arr) {\n        const res = arr.map(function (value, index, arr) {\n          return moment(value.rec_dat.toString(), \"YYYYMMDD\").valueOf();\n        });\n        return (\n          res.indexOf(\n            moment(value.rec_dat.toString(), \"YYYYMMDD\").valueOf()\n          ) === index\n        );\n      });\n      var arrList = [];\n      for (let index = 0; index < result.length; index++) {\n        const element = result[index];\n        const comparevalue = moment(\n          element.rec_dat.toString(),\n          \"YYYYMMDD\"\n        ).valueOf();\n        const filterarray = arrayList.filter(function (value, index, arr) {\n          return (\n            moment(value.rec_dat.toString(), \"YYYYMMDD\").valueOf() ===\n            comparevalue\n          );\n        });\n        arrList.push(filterarray);\n      }\n      return arrList;\n    }\n    const select = this.state.SelectClass;\n    if (select === 0) {\n      const data = this.state.ADMLIST;\n      if (data.length === 0) {\n        return null;\n      } else {\n        const cellRander = data.map((object, index, arr) => {\n          const HID = object.ADISTNO.toString().trim();\n          const CID = object.ADICASE.toString().trim();\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                textAlign: \"center\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectADMDISP(HID, CID)}\n            >\n              <div style={{ fontSize: \"14px\" }}>\n                {moment(object.ADIDATE.toString().trim(), \"YYYYMMDD\").format(\n                  \"YYYY/MM/DD\"\n                )}\n              </div>\n              <div style={{ fontSize: \"14px\" }}>{object.ADICASE}</div>\n            </div>\n          );\n        });\n        return (\n          // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n          <div>{cellRander}</div>\n        );\n      }\n    }\n    if (select === 1) {\n      const data = this.state.DISLIST;\n      if (data.length === 0) {\n        return null;\n      } else {\n        const cellRander = data.map((object, index, arr) => {\n          // const HID = object.ADISTNO.toString().trim()\n          const CID = object.DCASENO.toString().trim();\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                textAlign: \"center\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectDISDISP(CID)}\n            >\n              <div style={{ fontSize: \"14px\" }}>\n                {moment(object.DDATEIN.toString().trim(), \"YYYY-MM-DD\").format(\n                  \"YYYY/MM/DD\"\n                )}\n              </div>\n              <div style={{ fontSize: \"14px\" }}>\n                {moment(object.DDATEOUT.toString().trim(), \"YYYY-MM-DD\").format(\n                  \"YYYY/MM/DD\"\n                )}\n              </div>\n              {/* <div style={{ fontSize: \"14px\" }}>{object.ADICASE}</div> */}\n            </div>\n          );\n        });\n        return (\n          // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n          <div>{cellRander}</div>\n        );\n      }\n    }\n    if (select === 2) {\n      const data = this.state.DTAROTQ4;\n      if (data.length === 0) {\n        return null;\n      } else {\n        const cellRander = data.map((object, index, arr) => {\n          // const HID = object.ADISTNO.toString().trim()\n          const DPT = object.DTPDEPT.toString().trim();\n          const DTPDATE = object.DTPDATE.toString().trim();\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                textAlign: \"center\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectDTASOAPQ(DTPDATE, DPT)}\n            >\n              <div style={{ fontSize: \"14px\" }}>\n                {moment(object.DTPDATE.toString().trim(), \"YYYY-MM-DD\").format(\n                  \"YYYY/MM/DD\"\n                )}\n              </div>\n              <div style={{ fontSize: \"14px\" }}>\n                {object.DTPTIME.toString().trim()}\n              </div>\n              <div style={{ fontSize: \"14px\" }}>\n                {object.DTPDEPT.toString().trim()}\n              </div>\n              {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n            </div>\n          );\n        });\n        return (\n          // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n          <div>{cellRander}</div>\n        );\n      }\n    }\n    if (select === 3) {\n      const data = this.state.PCASELIST;\n      if (data.length === 0) {\n        return null;\n      } else {\n        const cellRander = data.map((object, index, arr) => {\n          // const HID = object.ADISTNO.toString().trim()\n          const CID = object.PCASENO.toString().trim();\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                textAlign: \"center\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectERDISP(CID)}\n            >\n              <div style={{ fontSize: \"14px\" }}>\n                {moment(object.PDISDT.toString().trim(), \"YYYYMMDD\").format(\n                  \"YYYY/MM/DD\"\n                )}\n              </div>\n              {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n            </div>\n          );\n        });\n        return (\n          // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n          <div>{cellRander}</div>\n        );\n      }\n    }\n    if (select === 4) {\n      const data = groupfirstarray(this.state.PRGTXQRY);\n      console.log(data);\n      // const data = groupfirstarray(PR.data)\n      if (data.length === 0) {\n        return null;\n      } else {\n        const List = data.map(function (info, index, arr) {\n          const mapList = info.map(function (v, i, a) {\n            return {\n              PRGTX: v.PRGTX,\n              PRGTYPE: v.PRGTYPE\n            };\n          });\n          return {\n            List: mapList,\n            DT: info[0].PRGDT,\n            TN: info[0].PRGTM\n          };\n        });\n        const cellRander = List.map((object, index, arr) => {\n          // const HID = object.ADISTNO.toString().trim()\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                textAlign: \"center\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectPRGTXQRYDIS(object.List)}\n            >\n              <div style={{ fontSize: \"14px\" }}>\n                {moment(\n                  object.DT.toString() + object.TN.toString(),\n                  \"YYYY-MM-DD HH:mm:ss\"\n                ).format(\"MM/DD HH:mm\")}\n              </div>\n              {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n            </div>\n          );\n        });\n        return (\n          // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n          <div>{cellRander}</div>\n        );\n      }\n    }\n    if (select === 5) {\n      const data = this.state.CPSLIST;\n      if (data.length === 0) {\n        return null;\n      } else {\n        const cellRander = data.map((object, index, arr) => {\n          // const HID = object.ADISTNO.toString().trim()\n          const CID = object.CPSCASE.toString().trim();\n          const SEQ = object.CPSOSEQ.toString().trim();\n          const HID = object.CPSHIST.toString().trim();\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                textAlign: \"center\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectCPSDISP(HID, CID, SEQ)}\n            >\n              <div style={{ fontSize: \"14px\" }}>\n                {moment(object.CPSENTDT.toString().trim(), \"YYYYMMDD\").format(\n                  \"YYYY/MM/DD\"\n                )}\n              </div>\n              <div style={{ fontSize: \"14px\" }}>\n                {moment(object.CPSENTTM.toString().trim(), \"HHmm\").format(\n                  \"HH:mm\"\n                )}\n              </div>\n              {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n            </div>\n          );\n        });\n        return (\n          // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n          <div>{cellRander}</div>\n        );\n      }\n    }\n    if (select === 6) {\n      const data = this.state.QPNOT\n      if (data === undefined) {\n        return null\n      }\n      if (data.length === 0) {\n        return null;\n      } else {\n        const List = grouparray(data);\n        const mapList = List.map(function (info, index, arr) {\n          console.log(info);\n          const mapList = info.map(function (v, i, a) {\n            return {\n              Time: moment(\n                v.rec_dat.toString() + v.rec_tim.toString(),\n                \"YYYYMMDDHHmm\"\n              ).format(\"MM/DD HH:mm\"),\n              cre_nam: v.cre_nam,\n              pro_not: v.pro_not\n            };\n          });\n          return {\n            List: mapList,\n            DT: info[0].rec_dat.toString().trim()\n          };\n        });\n        const cellRander = mapList.map((object, index, arr) => {\n          console.log(object);\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                textAlign: \"center\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectQPNOTDIS(object.List)}\n            >\n              <div style={{ fontSize: \"14px\" }}>\n                {moment(object.DT, \"YYYYMMDD\").format(\"YYYY/MM/DD\")}\n              </div>\n              {/* 檢查 */}\n              {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n            </div>\n          );\n        });\n        return (\n          // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n          <div>{cellRander}</div>\n        );\n      }\n    }\n    if (select === 7) {\n      // const data = this.state.OPSORAQ1;\n      const data = []\n      if (data.length === 0) {\n        return null;\n      } else {\n        const cellRander = data.map((object, index, arr) => {\n          // const HID = object.ADISTNO.toString().trim()\n          // const DIS1 = object\n          console.log(object)\n          const OPABGNDT = object.OPABGNDT.toString().trim();\n          const OPACOD1 = object.OPACOD1.toString().trim();\n          const OPAMANNM = object.OPAMANNM.toString().trim();\n          const OPATIMES = object.OPATIMES.toString().trim();\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                textAlign: \"center\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectOPSORAQ1(OPABGNDT, OPATIMES)}\n            >\n              <div style={{ fontSize: \"14px\" }}>{OPABGNDT}</div>\n              <div style={{ fontSize: \"14px\" }}>{OPACOD1}</div>\n              <div style={{ fontSize: \"14px\" }}>{OPAMANNM}</div>\n              {/* 檢查 */}\n              {/* <div style={{ fontSize: \"16px\" }}>{object.ADICASE}</div> */}\n            </div>\n          );\n        });\n        return (\n          // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n          <div>{cellRander}</div>\n        );\n      }\n    }\n  }\n  render() {\n    const control = this.NotecontrolBar();\n    const renderContentArray = this.renderContentArray();\n    const listRender = this.switchListRender();\n    return (\n      <div className=\"Notelayout\">\n        {control}\n        <div>\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"240px 1fr\",\n              gridGap: \"10px\"\n            }}\n          >\n            <div>\n              <div\n                style={{\n                  backgroundColor: \"#71b0e46e\",\n                  height: \"36px\",\n                  paddingLeft: \"4px\",\n                  borderTopRightRadius: \"4px\",\n                  borderTopLeftRadius: \"4px\",\n                  color: \"rgba(0,0,0,0.7)\",\n                  alignItems: \"center\",\n                  width: \"240px\"\n                }}\n              >\n                <div style={{\n                  fontSize: \"16px\",\n                  color: \"rgba(0,0,0,.7)\",\n                  lineHeight: \"36px\"\n                }}>\n                  資料清單\n                </div>\n              </div>\n              <div\n                style={{\n                  padding: \"10px\",\n                  maxHeight: \"700px\",\n                  overflow: \"auto\"\n                }}\n              >\n                {listRender}\n              </div>\n            </div>\n            <div style={{ overflow: \"auto\" }}>\n              <div\n                style={{\n                  backgroundColor: \"#71b0e46e\",\n                  height: \"36px\",\n                  paddingLeft: \"4px\",\n                  borderTopRightRadius: \"4px\",\n                  borderTopLeftRadius: \"4px\",\n                  color: \"rgba(0,0,0,0.7)\"\n                }}\n              >\n                <div\n                  style={{\n                    fontSize: \"16px\",\n                    color: \"rgba(0,0,0,0.8)\",\n                    lineHeight: \"36px\"\n                  }}\n                >\n                  文件內容\n                </div>\n              </div>\n              <div style={{ maxHeight: \"700px\", overflow: \"auto\" }}>\n                {renderContentArray}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Noteview;\n","import React, { Component } from 'react';\nimport { DatePicker, Button } from 'antd';\nimport GAS from '../CrossSectionView/GAS'\nimport RTbreathe from '../CrossSectionView/RTbreathe'\nimport './RTview.scss'\n// import X2JS from 'x2js';\n// import * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass RTview extends Component {\n    state = {\n        QSPE: [],\n        PickerDateRange: [moment(moment().subtract(6, 'days').format('YYYYMMDD')),\n        moment(moment().format('YYYYMMDD'))],\n    }\n    // componentDidMount() {\n    //     this.API_DATA(this.state.PickerDate)\n    // }\n    // API_DATA(Datetime) {\n    //     const xm2 = new X2JS()\n    //     const { caseinfo } = this.props\n    //     const st = moment(Datetime + (7 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n    //     const et = moment(Datetime + (31 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n    //     ApiProvider.getQSPE(caseinfo.CASEID, st, et)\n    //         .then(data => {\n    //             console.log(xm2.xml2js(data.data).outmsg.resconts.rescont)\n    //             const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n    //             console.log(parsedata)\n    //             if (Array.isArray(parsedata)) {\n    //                 this.setState({\n    //                     QSPE: parsedata\n    //                 })\n    //             }\n    //             else {\n    //                 const arr = []\n    //                 arr.push(parsedata)\n    //                 this.setState({\n    //                     QSPE: arr\n    //                 })\n    //             }\n    //         })\n    //         .catch(err => {\n    //             console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n    //         });\n    // }\n\n    PickerDateRangeChange = (date, dateString) => {\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDateRange } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n        console.log(bronDate)\n        const st = PickerDateRange[0].valueOf()\n        const et = PickerDateRange[1].valueOf()\n        console.log(bronDate,st)\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                if (bronDate <= (st - day)) {\n                    const bTime = [moment(moment(st - day)), moment(moment(et - day))]\n                    this.PickerDateRangeChange(bTime)\n                }\n                break;\n            case 'N':\n                const nTime = [moment(moment().subtract(6, 'days').format('YYYYMMDD')), moment()]\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTemp = moment(moment()).valueOf()\n                if (aTemp >= (et + day)) {\n                    const aTime = [moment(moment(st + day)), moment(moment(et + day))]\n                    this.PickerDateRangeChange(aTime)\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const { RangePicker } = DatePicker\n        const momentDate = this.state.PickerDateRange\n\n        const PickerDateRange = [momentDate[0].valueOf(), momentDate[1].valueOf()]\n\n        return (\n            <div className='rtviewlayout'>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"250px 120px\", gridColumnGap: \"5px\", marginBottom: \"5px\" }}>\n                    <RangePicker\n                        value={this.state.PickerDateRange}\n                        format={\"YYYY/MM/DD\"}\n                        allowClear={false}\n                        locale={\"zh_TW\"}\n                        onChange={this.PickerDateRangeChange}\n                        disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                    />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: '1fr 1fr', gridColumnGap: \"5px\" }}>\n                    <GAS PickerDateRange={PickerDateRange} caseinfo={caseinfo} searchbar={true} ></GAS>\n                    <RTbreathe PickerDateRange={PickerDateRange} caseinfo={caseinfo} searchbar={true} ></RTbreathe>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTview\n","import React, { Component } from 'react'\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Nurtionfeedingcell.scss'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Nurtionfeedingcell extends Component {\n    state = {\n        EditMode: false,\n        onEdit: false,\n        powerLogin: 0,\n        remark: '',\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { caseinfo, data } = this.props\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, data.ORDSEQNO, \"nurtionfeeding\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    onMouseEnter() {\n        this.setState(\n            {\n                EditMode: true\n            }\n        )\n    }\n    onMouseLeave() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    showModal = () => {\n        this.setState({\n            onEdit: true,\n        });\n    };\n\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    Moduledisplay(PName, ST) {\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": PName,\n            \"remarkId\": this.props.data.ORDSEQNO,\n            \"remark\": this.state.remark,\n            \"transinId\": this.props.caseinfo.TRANSINID,\n            \"type\": \"nurtionfeeding\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n        );\n    }\n\n    render() {\n        const { data } = this.props\n        console.log(data)\n        const startTime = moment(data.ORBGNDT.toString().trim(), \"YYYY-MM-DD\").format(\"MM/DD\")\n        const endTime = moment(data.ORENDDT.toString().trim(), \"YYYY-MM-DD\").format(\"MM/DD\")\n        const name = data.ORPROCED.toString().trim()\n\n        console.log(this.state.remark)\n\n        return (\n            <div onMouseEnter={() => this.onMouseEnter()} onMouseLeave={() => this.onMouseLeave()} className=\"remark\">\n                <div className='nurtionfeedingcell' style={{ gridTemplateRows: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"1fr\" : \"1fr 1fr\"] }}>\n                    <div className='cellforstate'>\n                        <div className='celllayout'>\n                            <t3>{startTime}</t3>\n                        </div>\n                        <div className='celllayout'>\n                            <t3>{endTime}</t3>\n                        </div>\n                        <div className='celllayout'>\n                            <t3>{name}</t3>\n                        </div>\n                    </div>\n                    <div className='cellforremark' style={{ display: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"none\" : \"flex\"] }}>\n                        <t3>{this.state.remark}</t3>\n                    </div>\n                </div>\n                <div style={this.state.EditMode ? {\n                    display: this.state.powerLogin == 1 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", top: 0, right: 0, height: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"50px\" : \"100px\"], background: \"white\", width: \"77px\", border: \"rgba(232, 232, 232, 1) 1px solid\"\n                } : { display: \"none\" }}>\n                    < div onClick={() => this.showModal()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }} >\n                        <img src={chooseedit} alt='chooseedit'></img>\n                    </div>\n                </div>\n                {this.Moduledisplay(name, startTime)}\n            </div >\n        );\n    }\n}\n\nexport default Nurtionfeedingcell\n","import React, { Component } from 'react'\nimport * as ApiProvider from '../../API/ApiProvider'\n// import { DatePicker, Input } from 'antd';\n// import searchlogo from '../../Image/svg/Search.svg'\nimport Nurtionfeedingcell from './Nurtionfeedingcell'\nimport moment from 'moment';\nimport * as ApiGithub from '../../API/ApiGithub'\n\n\nclass Nurtionfeedingorder extends Component {\n    state = {\n        TRTMNTQ1: [],\n        parser: { \"mappings\": [] },\n        class: \"飲食類別\"\n    }\n    componentDidMount() {\n        this.getAPIFeedingData()\n        this.getTreatmentOrderFilter()\n    }\n    getAPIFeedingData() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID.toString().trim()\n        const CID = caseinfo.CASEID.toString().trim()\n        ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => {\n                console.log(\"getAPIFeedingData OK \" + JSON.stringify(data.data))\n                this.setState({\n                    TRTMNTQ1: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n    }\n    getTreatmentOrderFilter() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Treatment\");\n                parser.mappings = [{ \"key\": \"全部\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson Treatment OK \" + JSON.stringify(parser))\n                this.setState({\n                    parser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部\"] = []\n\n        inputs.forEach(input => {\n            let content = input.ORPROCED;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部\"].push(input)\n        });\n        return allResult;\n    }\n\n    render() {\n        const { caseinfo, PickerDateRange } = this.props\n        const title = [\"開始時間\", \"結束時間\", \"處置名稱\"]\n        const titleCellRender = title.map(function (element, index, arr) {\n            return (\n                <div key={index} style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", borderCollapse: \"collapse\" }}>\n                    <div style={{ fontSize: \"14px\" }}>{element}</div>\n                </div>\n            );\n        })\n\n        const parse = this.parse;\n        let clusteredData = {}\n        if (this.state.parser !== undefined) {\n            clusteredData = parse(this.state.TRTMNTQ1, this.state.parser)\n        }\n        //filter data by selected class\n        let filteredData = clusteredData[this.state.class];\n        // console.log(`filteredData : ${JSON.stringify(filteredData)} , filteredData type : ${typeof (filteredData)}`)\n        let filterData = []\n        if (filteredData !== undefined) {\n            let ListCellData = filteredData\n            filterData = ListCellData.filter((element, index, arr) => {\n                const time = moment(element.ORBGNDT, 'YYYY-MM-DD').valueOf()\n                return PickerDateRange[0] <= time && time <= PickerDateRange[1]\n            })\n\n            filterData = filterData.sort((a, b) => {\n                let tempTimeA = moment(a.ORBGNDT, 'YYYY-MM-DD').valueOf()\n                let tempTimeB = moment(b.ORBGNDT, 'YYYY-MM-DD').valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n        }\n\n        const DataCellRender = filterData.map(function (element, index, arr) {\n            return (\n                <Nurtionfeedingcell key={index} data={element} caseinfo={caseinfo} ></Nurtionfeedingcell>\n            );\n        })\n\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>Feeding Order</t2>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \" 1fr 1fr 2fr \", height: \"30px\", border: \"rgba(238,238,238,1) 1px solid\", backgroundColor: \"rgba(226, 237, 243,.5)\", justifyItems: \"center\" }}>\n                    {titleCellRender}\n                </div>\n                {filterData.length !== 0 &&\n                    <div style={{ minHeight: \"120px\", maxHeight: \"400px\", overflowY: \"auto\" }}>\n                        {DataCellRender}\n                    </div>}\n                {filterData.length === 0 &&\n                    <div style={{ height: \"50px\", paddingLeft: \"7.5%\", display: \"flex\", alignItems: \"center\" }}>\n                        今日無資料\n                    </div>}\n            </div>\n        );\n    }\n}\n\nexport default Nurtionfeedingorder\n","import React, { Component } from 'react'\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Nurtion_TPN_cell.scss'\nimport moment from 'moment'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Nurtiontpncell extends Component {\n    state = {\n        EditMode: false,\n        onEdit: false,\n        remark: null,\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { caseinfo, data } = this.props\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, data.UDORDSEQ, \"nurtiontpn\").then(result => {\n            // console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    onMouseEnter() { this.setState({ EditMode: true }) }\n\n    onMouseLeave() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    showModal = () => {\n        this.setState({\n            onEdit: true,\n        });\n    };\n\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue);\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    Moduledisplay(PName, ST) {\n\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": PName,\n            \"remarkId\": this.props.data.UDORDSEQ,\n            \"remark\": this.state.remark,\n            \"transinId\": this.props.caseinfo.TRANSINID,\n            \"type\": \"nurtiontpn\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            // <RemarkModal caseinfo={caseinfo} type=\"nurtiontpn\" name={title} visible={this.state.onEdit} remark={this.state.remark} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n        );\n    }\n    render() {\n        const { data } = this.props\n        const TPNList = [\"VOL.\", \"AA\", \"Glu\", \"Na\", \"K\", \"Ca\", \"P\", \"Mg\"]\n        const TPNListcellRender = TPNList.map(function (info, index) {\n            return (\n                <centerstyle key={index} style={{ border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                    <t2>{info}</t2>\n                </centerstyle>\n            );\n        })\n        function TPNSubDataMap(data, TPNDATA) {\n            if (TPNDATA === undefined || TPNDATA === null) {\n                return []\n            }\n            const TPNSubData = [data.UDDOSAGE, data.TPNDATA.AA, data.TPNDATA.Glu, data.TPNDATA.Na, data.TPNDATA.K, data.TPNDATA.Ca, data.TPNDATA.P, data.TPNDATA.Mg]\n            const TPNSubDatacellRender = TPNSubData.map(function (info, index) {\n                return (\n                    <centerstyle key={index} style={{ border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                        <t2>{info}</t2>\n                    </centerstyle>\n                );\n            })\n            return TPNSubDatacellRender\n\n        }\n        const TPNSubDatacellRender = TPNSubDataMap(data, data.TPNDATA)\n        const RemarkData = this.state.remark\n        // function RemarkNull(value) {\n        //     // console.log(value)\n        //     if (value === null || value === undefined || value === \"\") {\n        //         return \"none\"\n        //     }\n        //     return \"flex\"\n        // }\n        // function RemarkNullheight(value) {\n        //     // console.log(value)\n        //     if (value === null || value === undefined || value === \"\") {\n        //         return \"90px\"\n        //     }\n        //     return \"120px\"\n        // }\n        // function statusstate(st, et, pt) {\n\n        // }\n        const startTime = moment(data.UDBGNDT.toString().trim(), \"YYYY-MM-DD-HH.mm.ss.00.000000\").format(\"MM/DD HH:mm:ss\")\n        const endTime = moment(data.UDENDDT.toString().trim(), \"YYYY-MM-DD-HH.mm.ss.00.000000\").format(\"MM/DD HH:mm:ss\")\n        const name = data.UDGNAME.toString().trim()\n        const status = \"生效中\"\n        return (\n            <div onMouseEnter={() => this.onMouseEnter()} onMouseLeave={() => this.onMouseLeave()} className='nurtiontpntablelayout'>\n                <div style={{ height: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"100px\" : \"130px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \" 1fr 1fr 60px 450px\", height: \"100px\" }} >\n                        <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                            <t3>{startTime}</t3>\n                        </div>\n                        <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                            <t3>{endTime}</t3>\n                        </div>\n                        <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                            <t3>{status}</t3>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"30px 70px\" }}>\n                            <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                                <t3>{name}</t3>\n                            </div>\n                            <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(8,1fr)\" }}>\n                                    {TPNListcellRender}\n                                </div>\n                                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(8,1fr)\" }}>\n                                    {TPNSubDatacellRender}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ fontWeight: \"600\", color: \"rgb(0,120,0)\", display: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"none\" : \"flex\"], border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\", padding: \"0px 5px\", alignItems: \"center\", height: \"30px\", width: \"100%\" }}>\n                        <t3>{RemarkData}</t3>\n                    </div>\n                </div>\n                <div style={this.state.EditMode ? {\n                    display: this.state.powerLogin == 1 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", top: 0, right: 0, height: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"100px\" : \"130px\"], background: \"white\", width: \"77px\", border: \"rgba(232, 232, 232, 1) 1px solid\"\n                } : { display: \"none\" }}>\n                    < div onClick={() => this.showModal()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }} >\n                        <img src={chooseedit} alt='chooseedit'></img>\n                    </div>\n                </div>\n                {this.Moduledisplay(name, startTime)}\n            </div >\n        );\n    }\n}\n\nexport default Nurtiontpncell\n","import React, { Component } from 'react'\nimport Nurtiontpncell from './Nurtion_TPN_cell'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as ApiGithub from '../../API/ApiGithub'\n\nclass Nurtiontpnorder extends Component {\n    state = {\n        onEdit: false,\n        tpndata: [],\n        UDORDER0: [],\n        tpnParsers: []\n    }\n    componentDidMount() {\n        const getAPITPNData = this.getAPITPNData.bind(this)\n        ApiGithub.getGitHubJson(\"TpnOrder.json\")\n            .then(data => {\n                let parser = data.data\n                console.log(\"getGitHubJson TPN Order OK \" + JSON.stringify(parser))\n                this.setState({\n                    tpnParsers: parser\n                }, () => {\n                    getAPITPNData()\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n    }\n    getAPITPNData() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID.toString().trim()\n        const CID = caseinfo.CASEID.toString().trim()\n        const { tpnParsers } = this.state\n        // console.log(HID, CID)\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                //const fakeData = [{\"UDDCPRSN\":\"DOC3941E\",\"UDDURAT\":\"007\",\"UDSUMQTY\":\"55\",\"UDDRGNAM\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDGNAME\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-14-09.17.00.000000\",\"UDDCPNAM\":\"何正尹　　\",\"UDDOSAGE\":\"55      \",\"UDORDSEQ\":\"0043\",\"UDBGNDT\":\"2019-08-13-08.50.00.000000\",\"UDDRGNO\":\"02145\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\"                                                                                                    \",\"UDDUNIT\":\"CC    \",\"UDROUTE\":\"IVD\",\"UDRPNAME\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDFREQN\":\"QD-TPN  \"},{\"UDDCPRSN\":\"DOC3964C\",\"UDDURAT\":\"014\",\"UDSUMQTY\":\"7\",\"UDDRGNAM\":\"Peditrace \\\"TPN\\\" sol for inj 10ml\",\"UDGNAME\":\"Peditrace \\\"TPN\\\" sol for inj 10ml\",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-20-10.22.00.000000\",\"UDDCPNAM\":\"李成彧　　\",\"UDDOSAGE\":\"1       \",\"UDORDSEQ\":\"0044\",\"UDBGNDT\":\"2019-08-13-08.50.00.000000\",\"UDDRGNO\":\"05208\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\"                                                                                                    \",\"UDDUNIT\":\"AMP   \",\"UDROUTE\":\"MSC\",\"UDRPNAME\":\"Peditrace \\\"TPN\\\" sol for inj 10ml\",\"UDFREQN\":\"QD-TPN  \"},{\"UDDCPRSN\":\"        \",\"UDDURAT\":\"001\",\"UDSUMQTY\":\"1\",\"UDDRGNAM\":\"Immunoglobulin *inj 60mg/ml 50ml\",\"UDGNAME\":\"Immunoglobulin *inj 60mg/ml 50ml\",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"Y\",\"UDSTATUS\":\"60\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-14-15.00.00.000000\",\"UDDCPNAM\":\"　　　　　\",\"UDDOSAGE\":\"1       \",\"UDORDSEQ\":\"0045\",\"UDBGNDT\":\"2019-08-13-15.17.00.000000\",\"UDDRGNO\":\"03852\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\" \",\"UDDUNIT\":\"BOT   \",\"UDROUTE\":\"IVA\",\"UDRPNAME\":\"HM.imm.globulin *inj60mg/ml 50ml\",\"UDFREQN\":\"ST      \"},{\"UDDCPRSN\":\"DOC3941E\",\"UDDURAT\":\"007\",\"UDSUMQTY\":\"110\",\"UDDRGNAM\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDGNAME\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDORSIGN\":\"DOC3941E\",\"UDSELF\":\"N\",\"UDSTATUS\":\"80\",\"UDPERNAM\":\"何正尹　　\",\"UDENDDT\":\"2019-08-16-10.44.00.000000\",\"UDDCPNAM\":\"何正尹　　\",\"UDDOSAGE\":\"55      \",\"UDORDSEQ\":\"0055\",\"UDBGNDT\":\"2019-08-14-09.17.00.000000\",\"UDDRGNO\":\"02145\",\"UDCOMMET\":\"Y\",\"UDVALUE\":\"                                                                                                    \",\"UDDUNIT\":\"CC    \",\"UDROUTE\":\"IVD\",\"UDRPNAME\":\"TPN P-1 # 1 ml VGH,(100 ml/bot) \",\"UDFREQN\":\"QD-TPN  \"}]\n\n                //create list need to do search\n                let tpnList = [] // All TPN data\n                let selected_parser = undefined\n                //fakeData.forEach(item => {\n                data.data.forEach(item => {\n                    //get parser\n                    selected_parser = this.select_parser(item, tpnParsers)\n                    if (selected_parser !== undefined) {\n                        const found = item.UDDRGNAM.match(RegExp(selected_parser.apply_condition.name, selected_parser.apply_condition.name_regex_flags))\n                        if (found !== null && found !== \"\") tpnList.push(item)\n                    }\n                });\n\n                console.log(\"tpnList\" + JSON.stringify(tpnList))\n                if (selected_parser !== undefined) {\n                    //parser 7 value from each TPN document （AA, Glu, Na, K, Ca, P, Mg）\n                    tpnList.forEach((item, index) => {\n                        ApiProvider.getStoredProcedureUDTEXTQ1(CID, item.UDORDSEQ)\n                            .then(data => {\n                                console.log(\"getStoredProcedureUDTEXTQ1 OK \" + JSON.stringify(data.data))\n\n                                //parse every line\n                                const result = this.parse(data.data, selected_parser)\n                                item.TPNDATA = result;\n                                //console.log(\"parse result: \" + JSON.stringify(item))\n                                tpnList.splice(index, 1, item)\n                                this.setState({\n                                    tpndata: tpnList\n                                })\n                            })\n                            .catch(err => {\n                                console.log(\"getStoredProcedureUDTEXTQ1 NG \" + err)\n                            });\n                    });\n                }\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureUDORDER0 NG \" + err)\n            });\n    }\n    select_parser = (input, parsers) => {\n        const inputBeginTime = moment(input.UDBGNDT, \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n        const inputEndTime = moment(input.UDENDDT, \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n        return parsers.find(x =>\n            input.UDDRGNAM.match(x.apply_condition.name)\n            && (!x.apply_condition.start_time || inputBeginTime >= x.apply_condition.start_time)\n            && (!x.apply_condition.end_time || inputEndTime < x.apply_condition.end_time)\n        )\n    }\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = \"\"\n        });\n\n        inputs.forEach(input => {\n            let content = input.UDWORD;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key] = match[mapping.position]\n                }\n            });\n        });\n        return allResult;\n    }\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    render() {\n        const { caseinfo, PickerDateRange } = this.props\n        const title = [\"開始時間\", \"結束時間\", \"狀態\", \"處置名稱\"]\n        const titilecell = title.map(function (info, index) {\n            return (\n                <div key={index} style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", borderCollapse: \"collapse\" }}>\n                    <div style={{ fontSize: \"14px\" }}>{info}</div>\n                </div>\n            );\n        })\n        const ListCellData = this.state.tpndata\n        let filterData = ListCellData.filter((element, index, arr) => {\n            const time = moment(moment(element.UDBGNDT, 'YYYY-MM-DD-HH.mm.ss.000000').format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n            return PickerDateRange[0] <= time && time <= PickerDateRange[1]\n        })\n\n        filterData = filterData.sort((a, b) => {\n            let tempTimeA = moment(moment(a.UDBGNDT, 'YYYY-MM-DD-HH.mm.ss.000000').format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n            let tempTimeB = moment(moment(b.UDBGNDT, 'YYYY-MM-DD-HH.mm.ss.000000').format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n            return tempTimeA < tempTimeB ? 1 : -1\n        })\n\n        const DataCellRender = filterData.map(function (element, index, arr) {\n            return (\n                <Nurtiontpncell key={index} data={element} caseinfo={caseinfo} ></Nurtiontpncell>\n            );\n        })\n\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>TPN order</t2>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \" 1fr 1fr 60px 450px\", height: \"30px\", border: \"rgba(238,238,238,1) 1px solid\", backgroundColor: \"rgba(226, 237, 243,.5)\", justifyItems: \"center\" }}>\n                    {titilecell}\n                </div>\n                {filterData.length !== 0 && <div style={{ minHeight: \"120px\", maxHeight: \"400px\", overflowY: \"auto\" }}>\n                    {DataCellRender}\n                </div>}\n                {filterData.length === 0 &&\n                    <div style={{ height: \"50px\", paddingLeft: \"1.5%\", display: \"flex\", alignItems: \"center\" }}>\n                        今日無資料\n                    </div>}\n            </div>\n        );\n    }\n}\n\nexport default Nurtiontpnorder\n","import React, { Component } from 'react'\nimport * as d3 from \"d3\";\nimport './Watervaluechart.scss'\nimport { Modal } from 'antd'\n// import { getRandomfornumber } from '../../Function/Wardstate'\nimport moment from 'moment';\n\nclass Watervaluechart extends Component {\n    state = {\n        visible: false,\n        select: null,\n        rowdata: null\n    };\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: true,\n            select: null,\n            rowdata: null\n        });\n    };\n    componentDidUpdate() {\n        const { svg_key } = this.props\n        d3.select(\"#\" + svg_key).remove()\n        this.drawChart()\n\n    }\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentWillUnmount() {\n    }\n\n    cal_svg_hight() {\n        const { axisTop, axisBot } = this.props\n        if (axisTop) {\n            if (axisBot) {\n                return 160\n            }\n            else {\n                return 130\n            }\n        }\n        else {\n            if (axisBot) {\n                return 130\n            }\n            else {\n                return 90\n            }\n        }\n    }\n\n    cal_svg_transform() {\n        const { axisTop, axisBot } = this.props\n        console.log(axisTop)\n        if (axisTop) {\n            if (axisBot) {\n                return 70\n            }\n            else {\n                return 50\n            }\n        }\n        else {\n            if (axisBot) {\n                return 5\n            }\n            else {\n                return 5\n            }\n        }\n    }\n\n    drawChart() {\n        function formatShiftDays(startTime, endTime) {\n            const shiftDays = parseInt((endTime - startTime) / (24 * 60 * 60 * 1000))\n            return shiftDays\n        }\n        const { svg_key, id_key, startTime, watervalueData } = this.props\n        const width = (window.screen.availWidth - 50) / 2 - 50, height = 400\n        const max = 500, min = 0\n        const shiftDays = formatShiftDays(moment(startTime, \"YYYYMMDD\").valueOf(), moment().valueOf())\n\n        if (watervalueData.length === 0) {\n            return null\n        }\n        const rectwidth = (width / shiftDays) - 2\n        var x = d3.scaleLinear()\n            .domain([0, watervalueData.length])\n            .range([0, width]);\n\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([min, max])\n            .range([height, 0])\n\n\n\n        var yAxis = d3.axisLeft(y)\n            .ticks(11)\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(10);\n\n        var xAxisBottom = d3.axisBottom(x)\n            .ticks(watervalueData.length)\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(height + 10)\n            .tickFormat(function (d) {\n                if (d % 10 === 0) {\n                    if (d > 0) {\n                        return 'D' + d\n                    }\n                    return null\n                }\n                else return null;\n            });\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_key)\n            .attr(\"viewBox\", [0, 0, width + 80, height + 50])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 30 + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n        svg.append(\"g\")\n            .call(xAxisBottom)\n            .attr(\"class\", \"axis\");\n\n\n        for (let index = 0; index < 11; index++) {\n            //上下虛線\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(index * 50))\n                .attr('x2', width)\n                .attr('y2', y(index * 50))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n        }\n\n        for (let index = 0; index < watervalueData.length; index++) {\n            //上下虛線\n            if (index % 10 === 0 && index > 0) {\n                svg.append('line')\n                    .attr('x1', x(0.5 + index))\n                    .attr('y1', y(min))\n                    .attr('x2', x(0.5 + index))\n                    .attr('y2', y(max))\n                    .style('stroke', 'rgba(187, 187, 187, 1)')\n                    .style('stroke-width', 1)\n                    .style('stroke-dasharray', 5.5);\n            }\n        }\n\n\n\n\n        // function rowdatageneral(number) {\n        //     const rowdata = {\n        //         'IV': {\n        //             \"max\": getRandomfornumber(number),\n        //             \"min\": 0\n        //         },\n        //         'feeding': {\n        //             \"max\": getRandomfornumber(number),\n        //             \"min\": 0\n        //         },\n        //         'Other': {\n        //             \"max\": getRandomfornumber(number),\n        //             \"min\": 0\n        //         }\n        //     }\n        //     return rowdata\n        // }\n        const select = this.state.select\n        if (select === null || select === undefined || select === \"\") {\n            d3.selectAll(\"rect#A123\").remove()\n        }\n        for (let index = 0; index < watervalueData.length; index++) {\n            const rowdata = watervalueData[index]\n            var svgrect = svg.append('g').on('click', () => {\n                if (rowdata === null) {\n\n                }\n                else {\n                    this.setState({\n                        visible: true,\n                        select: index,\n                        rowdata: rowdata\n                    });\n\n                }\n            })\n            console.log(select)\n            if (index === select) {\n                svgrect.append('rect')\n                    .attr('id', 'A123')\n                    .attr('width', rectwidth + 2)\n                    .attr('height', y(0) - y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .attr('x', x(index) - (rectwidth / 2) - 1)\n                    .attr('y', y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .style('fill', 'rgba(0,0,0,0)')\n                    .style('stroke', '#F5A623')\n                    .style('stroke-width', 2)\n                    .style('cursor', 'pointer');\n            }\n            else {\n                svgrect.append('rect')\n                    .attr('id', 'A123')\n                    .attr('width', rectwidth + 2)\n                    .attr('height', y(0) - y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .attr('x', x(index) - (rectwidth / 2) - 1)\n                    .attr('y', y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .style('fill', 'rgba(0,0,0,0)')\n                    .style('stroke', 'rgba(0,0,0,0)')\n                    .style('stroke-width', 2)\n                    .style('cursor', 'pointer')\n                    .style('opacity', 1);\n            }\n            svgrect.append('line')\n                .attr('x1', x(index))\n                .attr('y1', y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                .attr('x2', x(index))\n                .attr('y2', y(rowdata.IV + rowdata.Other))\n                .style('stroke', '#2E64A4')\n                .style('stroke-width', rectwidth)\n\n            svgrect.append('line')\n                .attr('x1', x(index))\n                .attr('y1', y(rowdata.IV + rowdata.Other))\n                .attr('x2', x(index))\n                .attr('y2', y(rowdata.Other))\n                .style('stroke', '#C3EFFF')\n                .style('stroke-width', rectwidth)\n\n\n            svgrect.append('line')\n                .attr('x1', x(index))\n                .attr('y1', y(rowdata.Other))\n                .attr('x2', x(index))\n                .attr('y2', y(0))\n                .style('stroke', '#3B97E1')\n                // .style('stroke', 'red')\n                .style('stroke-width', rectwidth)\n        }\n    }\n\n    ModalRender() {\n        function nulldata(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return 0\n            }\n            return value\n        }\n        const data = this.state.rowdata\n        if (data === null || data === undefined) {\n            return null\n        }\n        // function sumRowdata(data) {\n        //     if (data === null || data === undefined) {\n        //         return 0\n        //     }\n        //     return data * 0.8\n        // }\n        const select = this.state.select\n        const waterdata = this.props.watervalueData\n        const car = waterdata[select].Caloriessum\n        return (\n            <Modal\n                title=\"Basic Modal\"\n                visible={this.state.visible}\n                onOk={this.handleOk}\n                onCancel={this.handleCancel}\n                footer={null}\n            >\n                <div>IV:{nulldata(data.IV)}</div>\n                <div>Feeding:{nulldata(data.Feeding)}</div>\n                <div>Other:{nulldata(data.Other)}</div>\n                <div>總熱量:{car}kcal</div>\n            </Modal>\n        );\n    }\n    render() {\n        const { id_key } = this.props\n        const model = this.ModalRender()\n        return (\n            <div id={id_key}>\n                {model}\n            </div>\n        );\n    }\n}\n\nexport default Watervaluechart","import React, { Component } from 'react'\nimport Nurtionfeedingorder from './Nurtionfeeding'\nimport { Select, Button, DatePicker, Modal } from 'antd';\nimport WardlifeChart from '../../Wardview/Wardlifechart'\nimport Wardmonthafter from '../../Wardview/Wardmonthafter'\nimport Nurtiontpnorder from './Nurtion_TPN'\nimport Watervaluechart from './Watervaluechart'\nimport { gender } from '../../Function/Wardbedfunction'\nimport X2JS from 'x2js';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\nimport * as FiliterReg from '../../Function/FiliterReg'\nimport './Nurtion.scss'\n\nclass Nurtionview extends Component {\n    state = {\n        visible: false,\n        test_items_interval: 1,\n        UDORDER0: [],\n        QDC: [],\n        QTWER: [],\n        PickerDateRange: moment(moment().format('YYYYMMDD'))\n    }\n    componentDidMount() {\n        this.API_DATA()\n    }\n    API_DATA() {\n        const { caseinfo } = this.props\n        const xm2 = new X2JS()\n        const st = moment(caseinfo.TRANSINDT.toString(), 'YYYYMMDD').format('YYYYMMDDHHmm')\n        const et = moment().format(\"YYYYMMDDHHmm\")\n        // ApiProvider.getQDC(caseinfo.CASEID, st, et)\n        ApiProvider.getQDC(caseinfo.CASEID, st, et)\n            .then(data => {\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                console.log(parsedata)\n                this.setState({\n                    QDC: parsedata\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureUDORDER0(caseinfo.HISID, caseinfo.CASEID, \"123\")\n            .then(data => {\n                this.setState({\n                    UDORDER0: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n    }\n    switch_monthy() {\n        const { caseinfo } = this.props\n        console.log(caseinfo)\n        const grewinfo = {\n            \"WEEK_BORN\": Number(caseinfo.WEEK_BORN),\n            \"DAY_BORN\": Number(caseinfo.DAY_BORN),\n            \"BIRTHDAY\": caseinfo.PBASINGNINFO.PBIRTHDT\n        }\n        const WeightList = caseinfo.WEIGHT\n        const sex = gender(caseinfo.PBASINGNINFO.PSEX)\n        const switch_data = this.state.test_items_interval\n        switch (switch_data) {\n            case 1:\n                return <WardlifeChart grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife\"} svg_key={\"wardlife_svg\"} gender={sex}></WardlifeChart>\n            case 0:\n                return <Wardmonthafter grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife_after\"} svg_key={\"wardlife_after_svg\"} gender={sex}></Wardmonthafter>\n            default:\n                return null;\n        }\n    }\n\n    handleChange = (checkedValues) => {\n        console.log('checked = ', checkedValues);\n        this.setState(\n            {\n                test_items_interval: checkedValues\n            }\n        )\n\n    }\n    onOk = (value) => {\n        console.log('onOk: ', value);\n    }\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n    WaterValueControlBar() {\n        return (\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", marginRight: \"10px\" }}>\n                    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        <div style={{ height: \"10px\", width: \"10px\", background: \"#C3EFFF\", marginRight: \"5px\" }}></div>\n                        <t3>IV</t3>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        <div style={{ height: \"10px\", width: \"10px\", background: \"#2E64A4\", marginRight: \"5px\" }}></div>\n                        <t3>Feed</t3>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        <div style={{ height: \"10px\", width: \"10px\", background: \"#3B97E1\", marginRight: \"5px\" }}></div>\n                        <t3>Other</t3>\n                    </div>\n                </div>\n                {/* <Button type=\"primary\" onClick={this.showModal}>設定營養項目</Button> */}\n            </div>\n        );\n    }\n    SwitchTestItemInterval(testiteminterval) {\n        const time_selectbtn_style = {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"32px\",\n            padding: \"0px 5px\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#001a6dbb\",\n            color: \"white\",\n            fontSize: \"1rem\",\n            borderWidth: \"1px\",\n            borderStyle: \"solid\",\n            borderColor: \"#001a6d88\",\n            cursor: \"pointer\"\n        }\n        const time_unselectbtn_style = {\n            display: \"flex\", justifyContent: \"center\",\n            alignItems: \"center\", height: \"32px\",\n            paddingRight: \"10px\", paddingLeft: \"10px\",\n            borderRadius: \"4px\", backgroundColor: \"white\",\n            color: \"#001a6d88\", fontSize: \"1rem\",\n            borderWidth: \"1px\", borderStyle: \"solid\",\n            borderColor: \"#001a6d88\",\n            cursor: \"pointer\"\n        }\n        if (testiteminterval === this.state.test_items_interval) {\n            return time_selectbtn_style\n        }\n        else return time_unselectbtn_style\n    }\n    GrowthCurveControlBar() {\n        const { Option } = Select;\n        return (\n            <div className='titlebutton'>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"5px\" }}>\n                    <div style={this.SwitchTestItemInterval(0)} onMouseUp={() => this.handleChange(0)}>40週後</div>\n                    <div style={this.SwitchTestItemInterval(1)} onMouseUp={() => this.handleChange(1)}>40週前</div>\n                </div>\n                {/* <Select defaultValue={1} style={{ width: 120 }} onChange={this.handleChange}>\n                    <Option value={0}>滿足月</Option>\n                    <Option value={1}>不滿足月</Option>\n                </Select> */}\n                <Button type=\"primary\" onClick={this.showModal}>新增體重</Button>\n                <Modal\n                    title=\"手動新增體重紀錄\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                        <div style={{ display: \"flex\", alignItems: \"center\" }}>選擇時間:</div>\n                        <DatePicker id=\"nurtion_datepicker\" style={{ width: \"400px\" }} showTime placeholder=\"選擇時間\" onOk={this.onOk} />\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n    WaterValueRender() {\n        function formatTimeArray(startTime) {\n            const shiftTimer = parseInt((moment().valueOf() - moment(startTime, \"YYYYMMDD\").valueOf()) / (23 * 60 * 60 * 1000))\n            console.log(startTime, shiftTimer)\n            var TimerArray = []\n            for (let index = 0; index < shiftTimer; index++) {\n                const Time = moment(moment(startTime, \"YYYYMMDD\").valueOf() + (index * 24 * 60 * 60 * 1000)).format(\"YYYY/MM/DD\")\n                TimerArray.push(Time)\n            }\n            return TimerArray\n        }\n        const { caseinfo } = this.props\n        const QDC = this.state.QDC\n        if (QDC.length === 0) {\n            return null\n        }\n        var FeedinfData = []\n        var IVData = []\n        var OtherData = []\n        var Calories = 0\n        for (let index = 0; index < QDC.length; index++) {\n            const element = QDC[index];\n            const feedstatus = FiliterReg.Feedarea_Reg_IO().find(function (value, index, array) {\n                return element.item === value\n            })\n            if (feedstatus) {\n                FeedinfData.push(element)\n            }\n            const IVstatus = FiliterReg.IVarea_reg_IO().find(function (value, index, array) {\n                return element.item === value\n            })\n            if (IVstatus) {\n                IVData.push(element)\n            }\n            const Otherstatus = FiliterReg.Otherarea_reg_IO().find(function (value, index, array) {\n                return element.item === value\n            })\n            if (Otherstatus) {\n                const invalue = element.inp_val1\n                if (invalue !== undefined) {\n                    OtherData.push(element)\n                }\n            }\n            console.log(element)\n\n\n        }\n\n        console.log(FeedinfData)\n        console.log(IVData)\n        console.log(OtherData)\n        function sumcar(List) {\n            var Calories = 0\n            for (let index = 0; index < List.length; index++) {\n                const element = List[index];\n                if (element.item === \"進食\") {\n                    if (element.lost === \"配方奶\") {\n                        Calories = Calories + Number(element.inp_val2) * 0.8\n                    }\n                    if (element.lost === \"母奶\") {\n                        Calories = Calories + Number(element.inp_val2) * 0.7\n\n                    }\n                }\n                if (element.nam !== undefined) {\n                    if (element.nam.toString().match(\"10%TPN\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                    if (element.nam.toString().match(\"15%TPN\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34 * 1.5\n                    }\n                    if (element.nam.toString().match(\"SMOFliquid\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                    if (element.nam.toString().match(\"D10\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                    if (element.nam.toString().match(\"D12\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34 * 1.2\n                    }\n                    if (element.nam.toString().match(\"D5W\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34 * 5\n                    }\n                    if (element.nam.toString().match(\"taita\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                }\n\n            }\n            return Calories\n\n        }\n        const startTime = caseinfo.TRANSINDT.toString()\n        const TimerList = formatTimeArray(startTime)\n        var watervalueDataList = []\n        for (let index = 0; index < TimerList.length; index++) {\n            const element = TimerList[index];\n            const filterFeedind = FeedinfData.filter(function (value, index, arr) {\n                return moment(element, \"YYYY/MM/DD\").valueOf() === moment(value.rec_dat.toString().trim(), \"YYYY/MM/DD\").valueOf()\n            })\n            const filterIV = IVData.filter(function (value, index, arr) {\n                return moment(element, \"YYYY/MM/DD\").valueOf() === moment(value.rec_dat.toString().trim(), \"YYYY/MM/DD\").valueOf()\n            })\n            const filterOther = OtherData.filter(function (value, index, arr) {\n                return moment(element, \"YYYY/MM/DD\").valueOf() === moment(value.rec_dat.toString().trim(), \"YYYY/MM/DD\").valueOf()\n            })\n\n            const feedingSum = SumData2(filterFeedind)\n            const IVSum = SumData(filterIV)\n            const OtherSum = SumData(filterOther)\n\n            const Caloriessum = sumcar(filterFeedind) + sumcar(filterIV) + sumcar(filterOther)\n            watervalueDataList.push({\n                Feeding: feedingSum,\n                IV: IVSum,\n                Other: OtherSum,\n                Time: element,\n                Caloriessum\n            })\n\n        }\n        function SumData(arr) {\n            var sum = 0;\n            for (var i = 0; i < arr.length; i++) {\n                sum += Number(arr[i].inp_val1);\n            };\n            return sum;\n        }\n\n        function SumData2(arr) {\n            var sum = 0;\n            for (var i = 0; i < arr.length; i++) {\n                sum += Number(arr[i].inp_val2);\n            };\n            return sum;\n        }\n\n\n        console.log(watervalueDataList)\n        return (\n            <Watervaluechart Calories={Calories} watervalueData={watervalueDataList} startTime={caseinfo.TRANSINDT} id_key={\"water_id\"} svg_key={\"water_svg\"} caseiddays='2019/11/11'></Watervaluechart>\n        );\n    }\n\n    PickerDateRangeChange = (date, dateString) => {\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const PickerDate = this.state.PickerDateRange.valueOf()\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const bTemp = bTime - (6 * day)\n                bronDate <= bTemp && this.PickerDateRangeChange(moment(bTime))\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD'))\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= aTemp && this.PickerDateRangeChange(moment(aTime))\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const GrowthCurve = this.switch_monthy()\n        const GrowthCurveControl = this.GrowthCurveControlBar()\n        const WaterValueControl = this.WaterValueControlBar()\n        const tpndata = this.state.UDORDER0\n        const feeddata = this.state.TRTMNTQ1\n        const TimeStampPickerDate = this.state.PickerDateRange.valueOf()\n        const { caseinfo } = this.props\n\n        if (tpndata.length === 0 || feeddata === 0) {\n            return null\n        }\n\n        const waterRender = this.WaterValueRender()\n        const PickerDateRange = [TimeStampPickerDate - (6 * 24 * 60 * 60 * 1000), TimeStampPickerDate]\n\n        return (\n            <div className='nurtionheight'>\n                <div className='nurtionlayout'>\n                    <div>\n                        <div className='nurtioncomponmentboxtitle'>\n                            <t1>生長曲線圖</t1>\n                            {GrowthCurveControl}\n                        </div>\n                        <div className='nurtioncomponmentboxcontent'>{GrowthCurve}</div>\n                    </div>\n                    <div>\n                        <div className='nurtioncomponmentboxtitle'>\n                            <t1>水量表</t1>\n                            <div className='titlebutton'>\n                                {WaterValueControl}\n                            </div>\n                        </div>\n                        <div className='nurtioncomponmentboxcontent'>\n                            {waterRender}\n                        </div>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"140px 120px\", gridColumnGap: \"5px\", margin: \"10px 0px 5px 0px\" }}>\n                    <DatePicker\n                        value={this.state.PickerDateRange}\n                        format={\"YYYY/MM/DD\"}\n                        allowClear={false}\n                        locale={\"zh_TW\"}\n                        onChange={this.PickerDateRangeChange}\n                    />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"pause-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: '1fr 1fr', gridColumnGap: \"10px\", marginBottom: \"20px\" }}>\n                    <Nurtionfeedingorder PickerDateRange={PickerDateRange} caseinfo={caseinfo}></Nurtionfeedingorder>\n                    <Nurtiontpnorder PickerDateRange={PickerDateRange} caseinfo={caseinfo}></Nurtiontpnorder>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Nurtionview\n","import React, { Component } from 'react'\nimport './Infectionlabtable.scss'\n// import { chronicladdataoneday, chroniclabdatathird } from '../../Data/Wardviewdata'\n// import { arraychange } from '../../Function/Wardstate'\n\nclass Infectionlabtable extends Component {\n    switch_state() {\n        const chronic_state = 2\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 18\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    table_content() {\n        function FormatList(Datalist, st) {\n            var Render = []\n            for (let index = 0; index < 21; index++) {\n                const start = st + (index * 8 * 60 * 60 * 1000)\n                const end = st + ((index + 1) * 8 * 60 * 60 * 1000)\n                const FilterData = Datalist.filter(function (value, index, arr) {\n                    return value.Time > start && value.Time < end\n                })\n                var sum = 0\n                console.log(FilterData)\n                for (let index = 0; index < FilterData.length; index++) {\n                    const element = FilterData[index];\n                    sum = sum + Number(element.Data)\n                }\n                Render.push(sum)\n            }\n            return Render\n        }\n        function CellRander(List) {\n            const cellR = List.map(function (info, index) {\n                return (\n                    <centerstyle style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse' }} key={index}>\n                        <t2>{info}</t2>\n                    </centerstyle>\n                );\n            })\n            return cellR\n        }\n        const { PickerDate, WBCList, BandList, SegList, LymList, PCTList, CRPList, title } = this.props\n        console.log(PickerDate)\n        const st = PickerDate + (31 * 60 * 60 * 1000) - (7 * 24 * 60 * 60 * 1000)\n        var WBCRender = FormatList(WBCList, st)\n        var BandRender = FormatList(BandList, st)\n        var SegRender = FormatList(SegList, st)\n        var LymRender = FormatList(LymList, st)\n        var PCTRender = FormatList(PCTList, st)\n        var CRPRender = FormatList(CRPList, st)\n        const WBCcell = CellRander(WBCRender)\n        const Bandcell = CellRander(BandRender)\n        const Segcell = CellRander(SegRender)\n        const Lymcell = CellRander(LymRender)\n        const PCTcell = CellRander(PCTRender)\n        const CRPcell = CellRander(CRPRender)\n        return (\n            <div style={{ display: \"grid\", gridTemplateRows: \"repeat(\" + title.length + \",1fr)\" }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{WBCcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{Bandcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{Segcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{Lymcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{PCTcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{CRPcell}</div>\n            </div>\n        );\n    }\n    render() {\n        const { userdata, title } = this.props\n        const title_list = title.map((info, index) => <div className='Chronictabletitlelist' key={index}><t2>{info.title}</t2></div>)\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\" }}>\n                <div style={{ display: \"grid\", gridTemplateRows: \"repeat(\" + title.length + \",1fr)\" }}>\n                    {title_list}\n                </div>\n                {this.table_content()}\n            </div>\n        );\n    }\n}\n\nexport default Infectionlabtable","import React, { Component } from 'react'\nimport Infectionlabtable from './Infectionlabtable'\n\nclass Infectionlab extends Component {\n    render() {\n        const { WBCList, BandList, SegList, LymList, PCTList, CRPList,PickerDate } = this.props\n        const item_title = [{ title: \"WBC\" }, { title: \"Band\" }, { title: \"Seg\" }, { title: \"Lym\" }, { title: \"PCT\" }, { title: \"CRP\" }]\n        return (\n            <div style={{margin:\"10px 0px\"}}>\n                <Infectionlabtable PickerDate={PickerDate} title={item_title}  WBCList={WBCList} BandList={BandList} SegList={SegList} LymList={LymList} PCTList={PCTList} CRPList={CRPList}></Infectionlabtable>\n            </div>\n        );\n    }\n}\n\nexport default Infectionlab","import React, { Component } from 'react'\nimport { DatePicker } from 'antd'\nimport Vitalxaxis from '../../Module/Vitalxaxis'\n// import Infectionvitalsign from './Infectionvitalsign'\nimport Infectionlab from './Infectionlab'\nimport Orderonchronic from '../ChronicleView/ChronicOrder'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport './Infection.scss'\nimport Vitalonchronic from '../ChronicleView/Chronic_vital'\n\nclass Infectionview extends Component {\n    state = {\n        datasource: [],\n        statussource: \"CM\",\n        intervalselect: 2,\n        PickerDate: moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf(),\n        UDORDER0: [],\n        RESLAB02: [],\n        RESLAB01: [],\n        classParser: undefined,\n\n        hrdatasource: [],\n        rrdatasource: [],\n        spo2datasource: [],\n        abpdatasource: [],\n        nbpdatasource: [],\n        btdatasource: [],\n        QDVS: [],\n        QOXY: [],\n    }\n    componentDidMount() {\n        this.apidata()\n    }\n\n    apidata() {\n        const { caseinfo } = this.props\n        const dateTime = this.state.PickerDate\n        const et = dateTime + (31 * 60 * 60 * 1000)\n        const st = moment(et - (7 * 24 * 60 * 60 * 1000)).format(\"YYYY-MM-DD\")\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Prescription\");\n                console.log(\"getGitHubJson Prescription OK \" + JSON.stringify(parser))\n                this.setState({\n                    classParser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiProvider.getStoredProcedureUDORDER0(caseinfo.HISID, caseinfo.CASEID, \"123\")\n            .then(data => {\n                this.setState({\n                    UDORDER0: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        ApiProvider.getStoredProcedureRESLAB02(caseinfo.HISID, st)\n            .then(data => {\n                this.setState({\n                    RESLAB02: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getStoredProcedureRESLAB01(caseinfo.HISID, st)\n            .then(data => {\n                this.setState({\n                    RESLAB01: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n    }\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        console.log(\"mappings\" + mappings)\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n\n        inputs.forEach(input => {\n            let content = input.UDGNAME;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n        });\n        return allResult;\n    }\n    sourcehandleChange = (value) => {\n        this.setState({\n            statussource: value\n        })\n\n    }\n\n\n    render() {\n        function vallofnull(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"\"\n            }\n            return value.toString().trim()\n        }\n        // const { Option } = Select;\n        const { caseinfo } = this.props\n        const { classParser, UDORDER0 } = this.state\n        const LabData = this.state.RESLAB02\n        const LabData2 = this.state.RESLAB01\n        const dateTime = this.state.PickerDate\n        const et = dateTime + (31 * 60 * 60 * 1000)\n        const st = et - (7 * 24 * 60 * 60 * 1000)\n        var WBCList = []\n        var BandList = []\n        var SegList = []\n        var LymList = []\n        var PCTList = []\n        var CRPList = []\n        if (Array.isArray(LabData)) {\n            if (LabData.length !== 0) {\n                for (let index = 0; index < LabData.length; index++) {\n                    const element = LabData[index];\n                    const WBC = vallofnull(element.RSV01)\n                    const Band = vallofnull(element.RSV13)\n                    const Seg = vallofnull(element.RSV14)\n                    const Lym = vallofnull(element.RSV15)\n                    const PCT = null\n                    const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                    if (st < time && time < et) {\n                        if (WBC !== null || WBC !== \"\" || WBC !== undefined) {\n                            WBCList.push({\n                                Time: time,\n                                Data: WBC\n                            })\n                        }\n                        if (Band !== null || Band !== \"\" || Band !== undefined) {\n                            BandList.push({\n                                Time: time,\n                                Data: Band\n                            })\n                        }\n                        if (Seg !== null || Seg !== \"\" || Seg !== undefined) {\n                            SegList.push({\n                                Time: time,\n                                Data: Seg\n                            })\n                        }\n                        if (Lym !== null || Lym !== \"\" || Lym !== undefined) {\n                            LymList.push({\n                                Time: time,\n                                Data: Lym\n                            })\n                        }\n                        if (PCT !== null || PCT !== \"\" || PCT !== undefined) {\n                            PCTList.push({\n                                Time: time,\n                                Data: PCT\n                            })\n                        }\n                    }\n                }\n            }\n        }\n        if (Array.isArray(LabData2)) {\n            if (LabData2.length !== 0) {\n                for (let index = 0; index < LabData2.length; index++) {\n                    const element = LabData2[index];\n                    const CRP = vallofnull(element.RSV30)\n                    const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                    if (st < time && time < et) {\n                        if (CRP !== null || CRP !== \"\" || CRP !== undefined) {\n                            CRPList.push({\n                                Time: time,\n                                Data: CRP\n                            })\n                        }\n                    }\n                }\n            }\n        }\n        console.log(WBCList, BandList, SegList, LymList, PCTList, CRPList)\n\n        let clusteredData = {}\n        if (classParser !== undefined) {\n            clusteredData = this.parse(UDORDER0, classParser)\n        }\n\n        //filter data by selected class\n        const filteredData = clusteredData[\"抗生素類別\"];\n\n        return (\n            <div style={{ padding: \"0px 20px\" }}>\n                <div className='Infectioncontrol'>\n                    <DatePicker\n                        disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                        defaultValue={moment(this.state.PickerDate)}\n                        onChange={(date, datestring) => { this.setState({ PickerDate: date.valueOf() }) }}\n                        allowClear={false} />\n                </div>\n                <div style={{ margin: \"10px 0px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\" }}>\n                        <div></div>\n                        <Vitalxaxis max={200} min={0} select_interval={2} select_date={new Date().getTime()} id_key=\"xaxis_infect\" svg_id=\"xaxis_svg_infect\"></Vitalxaxis>\n                    </div>\n                </div>\n                <div className='boxshadow'></div>\n                <div className='Infectionlayout'>\n                    <Vitalonchronic PickerDate={this.state.PickerDate} select_interval={2} fromInfection={true} caseinfo={caseinfo} source={\"infection\"} title=\"Vital\"></Vitalonchronic>\n                    {/* <Infectionvitalsign caseinfo={caseinfo} StatusSource={this.state.statussource} PickerDate={this.state.PickerDate}></Infectionvitalsign> */}\n                    {/* Order */}\n                    <Orderonchronic PickerDate={this.state.PickerDate} UDORDER0={filteredData} select_interval={2} caseinfo={caseinfo} source={\"infection\"}></Orderonchronic>\n                    <Infectionlab PickerDate={this.state.PickerDate} WBCList={WBCList} BandList={BandList} SegList={SegList} LymList={LymList} PCTList={PCTList} CRPList={CRPList}></Infectionlab>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\" }}>\n                    <div></div>\n                    <Vitalxaxis max={200} min={0} select_interval={2} select_date={new Date().getTime()} id_key=\"xaxis_flootsheet_bot\" svg_id=\"xaxis_svg_flootsheet_bot\"></Vitalxaxis>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Infectionview","import React, { Component } from 'react';\nimport editlogo from '../../Image/svg/Edit.svg'\n// import detaillogo from '../../Image/svg/details.svg'\nimport { Input, Button } from 'antd';\nimport './Bedsidecard.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Bedsidecard extends Component {\n    state = {\n        caseinfo: this.props.caseinfo,\n        EditMode: false,\n        remarkContent: \"\",\n        inputContent: \"\",\n        powerLogin: 0\n    }\n    componentDidMount() {\n        //bind function\n        this.onInputChange = this.onInputChange.bind(this);\n\n        //query patient remark\n        this.queryPatientRemark();\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    queryPatientRemark() {\n        ApiProvider.getOnePatientRemark(this.state.caseinfo.TRANSINID)\n            .then(data => {\n                console.log(\"queryPatientRemark OK \" + JSON.stringify(data));\n                this.setState({\n                    remarkContent: data.data[0].context\n                });\n            })\n            .catch(err => {\n                console.log(\"queryPatientRemark NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    onClickEnter() {\n        ApiProvider.createPatientRemark(this.state.inputContent, this.state.caseinfo.HISID, this.state.caseinfo.TRANSINID)\n            .then(data => {\n                console.log(\"createPatientRemark OK \" + JSON.stringify(data));\n                this.setState(\n                    {\n                        inputContent: \"\"\n                    }\n                )\n                this.queryPatientRemark();\n            })\n            .catch(err => {\n                console.log(\"createPatientRemark NG \" + JSON.stringify(err));\n            });\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    render() {\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div className='bedsidecardtitle'>\n                    <t1 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>床頭卡註記</t1>\n                    <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                        <img src={editlogo} alt=\"editlogo\" />\n                    </div>\n                </div>\n                <div className='bedsidecardcontext'>\n                    <t2>{this.state.remarkContent}</t2>\n                </div>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", backgroundColor: \"rgba(238,238,238,1)\" }}>\n                        <Input placeholder=\"輸入當日註記內容\" value={this.state.inputContent} onChange={this.onInputChange}></Input>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Bedsidecard\n","import React, { Component } from 'react';\nimport editlogo from '../../Image/svg/Edit.svg'\nimport { Checkbox, Input, Button } from 'antd';\nimport './Scheduletodo.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nconst TODO_DONE = \"已完成\";\nconst TODO_UNFINISH = \"未完成\";\n\nclass Scheduletodo extends Component {\n    state = {\n        EditMode: false,\n        displayMode: true, //true已完成 flase未完成\n        todolist: [],\n        caseinfo: this.props.caseinfo,\n        inputContent: undefined,\n        powerLogin: 0\n    }\n    componentDidMount() {\n        //bind function\n        this.onInputChange = this.onInputChange.bind(this);\n\n        //query patient notice\\\n        this.queryPatientTodo();\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    queryPatientTodo() {\n        ApiProvider.getOneTodo(this.state.caseinfo.TRANSINID, this.state.caseinfo.CASEID)\n            .then(data => {\n                console.log(\"queryPatientTodo OK \" + JSON.stringify(data));\n                this.setState({\n                    todolist: data.data\n                });\n            })\n            .catch(err => {\n                console.log(\"queryPatientTodo NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString()\n        ApiProvider.createTodo(this.state.caseinfo.CASEID, this.state.inputContent, timeNowStr, this.state.caseinfo.TRANSINID, TODO_UNFINISH)\n            .then(data => {\n                console.log(\"createTodo OK \" + JSON.stringify(data));\n                this.queryPatientTodo();\n            })\n            .catch(err => {\n                console.log(\"createTodo NG \" + JSON.stringify(err));\n            });\n        this.setState(\n            {\n                EditMode: false,\n                inputContent: undefined\n            }\n        )\n    }\n    onClickfinish() {\n        console.log(\"finish\")\n        this.setState(\n            {\n                displayMode: true\n            }\n        )\n    }\n    onClickunfisish() {\n        this.setState(\n            {\n                displayMode: false\n            }\n        )\n    }\n\n    onChange = (checkedValues) => {\n        console.log('checked = ', document.getElementById(\"finish\"));\n    }\n    onItemCheck = (event) => {\n        console.log('onItemCheck ' + JSON.stringify(event.target));\n\n        const itemToUpdate = this.state.todolist.find(item => item.time === event.target.value);\n        console.log('find item ' + JSON.stringify(itemToUpdate));\n\n        if ((this.state.displayMode === true && event.target.checked === false) || (this.state.displayMode === false && event.target.checked === true)) {\n            ApiProvider.createTodo(itemToUpdate.caseid, itemToUpdate.context, itemToUpdate.time, itemToUpdate.transinno, (itemToUpdate.type === TODO_DONE) ? TODO_UNFINISH : TODO_DONE)\n                .then(data => {\n                    console.log(\"updateTodo OK \" + JSON.stringify(data));\n                    this.queryPatientTodo();\n                })\n                .catch(err => {\n                    console.log(\"updateTodo NG \" + JSON.stringify(err));\n                });\n        }\n    }\n    render() {\n        // const button_style = {\n        //     finish: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\", borderRadius: \"16px\", border: \"rgba(245, 166, 35, 1) 1px solid\", color: \"rgba(245, 166, 35, 1)\" },\n        //     unfinish: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\", borderRadius: \"16px\", border: \"rgba(245, 166, 35, 1) 1px solid\", background: \"rgba(245, 166, 35, 1)\", color: \"white\" }\n        // }\n\n        const todolist_data = this.state.todolist\n        const finish_data = todolist_data.filter(function (item, index, array) {\n            return item.type === TODO_DONE;\n        });\n        const finish_value = finish_data.map(function (item, index, array) {\n            return item.time;\n        });\n        const unfinish_data = todolist_data.filter(function (item, index, array) {\n            return item.type === TODO_UNFINISH;\n        });\n\n        const onItemCheck = this.onItemCheck;\n        const finish_checkbox = finish_data.map(function (item, index, array) {\n            return (\n                <div key={index} className='scheduletodocell'>\n                    <Checkbox value={item.time} checked={true} onChange={onItemCheck} style={{ textDecoration: \"line-through\" }}>{item.context}</Checkbox>\n                </div>\n            );\n        });\n        const unfinish_checkbox = unfinish_data.map(function (item, index, array) {\n            return (\n                <div key={index} className='scheduletodocell'>\n                    <Checkbox value={item.time} checked={false} onChange={onItemCheck}>{item.context}</Checkbox>\n                </div>\n            );\n        });\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div className='scheduletodotitle'>\n                    <t1 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>待辦排程</t1>\n                    <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                        <img src={editlogo} alt=\"editlogo\" />\n                    </div>\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"10px 0px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"115px 115px\", gridColumnGap: \"10px\" }}>\n                        <div style={{ cursor: \"pointer\" }} className={this.state.displayMode ? 'finishbutton' : 'todobutton'} onClick={() => this.onClickunfisish()}>未完成</div>\n                        <div style={{ cursor: \"pointer\" }} onClick={() => this.onClickfinish()} className={this.state.displayMode ? 'todobutton' : 'finishbutton'}>已完成</div>\n                    </div>\n                </div>\n                <Checkbox.Group defaultValue={finish_value} style={{ width: '100%' }} onChange={this.onChange}>\n                    <div style={{ overflowY: \"auto\", maxHeight: \"200px\" }}>\n                        {this.state.displayMode ? finish_checkbox : unfinish_checkbox}\n                    </div>\n                </Checkbox.Group>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <Input placeholder=\"輸入當日註記內容\" value={this.state.inputContent} onChange={this.onInputChange}></Input>\n                        <Button type=\"primary\">新增</Button>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Scheduletodo\n","import React, { Component } from 'react';\nimport calenderlogo from '../../Image/svg/calender.svg'\nimport calenderwhitelogo from '../../Image/svg/calenderwhite.svg'\nimport pingcheck from '../../Image/svg/ping.svg'\nimport pingwhite from '../../Image/svg/pingwhite.svg'\nimport './Calendercell.scss'\nimport { mmddformat, weekdateformatcalender } from '../../Function/Timeformat'\n\nclass Calendercell extends Component {\n\n    sendcallback(timestamp, clickindex) {\n        this.props.parentCallback(timestamp, clickindex);\n    }\n    onClickCheck(timestamp, clickindex) {\n        this.sendcallback(timestamp, clickindex)\n    }\n\n    render() {\n        const { clickindex, state, newDate, timestamp, clickdate, data, today } = this.props;\n        function disableday(state) {\n            if (state) {\n                return (\n                    <div className='calendersubcontexticonsecond'>\n                        <img src={calenderlogo} alt='calenderlogo' />\n                        <img src={pingcheck} alt='pingcheck' />\n                    </div>\n                );\n            }\n            else {\n                return (\n                    <div className='calendersubcontexticonsecond'>\n                        <img src={calenderwhitelogo} alt='calenderlogo' />\n                        <img src={pingwhite} alt='pingcheck' />\n                    </div>\n                );\n            }\n        }\n        function disabledayinfo(state) {\n            const scheduleArray = data.scheduleList.filter(item => item.type === \"排程\");\n            const eventArray    = data.scheduleList.filter(item => item.type === \"事件\");\n\n            if (state) {\n                return (\n                    <div className='calendersubcontexticonsecond'>\n                        <t1>{scheduleArray.length}</t1>\n                        <t1>{eventArray.length}</t1>\n                    </div>\n                );\n            }\n            else {\n                return (\n                    <div className='calendersubcontexticonsecond'>\n                        <t1 className='displayinfo'>{scheduleArray.length}</t1>\n                        <t1 className='displayinfo'>{eventArray.length}</t1>\n                    </div>\n                );\n            }\n        }\n        function locl(state) {\n            /*if (state) {\n                return '當日'\n            }\n            else return null\n            */\n            if(timestamp === today) return  '當日'\n            else return null\n        }\n        function stateswitch() {\n\n            console.log(timestamp, clickdate)\n            if (mmddformat(clickdate) === mmddformat(timestamp)) {\n                return true\n            }\n            return false\n        }\n        return (\n            <div className={stateswitch() ? 'calendersubcontextclick' : 'calendersubcontext'} onClick={() => this.onClickCheck(timestamp, clickindex)}>\n                <div className={stateswitch() ? 'calendersubcontexttitleclick' : 'calendersubcontexttitle'}>\n                    <t2 className='calendersubcontexttitletoday'>{mmddformat(timestamp)}({weekdateformatcalender(timestamp)}){locl(newDate)}</t2>\n                </div>\n                <div className='calendersubcontexticon'>\n                    {disableday(state)}\n                </div>\n                <div className='calendersubcontexticon'>\n                    {disabledayinfo(state)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Calendercell","import React, { Component } from 'react';\nimport { DatePicker } from 'antd';\nimport { Select } from 'antd';\nimport './Calender.scss'\nimport { mmddformat, compareday, yyyymmfirstweeksate } from '../../Function/Timeformat'\nimport Calendercell from './Calendercell'\nimport { Icon } from 'antd'\nimport CrossectionSchedule from '../CrossSectionView/Crosssectionschedule'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment';\n\nconst SCHEDULE_TYPE_EVENT = \"事件\";\n// const SCHEDULE_TYPE_SCHEDULE = \"排程\";\nconst timeZoneOffset = 8 * 60 * 60 * 1000;\n\nclass Calender extends Component {\n    state = {\n        calendermode: 'week',\n        Clickdays: null,\n        ClickDate: null,\n        displayinfo: null,\n        scheduleRawData: [],\n        scheduleData: [],\n        startTimestamp: 0,\n        endTimestamp: 0,\n        todayBegin: 0,\n        noticeRawData: []\n    }\n    componentDidMount() {\n        const { startTimestamp, endTimestamp, todayBegin } = this.getStartEndTime();\n        this.setState({\n            startTimestamp: startTimestamp,\n            endTimestamp: endTimestamp,\n            todayBegin: todayBegin,\n            ClickDate: todayBegin\n        });\n        this.querySchedule(new Date(startTimestamp).toISOString().split('.')[0], new Date(endTimestamp).toISOString().split('.')[0]);\n        this.queryNotice();\n    }\n    getStartEndTime() {\n        const today = new Date();\n        const monthfirstweekday = new Date(today.getFullYear(), today.getMonth(), 1).getDay();\n        const firstCellBegin = new Date(today.getFullYear(), today.getMonth(), 1).getTime() - (monthfirstweekday * 24 * 60 * 60 * 1000) + timeZoneOffset;\n        const todayBegin = new Date(today.getFullYear(), today.getMonth(), today.getDate()).getTime() + timeZoneOffset;\n\n        const startTimestamp = (this.state.calendermode === 'week') ? todayBegin - 3 * 24 * 60 * 60 * 1000 : firstCellBegin;\n        const endTimestamp = (this.state.calendermode === 'week') ? startTimestamp + 7 * 24 * 60 * 60 * 1000 : startTimestamp + 35 * 24 * 60 * 60 * 1000;\n\n        return { startTimestamp, endTimestamp, todayBegin };\n    }\n    querySchedule(startTimestampStr, endTimestampStr) {\n        ApiProvider.getOnePatientSchedule(this.props.caseinfo.TRANSINID, startTimestampStr, endTimestampStr)\n            .then(data => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n\n                const itemList = data.data;\n                let refactoredList = [];\n                itemList.forEach(item => {\n                    const itemTimeStr = item.time.split('T')[0];\n                    let foundItemIndex = refactoredList.findIndex(element => element.time === itemTimeStr);\n                    if (foundItemIndex === -1) {\n                        //not found, create one\n                        let newItem = {\n                            time: itemTimeStr,\n                            timestamp: item.time,\n                            scheduleList: []\n                        }\n                        let newEvent = {\n                            type: item.type,\n                            timestamp: new Date(item.time).getTime(),\n                            writer: (item.type === SCHEDULE_TYPE_EVENT) ? \"林醫師\" : \"張醫師\",\n                            name: item.name,//this.props.caseinfo.PBASINGNINFO.PNAMEC,//(item.type === SCHEDULE_TYPE_EVENT) ? \"林ＯＯ\" : \"黃ＯＯ\",\n                            content: item.context,\n                            bednumber: item.bednumber\n                        }\n                        newItem.scheduleList.push(newEvent);\n                        refactoredList.push(newItem);\n                    } else {\n                        //found, update item\n                        let newEvent = {\n                            type: item.type,\n                            timestamp: new Date(item.time).getTime(),\n                            writer: (item.type === SCHEDULE_TYPE_EVENT) ? \"林醫師\" : \"張醫師\",\n                            name: item.name,//this.props.caseinfo.PBASINGNINFO.PNAMEC,//(item.type === SCHEDULE_TYPE_EVENT) ? \"林ＯＯ\" : \"黃ＯＯ\",\n                            content: item.context,\n                            bednumber: item.bednumber\n                        }\n                        refactoredList[foundItemIndex].scheduleList.push(newEvent);\n                    }\n                });\n                this.setState({\n                    scheduleRawData: data.data,\n                    scheduleData: refactoredList\n                });\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }\n    queryNotice() {\n        ApiProvider.getOnePatientNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID)\n            .then(result => {\n                console.log(\"getOnePatientNotice OK \" + JSON.stringify(result));\n                this.setState({\n                    noticeRawData: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientNotice NG \" + JSON.stringify(err));\n            });\n    }\n    callbackFunction = (timestamp, clickindex) => {\n        console.log(timestamp)\n        this.setState({\n            ClickDate: timestamp,\n            displayinfo: clickindex\n        })\n    }\n    onCancelClick() {\n        this.setState({\n            ClickDate: this.state.todayBegin,\n            displayinfo: null\n        })\n    }\n    handleChange = (value) => {\n        console.log(value)\n        this.setState({\n            calendermode: value,\n            displayinfo: null,\n            Clickdays: null\n        })\n    }\n    onChange = (timestamp) => {\n        console.log('changestate')\n    }\n    onClickCheck(timestampdate) {\n        this.setState({\n            onClickdays: timestampdate\n        })\n    }\n    getDataFromTimestamp(timestamp) {\n        const dateStr = new Date(timestamp).toISOString().split('T')[0];\n        const dataOfDayIndex = this.state.scheduleData.findIndex(element => element.time === dateStr);\n        const dataOfDay = (dataOfDayIndex === -1) ? { scheduleList: [] } : this.state.scheduleData[dataOfDayIndex];\n        return dataOfDay;\n    }\n    getNoticeFromTimestamp(timestamp) {\n        const dateStr = new Date(timestamp).toISOString().split('T')[0];\n        const noticeOfDayArray = this.state.noticeRawData.filter(element => element.time.indexOf(dateStr) > -1);\n        return noticeOfDayArray;\n    }\n    weekmode() {\n        var weekcontext = []\n        for (let index = 0; index < 7; index++) {\n            const timestampdate = this.state.startTimestamp + (index * 24 * 60 * 60 * 1000);\n            const date = mmddformat(timestampdate)\n            const dataOfDay = this.getDataFromTimestamp(timestampdate);\n            if (index - 3 === 0) {\n                weekcontext.push(\n                    <Calendercell clickindex={'week'} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={true} newDate={true} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n                );\n            }\n            else {\n                weekcontext.push(\n                    <Calendercell clickindex={'week'} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={compareday(timestampdate)} newDate={false} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n                );\n\n            }\n        }\n        return weekcontext\n    }\n    weekmonthmode(weeknumber, firstMonthWeekDay) {\n        var weekcontext = []\n        for (let index = 0; index < 7; index++) {\n            const timestampdate = new Date(firstMonthWeekDay).getTime() + (index * 24 * 60 * 60 * 1000) + timeZoneOffset;\n            const date = mmddformat(timestampdate)\n            const dataOfDay = this.getDataFromTimestamp(timestampdate)\n\n            if (new Date(mmddformat(new Date().getTime())).getTime() <= new Date(mmddformat(new Date(timestampdate).getTime())).getTime()) {\n                weekcontext.push(\n                    <Calendercell clickindex={weeknumber} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={true} newDate={true} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n                );\n            }\n            else {\n                weekcontext.push(\n                    <Calendercell clickindex={weeknumber} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={false} newDate={true} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n                );\n            }\n        }\n        return weekcontext\n    }\n\n    ShowModule(rowIndex) {\n        if (rowIndex === undefined) rowIndex = 0;\n        console.log(\"this.state.ClickDate\" + this.state.ClickDate);\n\n        const dataOfDay = this.getDataFromTimestamp(this.state.ClickDate);\n        const noticeOfDay = this.getNoticeFromTimestamp(this.state.ClickDate);\n\n        function checkmode(state) {\n            if (state === 'week') {\n                return 'calenderdisplayinformation'\n            }\n            if (state === rowIndex) {\n                return 'calenderdisplayinformation'\n            }\n            return 'calenderdisplayinformationnone'\n        }\n        console.log(moment(this.state.ClickDate).format(\"YYYYMMDDHHmmss\"))\n        return (\n            <div className={checkmode(this.state.displayinfo)}>\n                <div className='calenderModule'>\n                    <t1>詳細資訊</t1>\n                    <Icon type=\"close\" onClick={() => this.onCancelClick()} />\n                </div>\n                <div className='Modulelayout'>\n                    <CrossectionSchedule PickerDate={this.state.ClickDate} source={1} caseinfo={this.props.caseinfo} noticeData={noticeOfDay} scheduleData={dataOfDay} editstatus={true}></CrossectionSchedule>\n                </div>\n            </div>\n        );\n    }\n\n\n    setgroup() {\n        var calendermonthgroup = []\n        const monthfirstweekdate = new Date(yyyymmfirstweeksate(new Date())).getDay()\n        const firstMonthWeekDay = new Date(yyyymmfirstweeksate(new Date())).getTime() - (monthfirstweekdate * 24 * 60 * 60 * 1000)\n\n        for (let index = 0; index < 5; index++) {\n            calendermonthgroup.push(\n                <div className='calendercontextMonthRows'>\n                    {this.weekmonthmode(index, firstMonthWeekDay + (index * 7 * 24 * 60 * 60 * 1000))}\n                    {this.ShowModule(index)}\n                </div>\n            );\n\n        }\n        return calendermonthgroup\n    }\n    modechange(state) {\n        if (state === 'week') {\n            return (\n                <div className='calendercontext'>\n                    {this.weekmode()}\n                    {this.ShowModule()}\n                </div>\n            );\n        }\n        else {\n            // return (\n            //     <div>\n            //         {this.setgroup()}\n            //     </div>\n            // );\n            return this.setgroup()\n        }\n    }\n\n    SelectDatepickertype() {\n        const { MonthPicker } = DatePicker;\n        if (this.state.calendermode === 'month') {\n            return (\n                <MonthPicker placeholder=\"請選擇月份\" />\n            );\n        }\n        else {\n            return (\n                <DatePicker placeholder={['請選擇時間']} />\n            );\n        }\n    }\n    render() {\n        const { Option } = Select;\n        // const localday = new Date().getTime()\n        // function compareday(days) {\n        //     if (new Date(days).getTime() > new Date().getTime()) {\n        //         return true\n        //     }\n        //     return false\n        // }\n        return (\n            <div>\n                <t1 className='calendertitle'>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>行事曆</t2>\n                </t1>\n                <div className='calendercontrol'>\n                    {this.SelectDatepickertype()}\n                    <Select defaultValue={this.state.calendermode} onChange={this.handleChange}>\n                        <Option value=\"week\">週</Option>\n                        <Option value=\"month\">月</Option>\n                    </Select>\n                </div>\n                {this.modechange(this.state.calendermode)}\n            </div>\n        );\n    }\n}\n\nexport default Calender\n","import React, { Component } from 'react';\nimport Notice from './Notice'\nimport Bedsidecard from './Bedsidecard'\nimport Scheduletodo from './Scheduletodo'\nimport Calender from './Calender'\nimport './Scheduleview.scss'\n\nclass Scheduleview extends Component {\n    render() {\n        function monthformat(month) {\n            return month + 1\n        }\n        function dateformat(time) {\n            return new Date(time).getFullYear() + \"-\" + monthformat(new Date(time).getMonth()) + \"-\" + new Date(time).getDate()\n        }\n        function exporttime(time) {\n            if (time === null) {\n                return \"--\"\n            }\n            else {\n                return dateformat(time)\n            }\n        }\n        const { caseinfo } = this.props\n        const time = new Date().getTime()\n\n        console.log(caseinfo)\n        return (\n            <div>\n                <div style={{ marginBottom: \"5px\" }}>\n                    <centerstyle>\n                        <div className='scheduletitle'>轉入時間:{dateformat(time)}/轉出時間\b:{exporttime(null)}</div>\n                    </centerstyle>\n                    <div className='boxshadow'></div>\n                </div>\n                <div className='schedulelayout'>\n                    <Bedsidecard caseinfo={caseinfo}></Bedsidecard>\n                    <Notice caseinfo={caseinfo}></Notice>\n                    <Calender caseinfo={caseinfo}></Calender>\n                    <Scheduletodo caseinfo={caseinfo}></Scheduletodo>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Scheduleview\n","import React, { Component } from 'react';\nimport Patientinfo from './Patientviewinfo'\nimport { Select, Modal } from 'antd';\nimport { bednumberformat } from '../Function/Wardbedfunction'\nimport { Tabs, Icon } from 'antd';\nimport Crosssectionlayout from './CrossSectionView/Crosssectionlayout'\nimport Chroniclelayout from './ChronicleView/Chroniclelayout'\nimport Flowsheetlayout from './FlootSheetView/Flootsheetlayout'\nimport Examreport from './ExamReport/ExamReport'\nimport Orderview from './Orderview/Orderview'\nimport Noteview from './NoteView/Note'\nimport RTview from './RT/RTview'\nimport Nurtionview from './Nurtion/Nurtion'\nimport Infectionview from './Infection/Infection'\nimport Scheduleview from './Schedule/Scheduleview'\nimport * as ApiProvider from '../API/ApiProvider'\nimport X2JS from 'x2js';\nimport moment from 'moment';\nimport * as WardState from '../Function/Wardstate'\nimport * as WeightList from '../Resource/QTWPER'\n\nclass Patientviewlayout extends Component {\n    state = {\n        TYPE: this.props.location.TYPE,\n        PBASINGNINFO: [],\n        PDOCNEW: [],\n        REMARK: [],\n        QMNC: [],\n        QENT: [],\n        QTWER: [],\n        tabstring: \"時間點檢視\",\n        visible: false,\n        PLOCSTART: null,\n        PLOC: null,\n        persionstatus: []\n    }\n    componentDidMount() {\n        const CASEID = this.props.location.state.CASEID\n        const HISID = this.props.location.state.HISID\n        this.getPersonStatus(HISID, CASEID)\n    }\n    getPersonStatus(HID, CID) {\n        ApiProvider.getTablePLOC(CID)\n            .then(data => {\n                console.log(data.data)\n                const result = data.data\n                this.setState({ PLOC: result[result.length - 1], PLOCSTART: result[0] })\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getTablePDOCNEW(CID)\n            .then(data => { this.setState({ PDOCNEW: data.data }) })\n            .catch(err => { console.log(\"Andy test getTablePDOCNEW NG \" + JSON.stringify(err)); });\n        ApiProvider.getTablePBASINFO(HID)\n            .then(data => {\n                this.setState({ PBASINGNINFO: data.data })\n                const PBASINGNINFO = data.data\n                const starttime = moment(PBASINGNINFO.PBIRTHDT, 'YYYYMMDD').format(\"YYYYMMDDHHmm\")\n                const endtime = moment().format('YYYYMMDDHHmm')\n                ApiProvider.getQTWPER(CID, starttime, endtime)\n                    .then(result => {\n                        const QTWER = WardState.XM2JSON(result.data)\n                        this.setState({ QTWER: QTWER })\n                    })\n                    .catch(err => {\n                        console.log(\"Andy test getQTWPER NG \" + JSON.stringify(err));\n                    });\n            })\n            .catch(err => { console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err)); });\n        ApiProvider.getPersionalStatus(HID)\n            .then(data => { console.log(data.data); this.setState({ persionstatus: data.data }) })\n            .catch(err => { console.log(err) })\n        ApiProvider.getQENT(CID)\n            .then(data => { this.setState({ QENT: WardState.XM2JSON(data.data) }) })\n            .catch(err => { console.log(err) })\n        ApiProvider.getQMNC(CID)\n            .then(data => { this.setState({ QMNC: WardState.XM2JSON(data.data) }) })\n            .catch(err => { console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err)); })\n    }\n    selectchange = (HBEDNUMBER) => {\n        const datalist = this.state.HBEDLIST\n        const filterdata = datalist.filter(function (info, index, array) {\n            return parseInt(info.HBEDNO) === HBEDNUMBER\n        })\n        if (filterdata.length === 0) {\n            return null\n        }\n        else {\n            const source = filterdata[0]\n            const HISID = source.PHISTNUM\n            const CASEID = source.PCASENO\n            const PBASINFO = ApiProvider.getTablePBASINFO(HISID)\n                .then(data => {\n                    return {\n                        PBASINGNINFO: data.data,\n                    }\n                })\n                .catch(err => {\n                    console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n                });\n            const PDOCNEW = ApiProvider.getTablePDOCNEW(CASEID)\n                .then(data => {\n                    return data.data\n                })\n                .catch(err => {\n                    console.log(\"Andy test getTablePDOCNEW NG \" + JSON.stringify(err));\n                });\n            const PLOC = ApiProvider.getTablePLOC(CASEID)\n                .then(data => {\n                    const matadata = data.data\n                    return matadata[matadata.length - 1]\n                })\n                .catch(err => {\n                    console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n                });\n            Promise.all([PBASINFO, PDOCNEW, PLOC])\n                .then(result => {\n                    this.nis_status_shange(CASEID, result[0].PBASINGNINFO);\n                    return {\n                        PBASINGNINFO: result[0].PBASINGNINFO,\n                        // BEDNUMBER: result[0].BEDNUMBER,\n                        PDOCNEW: result[1],\n                        PLOC: result[2]\n                    }\n                })\n                .then(result => {\n                    this.setState({\n                        PBASINGNINFO: result.PBASINGNINFO,\n                        PDOCNEW: result.PDOCNEW,\n                        PLOC: result.PLOC\n                    })\n                })\n                .catch(err => {\n                    console.log(\"error\")\n                })\n\n        }\n    }\n\n    nis_status_shange(CASEID, PBASINGNINFO) {\n        const xm2 = new X2JS()\n        ApiProvider.getQENT(CASEID)\n            .then(data => {\n                this.setState({\n                    QENT: WardState.XM2JSON(data.data)\n                })\n            })\n            .catch(err => { console.log(err) })\n        ApiProvider.getQMNC(CASEID)\n            .then(data => {\n                // const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                this.setState({\n                    QMNC: WardState.XM2JSON(data.data)\n                })\n                const starttime = moment(PBASINGNINFO.PBIRTHDT, 'YYYYMMDD').format(\"YYYYMMDDHHmm\")\n                const endtime = moment().format('YYYYMMDDHHmm')\n                ApiProvider.getQTWPER(CASEID, starttime, endtime)\n                    .then(data => {\n                        const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                        var weightlist = []\n                        for (let index = 0; index < parsedata.length; index++) {\n                            const element = parsedata[index];\n                            if (element.type === 'TW') {\n                                weightlist.push(element)\n                            }\n                        }\n                        this.setState({ QTWER: weightlist })\n                    })\n                    .catch(err => {\n                        console.log(\"Andy test getQTWPER NG \" + JSON.stringify(err));\n                    });\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n    }\n\n\n\n\n    onChange = (activkey) => {\n        this.setState({\n            tabstring: activkey\n        }\n        )\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    OptionSelectRender() {\n        function addzero(value) {\n            if (value < 10) {\n                return \"0\" + value\n            }\n            return value\n        }\n        function optionselect(LISTBED) {\n            const dataoption = LISTBED.map(function (info, index, array) {\n                return (\n                    <Option key={index} value={Number(info.HBEDNO)}>病床{addzero(parseInt(info.HBEDNO))}</Option>\n                );\n            })\n            return dataoption\n\n        }\n        const BedList = this.props.location.state.source\n        console.log(BedList)\n        const { Option } = Select;\n        const BEDNUMBER = Number(this.props.location.state.BEDNUMBER)\n        if (BedList !== null) {\n            return (\n                <Select defaultValue={Number(BEDNUMBER)} style={{ width: 120 }} onChange={this.selectchange}>\n                    {optionselect(BedList)}\n                </Select>\n            );\n        }\n        return null\n    }\n    fixpatientDate = (data) => {\n        const transdata = {\n            'cause': '住院原因',\n            'car_pho': '主要照顧者電話',\n            'care': '主要照顧者',\n            'con_1': '聯絡人1',\n            'con_p11': '聯絡人1電話',\n            'con_2': '聯絡人2',\n            'con_p21': '聯絡人2電話',\n            'dvs': '住院時生命徵象',\n            'habit': '飲食狀況',\n            'oxy': '住院時氧和評估',\n            'h_val': '住院時頭圍',\n            'b_val': '住院時胸圍',\n            'tall': '住院時身高',\n            'weight': '住院時體重'\n        }\n\n        const patientDate = []\n\n        for (let index in transdata) {\n            if (data[index] !== \"\") {\n                patientDate.push([transdata[index], data[index]])\n            }\n        }\n\n        return patientDate\n    }\n    render() {\n        function apiStatus(value) {\n            if (Array.isArray(value)) {\n                if (value.length === 0) {\n                    return false\n                }\n                return true\n            }\n            if (value === null || value === undefined || value === \"\") {\n                return false\n            }\n            return true\n        }\n        const { PLOC, PLOCSTART } = this.state\n        if (!apiStatus(PLOCSTART) || !apiStatus(PLOC)) {\n            return <Icon type=\"loading\" />\n        }\n\n\n\n\n        function statusPersion(persionstatus, QMNC, QTWER, Birthday) {\n            console.log(persionstatus)\n            if (persionstatus.length === 0) {\n                const BornWeight = WardState.BornWeight(QTWER, Birthday)\n                const BornWeeks = QMNC.weeks\n                const BornDays = QMNC.days\n                return {\n                    BornWeight: BornWeight,\n                    BornWeeks: BornWeeks,\n                    BornDays: BornDays\n                }\n            }\n            const Weight = Number(persionstatus[0].bweight) * 1000\n            const BornWeeks = Number(persionstatus[0].bweek)\n            const BornDays = Number(persionstatus[0].bday)\n            return {\n                BornWeight: Weight,\n                BornWeeks: BornWeeks,\n                BornDays: BornDays\n            }\n        }\n        function valueFormat(value) {\n            if (value === \"\" || value === null || value === undefined || value === 0) {\n                return \"--\"\n            }\n            return value.toString()\n        }\n        const USERDATA = this.state.PBASINGNINFO\n        if (USERDATA.length === 0) {\n            return <Icon type=\"loading\" />\n        }\n        const BEDNUMBER = Number(this.props.location.state.BEDNUMBER)\n        const CASEID = this.props.location.state.CASEID\n        const HISID = this.props.location.state.HISID\n        const DOCLIST = this.state.PDOCNEW\n        const ploc = this.state.PLOC\n        const transintime = ploc.PLOCTM.toString()\n        const transindt = ploc.PLOCDT.toString()\n        const transinid = \"NICU\" + transindt + transintime\n        const { TabPane } = Tabs;\n        // const selectrender = this.OptionSelectRender()\n        const Birthday = USERDATA.PBIRTHDT\n        const { persionstatus, QMNC, QTWER } = this.state\n        const BornWeight = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornWeight\n        const BornWeeks = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornWeeks\n        const BornDays = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornDays\n        const Weight = WardState.NewestWeight(QTWER)\n        // const weightList = WeightList.data.outmsg.resconts.rescont\n        const caseinfo = {\n            \"HISID\": HISID,\n            \"CASEID\": CASEID,\n            \"WEEK_BORN\": BornWeeks,\n            \"DAY_BORN\": BornDays,\n            \"TRANSINID\": transinid,\n            \"TRANSINDT\": transindt,\n            \"WEIGHT\": QTWER,\n            \"PBASINGNINFO\": USERDATA,\n            \"PLOCSTART\": this.state.PLOCSTART\n        }\n        const patientDetail = this.fixpatientDate(this.state.QENT)\n        const status = {\n            date: moment(Birthday, \"YYYYMMDD\").valueOf(),\n            week: BornWeeks,\n            day: BornDays\n        }\n        const AgeStatus = WardState.CalculateAge(status)\n        return (\n            <div>\n                <div style={{ display: 'flex', justifyContent: \"space-between\", alignItems: 'center', height: \"40px\", marginTop: \"10px\", padding: \"8px\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", backgroundColor: \"#71b0e46e\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(6,auto)\", gridColumnGap: \"10px\", alignItems: \"center\" }}>\n                        <div style={{ fontWeight: \"600\", padding: \"0px 4px\", color: \"black\", fontSize: \"16px\" }}>\n                            NICU-{bednumberformat(Number(BEDNUMBER))}\n                            <span style={{ lineHeight: \"30px\", fontSize: \"20px\", padding: \"0px 4px\" }}>{USERDATA.PNAMEC.toString().trim()}</span>\n                            {HISID}\n                        </div>\n                        <t2 style={{ alignItems: \"center\" }}>\n                            生日:<span style={{ fontWeight: \"600\", color: \"black\" }}>{moment(Birthday, \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</span>\n                        </t2>\n                        <t2>\n                            週數: {valueFormat(caseinfo.WEEK_BORN)}+{valueFormat(caseinfo.DAY_BORN)} > <spam style={{ fontWeight: \"600\", color: \"black\" }}>{AgeStatus}</spam>\n                        </t2>\n                        <t2>\n                            體重： {valueFormat(BornWeight)}g > <spam style={{ fontWeight: \"600\", color: \"black\" }}>{valueFormat(Weight)}</spam>\n                        </t2>\n                        <t2 style={{ fontWeight: \"600\", color: \"black\" }}>住院第 天</t2>\n                        <t2 style={{ color: \"blue\", textDecoration: \"underline\", cursor: \"pointer\" }} onClick={this.showModal}>入院評估</t2>\n                        <Modal\n                            title=\"病人基本資料\"\n                            visible={this.state.visible}\n                            onOk={this.handleOk}\n                            onCancel={this.handleCancel}\n                            width={800}\n                            footer={null}>\n                            <Patientinfo caseinfo={caseinfo} patientDetail={patientDetail}></Patientinfo>\n                        </Modal>\n                    </div>\n                </div>\n                <Tabs defaultActiveKey={this.state.tabstring} tabPosition={'top'} onChange={this.onChange}>\n                    <TabPane tab=\"時間點檢視\" key=\"時間點檢視\">\n                        <Crosssectionlayout parentDateCallback={this.callback} caseinfo={caseinfo}></Crosssectionlayout>\n                    </TabPane>\n                    <TabPane tab=\"時間軸檢視\" key=\"時間軸檢視\">\n                        <Chroniclelayout caseinfo={caseinfo}></Chroniclelayout>\n                    </TabPane>\n                    <TabPane tab=\"輸出入細節\" key=\"輸出入細節\">\n                        <Flowsheetlayout caseinfo={caseinfo}></Flowsheetlayout>\n                    </TabPane>\n                    <TabPane tab=\"檢驗及報告\" key=\"檢驗及報告\">\n                        <Examreport caseinfo={caseinfo}>></Examreport>\n                    </TabPane>\n                    <TabPane tab=\"醫囑及藥囑\" key=\"醫囑及藥囑\">\n                        <Orderview caseinfo={caseinfo}>></Orderview>\n                    </TabPane>\n                    <TabPane tab=\"跨團隊紀錄\" key=\"跨團隊紀錄\">\n                        <Noteview caseinfo={caseinfo}>></Noteview>\n                    </TabPane>\n                    <TabPane tab=\"呼吸評估\" key=\"呼吸評估\">\n                        <RTview caseinfo={caseinfo}>></RTview>\n                    </TabPane>\n                    <TabPane tab=\"營養評估\" key=\"營養評估\">\n                        <Nurtionview caseinfo={caseinfo}>></Nurtionview>\n                    </TabPane>\n                    <TabPane tab=\"感染評估\" key=\"感染評估\">\n                        <Infectionview caseinfo={caseinfo}>></Infectionview>\n                    </TabPane>\n                    <TabPane tab=\"行事曆及註記\" key=\"行事曆及註記\">\n                        <Scheduleview caseinfo={caseinfo}>></Scheduleview>\n                    </TabPane>\n                </Tabs>\n            </div>\n        );\n    }\n}\n\nexport default Patientviewlayout;\n","import React, { Component } from 'react';\nimport { Table, Input, Select, Button, Modal, Icon } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider';\nconst { confirm } = Modal;\n\nclass Powersetting extends Component {\n    constructor(props) {\n        super();\n\n        this.addUserdata = this.addUserdata.bind(this)\n        this.adduserhandleChange = this.adduserhandleChange.bind(this)\n    }\n\n    state = {\n        MouseClick: 0,\n        name: '',\n        role: 0,\n        adduser: undefined,\n        userList: [],\n        power: ['僅可瀏覽病房總覽、歷史資料查詢', '可瀏覽和編輯病房總覽、歷史資料查詢', '可瀏覽和編輯權限設定、系統摘要'],\n        powerName: ['唯讀使用者', '一般使用者', '系統管理者'],\n        visible: false,\n        radioValue: 0,\n        pwdRadio: true,\n        inputUsername: '',\n        inputPassword: '',\n        inputName: '',\n        inputDoctorid: '',\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        this.nameChange = this.nameChange.bind(this)\n        this.queryUserdata = this.queryUserdata.bind(this)\n        this.inputuserName = this.inputuserName.bind(this)\n        this.inputPassword = this.inputPassword.bind(this)\n        this.inputName = this.inputName.bind(this)\n        this.inputDoctorid = this.inputDoctorid.bind(this)\n\n        ApiProvider.getAlluser()\n            .then(data => {\n                this.setState({ userList: data.data })\n            })\n            .catch(err => { })\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n\n    radioOnChange = e => {\n        this.setState({\n            radioValue: e.target.value,\n        }, () => {\n            if (this.state.radioValue === 1) {\n                this.setState({\n                    pwdRadio: true,\n                })\n                console.log(this.state.radioValue)\n            } else if (this.state.radioValue === 0) {\n                this.setState({\n                    pwdRadio: false,\n                })\n                console.log(this.state.radioValue)\n            }\n        })\n    };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    MouseClickTable(record) {\n        this.setState({\n            MouseClick: record\n        })\n    }\n\n    queryUserdata() {\n        const { userList, role } = this.state\n        let fixData = userList\n\n        if (role != 0) {\n            fixData = fixData.filter(data => data.role == (role - 1))\n        }\n\n        if (this.state.name !== '') {\n            console.log(this.state.name)\n            fixData = fixData.filter(data => data.name.match(this.state.name) != null)\n        }\n        return fixData\n    }\n\n    addUserdata() {//sso 只剩下4種角色 其他先傳空直\n        ApiProvider.register(this.state.inputName, '', this.state.adduser, this.state.inputUsername, 'none')\n            .then(data => {\n                ApiProvider.getAlluser()\n                    .then(data => {\n                        this.setState({ userList: data.data, inputUsername: '', inputPassword: '', inputName: '', inputDoctorid: '' })\n                    })\n                    .catch(err => { })\n            })\n            .catch(err => { })\n        this.setState({\n            visible: false,\n        });\n    }\n\n\n    showDeleteConfirm(name, account, role, roleString) {\n        const set_State = this.setState.bind(this)\n        confirm({\n            title: '請問您確定要刪除此帳號嗎?',\n            content: <div>姓名：{name}<br />角色：{roleString}<br />帳號：{account}</div>,\n            okText: 'Yes',\n            okType: 'danger',\n            cancelText: 'No',\n            onOk() {\n                ApiProvider.deleteUser(name, role, account).then(data => {\n                    ApiProvider.getAlluser()\n                        .then(data => {\n                            set_State({ userList: data.data })\n                        })\n                        .catch(err => { })\n                }).catch(err => { })\n            },\n            onCancel() {\n            },\n        });\n    }\n\n    EditStyle(key, name, account, role, roleString) {\n        if (key === this.state.MouseClick) {\n            return (\n                <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gridColumnGap: '10px' }}>\n                    <div>\n                        <Button onClick={this.showDeleteConfirm.bind(this, name, account, role, roleString)} type=\"dashed\">\n                            刪除\n                        </Button>\n                    </div>\n                </div>\n            );\n        }\n        else return null\n    }\n\n    handleChange = (value) => {\n        this.setState({ role: value })\n    }\n\n    adduserhandleChange(value) {\n        this.setState({ adduser: value })\n    }\n\n    nameChange(event) {\n        this.setState({ name: event.target.value })\n    }\n\n    inputuserName(event) {\n        this.setState({ inputUsername: event.target.value })\n    }\n\n    inputPassword(event) {\n        this.setState({ inputPassword: event.target.value })\n    }\n\n    inputName(event) {\n        this.setState({ inputName: event.target.value })\n    }\n\n    inputDoctorid(event) {\n        this.setState({ inputDoctorid: event.target.value })\n    }\n\n    Searchbar = () => {\n        const { Option } = Select;\n\n        return (\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <div style={{ fontSize: '16px' }}>\n                        角色:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Select defaultValue={this.state.role} style={{ width: 150 }} onChange={this.handleChange}>\n                            <Option value={0}>全部使用者</Option>\n                            <Option value={1}>唯讀使用者</Option>\n                            <Option value={2}>一般使用者</Option>\n                        </Select>\n                    </div>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        姓名:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"輸入個案姓名\" onChange={this.nameChange}></Input>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n    render() {\n\n        const columns = [\n            {\n                title: '編號',\n                dataIndex: 'id',\n                key: 'id',\n                width: \"10%\"\n            },\n            {\n                title: '姓名',\n                dataIndex: 'name',\n                key: 'name',\n                width: \"10%\"\n            },\n            {\n                title: '醫師帳號',\n                dataIndex: 'account',\n                key: 'account',\n                width: \"12%\"\n            },\n            {\n                title: '角色',\n                dataIndex: 'role',\n                key: 'role',\n                width: \"10%\"\n            },\n            {\n                title: '權限',\n                dataIndex: 'power',\n                key: 'power',\n                width: \"40%\"\n            },\n            {\n                dataIndex: 'clickstate',\n                key: 'clickstate',\n                width: \"7%\"\n            }\n        ];\n\n        const fixData = this.queryUserdata()\n\n        const userData = fixData.map((data, index) => {\n            let roleString = ''\n            let powerString = ''\n\n            roleString = this.state.powerName[data.role]\n            powerString = this.state.power[data.role]\n\n            return [\n                {\n                    key: ++index,\n                    id: index,\n                    name: data.name,\n                    role: roleString,\n                    power: powerString,\n                    account: data.username,\n                    doctorid: data.doctorid,\n                    clickstate: this.EditStyle(index, data.name, data.username, data.role, roleString)\n                }\n            ]\n        })\n\n        let myNewArray = [].concat.apply([], userData);\n        const { Option } = Select;\n\n        // if (this.state.userList.length === 0) {\n        //     return (\n        //         <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>\n        //             <Icon type=\"loading\" />\n        //         </div>\n        //     );\n        // }\n\n        return (\n            <div>\n                <div style={{ display: \"flex\", justifyContent: 'space-between', alignItems: 'center' }}>\n                    {this.Searchbar()}\n                    <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                        <Button style={{ width: \"100%\" }} onClick={this.showModal}>新增帳號</Button>\n                        <Modal\n                            title=\"新增帳號\"\n                            visible={this.state.visible}\n                            onOk={this.addUserdata}\n                            onCancel={this.handleCancel}\n                            width=\"570px\"\n                        >\n                            <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n\n                            </div>\n                            <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\", marginTop: \"10px\" }}>\n                                <div style={{ marginLeft: \"10px\" }}>\n                                    醫師帳號：\n                                <Input id=\"username\" value={this.state.inputUsername} onChange={this.inputuserName} placeholder=\"輸入帳號\" style={{ width: '120px' }} />\n                                </div>\n                                <div style={{ marginLeft: \"10px\" }}>\n                                    姓名：\n                                <Input id=\"name\" placeholder=\"輸入姓名\" value={this.state.inputName} onChange={this.inputName} style={{ width: '120px' }} />\n                                </div>\n                            </div>\n                            <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\", marginTop: \"10px\", marginLeft: \"13px\" }}>\n                                <div style={{ marginLeft: \"0px\" }}>\n                                    角色：{this.state.pwdRadio ?\n                                        <Select placeholder='選擇角色' style={{ width: 150 }} onChange={this.adduserhandleChange.bind(this)}>\n                                            <Option value={0}>唯讀使用者</Option>\n                                            <Option value={1}>一般使用者</Option>\n                                        </Select> :\n                                        <Select placeholder='選擇角色' style={{ width: 150 }} onChange={this.adduserhandleChange.bind(this)}>\n                                            <Option value={2}>系統設定管理員</Option>\n                                        </Select>}\n                                </div>\n                            </div>\n                            <div>\n                            </div>\n                        </Modal>\n                    </div>\n                </div>\n                <div style={{ marginTop: '20px' }}>\n                    <Table columns={columns} dataSource={myNewArray} onRow={record => {\n                        return {\n                            onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                            onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                        };\n                    }} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Powersetting;\n","import React, { Component } from 'react';\nimport { Table, Icon } from 'antd';\n\nclass Systemlogtable extends Component {\n    state = {\n        MouseClick: 0\n    }\n\n    MouseClickTable(record) {\n        this.setState({\n            MouseClick: record\n        })\n    }\n\n    render() {\n\n        const powerName = ['唯讀使用者', '一般使用者', '系統管理員']\n        const loginlog_table = this.props.loginlogList.map(\n            (info, index) => {\n                let managerName = ''\n                let dateTime = info.time.split(\"T\")[0] + ' ' + info.time.split(\"T\")[1].split(\".\")[0]\n\n                managerName = powerName[info.role]\n\n                return {\n                    key: index,\n                    time: dateTime,\n                    event: 'User ' + info.name + '(' + managerName + ') login system'\n                }\n            }\n        )\n\n        const apilog_table = this.props.apilogList.map((data, index) => {\n            if (data !== null) {\n                let date = data.split(\"- -\")[1].split(\"]\")[0].split(\"[\")[1].split(\" \")[0].split(\"/\")\n                const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n                for (let j = 0; j < months.length; j++) {\n                    if (date[1] === months[j]) {\n                        date[1] = months.indexOf(months[j]) + 1\n                    }\n                }\n                if (date[1] < 10) {\n                    date[1] = '0' + date[1]\n                }\n                let time = date[2].split(\":\")[0] + \"-\" + date[1] + \"-\" + date[0] + \" \" + date[2].split(\":\")[1] + \":\" + date[2].split(\":\")[2] + \":\" + date[2].split(\":\")[3]\n                let content = data.split(\"- -\")[1].split(\"]\")[1]\n\n                return {\n                    key: index,\n                    time: time,\n                    event: content\n                }\n            }\n            return null\n        })\n\n        const columns = [\n            {\n                title: '記錄時間',\n                dataIndex: 'time',\n                key: 'time',\n                width: \"1%\"\n            },\n            {\n                title: '事件',\n                dataIndex: 'event',\n                key: 'event',\n                width: \"10%\"\n            }\n        ]\n\n        // if (loginlog_table.length === 0 || apilog_table.length === 0) {\n        //     return (\n        //         <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>\n        //             <Icon type=\"loading\" />\n        //         </div>\n        //     );\n        // }\n\n        return (\n            <div style={{ marginTop: '20px' }}>\n                {\n                    this.props.optionValue ? <Table columns={columns} dataSource={apilog_table} onRow={record => {\n                        return {\n                            onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                            onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                        }\n                    }} pagination={{\n                        onChange: (page, pageSize) => {\n                            //console.log('current page: ', page)\n                            this.props.getPages(page)\n                        }\n                    }} /> :\n                        <Table columns={columns} dataSource={loginlog_table} onRow={record => {\n                            return {\n                                onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                                onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                            }\n                        }} pagination={{\n                            onChange: (page, pageSize) => {\n                                //console.log('current page: ', page)\n                                this.props.getPages(page)\n                            }\n                        }} />\n                }\n            </div>\n        )\n    }\n}\n\nexport default Systemlogtable\n","import React, { Component } from 'react';\nimport { Progress, Select, DatePicker } from 'antd';\nimport Systemlogtable from './Systemlogtable'\nimport * as ApiProvider from '../API/ApiProvider';\n\nclass Systemlog extends Component {\n\n    state = { startTime: \"\", endTime: \"\", totalSpace: 0, usingSpace: 0, percent: 0, option: 0, loginlogList: [], apilogList: [], page: 1 }\n\n    componentDidMount() {\n        ApiProvider.getSpace()\n            .then(data => {\n                const totalSpace = data.data[0].total / 1024 / 1024 / 1024\n                const usingSpace = (data.data[0].total - data.data[0].unuse) / 1024 / 1024 / 1024\n                const percent = (usingSpace / totalSpace) * 100\n                this.setState({ totalSpace: totalSpace.toFixed(2), usingSpace: usingSpace.toFixed(2), percent: percent.toFixed(2) })\n            })\n            .catch(err => { })\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    onChange(date, dateString) {\n        this.setState({ startTime: dateString[0], endTime: dateString[1] }, () => {\n            if (this.state.option === 0) {\n                this.queryLoginLogdata()\n            } else if (this.state.option === 1) {\n                this.queryApiLogdata()\n            }\n        });\n    }\n\n    queryLoginLogdata() {\n        if (this.state.startTime !== \"\" && this.state.endTime !== \"\") {\n            const st = new Date(this.state.startTime.split('-')[0], this.state.startTime.split('-')[1] - 1, this.state.startTime.split('-')[2]).toISOString().split('.')[0];\n            const et = new Date(this.state.endTime.split('-')[0], this.state.endTime.split('-')[1] - 1, this.state.endTime.split('-')[2]).toISOString().split('.')[0];\n\n            ApiProvider.getLoginlog(st, et)\n                .then(data => {\n                    this.setState({ loginlogList: data.data, apilogList: [] })\n                })\n                .catch(err => { })\n        }\n    }\n\n    queryApiLogdata() {\n        if (this.state.startTime !== \"\" && this.state.endTime !== \"\") {\n            ApiProvider.getApilog(this.state.startTime)\n                .then(data => {\n                    this.setState({ apilogList: data.data, loginlogList: [] })\n                })\n                .catch(err => { })\n        }\n    }\n\n    getPages(pages) {\n        this.setState({ page: pages }, () => {\n            //console.log('current page: ', this.state.page)\n        })\n    }\n\n    handleChange(value) {\n        this.setState({ option: value })\n    }\n    render() {\n        const { Option } = Select;\n        const { RangePicker } = DatePicker;\n        const onChange = this.onChange.bind(this);\n\n        return (\n            <div>\n                <div style={{ fontSize: '22px' }}>系統空間使用狀況</div>\n                <div style={{ marginTop: \"10px\" }}><Progress percent={this.state.percent} showInfo={false} /></div>\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginTop: \"10px\" }}>\n                    <div>\n                        <div>已使用空間/總空間</div>\n                        <div>{this.state.usingSpace}GB({this.state.percent}%)/{this.state.totalSpace}GB</div>\n                    </div>\n                    <div>\n                        <div>收案中的個案資料0.9GB(10.5%)</div>\n                        <div>0.9GB(10.5%)</div>\n                    </div>\n                </div>\n                <div style={{ marginTop: '20px' }}>\n                    <div style={{ fontSize: '22px' }}>Event Log</div>\n                    <div style={{ marginTop: \"10px\" }}>\n                        <Select placeholder='選擇log' style={{ width: 200 }} onChange={this.handleChange.bind(this)}>\n                            <Option value={0}>Login log</Option>\n                            <Option value={1}>API access log</Option>\n                        </Select>\n                        <RangePicker onChange={onChange} style={{ marginLeft: \"10px\", width: \"250px\" }} />\n                    </div>\n                    <div style={{ marginTop: '10px' }}>\n                        <Systemlogtable loginlogList={this.state.loginlogList} apilogList={this.state.apilogList} optionValue={this.state.option} getPages={this.getPages.bind(this)} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Systemlog\n","import React, { Component } from 'react';\nimport { Tabs } from 'antd';\nimport Powersetting from '../Systemgroup/powersetting'\nimport Systemlog from '../Systemgroup/Systemlog'\n// import Warningmanage from '../Systemgroup/Warningmanage'\n\n\nclass Systemcontrol extends Component {\n    state = {\n        powerLogin: 0\n    }\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    render() {\n\n        const { TabPane } = Tabs;\n        const bollogin = this.state.powerLogin == 2\n        return (\n            <div style={{ paddingLeft: \"24px\", paddingRight: \"24px\" }}>\n                <div style={{ fontSize: \"22px\", height: '50px', lineHeight: \"50px\" }}>系統設定</div>\n                <Tabs defaultActiveKey=\"5\" onChange={console.log(\"click\")} å>\n                    <TabPane tab=\"權限設定\" key=\"1\" >\n                        <Powersetting />\n                    </TabPane>\n                    {\n                        bollogin && <TabPane tab=\"系統摘要\" key=\"2\" >\n                            <Systemlog />\n                        </TabPane>\n                    }\n                    {/*<TabPane tab=\"裝置連線狀態管理\" key=\"3\">\n                    </TabPane> \n                    <TabPane tab=\"病人資料狀態管理\" key=\"3\">\n                    </TabPane>                  \n                    <TabPane tab=\"警示管理\" key=\"5\">\n                        <Warningmanage/>\n                    </TabPane>*/}\n                </Tabs>\n            </div>\n        );\n    }\n}\n\nexport default Systemcontrol;\n","import React, { Component } from 'react';\nimport './Layout.scss';\nimport Sidermenu from './Sidermenu';\nimport Bedview from '../Wardview/Bedinfo/Bedview'\nimport Historyview from '../Content/Historyview'\nimport Patientviewlayout from '../Patientview/Patientviewlayout'\nimport Systemcontrol from '../Content/Systemcontrol'\nimport { Route, Switch, Link } from 'react-router-dom';\nimport { yyyymmddformat, weekdateformat } from '../Function/Timeformat'\nimport { Icon } from 'antd'\n\nclass Layoutframe extends Component {\n    onClickLogout() {\n        sessionStorage.clear();\n    }\n    render() {\n        const UsrName = sessionStorage.getItem('user');\n        const url_path = this.props.location.pathname\n        return (\n            <div style={{ height: \"100vh\" }}>\n                <div className=\"header\">\n                    {/*eslint-disable-next-line*/}\n                    <div style={{ display: 'flex', alignItems: 'center', fontweight: \"default\", fontsize: \"20px\" }}>\n                        <t1>北榮NICU智慧醫療系統</t1>\n                        <Sidermenu path={url_path} routes={this.props.route}></Sidermenu>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"10px\" }}>\n                        <t3 style={{ color: 'white' }}>{UsrName}醫師 {yyyymmddformat(new Date())} {weekdateformat(new Date())}</t3>\n                        <Link to=\"/Login\" onClick={() => this.onClickLogout()}>\n                            <Icon style={{ color: \"white\" }} type=\"logout\" />\n                        </Link>\n                    </div>\n                </div>\n                <div className=\"content\">\n                    <Switch>\n                        <Route path={`${this.props.match.path}/ward`} component={Bedview} />\n                        <Route path={`${this.props.match.path}/history`} component={Historyview} />\n                        <Route path={`${this.props.match.path}/system`} component={Systemcontrol} />\n                        <Route path={`${this.props.match.path}/patient`} component={Patientviewlayout} />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Layoutframe;\n","import React, { Component, cloneElement } from 'react';\nimport { Button, Icon } from 'antd';\nimport { Redirect } from 'react-router-dom'\nimport { Input } from 'antd'\nimport * as ApiProvider from '../API/ApiProvider';\nimport logo from '../Image/Logo/1200px-Taipei_Veterans_General_Hospital_Emblem.svg.png'\n\n\nclass Loginview extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: false,\n            permission: true,\n            statusstring: null\n        }\n        this.setRedirect = this.setRedirect.bind(this);   //把元件中的this繫結到handleClick方法中，這樣就會保持this一致          \n    };\n\n    componentDidMount() {\n        const account = document.querySelector('#account')\n        const password = document.querySelector('#password')\n        account.addEventListener('focus', () => {\n            account.addEventListener('keyup', e => {\n                if (e.keyCode === 13) {\n                    account.blur();\n                    password.focus();\n                }\n            })\n        })\n\n        password.addEventListener('focus', () => {\n            password.addEventListener('keyup', e => {\n                e.keyCode === 13 && this.setRedirect()\n            })\n        })\n    }\n\n    setRedirect = () => {\n        const account = document.getElementById(\"account\").value;\n        const password = document.getElementById(\"password\").value;\n        // const data = { username: account, password: password }\n        console.log(account, password)\n        ApiProvider.login(account, password)\n            .then(result => {\n                console.log(\"login OK \" + JSON.stringify(result));\n                const userData = result.data\n                const user = account\n                const role = userData[0].role\n                sessionStorage.setItem('user', user);\n                sessionStorage.setItem('role', role);\n                this.setState({\n                    redirect: true\n                })\n            })\n            .catch(err => {\n                console.log(\"login NG \" + JSON.stringify(err));\n                this.setState({\n                    permission: false,\n                    statusstring: \"帳號或密碼錯誤\"\n                })\n            });\n    }\n    renderRedirect = () => {\n        const login = sessionStorage.getItem('user');\n        const role = sessionStorage.getItem('role');\n        console.log(role)\n        if (login !== null) {\n            if (Number(role) === 2) {\n                return <Redirect from={\"/login\"} to={\"/nicu/system\"} />\n            }\n            return <Redirect from={\"/login\"} to={\"/nicu/ward/wardindex\"} />\n        }\n    }\n\n\n    render() {\n        return (\n            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"100vh\", width: \"100vw\", background: 'linear-gradient(to bottom, rgba(195, 239, 255, 1), rgba(46, 100, 164, 1))' }}>\n                {this.renderRedirect()}\n                <div style={{ textAlign: \"center\" }}>\n                    <img style={{ width: \"200px\" }} src={logo} alt='logo'></img>\n                    <div style={{ display: 'flex', justifyContent: \"center\", alignItems: \"center\", flexWrap: \"wrap\" }}>\n                        <div style={{ color: \"white\", fontSize: \"26px\", textAlign: \"center\", width: \"100%\" }}>台北榮民總醫院 NICU智慧醫療系統</div>\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div style={{ width: \"350px\", height: \"250px\", borderRadius: \"4px\", backgroundColor: \"white\", textAlign: \"center\", padding: '25px', position: \"relative\" }}>\n                                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                                    <div style={{ height: \"32px\", width: \"32px\", borderRadius: \"2px\", backgroundColor: \"rgba(46,100,164,1)\", color: \"white\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                        <Icon type=\"user\" style={{ color: \"white\" }} />\n                                    </div>\n                                    <Input id=\"account\" style={{ marginLeft: \"20px\" }} placeholder=\"請輸入3270主機帳號\"></Input>\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginTop: \"25px\" }}>\n                                    <div style={{ height: \"32px\", width: \"32px\", borderRadius: \"2px\", backgroundColor: \"rgba(46,100,164,1)\", color: \"white\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                        <Icon type=\"lock\" style={{ color: \"white\" }} />\n                                    </div>\n                                    <Input type=\"password\" id=\"password\" style={{ marginLeft: \"20px\" }} placeholder=\"請輸入密碼\"></Input>\n                                </div>\n                                <Button style={{ width: \"280px\", backgroundColor: \"rgba(46, 100, 164, 1)\", color: \"white\", marginTop: \"70px\" }} onClick={this.setRedirect}>登入</Button>\n                                <div style={{ display: this.state.permission ? \"none\" : \"block\", color: \"red\", fontSize: \"1rem\" }}>{this.state.statusstring}</div>\n                            </div>\n                        </div>\n                        <div style={{ width: \"100%\", justifyContent: \"center\", alignItems: \"center\", display: \"flex\" }}>200305.006-T</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Loginview\n","import React from 'react';\nimport Homepage from './Homepage'\nimport './App.scss';\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\nimport Layoutframe from './Layout/Layout'\nimport Loginview from './Layout/Loginview'\nimport 'antd/dist/antd.css';\nimport { ConfigProvider } from 'antd';\nimport zhTW from 'antd/es/locale/zh_TW';\nimport moment from 'moment';\nimport 'moment/locale/zh-tw';\nmoment.locale('zh-tw');\n\n\n\nfunction App() {\n  document.documentElement.style.fontSize = '14px'\n  return (\n    <ConfigProvider locale={zhTW}>\n      <BrowserRouter>\n        <Route exact path=\"/\" component={Homepage} />\n        <Redirect from={'/'} to={\"/login\"} />\n        <Route path=\"/nicu\" component={Layoutframe} />\n        <Route path=\"/login\" component={Loginview} />\n      </BrowserRouter>\n    </ConfigProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Chooseedit.def74a6e.svg\";","module.exports = __webpack_public_path__ + \"static/media/details.bc0482ca.svg\";"],"sourceRoot":""}