{"version":3,"sources":["Image/svg/edit2.svg","Image/svg/filter.svg","Image/svg/Wardview.svg","Image/svg/Historyview.svg","Image/svg/Control.svg","Image/svg/file1.svg","Image/svg/file2.svg","Image/svg/delete.svg","Image/svg/dragdown.svg","Image/svg/RT.svg","Image/svg/calender.svg","Image/svg/calenderwhite.svg","Image/Logo/1200px-Taipei_Veterans_General_Hospital_Emblem.svg.png","Image/svg/Edit.svg","Image/svg/ping.svg","Image/svg/pingwhite.svg","Image/svg/Chooseedit.svg","Homepage.js","Layout/Sidermenu.js","Function/Wardstate.js","API/ApiProvider.js","API/ApiGithub.js","Wardview/Wardcardstatus.js","Wardview/WardCardvalue-k.js","Function/Wardbedfunction.js","Wardview/Wardcard/Wardcarddetail.js","Wardview/Wardcard/UnpreviewWardCardDetail.js","Commonfunction.js","Wardview/Wardnote.js","Wardview/Bedinfo.js","Function/Timeformat.js","Patientview/CrossSectionView/Labview.js","Wardview/WardBedinformation.js","Module/Schedule_event.js","Wardview/Wardschedule.js","Wardview/Wardinfoindex.js","jsonResponse.js","Wardview/Wardlifechart.js","Wardview/Wardmonthafter.js","Wardview/Wardgrewchart.js","Patientview/Schedule/Notice.js","Patientview/CrossSectionView/Labviewitem.js","Function/FiliterReg.js","Wardview/Wardcardvitalsign.js","Wardview/Wardchart.js","Wardview/Wardunfousercheckbox.js","Patientview/Patientviewinfo.js","Wardview/Wardinfouser-k.js","Wardview/Bedinfo/Bedview.js","Content/Historyview.js","Patientview/CrossSectionView/Crossectionvitalsignchart.js","Patientview/CrossSectionView/Vitalsign.js","Patientview/CrossSectionView/Warningsettinglist.js","Patientview/Controlbar.js","Module/ioPageCell.js","Module/iopage.js","Module/ioDataFormat.js","Patientview/CrossSectionView/Crossection_io.js","Patientview/CrossSectionView/NonlabviewtableCell.js","Patientview/ExamReportModal.js","Patientview/CrossSectionView/Nonlabviewtable.js","Patientview/CrossSectionView/Nonlabview.js","Patientview/CrossSectionView/RTtable.js","Patientview/CrossSectionView/GAS.js","Patientview/CrossSectionView/RemarkModal.js","Patientview/CrossSectionView/RTbreathtablecell.js","Patientview/CrossSectionView/RTbreathetable.js","Patientview/CrossSectionView/RTbreathe.js","Patientview/Prescriptionorder/Prescriptionordertablecell.js","Patientview/Prescriptionorder/Prescriptionordertable.js","Patientview/Prescriptionorder/Prescriptionorder.js","Patientview/Treatmentorder/Treatmentordertablecell.js","Patientview/Treatmentorder/Treatmentordertable.js","Patientview/Treatmentorder/Treatmentorder.js","Module/Notecell.js","Module/Note.js","Patientview/CrossSectionView/Crosssectionschedule.js","Patientview/CrossSectionView/Crosssection_todo.js","Patientview/CrossSectionView/Crosssectionlayout.js","Patientview/ChronicleView/Chronic_io.js","Patientview/ChronicleView/ChronicTableCellTooltipCell.js","Patientview/ChronicleView/ChronicTableCell.js","Patientview/ChronicleView/ChronicTable.js","Patientview/ChronicleView/ChronicLab.js","Patientview/ChronicleView/ChronicRTTableCell.js","Patientview/ChronicleView/ChronicRTTable.js","Patientview/ChronicleView/ChronicRT.js","Patientview/ChronicleView/ChronicOrderTable.js","Patientview/ChronicleView/ChronicOrder.js","Resource/QTWPER.js","Patientview/ChronicleView/ChronicWeightTable.js","Patientview/ChronicleView/ChronicWeight.js","Module/Vitalxaxis.js","Module/Vitalxaxisbot.js","Patientview/ChronicleView/Chronic_vital.js","Patientview/ChronicleView/Chroniclelayout.js","Patientview/FlootSheetView/FlootSheetDataFormat.js","Patientview/FlootSheetView/Flootsheetio.js","Patientview/FlootSheetView/Flootsheetlayout.js","Patientview/ExamReport/Examchart.js","Patientview/ExamReport/ExamLabview.js","Data/RegularData.js","Patientview/ExamReport/ExamNonlabtablecell.js","Patientview/ExamReport/NonLabview.js","Patientview/ExamReport/ExamReport.js","Patientview/Orderview/Orderview.js","Patientview/NoteView/Note.js","Patientview/NoteView/NoteTimeFormat.js","Patientview/RT/RTview.js","Patientview/Nurtion/Nurtionfeedingcell.js","Patientview/Nurtion/Nurtionfeeding.js","Patientview/Nurtion/Nurtion_TPN_cell.js","Patientview/Nurtion/Watervaluechart.js","Patientview/Nurtion/Nurtion_TPN.js","Patientview/Nurtion/Nurtion.js","Patientview/Infection/Infectionlabtable.js","Patientview/Infection/Infectionlab.js","Patientview/Infection/Infection.js","Patientview/Schedule/Bedsidecard.js","Patientview/Schedule/Scheduletodo.js","Patientview/Schedule/Calendercell.js","Patientview/Schedule/Calender.js","Patientview/Schedule/Scheduleview.js","Patientview/Patientviewlayout.js","Systemgroup/powersetting.js","Systemgroup/Systemlogtable.js","Systemgroup/Systemlog.js","Content/Systemcontrol.js","Layout/Layout.js","Layout/Loginview.js","App.js","serviceWorker.js","index.js","Image/svg/details.svg"],"names":["module","exports","Homepage","Component","Sidermenu","state","powerLogin","Number","sessionStorage","getItem","powerLogins","this","setState","key","match","props","location","fromHistory","value","path","Selectkeynumber","rule","style","display","alignItems","marginLeft","height","gridTemplateColumns","gridColumnGap","to","class","select_hover","src","wardviewlogo","alt","historylogo","controllogo","withRouter","CalculateAge","BornStatus","startDate","moment","date","minus","diff","console","log","undefined","week","day","month","Math","floor","tempWeek","tempDay","overDay","statecolor","Labwarningvalue","title","BornWeight","weightlist","birthday","Array","isArray","findata","filter","index","rec_dat","type","length","parseInt","value2","NewestWeight","XM2JSON","data","xm2","X2JS","status","xml2js","outmsg","ret","parsedata","resconts","rescont","QMNCXM2JSON","Doc","DocList","Main","element","PDTYPE","PDDOCNMC","toString","trim","selectweight","List","array","valueOf","push","getPersionalStatus","hisid","axios","get","defaults","baseURL","config","headers","getAlluser","getQDC","caseno","st","et","getQENT","getQDVS","getQSPE","getOnePatientNotice","transinno","HISID","getAllPatient","getOnePatientRemark","transid","getOneRemark","remarkid","getOnePatientSchedule","getStoredProcedureORDLIST","dpt","docid","getStoredProcedureRESDBGAS","getStoredProcedureRESDGLU1","getStoredProcedureRESDISP","seq","getStoredProcedureRESLAB01","getStoredProcedureRESLAB02","getStoredProcedureRESLAB0C","getStoredProcedureRESSECT","getStoredProcedureTRTMNTQ1","getStoredProcedureUDORDER0","getTablePBASINFO","PHISTNUM","getTablePDOCNEW","PCASENO","getTablePLOC","createTodo","caseid","context","time","body","post","getOneTodo","getPatientwardvalueBoxPlot","startTime","endTime","interval","getVitalSignData","getHisidwardvalue","axiosGithub","create","timeout","getGitHubJson","string","Wardcarstatus","TRTMNTQ1","UDORDER0","FlagReg","TRQ1","ApiProvider","then","info","arr","ORSTATUS","catch","err","UDORDER","dataList","UDSTATUS","Reg","ApiGithub","Promise","all","result","parseFlagData","Flag","item","StatusUDORDER","some","UDDRGNAM","toLowerCase","UDGNAME","ParseValueUD","indexOf","StatusTRTMNTQ1","ORPROCED","ParseValueTRT","statusspan","source","style_change","AntiStatus","TPNStatus","NP0Status","FoleyStatus","DrainStatus","statuslist","InvasiveRespiratorStatus","NonInvasiveRespiratorStatus","RespiratorStatusParse","map","className","Respirator","wardstatestringformat","WardCard","useState","CenterMonitorValue","SetCenterMonitorValue","SetHID","Timer","SetTimer","ChangeAN","SetChangeAN","CenterNisValue","SetCenterNisValue","TimerNIS","SetTimerNIS","InitCenterData","useEffect","TimerID","setInterval","clearInterval","HID","phistnum","JSON","stringify","pd","abpd","ps","abps","pm","abpm","subtract","format","tempData","Wardstate","rec_tim","diastolic","systolic","sort","a","b","marginRight","color","hr","spo2","fontWeight","fontSize","gridColumnsGap","rr","bt","bednumberformat","number","gender","BornChangeWeek","BornChangeDay","BornChangeWeight","Wardcarddetail","hoverstate","clickstate","mouse_hover","edit_hover","visible","pbasignfo","birthdayweight","weight","bornweek","bornday","nowweight","report","nonreport","remark","TRANSINID","TRANSINDT","TRANSINTM","modatstatus","persionstatus","handleCancel","e","showModal","TRID","API_DATA","ORBGNDT","ORBGNTM","Reportfilter","name","sex","parseFloat","toFixed","pname","psex","bweight","bweek","bday","personstatus","from","PNAMEC","PSEX","Birthday","PBIRHDT","BornWeeks","BornDays","BornWeekAndDay","viewstatus","dataArrayRender","HBEDNO","defaultValue","onChange","margin","width","onCancel","footer","justifyContent","onClick","handleOk","valueFormat","statusPersion","QMNC","QTWER","weeks","days","previewmode","hbedlist","QTWPER","Weight","AgeStatus","role","cursor","editlogo","fileLogo","file2Logo","borderBottomWidth","borderBottomColor","borderBottomStyle","centerdata","centerMonitorData","padding","position","overflow","textOverflow","whiteSpace","pathname","Modelrender","Unpreviewwardcarddetail","databool","statedata","document","getElementById","bednumber","backgroundColor","format_bednumber","onOk","gridTemplateRows","gridRowGap","id","placeholder","getCalendarContainer","triggerNode","parentNode","WardcardNote","_isMounted","editstate","AnnoceRawData","AnnoceDisplayData","inputContent","onInputChange","bind","queryAllAnnounce","parse","announceArray","event","target","announce","doc","newAnnounce","Date","editor","findIndex","splice","announcelist","list","editstatus","localTime","utc","toDate","deleteimg","ondeleteannounce","placement","detail","annData","onMouseUp","editlist","border","borderCollapse","AddNewannouce","canceledit","okeditlist","Bedinformation","tableselect","sendReturnSelect","selectkey","idkey","localtime","Selectswitch","parentCallback","select","weekdatformat","weekday","Month_format","getMonth","getDate","getDay","Unselect_tablestyle","borderLeftWidth","marginTop","textAlign","borderStyle","borderWidth","borderColor","hbedcount","transoutcount","transincount","rtcount","nonrtcount","tpncount","yyyymmddformat","timestamp","getFullYear","formatmonth","Monthformat","yyyymmfirstweeksate","mmddformat","compareday","getTime","MG_VALUE","PROC_VALUE","CA_VALUE","Wardbedinformation","subselectdate","selectid","PickerDate","bedinfo","onChangeDate","datestring","apiData","callbackFunction","idnumber","trainDay","bTime","nTime","aTime","trans","RenderCell","pnamec","selectDateitem","filterdate","inType","outType","transIn","transoutIncountperson","transOut","transoutOutcountperson","transferListlayout","infolist","infoList","dateTime","i","Bedinfo","reverse","fontStyle","paddingLeft","showToday","disabledDate","current","startOf","allowClear","shape","icon","bedinfotitle","weekbedinfo","infoitem","Schedule_event_list","detailstate","items_interval","EditMode","selSchedule","Scheduledata","ID","selectdate","caseinfo","querySchedule","queryALLSchedule","propsDate","stateDate","timeNowStr","toISOString","writter","PBASINGNINFO","selectDate","PLOCSTART","getHours","getMinutes","ScheduleList","bedNumber","text","borderRadius","isInteger","detaillogo","changestate","onChangeEditMode","EditButton","EditControl","listevent","onClickCancel","onClickEnter","Wardschedule","scheduleData","Wardinfoindex","growdata","Male_befor","y","min","max","FeMale_before","Male_after","FeMale_after","WardlifeChart","weightList","svg_key","preWeight","d3","remove","drawChart","grewinfo","id_key","bornweeks","WEEK_BORN","borndays","DAY_BORN","BIRTHDAY","pregencyTimestamp","tick","Row","tickValues","domain","range","x","yAxis","ticks","tickSize","tickPadding","tickFormat","d","xAxis","yRightAxis","svg","append","attr","call","datasource","Wardmonthafter","Month","Wardgrewchart","test_items_interval","Data","WeightList","switch_data","window","screen","availWidth","testiteminterval","borderTopLeftRadius","borderTopRightRadius","SwitchTestItemInterval","Onchangetimeinterval","switch_monthy","Notice","noticeData","preTRID","queryPatientImportant","transinid","updateTime","disableEdit","tooltiptext","t","displayTime","fixData","remarkcell","Editor","TextArea","Input","marginBottom","renderEditButton","autoSize","Labviewitem","fixtitle","timevalue","ORRESDT","ORRESTM","formatTime","timeCell","Source","TimeRender","formatValue","ListForTime","DataList","pickerTime","ListForTimeAndTarget","forEach","ORRCPDT","split","QSPERegList","qspe","SettingValue","mode","valueList","qspearray","SelectElement","special","DataArray","DataJson","Labviewlayout","parser","dummy_mg","dummy_pct","dummy_ca","RESDGLU1","RESLAB02","RESLAB01","RESDBGAS","RESLAB0C","RESSECT","prePickerDate","preHID","preTRDT","TRDT","getLabData","TransinDate","MonthInterval","timestampInterval","selectMonthInterval","latestvalue","selected_parser","find","apply_condition","arrayLength","ORMM","CASEID","ORDSEQNO","RESDISP","selected_mapping","mappings","mapping","re","RegExp","regex_str","regex_flags","CONTENT","currentTimeStr","ORRCPTM","currentItemTimestamp","matchValue","updateLabviewIfNeed","currentIdx","ListEndData","RESDGLU1LIST","FiliterReg","RESLAB02LIST","RESLAB01LIST","RESDBGASLIST","RESSECT_CA_LIST","findLastestTargetValue","RESSECT_MG_LIST","RESSECT_PROC_LIST","GLUFAST","WBC","RSV01","SEG","RSV14","LYMP","RSV15","HGB","RSV03","PLATELET","RSV09","NA","RSV13","K","CA","P","RSV17","ALB","RSV02","CRP","RSV30","PH","SS07","PCO2","SS06","BE","SS01","PO2","SS08","BUN","RSV05","CR","RSV06","ALT","RSV11","AST","RSV12","TBIL","RSV08","DBIL","RSV25","ALKP","TOTALCA","IRON","RSV26","TIBC","RSV27","FERRITIN","FeSat","feSatformat","areainterval","nullvalue","NaN","TitleR","TitleRender","RSV32","WardcardvitalsignChart","sourcedata","getCenterMonitor","selectType","axisTop","axisBot","circlrcolor","MAX","MIN","Upper","Lower","transformmargin","cal_svg_transform","time_now","time_array","time_axis_array","x_axis_time","time_array_reverse","time_axis_array_reverse","formatHour","n","xAxisTop","multiFormat","cal_svg_hight","formatBoxWidth","viewwidth","lower","upper","LimitBoxTimer","interFormat","TimeArray","boxTime","formatBox","boxwidth","drawshadow","BoxPlotData","dataAbps","dataAbpd","q1","Q1","q2","Q2","q3","Q3","q4","Q4","Xtime","selectAll","enter","Time","SBP","DBP","WardChart","pbStatus","changePb","decidePB","nbpd","CMvalue","vitalvalue","limitValue","flexDirection","lineHeight","paddingRight","nbps","nbpm","colorshadow","data2","data_2_circlrcolor","Wardinfousercheckbox","checkboxselect","selectstate","updateOnePatientTodo","selectchange","checked","textDecoration","Patientinfo","preCID","QENT","CID","patientDetail","transdata","patientDate","fixpatientDate","patientData","Wardinfouser","Visible","setVisible","scheduleList","SetScheduleList","todoList","SetTodoList","Persionstatus","SetPersionstatus","PLOC","now","todayBegin","ListWeight","DOCLIST","PDOCNEW","MainDoc","LiveDoc","MainNur","ICUMainDoc","sytle","maxHeight","minHeight","displayTimeStr","Bedview","simplemode","SelectHISID","prePath","HBEDApiGet","simple_style","gridGap","Unsimple_style","wardcarddetaillist","component","WardinfouserK","filterdata","switch_titile_string","onWardcardDisplay","checkedChildren","unCheckedChildren","defaultChecked","Historyview","MouseClick","allPatientDisplayData","allPatientUnset","allPatientSet","selectedRowsArray","hospitalindex","selectedFile","fileList","uploading","doctor","transOuttime","deletedisable","selectedRowKeys","handleUpload","fileData","formData","FormData","file","res","filename","setedUser","patient","transouttime","unsetUser","onChangeName","onChangeHisid","record","resultD","url","URL","createObjectURL","Blob","link","createElement","href","setAttribute","appendChild","click","hospitalnumber","delete","dateString","Group","RangePicker","DatePicker","locale","rowSelection","selectedRows","getCheckboxProps","disabled","H","searchNO","searchTime","fn","transintime","searchName","search","genderswitch","patientinfo","birweek","transage","transicutime","maindoc","EditStyle","onRemove","newFileList","slice","beforeUpload","showUploadList","handleDisplaySwitchChange","Searchbar","exportClick","deleteHistoryUser","columns","dataIndex","dataSource","onRow","onMouseEnter","MouseClickTable","onMouseLeave","Crosssectionvitalsignchart","change","prepickerdate","presource","preinterval","prewidth","svg_id","PHID","PCID","optionvalue","pickerdate","endTimeStamp","start","end","formatTimer","nowDateForSeven","newDateForZero","formatPickerDate","QDVS","QOXY","HRNISLIST","RRNISLIST","SBPNISLIST","DBPNISLIST","BTNISLIST","Spo2NISLIST","pluse","breath","BT","temperature","concen","FormatNISData","centermonitorApiDataGet","prehid","comein","xAxisvalue","xAxisarray","formatxArray","xAxisbotvalue","formatbotaxis","xAxisbot","drawData","formatShift","paddingTop","Vitalsign","vital_days","visibleConflict","chackstate_one","chackstate_three","addNewWarningDateStr","addNewWarningHourStr","preHISID","checkStateNumber","Phistnum","timeCheck","checkNum","nowDaySeven","sevenFormat","PickerDateSeven","hourFormat","EndTime","Interval","formatvital_daysToInterval","gridarray","checknumber","onClickCheckgrid","End","intervalforhour","centervalueNull","centervalue","FilterList","filterData","Mid","centervaluetoNull","pickerTimer","top","left","onVitalCheck","Controlbar","display_Mode","item_array","scrollstate","sendData","itwm_array","sendDateData","parentDateCallback","scrollToAnchor","anchorName","anchorElement","scrollIntoView","checkedValues","onDateChange","bron","PBIRTHDT","bronDate","btn_style","unclick_style","display_style","displye_mode","right","background","boxShadow","zIndex","non_display_mode","check_area","check_text","btnlist","WEIGHT","btn","WardState","scrollpoint","add","endOf","alignContent","open_display","displaylogo","calcBorderLeft","intervalStatus","Status","IOpageCell","IntervalStatus","urine","weightData","urineValue","out_val2","cellValue","IOpage","QDC","PreStatus","PreIntervalStatus","PreCID","PrePickerDate","RegQDC","CarloriesCal","timer","interstatus","Result","getAPI","prestatus","preinterstatus","precid","mapcell","listTimerFormat","inter","TimerList","hourInterval","filterList","filterListALL","gridNumber","cellsum","sum","cellRenderSum","rows","rowColorStyle","CellRender","SE","Other","timerStruct","cellRender","stylechange","intervalstatus","timearray","pickerTimeArray","QDCLIST","formatData","caloriesCalonnam","nam","namstring","valueNumber","FormatFeedingList","FormatIVList","FormatUrineList","FormatOtherInList","FormatOtherOutList","lost","elementItem","Feeding","inp_val2","calories","IV","inp_val1","Urine","input_1","output_1","out_val1","OtherIn","OtherOut","formatQDCtoIO","timerFormat","feed","sumin","arr1","arr2","arr3","sumlist","sumIn","datamap","urineforWeightAndHourCrossection","sumout","sumOut","sumInTotal","Outout","element1","element2","sumInAndOut","cellMap","dataArray","formatInterval","formatUrineforTimer","sortData","ST","ET","StartTime","formatStartTime","formatStartAndEnd","SortDataArray","ioDataFormat","TitleCellIn","TitleCellOut","CrossectionIo","titlelab","NonlabviewtableCell","summary_str","select_parser","input","parsers","item_name","sample","lab","start_time","datetime","end_time","content","summerize","kv_pairs","summary","match_replacer","replacer","replace","caseId","hisId","datatime","result_kv_pairs","come","isSameDay","statusRender","statusFormat","canShowReport","overflowY","borderBottom","ExamReportModal","showDetail","Nonlabviewtable","modalVisible","modalReport","ORDLIST","preDate","PickerDateRange","nonLabApiGet","storeProcedureTime","FormatList","ORDLIST_Format","elemetnStatus","elementORBGNTime","ORDLISTFormat","nonlabcell","ORSPCN1","isSame","ORHISTNO","ORDSEQCN","titlecell","Nonlabviewlayout","RTtable","PreHID","PreTransInDate","GasListToCell","GasDataList","filterTimer","timeStamp","Object","keys","decideStyle","PHValue","PCO2Value","PO2Value","HCO3Value","SS04","BEValue","O2SatValue","SS05","FiO2Value","SS03","gasDataArray","compareDay","GasCell","tempStyle","tempValue","isNaN","formatGasData","getGasAPI","PreTRDT","searchbar","GasTitleCell","formatString","justifyItems","GAS","RemarkModal","preremark","preeditor","onOkClick","remarkValue","transinId","remarkId","fixTime","tempRemark","createTime","okText","cancelText","float","RTbreathetablecell","onCell","onEdit","newRemarkValue","setRemark","seachRemark","Mode","setting","Setting","onMouseMove","Mouse_move","Mouse_leave","minheight","borderLeft","borderTop","Edit_state","chooseedit","RTbreathetable","createRTbreathetable","titleCellRender","RTbreathe","QSPE","FilterReg","preST","preET","getQSPEApi","resultData","Prescriptionordertablecell","onMove","UDORDSEQ","checkStatus","valueStatus","Name","PName","UDRPNAME","Unit","UDDOSAGE","UDDUNIT","UDFREQN","UDROUTE","UDBGNDT","UDENDDT","on_Mouse","on_leave","Prescriptionordertable","SelectMode","Prescriptionordertabletable","Prescriptionorderlayout","classParser","InputMode","onChangeClass","onChangeinputKey","parseClass","inputs","allResult","onClickSearch","activeList","formatUDORDERStatus","clusteredData","filteredData","SortDataList","regex","filterDate","getGithub","getUDORDER0","Start","Option","Select","ControlBarRender","Treatmentordertablecell","QD","ORFREQN","infoRemark","ORENDDT","Treatmentordertable","TRTMNT01","Treatmentordertablecelllist","Treatmentorderlayout","DateRangeMode","handleChange","Search_bar","formatTRMINQtatus","getTreatmentQ1","Notecell","updatetime","updatedoctor","updatetime_format","wordBreak","Note","noteData","queryNotice","propDate","TRANSID","notelist","infoObj","updatedictor","CrossectionSchedule","CrosssectionTodo","queryTodo","renderTodoItem","Crosssectionlayout","Cross_item","SelectInterval","isLoading","callbackDateFunction","PickerTimeStamp","NIS_API_IO","Datetime","apiGLU","apiLAB2","apiLAB1","apiGAS","apiLABC","apiRESS","apiUDO","apiTRT","TimeStampPickerDate","POneDayRange","PThreeDayRange","display_item","Prescriptionorder","Treatmentorder","Inoutonchronic","Chronictablecelltooltip","preStartTimeStamp","loading","resultStr","parserName","inputBeginTime","parser_name","startTimeStamp","apiGet","tooltipelement","summaryParse","allContent","Cell","antIcon","spin","indicator","Chronictablecell","titleCell","objectElementCell","checkLineColor","lineColor","CellText","autoAdjustOverflow","overlayStyle","maxWidth","Tableonchronic","LabParse","SummaryParse","monthly","ApiPronider","chronic_state","fotmatTimerMonthly","preInterval","ApiGet","TimeLine","lineStyle","TimeInterval","grid","openTimeline","ressect","parsrList","arrayBiochemical","arrayBlood","arrayCultivate","arrayGAS","arrayRadiation","arrayOther","element_ORPROCED","BioFind","Biochemical","BloFind","Blood","CulFind","Cultivate","GasFind","RadFind","Radiation","arrayList","LabFormat","statestatus","title_list","entTimeStamp","starttime","slectInt","TimerForList","filterTimerForDataList","fotmatTimerForTimer","DataForTimer","toolTipID","Chroniclab","select_interval","Chronicrttablecell","cellelement","RTListRender","ToolTipRender","rtlogo","Chronicrttable","prePickerdate","timerList","listFilter","formatDataList","table_content","Chronicrt","Chronicordertable","whiteBlackListParser","tpnParsers","excludeBlackListResult","UDGNAME_condition","UDRPNAME_condition","UDGNAME_re","UDGNAME_match","UDRPNAME_re","UDRPNAME_match","getUDORDER","openTimeLine","changegridnumber","rawData","filteredRawData","selected_tpn_parser","found","name_regex_flags","selected_white_black_list_parser","Tablecell","formatWidth","elementStart","elementEnd","widthRate","clientWidth","formatStart","formatEnd","formatStartPosition","arraylist","shift","formatUDORDER0","ListData","startTimeFormat","endTimeFormat","changegridstyle","celltable","overflowX","Orderonchronic","Chronicweighttable","QTPWERList","TimerFormat","WeightListFormat","sortWeightList","lastelement","elementTime","Value","elementValue","sortWeight","elementWidthList","time1","elementWidth","FormatEndTimeStamp","datafilter","timeString","datafilterTime","widthArray","timeString2","time2","weightRectRender","render","round","Weightonchronic","Vitalxaxis","innerWidth","debounceWindowSize","debounce","recalcWindowSize","addEventListener","func","wait","immediate","args","arguments","callNow","clearTimeout","setTimeout","apply","removeEventListener","monthformat","select_date","select_time_format","nowtime","Start_time","intervaldays","xaxis","formatday","Vitalxaxisbot","End_time","Interval_grid","pickerDate","duration","hour","isBefore","hours","asHours","Vitalonchronic","check_state_one","check_state_three","check_state_oneweek","check_state_twoweek","statussource","sourcehandleChange","onClickCheckgrid_one","onClickCheckgrid_three","onClickCheckgrid_oneweek","onClickCheckgrid_twoweek","endtime","formatPickerTimer","fromInfection","onSelectchange","Interval_grid_box","Chroniclelayout","statuschange","onChangeCross","button","filterlogo","formatIOData","filterString","line","pos","compare","groupArray","arrList","comparevalue","filterarray","mapCellrender","ArrayList","formatColor","formatBackgroundColor","valueToInit","valueToVar","vallNull","cellStringArray","timeForList","elementList","valueSum","borderRight","cell","Flootsheetio","itemNumber","formatDayData","Infusion","FlootSheetDataFormat","toUpperCase","ALINE","filterIV","PICC","mapInfusion","mapBlood","mapEat","mapBloodLoss","mapExudate","mapVomit","mapDrainage","Puncture","mapPunctureOut","mapPunctureIn","Dialysis","mapDialysisIn","mapDialysisOut","mapDialysisTotal","Rinse","mapRinseIn","mapRinseOut","Stool","mapStool","mapStimulation","mapUrine","dateArr","generateDateColumn1","Flowsheetlayout","ApiData","DateTime","apiQSPE","dataJson","splist","specialListRender","Examchart","decideValue","lineChart","sT","endT","fixLineChart","div","curve","lines","on","transition","html","pageX","pageY","lineCharttitle","wordWrap","Labview","Selectus","SelectStatus","IRParse","titleSearch","parentTitleCallback","showModel","charttableview","itemValue","flex","showDate","temp","LabDataList","SelectList","SelectTitlefilter","selectdata","SelectTitleRender","infoString","fixLineChartData","ExamLab","getPopupContainer","Examnonlabviewtable","resultKey","selectMode","StateMode","selectedClass","BGtime","formatPickerDateRangeToORDLIST","filterStateMode","filterInput","formatInputMode","sortfilteredData","Nonlabview","ClassMode","prestartTime","preendTime","Inputvaluesearch","onChangeState","Apiprovider","Examreport","selectTitle","callbackTitleFunction","PickerDateRangeChange","vallofnull","DateRange","selectData","st_timestamp","et_timestamp","CellData","Band","Seq","Lym","Hb","Hct","RSV04","Plt","Na","Cl","CaTotal","Cr","Alt","TBil","DBil","rGGT","RSV19","Alkp","Alb","Iron","RSV28","LDH","RSV10","RSV9","ck","RSV18","ckMB","Troponinl","PT","APTT","INR","pCO2","pO2","HCO3","O2Sat","FiO2","SS11","SS12","SS13","SS14","CaFree","SS15","Bun","SS16","SS17","GluBeside","GluLab","RSV16","TCB","MicroBil","elementOne","Seg","elementTwo","APIUpdate","SelectDataList","momentDate","selectvalue","Orderview","apidata","udata","tdata","dataRange","Noteview","display_data","contentdisplay","ADMDISP","ADMLIST","DISLIST","DISDISP","DTAROTQ4","DTASOAPQ","PCASELIST","ERDISP","PRGTXQRY","PRGTXQRYDIS","CPSLIST","CPSDISP","QPNOT","QPNOTDIS","OPSORAQ1","OPSORAQ2","SelectClass","NoteTime","Content","ADISTNO","ADICASE","SEQ","OPABGNDT","OPATIMES","times","ttype","LIVEPLOC","PLOCDT","substr","transdt","columnGap","gridAutoColumns","gridAutoFlow","row","ADMDATA","textType","textObj","DTSOAPTY","DTSOAPSQ","DTSOAPTX","newObj","idx","textResult","newList","dataFilter","PRGTYPE","PRGTX","cre_nam","pro_not","cellRander","object","tabIndex","SelectADMDISP","ADIDATE","ADISECT","DCASENO","SelectDISDISP","DDATEOUT","DADMSECT","DPT","DTPDEPT","DTPDATE","SelectDTASOAPQ","SECTNM","DTPDOCNM","DTPDOCID","SelectERDISP","PDISDT","PPSECT","PRGDT","PRGTM","groupfirstarray","v","DT","TN","PRGWARD","PRGBEDNO","PRGSECT","PRGENTNM","SelectPRGTXQRYDIS","CPSCASE","CPSOSEQ","CPSHIST","SelectCPSDISP","CPSENTDT","CPKSECT","CPSOSECT","CPKDOCN1","CPKDOCN2","CPKDOCN3","grouparray","SelectQPNOTDIS","valueten","year","timeFormat","OPAMANNM","OPACOD1","SelectOPSORAQ1","control","NotecontrolBar","renderContentArray","listRender","switchListRender","RTview","Nurtionfeedingcell","Moduledisplay","Nurtionfeedingorder","getAPIFeedingData","getTreatmentOrderFilter","DataCellRender","Nurtiontpncell","TPNListcellRender","TPNSubDatacellRender","TPNDATA","AA","Glu","Ca","Mg","TPNSubDataMap","RemarkData","Watervaluechart","rowdata","watervalueData","shiftDays","formatShiftDays","rectwidth","xAxisBottom","orindex","svgrect","nulldata","car","Caloriessum","model","ModalRender","Nurtionview","OtherFilterInput","OtherData","formatOtherInput","sumcar","Calories","shiftTimer","TimerArray","formatTimeArray","watervalueDataList","filterFeedind","filterOther","feedingSum","SumData2","IVSum","SumData","OtherSum","caseiddays","GrowthCurve","GrowthCurveControl","GrowthCurveControlBar","WaterValueControl","WaterValueControlBar","tpndata","feeddata","waterRender","WaterValueRender","Nurtionfeeding","Infectionlabtable","Datalist","Render","FilterData","CellRander","lineColoe","WBCList","BandList","SegList","LymList","PCTList","CRPList","WBCRender","BandRender","SegRender","LymRender","PCTRender","CRPRender","WBCcell","Bandcell","Segcell","Lymcell","PCTcell","CRPcell","switch_state","userdata","Infectionlab","Infectionview","intervalselect","hrdatasource","rrdatasource","spo2datasource","abpdatasource","nbpdatasource","btdatasource","apiClass","LabData","LabData2","Bedsidecard","remarkContent","queryPatientRemark","TODO_DONE","TODO_UNFINISH","Scheduletodo","displayMode","todolist","onItemCheck","itemToUpdate","queryPatientTodo","todolist_data","finish_data","finish_value","unfinish_data","finish_checkbox","unfinish_checkbox","onClickunfisish","onClickfinish","Calendercell","onClick1","CancelModule","clickindex","sendcallback","newDate","clickdate","today","stateswitch","justify","span","onClickCheck","weekdateformatcalender","scheduleArray","calenderlogo","calenderwhitelogo","disableday","Calender","calendermode","Clickdays","ClickDate","displayinfo","scheduleRawData","startTimestamp","endTimestamp","noticeRawData","open","getStartEndTime","monthfirstweekday","firstCellBegin","startTimestampStr","endTimestampStr","itemList","refactoredList","itemTimeStr","foundItemIndex","newItem","newEvent","writer","timestampdate","onClickdays","dateStr","dataOfDayIndex","weekcontext","dataOfDay","getDataFromTimestamp","weeknumber","firstMonthWeekDay","rowIndex","noticeOfDay","getNoticeFromTimestamp","calendermonthgroup","monthfirstweekdate","weekmonthmode","ShowModule","weekmode","setgroup","MonthPicker","SelectDatepickertype","modechange","Scheduleview","dateformat","exporttime","Patientviewlayout","TYPE","REMARK","tabstring","HBEDNUMBER","HBEDLIST","PBASINFO","matadata","nis_status_shange","activkey","getPersonStatus","BedList","BEDNUMBER","apiStatus","USERDATA","ploc","PLOCTM","transindt","TabPane","Tabs","ICUDays","transoutTime","formatICUDays","defaultActiveKey","tabPosition","tab","callback","confirm","Modal","Powersetting","adduser","userList","power","powerName","radioValue","pwdRadio","inputUsername","inputPassword","inputName","inputDoctorid","radioOnChange","nameChange","addUserdata","adduserhandleChange","queryUserdata","inputuserName","password","username","doctorid","account","roleString","set_State","okType","showDeleteConfirm","userData","powerString","myNewArray","concat","Systemlogtable","loginlog_table","loginlogList","managerName","apilog_table","apilogList","months","j","optionValue","pagination","page","pageSize","getPages","Systemlog","totalSpace","usingSpace","percent","option","total","unuse","queryLoginLogdata","queryApiLogdata","pages","showInfo","Systemcontrol","bollogin","Layoutframe","clear","UsrName","url_path","routes","route","onClickLogout","Loginview","setRedirect","user","setItem","redirect","permission","statusstring","renderRedirect","login","querySelector","keyCode","blur","focus","logo","flexWrap","App","documentElement","zhTW","exact","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,gECA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,gF,+aCA3CD,EAAOC,QAAU,IAA0B,kC,otBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,+DCA3CD,EAAOC,QAAU,IAA0B,wC,yHCU5BC,E,iLANP,OACI,kC,GAHWC,a,wFCMjBC,G,kNAEFC,MAAQ,CACJC,WAAYC,OAAOC,eAAeC,QAAQ,U,mFAI1C,IAAMC,EAAcH,OAAOC,eAAeC,QAAQ,SAClDE,KAAKC,SAAS,CAAEN,WAAYI,M,sCAGhBG,GAEZ,OAAQA,GACJ,IAAK,QACD,OAAO,EACX,IAAK,gBACD,OAAO,EACX,IAAK,eACD,OAAO,EACX,QACI,OAA4B,MAAxBA,EAAIC,MAAM,WACPH,KAAKI,MAAMC,SAASX,OAASM,KAAKI,MAAMC,SAASX,MAAMY,YAC/C,EAEJ,EAEc,MAArBJ,EAAIC,MAAM,QACH,EAEJ,M,mCAINI,GAAQ,IACTC,EAASR,KAAKI,MAAdI,KAER,OADkBR,KAAKS,gBAAgBD,KACrBD,I,+BAMlB,IAAMG,EAAOV,KAAKN,MAAMC,WACxB,OACI,yBAAKgB,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,WAAY,OAAQC,OAAQ,SAC7E,yBAAKJ,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,iBAAkBC,cAAe,SACjF,kBAAC,IAAD,CAAMC,GAAG,uBAAuBC,MAAOnB,KAAKoB,aAAa,GAAK,YAAc,eAAgBT,MAAO,CAAEC,QAAiB,GAARF,EAAY,OAAS,SAC/H,yBAAKW,IAAKC,IAAcC,IAAI,iBAC5B,qCACI,wBAAIJ,MAAOnB,KAAKoB,aAAa,GAAK,WAAa,eAA/C,0CAGR,kBAAC,IAAD,CAAMF,GAAG,gBAAgBC,MAAOnB,KAAKoB,aAAa,GAAK,YAAc,eAAgBT,MAAO,CAAEC,QAAiB,GAARF,EAAY,OAAS,SACxH,yBAAKW,IAAKG,IAAaD,IAAI,oBAC3B,qCACI,wBAAIJ,MAAOnB,KAAKoB,aAAa,GAAK,WAAa,eAA/C,0CAGR,kBAAC,IAAD,CAAMF,GAAG,eAAeC,MAAOnB,KAAKoB,aAAa,GAAK,YAAc,eAAgBT,MAAO,CAAEC,QAAiB,GAARF,EAAY,OAAS,SACvH,yBAAKW,IAAKI,IAAaF,IAAI,mBAC3B,qCACI,wBAAIJ,MAAOnB,KAAKoB,aAAa,GAAK,WAAa,eAA/C,oC,GA9DJ5B,cAuETkC,cAAWjC,G,0CC3EnB,SAASkC,EAAaC,GACzB,IAAMC,EAAYC,IAAOF,EAAWG,MAE9BC,EADUF,MACMG,KAAKJ,EAAW,QAEtC,GADAK,QAAQC,IAAIP,QACOQ,IAAfR,QAAgDQ,IAApBR,EAAWG,WAA0CK,IAApBR,EAAWS,WAAyCD,IAAnBR,EAAWU,IACzG,MAAO,2BAEX,GAAIV,EAAWS,MAAQ,GAAI,CACvB,IAAME,EAAQC,KAAKC,MAAOT,EAAS,IAC7BM,EAAME,KAAKC,MAAOT,EAAS,IACjC,OAAOO,EAAQ,EAAR,UAAeA,EAAf,kBAAyBD,EAAzB,oBAAqCA,EAArC,UAGX,IAAMI,EAAWF,KAAKC,MAAMb,EAAWS,MAAQT,EAAWU,IAAMN,GAAS,GACnEW,EAAUH,KAAKC,OAAOb,EAAWU,IAAMN,GAAS,GACtD,GAAIU,GAAY,GAAI,CAChB,IAAME,EAA4B,GAAjBF,EAAW,IAAUC,EAChCJ,EAAQC,KAAKC,MAAMG,EAAU,IAC7BN,EAAMM,EAAU,GACtB,OAAOL,EAAQ,EAAR,sBAAiBA,EAAjB,iBAA0BD,EAA1B,gCAAwCA,EAAxC,UAEP,IACMA,EAAMK,EACZ,MAAM,GAAN,OAFaD,EAEb,YAAkBJ,GAKnB,SAASO,EAAWnD,GACvB,MAAc,OAAVA,EACO,kBAEG,OAAVA,EACO,kBAGG,QAAVA,EACO,UAEG,QAAVA,EACO,UAEG,SAAVA,EACO,mBAEG,OAAVA,EACO,kBAEG,OAAVA,EACO,mBAEJ,KAuCJ,SAASoD,EAAgBvC,EAAOwC,GACnC,OAAc,YAAVA,KACIxC,EAAQ,KAAOA,EAAQ,QAIjB,QAAVwC,KACIxC,EAAQ,KAASA,EAAQ,SAInB,QAAVwC,KACIxC,EAAQ,IAAMA,EAAQ,QAIhB,aAAVwC,KACIxC,EAAQ,KAAUA,EAAQ,UAIpB,QAAVwC,KACIxC,EAAQ,KAAOA,EAAQ,SAIjB,OAAVwC,KACIxC,EAAQ,KAAOA,EAAQ,SAIjB,SAAVwC,KACIxC,EAAQ,IAAOA,EAAQ,SAIjB,MAAVwC,KACIxC,EAAQ,KAAOA,EAAQ,OAIjB,SAAVwC,KACIxC,GAAS,KAAOA,EAAQ,UAIlB,QAAVwC,GACIxC,EAAQ,OAIF,QAAVwC,GACIxC,EAAQ,OAIF,mBAAVwC,GACIxC,EAAQ,OAIF,OAAVwC,KACIxC,EAAQ,MAAQA,EAAQ,SAIlB,SAAVwC,KACIxC,EAAQ,IAAMA,EAAQ,QAIhB,OAAVwC,KACIxC,GAAS,GAAKA,EAAQ,OAIhB,QAAVwC,KACIxC,EAAQ,IAAMA,EAAQ,SAIhB,QAAVwC,GACIxC,EAAQ,OAIF,OAAVwC,GACIxC,EAAQ,OAIF,QAAVwC,GACIxC,EAAQ,QAIF,QAAVwC,GACIxC,EAAQ,QAIF,SAAVwC,GACIxC,EAAQ,OAIF,SAAVwC,GACIxC,EAAQ,QAIF,SAAVwC,GACIxC,EAAQ,QAIF,aAAVwC,KACIxC,EAAQ,GAAKA,EAAQ,QAIf,UAAVwC,GACIxC,EAAQ,4BAuCb,SAASyC,EAAWC,EAAYC,GACnC,QAAmBd,IAAfa,GAA2C,OAAfA,EAC5B,MAAO,KAEX,GAAIE,MAAMC,QAAQH,GAAa,CAC3B,IAAMI,EAAUJ,EAAWK,QAAO,SAAU/C,EAAOgD,GAC/C,OAAOhD,EAAMiD,UAAYN,GAA2B,OAAf3C,EAAMkD,QAE/C,OAAuB,IAAnBJ,EAAQK,OACD,EAECC,SAAsD,IAA7C/D,OAAOyD,EAAQA,EAAQK,OAAS,GAAGE,SAGxD,OAAOD,SAAqC,IAA5B/D,OAAOqD,EAAWW,SAInC,SAASC,EAAaZ,GACzB,QAAmBb,IAAfa,EACA,MAAO,KAEX,GAA0B,IAAtBA,EAAWS,OACX,OAAO,EAEX,GAAIP,MAAMC,QAAQH,GAAa,CAC3B,IAAMI,EAAUJ,EAAWK,QAAO,SAAU/C,EAAOgD,GAC/C,MAAsB,OAAfhD,EAAMkD,QAEjB,OAAuB,IAAnBJ,EAAQK,OACD,KAEJC,SAAqC,IAA5B/D,OAAOyD,EAAQ,GAAGO,SAGlC,OAAOD,SAAqC,IAA5B/D,OAAOqD,EAAWW,SAKnC,SAASE,EAAQC,GACpB,IAAMC,EAAM,IAAIC,IAChB,QAAa7B,IAAT2B,EACA,MAAO,GAEX,IAAMG,EAASF,EAAIG,OAAOJ,GAAMK,OAAOC,IACvC,GAAuB,IAAnBzE,OAAOsE,GAAe,CACtB,IAAMI,EAAYN,EAAIG,OAAOJ,GAAMK,OAAOG,SAASC,QACnD,OAAKrB,MAAMC,QAAQkB,GAGZA,EAFI,CAACA,GAIhB,MAAO,GAGJ,SAASG,EAAYV,GACxB,IAAMC,EAAM,IAAIC,IAChB,QAAa7B,IAAT2B,EACA,MAAO,GAEX,IAAMG,EAASF,EAAIG,OAAOJ,GAAMK,OAAOC,IACvC,OAAuB,IAAnBzE,OAAOsE,GACWF,EAAIG,OAAOJ,GAAMK,OAAOG,SAASC,QAGhD,GAGJ,SAASE,EAAIC,EAASlB,GACzB,QAAgBrB,IAAZuC,GAAqC,OAAZA,GAAgC,KAAZA,EAC7C,MAAO,GAEX,IAAMC,EAAOD,EAAQrB,QAAO,SAAUuB,EAAStB,GAC3C,OAAOsB,EAAQC,SAAWrB,KAE9B,OAAoB,IAAhBmB,EAAKlB,OACE,GAEJkB,EAAK,GAAGG,SAASC,WAAWC,OAGhC,SAASC,EAAaC,EAAMpD,GAC/B,QAAaK,IAAT+C,GAA+B,OAATA,EACtB,MAAO,KAGX,IADA,IAAIC,EAAQ,GACH7B,EAAQ,EAAGA,EAAQ4B,EAAKzB,OAAQH,IAAS,CAC9C,IAAMsB,EAAUM,EAAK5B,GACjBzB,IAAO+C,EAAQrB,QAAS,YAAY6B,UAAYtD,GAChDqD,EAAME,KAAKT,GAGnB,OAAqB,IAAjBO,EAAM1B,OACC,EAEsB,IAA1B9D,OAAOwF,EAAM,GAAGxB,Q,qCC7TpB,SAAS2B,EAAmBC,GACjC,OAAOC,IAAMC,IAAI,iCAAmCF,GAjCtDC,IAAME,SAASC,QAAU,8BA0EzB,IAAMC,EAAS,CAAEC,QAAS,CAAE,eAAgB,wBAgDrC,SAASC,IACd,OAAON,IAAMC,IAAI,cAqcZ,SAASM,EAAOC,EAAQC,EAAIC,GACjC,OAAOV,IAAMC,IAAI,OAASO,EAAS,IAAMC,EAAK,IAAMC,GAI/C,SAASC,EAAQH,GACtB,OAAOR,IAAMC,IAAI,QAAUO,GAItB,SAASI,EAAQJ,EAAQC,EAAIC,GAClC,OAAOV,IAAMC,IAAI,QAAUO,EAAS,IAAMC,EAAK,IAAMC,GAmBhD,SAASG,EAAQL,EAAQC,EAAIC,GAClC,OAAOV,IAAMC,IAAI,QAAUO,EAAS,IAAMC,EAAK,IAAMC,GAsDhD,SAASI,EAAoBC,EAAWC,EAAOP,EAAIC,GACxD,OAAOV,IAAMC,IAAI,8BAAgCc,EAAY,IAAMC,EAAQ,IAAMP,EAAK,IAAMC,GA+BvF,SAASO,IACd,OAAOjB,IAAMC,IAAI,6BA+DZ,SAASiB,EAAoBC,GAClC,OAAOnB,IAAMC,IAAI,qCAAuCkB,GA2BnD,SAASC,EAAaD,EAASE,EAAUrD,GAC9C,OAAOgC,IAAMC,IAAI,uBAAyBkB,EAAU,IAAME,EAAW,IAAMrD,GAkHtE,SAASsD,EAAsBP,EAAWzE,GAC/C,OAAO0D,IAAMC,IAAI,0BAA4Bc,EAAY,IAAMzE,GAwG1D,SAASiF,EAA0BxB,EAAOzD,EAAMkF,EAAKC,GAC1D,OAAOzB,IAAMC,IAAI,WAAaF,EAAQ,IAAMzD,EAAO,IAAMkF,EAAM,IAAMC,GAchE,SAASC,EAA2B3B,EAAOzD,GAChD,OAAO0D,IAAMC,IAAI,YAAcF,EAAQ,IAAMzD,GAIxC,SAASqF,GAA2B5B,EAAOzD,GAChD,OAAO0D,IAAMC,IAAI,YAAcF,EAAQ,IAAMzD,GAIxC,SAASsF,GAA0B7B,EAAOjD,EAAO0D,EAAQqB,GAC9D,OAAO7B,IAAMC,IAAI,WAAanD,EAAQ,IAAMiD,EAAQ,IAAMS,EAAS,IAAMqB,GASpE,SAASC,GAA2B/B,EAAOzD,GAChD,OAAO0D,IAAMC,IAAI,YAAcF,EAAQ,IAAMzD,GAIxC,SAASyF,GAA2BhC,EAAOzD,GAChD,OAAO0D,IAAMC,IAAI,YAAcF,EAAQ,IAAMzD,GAIxC,SAAS0F,GAA2BjC,EAAOzD,GAChD,OAAO0D,IAAMC,IAAI,YAAcF,EAAQ,IAAMzD,GAIxC,SAAS2F,GAA0BlC,EAAOjD,EAAO0E,EAAKC,GAC3D,OAAOzB,IAAMC,IAAI,WAAanD,EAAQ,IAAMiD,EAAQ,IAAMyB,EAAM,IAAMC,GAIjE,SAASS,GAA2BnC,EAAOS,GAChD,OAAOR,IAAMC,IAAI,YAAcF,EAAQ,IAAMS,GAIxC,SAAS2B,GAA2BpC,EAAOS,EAAQqB,GACxD,OAAO7B,IAAMC,IAAI,YAAcF,EAAQ,IAAMS,EAAS,IAAMqB,GAsBvD,SAASO,GAAiBC,GAC/B,OAAOrC,IAAMC,IAAI,YAAcoC,GAI1B,SAASC,GAAgBC,GAC9B,OAAOvC,IAAMC,IAAI,WAAasC,GAIzB,SAASC,GAAaD,GAC3B,OAAOvC,IAAMC,IAAI,QAAUsC,GAOtB,SAASE,GAAWC,EAAQC,EAASC,EAAM7B,EAAW/C,GAC3D,IAAM6E,EAAO,CACXH,OAAQA,EACRC,QAASA,EACTC,KAAMA,EACN7B,UAAWA,EACX/C,KAAMA,GAER,OAAOgC,IAAM8C,KAAK,kBAAmBD,GAchC,SAASE,GAAWhC,EAAW2B,GACpC,OAAO1C,IAAMC,IAAI,sBAAwBc,EAAY,IAAM2B,GAmMtD,SAASM,GAA2BjD,EAAOkD,EAAWC,EAASlF,EAAMmF,GAC1E,OAAOnD,IAAMC,IAAI,wCAA0CF,EAAQ,IAAMkD,EAAY,IAAMC,EAAU,IAAMlF,EAAO,IAAMmF,GAGnH,SAASC,GAAiBrD,EAAOkD,EAAWC,EAASlF,GAC1D,OAAOgC,IAAMC,IAAI,8BAAgCF,EAAQ,IAAMkD,EAAY,IAAMC,EAAU,IAAMlF,GAS5F,SAASqF,GAAkBtD,GAChC,OAAOC,IAAMC,IAAI,+BAAiCF,GC5zCpD,IAGIuD,GAActD,IAAMuD,OAAO,CAC3BpD,QAJiB,oEAKjBqD,QAAS,MAIN,SAASC,GAAcC,GAC1B,OAAOJ,GAAYrD,IAAIyD,G,IC4KZC,G,2MA/KX1J,MAAQ,CACJ2J,SAAU,GACVC,SAAU,GACVC,QAAS,I,mFAEQ,IAAD,SACcvJ,KAAKI,MAA3B4H,EADQ,EACRA,QAASF,EADD,EACCA,SACX0B,EAAOC,GAAuC3B,EAAUE,GACzD0B,MAAK,SAAA3F,GAKF,OAJgBA,EAAKA,KACYT,QAAO,SAAUqG,EAAMpG,EAAOqG,GAC3D,OAAiC,KAA1BhK,OAAO+J,EAAKE,WAA8C,KAA1BjK,OAAO+J,EAAKE,gBAI1DC,OAAM,SAAAC,OAGLC,EAAUP,GAAuC3B,EAAUE,EAAS,OACrE0B,MAAK,SAAA3F,GACF,IAAIoB,EAAO,GACL8E,EAAWlG,EAAKA,KACtB,GAAIZ,MAAMC,QAAQ6G,GACd,IAAK,IAAI1G,EAAQ,EAAGA,EAAQ0G,EAASvG,OAAQH,IAAS,CAEnC,KADA3D,OAAOqK,EAAS1G,GAAO2G,WAElC/E,EAAKG,KAAK2E,EAAS1G,IAI/B,OAAO4B,KAEV2E,OAAM,SAAAC,OAGLI,EAAMC,GAAwB,gBAC/BV,MAAK,SAAA3F,GACF,OAAOA,EAAKA,QAEf+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI4H,MAEpBM,QAAQC,IAAI,CAACd,EAAMQ,EAASG,IACvBT,MAAK,SAAAa,GACF,EAAKtK,SAAS,CACVoJ,SAAUkB,EAAO,GACjBjB,SAAUiB,EAAO,GACjBhB,QAASgB,EAAO,QAGvBT,OAAM,SAAAC,GACH7H,QAAQC,IAAI4H,Q,+BAoBpB,SAASS,EAAcnB,EAAUW,EAAST,EAAS9F,GAE/C,QAAgBrB,IAAZmH,GAAqC,OAAZA,EAAoB,OAAO,KACxD,IAAMkB,EAAOlB,EAAQjG,QAAO,SAAU/C,EAAOgD,EAAOqG,GAChD,OAAOrJ,EAAMmK,OAASjH,KAE1B,GAAoB,IAAhBgH,EAAK/G,OACL,OAAO,KAEX,IAAMiH,EAAgBX,EAAQY,MAAK,SAAUrK,EAAOgD,EAAOqG,GACvD,IAAMiB,EAAWtK,EAAMsK,SAASC,cAC1BC,EAAUxK,EAAMwK,QAAQD,cAI9B,OAHiBL,EAAK,GAAGO,aAAaJ,MAAK,SAAUrK,EAAOgD,EAAOqG,GAC/D,OAAOiB,EAASI,QAAQ1K,IAAU,GAAKwK,EAAQE,QAAQ1K,SAIzD2K,EAAiB7B,EAASuB,MAAK,SAAUrK,EAAOgD,EAAOqG,GACzD,IAAMuB,EAAW5K,EAAM4K,SAASL,cAKhC,OAJiBL,EAAK,GAAGW,cAAcR,MAAK,SAAUrK,EAAOgD,EAAOqG,GAChE,OAAiC,OAA1BuB,EAAShL,MAAMI,SAK9B,OAAsB,IAAlBoK,IAA8C,IAAnBO,EAMnC,SAASG,EAAWC,GAChB,MAAoB,eAAhBA,EAAOZ,KACA,gBAEC,gBAEhB,SAASa,EAAaD,GAClB,MAAoB,eAAhBA,EAAOZ,KACa,yBAAhBY,EAAOvH,KACA,aAES,+BAAhBuH,EAAOvH,KACA,cAES,SAAhBuH,EAAOvH,KACA,aAEJ,cAIHuH,EAAOvH,KACA,aAGA,cAKnB,IAAMiG,EAAUhK,KAAKN,MAAM4J,SACrBD,EAAWrJ,KAAKN,MAAM2J,SAGtBoB,EAAOzK,KAAKN,MAAM6J,QAGlBiC,EAAahB,EAAcnB,EAAUW,EAASS,EAAM,QACpDgB,EAAYjB,EAAcnB,EAAUW,EAASS,EAAM,OACnDiB,EAAYlB,EAAcnB,EAAUW,EAASS,EAAM,OACnDkB,EAAcnB,EAAcnB,EAAUW,EAASS,EAAM,SACrDmB,EAAcpB,EAAcnB,EAAUW,EAASS,EAAM,SAgBrDoB,EAXc,CAChB,CAAE,KAAQ,aAAc,KA9F5B,SAA+BC,EAA0BC,GACrD,OAAiC,IAA7BD,IAAsE,IAAhCC,EAC/B,SAEsB,IAA7BD,IAAqE,IAAhCC,EAC9B,SAEsB,IAA7BD,EACO,wBAEyB,IAAhCC,EACO,6BAEJ,KA8EcC,CAFQxB,EAAcnB,EAAUW,EAASS,EAAM,sBACpCD,EAAcnB,EAAUW,EAASS,EAAM,2BAKvE,CAAE,KAAQ,MAAO,KAAQkB,GACzB,CAAE,KAAQ,MAAO,KAAQD,GACzB,CAAE,KAAQ,MAAO,KAAQD,GACzB,CAAE,KAAQ,MAAO,KAAQD,GACzB,CAAE,KAAQ,QAAS,KAAQ,IAC3B,CAAE,KAAQ,eAAM,KAAQ,IACxB,CAAE,KAAQ,MAAO,KAAQI,IAGEK,KAAI,SAAUtC,EAAMpG,EAAOqG,GACtD,OACI,yBAAK1J,IAAKqD,EAAO2I,UAAWb,EAAW1B,IACnC,wBAAIuC,UAAWX,EAAa5B,IHrGzC,SAA+Be,GAClC,OAAQA,EAAKA,MACT,IAAK,aACD,MAZW,gCADUyB,EAaGzB,EAAK3G,MAX1B,uCAEQ,yBAAfoI,EACO,uCAEJ,qBAOH,IAAK,MACD,MAAO,MACX,IAAK,MACD,MAAO,MACX,IAAK,KACD,MAAO,KACX,IAAK,MACD,MAAO,MACX,IAAK,MACD,MAAO,MACX,IAAK,QACD,MAAO,QACX,IAAK,eACD,MAAO,eACX,IAAK,MACD,MAAO,MACX,QACI,OAAOzB,EAAKA,KA/BjB,IAA0ByB,EG+GuBC,CAAsBzC,QAIhE2B,EAAStL,KAAKI,MAAMkL,OAC1B,OACI,yBAAKY,UAAWZ,EAAS,qBAAuB,0BAC3CO,O,GA1KWrM,a,kBCErB,SAAS6M,GAASjM,GAAQ,IAAD,EACwBkM,mBAAS,MADjC,mBACrBC,EADqB,KACDC,EADC,OAENF,mBAAS,IAFH,mBAEhBG,GAFgB,aAGFH,mBAAS,GAHP,mBAGrBI,EAHqB,KAGdC,EAHc,OAIIL,oBAAS,GAJb,mBAIrBM,EAJqB,KAIXC,EAJW,OAKgBP,mBAAS,MALzB,mBAKrBQ,EALqB,KAKLC,EALK,OAMIT,mBAAS,GANb,mBAMrBU,EANqB,KAMXC,EANW,KA+E5B,SAASC,EAAe3M,GACpB,YAAc6B,IAAV7B,GAAiC,OAAVA,GAA4B,KAAVA,EAClC,KAECA,EAEhB,OA7EA4M,qBAAU,WACN,IAAMC,EAAUC,aAAY,WACxBV,EAASD,EAAQ,KAClB,KACH,OAAO,kBAAMY,cAAcF,MAC5B,CAACV,IAEJS,qBAAU,WACN,IAAMH,EAAWK,aAAY,WACzBJ,EAAYD,EAAW,KACxB,KACH,OAAO,kBAAMM,cAAcN,MAC5B,CAACA,IAEJG,qBAAU,WAEN1D,GADcrJ,EAAM0H,SAAS9C,WAAWC,QAEnCyE,MAAK,SAAA3F,GACF,IAAMuH,EAASvH,EAAKA,KACdwJ,EAAMjC,EAAOkC,SACnBhB,EAAsBlB,EAAO,IAC7BmB,EAAOc,MAEVzD,OAAM,SAAAC,GACH7H,QAAQC,IAAI,kCAAoCsL,KAAKC,UAAU3D,SAExE,CAAC2C,IAGJS,qBAAU,WACN,GAA2B,OAAvBZ,QAAsDnK,IAAvBmK,EAAkC,CACjE,IAAMoB,EAAKT,EAAeX,EAAmBqB,MACvCC,EAAKX,EAAeX,EAAmBuB,MACvCC,EAAKb,EAAeX,EAAmByB,MAE7C,GAAW,OAAPL,GAAsB,OAAPE,GAAsB,OAAPE,EAAa,CAC3ClB,GAAY,GACZ,IAAM3G,EAAKpE,MAASmM,SAAS,EAAG,KAAKC,OAAO,gBACtC/H,EAAKrE,MAASoM,OAAO,gBAG3BzE,EAFerJ,EAAM4H,QAEO9B,EAAIC,GAC3BuD,MAAK,SAAA3F,GACF,IAAIoK,EAAWC,EAAkBrK,EAAKA,MAKtCoK,GAJAA,EAAWA,EAASlC,KAAI,SAAAlI,GAEpB,MAAO,CAAE,KADQA,EAAKP,QAAUO,EAAKsK,QACV,UAAatK,EAAKuK,UAAW,SAAYvK,EAAKwK,cAEzDC,MAAK,SAACC,EAAGC,GAGzB,OAFkB5M,IAAO2M,EAAEpG,KAAM,gBAAgBhD,UAC/BvD,IAAO4M,EAAErG,KAAM,gBAAgBhD,UAClB,GAAK,KAExC0H,EAAkBoB,EAAS,OAE9BrE,OAAM,SAAAC,GACH7H,QAAQC,IAAI,kCAAoCsL,KAAKC,UAAU3D,WAIhF,CAACiD,IAiBuB,OAAvBT,QAAsDnK,IAAvBmK,EACxB,KAGP,yBAAKL,UAAU,uBACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,YAAYvL,MAAO,CAAEgO,YAAa,SAC7C,6BACI,wBAAIhO,MAAO,CAAEC,QAAS,QAASgO,MAAO/L,EAAW,QAAjD,MACA,wBAAIqJ,UAAU,gBAAgBvL,MAAO,CAAEiO,MAAO/L,EAAW,QAAUqK,EAAeX,EAAmBsC,MAEzG,6BACI,wBAAIlO,MAAO,CAAEC,QAAS,QAASgO,MAAO/L,EAAW,UAAjD,MAA+D,mCAC/D,wBAAIqJ,UAAU,gBAAgBvL,MAAO,CAAEiO,MAAO/L,EAAW,UACpDqK,EAAeX,EAAmBuC,MACnC,0BAAMnO,MAAO,CAAEoO,WAAY,MAAOC,SAAU,SAA5C,QAIZ,yBAAK9C,UAAU,aACX,6BACI,wBAAIvL,MAAO,CAAEC,QAAS,QAASgO,MAAO/L,EAAW,QAAU+J,EAAW,KAAO,OAC7E,wBAAIV,UAAU,gBAAgBvL,MAAO,CAAEiO,MAAO/L,EAAW,QApCrE+J,EAC0B,OAAnBE,EAAA,UAA6BA,EAAeyB,SAA5C,YAAwDzB,EAAewB,WAE1E,kBAAC,KAAD,CAAM7K,KAAK,YAEb,GAAN,OAAU8I,EAAmBuB,KAA7B,YAAqCvB,EAAmBqB,KAAxD,YAAgErB,EAAmByB,KAAnF,OAiCY,yBAAKrN,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWiO,eAAgB,QAC3E,6BACI,wBAAItO,MAAO,CAAEC,QAAS,QAASgO,MAAO/L,EAAW,QAAjD,MACA,wBAAIqJ,UAAU,gBAAgBvL,MAAO,CAAEiO,MAAO/L,EAAW,QAAUqK,EAAeX,EAAmB2C,MAEzG,6BACI,wBAAIvO,MAAO,CAAEC,QAAS,QAASgO,MAAO/L,EAAW,QAAjD,MACA,wBAAIqJ,UAAU,gBAAgBvL,MAAO,CAAEiO,MAAO/L,EAAW,QACpDqK,EAAeX,EAAmB4C,IACnC,0BAAMxO,MAAO,CAAEoO,WAAY,MAAOC,SAAU,SAA5C,cAMpB,kBAAC,GAAD,CAAe1D,QAAQ,EAAMtD,QAAS5H,EAAM4H,QAASF,SAAU1H,EAAM0H,YCtIjF,SAASsH,GAAgBC,GACrB,OAAIA,EAAS,GACF,IAAMA,EAEVA,EAGX,SAASC,GAAOA,GACZ,MAAe,MAAXA,EACO,SAEJ,S,uGCKPC,GAAiB,EACjBC,GAAgB,EAChBC,GAAmB,EA8TRC,G,2MA5TXhQ,MAAQ,CACJiQ,WAAY,OACZC,YAAY,EACZC,aAAa,EACbC,YAAY,EACZC,SAAS,EACTC,UAAW,KACXC,eAAgB,IAChBC,OAAQ,EACRC,SAAU,EACVC,QAAS,EACTC,UAAW,EACXC,OAAQ,EACRC,UAAW,EACXC,OAAQ,GACRC,UAAW,GACXC,UAAW,GACXC,UAAW,GAEXC,aAAa,EACbC,cAAe,I,EAkFnBC,aAAe,SAAAC,GACX,EAAK9Q,SAAS,CACV8P,SAAS,EACTa,aAAa,K,EAGrBI,UAAY,WAAQ,EAAK/Q,SAAS,CAAE8P,SAAS,K,mFArFxB,IACThM,EAAS/D,KAAKI,MAAd2D,KAEFwJ,EAAMxJ,EAAK+D,SACX/F,EAAOD,IAAOA,MAASuD,UAAY,OACnC4L,EAAOlN,EAAK0M,UAClBzQ,KAAKkR,SAAS3D,EAAKxL,EAAMkP,K,+BAGpB1D,EAAKxL,EAAMkP,GAAO,IAAD,OAetBxH,EAAsC8D,EAAKxL,EAAKmM,OAAO,cAAe,MAAO,YACxExE,MAAK,SAAA3F,GACF,IAAMT,EAASS,EAAKA,KAAKT,QAAO,SAAUqG,EAAMpG,EAAOqG,GACnD,IAAMvB,EAAOvG,IAAO6H,EAAKwH,QAAQnM,WAAWC,OAAS0E,EAAKyH,QAAQpM,WAAWC,OAAQ,sBAAsBI,UAG3G,OAFAnD,QAAQC,IAAIL,IAAOuG,GAAM6F,OAAO,oBAChChM,QAAQC,IAAIL,IAAOC,EAAKsD,WAAW6I,OAAO,oBACjB,OAAlBvE,EAAKE,UAAqBxB,EAAOtG,EAAKsD,WAAagD,EAAOtG,EAAKsD,UAAa,SAEvFnD,QAAQC,IAAImB,GACZ,IAAM+N,EAAetN,EAAKA,KAAKT,QAAO,SAAUqG,EAAMpG,EAAOqG,GACzD,IAAMvB,EAAOvG,IAAO6H,EAAKwH,QAAQnM,WAAWC,OAAS0E,EAAKyH,QAAQpM,WAAWC,OAAQ,sBAAsBI,UAC3G,MAAyB,OAAlBsE,EAAKE,UAAqBxB,EAAOtG,EAAKsD,WAAagD,EAAOtG,EAAKsD,UAAa,SAEvF,EAAKpF,SAAS,CAAEsQ,UAAWjN,EAAOI,OAAQ4M,OAAQe,EAAa3N,YAElEoG,OAAM,SAAAC,GACH7H,QAAQC,IAAI,0CAA4CsL,KAAKC,UAAU3D,OAE/EN,EAAgCwH,GAC3BvH,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CACVuQ,OAAQzM,EAAKA,KAAK,GAAGqE,aAG5B0B,OAAM,SAAAC,GACH7H,QAAQC,IAAI,oCAAsCsL,KAAKC,UAAU3D,OAEzEN,EAA+B8D,GAC1B7D,MAAK,SAAA3F,GAAU7B,QAAQC,IAAI4B,EAAKA,MAAO,EAAK9D,SAAS,CAAE4Q,cAAe9M,EAAKA,UAC3E+F,OAAM,SAAAC,GAAS7H,QAAQC,IAAI4H,Q,+BAI3BwD,EAAK+D,EAAMC,GAAM,IAAD,OACflP,EAAOzC,OAAO2P,IACdjN,EAAM1C,OAAO4P,IACbU,EAASsB,WAAW5R,OAAO6P,IAAoB,KAAMgC,QAAQ,QACpDrP,IAAX8N,GAAmC,IAAXA,GAA2B,OAAXA,GAA4B,IAAT7N,GAAsB,IAARC,QAAsBF,IAATC,GAA+B,OAATA,GAAyB,OAARC,QAAwBF,IAARE,EAC7ItC,KAAKC,SAAS,CAAE2Q,aAAa,IAExBhR,OAAO0C,GAAO,EACnBtC,KAAKC,SAAS,CAAE2Q,aAAa,ILrFlC,SAA2BpL,EAAOkM,EAAOC,EAAMC,EAASC,EAAOC,GACpE,IAAMxJ,EAAO,CACX,KAAQwJ,EACR,MAASD,EACT,QAAWD,EACX,MAASpM,EACT,MAASkM,EACT,KAAQC,GAEV,OAAOlM,IAAM8C,KAAK,gCAAiCD,GK+EzCmB,CAA8B8D,EAAK+D,EAAMC,EAAKrB,EAAQ7N,EAAMC,GACvDoH,MAAK,SAAA3F,GACF7B,QAAQC,IAAI4B,EAAKA,MACjB0F,EAA+B8D,GAC1B7D,MAAK,SAAA3F,GAAU7B,QAAQC,IAAI4B,EAAKA,MAAO,EAAK9D,SAAS,CAAE4Q,cAAe9M,EAAKA,KAAMgM,SAAS,EAAOa,aAAa,OAC9G9G,OAAM,SAAAC,GAAS7H,QAAQC,IAAI4H,SAEnCD,OAAM,SAAAC,GAAS7H,QAAQC,IAAI4H,Q,kCAY5BgI,GAAe,IAAD,WACJC,EAaZ1G,EADWtL,KAAKI,MAAd2D,KAEFwJ,EAAMjC,EAAOxD,SAAS9C,WAAWC,OACjCqM,EAAOhG,EAAO2G,OAAOjN,WAAWC,OAChCsM,EAAMjG,EAAO4G,KAAKlN,WAAWC,OAC7BkN,EAAW7G,EAAO8G,QAClBpP,EAAa+O,EAAa/O,WAG1BpB,EAfN,SAAwByQ,EAAWC,GAC/B,OAAkB,OAAdD,QAAoCjQ,IAAdiQ,GAAyC,KAAdA,EAC1C,GAEJ,CAACA,EAAWC,GAWJC,CAFDR,EAAaM,UACbN,EAAaO,UAEzBE,EAAaxS,KAAKN,MAAMkR,YAQxB6B,EAPY,CACd,CAAE/H,KAAM,4BAASnK,MAAO6O,GAAgBzL,SAAS2H,EAAOoH,UACxD,CAAEhI,KAAM,4BAASnK,MAAO+K,EAAOxD,SAAS9C,WAAWC,QACnD,CAAEyF,KAAM,4BAASnK,MAAOqB,GACxB,CAAE8I,KAAM,gBAAOnK,MAAOuB,IAAOqQ,EAAU,YAAYjE,OAAO,eAC1D,CAAExD,KAAM,4BAASnK,MAAOyC,IAEMiJ,KAAI,SAAUtC,EAAMpG,EAAOqG,GACzD,MAAkB,8BAAdD,EAAKe,KAED,yBAAKxK,IAAKqD,GACN,yBAAKrD,IAAKqD,EAAO5C,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWD,OAAQ,SAC/E,yBAAKJ,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUmO,SAAU,SAC1DrF,EAAKe,MAEV,yBAAK/J,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUmO,SAAU,SAC3D,kBAAC,KAAD,CAAa2D,aAAchJ,EAAKpJ,MAAOqS,SAAU,SAACrS,GAAYkP,GAAmBlP,KACjF,yBAAKI,MAAO,CAAEkS,OAAQ,YAAtB,OAGR,yBAAKlS,MAAO,CAAEC,QAAS4R,EAAa,OAAS,QAAS5D,MAAO,QAA7D,6BAIM,8BAAdjF,EAAKe,KAED,yBAAKxK,IAAKqD,GACN,yBAAK5C,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWD,OAAQ,SACnE,yBAAKJ,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUmO,SAAU,SAC1DrF,EAAKe,MAEV,yBAAK/J,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUmO,SAAU,SAC3D,kBAAC,KAAD,CAAa2D,aAAchJ,EAAKpJ,MAAOqS,SAAU,SAACrS,GAAYgP,GAAiBhP,KAC/E,yBAAKI,MAAO,CAAEkS,OAAQ,YAAtB,UACA,kBAAC,KAAD,CAAaF,aAAchJ,EAAKpJ,MAAOqS,SAAU,SAACrS,GAAYiP,GAAgBjP,KAC9E,yBAAKI,MAAO,CAAEkS,OAAQ,YAAtB,YAGR,yBAAKlS,MAAO,CAAEC,QAAS4R,EAAa,OAAS,QAAS5D,MAAO,QAA7D,6BAKR,yBAAK1O,IAAKqD,EAAO5C,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWD,OAAQ,SAC/E,yBAAKJ,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUmO,SAAU,SAC1DrF,EAAKe,MAEV,yBAAK/J,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUmO,SAAU,SAC1DrF,EAAKpJ,WAKtB,OACI,kBAAC,KAAD,CACIuS,MAAO,IACP/P,MAAM,uCACNgN,QAAS/P,KAAKN,MAAMqQ,QACpBgD,SAAU/S,KAAK8Q,aACfkC,OACI,yBAAKrS,MAAO,CAAEC,QAAS,OAAQqS,gBAnFzBjB,EAmFkD1G,EAAO7H,KAlF1D,WAATuO,EAkF2E,gBAAkB,YAAYnR,WAAY,WAE7G,6BACI,kBAAC,KAAD,CAAQX,IAAI,SAASgT,QAASlT,KAAK8Q,cAAnC,gBACA,kBAAC,KAAD,CAAQ5Q,IAAI,KAAKuD,KAAK,UAAUyP,QAAS,WAAQ,EAAKC,SAAS5F,EAAK+D,EAAMC,KAA1E,mBAGXkB,K,+BAKT,SAASW,EAAY7S,GACjB,MAAc,KAAVA,GAA0B,OAAVA,QAA4B6B,IAAV7B,EAC3B,KAEJA,EAAMyE,WAQjB,SAASqO,EAAcxC,EAAeyC,EAAMC,EAAOpB,GAG/C,OAFAjQ,QAAQC,IAAI0O,GAEiB,IAAzBA,EAAcnN,QACdxB,QAAQC,IAAImR,GAEQ,IAAhBA,EAAK5P,OACE,CACHV,gBAAYZ,EACZiQ,eAAWjQ,EACXkQ,cAAUlQ,GAMX,CACHY,WAJeoL,EAAqBmF,EAAOpB,GAK3CE,UAJczS,OAAO0T,EAAKE,OAK1BlB,SAJa1S,OAAO0T,EAAKG,QAWtB,CACHzQ,WAJ8C,IAAnCpD,OAAOiR,EAAc,GAAGe,SAKnCS,UAJczS,OAAOiR,EAAc,GAAGgB,OAKtCS,SAJa1S,OAAOiR,EAAc,GAAGiB,OAtC5C,MA8CmC9R,KAAKI,MAArC2D,EA9CH,EA8CGA,KAAM2P,EA9CT,EA8CSA,YAAaC,EA9CtB,EA8CsBA,SACnB9C,EAAkB7Q,KAAKN,MAAvBmR,cACFvF,EAASvH,EACToO,EAAW7G,EAAO8G,QAClBmB,EAAQnF,EAAkB9C,EAAOsI,QACjCN,EAAOlF,EAAsB9C,EAAOgI,MACpCO,EAASzF,EAAuBmF,GAChCvQ,EAAaqQ,EAAcxC,EAAeyC,EAAMC,EAAOpB,GAAUnP,WACjEqP,EAAYgB,EAAcxC,EAAeyC,EAAMC,EAAOpB,GAAUE,UAChEC,EAAWe,EAAcxC,EAAeyC,EAAMC,EAAOpB,GAAUG,SAC/D9B,EAASxQ,KAAKN,MAAM8Q,OAC1B,QAAepO,IAAXkJ,EAAwB,OAAO,KACnC,IAnDyB/K,ED1NT+O,ECkRVwE,EAAY1F,EALH,CACXrM,KAAMD,IAAOqQ,EAAU,YAAY9M,UACnChD,KAAMgQ,EACN/P,IAAKgQ,IAGHyB,EAAOnU,OAAOC,eAAeC,QAAQ,SAE3C,OACI,6BACI,yBAAKoM,UAAU,uBACX,wBAAIvL,MAAO,CAAEiO,MAAO,mBAAoBI,SAAU,OAAQD,WAAY,QAAtE,MAAmFK,GAAgBxP,OAAO0L,EAAOoH,UACjH,wBAAI/R,MAAO,CAAEiO,MAAO,mBAAoBI,SAAU,OAAQD,WAAY,QAAUzD,EAAO2G,OAAOjN,WAAWC,QACzG,wBAAItE,MAAO,CAAEiO,MAAO,mBAAoBI,SAAU,OAAQD,WAAY,QAAUzD,EAAOxD,UACvF,wBAAInH,MAAO,CAAEiO,MAAO,uBAAwBI,SAAU,UD3RlDM,EC2R4EhE,EAAO4G,KD1RvGhQ,QAAQC,IAAImN,GACG,MAAXA,EACO,SAEJ,WCuRS,wBAAI3O,MAAO,CAAEiO,MAAO,uBAAwBI,SAAU,SAAWlN,IAAOqQ,EAAU,YAAYjE,OAAO,SAArG,UACS,GAAR6F,GAAa,yBAAKb,QAASlT,KAAKgR,UAAW9E,UAAU,0BAA0BvL,MAAO,CAAEqT,OAAQ,YAC7F,yBAAK3S,IAAK4S,KAAU1S,IAAI,eAGhC,6BACI,yBAAK2K,UAAU,iBACX,wBAAIvL,MAAO,CAAEiO,MAAO,qBACfwE,EAAYf,GADjB,IAC8Be,EAAYd,GAD1C,IACwD,0BAAM3R,MAAO,CAAEoO,WAAY,QAAU+E,IAE7F,wBAAInT,MAAO,CAAEiO,MAAO,qBA3ElB,MADOrO,EA6EYyC,IA5EH,OAAVzC,QAA4B6B,IAAV7B,GAAiC,IAAVA,EAClD,GAEJA,EAAMyE,WAAa,YAyEmB,0BAAMrE,MAAO,CAAEoO,WAAY,QAAUqE,EAAYS,GAAjD,MAEjC,yBAAK3H,UAAU,uBACX,yBAAK7K,IAAK6S,KAAU3S,IAAI,aACxB,yBAAKZ,MAAO,CAAEqO,SAAU,SAAWhP,KAAKN,MAAM4Q,QAC9C,yBAAKjP,IAAK8S,KAAW5S,IAAI,cACzB,yBAAKZ,MAAO,CAAEqO,SAAU,SAAWhP,KAAKN,MAAM6Q,aAGtD,yBAAK5P,MAAO,CAAEC,QAAS8S,EAAc,QAAU,OAAQU,kBAAmB,QAASC,kBAAmB,yBAA0BC,kBAAmB,UAC/I,kBAAC,GAAD,CAAwBC,WAAYjJ,EAAOkJ,kBAAmBd,YAAaA,EAAa5L,SAAUwD,EAAOxD,SAAUE,QAASsD,EAAOtD,WAEvI,yBAAKrH,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQqS,eAAgB,gBAAiBpS,WAAY,SAAU4T,QAAS,WAAYC,SAAU,WAAY1T,oBAAqB,YAClK,yBAAKL,MAAO,CAAEgU,SAAU,SAAU3F,SAAU,OAAQ4F,aAAc,WAAYC,WAAY,WAAarE,GACvG,kBAAC,IAAD,CAAMtE,UAAU,oBAAoBhL,GAAI,CAAE4T,SAAU,iBAAmBxJ,EAAOxD,SAAS9C,WAAWC,OAAQvF,MAAO,CAAE,OAAUiU,EAAU,MAASrI,EAAOxD,SAAU,OAAUwD,EAAOtD,QAAS,UAAasD,EAAOoH,OAAQ,MAAQ,EAAM,UAAa1S,KAAKN,MAAM+Q,aACzP,qCACI,yBAAK9P,MAAO,CAAEqO,SAAU,SAAxB,wDAKfhP,KAAK+U,YAAY1B,EAAcxC,EAAeyC,EAAMC,EAAOpB,S,GAvT/C3S,a,oBCkHdwV,I,kNA7HXtV,MAAQ,CAAEqQ,SAAS,EAAOpQ,WAAY,G,EAEtCqR,UAAY,WACR,EAAK/Q,SAAS,CACV8P,SAAS,EACTkF,UAAU,EACVlR,KAAM,Q,EA8Bd+M,aAAe,SAAAC,GACX,EAAK9Q,SAAS,CACV8P,SAAS,K,mFA3Bb,IAAMhQ,EAAcF,eAAeC,QAAQ,QAC3CE,KAAKC,SAAS,CAAEN,WAAYI,M,+BAGvBoJ,GAEL,IAKM+L,EAAY,CACd,UANcC,SAASC,eAAe,aAAa7U,MAOnD,GANc4U,SAASC,eAAe,SAAS7U,MAO/C,QANY4U,SAASC,eAAe,WAAW7U,MAO/C,SANa4I,EAOb,OANWgM,SAASC,eAAe,UAAU7U,OAQjDP,KAAKC,SAAS,CACV8P,SAAS,EACThM,KAAMmR,EACND,UAAU,M,+BAaR,IAAD,OASL,IAAM5F,EAASrP,KAAKI,MAAMiV,UACFrV,KAAKI,MAArBsT,YACR,OACI,yBAAK/S,MAAO,CAAEI,OAAQ,SAClB,yBAAKJ,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQqS,eAAgB,gBAAiBpS,WAAY,SAAUyU,gBAAiB,yBAA0Bb,QAAS,aACtJ,wBAAI9T,MAAO,CAAEiO,MAAO,0BAApB,MCpCK,SAACS,GACtB,OAAIA,EAAS,GACF,IAAMA,EAEVA,EDgC4DkG,CAAiBlG,IACpE,yBAAKnD,UAAU,kBAAkBgH,QAASlT,KAAKgR,UAAWrQ,MAAO,CAAEC,QAAkC,GAAzBZ,KAAKN,MAAMC,WAAkB,OAAS,OAAQqU,OAAQ,YAC9H,yBAAK3S,IAAK4S,KAAU1S,IAAI,cAE5B,kBAAC,KAAD,CACIuR,MAAO,IACP/P,MAAM,uCACNgN,QAAS/P,KAAKN,MAAMqQ,QACpByF,KAAM,kBAAM,EAAKrC,SAAS,eAC1BJ,SAAU/S,KAAK8Q,cAEf,yBAAKnQ,MAAO,CAAEC,QAAS,OAAQ6U,iBAAkB,sBAAuBC,WAAY,SAChF,yBAAKxJ,UAAU,iBACX,qCACI,0DAEJ,yBAAKvL,MAAO,CAAEC,QAAS,OAAQC,WAAY,WACvC,6BAAMuO,GAAgBC,MAG9B,yBAAKnD,UAAU,iBACX,qCACI,0DAEJ,kBAAC,KAAD,CAAOyJ,GAAG,oBAEd,yBAAKzJ,UAAU,iBACX,qCACI,0DAEJ,yBAAKvL,MAAO,CAAEC,QAAS,OAAQC,WAAY,WACvC,kBAAC,KAAD,CAAO8U,GAAG,OAAOC,YAAY,KAAKjV,MAAO,CAAEgO,YAAa,SACxD,wBAAIhO,MAAO,CAAEgO,YAAa,QAA1B,UACA,kBAAC,KAAD,CAAOgH,GAAG,OAAOC,YAAY,KAAKjV,MAAO,CAAEgO,YAAa,SACxD,wCAGR,yBAAKzC,UAAU,iBACX,yBAAKvL,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,gBAAiBpS,WAAY,SAAUiS,MAAO,SACzF,sCACA,wCAEJ,kBAAC,KAAD,CAAY+C,qBAAsB,SAAAC,GAAW,OAAIA,EAAYC,YAAYH,YAAY,2BAAOD,GAAG,cAEnG,yBAAKzJ,UAAU,iBACX,qCACI,0DAEJ,yBAAKvL,MAAO,CAAEC,QAAS,SAAU,kBAAC,KAAD,CAAOgV,YAAY,MAAMD,GAAG,WAA7D,aAKhB,yBAAKhV,MAAO,CAAEI,OAAQ,oBAAoBH,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,SAAU4T,QAAS,SAChH,yBAAK9T,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,oBAAvC,sB,GAlHkBpP,c,gFE+KvBwW,G,2MA3KXC,YAAa,E,EACbvW,MAAQ,CACJwW,WAAW,EACXC,cAAe,GACfC,kBAAmB,GACnBC,kBAAcjU,EACdzC,WAAY,G,sFAGZK,KAAKiW,YAAa,I,0CAGlBjW,KAAKsW,cAAgBtW,KAAKsW,cAAcC,KAAKvW,MAC7C,IAAMD,EAAcF,eAAeC,QAAQ,QAC3CE,KAAKC,SAAS,CAAEN,WAAYI,IAC5BC,KAAKwW,qB,yCAEW,IAAD,ORsBd/Q,IAAMC,IAAI,+BQpBNgE,MAAK,SAAAa,GACFrI,QAAQC,IAAI,qBAAuBsL,KAAKC,UAAUnD,IAClD,EAAKtK,SAAS,CACVkW,cAAe5L,EAAOxG,KACtBqS,kBAAmB7L,EAAOxG,UAGjC+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,qBAAuBsL,KAAKC,UAAU3D,S,mCAK1D/J,KAAKiW,YAAa,EAClBjW,KAAKC,SAAS,CACVoW,kBAAcjU,EACd8T,WAAW,EACXE,kBAAmB3I,KAAKgJ,MAAMhJ,KAAKC,UAAU1N,KAAKN,MAAMyW,oB,mCAIlD,IRZaO,EQYd,OAET1W,KAAKC,SAAS,CACViW,WAAW,KRfQQ,EQiBI1W,KAAKN,MAAM0W,kBRhBrC3Q,IAAM8C,KAAK,kCAAmCmO,IQiB1ChN,MAAK,SAAAa,GACFrI,QAAQC,IAAI,qBAAuBsL,KAAKC,UAAUnD,IAClD,EAAKiM,sBAER1M,OAAM,SAAAC,GACH7H,QAAQC,IAAI,qBAAuBsL,KAAKC,UAAU3D,S,iCAK1D/J,KAAKC,SAAS,CACViW,WAAYlW,KAAKN,MAAMwW,UACvBE,kBAAoBpW,KAAKN,MAAMwW,UAAazI,KAAKgJ,MAAMhJ,KAAKC,UAAU1N,KAAKN,MAAM0W,oBAAsB3I,KAAKgJ,MAAMhJ,KAAKC,UAAU1N,KAAKN,MAAMyW,oB,oCAItIQ,GACV3W,KAAKC,SAAS,CAAEoW,aAAcM,EAAMC,OAAOrW,U,sCAI3C,IAAMsW,EAAW7W,KAAKN,MAAM0W,kBAEtBU,EAAMjX,eAAeC,QAAQ,QAC7BiX,EAAc,CAChB3O,QAASpI,KAAKN,MAAM2W,aACpBhO,MAAQ,IAAI2O,KACZC,OAAQH,EAAM,eACdtQ,UAAWsQ,EAAMhV,MAASoM,OAAO,kBAAkBlJ,YAEvD6R,EAASvR,KAAKyR,GACd/W,KAAKC,SAAS,CACVmW,kBAAmBS,EACnBR,kBAAcjU,M,uCAILyC,GACb,IAAMgS,EAAW7W,KAAKN,MAAM0W,kBACtB7S,EAAQsT,EAASK,WAAU,SAAAxM,GAAI,OAAIA,IAAS7F,KAClDgS,EAASM,OAAO5T,EAAO,GACvBvD,KAAKC,SAAS,CAAEmW,kBAAmBS,M,mCAE1BO,EAAclT,GACvB,IAAImT,EAAO,GACU,OAAjBD,GAAiD,IAAxBA,EAAa1T,QACtC2T,EAAK/R,KACD,yBAAK4G,UAAU,uBAAf,uBAGR,IAAK,IAAI3I,EAAQ,EAAGA,EAAQ6T,EAAa1T,OAAQH,IAAS,CACtD,IAAMsB,EAAUuS,EAAa7T,GAC7B8T,EAAK/R,KACD,yBAAK4G,UAAU,uBACX,4BAAK3I,EAAQ,EAAb,IAAiBsB,EAAQuD,SACxBpI,KAAKsX,WAAWzS,EAASX,KAItC,OAAOmT,I,iCAEAxS,EAASX,GAAS,IAAD,OAClBmE,EAAOvG,IAAO+C,EAAQwD,KAAM,yBAAyB6F,OAAO,uBAC5DqJ,EAAYzV,IAAO0V,IAAInP,GAAMoP,SAC7BtO,EAAStE,EAAQoS,OAAS,qBAAQnV,IAAOyV,GAAWrJ,OAAO,eAAiB,eAClF,OAAIhK,EAEI,yBAAK7C,IAAKqW,KAAWnW,IAAI,aAAa2R,QAAS,kBAAM,EAAKyE,iBAAiB9S,MAI/E,kBAAC,KAAD,CAAS+S,UAAU,MAAM7U,MAAOoG,GAC5B,yBAAK9H,IAAKwW,KAAQtW,IAAI,kB,+BAIxB,IAAD,OAWL,IATqB7B,EASjBoY,EAAU9X,KAAKN,MAAM0W,kBAQzB,OANA0B,EAAUA,EAAQtJ,MAAK,SAACC,EAAGC,GAGvB,OAFgB5M,IAAO2M,EAAEpG,KAAM,yBAAyBhD,UACxCvD,IAAO4M,EAAErG,KAAM,yBAAyBhD,UACzB,GAAK,KAIpC,6BACI,yBAAK6G,UAAU,iBACX,wBAAIvL,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBAAtC,4BACA,yBAAKmJ,UAAW,kBAAM,EAAKC,YAAYrX,MAAO,CAAEC,QAAkC,GAAzBZ,KAAKN,MAAMC,WAAkB,OAAS,OAAQmT,MAAO,OAAQkB,OAAQ,YAC1H,yBAAK3S,IAAK4S,KAAU1S,IAAI,eAGhC,6BACI,yBAAK2K,WA1BIxM,EA0BmBM,KAAKN,MAAMwW,UAzB1CxW,EAIM,wBAHA,2BAyBEM,KAAKoX,aAAaU,EAAS9X,KAAKN,MAAMwW,YAE3C,yBAAKvV,MAAO,CAAEC,QAASZ,KAAKN,MAAMwW,UAAY,QAAU,OAAQ+B,OAAQ,gCAAiCC,eAAgB,MACrH,yBAAKvX,MAAO,CAAEI,OAAQ,OAAQuU,gBAAiB,sBAAuB1U,QAAS,OAAQqS,eAAgB,gBAAiBpS,WAAY,WAChI,kBAAC,KAAD,CAAO+U,YAAY,uCAASjV,MAAO,CAAEG,WAAY,OAAQgS,MAAO,SAAWvS,MAAOP,KAAKN,MAAM2W,aAAczD,SAAU5S,KAAKsW,gBAC1H,kBAAC,KAAD,CAAQ7S,KAAK,UAAU9C,MAAO,CAAEgO,YAAa,QAAUuE,QAAS,kBAAM,EAAKiF,kBAA3E,iBAIJ,yBAAKxX,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WACjF,kBAAC,KAAD,CAAQF,MAAO,CAAEkS,OAAQ,OAAQC,MAAO,QAAUI,QAAS,kBAAM,EAAKkF,eAAtE,gBACA,kBAAC,KAAD,CAAQ3U,KAAK,UAAU9C,MAAO,CAAEkS,OAAQ,OAAQC,MAAO,QAAUI,QAAS,kBAAM,EAAKmF,eAArF,wB,GAnKD7Y,aC0GZ8Y,G,2MAhHX5Y,MAAQ,CACJ6Y,aAAa,G,EAejBC,iBAAmB,SAAC7C,GAAQ,IAAD,EACiB,EAAKvV,MAArCqY,EADe,EACfA,UAAWC,EADI,EACJA,MAAOC,EADH,EACGA,UAE1B,GADe,EAAKC,aAAaF,EAAOD,GAC5B,CACR,IAAM1U,EAAO,CAAE,MAAS,KAAM,KAAQ4U,GACtC,EAAKvY,MAAMyY,eAAe9U,QAG1B,EAAK3D,MAAMyY,eAAelD,I,kFAnB9B3V,KAAKC,SAAS,CACVsY,aAAa,M,0CAKjBvY,KAAKC,SAAS,CACVsY,aAAa,M,mCAgBR5C,EAAImD,GACb,OAAInD,IAAOmD,I,+BAKL,IAAD,OACL,SAASC,EAAcC,GACnB,OAAQA,GACJ,KAAK,EACD,MAAO,SACX,KAAK,EACD,MAAO,SACX,KAAK,EACD,MAAO,SACX,KAAK,EACD,MAAO,SACX,KAAK,EACD,MAAO,SACX,KAAK,EACD,MAAO,SACX,KAAK,EACD,MAAO,SACX,QACI,OAAO,MAlBd,MAqByChZ,KAAKI,MAA3CqY,EArBH,EAqBGA,UAAWC,EArBd,EAqBcA,MAAOC,EArBrB,EAqBqBA,UAAW5U,EArBhC,EAqBgCA,KAC/BzB,EF3DO,SAAC+F,GAClB,OAAQA,GACJ,KAAK,EACD,MAAO,IACX,KAAK,EACD,MAAO,IACX,KAAK,EACD,MAAO,IACX,KAAK,EACD,MAAO,IACX,KAAK,EACD,MAAO,IACX,KAAK,EACD,MAAO,IACX,KAAK,EACD,MAAO,IACX,KAAK,EACD,MAAO,IACX,KAAK,EACD,MAAO,IACX,KAAK,EACD,MAAO,KACX,KAAK,GACD,MAAO,KACX,KAAK,GACD,MAAO,KACX,QACI,OAAO,MEgCC4Q,CAAa,IAAIjC,KAAK2B,GAAWO,YAAc,IAAM,IAAIlC,KAAK2B,GAAWQ,UAC/EH,EAAU,IAAIhC,KAAK2B,GAAWS,SAC9BC,EAAsB,CAAEtY,OAAQ,OAAQH,QAAS,OAAQC,WAAY,SAAUoS,eAAgB,SAAUgF,OAAQ,gCAAiCqB,gBAAiB,OACnKR,EAAS9Y,KAAK4Y,aAAaF,EAAOD,GACxC,OAAa,OAAT1U,EAEI,6BACI,yBAAKpD,MAAOmY,EAAS,CAAEb,OAAQ,kCAAmC3C,gBAAiB,YAAaiE,UAAW,QAAW,CAAEvF,OAAQ,WAAa+D,UAAW,kBAAM,EAAKS,iBAAiB,CAAE,MAASE,EAAO,KAAQC,MAC1M,yBAAKhY,MAAO0Y,GACR,yBAAK1Y,MAAO,CAAEC,QAAS,OAAQ6U,iBAAkB,YAC7C,wBAAI9U,MAAO,CAAE6Y,UAAW,WAAalX,GACrC,wBAAI3B,MAAO,CAAE6Y,UAAW,WAAaT,EAAcC,MAG3D,yBAAKrY,MAAO0Y,GACR,wBAAI1Y,MAAO,CAAE6Y,UAAW,WAAxB,UAEJ,wBAAI7Y,MAAO0Y,GAAX,KACA,wBAAI1Y,MAAO0Y,GAAX,KACA,wBAAI1Y,MAAO0Y,GAAX,KACA,wBAAI1Y,MAAO0Y,GAAX,KACA,wBAAI1Y,MAAO0Y,GAAX,MAEJ,yBAAK1Y,MAAO,CAAEC,QAASkY,EAAS,OAAS,OAAQ7F,eAAgB,SAAUpS,WAAY,WACnF,yBAAKF,MAAO,CAAEmS,MAAO,EAAG/R,OAAQ,EAAG0Y,YAAa,QAASC,YAAa,qBAAsBC,YAAa,mDAOrH,6BACI,yBAAKhZ,MAAOmY,EAAS,CAAEb,OAAQ,kCAAmC3C,gBAAiB,YAAaiE,UAAW,QAAW,CAAEvF,OAAQ,WAAa+D,UAAW,kBAAM,EAAKS,iBAAiB,CAAE,MAASE,EAAO,KAAQC,MAC1M,yBAAKhY,MAAO0Y,GACR,yBAAK1Y,MAAO,CAAEC,QAAS,OAAQ6U,iBAAkB,YAC7C,wBAAI9U,MAAO,CAAE6Y,UAAW,WAAalX,GACrC,wBAAI3B,MAAO,CAAE6Y,UAAW,WAAaT,EAAcC,MAG3D,yBAAKrY,MAAO0Y,GACR,wBAAI1Y,MAAO,CAAE6Y,UAAW,WAAazV,EAAK6V,UAA1C,IAAsDjW,SAAoC,IAA3BA,SAASI,EAAK6V,WAAmB,IAAhG,OAEJ,wBAAIjZ,MAAO0Y,GAAsBtV,EAAK8V,eACtC,wBAAIlZ,MAAO0Y,GAAsBtV,EAAK+V,cACtC,wBAAInZ,MAAO0Y,GAAsBtV,EAAKgW,SACtC,wBAAIpZ,MAAO0Y,GAAsBtV,EAAKiW,YACtC,wBAAIrZ,MAAO0Y,GAAsBtV,EAAKkW,WAE1C,yBAAKtZ,MAAO,CAAEC,QAASkY,EAAS,OAAS,OAAQ7F,eAAgB,SAAUpS,WAAY,WACnF,yBAAKF,MAAO,CAAEmS,MAAO,EAAG/R,OAAQ,EAAG0Y,YAAa,QAASC,YAAa,qBAAsBC,YAAa,iE,GA1GhGna,aCW7B,SAAS0a,GAAeC,GAcpB,OAAO,IAAInD,KAAKmD,GAAWC,cAAgB,IAb3C,SAAqB7X,GACjB,IAAM8X,EAAc9X,EAAQ,EAC5B,OAAI8X,EAAc,GACP,IAAMA,EAELA,EAQiCC,CAAY,IAAItD,KAAKmD,GAAWjB,YAAc,MAN3EnX,EAM4F,IAAIiV,KAAKmD,GAAWhB,WALrH,GACA,IAAMpX,EAELA,GAJhB,IAAoBA,EA0BxB,SAASwY,GAAoBJ,GAQzB,OAAO,IAAInD,KAAKmD,GAAWC,cAAgB,IAP3C,SAAqB7X,GACjB,IAAM8X,EAAc9X,EAAQ,EAC5B,OAAI8X,EAAc,GACP,IAAMA,EAELA,EAEiCC,CAAY,IAAItD,KAAKmD,GAAWjB,YAAc,KAKnG,SAASsB,GAAWL,GAchB,OAbA,SAAqB5X,GACjB,IAAM8X,EAAc9X,EAAQ,EAC5B,OAAI8X,EAAc,GACP,IAAMA,EAELA,EAQTC,CAAY,IAAItD,KAAKmD,GAAWjB,YAAc,MANjCnX,EAMkD,IAAIiV,KAAKmD,GAAWhB,WAL3E,GACA,IAAMpX,EAELA,GAJhB,IAAoBA,EAqGxB,SAAS0Y,GAAW1Y,GAChB,OAAI,IAAIiV,KAAKjV,GAAM2Y,WAAY,IAAI1D,MAAO0D,U,WCnK1CC,GAAUC,GAAYC,GC8LXC,G,2MA7LXpb,MAAQ,CACJqb,cAAe,KACfC,SAAU,KACVC,WAAYnZ,IAAOA,MAASoM,OAAO,YAAa,YAAY7I,UAC5D6V,QAAS,I,EAYbC,aAAe,SAACpZ,EAAMqZ,GAClB,EAAKnb,SAAS,CACVgb,WAAYlZ,EAAKsD,UACjB2V,SAAU,OACX,WAAQ,EAAKK,QAAQ,EAAK3b,MAAMub,gB,EAEvCK,iBAAmB,SAACC,GAChB,EAAKtb,SAAS,CACV+a,SAAUO,EAAS7C,MACnBqC,cAAeQ,EAASlT,Q,EA0GhCmT,SAAW,SAACzK,GAAM,IAENkK,EAAe,EAAKvb,MAApBub,WAMR,OAAQlK,EAAE6F,OAAOrW,OACb,IAAK,IACD,IAAMkb,EAAQR,EAJV,MAOJ,EAAKE,aAAarZ,IAAO2Z,IACzB,MACJ,IAAK,IACD,IAAMC,EAAQ5Z,IAAOA,MAASoM,OAAO,aACrC,EAAKiN,aAAaO,GAClB,MACJ,IAAK,IACD,IAAMC,EAAQV,EAdV,MAgBJU,GADc7Z,IAAOA,MAASoM,OAAO,aAAa7I,WAChC,EAAK8V,aAAarZ,IAAO6Z,M,mFAlJnD3b,KAAKqb,QAAQrb,KAAKN,MAAMub,c,8BAEpBA,GAAa,IZgxCMlZ,EYhxCP,QZgxCOA,EY/wCGD,IAAOmZ,GAAY/M,OAAO,cZgxCnDzI,IAAMC,IAAI,0BAA4B3D,IY/wClC2H,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CAAEib,QAASnX,EAAKA,UAEjC+F,OAAM,SAAAC,GAAS7H,QAAQC,IAAI4H,Q,yCAcjB6R,GACf,IAAMC,EAAaD,EAAM3P,KAAI,SAAUpH,EAAStB,EAAOqG,GACnD,OACI,yBAAKsC,UAAU,iCACX,wBAAIA,UAAU,sCAAsCrH,EAAQsD,QAC5D,wBAAI+D,UAAU,sCAAsCrH,EAAQiX,YAIxE,OACI,6BACI,yBAAK5P,UAAU,iCACX,wBAAIA,UAAU,sCAAd,4BACA,wBAAIA,UAAU,sCAAd,iBAEH2P,K,iCAKT,IAAME,EAAiB/b,KAAKN,MAAMqb,cAE5BiB,EADUhc,KAAKN,MAAMwb,QACA5X,QAAO,SAAUqG,EAAMpG,GAE9C,OAAO2W,GADUpY,IAAO6H,EAAKqN,KAAM,eACCkD,GAAe6B,MAGvD,GAA4B,OAAxB/b,KAAKN,MAAMsb,SACX,OAAO,KAGP,IAAMiB,EAA+B,IAAtBD,EAAWtY,OACpBwY,EAAgC,IAAtBF,EAAWtY,OAErByY,EAAgC,IAAtBH,EAAWtY,OAAe,EAAIsY,EAAW,GAAGI,sBACtDC,EAAiC,IAAtBL,EAAWtY,OAAe,EAAIsY,EAAW,GAAGM,uBAE7D,OACI,6BACI,yBAAKpQ,UAAU,0BACX,yBAAKA,UAAU,8BACX,6BACI,wBAAIA,UAAU,+BAAd,wCACA,yBAAKA,UAAU,oCACV+P,EAAS,yBAAK/P,UAAU,aAAf,sBAAuClM,KAAKuc,mBAAmBJ,KAGjF,6BACI,wBAAIjQ,UAAU,+BAAd,wCACA,yBAAKA,UAAU,oCACVgQ,EAAU,yBAAKhQ,UAAU,aAAf,sBAAuClM,KAAKuc,mBAAmBF,U,qCAoBtG,MARiB,CAAC,eAAM,qBAAO,eAAM,eAAM,uCAAU,6CAAW,kBACzCpQ,KAAI,SAAUtC,EAAMpG,GACvC,OACI,yBAAK2I,UAAU,4BACX,4BAAKvC,S,oCAUjB,IAJW,IAAD,OACN6S,EAAW,GACTC,EAAWzc,KAAKN,MAAMwb,QACtBwB,EAAW1c,KAAKN,MAAMub,WAHlB,WAID0B,GACL,IAAMhE,EAAY+D,EAAgB,GAAJC,EAAS,GAAK,GAAK,IAC3CX,EAAaS,EAASnZ,QAAO,SAAUqG,EAAMpG,GAE/C,OADiBzB,IAAO6H,EAAKqN,KAAM,YAAY3R,YAC3BsT,KAGE,IAAtBqD,EAAWtY,OACX8Y,EAASlX,KACL,6BACI,kBAACsX,GAAD,CAAgB7Y,KAAM,KAAM7D,IAAKyc,EAAGhE,UAAWA,EAAWF,UAAW,EAAK/Y,MAAMsb,SAAUtC,MAAOiE,EAAG9D,eAAgB,EAAKyC,qBAKjIkB,EAASlX,KACL,6BACI,kBAACsX,GAAD,CAAgB7Y,KAAMiY,EAAW,GAAI9b,IAAKyc,EAAGhE,UAAWA,EAAWF,UAAW,EAAK/Y,MAAMsb,SAAUtC,MAAOiE,EAAG9D,eAAgB,EAAKyC,sBAjBzIqB,EAAI,EAAGA,EAAI,EAAGA,IAAM,EAApBA,GAuBT,OADAH,EAASK,UACFL,I,+BAkCP,OACI,yBAAK7b,MAAO,CAAE4Y,UAAW,SACrB,yBAAKrN,UAAU,0BACX,qCACI,wBAAIvL,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,sBAAtC,wCACA,wBAAIjO,MAAO,CAAEqO,SAAU,OAAQ8N,UAAW,SAAUlO,MAAO,oBAAqBmO,YAAa,SAA7F,qDAEJ,yBAAKpc,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,QAC9E,kBAAC,KAAD,CAAY4U,qBAAsB,SAAAC,GAAW,OAAIA,EAAYC,YAAYiH,WAAW,EAAMC,aAAc,SAACC,GAAc,OAAOA,GAAWA,EAAUpb,MAASqb,QAAQ,QAAU5c,MAAOuB,IAAO9B,KAAKN,MAAMub,YAAa/M,OAAQ,aAAc0E,SAAU5S,KAAKmb,aAAciC,YAAY,IACnR,yBAAKzc,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,MAAOH,WAAY,SACjG,kBAAC,KAAD,CAAQP,MAAM,IAAI8c,MAAM,SAASC,KAAK,cAAcpK,QAASlT,KAAKwb,WAClE,kBAAC,KAAD,CAAQjb,MAAM,IAAI8c,MAAM,SAASC,KAAK,eAAepK,QAASlT,KAAKwb,WACnE,kBAAC,KAAD,CAAQjb,MAAM,IAAI8c,MAAM,SAASC,KAAK,eAAepK,QAASlT,KAAKwb,cAI/E,yBAAKtP,UAAU,6BACX,6BACKlM,KAAKud,gBAETvd,KAAKwd,eAETxd,KAAKyd,gB,GAxLWje,aCkRlBke,I,kNAvQXhe,MAAQ,CACJie,YAAa,OAEbC,eAAgB,EAChBje,WAAY,EACZke,UAAU,EACVxH,aAAc,GACdyH,YAAa,eAEbC,aAAc,GACd7Z,QAAQ,EACR+W,WAAYnZ,MAASuD,UACrBoL,UAAW,M,6EAGDpI,EAAM2V,GAAK,IAAD,OAIpBvU,EAAkCuU,EAHjBlc,IAAOuG,GAAM6F,OAAO,eAIhCxE,MAAK,SAAA3F,GACF7B,QAAQC,IAAI,4BAA8BsL,KAAKC,UAAU3J,EAAKA,OAC9D,EAAK9D,SAAS,CAAE8d,aAAcha,EAAKA,UAEtC+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,4BAA8BsL,KAAKC,UAAU3D,S,yCAIjD,IAAD,OASThI,EAAO/B,KAAKI,MAAM6a,WAClBgD,EAAanc,IAAOC,GAAMmM,OAAO,cACvChM,QAAQC,IAAI8b,Gbs0Bb,SAA+Blc,GACpC,OAAO0D,IAAMC,IAAI,kCAAoC3D,Gat0B/C0H,CAAkCwU,GAC7BvU,MAAK,SAAA3F,GACF7B,QAAQC,IAAI,4BAA8BsL,KAAKC,UAAU3J,EAAKA,OAC9D,EAAK9D,SAAS,CAAE8d,aAAcha,EAAKA,UAEtC+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,4BAA8BsL,KAAKC,UAAU3D,S,0CAIjE/J,KAAKsW,cAAgBtW,KAAKsW,cAAcC,KAAKvW,MAE7C,IAAMD,EAAcF,eAAeC,QAAQ,QAG3C,GAFAE,KAAKC,SAAS,CAAEN,WAAYI,IAEb,IADAC,KAAKI,MAAMkL,OACR,CACd,IAAM0S,EAAKhe,KAAKI,MAAM8d,SAASzN,UACzB1O,EAAO/B,KAAKI,MAAM6a,WACxB/Y,QAAQC,IAAInC,KAAKI,MAAM8d,UACZ,OAAPF,IAIAhe,KAAKC,SAAS,CACVgb,WAAYlZ,EACZ0O,UAAWuN,IAEfhe,KAAKme,cAAcpc,EAAMic,SAK7Bhe,KAAKoe,qB,2CAMT,IAAM9S,EAAStL,KAAKI,MAAMkL,OAC1B,GAAItL,KAAKN,MAAMwE,OAEX,GADAlE,KAAKC,SAAS,CAAEiE,QAAQ,IACT,IAAXoH,EAAc,CACd,IAAM0S,EAAKhe,KAAKI,MAAM8d,SAASzN,UAC/BzQ,KAAKme,cAAcne,KAAKN,MAAMub,WAAY+C,QAI1Che,KAAKoe,mBAGb,IAAMC,EAAYre,KAAKI,MAAM6a,WACvBqD,EAAYte,KAAKN,MAAMub,WAC7B,GAAIoD,IAAcC,IACdte,KAAKC,SAAS,CAAEgb,WAAYoD,IACb,IAAX/S,GAAc,CACd,IAAM0S,EAAKhe,KAAKI,MAAM8d,SAASzN,UAC/BvO,QAAQC,IAAIL,IAAOuc,GAAWnQ,OAAO,mBACrChM,QAAQC,IAAIL,IAAOwc,GAAWpQ,OAAO,mBACrClO,KAAKme,cAAcE,EAAWL,M,kCAO9Bzd,GACRP,KAAKC,SAAS,CAAE6d,YAAavd,M,oCAEnBoW,GACV3W,KAAKC,SAAS,CAAEoW,aAAcM,EAAMC,OAAOrW,U,yCAG3CP,KAAKC,SACD,CACI4d,UAAW7d,KAAKN,MAAMme,a,qCAIlB,IAAD,OACX3b,QAAQC,IAAInC,KAAKN,MAAMub,YACvB,IAAMsD,GAAa,IAAIvH,MAAOwH,cAC9Btc,QAAQC,IAAIoc,GACZ,IAAME,EAAU5e,eAAeC,QAAQ,QACjCwR,EAAOtR,KAAKI,MAAM8d,SAASQ,aAAazM,OACxCzM,EAAQxF,KAAKI,MAAM8d,SAASzX,MAC5B1E,EAAO/B,KAAKI,MAAM6a,WAClBgD,EAAanc,IAAOC,GAAMmM,OAAO,cACvChM,QAAQC,IAAIJ,GACZG,QAAQC,IAAI8b,GbotBb,SAA+B5I,EAAWjN,EAASC,EAAM7B,EAAW/C,EAAMgb,EAASnN,EAAM9L,EAAOyY,GACrG,IAAM3V,EAAO,CACX+M,UAAWA,EACXjN,QAASA,EACTC,KAAMA,EACN7B,UAAWA,EACX/C,KAAMA,EACNgb,QAASA,EACTnN,KAAMA,EACN9L,MAAOA,EACPmZ,WAAYV,GAEd,OAAOxY,IAAM8C,KAAK,0BAA2BD,Ga/tBvCmB,CAAkCzJ,KAAKI,MAAM8d,SAASU,UAAUlM,OAAQ1S,KAAKN,MAAM2W,aAAckI,EAAYve,KAAKI,MAAM8d,SAASzN,UAAWzQ,KAAKN,MAAMoe,YAAaW,EAASnN,EAAM9L,EAAOyY,GACrLvU,MAAK,SAAA3F,GACF7B,QAAQC,IAAI,OAASsL,KAAKC,UAAU3J,EAAKA,OACzC,EAAK9D,SACD,CACI4d,UAAU,EACVxH,kBAAcjU,EACd8B,QAAQ,OAGnB4F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,QAAUsL,KAAKC,UAAU3D,S,sCAI7C/J,KAAKC,SACD,CACI4d,UAAU,M,iCAKX1D,GAEP,OADmB,IAAInD,KAAKmD,GAAW0E,WAAa,IAAM,IAAI7H,KAAKmD,GAAW2E,e,kCAY9E,IAAIC,EAAe/e,KAAKN,MAAMqe,aAE9B,OADA7b,QAAQC,IAAI4c,GACgB,IAAxBA,EAAarb,OACN,yBAAK/C,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQC,WAAY,WAA3D,mCAMPke,EAAarb,OAAS,IACtBqb,EAAeA,EAAavQ,MAAK,SAACC,EAAGC,GAGjC,OAFgB5M,IAAOA,IAAO2M,EAAEpG,KAAM,yBAAyB6F,OAAO,uBAAwB,YAAY7I,UAC1FvD,IAAOA,IAAO4M,EAAErG,KAAM,yBAAyB6F,OAAO,uBAAwB,YAAY7I,UAC3E,GAAK,MAIzB0Z,EAAa9S,KAAI,SAAUtC,EAAMpG,EAAOqG,GACvD,IAhMYoV,EAgMN3W,EAAOvG,IAAO6H,EAAKtB,KAAM,yBAAyB6F,OAAO,uBACzDqJ,EAAYzV,IAAO0V,IAAInP,GAAMoP,SAC7BwH,EAAO,6BAAMtV,EAAK8U,QAAX,qBAAuB3c,IAAOyV,GAAWrJ,OAAO,uBAAhD,gBACb,OACI,yBAAKhO,IAAKqD,EAAO2I,UAAU,cACvB,yBAAKA,UAAU,WACX,yBAAKvL,MAAO,CAAEI,OAAQ,OAAQ+R,MAAO,OAAQoM,aAAc,MAAO5J,gBAAiB,oBAAqB1U,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WAC3J,wBAAIF,MAAO,CAAEiO,MAAO,UAApB,OAvMJoQ,EAuMsDrV,EAAK0L,UAtM3EzV,OAAOuf,UAAUH,GACVA,EAAY,EAAIA,EAAhB,WAAgCA,EAAUha,YAG9C,QAqMa,yBAAKrE,MAAO,CAAEqO,SAAU,SACnBrF,EAAK2H,KAEL3H,EAAKvB,UAGd,kBAAC,KAAD,CAASwP,UAAU,QAAQ7U,MAAOkc,GAC9B,6BACI,yBAAK5d,IAAK+d,KAAY7d,IAAI,wB,2CAmB7B8d,GAAerf,KAAKC,SAAS,CAAE2d,eAAgByB,M,oCACrD,IAAD,OAEV,OADarf,KAAKI,MAAMkX,WAGhB,yBAAKpE,QAAS,kBAAM,EAAKoM,oBAAoB3e,MAAO,CAAEC,QAAkC,GAAzBZ,KAAKN,MAAMC,WAAkB,OAAS,OAAQqU,OAAQ,YACjH,yBAAK3S,IAAK4S,KAAU1S,IAAI,cAI7B,O,+BAED,IAAD,OACGwB,EAAU/C,KAAKI,MAAf2C,MACFwc,EAAavf,KAAKwf,cACxB,OACI,yBAAKtT,UAAU,uBACX,yBAAKA,UAAU,sBACX,wBAAIvL,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBAAqB7L,GAC1Dwc,GAEL,yBAAKrT,UAAU,wBACX,yBAAKA,UAAU,eACVlM,KAAKyf,cAGd,yBAAK9e,MAAO,CAAEC,QAASZ,KAAKN,MAAMme,SAAW,QAAU,SACnD,yBAAKld,MAAO,CAAE8T,QAAS,WAAY7T,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WACtF,yBAAKN,MAAM,eAAKI,MAAO,CAAEC,QAAS,OAAQkS,MAAO,IAAK/R,OAAQ,OAAQkS,eAAgB,SAAUpS,WAAY,SAAUoX,OAAQ,oBAAqBiH,aAAc,MAAOvQ,YAAa,QAArL,gBACA,kBAAC,KAAD,CAAOiH,YAAY,uCAASrV,MAAOP,KAAKN,MAAM2W,aAAczD,SAAU5S,KAAKsW,iBAE/E,yBAAK3V,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WACjE,yBAAKF,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaC,cAAe,SAC5E,kBAAC,KAAD,CAAQiS,QAAS,kBAAM,EAAKwM,kBAA5B,gBACA,kBAAC,KAAD,CAAQxM,QAAS,kBAAM,EAAKyM,gBAAgBlc,KAAK,WAAjD,wB,GA/PMjE,cCJnBogB,G,iLAPP,OACI,kBAAC,GAAD,CAAsB3E,WAAYnZ,IAAOA,MAASoM,OAAO,YAAY,YAAY7I,UAAYiG,OAAQtL,KAAKI,MAAMkL,OAAQvI,MAAM,2BAAOgB,KAAM/D,KAAKI,MAAMyf,aAAcvI,WAAYtX,KAAKI,MAAMkX,iB,GAJ5K9X,aCoBZsgB,I,wLAbP,OACI,yBAAK5T,UAAU,wBACX,yBAAKvL,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,oBAAqBG,WAAY,MAAOnO,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WAAtI,oBACA,yBAAKF,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWC,cAAe,MAAOsY,UAAW,SAC5F,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAcjO,OAAQ,EAAGgM,YAAY,KAEzC,kBAAC,GAAD,W,GATY9X,c,kCC+QtBugB,GAAW,CACbC,WAAY,CACR,CAAEC,EAAG,GAAIC,IAAK,IAAKC,IAAK,KACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,KACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,KACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,KACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,MACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,MACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,MACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,MACxB,CAAEF,EAAG,GAAIC,IAAK,IAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,KACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,IAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,KACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,OAE7BC,cAAe,CACX,CAAEH,EAAG,GAAIC,IAAK,IAAKC,IAAK,KACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,KACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,KACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,KACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,KACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,MACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,MACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,MACxB,CAAEF,EAAG,GAAIC,IAAK,IAAKC,IAAK,MACxB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MACzB,CAAEF,EAAG,GAAIC,IAAK,KAAMC,IAAK,MAE7BE,WAAY,CACR,CAAEJ,EAAG,EAAGC,IAAK,KAAMC,IAAK,MACxB,CAAEF,EAAG,EAAGC,IAAK,KAAMC,IAAK,MACxB,CAAEF,EAAG,EAAGC,IAAK,KAAMC,IAAK,MACxB,CAAEF,EAAG,EAAGC,IAAK,KAAMC,IAAK,MACxB,CAAEF,EAAG,EAAGC,IAAK,KAAMC,IAAK,MACxB,CAAEF,EAAG,EAAGC,IAAK,KAAMC,IAAK,MACxB,CAAEF,EAAG,EAAGC,IAAK,KAAMC,IAAK,OAE5BG,aAAc,CACV,CAAEL,EAAG,EAAGC,IAAK,KAAMC,IAAK,MACxB,CAAEF,EAAG,EAAGC,IAAK,KAAMC,IAAK,MACxB,CAAEF,EAAG,EAAGC,IAAK,KAAMC,IAAK,MACxB,CAAEF,EAAG,EAAGC,IAAK,KAAMC,IAAK,KACxB,CAAEF,EAAG,EAAGC,IAAK,KAAMC,IAAK,MACxB,CAAEF,EAAG,EAAGC,IAAK,KAAMC,IAAK,MACxB,CAAEF,EAAG,EAAGC,IAAK,KAAMC,IAAK,QCxHjBI,G,4LA3NU,IAAD,EAEgBvgB,KAAKI,MAA7BogB,EAFQ,EAERA,WAAYC,EAFJ,EAEIA,QACpBzgB,KAAKC,SAAS,CAAEygB,UAAWF,IAC3BG,KAAU,IAAMF,GAASG,SACzB5gB,KAAK6gB,c,2CAGa,IAAD,EACe7gB,KAAKI,MAA7BogB,EADS,EACTA,WAAYC,EADH,EACGA,QAEhBD,IADkBxgB,KAAKN,MAAnBghB,YAEJ1gB,KAAKC,SAAS,CAAEygB,UAAWF,IAC3BG,KAAU,IAAMF,GAASG,SACzB5gB,KAAK6gB,e,kCAKA,IAAD,EACiE7gB,KAAKI,MAAtEkP,EADA,EACAA,OAAQmR,EADR,EACQA,QAASD,EADjB,EACiBA,WAAYM,EAD7B,EAC6BA,SAAUhO,EADvC,EACuCA,MAAO/R,EAD9C,EAC8CA,OAAQggB,EADtD,EACsDA,OAC9D,GAAiB,OAAbD,QAAkC1e,IAAb0e,EACrB,OAAO,KAEX,IAAME,EAAYphB,OAAOkhB,EAASG,WAC5BC,EAAWthB,OAAOkhB,EAASK,UAC3BhP,EAAW2O,EAASM,SACpBC,EAAoBvf,IAAOqQ,EAAU,YAAY9M,UAA2C,IAAjB,EAAZ2b,EAAiBE,GAAiB,GAAK,GAAK,IAYjH,IAAMI,EATN,SAAoBvB,EAAUzQ,GAC1B,GAAe,MAAXA,GAA6B,MAAXA,EAAgB,CAClC,IAAMiS,EAAMxB,EAASC,WACrB,MAAO,CAACuB,EAAIA,EAAI7d,OAAS,GAAGwc,IAAKqB,EAAIA,EAAI7d,OAAS,GAAGyc,KAEzD,IAAMoB,EAAMxB,EAASK,cACrB,MAAO,CAACmB,EAAIA,EAAI7d,OAAS,GAAGwc,IAAKqB,EAAIA,EAAI7d,OAAS,GAAGyc,KAG5CqB,CAAWzB,GAAUzQ,GAG9B2Q,EAAIU,OACHc,OAAO,CAAC,EAAG,OACXC,MAAM,CAAC3gB,EAAQ,IAEhB4gB,EAAIhB,OACHc,OAAO,CAAC,GAAI,KACZC,MAAM,CAAC,EAAG5O,IAGX8O,EAAQjB,KAAYV,GACnB4B,MAAM,IACNC,SAAS,EAAG,GACZC,YAAY,IACZC,YAAW,SAAUC,EAAG1e,GAAS,OAAiB,KAAVA,EAAe0e,EAAI,MAAQA,KAGpEC,EAAQvB,KAAWgB,GAClBE,MAAM,IACNC,SAAS,EAAG,GACZC,aAAa,IACbC,YAAW,SAAUC,EAAG1e,GAAS,OAAO0e,EAAI,OAE7CE,EAAaxB,KAAYV,GACxBuB,WAAWF,GACXQ,SAAS,EAAG,GACZC,aAAa,IACbC,YAAW,SAAUC,EAAG1e,GACrB,OAAc,IAAVA,EACO,QAEG,IAAVA,EACO,QAEJ,QAEX6e,EAAMzB,KAAU,IAAMI,GACrBsB,OAAO,OACPC,KAAK,KAAM7B,GACX9f,MAAM,SAAU,SAChBA,MAAM,QAAS,QACf0hB,OAAO,KACPC,KAAK,YAAa,oBAIvBF,EAAIC,OAAO,KACNE,KAAKX,GACLU,KAAK,QAAS,QAInBF,EAAIC,OAAO,KACNE,KAAKL,GACLI,KAAK,QAAS,QACdA,KAAK,YAAa,gBAA0BvhB,EAAS,KAE1DqhB,EAAIC,OAAO,KACNE,KAAKJ,GACLG,KAAK,QAAS,QACdA,KAAK,YAAa,aAAexP,EAAQ,QAE9C,IAAK,IAAIvP,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CACrC,IAAM8L,EAAiB,IAAR9L,EACf6e,EAAIC,OAAO,QACNC,KAAK,KAAM,GACXA,KAAK,KAAMrC,EAAE5Q,IACbiT,KAAK,KAAMxP,GACXwP,KAAK,KAAMrC,EAAE5Q,IACb1O,MAAM,SAAU,0BAChBA,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,KAgBnC,IAAK,IAAI4C,EAAQ,GAAIA,EAAQ,GAAIA,IACzBA,EAAQ,GAAK,GACb6e,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAEpe,IACb+e,KAAK,KAAM,GACXA,KAAK,KAAMX,EAAEpe,IACb+e,KAAK,KAAMvhB,GACXJ,MAAM,SAAU,0BAChBA,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,KAIvC,GAAe,MAAX2O,GAA6B,MAAXA,EAAgB,CAClC,IAAK,IAAI/L,EAAQ,EAAGA,EAAQwc,GAASC,WAAWtc,OAAS,EAAGH,IACxD6e,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE5B,GAASC,WAAWzc,GAAO0c,IACxCqC,KAAK,KAAMrC,EAAEF,GAASC,WAAWzc,GAAO2c,MACxCoC,KAAK,KAAMX,EAAE5B,GAASC,WAAWzc,EAAQ,GAAG0c,IAC5CqC,KAAK,KAAMrC,EAAEF,GAASC,WAAWzc,EAAQ,GAAG2c,MAC5Cvf,MAAM,SAAU,UAChBA,MAAM,eAAgB,GAG/B,IAAK,IAAI4C,EAAQ,EAAGA,EAAQwc,GAASC,WAAWtc,OAAS,EAAGH,IACxD6e,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE5B,GAASC,WAAWzc,GAAO0c,IACxCqC,KAAK,KAAMrC,EAAEF,GAASC,WAAWzc,GAAO4c,MACxCmC,KAAK,KAAMX,EAAE5B,GAASC,WAAWzc,EAAQ,GAAG0c,IAC5CqC,KAAK,KAAMrC,EAAEF,GAASC,WAAWzc,EAAQ,GAAG4c,MAC5Cxf,MAAM,SAAU,QAChBA,MAAM,eAAgB,OAG9B,CACD,IAAK,IAAI4C,EAAQ,EAAGA,EAAQwc,GAASK,cAAc1c,OAAS,EAAGH,IAC3D6e,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE5B,GAASK,cAAc7c,GAAO0c,IAC3CqC,KAAK,KAAMrC,EAAEF,GAASK,cAAc7c,GAAO2c,MAC3CoC,KAAK,KAAMX,EAAE5B,GAASK,cAAc7c,EAAQ,GAAG0c,IAC/CqC,KAAK,KAAMrC,EAAEF,GAASK,cAAc7c,EAAQ,GAAG2c,MAC/Cvf,MAAM,SAAU,UAChBA,MAAM,eAAgB,GAG/B,IAAK,IAAI4C,EAAQ,EAAGA,EAAQwc,GAASK,cAAc1c,OAAS,EAAGH,IAC3D6e,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE5B,GAASK,cAAc7c,GAAO0c,IAC3CqC,KAAK,KAAMrC,EAAEF,GAASK,cAAc7c,GAAO4c,MAC3CmC,KAAK,KAAMX,EAAE5B,GAASK,cAAc7c,EAAQ,GAAG0c,IAC/CqC,KAAK,KAAMrC,EAAEF,GAASK,cAAc7c,EAAQ,GAAG4c,MAC/Cxf,MAAM,SAAU,QAChBA,MAAM,eAAgB,GAKnC,IAFA,IAAM6hB,EAAahC,EAEVjd,EAAQ,EAAGA,EAAQif,EAAW9e,OAAQH,IAAS,CACpD,IAAMsB,EAAU2d,EAAWjf,GAGrB8E,EAFUxD,EAAQrB,QAAQwB,WAAWC,OAC1BJ,EAAQwJ,QAAQrJ,WAAWC,OAGtCuO,GADkB1R,IAAOuG,EAAM,gBAAgBhD,UACpBgc,GAAnB,OACdnf,QAAQC,IAAIqR,GACRA,EAAQ,KAGRA,EAAQ,IAGZ4O,EAAIC,OAAO,UACNC,KAAK,KAAMX,EAAEnO,IACb8O,KAAK,KAAMrC,EAA2B,IAAzBrgB,OAAOiF,EAAQjB,UAC5B0e,KAAK,IAAK,GACV3hB,MAAM,OAAQ,a,+BAMjB,IAAD,EACuBX,KAAKI,MAAzB2gB,EADH,EACGA,OADH,EACWN,QAChB,OACI,yBAAK9K,GAAIoL,Q,GAtNOvhB,aCiObijB,G,4LAhOU,IAAD,EACgBziB,KAAKI,MAA7BogB,EADQ,EACRA,WAAYC,EADJ,EACIA,QACpBzgB,KAAKC,SAAS,CAAEygB,UAAWF,IAC3BG,KAAU,IAAMF,GAASG,SACzB5gB,KAAK6gB,c,2CAGa,IAAD,EACe7gB,KAAKI,MAA7BogB,EADS,EACTA,WAAYC,EADH,EACGA,QAEhBD,IADkBxgB,KAAKN,MAAnBghB,YAEJ1gB,KAAKC,SAAS,CAAEygB,UAAWF,IAC3BG,KAAU,IAAMF,GAASG,SACzB5gB,KAAK6gB,e,kCAGA,IAAD,EACiE7gB,KAAKI,MAAtEkP,EADA,EACAA,OAAQmR,EADR,EACQA,QAASD,EADjB,EACiBA,WAAYM,EAD7B,EAC6BA,SAAUhO,EADvC,EACuCA,MAAO/R,EAD9C,EAC8CA,OAAQggB,EADtD,EACsDA,OAC9D,GAAiB,OAAbD,QAAkC1e,IAAb0e,EACrB,OAAO,KAEX,IAAM3O,EAAW2O,EAASM,SACpBC,EAAoBvf,IAAOqQ,EAAU,YAAY9M,UAcvD,IAAMic,EAXN,SAAoBvB,EAAUzQ,GAC1B,GAAe,MAAXA,GAA6B,MAAXA,EAAgB,CAClC,IAAMiS,EAAMxB,EAASM,WAErB,OADAne,QAAQC,IAAIof,GACL,CAACA,EAAIA,EAAI7d,OAAS,GAAGwc,IAAKqB,EAAIA,EAAI7d,OAAS,GAAGyc,KAEzD,IAAMoB,EAAMxB,EAASO,aACrB,MAAO,CAACiB,EAAIA,EAAI7d,OAAS,GAAGwc,IAAKqB,EAAIA,EAAI7d,OAAS,GAAGyc,KAI5CqB,CAAWzB,GAAUzQ,GAG9B2Q,EAAIU,OACHc,OAAO,CAAC,KAAM,MACdC,MAAM,CAAC3gB,EAAQ,IAIhB4gB,EAAIhB,OACHc,OAAO,CAAC,EAAG,IACXC,MAAM,CAAC,EAAG5O,IAEX8O,EAAQjB,KAAYV,GACnB4B,MAAM,IACNC,SAAS,EAAG,GACZC,YAAY,IACZC,YAAW,SAAUC,EAAG1e,GAAS,OAAiB,KAAVA,EAAe0e,EAAI,MAAQA,KAEpEE,EAAaxB,KAAYV,GACxBuB,WAAWF,GACXQ,SAAS,EAAG,GACZC,aAAa,IACbC,YAAW,SAAUC,EAAG1e,GACrB,OAAc,IAAVA,EAAsB,QACZ,IAAVA,EAAsB,QACnB,QAIX2e,EAAQvB,KAAWgB,GAClBE,MAAM,GACNC,SAAS,EAAG,GACZC,aAAa,IACbC,YAAW,SAAUC,GAClB,OAAOA,EAAI,OAIfG,EAAMzB,KAAU,IAAMI,GACrBsB,OAAO,OACPC,KAAK,KAAM7B,GACX9f,MAAM,SAAU,SAChBA,MAAM,QAAS,QACf0hB,OAAO,KACPC,KAAK,YAAa,oBAIvBF,EAAIC,OAAO,KACNE,KAAKX,GACLU,KAAK,QAAS,QAInBF,EAAIC,OAAO,KACNE,KAAKL,GACLI,KAAK,QAAS,QACdA,KAAK,YAAa,gBAA0BvhB,EAAS,KAG1DqhB,EAAIC,OAAO,KACNE,KAAKJ,GACLG,KAAK,QAAS,QACdA,KAAK,YAAa,aAAexP,EAAQ,QAE9C,IAAK,IAAIvP,EAAQ,EAAGA,EAAQ,EAAGA,IAC3B6e,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAEpe,IACb+e,KAAK,KAAM,GACXA,KAAK,KAAMX,EAAEpe,IACb+e,KAAK,KAAMvhB,GACXJ,MAAM,SAAU,0BAChBA,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,KAInC,IAAK,IAAI4C,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CACrC,IAAM8L,EAAiB,IAAR9L,EAAc,IAC7B6e,EAAIC,OAAO,QACNC,KAAK,KAAM,GACXA,KAAK,KAAMrC,EAAE5Q,IACbiT,KAAK,KAAMxP,GACXwP,KAAK,KAAMrC,EAAE5Q,IACb1O,MAAM,SAAU,0BAChBA,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,KAenC,GAAe,MAAX2O,GAA6B,MAAXA,EAAgB,CAClC,IAAK,IAAI/L,EAAQ,EAAGA,EAAQwc,GAASM,WAAW3c,OAAS,EAAGH,IACxD6e,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE5B,GAASM,WAAW9c,GAAO0c,IACxCqC,KAAK,KAAMrC,EAAEF,GAASM,WAAW9c,GAAO2c,MACxCoC,KAAK,KAAMX,EAAE5B,GAASM,WAAW9c,EAAQ,GAAG0c,IAC5CqC,KAAK,KAAMrC,EAAEF,GAASM,WAAW9c,EAAQ,GAAG2c,MAC5Cvf,MAAM,SAAU,UAChBA,MAAM,eAAgB,GAG/B,IAAK,IAAI4C,EAAQ,EAAGA,EAAQwc,GAASM,WAAW3c,OAAS,EAAGH,IACxD6e,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE5B,GAASM,WAAW9c,GAAO0c,IACxCqC,KAAK,KAAMrC,EAAEF,GAASM,WAAW9c,GAAO4c,MACxCmC,KAAK,KAAMX,EAAE5B,GAASM,WAAW9c,EAAQ,GAAG0c,IAC5CqC,KAAK,KAAMrC,EAAEF,GAASM,WAAW9c,EAAQ,GAAG4c,MAC5Cxf,MAAM,SAAU,QAChBA,MAAM,eAAgB,OAG9B,CACD,IAAK,IAAI4C,EAAQ,EAAGA,EAAQwc,GAASO,aAAa5c,OAAS,EAAGH,IAC1D6e,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE5B,GAASO,aAAa/c,GAAO0c,IAC1CqC,KAAK,KAAMrC,EAAEF,GAASO,aAAa/c,GAAO2c,MAC1CoC,KAAK,KAAMX,EAAE5B,GAASO,aAAa/c,EAAQ,GAAG0c,IAC9CqC,KAAK,KAAMrC,EAAEF,GAASO,aAAa/c,EAAQ,GAAG2c,MAC9Cvf,MAAM,SAAU,UAChBA,MAAM,eAAgB,GAG/B,IAAK,IAAI4C,EAAQ,EAAGA,EAAQwc,GAASO,aAAa5c,OAAS,EAAGH,IAC1D6e,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE5B,GAASO,aAAa/c,GAAO0c,IAC1CqC,KAAK,KAAMrC,EAAEF,GAASO,aAAa/c,GAAO4c,MAC1CmC,KAAK,KAAMX,EAAE5B,GAASO,aAAa/c,EAAQ,GAAG0c,IAC9CqC,KAAK,KAAMrC,EAAEF,GAASO,aAAa/c,EAAQ,GAAG4c,MAC9Cxf,MAAM,SAAU,QAChBA,MAAM,eAAgB,GAMnC,IAFA,IAAM6hB,EAAahC,EAEVjd,EAAQ,EAAGA,EAAQif,EAAW9e,OAAQH,IAAS,CACpD,IAAMsB,EAAU2d,EAAWjf,GAGrB8E,EAFUxD,EAAQrB,QAAQwB,WAAWC,OAC1BJ,EAAQwJ,QAAQrJ,WAAWC,OAGtCyd,GADkB5gB,IAAOuG,EAAM,gBAAgBhD,UACpBgc,GAAnB,OACVqB,EAAQ,GAAKA,EAAQ,GAGI,IAAzB9iB,OAAOiF,EAAQjB,QAAiB,MAChCwe,EAAIC,OAAO,UACNC,KAAK,KAAMX,EAAEe,IACbJ,KAAK,KAAMrC,EAA2B,IAAzBrgB,OAAOiF,EAAQjB,UAC5B0e,KAAK,IAAK,GACV3hB,MAAM,OAAQ,Y,+BAgBrB,IAAD,EACuBX,KAAKI,MAAzB2gB,EADH,EACGA,OAAQN,EADX,EACWA,QAChB,OACI,yBAAK9K,GAAIoL,GACL,yBAAKpL,GAAI8K,S,GA3NIjhB,aC0EdmjB,G,YA1EX,WAAYviB,GAAQ,IAAD,8BACf,4CAAMA,KACDV,MAAQ,CACTkjB,oBAAqB,GAHV,E,6EAMF,IAAD,EAC2B5iB,KAAKI,MAApCyiB,EADI,EACJA,KAAMC,EADF,EACEA,WAAYhC,EADd,EACcA,SACpBiC,EAAc/iB,KAAKN,MAAMkjB,oBACzB9P,GAASkQ,OAAOC,OAAOC,WAAa,KAAO,EACjD,OAAQH,GACJ,KAAK,EACD,OAAO,kBAAC,GAAD,CAAejQ,MAAOA,EAAO/R,OAHiB,IAGD+f,SAAUA,EAAUN,WAAYsC,EAAY/B,OAAQ,WAAYN,QAAS,eAAgBnR,OAAQuT,EAAK3Q,OAC9J,KAAK,EACD,OAAO,kBAAC,GAAD,CAAgBY,MAAOA,EAAO/R,OALgB,IAKA+f,SAAUA,EAAUN,WAAYsC,EAAY/B,OAAQ,iBAAkBN,QAAS,qBAAsBnR,OAAQuT,EAAK3Q,OAC3K,QACI,OAAO,Q,6CAIIiR,GA0BnB,OAAIA,IAAqBnjB,KAAKN,MAAMkjB,oBAzBP,CACzBhiB,QAAS,OACTqS,eAAgB,SAChBpS,WAAY,SACZE,OAAQ,OACR0T,QAAS,UACTyK,aAAc,MACd5J,gBAAiB,YACjB1G,MAAO,QACPI,SAAU,OACV0K,YAAa,MACbD,YAAa,QACbE,YAAa,YACb3F,OAAQ,WAEmB,CAC3BpT,QAAS,OAAQqS,eAAgB,SACjCpS,WAAY,SAAUE,OAAQ,OAC9B0T,QAAS,UACTyK,aAAc,MAAO5J,gBAAiB,QACtC1G,MAAO,YAAaI,SAAU,OAC9B0K,YAAa,MAAOD,YAAa,QACjCE,YAAa,YACb3F,OAAQ,a,2CAQKqL,GACjBrf,KAAKC,SACD,CACI2iB,oBAAqBvD,M,+BAIvB,IAAD,SACL,OACI,6BACI,yBAAK1e,OAAK,GAAIC,QAAS,OAAQqS,eAAgB,gBAAiBpS,WAAY,SAAUyU,gBAAiB,YAAa8N,oBAAqB,MAAOC,qBAAsB,MAAOtiB,OAAQ,OAAQ0T,QAAS,YAA5L,yBAAiN,QAAjN,4BAAqO,UAArO,IACN,wBAAI9T,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBAAtC,kCACA,yBAAKjO,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWC,cAAe,MAAOJ,WAAY,WAC7F,yBAAKF,MAAOX,KAAKsjB,uBAAuB,GAAIvL,UAAW,kBAAM,EAAKwL,qBAAqB,KAAvF,kBACA,yBAAK5iB,MAAOX,KAAKsjB,uBAAuB,GAAIvL,UAAW,kBAAM,EAAKwL,qBAAqB,KAAvF,oBAGPvjB,KAAKwjB,qB,GAtEMhkB,aCwKbikB,I,kNApKX/jB,MAAQ,CACJwe,SAAU,EAAK9d,MAAM8d,SACrBL,UAAU,EACV6F,WAAY,GACZrN,kBAAcjU,EACdzC,WAAY,EACZgkB,QAAS,M,mFAIT3jB,KAAKsW,cAAgBtW,KAAKsW,cAAcC,KAAKvW,MAE7C,IAAMiR,EAAOjR,KAAKI,MAAM8d,SAASzN,UAAUzL,WAAWC,OAChDlF,EAAcF,eAAeC,QAAQ,QAC3CE,KAAKC,SAAS,CAAEN,WAAYI,EAAa4jB,QAAS1S,IAClDjR,KAAK4jB,sBAAsB3S,K,2CAG3B,IAAMA,EAAOjR,KAAKI,MAAM8d,SAASzN,UAAUzL,WAAWC,OAElDgM,IADYjR,KAAKN,MAAMikB,UAEvB3jB,KAAKC,SAAS,CAAE0jB,QAAS1S,IACzBjR,KAAK4jB,sBAAsB3S,M,4CAGbA,GAAO,IpB0rBY4S,EoB1rBb,QpB0rBaA,EoBzrBI5S,EpB0rBxCxL,IAAMC,IAAI,wCAA0Cme,IoBzrBhDna,MAAK,SAAA3F,GACF7B,QAAQC,IAAI,mCAAqCsL,KAAKC,UAAU3J,IAChE,EAAK9D,SAAS,CAAEyjB,WAAY3f,EAAKA,UAEpC+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,mCAAqCsL,KAAKC,UAAU3D,S,oCAG9D4M,GACV3W,KAAKC,SAAS,CAAEoW,aAAcM,EAAMC,OAAOrW,U,yCAG3CP,KAAKC,SACD,CACI4d,UAAW7d,KAAKN,MAAMme,a,sCAM9B7d,KAAKC,SACD,CACI4d,UAAU,M,qCAKN,IAAD,OACLU,GAAa,IAAIvH,MAAOwH,epBsoB/B,SAAsCpW,EAAS6O,EAAQzR,EAAOse,EAAYD,GAC/E,IAAMvb,EAAO,CACXF,QAASA,EACT6O,OAAQA,EACRzR,MAAOA,EAAMP,OACboD,KAAMyb,EACND,UAAWA,GAEb,OAAOpe,IAAM8C,KAAK,sDAAuDD,IoB7oBnEmB,CAAyCzJ,KAAKN,MAAM2W,aAAc,GAAIrW,KAAKN,MAAMwe,SAASzX,MAAO8X,EAAYve,KAAKN,MAAMwe,SAASzN,WAC5H/G,MAAK,SAAA3F,GACF7B,QAAQC,IAAI,mCAAqCsL,KAAKC,UAAU3J,IAChE,EAAK6f,sBAAsB,EAAKlkB,MAAMikB,YAEzC7Z,OAAM,SAAAC,GACH7H,QAAQC,IAAI,mCAAqCsL,KAAKC,UAAU3D,OAExE/J,KAAKC,SACD,CACI4d,UAAU,EACVxH,kBAAcjU,M,yCAIN,IAAD,OACf,OAA+B,IAA3BpC,KAAKI,MAAM2jB,YACJ,KAGH,yBAAK7Q,QAAS,kBAAM,EAAKoM,oBAAoB3e,MAAO,CAAEC,QAAkC,GAAzBZ,KAAKN,MAAMC,WAAkB,OAAS,OAAQqU,OAAQ,YACjH,yBAAK3S,IAAK4S,KAAU1S,IAAI,gB,+BAM9B,IAAD,OA2BL,SAASyiB,EAAY/M,EAAQ5O,GAOzB,IANmB9H,EAMb0jB,EAAIniB,IAAOuG,EAAM,yBAAyB6F,OAAO,uBACjDqJ,EAAYzV,IAAO0V,IAAIyM,GAAGxM,SAC1ByM,EAAcpiB,IAAOyV,GAAWrJ,OAAO,eAC7C,OARkB,QADC3N,EASF0W,SARmB7U,IAAV7B,EACX,KAEJA,GAKgB,qBAAQ2jB,EAAc,eAGrDhiB,QAAQC,IAAInC,KAAKN,MAAMgkB,YAEvB,IAzC0BzZ,EAyCpBka,EAAUnkB,KAAKN,MAAMgkB,WAAWlV,MAAK,SAACC,EAAGC,GAG3C,OAFgB5M,IAAO2M,EAAEpG,KAAM,wBAAwBhD,UACvCvD,IAAO4M,EAAErG,KAAM,wBAAwBhD,UACxB,GAAK,KAGlC+e,GA/CoBna,EA+CUka,EA9C5BhhB,MAAMC,QAAQ6G,GACU,IAApBA,EAASvG,OAEL,yBAAK/C,MAAO,CAAEI,OAAQ,OAAQgc,YAAa,OAAQnc,QAAS,OAAQC,WAAY,WAAhF,kCAKWoJ,EAASgC,KAAI,SAACtC,EAAMpG,GAAP,OAC5B,yBAAKrD,IAAKqD,EAAO2I,UAAU,iBACvB,yBAAKvL,MAAO,CAAEkU,WAAY,aAAelL,EAAKvB,SAC9C,kBAAC,KAAD,CAASwP,UAAU,WAAW7U,MAAOihB,EAAYra,EAAK0a,OAAQ1a,EAAKtB,OAC/D,yBAAKhH,IAAK+d,KAAY7d,IAAI,oBAOtC,yBAAKZ,MAAO,CAAEI,OAAQ,OAAQgc,YAAa,OAAQnc,QAAS,OAAQC,WAAY,WAAhF,mCA4BAyjB,EAAaC,KAAbD,SACR,OACI,yBAAK3jB,MAAO,CAAE6jB,aAAc,SACvBxkB,KAAKI,MAAM2jB,YAER,yBAAKpjB,MAAO,CAAE2U,gBAAiB,YAAa8N,oBAAqB,MAAOC,qBAAsB,MAAOtiB,OAAQ,OAAQ0T,QAAS,WAAY7T,QAAS,OAAQC,WAAY,WACnK,wBAAIF,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBAAtC,6BAGJ,yBAAK1C,UAAU,eACX,wBAAIvL,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBAAtC,4BACC5O,KAAKykB,oBAEd,yBAAKvY,UAAU,uBACVkY,GAEL,yBAAKzjB,MAAO,CAAEC,QAASZ,KAAKN,MAAMme,SAAW,QAAU,SACnD,yBAAKld,MAAO,CAAE8T,QAAS,WAAYa,gBAAiB,wBAChD,kBAACgP,EAAD,CAAU3O,GAAG,gBAAgBC,YAAY,mDAAWrV,MAAOP,KAAKN,MAAM2W,aAAczD,SAAU5S,KAAKsW,cAAeoO,UAAU,KAEhI,yBAAK/jB,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WACjE,yBAAKF,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaC,cAAe,SAC5E,kBAAC,KAAD,CAAQiS,QAAS,kBAAM,EAAKwM,kBAA5B,gBACA,kBAAC,KAAD,CAAQxM,QAAS,kBAAM,EAAKyM,gBAAgBlc,KAAK,WAAjD,wB,GA5JPjE,cC2INmlB,G,2MA/GbC,SAAW,SAAA7hB,GACT,OAAQA,GACN,IAAK,MACL,IAAK,OACH,OACE,6BACE,4BAAKA,GACL,wBAAIpC,MAAO,CAAEqO,SAAU,SAAvB,MAGN,IAAK,KACH,OACE,6BACE,4BAAK,MACL,mCAGN,IAAK,IACH,OACE,6BACE,4BAAK,KACL,mCAGN,IAAK,KACH,OACE,6BACE,4BAAK,MACL,oCAGN,IAAK,KACH,OACE,6BACE,4BAAKjM,GACL,oCAGN,IAAK,MAOL,IAAK,KACH,OACE,6BACE,4BAAKA,GACL,mCAMR,OAAOA,G,0EArFEsF,GAcT,OAAa,OAATA,GAA0B,OAATA,EAEjB,qCACG,MAKL,qCACE,kBAAC,KAAD,CAASuP,UAAU,SAAS7U,OAhBL8hB,EAgB8Bxc,EAfrC,OAAdwc,GAA+B,OAATxc,EACjB,KAEFvG,IAAOuG,EAAKyc,QAAQ9f,WAAWC,OAASoD,EAAK0c,QAAQ/f,WAAWC,OAAQ,sBAAsBiJ,OAAO,WAV9G,SAAoB2W,GAClB,OAAkB,OAAdA,GAA+B,OAATxc,EACjB,KAEFvG,IAAOuG,EAAKyc,QAAQ9f,WAAWC,OAASoD,EAAK0c,QAAQ/f,WAAWC,OAAQ,sBAAsBiJ,OAAO,SAmBvG8W,CAAW3c,KAjBlB,IAA2Bwc,I,+BAiFpB,MAuBgC7kB,KAAKI,MAApCG,EAvBD,EAuBCA,MAAOwC,EAvBR,EAuBQA,MAAOsF,EAvBf,EAuBeA,KAEhB4c,GAzBC,EAuBqBC,OAEXllB,KAAKmlB,WAAW9c,IAC3Buc,EAAW5kB,KAAK4kB,SAAS7hB,GAC/B,OACE,yBAAKpC,MAAO,CACVC,QAAS,OACT6U,iBAlBO,cAmBP1U,OAbO,SAeP,qCAEG6jB,GAEH,qCACE,wBACEjkB,MAAO,CACLqO,SAAU,OACVJ,MAAO9L,EAAgBvC,EAAOwC,GAAS,QAAU,QAxC3D,SAAqBxC,EAAOwC,GAC1B,MAAc,UAAVA,EACY,OAAVxC,EACK,KAEFA,EAAQ,IAEVA,EAoCA6kB,CAAY7kB,EAAOwC,KAGvBkiB,O,GAxIiBzlB,aC0FnB,SAAS6lB,GAAYzb,EAAKvB,GAG7B,IAFA,IAAIid,EAAW,GACTC,EAAald,EAAQ,MAClB9E,EAAQ,EAAGA,EAAQqG,EAAIlG,OAAQH,IAAS,CAC7C,IAAMsB,EAAU+E,EAAIrG,GACDzB,IAAO+C,EAAQigB,QAAQ9f,WAAWC,OAASJ,EAAQkgB,QAAQ/f,WAAWC,OAAQ,sBAAsBI,WACrGkgB,GACdD,EAAShgB,KAAKT,GAGtB,OAAOygB,EAGJ,SAASE,GAAqB5b,EAAKvB,EAAMuO,GAC5C,IAAI0O,EAAW,GAQf,OAPA1b,EAAI6b,SAAQ,SAAA5gB,GACe,IAAImS,KAAKnS,EAAQ6gB,QAAQC,MAAM,KAAK,GAAI9gB,EAAQ6gB,QAAQC,MAAM,KAAK,GAAI9gB,EAAQ6gB,QAAQC,MAAM,KAAK,IAAIjL,WAEvG,IAAI1D,KAAK3O,GAAMqS,WAAa7V,EAAQsG,SAASF,QAAQ2L,IAAW,GAClF0O,EAAShgB,KAAKT,MAGfygB,EAoBJ,SAASM,GAAYC,GACxB,SAASC,EAAaC,EAAMxlB,GACxB,QAAc6B,IAAV7B,GAAiC,OAAVA,EACvB,MAAO,GAEX,IAAMylB,EAAYzlB,EAAMolB,MAAM,KAC9B,MAAa,OAATI,EACQ,qCAAWC,EAAU,GAArB,SAEC,OAATD,EACQ,yBAAKplB,MAAO,CAAEC,QAAS,WAAvB,MAAsC,kCAAtC,IAAoDolB,EAAU,GAA9D,WAA0EA,EAAU,GAApF,MAA0F,kCAA1F,KAEC,OAATD,GAA0B,UAATA,GAA6B,SAATA,EAC7B,yBAAKplB,MAAO,CAAEC,QAAS,WAAvB,MAAsC,kCAAtC,IAAoDolB,EAAU,GAA9D,WAA0EA,EAAU,GAApF,MAA0F,kCAA1F,KAEC,UAATD,GAAyC,OAArBA,EAAK5lB,MAAM,MAEvB,yBAAKQ,MAAO,CAAEC,QAAS,WAAvB,MAAsC,kCAAtC,IAAoDolB,EAAU,GAA9D,WAA0EA,EAAU,GAApF,aAAkGA,EAAU,GAA5G,MAAkH,kCAAlH,WAAuIA,EAAU,GAAjJ,MAAuJ,kCAAvJ,KAEe,OAAvBD,EAAK5lB,MAAM,QACH,yBAAKQ,MAAO,CAAEC,QAAS,WAAvB,MAAsC,kCAAtC,IAAoDolB,EAAU,GAA9D,UAAyEA,EAAU,GAAnF,MAAyF,kCAAzF,UAA6GA,EAAU,GAAvH,MAA6H,kCAA7H,WAAkJA,EAAU,GAA5J,MAEgB,OAAxBD,EAAK5lB,MAAM,SACH,yBAAKQ,MAAO,CAAEC,QAAS,WAAvB,MAAsC,kCAAtC,IAAoDolB,EAAU,GAA9D,WAA0EA,EAAU,GAApF,aAAkGA,EAAU,GAA5G,MAAkH,kCAAlH,WAAuIA,EAAU,GAAjJ,MAAuJ,kCAAvJ,MAELzlB,EAGX,IAAI0lB,EAAY,GAChB,GAAI9iB,MAAMC,QAAQyiB,GACd,IAAK,IAAItiB,EAAQ,EAAGA,EAAQsiB,EAAKniB,OAAQH,IAAS,CAC9C,IAAMsB,EAAUghB,EAAKtiB,GACrB,QAAgBnB,IAAZyC,EAAuB,CACvB,IAAMqhB,EAAgBrhB,EAAQshB,QAAQnhB,WACtC,GAAkC,OAA9BkhB,EAAc/lB,MAAM,MAAgB,CACpC,IAAMimB,EAAYF,EAAcP,MAAM,KAChC5iB,EAAQqjB,EAAU,GAElBC,EAAW,CACb,KAAQtjB,EACR,QAAW+iB,EAAa/iB,EAHdqjB,EAAU,IAIpB,KAAQvhB,EAAQrB,QAAQwB,WAAWC,OACnC,KAAQJ,EAAQwJ,SAEpB4X,EAAU3gB,KAAK+gB,KAK/B,OAAOJ,E,IXqKIK,G,2MArVX5mB,MAAQ,CACJ6mB,OAAQ,CAAC,CAAE,gBAAmB,CAAE,KAAQ,IAAM,SAAY,KAC1DC,SAAU,EACVC,UAAW,EACXC,SAAU,EAEVC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,QAAS,GAETC,cAAe,KACfC,OAAQ,KACRC,QAAS,M,mFAEQ,IAAD,OAChB/c,GAAwB,gBACnBV,MAAK,SAAAa,GACFrI,QAAQC,IAAI,iCAAmCsL,KAAKC,UAAUnD,EAAOxG,OACrE,EAAK9D,SAAS,CACVsmB,OAAQhc,EAAOxG,UAGtB+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,iCAAmCsL,KAAKC,UAAU3D,OATtD,MAWiB/J,KAAKI,MAA9B6a,EAXQ,EAWRA,WAAYiD,EAXJ,EAWIA,SACdkJ,EAAOtlB,IAAO9B,KAAKI,MAAM8d,SAASxN,UAAW,YAAYrL,UAC/DrF,KAAKC,SAAS,CAAEgnB,cAAehM,EAAYiM,OAAQhJ,EAASzX,MAAO0gB,QAASC,IAC5EpnB,KAAKqnB,WAAWpM,EAAYiD,EAASzX,MAAO2gB,K,2CAG1B,IAAD,EACgBpnB,KAAKI,MAA9B6a,EADS,EACTA,WAAYiD,EADH,EACGA,SADH,EAE0Ble,KAAKN,MAAxCunB,EAFS,EAETA,cAAeC,EAFN,EAEMA,OAAQC,EAFd,EAEcA,QACzBC,EAAOtlB,IAAO9B,KAAKI,MAAM8d,SAASxN,UAAW,YAAYrL,UAC3D4hB,IAAkBhM,GAAciM,IAAWhJ,EAASzX,OAAS0gB,IAAYC,IACzEpnB,KAAKC,SAAS,CAAEgnB,cAAehM,EAAYiM,OAAQhJ,EAASzX,MAAO0gB,QAASC,IAC5EpnB,KAAKqnB,WAAWpM,EAAYiD,EAASzX,MAAO2gB,M,iCAGzCnM,EAAY1N,EAAK6Z,GAAO,IAAD,OAO9B,IAAME,EAAcxlB,IAAOslB,GAAMlZ,OAAO,cAClCqZ,EAPN,SAA6BtM,GACzB,IAAMuM,GAAoB,IAAIxQ,MAAO0D,UAAYO,EAGjD,OADiBtX,SAAS6jB,EADH,QACyC,EAI9CC,CAAoBxM,GAC1CxR,GAAuC8D,EAAK+Z,GACvC5d,MAAK,SAAA3F,GAAU,EAAK9D,SAAS,CAAE0mB,SAAU5iB,EAAKA,UAC9C+F,OAAM,SAAAC,GAAS7H,QAAQC,IAAI,iCAAmCsL,KAAKC,UAAU3D,OAClFN,GAAuC8D,EAAK+Z,GACvC5d,MAAK,SAAA3F,GAAU,EAAK9D,SAAS,CAAE2mB,SAAU7iB,EAAKA,UAC9C+F,OAAM,SAAAC,GAAS7H,QAAQC,IAAI,iCAAmCsL,KAAKC,UAAU3D,OAClFN,GAAuC8D,EAAK+Z,GACvC5d,MAAK,SAAA3F,GAAU,EAAK9D,SAAS,CAAE4mB,SAAU9iB,EAAKA,UAC9C+F,OAAM,SAAAC,GAAS7H,QAAQC,IAAI,iCAAmCsL,KAAKC,UAAU3D,OAClFN,EAAuC8D,EAAK+Z,GACvC5d,MAAK,SAAA3F,GAAU,EAAK9D,SAAS,CAAE6mB,SAAU/iB,EAAKA,UAC9C+F,OAAM,SAAAC,GAAS7H,QAAQC,IAAI,iCAAmCsL,KAAKC,UAAU3D,OAClFN,GAAuC8D,EAAK+Z,GACvC5d,MAAK,SAAA3F,GAAU,EAAK9D,SAAS,CAAE8mB,SAAUhjB,EAAKA,UAC9C+F,OAAM,SAAAC,GAAS7H,QAAQC,IAAI,iCAAmCsL,KAAKC,UAAU3D,OAClFN,GAAsC8D,EAAKga,EAAe,MAAO,YAC5D7d,MAAK,SAAA3F,GAAU,EAAK9D,SAAS,CAAE+mB,QAASjjB,EAAKA,UAC7C+F,OAAM,SAAAC,GAAS7H,QAAQC,IAAI,gCAAkCsL,KAAKC,UAAU3D,S,6CAE9DH,EAAKgN,GAAS,IAAD,OACxBsH,EAAale,KAAKI,MAAlB8d,SACAqI,EAAWvmB,KAAKN,MAAhB6mB,OAEJmB,OAActlB,EACZulB,EAAkBpB,EAAOqB,MAAK,SAAAld,GAAI,OAAgD,OAA5CA,EAAKmd,gBAAgBvW,KAAKnR,MAAMyW,MACtEkR,EAAcle,EAAIlG,OACxBkG,EAAI6b,SAAQ,SAAC/a,EAAMnH,GACfkG,GAAsCyU,EAASzX,MAAOiE,EAAKqd,KAAM7J,EAAS8J,OAAQtd,EAAKud,UAClFve,MAAK,SAAA3F,GACF7B,QAAQC,IAAI,gCAAkCsL,KAAKC,UAAU3J,EAAKA,OAClE,IAAMmkB,EAAUnkB,EAAKA,KAGfokB,EAAmBR,EAAgBS,SAASR,MAAK,SAAAS,GAAO,OAAIA,EAAQnoB,MAAQ0W,KAC5E0R,EAAK,IAAIC,OAAOJ,EAAiBK,UAAWL,EAAiBM,aAEnEP,EAAQzC,SAAQ,SAAA5gB,GACZ,IAAM1E,EAAQ0E,EAAQ6jB,QAAQvoB,MAAMmoB,GACpC,GAAc,OAAVnoB,EAAgB,CAChB,IAAMwoB,EAAiBje,EAAKgb,QAAU,IAAMhb,EAAKke,QAC3CC,EAAuB/mB,IAAO6mB,EAAe1jB,OAAQ,uBAAuBI,UAC5EyjB,EAAa3oB,EAAMgoB,EAAiBzT,UAEvB,KAAfoU,QAAoC1mB,IAAf0mB,GAA2C,OAAfA,GAAuBD,EArB1E,IAsBEnB,EAAcoB,EACC,OAAXlS,EACA+D,GAAW+M,EACO,QAAX9Q,EACPgE,GAAa8M,EACK,OAAX9Q,IACPiE,GAAW6M,QAK3B,EAAKqB,oBAAoBjB,EAAavkB,EAAOqT,MAEhD9M,OAAM,SAAAC,GACH7H,QAAQC,IAAI,gCAAkCsL,KAAKC,UAAU3D,IAC7D,EAAKgf,oBAAoBjB,EAAavkB,EAAOqT,W,0CAIzCkR,EAAakB,EAAYpS,GAErCoS,IAAelB,EAAc,IACd,OAAXlR,GAAmB5W,KAAKN,MAAM8mB,SAFrB,EAGTxmB,KAAKC,SAAS,CAAEumB,SAAUxmB,KAAKN,MAAM8mB,SAAW,IAC9B,QAAX5P,GAAoB5W,KAAKN,MAAM+mB,UAJ7B,EAKTzmB,KAAKC,SAAS,CAAEwmB,UAAWzmB,KAAKN,MAAM+mB,UAAY,IAChC,SAAX7P,GAAqB5W,KAAKN,MAAMgnB,SAN9B,GAOT1mB,KAAKC,SAAS,CAAEymB,SAAU1mB,KAAKN,MAAMgnB,SAAW,O,oCAMxD,MAAe,aADI1mB,KAAKI,MAAhB8kB,OAEG,KAGP,yBAAKvkB,MAAO,CAAE2U,gBAAiB,YAAa8N,oBAAqB,MAAOC,qBAAsB,MAAOtiB,OAAQ,OAAQ0T,QAAS,WAAY7T,QAAS,OAAQC,WAAY,WACnK,wBAAIF,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBAAtC,iD,+BAKR,SAASqa,EAAY7jB,GACjB,OAAqB,IAAjBA,EAAM1B,OACC,KAEJ0B,EAAMA,EAAM1B,OAAS,GAL3B,MAQ0B1D,KAAKI,MAA5B6a,EARH,EAQGA,WAAYiK,EARf,EAQeA,OARf,EASuDllB,KAAKN,MAAzDinB,EATH,EASGA,SAAUC,EATb,EASaA,SAAUC,EATvB,EASuBA,SAAUC,EATjC,EASiCA,SAAUE,EAT3C,EAS2CA,QAE1CkC,EAAeC,GAAuBxC,EAAU1L,GAChDmO,EAAeD,GAAuBvC,EAAU3L,GAChDoO,EAAeF,GAAuBtC,EAAU5L,GAChDqO,EAAeH,GAAuBrC,EAAU7L,GAGhDsO,EAAkBJ,GAAgCnC,EAAS/L,EAAY,MAC7Ejb,KAAKwpB,uBAAuBD,EAAiB,MAE7C,IAAME,EAAkBN,GAAgCnC,EAAS/L,EAAY,MAC7Ejb,KAAKwpB,uBAAuBC,EAAiB,MAE7C,IAAMC,EAAoBP,GAAgCnC,EAAS/L,EAAY,iBAC/Ejb,KAAKwpB,uBAAuBE,EAAmB,OAE/C,IAAMC,EAAUV,EAAYC,EAAa5lB,QAAO,SAAU/C,EAAOgD,EAAO6B,GACpE,OAAyB,OAAlB7E,EAAMopB,YAEXC,EAAMX,EAAYG,EAAa9lB,QAAO,SAAU/C,EAAOgD,EAAO6B,GAChE,OAAuB,OAAhB7E,EAAMspB,UAEXC,EAAMb,EAAYG,EAAa9lB,QAAO,SAAU/C,EAAOgD,EAAO6B,GAChE,OAAuB,OAAhB7E,EAAMwpB,UAEXC,EAAOf,EAAYG,EAAa9lB,QAAO,SAAU/C,EAAOgD,EAAO6B,GACjE,OAAuB,OAAhB7E,EAAM0pB,UAEXC,EAAMjB,EAAYG,EAAa9lB,QAAO,SAAU/C,EAAOgD,EAAO6B,GAChE,OAAuB,OAAhB7E,EAAM4pB,UAEXC,EAAWnB,EAAYG,EAAa9lB,QAAO,SAAU/C,EAAOgD,EAAO6B,GACrE,OAAuB,OAAhB7E,EAAM8pB,UAEXC,EAAKrB,EAAYI,EAAa/lB,QAAO,SAAU/C,EAAOgD,EAAO6B,GAC/D,OAAuB,OAAhB7E,EAAMgqB,UAEXC,EAAIvB,EAAYI,EAAa/lB,QAAO,SAAU/C,EAAOgD,EAAO6B,GAC9D,OAAuB,OAAhB7E,EAAMwpB,UAEXU,EAAKxB,EAAYI,EAAa/lB,QAAO,SAAU/C,EAAOgD,EAAO6B,GAC/D,OAAuB,OAAhB7E,EAAM0pB,UAEXS,EAAIzB,EAAYI,EAAa/lB,QAAO,SAAU/C,EAAOgD,EAAO6B,GAC9D,OAAuB,OAAhB7E,EAAMoqB,UAEXC,EAAM3B,EAAYI,EAAa/lB,QAAO,SAAU/C,EAAOgD,EAAO6B,GAChE,OAAuB,OAAhB7E,EAAMsqB,UAEXC,EAAM7B,EAAYI,EAAa/lB,QAAO,SAAU/C,EAAOgD,EAAO6B,GAChE,OAAuB,OAAhB7E,EAAMwqB,UAEXC,EAAK/B,EAAYK,EAAahmB,QAAO,SAAU/C,EAAOgD,EAAO6B,GAC/D,OAAsB,OAAf7E,EAAM0qB,SAEXC,EAAOjC,EAAYK,EAAahmB,QAAO,SAAU/C,EAAOgD,EAAO6B,GACjE,OAAsB,OAAf7E,EAAM4qB,SAEXC,EAAKnC,EAAYK,EAAahmB,QAAO,SAAU/C,EAAOgD,EAAO6B,GAC/D,OAAsB,OAAf7E,EAAM8qB,SAEXC,EAAMrC,EAAYK,EAAahmB,QAAO,SAAU/C,EAAOgD,EAAO6B,GAChE,OAAsB,OAAf7E,EAAMgrB,SAEXC,EAAMvC,EAAYI,EAAa/lB,QAAO,SAAU/C,EAAOgD,EAAO6B,GAChE,OAAuB,OAAhB7E,EAAMkrB,UAGXC,EAAKzC,EAAYI,EAAa/lB,QAAO,SAAU/C,EAAOgD,EAAO6B,GAC/D,OAAuB,OAAhB7E,EAAMorB,UAEXC,EAAM3C,EAAYI,EAAa/lB,QAAO,SAAU/C,EAAOgD,EAAO6B,GAChE,OAAuB,OAAhB7E,EAAMsrB,UAEXC,EAAM7C,EAAYI,EAAa/lB,QAAO,SAAU/C,EAAOgD,EAAO6B,GAChE,OAAuB,OAAhB7E,EAAMwrB,UAEXC,EAAO/C,EAAYI,EAAa/lB,QAAO,SAAU/C,EAAOgD,EAAO6B,GACjE,OAAuB,OAAhB7E,EAAM0rB,UAEXC,EAAOjD,EAAYI,EAAa/lB,QAAO,SAAU/C,EAAOgD,EAAO6B,GACjE,OAAuB,OAAhB7E,EAAM4rB,UAEXC,EAAOnD,EAAYI,EAAa/lB,QAAO,SAAU/C,EAAOgD,EAAO6B,GACjE,OAAuB,OAAhB7E,EAAM8pB,UAEXgC,EAAUpD,EAAYI,EAAa/lB,QAAO,SAAU/C,EAAOgD,EAAO6B,GACpE,OAAuB,OAAhB7E,EAAM4pB,UAEXmC,EAAOrD,EAAYI,EAAa/lB,QAAO,SAAU/C,EAAOgD,EAAO6B,GACjE,OAAuB,OAAhB7E,EAAMgsB,UAEXC,EAAOvD,EAAYI,EAAa/lB,QAAO,SAAU/C,EAAOgD,EAAO6B,GACjE,OAAuB,OAAhB7E,EAAMksB,UAEXC,EAAWzD,EAAYI,EAAa/lB,QAAO,SAAU/C,EAAOgD,EAAO6B,GACrE,OAAuB,OAAhB7E,EAAM4pB,UAEXwC,EACN,SAAqBL,EAAME,GAEvB,GADAtqB,QAAQC,IAAImqB,GACC,OAATA,GAAgC,OAAfA,EAAKC,YAAiCnqB,IAAfkqB,EAAKC,OAA8C,IAAvB3sB,OAAO0sB,EAAKC,OAChF,OAAO,KAEX,GAAa,OAATC,GAAgC,OAAfA,EAAKC,YAAiCrqB,IAAfoqB,EAAKC,OAA8C,IAAvB7sB,OAAO4sB,EAAKC,OAChF,OAAO,KAEX,OAAOjb,WAAW5R,OAAO0sB,EAAKC,OAAS3sB,OAAO4sB,EAAKC,QAAQhb,QAAQ,GATzDmb,CAAYN,EAAME,GAWhC,SAASK,EAAavhB,GAClB,MAAe,aAAXA,EACO,MAEC,OAGhB,SAASwhB,EAAUvsB,GACf,YAAc6B,IAAV7B,GAAiC,OAAVA,GAA4BwsB,MAAVxsB,EAClC,KAEJA,EAAMyE,WAAWC,OAE5B,IAAM+nB,EAAShtB,KAAKitB,cACpB,OACI,6BACKD,EACD,yBAAKrsB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWC,cAAe4rB,EAAa3H,KACvF,yBAAKvkB,MAAO,CAAEsX,OAAQ,kCAClB,kBAAC,GAAD,CAAaiN,OAAQA,EAAQ3kB,MAAOusB,EAAUnD,EAAQA,SAAU5mB,MAAO,UAAWsF,KAAOshB,KAE7F,yBAAKhpB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,gBAAiBiX,OAAQ,kCACzE,kBAAC,GAAD,CAAaiN,OAAQA,EAAQ3kB,MAAOusB,EAAUlD,EAAIC,OAAQ9mB,MAAO,MAAOsF,KAAMuhB,IAC9E,kBAAC,GAAD,CAAa1E,OAAQA,EAAQ3kB,MAAOusB,EAAUhD,EAAIC,OAAQhnB,MAAO,MAAOsF,KAAMyhB,IAC9E,kBAAC,GAAD,CAAa5E,OAAQA,EAAQ3kB,MAAOusB,EAAU9C,EAAKC,OAAQlnB,MAAO,OAAQsF,KAAM2hB,IAChF,kBAAC,GAAD,CAAa9E,OAAQA,EAAQ3kB,MAAOusB,EAAU5C,EAAIC,OAAQpnB,MAAO,MAAOsF,KAAM6hB,IAC9E,kBAAC,GAAD,CAAahF,OAAQA,EAAQ3kB,MAAOusB,EAAU1C,EAASC,OAAQtnB,MAAO,WAAYsF,KAAM+hB,MAGhG,yBAAKzpB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWC,cAAe4rB,EAAa3H,GAAS3L,UAAWsT,EAAa3H,KACxH,yBAAKvkB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,gBAAiBiX,OAAQ,kCACzE,kBAAC,GAAD,CAAaiN,OAAQA,EAAQ3kB,MAAOusB,EAAUxC,EAAGC,OAAQxnB,MAAO,KAAMsF,KAAMiiB,IAC5E,kBAAC,GAAD,CAAapF,OAAQA,EAAQ3kB,MAAOusB,EAAUtC,EAAET,OAAQhnB,MAAO,IAAKsF,KAAMmiB,IAC1E,kBAAC,GAAD,CAAatF,OAAQA,EAAQ3kB,MAAOusB,EAAUjS,IAAW9X,MAAO,KAAMsF,KAAMoiB,IAHhF,IAII,kBAAC,GAAD,CAAavF,OAAQA,EAAQ3kB,MAAOusB,EAAUpC,EAAEC,OAAQ5nB,MAAO,IAAKsF,KAAMqiB,IAC1E,kBAAC,GAAD,CAAaxF,OAAQA,EAAQ3kB,MAAOusB,EAAUnS,IAAW5X,MAAO,KAAMsF,KAAM,OALhF,KAOA,yBAAK1H,MAAO,CAAEsX,OAAQ,kCAClB,kBAAC,GAAD,CAAaiN,OAAQA,EAAQ3kB,MAAOusB,EAAUlC,EAAIC,OAAQ9nB,MAAO,MAAOsF,KAAMuiB,MAGtF,yBAAKjqB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWC,cAAe4rB,EAAa3H,GAAS3L,UAAWsT,EAAa3H,KACxH,yBAAKvkB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,gBAAiBiX,OAAQ,kCACzE,kBAAC,GAAD,CAAaiN,OAAQA,EAAQ3kB,MAAOusB,EAAUhC,EAAIoC,OAAQnqB,MAAO,MAAOsF,KAAMyiB,IAC9E,kBAAC,GAAD,CAAa5F,OAAQA,EAAQ3kB,MAAOusB,EAAUlS,IAAa7X,MAAO,MAAOsF,KAAM,OAFnF,MAIA,yBAAK1H,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,gBAAiBiX,OAAQ,kCACzE,kBAAC,GAAD,CAAaiN,OAAQA,EAAQ3kB,MAAOusB,EAAU9B,EAAGC,MAAOloB,MAAO,KAAMsF,KAAM2iB,IAC3E,kBAAC,GAAD,CAAa9F,OAAQA,EAAQ3kB,MAAOusB,EAAU5B,EAAKC,MAAOpoB,MAAO,MAAOsF,KAAM6iB,IAC9E,kBAAC,GAAD,CAAahG,OAAQA,EAAQ3kB,MAAOusB,EAAU1B,EAAGC,MAAOtoB,MAAO,KAAMsF,KAAM+iB,IAC3E,kBAAC,GAAD,CAAalG,OAAQA,EAAQ3kB,MAAOusB,EAAUxB,EAAIC,MAAOxoB,MAAO,KAAMsF,KAAMijB,MAGpF,yBAAK3qB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe4rB,EAAa3H,GAAS3L,UAAWsT,EAAa3H,KAC5H,yBAAKvkB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,gBAAiBiX,OAAQ,kCACzE,kBAAC,GAAD,CAAaiN,OAAQA,EAAQ3kB,MAAOusB,EAAUtB,EAAIC,OAAQ1oB,MAAO,MAAOsF,KAAMmjB,IAC9E,kBAAC,GAAD,CAAatG,OAAQA,EAAQ3kB,MAAOusB,EAAUpB,EAAGC,OAAQ5oB,MAAO,KAAMsF,KAAMqjB,KAEhF,yBAAK/qB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,gBAAiBiX,OAAQ,kCACzE,kBAAC,GAAD,CAAaiN,OAAQA,EAAQ3kB,MAAOusB,EAAUlB,EAAIC,OAAQ9oB,MAAO,MAAOsF,KAAMujB,IAC9E,kBAAC,GAAD,CAAa1G,OAAQA,EAAQ3kB,MAAOusB,EAAUhB,EAAIC,OAAQhpB,MAAO,MAAOsF,KAAMyjB,KAElF,yBAAKnrB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,gBAAiBiX,OAAQ,kCACzE,kBAAC,GAAD,CAAaiN,OAAQA,EAAQ3kB,MAAOusB,EAAUd,EAAKC,OAAQlpB,MAAO,OAAQsF,KAAM2jB,IAChF,kBAAC,GAAD,CAAa9G,OAAQA,EAAQ3kB,MAAOusB,EAAUZ,EAAKC,OAAQppB,MAAO,OAAQsF,KAAM6jB,MAGxF,yBAAKvrB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWC,cAAe4rB,EAAa3H,GAAS3L,UAAWsT,EAAa3H,KACxH,yBAAKvkB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,gBAAiBiX,OAAQ,kCACzE,kBAAC,GAAD,CAAaiN,OAAQA,EAAQ3kB,MAAOusB,EAAUV,EAAK/B,OAAQtnB,MAAO,QAASsF,KAAM+jB,IACjF,kBAAC,GAAD,CAAalH,OAAQA,EAAQ3kB,MAAOusB,EAAUT,EAAQlC,OAAQpnB,MAAO,WAAYsF,KAAMgkB,KAE3F,yBAAK1rB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,gBAAiBiX,OAAQ,kCACzE,kBAAC,GAAD,CAAaiN,OAAQA,EAAQ3kB,MAAOusB,EAAUR,EAAKC,OAAQxpB,MAAO,OAAQsF,KAAMikB,IAChF,kBAAC,GAAD,CAAapH,OAAQA,EAAQ3kB,MAAOusB,EAAUN,EAAKC,OAAQ1pB,MAAO,OAAQsF,KAAMmkB,IAChF,kBAAC,GAAD,CAAatH,OAAQA,EAAQ3kB,MAAOusB,EAAkB,IAARH,GAAc5pB,MAAO,QAASsF,KAAM,OAClF,kBAAC,GAAD,CAAa6c,OAAQA,EAAQ3kB,MAAOusB,EAAUJ,EAASvC,OAAQpnB,MAAO,WAAYsF,KAAMqkB,IAJ5F,W,GA1UQltB,aYufb2tB,I,kNAtfXztB,MAAQ,CACJ0tB,WAAY,GACZlG,OAAQ,M,oFAEU,IACVzgB,EAAUzG,KAAKI,MAAfqG,MACIA,EAAMzB,WAAWC,SACdjF,KAAKN,MAAMwnB,SAEtBlnB,KAAKC,SAAS,CAAEinB,OAAQzgB,EAAMzB,WAAWC,SACzCjF,KAAKqtB,sB,0CAIQ,IACT5mB,EAAUzG,KAAKI,MAAfqG,MACRzG,KAAKC,SAAS,CAAEinB,OAAQzgB,EAAMzB,WAAWC,SACzCjF,KAAKqtB,qB,yCAGW,IAAD,OAoBf,IAAM1kB,EAAU7G,IAAOA,MAASoM,OAAO,cAAe,cAAcA,OAAO,kBACrExF,EAAY5G,IAAOA,IAAOA,MAASoM,OAAO,cAAe,cAAc7I,UAAa,OAAsB6I,OAAO,kBArBxG,EAsBWlO,KAAKI,MAAvB2gB,EAtBO,EAsBPA,OACFxT,EAvBS,EAsBC9G,MACEzB,WAAWC,OACvBxB,EAvBN,SAAoBA,GAChB,OAAQA,GACJ,IAAK,SACD,MAAO,KACX,IAAK,SACD,MAAO,MACX,IAAK,SACD,MAAO,KACX,IAAK,UACD,MAAO,OACX,IAAK,UACD,MAAO,MACX,IAAK,SACD,MAAO,MAUN6pB,CAAWvM,GACT,YAAXA,GACAtX,GAAuC8D,EAAK7E,EAAWC,EAASlF,EAAM,GACjEiG,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CACVmtB,WAAYrpB,EAAKA,OAErB,EAAK8c,eAER/W,OAAM,SAAAC,GAAS7H,QAAQC,IAAI4H,MAErB,WAAXgX,GAAkC,WAAXA,GAAkC,YAAXA,GAE9CtX,GAAuC8D,EAAK7E,EAAWC,EAASlF,EAAM,GACjEiG,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CACVmtB,WAAYrpB,EAAKA,OAErB,EAAK8c,eAER/W,OAAM,SAAAC,GAAS7H,QAAQC,IAAI4H,MAErB,WAAXgX,GAEAtX,GAA6B8D,EAAK7E,EAAWC,EAASlF,GACjDiG,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CACVmtB,WAAYrpB,EAAKA,OAErB,EAAK8c,eAER/W,OAAM,SAAAC,GACH7H,QAAQC,IAAI4H,MAGT,WAAXgX,IACAJ,KAAU,WAAWC,SACrB5gB,KAAK6gB,UAAU,O,sCAGN,IAAD,EACiB7gB,KAAKI,MAA1BmtB,EADI,EACJA,QAASC,EADL,EACKA,QACjB,OAAID,EACIC,EACO,IAGA,IAIPA,EACO,IAGA,K,0CAKE,IAAD,EACaxtB,KAAKI,MAA1BmtB,EADQ,EACRA,QAASC,EADD,EACCA,QACjB,OAAID,EACIC,EACO,GAGA,GAIPA,EACO,GAGA,K,kCA6Bf,IAxBQ,MAgB2ExtB,KAAKI,MAAhFqgB,EAhBA,EAgBAA,QAASgN,EAhBT,EAgBSA,YAAaF,EAhBtB,EAgBsBA,QAASxM,EAhB/B,EAgB+BA,OAAiB2M,GAhBhD,EAgBuCF,QAhBvC,EAgBgDE,KAAKC,EAhBrD,EAgBqDA,IAAKC,EAhB1D,EAgB0DA,MAAOC,EAhBjE,EAgBiEA,MACnE/a,EAAmC,IAA3BkQ,OAAOC,OAAOC,WAAgC4K,EAAkB9tB,KAAK+tB,oBAE7EC,EAAWlsB,IAAOA,MAASoM,OAAO,cAAe,cAAc7I,UAC/DqD,EAAYslB,EAAY,MAE1BC,EAAa,GACbC,EAAkB,GACb3qB,EAAQ,EAAGA,EAAQ,GAAIA,IAC5B0qB,EAAW3oB,KAAK,CAAEpF,IAAK,OAAQiuB,YAAaH,EAAmB,GAARzqB,EAAa,GAAK,MACzE2qB,EAAgB5oB,KAAK0oB,EAAmB,GAARzqB,EAAa,GAAK,KAEtD,IAAI6qB,EAAqBH,EAAWpR,UAChCwR,EAA0BH,EAAgBrR,UAC1CyR,EAAa3N,KAAc,MAK3BgB,EAAIhB,OACHc,OAAO,CAAC2M,EAAmB,GAAGD,YAAaC,EAAmB,IAAID,cAClEzM,MAAM,CAAC,EAAG5O,EAAQ,KAInBmN,EAAIU,OACHc,OAAO,CAACkM,EAAKD,IACbhM,MAAM,CA1B6C,GA0BpC,IAEhBE,EAAQjB,KAAYV,GACnBuB,WAAW,CAACmM,EAAKD,IACjB1L,YAAW,SAAAuM,GAAC,OAAKA,KACjBzM,SAAS,EAAG,GACZC,YAAY,IAEbyM,EAAW7N,KAAWgB,GACrBH,WAAW6M,GACXvM,SAAS,EAAG,GACZC,YAAYlP,IACZmP,YAAW,SAAUC,GAAK,OA7CPlgB,EA6C6BkgB,EA5Cf,IAA9B,IAAIjL,KAAKjV,GAAM8c,WACRrE,GAAWzY,GAEV,KAJhB,IAAwBA,KA+CpBmgB,EAAQvB,KAAWgB,GAClBH,WAAW6M,GACXvM,SAAS,EAAG,GACZC,YA3C4G,IA4C5GC,YAAW,SAAUC,EAAGtF,EAAG4R,GAAK,OA5DrC,SAAqBxsB,EAAM4a,EAAG4R,GAC1B,OAAKA,EAAE7qB,OAAS,GAAMiZ,EACX,eAEP2R,EAAWvsB,GAAQ,IAAM,EAClBusB,EAAWvsB,GAEV,KAqD4B0sB,CAAYxM,EAAGtF,EAAG4R,MAE9D5N,KAAU,IAAMF,GAASG,SACzB,IAAIwB,EAAMzB,KAAU,IAAMI,GACrBsB,OAAO,OACPC,KAAK,KAAM7B,GACX6B,KAAK,UAAW,CAAC,EAAG,EAAGxP,EAAO9S,KAAK0uB,kBACnCrM,OAAO,KACPC,KAAK,YAAa,gBAA0BwL,EAAkB,KAInE1L,EAAIC,OAAO,KACNE,KAAKX,GACLU,KAAK,QAAS,QAGfiL,IACAnL,EAAIC,OAAO,KACNE,KAAKL,GACLI,KAAK,QAAS,QAEnBF,EAAIC,OAAO,KACNE,KAAKiM,GACLlM,KAAK,QAAS,SAUvBF,EAAIC,OAAO,QACNC,KAAK,KAAM,GACXA,KAAK,KAAMrC,EAAEyN,IACbpL,KAAK,KAAMxP,GACXwP,KAAK,KAAMrC,EAAEyN,IACb/sB,MAAM,SAAU,WAChBA,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,KAE/ByhB,EAAIC,OAAO,QACNC,KAAK,KAAM,GACXA,KAAK,KAAMrC,EAAE0N,IACbrL,KAAK,KAAMxP,GACXwP,KAAK,KAAMrC,EAAE0N,IACbhtB,MAAM,SAAU,WAChBA,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,KAG/B,IAAK,IAAI4C,EAAQ,EAAGA,EAAQ6qB,EAAmB1qB,OAAQH,IACnD6e,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAEyM,EAAmB7qB,GAAO4qB,cACvC7L,KAAK,KAAM,GACXA,KAAK,KAAMX,EAAEyM,EAAmB7qB,GAAO4qB,cACvC7L,KAAK,KAtG0C,IAuG/C3hB,MAAM,SAAU,WAChBA,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,KAkEnC,SAASguB,EAAeC,EAAWhmB,GAC/B,OAAiB,IAAbA,EACOgmB,EAAY,KAEN,IAAbhmB,EACOgmB,EAAY,GAEN,IAAbhmB,EACOgmB,EAAY,GAEhBA,EAAY,IAtEvB,SAAoBlmB,EAAWE,EAAUimB,EAAOC,GAE5C,IADA,IAAMC,EAyBV,SAAmBrmB,EAAWE,GAC1B,SAASomB,EAAYtmB,EAAWE,GAE5B,IADA,IAAIqmB,EAAY,GACP1rB,EAAQ,EAAGA,EAAQqF,EAAUrF,IAClC,GAAiB,KAAbqF,EAAiB,CACjB,IAAMsmB,EAAUxmB,EAAa,KAA2B,GAARnF,EAAa,GAAK,IAClE0rB,EAAU3pB,KAAK4pB,QAEd,GAAiB,KAAbtmB,EAAiB,CACtB,IAAMsmB,EAAUxmB,EAAa,MAAoC,EAARnF,EAAY,GAAK,GAAK,GAAK,IACpF0rB,EAAU3pB,KAAK4pB,QAEd,GAAiB,KAAbtmB,EAAiB,CACtB,IAAMsmB,EAAUxmB,EAAa,MAAoC,EAARnF,EAAY,GAAK,GAAK,GAAK,IACpF0rB,EAAU3pB,KAAK4pB,OAEd,CACD,IAAMA,EAAUxmB,EAAa,OAAqC,GAARnF,EAAa,GAAK,GAAK,GAAK,IACtF0rB,EAAU3pB,KAAK4pB,GAGvB,OAAOD,EAEX,GAAiB,IAAbrmB,EACA,OAAOomB,EAAYtmB,EAAW,IAElC,GAAiB,IAAbE,EACA,OAAOomB,EAAYtmB,EAAW,IAElC,GAAiB,IAAbE,EACA,OAAOomB,EAAYtmB,EAAW,IAElC,OAAOsmB,EAAYtmB,EAAW,IAzDRymB,CAAUzmB,EAAWE,GAClCrF,EAAQ,EAAGA,EAAQwrB,EAAcrrB,OAAQH,IAAS,CACvD,IAAM6rB,EAAWT,EAAe7b,EAAOlK,GACjC/D,EAAUkqB,EAAcxrB,GAC9B6e,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE9c,IACbyd,KAAK,KAAMrC,EAAE4O,IACbvM,KAAK,KAAMX,EAAE9c,IACbyd,KAAK,KAAMrC,EAAE6O,IACbnuB,MAAM,SAAU8sB,GAChB9sB,MAAM,UAAW,IACjBA,MAAM,eAAgByuB,GAEZ,WAAXrO,GAAkC,YAAXA,GACvBqB,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE9c,IACbyd,KAAK,KAAMrC,EAAE,KACbqC,KAAK,KAAMX,EAAE9c,IACbyd,KAAK,KAAMrC,EAAE,KACbtf,MAAM,SAAU8sB,GAChB9sB,MAAM,UAAW,IACjBA,MAAM,eAAgByuB,IAvBvCC,CAAW3mB,EAAW,EAAGmlB,EAAOD,GA0EhC,IAAM0B,EAActvB,KAAKN,MAAM0tB,WAE/B,GADAlrB,QAAQC,IAAI4e,EAAQuO,GACO,IAAvBA,EAAY5rB,OACZ,OAAO,KAGX,GAAe,YAAXqd,EAAsB,CAItB,IAHA,IAAMwO,EAAWD,EAAYxhB,KACvB0hB,EAAWF,EAAY1hB,KAEpBrK,EAAQ,EAAGA,EAAQisB,EAAS9rB,OAAQH,IAAS,CAClD,IAAMsB,EAAU2qB,EAASjsB,GACnBksB,EAAK5qB,EAAQ6qB,GACbC,EAAK9qB,EAAQ+qB,GACbC,EAAKhrB,EAAQirB,GACbC,EAAKlrB,EAAQmrB,GACbC,EAAQnuB,IAAO+C,EAAQwD,KAAM,uBAAuBhD,UAC1D+c,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAEsO,IACb3N,KAAK,KAAMX,EAAEsO,IACb3N,KAAK,KAAMrC,EAAEwP,IACbnN,KAAK,KAAMrC,EAAE8P,IACbzN,KAAK,SAAUmL,GACf9sB,MAAM,UAAW,IAEjBA,MAAM,eAAgB,GAE3ByhB,EAAIC,OAAO,QACNC,KAAK,IAAKX,EAAEsO,GAASb,GACrB9M,KAAK,IAAKrC,EAAE4P,IACZvN,KAAK,SAAWrC,EAAE0P,GAAM1P,EAAE4P,IAC1BvN,KAAK,QAtBG,IAuBRA,KAAK,SAAUmL,GACf9sB,MAAM,UAAW,IACjBA,MAAM,OAAQ,uBACdA,MAAM,eAAgB,GAE3ByhB,EACK8N,UAAU,QACVnsB,KAAK,CAAC0rB,EAAIM,IACVI,QACA9N,OAAO,QACPC,KAAK,KAAMX,EAAEsO,GAASb,GACtB9M,KAAK,KAAMX,EAAEsO,GAASb,GACtB9M,KAAK,MAAM,SAAUL,GAAK,OAAQhC,EAAEgC,MACpCK,KAAK,MAAM,SAAUL,GAAK,OAAQhC,EAAEgC,MACpCK,KAAK,SAAUmL,GACf9sB,MAAM,UAAW,IACjBA,MAAM,eAAgB,GAE/B,IAAK,IAAI4C,EAAQ,EAAGA,EAAQgsB,EAAS7rB,OAAQH,IAAS,CAClD,IAAMsB,EAAU0qB,EAAShsB,GACnBksB,EAAK5qB,EAAQ6qB,GACbC,EAAK9qB,EAAQ+qB,GACbC,EAAKhrB,EAAQirB,GACbC,EAAKlrB,EAAQmrB,GACbC,EAAQnuB,IAAO+C,EAAQwD,KAAM,uBAAuBhD,UAC1D+c,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAEsO,IACb3N,KAAK,KAAMX,EAAEsO,IACb3N,KAAK,KAAMrC,EAAEwP,IACbnN,KAAK,KAAMrC,EAAE8P,IACbzN,KAAK,SAAUmL,GAEf9sB,MAAM,eAAgB,GAE3ByhB,EAAIC,OAAO,QACNC,KAAK,IAAKX,EAAEsO,GAASb,GACrB9M,KAAK,IAAKrC,EAAE4P,IACZvN,KAAK,SAAWrC,EAAE0P,GAAM1P,EAAE4P,IAC1BvN,KAAK,QA7DG,IA8DRA,KAAK,SAAUmL,GACf9sB,MAAM,OAAQ,uBACdA,MAAM,eAAgB,GAE3ByhB,EACK8N,UAAU,QACVnsB,KAAK,CAAC0rB,EAAIM,IACVI,QACA9N,OAAO,QACPC,KAAK,KAAMX,EAAEsO,GAASb,GACtB9M,KAAK,KAAMX,EAAEsO,GAASb,GACtB9M,KAAK,MAAM,SAAUL,GAAK,OAAQhC,EAAEgC,MACpCK,KAAK,MAAM,SAAUL,GAAK,OAAQhC,EAAEgC,MACpCK,KAAK,SAAUmL,GACf9sB,MAAM,eAAgB,IAGnC,GAAe,WAAXogB,EACA,IAAK,IAAIxd,EAAQ,EAAGA,EAAQ+rB,EAAY5rB,OAAQH,IAAS,CACrD,IAAMsB,EAAUyqB,EAAY/rB,GACtB0sB,EAAQnuB,IAAO+C,EAAQurB,KAAM,uBAAuB/qB,UACpDgrB,EAAMxrB,EAAQwrB,IACdC,EAAMzrB,EAAQyrB,IACR,IAARD,GAAqB,IAARC,IAGjBlO,EAAIC,OAAO,UACNC,KAAK,KAAMX,EAAEsO,IACb3N,KAAK,KAAMrC,EAAEoQ,IACb/N,KAAK,IAAK,GACV3hB,MAAM,OAAQ8sB,GAGnBrL,EAAIC,OAAO,UACNC,KAAK,KAAMX,EAAEsO,IACb3N,KAAK,KAAMrC,EAAEqQ,IACbhO,KAAK,IAAK,GACV3hB,MAAM,UAAW,IACjBA,MAAM,OAAQ8sB,IAG3B,GAAe,WAAX1M,GAAkC,WAAXA,GAAkC,YAAXA,GAAmC,WAAXA,EAetE,IAAK,IAAIxd,EAAQ,EAAGA,EAAQ+rB,EAAY5rB,OAAQH,IAAS,CACrD,IAAMsB,EAAUyqB,EAAY/rB,GACtBksB,EAAK5qB,EAAQ6qB,GACbC,EAAK9qB,EAAQ+qB,GACbC,GAAKhrB,EAAQirB,GACbC,GAAKlrB,EAAQmrB,GACbC,GAAQnuB,IAAO+C,EAAQwD,KAAM,uBAAuBhD,UAAa,KAEvE+c,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAEsO,KACb3N,KAAK,KAAMX,EAAEsO,KACb3N,KAAK,KAAMrC,EAAEwP,IACbnN,KAAK,KAAMrC,EAAE8P,KACbzN,KAAK,SAAUmL,GACf9sB,MAAM,eAAgB,GAE3ByhB,EAAIC,OAAO,QACNC,KAAK,IAAKX,EAAEsO,IAASb,GACrB9M,KAAK,IAAKrC,EAAE4P,KACZvN,KAAK,SAAWrC,EAAE0P,GAAM1P,EAAE4P,KAC1BvN,KAAK,QAbO,IAcZA,KAAK,SAAUmL,GACf9sB,MAAM,OAAQ,uBACdA,MAAM,eAAgB,GAE3ByhB,EACK8N,UAAU,QACVnsB,KAAK,CAAC0rB,EAAIM,KACVI,QACA9N,OAAO,QACPC,KAAK,KAAMX,EAAEsO,IAASb,GACtB9M,KAAK,KAAMX,EAAEsO,IAASb,GACtB9M,KAAK,MAAM,SAAUL,GAAK,OAAQhC,EAAEgC,MACpCK,KAAK,MAAM,SAAUL,GAAK,OAAQhC,EAAEgC,MACpCK,KAAK,SAAUmL,GACf9sB,MAAM,eAAgB,M,+BAO7B,IACEogB,EAAW/gB,KAAKI,MAAhB2gB,OACR,OACI,yBAAKpL,GAAIoL,Q,GAlfgBvhB,cC4ItB+wB,I,kNA3IX7wB,MAAQ,CACJqE,KAAM,GACNysB,UAAU,G,EAGdC,SAAW,WACP,EAAKxwB,SAAS,CACVuwB,UAAU,K,EAIlBE,SAAW,SAAC7hB,EAAI8hB,EAAM/iB,GACH,EAAKlO,MAAM8wB,WAEtB3hB,EAAK,KAAOA,EAAK,KAAO,EAAK4hB,WAC7BE,EAAO,IAAMA,EAAO,IAAM,EAAKF,WAC/B7iB,EAAO,IAAMA,EAAO,IAAM,EAAK6iB,a,wEAKnC,SAASrd,EAAY7S,GACjB,OAAc,OAAVA,QAA4B6B,IAAV7B,GAAiC,KAAVA,EAClC,KAEJA,EAEX,IAAMwD,EAAO/D,KAAKN,MAAMqE,KAPnB,EAQsB/D,KAAKI,MAAxBwwB,EARH,EAQGA,QAASnqB,EARZ,EAQYA,MACXoqB,EAAaD,EACnB,QAAmBxuB,IAAfyuB,GAA2C,OAAfA,EAC5B,OAAO,KAKX,SAASC,EAAWvwB,EAAOuuB,EAAOD,GAC9B,QAAItuB,EAAQuuB,GAASvuB,EAAQsuB,GAHjC7uB,KAAK0wB,SAASG,EAAWhiB,GAAIgiB,EAAWF,KAAME,EAAWjjB,MASzD,IAAM1J,EAASlE,KAAKN,MAAM8wB,SAC1B,OACI,yBAAKtkB,UAAU,mBACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,iBACX,yBAAKvL,MAAO,CAAEC,QAAS,OAAQmwB,cAAe,SAAU9d,eAAgB,SAAUpS,WAAY,SAAUiS,MAAO,OAAQ/R,OAAQ,OAAQ0T,QAAS,UAAWa,gBAAiBpR,EAAS,QAAUrB,EAAW,QACtM,qCACI,wBAAIlC,MAAO,CAAEiO,MAAO1K,EAASrB,EAAW,MAAQ,UAAhD,YAEJ,qCACI,yBAAKlC,MAAO,CAAEoO,WAAY,MAAOC,SAAU,OAAQgiB,WAAY,OAAQC,aAAc,MAAOriB,MAAO1K,EAASrB,EAAW,MAAQ,UAAYuQ,EAAYyd,EAAWhiB,QAI9K,yBAAK3C,UAAU,kBACX,yBAAKvL,MAAO,CAAEC,QAAS,OAAQmwB,cAAe,SAAU9d,eAAgB,SAAUpS,WAAY,SAAUiS,MAAO,OAAQ/R,OAAQ,OAAQ0T,QAAS,UAAWa,gBAAiBpR,EAAS,QAAUrB,EAAW,QACtM,qCACI,wBAAIlC,MAAO,CAAEiO,MAAO1K,EAASrB,EAAW,MAAQ,UAAhD,cAEJ,qCACI,yBAAKlC,MAAO,CAAEoO,WAAY,MAAOC,SAAU,OAAQgiB,WAAY,OAAQpiB,MAAO1K,EAASrB,EAAW,MAAQ,UAAYuQ,EAAYyd,EAAWK,MAA7I,IAAqJ9d,EAAYyd,EAAWF,QAEhL,qCACI,yBAAKhwB,MAAO,CAAEoO,WAAY,MAAOC,SAAU,OAAQgiB,WAAY,OAAQpiB,MAAO1K,EAASrB,EAAW,MAAQ,UAA1G,IAAuHuQ,EAAYyd,EAAWM,MAA9I,QAIZ,yBAAKjlB,UAAU,iBACX,yBAAKvL,MAAO,CAAEC,QAAS,OAAQmwB,cAAe,SAAU9d,eAAgB,SAAUpS,WAAY,SAAUiS,MAAO,OAAQ/R,OAAQ,OAAQ0T,QAAS,UAAWa,gBAAiBpR,EAAS,QAAUrB,EAAW,QACtM,qCACI,wBAAIlC,MAAO,CAAEiO,MAAO1K,EAASrB,EAAW,MAAQ,UAAhD,cAEJ,qCACI,yBAAKlC,MAAO,CAAEoO,WAAY,MAAOC,SAAU,OAAQgiB,WAAY,OAAQpiB,MAAO1K,EAASrB,EAAW,MAAQ,UAAYuQ,EAAYyd,EAAW/iB,MAA7I,IAAqJsF,EAAYyd,EAAWjjB,QAEhL,qCACI,yBAAKjN,MAAO,CAAEoO,WAAY,MAAOC,SAAU,OAAQgiB,WAAY,OAAQpiB,MAAO1K,EAASrB,EAAW,MAAQ,UAA1G,IAAuHuQ,EAAYyd,EAAW7iB,MAA9I,SAKhB,yBAAKrN,MAAO,CAAE+T,SAAU,aACpB,kBAAC,GAAD,CAAwBgZ,IAAK,IAAKC,IAAK,EAAGC,MAAO,IAAKC,MAAO,IAAKpnB,MAAOA,EAAOga,QAAS,SAAUM,OAAQ,SAAUhd,KAAMA,EAAMypB,SAAS,EAAOD,SAAS,EAAM6D,YAAa,0BAA2B3D,YAAa,YACrN,kBAAC,GAAD,CAAwBC,IAAK,IAAKC,IAAK,EAAGC,MAAO,GAAIC,MAAO,GAAIpnB,MAAOA,EAAOga,QAAS,SAAUM,OAAQ,SAAUhd,KAAMA,EAAMstB,OAAO,EAAM7D,SAAS,EAAOD,SAAS,EAAO6D,YAAa,2BAA4B3D,YAAa,UAAW6D,mBAAoB,6BACjQ,kBAAC,GAAD,CAAwB5D,IAAK,IAAKC,IAAK,EAAGC,MAAO,GAAIC,MAAO,GAAIpnB,MAAOA,EAAOga,QAAS,UAAWM,OAAQ,UAAWhd,KAAMA,EAAMstB,OAAO,EAAM7D,SAAS,EAAMD,SAAS,EAAO6D,YAAa,2BAA4B3D,YAAa,UAAW6D,mBAAoB,+BAG1Q,yBAAKplB,UAAU,iBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,iBACX,yBAAKvL,MAAO,CAAEC,QAAS,OAAQmwB,cAAe,SAAU9d,eAAgB,SAAUpS,WAAY,SAAUiS,MAAO,OAAQ/R,OAAQ,OAAQ0T,QAAS,UAAWa,gBAAiBwb,EAAWD,EAAW/hB,KAAM,IAAK,IAAM,QAAUjM,EAAW,UACpO,qCACI,wBAAIlC,MAAO,CAAEiO,MAAOkiB,EAAWD,EAAW/hB,KAAM,IAAK,IAAMjM,EAAW,QAAU,UAAhF,MAEI,kCAFJ,QAMJ,qCACI,yBAAKlC,MAAO,CAAEoO,WAAY,MAAOC,SAAU,OAAQgiB,WAAY,OAAQC,aAAc,MAAOriB,MAAOkiB,EAAWD,EAAW/hB,KAAM,IAAK,IAAMjM,EAAW,QAAU,UAAYuQ,EAAYyd,EAAW/hB,MAAlM,QAIZ,yBAAK5C,UAAU,kBACX,yBAAKvL,MAAO,CAAEC,QAAS,OAAQmwB,cAAe,SAAU9d,eAAgB,SAAUpS,WAAY,SAAUiS,MAAO,OAAQ/R,OAAQ,OAAQ0T,QAAS,UAAWa,gBAAiBwb,EAAWD,EAAW1hB,GAAI,GAAI,IAAM,QAAUtM,EAAW,QACjO,qCACI,wBAAIlC,MAAO,CAAEiO,MAAOkiB,EAAWD,EAAW1hB,GAAI,GAAI,IAAMtM,EAAW,MAAQ,UAA3E,MAAyF,qCAAzF,OAEJ,qCACI,yBAAKlC,MAAO,CAAEoO,WAAY,MAAOC,SAAU,OAAQgiB,WAAY,OAAQC,aAAc,MAAOriB,MAAOkiB,EAAWD,EAAW1hB,GAAI,GAAI,IAAMtM,EAAW,MAAQ,UAAYuQ,EAAYyd,EAAW1hB,QAIzM,yBAAKjD,UAAU,iBACX,yBAAKvL,MAAO,CAAEC,QAAS,OAAQmwB,cAAe,SAAU9d,eAAgB,SAAUpS,WAAY,SAAUiS,MAAO,OAAQ/R,OAAQ,OAAQ0T,QAAS,UAAWa,gBAAiBwb,EAAWD,EAAW3hB,GAAI,GAAI,IAAM,QAAUrM,EAAW,QACjO,qCACI,wBAAIlC,MAAO,CAAEiO,MAAOkiB,EAAWD,EAAW3hB,GAAI,GAAI,IAAMrM,EAAW,MAAQ,UAA3E,YAEJ,qCACI,yBAAKlC,MAAO,CAAEoO,WAAY,MAAOC,SAAU,OAAQgiB,WAAY,OAAQC,aAAc,MAAOriB,MAAOkiB,EAAWD,EAAW3hB,GAAI,GAAI,IAAMrM,EAAW,MAAQ,UAAYuQ,EAAYyd,EAAW3hB,SAK7M,yBAAKvO,MAAO,CAAE+T,SAAU,aACpB,kBAAC,GAAD,CAAwBgZ,IAAK,IAAKC,IAAK,GAAIC,MAAO,IAAKC,MAAO,GAAIpnB,MAAOA,EAAOga,QAAS,UAAWM,OAAQ,UAAWhd,KAAMA,EAAMypB,SAAS,EAAOD,SAAS,EAAM6D,YAAa,yBAA0B3D,YAAa,YACtN,kBAAC,GAAD,CAAwBC,IAAK,GAAIC,IAAK,GAAIC,MAAO,GAAIC,MAAO,GAAIpnB,MAAOA,EAAOga,QAAS,SAAUM,OAAQ,SAAUhd,KAAMA,EAAMypB,SAAS,EAAOD,SAAS,EAAO6D,YAAa,0BAA2B3D,YAAa,YACpN,kBAAC,GAAD,CAAwBC,IAAK,IAAKC,IAAK,EAAGC,MAAO,GAAIC,MAAO,GAAIpnB,MAAOA,EAAOga,QAAS,SAAUM,OAAQ,SAAUhd,KAAMA,EAAMypB,SAAS,EAAMD,SAAS,EAAO6D,YAAa,yBAA0B3D,YAAa,mB,GApIlNjuB,c,SCyCT+xB,G,2MA7CX7xB,MAAQ,CACJ8xB,eAAgB,EAAKpxB,MAAMqxB,a,sFAIvBzxB,KAAKN,MAAM8xB,eACX/nB,GAAuBzJ,KAAKI,MAAMsK,KAAKvC,OAAQnI,KAAKI,MAAMsK,KAAKtC,QAASpI,KAAKI,MAAMsK,KAAKrC,KAAMrI,KAAKI,MAAMsK,KAAKlE,UAAW,sBACpHkD,MAAK,SAAA3F,GACF7B,QAAQC,IAAI,2BAA6BsL,KAAKC,UAAU3J,OAE3D+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,2BAA6BsL,KAAKC,UAAU3D,OAGhEN,GAAuBzJ,KAAKI,MAAMsK,KAAKvC,OAAQnI,KAAKI,MAAMsK,KAAKtC,QAASpI,KAAKI,MAAMsK,KAAKrC,KAAMrI,KAAKI,MAAMsK,KAAKlE,UAAW,sBACpHkD,MAAK,SAAA3F,GACF7B,QAAQC,IAAI,2BAA6BsL,KAAKC,UAAU3J,OAE3D+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,2BAA6BsL,KAAKC,UAAU3D,S,qCAKpE/J,KAAKC,SAAS,CACVuxB,gBAAiBxxB,KAAKN,MAAM8xB,gBAC7BxxB,KAAK0xB,wB,+BAGF,IAAD,OAOL,OACI,yBAAK/wB,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQC,WAAY,WACvD,kBAAC,KAAD,CAAU+R,SAAU,kBAAM,EAAK+e,gBAAgBC,QAAS5xB,KAAKN,MAAM8xB,eAAgB7wB,MAAOX,KAAKN,MAAM8xB,eALzF,CAChBK,eAAgB,eAAgB7iB,SAAU,QAJxB,CAClBA,SAAU,SAO8IhP,KAAKI,MAAMsK,KAAKtC,c,GAvCjJ5I,aCkFpBsyB,I,kNA/EXpyB,MAAQ,CAAEqyB,OAAQ,KAAMC,KAAM,I,mFACT,IAEXC,EADejyB,KAAKI,MAAlB8d,SACa8J,OACrBhoB,KAAKC,SAAS,CAAE8xB,OAAQE,IACxBjyB,KAAKoG,QAAQ6rB,K,0CAEI,IACT/T,EAAale,KAAKI,MAAlB8d,SACA6T,EAAW/xB,KAAKN,MAAhBqyB,OACFE,EAAM/T,EAAS8J,OACjBiK,IAAQF,IACR/xB,KAAKC,SAAS,CAAE8xB,OAAQE,IACxBjyB,KAAKoG,QAAQ6rB,M,8BAIbA,GAAM,IAAD,OACTxoB,EAAoBwoB,GACfvoB,MAAK,SAAA3F,GACF,IAAMO,EAAY8J,EAAsBrK,EAAKA,MAC7C,EAAK9D,SAAS,CAAE+xB,KAAM1tB,OAEzBwF,OAAM,SAAAC,GACH7H,QAAQC,IAAI,wBAA0BsL,KAAKC,UAAU3D,S,+BAiC7D,IAAMmoB,EA7BN,SAAwBnuB,GACpB,IAAMouB,EAAY,CACd,MAAS,2BACT,QAAW,6CACX,KAAQ,iCACR,MAAS,sBACT,QAAW,kCACX,MAAS,sBACT,QAAW,kCACX,IAAO,6CACP,MAAS,2BACT,IAAO,6CACP,MAAS,iCACT,MAAS,iCACT,KAAQ,iCACR,OAAU,kCAGRC,EAAc,GAEpB,IAAK,IAAI7uB,KAAS4uB,EACM,KAAhBpuB,EAAKR,IACL6uB,EAAY9sB,KAAK,CAAC6sB,EAAU5uB,GAAQQ,EAAKR,KAIjD,OAAO6uB,EAGWC,CAAeryB,KAAKN,MAAMsyB,MAC1CM,EAAcJ,EAAcjmB,KAAI,SAAApH,GAAO,OACzC,yBAAKqH,UAAU,WACX,yBAAKA,UAAU,SAASrH,EAAQ,GAAhC,WACA,yBAAKqH,UAAU,QAAQrH,EAAQ,QAGvC,OAA0B,OAAtB7E,KAAKN,MAAMqyB,QAA4C,IAAzBG,EAAcxuB,OAExC,yBAAK/C,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WACjE,kBAAC,KAAD,CAAM4C,KAAK,aAKnB,yBAAKyI,UAAU,qBACVomB,O,GA3ES9yB,cCa1B,SAAS6T,GAAcxC,EAAeyC,EAAMC,EAAOpB,GAG/C,OAFAjQ,QAAQC,IAAI0O,GAEiB,IAAzBA,EAAcnN,QACdxB,QAAQC,IAAImR,GAEQ,IAAhBA,EAAK5P,OACE,CACHV,gBAAYZ,EACZiQ,eAAWjQ,EACXkQ,cAAUlQ,GAMX,CACHY,WAJeoL,EAAqBmF,EAAOpB,GAK3CE,UAJczS,OAAO0T,EAAKE,OAK1BlB,SAJa1S,OAAO0T,EAAKG,QAWtB,CACHzQ,WAJ8C,IAAnCpD,OAAOiR,EAAc,GAAGe,SAKnCS,UAJczS,OAAOiR,EAAc,GAAGgB,OAKtCS,SAJa1S,OAAOiR,EAAc,GAAGiB,OAS1C,SAASygB,GAAanyB,GAAQ,IAAD,EACFkM,oBAAS,GADP,mBACzBkmB,EADyB,KAChBC,EADgB,OAEoBnmB,mBAAS,IAF7B,mBAEzBC,EAFyB,KAELC,EAFK,OAGQF,mBAAS,IAHjB,mBAGzBomB,EAHyB,KAGXC,EAHW,OAIArmB,mBAAS,IAJT,mBAIzBsmB,EAJyB,KAIfC,EAJe,OAKNvmB,mBAAS,GALH,mBAKzBI,EALyB,KAKlBC,EALkB,OAMUL,mBAAS,IANnB,mBAMzBwmB,EANyB,KAMVC,EANU,KAwIhC,SAAS3f,EAAY7S,GACjB,MAAc,KAAVA,GAA0B,OAAVA,QAA4B6B,IAAV7B,EAC3B,KAEJA,EAAMyE,WApIjBmI,qBAAU,WACN,IAAMC,EAAUC,aAAY,WACxBV,EAASD,EAAQ,KAClB,KACH,OAAO,kBAAMY,cAAcF,MAC5B,CAACV,IAGJS,qBAAU,WAIN1D,GAHarJ,EAAMC,SAASX,MAAMqE,KAEf+D,SAAS9C,YAEvB0E,MAAK,SAAA3F,GACF7B,QAAQC,IAAI4B,EAAKA,MAEjByI,EAAsBzI,EAAKA,KAAK,OAEnC+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,kCAAoCsL,KAAKC,UAAU3D,SAExE,CAAC2C,EAAOtM,EAAMC,SAASX,MAAMqE,KAAK+D,WAErCqF,qBAAU,WAGN1D,EAFarJ,EAAMC,SAASX,MAAMqE,KACjB+D,SAAS9C,YAErB0E,MAAK,SAAA3F,GACF7B,QAAQC,IAAI4B,EAAKA,MACjBgvB,EAAiBhvB,EAAKA,SAEzB+F,OAAM,SAAAC,GAAS7H,QAAQC,IAAI4H,QACjC,CAAC3J,EAAMC,SAASX,MAAMqE,KAAK+D,WAG9BqF,qBAAU,WAGN,IACM7B,EADOlL,EAAMC,SAASX,MAAMqE,KAG5B0M,GADOnF,EAAO0nB,KACF1nB,EAAOmF,UAAUzL,YAE7BiuB,EAAM,IAAIjc,KACVkc,EAAa,IAAIlc,KAAKic,EAAI7Y,cAAe6Y,EAAI/Z,WAAY+Z,EAAI9Z,WAC7DzQ,EAAYwqB,EAAW1U,cAAcmH,MAAM,KAAK,GACtC,IAAI3O,KAAKkc,EAAWxY,UAAY,OAAqB8D,cAAcmH,MAAM,KAAK,GAC9Flc,EAAkCgH,EAAW/H,GACxCgB,MAAK,SAAAa,GACFrI,QAAQC,IAAI,4BAA8BsL,KAAKC,UAAUnD,EAAOxG,OAChE4uB,EAAgBpoB,EAAOxG,SAE1B+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,4BAA8BsL,KAAKC,UAAU3D,SAElE,CAAC3J,EAAMC,SAASX,MAAMqE,KAAK0M,YAE9BtD,qBAAU,WAEN,IACM7B,EADOlL,EAAMC,SAASX,MAAMqE,KAErBuH,EAAO0nB,KAEpBvpB,GADkB6B,EAAOmF,UAAUzL,WACDsG,EAAOtD,QAAQhD,YAC5C0E,MAAK,SAAAa,GACFrI,QAAQC,IAAI,iBAAmBsL,KAAKC,UAAUnD,EAAOxG,OACrD8uB,EAAYtoB,EAAOxG,SAEtB+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,iBAAmBsL,KAAKC,UAAU3D,SAEvD,CAAC3J,EAAMC,SAASX,MAAMqE,KAAKiE,UAsE9B,IAPyBzH,EAQnB+K,EADOlL,EAAMC,SAASX,MAAMqE,KAE5BoO,EAAW7G,EAAO8G,QAClBmB,EAAQnF,EAAkB9C,EAAOsI,QACjCN,EAAOlF,EAAsB9C,EAAOgI,MACpC6f,E5BqCH,SAAoBlwB,GACvB,QAAmBb,IAAfa,GAA2C,OAAfA,EAC5B,MAAO,KAEX,IAAMI,EAAUJ,EAAWK,QAAO,SAAU/C,EAAOgD,GAC/C,MAAsB,OAAfhD,EAAMkD,QAEjB,OAAuB,IAAnBJ,EAAQK,OACD,EAECL,E4B/CO+K,CAAqBmF,GAClCM,EAASzF,EAAuBmF,GAGhC9C,EAAYnF,EAAOmF,UACnBC,EAAYpF,EAAOoF,UACnB0iB,EAAU9nB,EAAO+nB,QACjBC,EAAUllB,EAAcglB,EAAS,KACjCG,EAAUnlB,EAAcglB,EAAS,KACjCI,EAAUplB,EAAcglB,EAAS,KACjCK,EAAarlB,EAAcglB,EAAS,KAEpCpwB,EAAaqQ,GAAcyf,EAAexf,EAAMC,EAAOpB,GAAUnP,WACjEqP,EAAYgB,GAAcyf,EAAexf,EAAMC,EAAOpB,GAAUE,UAChEC,GAAWe,GAAcyf,EAAexf,EAAMC,EAAOpB,GAAUG,SAM/DwB,GAAY1F,EALH,CACXrM,KAAMD,IAAOqQ,EAAU,YAAY9M,UACnChD,KAAMgQ,EACN/P,IAAKgQ,KAKH4L,GAAW,CACb,MAAS5S,EAAOxD,SAAS9C,WACzB,OAAUsG,EAAOtD,QAAQhD,WACzB,UAAaqN,EACb,SAAYC,GACZ,UAAa7B,EACb,UAAaC,EACb,OAAU6C,EACV,aAAgBjI,GAGdwV,GAAW,CACb,UAAazO,EACb,SAAYC,GACZ,SAAYH,GAGhB,OACI,yBAAKjG,UAAU,sBACX,kBAAC,KAAD,CACI4G,MAAO,IACP/P,MAAM,iCACNgN,QAASyiB,EACThd,KAAM,kBAAMid,GAAW,IACvB1f,SAAU,kBAAM0f,GAAW,IAC3Bzf,OAAQ,MACR,kBAAC,GAAD,CAAakL,SAAUA,MAE3B,yBAAKhS,UAAU,mBACX,yBAAKvL,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQI,oBAAqB,gBAChE,kBAAC,IAAD,CAAME,GAAG,uBAAuBP,MAAO,CAAEE,WAAY,SAAUD,QAAS,SACpE,wBAAIsL,UAAU,oBAAd,mCAEJ,qCACI,wBAAIwnB,MAAO,CAAE1kB,SAAU,SAAvB,QAAuCpP,OAAO0L,EAAOoH,QAArD,IAA+DpH,EAAO2G,OAAOjN,WAAWC,SAE5F,kBAAC,IAAD,CAAM/D,GAAI,CAAE4T,SAAU,iBAAmBxJ,EAAOxD,SAAS9C,WAAWC,OAAQvF,MAAO,CAAE,OAAU,KAAM,MAASwe,GAASzX,MAAO,OAAUyX,GAAS8J,OAAQ,UAAapoB,OAAO0L,EAAOoH,QAAS,MAAQ,EAAM,UAAawL,GAASzN,YAAe9P,MAAO,CAAEE,WAAY,SAAUoS,eAAgB,WAAYrS,QAAS,SAChT,wBAAIsL,UAAU,oBAAd,4DAGR,yBAAKvL,MAAO,CAAEI,OAAQ,SAClB,yBAAKJ,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,gBAAiBpS,WAAY,WACxE,kDAASyK,EAAOxD,UAChB,4CAAQwH,GAAOhE,EAAO4G,OACtB,4CAAQpQ,IAAOqQ,EAAU,YAAYjE,OAAO,eAC5C,kDAAS5C,EAAOoF,WAChB,kBAAC,GAAD,CAAepF,QAAQ,EAAOtD,QAASsD,EAAOtD,QAASF,SAAUwD,EAAOxD,YAE5E,yBAAKnH,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,gBAAiBpS,WAAY,WACxE,yBAAKF,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAChD,wBAAIL,MAAO,CAAEiO,MAAO,oBACfwE,EAAYf,GADjB,IAC8Be,EAAYd,IAD1C,IACwD,0BAAM3R,MAAO,CAAEoO,WAAY,QAAU+E,KAE7F,wBAAInT,MAAO,CAAEiO,MAAO,kBAAmB9N,WAAY,KAvFzD,MADOP,EAyFoByC,IAxFX,OAAVzC,QAA4B6B,IAAV7B,GAAiC,IAAVA,EAClD,GAEJA,EAAMyE,WAAa,YAqF2B,0BAAMrE,MAAO,CAAEoO,WAAY,QAAUqE,EAAYS,GAAjD,OAGrC,yBAAKlT,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,iBAAkBC,cAAe,SACjF,4CAAQqyB,GACPA,GAAWG,GAAc,4CAAQA,GACjCH,GAAWC,GAAW,4CAAQA,GACnB,IAAXC,GAAiB,kCAAQA,GAC1B,yBAAKtnB,UAAU,mBAAmBgH,QAAS,kBAAMuf,GAAW,KAA5D,qCAIZ,yBAAKvmB,UAAU,uBACX,yBAAKvL,MAAO,CAAE8T,QAAS,cACnB,kBAAC,GAAD,CAAWhO,MAAO6E,EAAOxD,SAAU8oB,QAASrkB,KAEhD,yBAAK5L,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWC,cAAe,OAAQwT,QAAS,YAC3F,yBAAK9T,MAAO,CAAEue,aAAc,QACxB,yBAAKve,MAAO,CAAE2U,gBAAiB,YAAa8N,oBAAqB,MAAOC,qBAAsB,MAAOtiB,OAAQ,OAAQ0T,QAAS,WAAY7T,QAAS,OAAQC,WAAY,WACnK,wBAAIF,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBAAtC,6BAEJ,kBAAC,GAAD,CAAesW,OAAQ,WAAYjK,WAAYnZ,IAAOA,MAASoM,OAAO,aAAa7I,UAAW6Y,SAAUA,MAE5G,yBAAKvd,MAAO,CAAEsX,OAAQ,gCAAiCiH,aAAc,MAAOne,OAAQ,MAChF,kBAAC,GAAD,CAAe+f,SAAUA,GAAU+B,KAAMvX,EAAQwX,WAAYqQ,EAAY1vB,MAAM,MAGvF,yBAAK9C,MAAO,CAAEsX,OAAQ,gCAAiCiH,aAAc,MAAO3F,UAAW,OAAQ5K,YAAa,QACvG,kBAAC,GAAD,CAAQuP,SAAUA,GAAU6F,aAAa,KAE9C,yBAAKpjB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWC,cAAe,OAAQsY,UAAW,OAAQ0X,aAAc,QACnH,yBAAKtwB,MAAO,CAAEsX,OAAQ,gCAAiCiH,aAAc,QACjE,yBAAKve,MAAO,CAAE2U,gBAAiB,YAAa8N,oBAAqB,MAAOC,qBAAsB,MAAOtiB,OAAQ,OAAQ0T,QAAS,WAAY7T,QAAS,OAAQC,WAAY,WACnK,wBAAIF,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBAAtC,iBAEJ,yBAAKjO,MAAO,CAAEgzB,UAAW,QAAShf,SAAU,OAAQif,UAAW,SAxLvD,IAAxBlB,EAAahvB,OAET,yBAAK/C,MAAO,CAAEI,OAAQ,OAAQgc,YAAa,OAAQnc,QAAS,OAAQC,WAAY,WAAhF,4BAMa6xB,EAAalkB,MAAK,SAACC,EAAGC,GAGnC,OAFgB5M,IAAO2M,EAAEpG,KAAM,yBAAyBhD,UACxCvD,IAAO4M,EAAErG,KAAM,yBAAyBhD,UACzB,GAAK,KAGtB4G,KAAI,SAACvB,EAAMnH,GACzB,GAAkB,iBAAdmH,EAAKjH,KAAe,CAEpB,IAAM4E,EAAOvG,IAAO4I,EAAKrC,KAAM,yBAAyB6F,OAAO,uBACzDqJ,EAAYzV,IAAO0V,IAAInP,GAAMoP,SAC7Boc,EAAiB/xB,IAAOyV,GAAWrJ,OAAO,eAChD,OACI,yBAAKhO,IAAKqD,EAAO5C,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQI,oBAAqB,UAAWoT,kBAAmB,MAAOC,kBAAmB,yBAA0BC,kBAAmB,QAASyI,YAAa,SACvM,yBAAKpc,MAAO,CAAEqO,SAAU,OAAQpO,QAAS,OAAQmc,YAAa,OAAQlc,WAAY,WAAagzB,GAC/F,yBAAKlzB,MAAO,CAAEqO,SAAU,OAAQpO,QAAS,OAAQmc,YAAa,OAAQlc,WAAY,WAAa6J,EAAKtC,gBAqKxG,yBAAKzH,MAAO,CAAEsX,OAAQ,gCAAiCiH,aAAc,QACjE,yBAAKve,MAAO,CAAE2U,gBAAiB,YAAa8N,oBAAqB,MAAOC,qBAAsB,MAAOtiB,OAAQ,OAAQ0T,QAAS,WAAY7T,QAAS,OAAQC,WAAY,WACnK,wBAAIF,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBAAtC,6BAEJ,yBAAKjO,MAAO,CAAEgzB,UAAW,QAAShf,SAAU,OAAQif,UAAW,SAjK3D,IAApBhB,EAASlvB,OAEL,yBAAK/C,MAAO,CAAEI,OAAQ,OAAQgc,YAAa,OAAQnc,QAAS,OAAQC,WAAY,WAAhF,wCAMG+xB,EAAS3mB,KAAI,SAACvB,EAAMnH,GACvB,MAAkB,uBAAdmH,EAAKjH,KACG,kBAAC,GAAD,CAAsBvD,IAAKqD,EAAOmH,KAAMA,EAAM+mB,aAAa,IAC9C,uBAAd/mB,EAAKjH,KACJ,kBAAC,GAAD,CAAsBvD,IAAKqD,EAAOmH,KAAMA,EAAM+mB,aAAa,SADhE,W,ICRRqC,G,2MA3JXp0B,MAAQ,CACJ6D,OAAO,EACPmQ,aAAa,EACbqgB,YAAY,EACZC,YAAa,KACb1oB,OAAQ,GACR2oB,QAAS,M,4EAEC,IAAD,O5B0iCRxuB,IAAMC,IAAI,Q4BxiCNgE,MAAK,SAAA3F,GAAU,EAAK9D,SAAS,CAAEqL,OAAQvH,EAAKA,UAC5C+F,OAAM,SAAAC,GAAS7H,QAAQC,IAAI,6BAA+BsL,KAAKC,UAAU3D,S,0CAG9E/J,KAAKC,SAAS,CAAEg0B,QAASj0B,KAAKI,MAAMC,SAASyU,WAC7C9U,KAAKk0B,e,2CAIL,IAAM1zB,EAAOR,KAAKI,MAAMC,SAASyU,SACb9U,KAAKN,MAAjBu0B,UACQzzB,IACZR,KAAKC,SAAS,CAAEg0B,QAASj0B,KAAKI,MAAMC,SAASyU,WACR,yBAAjC9U,KAAKI,MAAMC,SAASyU,UACpB9U,KAAKC,SAAS,CAAE+zB,YAAa,U,0CAKpB,IAAD,OACVG,EAAe,CAAEvzB,QAAS,OAAQI,oBAAqB,YAAaozB,QAAS,MAAO7a,UAAW,OAC/F8a,EAAiB,CAAEzzB,QAAS,OAAQI,oBAAqB,kBAAmByU,iBAAkB,cAAe2e,QAAS,MAAO7a,UAAW,OACxIjO,EAAStL,KAAKN,MAAM4L,OAC1B,GAAe,OAAXA,QAA8BlJ,IAAXkJ,GAA0C,IAAlBA,EAAO5H,OAClD,OAAO,KAEX,IAAM4wB,EAAqB,GAG3B,GAAIt0B,KAAKN,MAAMq0B,WAAY,CACvB,IADwB,IAAD,WACdxwB,GACL,IAAMsB,EAAUyG,EAAO/H,GACjB4F,EAAS,uBAAyBtE,EAAQiD,SAAS9C,WAAWC,OACzB,KAAvCJ,EAAQiD,SAAS9C,WAAWC,QAC5BqvB,EAAmBhvB,KACf,kBAAC,IAAD,CAAMpE,GAAI,CAAE4T,SAAU3L,EAAQzJ,MAAO,CAAEqE,KAAMc,IACzClE,MAAO,CAAEsX,OAAQ,EAAKvY,MAAMs0B,cAAgBnvB,EAAQiD,SAAW,4BAA8B,iCAAkCoX,aAAc,OAC7IhM,QAAS,WAAQ,EAAKjT,SAAS,CAAE+zB,YAAanvB,EAAQiD,aACtD,kBAAC,GAAD,CAAgB5H,IAAKqD,EAAOQ,KAAMc,EAAS6O,YAAa,EAAKhU,MAAMgU,YAAaC,SAAUrI,OARjG/H,EAAQ,EAAGA,EAAQ+H,EAAO5H,OAAQH,IAAU,EAA5CA,GAaT,OACI,yBAAK5C,MAAOX,KAAKN,MAAMq0B,WAAaI,EAAeE,GAC/C,yBAAKnoB,UAAU,mBACVooB,GAEL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO9zB,KAAI,UAAKR,KAAKI,MAAMD,MAAMK,KAAtB,cAAwC+zB,UAAWzU,KAC9D,kBAAC,IAAD,CAAOtf,KAAI,UAAKR,KAAKI,MAAMD,MAAMK,KAAtB,aAAuC+zB,UAAWC,OAMzE,IADE,IAAD,WACQjxB,GACL,IAAMsB,EAAUyG,EAAOhI,QAAO,SAAU/C,EAAOoc,GAC3C,OAAO/c,OAAOW,EAAMmS,UAAYnP,KAEpC,GAAc,IAAVA,GAAyB,KAAVA,EAEf,iBAEmB,IAAnBsB,EAAQnB,OACR4wB,EAAmBhvB,KACf,yBAAK3E,MAAO,CAAEsX,OAAQ,oCAClB,kBAAC,GAAD,CAAyB5C,UAAW9R,EAAOrD,IAAKqD,EAAOmQ,YAAa,EAAKhU,MAAMgU,gBAKzC,KAA1C7O,EAAQ,GAAGiD,SAAS9C,WAAWC,OAC/BqvB,EAAmBhvB,KACf,yBAAK3E,MAAO,CAAEsX,OAAQ,oCAClB,kBAAC,GAAD,CAAyB5C,UAAW9R,EAAOrD,IAAKqD,EAAOmQ,YAAa,EAAKhU,MAAMgU,gBAKvF4gB,EAAmBhvB,KACf,yBAAK3E,MAAO,CAAEsX,OAAQ,oCAClB,kBAAC,GAAD,CAAgB/X,IAAKqD,EAAOQ,KAAMc,EAAQ,GAAI6O,YAAa,EAAKhU,MAAMgU,YAAaC,SAAUrI,OA1BxG/H,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,EAAhCA,GAgCT,OACI,yBAAK5C,MAAOX,KAAKN,MAAMq0B,WAAaI,EAAeE,GAC9CC,K,+BAQP,IAAD,OAmBL,IAAMhpB,EAAStL,KAAKN,MAAM4L,OACpB7E,EAAQzG,KAAKN,MAAMs0B,YACnBjxB,EApBN,SAA8ByC,EAAO8F,GAOjC,GAAc,OAAV9F,EACA,MAAO,mBAGP,IAVajF,EAUPk0B,EAAanpB,EAAOhI,QAAO,SAAUoH,EAAMnH,EAAO6B,GACpD,OAAOsF,EAAK5C,WAAarB,KAG7B,MAAO,QAdMlG,EAacoD,SAAS8wB,EAAW,GAAG/hB,SAZtC,GACD,IAAMnS,EAELA,GAUgB,uCAKtBm0B,CAAqBjuB,EAAO6E,GACpCe,EAAWrM,KAAK20B,oBAEtB,OACI,6BACI,yBAAKh0B,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,gBAAiBpS,WAAY,WACxE,yBAAKF,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaozB,QAAS,QACtE,yBAAKzzB,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQC,WAAY,WACvD,wBAAIF,MAAO,CAAEiO,MAAO,wBAApB,0CAAuD7L,IAE3D,yBAAKpC,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,gBAAiBpS,WAAY,SAAUiS,MAAO,UACzF,kBAAC,IAAD,CAAkBnS,MAAO,CAAE2U,iBAA4C,IAA3BtV,KAAKN,MAAMgU,YAAuB,UAAY,uBAAyBkhB,gBAAgB,uCAASC,kBAAkB,uCAASC,eAAgB90B,KAAKN,MAAMgU,YAAad,SAAU,SAACgf,GAAc,EAAK3xB,SAAS,CAAEyT,YAAake,OACrQ,kBAAC,IAAD,CAAkBjxB,MAAO,CAAE2U,iBAA2C,IAA1BtV,KAAKN,MAAMq0B,WAAsB,UAAY,uBAAyBa,gBAAgB,2BAAOC,kBAAkB,2BAAOC,eAAgB90B,KAAKN,MAAMq0B,WAAYnhB,SAAU,SAACgf,GAAc,EAAK3xB,SAAS,CAAE8zB,WAAYnC,SAGtQ,yBAAKjxB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,iBAAkBC,cAAe,SACjF,oEACA,4BAAKa,MAASoM,OAAO,0BAG5B7B,O,GAtJK7M,a,6BCobPu1B,G,2MAzbXr1B,MAAQ,CACJs1B,WAAY,EACZC,sBAAuB,GACvBC,gBAAiB,GACjBC,cAAe,GACfC,kBAAmB,GACnBC,cAAe,GACfC,aAAc,KACdC,SAAU,GACVC,WAAW,EACXlkB,KAAM,GACN9L,MAAO,GACPiwB,OAAQ,GACRC,kBAActzB,EACduzB,eAAe,EACfC,gBAAiB,I,EAmFrBC,aAAe,WAAO,I7B3BCC,E6B4BXP,EAAa,EAAK71B,MAAlB61B,SACFQ,EAAW,IAAIC,SACrBT,EAAS9P,SAAQ,SAAAwQ,GACbF,EAAS1T,OAAO,OAAQ4T,MAG5B,EAAKh2B,SAAS,CACVu1B,WAAW,K7BnCIM,E6BsCIC,E7BrCtBtwB,IAAM8C,KAAK,aAAcutB,EAAUjwB,I6BsC/B6D,MAAK,SAAAwsB,G7BlDX,IAAoBC,K6BmDYD,EAAInyB,K7BlDlC0B,IAAMC,IAAI,cAAgBywB,I6BmDdzsB,MAAK,SAAAa,GACFd,IACKC,MAAK,SAAAa,GACF,IAAM6rB,EAAY7rB,EAAOxG,KAAKT,QAAO,SAAAoH,GAAI,MAAkC,UAA9BA,EAAK2rB,QAAQC,gBACpDC,EAAYhsB,EAAOxG,KAAKT,QAAO,SAAAoH,GAAI,MAAkC,UAA9BA,EAAK2rB,QAAQC,gBAC1D,EAAKr2B,SAAS,CACVg1B,sBAAuBmB,EACvBlB,gBAAiBqB,EACjBpB,cAAeiB,OAGtBtsB,OAAM,SAAAC,GACH7H,QAAQC,IAAI,oBAAsBsL,KAAKC,UAAU3D,UAG5DD,OAAM,SAAAC,UAEdD,OAAM,SAAAC,Q,mFA/GM,IAAD,OAChB/J,KAAKw2B,aAAex2B,KAAKw2B,aAAajgB,KAAKvW,MAC3CA,KAAKy2B,cAAgBz2B,KAAKy2B,cAAclgB,KAAKvW,MAG7CA,KAAKmb,aAAenb,KAAKmb,aAAa5E,KAAKvW,MAC3CkC,QAAQC,IAAI,iCACZsH,IACKC,MAAK,SAAAa,GACFrI,QAAQC,IAAI,oBAAsBsL,KAAKC,UAAUnD,IACjDrI,QAAQC,IAAIoI,EAAOxG,MACnB,IAAMqyB,EAAY7rB,EAAOxG,KAAKT,QAAO,SAAAoH,GAAI,MAAkC,UAA9BA,EAAK2rB,QAAQC,gBACpDC,EAAYhsB,EAAOxG,KAAKT,QAAO,SAAAoH,GAAI,MAAkC,UAA9BA,EAAK2rB,QAAQC,gBAC1Dp0B,QAAQC,IAAIo0B,GACZ,EAAKt2B,SAAS,CACVg1B,sBAAuBmB,EACvBlB,gBAAiBqB,EACjBpB,cAAeiB,OAGtBtsB,OAAM,SAAAC,GACH7H,QAAQC,IAAI,oBAAsBsL,KAAKC,UAAU3D,S,sCAI7C2sB,GAEZ12B,KAAKC,SAAS,CACV+0B,WAAY0B,M,gCAIVjwB,EAAOuhB,EAAQvX,EAAWvQ,EAAKo2B,GACrC,IAAMh2B,GAAeN,KAAKN,MAAMi2B,cAChC,OAAIz1B,IAAQF,KAAKN,MAAMs1B,WAEf,kBAAC,IAAD,CAAM9zB,GAAI,CAAE4T,SAAU,iBAAmBrO,EAAO/G,MAAO,CAAEY,cAAa,OAAU,GAAI,MAASmG,EAAO,OAAUuhB,EAAQ,UAAa,EAAG,MAAQ,EAAO,UAAavX,EAAW,aAAgB6lB,IAAkB31B,MAAO,CAAEI,OAAQ,OAAQ+R,MAAO,QAASoM,aAAc,QAAtQ,gBAGI,O,mCAGHhf,GACT,MAAY,MAARA,EACO,SAGA,W,gCAILgD,GAGN,IAAMsQ,EAAQhR,KAAKC,MAAMS,EAAW,GAC9BuQ,EAAOvQ,EAAW,EACxB,OAAa,IAATuQ,EACOD,EAAQ,eAEPA,EAAQ,SAAMC,EAAO,W,oCAIjCzT,KAAKN,MAAM01B,kBAAkBnpB,KAAI,SAAClI,EAAMR,G7B1BzC,IAAoBiD,K6B2BQzC,EAAKsxB,c7B1B/B5vB,IAAMC,IAAI,cAAgBc,I6B2BlBkD,MAAK,SAAAa,G7BlBf,IAAsB4rB,K6BmBgB5rB,EAAOxG,KAAKoyB,S7BlBhD1wB,IAAMC,IAAI,gBAAkBywB,I6BmBZzsB,MAAK,SAAAitB,GACF,IAAMC,EAAM5T,OAAO6T,IAAIC,gBAAgB,IAAIC,KAAK,CAACtpB,KAAKC,UAAUipB,EAAQ5yB,SAClEizB,EAAO7hB,SAAS8hB,cAAc,KACpCD,EAAKE,KAAON,EACZI,EAAKG,aAAa,WAAY5sB,EAAOxG,KAAKoyB,UAC1ChhB,SAAS7M,KAAK8uB,YAAYJ,GAC1BA,EAAKK,WACNvtB,OAAM,SAAAC,UAEhBD,OAAM,SAAAC,Y,0CAsCE,IAAD,OAChB/J,KAAKN,MAAM01B,kBAAkBnpB,KAAI,SAAClI,EAAMR,G7BuiBzC,IAAuBsgB,EAAW1b,EAAQ3C,GAAnBqe,E6BtiBQ9f,EAAKsxB,c7BsiBFltB,E6BtiBiBpE,EAAKuzB,e7BsiBd9xB,E6BtiB8BzB,EAAK4R,G7BuiB3ElQ,IAAM8xB,OAAO,sBAAwB1T,EAAY,IAAM1b,EAAS,IAAM3C,I6BtiB9DkE,MAAK,SAAAwsB,GACFzsB,IACKC,MAAK,SAAAa,GACF,IAAM6rB,EAAY7rB,EAAOxG,KAAKT,QAAO,SAAAoH,GAAI,MAAkC,UAA9BA,EAAK2rB,QAAQC,gBACpDC,EAAYhsB,EAAOxG,KAAKT,QAAO,SAAAoH,GAAI,MAAkC,UAA9BA,EAAK2rB,QAAQC,gBAC1D,EAAKr2B,SAAS,CACVg1B,sBAAuBsB,EACvBrB,gBAAiBqB,EACjBpB,cAAeiB,EACfR,gBAAiB,QAGxB9rB,OAAM,SAAAC,GACH7H,QAAQC,IAAI,oBAAsBsL,KAAKC,UAAU3D,UAG5DD,OAAM,SAAAC,Y,mCAIN4M,GAAS3W,KAAKC,SAAS,CAAEqR,KAAMqF,EAAMC,OAAOrW,U,oCAC3CoW,GAAS3W,KAAKC,SAAS,CAAEuF,MAAOmR,EAAMC,OAAOrW,U,mCAC9CwB,EAAMy1B,GAAcx3B,KAAKC,SAAS,CAAEy1B,aAAc8B,M,kCAGxCjT,KAAMkT,MAAzB,IACQC,EAAgBC,KAAhBD,YAER,OACI,yBAAK/2B,MAAO,CAAEC,QAAS,OAAQC,WAAY,WACvC,yBAAKF,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,WAAY,SAC7D,yBAAKH,MAAO,CAAEqO,SAAU,SAAxB,6BAGA,yBAAKrO,MAAO,CAAEG,WAAY,SACtB,kBAAC,KAAD,CAAO8U,YAAY,uCAAShD,SAAU5S,KAAKy2B,cAAel2B,MAAOP,KAAKN,MAAM8F,UAGpF,yBAAK7E,MAAO,CAAEC,QAAS,OAAQC,WAAY,WACvC,yBAAKF,MAAO,CAAEqO,SAAU,SAAxB,6BAGA,yBAAKrO,MAAO,CAAEG,WAAY,SACtB,kBAAC,KAAD,CAAO8U,YAAY,uCAAShD,SAAU5S,KAAKw2B,aAAcj2B,MAAOP,KAAKN,MAAM4R,SAGnF,yBAAK3Q,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,WAAY,SAC7D,yBAAKH,MAAO,CAAEqO,SAAU,SAAxB,6BAGA,yBAAKrO,MAAO,CAAEG,WAAY,SAGtB,kBAAC42B,EAAD,CAAa7hB,qBAAsB,SAAAC,GAAW,OAAIA,EAAYC,YAAYpV,MAAO,CAAEmS,MAAO,SAAW5E,OAAQ,aAAc0pB,OAAQ,QAC/HhiB,YAAa,CAAC,iCAAS,kCAAUhD,SAAU5S,KAAKmb,aAAciC,YAAY,S,gDAoBxEzG,GACtB3W,KAAKC,SAAS,CACVg1B,sBAA6C,MAAtBte,EAAMC,OAAOrW,MAAgBP,KAAKN,MAAMy1B,cAAgBn1B,KAAKN,MAAMw1B,gBAC1FS,cAAqC,MAAtBhf,EAAMC,OAAOrW,U,+BAK1B,IAAD,OAGCs3B,EAAe,CACjBjC,gBAFwB51B,KAAKN,MAAzBk2B,gBAGJhjB,SAAU,SAACgjB,EAAiBkC,GAExB,EAAK73B,SAAS,CACVm1B,kBAAmB0C,EACnBlC,gBAAiBA,KAGzBmC,iBAAkB,SAAArB,GAAM,MAAK,CACzBsB,SAA0B,kBAAhBtB,EAAOplB,KACjBA,KAAMolB,EAAOplB,QAkHrB,IAGM2mB,EAjBN,SAAkBl0B,EAAMm0B,GACpB,MAAiB,KAAbA,QAAgC91B,IAAb81B,GAAuC,OAAbA,EACtCn0B,EAEQA,EAAKT,QAAO,SAAUoH,EAAMnH,EAAOqG,GAElD,OADYc,EAAK2rB,QAAQ7wB,MAAMR,WAAWC,OAC/B9E,MAAM+3B,MAWfA,CA/BV,SAAoBn0B,EAAMo0B,GACtB,MAAmB,KAAfA,QAAoC/1B,IAAf+1B,GAA2C,OAAfA,EAC1Cp0B,EAEQA,EAAKT,QAAO,SAAUoH,EAAMnH,EAAOqG,GAElD,IAAMwuB,EAAKt2B,IAAO4I,EAAK2rB,QAAQgC,YAAYrzB,WAAWC,OAAQ,YAAYI,UACpEa,EAAKpE,IAAOq2B,EAAW,GAAGnzB,WAAWC,OAAQ,YAAYI,UACzDc,EAAKrE,IAAOq2B,EAAW,GAAGnzB,WAAWC,OAAQ,YAAYI,UAC/D,OAAOa,GAAMkyB,GAAMA,GAAMjyB,KAqBvBgyB,CAxCV,SAAgBp0B,EAAMu0B,GAClB,MAAmB,KAAfA,QAAoCl2B,IAAfk2B,GAA2C,OAAfA,EAC1Cv0B,EAEQA,EAAKT,QAAO,SAAUoH,EAAMnH,EAAOqG,GAElD,OADWc,EAAK2rB,QAAQva,OAAO9W,WAAWC,OAChCgG,QAAQqtB,IAAe,KAiC/BC,CADMv4B,KAAKN,MAAMu1B,sBACDj1B,KAAKN,MAAM4R,MACbtR,KAAKN,MAAMg2B,cACb11B,KAAKN,MAAM8F,OACjC,QAAUpD,IAAN61B,GAAyB,OAANA,EAAc,OAAO,KAC5C,IAAMl0B,EAAOk0B,EAAEhsB,KAAI,SAACvB,EAAMnH,GACtB,MAAO,CACHrD,IAAKqD,EACLoS,GAAIjL,EAAK2rB,QAAQ7wB,MACjB8L,KAAM5G,EAAK2rB,QAAQva,OACnBxM,OAAQ,EAAKkpB,aAAa9tB,EAAK2rB,QAAQ1kB,MACvCzB,OAAoC,IAA5BxF,EAAK+tB,YAAY/0B,OAAe,KAA6C,IAAtC9D,OAAO8K,EAAK+tB,YAAY,GAAG7mB,SAC1E8mB,QAAqC,IAA5BhuB,EAAK+tB,YAAY/0B,OAAe,KAAOgH,EAAK+tB,YAAY,GAAG5mB,MAAQ,SAAMnH,EAAK+tB,YAAY,GAAG3mB,KAAO,SAC7G6mB,SAAU,KACVrB,eAAgB5sB,EAAK2rB,QAAQluB,OAC7BktB,cAAe3qB,EAAK2rB,QAAQxS,UAC5B+U,aAAcluB,EAAK2rB,QAAQC,aAC3BuC,QAAS,KACTjpB,WAAY,EAAKkpB,UAAUpuB,EAAK2rB,QAAQ7wB,MAAOkF,EAAK2rB,QAAQluB,OAAQuC,EAAK2rB,QAAQxS,UAAWtgB,EAAOmH,EAAK2rB,QAAQC,kBAlJnH,EAsJ2Bt2B,KAAKN,MAAlB61B,GAtJd,EAsJGC,UAtJH,EAsJcD,UACbn1B,EAAQ,CACV24B,SAAU,SAAA9C,GACN,EAAKh2B,UAAS,SAAAP,GACV,IAAM6D,EAAQ7D,EAAM61B,SAAStqB,QAAQgrB,GAC/B+C,EAAct5B,EAAM61B,SAAS0D,QAEnC,OADAD,EAAY7hB,OAAO5T,EAAO,GACnB,CACHgyB,SAAUyD,OAItBE,aAAc,SAAAjD,GAIV,OAHA,EAAKh2B,UAAS,SAAAP,GAAK,MAAK,CACpB61B,SAAS,GAAD,oBAAM71B,EAAM61B,UAAZ,CAAsBU,SAE3B,GAEXV,WACA4D,gBAAgB,GAGpB,OACI,yBAAKx4B,MAAO,CAAEoc,YAAa,OAAQkU,aAAc,SAE7C,yBAAKtwB,MAAO,CAAEC,QAAS,OAAQE,WAAY,OAAQD,WAAY,WAC3D,yBAAKF,MAAO,CAAEqO,SAAU,OAAQjO,OAAQ,OAAQiwB,WAAY,OAAQriB,YAAa,KAAjF,wCAGA,yBAAKpO,MAAM,KAAK2L,UAAWlM,KAAKN,MAAMi2B,cAAgB,iBAAmB,uBAAwBh1B,MAAO,CAAEgO,YAAa,GAAKuE,QAAS,WAAQ,EAAKkmB,0BAA0B,CAAExiB,OAAQ,CAAErW,MAAO,UAA/L,sBAGA,yBAAKA,MAAM,MAAM2L,UAAYlM,KAAKN,MAAMi2B,cAAmC,uBAAnB,iBAA2CziB,QAAS,WAAQ,EAAKkmB,0BAA0B,CAAExiB,OAAQ,CAAErW,MAAO,WAAtK,uBAIJ,yBAAKI,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWD,OAAQ,OAAQE,cAAe,SACzFjB,KAAKq5B,YACuB,GAA5Br5B,KAAKN,MAAMi2B,cAAyB,yBAAKh1B,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeozB,QAAS,OAAQzlB,YAAyC,GAA5B3O,KAAKN,MAAMi2B,cAAyB,GAAK,MAC3K,yBAAKh1B,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,gBAAiBpS,WAAY,WACxE,kBAAC,KAAWT,EACR,kBAAC,KAAD,CAAQO,MAAO,CAAEmS,MAAO,SACpB,kBAAC,KAAD,CAAMrP,KAAK,WADf,8BAIJ,kBAAC,KAAD,CACIyP,QAASlT,KAAK61B,aAAatf,KAAKvW,MAChCg4B,SAA8B,IAApBzC,EAAS7xB,OACnB/C,MAAO,CAAEmS,MAAO,SAHpB,iBAQJ,yBAAKnS,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WACjE,kBAAC,KAAD,CAAQqS,QAASlT,KAAKs5B,YAAY/iB,KAAKvW,MAAOW,MAAO,CAAEmS,MAAO,SAA9D,iBAEJ,yBAAKnS,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WACjE,kBAAC,KAAD,CAAQqS,QAASlT,KAAKu5B,kBAAkBhjB,KAAKvW,MAAOW,MAAO,CAAEmS,MAAO,SAApE,kBAEC,MAEb,6BACI,kBAAC,KAAD,CAAO+kB,aAAcA,EAAc2B,QAnM/B,CACZ,CACIz2B,MAAO,uCACP02B,UAAW,SACXv5B,IAAK,SACL4S,MAAO,MAEX,CACI/P,MAAO,2BACP02B,UAAW,KACXv5B,IAAK,KACL4S,MAAO,MAEX,CACI/P,MAAO,2BACP02B,UAAW,OACXv5B,IAAK,OACL4S,MAAO,MAEX,CACI/P,MAAO,eACP02B,UAAW,SACXv5B,IAAK,SACL4S,MAAO,MAEX,CACI/P,MAAO,2BACP02B,UAAW,SACXv5B,IAAK,SACL4S,MAAO,MAEX,CACI/P,MAAO,2BACP02B,UAAW,UACXv5B,IAAK,UACL4S,MAAO,MAEX,CACI/P,MAAO,iCACP02B,UAAW,aACXv5B,IAAK,aACL4S,MAAO,MAEX,CACI/P,MAAO,iCACP02B,UAAW,cACXv5B,IAAK,cACL4S,MAAO,MAEX,CACI/P,MAAO,qBACP02B,UAAW,iBACXv5B,IAAK,iBACL4S,MAAO,OAEX,CACI/P,MAAO,qBACP02B,UAAW,gBACXv5B,IAAK,gBACL4S,MAAO,OAEX,CACI/P,MAAO,8BACP02B,UAAW,eACXv5B,IAAK,eACL4S,MAAO,MAEX,CACI2mB,UAAW,aACXv5B,IAAK,aACL4S,MAAO,OA6HkD4mB,WAAY31B,EAAM41B,MAAO,SAAAjD,GAC1E,MAAO,CACHkD,aAAc,SAAAjjB,GAAW,EAAKkjB,gBAAgBnD,EAAOx2B,MACrD45B,aAAc,SAAAnjB,GAAW,EAAKkjB,gBAAgB,c,GAjbhDr6B,a,mBC61BXu6B,I,kNA31BXr6B,MAAQ,CACJs6B,QAAQ,EACR5M,WAAY,GACZ6M,cAAe,KACfC,UAAW,KACXC,YAAa,KACbC,SAAU,M,yFAGa,IAAD,aA0C2Cp6B,KAAKI,MAA9DqD,EA1Cc,EA0CdA,KAAMmF,EA1CQ,EA0CRA,SAAUqS,EA1CF,EA0CEA,WAAY1N,EA1Cd,EA0CcA,IAAKjC,EA1CnB,EA0CmBA,OAAQ2mB,EA1C3B,EA0C2BA,IAAKoI,EA1ChC,EA0CgCA,OAChDC,EAAO/sB,EAAIvI,WAAWC,OACtBs1B,EAAOtI,EAAIjtB,WAAWC,OAEtBu1B,EA7CN,SAAqB5xB,EAAU6xB,GAC3B,IAAMC,EAAeD,EAAc,OACnC,OAAiB,IAAb7xB,EACO,CACH+xB,MAAO74B,IAAO44B,EAAgB,OAAsBxsB,OAAO,kBAC3D0sB,IAAK94B,IAAO44B,GAAcxsB,OAAO,kBACjCtF,SAAU,GAGD,IAAbA,EACO,CACH+xB,MAAO74B,IAAO44B,EAAgB,QAA0BxsB,OAAO,kBAC/D0sB,IAAK94B,IAAO44B,GAAcxsB,OAAO,kBACjCtF,SAAU,GAGD,IAAbA,EACO,CACH+xB,MAAO74B,IAAO44B,EAAgB,QAA0BxsB,OAAO,kBAC/D0sB,IAAK94B,IAAO44B,GAAcxsB,OAAO,kBACjCtF,SAAU,GAGX,CACH+xB,MAAO74B,IAAO44B,EAAgB,SAA2BxsB,OAAO,kBAChE0sB,IAAK94B,IAAO44B,GAAcxsB,OAAO,kBACjCtF,SAAU,GAmBEiyB,CAAYjyB,EAhBhC,SAA0BqS,GACtB,IAAM6f,EAAkBh5B,IAAOA,MAASoM,OAAO,YAAa,YAAY7I,UAAa,MAC/E01B,EAAiBj5B,IAAOA,MAASoM,OAAO,YAAa,YAAY7I,UACjE4tB,EAAMnxB,MAASuD,UACrB,OAAI4V,IAAe8f,GACX9H,EAAM6H,EACC7f,EAAc,MAItBA,EAKO+f,CAAiB/f,IAkCnC,GAhCe,OAAX3P,IACa,QAAT7H,GACAgG,GAAuC6wB,EAAME,EAAYG,MAAOH,EAAYI,IAAKn3B,EAAM+2B,EAAY5xB,UAC9Fc,MAAK,SAAA3F,GACF4c,KAAU,IAAM0Z,GAAQzZ,SACxB,EAAKC,UAAU9c,EAAKA,SAEvB+F,OAAM,SAAAC,GAAS7H,QAAQC,IAAI4H,MAEvB,OAATtG,GAA0B,OAATA,GAA0B,SAATA,GAClCgG,GAAuC6wB,EAAME,EAAYG,MAAOH,EAAYI,IAAKn3B,EAAM+2B,EAAY5xB,UAC9Fc,MAAK,SAAA3F,GACF4c,KAAU,IAAM0Z,GAAQzZ,SACxB,EAAKC,UAAU9c,EAAKA,SAEvB+F,OAAM,SAAAC,GAAS7H,QAAQC,IAAI4H,MAEvB,QAATtG,GACAgG,GAA6B6wB,EAAME,EAAYG,MAAOH,EAAYI,IAAKn3B,GAClEiG,MAAK,SAAA3F,GACF4c,KAAU,IAAM0Z,GAAQzZ,SACxB,EAAKC,UAAU9c,EAAKA,SAEvB+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI4H,MAGX,OAATtG,IACAkd,KAAU,IAAM0Z,GAAQzZ,SACxB5gB,KAAK6gB,UAAU,MAGR,QAAXvV,EAAkB,CAClB,IAAMtH,EAAM,IAAIC,IACViC,EAAKpE,IAAO04B,EAAYG,MAAO,kBAAkBzsB,OAAO,gBACxD/H,EAAKrE,IAAO04B,EAAYI,IAAK,kBAAkB1sB,OAAO,gBACtD+sB,EAAOxxB,EAAoB8wB,EAAMr0B,EAAIC,GACtCuD,MAAK,SAAA3F,GACF,OAAOC,EAAIG,OAAOJ,EAAKA,MAAMK,OAAOG,SAASC,WAEhDsF,OAAM,SAAAC,GAAS7H,QAAQC,IAAI4H,MAE1BmxB,E9B6eX,SAAiBj1B,EAAQC,EAAIC,GAClC,OAAOV,IAAMC,IAAI,QAAUO,EAAS,IAAMC,EAAK,IAAMC,G8B9e9BsD,CAAoB8wB,EAAMr0B,EAAIC,GACtCuD,MAAK,SAAA3F,GACF,OAAOC,EAAIG,OAAOJ,EAAKA,MAAMK,OAAOG,SAASC,WAGhDsF,OAAM,SAAAC,GAAS7H,QAAQC,IAAI4H,MAChCM,QAAQC,IAAI,CAAC2wB,EAAMC,IAAOxxB,MAAK,SAAAa,GA4E3BoW,KAAU,IAAM0Z,GAAQzZ,SACxB,EAAKC,UA5EL,SAAuBoa,EAAMC,EAAMz3B,GAC/B,IAAI03B,EAAY,GACZC,EAAY,GACZC,EAAa,GACbC,EAAa,GACbC,EAAY,GACZC,EAAc,GAClB,GAAIr4B,MAAMC,QAAQ63B,GACd,IAAK,IAAI13B,EAAQ,EAAGA,EAAQ03B,EAAKv3B,OAAQH,IAAS,CAC9C,IAAMsB,EAAUo2B,EAAK13B,GACfsL,EAAKhK,EAAQ42B,MACbvsB,EAAKrK,EAAQ62B,OACbrL,EAAMxrB,EAAQ0J,SACd+hB,EAAMzrB,EAAQyJ,UACdqtB,EAAK92B,EAAQ+2B,YACbvzB,EAAOvG,IAAO+C,EAAQrB,QAAQwB,WAAaH,EAAQwJ,QAAQrJ,WAAY,gBAAgBK,UAC7FnD,QAAQC,IAAI0C,GACZ3C,QAAQC,IAAIvC,OAAO0wB,IACAvD,MAAfntB,OAAOiP,IACPssB,EAAU71B,KAAK,CACXud,KAAMhU,EACNuhB,KAAM/nB,IAGK0kB,MAAfntB,OAAOsP,IAEPksB,EAAU91B,KAAK,CACXud,KAAM3T,EACNkhB,KAAM/nB,IAGM0kB,MAAhBntB,OAAOywB,IACPgL,EAAW/1B,KAAK,CACZud,KAAMwN,EACND,KAAM/nB,IAGM0kB,MAAhBntB,OAAO0wB,IACPgL,EAAWh2B,KAAK,CACZud,KAAMyN,EACNF,KAAM/nB,IAGdnG,QAAQC,IAAIvC,OAAO+7B,IACA5O,MAAfntB,OAAO+7B,IAEPJ,EAAUj2B,KAAK,CACXud,KAAM8Y,EACNvL,KAAM/nB,IAKtB,GAAIlF,MAAMC,QAAQ83B,GACd,IAAK,IAAI33B,EAAQ,EAAGA,EAAQ23B,EAAKx3B,OAAQH,IAAS,CAC9C,IAAMsB,EAAUq2B,EAAK33B,GACfuL,EAAOjK,EAAQg3B,OACrB,GAAqB9O,MAAjBntB,OAAOkP,GAAX,CAGA,IAAMzG,EAAOvG,IAAO+C,EAAQrB,QAAQwB,WAAaH,EAAQwJ,QAAQrJ,WAAY,gBAAgBK,UAC7Fm2B,EAAYl2B,KAAK,CACbud,KAAM/T,EACNshB,KAAM/nB,KAKlB,MAAa,OAAT5E,EAAwB03B,EACf,OAAT13B,EAAwB23B,EACf,SAAT33B,EAA0B+3B,EACjB,QAAT/3B,EAAyB,CAAC43B,EAAYC,GAC7B,OAAT73B,EAAwB83B,EACrB,GAGIO,CAAcvxB,EAAO,GAAIA,EAAO,GAAI9G,U,2CAIzC,IAAD,EACoCzD,KAAKI,MAAlDwI,EADS,EACTA,SAAUqS,EADD,EACCA,WAAY1N,EADb,EACaA,IAAKjC,EADlB,EACkBA,OAAQwH,EAD1B,EAC0BA,MACrB9S,KAAKN,MAAMu6B,gBACXhf,IAClBjb,KAAKC,SAAS,CAAEg6B,cAAej6B,KAAKI,MAAM6a,aAC1Cjb,KAAK+7B,2BAES/7B,KAAKN,MAAMw6B,YACX5uB,IACdtL,KAAKC,SAAS,CAAEi6B,UAAW5uB,IAC3BtL,KAAK+7B,2BAEL/7B,KAAKN,MAAM06B,WAAatnB,IACxB9S,KAAKC,SAAS,CAAEm6B,SAAUtnB,IAC1B9S,KAAK+7B,2BAGLnzB,IADgB5I,KAAKN,MAAMy6B,cAE3Bn6B,KAAKC,SAAS,CAAEk6B,YAAavxB,IAC7B5I,KAAK+7B,2BAGLxuB,IADWvN,KAAKN,MAAMs8B,SAEtBh8B,KAAKC,SAAS,CAAE+7B,OAAQzuB,IACxBvN,KAAK+7B,6B,0CAMT/7B,KAAKC,SAAS,CACVg6B,cAAej6B,KAAKI,MAAM6a,WAC1Bif,UAAWl6B,KAAKI,MAAMkL,OACtB6uB,YAAan6B,KAAKI,MAAMwI,SACxBozB,OAAQh8B,KAAKI,MAAM47B,OACnB5B,SAAUp6B,KAAKI,MAAM0S,QAEzB9S,KAAK+7B,4B,gCAGC3O,GAqDN,IAAIkB,EAAa3N,KAAc,MArDb,MA8Ed3gB,KAAKI,MAhBL67B,EA9Dc,EA8DdA,OACAlb,EA/Dc,EA+DdA,OACAsZ,EAhEc,EAgEdA,OACAt5B,EAjEc,EAiEdA,OACA+R,EAlEc,EAkEdA,MACAlK,EAnEc,EAmEdA,SACA4kB,EApEc,EAoEdA,QACAD,EArEc,EAqEdA,QACAE,EAtEc,EAsEdA,YACAtN,EAvEc,EAuEdA,IACAD,EAxEc,EAwEdA,IACA4O,EAzEc,EAyEdA,MACAD,EA1Ec,EA0EdA,MACAvjB,EA3Ec,EA2EdA,OACA7H,EA5Ec,EA4EdA,KACAwX,EA7Ec,EA6EdA,WA8CJ,IAAM2T,EAAY9b,EAAQ,GAKpB0nB,EAhDN,SAAqB5xB,EAAU6xB,GAC3B,IAAMC,EAAeD,EAAc,OACnC,OAAiB,IAAb7xB,EACO,CACH+xB,MAAOD,EAAgB,MACvBE,IAAKF,EACL9xB,SAAU,GAGD,IAAbA,EACO,CACH+xB,MAAOD,EAAgB,OACvBE,IAAKF,EACL9xB,SAAU,GAGD,IAAbA,EACO,CACH+xB,MAAOD,EAAgB,OACvBE,IAAKF,EACL9xB,SAAU,GAGX,CACH+xB,MAAOD,EAAgB,QACvBE,IAAKF,EACL9xB,SAAU,GAsBEiyB,CAAYjyB,EAnBhC,SAA0BqS,GACtB,IAAM6f,EAAkBh5B,IAAOA,MAASoM,OAAO,YAAa,YAAY7I,UAAa,MAC/E01B,EAAiBj5B,IAAOA,MAASoM,OAAO,YAAa,YAAY7I,UACjE4tB,EAAMnxB,MAASuD,UACrB,OAAI4V,IAAe8f,GACX9H,EAAM6H,EACC7f,EAAc,MAItBA,EAQO+f,CAAiB/f,IAEnC/Y,QAAQC,IAAIq4B,GACZ,IA+BIpY,EA/BAnC,EAAIU,OACHc,OAAO,CAACvB,EAAKC,IACbuB,MAAM,CAAC3gB,EAAQ,IAEhB4gB,EAAIhB,OACHc,OAAO,CAAC+Y,EAAYG,MAAOH,EAAYI,MACvClZ,MAAM,CAAC,EAAGkN,EAAY,IAGvBhN,EAAQjB,KAAYV,GACnBuB,WAAW,CAACtB,EAAKC,IACjB6B,YAAW,SAAAuM,GAAC,OAAKA,KACjBzM,SAAS,EAAG,GACZC,YAAY,IAGXma,EAjJN,SAAsBxzB,EAAWE,GAC7B,IAAIuzB,EAAa,GACjB,GAAiB,IAAbvzB,EACA,IAAK,IAAIrF,EAAQ,EAAGA,EAAQ,GAAIA,IACxBA,EAAQ,IAAM,GACd44B,EAAW72B,KAAKoD,EAAqB,GAARnF,EAAa,GAAK,UAItD,GAAiB,IAAbqF,EACL,IAAK,IAAIrF,EAAQ,EAAGA,EAAQ,GAAIA,IACxBA,EAAQ,IAAM,GACd44B,EAAW72B,KAAKoD,EAAqB,EAARnF,EAAY,GAAK,GAAK,UAI1D,GAAiB,IAAbqF,EACL,IAAK,IAAIrF,EAAQ,EAAGA,EAAQ,GAAIA,IAC5B44B,EAAW72B,KAAKoD,EAAqB,GAARnF,EAAa,GAAK,IAAO,QAI1D,IAAK,IAAIA,EAAQ,EAAGA,EAAQ,GAAIA,IAC5B44B,EAAW72B,KAAKoD,EAAqB,GAARnF,EAAa,GAAK,IAAO,IAG9D,OAAO44B,EAuHQC,CAAa5B,EAAYG,MAAO/xB,GAC7CyzB,EArHN,SAAuBh0B,EAAMO,GACzB,IAAIuzB,EAAa,GACjB,GAAiB,IAAbvzB,EACAuzB,EAAW72B,KAAK+C,EAAQ,YAEvB,GAAiB,IAAbO,EACL,IAAK,IAAIrF,EAAQ,EAAGA,EAAQ,EAAGA,IAC3B44B,EAAW72B,KAAK+C,EAAQ,MAAgC,GAAR9E,EAAa,GAAK,GAAK,UAG1E,GAAiB,IAAbqF,EACL,IAAK,IAAIrF,EAAQ,EAAGA,EAAQ,GAAIA,IAC5B44B,EAAW72B,KAAK+C,EAAgB,GAAR9E,EAAa,GAAK,IAAO,QAIrD,IAAK,IAAIA,EAAQ,EAAGA,EAAQ,GAAIA,IAC5B44B,EAAW72B,KAAK+C,EAAgB,GAAR9E,EAAa,GAAK,IAAO,IAGzD,OAAO44B,EAiGWG,CAAc9B,EAAYG,MAAO/xB,GAEnDsZ,EAAQvB,KAAWgB,GAClBH,WAAW0a,GACXpa,SAAS,EAAG,GACZC,YAAY,GACZC,YAAW,SAAUC,GAAK,OAjGpBqM,EAiGuCrM,MAE9Csa,EAAW5b,KAAWgB,GACrBH,WAAW6a,GACXva,SAAS,EAAG,GACZC,YAAY,IACZC,YAAW,SAAUC,GAAK,OAAOngB,IAAOmgB,GAAG/T,OAAO,YAwEvD,GApEIkU,EADAmL,EACM5M,KAAU,IAAMI,GACjBsB,OAAO,OACPC,KAAK,KAAM+X,GACX15B,MAAM,QAASmS,EAAQ,IACvBnS,MAAM,SAAUI,EAAS,IACzBshB,OAAO,KACPC,KAAK,YAAa,oBAGnBkL,EACM7M,KAAU,IAAMI,GACjBsB,OAAO,OACPC,KAAK,KAAM+X,GACX15B,MAAM,QAASmS,GACfnS,MAAM,SAAUI,EAAS,IACzBshB,OAAO,KACPC,KAAK,YAAa,mBAIjB3B,KAAU,IAAMI,GACjBsB,OAAO,OACPC,KAAK,KAAM+X,GACX15B,MAAM,QAASmS,GACfnS,MAAM,SAAUI,EAAS,IACzBshB,OAAO,KACPC,KAAK,YAAa,mBAI3BiL,GACAnL,EAAIC,OAAO,KACNE,KAAKL,GACLI,KAAK,QAAS,QAGnBkL,GACApL,EAAIC,OAAO,KACNE,KAAKga,GACLja,KAAK,QAAS,QAIvBF,EAAIC,OAAO,KACNE,KAAKX,GACLU,KAAK,QAAS,QAInBF,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE6Y,EAAYG,QACzBrY,KAAK,KAAMrC,EAAEE,IACbmC,KAAK,KAAMX,EAAE6Y,EAAYI,MACzBtY,KAAK,KAAMrC,EAAEE,IACbxf,MAAM,SAAU,uBAChBA,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,KAE/ByhB,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE6Y,EAAYG,QACzBrY,KAAK,KAAMrC,EAAEC,IACboC,KAAK,KAAMX,EAAE6Y,EAAYI,MACzBtY,KAAK,KAAMrC,EAAEC,IACbvf,MAAM,SAAU,uBAChBA,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,KAGd,IAAbiI,EAAgB,CAChB,IAAK,IAAIrF,EAAQ,EAAGA,EAAQ,GAAIA,IACvBA,EAAQ,KAAQ,EACjB6e,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE6Y,EAAYG,MAAiB,GAARp3B,EAAa,GAAK,MACpD+e,KAAK,KAAM,GACXA,KAAK,KAAMX,EAAE6Y,EAAYG,MAAiB,GAARp3B,EAAa,GAAK,MACpD+e,KAAK,KAAMvhB,GACXJ,MAAM,SAAU,mBAChBA,MAAM,eAAgB,GACpB4C,EAAQ,IAAM,EACrB6e,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE6Y,EAAYG,MAAiB,GAARp3B,EAAa,GAAK,MACpD+e,KAAK,KAAM,GACXA,KAAK,KAAMX,EAAE6Y,EAAYG,MAAiB,GAARp3B,EAAa,GAAK,MACpD+e,KAAK,KAAMvhB,GACXJ,MAAM,SAAU,mBAChBA,MAAM,eAAgB,GAG3ByhB,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE6Y,EAAYG,MAAiB,GAARp3B,EAAa,GAAK,MACpD+e,KAAK,KAAM,GACXA,KAAK,KAAMX,EAAE6Y,EAAYG,MAAiB,GAARp3B,EAAa,GAAK,MACpD+e,KAAK,KAAMvhB,GACXJ,MAAM,SAAU,uBAChBA,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,KAIvC0uB,EAAWmL,EAAYG,MAAO/xB,EAAUimB,EAAOC,EAAOrrB,GACtD+4B,EAAS/4B,EAAM6H,EAAQ8hB,EAAYxkB,EAAU,IAGjD,GAAiB,IAAbA,EAAgB,CAChB,IAAK,IAAIrF,EAAQ,EAAGA,EAAQ,GAAIA,IACvBA,EAAQ,IAAO,EAChB6e,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE6Y,EAAYG,MAAiB,GAARp3B,EAAa,GAAK,IAAO,IAC3D+e,KAAK,KAAM,GACXA,KAAK,KAAMX,EAAE6Y,EAAYG,MAAiB,GAARp3B,EAAa,GAAK,IAAO,IAC3D+e,KAAK,KAAMvhB,GACXJ,MAAM,SAAU,mBAChBA,MAAM,eAAgB,GACpB4C,EAAQ,IAAM,EACrB6e,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE6Y,EAAYG,MAAiB,GAARp3B,EAAa,GAAK,IAAO,IAC3D+e,KAAK,KAAM,GACXA,KAAK,KAAMX,EAAE6Y,EAAYG,MAAiB,GAARp3B,EAAa,GAAK,IAAO,IAC3D+e,KAAK,KAAMvhB,GACXJ,MAAM,SAAU,mBAChBA,MAAM,eAAgB,GAG3ByhB,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE6Y,EAAYG,MAAiB,GAARp3B,EAAa,GAAK,IAAO,IAC3D+e,KAAK,KAAM,GACXA,KAAK,KAAMX,EAAE6Y,EAAYG,MAAiB,GAARp3B,EAAa,GAAK,IAAO,IAC3D+e,KAAK,KAAMvhB,GACXJ,MAAM,SAAU,uBAChBA,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,KAIvC0uB,EAAWmL,EAAYG,MAAO/xB,EAAUimB,EAAOC,EAAOrrB,GACtD+4B,EAAS/4B,EAAM6H,EAAQ8hB,EAAYxkB,EAAU,IAEjD,GAAiB,IAAbA,EAAgB,CAChB,IAAK,IAAIrF,EAAQ,EAAGA,EAAQ,GAAIA,IAExB6e,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE6Y,EAAYG,MAAiB,GAARp3B,EAAa,GAAK,IAAO,IAC3D+e,KAAK,KAAM,GACXA,KAAK,KAAMX,EAAE6Y,EAAYG,MAAiB,GAARp3B,EAAa,GAAK,IAAO,IAC3D+e,KAAK,KAAMvhB,GACXJ,MAAM,SAAU,mBAChBA,MAAM,eAAgB,GAanC0uB,EAAWmL,EAAYG,MAAO/xB,EAAUimB,EAAOC,EAAOrrB,GACtD+4B,EAAS/4B,EAAM6H,EAAQ8hB,EAAYxkB,EAAU,IAEjD,GAAiB,IAAbA,EAAgB,CAChB,IAAK,IAAIrF,EAAQ,EAAGA,EAAQ,GAAIA,IAC5B6e,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE6Y,EAAYG,MAAiB,GAARp3B,EAAa,GAAK,IAAO,KAC3D+e,KAAK,KAAM,GACXA,KAAK,KAAMX,EAAE6Y,EAAYG,MAAiB,GAARp3B,EAAa,GAAK,IAAO,KAC3D+e,KAAK,KAAMvhB,GACXJ,MAAM,SAAU,mBAChBA,MAAM,eAAgB,GAG/B0uB,EAAWmL,EAAYG,MAAO/xB,EAAUimB,EAAOC,EAAOrrB,GACtD+4B,EAAS/4B,EAAM6H,EAAQ8hB,EAAYxkB,EAAU,IAqCjD,SAAS+lB,EAAeC,EAAWhmB,GAC/B,OAAiB,IAAbA,EACkB,SAAXqzB,EAAoBrN,EAAY,KAAOA,EAAY,GAE7C,IAAbhmB,EACkB,SAAXqzB,EAAoBrN,EAAY,KAAOA,EAAY,KAE7C,IAAbhmB,EACkB,SAAXqzB,EAAoBrN,EAAY,GAAKA,EAAY,KAE1C,SAAXqN,EAAoBrN,EAAY,GAAKA,EAAY,KAE5D,SAASS,EAAW3mB,EAAWE,EAAUimB,EAAOC,EAAOrrB,GAEnD,IADA,IAAMsrB,EA/CV,SAAmBrmB,EAAWE,GAC1B,SAASomB,EAAYtmB,EAAWE,GAE5B,IADA,IAAIqmB,EAAY,GACP1rB,EAAQ,EAAGA,EAAQqF,EAAUrF,IAClC,GAAiB,KAAbqF,EAAiB,CACjB,IAAMsmB,EAAUxmB,EAAa,KAA2B,GAARnF,EAAa,GAAK,IAClE0rB,EAAU3pB,KAAK4pB,QAEd,GAAiB,KAAbtmB,EAAiB,CACtB,IAAMsmB,EAAUxmB,EAAa,KAA+B,EAARnF,EAAY,GAAK,GAAK,IAC1E0rB,EAAU3pB,KAAK4pB,QAEd,GAAiB,KAAbtmB,EAAiB,CACtB,IAAMsmB,EAAUxmB,EAAa,MAA+B,EAARnF,EAAY,GAAK,GAAK,IAC1E0rB,EAAU3pB,KAAK4pB,OAEd,CACD,IAAMA,EAAUxmB,EAAa,MAAgC,GAARnF,EAAa,GAAK,GAAK,IAC5E0rB,EAAU3pB,KAAK4pB,GAGvB,OAAOD,EAEX,OACWD,EAAYtmB,EADN,IAAbE,EAC8B,GAEjB,IAAbA,EAC8B,GAEjB,IAAbA,EAC8B,GAEJ,IAeRumB,CAAUzmB,EAAWE,GAClCrF,EAAQ,EAAGA,EAAQwrB,EAAcrrB,OAAQH,IAAS,CACvD,IAAM6rB,EAAWT,EAAe7b,EAAOlK,GACjC/D,EAAUkqB,EAAcxrB,GAC9B6e,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE9c,IACbyd,KAAK,KAAMrC,EAAE4O,IACbvM,KAAK,KAAMX,EAAE9c,IACbyd,KAAK,KAAMrC,EAAE6O,IACbnuB,MAAM,SAAU8sB,GAChB9sB,MAAM,UAAW,IACjBA,MAAM,eAAgByuB,GAEd,QAAT3rB,GAA2B,QAATA,GAClB2e,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE9c,IACbyd,KAAK,KAAMrC,EAAE,KACbqC,KAAK,KAAMX,EAAE9c,IACbyd,KAAK,KAAMrC,EAAE,KACbtf,MAAM,SAAU8sB,GAChB9sB,MAAM,UAAW,IACjBA,MAAM,eAAgByuB,IAIvC,SAASoN,EAAS/4B,EAAM6H,EAAQ8hB,EAAYxkB,EAAUwmB,GAClD,SAASqN,EAAY7zB,GACjB,OAAiB,IAAbA,EACO,KAEM,IAAbA,EACO,KAEM,IAAbA,EACO,MAEJ,MAEX,GAAe,OAAX0C,EAAiB,CACjB,GAAa,QAAT7H,EAAgB,CAGhB,IAFA,IAAM8rB,EAAWnC,EAAWtf,KACtB0hB,EAAWpC,EAAWxf,KACnBrK,EAAQ,EAAGA,EAAQisB,EAAS9rB,OAAQH,IAAS,CAClD,IAAMsB,EAAU2qB,EAASjsB,GACnBksB,EAAK5qB,EAAQ6qB,GACbC,EAAK9qB,EAAQ+qB,GACbC,EAAKhrB,EAAQirB,GACbC,EAAKlrB,EAAQmrB,GACbC,EAAQnuB,IAAO+C,EAAQwD,KAAM,uBAAuBhD,UAAYo3B,EAAY7zB,GAClFwZ,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAEsO,IACb3N,KAAK,KAAMX,EAAEsO,IACb3N,KAAK,KAAMrC,EAAEwP,IACbnN,KAAK,KAAMrC,EAAE8P,IACbzN,KAAK,SAAUmL,GACf9sB,MAAM,UAAW,IACjBA,MAAM,eAAgB,GAE3ByhB,EAAIC,OAAO,QACNC,KAAK,IAAKX,EAAEsO,GAASb,EAAW,GAChC9M,KAAK,IAAKrC,EAAE4P,IACZvN,KAAK,SAAWrC,EAAE0P,GAAM1P,EAAE4P,IAC1BvN,KAAK,QAAS8M,GACd9M,KAAK,SAAUmL,GACf9sB,MAAM,UAAW,IACjBA,MAAM,OAAQ,uBACdA,MAAM,eAAgB,GAE3ByhB,EACK8N,UAAU,QACVnsB,KAAK,CAAC0rB,EAAIM,IACVI,QACA9N,OAAO,QACPC,KAAK,KAAMX,EAAEsO,GAASb,EAAW,GACjC9M,KAAK,KAAMX,EAAEsO,GAASb,EAAW,GACjC9M,KAAK,MAAM,SAAUL,GAAK,OAAQhC,EAAEgC,MACpCK,KAAK,MAAM,SAAUL,GAAK,OAAQhC,EAAEgC,MACpCK,KAAK,SAAUmL,GACf9sB,MAAM,UAAW,IACjBA,MAAM,eAAgB,GAE/B,IAAK,IAAI4C,EAAQ,EAAGA,EAAQgsB,EAAS7rB,OAAQH,IAAS,CAClD,IAAMsB,EAAU0qB,EAAShsB,GACnBksB,EAAK5qB,EAAQ6qB,GACbC,EAAK9qB,EAAQ+qB,GACbC,EAAKhrB,EAAQirB,GACbC,EAAKlrB,EAAQmrB,GACbC,EAAQnuB,IAAO+C,EAAQwD,KAAM,uBAAuBhD,UAAYo3B,EAAY7zB,GAClFwZ,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAEsO,IACb3N,KAAK,KAAMX,EAAEsO,IACb3N,KAAK,KAAMrC,EAAEwP,IACbnN,KAAK,KAAMrC,EAAE8P,IACbzN,KAAK,SAAUmL,GAEf9sB,MAAM,eAAgB,GAE3ByhB,EAAIC,OAAO,QACNC,KAAK,IAAKX,EAAEsO,GAASb,EAAW,GAChC9M,KAAK,IAAKrC,EAAE4P,IACZvN,KAAK,SAAWrC,EAAE0P,GAAM1P,EAAE4P,IAC1BvN,KAAK,QAAS8M,GACd9M,KAAK,SAAUmL,GACf9sB,MAAM,OAAQ,uBACdA,MAAM,eAAgB,GAE3ByhB,EACK8N,UAAU,QACVnsB,KAAK,CAAC0rB,EAAIM,IACVI,QACA9N,OAAO,QACPC,KAAK,KAAMX,EAAEsO,GAASb,EAAW,GACjC9M,KAAK,KAAMX,EAAEsO,GAASb,EAAW,GACjC9M,KAAK,MAAM,SAAUL,GAAK,OAAQhC,EAAEgC,MACpCK,KAAK,MAAM,SAAUL,GAAK,OAAQhC,EAAEgC,MACpCK,KAAK,SAAUmL,GACf9sB,MAAM,eAAgB,IAGnC,GAAa,OAAT8C,GAA0B,OAATA,GAA0B,SAATA,EAClC,IAAK,IAAIF,EAAQ,EAAGA,EAAQ6pB,EAAW1pB,OAAQH,IAAS,CACpD,IAAMsB,EAAUuoB,EAAW7pB,GACrBksB,EAAK5qB,EAAQ6qB,GACbC,EAAK9qB,EAAQ+qB,GACbC,EAAKhrB,EAAQirB,GACbC,EAAKlrB,EAAQmrB,GACbC,EAAQnuB,IAAO+C,EAAQwD,KAAM,uBAAuBhD,UAAYo3B,EAAY7zB,GAClFwZ,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAEsO,IACb3N,KAAK,KAAMX,EAAEsO,IACb3N,KAAK,KAAMrC,EAAEwP,IACbnN,KAAK,KAAMrC,EAAE8P,IACbzN,KAAK,SAAUmL,GAEf9sB,MAAM,eAAgB,GAE3ByhB,EAAIC,OAAO,QACNC,KAAK,IAAKX,EAAEsO,GAASb,EAAW,GAChC9M,KAAK,IAAKrC,EAAE4P,IACZvN,KAAK,SAAWrC,EAAE0P,GAAM1P,EAAE4P,IAC1BvN,KAAK,QAAS8M,GACd9M,KAAK,SAAUmL,GACf9sB,MAAM,OAAQ,uBACdA,MAAM,eAAgB,GAE3ByhB,EACK8N,UAAU,QACVnsB,KAAK,CAAC0rB,EAAIM,IACVI,QACA9N,OAAO,QACPC,KAAK,KAAMX,EAAEsO,GAASb,EAAW,GACjC9M,KAAK,KAAMX,EAAEsO,GAASb,EAAW,GACjC9M,KAAK,MAAM,SAAUL,GAAK,OAAQhC,EAAEgC,MACpCK,KAAK,MAAM,SAAUL,GAAK,OAAQhC,EAAEgC,MACpCK,KAAK,SAAUmL,GACf9sB,MAAM,eAAgB,GAInC,GAAa,QAAT8C,EACA,IAAK,IAAIF,EAAQ,EAAGA,EAAQ6pB,EAAW1pB,OAAQH,IAAS,CACpD,IAAMsB,EAAUuoB,EAAW7pB,GACrB0sB,EAAQnuB,IAAO+C,EAAQurB,KAAM,uBAAuB/qB,UACpDgrB,EAAMxrB,EAAQwrB,IACdC,EAAMzrB,EAAQyrB,IACR,IAARD,GAAqB,IAARC,IAIblO,EAAIC,OAAO,UACNC,KAAK,KAAMX,EAAEsO,IACb3N,KAAK,KAAMrC,EAAEoQ,IACb/N,KAAK,IAAK,GACV3hB,MAAM,OAAQ8sB,GAGnBrL,EAAIC,OAAO,UACNC,KAAK,KAAMX,EAAEsO,IACb3N,KAAK,KAAMrC,EAAEqQ,IACbhO,KAAK,IAAK,GACV3hB,MAAM,UAAW,IACjBA,MAAM,OAAQ8sB,UAO/B,GAAa,QAAThqB,GAA2B,QAATA,EAAgB,CAClC,QAAmBrB,IAAfgrB,EACA,OAAO,KAEX,GAA0B,IAAtBA,EAAW1pB,OACX,OAAO,KAIX,IAFA,IAAM2sB,EAAMjD,EAAW,GACjBkD,EAAMlD,EAAW,GACd7pB,EAAQ,EAAGA,EAAQ8sB,EAAI3sB,OAAQH,IAAS,CAC7C,IAAMsB,EAAUwrB,EAAI9sB,GACpB6e,EAAIC,OAAO,UACNC,KAAK,KAAMX,EAAE9c,EAAQurB,OACrB9N,KAAK,KAAMrC,EAAEpb,EAAQge,OACrBP,KAAK,IAAK,GACV3hB,MAAM,OAAQ8sB,GAIvB,IAAK,IAAIlqB,EAAQ,EAAGA,EAAQ+sB,EAAI5sB,OAAQH,IAAS,CAC7C,IAAMsB,EAAUyrB,EAAI/sB,GACpB6e,EAAIC,OAAO,UACNC,KAAK,KAAMX,EAAE9c,EAAQurB,OACrB9N,KAAK,KAAMrC,EAAEpb,EAAQge,OACrBP,KAAK,IAAK,GACV3hB,MAAM,OAAQ8sB,GACd9sB,MAAM,UAAW,UAK1B,IAAK,IAAI4C,EAAQ,EAAGA,EAAQ6pB,EAAW1pB,OAAQH,IAAS,CACpD,IAAMsB,EAAUuoB,EAAW7pB,GAC3B6e,EAAIC,OAAO,UACNC,KAAK,KAAMX,EAAE9c,EAAQurB,OACrB9N,KAAK,KAAMrC,EAAEpb,EAAQge,OACrBP,KAAK,IAAK,GACV3hB,MAAM,OAAQ8sB,O,oCAUnCztB,KAAKC,SAAS,CACV+5B,QAASh6B,KAAKN,MAAMs6B,W,+BAGlB,IACEjZ,EAAW/gB,KAAKI,MAAhB2gB,OACR,OACI,yBAAKpL,GAAIoL,EAAQpgB,MAAO,CAAE+7B,WAAY,U,GAv1BTl9B,c,qBCof1Bm9B,ICxfcn9B,Y,kNDazBE,MAAQ,CACJk9B,WAAY,EACZtxB,OAAQ,KACRyE,SAAS,EACT8sB,iBAAiB,EACjBC,eAAgB,EAChBC,iBAAkB,EAClBva,WAAY,KACZwa,qBAAsB,KACtBC,qBAAsB,KAEtB1wB,mBAAoB,KACpB2wB,SAAU,KACVjW,cAAe,KACfkW,iBAAkB,KAElB3M,UAAU,G,EAsBdC,SAAW,WACP,EAAKxwB,SAAS,CACVuwB,UAAU,K,EAIlBE,SAAW,SAAC7hB,EAAI8hB,EAAM/iB,GACH,EAAKlO,MAAM8wB,WAEtB3hB,EAAK,KAAOA,EAAK,KAAO,EAAK4hB,WAC7BE,EAAO,IAAMA,EAAO,IAAM,EAAKF,WAC/B7iB,EAAO,IAAMA,EAAO,IAAM,EAAK6iB,a,oFA/BjB,IACVxV,EAAejb,KAAKI,MAApB6a,WACAgM,EAAkBjnB,KAAKN,MAAvBunB,cACFmW,EAAWp9B,KAAKI,MAAM8d,SAASzX,MAAMzB,WAAWC,OAChDi4B,EAAWl9B,KAAKN,MAAMw9B,SACtB9M,EAAOtuB,IAAO9B,KAAKq9B,UAAUpiB,EAAYjb,KAAKN,MAAMk9B,YAAYv0B,MAAM6F,OAAO,kBAC/EkvB,IAAaF,GAAYjiB,IAAegM,IACxCjnB,KAAKC,SAAS,CAAEi9B,SAAUE,EAAUnW,cAAehM,EAAYkiB,iBAAkBn9B,KAAKq9B,UAAUpiB,EAAYjb,KAAKN,MAAMk9B,YAAYU,WACnIt9B,KAAK6I,iBAAiBunB,EAAK/nB,KAAM+0B,M,0CAGrB,IAERniB,EAAejb,KAAKI,MAApB6a,WACFmV,EAAOtuB,IAAO9B,KAAKq9B,UAAUpiB,EAAYjb,KAAKN,MAAMk9B,YAAYv0B,MAAM6F,OAAO,kBAC7EkvB,EAAWp9B,KAAKI,MAAM8d,SAASzX,MAAMzB,WAAWC,OACtDjF,KAAKC,SAAS,CAAEi9B,SAAUE,EAAUnW,cAAehM,EAAYkiB,iBAAkBn9B,KAAKq9B,UAAUpiB,EAAYjb,KAAKN,MAAMk9B,YAAYU,WACnIt9B,KAAK6I,iBAAiBunB,EAAMgN,K,gCAkBtBniB,EAAYrS,GAQlB,IACMP,EARN,SAAqBk1B,GAEjB,OADYz7B,MAASuD,UACXk4B,EACCA,EAAe,MAEnBA,EAGEC,CADO17B,IAAOA,MAASoM,OAAO,YAAa,YAAY7I,UAAa,OAE3Eo4B,EAAkBxiB,EAAc,MAChCyiB,EAAa57B,MAAS4D,IAAI,SAChC,GAAI+3B,IAAoBp1B,EAAM,CAE1B,IAAMs1B,EAAU77B,IAAOA,MAASoM,OAAO,cAAe,cAAc7I,UACpE,GAAiB,IAAbuD,EACA,MAAO,CACHP,KAAMs1B,EAAW,KACjBL,SAAUI,EAAa,GAG/B,IAAMxvB,EAASvK,SAAS+5B,EAAa,GAAK,EAC1C,MAAO,CACHr1B,KAAMs1B,EAAoB,GAATzvB,EAAc,GAAK,IACpCovB,SAAU,GAAK35B,SAAU7B,IAAOuG,EAAQ,OAAsBpG,KAAKH,IAAO67B,EAAoB,GAATzvB,EAAc,GAAK,KAAQ,SAAW,IAInI,IAAMyvB,EAAU77B,IAAOA,MAASoM,OAAO,YAAa,YAAY7I,UAAa,OAC7E,OAAiB,IAAbuD,EACO,CACHP,KAAMs1B,EAAW,KACjBL,SAAU,IAGX,CACHj1B,KAAMs1B,EAAW,MACjBL,SAAU,M,uCAKDlN,EAAMgN,GAAW,I/BurCA53B,EAAO6C,EAAMO,E+BvrCd,OACvBg1B,EAAW59B,KAAK69B,8B/BsrCQr4B,E+BrrCI43B,E/BqrCG/0B,E+BrrCO+nB,E/BqrCDxnB,E+BrrCOg1B,E/BsrCjDn4B,IAAMC,IAAI,mCAAqCF,EAAQ,IAAM6C,EAAO,IAAMO,I+BrrCtEc,MAAK,SAAA3F,GAAU7B,QAAQC,IAAI4B,EAAKA,MAAO,EAAK9D,SAAS,CAAEsM,mBAAoBxI,EAAKA,UAChF+F,OAAM,SAAAC,GAAS7H,QAAQC,IAAI4H,Q,mCAGvBnB,GAAW,IAAD,OACfk1B,EAAY,GAChB,GAAiB,IAAbl1B,EACA,IADiB,IAAD,WACPrF,GACL,IAAMw6B,EAAcx6B,EAAQ,EACxBw6B,IAAgB,EAAKr+B,MAAMy9B,iBAC3BW,EAAUx4B,KAAK,yBAAKpF,IAAKqD,EAAO5C,MAAO,CAAEI,OAAQ,IAAK+R,MAAO,OAAQmF,OAAQ,sCAE5E6lB,EAAUx4B,KAAK,yBAAKpF,IAAKqD,EAAO5C,MAAO,CAAEI,OAAQ,IAAK+R,MAAO,OAAQkB,OAAQ,WAAad,QAAS,kBAAM,EAAK8qB,iBAAiBD,EAAan1B,QAL5IrF,EAAQ,EAAGA,EAAQ,GAAIA,IAAU,EAAjCA,QAST,IADE,IAAD,WACQA,GACL,IAAMw6B,EAAcx6B,EAAQ,EACxBw6B,IAAgB,EAAKr+B,MAAMy9B,iBAC3BW,EAAUx4B,KAAK,yBAAKpF,IAAKqD,EAAO5C,MAAO,CAAEI,OAAQ,IAAK+R,MAAO,OAAQmF,OAAQ,sCAE5E6lB,EAAUx4B,KAAK,yBAAKpF,IAAKqD,EAAO5C,MAAO,CAAEI,OAAQ,IAAK+R,MAAO,OAAQkB,OAAQ,WAAad,QAAS,kBAAM,EAAK8qB,iBAAiBD,EAAan1B,QAL5IrF,EAAQ,EAAGA,EAAQ,GAAIA,IAAU,EAAjCA,GAQb,OAAOu6B,I,mDAKP,OAAkB,IADA99B,KAAKN,MAAMk9B,WAElB,EAEJ,I,uCAGMvtB,EAAQuuB,GAAU,IAcvB3iB,EAAejb,KAAKI,MAApB6a,WACF5S,EAAOvG,IAdb,SAAmBmZ,EAAY2iB,GAC3B,IAAMK,EAAMhjB,EAAc,OAC1B,OAAiB,IAAb2iB,EACOK,EAAO,MAEXA,EAAO,OASEv1B,CAAUuS,EAAY2iB,GAP1C,SAAyBA,GACrB,OAAiB,IAAbA,EACO,EAEJ,EAG4CM,CAAgBN,IAAavuB,EAAS,GAAK,GAAK,GAAK,KAAOnB,OAAO,kBACpHkvB,EAAWp9B,KAAKI,MAAM8d,SAASzX,MAAMzB,WAAWC,OACtDjF,KAAKC,SAAS,CAAEk9B,iBAAkB9tB,IAClCrP,KAAK6I,iBAAiBR,EAAM+0B,K,+BAGtB,IAAD,OAOL,SAASe,EAAgB59B,GACrB,YAAc6B,IAAV7B,GAAiC,OAAVA,EAChB,KAEJA,EAwCX,SAASuwB,EAAWvwB,EAAOuuB,EAAOD,GAC9B,QAAItuB,EAAQuuB,GAASvuB,EAAQsuB,GA4BjC,IAf2B4L,EAerB3nB,EAAmC,IAA3BkQ,OAAOC,OAAOC,WACtBkb,EApEN,SAA2B79B,GACvB,SAAS89B,EAAW/Y,EAAU7hB,GAC1B,IAAM66B,EAAahZ,EAAShiB,QAAO,SAAU/C,EAAOgD,EAAOqG,GACvD,OAAOrJ,EAAMkD,OAASA,KAE1B,OAA0B,IAAtB66B,EAAW56B,OACJ,KAEJ46B,EAAW,GAAGC,IAEzB,YAAcn8B,IAAV7B,GAAiC,OAAVA,EAChB,CACHsO,GAAI,KACJK,GAAI,KACJC,GAAI,KACJL,KAAM,KACNlB,KAAM,KACNI,KAAM,KACNF,KAAM,KACNqjB,KAAM,KACND,KAAM,KACNP,KAAM,MAGP,CACH9hB,GAAIwvB,EAAW99B,EAAO,MACtB2O,GAAImvB,EAAW99B,EAAO,MACtB4O,GAAIkvB,EAAW99B,EAAO,MACtBuO,KAAMuvB,EAAW99B,EAAO,QACxBqN,KAAMywB,EAAW99B,EAAO,QACxByN,KAAMqwB,EAAW99B,EAAO,QACxBuN,KAAMuwB,EAAW99B,EAAO,QACxBowB,KAAM0N,EAAW99B,EAAO,QACxB2wB,KAAMmN,EAAW99B,EAAO,QACxB4wB,KAAMkN,EAAW99B,EAAO,SAkCZi+B,CAAkBx+B,KAAKN,MAAM6M,oBAC3CkyB,GAjBqBhE,EAiBWz6B,KAAKI,MAAM6a,WAhB5B,IAgBwCjb,KAAKN,MAAMk9B,WAfzD,CACHl0B,UAAW+xB,EAAc,MACzB9xB,QAAS8xB,EAAc,QAIpB,CACH/xB,UAAW+xB,EAAc,OAAwB,OACjD9xB,QAAS8xB,EAAc,SAQ7Bxf,EAAajb,KAAKI,MAAM6a,WAE9Bjb,KAAK0wB,SAAS0N,EAAYvvB,GAAIuvB,EAAYzN,KAAMyN,EAAYxwB,MAC5D,IArFqBrN,EAqFf2D,EAASlE,KAAKN,MAAM8wB,SAC1B,OACI,yBAAK7vB,MAAO,CAAEsX,OAAQ,qCAClB,yBAAKtX,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUE,OAAQ,OAAQuU,gBAAiB,YAAab,QAAS,aACxG,yBAAK9T,MAAO,CAAEqO,SAAU,SAAxB,4BACA,yBAAKrO,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaozB,QAAS,MAAOtzB,WAAY,SACzF,yBAAKoL,UAAiC,OAAtBlM,KAAKN,MAAM4L,OAAkB,iBAAmB,uBAAwB3K,MAAO,CAAEgO,YAAa,OAASuE,QAAS,WAAQ,EAAKjT,SAAS,CAAEqL,OAAQ,KAAM6xB,iBAAkB,SAAxL,kCAGA,yBAAKjxB,UAAiC,QAAtBlM,KAAKN,MAAM4L,OAAmB,iBAAmB,uBAAwB4H,QAAS,WAAQ,EAAKjT,SAAS,CAAEqL,OAAQ,MAAO6xB,iBAAkB,SAA3J,yCAIJ,yBAAKx8B,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaozB,QAAS,MAAOtzB,WAAY,SACzF,yBAAKoL,UAAqC,IAA1BlM,KAAKN,MAAMk9B,WAAmB,mBAAqB,yBAA0Bj8B,MAAO,CAAEgO,YAAa,OAASuE,QAAS,WAAQ,EAAKjT,SAAS,CAAE28B,WAAY,EAAGO,iBAAkB,EAAKE,UAAUpiB,EAAY,GAAGqiB,aAA5N,4BAGA,yBAAKpxB,UAAqC,IAA1BlM,KAAKN,MAAMk9B,WAAmB,mBAAqB,yBAA0B1pB,QAAS,WAAQ,EAAKjT,SAAS,CAAE28B,WAAY,EAAGO,iBAAkB,EAAKE,UAAUpiB,EAAY,GAAGqiB,aAA7L,8BAKR,yBAAKpxB,UAAU,mBACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,kBAAkBvL,MAAO,CAAEC,QAAS,OAAQ6U,iBAAkB,2BACzE,8BACA,yBAAKvJ,UAAU,YACX,yBAAKvL,MAAO,CAAEC,QAAS,OAAQmwB,cAAe,SAAU9d,eAAgB,SAAUpS,WAAY,SAAUiS,MAAO,QAAS/R,OAAQ,QAASuU,gBAAiBpR,EAAS,QAAUrB,EAAW,QACpL,wBAAIlC,MAAO,CAAEiO,MAAO1K,EAASrB,EAAW,MAAQ,UAAhD,MACA,yBAAKlC,MAAO,CAAEoO,WAAY,MAAOC,SAAU,OAAQgiB,WAAY,OAAQC,aAAc,MAAOriB,MAAO1K,EAASrB,EAAW,MAAQ,UAAYs7B,EAAgBC,EAAYvvB,OAIrJ,OAAtB7O,KAAKN,MAAM4L,OACP,yBAAKY,UAAU,YACX,yBAAKvL,MAAO,CAAEC,QAAS,OAAQmwB,cAAe,SAAU9d,eAAgB,SAAUpS,WAAY,SAAUiS,MAAO,QAAS/R,OAAQ,QAASuU,gBAAiBpR,EAAS,QAAUrB,EAAW,QACpL,yBAAKlC,MAAO,CAAEiO,MAAO1K,EAASrB,EAAW,MAAQ,UAAjD,aACA,yBAAKlC,MAAO,CAAEoO,WAAY,MAAOC,SAAU,OAAQgiB,WAAY,OAAQpiB,MAAO1K,EAASrB,EAAW,MAAQ,UAAYs7B,EAAgBC,EAAYlN,MAAlJ,IAA0JiN,EAAgBC,EAAYzN,OACtL,yBAAKhwB,MAAO,CAAEoO,WAAY,MAAOC,SAAU,OAAQgiB,WAAY,OAAQpiB,MAAO1K,EAASrB,EAAW,MAAQ,UAA1G,IAAuHs7B,EAAgBC,EAAYjN,MAAnJ,OAGR,KAER,yBAAKjlB,UAAU,YACX,yBAAKvL,MAAO,CAAEC,QAAS,OAAQmwB,cAAe,SAAU9d,eAAgB,SAAUpS,WAAY,SAAUiS,MAAO,QAAS/R,OAAQ,QAASuU,gBAAiBpR,EAAS,QAAUrB,EAAW,QACpL,yBAAKlC,MAAO,CAAEiO,MAAO1K,EAASrB,EAAW,MAAQ,UAAkC,OAAtB7C,KAAKN,MAAM4L,OAAkB,MAAQ,KAAlG,UACA,yBAAK3K,MAAO,CAAEoO,WAAY,MAAOC,SAAU,OAAQgiB,WAAY,OAAQpiB,MAAO1K,EAASrB,EAAW,MAAQ,UAAYs7B,EAAgBC,EAAYtwB,MAAlJ,IAA0JqwB,EAAgBC,EAAYxwB,OACtL,yBAAKjN,MAAO,CAAEoO,WAAY,MAAOC,SAAU,OAAQgiB,WAAY,OAAQpiB,MAAO1K,EAASrB,EAAW,MAAQ,UAA1G,IAAuHs7B,EAAgBC,EAAYpwB,MAAnJ,QAIZ,yBAAKrN,MAAO,CAAE+T,SAAU,aAEM,OAAtB1U,KAAKN,MAAM4L,OACP,yBAAK3K,MAAO,CAAE+T,SAAU,WAAYgqB,IAAK,GAAIC,KAAM,GAAI7rB,MAAOA,EAAQ,GAAI/R,OAAQ,MAC9E,yBAAKJ,MAAO,CAAEC,QAAS,OAAQI,oBAA+C,IAA1BhB,KAAKN,MAAMk9B,WAAmB,kBAAoB,mBACjG58B,KAAK4+B,aAAa5+B,KAAKN,MAAMk9B,cAGtC,KAER,kBAAC,GAAD,CACIX,OAAQ,OACRhK,IAAKjyB,KAAKI,MAAM8d,SAAS8J,OACzBza,IAAKvN,KAAKI,MAAM8d,SAASzX,MACzBwU,WAAYA,EACZof,OAAQ,SACRtZ,OAAQ,SACRtd,KAAM,KACN6H,OAAQtL,KAAKN,MAAM4L,OACnB5C,UAAW+1B,EAAY/1B,UACvBC,QAAS81B,EAAY91B,QACrB5H,OAAQ,IACR+R,MAAOA,EACPlK,SAAU5I,KAAKN,MAAMk9B,WACrB/N,MAAO,IACPC,MAAO,IACPtB,SAAS,EACTD,SAAS,EACTE,YAAY,UACZ2D,YAAa,0BACblR,IAAK,EACLC,IAAK,MAGiB,OAAtBngB,KAAKN,MAAM4L,OACP,kBAAC,GAAD,CACI2wB,OAAQ,OACRhK,IAAKjyB,KAAKI,MAAM8d,SAAS8J,OACzBza,IAAKvN,KAAKI,MAAM8d,SAASzX,MACzBwU,WAAYA,EACZof,OAAQ,UACRtZ,OAAQ,UACRtd,KAAM,MACN6H,OAAQtL,KAAKN,MAAM4L,OACnB5C,UAAW+1B,EAAY/1B,UACvBC,QAAS81B,EAAY91B,QACrB5H,OAAQ,IACR+R,MAAOA,EACPlK,SAAU5I,KAAKN,MAAMk9B,WACrB/N,MAAO,GACPC,MAAO,GACPtB,SAAS,EACTD,SAAS,EACTE,YAAa,UACb2D,YAAa,0BACblR,IAAK,EACLC,IAAK,MAET,KAER,kBAAC,GAAD,CACI8b,OAAQ,OACRhK,IAAKjyB,KAAKI,MAAM8d,SAAS8J,OACzBza,IAAKvN,KAAKI,MAAM8d,SAASzX,MACzBwU,WAAYA,EACZof,OAAQ,UACRtZ,OAAQ,UACRtd,KAAM,MACN6H,OAAQtL,KAAKN,MAAM4L,OACnB5C,UAAW+1B,EAAY/1B,UACvBC,QAAS81B,EAAY91B,QACrB5H,OAAQ,IACR+R,MAAOA,EACPlK,SAAU5I,KAAKN,MAAMk9B,WACrB/N,MAAO,GACPC,MAAO,GACPtB,SAAS,EACTD,SAAS,EACTE,YAAa,UACb2D,YAAa,0BACblR,IAAK,EACLC,IAAK,QAIjB,yBAAKjU,UAAU,iBACX,yBAAKA,UAAU,kBAAkBvL,MAAO,CAAEC,QAAS,OAAQ6U,iBAAkB,2BACzE,8BACA,yBAAKvJ,UAAU,YACX,yBAAKvL,MAAO,CAAEC,QAAS,OAAQmwB,cAAe,SAAU9d,eAAgB,SAAUpS,WAAY,SAAUiS,MAAO,QAAS/R,OAAQ,QAASuU,gBAAiBwb,EAAWsN,EAAYtvB,KAAM,IAAK,IAAM,QAAUjM,EAAW,UACnN,wBAAIlC,MAAO,CAAEiO,MAAOkiB,EAAWsN,EAAYtvB,KAAM,IAAK,IAAMjM,EAAW,QAAU,UAAjF,MAEI,kCAFJ,OAKA,yBAAKlC,MAAO,CAAEoO,WAAY,MAAOC,SAAU,OAAQgiB,WAAY,OAAQC,aAAc,MAAOriB,MAAOkiB,EAAWsN,EAAYtvB,KAAM,IAAK,IAAMjM,EAAW,QAAU,UAAYs7B,EAAgBC,EAAYtvB,MAAxM,OAGR,yBAAK5C,UAAU,YACX,yBAAKvL,MAAO,CAAEC,QAAS,OAAQmwB,cAAe,SAAU9d,eAAgB,SAAUpS,WAAY,SAAUiS,MAAO,QAAS/R,OAAQ,QAASuU,gBAAiBwb,EAAWsN,EAAYjvB,GAAI,GAAI,IAAM,QAAUtM,EAAW,QAChN,yBAAKlC,MAAO,CAAEiO,MAAOkiB,EAAWsN,EAAYjvB,GAAI,GAAI,IAAMtM,EAAW,MAAQ,UAA7E,MACA,yBAAKlC,MAAO,CAAEoO,WAAY,MAAOC,SAAU,OAAQgiB,WAAY,OAAQC,aAAc,MAAOriB,MAAOkiB,EAAWsN,EAAYjvB,GAAI,GAAI,IAAMtM,EAAW,MAAQ,UA5OrK,QADGtC,EA6O0L69B,EAAYjvB,UA5OvL/M,IAAV7B,GAAiC,KAAVA,EAClC,KAEJA,KA4OS,yBAAK2L,UAAU,YACX,yBAAKvL,MAAO,CAAEC,QAAS,OAAQmwB,cAAe,SAAU9d,eAAgB,SAAUpS,WAAY,SAAUiS,MAAO,QAAS/R,OAAQ,QAASuU,gBAAiBwb,EAAWsN,EAAYlvB,GAAI,GAAI,IAAM,QAAUrM,EAAW,QAChN,yBAAKlC,MAAO,CAAEiO,MAAOkiB,EAAWsN,EAAYlvB,GAAI,GAAI,IAAMrM,EAAW,MAAQ,UAA7E,WACA,yBAAKlC,MAAO,CAAEoO,WAAY,MAAOC,SAAU,OAAQgiB,WAAY,OAAQC,aAAc,MAAOriB,MAAOkiB,EAAWsN,EAAYlvB,GAAI,GAAI,IAAMrM,EAAW,MAAQ,UAAYs7B,EAAgBC,EAAYlvB,QAI/M,yBAAKvO,MAAO,CAAE+T,SAAU,aAEM,OAAtB1U,KAAKN,MAAM4L,OACP,yBAAK3K,MAAO,CAAE+T,SAAU,WAAYgqB,IAAK,GAAIC,KAAM,GAAI7rB,MAAOA,EAAQ,GAAI/R,OAAQ,MAC9E,yBAAKJ,MAAO,CAAEC,QAAS,OAAQI,oBAA+C,IAA1BhB,KAAKN,MAAMk9B,WAAmB,kBAAoB,mBACjG58B,KAAK4+B,aAAa5+B,KAAKN,MAAMk9B,cAGtC,KAGR,kBAAC,GAAD,CACIX,OAAQ,OACRhK,IAAKjyB,KAAKI,MAAM8d,SAAS8J,OACzBza,IAAKvN,KAAKI,MAAM8d,SAASzX,MACzBwU,WAAYA,EACZof,OAAQ,WACRtZ,OAAQ,WACRtd,KAAM,OACNiF,UAAW+1B,EAAY/1B,UACvBC,QAAS81B,EAAY91B,QACrB5H,OAAQ,IACR+R,MAAOA,EACPlK,SAAU5I,KAAKN,MAAMk9B,WACrB/N,MAAO,GACPC,MAAO,IACPtB,SAAS,EACTD,SAAS,EACTE,YAAa,UACb2D,YAAa,UACblR,IAAK,GACLC,IAAK,IACL7U,OAAQtL,KAAKN,MAAM4L,SAEvB,kBAAC,GAAD,CACI2wB,OAAQ,OACRhK,IAAKjyB,KAAKI,MAAM8d,SAAS8J,OACzBza,IAAKvN,KAAKI,MAAM8d,SAASzX,MACzBwU,WAAYA,EACZof,OAAQ,SACRtZ,OAAQ,SACRtd,KAAM,KACNiF,UAAW+1B,EAAY/1B,UACvBC,QAAS81B,EAAY91B,QACrB2C,OAAQtL,KAAKN,MAAM4L,OACnBvK,OAAQ,IACR+R,MAAOA,EACPlK,SAAU5I,KAAKN,MAAMk9B,WACrB/N,MAAO,GACPC,MAAO,GACPtB,SAAS,EACTD,SAAS,EACTE,YAAa,UACb2D,YAAa,0BACblR,IAAK,GACLC,IAAK,KAET,kBAAC,GAAD,CACI8b,OAAQ,OACRhK,IAAKjyB,KAAKI,MAAM8d,SAAS8J,OACzBza,IAAKvN,KAAKI,MAAM8d,SAASzX,MACzBwU,WAAYA,EACZof,OAAQ,SACRtZ,OAAQ,SACRtd,KAAM,OACNiF,UAAW+1B,EAAY/1B,UACvBC,QAAS81B,EAAY91B,QACrB5H,OAAQ,IACR+R,MAAOA,EACPlK,SAAU5I,KAAKN,MAAMk9B,WACrB/N,MAAO,GACPC,MAAO,GACPtB,SAAS,EACTD,SAAS,EACTE,YAAa,UACb2D,YAAa,0BACblR,IAAK,EACLC,IAAK,IACL7U,OAAQtL,KAAKN,MAAM4L,iB,GAle3B9L,c,uCEwKTq/B,G,2MAzKXn/B,MAAQ,CACJo/B,cAAc,EACdp0B,KAAM,EAAKtK,MAAM2+B,WACjBC,YAAa,G,EAEjBC,SAAW,SAACC,GACR,EAAK9+B,MAAMyY,eAAeqmB,I,EAI9BC,aAAe,SAAClkB,GACZ,EAAK7a,MAAMg/B,mBAAmBnkB,I,EAGlCokB,eAAiB,SAACC,GACd,GAAIA,EAAY,CACZ,IAAIC,EAAgBpqB,SAASC,eAAekqB,GACxCC,GAAiBA,EAAcC,mB,EAG3C5sB,SAAW,SAAC6sB,GACR,EAAKR,SAASQ,I,EAGlBC,aAAe,SAAC39B,EAAMy1B,GAClB,EAAK2H,aAAap9B,EAAKsD,Y,EAQ3BmW,SAAW,SAACzK,GAAO,IAAD,EACmB,EAAK3Q,MAA9B8d,EADM,EACNA,SAAUjD,EADJ,EACIA,WACZ0kB,EAAOzhB,EAASQ,aAAakhB,SAC7BC,EAAW/9B,IAAOA,IAAO69B,GAAMzxB,OAAO,aAAa7I,UAIzD,OAAQ0L,EAAE6F,OAAOrW,OACb,IAAK,IACD,IAAMkb,EAAQR,EAJV,MAMJ4kB,GADc/9B,IAAOA,IAAO2Z,GAAOvN,OAAO,aAAa7I,WAClC,EAAK85B,aAAa1jB,GACvC,MACJ,IAAK,IACD,IAAMC,EAAQ5Z,IAAOA,MAASoM,OAAO,aAAa7I,UAClD,EAAK85B,aAAazjB,GAClB,MACJ,IAAK,IACD,IAAMC,EAAQV,EAbV,MAeJU,GADc7Z,IAAOA,MAASoM,OAAO,aAAa7I,WAChC,EAAK85B,aAAaxjB,K,8EAzB5C3b,KAAKC,SAAS,CACV6+B,cAAe9+B,KAAKN,MAAMo/B,iB,+BA+BxB,IAAD,OAECgB,EAAY,CACdC,cAAe,CAAE7gB,aAAc,MAAOtQ,MAAO,YAAaqJ,OAAQ,sBAAuBxD,QAAS,UAAW1T,OAAQ,SAqBzH,IAAMi/B,EAAgB,CAClBC,aAAc,CAAEvrB,SAAU,WAAYwrB,MAAO,MAAOxB,IAAK,OAAQ5rB,MAAO,QAASqtB,WAAY,QAASC,UAAW,eAAgBC,OAAQ,MAAOnhB,aAAc,OAC9JohB,iBAAkB,CAAE1/B,QAAS,QAC7B2/B,WAAY,CAAE3/B,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,UACrE2/B,WAAW,cAAG/rB,QAAS,MAAO3B,MAAO,QAASoM,aAAc,MAAOvF,YAAa,sBAAuBF,YAAa,QAASC,YAAa,MAAO5Y,WAAY,QAAnJ,eAAyK,QA5BlL,MAqCqCd,KAAKI,MAAvC8d,EArCH,EAqCGA,SAAUuiB,EArCb,EAqCaA,QAASxlB,EArCtB,EAqCsBA,WACrBuF,EAAatC,EAASwiB,OACtBvuB,EAAW+L,EAASQ,aAAakhB,SAGjCe,GAFaC,EAAqBpgB,EAAYrO,GAClCyuB,EAAuBpgB,EAAYvF,GACzCwlB,EAAQx0B,KAChB,SAACvB,EAAMnH,GAAP,OAAiB,kBAAC,KAAD,CAAQ2P,QAAS,EAAKmsB,eAAe9oB,KAAK,EAAM7L,EAAKm2B,aAAc3gC,IAAKqD,EAAO5C,MAAOm/B,EAAUC,eAC7G,4BAAKr1B,EAAK4G,WAGlB,OAEI,yBAAKpF,UAAU,oBACX,yBAAKvL,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,iBAAkBC,cAAe,SACjF,kBAAC,KAAD,CAAY4U,qBAAsB,SAAAC,GAAW,OAAIA,EAAYC,YAAY6hB,OAAQA,KAAQ9kB,MAAO,IAAKF,SAAU5S,KAAK0/B,aAAcn/B,MAAOuB,IAAOmZ,GAAamC,YAAY,EAAOJ,WAAW,EAAOC,aAAc,SAACC,GAAc,OAAOA,EAAUpb,MAASqb,QAAQ,QAAUD,EAAUpb,IAAOqQ,EAAU,YAAY2uB,KAAK,EAAG,QAAQC,MAAM,UACxU,yBAAKpgC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,QAC9E,kBAAC,KAAD,CAAQV,MAAM,IAAI8c,MAAM,SAASC,KAAK,cAAcpK,QAASlT,KAAKwb,WAClE,kBAAC,KAAD,CAAQjb,MAAM,IAAI8c,MAAM,SAASC,KAAK,eAAepK,QAASlT,KAAKwb,WACnE,kBAAC,KAAD,CAAQjb,MAAM,IAAI8c,MAAM,SAASC,KAAK,eAAepK,QAASlT,KAAKwb,YAEvE,yBAAK7a,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,iBAAkBC,cAAe,OAAQ+/B,aAAc,aAM/G,yBAAKrgC,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAU6T,SAAU,aAC3D,8DACA,yBAAK/T,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,iBAAkBC,cAAe,QAAU0/B,GAC/F,yBAAKztB,QAAS,kBAAM,EAAK+tB,gBAAgBtgC,MAAO,CAAEqT,OAAQ,UAAWlT,WAAY,QAC7E,yBAAKO,IAAK6/B,KAAa3/B,IAAI,cAAcZ,MAAO,CAAEmS,MAAO,OAAQ/R,OAAQ,WAE7E,yBAAKJ,MAAOX,KAAKN,MAAMo/B,aAAekB,EAAcC,aAAeD,EAAcM,kBAC7E,wBAAIp0B,UAAU,sBAAd,4BACA,yBAAKvL,MAAO,CAAE4Y,UAAW,OAAQiL,aAAc,SAC3C,kBAAC,KAASiT,MAAV,CAAgB9kB,aAAc3S,KAAKN,MAAMgL,KAAMiL,GAAI,iBAAkBhV,MAAO,CAAEmS,MAAO,OAAQlS,QAAS,OAAQ6U,iBAAkB,gBAAiBC,WAAY,OAAS9C,SAAU5S,KAAK4S,UACjL,yBAAKjS,MAAOq/B,EAAcO,YACtB,kBAAC,KAAD,CAAUhgC,MAAO,IACjB,wBAAII,MAAOq/B,EAAcQ,YAAzB,6BAEJ,yBAAK7/B,MAAOq/B,EAAcO,YACtB,kBAAC,KAAD,CAAUhgC,MAAO,IACjB,wBAAII,MAAOq/B,EAAcQ,YAAzB,iBAEJ,yBAAK7/B,MAAOq/B,EAAcO,YACtB,kBAAC,KAAD,CAAUhgC,MAAO,IACjB,wBAAII,MAAOq/B,EAAcQ,YAAzB,6BAEJ,yBAAK7/B,MAAOq/B,EAAcO,YACtB,kBAAC,KAAD,CAAUhgC,MAAO,IACjB,wBAAII,MAAOq/B,EAAcQ,YAAzB,uBAEJ,yBAAK7/B,MAAOq/B,EAAcO,YACtB,kBAAC,KAAD,CAAUhgC,MAAO,IACjB,wBAAII,MAAOq/B,EAAcQ,YAAzB,kD,GAxJXhhC,a,OCRzB,IAAM2hC,GAAiB,SAACC,EAAgB79B,EAAO89B,GAC3C,MAAe,gBAAXA,EACO,oBAEY,IAAnBD,EACI79B,EAAQ,KAAO,EACR,4BACAA,EAAQ,IAAM,EACd,4BAEA,oBAEe,IAAnB69B,EACH79B,EAAQ,IAAM,EACP,4BACAA,EAAQ,IAAM,EACd,4BAEA,oBAIA,6BAgFJ+9B,G,iLAtED,IAAD,IACuDthC,KAAKI,MAAzDmhC,EADH,EACGA,eAAgBF,EADnB,EACmBA,OAAQt9B,EAD3B,EAC2BA,KAAMyc,EADjC,EACiCA,WAAYjd,EAD7C,EAC6CA,MAG5CoF,GADY5E,EAAK42B,MACP52B,EAAK62B,KACf/1B,EAAUd,EAAKc,QACf28B,EAAQz9B,EAAKy9B,MACfC,EAAa,EACjB,GAAIt+B,MAAMC,QAAQod,GACd,IAAK,IAAIjd,EAAQ,EAAGA,EAAQid,EAAW9c,OAAQH,IAAS,CACpD,IAAMsB,EAAU2b,EAAWjd,GACPzB,IAAO+C,EAAQrB,QAAQwB,WAAWC,OAASJ,EAAQwJ,QAAQrJ,WAAWC,OAAQ,gBAAgBI,WAC/FsD,IACf84B,EAAa7hC,OAAOiF,EAAQjB,SAIxC,IAAI89B,EAAa,EACjB,GAAIv+B,MAAMC,QAAQyB,GACd,IAAK,IAAItB,EAAQ,EAAGA,EAAQsB,EAAQnB,OAAQH,IAAS,CACjD,IAAMoG,EAAO9E,EAAQtB,GAErBm+B,GADc9hC,OAAO+J,EAAKg4B,UAIlC,GAAmB,IAAfF,GAAmC,IAAfC,GAA8B,IAAVF,EAAa,CAAC,IAAD,EAE/CI,EAAYpwB,WAAYkwB,EAAaF,EAASC,GAAYhwB,QAAQ,GACxE,OACI,yBAAKvR,IAAKqD,EAAO5C,OAAK,GAClBuX,eAAgB,WAAYtX,QAAS,OAAQC,WAAY,SAAUoS,eAAgB,SAAUgF,OAAQ,qBADnF,gCACwH,YADxH,4BAENkpB,GAAeI,EAAgBh+B,EAAO89B,IAFhC,iCAGU,gBAAXA,EACc,KAA1B7vB,WAAWowB,GAAoB,QAAU,uBAE/B,IAAVr+B,EAAc,sBAEX,wBARU,IAUU,KAA1BiO,WAAWowB,IAAgC,gBAAXP,GAA6B,yBAAK1gC,MAAO,CACvEoO,WAAwB,gBAAXsyB,GAAsC,IAAV99B,EAAe,MAAQ,GAChEqL,MAAQ4C,WAAWowB,GAAa,IAAOpwB,WAAWowB,GAAa,EAAK,UAAY,UAEpD,KAA1BpwB,WAAWowB,IAA+C,IAA1BpwB,WAAWowB,GAAoB,KAE7DpwB,WAAWowB,IAAc,EAAzB,WAAiCpwB,WAAWowB,GAAWnwB,QAAQ,IAAOD,WAAWowB,GAAWnwB,QAAQ,KAKxH,OACI,yBAAKvR,IAAKqD,EAAO5C,OAAK,GAClBuX,eAAgB,WAAYtX,QAAS,OAAQC,WAAY,SAAUoS,eAAgB,SAAUgF,OAAQ,qBADnF,gCACwH,YADxH,4BAENkpB,GAAeI,EAAgBh+B,EAAO89B,IAFhC,iCAGU,gBAAXA,EAA2B,QAE9B,IAAV99B,EAAc,sBAEV,wBAPU,IASN,gBAAX89B,GAA4B,yBAAK1gC,MAAO,CACrCoO,WAAsB,IAAVxL,EAAc,MAAQ,GAClCqL,MAAO,UAFkB,W,GA7DpBpP,aCxBnB2hC,GAAiB,SAACC,EAAgB79B,EAAO89B,GAC3C,MAAe,gBAAXA,EACO,oBAEY,IAAnBD,EACI79B,EAAQ,KAAO,EACR,4BACAA,EAAQ,IAAM,EACd,4BAEA,oBAEe,IAAnB69B,EACH79B,EAAQ,IAAM,EACP,4BACAA,EAAQ,IAAM,EACd,4BAEA,oBAIA,6BAuvBJs+B,G,2MA7uBXniC,MAAQ,CACJoiC,IAAK,GACLC,UAAW,KACXC,kBAAmB,KACnBC,OAAQ,KACRC,cAAe,KACfC,OAAQ,KACRC,aAAc,I,sEAEXj6B,EAAQsyB,EAAY2G,EAAgBl9B,GAAS,IAAD,OAC/C,QAAe9B,IAAX+F,GAAmC,OAAXA,EACxB,OAAO,KAEX,QAAmB/F,IAAfq4B,GAA2C,OAAfA,EAC5B,OAAO,KAEX,QAAuBr4B,IAAnBg/B,GAAmD,OAAnBA,EAChC,OAAO,KAEX,QAAeh/B,IAAX8B,GAAmC,OAAXA,EACxB,OAAO,KAiCX,IAAMF,EAAM,IAAIC,IACVo+B,EAhCN,SAAqB5H,EAAY6H,EAAap+B,GAC1C,IAAMw2B,EAAeD,EAAa,OAClC,MAAe,gBAAXv2B,EACO,CACHy2B,MAAO74B,IAAO44B,EAAgB,QAA0BxsB,OAAO,gBAC/D0sB,IAAK94B,IAAO44B,GAAcxsB,OAAO,iBAGrB,IAAhBo0B,EACO,CACH3H,MAAO74B,IAAO44B,EAAgB,OAAsBxsB,OAAO,gBAC3D0sB,IAAK94B,IAAO44B,GAAcxsB,OAAO,iBAGrB,IAAhBo0B,EACO,CACH3H,MAAO74B,IAAO44B,EAAgB,QAA0BxsB,OAAO,gBAC/D0sB,IAAK94B,IAAO44B,GAAcxsB,OAAO,iBAGrB,IAAhBo0B,EACO,CACH3H,MAAO74B,IAAO44B,EAAgB,QAA0BxsB,OAAO,gBAC/D0sB,IAAK94B,IAAO44B,GAAcxsB,OAAO,iBAGlC,CACHysB,MAAO74B,IAAO44B,EAAgB,SAA2BxsB,OAAO,gBAChE0sB,IAAK94B,IAAO44B,GAAcxsB,OAAO,iBAI3B2sB,CAAYJ,EAAY2G,EAAgBl9B,GACtDuF,EAAmBtB,EAAQk6B,EAAM1H,MAAO0H,EAAMzH,KACzClxB,MAAK,SAAA3F,GACF,IAAMw+B,EAASv+B,EAAIG,OAAOJ,EAAKA,MAAMK,OACrC,GAA2B,IAAvBxE,OAAO2iC,EAAOl+B,KAAY,CAC1B,IAAMC,EAAYi+B,EAAOh+B,SAASC,QAC9BrB,MAAMC,QAAQkB,GACd,EAAKrE,SAAS,CAAE6hC,IAAKx9B,IAGrB,EAAKrE,SAAS,CAAE6hC,IAAK,CAACx9B,SAKjCwF,OAAM,SAAAC,GACH7H,QAAQC,IAAI,aAAesL,KAAKC,UAAU3D,OAGlDK,GAAwB,kBACnBV,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CAAEkiC,OAAQp+B,EAAKA,UAEhC+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,cAAgBsL,KAAKC,UAAU3D,S,0CAGlC,IAAD,EACyC/J,KAAKI,MAAtDihC,EADQ,EACRA,OAAQE,EADA,EACAA,eAAgBrjB,EADhB,EACgBA,SAAUjD,EAD1B,EAC0BA,WAC1Cjb,KAAKC,SAAS,CAAE8hC,UAAWV,EAAQW,kBAAmBT,EAAgBU,OAAQ/jB,EAAS8J,OAAQka,cAAejnB,IAC9Gjb,KAAKwiC,OAAOtkB,EAAS8J,OAAQ/M,EAAYsmB,EAAgBF,K,2CAGvC,IAAD,EACwCrhC,KAAKI,MAAtDihC,EADS,EACTA,OAAQE,EADC,EACDA,eAAgBrjB,EADf,EACeA,SAAUjD,EADzB,EACyBA,WACpCwnB,EAAYziC,KAAKN,MAAMqiC,UACvBW,EAAiB1iC,KAAKN,MAAMsiC,kBAC5BW,EAAS3iC,KAAKN,MAAMuiC,OACJjiC,KAAKN,MAAMwiC,gBACXjnB,GAAciD,EAAS8J,SAAW2a,GAAUpB,IAAmBmB,GAAkBrB,IAAWoB,IAC9GvgC,QAAQC,IAAIk/B,EAAQE,EAAgBrjB,EAAUjD,GAC9Cjb,KAAKC,SAAS,CAAE8hC,UAAWV,EAAQW,kBAAmBT,EAAgBU,OAAQ/jB,EAAS8J,OAAQka,cAAejnB,IAC9Gjb,KAAKwiC,OAAOtkB,EAAS8J,OAAQ/M,EAAYsmB,EAAgBF,M,iCAGtDz3B,GAAM,IAAD,EACuB5J,KAAKI,MAAhCihC,EADI,EACJA,OAAQE,EADJ,EACIA,eACVqB,EAAUh5B,EAAIqC,KAAI,SAAU1L,EAAOgD,EAAO6B,GAC5C,OACI,yBAAKlF,IAAKqD,EAAO5C,MAAO,CAAEsX,OAAQ,oBAAqBC,eAAgB,WAAYtX,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WACtI,4BAAK8C,SAASpD,QAI1B,MAAe,gBAAX8gC,EAEI,yBAAK1gC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,kBAC/C4hC,GAKc,IAAnBrB,EAEI,yBAAK5gC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,mBAC/C4hC,GAIU,IAAnBrB,EAEI,yBAAK5gC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,mBAC/C4hC,GAIU,IAAnBrB,EAEI,yBAAK5gC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,mBAC/C4hC,GAIU,IAAnBrB,EAEI,yBAAK5gC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,mBAC/C4hC,QAHb,I,+BAmSJ,SAASC,EAAgB19B,EAAMk9B,EAAOn+B,GAGlC,IAFA,IAAM4+B,EAAQT,EAAMz5B,SAChBm6B,EAAY,GAF0B,WAGjCx/B,GACL,IAAM2C,EAAKm8B,EAAM35B,UAAanF,EAAQ8+B,EAAMW,aAAe,GAAK,GAAK,IAC/D78B,EAAKk8B,EAAM35B,WAAcnF,EAAQ,GAAK8+B,EAAMW,aAAe,GAAK,GAAK,IACrEC,EAAa99B,EAAK7B,QAAO,SAAUqG,EAAMpG,EAAOqG,GAClD,IAAMvB,EAAOsB,EAAKtB,KAClB,OAAOnC,GAAMmC,GAAQA,EAAOlC,KAEhC48B,EAAUz9B,KAAK29B,IAPV1/B,EAAQ,EAAGA,EAAQu/B,EAAOv/B,IAAU,EAApCA,GAST,GAAe,gBAAXW,EAA0B,CAC1B,IAAMgC,EAAKm8B,EAAM35B,UACXvC,EAAKk8B,EAAM15B,QACXu6B,EAAgB/9B,EAAK7B,QAAO,SAAUqG,EAAMpG,EAAOqG,GACrD,IAAMvB,EAAOsB,EAAKtB,KAClB,OAAOnC,GAAMmC,GAAQA,EAAOlC,KAEhC48B,EAAUz9B,KAAK49B,GAEnB,OAAOH,EAkCX,SAASI,EAAWv6B,EAAU1E,GAC1B,MAAe,gBAAXA,EACO,EAEJ0E,EAEX,SAASw6B,EAAQ/rB,GASb,OARgBA,EAAKpL,KAAI,SAAUtC,EAAMpG,EAAOqG,GAE5C,IADA,IAAIy5B,EAAM,EACD9/B,EAAQ,EAAGA,EAAQoG,EAAKjG,OAAQH,IAAS,CAE9C8/B,GADgB15B,EAAKpG,GACDhD,MAExB,OAAO8iC,KAIf,SAASC,EAAcjC,EAAQhqB,EAAMksB,EAAM9/B,EAAM89B,GAC7C,IAAMiC,EAAgB,CAClB,EAAK,CACD,GAAK,yBACL,MAAQ,2BAEZ,EAAK,CACD,GAAK,sBACL,MAAQ,wBAEZ,EAAK,CACD,GAAK,uBACL,MAAQ,yBAIVC,EAAapsB,EAAKpL,KAAI,SAAUtC,EAAMpG,EAAOqG,GAAM,IAAD,EACA,EAApD,OAAoB,IAAhBD,EAAKjG,aAAgCtB,IAAhBuH,EAAKjG,OAEtB,yBAAKxD,IAAKqD,EAAO5C,OAAK,GAClBuX,eAAgB,WAAYtX,QAAS,OAAQC,WAAY,SAAUoS,eAAgB,SAAUgF,OAAQ,qBADnF,gCACwH,YADxH,4BAENkpB,GAAeI,EAAgBh+B,EAAO89B,IAFhC,iCAGU,gBAAXA,EAA2B,QAAoB,IAAV99B,EAAcigC,EAAcD,GAAMG,GAAKF,EAAcD,GAAMI,OAH/F,IAKN,gBAAXtC,GAA4B,yBAAK1gC,MAAO,CACrCoO,WAAwB,gBAAXsyB,GAAsC,IAAV99B,EAAe,MAAQ,GAChEqL,MAAO,UAFkB,OASrC,yBAAK1O,IAAKqD,EAAO5C,OAAK,GAClBuX,eAAgB,WAAYtX,QAAS,OAAQC,WAAY,SAAUoS,eAAgB,SAAUgF,OAAQ,qBADnF,gCACwH,YADxH,4BAENkpB,GAAeI,EAAgBh+B,EAAO89B,IAFhC,iCAGU,gBAAXA,EACS,KAArB7vB,WAAW7H,GAAe,QAAU65B,EAAcD,GAAMI,MAAoB,IAAVpgC,EAAcigC,EAAcD,GAAMG,GAAKF,EAAcD,GAAMI,OAJhH,IAMK,KAArBnyB,WAAW7H,IAA2B,gBAAX03B,GAA6B,yBAAK1gC,MAAO,CAClEoO,WAAwB,gBAAXsyB,GAAsC,IAAV99B,EAAe,MAAQ,GAChEqL,MAAgB,IAATnL,GAAc+N,WAAW7H,GAAQ,EAAI,MAE/B,IAATlG,GAAc+N,WAAW7H,IAAS,EAAI,OAAS,UAE5B,KAArB6H,WAAW7H,IAAqC,IAArB6H,WAAW7H,GAAe,KAEnD6H,WAAW7H,IAAS,EAApB,WAA4B6H,WAAW7H,GAAM8H,QAAQ,IAAOD,WAAW7H,GAAM8H,QAAQ,QAKzG,OACI,yBAAK9Q,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,WAAamiC,EAAWS,EAAYh7B,SAAUy4B,GAAU,WACvGoC,GAIb,SAASI,EAAWxC,EAAQhqB,EAAMksB,EAAMhC,GACpC,IAAMiC,EAAgB,CAClB,EAAK,CACD,GAAK,yBACL,MAAQ,2BAEZ,EAAK,CACD,GAAK,sBACL,MAAQ,yBAGVC,EAAapsB,EAAKpL,KAAI,SAAUtC,EAAMpG,EAAOqG,GAAM,IAAD,EAEA,EADhDy5B,EAAM,EACV,GAAoB,IAAhB15B,EAAKjG,aAAgCtB,IAAhBuH,EAAKjG,OAC1B,OACI,yBAAKxD,IAAKqD,EAAO5C,OAAK,GAClBuX,eAAgB,WAAYtX,QAAS,OAAQC,WAAY,SAAUoS,eAAgB,SAAUgF,OAAQ,qBADnF,gCACwH,YADxH,4BAENkpB,GAAeI,EAAgBh+B,EAAO89B,IAFhC,iCAGU,gBAAXA,EAA2B,QAG9B,IAAV99B,EAAcigC,EAAcD,GAAMG,GAE9BF,EAAcD,GAAMI,OARV,IAUN,gBAAXtC,GAA4B,yBAAK1gC,MAAO,CACrCoO,WAAsB,IAAVxL,EAAc,MAAQ,GAClCqL,MAAO,UAFkB,OAOzC,IAAK,IAAIrL,EAAQ,EAAGA,EAAQoG,EAAKjG,OAAQH,IAAS,CAE9C8/B,GADgB15B,EAAKpG,GACDhD,MAExB,OACI,yBAAKL,IAAKqD,EAAO5C,OAAK,GAClBuX,eAAgB,WAAYtX,QAAS,OAAQC,WAAY,SAAUoS,eAAgB,SAAUgF,OAAQ,qBADnF,gCACwH,YADxH,4BAENkpB,GAAeI,EAAgBh+B,EAAO89B,IAFhC,iCAGU,gBAAXA,EACQ,KAApB7vB,WAAW6xB,GAAc,QAAUG,EAAcD,GAAMI,MAG7C,IAAVpgC,EAAcigC,EAAcD,GAAMG,GAAKF,EAAcD,GAAMI,OAP9C,IASI,KAApBnyB,WAAW6xB,IAA0B,gBAAXhC,GAA6B,yBAAK1gC,MAAO,CACjEoO,WAAwB,gBAAXsyB,GAAsC,IAAV99B,EAAe,MAAQ,GAChEqL,MAAO,UAEe,KAArB4C,WAAW7H,GAAe,KACD,IAApB6H,WAAW6xB,GAAa7xB,WAAW6xB,GAAO7xB,WAAW6xB,GAAK5xB,QAAQ,QAKxF,OACI,yBAAK9Q,MAAO,CAAEuX,eAAgB,WAAYtX,QAAS,OAAQI,oBAAqB,WAAamiC,EAAWS,EAAYh7B,SAAUy4B,GAAU,WACnIoC,GAab,SAASK,EAAY5/B,GAGjB,MAAe,gBAAXA,EADqB,UADJ,YApepB,IA6CsB6/B,EAAgB17B,EA7CtC,EAigBoDrI,KAAKI,MAAtDihC,EAjgBH,EAigBGA,OAAQE,EAjgBX,EAigBWA,eAAgBrjB,EAjgB3B,EAigB2BA,SAAUjD,EAjgBrC,EAigBqCA,WAIpCylB,GApgBN,SAAyBjG,EAAYsJ,EAAgB7/B,GACjD,IAAMiC,EAAKs0B,EAAc,OACrBuJ,EAAY,GAChB,GAAe,gBAAX9/B,EAEA,IADA,IAAMgC,EAAKu0B,EAAc,MAChBl3B,EAAQ,EAAGA,EAAQ,EAAGA,IAAS,CACpC,IAAM8E,EAAOnC,EAAc,EAAR3C,EAAY,GAAK,GAAK,IACzCygC,EAAU1+B,KAAK+C,OAGlB,CAED,GAAuB,IAAnB07B,EAEA,IADA,IAAM79B,EAAKC,EAAM,MACR5C,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CACrC,IAAM8E,EAAOnC,EAAc,GAAR3C,EAAa,GAAK,IACrCygC,EAAU1+B,KAAK+C,GAGvB,GAAuB,IAAnB07B,EAEA,IADA,IAAM79B,EAAKC,EAAM,OACR5C,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CACrC,IAAM8E,EAAOnC,EAAc,EAAR3C,EAAY,GAAK,GAAK,IACzCygC,EAAU1+B,KAAK+C,GAGvB,GAAuB,IAAnB07B,EAEA,IADA,IAAM79B,EAAKC,EAAM,OACR5C,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CACrC,IAAM8E,EAAOnC,EAAc,EAAR3C,EAAY,GAAK,GAAK,IACzCygC,EAAU1+B,KAAK+C,GAGvB,GAAuB,IAAnB07B,EAEA,IADA,IAAM79B,EAAKC,EAAM,QACR5C,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CACrC,IAAM8E,EAAOnC,EAAc,GAAR3C,EAAa,GAAK,GAAK,IAC1CygC,EAAU1+B,KAAK+C,KA4dV47B,CAAgBhpB,EAAYsmB,EAAgBF,GArdtC0C,EAudExC,EAvdcl5B,EAsdhC4S,EAAc,OAEViD,EAASwiB,QAElBwD,GADatD,EAAuBF,EAAQzlB,GAClCjb,KAAKN,MAAMoiC,KAErBK,EAASniC,KAAKN,MAAMyiC,OAC1B,GAAe,OAAXA,QAA8B//B,IAAX+/B,EAAwB,OAAO,KACtD,IC9pBkBL,ED8pBZqC,EAnZN,SAAuBrC,GAUnB,SAASsC,EAAiBC,EAAK9jC,GAC3B,GAAY,OAAR8jC,QAAwBjiC,IAARiiC,GAA6B,KAARA,EACrC,OAAO,EAEX,IAAMC,EAAYD,EAAIr/B,WAChBu/B,EAAc3kC,OAAOW,GAC3B,OAAoB,OAAhBgkC,QAAwCniC,IAAhBmiC,EAAoC,EAC9B,OAA9BD,EAAUnkC,MAAM,UAA2C,IAAdokC,EACX,OAAlCD,EAAUnkC,MAAM,cAA+C,IAAdokC,EACtB,OAA3BD,EAAUnkC,MAAM,OAAwC,IAAdokC,EACf,OAA3BD,EAAUnkC,MAAM,OAAwC,IAAdokC,EAAqB,IACpC,OAA3BD,EAAUnkC,MAAM,OAAwC,IAAdokC,EAAqB,EAClC,OAA7BD,EAAUnkC,MAAM,SAA0C,IAAdokC,EACzC,EAOX,IALA,IAAIC,EAAoB,GACpBC,EAAe,GACfC,EAAkB,GAClBC,EAAoB,GACpBC,EAAqB,GA7BD,WA8BfrhC,GACL,IA9BiBshC,EAAMtkC,EA8BjBsE,EAAUi9B,EAAIv+B,GACduhC,EAAcjgC,EAAQ6F,KACtBrC,EAAOvG,IAAO+C,EAAQrB,QAAQwB,WAAWC,OAASJ,EAAQwJ,QAAQrJ,WAAWC,OAAQ,gBAAgBI,UACrGg/B,EAAMx/B,EAAQw/B,IAyCpB,GAxCmBlC,EAAO4C,QACan6B,MAAK,SAAUjB,EAAMpG,EAAOqG,GAC/D,OAAOD,IAASm7B,MAGhBN,EAAkBl/B,KAAK,CACnB+C,KAAMA,EACN9H,MAAOX,OAAOiF,EAAQmgC,UACtBC,UA1CSJ,EA0CahgC,EAAQggC,KA1CftkC,EA0CqBsE,EAAQmgC,SAzCvC,uBAATH,EACuB,GAAhBjlC,OAAOW,GAEL,iBAATskC,EACuB,GAAhBjlC,OAAOW,GAEX,GAoCCsE,QAASA,IAGHs9B,EAAO+C,GACQt6B,MAAK,SAAUjB,EAAMpG,EAAOqG,GACrD,OAAOD,IAASm7B,MAGhBL,EAAan/B,KAAK,CACd+C,KAAMA,EACN9H,MAAOX,OAAOiF,EAAQsgC,UACtBF,SAAUb,EAAiBC,EAAKx/B,EAAQsgC,UACxCtgC,QAASA,IAGAs9B,EAAOiD,MACWx6B,MAAK,SAAUjB,EAAMpG,EAAOqG,GAC3D,OAAOD,IAASm7B,MAGhBJ,EAAgBp/B,KAAK,CACjB+C,KAAMA,EACN9H,MAAOX,OAAOiF,EAAQ88B,UACtBsD,SAAUb,EAAiBC,EAAKx/B,EAAQ88B,UACxC98B,QAASA,IAGAs9B,EAAOwB,MACW/4B,MAAK,SAAUjB,EAAMpG,EAAOqG,GAC3D,OAAOD,IAASm7B,KAEG,CACnB,IAAMO,EAAUzlC,OAAOiF,EAAQsgC,UACzBG,EAAW1lC,OAAOiF,EAAQ0gC,UACZ,iBAAhBT,EAOAF,EAAmBt/B,KAAK,CACpB+C,KAAMA,EACN9H,MAAO,EACP0kC,SAAU,EACVpgC,QAASA,KAIG,OAAZwgC,QAAgCjjC,IAAZijC,GACpBT,EAAmBt/B,KAAK,CACpB+C,KAAMA,EACN9H,MAAOX,OAAOiF,EAAQsgC,UACtBF,SAAUb,EAAiBC,EAAKx/B,EAAQsgC,UACxCtgC,QAASA,IAGA,OAAbygC,QAAkCljC,IAAbkjC,GACrBX,EAAkBr/B,KAAK,CACnB+C,KAAMA,EACN9H,MAAOX,OAAOiF,EAAQygC,UACtBL,SAAU,EACVpgC,QAASA,OA5EpBtB,EAAQ,EAAGA,EAAQu+B,EAAIp+B,OAAQH,IAAU,EAAzCA,GAmFT,MAAO,CACHwhC,QAASP,EACTU,GAAIT,EACJe,QAASb,EACTS,MAAOV,EACPe,SAAUb,GA6RCc,CAAcxB,GAC3BN,EA3RN,SAAqB3oB,EAAY2iB,EAAUyD,GACvC,IAAM1D,EAAU1iB,EAAc,OAC9B,MAAe,gBAAXomB,EACO,CACHz4B,SAAU,EACVo6B,aAAc,EACdt6B,UAAWi1B,EAAW,MACtBh1B,QAASg1B,GAGA,IAAbC,EACO,CACHh1B,SAAU,GACVo6B,aAAc,EACdt6B,UAAWi1B,EAAW,MACtBh1B,QAASg1B,GAGA,IAAbC,EACO,CACHh1B,SAAU,GACVo6B,aAAc,EACdt6B,UAAWi1B,EAAW,OACtBh1B,QAASg1B,GAGA,IAAbC,EACO,CACHh1B,SAAU,GACVo6B,aAAc,EACdt6B,UAAWi1B,EAAW,OACtBh1B,QAASg1B,GAGV,CACH/0B,SAAU,GACVo6B,aAAc,GACdt6B,UAAWi1B,EAAW,QACtBh1B,QAASg1B,GAqPGgI,CAAY1qB,EAAYsmB,EAAgBF,GACtDuE,EAAO/C,EAAgBsB,EAAWY,QAASnB,EAAavC,GACxD6D,EAAKrC,EAAgBsB,EAAWe,GAAItB,EAAavC,GACjDmE,EAAU3C,EAAgBsB,EAAWqB,QAAS5B,EAAavC,GAC3DwE,EA9NN,SAAeC,EAAMC,EAAMC,GAEvB,IADA,IAAIC,EAAU,GACL1iC,EAAQ,EAAGA,EAAQuiC,EAAKpiC,OAAQH,IAAS,CAC9C,IAGM8/B,EAHWyC,EAAKviC,GACLwiC,EAAKxiC,GACLyiC,EAAKziC,GAEtB0iC,EAAQ3gC,KAAK+9B,GAEjB,OAAO4C,EAqNGC,CAAM9C,EAAQwC,GAAOxC,EAAQ8B,GAAK9B,EAAQoC,IAClDJ,EAAQvC,EAAgBsB,EAAWiB,MAAOxB,EAAavC,GAEvDoE,GAvCN,SAA0CL,EAAOl1B,GAe7C,IAdA,IAAMi2B,EAAUf,EAAMn5B,KAAI,SAAUtC,EAAMpG,EAAOqG,GAE7C,IADA,IAAIy5B,EAAM,EACD9/B,EAAQ,EAAGA,EAAQoG,EAAKjG,OAAQH,IAAS,CAE9C8/B,GADgB15B,EAAKpG,GACDhD,MAExB,OAAY,IAAR8iC,EACO,EAEI,OAAXnzB,QAA8B9N,IAAX8N,EACZ,KAEJsB,WAAW6xB,EAAMnzB,EAAS,GAAGuB,QAAQ,MAEvClO,EAAQ,EAAGA,EAAQ6hC,EAAM1hC,OAAQH,IACtB6hC,EAAM7hC,GAsBV6iC,CAAiChB,EAAO,KAC3CvC,EAAgBsB,EAAWsB,SAAU7B,EAAavC,IAC7DgF,EAvNN,SAAgBP,EAAMC,GAElB,IADA,IAAIE,EAAU,GACL1iC,EAAQ,EAAGA,EAAQuiC,EAAKpiC,OAAQH,IAAS,CAC9C,IAEM8/B,EAFWyC,EAAKviC,GACLwiC,EAAKxiC,GAEtB0iC,EAAQ3gC,KAAK+9B,GAEjB,OAAO4C,EA+MIK,CAAOlD,EAAQgC,GAAQhC,EAAQqC,IACxCc,EA9MN,SAAqBhiB,EAAOiiB,GAExB,IADA,IAAIP,EAAU,GACL1iC,EAAQ,EAAGA,EAAQghB,EAAM7gB,OAAQH,IAAS,CAC/C,IAAMkjC,EAAWliB,EAAMhhB,GACjBmjC,EAAWF,EAAOjjC,GAClB8/B,EAAM7xB,WAAWi1B,EAAWC,GAAUj1B,QAAQ,GACpDw0B,EAAQ3gC,KAAK+9B,GAEjB,OAAO4C,EAsMQU,CAAYd,EAAOQ,GAOhCO,ECpqBP,SAAyBC,EAAWpM,EAAY7xB,EAAU0C,GAgB7D,SAASw7B,EAAex7B,EAAQ1C,GAC5B,MAAe,gBAAX0C,EAAmC,EACtB,IAAb1C,EAAyB,GACZ,IAAbA,EAAyB,GACZ,IAAbA,EAAyB,GACtB,GAgCX,SAASm+B,EAAoBz7B,EAAQ1C,EAAU44B,EAAOwF,EAAUC,EAAIC,GAChE,MAAe,gBAAX57B,EACO,CACHqvB,MAAOsM,EACPrM,IAAKsM,EACLriC,QAASmiC,EACTxF,MAAO,GAGE,IAAb54B,EACO,CACH+xB,MAAOsM,EACPrM,IAAKsM,EACLriC,QAASmiC,EACTxF,MAAOA,GAGE,IAAb54B,EACO,CACH+xB,MAAOsM,EACPrM,IAAKsM,EACLriC,QAASmiC,EACTxF,MAAe,EAARA,GAIE,IAAb54B,EACO,CACH+xB,MAAOsM,EACPrM,IAAKsM,EACLriC,QAASmiC,EACTxF,MAAO,GAGR,CACH7G,MAAOsM,EACPrM,IAAKsM,EACLriC,QAASmiC,EACTxF,MAAO,IAGf,IAAM7D,EAAUlD,EAAc,OACxB0M,EA9FN,SAAyB77B,EAAQ1C,EAAUD,GACvC,MAAe,gBAAX2C,EACO3C,EAAW,MAEL,IAAbC,EACOD,EAAW,MAEL,IAAbC,EACOD,EAAW,OAEL,IAAbC,EACOD,EAAW,OAEfA,EAAW,QAiFJy+B,CAAgB97B,EAAQ1C,EAAU+0B,GAChD6D,EAAQ,EACRlD,EAAa,GACjB,GAAIn7B,MAAMC,QAAQyjC,GACd,IAD2B,IAAD,WACjBtjC,GACL,IAAMmJ,EA7Ed,SAA2BpB,EAAQ1C,EAAUrF,EAAO4jC,GAChD,MAAe,gBAAX77B,EACO,CACHqvB,MAAOwM,EAAqB,EAAR5jC,EAAY,GAAK,GAAK,IAC1Cq3B,IAAKuM,EAA2B,GAAb5jC,EAAQ,GAAS,GAAK,GAAK,KAGrC,IAAbqF,EACO,CACH+xB,MAAOwM,EAAqB,GAAR5jC,EAAa,GAAK,IACtCq3B,IAAKuM,EAA2B,IAAb5jC,EAAQ,GAAU,GAAK,KAGjC,IAAbqF,EACO,CACH+xB,MAAOwM,EAAqB,EAAR5jC,EAAY,GAAK,GAAK,IAC1Cq3B,IAAKuM,EAA2B,GAAb5jC,EAAQ,GAAS,GAAK,GAAK,KAGrC,IAAbqF,EACO,CACH+xB,MAAOwM,EAAqB,EAAR5jC,EAAY,GAAK,GAAK,IAC1Cq3B,IAAKuM,EAA2B,GAAb5jC,EAAQ,GAAS,GAAK,GAAK,KAG/C,CACHo3B,MAAOwM,EAAqB,GAAR5jC,EAAa,GAAK,GAAK,IAC3Cq3B,IAAKuM,EAA2B,IAAb5jC,EAAQ,GAAU,GAAK,GAAK,KAkDjC8jC,CAAkB/7B,EAAQ1C,EAAUrF,EAAO4jC,GACnDF,EAAKv6B,EAAMiuB,MACXuM,EAAKx6B,EAAMkuB,IACX0M,EAAgBT,EAAUvjC,QAAO,SAAUqG,EAAMgT,EAAG/S,GACtD,IAAMvB,EAAOvG,IAAO6H,EAAKnG,QAAQwB,WAAWC,OAAS0E,EAAK0E,QAAQrJ,WAAWC,OAAQ,gBAAgBI,UACrG,MAAe,gBAAXiG,GACc,IAAV/H,EACO4jC,GAAa9+B,GAAQA,GAAQs1B,EAGrCsJ,GAAM5+B,GAAQA,GAAQ6+B,KAElB,gBAAX57B,EACc,IAAV/H,EACA+6B,EAAWh5B,KAAKyhC,EAAoBz7B,EAAQ1C,EAAU,EAAG0+B,EAAeH,EAAWxJ,IAInFW,EAAWh5B,KAAKyhC,EAAoBz7B,EAAQ1C,EAAU,EAAG0+B,EAAeL,EAAIC,IAInD,IAAzBI,EAAc5jC,QACd89B,GAAgB,EAChBlD,EAAWh5B,KAAKyhC,EAAoBz7B,EAAQ1C,EAAU,EAAG0+B,EAAeL,EAAIC,MAG5E1F,GAAgB,EAChBlD,EAAWh5B,KAAKyhC,EAAoBz7B,EAAQ1C,EAAU44B,EAAO8F,EAAeL,EAAIC,IAChF1F,EAAQ,IA9BXj+B,EAAQ,EAAGA,EAAQujC,EAAex7B,EAAQ1C,GAAWrF,IAAU,EAA/DA,GAmCb,OAAO+6B,ED4hBgBiJ,EC7qBDzF,ED4qBuBoC,EC1qBzC/gC,MAAMC,QAAQ0+B,GACCA,EAAIx+B,QAAO,SAAUqG,EAAMpG,EAAOqG,GAC7C,MAAuC,iBAAhCD,EAAKe,KAAK1F,WAAWC,UAI7B,IDqqBwDgW,EAAYsmB,EAAgBF,GAE5Dp1B,KAAI,SAAUtC,EAAMpG,EAAOqG,GAClD,OAAO,kBAAC,GAAD,CAAY23B,eAAgBA,EAAgBF,OAAQA,EAAQnhC,IAAKqD,EAAOA,MAAOA,EAAOQ,KAAM4F,EAAM6W,WAAYkgB,OAInH8G,EAFe,CAAC,eAAM,eAAM,eAAM,sBAEPv7B,KAAI,SAAU1L,EAAOgD,EAAOqG,GACzD,OACI,yBAAK1J,IAAKqD,EAAO5C,MAAO,CAAEsX,OAAQ,oBAAqBC,eAAgB,WAAYtX,QAAS,OAAQC,WAAY,SAAUyU,gBAAiB,sBAAuByH,YAAa,SAC3K,4BAAKxc,OAKXknC,EATgB,CAAC,eAAM,WAAY,eAAM,sBASZx7B,KAAI,SAAU1L,EAAOgD,EAAOqG,GAC3D,OACI,yBAAK1J,IAAKqD,EAAO5C,MAAO,CAAEsX,OAAQ,oBAAqBC,eAAgB,WAAYtX,QAAS,OAAQC,WAAY,SAAUyU,gBAAiB,sBAAuByH,YAAa,SAC3K,4BAAKxc,OAIjB,OACI,6BACI,yBAAKI,MAAO,CAAEC,QAAS,OAAQI,oBAAqB8iC,EAAYzC,KAC5D,yBAAK1gC,MAAO,CAAEC,QAAS,OAAQ6U,iBAAkB,wBAC5C+xB,GAEL,yBAAK7mC,MAAO,CAAEC,QAAS,OAAQ6U,iBAAkB,wBAC5CouB,EAAWxC,EAAQuE,EAAM,IAAKrE,GAC9BsC,EAAWxC,EAAQ6D,EAAI,IAAK3D,GAC5BsC,EAAWxC,EAAQmE,EAAS,IAAKjE,GACjC+B,EAAcjC,EAAQwE,EAAO,IAAK,EAAGtE,KAG9C,yBAAK5gC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB8iC,EAAYzC,GAAS9nB,UAAW,QAChF,yBAAK5Y,MAAO,CAAEC,QAAS,OAAQ6U,iBAAkB,sBAAuByC,eAAgB,aACnFuvB,GAEL,yBAAK9mC,MAAO,CAAEC,QAAS,OAAQ6U,iBAAkB,sBAAuByC,eAAgB,aACnF2rB,EAAWxC,EAAQ+D,EAAO,IAAK7D,GAEhC,yBAAK5gC,MAAO,CAAEuX,eAAgB,WAAYtX,QAAS,OAAQI,oBAAqB,WAAamiC,EAAWS,EAAYh7B,SAAUy4B,GAAU,WACnIuF,GAEJ/C,EAAWxC,EAAQoE,EAAU,IAAKlE,GAClC+B,EAAcjC,EAAQgF,EAAQ,IAAK,EAAG9E,KAG/C,yBAAK5gC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB8iC,EAAYzC,GAAS9nB,UAAW,QAChF,yBAAK5Y,MAAO,CAAEsX,OAAQ,oBAAqBC,eAAgB,WAAYtX,QAAS,OAAQC,WAAY,SAAUoS,eAAgB,SAAUqC,gBAAiB,uBAAwBvU,OAAQ,SACzK,gBAAXsgC,EACG,wBAAI1gC,MAAO,CAAEqO,SAAU,OAAQD,WAAY,QAA3C,MAEA,mCAEPu0B,EAAcjC,EAAQkF,EAAY,IAAK,EAAGhF,S,GAruB1C/hC,aEXNkoC,G,iLAzBD,IAAD,EACmC1nC,KAAKI,MAArC8d,EADH,EACGA,SAAUnb,EADb,EACaA,MAAOkY,EADpB,EACoBA,WAEnB0sB,EADa,CAAC,eAAM,eAAM,eAAM,gBACV17B,KAAI,SAAUtC,EAAMpG,GAC5C,OACI,iCAAarD,IAAKqD,GACd,wBAAI5C,MAAO,CAAEoO,WAAsB,IAAVxL,EAAc,MAAQ,KAAOoG,OAIlE,OACI,yBAAKhJ,MAAO,CAAEsX,OAAQ,qCAClB,yBAAKtX,MAAO,CAAE2U,gBAAiB,YAAa8N,oBAAqB,MAAOC,qBAAsB,MAAOtiB,OAAQ,OAAQ0T,QAAS,WAAY7T,QAAS,OAAQC,WAAY,WACnK,wBAAIF,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBAAqB7L,IAE/D,yBAAKpC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,sBAAuBD,OAAQ,SAC/E,yBAAKJ,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WAAaiB,IAAOmZ,GAAY/M,OAAO,SAC3Gy5B,GAEL,kBAAC,GAAD,CAAQ1sB,WAAYA,EAAYiD,SAAUA,EAAUmjB,OAAQ,cAAeE,eAAgB,S,GApB/E/hC,aCGPooC,I,yNACjBloC,MAAQ,CACJ6iC,OAAQ,GACRhc,OAAQ,CAAE,SAAY,IACtBshB,YAAa,KACb3f,QAAS,I,EA6Db4f,cAAgB,SAACC,EAAOC,GACpB,OAAOA,EAAQpgB,MAAK,SAAAjG,GAAC,OACjBomB,EAAME,UAAU9nC,MAAMwhB,EAAEkG,gBAAgBvW,SACnCqQ,EAAEkG,gBAAgBqgB,QAAUH,EAAMG,OAAO/nC,MAAMwhB,EAAEkG,gBAAgBqgB,YACjEvmB,EAAEkG,gBAAgBsgB,KAAOJ,EAAMI,IAAIhoC,MAAMwhB,EAAEkG,gBAAgBsgB,SAC3DxmB,EAAEkG,gBAAgBugB,YAAcL,EAAMM,UAAY1mB,EAAEkG,gBAAgBugB,eACpEzmB,EAAEkG,gBAAgBygB,UAAYP,EAAMM,SAAW1mB,EAAEkG,gBAAgBygB,c,EAI9E7xB,MAAQ,SAACsxB,EAAOxhB,GACZ,IAAI6B,EAAW7B,EAAO6B,SAClBmgB,EAAUR,EAAMQ,QAChBh+B,EAAS,GAMb,OALA6d,EAAS3C,SAAQ,SAAA4C,GACb,IAAMC,EAAK,IAAIC,OAAOF,EAAQG,UAAWH,EAAQI,aAC3CtoB,EAAQooC,EAAQpoC,MAAMmoB,GAC5B/d,EAAO8d,EAAQnoB,KAAOC,GAASA,EAAMkoB,EAAQ3T,aAE1CnK,G,EAGXi+B,UAAY,SAACC,EAAUliB,GACnB,IAAIshB,EAActhB,EAAOmiB,QACzB,IAAK,IAAMxoC,KAAOuoC,EAAU,CACxB,IAAIE,EAAiBd,EAAY1nC,MAAMooB,OAAO,MAAQroB,EAAM,iBACxD0oC,EAAW,GACXD,GAA4C,IAA1BA,EAAejlC,SACjCklC,EAAWD,EAAe,IAE9Bd,EAAcA,EAAYgB,QAAQtgB,OAAO,MAAQroB,EAAM,cAAeuoC,EAASvoC,IAAQ0oC,GAE3F,OAAOf,G,mFA1FU,IAAD,SAE0C7nC,KAAKI,MAAvD0oC,EAFQ,EAERA,OAAQC,EAFA,EAEAA,MAAOxmC,EAFP,EAEOA,MAAO+E,EAFd,EAEcA,IAAKgK,EAFnB,EAEmBA,KAAMjJ,EAFzB,EAEyBA,KAAMnE,EAF/B,EAE+BA,YAEhC9B,IAAX0mC,QAAkC1mC,IAAV2mC,QAAiC3mC,IAAVG,QAA+BH,IAARkF,GACtEmC,GAAsCs/B,EAAM9jC,OAAQ1C,EAAOumC,EAAO7jC,OAAQqC,GACrEoC,MAAK,SAAAa,GACF,EAAKtK,SAAS,CACVioB,QAAS3d,EAAOxG,OAGpB,IAAIgkC,EAAQ,CACRE,UAAW32B,EAAKrM,OAChBsjC,QAAS,GACTL,OAAQ,GACRC,IAAK,GACLa,SAAUlnC,IAAOuG,GAAM6F,OAAO,qBAGlC3D,EAAOxG,KAAK0hB,SAAQ,SAAA/a,GAChBq9B,EAAMQ,QAAN,UAAmBR,EAAMQ,QAAzB,iBAAyC79B,EAAKge,YA9BhD,IAkCE/kB,SAASO,IACTkG,GAAwB,gBACnBV,MAAK,SAAA3F,GACF7B,QAAQC,IAAI,uBAAyBsL,KAAKC,UAAU3J,EAAKA,OAEzD,IAAM4jB,EAAkB,EAAKmgB,cAAcC,EAAOhkC,EAAKA,MAMvD,GALA7B,QAAQC,IAAI,mBAAqBsL,KAAKC,UAAUia,IAChD,EAAK1nB,SAAS,CACVsmB,OAAQoB,SAGYvlB,IAApBulB,EAA+B,CAC/B,IAAMshB,EAAkB,EAAKxyB,MAAMsxB,EAAOpgB,GAC1CzlB,QAAQC,IAAI,mBAAqBsL,KAAKC,UAAUu7B,IAEhD,IAAMpB,EAAc,EAAKW,UAAUS,EAAiBthB,GACpDzlB,QAAQC,IAAI,eAAiBsL,KAAKC,UAAUm6B,IAE5C,EAAK5nC,SAAS,CACV4nC,YAAaA,QAIxB/9B,OAAM,SAAAC,GACH7H,QAAQC,IAAI4H,SAI3BD,OAAM,SAAAC,GACH7H,QAAQC,IAAI,gCAAkCsL,KAAKC,UAAU3D,S,+BAwCpE,MAesD/J,KAAKI,MAAxDiI,EAfH,EAeGA,KAAMiJ,EAfT,EAeSA,KAAMpN,EAff,EAeeA,OAAQglC,EAfvB,EAeuBA,KAAMl4B,EAf7B,EAe6BA,UAAWm4B,EAfxC,EAewCA,UAfxC,EAgB4BnpC,KAAKN,MAA9BmoC,EAhBH,EAgBGA,YAAa3f,EAhBhB,EAgBgBA,QACfkhB,EAhBN,SAAsBllC,GAClB,OAAe,IAAXA,EACO,2BAEI,IAAXA,EACO,qBAGI,IAAXA,EACO,qBAEJA,EAKUmlC,CAAanlC,GAC5BolC,EAAqC,IAArB3lC,SAASO,GAC/B,OACI,yBAAKvD,MAAO,CAAEizB,UAAW,OAAQhzB,QAAS,OAAQI,oBAAqB,wBAAyBuoC,UAAW,OAAQC,aAAeL,EAAY,KAAO,sBACjJ,wBAAIj9B,UAAU,mBAAmBpK,IAAOuG,GAAM6F,OAAO,gBACrD,wBAAIhC,UAAU,kBAAkBvL,MAAO,CAAEsS,eAAgB,SAAW3B,GACpE,wBAAIpF,UAAU,mBAAmBg9B,GACjC,wBAAIh9B,UAAU,mBAAmBk9B,GAChCE,GAAiB,wBAAIp9B,UAAU,kBAAkBgH,QAAS,kBAAMlC,EAAUkX,IAAUvnB,MAAO,CAAEiO,MAAO,OAAQijB,eAAgB,YAAa7d,OAAQ,YAAc6zB,IAC9JyB,GAAiB,wBAAIp9B,UAAU,mBAAmB27B,Q,GA/HnBroC,cCMlCiqC,G,iLAVP,IACMC,EADe1pC,KAAKI,MAAMkQ,OACArE,KAAI,SAAClI,EAAMR,GACvC,MAAwB,KAAjBQ,EAAK2kB,QAAiB,yBAAKxoB,IAAM,kBAAoBqD,EAAQ5C,MAAO,CAAEkU,WAAY,aAAe9Q,EAAK2kB,SAAiB,MAElI,OACI,6BAAMghB,O,GAPYlqC,aC4LfmqC,G,2MApLXjqC,MAAQ,CACJqQ,SAAS,EAET65B,cAAc,EACdC,YAAa,GACbC,QAAS,GACT9iB,QAAS,GAET+iB,QAAS,M,EAiCb/4B,UAAY,SAACV,GACT,EAAKrQ,SAAS,CACV2pC,cAAc,EACdC,YAAav5B,K,EAIrB6C,SAAW,SAAApC,GACP,EAAK9Q,SAAS,CACV2pC,cAAc,K,EAItB94B,aAAe,SAAAC,GACX,EAAK9Q,SAAS,CACV2pC,cAAc,K,mFA7ClB,IAAMjP,EAAQ36B,KAAKI,MAAM4pC,gBAAgB,GACzChqC,KAAKC,SAAS,CAAE8pC,QAASpP,IACzB36B,KAAKiqC,iB,2CAGL,IAAMtP,EAAQ36B,KAAKI,MAAM4pC,gBAAgB,GAErCrP,IADgB36B,KAAKN,MAAjBqqC,UAEJ/pC,KAAKC,SAAS,CAAE8pC,QAASpP,IACzB36B,KAAKiqC,kB,qCAGG,IAAD,aAU2BjqC,KAAKI,MAAnC8d,EAVG,EAUHA,SAAU8rB,EAVP,EAUOA,gBACZE,EAAqBpoC,IAAOkoC,EAAgB,IAAI97B,OAAO,eAV7D,SAA6Bg8B,GACzB,IAAM1iB,EAAoB1lB,MAAWA,IAAOooC,EAAoB,cAAc7kC,UAE7D1B,SAAS6jB,EADH,QASLC,CAAoByiB,GAC1CzgC,EAAsCyU,EAASzX,MAAOyjC,EAAoB,MAAO,YAC5ExgC,MAAK,SAAA3F,GAAU,EAAK9D,SAAS,CAAE6pC,QAAS/lC,EAAKA,UAC7C+F,OAAM,SAAAC,GAAS7H,QAAQC,IAAI,gCAAkCsL,KAAKC,UAAU3D,S,+BAqB5E,MAmD0C/J,KAAKN,MAA5CkqC,EAnDH,EAmDGA,aAAcC,EAnDjB,EAmDiBA,YAElBM,EApDJ,SAAuBL,EAASE,GAC5B9nC,QAAQC,IAAI6nC,GACZ,IAAII,EAAiB,GACrB,GAAIjnC,MAAMC,QAAQ0mC,GACd,IAAK,IAAIvmC,EAAQ,EAAGA,EAAQumC,EAAQpmC,OAAQH,IAAS,CACjD,IAAMsB,EAAUilC,EAAQvmC,GAClB8mC,EAAgBzqC,OAAOiF,EAAQgF,UAC/BygC,EAAmBxoC,IAAO+C,EAAQsM,QAAQnM,WAAWC,OAASJ,EAAQuM,QAAQpM,WAAWC,OAAQ,sBAAsBI,UAC7H,GAAI2kC,EAAgB,IAAMM,GAAoBA,GAAoBN,EAAgB,GAC9E,GAAsB,KAAlBK,EAEAD,EAAe9kC,KAAK,CAChB+C,KAAMiiC,EACNpmC,OAAQ,EACRW,QAASA,SAGZ,GAAsB,KAAlBwlC,EAELD,EAAe9kC,KAAK,CAChB+C,KAAMiiC,EACNpmC,OAAQ,EACRW,QAASA,SAGZ,GAAsB,KAAlBwlC,EAELD,EAAe9kC,KAAK,CAChB+C,KAAMiiC,EACNpmC,OAAQ,EACRW,QAASA,QAGZ,IAAsB,KAAlBwlC,GAA0C,KAAlBA,GAA0C,KAAlBA,EAErD,SAIAD,EAAe9kC,KAAK,CAChB+C,KAAMiiC,EACNpmC,OAAQmmC,EACRxlC,QAASA,KAM7B,OAAOulC,EAIMG,CArDZ,EAmD8BT,QACP9pC,KAAKI,MAAzB4pC,iBAEFh5B,EAAYhR,KAAKgR,UACjBmC,EAAWnT,KAAKmT,SAChBrC,EAAe9Q,KAAK8Q,aAEtBq5B,EAAWzmC,OAAS,IACpBymC,EAAaA,EAAW37B,MAAK,SAACC,EAAGC,GAC7B,OAAOD,EAAEpG,KAAOqG,EAAErG,KAAO,GAAK,MAItC,IAAMmiC,EAAaL,EAAWl+B,KAAI,SAAU1L,EAAOgD,EAAO6B,GACtD,IAAM8jC,EAAO3oC,EAAMsE,QAAQ4lC,QACrBpiC,EAAO9H,EAAM8H,KACbiJ,EAAO/Q,EAAMsE,QAAQsG,SACrBjH,EAAS3D,EAAM2D,OACjBilC,GAAY,EAQhB,OAPI5lC,EAAQ4mC,EAAWzmC,OAAS,IAC5BylC,EAAYrnC,IAAOvB,EAAM8H,MAAMqiC,OAAO5oC,IAAOqoC,EAAW5mC,EAAQ,GAAG8E,MAAO,QAE1E9E,IAAU4mC,EAAWzmC,OAAS,IAC9BylC,GAAY,GAIZ,kBAAC,GAAD,CAAqBjpC,IAAK,kBAAoBqD,EAAO2lC,KAAMA,EAAM7gC,KAAMA,EAAMiJ,KAAMA,EAAMpN,OAAQA,EAAQ6kC,MAAOxoC,EAAMsE,QAAQ8lC,SAAU7B,OAAQvoC,EAAMsE,QAAQ+lC,SAAUroC,MAAOhC,EAAMsE,QAAQkjB,KAAMzgB,IAAK/G,EAAMsE,QAAQojB,SAAUjX,UAAWA,EAAWm4B,UAAWA,OAInQ0B,EADQ,CAAC,eAAM,2BAAQ,eAAM,eAAM,gBACjB5+B,KAAI,SAAU1L,EAAOgD,EAAOqG,GAEhD,OACI,wBAAIsC,UAAU,uBAAuBvL,MAAO,CAAEsS,eAAgB,WAAa1S,MAKnF,OACI,6BACI,yBAAKI,MAAO,CAAEI,OAAQ,OAAQuU,gBAAiB,yBAA0B1U,QAAS,OAAQI,oBAAqB,0BAC1G6pC,GAEL,yBAAKlqC,MAAO,CAAEsX,OAAQ,mCAAoCiH,aAAc,cAAehH,eAAgB,aACnG,yBAAKhM,UAAU,mBACqB,OAA/BuB,KAAKC,UAAUy8B,GACZK,EAEA,yBAAK7pC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,0BAChD,yBAAKL,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQC,WAAY,SAAUoS,eAAgB,WAArF,wBAKZ,kBAAC,KAAD,CACIlQ,MAAO,2BACPgN,QAAS65B,EACTp0B,KAAMrC,EACNJ,SAAUjC,EACVgC,MAAO,IACPE,OAAQ,MACR,kBAAC,GAAD,CAAgB1C,OAAQu5B,W,GA7KlBrqC,aCafsrC,G,iLAXP,OACI,yBAAKnqC,MAAO,CAAE6jB,aAAc,SACxB,yBAAK7jB,MAAO,CAAE2U,gBAAiB,YAAa8N,oBAAqB,MAAOC,qBAAsB,MAAOtiB,OAAQ,OAAQ0T,QAAS,WAAY7T,QAAS,OAAQC,WAAY,WACnK,wBAAIF,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBAAtC,+CAEJ,kBAAC,GAAD,CAAiBsP,SAAUle,KAAKI,MAAM8d,SAAU8rB,gBAAiBhqC,KAAKI,MAAM4pC,uB,GAZ7DxqC,aCqKhBurC,G,2MApKXrrC,MAAQ,CACJonB,SAAU,GACVkkB,OAAQ,KACRC,eAAgB,M,EA4BpBC,cAAgB,WAAM,IAsEVx+B,EAAU,EAAKtM,MAAfsM,MACFhE,EAAYgE,EAAM,GAClB/D,EAAU+D,EAAM,GAItB,OA1EA,SAAuBy+B,EAAajlC,EAAIC,GACpC,IAAIilC,EAAcD,EAAY7nC,QAAO,SAAUuB,EAAStB,EAAOqG,GAC3D,IAAMyhC,EAAYvpC,IAAO+C,EAAQigB,QAAQ9f,WAAWC,OAASJ,EAAQkgB,QAAQ/f,WAAWC,OAAQ,sBAAsBI,UACtH,OAAOa,GAAMmlC,GAAaA,GAAallC,KAGvCmlC,OAAOC,KAAKH,GAAa1nC,OAAS,IAClC0nC,EAAcA,EAAY58B,MAAK,SAACC,EAAGC,GAG/B,OAFgB5M,IAAO2M,EAAEqW,QAAQ9f,WAAWC,OAAQ,cAAcI,UAClDvD,IAAO4M,EAAEoW,QAAQ9f,WAAWC,OAAQ,cAAcI,UACnC,GAAK,MAI5C,IAAMmmC,EAAc,CAChB,EAAK,CAAE,IAAO,IAAK,IAAO,KAC1B,EAAK,CAAE,IAAO,EAAG,IAAO,KACxB,EAAK,CAAE,IAAO,EAAG,IAAO,KACxB,EAAK,CAAE,IAAO,EAAG,IAAO,IACxB,EAAK,CAAE,KAAQ,GAAI,IAAO,IAC1B,EAAK,CAAE,IAAO,EAAG,IAAO,KACxB,EAAK,CAAE,IAAO,EAAG,IAAO,MA4C5B,OAzCgBJ,EAAYn/B,KAAI,SAAUpH,EAAStB,EAAOqG,GACtD,IAAM6hC,EAAU5mC,EAAQomB,KAClBygB,EAAY7mC,EAAQsmB,KACpBwgB,EAAW9mC,EAAQ0mB,KACnBqgB,EAAY/mC,EAAQgnC,KACpBC,EAAUjnC,EAAQwmB,KAClB0gB,EAAalnC,EAAQmnC,KACrBC,EAAYpnC,EAAQqnC,KACpBb,EAAYvpC,IAAO+C,EAAQigB,QAAQ9f,WAAWC,OAASJ,EAAQkgB,QAAQ/f,WAAWC,OAAQ,sBAAsBI,UAGhH8mC,EAAe,CAFRrqC,IAAOupC,GAAWn9B,OAAO,eAEVu9B,EAASC,EAAWC,EAAUC,EAAWE,EAASC,EAAYE,EADrE,QAEjB9C,GAAY,EAChB,GAAI5lC,EAAQ6nC,EAAY1nC,OAAS,EAAG,CAChC,IAAMpB,EAAMR,IAAOupC,GAAWn9B,OAAO,cAC/Bk+B,EAAatqC,IAAOspC,EAAY7nC,EAAQ,GAAGuhB,QAAQ9f,WAAWC,OAASmmC,EAAY7nC,EAAQ,GAAGwhB,QAAQ/f,WAAWC,OAAQ,sBAAsBiJ,OAAO,cAC5Ji7B,EAAYrnC,IAAOQ,GAAKooC,OAAO0B,EAAY,OAG3C7oC,IAAU6nC,EAAY1nC,OAAS,IAC/BylC,GAAY,GAGhB,IAAMkD,EAAUF,EAAalgC,KAAI,SAAU1L,EAAOgD,EAAO6B,GACrD,IAAIknC,GAAY,EACVC,EAAY/6B,WAAWjR,GAK7B,OAHa,GAATgD,GAAuB,GAATA,IAAegpC,EAAYf,EAAYjoC,EAAMyB,YAAYmb,KAAOosB,EAAYf,EAAYjoC,EAAMyB,YAAYkb,MAA4B,GAApBssB,MAAMD,MACtID,GAAY,GAGZ,iCAAapsC,IAAKqD,EAAO5C,MAAO,CAAEsX,OAAQ,gCAAiCC,eAAgB,aACvF,wBAAIvX,MAAO,CAAEiO,MAAO09B,EAAY,MAAQ,QAASv9B,WAAY,MAAQxO,OAKjF,OACI,yBAAKL,IAAKqD,EAAO5C,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQI,oBAAqB,sBAAuBwoC,aAAcL,EAAY,KAAO,sBAAwBkD,MAUzJI,CADH,EAAK/sC,MAAMonB,SACepe,EAAWC,I,mFAnGrD,IAAM4E,EAAMvN,KAAKI,MAAM8d,SAASzX,MAC1B2gB,EAAOpnB,KAAKI,MAAM8d,SAASxN,UACjC1Q,KAAKC,SAAS,CAAE+qC,OAAQz9B,EAAK09B,eAAgB7jB,IAC7CpnB,KAAK0sC,c,2CAGL,IAAMn/B,EAAMvN,KAAKI,MAAM8d,SAASzX,MAC1B2gB,EAAOpnB,KAAKI,MAAM8d,SAASxN,UAC3Bs6B,EAAShrC,KAAKN,MAAMsrC,OACpB2B,EAAU3sC,KAAKN,MAAMurC,eACvB19B,IAAQy9B,GAAU5jB,IAASulB,IAC3B3sC,KAAKC,SAAS,CAAE+qC,OAAQz9B,EAAK09B,eAAgB7jB,IAC7CpnB,KAAK0sC,e,kCAGA,IAAD,OACAxuB,EAAale,KAAKI,MAAlB8d,SAGRzU,EAFYyU,EAASzX,MACD3E,IAAOoc,EAASxN,UAAW,YAAYxC,OAAO,eAE7DxE,MAAK,SAAA3F,GAAU,EAAK9D,SAAS,CAAE6mB,SAAU/iB,EAAKA,UAC9C+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,iCAAmCsL,KAAKC,UAAU3D,S,+BAkFhE,IACE6iC,EAAc5sC,KAAKI,MAAnBwsC,UAEFC,EADe,CAAC,eAAM,KAAP,OAAqB,MAAO,OAAQ,KAAM,QAAS,OAAQ,gBAC9C5gC,KAAI,SAAU1L,EAAOgD,EAAO6B,GAoB1D,OACI,iCAAalF,IAAKqD,EAAO5C,MAAO,CAAE8T,QAAS,UAAW7T,QAAS,OAAQC,WAAY,SAAUqX,eAAgB,aACzG,yBAAKvX,MAAO,CAAEqO,SAAU,SArBhC,SAAsBzO,GAElB,MAAc,UAAVA,EACO,yBAAKI,MAAO,CAAEqO,SAAU,SAAxB,IAAmC,kCAAnC,OAEG,SAAVzO,EACO,yBAAKI,MAAO,CAAEqO,SAAU,SAAxB,MAAqC,mCAElC,QAAVzO,EACO,yBAAKI,MAAO,CAAEqO,SAAU,SAAxB,KAAoC,mCAEjC,SAAVzO,EACO,yBAAKI,MAAO,CAAEqO,SAAU,SAAxB,MAAqC,mCAElC,SAAVzO,EACO,yBAAKI,MAAO,CAAEqO,SAAU,SAAxB,MAAqC,mCAEzCzO,EAIgCusC,CAAavsC,QAItD2qC,EAAgBlrC,KAAKkrC,gBAE3B,OACI,6BACI,yBAAKvqC,MAAO,CAAEosC,aAAc,SAAUhsC,OAAQ,OAAQuU,gBAAiB,yBAA0B1U,QAAS,OAAQI,oBAAqB,wBAClI6rC,GAEL,yBAAKlsC,MAAO,CAAEsX,OAAQ,mCAAoCiH,aAAc,cAAehH,eAAgB,aACnG,yBAAKvX,MAAO,CAAEizB,UAAWgZ,EAAY,sBAAwB,QAASjZ,UAAWiZ,EAAY,sBAAwB,QAASrD,UAAW,SAC3G,IAAzB2B,EAAcxnC,OACXwnC,EAEA,yBAAKvqC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,wBAChD,yBAAKL,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQC,WAAY,SAAUoS,eAAgB,WAArF,8B,GAzJVzT,aCiBPwtC,G,iLAhBD,IAAD,EAC4ChtC,KAAKI,MAA9C8d,EADH,EACGA,SAAU8rB,EADb,EACaA,gBAAiB4C,EAD9B,EAC8BA,UAEnC,OACI,6BACI,yBAAKjsC,MAAO,CAAE2U,gBAAiB,YAAa4J,aAAc,cAAene,OAAQ,OAAQ0T,QAAS,WAAY7T,QAAS,OAAQC,WAAY,WACvI,wBAAIF,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBACjCg+B,EAAY,8BAAY,2DAGjC,kBAAC,GAAD,CAASlgC,MAAOs9B,EAAiB9rB,SAAUA,EAAU0uB,UAAWA,S,GAb9DptC,a,oBCGGytC,I,kNACjBvtC,MAAQ,CACJwtC,UAAW,KACXC,UAAW,M,mFAIXntC,KAAKsW,cAAgBtW,KAAKsW,cAAcC,KAAKvW,MAC7CA,KAAKotC,UAAYptC,KAAKotC,UAAU72B,KAAKvW,MACrC,IAAMwQ,EAASxQ,KAAKI,MAAMitC,YAAY78B,OACtCtO,QAAQC,IAAInC,KAAKI,MAAMitC,YAAY78B,QACnCxQ,KAAKC,SAAS,CAAEitC,UAAW18B,M,2CAK3B,IAAMA,EAASxQ,KAAKI,MAAMitC,YAAY78B,OAC9B08B,EAAcltC,KAAKN,MAAnBwtC,UACRhrC,QAAQC,IAAI+qC,GACM,OAAdA,GAAoC,KAAdA,GAClBA,IAAc18B,GACdxQ,KAAKC,SAAS,CAAEitC,UAAW18B,M,oCAKzBmG,GAEVzU,QAAQC,IAAIwU,EAAMC,OAAOrW,OACzBP,KAAKC,SAAS,CAAEitC,UAAWv2B,EAAMC,OAAOrW,U,gCAGlCoW,GAAQ,IAAD,SACyB3W,KAAKI,MAAMitC,YAAzCC,EADK,EACLA,UAAW7pC,EADN,EACMA,KAAM8pC,EADZ,EACYA,SADZ,EAEqBvtC,KAAKN,MAA/BwtC,EAFK,EAELA,UAAWC,EAFN,EAEMA,UACfK,EAAU1rC,MAASoM,OAAO,yBAI1Bu/B,EAAa,GAES,KAAtB92B,EAAMC,OAAOrW,MACbktC,EAAaP,GAEbO,EAAa,GACbztC,KAAKC,SAAS,CAAEitC,UAAW,Q5C+sBhC,SAAsB57B,EAAMd,EAAQ+8B,EAAUllC,EAAMilC,EAAW7pC,EAAMwT,GAC1E,IAAM3O,EAAO,CACXgJ,KAAMA,EACNd,OAAQA,EACR1J,SAAUymC,EACVllC,KAAMA,EACNwb,UAAWypB,EACX7pC,KAAMA,EACNwT,OAAQA,GAEV,OAAOxR,IAAM8C,KAAK,sBAAuBD,G4CttBnCmB,CAXa,gBAWkBgkC,EAAYF,EAAUC,EAASF,EAAW7pC,EAAM0pC,GAC1EzjC,MAAK,SAAAa,GACFrI,QAAQC,IAAI,mBAAqBsL,KAAKC,UAAUnD,IAChD,EAAKnK,MAAMoV,KAAKi4B,MAEnB3jC,OAAM,SAAAC,GACH7H,QAAQC,IAAI,mBAAqBsL,KAAKC,UAAU3D,S,+BAIlD,IACEua,EAAaC,KAAbD,SADH,EAEwBtkB,KAAKI,MAAMitC,YAAhCK,EAFH,EAEGA,WAAYp8B,EAFf,EAEeA,KACdyB,EAAW/S,KAAKI,MAAM2S,SACtByC,EAAOxV,KAAKotC,UAAU72B,KAAKvW,MAEjC,OADAkC,QAAQC,IAAInC,KAAKN,MAAMwtC,WAEnB,kBAAC,KAAD,CACInqC,MAAM,2BACNgN,QAAS/P,KAAKI,MAAM2P,QACpBgD,SAAUA,EACV46B,OAAO,eACPC,WAAW,eACX56B,OAAQ,CACJ,kBAAC,KAAD,CAAQrS,MAAO,CAAEktC,MAAO,QAAU36B,QAASsC,EAAMjV,MAAM,KAAvD,gBACA,kBAAC,KAAD,CAAQ2S,QAASH,GAAjB,gBACA,kBAAC,KAAD,CAAQtP,KAAK,UAAUyP,QAASsC,EAAMjV,MAAM,KAA5C,kBAGJ,yBAAKI,MAAO,CAAEC,QAAS,OAAQ6U,iBAAkB,wBAC7C,yBAAK9U,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,gBAAiBpS,WAAY,WACxE,0DAAY6sC,GACZ,wEAGJ,yBAAK/sC,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,gBAAiBpS,WAAY,WACxE,0DAAYyQ,GACZ,gEAAatR,KAAKN,MAAMuX,SAE5B,yBAAKtW,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,gBAAiBpS,WAAY,WACxE,8CACA,0DAAYb,KAAKN,MAAMuX,SAE3B,yBAAKtW,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,gBAAiBpS,WAAY,WAA5E,6BACA,kBAACyjB,EAAD,CAAUif,KAAM,EAAG3tB,YAAY,6CAAUrV,MAAOP,KAAKN,MAAMwtC,UAAWt6B,SAAU5S,KAAKsW,sB,GA5FhE9W,cCiI1BsuC,G,2MA7HXpuC,MAAQ,CACJquC,QAAQ,EACRC,QAAQ,EACRx9B,OAAQ,GACR7Q,WAAY,G,EAwChBwT,SAAW,SAAA86B,GACP/rC,QAAQC,IAAI8rC,GACZ,EAAKhuC,SAAS,CACV+tC,QAAQ,EACRx9B,OAAQy9B,K,EAIhBn9B,aAAe,SAAAC,GACX,EAAK9Q,SAAS,CACV+tC,QAAQ,K,EAIhBE,UAAY,SAAC3tC,GACT,EAAKN,SAAS,CACVuQ,YAAkBpO,IAAV7B,EAAsBA,EAAQ,M,EAI9C4tC,YAAc,WAAO,IAAD,EACY,EAAK/tC,MAAzB8d,EADQ,EACRA,SAAU3d,EADF,EACEA,MACZoV,EAAE,gBAAY7T,IAAOvB,EAAMyW,KAAKhS,WAAazE,EAAM6vB,KAAKprB,WAAY,gBAAgBK,WAC1FoE,EAAyByU,EAASzN,UAAWkF,EAAI,YAAYjM,MAAK,SAAAa,GAC9D,EAAK2jC,UAAU3jC,EAAOxG,KAAK,GAAGyM,WAC/B1G,OAAM,SAAAC,GACL7H,QAAQC,IAAI,mBAAqBsL,KAAKC,UAAU3D,Q,mFA/DpD,IAAMhK,EAAcF,eAAeC,QAAQ,QAC3CE,KAAKC,SAAS,CAAEN,WAAYI,IAC5BC,KAAKmuC,gB,mCAGDnuC,KAAKN,MAAMsuC,QAIXhuC,KAAKC,SACD,CACI8tC,QAAQ,M,oCAOhB/tC,KAAKN,MAAMsuC,QAIXhuC,KAAKC,SACD,CACI8tC,QAAQ,M,mCAOpB/tC,KAAKC,SACD,CACI+tC,QAAQ,M,+BAkCV,IAAD,SACkChuC,KAAKI,MAApCG,EADH,EACGA,MAAO2d,EADV,EACUA,SAAUirB,EADpB,EACoBA,UACnBxzB,EAAE,gBAAY7T,IAAOvB,EAAMyW,KAAKhS,WAAazE,EAAM6vB,KAAKprB,WAAY,gBAAgBK,WACpFgD,EAAOvG,IAAOvB,EAAMyW,KAAKhS,WAAazE,EAAM6vB,KAAKprB,WAAY,gBAAgBkJ,OAAO,eACpF6X,EAAOxlB,EAAM6tC,KAAKppC,WAAWC,OAC7BopC,EAAU9tC,EAAM+tC,QAEtBpsC,QAAQC,IAAIksC,GAEZ,IAAMhB,EAAc,CAChB,WAAchlC,EACd,KAAQgmC,EACR,SAAY14B,EACZ,OAAU3V,KAAKN,MAAM8Q,OACrB,UAAa0N,EAASzN,UACtB,KAAQ,WACR,OAAU5Q,eAAeC,QAAQ,SAGrC,OACI,yBAAKyuC,YAAa,kBAAM,EAAKC,cAAc1U,aAAc,kBAAM,EAAK2U,eAAeviC,UAAU,cAAcvL,MAAO,CAAE+tC,UAAiC,KAAtB1uC,KAAKN,MAAM8Q,OAAgB,OAAS,OAAQg5B,aAAeL,EAAY,mCAAqC,sBACvO,wBAAIj9B,UAAU,mBAAmBvL,MAAO,CAAE+tC,UAAiC,KAAtB1uC,KAAKN,MAAM8Q,OAAgB,OAAS,SAAWnI,GACpG,yBAAK1H,MAAO,CAAEC,QAAS,OAAQ6U,iBAAkB,CAAuB,OAAtBzV,KAAKN,MAAM8Q,aAAyCpO,IAAtBpC,KAAKN,MAAM8Q,QAA8C,KAAtBxQ,KAAKN,MAAM8Q,OAAgB,MAAQ,cAClJ,yBAAK7P,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAChD,yBAAKL,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUoS,eAAgB,SAAUiF,eAAgB,WAAYy2B,WAAY,qCACnH,wBAAIhuC,MAAO,CAAEoO,WAAY,IAAKH,MAAO,UAChCmX,IAGT,yBAAKplB,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUoS,eAAgB,SAAUiF,eAAgB,WAAYy2B,WAAY,qCACnH,wBAAIhuC,MAAO,CAAEoO,WAAY,IAAKH,MAAO,UAChCy/B,KAIb,wBAAI1tC,MAAO,CAAEoO,WAAY,IAAKlO,WAAY,SAAUqX,eAAgB,WAAYtJ,MAAO,eAAgB+F,SAAU,SAAU5T,OAAQ,OAAQH,QAAS,CAAuB,OAAtBZ,KAAKN,MAAM8Q,aAAyCpO,IAAtBpC,KAAKN,MAAM8Q,QAA8C,KAAtBxQ,KAAKN,MAAM8Q,OAAgB,OAAS,IAAKm+B,WAAY,mCAAoCC,UAAW,qCAAuC5uC,KAAKN,MAAM8Q,QAC5W,yBAAK7P,MAAOX,KAAKN,MAAMquC,OACnB,CAAEntC,QAAkC,GAAzBZ,KAAKN,MAAMC,WAAkB,OAAS,OAAQkB,WAAY,SAAUoS,eAAgB,SAAUyB,SAAU,WAAYwrB,MAAO,EAAGn/B,QAAQf,KAAKN,MAAM8Q,OAAgB,QAAiB2vB,WAAY,cAAertB,MAAO,QAE/N,CAAElS,QAAS,SACX,yBAAKsS,QAAS,kBAAM,EAAK27B,cAAcluC,MAAO,CAAEmS,MAA6B,KAAtB9S,KAAKN,MAAM8Q,OAAgB,OAAS,OAAQzP,OAA8B,KAAtBf,KAAKN,MAAM8Q,OAAgB,OAAS,OAAQ0O,aAAc,OAAQihB,WAAY,uBAAwBv/B,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,SAAUmT,OAAQ,YACtR,yBAAK3S,IAAKytC,KAAYvtC,IAAI,kBAItC,kBAAC,GAAD,CAAa8rC,YAAaA,EAAat9B,QAAS/P,KAAKN,MAAMsuC,OAAQj7B,SAAU/S,KAAK8Q,aAAc0E,KAAMxV,KAAKmT,gB,GAxH1F3T,aC0DlBuvC,G,2MA3DXC,qBAAuB,WAAO,IAAD,EACiB,EAAK5uC,MAAvCklB,EADiB,EACjBA,SAAUpH,EADO,EACPA,SAAU0uB,EADH,EACGA,UAWtBmC,EAAiBzpB,EAASrZ,KAC5B,SAAC1L,EAAOgD,EAAO6B,GACX,IAAI+jC,GAAY,EAOhB,OANI5lC,EAAQ+hB,EAAS5hB,OAAS,IAC1BylC,EAAYrnC,IAAOvB,EAAMyW,KAAM,YAAY0zB,OAAO5oC,IAAOwjB,EAAS/hB,EAAQ,GAAGyT,KAAM,YAAa,QAEhGzT,IAAU+hB,EAAS5hB,OAAS,IAC5BylC,GAAY,GAET,kBAAC,GAAD,CAAoBjpC,IAAKqD,EAAOhD,MAAOA,EAAO2d,SAAUA,EAAU0uB,UAAWA,EAAWzD,UAAWA,OAIlH,OAA2B,IAApB7jB,EAAS5hB,OAAeqrC,EAC3B,yBAAKpuC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,iBAChD,yBAAKL,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQC,WAAY,SAAUoS,eAAgB,WAArF,wB,wEAOR,IACQ25B,EAAc5sC,KAAKI,MAAnBwsC,UACFqC,EAFQ,CAAC,eAAM,eAAM,gBAEGhjC,KAAI,SAAUpH,EAAStB,EAAOqG,GACxD,OACI,yBAAK1J,IAAKqD,EAAO5C,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUqX,eAAgB,WAAYjF,eAAgB,WACzG,yBAAKtS,MAAO,CAAEqO,SAAU,SAAWnK,OAK/C,OACI,6BACI,yBAAKlE,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQI,oBAAqB,eAAgBsU,gBAAiB,yBAA0By3B,aAAc,WACxIkC,GAEL,yBAAKtuC,MAAO,CAAEsX,OAAQ,mCAAoCiH,aAAc,cAAehH,eAAgB,aACnG,yBAAKvX,MAAO,CAAEizB,UAAWgZ,EAAY,sBAAwB,QAASjZ,UAAWiZ,EAAY,sBAAwB,QAASj4B,SAAU,SACnI3U,KAAKgvC,8B,GApDDxvC,aCuFd0vC,G,2MAnFXxvC,MAAQ,CACJqyB,OAAQ,KACRod,KAAM,I,EA4CVH,qBAAuB,WAAO,IAAD,EACwB,EAAK5uC,MAA9C8d,EADiB,EACjBA,SAAU8rB,EADO,EACPA,gBAAiB4C,EADV,EACUA,UAE/BtnB,EAAW8pB,GADE,EAAK1vC,MAAdyvC,MAiBR,OAbA7pB,EAAWA,EAAShiB,QAAO,SAAAS,GACvB,IAAIsE,EAAOvG,IAAOiC,EAAKiT,KAAOjT,EAAKqsB,KAAM,gBAAgB/qB,UACzD,OAAO2kC,EAAgB,IAAM3hC,GAAQA,GAAQ2hC,EAAgB,MAG7DsB,OAAOC,KAAKjmB,GAAU5hB,OAAS,IAC/B4hB,EAAWA,EAAS9W,MAAK,SAACC,EAAGC,GAGzB,OAFgB5M,IAAO2M,EAAEuI,KAAOvI,EAAE2hB,KAAM,gBAAgB/qB,UACxCvD,IAAO4M,EAAEsI,KAAOtI,EAAE0hB,KAAM,gBAAgB/qB,UACzB,GAAK,MAIrC,kBAAC,GAAD,CAAgBigB,SAAUA,EAAUpH,SAAUA,EAAU0uB,UAAWA,K,mFA7DzD,IAAD,EACsB5sC,KAAKI,MAAnC8d,EADQ,EACRA,SAAU8rB,EADF,EACEA,gBAClBhqC,KAAKC,SAAS,CAAE8xB,OAAQ7T,EAAS8J,OAAQqnB,MAAOrF,EAAgB,GAAIsF,MAAOtF,EAAgB,KAC3FhqC,KAAKuvC,WAAWrxB,EAAS8J,OAAQgiB,EAAgB,GAAIA,EAAgB,M,2CAGnD,IAAD,EACqBhqC,KAAKI,MAAnC8d,EADS,EACTA,SAAU8rB,EADD,EACCA,gBADD,EAEgBhqC,KAAKN,MAA9BqyB,EAFS,EAETA,OAAQsd,EAFC,EAEDA,MAAOC,EAFN,EAEMA,MACjBrd,EAAM/T,EAAS8J,OACfif,EAAK+C,EAAgB,GACrB9C,EAAK8C,EAAgB,GACvB/X,IAAQF,GAAUkV,IAAOoI,GAASnI,IAAOoI,IACzCtvC,KAAKC,SAAS,CAAE8xB,OAAQ7T,EAAS8J,OAAQqnB,MAAOrF,EAAgB,GAAIsF,MAAOtF,EAAgB,KAC3FhqC,KAAKuvC,WAAWrxB,EAAS8J,OAAQgiB,EAAgB,GAAIA,EAAgB,O,iCAGlE/X,EAAK/rB,EAAIC,GAAK,IAAD,OACdnC,EAAM,IAAIC,IAGhBwF,EAAoBwoB,EAFNnwB,IAAOoE,GAAIgI,OAAO,gBACpBpM,IAAOqE,GAAI+H,OAAO,iBAEzBxE,MAAK,SAAA3F,GACF7B,QAAQC,IAAI6B,EAAIG,OAAOJ,EAAKA,MAAMK,OAAOG,SAASC,SAClD,IAAM+F,EAASvG,EAAIG,OAAOJ,EAAKA,MAAMK,OACrC,GAA2B,IAAvBxE,OAAO2K,EAAOlG,KAAY,CAC1B,IAAMmrC,EAAajlC,EAAOhG,SAASC,QAC/BrB,MAAMC,QAAQosC,GACd,EAAKvvC,SAAS,CAAEkvC,KAAMK,IAGtB,EAAKvvC,SAAS,CAAEkvC,KAAM,CAACK,KAG/B,MAAO,MAEV1lC,OAAM,SAAAC,GACH7H,QAAQC,IAAI,cAAgBsL,KAAKC,UAAU3D,S,+BA2B7C,IACE6iC,EAAc5sC,KAAKI,MAAnBwsC,UACR,OACI,6BACI,yBAAKjsC,MAAO,CAAE2U,gBAAiB,YAAa4J,aAAc,cAAene,OAAQ,OAAQ0T,QAAS,WAAY7T,QAAS,OAAQC,WAAY,WACvI,wBAAIF,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBACjCg+B,EAAY,6CAAY,qDAGhC5sC,KAAKgvC,4B,GA9EExvC,aCyITiwC,I,kNA1IX/vC,MAAQ,CACJsuC,QAAQ,EACR0B,QAAQ,EACRl/B,OAAQ,GACR7Q,WAAY,G,EAShBwuC,YAAc,WAAO,IAAD,EACY,EAAK/tC,MAAzB8d,EADQ,EACRA,SAAU3d,EADF,EACEA,MAClBkJ,EAAyByU,EAASzN,UAAWlQ,EAAMovC,SAAU,gBAAgBjmC,MAAK,SAAAa,GAC9ErI,QAAQC,IAAI,mBAAqBsL,KAAKC,UAAUnD,IAChD,EAAK2jC,UAAU3jC,EAAOxG,KAAK,GAAGyM,WAC/B1G,OAAM,SAAAC,GACL7H,QAAQC,IAAI,mBAAqBsL,KAAKC,UAAU3D,Q,EAmCxDoJ,SAAW,SAAA86B,GACP,EAAKhuC,SAAS,CACV+tC,QAAQ,EACRx9B,OAAQy9B,K,EAIhBn9B,aAAe,SAAAC,GACX,EAAK9Q,SAAS,CACV+tC,QAAQ,K,EAIhBE,UAAY,SAAC3tC,GACT,EAAKN,SAAS,CACVuQ,YAAkBpO,IAAV7B,EAAsBA,EAAQ,M,EAI9CqvC,YAAc,WAAO,IACTrvC,EAAU,EAAKH,MAAfG,MACFsvC,EAAcjwC,OAAOW,EAAM2J,UACjC,OAAoB,KAAhB2lC,EACO,qBAES,KAAhBA,EACO,qBAES,KAAhBA,EACO,qBAEJA,G,mFA7EP,IAAM9vC,EAAcF,eAAeC,QAAQ,QAC3CE,KAAKC,SAAS,CAAEN,WAAYI,IAC5BC,KAAKmuC,gB,iCAcDnuC,KAAKN,MAAMsuC,QAIXhuC,KAAKC,SACD,CACIyvC,QAAQ,M,iCAMhB1vC,KAAKN,MAAMsuC,QAIXhuC,KAAKC,SACD,CACIyvC,QAAQ,M,mCAMpB1vC,KAAKC,SACD,CACI+tC,QAAQ,M,+BAsCV,IAAD,SACuBhuC,KAAKI,MAAzB8d,EADH,EACGA,SAAU3d,EADb,EACaA,MACZuvC,EAAOvvC,EAAMwK,QAAQ/F,WACrB+qC,EAAQxvC,EAAMyvC,SAAShrC,WACvBirC,EAAO1vC,EAAM2vC,SAASlrC,WAAa,IAAMzE,EAAM4vC,QAAQnrC,WAAa,IAAMzE,EAAM6vC,QAAQprC,WAAa,IAAMzE,EAAM8vC,QAAQrrC,WACzHiiC,EAAKnlC,IAAOvB,EAAM+vC,QAAS,8BAA8BpiC,OAAO,eAChEg5B,EAAKplC,IAAOvB,EAAMgwC,QAAS,8BAA8BriC,OAAO,eAChEmzB,EAASrhC,KAAK4vC,cAEdvC,EAAc,CAChB,WAAcpG,EACd,KAAQ8I,EACR,SAAYxvC,EAAMovC,SAClB,OAAU3vC,KAAKN,MAAM8Q,OACrB,UAAa0N,EAASzN,UACtB,KAAQ,eACR,OAAU5Q,eAAeC,QAAQ,SAGrC,OACI,yBAAKyuC,YAAa,kBAAM,EAAKiC,YAAY1W,aAAc,kBAAM,EAAK2W,YAAYvkC,UAAU,wBAAwBvL,MAAO,CAAE+tC,UAAiC,KAAtB1uC,KAAKN,MAAM8Q,OAAgB,OAAS,OAAQo+B,UAAW,oBAAqBpF,aAAc,oBAAqBtxB,eAAgB,aAC/P,wBAAIhM,UAAU,mCAAmCvL,MAAO,CAAE+tC,UAAiC,KAAtB1uC,KAAKN,MAAM8Q,OAAgB,OAAS,QAAUy2B,EAAnH,MAA0HC,GAC1H,yBAAKvmC,MAAO,CAAEC,QAAS,OAAQ6U,iBAAkB,CAAuB,OAAtBzV,KAAKN,MAAM8Q,aAAyCpO,IAAtBpC,KAAKN,MAAM8Q,QAA8C,KAAtBxQ,KAAKN,MAAM8Q,OAAgB,MAAQ,cAClJ,yBAAK7P,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,iBAAkB4yB,UAAW,SAC7E,yBAAK1nB,UAAU,gCACX,wBAAIA,UAAU,mCAAmCvL,MAAO,CAAEiO,MAAO,QAASG,WAAY,MAAQ+gC,IAElG,yBAAK5jC,UAAU,gCACX,wBAAIA,UAAU,oCAAoC+jC,IAEtD,yBAAK/jC,UAAU,gCACX,wBAAIA,UAAU,oCAAoCm1B,KAG1D,wBAAI1gC,MAAO,CAAEoO,WAAY,IAAKlO,WAAY,SAAU+tC,UAAW,gCAAiCD,WAAY,gCAAiCz2B,eAAgB,WAAYzD,QAAS,UAAW7F,MAAO,eAAgB+F,SAAU,SAAU5T,OAAQ,OAAQH,QAAS,CAAuB,OAAtBZ,KAAKN,MAAM8Q,aAAyCpO,IAAtBpC,KAAKN,MAAM8Q,QAA8C,KAAtBxQ,KAAKN,MAAM8Q,OAAgB,OAAS,MAAQxQ,KAAKN,MAAM8Q,QAC1X,yBAAK7P,MAAOX,KAAKN,MAAMgwC,OACnB,CAAE9uC,QAAkC,GAAzBZ,KAAKN,MAAMC,WAAkB,OAAS,OAAQkB,WAAY,SAAUoS,eAAgB,SAAUyB,SAAU,WAAYwrB,MAAO,EAAGn/B,OAAQ,MAAuBqB,IAAtBpC,KAAKN,MAAM8Q,QAA8C,KAAtBxQ,KAAKN,MAAM8Q,OAAgB,OAAS,QAAS2vB,WAAY,cAAertB,MAAO,QAEpQ,CAAElS,QAAS,SACX,yBAAKsS,QAAS,kBAAM,EAAK27B,cAAcluC,MAAO,CAAEmS,MAA6B,KAAtB9S,KAAKN,MAAM8Q,OAAgB,OAAS,OAAQzP,OAA8B,KAAtBf,KAAKN,MAAM8Q,OAAgB,OAAS,OAAQ0O,aAAc,OAAQihB,WAAY,uBAAwBv/B,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,SAAUmT,OAAQ,YACtR,yBAAK3S,IAAKytC,KAAYvtC,IAAI,kBAItC,kBAAC,GAAD,CAAa8rC,YAAaA,EAAat9B,QAAS/P,KAAKN,MAAMsuC,OAAQj7B,SAAU/S,KAAK8Q,aAAc0E,KAAMxV,KAAKmT,gB,GArIlF3T,cCmC1BkxC,I,wLApCD,IAAD,EACiD1wC,KAAKI,MAAnDkJ,EADH,EACGA,SAAU4U,EADb,EACaA,SAAUyyB,EADvB,EACuBA,WAAY/D,EADnC,EACmCA,UAGlC/B,EADQ,CAAC,2BAAQ,eAAM,eAAM,gBACX5+B,KAAI,SAAU1L,EAAOgD,EAAOqG,GAChD,OACI,wBAAIsC,UAAU,SAAS3L,MAGzBqwC,EAA8BtnC,EAAS2C,KACzC,SAAC1L,EAAOgD,EAAO6B,GAAf,OACI,kBAAC,GAAD,CAA4B8Y,SAAUA,EAAUhe,IAAKqD,EAAOhD,MAAOA,EAAOowC,WAAYA,OAE9F,OACI,6BACI,yBAAKzkC,UAAU,gCACV2+B,GAEL,yBAAKlqC,MAAO,CAAEsX,OAAQ,mCAAoCiH,aAAc,cAAehH,eAAgB,aACnG,yBAAKvX,MAAO,CAAEizB,UAAWgZ,EAAY,sBAAwB,QAASjZ,UAAWiZ,EAAY,sBAAwB,QAASrD,UAAW,SACvG,OAA7B97B,KAAKC,UAAUpE,GACZsnC,EAEA,yBAAKjwC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,yBAChD,yBAAKL,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQC,WAAY,SAAUoS,eAAgB,WAChF25B,EAAY,qBAAQ,0C,GA1BpBptC,cCwLtBqxC,G,2MApLXnxC,MAAQ,CACJoxC,YAAa,CAAE,SAAY,IAC3B3vC,MAAO,2BACPwvC,WAAY,EACZI,UAAW,KACX7pB,OAAQ,KACR6K,OAAQ,KACRzoB,SAAU,I,EAiDd0nC,cAAgB,SAACzwC,GACb,EAAKN,SAAS,CAAEkB,MAAOZ,K,EAE3B0wC,iBAAmB,SAACt6B,GAChB,EAAK1W,SAAS,CAAE8wC,UAAWp6B,EAAMC,OAAOrW,S,EAuB5C2wC,WAAa,SAACC,EAAQ5qB,GAClB,IAAI6B,EAAW7B,EAAO6B,SAClBgpB,EAAY,GAkBhB,OAjBAhpB,EAAS3C,SAAQ,SAAA4C,GACb+oB,EAAU/oB,EAAQnoB,KAAO,MAE7BkxC,EAAU,4BAAU,GAEpBD,EAAO1rB,SAAQ,SAAAsiB,GACX,IAAIQ,EAAUR,EAAMh9B,QACpBqd,EAAS3C,SAAQ,SAAA4C,GACb,IAAMC,EAAK,IAAIC,OAAOF,EAAQG,UAAWH,EAAQI,aAC3CtoB,EAAQooC,EAAQpoC,MAAMmoB,GACd,OAAVnoB,GAA+B,KAAbA,EAAM,IACxBixC,EAAU/oB,EAAQnoB,KAAKoF,KAAKyiC,MAIpCqJ,EAAU,4BAAQ9rC,KAAKyiC,MAEpBqJ,G,EAGXC,cAAgB,WAUU,EAAKjxC,MAAnBwsC,UAVU,IAWVtjC,EAAa,EAAK5J,MAAlB4J,SACF4nC,EAAa,EAAKA,WAElBI,EAbN,SAA6BhoC,EAAU+3B,GACnC,OAAe,IAAXA,EACO/3B,EAEWA,EAAShG,QAAO,SAAUqG,EAAMpG,EAAOqG,GACzD,OAAOhK,OAAO+J,EAAKO,YAAcm3B,KAQtBkQ,CAAoBjoC,EADxB,EAAK5J,MAAMixC,YAGtBa,EAAgB,QACWpvC,IAA3B,EAAK1C,MAAMoxC,cACXU,EAAgBN,EAAWI,EAAY,EAAK5xC,MAAMoxC,cAEtD,IAAIW,EAAeD,EAAc,EAAK9xC,MAAMyB,OAE5C,OADW,EAAKuwC,aAAaD,I,EAIjCC,aAAe,SAACpsB,GAAc,IAAD,EACc,EAAKllB,MAApC4pC,EADiB,EACjBA,gBAAiB4C,EADA,EACAA,UACjBmE,EAAc,EAAKrxC,MAAnBqxC,UACR,GAAkB,OAAdA,EAAoB,CACpB,IAAMY,EAAQ,IAAIppB,OAAOwoB,EAAW,KACpCzrB,EAAWA,EAAShiB,QAAO,SAAAS,GACvB,OAAqC,OAA9BA,EAAKgH,QAAQ5K,MAAMwxC,IAAkD,OAA/B5tC,EAAKisC,SAAS7vC,MAAMwxC,MAIzE,IAAMzrC,EAAiB8jC,EAAgB,GACjC7jC,EAAKymC,EAAY5C,EAAgB,GAAM,MAAuBA,EAAgB,GAEhF4H,EAAatsB,EAAShiB,QAAO,SAAUuB,EAAStB,EAAOqG,GACvD,IAAMlB,EAAY5G,IAAO+C,EAAQyrC,QAAQtrC,WAAWC,OAAQ,8BAA8BI,UACpFsD,EAAU7G,IAAO+C,EAAQ0rC,QAAQvrC,WAAWC,OAAQ,8BAA8BI,UACxF,QAASa,EAAKyC,GAAWxC,EAAKuC,MAWlC,OARI4iC,OAAOC,KAAKqG,GAAYluC,OAAS,IACjCkuC,EAAaA,EAAWpjC,MAAK,SAACC,EAAGC,GAI7B,OAHAxM,QAAQC,MACQL,IAAO2M,EAAE6hC,QAAQtrC,WAAWC,OAAQ,8BAA8BI,UAClEvD,IAAO4M,EAAE4hC,QAAQtrC,WAAWC,OAAQ,8BAA8BI,UACnD,GAAK,MAGrCusC,G,mFApJP5xC,KAAK6xC,YADW,IAER3zB,EAAale,KAAKI,MAAlB8d,SACF3Q,EAAM2Q,EAASzX,MACfwrB,EAAM/T,EAAS8J,OACrBhoB,KAAKC,SAAS,CAAEinB,OAAQ3Z,EAAKwkB,OAAQE,IACrCjyB,KAAK8xC,YAAYvkC,EAAK0kB,K,2CAEJ,IACV/T,EAAale,KAAKI,MAAlB8d,SADS,EAEUle,KAAKN,MAAxBwnB,EAFS,EAETA,OAAQ6K,EAFC,EAEDA,OACVxkB,EAAM2Q,EAASzX,MACfwrB,EAAM/T,EAAS8J,OACjBza,IAAQ2Z,GAAU+K,IAAQF,IAC1B/xB,KAAKC,SAAS,CAAEinB,OAAQ3Z,EAAKwkB,OAAQE,IACrCjyB,KAAK8xC,YAAYvkC,EAAK0kB,M,kCAGjB,IAAD,OACR7nB,GAAwB,cACnBV,MAAK,SAAA3F,GACF,IAAIwiB,EAASxiB,EAAKA,KAAK6jB,MAAK,SAAAld,GAAI,MAAkC,iBAA9BA,EAAKmd,gBAAgBvW,QACzDiV,EAAO6B,SAAP,CAAmB,CAAE,IAAO,2BAAQ,UAAa,OAAjD,oBAA4D7B,EAAO6B,WACnElmB,QAAQC,IAAI,iCAAmCsL,KAAKC,UAAU6Y,IAC9D,EAAKtmB,SAAS,CACV6wC,YAAavqB,OAGpBzc,OAAM,SAAAC,GACH7H,QAAQC,IAAI4H,Q,kCAGZwD,EAAK0kB,EAAK8f,EAAO9T,GAAM,IAAD,OAE9Bx0B,GAAuC8D,EAAK0kB,EAAK,OAC5CvoB,MAAK,SAAA3F,GAKF,EAAK9D,SAAS,CAAEqJ,SAAUvF,EAAKA,UAElC+F,OAAM,SAAAC,GAAS7H,QAAQC,IAAI,iCAAmCsL,KAAKC,UAAU3D,S,yCAYlE,IAAD,OACPioC,EAAWC,KAAXD,OACR,OACI,yBAAKrxC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,mBAAoBC,cAAe,SACnF,kBAAC,KAAD,CAAQ0R,aAAc3S,KAAKN,MAAMyB,MAAOR,MAAO,CAAEmS,MAAO,KAAOF,SAAU5S,KAAKgxC,eACzEhxC,KAAKN,MAAMoxC,YAAY1oB,SAASnc,KAAI,SAACoc,EAAS9kB,GAC3C,OAAO,kBAACyuC,EAAD,CAAQzxC,MAAO8nB,EAAQnoB,KAAMmoB,EAAQnoB,SAGpD,kBAAC,KAAD,CAAQyS,aAAc3S,KAAKN,MAAMixC,WAAYhwC,MAAO,CAAEmS,MAAO,KAAOF,SAAU,SAACrS,GAAY2B,QAAQC,IAAI5B,GAAQ,EAAKN,SAAS,CAAE0wC,WAAYpwC,MACvI,kBAACyxC,EAAD,CAAQzxC,MAAO,GAAf,4BACA,kBAACyxC,EAAD,CAAQzxC,MAAO,IAAf,sBACA,kBAACyxC,EAAD,CAAQzxC,MAAO,IAAf,sBACA,kBAACyxC,EAAD,CAAQzxC,MAAO,IAAf,uBAEJ,kBAAC,KAAD,CAAOoV,GAAG,yBAAyBC,YAAY,6CAAUhD,SAAU5S,KAAKixC,sB,+BAmF1E,IAAD,EAC2BjxC,KAAKI,MAA7BwsC,EADH,EACGA,UAAW1uB,EADd,EACcA,SACXyyB,EAAe3wC,KAAKN,MAApBixC,WAEFrS,EAAat+B,KAAKqxC,gBAExB,OACI,6BACI,yBAAK1wC,MAAO,CAAE2U,gBAAiB,YAAa4J,aAAc,cAAene,OAAQ,OAAQ0T,QAAS,WAAY7T,QAAS,OAAQI,oBAAqB4rC,EAAY,UAAY,MAAO/rC,WAAY,WAE3L,wBAAIF,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBAAqBg+B,EAAY,2BAAS,4BAC/EA,EAAY5sC,KAAKkyC,mBAAqB,MAE3C,kBAAC,GAAD,CAAwBh0B,SAAUA,EAAU5U,SAAUg1B,EAAYqS,WAAYA,EAAY/D,UAAWA,S,GA/K/EptC,aCkIvB2yC,I,kNAlIXzyC,MAAQ,CACJsuC,QAAQ,EACR0B,QAAQ,EACRl/B,OAAQ,EAAKpQ,MAAMuJ,KAAK6G,OACxB7Q,WAAY,G,EAShBwuC,YAAc,WAAO,IACTxkC,EAAS,EAAKvJ,MAAduJ,KACRF,EAAyB,EAAKrJ,MAAM8d,SAASzN,UAAW9G,EAAKse,SAAU,aAAave,MAAK,SAAAa,GACrFrI,QAAQC,IAAI,mBAAqBsL,KAAKC,UAAUnD,IAChD,EAAK2jC,UAAU3jC,EAAOxG,KAAK,GAAGyM,WAC/B1G,OAAM,SAAAC,GACL7H,QAAQC,IAAI,mBAAqBsL,KAAKC,UAAU3D,Q,EAmCxDoJ,SAAW,SAAA86B,GACP,EAAKhuC,SAAS,CACV+tC,QAAQ,EACRx9B,OAAQy9B,K,EAIhBn9B,aAAe,SAAAC,GACX,EAAK9Q,SAAS,CACV+tC,QAAQ,K,EAIhBE,UAAY,SAAC3tC,GACT,EAAKN,SAAS,CACVuQ,YAAkBpO,IAAV7B,EAAsBA,EAAQ,M,mFA7D1C,IAAMR,EAAcF,eAAeC,QAAQ,QAC3CE,KAAKC,SAAS,CAAEN,WAAYI,IAC5BC,KAAKmuC,gB,iCAcDnuC,KAAKN,MAAMsuC,QAIXhuC,KAAKC,SACD,CACIyvC,QAAQ,M,iCAMhB1vC,KAAKN,MAAMsuC,QAIXhuC,KAAKC,SACD,CACIyvC,QAAQ,M,mCAMpB1vC,KAAKC,SACD,CACI+tC,QAAQ,M,+BAuBV,IAAD,WACiBnkC,EAYdF,EAAS3J,KAAKI,MAAduJ,KAEFmmC,EAAOnmC,EAAKwB,SACZinC,EAAKzoC,EAAK0oC,QACVhR,GAhBgBx3B,EAgBMF,EAAKE,SAfJ,KAArBjK,OAAOiK,IAAyC,KAArBjK,OAAOiK,GAC3B,qBAEc,KAArBjK,OAAOiK,GACA,qBAEc,KAArBjK,OAAOiK,GACA,qBAEJA,GAOLyoC,EAAa3oC,EAAK,IAAM3E,WAAWC,OACnCgiC,EAAKnlC,IAAO6H,EAAKwH,QAAQnM,WAAY,cAAckJ,OAAO,SAC1Dg5B,EAAKplC,IAAO6H,EAAK4oC,QAAQvtC,WAAY,cAAckJ,OAAO,SAE1Dm/B,EAAc,CAChB,WAAcpG,EACd,KAAQ6I,EACR,SAAYnmC,EAAKse,SACjB,OAAUjoB,KAAKN,MAAM8Q,OACrB,UAAaxQ,KAAKI,MAAM8d,SAASzN,UACjC,KAAQ,YACR,OAAU5Q,eAAeC,QAAQ,SAGrC,OACI,yBAAKyuC,YAAa,kBAAM,EAAKiC,YAAY1W,aAAc,kBAAM,EAAK2W,YAAYvkC,UAAU,qBAAqBvL,MAAO,CAAE+tC,UAAiC,KAAtB1uC,KAAKN,MAAM8Q,OAAgB,OAAS,OAAQo+B,UAAW,oBAAqBpF,aAAc,sBACvN,wBAAIt9B,UAAU,YAAYvL,MAAO,CAAE+tC,UAAiC,KAAtB1uC,KAAKN,MAAM8Q,OAAgB,OAAS,SAAWy2B,EAA7F,MAAoGC,GACpG,yBAAKvmC,MAAO,CAAEC,QAAS,OAAQ6U,iBAAkB,CAAuB,OAAtBzV,KAAKN,MAAM8Q,aAAyCpO,IAAtBpC,KAAKN,MAAM8Q,QAA8C,KAAtBxQ,KAAKN,MAAM8Q,OAAgB,MAAQ,cAClJ,yBAAK7P,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,sBAChD,wBAAIkL,UAAU,YAAYvL,MAAO,CAAEiO,MAAO,QAASG,WAAY,IAAK4/B,WAAY,qCAAuCmB,GACvH,wBAAI5jC,UAAU,cAAcomC,GAC5B,wBAAIpmC,UAAU,aAAakmC,GAC3B,wBAAIlmC,UAAU,aAAam1B,IAE/B,wBAAIn1B,UAAU,YAAYvL,MAAO,CAAEiuC,UAAW,mCAAoC7/B,WAAY,IAAKH,MAAO,cAAe+F,SAAU,SAAU5T,OAAQ,OAAQH,QAAS,MAAuBwB,IAAtBpC,KAAKN,MAAM8Q,QAA8C,KAAtBxQ,KAAKN,MAAM8Q,OAAgB,OAAS,MAAQxQ,KAAKN,MAAM8Q,QACjQ,yBAAK7P,MAAOX,KAAKN,MAAMgwC,OACnB,CAAE9uC,QAAkC,GAAzBZ,KAAKN,MAAMC,WAAkB,OAAS,OAAQsT,eAAgB,SAAUpS,WAAY,SAAU6T,SAAU,WAAYwrB,MAAO,EAAGn/B,OAAQ,EAAuB,OAAtBf,KAAKN,MAAM8Q,aAAyCpO,IAAtBpC,KAAKN,MAAM8Q,QAAwBxQ,KAAKN,MAAM8Q,OAAgB,SAAkB2vB,WAAY,cAAertB,MAAO,QAElS,CAAElS,QAAS,SACX,yBAAKsS,QAAS,kBAAM,EAAK27B,cAAcluC,MAAO,CAAEmS,MAA6B,KAAtB9S,KAAKN,MAAM8Q,OAAgB,OAAS,OAAQzP,OAA8B,KAAtBf,KAAKN,MAAM8Q,OAAgB,OAAS,OAAQ0O,aAAc,OAAQihB,WAAY,uBAAwBv/B,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,SAAUmT,OAAQ,YACtR,yBAAK3S,IAAKytC,KAAYvtC,IAAI,kBAItC,kBAAC,GAAD,CAAa8rC,YAAaA,EAAat9B,QAAS/P,KAAKN,MAAMsuC,OAAQj7B,SAAU/S,KAAK8Q,aAAc0E,KAAMxV,KAAKmT,gB,GA9HrF3T,cCsCvBgzC,I,wLAxCD,IAAD,EACiDxyC,KAAKI,MAAnDqyC,EADH,EACGA,SAAUv0B,EADb,EACaA,SAAsB0uB,GADnC,EACuB3xB,WADvB,EACmC2xB,WAExC,GAAiB,OAAb6F,QAAkCrwC,IAAbqwC,EACrB,OAAO,KAGX,IAAMC,EAA8BD,EAASxmC,KACzC,SAACtC,EAAMpG,GAAP,OAAiB,kBAAC,GAAD,CAAyB2a,SAAUA,EAAUhe,IAAKqD,EAAOoG,KAAMA,OAI9EkhC,EADa,CAAC,2BAAQ,2BAAQ,2BAAQ,eAAM,gBACrB5+B,KAAI,SAAUtC,EAAMpG,GAC7C,OACI,wBAAI2I,UAAU,+BAA+BhM,IAAKqD,GAAQoG,MAIlE,OACI,6BACI,yBAAKuC,UAAU,uBACV2+B,GAEL,yBAAKlqC,MAAO,CAAEsX,OAAQ,mCAAoCiH,aAAc,cAAehH,eAAgB,aACnG,yBAAKvX,MAAO,CAAEizB,UAAWgZ,EAAY,sBAAwB,QAASjZ,UAAWiZ,EAAY,sBAAwB,QAASrD,UAAW,SACvG,OAA7B97B,KAAKC,UAAU+kC,GACZC,EAEA,yBAAK/xC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,4BAChD,yBAAKL,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQC,WAAY,SAAUoS,eAAgB,WAChF25B,EAAY,qBAAQ,0C,GA/BvBptC,cCsMnBmzC,G,2MAlMXjzC,MAAQ,CAEJ6mB,OAAQ,CAAE,SAAY,IACtBqsB,cAAe,GACfzxC,MAAO,2BACPwvC,WAAY,EACZI,UAAW,GACX7pB,OAAQ,KACR6K,OAAQ,KACR1oB,SAAU,I,EA2Cd2nC,cAAgB,SAACzwC,GACb,EAAKN,SAAS,CAAEkB,MAAOZ,K,EAG3BsyC,aAAe,SAACtyC,GACZ,EAAKN,SAAS,CAAE0wC,WAAYpwC,K,EAGhC0wC,iBAAmB,SAACt6B,GAChB,EAAK1W,SAAS,CAAE8wC,UAAWp6B,EAAMC,OAAOrW,S,EAG5CuyC,WAAa,WAAM,IAEPd,EAAWC,KAAXD,OAER,OACI,yBAAKrxC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,mBAAoBC,cAAe,SACnF,kBAAC,KAAD,CAAQ0R,aAAc,EAAKjT,MAAMyB,MAAOR,MAAO,CAAEmS,MAAO,KAAOF,SAAU,EAAKo+B,eACzE,EAAKtxC,MAAM6mB,OAAO6B,SAASnc,KAAI,SAACoc,EAAS9kB,GACtC,OAAO,kBAACyuC,EAAD,CAAQ9xC,IAAKqD,EAAOhD,MAAO8nB,EAAQnoB,KAAMmoB,EAAQnoB,SAGhE,kBAAC,KAAD,CAAQyS,aAAc,EAAGhS,MAAO,CAAEmS,MAAO,KAAOF,SAAU,EAAKigC,cAC3D,kBAACb,EAAD,CAAQzxC,MAAO,GAAf,4BACA,kBAACyxC,EAAD,CAAQzxC,MAAO,GAAf,sBACA,kBAACyxC,EAAD,CAAQzxC,MAAO,GAAf,sBACA,kBAACyxC,EAAD,CAAQzxC,MAAO,GAAf,uBAEJ,kBAAC,KAAD,CAAOqV,YAAY,6CAAUrV,MAAO,EAAKb,MAAMqxC,UAAWn+B,SAAU,EAAKq+B,qB,EAMrFx6B,MAAQ,SAAC06B,EAAQ5qB,GACb,IAAI6B,EAAW7B,EAAO6B,SAClBgpB,EAAY,GAkBhB,OAjBAhpB,EAAS3C,SAAQ,SAAA4C,GACb+oB,EAAU/oB,EAAQnoB,KAAO,MAE7BkxC,EAAU,4BAAU,GAEpBD,EAAO1rB,SAAQ,SAAAsiB,GACX,IAAIQ,EAAUR,EAAM58B,SACpBid,EAAS3C,SAAQ,SAAA4C,GACb,IAAMC,EAAK,IAAIC,OAAOF,EAAQG,UAAWH,EAAQI,aAC3CtoB,EAAQooC,EAAQpoC,MAAMmoB,GACd,OAAVnoB,GAA+B,KAAbA,EAAM,IACxBixC,EAAU/oB,EAAQnoB,KAAKoF,KAAKyiC,MAIpCqJ,EAAU,4BAAQ9rC,KAAKyiC,MAEpBqJ,G,EAGXC,cAAgB,WAAM,IAiBVoB,EAAa,EAAKryC,MAAlBqyC,SACA9B,EAAe,EAAKjxC,MAApBixC,WACFl6B,EAAQ,EAAKA,MAEb66B,EApBN,SAA2BmB,EAAUpR,GACjC,OAAe,IAAXA,EACOoR,EAEYA,EAASnvC,QAAO,SAAUqG,EAAMpG,EAAOqG,GAC1D,OAAe,IAAXy3B,EACiC,KAA1BzhC,OAAO+J,EAAKE,WAA8C,KAA1BjK,OAAO+J,EAAKE,UAExC,IAAXw3B,EACiC,KAA1BzhC,OAAO+J,EAAKE,UAEU,KAA1BjK,OAAO+J,EAAKE,aASRkpC,CAAkBN,EAAU9B,GAC/CzuC,QAAQC,IAAI,cAAgBsL,KAAKC,UAAU4jC,IAE3C,IAAIE,EAAgB,QACMpvC,IAAtB,EAAK1C,MAAM6mB,SACXirB,EAAgB/6B,EAAM66B,EAAY,EAAK5xC,MAAM6mB,SAIjD,IAAIkrB,EAAeD,EAAc,EAAK9xC,MAAMyB,OAI5C,OAFiB,EAAKuwC,aAAaD,I,EAKvCC,aAAe,SAACpsB,GAAc,IAAD,EACc,EAAKllB,MAApC4pC,EADiB,EACjBA,gBAAiB4C,EADA,EACAA,UACjBmE,EAAc,EAAKrxC,MAAnBqxC,UAER,GAAkB,KAAdA,EAAkB,CAClB,IAAMY,EAAQ,IAAIppB,OAAOwoB,EAAW,KACpCzrB,EAAWA,EAAShiB,QAAO,SAAAS,GACvB,OAAsC,OAA/BA,EAAKoH,SAAShL,MAAMwxC,MAInC,IAAMzrC,EAAiB8jC,EAAgB,GACjC7jC,EAAKymC,EAAY5C,EAAgB,GAAM,MAAuBA,EAAgB,GAEhF4H,EAAatsB,EAAShiB,QAAO,SAAUuB,EAAStB,EAAOqG,GACvD,IAAMlB,EAAY5G,IAAO+C,EAAQsM,QAAQnM,WAAWC,OAAQ,cAAcI,UACpEsD,EAAU7G,IAAO+C,EAAQ0tC,QAAQvtC,WAAWC,OAAQ,cAAcI,UACxE,QAASa,EAAKyC,GAAWxC,EAAKuC,MAUlC,OAPI4iC,OAAOC,KAAKqG,GAAYluC,OAAS,IACjCkuC,EAAaA,EAAWpjC,MAAK,SAACC,EAAGC,GAG7B,OAFgB5M,IAAO2M,EAAE0C,QAAQnM,WAAWC,OAAQ,cAAcI,UAClDvD,IAAO4M,EAAEyC,QAAQnM,WAAWC,OAAQ,cAAcI,UACnC,GAAK,MAGrCusC,G,mFAjKP5xC,KAAK6xC,YADW,IAER3zB,EAAale,KAAKI,MAAlB8d,SACF3Q,EAAM2Q,EAASzX,MACfwrB,EAAM/T,EAAS8J,OACrBhoB,KAAKC,SAAS,CAAEinB,OAAQ3Z,EAAKwkB,OAAQE,IACrCjyB,KAAKgzC,eAAezlC,EAAK0kB,K,2CAEP,IACV/T,EAAale,KAAKI,MAAlB8d,SADS,EAEUle,KAAKN,MAAxBwnB,EAFS,EAETA,OAAQ6K,EAFC,EAEDA,OACVxkB,EAAM2Q,EAASzX,MACfwrB,EAAM/T,EAAS8J,OACjBza,IAAQ2Z,GAAU+K,IAAQF,IAC1B/xB,KAAKC,SAAS,CAAEinB,OAAQ3Z,EAAKwkB,OAAQE,IACrCjyB,KAAKgzC,eAAezlC,EAAK0kB,M,kCAKpB,IAAD,OACR7nB,GAAwB,cACnBV,MAAK,SAAA3F,GACF,IAAIwiB,EAASxiB,EAAKA,KAAK6jB,MAAK,SAAAld,GAAI,MAAkC,cAA9BA,EAAKmd,gBAAgBvW,QACzDiV,EAAO6B,SAAP,CAAmB,CAAE,IAAO,2BAAQ,UAAa,OAAjD,oBAA4D7B,EAAO6B,WACnElmB,QAAQC,IAAI,8BAAgCsL,KAAKC,UAAU6Y,IAC3D,EAAKtmB,SAAS,CACVsmB,OAAQA,OAGfzc,OAAM,SAAAC,GACH7H,QAAQC,IAAI4H,Q,qCAGTwD,EAAK0kB,GAAM,IAAD,OACrBxoB,GAAuC8D,EAAK0kB,GACvCvoB,MAAK,SAAA3F,GAAU,EAAK9D,SAAS,CAAEoJ,SAAUtF,EAAKA,UAC9C+F,OAAM,SAAAC,GAAS7H,QAAQC,IAAI,iCAAmCsL,KAAKC,UAAU3D,S,+BAgI5E,IAAD,EAC2B/J,KAAKI,MAA7BwsC,EADH,EACGA,UAAW1uB,EADd,EACcA,SAEbogB,EAAat+B,KAAKqxC,gBAExB,OACI,6BACI,yBAAK1wC,MAAO,CAAE2U,gBAAiB,YAAa4J,aAAc,cAAene,OAAQ,OAAQ0T,QAAS,WAAY7T,QAAS,OAAQI,oBAAqB4rC,EAAY,UAAY,MAAO/rC,WAAY,WAC3L,wBAAIF,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBAAqBg+B,EAAY,2BAAS,4BAC/EA,EAAY5sC,KAAK8yC,aAAe,MAErC,kBAAC,GAAD,CAAqB50B,SAAUA,EAAUu0B,SAAUnU,EAAYsO,UAAWA,S,GA7LvDptC,aCwBpByzC,G,0LAzBOC,GAId,OAAO,IAAIl8B,KAAKk8B,GAAY94B,cAAgB,KAAkB,IAAIpD,KAAKk8B,GAAYh6B,WAFhE,GAE8E,IAAM,IAAIlC,KAAKk8B,GAAY/5B,UAAY,IAAM,IAAInC,KAAKk8B,GAAYr0B,WAAa,IAAM,IAAI7H,KAAKk8B,GAAYp0B,e,+BAErM,IACEnV,EAAS3J,KAAKI,MAAduJ,KACFsV,EAAOtV,EAAKwpC,aAAe,qBAAQnzC,KAAKozC,kBAAkBzpC,EAAKupC,YAAc,eAEnF,OACI,yBAAKvyC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,WAAY4yB,UAAW,SACvE,yBAAKjzB,MAAO,CAAE0yC,UAAW,YAAarkC,SAAU,SAAUpO,QAAS,OAAQC,WAAY,WAAa8I,EAAK5F,MACzG,yBAAKpD,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WACjE,kBAAC,KAAD,CAAS+W,UAAU,QAAQ7U,MAAOkc,GAC9B,6BACI,yBAAK5d,IAAK+d,KAAY7d,IAAI,uB,GAlB/B/B,aC+IR8zC,G,2MA5IX5zC,MAAQ,CACJC,WAAY,EACZke,UAAU,EACVxH,aAAc,GACdk9B,SAAU,GACVt4B,WAAYnZ,IAAOA,MAASoM,OAAO,YAAa,YAAY7I,W,mFAI5D,IAAMtF,EAAcF,eAAeC,QAAQ,QAC3CE,KAAKC,SAAS,CAAEN,WAAYI,IAC5BC,KAAKwzC,YAAYxzC,KAAKI,MAAM8d,SAASzN,UAAWzQ,KAAKI,MAAM8d,SAASzX,MAAOzG,KAAKN,MAAMub,c,2CAGtF,IAAMw4B,EAAWzzC,KAAKI,MAAM6a,WAExBw4B,IADczzC,KAAKN,MAAMub,aAEzBjb,KAAKC,SAAS,CAAEgb,WAAYw4B,IAC5BzzC,KAAKwzC,YAAYxzC,KAAKI,MAAM8d,SAASzN,UAAWzQ,KAAKI,MAAM8d,SAASzX,MAAOgtC,M,kCAGvEC,EAASjtC,EAAOg0B,GAAa,IAAD,OAGpChxB,EAAgCiqC,EAASjtC,EAF9B3E,IAAOA,IAAO24B,GAAYvsB,OAAO,YAAa,YAAY7I,UAC1DvD,IAAOA,IAAO24B,GAAYvsB,OAAO,YAAa,YAAY7I,UAAa,OAE7EqE,MAAK,SAAAa,GACFrI,QAAQC,IAAI,0BAA4BsL,KAAKC,UAAUnD,IACvD,EAAKtK,SAAS,CACVszC,SAAUhpC,EAAOxG,UAGxB+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,0BAA4BsL,KAAKC,UAAU3D,S,oCAGrD4M,GACV3W,KAAKC,SAAS,CAAEoW,aAAcM,EAAMC,OAAOrW,U,yCAG3CP,KAAKC,SACD,CACI4d,UAAW7d,KAAKN,MAAMme,a,qCAUlB,IAAD,OACLU,GAAa,IAAIvH,MAAOwH,cACxB1H,EAAMjX,eAAeC,QAAQ,SvDskBpC,SAAsB0F,EAAO4C,EAASC,EAAM7B,EAAWsQ,GAC5D,IAAMxO,EAAO,CACX9C,MAAOA,EACP4C,QAASA,EACTC,KAAMA,EACN7B,UAAWA,EACXsQ,IAAKA,GAEP,OAAOrR,IAAM8C,KAAK,sBAAuBD,IuD7kBnCmB,CAAyBzJ,KAAKI,MAAM8d,SAASzX,MAAOzG,KAAKN,MAAM2W,aAAckI,EAAYve,KAAKI,MAAM8d,SAASzN,UAAWqG,GACnHpN,MAAK,SAAA3F,GACF,EAAKyvC,YAAY,EAAKpzC,MAAM8d,SAASzN,UAAW,EAAKrQ,MAAM8d,SAAS8J,OAAQ,EAAK5nB,MAAM6a,eAE1FnR,OAAM,SAAAC,GACH7H,QAAQC,IAAI,QAAUsL,KAAKC,UAAU3D,OAE7C/J,KAAKC,SACD,CACI4d,UAAU,EACVxH,kBAAcjU,M,sCAKtBpC,KAAKC,SACD,CACI4d,UAAU,M,oCAIP,IAAD,OAEV,OADa7d,KAAKI,MAAMkX,WAGhB,yBAAKpE,QAAS,kBAAM,EAAKoM,oBAAoB3e,MAAO,CAAEC,QAAkC,GAAzBZ,KAAKN,MAAMC,WAAkB,OAAS,OAAQqU,OAAQ,YACjH,yBAAK3S,IAAK4S,KAAU1S,IAAI,cAI7B,O,+BAED,IAAD,OACD0I,EAAWjK,KAAKN,MAAM6zC,SAEtBjI,OAAOC,KAAKthC,GAAUvG,OAAS,IAC/BuG,EAAWA,EAASuE,MAAK,SAACC,EAAGC,GAGzB,OAFgB5M,IAAO2M,EAAEpG,KAAM,kCAAkChD,UACjDvD,IAAO4M,EAAErG,KAAM,kCAAkChD,UAClC,GAAK,MAI5C,IAAMsuC,EAAW1pC,EAASgC,KAAI,SAACtC,EAAMpG,GACjC,IAAM8E,EAAOvG,IAAO6H,EAAKtB,KAAM,kCAAkC6F,OAAO,uBAClEqJ,EAAYzV,IAAO0V,IAAInP,GAAMoP,SAC7Bm8B,EAAU,CACZC,aAAclqC,EAAKmN,IACnBo8B,WAAYpxC,IAAOyV,GAAWrJ,OAAO,uBACrCnK,KAAM4F,EAAKvB,SAEf,OAAO,kBAAC,GAAD,CAAUlI,IAAKqD,EAAOoG,KAAMiqC,OAEjCr0B,EAAavf,KAAKwf,cACxB,OACI,6BACI,yBAAK7e,MAAO,CAAE2U,gBAAiB,YAAa4J,aAAc,cAAene,OAAQ,OAAQ0T,QAAS,WAAY7T,QAAS,OAAQC,WAAY,SAAUoS,eAAgB,kBACjK,wBAAItS,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBAAqB5O,KAAKI,MAAM2C,OACrEwc,GAEL,yBAAK5e,MAAO,CAAEsX,OAAQ,mCAAoCiH,aAAc,cAAehH,eAAgB,WAAYzD,QAAS,aACxH,yBAAK9T,MAAO,CAAEgzB,UAAW,QAASC,UAAW,QAAS2V,UAAW,SAC/B,OAA7B97B,KAAKC,UAAUzD,GAAqB,yBAAKtJ,MAAO,CAAEizB,UAAW,QAASD,UAAW,QAAShf,SAAU,SAChGg/B,GAED,yBAAKhzC,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQC,WAAY,WAA3D,mCAIR,yBAAKF,MAAO,CAAEC,QAASZ,KAAKN,MAAMme,SAAW,QAAU,SACnD,yBAAKld,MAAO,CAAE8T,QAAS,WAAY7T,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WACtF,kBAAC,KAAD,CAAO+U,YAAY,uCAASrV,MAAOP,KAAKN,MAAM2W,aAAczD,SAAU5S,KAAKsW,cAAcC,KAAKvW,SAElG,yBAAKW,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WACjE,yBAAKF,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaC,cAAe,SAC5E,kBAAC,KAAD,CAAQiS,QAAS,kBAAM,EAAKwM,kBAA5B,gBACA,kBAAC,KAAD,CAAQxM,QAAS,kBAAM,EAAKyM,gBAAgBlc,KAAK,WAAjD,yB,GAnIbjE,aCQJs0C,G,iLATP,OACI,yBAAKnzC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWC,cAAe,SAC1E,kBAAC,GAAD,CAAqBqK,OAAQtL,KAAKI,MAAMkL,OAAQ2P,WAAYjb,KAAKI,MAAM6a,WAAYlY,MAAM,eAAKmb,SAAUle,KAAKI,MAAM8d,SAAU5G,WAAYtX,KAAKI,MAAMkX,aACpJ,kBAAC,GAAD,CAAMvU,MAAM,eAAKkY,WAAYjb,KAAKI,MAAM6a,WAAYiD,SAAUle,KAAKI,MAAM8d,SAAUna,KAAM/D,KAAKI,MAAMsjB,WAAYpM,WAAYtX,KAAKI,MAAMkX,kB,GALrH9X,aC0DnBu0C,G,2MAxDXr0C,MAAQ,CACJkzB,SAAU,I,mFAIV5yB,KAAKg0C,c,kCAGI,IAAD,OACRvqC,GAAuBzJ,KAAKI,MAAM8d,SAASzN,UAAWzQ,KAAKI,MAAM8d,SAAS8J,QACrEte,MAAK,SAAAa,GACFrI,QAAQC,IAAI,iBAAmBsL,KAAKC,UAAUnD,EAAOxG,OACrD,EAAK9D,SAAS,CACV2yB,SAAUroB,EAAOxG,UAGxB+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,iBAAmBsL,KAAKC,UAAU3D,S,uCAKtD,OAAmC,IAA/B/J,KAAKN,MAAMkzB,SAASlvB,OAGhB,yBAAK/C,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQC,WAAY,WAA3D,wCAKGb,KAAKN,MAAMkzB,SAAS3mB,KAAI,SAACvB,EAAMnH,GAClC,MAAkB,uBAAdmH,EAAKjH,KACG,kBAAC,GAAD,CAAsBvD,IAAKqD,EAAOmH,KAAMA,EAAM+mB,aAAa,IAE3D,kBAAC,GAAD,CAAsBvxB,IAAKqD,EAAOmH,KAAMA,EAAM+mB,aAAa,S,+BAQ/E,IAAMwiB,EAAiBj0C,KAAKi0C,eAAe19B,KAAKvW,MAChD,OACI,6BACI,yBAAKW,MAAO,CAAE2U,gBAAiB,YAAa8N,oBAAqB,MAAOC,qBAAsB,MAAOtiB,OAAQ,OAAQ0T,QAAS,WAAY7T,QAAS,OAAQC,WAAY,WACnK,wBAAIF,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBAAtC,6BAEJ,yBAAKjO,MAAO,CAAEsX,OAAQ,gCAAiCiH,aAAc,cAAehH,eAAgB,WAAYzD,QAAS,aACpHw/B,U,GAlDUz0C,aCoOhB00C,I,kNAtNXx0C,MAAQ,CACJy0C,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5BxtB,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,QAAS,GACT1d,SAAU,GACVD,SAAU,GAEV4R,WAAYnZ,IAAOA,MAASoM,OAAO,aAAa7I,UAEhD+uC,eAAgB,EAEhBriB,OAAQ,KACR7K,OAAQ,KACRmtB,WAAW,G,EAoHf/4B,iBAAmB,SAACyjB,GAChB,EAAK9+B,SAAS,CAAEk0C,WAAYpV,K,EAGhCuV,qBAAuB,SAACC,GACpB,EAAKt0C,SAAS,CAAEgb,WAAYs5B,K,mFAtH5B,IAAMtiB,EAAMjyB,KAAKI,MAAM8d,SAAS8J,OAC1Bza,EAAMvN,KAAKI,MAAM8d,SAASzX,MAC1B2gB,EAAOtlB,IAAO9B,KAAKI,MAAM8d,SAASxN,UAAW,YAAYrL,UAC/DrF,KAAKC,SAAS,CACV8xB,OAAQE,EACR/K,OAAQ3Z,IAEZvN,KAAKw0C,WAAWx0C,KAAKN,MAAMub,WAAYgX,EAAK1kB,EAAK6Z,K,2CAGjD,IAAM6K,EAAMjyB,KAAKI,MAAM8d,SAAS8J,OAC1Bza,EAAMvN,KAAKI,MAAM8d,SAASzX,MAC1B2gB,EAAOtlB,IAAO9B,KAAKI,MAAM8d,SAASxN,UAAW,YAAYrL,UAH9C,EAIUrF,KAAKN,MAAxBqyB,EAJS,EAITA,OAAQ7K,EAJC,EAIDA,OACZ6K,IAAWE,GAAO/K,IAAW3Z,IAC7BvN,KAAKC,SAAS,CACV8xB,OAAQE,EACR/K,OAAQ3Z,IAEZvN,KAAKw0C,WAAWx0C,KAAKN,MAAMub,WAAYgX,EAAK1kB,EAAK6Z,M,iCAG9CqtB,EAAUxiB,EAAK1kB,EAAK6Z,GAAO,IAAD,OAOjC,IAAME,EAAcxlB,IAAOslB,GAAMlZ,OAAO,cAClCqZ,EAPN,SAA6BktB,GACzB,IAAMjtB,GAAoB,IAAIxQ,MAAO0D,UAAY+5B,EAGjD,OADiB9wC,SAAS6jB,EADH,QACyC,EAI9CC,CAAoBgtB,GAC1Cz0C,KAAKC,SAAS,CAAEo0C,WAAW,IAC3B,IAAMK,EAASjrC,GAAuC8D,EAAK+Z,GACtD5d,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CACV0mB,SAAU5iB,EAAKA,UAGtB+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,iCAAmCsL,KAAKC,UAAU3D,OAEhE4qC,EAAUlrC,GAAuC8D,EAAK+Z,GACvD5d,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CAAE2mB,SAAU7iB,EAAKA,UAElC+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,iCAAmCsL,KAAKC,UAAU3D,OAEhE6qC,EAAUnrC,GAAuC8D,EAAK+Z,GACvD5d,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CACV4mB,SAAU9iB,EAAKA,UAGtB+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,iCAAmCsL,KAAKC,UAAU3D,OAEhE8qC,EAASprC,EAAuC8D,EAAK+Z,GACtD5d,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CACV6mB,SAAU/iB,EAAKA,UAGtB+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,iCAAmCsL,KAAKC,UAAU3D,OAEhE+qC,EAAUrrC,GAAuC8D,EAAK+Z,GACvD5d,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CACV8mB,SAAUhjB,EAAKA,UAGtB+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,iCAAmCsL,KAAKC,UAAU3D,OAEhEgrC,EAAUtrC,GAAsC8D,EAAKga,EAAe,MAAO,YAC5E7d,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CACV+mB,QAASjjB,EAAKA,UAGrB+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,gCAAkCsL,KAAKC,UAAU3D,OAG/DirC,EAASvrC,GAAuC8D,EAAK0kB,EAAK,OAC3DvoB,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CACVqJ,SAAUvF,EAAKA,UAGtB+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,iCAAmCsL,KAAKC,UAAU3D,OAEhEkrC,EAASxrC,GAAuC8D,EAAK0kB,GACtDvoB,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CACVoJ,SAAUtF,EAAKA,UAGtB+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,iCAAmCsL,KAAKC,UAAU3D,OAGtEM,QAAQC,IAAI,CAACuqC,EAAQH,EAAQE,EAASD,EAASG,EAASC,EAASE,EAAQD,IACpEtrC,MAAK,WACF,EAAKzJ,SAAS,CAAEo0C,WAAW,OAE9BvqC,OAAM,WACH,EAAK7J,SAAS,CAAEo0C,WAAW,S,mCAY1BhlC,GAKT,OAJarP,KAAKN,MAAMy0C,WACNvpC,MAAK,SAAUF,EAAMnH,EAAO6B,GAC1C,OAAOsF,IAAS2E,O,+BAKpB,IAsBQ6O,EAAale,KAAKI,MAAlB8d,SACFg3B,EAAsBl1C,KAAKN,MAAMub,WACjCtS,EAAUusC,EAAuB,OAEjClL,EAAkB,CAACkL,EAAuB,OAA0BA,GAEpEC,EAAe,CAACxsC,EAAW,MAAsBA,GACjDysC,EAAiB,CAACzsC,EAAW,OAA0BA,GAE7D,OAAO3I,KAAKN,MAAM20C,UACX,kBAAC,KAAD,CAAM5wC,KAAK,YAEV,6BACI,kBAAC,GAAD,CAAYya,SAAUA,EAAUjD,WAAYjb,KAAKN,MAAMub,WAAYmkB,mBAAoBp/B,KAAKs0C,qBAAsBz7B,eAAgB7Y,KAAKsb,iBAAkBmlB,QAnCrI,CAC5B,CACI,KAAQ,2BACR,YAAe,eAEnB,CACI,KAAQ,eACR,YAAe,OAEnB,CACI,KAAQ,2BACR,YAAe,MAEnB,CACI,KAAQ,qBACR,YAAe,SAEnB,CACI,KAAQ,uCACR,YAAe,aAgBgL1B,WAAY/+B,KAAKN,MAAMy0C,aAClN,yBAAKx+B,GAAG,cAAczJ,UAAU,sBAC5B,yBAAKyJ,GAAI,cAAehV,MAAOX,KAAKq1C,aAAa,GAAK,CAAEz0C,QAAS,OAAQI,oBAAqB,YAAaozB,QAAS,OAAQ5P,aAAc,QAAW,CAAE5jB,QAAS,SAC5J,kBAAC,GAAD,CAAWqa,WAAYjb,KAAKN,MAAMub,WAAYiD,SAAUA,IACxD,kBAAC,GAAD,CAAejD,WAAYjb,KAAKN,MAAMub,WAAYiD,SAAUA,EAAUnb,MAAM,wBAEhF,yBAAK4S,GAAI,MAAOhV,MAAOX,KAAKq1C,aAAa,GAAK,CAAEz0C,QAAS,OAAQI,oBAAqB,cAAeozB,QAAS,QAAW,CAAExzB,QAAS,SAChI,kBAAC,GAAD,CAAeqa,WAAYjb,KAAKN,MAAMub,WAAYiD,SAAUA,EAAU2I,SAAU7mB,KAAKN,MAAMmnB,SAAUD,SAAU5mB,KAAKN,MAAMknB,SAAUE,SAAU9mB,KAAKN,MAAMonB,SAAUC,SAAU/mB,KAAKN,MAAMqnB,SAAUJ,SAAU3mB,KAAKN,MAAMinB,SAAUK,QAAShnB,KAAKN,MAAMsnB,UACrP,kBAAC,GAAD,CAAkB9I,SAAUA,EAAU8rB,gBAAiBA,KAE3D,yBAAKr0B,GAAI,KAAMhV,MAAOX,KAAKq1C,aAAa,GAAK,CAAEz0C,QAAS,OAAQI,oBAAqB,cAAeozB,QAAS,OAAQvhB,OAAQ,oBAAuB,CAAEjS,QAAS,SAC3J,kBAAC,GAAD,CAAKsd,SAAUA,EAAU8rB,gBAAiBA,EAAiB4C,WAAW,IACtE,kBAAC,GAAD,CAAW1uB,SAAUA,EAAU8rB,gBAAiBoL,EAAgBxI,WAAW,KAE/E,yBAAKj3B,GAAI,QAAShV,MAAOX,KAAKq1C,aAAa,GAAK,CAAEz0C,QAAS,OAAQI,oBAAqB,cAAeozB,QAAS,OAAQvhB,OAAQ,oBAAuB,CAAEjS,QAAS,SAC9J,kBAAC00C,GAAD,CAAyBhsC,SAAUtJ,KAAKN,MAAM4J,SAAU4U,SAAUA,EAAU0uB,WAAW,EAAO5C,gBAAiBmL,IAC/G,kBAACI,GAAD,CAAsB9C,SAAUzyC,KAAKN,MAAM2J,SAAU6U,SAAUA,EAAU0uB,WAAW,EAAO5C,gBAAiBmL,KAEhH,yBAAKx/B,GAAI,WAAYhV,MAAOX,KAAKq1C,aAAa,GAAK,CAAExiC,OAAQ,oBAAuB,CAAEjS,QAAS,SAC3F,kBAAC,GAAD,CAAqB0K,OAAQ,EAAG2P,WAAYjb,KAAKN,MAAMub,WAAY3D,YAAY,EAAO4G,SAAUA,KAEpG,yBAAKvd,MAAOX,KAAKq1C,aAAa,GAAK,CAAExiC,OAAQ,oBAAuB,CAAEjS,QAAS,SAC3E,kBAAC,GAAD,CAAkBsd,SAAUA,W,GA/MvB1e,cCClBg2C,G,iLAdD,IAAD,EACmDx1C,KAAKI,MAArD2C,EADH,EACGA,MAAOmb,EADV,EACUA,SAAUqjB,EADpB,EACoBA,eAAgBtmB,EADpC,EACoCA,WACzC,OACI,yBAAKta,MAAO,CAAE4Y,UAAW,SAErB,yBAAK5Y,MAAO,CAAE2U,gBAAiB,YAAa8N,oBAAqB,MAAOC,qBAAsB,MAAOtiB,OAAQ,OAAQ0T,QAAS,WAAY7T,QAAS,OAAQC,WAAY,WACnK,wBAAIF,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBAAqB7L,IAE/D,kBAAC,GAAD,CAAQmb,SAAUA,EAAUmjB,OAAQ,UAAWE,eAAgBA,EAAgBtmB,WAAYA,S,GAT9Ezb,a,UCgHdi2C,G,2MA7GX/1C,MAAQ,CACJg2C,kBAAmB,KACnBC,SAAS,EACTC,UAAW,M,EAgDf9N,cAAgB,SAAC+N,EAAY9N,EAAOC,GAChC,IAAM8N,EAAiBh0C,IAAOimC,EAAM52B,QAAS,cAAc9L,UAC3D,OAAO2iC,EAAQpgB,MAAK,SAAAjG,GAAC,OACjBk0B,EAAW11C,MAAMwhB,EAAEo0B,gBACdp0B,EAAEkG,gBAAgBugB,YAAc0N,GAAkBn0B,EAAEkG,gBAAgBugB,gB,EAGjF3xB,MAAQ,SAACsxB,EAAOxhB,GACZ,IAAI6B,EAAW7B,EAAO6B,SAClB7d,EAAS,GAMb,OALA6d,EAAS3C,SAAQ,SAAA4C,GACb,IAAMC,EAAK,IAAIC,OAAOF,EAAQG,UAAWH,EAAQI,aAC3CtoB,EAAQ4nC,EAAM5nC,MAAMmoB,GAC1B/d,EAAO8d,EAAQnoB,KAAOC,GAASA,EAAMkoB,EAAQ3T,aAE1CnK,G,EAEXi+B,UAAY,SAACC,EAAUliB,GACnB,IAAIshB,EAActhB,EAAOmiB,QACzB,IAAK,IAAMxoC,KAAOuoC,EAAU,CACxB,IAAIE,EAAiBd,EAAY1nC,MAAMooB,OAAO,MAAQroB,EAAM,iBACxD0oC,EAAW,GACXD,GAA4C,IAA1BA,EAAejlC,SACjCklC,EAAWD,EAAe,IAE9B,IAAMxoC,EAAQ0nC,EAAY1nC,MAAMooB,OAAO,MAAQroB,EAAM,eACrD2nC,EAAcA,EAAYgB,QAAQ1oC,EAAM,GAAIA,EAAM,GAAG0oC,QAAQ1oC,EAAM,GAAIsoC,EAASvoC,IAAQ0oC,IAE5F,OAAOf,G,oFAzEoB7nC,KAAKI,MAAxB41C,iBACsBh2C,KAAKN,MAA3Bg2C,mBAEJxzC,QAAQC,IAAI,gD,0CAGC,IACT6zC,EAAmBh2C,KAAKI,MAAxB41C,eACRh2C,KAAKC,SAAS,CAAEy1C,kBAAmBM,IACnC9zC,QAAQC,IAAI,6CACZnC,KAAKi2C,W,+BAEC,IAAD,SACgCj2C,KAAKI,MAAlC81C,EADH,EACGA,eAAgBh4B,EADnB,EACmBA,SAClB6J,EAAOmuB,EAAenuB,KAAK/iB,WAAWC,OACtCgjB,EAAWiuB,EAAejuB,SAASjjB,WAAWC,OAEpDwE,GAAsCyU,EAASzX,MAAOshB,EAAM7J,EAAS8J,OAAQC,GACxEve,MAAK,SAAA3F,GAEF,IAAMikC,EAAU,EAAK5nC,MAAM+1C,aACrB5vB,EAASxiB,EAAKA,KAAKL,OAAS,EAAI,EAAKokC,cAAc,gBAAiB/jC,EAAKA,KAAK,GAAIikC,QAAW5lC,EAEnG,QAAeA,IAAXmkB,EAAsB,CAEtB,IAAI6vB,EAAa,GAEjBryC,EAAKA,KAAK0hB,SAAQ,SAAA/a,GACd0rC,EAAU,UAAMA,EAAN,iBAAyB1rC,EAAKge,YAG5C,IAAMne,EAAS,EAAKkM,MAAM2/B,EAAY7vB,GAEhCqvB,EAAY,EAAKpN,UAAUj+B,EAAQgc,GAEzC,EAAKtmB,SAAS,CAAE21C,UAAWA,IAG/B,EAAK31C,SAAS,CAAE01C,SAAS,OAE5B7rC,OAAM,SAAAC,GACH7H,QAAQC,IAAI,gCAAkCsL,KAAKC,UAAU3D,IAC7D,EAAK9J,SAAS,CAAE01C,SAAS,S,+BAiC3B,IACEO,EAAmBl2C,KAAKI,MAAxB81C,eADH,EAE0Bl2C,KAAKN,MAA5Bi2C,EAFH,EAEGA,QAASC,EAFZ,EAEYA,UAKXS,EADiB,CAHNH,EAAettB,QAAQ5jB,WAAWC,OACtCixC,EAAe/qC,SAASnG,WAAWC,OAC7BixC,EAAezL,QAAQzlC,WAAWC,OACD2wC,GACxB3pC,KAAI,SAAU1L,EAAOgD,GAC7C,GAAIoyC,EAAS,CACT,IAAMW,EAAU,kBAAC,KAAD,CAAM7yC,KAAK,UAAU9C,MAAO,CAAEqO,SAAU,IAAMunC,MAAI,IAClE,OACI,kBAAC,KAAD,CAAMr2C,IAAKqD,EAAOizC,UAAWF,IAGjC,OACI,yBAAKp2C,IAAKqD,EAAO5C,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,SAAU4T,QAAS,YAC/FlU,MAMjB,OACI,yBAAKI,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,4BAA8Bq1C,O,GAzGxD72C,aC8DvBi3C,G,mLA7DC,IAAD,EACqCz2C,KAAKI,MAAzCyE,EADD,EACCA,QAASqZ,EADV,EACUA,SAAUi4B,EADpB,EACoBA,aAErBH,GADQl0C,IAAO+C,EAAQsiC,WAAWj5B,OAAO,uBACxBpM,IAAO+C,EAAQsiC,WAAW9hC,WAG3CqxC,GAFM50C,IAAO+C,EAAQ84B,SAASzvB,OAAO,YAC7B,CAAC,2BAAQ,2BAAQ,eAAM,gBACbjC,KAAI,SAAU1L,EAAOgD,GACzC,OACI,yBAAKrD,IAAKqD,EAAO5C,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,SAAU4T,QAAS,YAC/FlU,OAKPo2C,EADgB9xC,EAAQA,QACUoH,KAAI,SAAUtC,EAAMpG,EAAOqG,GAC/D,OACI,kBAAC,GAAD,CAAyB1J,IAAKqD,EAAOyyC,eAAgBA,EAAgBE,eAAgBvsC,EAAMuU,SAAUA,EAAUi4B,aAAcA,OAGrI,OACI,6BAGI,yBAAKx1C,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,4BAC/C01C,GAEJC,K,+BAKT,SAASC,EAAeC,GACpB,OAAiB,OAAdA,EACQ,GAED,GAAN,OAAUA,EAAU/jC,MAApB,kBAAmC+jC,EAAUjoC,OALhD,IAQcrO,EAMXsE,EAAY7E,KAAKI,MAAjByE,QACFooB,EAAcjtB,KAAK82C,WACzB,OAA+B,IAA3BjyC,EAAQA,QAAQnB,OAEZ,yBAAK/C,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,SAAUoX,OAAQ,gCAAiCC,eAAgB,WAAYy2B,WAAYiI,EAAe52C,KAAKI,MAAMy2C,cAI9M,kBAAC,KAAD,CAAS9zC,MAAOkqB,EAAa8pB,oBAAoB,EAAMC,aAAc,CAAEC,SAAU,UAC7E,yBAAKt2C,MAAO,CAAE2U,gBAAgB,qBAAsBvU,OAAQ,OAAOiO,SAAU,OAAQpO,QAAS,OAAQC,WAAY,SAAUoS,eAAgB,SAAUgF,OAAQ,gCAAiCC,eAAgB,WAAYlE,OAAQ,UAAW26B,WAAYiI,EAAe52C,KAAKI,MAAMy2C,aAd1Q,QADCt2C,EAgBIsE,EAAQA,QAAQnB,cAfHtB,IAAV7B,GAAiC,IAAVA,EAClC,GAEL,GAAN,OAAUA,EAAV,gB,GA3CmBf,aC0ShB03C,G,2MAvSXx3C,MAAQ,CACJy3C,SAAU,GACVC,aAAc,CAAC,CAAEvvB,gBAAiB,GAAIO,SAAU,KAChDpB,QAAS,GACTE,OAAQ,M,sEAGL3Z,EAAK8pC,GAAU,IAAD,OACjBjtC,GAAwB,oBACnBV,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CACVk3C,SAAUpzC,EAAKA,UAGtB+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI4H,MAEpBK,GAAwB,gBACnBV,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CACVm3C,aAAcrzC,EAAKA,UAG1B+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI4H,MAEpButC,GAAsC/pC,EAAK,IAAK,MAAO,YAClD7D,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CAAE+mB,QAASjjB,EAAKA,UAEjC+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,0CAA4CsL,KAAKC,UAAU3D,S,0CAI9D,IAAD,EACgC/J,KAAKI,MAA7C8d,EADQ,EACRA,SAAUjD,EADF,EACEA,WAAYs8B,EADd,EACcA,cACxBhqC,EAAM2Q,EAASzX,MACf4wC,EAAUr3C,KAAKw3C,mBAAmBv8B,GACxCjb,KAAKC,SAAS,CAAEinB,OAAQhJ,EAASzX,MAAOwgB,cAAehM,EAAYw8B,YAAaF,IAChFv3C,KAAK03C,OAAOnqC,EAAK8pC,K,2CAEC,IAAD,EAC+Br3C,KAAKI,MAA7C8d,EADS,EACTA,SAAUjD,EADD,EACCA,WAAYs8B,EADb,EACaA,cACxBhqC,EAAM2Q,EAASzX,MAFJ,EAG8BzG,KAAKN,MAA5CwnB,EAHS,EAGTA,OAAQD,EAHC,EAGDA,cAAewwB,EAHd,EAGcA,YACzBJ,EAAUr3C,KAAKw3C,mBAAmBv8B,GACpC1N,IAAQ2Z,GAAUD,IAAkBhM,GAAcw8B,IAAgBF,IAClEv3C,KAAKC,SAAS,CAAEinB,OAAQhJ,EAASzX,MAAOwgB,cAAehM,EAAYw8B,YAAaF,IAChFv3C,KAAK03C,OAAOnqC,EAAK8pC,M,yCAIN5c,GACf,IAAMjT,EAAoB1lB,MAASuD,UAAYo1B,EAG/C,OADiB92B,SAAS6jB,EADH,QACyC,I,2CAIhE,MAAO,U,+BAgIP,SAASmwB,EAAS/uC,EAAUrF,GACxB,IAAMq0C,EAAY,CACd9kC,MAAO,GACPlE,MAAO,IAEX,OAAiB,IAAbhG,EACc,IAAVrF,GAAgBA,EAAQ,KAAQ,GAChCq0C,EAAU9kC,MAAQ,MAClB8kC,EAAUhpC,MAAQ,kBACXgpC,GACAr0C,EAAQ,IAAM,GACrBq0C,EAAU9kC,MAAQ,MAClB8kC,EAAUhpC,MAAQ,kBACXgpC,IAGPA,EAAU9kC,MAAQ,MAClB8kC,EAAUhpC,MAAQ,UACXgpC,GAGE,IAAbhvC,EACc,IAAVrF,GAAgBA,EAAQ,IAAO,GAC/Bq0C,EAAU9kC,MAAQ,MAClB8kC,EAAUhpC,MAAQ,kBACXgpC,GACAr0C,EAAQ,IAAM,GACrBq0C,EAAU9kC,MAAQ,MAClB8kC,EAAUhpC,MAAQ,kBACXgpC,IAGPA,EAAU9kC,MAAQ,MAClB8kC,EAAUhpC,MAAQ,UACXgpC,GAGE,IAAbhvC,GAEIgvC,EAAU9kC,MAAQ,MAClB8kC,EAAUhpC,MAAQ,kBACXgpC,GAOE,IAAbhvC,GACAgvC,EAAU9kC,MAAQ,MAClB8kC,EAAUhpC,MAAQ,kBACXgpC,QAHX,EAMJ,SAASC,EAAajvC,GAClB,OAAiB,IAAbA,EACO,CAAEA,SAAU,GAAIkvC,KAAM,GAEhB,IAAblvC,EACO,CAAEA,SAAU,GAAIkvC,KAAM,GAEhB,IAAblvC,EACO,CAAEA,SAAU,GAAIkvC,KAAM,GAE1B,CAAElvC,SAAU,GAAIkvC,KAAM,IA9L5B,MAgMgE93C,KAAKI,MAAlEm3C,EAhMH,EAgMGA,cAAer5B,EAhMlB,EAgMkBA,SAAUjD,EAhM5B,EAgM4BA,WAAYlY,EAhMxC,EAgMwCA,MAAOg1C,EAhM/C,EAgM+CA,aAhM/C,EAiMuC/3C,KAAKN,MAAzCy3C,EAjMH,EAiMGA,SAAUnwB,EAjMb,EAiMaA,QAASowB,EAjMtB,EAiMsBA,aAC3B,GAAiB,OAAbD,QAAkC/0C,IAAb+0C,GAA8C,IAApBA,EAASzzC,OACxD,OAAO,KAEX,GAAgB,OAAZsjB,QAAgC5kB,IAAZ4kB,GAA4C,IAAnBA,EAAQtjB,OACrD,OAAO,KAEX,IAAMK,EA7JN,SAAmBi0C,EAASC,GASxB,IARA,IAAIC,EAAmB,GACnBC,EAAa,GACbC,EAAiB,GACjBC,EAAW,GAEXC,EAAiB,GACjBC,EAAa,GAPkB,WAS1Bh1C,GACL,IAAMsB,EAAUmzC,EAAQz0C,GAClBi1C,EAAmB3zC,EAAQsG,SAC3BstC,EAAUR,EAAUS,YAAY9tC,MAAK,SAAUrK,EAAOgD,EAAOqG,GAC/D,OAAyC,OAAlC4uC,EAAiBr4C,MAAMI,MAE5Bo4C,EAAUV,EAAUW,MAAMhuC,MAAK,SAAUrK,EAAOgD,EAAOqG,GACzD,OAAyC,OAAlC4uC,EAAiBr4C,MAAMI,MAE5Bs4C,EAAUZ,EAAUa,UAAUluC,MAAK,SAAUrK,EAAOgD,EAAOqG,GAC7D,OAAyC,OAAlC4uC,EAAiBr4C,MAAMI,MAE5Bw4C,EAAUd,EAAUjL,IAAIpiC,MAAK,SAAUrK,EAAOgD,EAAOqG,GACvD,OAAyC,OAAlC4uC,EAAiBr4C,MAAMI,MAK5By4C,EAAUf,EAAUgB,UAAUruC,MAAK,SAAUrK,EAAOgD,EAAOqG,GAC7D,OAAyC,OAAlC4uC,EAAiBr4C,MAAMI,MAE9Bk4C,GACAP,EAAiB5yC,KAAKT,GAEtB8zC,GACAR,EAAW7yC,KAAKT,GAEhBg0C,GACAT,EAAe9yC,KAAKT,GAEpBk0C,GACAV,EAAS/yC,KAAKT,GAKdm0C,GACAV,EAAehzC,KAAKT,IAER,IAAZ4zC,IAAiC,IAAZE,IAAiC,IAAZE,IAAiC,IAAZE,IAAiC,IAAZC,GACpFT,EAAWjzC,KAAKT,IAxCftB,EAAQ,EAAGA,EAAQy0C,EAAQt0C,OAAQH,IAAU,EAA7CA,GA2CT,IAAM21C,EAAY,GA6BlB,OA5BAA,EAAU5zC,KAAK,CACXvC,MAAO,eACPqC,MAAO8yC,IAEXgB,EAAU5zC,KAAK,CACXvC,MAAO,eACPqC,MAAO+yC,IAEXe,EAAU5zC,KAAK,CACXvC,MAAO,eACPqC,MAAOgzC,IAEXc,EAAU5zC,KAAK,CACXvC,MAAO,MACPqC,MAAOizC,IAMXa,EAAU5zC,KAAK,CACXvC,MAAO,eACPqC,MAAOkzC,IAEXY,EAAU5zC,KAAK,CACXvC,MAAO,eACPqC,MAAOmzC,IAEJW,EA4EEC,CAAUnyB,EAASmwB,GAC1BiC,EAAcvB,EAAaN,GAC3B8B,EAAat2C,EAAMkJ,KAAI,SAACtC,EAAMpG,GAAP,OACzB,yBAAK5C,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,SAAUE,OAAQ,OAAQkX,OAAQ,gCAAiCC,eAAgB,WAAY5C,gBAAiB,WAAapV,IAAKqD,GACnM,4BAAKoG,EAAK5G,WAOZ8gC,EAJY9/B,EAAKkI,KAAI,SAAU1L,EAAOgD,EAAOqG,GAE/C,OAhNJ,SAAsBK,EAAUrB,EAAU6xB,GAiCtC,IACMv0B,EAjCN,SAAmB0C,EAAU0wC,GACzB,OAAiB,IAAb1wC,EACO0wC,EAAgB,MAEV,IAAb1wC,EACO0wC,EAAgB,OAEV,IAAb1wC,EACO0wC,EAAgB,OAEpBA,EAAgB,QAuBhBC,CAAU3wC,EADV6xB,EAAc,QAEnB+e,EAAW3B,EAAajvC,GAE9B,OAvBA,SAA6BA,EAAU1C,EAAImR,EAAMtU,EAAO+0C,GAEpD,IADA,IAAI2B,EAAe,GADuC,WAEjDl2C,GACL,IAAM4jC,EAAYjhC,EAAM3C,EAAQu0C,EAAO,GAAK,GAAK,IAC3Cna,EAAUz3B,GAAO3C,EAAQ,GAAKu0C,EAAO,GAAK,GAAK,IAC/C4B,EAAyBriC,EAAK/T,QAAO,SAAUuB,EAAStB,EAAOqG,GACjE,IAAMvB,EAAOxD,EAAQ6gB,QAAQ1gB,WAAWC,OAASJ,EAAQ+jB,QAAQ5jB,WAAWC,OACtEkV,EAAYrY,IAAOuG,EAAM,sBAAsBhD,UACrD,OAAO8hC,GAAahtB,GAAaA,EAAYwjB,KAEjD8b,EAAan0C,KAAK,CACd6hC,UAAWA,EACXxJ,QAASA,EACT94B,QAAS60C,EACT32C,MAAOA,KAZNQ,EAAQ,EAAGA,EAAQqF,EAAUrF,IAAU,EAAvCA,GAeT,OAAOk2C,EAKeE,CAAoBH,EAAS5wC,SAAU1C,EAAI+D,EAAS7E,MAAO6E,EAASlH,MAAOy2C,EAAS1B,MA2K7F8B,CAAar5C,EAAOg3C,EAAet8B,MAG3BhP,KAAI,SAAU1L,EAAOgD,EAAO6B,GAOrD,OANkB7E,EAAM0L,KAAI,SAAUpH,EAAStB,EAAOqG,GAClD,IAAMiwC,EAAY,qBAAuBt2C,EACzC,OACI,kBAAC,GAAD,CAAkBszC,UAAWkB,EAAeJ,EAASJ,EAAeh0C,GAAS,KAAMrD,IAAK25C,EAAWh1C,QAASA,EAASqZ,SAAUA,EAAUi4B,aAAciB,UAKnK,OACI,yBAAKz2C,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAChD,yBAAKL,MAAO,CAAEC,QAAS,OAAQ6U,iBAAkB,UAAY1S,EAAMW,OAAS,UACvE21C,GAEL,yBAAK14C,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAYo4C,EAAYxwC,SAAW,QAAS6M,iBAAkB,kBAC7GouB,Q,GAjSQrkC,aCYds6C,G,iLAfD,IAAD,EACoD95C,KAAKI,MAAtD2C,EADH,EACGA,MAAOmb,EADV,EACUA,SAAU67B,EADpB,EACoBA,gBAAiB9+B,EADrC,EACqCA,WAE1C,OACI,yBAAKta,MAAO,CAAE4Y,UAAW,SAErB,yBAAK5Y,MAAO,CAAE2U,gBAAiB,YAAa8N,oBAAqB,MAAOC,qBAAsB,MAAOtiB,OAAQ,OAAQ0T,QAAS,WAAY7T,QAAS,OAAQC,WAAY,WACnK,wBAAIF,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBAAqB7L,IAE/D,kBAAC,GAAD,CAAgBg1C,cAAc,EAAMh1C,MAPzB,CAAC,CAAEA,MAAO,gBAAQ,CAAEA,MAAO,gBAAQ,CAAEA,MAAO,gBAAQ,CAAEA,MAAO,OAAS,CAAEA,MAAO,gBAAQ,CAAEA,MAAO,iBAOpDmb,SAAUA,EAAUq5B,cAAewC,EAAiB9+B,WAAYA,S,GAV9Gzb,a,qBCyDVw6C,G,wLAtDM,IACLC,EAAgBj6C,KAAKI,MAArB65C,YACFvxC,EAAY5G,IAAOm4C,EAAYvxC,WAAWwF,OAAO,eACjDvF,EAAU7G,IAAOm4C,EAAYtxC,SAASuF,OAAO,eAC7CgsC,EAAeD,EAAYp1C,QAAQoH,KAAI,SAAUtC,EAAMpG,EAAOqG,GAChE,IAAMvB,EAAOvG,IAAO6H,EAAKqN,KAAOrN,EAAKymB,KAAM,gBAAgBliB,OAAO,eAC5DkgC,EAAOzkC,EAAKykC,KACZE,EAAU3kC,EAAK2kC,QACrB,OACI,6BACI,qCAAWjmC,GACX,qCAAW+lC,GACX,yBAAKztC,MAAO,CAAEC,QAAS,SACnB,yCACA,6BAAM0tC,QAMtB,OACI,6BACI,6BAAM5lC,EAAN,IAAkBC,GACjBuxC,K,+BAKT,SAAStD,EAAeC,GACpB,OAAiB,OAAdA,EACQ,GAED,GAAN,OAAUA,EAAU/jC,MAApB,kBAAmC+jC,EAAUjoC,OALhD,IAcGqrC,EAAgBj6C,KAAKI,MAArB65C,YACR,OAA2B,IAAvBA,EAAYv2C,OACL,yBAAK/C,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,SAAUoX,OAAQ,gCAAiCC,eAAgB,WAAWy2B,WAAYiI,EAAe52C,KAAKI,MAAMy2C,aAAzL,MAGP,kBAAC,KAAD,CAASj/B,UAAU,QAAQm/B,oBAAoB,EAAMh0C,MAAO/C,KAAKm6C,gBAAiBnD,aAAc,CAAEC,SAAU,QAAS9W,WAAY,UAC7H,yBAAKx/B,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,SAAUoX,OAAQ,gCAAiCC,eAAgB,WAAYlE,OAAQ,UAAW26B,WAAYiI,EAAe52C,KAAKI,MAAMy2C,aAXpM,IAYOoD,EAAYv2C,OAXrB,KAEJ,yBAAKrC,IAAK+4C,KAAQ74C,IAAI,iB,GAxCR/B,aCG3Bm4C,GAAW,SAAC/uC,EAAUrF,GACxB,IAAMq0C,EAAY,CACd9kC,MAAO,GACPlE,MAAO,IAEX,OAAiB,IAAbhG,EACc,IAAVrF,GAAgBA,EAAQ,KAAQ,GAChCq0C,EAAU9kC,MAAQ,MAClB8kC,EAAUhpC,MAAQ,kBACXgpC,GACAr0C,EAAQ,IAAM,GACrBq0C,EAAU9kC,MAAQ,MAClB8kC,EAAUhpC,MAAQ,kBACXgpC,IAGPA,EAAU9kC,MAAQ,MAClB8kC,EAAUhpC,MAAQ,UACXgpC,GAGE,IAAbhvC,EACc,IAAVrF,GAAgBA,EAAQ,IAAO,GAC/Bq0C,EAAU9kC,MAAQ,MAClB8kC,EAAUhpC,MAAQ,kBACXgpC,GACAr0C,EAAQ,IAAM,GACrBq0C,EAAU9kC,MAAQ,MAClB8kC,EAAUhpC,MAAQ,kBACXgpC,IAGPA,EAAU9kC,MAAQ,MAClB8kC,EAAUhpC,MAAQ,UACXgpC,GAGE,IAAbhvC,GAEIgvC,EAAU9kC,MAAQ,MAClB8kC,EAAUhpC,MAAQ,kBACXgpC,GAOE,IAAbhvC,GACAgvC,EAAU9kC,MAAQ,MAClB8kC,EAAUhpC,MAAQ,kBACXgpC,QAHX,GAiJWyC,G,2MAzIX36C,MAAQ,CACJyvC,KAAM,GACNpd,OAAQ,KACRuoB,cAAe,KACf7C,YAAa,M,mFAEI,IAAD,EACkCz3C,KAAKI,MAA/C8d,EADQ,EACRA,SAAUjD,EADF,EACEA,WAAY8+B,EADd,EACcA,gBAC9B/5C,KAAKC,SAAS,CAAE8xB,OAAQ7T,EAAS8J,OAAQsyB,cAAer/B,EAAYw8B,YAAasC,IACjF,IAAM1X,EAAQriC,KAAK2lC,YAAY1qB,EAAY8+B,GACrCpf,EAAQ74B,IAAOugC,EAAM8E,WAAWj5B,OAAO,gBACvC0sB,EAAM94B,IAAOugC,EAAM1E,SAASzvB,OAAO,gBACzClO,KAAKsG,QAAQ4X,EAAS8J,OAAQ2S,EAAOC,K,2CAEnB,IAAD,EACiC56B,KAAKI,MAA/C8d,EADS,EACTA,SAAUjD,EADD,EACCA,WAAY8+B,EADb,EACaA,gBADb,EAE8B/5C,KAAKN,MAA5CqyB,EAFS,EAETA,OAAQuoB,EAFC,EAEDA,cAAe7C,EAFd,EAEcA,YAC/B,GAAIv5B,EAAS8J,SAAW+J,GAAU9W,IAAeq/B,GAAiB7C,IAAgBsC,EAAiB,CAAC,IAAD,EAC9D/5C,KAAKI,MAA9B8d,EADuF,EACvFA,SAAUjD,EAD6E,EAC7EA,WAClBjb,KAAKC,SAAS,CAAE8xB,OAAQ7T,EAAS8J,OAAQsyB,cAAer/B,EAAYw8B,YAAasC,IACjF,IAAM1X,EAAQriC,KAAK2lC,YAAY1qB,EAAY8+B,GACrCpf,EAAQ74B,IAAOugC,EAAM8E,WAAWj5B,OAAO,gBACvC0sB,EAAM94B,IAAOugC,EAAM1E,SAASzvB,OAAO,gBACzClO,KAAKsG,QAAQ4X,EAAS8J,OAAQ2S,EAAOC,M,8BAIrC3I,EAAK/rB,EAAIC,GAAK,IAAD,OACXnC,EAAM,IAAIC,IAChBwF,EAAoBwoB,EAAK/rB,EAAIC,GACxBuD,MAAK,SAAA3F,GACF,IAAMO,EAAYN,EAAIG,OAAOJ,EAAKA,MAAMK,OAAOG,SAASC,QACpDrB,MAAMC,QAAQkB,GACd,EAAKrE,SAAS,CAAEkvC,KAAM7qC,IAGtB,EAAKrE,SAAS,CAAEkvC,KAAM,CAAC7qC,QAG9BwF,OAAM,SAAAC,GACH7H,QAAQC,IAAI,0CAA4CsL,KAAKC,UAAU3D,S,kCAKvEkR,EAAY2iB,GACpB,IAAMD,EAAU1iB,EAAc,OAC9B,OAAiB,IAAb2iB,EACO,CACHuJ,UAAWxJ,EAAW,MACtBA,QAASA,EACTC,SAAU,GACVka,KAAM,GAGG,IAAbla,EACO,CACHuJ,UAAWxJ,EAAW,OACtBA,QAASA,EACTC,SAAU,GACVka,KAAM,GAIG,IAAbla,EACO,CACHuJ,UAAWxJ,EAAW,OACtBA,QAASA,EACTC,SAAU,GACVka,KAAM,GAIP,CACH3Q,UAAWxJ,EAAW,QACtBA,QAASA,EACTC,SAAU,GACVka,KAAM,M,sCAME,MAoB4B93C,KAAKI,MAArC25C,EApBI,EAoBJA,gBAAiB9+B,EApBb,EAoBaA,WAEnBhR,EAAWmlC,GADJpvC,KAAKN,MAAMyvC,MAExB,GAAiB,OAAbllC,QAAkC7H,IAAb6H,GAA8C,IAApBA,EAASvG,OACxD,OAAO,KAEX,IAAM2+B,EAAQriC,KAAK2lC,YAAY1qB,EAAY8+B,GAO3C,OAhCA,SAAwBrxC,EAAWE,EAAUyO,EAAMygC,GAE/C,IADA,IAAIyC,EAAY,GADqC,WAE5Ch3C,GACL,IAAMo3B,EAAQjyB,EAAanF,EAAQu0C,EAAO,GAAK,GAAK,IAC9Cld,EAAMlyB,GAAcnF,EAAQ,GAAKu0C,EAAO,GAAK,GAAK,IAClD0C,EAAanjC,EAAK/T,QAAO,SAAUqG,EAAMpG,EAAOqG,GAClD,IAAMvB,EAAOvG,IAAO6H,EAAKqN,KAAKhS,WAAa2E,EAAKymB,KAAKprB,WAAY,gBAAgBK,UACjF,OAAOs1B,GAAStyB,GAAQA,EAAOuyB,KAEnC2f,EAAUj1C,KAAK,CACX5B,OAAQ82C,EAAW92C,OACnBmB,QAAS21C,EACT9xC,UAAWiyB,EACXhyB,QAASiyB,KAXRr3B,EAAQ,EAAGA,EAAQqF,EAAUrF,IAAU,EAAvCA,GAcT,OAAOg3C,EAUME,CAAepY,EAAM8E,UAAW9E,EAAMzE,SAAU3zB,EAAUo4B,EAAMyV,MACrD7rC,KAAI,SAAU1L,EAAOgD,EAAOqG,GACpD,OACI,kBAAC,GAAD,CAAoBitC,UAAWc,GAASoC,EAAiBx2C,GAAQrD,IAAKqD,EAAO02C,YAAa15C,S,+BAK5F,IAAD,EACmCP,KAAKI,MAArC25C,EADH,EACGA,gBAAiB9+B,EADpB,EACoBA,WACnBonB,EAAQriC,KAAK2lC,YAAY1qB,EAAY8+B,GAC3C,OACI,yBAAKp5C,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaD,OAAQ,SACrE,yBAAKJ,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,SAAUs/B,WAAY,0BACvF,qEAKJ,yBAAKx/B,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAYqhC,EAAMzE,SAAW,UAC5E59B,KAAK06C,sB,GAnIGl7C,aCjDdm7C,G,iLAVD,IAAD,EAC4C36C,KAAKI,MAA/C8d,EADF,EACEA,SAAU67B,EADZ,EACYA,gBAAiB9+B,EAD7B,EAC6BA,WAClC,OACI,yBAAKta,MAAO,CAAE4Y,UAAW,SACrB,kBAAC,GAAD,CAAgB0B,WAAYA,EAAYlY,MAAO,CAAEA,MAAO,MAAQmb,SAAUA,EAAU67B,gBAAiBA,S,GAL7Fv6C,aC+VTo7C,I,kNAzVXl7C,MAAQ,CACJsK,QAAS,GACT6wC,qBAAsB,GACtBC,WAAY,GACZ5zB,OAAQ,KACR6K,OAAQ,M,EAgEZ+V,cAAgB,SAACC,EAAOxhB,GACpB,QAAenkB,IAAXmkB,EACJ,OAAOA,EAAOqB,MAAK,SAAAjG,GAAC,OAChBomB,EAAM5nC,MAAMwhB,EAAEo0B,iB,EAGtBt/B,MAAQ,SAAC06B,EAAQ5qB,GACb,IAAI6B,EAAW7B,EAAO6B,SAClB2yB,EAAyB,GACvBC,EAAoB5yB,EAASR,MAAK,SAAAld,GAAI,MAAiB,YAAbA,EAAKxK,OAC/C+6C,EAAqB7yB,EAASR,MAAK,SAAAld,GAAI,MAAiB,aAAbA,EAAKxK,OACtD,YAAekC,IAAX+uC,EAA6B,IACjCA,EAAO1rB,SAAQ,SAAAsiB,GACX,IAAMmT,EAAa,IAAI3yB,OAAOyyB,EAAkBxyB,UAAWwyB,EAAkBvyB,aACvE0yB,EAAgBpT,EAAMh9B,QAAQ5K,MAAM+6C,GAEpCE,EAAc,IAAI7yB,OAAO0yB,EAAmBzyB,UAAWyyB,EAAmBxyB,aAC1E4yB,EAAiBtT,EAAMiI,SAAS7vC,MAAMi7C,GAEtB,OAAlBD,GAA6C,OAAnBE,GAC1BN,EAAuBz1C,KAAKyiC,MAI7BgT,I,mFAtFU,IACT78B,EAAale,KAAKI,MAAlB8d,SACF3Q,EAAM2Q,EAASzX,MACfwrB,EAAM/T,EAAS8J,OACrBhoB,KAAKC,SAAS,CAAEinB,OAAQ3Z,EAAKwkB,OAAQE,IACrCjyB,KAAKs7C,WAAW/tC,EAAK0kB,K,2CAGH,IACV/T,EAAale,KAAKI,MAAlB8d,SADS,EAEUle,KAAKN,MAAxBwnB,EAFS,EAETA,OAAQ6K,EAFC,EAEDA,OACVxkB,EAAM2Q,EAASzX,MACfwrB,EAAM/T,EAAS8J,OACjBd,IAAW3Z,GAAOwkB,IAAWE,IAC7BjyB,KAAKC,SAAS,CAAEinB,OAAQ3Z,EAAKwkB,OAAQE,IACrCjyB,KAAKs7C,WAAW/tC,EAAK0kB,M,iCAGlB1kB,EAAK0kB,GAAM,IAAD,OACjB7nB,GAAwB,uBACnBV,MAAK,SAAA3F,GACF,IAAIwiB,EAASxiB,EAAKA,KAClB,EAAK9D,SAAS,CAAE46C,qBAAsBt0B,OAEzCzc,OAAM,SAAAC,GAAS7H,QAAQC,IAAI4H,MAChCK,GAAwB,iBACnBV,MAAK,SAAA3F,GACF,IAAIwiB,EAASxiB,EAAKA,KAClB,EAAK9D,SAAS,CAAE66C,WAAYv0B,OAE/Bzc,OAAM,SAAAC,GACH7H,QAAQC,IAAI4H,MAEpBN,GAAuC8D,EAAK0kB,EAAK,OAC5CvoB,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CAAE+J,QAASjG,EAAKA,UAGjC+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,0CAA4CsL,KAAKC,UAAU3D,S,qCAO/E,OAD0B/J,KAAKI,MAAvBm3C,eAEJ,KAAK,EACD,OAAO,GACX,KAAK,EAEL,KAAK,EACD,OAAO,GACX,KAAK,EACD,OAAO,M,2CAMf,MAAO,U,kCA4BC,MAegCv3C,KAAKI,MAArCm3C,EAfA,EAeAA,cAAegE,EAff,EAeeA,aAmCvB,SAAS3E,EAAe2E,EAAchE,EAAeh0C,GACjD,GAAIg4C,EACA,OAnCR,SAAkB3yC,EAAUrF,GACxB,OAAiB,IAAbqF,EACc,IAAVrF,GAAgBA,EAAQ,KAAQ,EACzB,4BACAA,EAAQ,IAAM,EACd,4BAGA,oBAGE,IAAbqF,EACc,IAAVrF,GAAgBA,EAAQ,IAAO,EACxB,4BACAA,EAAQ,IAAM,EACd,4BAGA,oBAGE,IAAbqF,EAGW,4BAKE,IAAbA,EACO,iCADX,EAMW+uC,CAASJ,EAAeh0C,GAKvC,IAFA,IAAM8L,EAtDN,SAA0BnP,GACtB,OAAQA,GACJ,KAAK,EACD,OAAO,GACX,KAAK,EACD,OAAO,GACX,KAAK,EACD,OAAO,GACX,KAAK,EACD,OAAO,IA6CJs7C,CAAiBjE,GAC5B3tC,EAAM,GACDrG,EAAQ,EAAGA,EAAQ8L,EAAQ9L,IAChCqG,EAAItE,KACA,yBAAKpF,IAAKqD,EAAO2I,UAAU,OAAOvL,MAAO,CAAEguC,WAAYiI,EAAe2E,EAAchE,EAAeh0C,OAI3G,OAAOqG,I,+BAEF,MAqGyC5J,KAAKI,MAA3Cm3C,EArGH,EAqGGA,cAAet8B,EArGlB,EAqGkBA,WAAY3P,EArG9B,EAqG8BA,OAG7BmwC,EAAUz7C,KAAKN,MAAMsK,QAGvB0xC,EAAkB,GACtB,GAAe,cAAXpwC,EAAwB,CACxB,IAAMqwC,EAAsB37C,KAAK8nC,cAAc,YAAa9nC,KAAKN,MAAMo7C,iBAC3C14C,IAAxBu5C,GACAF,EAAQh2B,SAAQ,SAAA/a,GACZ,IAAMkxC,EAAQlxC,EAAKG,SAAS1K,MAAMooB,OAAOozB,EAAoB9zB,gBAAgBvW,KAAMqqC,EAAoB9zB,gBAAgBg0B,mBACzG,OAAVD,GAA4B,KAAVA,GAAcF,EAAgBp2C,KAAKoF,WAIjEgxC,EAAkBD,EAGtB,IAAIhK,EAAe,GACbqK,EAAmC97C,KAAK8nC,cAAc,aAAc9nC,KAAKN,MAAMm7C,2BAC5Cz4C,IAArC05C,IACArK,EAAezxC,KAAKyW,MAAMilC,EAAiBI,IAG/C,IAGMC,EAlHN,SAAkBzyC,EAAUV,EAAU6xB,GA2BlC,SAASuhB,EAAYtzC,EAAWC,EAASszC,EAAcC,GAanD,IACMC,GADQhnC,SAAS7M,KAAK8zC,YAAc,MACfzzC,EAAUD,GAC/BiyB,EAdN,SAAqBshB,EAAcvzC,GAC/B,OAAIuzC,GAAgBvzC,EACTA,EAEJuzC,EAUGI,CAAYJ,EAAcvzC,GAExC,OAVA,SAAmBwzC,EAAYvzC,GAC3B,OAAIuzC,GAAcvzC,EACPuzC,EAEJvzC,EAKC2zC,CAAUJ,EAAYvzC,GACpBgyB,GAASwhB,EAE3B,SAASI,EAAoB7zC,EAAWC,EAASszC,GAC7C,IAAMnpC,EAAQqC,SAAS7M,KAAK8zC,YAAc,IAC1C,OAAIH,GAAgBvzC,EACT,GAGFuzC,EAAevzC,IADNoK,GAASnK,EAAUD,IAwBzC,IAAM25B,EAzEN,SAAqB5H,EAAY7xB,GAC7B,IAAMD,EAAU8xB,EAAc,OAC9B,OAAiB,IAAb7xB,EACO,CACHF,UAAWC,EAAW,MACtBA,QAASA,GAGA,IAAbC,EACO,CACHF,UAAWC,EAAW,OACtBA,QAASA,GAGA,IAAbC,EACO,CACHF,UAAWC,EAAW,OACtBA,QAASA,GAGV,CACHD,UAAWC,EAAW,QACtBA,QAASA,GAmDHkyB,CAAYJ,EAAY7xB,GACtC,YAAiBxG,IAAbkH,GAAuC,OAAbA,EACnB,GAEa,IAApBA,EAAS5F,OACF,GA1BX,SAAwB4F,EAAU+4B,GAI9B,IAHA,IAAIma,EAAY,GACV9zC,EAAY25B,EAAM35B,UAClBC,EAAU05B,EAAM15B,QACbpF,EAAQ,EAAGA,EAAQ+F,EAAS5F,OAAQH,IAAS,CAClD,IAAMsB,EAAUyE,EAAS/F,GACnB04C,EAAen6C,IAAO+C,EAAQyrC,QAAQtrC,WAAY,8BAA8BK,UAChF62C,EAAap6C,IAAO+C,EAAQ0rC,QAAQvrC,WAAY,8BAA8BK,UACpF,KAAIsD,EAAUszC,GAAgBC,EAAaxzC,GAA3C,CAGA,IAAM+zC,EAAQF,EAAoB7zC,EAAWC,EAASszC,GAChDnpC,EAAQkpC,EAAYtzC,EAAWC,EAASszC,EAAcC,GAC5DM,EAAUl3C,KAAK,CACX,MAASwN,EACT,MAAS2pC,EACT,QAAW53C,KAGnB,OAAO23C,EASWE,CAAepzC,EAAU+4B,GA6BlCsa,CAASlL,EAAc8F,EAAet8B,GAG5BhP,KAAI,SAAU1L,EAAOgD,EAAO6B,GAkCnD,OACI,yBAAKlF,IAAKqD,EAAO5C,MAAO,CAAE8T,QAAS,UAAWsI,YAAaxc,EAAMk8C,MAAQ,EAAI,KAAMzoC,OAAQ,YACvF,kBAAC,KAAD,CAAS4D,UAAU,SAASm/B,oBAAoB,EAAMh0C,MA3B9D,SAAuBxC,GAanB,IAZsB8gC,EAYhBub,EAAkB96C,IAAOvB,EAAMsE,QAAQyrC,QAAS,8BAA8BpiC,OAAO,eACrF2uC,EAAgB/6C,IAAOvB,EAAMsE,QAAQ0rC,QAAS,8BAA8BriC,OAAO,eACnFhK,EAba,MADGm9B,EAcMzhC,OAAOW,EAAMsE,QAAQqF,WAZlC,qBAEI,KAAXm3B,EACO,qBAEI,KAAXA,EACO,qBAEJA,EAKX,OACI,6BACI,oEAAeub,EAAf,cAAoCC,IACpC,wDAAat8C,EAAMsE,QAAQqrC,SAA3B,cAAyC3vC,EAAMsE,QAAQsrC,QAAvD,cAAoE5vC,EAAMsE,QAAQurC,QAAlF,cAA+F7vC,EAAMsE,QAAQwrC,UAC7G,8CAAUnsC,IAO+Ci2C,CAAc55C,GAAQy2C,aAAc,CAAEC,SAAU,UACzG,yBAAKt2C,MAAO,CAAEmS,MAAOvS,EAAMuS,MAAQ,KAAM/R,OAAQ,OAAQuU,gBAAiB,UAAW1G,MAAO,QAAS6F,QAAS,UAAWG,aAAc,WAAYC,WAAY,SAAU9F,WAAY,QApCjM,SAAsBxO,GAElB,YAAc6B,IAAV7B,GAAiC,OAAVA,EAChB,KAEJA,EAAMyE,WAAWC,OA+B+K6nC,CAAavsC,EAAMsE,QAAQkG,eAK1O,OACI,yBAAKpK,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAa0T,SAAU,aACvE,yBAAK/T,MAAO,CAAEw/B,WAAY,UAAWv/B,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WACxF,mDAEJ,yBAAKqL,UA/Kb,SAAyBhM,GACrB,OAAQA,GACJ,KAAK,EACD,MAAO,mBACX,KAAK,EACD,MAAO,qBACX,KAAK,EACD,MAAO,oBACX,KAAK,EACD,MAAO,oBACX,QACI,OAAO,MAoKK48C,CAAgBvF,GAAgB52C,MAAO,CAAEI,OAAQg7C,EAAUr4C,OAA4B,GAAnBq4C,EAAUr4C,OAAc,SAAc1D,KAAK+8C,aAC/H,yBAAKp8C,MAAO,CAAE+T,SAAU,WAAYiqB,KAAM,IAAK/K,UAAW,OAAQopB,UAAW,WACxEjB,Q,GAnVWv8C,cCWjBy9C,G,iLAdD,IAAD,EAC6Dj9C,KAAKI,MAA/D8d,EADH,EACGA,SAAU67B,EADb,EACaA,gBAAiBzwC,EAD9B,EAC8BA,SAAS2R,EADvC,EACuCA,WAAYlY,EADnD,EACmDA,MAExD,OACI,yBAAKpC,MAAO,CAAE4Y,UAAW,SACrB,yBAAK5Y,MAAO,CAAE2U,gBAAiB,YAAa8N,oBAAqB,MAAOC,qBAAsB,MAAOtiB,OAAQ,OAAQ0T,QAAS,WAAY7T,QAAS,OAAQC,WAAY,WACnK,wBAAIF,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBAAqB7L,IAE/D,kBAAC,GAAD,CAAmBw4C,cAAc,EAAMx4C,MAN5B,CAAC,CAAEA,MAAO,uBAMqCmb,SAAUA,EAAUq5B,cAAewC,EAAiBzwC,SAAUA,EAAU2R,WAAYA,EAAY3P,OAAQtL,KAAKI,MAAMkL,c,GAThK9L,aCJhBuE,I,OAAO,CAChB,OAAU,CACR,SAAY,CACV,QAAW,CACT,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,MAAS,KACT,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,MAAS,KACT,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,MAAS,OACT,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,MAAS,OACT,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,MAAS,KACT,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,MAAS,KACT,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,MAAS,KACT,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,MAAS,OACT,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,MAAS,OACT,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,MAAS,OACT,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,MAAS,OACT,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,MAAS,KACT,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,MAAS,MAEX,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,OAAU,SAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,KACR,MAAS,KACT,OAAU,OAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,MACR,MAAS,eACT,OAAU,QAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,MACR,MAAS,eACT,OAAU,QAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,MACR,MAAS,eACT,OAAU,QAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,MACR,MAAS,eACT,OAAU,MAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,MACR,MAAS,eACT,OAAU,QAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,MACR,MAAS,eACT,OAAU,QAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,MACR,MAAS,eACT,OAAU,QAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,MACR,MAAS,eACT,OAAU,QAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,MACR,MAAS,eACT,OAAU,QAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,MACR,MAAS,eACT,OAAU,MAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,MACR,MAAS,eACT,OAAU,QAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,MACR,MAAS,eACT,OAAU,QAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,MACR,MAAS,eACT,OAAU,QAEZ,CACE,aAAc,4CACd,YAAa,UACb,QAAW,WACX,QAAW,OACX,QAAW,WACX,KAAQ,MACR,MAAS,eACT,OAAU,UAIhB,IAAO,IACP,OAAU,aCxlBDm5C,G,2MA/UXx9C,MAAQ,CAAEkU,OAAQ,M,mFACG,IAEX1D,EADelQ,KAAKI,MAAlB8d,SACgBwiB,OACxB1gC,KAAKC,SAAS,CAAE2T,OAAQ1D,M,qCAMxB,OAD0BlQ,KAAKI,MAAvBm3C,eAEJ,KAAK,EACD,OAAO,GACX,KAAK,EAEL,KAAK,EACD,OAAO,GACX,KAAK,EACD,OAAO,M,2CAMf,MAAO,U,kCAEC,MAegCv3C,KAAKI,MAArCm3C,EAfA,EAeAA,cAAegE,EAff,EAeeA,aACjBlsC,EAfN,SAA0BnP,GACtB,OAAQA,GACJ,KAAK,EACD,OAAO,GACX,KAAK,EACD,OAAO,GACX,KAAK,EACD,OAAO,GACX,KAAK,EACD,OAAO,IAMJs7C,CAAiBjE,GAkChC,SAASX,EAAe2E,EAAchE,EAAeh0C,GACjD,GAAIg4C,EACA,OAnCR,SAAkB3yC,EAAUrF,GACxB,OAAiB,IAAbqF,EACc,IAAVrF,GAAgBA,EAAQ,KAAQ,EACzB,4BACAA,EAAQ,IAAM,EACd,4BAGA,gCAGE,IAAbqF,EACc,IAAVrF,GAAgBA,EAAQ,IAAO,EACxB,4BACAA,EAAQ,IAAM,EACd,4BAGA,gCAGE,IAAbqF,EAGW,4BAKE,IAAbA,EACO,iCADX,EAMW+uC,CAASJ,EAAeh0C,GAIvC,IADA,IAAIqG,EAAM,GACDrG,EAAQ,EAAGA,EAAQ8L,EAAQ9L,IAChCqG,EAAItE,KACA,yBAAKpF,IAAKqD,EAAO2I,UAAU,OAAOvL,MAAO,CAAEguC,WAAYiI,EAAe2E,EAAchE,EAAeh0C,OAI3G,OAAOqG,I,yCAEQ,MAkCiC5J,KAAKI,MAA7Cm3C,EAlCO,EAkCPA,cAAyBt8B,GAlClB,EAkCQiD,SAlCR,EAkCkBjD,YAE3BkiC,EAAan9C,KAAKN,MAAMkU,OAC9B,QAAmBxR,IAAf+6C,GAA2C,OAAfA,EAC5B,OAAO,KAgBX,IAdA,IAAMr6B,EAAaq6B,EAAW75C,QAAO,SAAUqG,EAAMpG,EAAOqG,GACxD,MAAqB,OAAdD,EAAKlG,QAGV4+B,EA3CN,SAAqBz5B,EAAU6xB,GAC3B,IAAM9xB,EAAU8xB,EAAc,OAC9B,OAAiB,IAAb7xB,EACO,CACHF,UAAWC,EAAW,MACtBA,QAASA,EACTC,SAAU,GACVkvC,KAAM,GAGG,IAAblvC,EACO,CACHF,UAAWC,EAAW,OACtBA,QAASA,EACTC,SAAU,GACVkvC,KAAM,GAGG,IAAblvC,EACO,CACHF,UAAWC,EAAW,OACtBA,QAASA,EACTC,SAAU,GACVkvC,KAAM,GAGP,CACHpvC,UAAWC,EAAW,QACtBA,QAASA,EACTC,SAAU,GACVkvC,KAAM,IAaAsF,CAAY7F,EAAet8B,GAEnCkhC,GADQhnC,SAAS7M,KAAK8zC,YAAc,MACf/Z,EAAM15B,QAAU05B,EAAM35B,WAC7C20C,EAAmB,GACjBC,EAAiBx6B,EAAWtU,MAAK,SAAUC,EAAGC,GAGhD,OAFc5M,IAAO2M,EAAEjL,QAAQwB,WAAayJ,EAAEJ,QAAQrJ,WAAY,gBAAgBK,UACpEvD,IAAO4M,EAAElL,QAAQwB,WAAa0J,EAAEL,QAAQrJ,WAAY,gBAAgBK,UAC3D,GAAK,KAE5Bk4C,EAAc,KACTh6C,EAAQ,EAAGA,EAAQ+5C,EAAe55C,OAAQH,IAAS,CACxD,IAAMsB,EAAUie,EAAWvf,GACrBi6C,EAAc17C,IAAO+C,EAAQrB,QAAQwB,WAAaH,EAAQwJ,QAAQrJ,WAAY,gBAAgBK,UACpG,GAAIg9B,EAAM35B,UAAY80C,EAElBD,EAAc,CAAEntB,KAAMotB,EAAaC,MADd95C,SAAkC,IAAzB/D,OAAOiF,EAAQjB,UAIjD,GADA1B,QAAQC,IAAIo7C,GACRlb,EAAM35B,WAAa80C,GAAeA,GAAenb,EAAM15B,QAAS,CAChE,IAAM+0C,EAAe/5C,SAAkC,IAAzB/D,OAAOiF,EAAQjB,SAC7Cy5C,EAAiB/3C,KAAK,CAClB8qB,KAAMotB,EACNC,MAAOC,KAInBx7C,QAAQC,IAAIk7C,GACQ,OAAhBE,IACAF,EAAiBlmC,OAAO,EAAE,EAAEomC,GAC5BA,EAAc,MAElBr7C,QAAQC,IAAIk7C,GAMZ,IALA,IAAMM,EAAaN,EAAiB7uC,MAAK,SAAUC,EAAGC,GAClD,OAAOD,EAAE2hB,KAAO1hB,EAAE0hB,KAAO,GAAK,KAE9BqsB,EAAQ,EACRmB,EAAmB,GACdr6C,EAAQ,EAAGA,EAAQo6C,EAAWj6C,OAAQH,IAAS,CACpD,IAAMsB,EAAU84C,EAAWp6C,GAS3B,GARc,IAAVA,IAEIk5C,EADA53C,EAAQurB,KAAOiS,EAAM35B,UACb,GAGC7D,EAAQurB,KAAOiS,EAAM35B,WAAayzC,GAG/CwB,EAAWj6C,OAAS,IAAMH,EAAO,CACjC,IAAMs6C,EAAQh5C,EAAQurB,KAEhB0tB,GADQzb,EAAM15B,QACUk1C,GAAS1B,EACvCyB,EAAiBt4C,KAAK,CAClBm4C,MAAO54C,EAAQ44C,MACf3qC,MAAOgrC,QAGV,CACD,IAAMD,EAAQF,EAAWp6C,GAAO6sB,KAE1B0tB,GADQH,EAAWp6C,EAAQ,GAAG6sB,KACNytB,GAAS1B,EACvCyB,EAAiBt4C,KAAK,CAClBm4C,MAAO54C,EAAQ44C,MACf3qC,MAAOgrC,KAInB,MAAO,CACHrB,MAAOA,EACPmB,iBAAkBA,K,+BAGhB,IAAD,EAC2C59C,KAAKI,MAA7Cm3C,EADH,EACGA,cAAer5B,EADlB,EACkBA,SAAUjD,EAD5B,EAC4BA,WAC3B/K,EAASgO,EAASwiB,OAGxB,GAFAx+B,QAAQC,IAAI+b,GAEG,OAAXhO,EAAmB,OAAO,KAkB9B,IAAM0qB,EAAM3f,EAAc,OACpB0f,EAlBN,SAA4BA,EAAO/xB,GAC/B,OAAiB,IAAbA,EACO+xB,EAAS,MAEH,IAAb/xB,EACO+xB,EAAS,OAGH,IAAb/xB,EACO+xB,EAAS,OAGH,IAAb/xB,EACO+xB,EAAS,aADpB,EAMUojB,CAAmBnjB,EAAK2c,GAChCyG,EAAa9tC,EAAO5M,QAAO,SAAU/C,EAAOgD,EAAOqG,GACrD,IAAMq0C,EAAa19C,EAAMiD,QAAQwB,WAAazE,EAAM8N,QAAQrJ,WACtDqD,EAAOvG,IAAOm8C,EAAY,gBAAgB54C,UAChD,OAAOs1B,EAAQtyB,GAAQA,EAAOuyB,KAE5BsjB,EAAiBF,EAAW/xC,KAAI,SAAU1L,EAAOgD,EAAOqG,GAC1D,IAAMq0C,EAAa19C,EAAMiD,QAAQwB,WAAazE,EAAM8N,QAAQrJ,WAE5D,OADalD,IAAOm8C,EAAY,gBAAgB54C,aAG9CpD,EAAO24B,EAAMD,EACfwjB,EAAa,GAQjB,GAPIH,EAAWt6C,OAOW,IAAtBs6C,EAAWt6C,OACX,IAAK,IAAIH,EAAQ,EAAGA,EAAQy6C,EAAWt6C,OAAQH,IAAS,CACpD,IAAMsB,EAAUm5C,EAAWz6C,GACrB06C,EAAap5C,EAAQrB,QAAQwB,WAAaH,EAAQwJ,QAAQrJ,WAC1DqD,EAAOvG,IAAOm8C,EAAY,gBAAgB54C,UAC1CyN,EAAQnP,SAAS,KAAO0E,EAAOsyB,GAAS14B,GAC9Ck8C,EAAW74C,KAAK,CACZwN,MAAOA,EACP5C,OAAiC,IAAzBtQ,OAAOiF,EAAQjB,eAK/B,IAAK,IAAIL,EAAQ,EAAGA,EAAQy6C,EAAWt6C,OAAS,EAAGH,IAAS,CACxD,IAAMsB,EAAUm5C,EAAWz6C,GAC3B,GAAc,IAAVA,EAAa,CACb,IAAM06C,EAAap5C,EAAQrB,QAAQwB,WAAaH,EAAQwJ,QAAQrJ,WAC1DqD,EAAOvG,IAAOm8C,EAAY,gBAAgB54C,UAC1CyN,EAAQnP,SAAS,KAAO0E,EAAOsyB,GAAS14B,GAC9Ck8C,EAAW74C,KAAK,CACZwN,MAAOA,EACP5C,OAAiC,IAAzBtQ,OAAOiF,EAAQjB,eAG1B,GAAIL,IAAW26C,EAAex6C,OAAS,EAAI,CAC5C,IAAMu6C,EAAap5C,EAAQrB,QAAQwB,WAAaH,EAAQwJ,QAAQrJ,WAC1DqD,EAAOvG,IAAOm8C,EAAY,gBAAgB54C,UAC1CyN,EAAQnP,SAAS,KAAOi3B,EAAMvyB,GAAQpG,GAC5Ck8C,EAAW74C,KAAK,CACZwN,MAAOA,EACP5C,OAAiC,IAAzBtQ,OAAOiF,EAAQjB,cAG1B,CACD,IAAM8iC,EAAWsX,EAAWz6C,EAAQ,GAC9B66C,EAAc1X,EAASljC,QAAQwB,WAAa0hC,EAASr4B,QAAQrJ,WAC7Dq5C,EAAQv8C,IAAOs8C,EAAa,gBAAgB/4C,UAC5C44C,EAAap5C,EAAQrB,QAAQwB,WAAaH,EAAQwJ,QAAQrJ,WAC1DqD,EAAOvG,IAAOm8C,EAAY,gBAAgB54C,UAC1CyN,EAAQnP,SAAS,KAAO06C,EAAQh2C,GAAQpG,GAC9Ck8C,EAAW74C,KAAK,CACZwN,MAAOA,EACP5C,OAAiC,IAAzBtQ,OAAOiF,EAAQjB,WAmBvC,IAAMyT,EAAOrX,KAAKs+C,mBAClB,GAAa,OAATjnC,QAA0BjV,IAATiV,EACjB,OAAO,KAEX,IAAMknC,EAASlnC,EAAKumC,iBAAiB3xC,KAAI,SAAU1L,EAAOgD,EAAOqG,GAC7D,OACI,yBAAK1J,IAAKqD,EAAO5C,MAAO,CAAEsX,OAAQ,kBAAmBC,eAAgB,WAAYpF,MAAOvS,EAAMuS,MAAQ,IAAK/R,OAAQ,KAAMuU,gBAAiB,UAAW1G,MAAO,QAAShO,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WAAa2B,KAAKg8C,MAAMj+C,EAAMk9C,OAA1P,QAGR,OACI,yBAAK98C,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAa0T,SAAU,aACvE,yBAAK/T,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,OAAQpS,WAAY,SAAUs/B,WAAY,wBAAyBpjB,YAAa,SAC3H,6CAEJ,yBAAK7Q,UA5Bb,SAAyBhM,GACrB,OAAQA,GACJ,KAAK,EACD,MAAO,2BACX,KAAK,EACD,MAAO,6BACX,KAAK,EACD,MAAO,4BACX,KAAK,EACD,MAAO,4BACX,QACI,OAAO,MAiBK48C,CAAgBvF,IAAiBv3C,KAAK+8C,aACtD,yBAAKp8C,MAAO,CAAE+T,SAAU,WAAYiqB,KAAM,IAAKjC,WAAY,SACvD,yBAAK/7B,MAAO,CAAEoc,YAAa1F,EAAKolC,MAAQ,KAAM77C,QAAS,OAAQkS,MAAO,sBAAuB6B,SAAU,WAClG4pC,S,GAzUQ/+C,aCSlBi/C,G,iLAXD,IAAD,EAC6Cz+C,KAAKI,MAA/C8d,EADH,EACGA,SAAUjD,EADb,EACaA,WAAY8+B,EADzB,EACyBA,gBAE9B,OACI,yBAAKp5C,MAAO,CAAE4Y,UAAW,SACrB,kBAAC,GAAD,CAAoBgiC,cAAc,EAAMtgC,WAAYA,EAAYlY,MAHrD,CAAC,CAAEA,MAAO,iBAG8Dmb,SAAUA,EAAUq5B,cAAewC,S,GANxGv6C,aC0Jfk/C,G,2MAxJXh/C,MAAQ,CACJs6B,QAAQ,EACRpL,UAAW5L,OAAO27B,WAAa,K,EA4BnCC,mBAAqB,EAAKC,SAAS,EAAKC,iBAAkB,K,oFA1BpC,IAEVzkB,EAAWr6B,KAAKI,MAAhBi6B,OACR1Z,KAAU,IAAM0Z,GAAQzZ,SACxB5gB,KAAK6gB,c,0CAIL7gB,KAAK6gB,YACLmC,OAAO+7B,iBAAiB,SAAU/+C,KAAK4+C,sB,+BAElCI,EAAMC,EAAMC,GAAY,IACzBj2C,EADwB,mBAE5B,OAAO,WACH,IAAIb,EAAU,EAAM+2C,EAAOC,EAKvBC,EAAUH,IAAcj2C,EAC5Bq2C,aAAar2C,GACbA,EAAUs2C,YANE,WACRt2C,EAAU,KACLi2C,GAAWF,EAAKQ,MAAMp3C,EAAS+2C,KAIZF,GACxBI,GAASL,EAAKQ,MAAMp3C,EAAS+2C,M,6CAOrCn8B,OAAOy8B,oBAAoB,SAAUz/C,KAAK4+C,sB,yCAI1C5+C,KAAKC,SAAS,CAAE2uB,UAAW5L,OAAO27B,WAAa,Q,kCAO/C,SAASe,EAAYn9C,GACjB,OAAOA,EAAQ,EALX,MA0BgDvC,KAAKI,MAArD2gB,EA1BA,EA0BAA,OAAQsZ,EA1BR,EA0BQA,OAAO0f,EA1Bf,EA0BeA,gBAAiB4F,EA1BhC,EA0BgCA,YAKlCC,EA9BN,SAAiBv3C,GACb,OAAOA,EAAQ,MA6BQw3C,CAFF,IAAI7oC,KAAK,IAAIA,KAAK2oC,GAAavlC,cAAgB,IAAMslC,EAAY,IAAI1oC,KAAK2oC,GAAazmC,YAAc,IAAM,IAAIlC,KAAK2oC,GAAaxmC,WAAWuB,WAI/JolC,EA1BN,SAAsBH,EAAa5F,GAC/B,OAAQA,GAEJ,KAAK,EACD,OAAO4F,EAAc,MAEzB,KAAK,EACD,OAAOA,EAAc,OAEzB,KAAK,EACD,OAAOA,EAAc,OAEzB,KAAK,EACD,OAAOA,EAAc,QACzB,QACI,OAAO,MAWAI,CAAaH,EAAoB7F,GAChDiG,EAAQ,GACZ,GAAwB,IAApBjG,EACA,IAAK,IAAIx2C,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CACrC,IAAM8E,EAAOy3C,EAAc,KAA2B,GAARv8C,EAAa,GAAK,IAChEy8C,EAAM16C,KAAK+C,GAGnB,GAAwB,IAApB0xC,EACA,IAAK,IAAIx2C,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CACrC,IAAM8E,EAAOy3C,EAAc,KAA+B,GAARv8C,EAAa,GAAK,IAAO,EAC3Ey8C,EAAM16C,KAAK+C,GAInB,GAAwB,IAApB0xC,EACA,IAAK,IAAIx2C,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CACrC,IAAM8E,EAAOy3C,EAAc,MAA+B,GAARv8C,EAAa,GAAK,IAAO,EAC3Ey8C,EAAM16C,KAAK+C,GAUnB,IAAIsZ,EAAIhB,OACHc,OAAO,CAACq+B,EAAYF,IACpBl+B,MAAM,CAAC,EAAG1hB,KAAKN,MAAMkvB,YAGtBxM,EAAMzB,KAAU,IAAMI,GACrBsB,OAAO,OACPC,KAAK,KAAM+X,GAEX15B,MAAM,QAASX,KAAKN,MAAMkvB,UAAY,KACtCjuB,MAAM,SAAU,IAChB0hB,OAAO,KACPC,KAAK,YAAa,oBAEnBgM,EAAa3N,KAAc,MAC3Bs/B,EAAYt/B,KAAc,MAgB9B,IAAIuB,EAAQvB,KAAWgB,GAClBH,WAAWw+B,GACXl+B,SAAS,EAAG,GACZC,YAAY,GACZC,YAAW,SAAUC,GAAK,OAnBVlgB,EAmB6BkgB,EAlBtB,IAApB83B,EACOzrB,EAAWvsB,GAAQ,IAAMusB,EAAWvsB,EAAQ,MAE/B,IAApBg4C,EACOzrB,EAAWvsB,EAAQ,MAAuB,IAAMusB,EAAWvsB,EAAQ,MAEtD,IAApBg4C,EACOzrB,EAAWvsB,EAAQ,OAAuB,IAAMusB,EAAWvsB,EAAQ,OAEtD,IAApBg4C,EACO2F,EAAY,IAAI1oC,KAAKjV,GAAMmX,YAAc,IAAM+mC,EAAUl+C,GAE7DusB,EAAWvsB,GAbtB,IAAqBA,KAqBrBqgB,EAAIC,OAAO,KACNE,KAAKL,GACLI,KAAK,QAAS,U,+BAIb,IACEvB,EAAW/gB,KAAKI,MAAhB2gB,OACR,OACI,yBAAKpL,GAAIoL,Q,GApJIvhB,aC0IV0gD,G,2MAvIXxgD,MAAQ,CACJs6B,QAAQ,EACRpL,UAAW5L,OAAO27B,WAAa,K,EA6BnCC,mBAAqB,EAAKC,SAAS,EAAKC,iBAAkB,K,oFA3BpC,IAEVzkB,EAAWr6B,KAAKI,MAAhBi6B,OACR1Z,KAAU,IAAM0Z,GAAQzZ,SACxB5gB,KAAK6gB,c,0CAIL7gB,KAAK6gB,YACLmC,OAAO+7B,iBAAiB,SAAU/+C,KAAK4+C,sB,+BAGlCI,EAAMC,EAAMC,GAAY,IACzBj2C,EADwB,mBAE5B,OAAO,WACH,IAAIb,EAAU,EAAM+2C,EAAOC,EAKvBC,EAAUH,IAAcj2C,EAC5Bq2C,aAAar2C,GACbA,EAAUs2C,YANE,WACRt2C,EAAU,KACLi2C,GAAWF,EAAKQ,MAAMp3C,EAAS+2C,KAIZF,GACxBI,GAASL,EAAKQ,MAAMp3C,EAAS+2C,M,6CAOrCn8B,OAAOy8B,oBAAoB,SAAUz/C,KAAK4+C,sB,yCAI1C5+C,KAAKC,SAAS,CAAE2uB,UAAW5L,OAAO27B,WAAa,Q,kCAGvC,MAoBiD3+C,KAAKI,MAAtD2gB,EApBA,EAoBAA,OAAQsZ,EApBR,EAoBQA,OAAQ0f,EApBhB,EAoBgBA,gBAAiB4F,EApBjC,EAoBiCA,YACnCG,EApBN,SAAsBH,EAAa5F,GAC/B,OAAQA,GAEJ,KAAK,EACD,OAAOj4C,IAAO69C,GAAa7e,IAAI,EAAG,SAASz7B,UAE/C,KAAK,EACD,OAAOvD,IAAO69C,GAAa1xC,SAAS,EAAG,QAAQ6yB,IAAI,EAAG,SAASz7B,UAEnE,KAAK,EACD,OAAOvD,IAAO69C,GAAa1xC,SAAS,EAAG,QAAQ6yB,IAAI,EAAG,SAASz7B,UAEnE,KAAK,EACD,OAAOvD,IAAO69C,GAAa1xC,SAAS,GAAI,QAAQ6yB,IAAI,EAAG,SAASz7B,UACpE,QACI,OAAO,MAKA06C,CAAaJ,EAAa5F,GACvCoG,EAAWr+C,IAAO69C,GAAa7e,IAAI,EAAG,OAAO3jB,QAAQ,OAAO2jB,IAAI,EAAG,SAASz7B,UAC9E26C,EAAQ,GACZ,GAAwB,IAApBjG,EAAuB,CACvBiG,EAAM16C,KAAKw6C,GACX,IAAMz3C,EAAOvG,IAAOg+C,GAAYhf,IAAI,EAAG,OAAO3jB,QAAQ,OAAO9X,UAC7D26C,EAAM16C,KAAK+C,GAEf,GAAwB,IAApB0xC,EAAuB,CACvBiG,EAAM16C,KAAKw6C,GACX,IAAK,IAAIv8C,EAAQ,EAAGA,EAAQ,EAAGA,IAAS,CACpC,IAAM8E,EAAOvG,IAAOg+C,GAAYhf,IAAIv9B,EAAO,QAAQ4Z,QAAQ,OAAO9X,UAClE26C,EAAM16C,KAAK+C,IAInB,GAAwB,IAApB0xC,EAAuB,CACvBiG,EAAM16C,KAAKw6C,GACX,IAAK,IAAIv8C,EAAQ,EAAGA,EAAQ,EAAGA,IAAS,CACpC,IAAM8E,EAAOvG,IAAOg+C,GAAYhf,IAAIv9B,EAAO,QAAQ4Z,QAAQ,OAAO9X,UAClE26C,EAAM16C,KAAK+C,IAInB,GAAwB,IAApB0xC,EAAuB,CACvBiG,EAAM16C,KAAKw6C,GACX,IAAK,IAAIv8C,EAAQ,EAAGA,EAAQ,EAAGA,IAAS,CACpC,IAAM8E,EAAOvG,IAAOg+C,GAAYhf,IAAI,EAAEv9B,EAAO,QAAQ4Z,QAAQ,OAAO9X,UACpE26C,EAAM16C,KAAK+C,IAGnB,IAAIsZ,EAAIhB,OACHc,OAAO,CAACq+B,EAAYK,IACpBz+B,MAAM,CAAC,EAAG1hB,KAAKN,MAAMkvB,UAAY,IAGlCxM,EAAMzB,KAAU,IAAMI,GACrBsB,OAAO,OACPC,KAAK,KAAM+X,GAEX15B,MAAM,QAASX,KAAKN,MAAMkvB,WAC1BjuB,MAAM,SAAU,IAChB0hB,OAAO,KACPC,KAAK,YAAa,oBAQvB,IAAIJ,EAAQvB,KAAcgB,GACrBH,WAAWw+B,GACXl+B,SAAS,EAAG,GACZC,YAAY,IACZC,YAAW,SAAUC,GAAK,OATVlgB,EAS6BkgB,EARvCngB,IAAOC,GAAMmM,OAAO,SAD/B,IAAqBnM,KAYrBqgB,EAAIC,OAAO,KACNE,KAAKL,GACLvhB,MAAM,YAAa,QACnB2hB,KAAK,QAAS,U,+BAIb,IACEvB,EAAW/gB,KAAKI,MAAhB2gB,OACR,OACI,yBAAKpL,GAAIoL,Q,GAnIOvhB,aCKtB4gD,I,cAAgB,SAAC/wC,GACnB,OAAQA,GACJ,KAAK,EACD,OAAO,GACX,KAAK,EACD,OAAO,GACX,KAAK,EACD,OAAO,GACX,KAAK,EACD,OAAO,GACX,QACI,OAAO,QAKbguB,GAAY,SAACz0B,EAAUy3C,GAEzB,IAAMC,EAAWx+C,IAAOw+C,SAASx+C,MAASG,KAAKH,IAAOu+C,GAAYljC,QAAQ,OAAOojC,KAAK,KAEtF,GAAIz+C,IAAOu+C,GAAYG,SAAS1+C,MAASqb,QAAQ,QAC7C,OAAOijC,GAAcx3C,GAClB,GAAiB,IAAbA,EAAgB,CACvB,IAAM63C,EAAQj+C,KAAKC,MAAM69C,EAASI,WAClC,OAAOD,EAAQ,EAAIA,EAAQ,EACxB,OAAiB,IAAb73C,EAEA,GADMpG,KAAKC,MAAM69C,EAASI,UAAY,GAEzB,IAAb93C,EAEA,GADMpG,KAAKC,MAAM69C,EAASI,UAAY,GAEzB,IAAb93C,EACA,QADJ,GAuiBI+3C,G,2MAhiBXjhD,MAAQ,CACJkhD,gBAAiB,EACjBC,kBAAmB,EACnBC,oBAAqB,EACrBC,oBAAqB,EACrBC,aAAc,KACdz0C,mBAAoB,GACpBuG,MAAOkQ,OAAO27B,WAAa,IAC3BnuB,UAAU,EACVinB,YAAa,EACbxwB,cAAe,G,EAkBnB23B,mBAAqB,EAAKC,SAAS,EAAKC,iBAAkB,K,EAyK1DmC,mBAAqB,SAAC1gD,GAClB,EAAKN,SAAS,CAAE+gD,aAAczgD,K,wEAzLzBy+C,EAAMC,EAAMC,GAAY,IACzBj2C,EADwB,mBAE5B,OAAO,WACH,IAAIb,EAAU,EAAM+2C,EAAOC,EAKvBC,EAAUH,IAAcj2C,EAC5Bq2C,aAAar2C,GACbA,EAAUs2C,YANE,WACRt2C,EAAU,KACLi2C,GAAWF,EAAKQ,MAAMp3C,EAAS+2C,KAIZF,GACxBI,GAASL,EAAKQ,MAAMp3C,EAAS+2C,M,0CAMpB,IAAD,EACwBn/C,KAAKI,MAArC25C,EADQ,EACRA,gBAAiB9+B,EADT,EACSA,WACzBjb,KAAKkhD,qBAAqB7jB,GAAU0c,EAAiB9+B,IACrD+H,OAAO+7B,iBAAiB,SAAU/+C,KAAK4+C,oBACvC5+C,KAAKC,SAAS,CAAEw3C,YAAasC,EAAiB9yB,cAAehM,M,2CAG3C,IAAD,EACuBjb,KAAKI,MAArC25C,EADS,EACTA,gBAAiB9+B,EADR,EACQA,WADR,EAEsBjb,KAAKN,MAApC+3C,EAFS,EAETA,YAAaxwB,EAFJ,EAEIA,cACjB8yB,IAAoBtC,GAAex8B,IAAegM,IAClDjnB,KAAKC,SAAS,CAAEw3C,YAAasC,EAAiB9yB,cAAehM,IACrC,IAApB8+B,EACA/5C,KAAKkhD,qBAAqB7jB,GAAU0c,EAAiB9+B,IAC1B,IAApB8+B,EACP/5C,KAAKmhD,uBAAuB9jB,GAAU0c,EAAiB9+B,IAC5B,IAApB8+B,EACP/5C,KAAKohD,yBAAyB/jB,GAAU0c,EAAiB9+B,IAC9B,IAApB8+B,GACP/5C,KAAKqhD,yBAAyBhkB,GAAU0c,EAAiB9+B,O,6CAMjE+H,OAAOy8B,oBAAoB,SAAUz/C,KAAK4+C,sB,yCAI1C5+C,KAAKC,SAAS,CAAE6S,MAAOkQ,OAAO27B,WAAa,Q,uCAG9Bj2C,EAAWi1B,EAASP,GAAW,IAAD,Q1E2rC5C,SAAmC53B,EAAOkD,EAAWC,GAC1D,OAAOlD,IAAMC,IAAI,uCAAyCF,EAAQ,IAAMkD,EAAY,IAAMC,I0E3rCpFc,CAAsC2zB,EAAU10B,EAAWi1B,GACtDj0B,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CACVsM,mBAAoBxI,EAAKA,UAGhC+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI4H,GACZ,EAAK9J,SAAS,CACVsM,mBAAoB,Y,0CAsCf,IAAD,OACZuxB,EAAY,GAChB,GAAmC,IAA/B99B,KAAKI,MAAM25C,gBACX,IADmC,IAAD,WACzBx2C,GACL,IAAM8L,EAAS9L,EAAQ,EACnB8L,IAAW,EAAK3P,MAAMkhD,gBACtB9iB,EAAUx4B,KAAK,yBAAKpF,IAAKqD,EAAO5C,MAAO,CAAEmS,MAAO,OAAQ/R,OAAQ,OAAQkX,OAAQ,mCAAqC/E,QAAS,kBAAM,EAAKguC,qBAAqB7xC,OAE7JyuB,EAAUx4B,KAAK,yBAAKpF,IAAKqD,EAAO5C,MAAO,CAAEmS,MAAO,OAAQ/R,OAAQ,QAAUmS,QAAS,kBAAM,EAAKguC,qBAAqB7xC,QALnH9L,EAAQ,EAAGA,EAAQ,GAAIA,IAAU,EAAjCA,GAQb,GAAmC,IAA/BvD,KAAKI,MAAM25C,gBACX,IADmC,IAAD,WACzBx2C,GACL,IAAM8L,EAAS9L,EAAQ,EACnB8L,IAAW,EAAK3P,MAAMmhD,kBACtB/iB,EAAUx4B,KAAK,yBAAKpF,IAAKqD,EAAO5C,MAAO,CAAEmS,MAAO,OAAQ/R,OAAQ,OAAQkX,OAAQ,mCAAqC/E,QAAS,kBAAM,EAAKiuC,uBAAuB9xC,OAE/JyuB,EAAUx4B,KAAK,yBAAKpF,IAAKqD,EAAO5C,MAAO,CAAEmS,MAAO,OAAQ/R,OAAQ,QAAUmS,QAAS,kBAAM,EAAKiuC,uBAAuB9xC,QALrH9L,EAAQ,EAAGA,EAAQ,GAAIA,IAAU,EAAjCA,GAQb,GAAmC,IAA/BvD,KAAKI,MAAM25C,gBACX,IADmC,IAAD,WACzBx2C,GACL,IAAM8L,EAAS9L,EAAQ,EACnB8L,IAAW,EAAK3P,MAAMohD,oBACtBhjB,EAAUx4B,KAAK,yBAAKpF,IAAKqD,EAAO5C,MAAO,CAAEmS,MAAO,OAAQ/R,OAAQ,OAAQkX,OAAQ,mCAAqC/E,QAAS,kBAAM,EAAKkuC,yBAAyB/xC,OAEjKyuB,EAAUx4B,KAAK,yBAAKpF,IAAKqD,EAAO5C,MAAO,CAAEmS,MAAO,OAAQ/R,OAAQ,QAAUmS,QAAS,kBAAM,EAAKkuC,yBAAyB/xC,QALvH9L,EAAQ,EAAGA,EAAQ,GAAIA,IAAU,EAAjCA,GAQb,GAAmC,IAA/BvD,KAAKI,MAAM25C,gBACX,IADmC,IAAD,WACzBx2C,GACL,IAAM8L,EAAS9L,EAAQ,EACnB8L,IAAW,EAAK3P,MAAMqhD,oBACtBjjB,EAAUx4B,KAAK,yBAAKpF,IAAKqD,EAAO5C,MAAO,CAAEmS,MAAO,OAAQ/R,OAAQ,OAAQkX,OAAQ,mCAAqC/E,QAAS,kBAAM,EAAKmuC,yBAAyBhyC,OAEjKyuB,EAAUx4B,KAAK,yBAAKpF,IAAKqD,EAAO5C,MAAO,CAAEmS,MAAO,OAAQ/R,OAAQ,QAAUmS,QAAS,kBAAM,EAAKmuC,yBAAyBhyC,QALvH9L,EAAQ,EAAGA,EAAQ,GAAIA,IAAU,EAAjCA,GAQb,OAAOu6B,I,2CAGUzuB,GAAS,IAClB4L,EAAejb,KAAKI,MAApB6a,WAEFqmC,EADKx/C,IAAOmZ,GAAY5V,UAAa,OAAwB,MACpC,GAATgK,EAAc,GAAK,IACnCkqC,EAAY+H,EAAU,KACtB3mB,EAAQ74B,IAAOy3C,GAAWrrC,OAAO,kBACjC0sB,EAAM94B,IAAOw/C,GAASpzC,OAAO,kBAC7BkvB,EAAWp9B,KAAKI,MAAM8d,SAASzX,MAAMzB,WAAWC,OACtDjF,KAAKC,SAAS,CAAE2gD,gBAAiBvxC,IACjCrP,KAAK6I,iBAAiB8xB,EAAOC,EAAKwC,K,6CAEf/tB,GAAS,IACpB4L,EAAejb,KAAKI,MAApB6a,WAEFqmC,EADKx/C,IAAOmZ,GAAY5V,UAAa,OAAwB,OACnC,EAATgK,EAAc,GAAK,GAAK,IACzCkqC,EAAY+H,EAAW,MACvB3mB,EAAQ74B,IAAOy3C,GAAWrrC,OAAO,kBACjC0sB,EAAM94B,IAAOw/C,GAASpzC,OAAO,kBAC7BkvB,EAAWp9B,KAAKI,MAAM8d,SAASzX,MAAMzB,WAAWC,OACtDjF,KAAKC,SAAS,CAAE4gD,kBAAmBxxC,IACnCrP,KAAK6I,iBAAiB8xB,EAAOC,EAAKwC,K,+CAGb/tB,GAAS,IACtB4L,EAAejb,KAAKI,MAApB6a,WAEFqmC,EADKx/C,IAAOmZ,GAAY5V,UAAa,OAAwB,OACnC,EAATgK,EAAc,GAAK,GAAK,IACzCkqC,EAAY+H,EAAW,MACvB3mB,EAAQ74B,IAAOy3C,GAAWrrC,OAAO,kBACjC0sB,EAAM94B,IAAOw/C,GAASpzC,OAAO,kBAC7BkvB,EAAWp9B,KAAKI,MAAM8d,SAASzX,MAAMzB,WAAWC,OACtDjF,KAAKC,SAAS,CAAE6gD,oBAAqBzxC,IACrCrP,KAAK6I,iBAAiB8xB,EAAOC,EAAKwC,K,+CAEb/tB,GAAS,IACtB4L,EAAejb,KAAKI,MAApB6a,WAEFqmC,EADKx/C,IAAOmZ,GAAY5V,UAAa,OAAwB,QACnC,GAATgK,EAAe,GAAK,GAAK,IAC1CkqC,EAAY+H,EAAW,MACvB3mB,EAAQ74B,IAAOy3C,GAAWrrC,OAAO,kBACjC0sB,EAAM94B,IAAOw/C,GAASpzC,OAAO,kBAC7BkvB,EAAWp9B,KAAKI,MAAM8d,SAASzX,MAAMzB,WAAWC,OACtDjF,KAAKC,SAAS,CAAE8gD,oBAAqB1xC,IACrCrP,KAAK6I,iBAAiB8xB,EAAOC,EAAKwC,K,+BAM5B,IAAD,OAsCL,SAASe,EAAgB59B,GACrB,YAAc6B,IAAV7B,GAAiC,OAAVA,EAChB,KAEJA,EA8BX,SAASuwB,EAAWvwB,EAAOuuB,EAAOD,GAC9B,QAAItuB,EAAQuuB,GAASvuB,EAAQsuB,GAYdojB,KAAXD,OArFH,IA8EgBzxC,EAQb+K,EAAWtL,KAAKI,MAAhBkL,OACFmzB,EA1CN,SAA2BhE,EAAY7xB,GACnC,IAAMgyB,EAAMH,EAAc,OAC1B,OAAiB,IAAb7xB,EACO,CACHF,UAAWkyB,EAAO,MAClBjyB,QAASiyB,GAGA,IAAbhyB,EACO,CACHF,UAAWkyB,EAAO,OAClBjyB,QAASiyB,GAGA,IAAbhyB,EACO,CACHF,UAAWkyB,EAAO,OAClBjyB,QAASiyB,GAIN,CACHlyB,UAAWkyB,EAAO,QAClBjyB,QAASiyB,GAmBD2mB,CAAkBvhD,KAAKI,MAAM6a,WAAYjb,KAAKI,MAAM25C,iBAClE3b,EAvFN,SAA2B79B,GACvB,SAAS89B,EAAW/Y,EAAU7hB,GAC1B,IAAM66B,EAAahZ,EAAShiB,QAAO,SAAU/C,EAAOgD,EAAOqG,GACvD,OAAOrJ,EAAMkD,OAASA,KAE1B,OAA0B,IAAtB66B,EAAW56B,OACJ,KAEJ46B,EAAW,GAAGC,IAEzB,YAAcn8B,IAAV7B,GAAiC,OAAVA,EAChB,CACHsO,GAAI,KACJK,GAAI,KACJC,GAAI,KACJL,KAAM,KACNlB,KAAM,KACNI,KAAM,KACNF,KAAM,KACNqjB,KAAM,KACND,KAAM,KACNP,KAAM,MAGP,CACH9hB,GAAIwvB,EAAW99B,EAAO,MACtB2O,GAAImvB,EAAW99B,EAAO,MACtB4O,GAAIkvB,EAAW99B,EAAO,MACtBuO,KAAMuvB,EAAW99B,EAAO,QACxBqN,KAAMywB,EAAW99B,EAAO,QACxByN,KAAMqwB,EAAW99B,EAAO,QACxBuN,KAAMuwB,EAAW99B,EAAO,QACxBowB,KAAM0N,EAAW99B,EAAO,QACxB2wB,KAAMmN,EAAW99B,EAAO,QACxB4wB,KAAMkN,EAAW99B,EAAO,SAqDZi+B,CAAkBx+B,KAAKN,MAAM6M,oBACzCuG,EAAU9S,KAAKN,MAAfoT,MACF5O,EAASlE,KAAKN,MAAM8wB,SAC1B,OACI,6BACI,yBAAK7vB,MAAO,CAAE2U,gBAAiB,YAAa8N,oBAAqB,MAAOC,qBAAsB,MAAOtiB,OAAQ,OAAQ0T,QAAS,WAAY7T,QAAS,OAAQC,WAAY,SAAU0Y,UAAW,SACxL,wBAAI5Y,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBAAtC,4BAKA,yBAAKjO,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaozB,QAAS,MAAOtzB,WAAY,SACzF,yBAAKoL,UAAuC,OAA5BlM,KAAKN,MAAMshD,aAAwB,iBAAmB,uBAAwBrgD,MAAO,CAAEgO,YAAa,OAASuE,QAAS,kBAAM,EAAK+tC,mBAAmB,QAApK,kCAGA,yBAAK/0C,UAAuC,QAA5BlM,KAAKN,MAAMshD,aAAyB,iBAAmB,uBAAwB9tC,QAAS,kBAAM,EAAK+tC,mBAAmB,SAAtI,yCAKAjhD,KAAKI,MAAMohD,cAAgB,KAEvB,yBAAK7gD,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,sBAAuBozB,QAAS,MAAOtzB,WAAY,SACnG,yBAAKoL,UAA0C,IAA/BlM,KAAKI,MAAM25C,gBAAwB,mBAAqB,yBAA0Bp5C,MAAO,CAAEgO,YAAa,OAASuE,QAAS,kBAAM,EAAK9S,MAAMqhD,eAAe,KAA1K,4BAGA,yBAAKv1C,UAA0C,IAA/BlM,KAAKI,MAAM25C,gBAAwB,mBAAqB,yBAA0Bp5C,MAAO,CAAEgO,YAAa,OAASuE,QAAS,kBAAM,EAAK9S,MAAMqhD,eAAe,KAA1K,4BAGA,yBAAKv1C,UAA0C,IAA/BlM,KAAKI,MAAM25C,gBAAwB,mBAAqB,yBAA0Bp5C,MAAO,CAAEgO,YAAa,OAASuE,QAAS,kBAAM,EAAK9S,MAAMqhD,eAAe,KAA1K,4BAGA,yBAAKv1C,UAA0C,IAA/BlM,KAAKI,MAAM25C,gBAAwB,mBAAqB,yBAA0B7mC,QAAS,kBAAM,EAAK9S,MAAMqhD,eAAe,KAA3I,8BAOhB,yBAAKv1C,UAAU,iBACX,yBAAKvL,MAAO,CAAEC,QAAS,OAAQ6U,iBAA8C,OAA5BzV,KAAKN,MAAMshD,aAAwB,kBAAoB,oBAEpG,yBAAK90C,UAAU,wBAAwBvL,MAAO,CAAE2U,gBAAiBpR,EAAS,QAAUrB,EAAW,QAC3F,wBAAIlC,MAAO,CAAEiO,MAAO1K,EAASrB,EAAW,MAAQ,UAAhD,MACA,wBAAIlC,MAAO,CAAEqwB,WAAY,OAAQpiB,MAAO1K,EAASrB,EAAW,MAAQ,UAAYs7B,EAAgBC,EAAYvvB,MAIhF,OAA5B7O,KAAKN,MAAMshD,aACP,yBAAK90C,UAAU,wBAAwBvL,MAAO,CAAE2U,gBAAiBpR,EAAS,QAAUrB,EAAW,QAC3F,yBAAKqJ,UAAU,4BAA4BvL,MAAO,CAAEiO,MAAO1K,EAASrB,EAAW,MAAQ,UACnF,mCACA,uCAEJ,yBAAKqJ,UAAU,4BACX,wBAAIvL,MAAO,CAAEiO,MAAO1K,EAASrB,EAAW,MAAQ,UAAYs7B,EAAgBC,EAAYlN,MAAxF,IAAgGiN,EAAgBC,EAAYzN,OAC5H,wBAAIhwB,MAAO,CAAEiO,MAAO1K,EAASrB,EAAW,MAAQ,UAAhD,IAA6Ds7B,EAAgBC,EAAYjN,MAAzF,OAGR,KAIR,yBAAKjlB,UAAU,wBAAwBvL,MAAO,CAAE2U,gBAAiBpR,EAAS,QAAUrB,EAAW,QAC3F,yBAAKqJ,UAAU,4BAA4BvL,MAAO,CAAEiO,MAAO1K,EAASrB,EAAW,MAAQ,UACnF,4BAAiC,OAA5B7C,KAAKN,MAAMshD,aAAwB,MAAQ,MAChD,uCAEJ,yBAAK90C,UAAU,4BACX,wBAAIvL,MAAO,CAAEiO,MAAO1K,EAASrB,EAAW,MAAQ,UAAYs7B,EAAgBC,EAAYtwB,MAAxF,IAAgGqwB,EAAgBC,EAAYxwB,OAC5H,wBAAIjN,MAAO,CAAEiO,MAAO1K,EAASrB,EAAW,MAAQ,UAAhD,IAA6Ds7B,EAAgBC,EAAYpwB,MAAzF,OAGR,yBAAK9B,UAAU,wBAAwBvL,MAAO,CAAE2U,gBAAiBwb,EAAWsN,EAAYtvB,KAAM,IAAK,IAAM,QAAUjM,EAAW,UAC1H,yBAAKqJ,UAAU,4BAA4BvL,MAAO,CAAEiO,MAAOkiB,EAAWsN,EAAYtvB,KAAM,IAAK,IAAMjM,EAAW,QAAU,UACpH,kCAAO,mCACP,oCAEJ,wBAAIlC,MAAO,CAAEqwB,WAAY,OAAQpiB,MAAOkiB,EAAWsN,EAAYtvB,KAAM,IAAK,IAAMjM,EAAW,QAAU,UAAYs7B,EAAgBC,EAAYtvB,MAA7I,MAEJ,yBAAK5C,UAAU,wBAAwBvL,MAAO,CAAE2U,gBAAiBwb,EAAWsN,EAAYjvB,GAAI,GAAI,IAAM,QAAUtM,EAAW,QACvH,yBAAKqJ,UAAU,4BAA4BvL,MAAO,CAAEiO,MAAOkiB,EAAWsN,EAAYjvB,GAAI,GAAI,IAAMtM,EAAW,MAAQ,UAC/G,mCAEJ,wBAAIlC,MAAO,CAAEqwB,WAAY,OAAQpiB,MAAOkiB,EAAWsN,EAAYjvB,GAAI,GAAI,IAAMtM,EAAW,MAAQ,UA7FlG,QADGtC,EA8FuH69B,EAAYjvB,UA7FpH/M,IAAV7B,GAAiC,KAAVA,EAClC,KAEJA,IA4FK,yBAAK2L,UAAU,wBAAwBvL,MAAO,CAAE2U,gBAAiBwb,EAAWsN,EAAYlvB,GAAI,GAAI,IAAM,QAAUrM,EAAW,QACvH,yBAAKqJ,UAAU,4BAA4BvL,MAAO,CAAEiO,MAAOkiB,EAAWsN,EAAYlvB,GAAI,GAAI,IAAMrM,EAAW,MAAQ,UAC/G,kCAAO,mCACP,oCAEJ,wBAAIlC,MAAO,CAAEqwB,WAAY,OAAQpiB,MAAOkiB,EAAWsN,EAAYlvB,GAAI,GAAI,IAAMrM,EAAW,MAAQ,UAAYs7B,EAAgBC,EAAYlvB,OAKhJ,yBAAKvO,MAAO,CAAE+T,SAAU,aAEY,OAA5B1U,KAAKN,MAAMshD,aACP,yBAAKrgD,MAAO,CAAE+T,SAAU,WAAY3T,OAAoC,OAA5Bf,KAAKN,MAAMshD,aAAwB,IAAM,IAAKluC,MAAOA,EAAQ,GAAI4rB,IAAK,EAAGC,KAAM,KACvH,yBAAKh+B,MAAO,CAAEC,QAAS,OAAQG,OAAQ,OAAQC,oBAAqB,UAAYo/C,GAAcpgD,KAAKI,MAAM25C,iBAAmB,UACvH/5C,KAAK0hD,sBAGd,KAGR,kBAAC,GAAD,CACIzlB,OAAQ,OACRhK,IAAKjyB,KAAKI,MAAM8d,SAAS8J,OACzBza,IAAKvN,KAAKI,MAAM8d,SAASzX,MACzBwU,WAAYjb,KAAKI,MAAM6a,WACvBof,OAAQ,UAAY/uB,EACpByV,OAAQ,SAAWzV,EACnB7H,KAAM,KACN6H,OAAQtL,KAAKN,MAAMshD,aACnBt4C,UAAW+1B,EAAY/1B,UACvBC,QAAS81B,EAAY91B,QACrB5H,OAAQ,GACR+R,MAAOA,EACPlK,SAAU5I,KAAKI,MAAM25C,gBACrBlrB,MAAO,IACPC,MAAO,IACPtB,SAAS,EACTD,SAAS,EACTE,YAAY,UACZ2D,YAAa,0BACblR,IAAK,EACLC,IAAK,MAGuB,OAA5BngB,KAAKN,MAAMshD,aACP,kBAAC,GAAD,CACI/kB,OAAQ,OACRhK,IAAKjyB,KAAKI,MAAM8d,SAAS8J,OACzBza,IAAKvN,KAAKI,MAAM8d,SAASzX,MACzBwU,WAAYjb,KAAKI,MAAM6a,WACvBof,OAAQ,UAAY/uB,EACpByV,OAAQ,SAAWzV,EACnB7H,KAAM,MACN6H,OAAQtL,KAAKN,MAAMshD,aACnBt4C,UAAW+1B,EAAY/1B,UACvBC,QAAS81B,EAAY91B,QACrB5H,OAAQ,GACR+R,MAAOA,EACPlK,SAAU5I,KAAKI,MAAM25C,gBACrBlrB,MAAO,GACPC,MAAO,GACPtB,SAAS,EACTD,SAAS,EACTE,YAAa,UACb2D,YAAa,0BACblR,IAAK,EACLC,IAAK,MAET,KAER,kBAAC,GAAD,CACI8b,OAAQ,OACRhK,IAAKjyB,KAAKI,MAAM8d,SAAS8J,OACzBza,IAAKvN,KAAKI,MAAM8d,SAASzX,MACzBwU,WAAYjb,KAAKI,MAAM6a,WACvBof,OAAQ,UAAY/uB,EACpByV,OAAQ,SAAWzV,EACnB7H,KAAM,MACN6H,OAAQtL,KAAKN,MAAMshD,aACnBt4C,UAAW+1B,EAAY/1B,UACvBC,QAAS81B,EAAY91B,QACrB5H,OAAQ,GACR+R,MAAOA,EACPlK,SAAU5I,KAAKI,MAAM25C,gBACrBlrB,MAAO,GACPC,MAAO,GACPtB,SAAS,EACTD,SAAS,EACTE,YAAa,UACb2D,YAAa,0BACblR,IAAK,EACLC,IAAK,MAET,kBAAC,GAAD,CACI8b,OAAQ,OACRhK,IAAKjyB,KAAKI,MAAM8d,SAAS8J,OACzBza,IAAKvN,KAAKI,MAAM8d,SAASzX,MACzBwU,WAAYjb,KAAKI,MAAM6a,WACvBof,OAAQ,YAAc/uB,EACtByV,OAAQ,WAAazV,EACrB7H,KAAM,OACNiF,UAAW+1B,EAAY/1B,UACvBC,QAAS81B,EAAY91B,QACrB5H,OAAQ,GACR+R,MAAOA,EACPlK,SAAU5I,KAAKI,MAAM25C,gBACrBlrB,MAAO,GACPC,MAAO,IACPtB,SAAS,EACTD,SAAS,EACTE,YAAa,UACb2D,YAAa,UACblR,IAAK,GACLC,IAAK,IACL7U,OAAQtL,KAAKN,MAAMshD,eAEvB,kBAAC,GAAD,CACI/kB,OAAQ,OACRhK,IAAKjyB,KAAKI,MAAM8d,SAAS8J,OACzBza,IAAKvN,KAAKI,MAAM8d,SAASzX,MACzBwU,WAAYjb,KAAKI,MAAM6a,WACvBof,OAAQ,UAAY/uB,EACpByV,OAAQ,SAAWzV,EACnB7H,KAAM,KACNiF,UAAW+1B,EAAY/1B,UACvBC,QAAS81B,EAAY91B,QACrB2C,OAAQtL,KAAKN,MAAMshD,aACnBjgD,OAAQ,GACR+R,MAAOA,EACPlK,SAAU5I,KAAKI,MAAM25C,gBACrBlrB,MAAO,GACPC,MAAO,GACPtB,SAAS,EACTD,SAAS,EACTE,YAAa,UACb2D,YAAa,0BACblR,IAAK,GACLC,IAAK,KAET,kBAAC,GAAD,CACI8b,OAAQ,OACRhK,IAAKjyB,KAAKI,MAAM8d,SAAS8J,OACzBza,IAAKvN,KAAKI,MAAM8d,SAASzX,MACzBwU,WAAYjb,KAAKI,MAAM6a,WACvBof,OAAQ,UAAY/uB,EACpByV,OAAQ,SAAWzV,EACnB7H,KAAM,KACNiF,UAAW+1B,EAAY/1B,UACvBC,QAAS81B,EAAY91B,QACrB5H,OAAQ,GACR+R,MAAOA,EACPlK,SAAU5I,KAAKI,MAAM25C,gBACrBlrB,MAAO,GACPC,MAAO,GACPtB,SAAS,EACTD,SAAS,EACTE,YAAa,UACb2D,YAAa,0BACblR,IAAK,EACLC,IAAK,IACL7U,OAAQtL,KAAKN,MAAMshD,sB,GAxhBlBxhD,aCqKdmiD,G,2MArMXjiD,MAAQ,CACJo/B,cAAc,EACdqV,WAAY,CAAC,EAAG,EAAG,EAAG,GACtBnV,YAAa,EACb/jB,WAAYnZ,IAAOA,MAASoM,OAAO,YAAa,YAAY7I,UAC5D00C,gBAAiB,EACjB6H,aAAc,G,EAElBC,cAAgB,SAACpiB,GACb,EAAKx/B,SAAS,CAAEk0C,WAAY1U,K,EAQhCJ,eAAiB,SAACC,GACd,GAAIA,EAAY,CACZ,IAAIC,EAAgBpqB,SAASC,eAAekqB,GACxCC,GAAiBA,EAAcC,mB,EAS3C5sB,SAAW,SAAC7Q,EAAMy1B,GAEd,EAAKv3B,SACD,CACIgb,WAAYlZ,EAAKsD,a,EAI7Bo8C,eAAiB,SAAClhD,GACd,EAAKN,SACD,CACI85C,gBAAiBx5C,K,EAK7Bib,SAAW,SAACzK,GAAO,IACPmN,EAAa,EAAK9d,MAAlB8d,SACAjD,EAAe,EAAKvb,MAApBub,WACF0kB,EAAOzhB,EAASQ,aAAakhB,SAC7BC,EAAW/9B,IAAOA,IAAO69B,GAAMzxB,OAAO,aAAa7I,UAIzD,OAAQ0L,EAAE6F,OAAOrW,OACb,IAAK,IACD,IAAMkb,EAAQR,EAJV,MAMJ4kB,GADc/9B,IAAOA,IAAO2Z,GAAOvN,OAAO,aAAa7I,WAClC,EAAKuN,SAAS9Q,IAAO2Z,IAC1C,MACJ,IAAK,IACD,IAAMC,EAAQ5Z,IAAOA,MAASoM,OAAO,aACrC,EAAK0E,SAAS8I,GACd,MACJ,IAAK,IACD,IAAMC,EAAQV,EAbV,MAeJU,GADc7Z,IAAOA,MAASoM,OAAO,aAAa7I,WAChC,EAAKuN,SAAS9Q,IAAO6Z,M,8EArD/C3b,KAAKC,SAAS,CACV6+B,cAAe9+B,KAAKN,MAAMo/B,iB,uCASjBv7B,GACb,OAAIA,IAAUvD,KAAKN,MAAMs/B,c,mCAiDhB3vB,GAKT,OAJarP,KAAKN,MAAMy0C,WACNvpC,MAAK,SAAUF,EAAMnH,EAAO6B,GAC1C,OAAOsF,IAAS2E,O,+BAKd,IAAD,OAGG6O,GAFW+zB,KAAXD,OAEahyC,KAAKI,MAAlB8d,UAOF4hB,EAAY,CACdC,cAAe,CAAE7gB,aAAc,MAAOtQ,MAAO,YAAaqJ,OAAQ,sBAAuBxD,QAAS,UAAW1T,OAAQ,SAGrH+gD,EATA,CAAC,CAAE,KAAQ,2BAAQ,YAAe,sBAClC,CAAE,KAAQ,qBAAO,YAAe,wBAChC,CAAE,KAAQ,eAAM,YAAe,eAC/B,CAAE,KAAQ,2BAAQ,YAAe,kBAMA71C,KACjC,SAACvB,EAAMnH,GAAP,OAAiB,kBAAC,KAAD,CAAQ2P,QAAS,EAAKmsB,eAAe9oB,KAAK,EAAM7L,EAAKm2B,aAAc3gC,IAAKqD,EAAO5C,MAAOm/B,EAAUC,eAC7G,4BAAKr1B,EAAK4G,UAGZ0uB,EAAgB,CAClBC,aAAc,CAAEvrB,SAAU,WAAYwrB,MAAO,MAAOxB,IAAK,OAAQ5rB,MAAO,QAASqtB,WAAY,QAASC,UAAW,eAAgBC,OAAQ,MAAOnhB,aAAc,OAC9JohB,iBAAkB,CAAE1/B,QAAS,QAC7B2/B,WAAY,CAAE3/B,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,UACrE2/B,WAAW,cAAG/rB,QAAS,MAAO3B,MAAO,QAASoM,aAAc,MAAOvF,YAAa,sBAAuBF,YAAa,QAASC,YAAa,MAAO5Y,WAAY,QAAnJ,eAAyK,QAEvL,OACI,yBAAKH,MAAO,CAAEoc,YAAa,OAAQkU,aAAc,SAC7C,yBAAKtwB,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,gBAAiBpS,WAAY,SAAUE,OAAQ,SAC1F,yBAAKJ,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,mBAAoBC,cAAe,QACnF,kBAAC,KAAD,CAAY4U,qBAAsB,SAAAC,GAAW,OAAIA,EAAYC,YAAY6hB,OAAQA,KAAQ3a,aAAc,SAACC,GAAc,OAAOA,EAAUpb,MAASqb,QAAQ,QAAUD,EAAUpb,IAAOoc,EAASQ,aAAakhB,SAAS56B,WAAY,YAAY+7B,SAAWnuB,SAAU5S,KAAK4S,SAAUrS,MAAOuB,IAAO9B,KAAKN,MAAMub,YAAamC,YAAY,IAChU,yBAAKzc,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,MAAOH,WAAY,SACjG,kBAAC,KAAD,CAAQP,MAAM,IAAI8c,MAAM,SAASC,KAAK,cAAcpK,QAASlT,KAAKwb,WAClE,kBAAC,KAAD,CAAQjb,MAAM,IAAI8c,MAAM,SAASC,KAAK,eAAepK,QAASlT,KAAKwb,WACnE,kBAAC,KAAD,CAAQjb,MAAM,IAAI8c,MAAM,SAASC,KAAK,eAAepK,QAASlT,KAAKwb,aAG3E,yBAAK7a,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAU6T,SAAU,aAC3D,8DACA,yBAAK/T,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,iBAAkBC,cAAe,QAAU6gD,GAC/F,yBAAK5uC,QAAS,kBAAM,EAAK+tB,gBAAgBtgC,MAAO,CAAEqT,OAAQ,UAAWlT,WAAY,QAC7E,yBAAKO,IAAK0gD,KAAYxgD,IAAI,aAAaZ,MAAO,CAAEmS,MAAO,OAAQ/R,OAAQ,WAE3E,yBAAKJ,MAAOX,KAAKN,MAAMo/B,aAAekB,EAAcC,aAAeD,EAAcM,kBAC7E,wBAAIp0B,UAAU,sBAAd,4BACA,yBAAKvL,MAAO,CAAE4Y,UAAW,OAAQiL,aAAc,SAC3C,kBAAC,KAASiT,MAAV,CAAgB9kB,aAAc3S,KAAKN,MAAMy0C,WAAYx+B,GAAI,iBAAkBhV,MAAO,CAAEmS,MAAO,OAAQlS,QAAS,OAAQ6U,iBAAkB,gBAAiBC,WAAY,OAAS9C,SAAU5S,KAAK6hD,eACvL,yBAAKlhD,MAAOq/B,EAAcO,YACtB,kBAAC,KAAD,CAAUhgC,MAAO,IACjB,wBAAII,MAAOq/B,EAAcQ,YAAzB,6BAMJ,yBAAK7/B,MAAOq/B,EAAcO,YACtB,kBAAC,KAAD,CAAUhgC,MAAO,IACjB,wBAAII,MAAOq/B,EAAcQ,YAAzB,uBAMJ,yBAAK7/B,MAAOq/B,EAAcO,YACtB,kBAAC,KAAD,CAAUhgC,MAAO,IACjB,wBAAII,MAAOq/B,EAAcQ,YAAzB,iBAEJ,yBAAK7/B,MAAOq/B,EAAcO,YACtB,kBAAC,KAAD,CAAUhgC,MAAO,IACjB,wBAAII,MAAOq/B,EAAcQ,YAAzB,kCAOxB,yBAAK7/B,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaD,OAAQ,OAAQwY,UAAW,SACxF,8BACA,kBAAC,GAAD,CAAe4G,IAAK,IAAKD,IAAK,EAAG65B,gBAAiB/5C,KAAKN,MAAMq6C,gBAAiB4F,YAAa3/C,KAAKN,MAAMub,WAAY8F,OAAO,oBAAoBsZ,OAAO,2BAExJ,yBAAK15B,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,WAAYD,OAAQ,OAAQ8R,OAAQ,aACpF,8BACA,kBAAC,GAAD,CAAYsN,IAAK,IAAKD,IAAK,EAAG65B,gBAAiB/5C,KAAKN,MAAMq6C,gBAAiB4F,YAAa3/C,KAAKN,MAAMub,WAAY8F,OAAO,gBAAgBsZ,OAAO,uBAEjJ,yBAAKnuB,UAAU,cACf,yBAAKA,UAAU,iBAEX,yBAAKyJ,GAAG,qBAAqBhV,MAAO,CAAEC,QAASZ,KAAKq1C,aAAa,GAAK,OAAS,SAC3E,kBAAC,GAAD,CAAgB/pC,OAAQ,UAAW2P,WAAYjb,KAAKN,MAAMub,WAAY8+B,gBAAiB/5C,KAAKN,MAAMq6C,gBAAiB77B,SAAUA,EAAUnb,MAAM,QAAQ0+C,eAAgBzhD,KAAKyhD,iBAC1K,kBAAC,GAAD,CAAWxmC,WAAYjb,KAAKN,MAAMub,WAAY8+B,gBAAiB/5C,KAAKN,MAAMq6C,gBAAiB77B,SAAUA,KAOzG,yBAAKvI,GAAG,uBAAuBhV,MAAO,CAAEC,QAASZ,KAAKq1C,aAAa,GAAK,QAAU,SAC9E,kBAAC,GAAD,CAAgBp6B,WAAYjb,KAAKN,MAAMub,WAAYomB,OAAQ,UAAWE,eAAgBvhC,KAAKN,MAAMq6C,gBAAiB77B,SAAUA,EAAUnb,MAAM,uBAC5I,kBAAC,GAAD,CAAiBkY,WAAYjb,KAAKN,MAAMub,WAAYrH,OAAQ5T,KAAKN,MAAMkU,OAAQmmC,gBAAiB/5C,KAAKN,MAAMq6C,gBAAiB77B,SAAUA,EAAUnb,MAAM,MAM1J,yBAAK4S,GAAG,cAAchV,MAAO,CAAEC,QAASZ,KAAKq1C,aAAa,GAAK,QAAU,SACrE,kBAAC,GAAD,CAAYp6B,WAAYjb,KAAKN,MAAMub,WAAY8+B,gBAAiB/5C,KAAKN,MAAMq6C,gBAAiB77B,SAAUA,EAAUnb,MAAM,kBAG1H,yBAAK4S,GAAG,gBAAgBhV,MAAO,CAAEC,QAASZ,KAAKq1C,aAAa,GAAK,QAAU,SACvE,kBAAC,GAAD,CAAgBp6B,WAAYjb,KAAKN,MAAMub,WAAY8+B,gBAAiB/5C,KAAKN,MAAMq6C,gBAAiB77B,SAAUA,EAAUnb,MAAM,oC,GA9LpHvD,a,OC4BvB,SAASwiD,GAAalgB,EAAKmgB,GAC9B,QAAI9+C,MAAMC,QAAQ0+B,IACCA,EAAIx+B,QAAO,SAAUqG,EAAMpG,EAAOqG,GAC7C,OAAOD,EAAKe,KAAK1F,WAAWC,SAAWg9C,KAO5C,SAAS9d,GAAW7F,EAAYrjB,EAAYgnC,GAC/C,SAASn1B,EAAUvsB,GACf,YAAc6B,IAAV7B,GAAiC,OAAVA,GAA4B,IAAVA,EAClC,KAEJA,EAAMyE,WAAWC,OAE5B,IAAM21B,EAAM3f,EAAc,OACpB0f,EAAQ1f,EAAc,MAC5B,GAAI9X,MAAMC,QAAQk7B,GAAa,CAC3B,IAAMzD,EAAcyD,EAAWh7B,QAAO,SAAUqG,EAAMpG,EAAOqG,GACzD,IAAMvB,EAAOvG,IAAO6H,EAAKnG,QAAQwB,WAAWC,OAAS0E,EAAK0E,QAAQrJ,WAAWC,OAAQ,gBAAgBI,UACrG,OAAOs1B,GAAStyB,GAAQA,GAAQuyB,KAEpC,OAA2B,IAAvBC,EAAYn3B,OACL,KAEU,iBAAjBu+C,EACepnB,EAAY5uB,KAAI,SAAUtC,EAAMpG,EAAOqG,GAClD,IAAM7G,EAAQ+pB,EAAUnjB,EAAKu4C,MAAQ,IAAMp1B,EAAUnjB,EAAK06B,KAAO,IAAMvX,EAAUnjB,EAAKw4C,KACtF,MAAO,CACHp/C,MAAOA,EACPq/C,QAASr/C,EACT8B,QAAS8E,MAKA,iBAAjBs4C,EACepnB,EAAY5uB,KAAI,SAAUtC,EAAMpG,EAAOqG,GAClD,IAAM7G,EAAQ+pB,EAAUnjB,EAAKu4C,MAAQ,IAAMp1B,EAAUnjB,EAAK06B,KAAO,IAAMvX,EAAUnjB,EAAKw4C,KACtF,MAAO,CACHp/C,MAAOA,EACPq/C,QAASr/C,EACT8B,QAAS8E,MAKA,iBAAjBs4C,EACepnB,EAAY5uB,KAAI,SAAUtC,EAAMpG,EAAOqG,GAClD,IAAM7G,EAAQ+pB,EAAUnjB,EAAK06B,KAAO,IAAMvX,EAAUnjB,EAAKk7B,MACzD,MAAO,CACH9hC,MAAOA,EACPq/C,QAASr/C,EACT8B,QAAS8E,MAKA,iBAAjBs4C,EACepnB,EAAY5uB,KAAI,SAAUtC,EAAMpG,EAAOqG,GAElD,MAAO,CACH7G,MAFU,eAGVq/C,QAHU,eAIVv9C,QAAS8E,MAKA,iBAAjBs4C,EACepnB,EAAY5uB,KAAI,SAAUtC,EAAMpG,EAAOqG,GAElD,MAAO,CACH7G,MAFU,eAGVq/C,QAHU,eAIVv9C,QAAS8E,MAKA,iBAAjBs4C,EACepnB,EAAY5uB,KAAI,SAAUtC,EAAMpG,EAAOqG,GAElD,MAAO,CACH7G,MAFU,eAGVq/C,QAHU,eAIVv9C,QAAS8E,MAKA,iBAAjBs4C,EACepnB,EAAY5uB,KAAI,SAAUtC,EAAMpG,EAAOqG,GAClD,IAAM7G,EAAQ+pB,EAAUnjB,EAAKu4C,MAAQ,IAAMp1B,EAAUnjB,EAAKw4C,KAC1D,MAAO,CACHp/C,MAAOA,EACPq/C,QAASr/C,EACT8B,QAAS8E,MAKA,uBAAjBs4C,EACepnB,EAAY5uB,KAAI,SAAUtC,EAAMpG,EAAOqG,GAElD,MAAO,CACH7G,MAFU,qBAGVq/C,QAHU,qBAIVv9C,QAAS8E,MAKA,uBAAjBs4C,EACepnB,EAAY5uB,KAAI,SAAUtC,EAAMpG,EAAOqG,GAElD,MAAO,CACH7G,MAFU,qBAGVq/C,QAHU,qBAIVv9C,QAAS8E,MAKA,uBAAjBs4C,EACepnB,EAAY5uB,KAAI,SAAUtC,EAAMpG,EAAOqG,GAElD,MAAO,CACH7G,MAFU,qBAGVq/C,QAHU,qBAIVv9C,QAAS8E,MAKA,uBAAjBs4C,EACepnB,EAAY5uB,KAAI,SAAUtC,EAAMpG,EAAOqG,GAElD,MAAO,CACH7G,MAFU,qBAGVq/C,QAHU,qBAIVv9C,QAAS8E,MAKA,uBAAjBs4C,EACepnB,EAAY5uB,KAAI,SAAUtC,EAAMpG,EAAOqG,GAElD,MAAO,CACH7G,MAFU,qBAGVq/C,QAHU,qBAIVv9C,QAAS8E,MAKA,uBAAjBs4C,EACepnB,EAAY5uB,KAAI,SAAUtC,EAAMpG,EAAOqG,GAClD,IAAM7G,EAAQ+pB,EAAUnjB,EAAKu4C,MAAQ,IAAMp1B,EAAUnjB,EAAKw4C,KAC1D,MAAO,CACHp/C,MAAOA,EACPq/C,QAASr/C,EACT8B,QAAS8E,MAKA,uBAAjBs4C,EACepnB,EAAY5uB,KAAI,SAAUtC,EAAMpG,EAAOqG,GAClD,IAAM7G,EAAQ+pB,EAAUnjB,EAAKu4C,MAAQ,IAAMp1B,EAAUnjB,EAAKw4C,KAC1D,MAAO,CACHp/C,MAAOA,EACPq/C,QAASr/C,EACT8B,QAAS8E,MAKA,UAAjBs4C,EACepnB,EAAY5uB,KAAI,SAAUtC,EAAMpG,EAAOqG,GAElD,MAAO,CACH7G,MAFU,QAGVq/C,QAHU,QAIVv9C,QAAS8E,MAKA,gBAAjBs4C,EACepnB,EAAY5uB,KAAI,SAAUtC,EAAMpG,EAAOqG,GAClD,IAAM7G,EAAQ,oBACd,MAAO,CACHA,MAAOA,EACPq/C,QAASr/C,EACT8B,QAAS8E,MAKA,iBAAjBs4C,EACepnB,EAAY5uB,KAAI,SAAUtC,EAAMpG,EAAOqG,GAClD,IAAM7G,EAAQ,QAAU+pB,EAAUnjB,EAAKw7B,UACvC,MAAO,CACHpiC,MAAOA,EACPq/C,QAASr/C,EACT8B,QAAS8E,MAKd,KAEX,OAAO,KAGJ,SAAS04C,GAAWnJ,GACvB,GAAI/1C,MAAMC,QAAQ81C,GAAY,CAQ1B,IAPA,IAAI3uC,EAAS2uC,EAAU51C,QAAO,SAAU/C,EAAOgD,EAAOqG,GAIlD,OAHYA,EAAIqC,KAAI,SAAU1L,EAAOgD,EAAOqG,GACxC,OAAOrJ,EAAM6hD,WAENn3C,QAAQ1K,EAAM6hD,WAAa7+C,KAEtC++C,EAAU,GAPY,WAQjB/+C,GACL,IACMg/C,EADUh4C,EAAOhH,GACM6+C,QACvBI,EAActJ,EAAU51C,QAAO,SAAU/C,EAAOgD,EAAOqG,GACzD,OAAOrJ,EAAM6hD,UAAYG,KAE7BD,EAAQh9C,KAAKk9C,IANRj/C,EAAQ,EAAGA,EAAQgH,EAAO7G,OAAQH,IAAU,EAA5CA,GAQT,OAAO++C,EAEX,OAAO,KAIJ,SAASG,GAAcC,EAAWznC,EAAYgnC,GACjD,SAASU,EAAYV,GACjB,MAAqB,iBAAjBA,EACO,qBAEU,iBAAjBA,EACO,qBAEU,iBAAjBA,EACO,oBAEJ,qBAEX,SAASW,EAAsBX,GAC3B,MAAqB,iBAAjBA,EACO,qBAEU,iBAAjBA,EACO,qBAEU,iBAAjBA,EACO,qBAEJ,qBAEX,SAASn1B,EAAUvsB,GACf,YAAc6B,IAAV7B,GAAiC,OAAVA,GAA4B,IAAVA,GAAyB,KAAVA,EACjD,KAE4B,IAAnCA,EAAMyE,WAAW7E,MAAM,QAChB,GAEJI,EAAMyE,WAAWC,OAE5B,IAAM01B,EAAQ1f,EAAc,MAC5B,SAAS4nC,EAAYZ,GACjB,MAAqB,iBAAjBA,EACO,GAEU,iBAAjBA,EACO,GAEU,UAAjBA,EACO,GAEU,gBAAjBA,EACO,GAGU,iBAAjBA,EACO,GAGJ,EAEX,SAASa,EAAWb,EAAcp9C,GAC9B,SAASk+C,EAASxiD,GACd,OAAc,OAAVA,QAA4B6B,IAAV7B,EACX,KAEJA,EAAMyE,WAAWC,OAE5B,GAAqB,iBAAjBg9C,EACA,OAAOriD,OAAOiF,EAAQsgC,UAE1B,GAAqB,iBAAjB8c,EACA,OAAOriD,OAAOiF,EAAQsgC,UAE1B,GAAqB,iBAAjB8c,EACA,OAAOriD,OAAOiF,EAAQmgC,UAE1B,GAAqB,iBAAjBid,EACA,OAAOriD,OAAOiF,EAAQ0gC,UAE1B,GAAqB,iBAAjB0c,EACA,OAAOriD,OAAOiF,EAAQ0gC,UAE1B,GAAqB,iBAAjB0c,EACA,OAAOp9C,EAAQ0gC,SAASvgC,WAAa,KAAO+9C,EAASl+C,EAAQw/B,KAAO,KAAO0e,EAASl+C,EAAQ+J,OAEhG,GAAqB,iBAAjBqzC,EACA,OAAOriD,OAAOiF,EAAQ0gC,UAAY,KAAOwd,EAASl+C,EAAQ+J,OAE9D,GAAqB,uBAAjBqzC,EACA,OAAOriD,OAAOiF,EAAQ0gC,UAE1B,GAAqB,uBAAjB0c,EACA,OAAOriD,OAAOiF,EAAQsgC,UAE1B,GAAqB,uBAAjB8c,EACA,OAAOriD,OAAOiF,EAAQ0gC,UAE1B,GAAqB,uBAAjB0c,EACA,OAAOriD,OAAOiF,EAAQsgC,UAE1B,GAAqB,uBAAjB8c,EACA,OAAOriD,OAAOiF,EAAQ0gC,UAAY3lC,OAAOiF,EAAQsgC,UAErD,GAAqB,uBAAjB8c,EACA,OAAOriD,OAAOiF,EAAQ0gC,UAE1B,GAAqB,uBAAjB0c,EACA,OAAOriD,OAAOiF,EAAQ0gC,UAE1B,GAAqB,UAAjB0c,EAA0B,CAE1B,IAAMe,EAAkBn+C,EAAQ0gC,SAASvgC,WAAW2gB,MAAM,KAE1D,OAA2B,OAAvBq9B,EAAgB,SAAsC5gD,IAAvB4gD,EAAgB,IAAkD,IAA9BA,EAAgB,GAAGt/C,QAEtFxB,QAAQC,IAAI0C,GACLm+C,EAAgB,GAAK,KAAOD,EAASl+C,EAAQw/B,KAAO,KAAO0e,EAASl+C,EAAQ+J,QAErD,IAA9Bo0C,EAAgB,GAAGt/C,OACZmB,EAAQw/B,IAAIr/B,WAAWC,OAAS,KAAOJ,EAAQ+J,MAAM5J,WAAWC,OAEpE+9C,EAAgB,GAAK,WAAaD,EAASl+C,EAAQw/B,KAAO,KAAO0e,EAASl+C,EAAQ+J,OAE7F,MAAqB,gBAAjBqzC,OAEiC7/C,IAA7BxC,OAAOiF,EAAQsgC,WAAwD,OAA7BvlC,OAAOiF,EAAQsgC,WAAmD,IAA7BvlC,OAAOiF,EAAQsgC,eAC7D/iC,IAA7BxC,OAAOiF,EAAQ88B,WAAwD,OAA7B/hC,OAAOiF,EAAQ88B,WAAmD,IAA7B/hC,OAAOiF,EAAQ88B,UACvF,OAEJ,WAEsBv/B,IAA7BxC,OAAOiF,EAAQ88B,WAAwD,OAA7B/hC,OAAOiF,EAAQ88B,WAAmD,IAA7B/hC,OAAOiF,EAAQ88B,UACvF,MAEJ,KAGU,iBAAjBsgB,EACOn1B,EAAUjoB,EAAQ88B,UAAY,KAAO7U,EAAUjoB,EAAQw/B,KAAO,KAAOvX,EAAUjoB,EAAQ+J,OAG3F,EAEX,GAAIzL,MAAMC,QAAQs/C,IAAcA,EAAUh/C,OAAS,EAyC/C,OAxCgBg/C,EAAUz2C,KAAI,SAAUtC,EAAMpG,EAAOqG,GAGjD,IAFA,IAAM7G,EAAQ4G,EAAK,GAAG5G,MAClBkgD,EAAc,GACT1/C,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CAKrC,IAJA,IAAMmF,EAAYiyB,EAAiB,GAARp3B,EAAa,GAAK,IACvCoF,EAAUgyB,EAAuB,IAAbp3B,EAAQ,GAAU,GAAK,IAC7C8/B,EAAMwf,EAAYZ,GAClBiB,EAAc,GACT3/C,EAAQ,EAAGA,EAAQoG,EAAKjG,OAAQH,IAAS,CAC9C,IAAMsB,EAAU8E,EAAKpG,GAAOsB,QACtBs+C,EAAWL,EAAWb,EAAcp9C,GACpC24C,EAAc17C,IAAO+C,EAAQrB,QAAQwB,WAAaH,EAAQwJ,QAAQrJ,WAAY,gBAAgBK,UAChGqD,GAAa80C,GAAeA,EAAc70C,IAC1C06B,GAAY8f,EACZD,EAAY59C,KAAKT,IAGzBo+C,EAAY39C,KAAK,CACb/E,MAAO8iC,EACP36B,UAAWA,EACXC,QAASA,EACTu6C,YAAaA,IAIrB,IACM1X,GAAmD,IADvC,CAAC,eAAM,eAAM,gBACDvgC,QAAQg3C,GAEhCrb,EAAUqc,EAAYh3C,KAAI,SAAUtC,EAAMpG,EAAOqG,GACnD,OACI,yBAAK1J,IAAKqD,EAAO5C,MAAO,CAAEyiD,aAAc7/C,EAAQ,GAAK,GAAK,GAAc,GAATA,GAAcA,GAAS0/C,EAAYv/C,OAAS,EAAIi/C,EAAYV,GAAgB,aAAeU,EAAYV,GAAgB,aAAczY,aAAcmZ,EAAYV,GAAgB,aAAcrT,UAAW+T,EAAYV,GAAgB,aAAc/pC,eAAgB,WAAYtX,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY2qC,EAAc,SAAW,GAAI32B,WAAY,WAAYS,gBAA2C,OAA1BwX,EAAUnjB,EAAKpJ,OAAkB,QAAU,GAAIqzB,UAAW,SAAW9G,EAAUnjB,EAAKpJ,WAGtiB,OACI,yBAAKL,IAAKqD,EAAO5C,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,uBAAwB4yB,UAAW,SAC/F,yBAAKjzB,MAAO,CAAEyiD,YAAaT,EAAYV,GAAgB,aAAczY,aAAcmZ,EAAYV,GAAgB,aAAcrT,UAAW+T,EAAYV,GAAgB,aAAc/pC,eAAgB,WAAY5C,gBAAiBstC,EAAsBX,GAAerhD,QAAS,OAAQC,WAAY,SAAUmO,SAAU,SAAWjM,GAC/T6jC,MAMjB,GAAqB,iBAAjBqb,EAAuB,CAEvB,IADA,IAAIoB,EAAO,GACF9/C,EAAQ,EAAGA,EAAQ,GAAIA,IAC5B8/C,EAAK/9C,KAAK,CACN/E,MAAO,IAGf,IAAMqmC,EAAUyc,EAAKp3C,KAAI,SAAUtC,EAAMpG,EAAOqG,GAC5C,OACI,yBAAK1J,IAAKqD,EAAO5C,MAAO,CAAEyiD,aAAc7/C,EAAQ,GAAK,GAAK,GAAc,GAATA,GAAcA,GAAS8/C,EAAK3/C,OAAS,EAAIi/C,EAAYV,GAAgB,aAAeU,EAAYV,GAAgB,aAAczY,aAAcmZ,EAAYV,GAAgB,aAAcrT,UAAW+T,EAAYV,GAAgB,aAAc/pC,eAAgB,WAAYtX,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WAAaisB,EAAUnjB,EAAKpJ,WAGja,OACI,yBAAKI,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,uBAAwB4yB,UAAW,SACnF,yBAAKjzB,MAAO,CAAEyiD,YAAaT,EAAYV,GAAgB,aAAczY,aAAcmZ,EAAYV,GAAgB,aAAcrT,UAAW+T,EAAYV,GAAgB,aAAc/pC,eAAgB,WAAY5C,gBAAiBstC,EAAsBX,GAAerhD,QAAS,OAAQC,WAAY,SAAUmO,SAAU,SAAW,kCAC/T43B,GAIb,GAAqB,iBAAjBqb,EAAuB,CACnBoB,EAAO,GACX,IADA,IACS9/C,EAAQ,EAAGA,EAAQ,GAAIA,IAC5B8/C,EAAK/9C,KAAK,CACN/E,MAAO,IAGf,IAAMqmC,EAAUyc,EAAKp3C,KAAI,SAAUtC,EAAMpG,EAAOqG,GAC5C,OACI,yBAAK1J,IAAKqD,EAAO5C,MAAO,CAAEyiD,aAAc7/C,EAAQ,GAAK,GAAK,GAAc,GAATA,GAAcA,GAAS8/C,EAAK3/C,OAAS,EAAIi/C,EAAYV,GAAgB,aAAeU,EAAYV,GAAgB,aAAczY,aAAcmZ,EAAYV,GAAgB,aAAcrT,UAAW+T,EAAYV,GAAgB,aAAc/pC,eAAgB,WAAYtX,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WAAaisB,EAAUnjB,EAAKpJ,WAGja,OACI,yBAAKI,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,uBAAwB4yB,UAAW,SACnF,yBAAKjzB,MAAO,CAAEyiD,YAAaT,EAAYV,GAAgB,aAAczY,aAAcmZ,EAAYV,GAAgB,aAAcrT,UAAW+T,EAAYV,GAAgB,aAAc/pC,eAAgB,WAAY5C,gBAAiBstC,EAAsBX,GAAerhD,QAAS,OAAQC,WAAY,SAAUmO,SAAU,SAAW,kCAC/T43B,GAIb,GAAqB,UAAjBqb,EAA0B,CACtBoB,EAAO,GACX,IADA,IACS9/C,EAAQ,EAAGA,EAAQ,GAAIA,IAC5B8/C,EAAK/9C,KAAK,CACN/E,MAAO,IAGf,IAAMqmC,EAAUyc,EAAKp3C,KAAI,SAAUtC,EAAMpG,EAAOqG,GAC5C,OACI,yBAAK1J,IAAKqD,EAAO5C,MAAO,CAAEyiD,aAAc7/C,EAAQ,GAAK,GAAK,GAAc,GAATA,GAAcA,GAAS8/C,EAAK3/C,OAAS,EAAIi/C,EAAYV,GAAgB,aAAeU,EAAYV,GAAgB,aAAczY,aAAcmZ,EAAYV,GAAgB,aAAcrT,UAAW+T,EAAYV,GAAgB,aAAc/pC,eAAgB,WAAYtX,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WAAaisB,EAAUnjB,EAAKpJ,WAGja,OACI,yBAAKI,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,uBAAwB4yB,UAAW,SACnF,yBAAKjzB,MAAO,CAAEyiD,YAAaT,EAAYV,GAAgB,aAAczY,aAAcmZ,EAAYV,GAAgB,aAAcrT,UAAW+T,EAAYV,GAAgB,aAAc/pC,eAAgB,WAAY5C,gBAAiBstC,EAAsBX,GAAerhD,QAAS,OAAQC,WAAY,SAAUmO,SAAU,SAAW,SAC/T43B,GAIb,GAAqB,iBAAjBqb,EAAuB,CACnBoB,EAAO,GACX,IADA,IACS9/C,EAAQ,EAAGA,EAAQ,GAAIA,IAC5B8/C,EAAK/9C,KAAK,CACN/E,MAAO,IAGf,IAAMqmC,EAAUyc,EAAKp3C,KAAI,SAAUtC,EAAMpG,EAAOqG,GAC5C,OACI,yBAAK1J,IAAKqD,EAAO5C,MAAO,CAAEyiD,aAAc7/C,EAAQ,GAAK,GAAK,GAAc,GAATA,GAAcA,GAAS8/C,EAAK3/C,OAAS,EAAIi/C,EAAYV,GAAgB,aAAeU,EAAYV,GAAgB,aAAczY,aAAcmZ,EAAYV,GAAgB,aAAcrT,UAAW+T,EAAYV,GAAgB,aAAc/pC,eAAgB,WAAYtX,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WAAaisB,EAAUnjB,EAAKpJ,WAGja,OACI,yBAAKI,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,uBAAwB4yB,UAAW,SACnF,yBAAKjzB,MAAO,CAAEyiD,YAAaT,EAAYV,GAAgB,aAAczY,aAAcmZ,EAAYV,GAAgB,aAAcrT,UAAW+T,EAAYV,GAAgB,aAAc/pC,eAAgB,WAAY5C,gBAAiBstC,EAAsBX,GAAerhD,QAAS,OAAQC,WAAY,SAAUmO,SAAU,SAAW,SAC/T43B,GAIb,OAAO,KCphBX,IA+Oe0c,G,2MAjOX5jD,MAAQ,CACJ6jD,WAAY,MACZxxB,OAAQ,KACR9K,cAAe,KACf6a,IAAK,I,mFAEY,IAAD,EACiB9hC,KAAKI,MAA9B8d,EADQ,EACRA,SAAUjD,EADF,EACEA,WACZgX,EAAM/T,EAAS8J,OACrBhoB,KAAKC,SAAS,CAAE8xB,OAAQE,EAAKhL,cAAehM,IAC5Cjb,KAAKgG,OAAOisB,EAAKhX,K,2CAEC,IAAD,EACgBjb,KAAKI,MAA9B8d,EADS,EACTA,SAAUjD,EADD,EACCA,WACZgX,EAAM/T,EAAS8J,OACf+J,EAAS/xB,KAAKN,MAAMqyB,OACpB9K,EAAgBjnB,KAAKN,MAAMunB,cAC7BgL,IAAQF,GAAU9W,IAAegM,IACjCjnB,KAAKC,SAAS,CAAE8xB,OAAQE,EAAKhL,cAAehM,IAC5Cjb,KAAKgG,OAAOisB,EAAKhX,M,oCAIXioC,GACVhhD,QAAQC,IAAI+gD,K,6BAGTjxB,EAAKhX,GAAa,IAAD,OACdjX,EAAM,IAAIC,IAGhBwF,EAAmBwoB,EAFRnwB,IAAOmZ,EAAc,OAAqB/M,OAAO,gBACjDpM,IAAOmZ,EAAc,QAAsB/M,OAAO,iBAExDxE,MAAK,SAAA3F,GACF7B,QAAQC,IAAI6B,EAAIG,OAAOJ,EAAKA,OAC5B,IAAMO,EAAYN,EAAIG,OAAOJ,EAAKA,MAAMK,OAAOG,SAASC,QACxD,EAAKvE,SAAS,CACV6hC,IAAKx9B,OAGZwF,OAAM,SAAAC,GACH7H,QAAQC,IAAI,uBAAyBsL,KAAKC,UAAU3D,S,+BAK5D,SAAS+iB,EAAUvsB,GACf,YAAc6B,IAAV7B,GAAiC,OAAVA,GAA4B,IAAVA,EAClC,GAEJA,EAAMyE,WAAWC,OAE5B,SAASu+C,EAAc3T,EAAa9sC,GAChC,IAAK8sC,EAAa,CAEd,IADA,IAAIwT,EAAO,GACF9/C,EAAQ,EAAGA,EAAQ,GAAIA,IAC5B8/C,EAAK/9C,KAAK,CACN/E,MAAO,IAGf,IAAMqmC,EAAUyc,EAAKp3C,KAAI,SAAUtC,EAAMpG,EAAOqG,GAC5C,MAAc,mCAAV7G,EAEI,yBAAK7C,IAAKqD,EAAO5C,MAAO,CAAEyiD,aAAc7/C,EAAQ,GAAK,GAAK,GAAc,GAATA,GAAcA,GAAS8/C,EAAK3/C,OAAS,EAAI,+BAAiC,+BAAgC8lC,aAAc,+BAAgCoF,UAAW,+BAAgC12B,eAAgB,WAAYtX,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WAAaisB,EAAUnjB,EAAKpJ,QAIrX,yBAAKL,IAAKqD,EAAO5C,MAAO,CAAEyiD,aAAc7/C,EAAQ,GAAK,GAAK,GAAc,GAATA,GAAcA,GAAS8/C,EAAK3/C,OAAS,EAAI,+BAAiC,+BAAgC8lC,aAAc,+BAAgCoF,UAAW,+BAAgC12B,eAAgB,WAAYtX,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WAAaisB,EAAUnjB,EAAKpJ,WAGzX,OACI,yBAAKI,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,uBAAwBD,OAAQ,SAChF,yBAAKJ,MAAO,CAAEyiD,YAAa,+BAAgC5Z,aAAc,+BAAgCoF,UAAW,+BAAgC12B,eAAgB,WAAY5C,gBAAiB,qBAAsB1U,QAAS,OAAQC,WAAY,SAAUmO,SAAU,SAAWjM,GAClR6jC,GAIb,OAAO,KAhCN,IAmCG3rB,EAAejb,KAAKI,MAApB6a,WACA6mB,EAAQ9hC,KAAKN,MAAboiC,IACF2hB,EAAWC,GAAkC5hB,EAAK,gBAClDoD,EDvGP,SAAkBpD,GACrB,QAAI3+B,MAAMC,QAAQ0+B,IAIU,IAHPA,EAAIx+B,QAAO,SAAUqG,EAAMpG,EAAOqG,GAC/C,MAAqD,OAA9CD,EAAKu4C,KAAKl9C,WAAW2+C,cAAc1+C,UAEjCvB,OCkGFggD,CAA8BD,GACzCvhD,QAAQC,IAAI+iC,GACZ,IAAM0e,ED5FP,SAAoB9hB,GACvB,GAAI3+B,MAAMC,QAAQ0+B,GAAM,CACpB,IAAM+hB,EAAW/hB,EAAIx+B,QAAO,SAAUqG,EAAMpG,EAAOqG,GAC/C,MAAqD,WAA9CD,EAAKu4C,KAAKl9C,WAAW2+C,cAAc1+C,QAAqE,QAA9C0E,EAAKu4C,KAAKl9C,WAAW2+C,cAAc1+C,UAGxG,OADA/C,QAAQC,IAAI0hD,GACY,IAApBA,EAASngD,OAKjB,OAAO,ECiFWggD,CAAgCD,GACxCK,ED/EP,SAAuBhiB,GAC1B,QAAI3+B,MAAMC,QAAQ0+B,IAIU,IAHPA,EAAIx+B,QAAO,SAAUqG,EAAMpG,EAAOqG,GAC/C,MAAqD,QAA9CD,EAAKu4C,KAAKl9C,WAAW2+C,cAAc1+C,QAAkE,SAA9C0E,EAAKu4C,KAAKl9C,WAAW2+C,cAAc1+C,QAAmE,QAA9C0E,EAAKu4C,KAAKl9C,WAAW2+C,cAAc1+C,UAEhJvB,OC0EAggD,CAAmCD,GAG1CM,EAAcL,GADQA,GADLA,GAAgCD,EAAUxoC,EAAY,iBAEDA,EAAY,gBAKlF+oC,EAAWN,GADQA,GADLA,GADNA,GAAkC5hB,EAAK,gBACM7mB,EAAY,iBAEDA,EAAY,gBAK5EgpC,EAASP,GADQA,GADLA,GADNA,GAAkC5hB,EAAK,gBACI7mB,EAAY,iBAEDA,EAAY,gBAMxEipC,EAAeR,GADQA,GADLA,GADNA,GAAkC5hB,EAAK,gBACU7mB,EAAY,iBAEDA,EAAY,gBAKpFkpC,EAAaT,GADQA,GADLA,GADNA,GAAkC5hB,EAAK,gBACQ7mB,EAAY,iBAEDA,EAAY,gBAKhFmpC,EAAWV,GADQA,GADLA,GADNA,GAAkC5hB,EAAK,gBACM7mB,EAAY,iBAEDA,EAAY,gBAK5EopC,EAAcX,GADQA,GADLA,GADNA,GAAkC5hB,EAAK,gBACS7mB,EAAY,iBAEDA,EAAY,gBAGlFqpC,EAAWZ,GAAkC5hB,EAAK,gBAGlDyiB,EAAiBb,GADQA,GADLA,GAAgCY,EAAUrpC,EAAY,uBAEEA,EAAY,sBAIxFupC,EAAgBd,GADQA,GADLA,GAAgCY,EAAUrpC,EAAY,uBAECA,EAAY,sBAGtFwpC,EAAWf,GAAkC5hB,EAAK,gBAGlD4iB,EAAgBhB,GADQA,GADLA,GAAgCe,EAAUxpC,EAAY,uBAECA,EAAY,sBAItF0pC,EAAiBjB,GADQA,GADLA,GAAgCe,EAAUxpC,EAAY,uBAEEA,EAAY,sBAIxF2pC,EAAmBlB,GADQA,GADLA,GAAgCe,EAAUxpC,EAAY,uBAEIA,EAAY,sBAI5F4pC,EAAQnB,GAAkC5hB,EAAK,gBAG/CgjB,EAAapB,GADQA,GADLA,GAAgCmB,EAAO5pC,EAAY,uBAECA,EAAY,sBAKhF8pC,EAAcrB,GADQA,GADLA,GAAgCmB,EAAO5pC,EAAY,uBAEEA,EAAY,sBAGlF+pC,EAAQtB,GAAkC5hB,EAAK,gBAG/CmjB,EAAWvB,GADQA,GADLA,GAAgCsB,EAAO/pC,EAAY,UAEDA,EAAY,SAI5EiqC,EAAiBxB,GADQA,GADLA,GAAgCsB,EAAO/pC,EAAY,gBAEKA,EAAY,eAMxFkqC,EAAWzB,GADQA,GADLA,GADNA,GAAkC5hB,EAAK,gBACM7mB,EAAY,iBAEDA,EAAY,gBAElF,OAEI,6BASI,yBAAKta,MAAO,CAAEkS,OAAQ,SAAUjS,QAAS,OAAQmwB,cAAe,SAAU9d,eAAgB,SAAUgkC,SAAU,WAtMlG,WACxB,IAAMmO,EAAUjiD,MAAM6O,KAAK7O,MAAM,IAAIooC,QAAQt/B,KAAI,SAAAgW,GAAC,OAAKA,EAAI,GAAK,MAChE,OACI,yBAAKthB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,uBAAwBD,OAAQ,SAChF,yBAAKJ,MAAO,CAAEyiD,YAAa,wBAAyB5Z,aAAc,wBAAyBoF,UAAW,wBAAyB12B,eAAgB,WAAYtX,QAAS,OAAQC,WAAY,SAAUoS,eAAgB,WAAYjE,SAAU,SAAxO,gBACCo2C,EAAQn5C,KAAI,SAAC5D,EAAM9E,GAAP,OACT,yBAAKrD,IAAKqD,EAAO5C,MAAO,CAAEyiD,aAAc7/C,EAAQ,GAAK,IAAM,GAAe,IAAVA,GAAeA,IAAU6hD,EAAQ1hD,OAAS,EAAI,wBAA0B,wBAAyB8lC,aAAc,wBAAyBoF,UAAW,wBAAyB12B,eAAgB,WAAYtX,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WAAawH,OAiMvUg9C,GACmB,GAAnB5B,EAAS//C,OAAc,eAAO,KAC/B,yBAAK/C,MAAO,CAAE2U,gBAAiB,qBAAsB1U,QAAS,QAASqX,OAAQ,+BAAgCC,eAAgB,aAC1HsrC,EAActe,EAAI,MAClBse,EAAcI,EAAO,cACrBJ,EAAcM,EAAM,gBACpBC,GAEJ,eACD,yBAAKpjD,MAAO,CAAE2U,gBAAiB,qBAAsB1U,QAAS,QAASqX,OAAQ,+BAAgCC,eAAgB,aAC1H8rC,GAEJ,eACD,yBAAKrjD,MAAO,CAAE2U,gBAAiB,qBAAsB1U,QAAS,QAASqX,OAAQ,8BAA+BC,eAAgB,aACzH+rC,GAGJ,2BACD,yBAAKtjD,MAAO,CAAE2U,gBAAiB,qBAAsB1U,QAAS,QAASqX,OAAQ,+BAAgCC,eAAgB,aAC1HgsC,EACAC,EACAC,EACAC,EACAE,EACAC,EACAE,EACAC,EACAC,EACAE,EACAC,EACAE,EACAC,EACAC,S,GA1NE3lD,aC0OZ8lD,I,kNAjPb5lD,MAAQ,CACNub,WAAYnZ,IAAOA,MAASoM,OAAO,aAAa7I,UAChD0sB,OAAQ,KACRod,KAAM,GACNkF,WAAW,G,EA2Cb3U,aAAe,SAAC39B,EAAMy1B,GACpB,IAAMvF,EAAM,EAAK7xB,MAAM8d,SAAS8J,OAChC,EAAK/nB,SAAS,CAAE8xB,OAAQE,EAAKhX,WAAYlZ,EAAKsD,YAC9C,EAAKkgD,QAAQxjD,EAAKsD,Y,EAGpBmW,SAAW,SAAAzK,GAAM,IACPmN,EAAa,EAAK9d,MAAlB8d,SACAjD,EAAe,EAAKvb,MAApBub,WACF0kB,EAAOzhB,EAASQ,aAAakhB,SAC7BC,EAAW/9B,IAAOA,IAAO69B,GAAMzxB,OAAO,aAAa7I,UAIzD,OAAQ0L,EAAE6F,OAAOrW,OACf,IAAK,IACH,IAAMkb,EAAQR,EAJN,MAMR4kB,GADcpkB,EAAQ,QACD,EAAKikB,aAAa59B,IAAO2Z,IAC9C,MACF,IAAK,IACH,IAAMC,EAAQ5Z,IAAOA,MAASoM,OAAO,aACrC,EAAKwxB,aAAahkB,GAClB,MACF,IAAK,IACH,IAAMC,EAAQV,EAbN,MAeRU,GADc7Z,IAAOA,MAASoM,OAAO,aAAa7I,WAChC,EAAKq6B,aAAa59B,IAAO6Z,M,mFAnE5B,IAEbsW,EADejyB,KAAKI,MAAlB8d,SACa8J,OACfjmB,EAAOD,IAAOA,MAASoM,OAAO,aAAa7I,UACjDrF,KAAKC,SAAS,CAAE8xB,OAAQE,EAAKhX,WAAYlZ,IACzC/B,KAAKulD,QAAQtzB,EAAKlwB,K,2CAGlB,IAAMkwB,EAAMjyB,KAAKI,MAAM8d,SAAS8J,OAEhC,GAAIiK,IADWjyB,KAAKN,MAAMqyB,OACN,CAClB,IAAMhwB,EAAO/B,KAAKN,MAAMub,WACxBjb,KAAKC,SAAS,CAAE8xB,OAAQE,EAAKhX,WAAYlZ,IACzC/B,KAAKulD,QAAQtzB,EAAKlwB,M,8BAGdkwB,EAAKuzB,GAAW,IAAD,OACft/C,EAAKpE,IAAO0jD,EAAW,OAAoBt3C,OAAO,gBAClD/H,EAAKrE,IAAO0jD,EAAW,QAAqBt3C,OAAO,gBACzDlO,KAAKC,SAAS,CAAEo0C,WAAW,IAC3B,IAAMoR,EAAUh8C,EAAoBwoB,EAAK/rB,EAAIC,GAC1CuD,MAAK,SAAA3F,GACJ,IAAM2hD,EAAWt3C,EAAkBrK,EAAKA,MAEpCZ,MAAMC,QAAQsiD,GAChB,EAAKzlD,SAAS,CAAEkvC,KAAMuW,IAEtB,EAAKzlD,SAAS,CACZkvC,KAAM,CAACuW,QAIZ57C,OAAM,SAAAC,GACL7H,QAAQC,IACN,0CAA4CsL,KAAKC,UAAU3D,OAIjEM,QAAQC,IAAI,CAACm7C,IAAU/7C,MAAK,WAAQ,EAAKzJ,SAAS,CAAEo0C,WAAW,OAAYvqC,OAAM,WAAQ,EAAK7J,SAAS,CAAEo0C,WAAW,S,+BAqC5G,IAAD,EACmCr0C,KAAKI,MAAvC8d,EADD,EACCA,SAAmBjD,GADpB,EACWwlB,QADX,EACoBxlB,YAErB0qC,GADO3lD,KAAKN,MAAMyvC,MAAQ,IACZ7rC,QAAO,SAAU/C,EAAOgD,EAAO6B,GACjD,YAAchD,IAAV7B,EACK,KAGkB,OADfA,EAAM4lB,QACPhmB,MAAM,SAEbylD,EAAoBD,EAAO15C,KAAI,SAAU1L,EAAOgD,EAAOqG,GAC3D,OACE,yBACE1J,IAAKqD,EACL5C,MAAO,CAAEC,QAAS,OAAQgO,MAAO,0BAEhCrO,EAAM4lB,QAAQnhB,WAAWC,WAWhC,IAAMub,EAAatC,EAASwiB,OAETE,EAAqBpgB,EADvBtC,EAASQ,aAAakhB,UAErBgB,EAAuBpgB,EAAYvF,GACrD,OACE,6BACE,yBAAKta,MAAO,CAAEC,QAAS,SACrB,kBAAC,KAAD,CACEiV,qBAAsB,SAAAC,GAAW,OAAIA,EAAYC,YACjDkH,aAAc,SAAAC,GACZ,OACEA,EAAUpb,MAASqb,QAAQ,QAC3BD,EACApb,IACEoc,EAASQ,aAAakhB,SAAS56B,WAC/B,YACA+7B,SAGNjuB,MAAO,IACPvS,MAAOuB,IAAO9B,KAAKN,MAAMub,YACzBmC,YAAY,EACZxK,SAAU5S,KAAK0/B,eAEjB,yBACE/+B,MAAO,CACLC,QAAS,OACTI,oBAAqB,cACrBC,cAAe,MACfwT,QAAS,sBAGX,kBAAC,KAAD,CACElU,MAAM,IACN8c,MAAM,SACNC,KAAK,cACLpK,QAASlT,KAAKwb,WAEhB,kBAAC,KAAD,CACEjb,MAAM,IACN8c,MAAM,SACNC,KAAK,eACLpK,QAASlT,KAAKwb,WAEhB,kBAAC,KAAD,CACEjb,MAAM,IACN8c,MAAM,SACNC,KAAK,eACLpK,QAASlT,KAAKwb,aA+BpB,yBAAK7a,MAAO,CAAEC,QAA2B,IAAlB+kD,EAAOjiD,OAAe,OAAS,UACpD,yBACE/C,MAAO,CACL2U,gBAAiB,YACjB8N,oBAAqB,MACrBC,qBAAsB,MACtBtiB,OAAQ,OACR0T,QAAS,WACT7T,QAAS,OACTC,WAAY,WAGd,wBAAIF,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBAAtC,8CAGA,wBACEjO,MAAO,CACLmS,MAAO,OACP/R,OAAQ,OACRme,aAAc,OACdihB,WAAY,QACZvxB,MAAO,QACPhO,QAAS,OACTqS,eAAgB,SAChBpS,WAAY,WAGb8kD,EAAOjiD,SAGZ,yBAAK/C,MAAO,CAAEgzB,UAAW,QAAS7gB,MAAO,OAAQ6B,SAAU,OAAQoI,YAAa,SAC7E6oC,IAGL,yBAAK15C,UAAU,oBAEXlM,KAAKN,MAAM20C,UAEP,kBAAC,KAAD,CAAM5wC,KAAK,YAGX,kBAAC,GAAD,CACEwX,WAAYjb,KAAKN,MAAMub,WACvBiD,SAAUA,U,GAxOE1e,c,SC8JfqmD,I,kNAvKXnmD,MAAQ,CACJs6B,QAAQ,G,EAcZ8rB,YAAc,SAACvlD,GACX,IAAMgsC,EAA+B,kBAAXhsC,EAAsBA,EAAMyE,WAAazE,EAD9C,EAEA,EAAKH,MAAlB+f,EAFa,EAEbA,IAAKD,EAFQ,EAERA,IACb,OAAkB,OAAdqsB,QAAoCnqC,IAAdmqC,EACf,MAEoB,GAA3BA,EAAUthC,QAAQ,KACXiV,GAC2B,GAA3BqsB,EAAUthC,QAAQ,KAClBkV,EAEAosB,G,oFAvBO,IAEVlS,EAAWr6B,KAAKI,MAAhBi6B,OACR1Z,KAAU,YAAYC,SACtBD,KAAU,IAAM0Z,GAAQzZ,SACxB5gB,KAAK6gB,c,0CAIL7gB,KAAK6gB,c,kCAkBI,IAAD,SACwC7gB,KAAKI,MAA7C2gB,EADA,EACAA,OAAQsZ,EADR,EACQA,OAAQla,EADhB,EACgBA,IAAKD,EADrB,EACqBA,IAAK6lC,EAD1B,EAC0BA,UAE5BC,EAAK,IAAIhvC,KAAKlV,IAAOikD,EAAU,GAAGhkD,KAAM,YAAYsD,UAAY,OAChE4gD,EAAO,IAAIjvC,KAAKlV,IAAOikD,EAAUA,EAAUriD,OAAS,GAAG3B,KAAM,YAAc,OAE3EmkD,EAAeH,EAAUziD,QAAO,SAAAS,GAClC,MAAsB,KAAfA,EAAKxD,OAA+B,OAAfwD,EAAKxD,YAAiC6B,IAAf2B,EAAKxD,SAItDsS,EAAgB,GAAhBA,EAA2B,GAA3BA,EAAuC,GAAvCA,EAAiD,GACnDC,EAAQ,IAAOD,EAAcA,EAC7B9R,EAAS,IAAM8R,EAAaA,EAE5B8O,EAAIhB,OAAec,OAAO,CAACukC,EAAIC,IAAOvkC,MAAM,CAAC,EAAG5O,EAAQD,EAAcA,IACtEoN,EAAIU,OAAiBc,OAAO,CAACvB,EAAKC,IAAMuB,MAAM,CAAC3gB,EAAQ,IAEvDolD,EAAMxlC,KAAU,IAAMI,GAAQsB,OAAO,OACpCC,KAAK,QAAS,WACd3hB,MAAM,UAAW,GAElByhB,EAAMzB,KAAU,IAAMI,GACrBsB,OAAO,OACPC,KAAK,KAAM+X,GACX15B,MAAM,SAAUI,EAAS8R,EAAaA,GACtClS,MAAM,QAASmS,EAAQD,EAAcA,GACrCwP,OAAO,KACPC,KAAK,YAAa,aAAezP,EAAc,IAAMA,EAAa,KAEvEuP,EAAIC,OAAO,KACNE,KAAK5B,KAAcgB,GAAGE,MAAM,GAAGG,WAAWrB,KAAc,WACxD2B,KAAK,YAFV,sBAEsCvhB,EAFtC,MAGKJ,MAAM,SAAU,SAChBA,MAAM,eAAgB,GAE3ByhB,EAAIC,OAAO,KACNE,KAAK5B,KAAYV,IACjBtf,MAAM,SAAU,SAChBA,MAAM,eAAgB,GAE3B,IAAIuhD,EAAOvhC,OACNgB,GAAE,SAAAM,GAAC,OAAIN,EAAE7f,IAAOmgB,EAAElgB,KAAM,gBAAgB0V,aACxCwI,GAAE,SAAAgC,GACC,IAAMsqB,EAAY,EAAKuZ,YAAY7jC,EAAE1hB,OACrC,OAAO0f,EAAEssB,MAEZ6Z,MAAMzlC,MAEP0lC,EAAQjkC,EAAIC,OAAO,KAAKC,KAAK,QAAS,SAE1C+jC,EAAMn2B,UAAU,UACXnsB,KAAKmiD,GACL/1B,QACA9N,OAAO,KACPA,OAAO,UACPC,KAAK,QAAS,gBACdA,KAAK,MAAM,SAAAL,GACR,IAAMsqB,EAAY,EAAKuZ,YAAY7jC,EAAE1hB,OACrC,OAAO0f,EAAEssB,MAEZjqB,KAAK,MAAM,SAAAL,GAAC,OAAIN,EAAE7f,IAAOmgB,EAAElgB,KAAM,gBAAgB0V,aACjD6K,KAAK,IAAK,GACVgkC,GAAG,aAAa,SAAUrkC,GACvBkkC,EAAII,aACCjG,SAAS,KACT3/C,MAAM,UAAW,IACtBwlD,EAAIK,KAAJ,qCAAmBvkC,EAAElgB,KAArB,6CAA0CkgB,EAAE1hB,QACvCI,MAAM,OAASggB,KAAS8lC,MAAQ,IAAO,MACvC9lD,MAAM,MAAQggB,KAAS+lC,MAAQ,IAAO,SAE9CJ,GAAG,YAAY,SAAUrkC,GACtBkkC,EAAII,aACCjG,SAAS,KACT3/C,MAAM,UAAW,MAEzBA,MAAM,UAAW,GACjBA,MAAM,OAAQ,QAEnB0lD,EACKn2B,UAAU,eACVnsB,KAAKmiD,GACL/1B,QACA9N,OAAO,KACPC,KAAK,QAAS,cACdD,OAAO,QACPC,KAAK,QAAS,QACdA,KAAK,IAAK4/B,EAAKgE,IACfvlD,MAAM,SAAU,SAChBA,MAAM,OAAQ,U,+BAGd,MA+B8BX,KAAKI,MAAhC2gB,EA/BH,EA+BGA,OAAQ4lC,EA/BX,EA+BWA,eAChBzkD,QAAQC,IAAIwkD,GAEZ,OACI,6BACI,yBAAKhmD,MAAO,CAAE8T,QAAS,gBAAiB7F,MAAO,sBAAuBuxB,WAAY,OAAQqJ,aAAc,oBAAqBtqB,aAAc,gBAnCnJ,SAAsB4tB,GAElB,OADA5qC,QAAQC,IAAI2qC,GACS,SAAjBA,EACO,0BAAMnsC,MAAO,CAAEiO,MAAO,sBAAuBI,SAAU,OAAQD,WAAY,MAAOiiB,WAAY,OAAQ41B,SAAU,eAAhH,KAAkI,oCAExH,SAAjB9Z,EACO,0BAAMnsC,MAAO,CAAEiO,MAAO,sBAAuBI,SAAU,OAAQD,WAAY,MAAOiiB,WAAY,OAAQ41B,SAAU,eAAhH,KAAkI,oCAExH,SAAjB9Z,EACO,0BAAMnsC,MAAO,CAAEiO,MAAO,sBAAuBI,SAAU,OAAQD,WAAY,MAAOiiB,WAAY,OAAQ41B,SAAU,eAAhH,MAAmI,mCAEzH,QAAjB9Z,EACO,0BAAMnsC,MAAO,CAAEiO,MAAO,sBAAuBI,SAAU,OAAQD,WAAY,MAAOiiB,WAAY,OAAQ41B,SAAU,eAAhH,KAAkI,mCAExH,SAAjB9Z,EACO,0BAAMnsC,MAAO,CAAEiO,MAAO,sBAAuBI,SAAU,OAAQD,WAAY,MAAOiiB,WAAY,OAAQ41B,SAAU,eAAhH,MAAmI,mCAEzH,SAAjB9Z,EACO,0BAAMnsC,MAAO,CAAEiO,MAAO,sBAAuBI,SAAU,OAAQD,WAAY,MAAOiiB,WAAY,OAAQ41B,SAAU,eAAhH,MAAmI,mCAE1H,QAAhB9Z,GAA0C,OAAhBA,GAAyC,OAAhBA,EAE/C,6BACI,0BAAMnsC,MAAO,CAAEiO,MAAO,sBAAuBI,SAAU,OAAQD,WAAY,MAAOiiB,WAAY,OAAQ41B,SAAU,eAAiB9Z,GACjI,0BAAMnsC,MAAO,CAAEiO,MAAO,sBAAuBI,SAAU,OAAQD,WAAY,MAAOiiB,WAAY,OAAQ41B,SAAU,eAAhH,MAIL,0BAAMjmD,MAAO,CAAEiO,MAAO,sBAAuBI,SAAU,OAAQD,WAAY,MAAOiiB,WAAY,OAAQ41B,SAAU,eAAiB9Z,GAQ/HA,CAAa6Z,IAElB,yBAAKhxC,GAAIoL,S,GAlKDvhB,cCkQTqnD,I,kNA7PXnnD,MAAQ,CACJonD,SAAU,EAAK1mD,MAAM2mD,aACrB/c,gBAAiB,CAACloC,MAAUA,OAC5BiO,SAAS,EACT42C,eAAgB,GAChBZ,UAAW,GACXiB,QC0TG,CACH,IAAO,CACH,IAAO,CACH,IAAO,IACP,IAAO,KAEX,KAAQ,CACJ,IAAO,EACP,IAAO,IAEX,IAAO,CACH,IAAO,EACP,IAAO,KAEX,KAAQ,CACJ,IAAO,EACP,IAAO,KAEX,IAAO,CACH,IAAO,GACP,IAAO,IAEX,IAAO,CACH,IAAO,GACP,IAAO,IAEX,IAAO,CACH,IAAO,IACP,IAAO,OAGf,6CAAW,CACP,GAAM,CACF,IAAO,IACP,IAAO,KAEX,EAAK,CACD,IAAO,EACP,IAAO,GAEX,GAAM,CACF,IAAO,GACP,IAAO,KAEX,OAAQ,CACJ,IAAO,GACP,IAAO,KAEX,GAAM,CACF,IAAO,EACP,IAAO,IAEX,OAAQ,CACJ,IAAO,EACP,IAAO,GAEX,EAAK,CACD,IAAO,EACP,IAAO,IAEX,IAAO,CACH,IAAO,EACP,IAAO,IAEX,GAAM,CACF,IAAO,EACP,IAAO,IAGf,qBAAO,CACH,IAAO,CACH,IAAO,EACP,IAAO,KAEX,IAAO,CACH,IAAO,EACP,IAAO,KAEX,KAAQ,CACJ,IAAO,EACP,IAAO,IAEX,KAAQ,CACJ,IAAO,EACP,IAAO,IAEX,OAAQ,CACJ,IAAO,EACP,IAAO,KAEX,QAAS,CACL,IAAO,EACP,IAAO,MAEX,IAAO,CACH,IAAO,EACP,IAAO,IAGf,iCAAS,CACL,KAAQ,CACJ,IAAO,EACP,IAAO,KAEX,KAAQ,CACJ,IAAO,EACP,IAAO,KAEX,MAAS,CACL,IAAO,EACP,IAAO,KAEX,IAAO,CACH,IAAO,EACP,IAAO,KAEX,QAAS,CACL,IAAO,EACP,IAAO,OAGf,2BAAQ,CACJ,GAAM,CACF,IAAO,EACP,IAAO,KAEX,QAAS,CACL,IAAO,EACP,IAAO,KAEX,IAAO,CACH,IAAO,EACP,IAAO,KAEX,SAAU,CACN,IAAO,EACP,IAAO,MAGf,2BAAQ,CACJ,GAAM,CACF,IAAO,EACP,IAAO,KAEX,KAAQ,CACJ,IAAO,EACP,IAAO,KAEX,IAAO,CACH,IAAO,EACP,IAAO,IAGf,IAAO,CACH,GAAM,CACF,IAAO,IACP,IAAO,KAEX,KAAQ,CACJ,IAAO,EACP,IAAO,KAEX,IAAO,CACH,IAAO,EACP,IAAO,KAEX,KAAQ,CACJ,IAAO,EACP,IAAO,IAEX,GAAM,CACF,KAAQ,GACR,IAAO,IAEX,MAAS,CACL,IAAO,EACP,IAAO,KAEX,KAAQ,CACJ,IAAO,EACP,IAAO,MAGf,mBAAoB,CAChB,IAAO,CACH,IAAO,EACP,IAAO,IAEX,IAAO,CACH,IAAO,GACP,IAAO,IAEX,GAAM,CACF,IAAO,IACP,IAAO,KAEX,EAAK,CACD,IAAO,EACP,IAAO,GAEX,OAAQ,CACJ,IAAO,GACP,IAAO,KAEX,IAAO,CACH,IAAO,EACP,IAAO,IAEX,GAAM,CACF,IAAO,EACP,IAAO,IAGf,QAAW,CACP,eAAgB,CACZ,IAAO,EACP,IAAO,KAEX,WAAY,CACR,IAAO,EACP,IAAO,MAGf,eAAM,CACF,IAAO,CACH,IAAO,EACP,IAAO,IAEX,SAAY,CACR,IAAO,EACP,IAAO,IAEX,KAAQ,CACJ,IAAO,EACP,IAAO,IAEX,KAAQ,CACJ,IAAO,EACP,IAAO,KAGf,2BAAQ,CACJ,IAAO,CACH,IAAO,EACP,IAAO,KAEX,KAAQ,CACJ,IAAO,EACP,IAAO,KAEX,IAAO,CACH,IAAO,EACP,IAAO,KAEX,KAAQ,CACJ,IAAO,EACP,IAAO,KAEX,IAAO,CACH,IAAO,EACP,IAAO,IAEX,IAAO,CACH,IAAO,EACP,IAAO,O,EDjjBnB1S,qBAAuB,SAAC/zC,GACpB,EAAKH,MAAMg/B,mBAAmB7+B,I,EAElCsyC,aAAe,SAACtyC,GACZ,EAAK+zC,qBAAqB/zC,GAC1B,EAAKN,SAAS,CACV6mD,SAAUvmD,K,EAGlB0mD,YAAc,SAAC1mD,GACX,EAAKH,MAAM8mD,oBAAoB3mD,EAAMqW,OAAOrW,Q,EAmEhD4mD,UAAY,WACR,EAAKlnD,SAAS,CACV8P,SAAS,K,EAGjBoD,SAAW,SAAApC,GACP,EAAK9Q,SAAS,CACV8P,SAAS,K,EAIjBe,aAAe,SAAAC,GACX,EAAK9Q,SAAS,CACV8P,SAAS,K,EAIjBq3C,eAAiB,WAAO,IAAD,EACsC,EAAK1nD,MAAtDsnD,EADW,EACXA,QAASF,EADE,EACFA,SAAUH,EADR,EACQA,eAAgBZ,EADxB,EACwBA,UAE3C,GADA7jD,QAAQC,IAAIwkD,GACW,KAAnBA,EAAyB,OAAO,KAEpC,IAEMjlC,EADWslC,EADL1b,OAAOC,KAAKyb,GAASF,IAEVH,GACjBU,EAAY,GAElB,QAAcjlD,IAAVsf,EAAuB,OAAO,KAClCxf,QAAQC,IAAIuf,GACZ,IAAMvB,OAAoB/d,IAAdsf,EAAMvB,IAAoBuB,EAAMvB,IAAM3d,KAAK2d,IAAL,MAAA3d,KAAY6kD,GACxDnnC,OAAoB9d,IAAdsf,EAAMxB,IAAoBwB,EAAMxB,IAAM1d,KAAK0d,IAAL,MAAA1d,KAAY6kD,GAE9D,OACI,yBAAK1mD,MAAO,CAAEkS,OAAQ,aAClB,kBAAC,GAAD,CAAWkzC,UAAWA,EAAWY,eAAgBA,EAAgBxmC,IAAKA,EAAKD,IAAKA,EAAKa,OAAQ,YAAasZ,OAAQ,iB,yHAnGhH,IACF/U,EAAatlB,KAAKI,MAAlBklB,SACR,OAAwB,IAApBA,EAAS5hB,OAEL,yBAAK/C,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAChD,yBAAKL,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQC,WAAY,SAAUoS,eAAgB,WAArF,uBAMSqS,EAASrZ,KAAI,SAAUpH,EAAStB,GACjD,IAAI4lC,GAAY,EACb5lC,EAAQ+hB,EAAS5hB,OAAS,IACzBylC,EAAYrnC,IAAO+C,EAAQurB,MAAMsa,OAAO5oC,IAAOwjB,EAAS/hB,EAAM,GAAG6sB,MAAM,QAExE7sB,IAAU+hB,EAAS5hB,OAAO,IACzBylC,GAAY,GAEhB,IAAMtF,EAAah/B,EAAQge,KAAK5W,KAAI,SAAUtC,EAAMpG,GAChD,OACI,iCAAarD,IAAKqD,EAAO5C,MAAO,CAAE2mD,KAAM,EAAG3Y,WAAY,mCAAoCz2B,eAAgB,aACvG,4BAAKvO,OAIjB,OACI,yBAAKzJ,IAAKqD,EAAO5C,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaD,OAAQ,OAAQyoC,aAAeL,EAAY,KAAO,sBAC3H,iCAAaxoC,MAAO,CAAEC,QAAS,OAAQqX,OAAQ,oBAAqBC,eAAgB,aAChF,4BAAKrT,EAAQurB,OAEjB,yBAAKzvB,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,kBAC/C6iC,S,uCAQJh/B,GAAU,IAAD,OACdygB,EAAatlB,KAAKI,MAAlBklB,SACF/kB,EAAQsE,EAAQtE,MACtB2B,QAAQC,IAAI5B,GACZ,IAAM8O,EAASxK,EAAQtB,MACnBgkD,EAAWjiC,EAASrZ,KAAI,SAAAlI,GACxB,IAAIyjD,EAAO,GAGX,OAFAA,EAAI,KAAWzjD,EAAKqsB,KACpBo3B,EAAI,MAAYzjD,EAAK8e,KAAKxT,GACnBm4C,KAGX,GADAtlD,QAAQC,IAAIolD,GACK,OAAbA,GAAyC,IAApBA,EAAS7jD,OAC9B,OAAO,KAGX6jD,EAAS/4C,MAAK,SAACmT,EAAG1B,GACd,OAAOne,IAAO6f,EAAE5f,KAAM,gBAAgBsD,UAAYvD,IAAOme,EAAEle,KAAM,gBAAgBsD,aAGrFrF,KAAKC,SAAS,CACV0mD,eAAgBpmD,EAChBwlD,UAAWwB,IACZ,WAAQ,EAAKJ,iB,+BAyCV,IAAD,OACGnV,EAAWC,KAAXD,OACFjiC,EAAU/P,KAAKN,MAAMqQ,QAErBoD,EAAWnT,KAAKmT,SAChBrC,EAAe9Q,KAAK8Q,aAEpBs2C,EAAiBpnD,KAAKonD,iBACtBK,EC5JH,CACH,CACI,OAAU,8EACV,MAAS,EACT,MAAS,CACL,MACA,OACA,MACA,OACA,MACA,MACA,QAGR,CACI,OAAU,+HACV,MAAS,EACT,MAAS,CACL,KACA,IACA,KACA,OACA,KACA,OACA,IACA,MACA,OAGR,CACI,OAAU,gGACV,MAAS,EACT,MAAS,CACL,MACA,MACA,OACA,OACA,OACA,QACA,QAGR,CACI,OAAU,+EACV,MAAS,EACT,MAAS,CACL,OACA,OACA,QACA,MACA,UAGR,CACI,OAAU,0EACV,MAAS,EACT,MAAS,CACL,KACA,QACA,MACA,WAGR,CACI,OAAU,6DACV,MAAS,EACT,MAAS,CACL,KACA,OACA,QAGR,CACI,OAAU,+EACV,MAAS,EACT,MAAS,CACL,KACA,OACA,MACA,OACA,KACA,QACA,SAlFL,CAsFH,CACI,OAAU,sFACV,MAAS,EACT,MAAS,CACL,MACA,MACA,KACA,IACA,OACA,MACA,OAGR,CACI,OAAU,wCACV,MAAS,EACT,MAAS,CACL,eACA,aAGR,CACI,OAAU,iEACV,MAAS,EACT,MAAS,CACL,MACA,WACA,OACA,SAGR,CACI,OAAU,8EACV,MAAS,GACT,MAAS,CACL,MACA,OACA,MACA,OACA,MACA,SDgCFC,EAAaD,EAAYx7C,KAAI,SAAUtC,EAAMpG,GAc/C,IAZsBupC,EAYhB3jC,EAXmB,kIADH2jC,EAYMnjC,EAAKmP,QAVlB,yBAAKnY,MAAO,CAAEqO,SAAU,SAAxB,mFAAsD,mCAAtD,mBAAyE,mCAAzE,4BAEU,iFAAjB89B,EACO,yBAAKnsC,MAAO,CAAEqO,SAAU,SAAxB,8BAA8C,kCAA9C,WAA6D,kCAA7D,YAA6E,kCAA7E,kBAA8F,kCAA9F,eAAiH,mCAEvG,wFAAjB89B,EACO,yBAAKnsC,MAAO,CAAEqO,SAAU,SAAxB,mEAAoE,mCAApE,qBAEJ,yBAAKrO,MAAO,CAAEqO,SAAU,SAAW89B,GAG9C,OACI,kBAACkF,EAAD,CAAQ9xC,IAAKyJ,EAAKpG,MAAOhD,MAAOoJ,EAAKpG,MAAO5C,MAAO,CAAEqO,SAAU,SAAW7F,MAG5Ew+C,EAAoBF,EAAYnkD,QAAO,SAAUuB,EAAStB,GAC5D,IAAMqkD,EAAa3V,KACnB,OAAOptC,EAAQtB,MAAQqkD,KAE3B,GAAiC,IAA7BD,EAAkBjkD,OAClB,OAAO,KAEX,IACMmkD,EADcF,EAAkB3nD,KAAKN,MAAMonD,UAAU/jD,MACrBkJ,KAAI,SAACtC,EAAMpG,GAyB7C,IAAMukD,EAxBN,SAAsBhb,GAClB,MAAqB,SAAjBA,EACO,yBAAKnsC,MAAO,CAAEqO,SAAU,SAAxB,KAAoC,oCAE1B,SAAjB89B,EACO,yBAAKnsC,MAAO,CAAEqO,SAAU,SAAxB,KAAoC,oCAE1B,SAAjB89B,EACO,yBAAKnsC,MAAO,CAAEqO,SAAU,SAAxB,MAAqC,mCAE3B,QAAjB89B,EACO,yBAAKnsC,MAAO,CAAEqO,SAAU,SAAxB,KAAoC,mCAE1B,SAAjB89B,EACO,yBAAKnsC,MAAO,CAAEqO,SAAU,SAAxB,MAAqC,mCAE3B,SAAjB89B,EACO,yBAAKnsC,MAAO,CAAEqO,SAAU,SAAxB,MAAqC,mCAE3B,UAAjB89B,EACO,yBAAKnsC,MAAO,CAAEqO,SAAU,SAAxB,IAAmC,kCAAnC,OAEJ89B,EAEQA,CAAanjC,GAC1B9E,EAAU,CACZtE,MAAOoJ,EACPpG,MAAOA,GAEX,OACI,iCAAa5C,MAAO,CAAE2mD,KAAM,GAAKpnD,IAAKqD,GAClC,kBAAC,KAAD,CAAQ5C,MAAO,CAAEI,OAAQ,OAAQ+R,MAAO,OAAQwC,gBAAiB,cAAe2C,OAAQ,mBAAqB1U,MAAOA,EAAOhD,MAAOoJ,EAAMuJ,QAAS,WAAQ,EAAK60C,iBAAiBljD,KAAaijD,OAIlME,EAAUhoD,KAAKyjC,aAErB,OACI,6BACI,kBAAC,KAAD,CACI1zB,QAASA,EACTyF,KAAMrC,EACNJ,SAAUjC,EACVgC,MAAO,KACPE,OAAQ,MACPo0C,GAEL,yBAAKzmD,MAAO,CAAE2U,gBAAiB,YAAa4J,aAAc,cAAene,OAAQ,OAAQ0T,QAAS,WAAY7T,QAAS,OAAQI,oBAAqB,YAAaH,WAAY,WACzK,yBAAKF,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBAAvC,4BACA,yBAAKjO,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaC,cAAe,QAC5E,wBAAIN,MAAO,CAAEC,QAAS,OAAQC,WAAY,WAA1C,kCACA,yBAAKqL,UAAU,kBAAkBvL,MAAO,CAAEC,QAAS,OAAQC,WAAY,WACnE,kBAAC,KAAD,CAAQonD,kBAAmB,SAAAnyC,GAAW,OAAIA,EAAYC,YAAYpD,aAAc3S,KAAKN,MAAMonD,SAAUnmD,MAAO,CAAEmS,MAAO,QAAUF,SAAU5S,KAAK6yC,cACzI6U,MAKjB,yBAAK/mD,MAAO,CAAE2U,gBAAiB,yBAA0BvU,OAAQ,OAAQH,QAAS,OAAQI,oBAAqB,YAAaH,WAAY,WACpI,qCACI,wBAAIF,MAAO,CAAEC,QAAS,OAAQmsC,aAAc,WAA5C,6BAEJ,yBAAKpsC,MAAO,CAAEC,QAAS,QAAUsS,QAASlT,KAAKinD,aAC1CY,IAGT,yBAAKlnD,MAAO,CAAEsX,OAAQ,mCAAoCiH,aAAc,cAAehH,eAAgB,aACnG,yBAAKvX,MAAO,CAAEizB,UAAW,sBAAuBD,UAAW,sBAAuB4V,UAAW,SACxFye,S,GAtPHxoD,cEkPP0oD,I,yNAlPXxoD,MAAQ,CACJqQ,SAAS,G,EAGb0G,MAAQ,SAAC06B,EAAQ5qB,GACb,IAAI6B,EAAW7B,EAAO6B,SAClBgpB,EAAY,GAoBhB,OAnBAhpB,EAAS3C,SAAQ,SAAA4C,GACb,IAAM8/B,EAAY9/B,EAAQ6f,OAAS7f,EAAQnoB,IAAM,IAAMmoB,EAAQ6f,OAAS7f,EAAQnoB,IAChFkxC,EAAU+W,GAAa,MAE3B/W,EAAU,4BAAU,GACpBD,EAAO1rB,SAAQ,SAAAsiB,GACX,IAAIQ,EAAUR,EAAM58B,SACpBid,EAAS3C,SAAQ,SAAA4C,GACb,IAAMC,EAAK,IAAIC,OAAOF,EAAQG,UAAWH,EAAQI,aAC3CtoB,EAAQooC,EAAQpoC,MAAMmoB,GAC5B,GAAc,OAAVnoB,GAA+B,KAAbA,EAAM,MAAckoB,EAAQ6f,QAASH,EAAM0C,QAAQxlC,SAAWojB,EAAQ6f,QAAgB,CACxG,IAAMigB,EAAY9/B,EAAQ6f,OAAS7f,EAAQnoB,IAAM,IAAMmoB,EAAQ6f,OAAS7f,EAAQnoB,IAChFkxC,EAAU+W,GAAW7iD,KAAKyiC,OAIlCqJ,EAAU,4BAAQ9rC,KAAKyiC,MAGpBqJ,G,wEAGF,IA8EqBrtC,EAAMqkD,EA9E3B,EA0HqEpoD,KAAKI,MAAvE4pC,EA1HH,EA0HGA,gBAAiBF,EA1HpB,EA0HoBA,QAASue,EA1H7B,EA0H6BA,UAAWtX,EA1HxC,EA0HwCA,UAEvC3F,GA5HD,EA0HmDkd,cAzDxD,SAAwCxe,EAASE,GAC7C,IAAMrP,EAAQqP,EAAgB,GACxBpP,EAAMoP,EAAgB,GAC5B,OAAI7mC,MAAMC,QAAQ0mC,GACQA,EAAQxmC,QAAO,SAAUqG,EAAMpG,EAAOqG,GACxD,IAAM2+C,EAASzmD,IAAO6H,EAAKwH,QAAQnM,WAAWC,OAAS0E,EAAKyH,QAAQpM,WAAWC,OAAQ,sBAAsBI,UAC7G,OAAOs1B,GAAS4tB,GAAUA,GAAU3tB,KAIrC,KAiDS4tB,CAA+B1e,EAASE,IACtDye,GA/CoB1kD,EA+CeqnC,EA/CTgd,EA+CsBC,EA7C9CllD,MAAMC,QAAQW,GACK,IAAfqkD,EACmBrkD,EAAKT,QAAO,SAAUqG,EAAMpG,EAAOqG,GAClD,OAAiC,KAA1BhK,OAAO+J,EAAKE,aAIR,IAAfu+C,EACmBrkD,EAAKT,QAAO,SAAUqG,EAAMpG,EAAOqG,GAClD,OAAiC,KAA1BhK,OAAO+J,EAAKE,aAIR,IAAfu+C,EACmBrkD,EAAKT,QAAO,SAAUqG,EAAMpG,EAAOqG,GAClD,OAAiC,KAA1BhK,OAAO+J,EAAKE,aAIR,IAAfu+C,EACmBrkD,EAAKT,QAAO,SAAUqG,EAAMpG,EAAOqG,GAClD,OAAiC,KAA1BhK,OAAO+J,EAAKE,WAA8C,KAA1BjK,OAAO+J,EAAKE,WAA8C,KAA1BjK,OAAO+J,EAAKE,aAIpF9F,EAEJ,MAmBL2kD,EAhBN,SAAyB3kD,EAAMgtC,GAC3B,OAAI5tC,MAAMC,QAAQW,GACI,OAAdgtC,GAAoC,KAAdA,QAAkC3uC,IAAd2uC,EACnChtC,EAEaA,EAAKT,QAAO,SAAUqG,EAAMpG,EAAOqG,GACvD,OAAmE,OAA5DD,EAAKwB,SAASnG,WAAW8F,cAAc3K,MAAM4wC,IAAuBpnC,EAAK8gC,QAAQzlC,WAAW8F,cAAc3K,MAAM4wC,MAIxH,KAMS4X,CAAgBF,EAAiB1X,GAErD7uC,QAAQC,IAAIipC,GACZlpC,QAAQC,IAAIsmD,GACZvmD,QAAQC,IAAIumD,GACZ,IAAIlX,EAAgB,KAOpB,QAN0BpvC,IAAtBpC,KAAKI,MAAMmmB,QAA8D,IAAtCvmB,KAAKI,MAAMmmB,OAAO6B,SAAS1kB,SAC9DxB,QAAQC,IAAInC,KAAKI,MAAMmmB,OAAO6B,SAAS1kB,QACvC8tC,EAAgBxxC,KAAKyW,MAAMiyC,EAAa1oD,KAAKI,MAAMmmB,SAIjC,OAAlBirB,EACA,OAAO,KAEX,IAAMC,EAAeD,EAAcxxC,KAAKI,MAAMkoD,eACxCM,EAAmBnX,EAAajjC,MAAK,SAAUC,EAAGC,GAGpD,OAFgB5M,IAAO2M,EAAE0C,QAAQnM,WAAWC,OAASwJ,EAAE2C,QAAQpM,WAAWC,OAAQ,sBAAsBI,UACxFvD,IAAO4M,EAAEyC,QAAQnM,WAAWC,OAASyJ,EAAE0C,QAAQpM,WAAWC,OAAQ,sBAAsBI,UAC7E,GAAK,KAG9B2L,EAAYhR,KAAKI,MAAM4Q,UACvBw5B,EAAaoe,EAAiB38C,KAAI,SAAU1L,EAAOgD,EAAO6B,GAa5DlD,QAAQC,IAAI5B,GACZ,IAb0BsJ,EAapBxB,EAAOvG,IAAOvB,EAAM4Q,QAAQnM,WAAWC,OAAS1E,EAAM6Q,QAAQpM,WAAWC,OAAQ,sBAAsBI,UACvG6jC,EAAO3oC,EAAMkqC,QACbn5B,EAAO/Q,EAAM4K,SACbjH,EAfe,MADK2F,EAgBMjK,OAAOW,EAAMsJ,WAd9B,EAEM,KAAbA,EACO,EAEM,KAAbA,EACO,EAEJA,EAQPs/B,GAAY,EAChB,GAAG5lC,EAAQkuC,EAAa/tC,OAAS,EAAE,CAC/B,IAAMpB,EAAMR,IAAOuG,GAAM6F,OAAO,cAC1Bk+B,EAAatqC,IAAO2vC,EAAaluC,EAAM,GAAG4N,QAAQnM,WAAWC,OAAS1E,EAAM6Q,QAAQpM,WAAWC,OAAQ,sBAAsBiJ,OAAO,cAC1Ii7B,EAAYrnC,IAAOQ,GAAKooC,OAAO0B,EAAW,OAM9C,OAJG7oC,IAAUkuC,EAAa/tC,OAAO,IAC7BylC,GAAY,GAIZ,kBAAC,GAAD,CAAqBjpC,IAAK,sBAAwBqD,EAAO2lC,KAAMA,EAAM7gC,KAAMA,EAAMiJ,KAAMA,EAAMpN,OAAQA,EAAQ6kC,MAAOxoC,EAAMoqC,SAAU7B,OAAQvoC,EAAMqqC,SAAUroC,MAAOhC,EAAMwnB,KAAMzgB,IAAK/G,EAAM0nB,SAAUjX,UAAWA,EAAWm4B,UAAWA,OAKvO0B,EADQ,CAAC,eAAM,2BAAQ,eAAM,eAAM,gBACjB5+B,KAAI,SAAU1L,EAAOgD,EAAOqG,GAEhD,OACI,wBAAIsC,UAAU,uBAAuBvL,MAAO,CAAEsS,eAAgB,WAAa1S,MAInF,OACI,yBAAKI,MAAO,CAAE4Y,UAAW,SACrB,yBAAK5Y,MAAO,CAAEI,OAAQ,OAAQkX,OAAQ,gCAAiC3C,gBAAiB,yBAA0B1U,QAAS,OAAQI,oBAAqB,0BACnJ6pC,GAEL,yBAAKlqC,MAAO,CAAEsX,OAAQ,mCAAoCiH,aAAc,cAAehH,eAAgB,aACnG,yBAAKvX,MAAO,CAAEizB,UAAW,sBAAuBD,UAAW,sBAAuB4V,UAAW,SACvD,OAAjC97B,KAAKC,UAAU+jC,GACZjH,EAEA,yBAAK7pC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,0BAChD,yBAAKL,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQC,WAAY,SAAUoS,eAAgB,WAArF,8B,GAxOEzT,cCoInBqpD,G,2MA/HXnpD,MAAQ,CACJopD,UAAW,2BACXT,UAAW,EACXtX,UAAW,KACXxqB,OAAQ,CAAE,SAAY,IACtBqjB,cAAc,EACdC,YAAa,GAEb3iB,OAAQ,KACR6hC,aAAc,KACdC,WAAY,KACZlf,QAAS,I,EA0Cbmf,iBAAmB,SAACtyC,GAChB,EAAK1W,SAAS,CAAE8wC,UAAWp6B,EAAMC,OAAOrW,S,EAG5C2oD,cAAgB,SAAC3oD,GACb,EAAKN,SAAS,CAAEooD,UAAW9nD,K,EAG/BywC,cAAgB,SAACzwC,GACb,EAAKN,SAAS,CAAE6oD,UAAWvoD,K,EAG/ByQ,UAAY,SAACV,GACT,EAAKrQ,SAAS,CACV2pC,cAAc,EACdC,YAAav5B,K,EAIrB6C,SAAW,SAAApC,GACP,EAAK9Q,SAAS,CACV2pC,cAAc,K,EAItB94B,aAAe,SAAAC,GACX,EAAK9Q,SAAS,CACV2pC,cAAc,K,mFAlED,IAAD,EACsB5pC,KAAKI,MAAnC8d,EADQ,EACRA,SAAU8rB,EADF,EACEA,gBACZz8B,EAAM2Q,EAASzX,MACfiC,EAAY5G,IAAOkoC,EAAgB,IAAI97B,OAAO,cAC9CvF,EAAU7G,IAAOkoC,EAAgB,IAAI97B,OAAO,cAClDlO,KAAKC,SAAS,CAAEinB,OAAQ3Z,EAAKw7C,aAAcrgD,EAAWsgD,WAAYrgD,IAClE3I,KAAKwiC,OAAOj1B,EAAK7E,K,2CAEC,IAAD,EACqB1I,KAAKI,MAAnC8d,EADS,EACTA,SAAU8rB,EADD,EACCA,gBADD,EAE4BhqC,KAAKN,MAA1CwnB,EAFS,EAETA,OAAQ6hC,EAFC,EAEDA,aAAcC,EAFb,EAEaA,WACxBz7C,EAAM2Q,EAASzX,MACfiC,EAAY5G,IAAOkoC,EAAgB,IAAI97B,OAAO,cAC9CvF,EAAU7G,IAAOkoC,EAAgB,IAAI97B,OAAO,cAC9CX,IAAQ2Z,GAAUxe,IAAcqgD,GAAgBpgD,IAAYqgD,IAC5DhpD,KAAKC,SAAS,CAAEinB,OAAQ3Z,EAAKw7C,aAAcrgD,EAAWsgD,WAAYrgD,IAClE3I,KAAKwiC,OAAOj1B,EAAK7E,M,6BAGlB6E,EAAK28B,GAAqB,IAAD,OAC5Bif,EAAsC57C,EAAK28B,EAAoB,MAAO,YACjExgC,MAAK,SAAA3F,GAAI,OAAI,EAAK9D,SAAS,CAAE6pC,QAAS/lC,EAAKA,UAC3C+F,OAAM,SAAAC,GAAS7H,QAAQC,IAAI4H,MAGhCK,GAAwB,cACnBV,MAAK,SAAA3F,GACF,IAAIwiB,EAASxiB,EAAKA,KAAK6jB,MAAK,SAAAld,GAAI,MAAkC,qBAA9BA,EAAKmd,gBAAgBvW,QACzDiV,EAAO6B,SAAP,CAAmB,CAAE,IAAO,2BAAQ,UAAa,OAAjD,oBAA4D7B,EAAO6B,WACnElmB,QAAQC,IAAI,qCAAuCsL,KAAKC,UAAU6Y,IAClE,EAAKtmB,SAAS,CACVsmB,OAAQA,OAGfzc,OAAM,SAAAC,GACH7H,QAAQC,IAAI4H,Q,+BAmCd,IACEioC,EAAoBC,KAApBD,OACAhI,GADoBiI,KAAb/zB,SACale,KAAKI,MAAzB4pC,iBAFH,EAG0ChqC,KAAKN,MAA5CkqC,EAHH,EAGGA,aAAcC,EAHjB,EAGiBA,YAAaC,EAH9B,EAG8BA,QAC7B94B,EAAYhR,KAAKgR,UACjBmC,EAAWnT,KAAKmT,SAChBrC,EAAe9Q,KAAK8Q,aAC1B,OACI,6BACI,yBAAKnQ,MAAO,CAAE2U,gBAAiB,YAAa4J,aAAc,cAAene,OAAQ,OAAQ0T,QAAS,WAAY7T,QAAS,OAAQC,WAAY,SAAUG,oBAAqB,UAAWiS,eAAgB,kBACjM,wBAAItS,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBAAtC,8CACA,yBAAKjO,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,mBAAoBC,cAAe,QACnF,kBAAC,KAAD,CAAQ0R,aAAc3S,KAAKN,MAAMopD,UAAWlzC,YAAY,uCAASjV,MAAO,CAAEmS,MAAO,KAAOF,SAAU5S,KAAKgxC,eAClGhxC,KAAKN,MAAM6mB,OAAO6B,SAASnc,KAAI,SAACoc,EAAS9kB,GACtC,OAAO,kBAACyuC,EAAD,CAAQ9xC,IAAKqD,EAAOhD,MAAO8nB,EAAQ6f,OAAS7f,EAAQnoB,IAAM,IAAMmoB,EAAQ6f,OAAS7f,EAAQnoB,KAAMmoB,EAAQ6f,OAAS7f,EAAQnoB,IAAM,IAAMmoB,EAAQ6f,OAAS7f,EAAQnoB,SAG5K,kBAAC,KAAD,CAAQyS,aAAc3S,KAAKN,MAAM2oD,UAAWzyC,YAAY,uCAASjV,MAAO,CAAEmS,MAAO,KAAOF,SAAU5S,KAAKkpD,eACnG,kBAAClX,EAAD,CAAQzxC,MAAO,GAAf,4BACA,kBAACyxC,EAAD,CAAQzxC,MAAO,GAAf,4BACA,kBAACyxC,EAAD,CAAQzxC,MAAO,GAAf,sBACA,kBAACyxC,EAAD,CAAQzxC,MAAO,GAAf,sBACA,kBAACyxC,EAAD,CAAQzxC,MAAO,GAAf,iBAEJ,kBAAC,KAAD,CAAOoV,GAAG,gBAAgBC,YAAY,iCAAQhD,SAAU5S,KAAKipD,qBAGrE,kBAAC,GAAD,CAAqBjf,gBAAiBA,EAAiBF,QAASA,EAASwe,cAAetoD,KAAKN,MAAMopD,UAAWviC,OAAQvmB,KAAKN,MAAM6mB,OAAQ8hC,UAAWroD,KAAKN,MAAM2oD,UAAWtX,UAAW/wC,KAAKN,MAAMqxC,UAAWhhC,QAAS65B,EAAc54B,UAAWA,EAAWmC,SAAUA,EAAUrC,aAAcA,IAE1R,kBAAC,KAAD,CACI/N,MAAO,2BACPgN,QAAS65B,EACTp0B,KAAMrC,EACNJ,SAAUjC,EACVgC,MAAO,IACPE,OAAQ,MACR,kBAAC,GAAD,CAAgB1C,OAAQu5B,U,GAzHnBrqC,aC+cV4pD,G,YAjcX,WAAYhpD,GAAQ,IAAD,8BACf,4CAAMA,KAfVV,MAAQ,CACJkoD,WAAY,EACZyB,YAAa,GACbrf,gBAAiB,CAACloC,IAAOA,MAASmM,SAAS,EAAG,QAAQC,OAAO,aAC7DpM,IAAOA,MAASoM,OAAO,cACvByY,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,SAAU,GACV+iB,QAAS,GACT9iB,QAAS,GACTqtB,WAAW,GAEI,EAqVnBC,qBAAuB,SAACx7B,GACpB,EAAK7Y,SAAS,CACV2nD,WAAY9uC,KAvVD,EA2VnBwwC,sBAAwB,SAACxwC,GACrB,EAAK7Y,SAAS,CACVopD,YAAavwC,KA7VF,EAqWnB0C,SAAW,SAACzK,GAAO,IACPmN,EAAa,EAAK9d,MAAlB8d,SACA8rB,EAAoB,EAAKtqC,MAAzBsqC,gBACFrK,EAAOzhB,EAASQ,aAAakhB,SAC7BC,EAAW/9B,IAAOA,IAAO69B,GAAMzxB,OAAO,aAAa7I,UAEnDa,EAAK8jC,EAAgB,GAAG3kC,UACxBc,EAAK6jC,EAAgB,GAAG3kC,UAExB/C,EAAM,MAEZ,OAAQyO,EAAE6F,OAAOrW,OACb,IAAK,IACD,GAAIs/B,GAAa35B,EAAK5D,EAAM,CACxB,IAAMmZ,EAAQ,CAAC3Z,IAAOA,IAAOoE,EAAK5D,GAAK4L,OAAO,aAAcpM,IAAOA,IAAOqE,EAAK7D,GAAK4L,OAAO,cAC3F,EAAKq7C,sBAAsB9tC,GAE/B,MACJ,IAAK,IACD,IAAMC,EAAQ,CAAC5Z,IAAOA,MAASmM,SAAS,EAAG,QAAQC,OAAO,aAAcpM,IAAOA,MAASoM,OAAO,cAC/F,EAAKq7C,sBAAsB7tC,GAC3B,MACJ,IAAK,IAED,GADc5Z,IAAOA,MAASoM,OAAO,aAAa7I,WACpCc,EAAK7D,EAAM,CACrB,IAAMqZ,EAAQ,CAAC7Z,IAAOA,IAAOoE,EAAK5D,GAAK4L,OAAO,aAAcpM,IAAOA,IAAOqE,EAAK7D,GAAK4L,OAAO,cAC3F,EAAKq7C,sBAAsB5tC,MA7XvC,EAAK4tC,sBAAwB,EAAKA,sBAAsBhzC,KAA3B,iBAFd,E,8EAMf,SAASizC,EAAWjpD,GAChB,OAAc,OAAVA,QAA4B6B,IAAV7B,GAAiC,KAAVA,EAClC,GAEJA,EAAMyE,WAAWC,OAE5B,IAAMwkD,EAAYzpD,KAAKN,MAAMsqC,gBACvB0f,EAAa1pD,KAAKN,MAAMkoD,WACxB+B,EAAeF,EAAU,GAAGpkD,UAC5BukD,EAAeH,EAAU,GAAGpkD,UAAa,MAEzCuhB,EAAW5mB,KAAKN,MAAMknB,SACtBD,EAAW3mB,KAAKN,MAAMinB,SACtBE,EAAW7mB,KAAKN,MAAMmnB,SACtBC,EAAW9mB,KAAKN,MAAMonB,SACtBC,EAAW/mB,KAAKN,MAAMqnB,SAGxB8iC,EAAW,GACf,GAAmB,IAAfH,EAAkB,CAClB,IAAK,IAAInmD,EAAQ,EAAGA,EAAQqjB,EAASljB,OAAQH,IAAS,CAClD,IAAMsB,EAAU+hB,EAASrjB,GACnBqmB,EAAM4/B,EAAW3kD,EAAQglB,OACzBigC,EAAON,EAAW3kD,EAAQ0lB,OAC1Bw/B,EAAMP,EAAW3kD,EAAQklB,OACzBigC,EAAMR,EAAW3kD,EAAQolB,OACzBggC,EAAKT,EAAW3kD,EAAQslB,OACxB+/B,EAAMV,EAAW3kD,EAAQslD,OACzBC,EAAMZ,EAAW3kD,EAAQwlB,OACzBhiB,EAAOvG,IAAQ+C,EAAQigB,QAAQ9f,WAAaH,EAAQkgB,QAAQ/f,WAAa,sBAAsBK,UACjGskD,EAAethD,GAAQA,EAAOuhD,GAC9BC,EAASvkD,KAAK,CACV8qB,KAAMtuB,IAAQ+C,EAAQigB,QAAQ9f,WAAaH,EAAQkgB,QAAQ/f,WAAa,sBAAsBkJ,OAAO,uBACrG2U,KAAM,CAAC+G,EAAKkgC,EAAMC,EAAKC,EAAKC,EAAIC,EAAKE,KAIjD,OAAOP,EAEX,GAAmB,IAAfH,EAAkB,CAClB,IAAK,IAAInmD,EAAQ,EAAGA,EAAQsjB,EAASnjB,OAAQH,IAAS,CAClD,IAAMsB,EAAUgiB,EAAStjB,GACnB8mD,EAAKb,EAAW3kD,EAAQ0lB,OACxBC,EAAIg/B,EAAW3kD,EAAQklB,OACvBugC,EAAKd,EAAW3kD,EAAQolB,OAExBsgC,EAAUf,EAAW3kD,EAAQslB,OAE7BO,EAAI8+B,EAAW3kD,EAAQ8lB,OACvBa,EAAMg+B,EAAW3kD,EAAQ4mB,OACzB++B,EAAKhB,EAAW3kD,EAAQ8mB,OACxBtjB,EAAOvG,IAAQ+C,EAAQigB,QAAQ9f,WAAaH,EAAQkgB,QAAQ/f,WAAa,sBAAsBK,UACjGskD,EAAethD,GAAQA,EAAOuhD,GAC9BC,EAASvkD,KAAK,CACV8qB,KAAMtuB,IAAQ+C,EAAQigB,QAAQ9f,WAAaH,EAAQkgB,QAAQ/f,WAAa,sBAAsBkJ,OAAO,uBACrG2U,KAAM,CAACwnC,EAAI7/B,EAAG8/B,EAVP,KAUmBC,EARvB,KAQoC7/B,EAAGc,EAAKg/B,KAI3D,OAAOX,EAEX,GAAmB,IAAfH,EAAkB,CAClB,IAAK,IAAInmD,EAAQ,EAAGA,EAAQsjB,EAASnjB,OAAQH,IAAS,CAClD,IAAMsB,EAAUgiB,EAAStjB,GACnBknD,EAAMjB,EAAW3kD,EAAQgnB,OACzBC,EAAM09B,EAAW3kD,EAAQknB,OACzB2+B,EAAOlB,EAAW3kD,EAAQonB,OAC1B0+B,EAAOnB,EAAW3kD,EAAQsnB,OAC1By+B,EAAOpB,EAAW3kD,EAAQgmD,OAC1BC,EAAOtB,EAAW3kD,EAAQwlB,OAC1B0gC,EAAMvB,EAAW3kD,EAAQgmB,OACzBxiB,EAAOvG,IAAQ+C,EAAQigB,QAAQ9f,WAAaH,EAAQkgB,QAAQ/f,WAAa,sBAAsBK,UACjGskD,EAAethD,GAAQA,EAAOuhD,GAC9BC,EAASvkD,KAAK,CACV8qB,KAAMtuB,IAAQ+C,EAAQigB,QAAQ9f,WAAaH,EAAQkgB,QAAQ/f,WAAa,sBAAsBkJ,OAAO,uBACrG2U,KAAM,CAAC4nC,EAAK3+B,EAAK4+B,EAAMC,EAAMC,EAAME,EAAMC,KAIrD,OAAOlB,EAEX,GAAmB,IAAfH,EAAkB,CAClB,IAAK,IAAInmD,EAAQ,EAAGA,EAAQsjB,EAASnjB,OAAQH,IAAS,CAClD,IAAMsB,EAAUgiB,EAAStjB,GACnBynD,EAAOxB,EAAW3kD,EAAQ0nB,OAC1BC,EAAOg9B,EAAW3kD,EAAQomD,OAC1Bt+B,EAAQhpB,SAAS6lD,EAAW3kD,EAAQ0nB,QAAU5oB,SAAS6lD,EAAW3kD,EAAQ0nB,QAC1E2+B,EAAM1B,EAAW3kD,EAAQsmD,OACzBL,EAAOtB,EAAW3kD,EAAQumD,MAC1B/iD,EAAOvG,IAAQ+C,EAAQigB,QAAQ9f,WAAaH,EAAQkgB,QAAQ/f,WAAa,sBAAsBK,UACjGskD,EAAethD,GAAQA,EAAOuhD,GAC9BC,EAASvkD,KAAK,CACV8qB,KAAMtuB,IAAQ+C,EAAQigB,QAAQ9f,WAAaH,EAAQkgB,QAAQ/f,WAAa,sBAAsBkJ,OAAO,uBACrG2U,KAAM,CAACmoC,EAAMx+B,EAAMG,EAAOu+B,EAAKJ,KAI3C,OAAOjB,EAEX,GAAmB,IAAfH,EAAkB,CAClB,IAAK,IAAInmD,EAAQ,EAAGA,EAAQsjB,EAASnjB,OAAQH,IAAS,CAClD,IAAMsB,EAAUgiB,EAAStjB,GACnB8nD,EAAK7B,EAAW3kD,EAAQymD,OACxBC,EAAO/B,EAAW3kD,EAAQomD,OAE1BO,GAAYhC,EAAW3kD,EAAQkmB,OAC/B1iB,GAAOvG,IAAQ+C,EAAQigB,QAAQ9f,WAAaH,EAAQkgB,QAAQ/f,WAAa,sBAAsBK,UACjGskD,EAAethD,IAAQA,GAAOuhD,GAC9BC,EAASvkD,KAAK,CACV8qB,KAAMtuB,IAAQ+C,EAAQigB,QAAQ9f,WAAaH,EAAQkgB,QAAQ/f,WAAa,sBAAsBkJ,OAAO,uBACrG2U,KAAM,CAACwoC,EAAIE,EANP,KAMkBC,MAIlC,OAAO3B,EAEX,GAAmB,IAAfH,EAAkB,CAClB,IAAK,IAAInmD,GAAQ,EAAGA,GAAQqjB,EAASljB,OAAQH,KAAS,CAClD,IAAMsB,GAAU+hB,EAASrjB,IACnBkoD,GAAKjC,EAAW3kD,GAAQsmD,OACxBO,GAAOlC,EAAW3kD,GAAQgnB,OAC1B8/B,GAAMnC,EAAW3kD,GAAQknB,OACzB1jB,GAAOvG,IAAQ+C,GAAQigB,QAAQ9f,WAAaH,GAAQkgB,QAAQ/f,WAAa,sBAAsBK,UACjGskD,EAAethD,IAAQA,GAAOuhD,GAC9BC,EAASvkD,KAAK,CACV8qB,KAAMtuB,IAAQ+C,GAAQigB,QAAQ9f,WAAaH,GAAQkgB,QAAQ/f,WAAa,sBAAsBkJ,OAAO,uBACrG2U,KAAM,CAAC4oC,GAAIC,GAAMC,MAI7B,OAAO9B,EAEX,GAAmB,IAAfH,EAAkB,CAClB,IAAK,IAAInmD,GAAQ,EAAGA,GAAQujB,EAASpjB,OAAQH,KAAS,CAClD,IAAMsB,GAAUiiB,EAASvjB,IACnBynB,GAAKw+B,EAAW3kD,GAAQomB,MACxB2gC,GAAOpC,EAAW3kD,GAAQsmB,MAC1B0gC,GAAMrC,EAAW3kD,GAAQ0mB,MACzBugC,GAAOtC,EAAW3kD,GAAQgnC,MAC1BzgB,GAAKo+B,EAAW3kD,GAAQwmB,MACxB0gC,GAAQvC,EAAW3kD,GAAQmnC,MAC3BggB,GAAOxC,EAAW3kD,GAAQqnC,MAC1B7jC,GAAOvG,IAAQ+C,GAAQigB,QAAQ9f,WAAaH,GAAQkgB,QAAQ/f,WAAa,sBAAsBK,UACjGskD,EAAethD,IAAQA,GAAOuhD,GAC9BC,EAASvkD,KAAK,CACV8qB,KAAMtuB,IAAQ+C,GAAQigB,QAAQ9f,WAAaH,GAAQkgB,QAAQ/f,WAAa,sBAAsBkJ,OAAO,uBACrG2U,KAAM,CAACmI,GAAI4gC,GAAMC,GAAKC,GAAM1gC,GAAI2gC,GAAOC,MAInD,OAAOnC,EAEX,GAAmB,IAAfH,EAAkB,CAClB,IAAK,IAAInmD,GAAQ,EAAGA,GAAQujB,EAASpjB,OAAQH,KAAS,CAClD,IAAMsB,GAAUiiB,EAASvjB,IACnB0mD,GAAKT,EAAW3kD,GAAQonD,MACxB/B,GAAMV,EAAW3kD,GAAQqnD,MACzB7B,GAAKb,EAAW3kD,GAAQsnD,MACxB3hC,GAAIg/B,EAAW3kD,GAAQunD,MACvBC,GAAS7C,EAAW3kD,GAAQynD,MAC5BC,GAAM/C,EAAW3kD,GAAQ2nD,MACzBhC,GAAKhB,EAAW3kD,GAAQ4nD,MACxBpkD,GAAOvG,IAAQ+C,GAAQigB,QAAQ9f,WAAaH,GAAQkgB,QAAQ/f,WAAa,sBAAsBK,UACjGskD,EAAethD,IAAQA,GAAOuhD,GAC9BC,EAASvkD,KAAK,CACV8qB,KAAMtuB,IAAQ+C,GAAQigB,QAAQ9f,WAAaH,GAAQkgB,QAAQ/f,WAAa,sBAAsBkJ,OAAO,uBACrG2U,KAAM,CAAConC,GAAIC,GAAKG,GAAI7/B,GAAG6hC,GAAQE,GAAK/B,MAIhD,OAAOX,EAEX,GAAmB,IAAfH,EAAkB,CAClB,IAAK,IAAInmD,GAAQ,EAAGA,GAAQojB,EAASjjB,OAAQH,KAAS,CAClD,IAAMsB,GAAU8hB,EAASpjB,IACnBmpD,GAAYlD,EAAW3kD,GAAQ8kB,SAC/BgjC,GAASnD,EAAW3kD,GAAQ+nD,OAC5BvkD,GAAOvG,IAAQ+C,GAAQigB,QAAQ9f,WAAaH,GAAQkgB,QAAQ/f,WAAa,sBAAsBK,UACjGskD,EAAethD,IAAQA,GAAOuhD,GAC9BC,EAASvkD,KAAK,CACV8qB,KAAMtuB,IAAQ+C,GAAQigB,QAAQ9f,WAAaH,GAAQkgB,QAAQ/f,WAAa,sBAAsBkJ,OAAO,uBACrG2U,KAAM,CAAC6pC,GAAWC,MAI9B,OAAO9C,EAEX,GAAmB,IAAfH,EAAkB,CAClB,IAAK,IAAInmD,GAAQ,EAAGA,GAAQwjB,EAASrjB,OAAQH,KAAS,CAClD,IAAMsB,GAAUkiB,EAASxjB,IACnBspD,GAAMrD,EAAW3kD,GAAQglB,OACzBijC,GAAWtD,EAAW3kD,GAAQgmB,OAC9B6/B,GAAOlB,EAAW3kD,GAAQslB,OAC1BwgC,GAAOnB,EAAW3kD,GAAQslD,OAC1B9hD,GAAOvG,IAAQ+C,GAAQigB,QAAQ9f,WAAaH,GAAQkgB,QAAQ/f,WAAa,sBAAsBK,UACjGskD,EAAethD,IAAQA,GAAOuhD,GAC9BC,EAASvkD,KAAK,CACV8qB,KAAMtuB,IAAQ+C,GAAQigB,QAAQ9f,WAAaH,GAAQkgB,QAAQ/f,WAAa,sBAAsBkJ,OAAO,uBACrG2U,KAAM,CAACgqC,GAAKC,GAAUpC,GAAMC,MAIxC,OAAOd,EAEX,GAAmB,KAAfH,EAAmB,CACnB,IAAK,IAAInmD,GAAQ,EAAGA,GAAQqjB,EAASljB,OAAQH,KAAS,CAClD,IAAMwpD,GAAanmC,EAASrjB,IACtBqmB,GAAM4/B,EAAWuD,GAAWljC,OAC5BigC,GAAON,EAAWuD,GAAWxiC,OAC7ByiC,GAAMxD,EAAWuD,GAAWhjC,OAC5BigC,GAAMR,EAAWuD,GAAW9iC,OAE5B5hB,GAAOvG,IAAQirD,GAAWjoC,QAAQ9f,WAAa+nD,GAAWhoC,QAAQ/f,WAAa,sBAAsBK,UACvGskD,EAAethD,IAAQA,GAAOuhD,GAC9BC,EAASvkD,KAAK,CACV8qB,KAAMtuB,IAAQirD,GAAWjoC,QAAQ9f,WAAa+nD,GAAWhoC,QAAQ/f,WAAa,sBAAsBkJ,OAAO,uBAC3G2U,KAAM,CAAC+G,GAAKkgC,GAAMkD,GAAKhD,GAAK,KAAM,QAI9C,IAAK,IAAIzmD,GAAQ,EAAGA,GAAQsjB,EAASnjB,OAAQH,KAAS,CAClD,IAAM0pD,GAAapmC,EAAStjB,IAEtBunB,GAAM0+B,EAAWyD,GAAW//B,OAC5B7kB,GAAOvG,IAAQmrD,GAAWnoC,QAAQ9f,WAAaioD,GAAWloC,QAAQ/f,WAAa,sBAAsBK,UACvGskD,EAAethD,IAAQA,GAAOuhD,GAC9BC,EAASvkD,KAAK,CACV8qB,KAAMtuB,IAAQmrD,GAAWnoC,QAAQ9f,WAAaioD,GAAWloC,QAAQ/f,WAAa,sBAAsBkJ,OAAO,uBAC3G2U,KAAM,CAAC,KAAM,KAAM,KAAM,KANrB,KAMgCiI,MAIhD,OAAO++B,EAEX,OAAO,O,0CAIU,IACT3rC,EAAale,KAAKI,MAAlB8d,SACRle,KAAKC,SAAS,CAAEinB,OAAQhJ,EAASzX,QACjCzG,KAAKktD,UAAUhvC,EAASxN,UAAWwN,EAASzX,OAC5CzG,KAAKmtD,eAAiBntD,KAAKmtD,eAAe52C,KAAKvW,Q,2CAG7B,IACVke,EAAale,KAAKI,MAAlB8d,SACWle,KAAKN,MAAhBwnB,SACOhJ,EAASzX,QACpBzG,KAAKC,SAAS,CAAEinB,OAAQhJ,EAASzX,QACjCzG,KAAKktD,UAAUhvC,EAASxN,UAAWwN,EAASzX,OAC5CzG,KAAKmtD,eAAiBntD,KAAKmtD,eAAe52C,KAAKvW,S,gCAO7CypD,EAAUl8C,GAAM,IAAD,OACrBvN,KAAKC,SAAS,CAAEo0C,WAAW,IAQ3B,IAAMnuC,EAAKpE,IAAO2nD,EAAW,YAAYv7C,OAAO,cAChDhM,QAAQC,IAAIsnD,EAAWl8C,GACvB,IACMga,EAVN,SAA6BtM,GACzB,IAAMuM,GAAoB,IAAIxQ,MAAO0D,UAAY,IAAI1D,KAAKiE,GAAYP,UAGtE,OADiB/W,SAAS6jB,EADH,QACyC,EAO9CC,CADL3lB,IAAO2nD,EAAW,YAAYv7C,OAAO,eAEhDyY,EAAWld,GAAuC8D,EAAKrH,GACxDwD,MAAK,SAAA3F,GACF,OAAOA,EAAKA,QAEf+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,uBAAyBsL,KAAKC,UAAU3D,OAEtD6c,EAAWnd,GAAuC8D,EAAKrH,GACxDwD,MAAK,SAAA3F,GACF,OAAOA,EAAKA,QAEf+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,uBAAyBsL,KAAKC,UAAU3D,OAEtD8c,EAAWpd,GAAuC8D,EAAKrH,GACxDwD,MAAK,SAAA3F,GACF,OAAOA,EAAKA,QAEf+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,uBAAyBsL,KAAKC,UAAU3D,OAEtD+c,EAAWrd,EAAuC8D,EAAKrH,GACxDwD,MAAK,SAAA3F,GACF,OAAOA,EAAKA,QAEf+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,uBAAyBsL,KAAKC,UAAU3D,OAEtDgd,EAAWtd,GAAuC8D,EAAKrH,GACxDwD,MAAK,SAAA3F,GAEF,OADA7B,QAAQC,IAAI4B,EAAKA,MACVA,EAAKA,QAEf+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,uBAAyBsL,KAAKC,UAAU3D,OAEtD+/B,EAAUrgC,EAAsC8D,EAAKrH,EAAI,MAAO,YACjEwD,MAAK,SAAA3F,GAEF,OADA7B,QAAQC,IAAI4B,EAAKA,MACVA,EAAKA,QAEf+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,0CAA4CsL,KAAKC,UAAU3D,OAEzEid,EAAUvd,GAAsC8D,EAAKga,EAAe,MAAO,YAC5E7d,MAAK,SAAA3F,GACF,OAAOA,EAAKA,QAEf+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,0CAA4CsL,KAAKC,UAAU3D,OAE/EM,QAAQC,IAAI,CAACqc,EAAUC,EAAUC,EAAUC,EAAUC,EAAU+iB,EAAS9iB,IAAUtd,MAAK,SAAAa,GACnF,EAAKtK,SAAS,CACV0mB,SAAUpc,EAAO,GACjBqc,SAAUrc,EAAO,GACjBsc,SAAUtc,EAAO,GACjBuc,SAAUvc,EAAO,GACjBwc,SAAUxc,EAAO,GACjBu/B,QAASv/B,EAAO,GAChByc,QAASzc,EAAO,GAChB8pC,WAAW,OAEhBvqC,OAAM,WAAQ,EAAK7J,SAAS,CAAEo0C,WAAW,S,4CAc1BtyC,EAAMy1B,GACxBx3B,KAAKC,SAAS,CAAE+pC,gBAAiBjoC,M,+BAqC3B,IACEmc,EAAale,KAAKI,MAAlB8d,SACFkvC,EAAaptD,KAAKN,MAAMsqC,gBAC1BjmC,EAAO/D,KAAKmtD,iBAEhBppD,EAAOA,EAAKyK,MAAK,SAACC,EAAGC,GAGjB,OAFgB5M,IAAO2M,EAAE2hB,KAAM,oBAAoB/qB,UACnCvD,IAAO4M,EAAE0hB,KAAM,oBAAoB/qB,UACpB,GAAK,KARnC,IAWGqyB,EAAgBC,KAAhBD,YACFsS,EAAkB,CAACojB,EAAW,GAAG/nD,UAAW+nD,EAAW,GAAG/nD,WAEhE,OACI,yBAAK6G,UAAU,oBACX,yBAAKvL,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,MAAOujB,aAAc,QACnG,kBAACkT,EAAD,CAEI7hB,qBAAsB,SAAAC,GAAW,OAAIA,EAAYC,YACjDxV,MAAOP,KAAKN,MAAMsqC,gBAClB97B,OAAQ,aACRkP,YAAY,EACZwa,OAAQA,KACR3a,aAAc,SAACC,GAAc,OAAOA,EAAUpb,MAASqb,WAAaD,EAAUpb,IAAOoc,EAASQ,aAAakhB,SAAS56B,WAAY,YAAY+7B,SAE5InuB,SAAU5S,KAAKupD,wBAEnB,yBAAK5oD,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,QAC9E,kBAAC,KAAD,CAAQV,MAAM,IAAI8c,MAAM,SAASC,KAAK,cAAcpK,QAASlT,KAAKwb,WAClE,kBAAC,KAAD,CAAQjb,MAAM,IAAI8c,MAAM,SAASC,KAAK,eAAepK,QAASlT,KAAKwb,WACnE,kBAAC,KAAD,CAAQjb,MAAM,IAAI8c,MAAM,SAASC,KAAK,eAAepK,QAASlT,KAAKwb,aAIvExb,KAAKN,MAAM20C,UACJ,kBAAC,KAAD,CAAM5wC,KAAK,YAEV,yBAAK9C,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWozB,QAAS,SACpE,kBAAC,GAAD,CAASi5B,YAAartD,KAAKN,MAAMkoD,WAC7BxoB,mBAAoBp/B,KAAKs0C,qBACzBhvB,SAAUvhB,EACVgjD,aAAc/mD,KAAKN,MAAMkoD,WACzB5d,gBAAiBA,EACjBkd,oBAAqBlnD,KAAKspD,wBAE9B,kBAAC,GAAD,CAAYprC,SAAUA,EAAU8rB,gBAAiBA,KAKjE,yBAAKrpC,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,iB,GAzc5DrB,aCyHV8tD,G,2MA5HX5tD,MAAQ,CACJ4J,SAAU,GACVD,SAAU,GACVgrC,WAAW,EACXrK,gBAAiB,CAACloC,IAAOA,MAASmM,SAAS,EAAG,QAAQC,OAAO,aAC7DpM,IAAOA,MAASoM,OAAO,e,EAiC3Bq7C,sBAAwB,SAACxnD,EAAMy1B,GAC3B,EAAKv3B,SAAS,CAAE+pC,gBAAiBjoC,K,EAGrCyZ,SAAW,SAACzK,GAAO,IACPmN,EAAa,EAAK9d,MAAlB8d,SACA8rB,EAAoB,EAAKtqC,MAAzBsqC,gBACFrK,EAAOzhB,EAASQ,aAAakhB,SAC7BC,EAAW/9B,IAAOA,IAAO69B,GAAMzxB,OAAO,aAAa7I,UAEnDa,EAAK8jC,EAAgB,GAAG3kC,UACxBc,EAAK6jC,EAAgB,GAAG3kC,UAExB/C,EAAM,MAEZ,OAAQyO,EAAE6F,OAAOrW,OACb,IAAK,IACD,GAAIs/B,GAAa35B,EAAK5D,EAAM,CACxB,IAAMmZ,EAAQ,CAAC3Z,IAAOA,IAAOoE,EAAK5D,GAAK4L,OAAO,aAAcpM,IAAOA,IAAOqE,EAAK7D,GAAK4L,OAAO,cAC3F,EAAKq7C,sBAAsB9tC,GAE/B,MACJ,IAAK,IACD,IAAMC,EAAQ,CAAC5Z,IAAOA,MAASmM,SAAS,EAAG,QAAQC,OAAO,aAAcpM,IAAOA,MAASoM,OAAO,cAC/F,EAAKq7C,sBAAsB7tC,GAC3B,MACJ,IAAK,IAED,GADc5Z,IAAOA,MAASoM,OAAO,aAAa7I,WACpCc,EAAK7D,EAAM,CACrB,IAAMqZ,EAAQ,CAAC7Z,IAAOA,IAAOoE,EAAK5D,GAAK4L,OAAO,aAAcpM,IAAOA,IAAOqE,EAAK7D,GAAK4L,OAAO,cAC3F,EAAKq7C,sBAAsB5tC,M,mFA5DvC3b,KAAKutD,Y,gCAEE,IAAD,OACNvtD,KAAKC,SAAS,CAAEo0C,WAAW,IADrB,IAEEn2B,EAAale,KAAKI,MAAlB8d,SACF3Q,EAAM2Q,EAASzX,MAAMzB,WAAWC,OAChCgtB,EAAM/T,EAAS8J,OAAOhjB,WAAWC,OACjCqE,EAAWG,GAAuC8D,EAAK0kB,EAAK,OAC7DvoB,MAAK,SAAA3F,GACF,OAAOA,EAAKA,QAEf+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,2CAA6CsL,KAAKC,UAAU3D,OAE1EV,EAAWI,GAAuC8D,EAAK0kB,GACxDvoB,MAAK,SAAA3F,GACF,OAAOA,EAAKA,QAEf+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,2CAA6CsL,KAAKC,UAAU3D,OAEhFM,QAAQC,IAAI,CAAChB,EAAUD,IAAWK,MAAK,SAAAa,GACnC,EAAKtK,SAAS,CACVqJ,SAAUiB,EAAO,GACjBlB,SAAUkB,EAAO,GACjB8pC,WAAW,OAEhBvqC,OAAM,WAAQ,EAAK7J,SAAS,CAAEo0C,WAAW,S,+BAyCtC,IACEn2B,EAAale,KAAKI,MAAlB8d,SACFsvC,EAAQxtD,KAAKN,MAAM4J,SACnBmkD,EAAQztD,KAAKN,MAAM2J,SACnB+jD,EAAaptD,KAAKN,MAAMsqC,gBAEtBtS,EAAgBC,KAAhBD,YACFsS,EAAkB,CAACojB,EAAW,GAAG/nD,UAAW+nD,EAAW,GAAG/nD,WAChE,OAAqB,IAAjBmoD,EAAM9pD,QAAiC,IAAjB+pD,EAAM/pD,OAErB,KAIP,6BACI,yBAAK/C,MAAO,CAAE4oC,UAAW,SACrB,yBAAK5oC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,MAAOujB,aAAc,QACnG,kBAACkT,EAAD,CACI7hB,qBAAsB,SAAAC,GAAW,OAAIA,EAAYC,YACjDxV,MAAOP,KAAKN,MAAMsqC,gBAClB97B,OAAQ,aACRkP,YAAY,EACZwa,OAAQ,QACRhlB,SAAU5S,KAAKupD,sBACftsC,aAAc,SAACC,GAAc,OAAOA,EAAUpb,MAASqb,WAAaD,EAAUpb,IAAOoc,EAASQ,aAAakhB,SAAS56B,WAAY,YAAY+7B,WAEhJ,yBAAKpgC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,QAC9E,kBAAC,KAAD,CAAQV,MAAM,IAAI8c,MAAM,SAASC,KAAK,cAAcpK,QAASlT,KAAKwb,WAClE,kBAAC,KAAD,CAAQjb,MAAM,IAAI8c,MAAM,SAASC,KAAK,eAAepK,QAASlT,KAAKwb,WACnE,kBAAC,KAAD,CAAQjb,MAAM,IAAI8c,MAAM,SAASC,KAAK,eAAepK,QAASlT,KAAKwb,aAIvExb,KAAKN,MAAM20C,UACJ,kBAAC,KAAD,CAAM5wC,KAAK,YAEV,yBAAK9C,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWozB,QAAS,SACpE,kBAACkhB,GAAD,CAAwBtL,gBAAiBA,EAAiB1gC,SAAUkkD,EAAO5gB,WAAW,EAAM1uB,SAAUA,IACtG,kBAACq3B,GAAD,CAAsBvL,gBAAiBA,EAAiByI,SAAUgb,EAAO7gB,WAAW,EAAM1uB,SAAUA,W,GAnHhH1e,a,OCKxB,IAAIkuD,GAAY,GAohCDC,G,2MAlhCbjuD,MAAQ,CACNynC,UAAW,KACXxJ,QAAS,KACTiwB,aAAc,KACdxlD,QAAS,KACTylD,gBAAgB,EAEhBC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,OAAQ,GACRC,SAAU,GACVC,YAAa,GACbC,QAAS,GACTC,QAAS,GACTC,MAAO,GACPC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,YAAa,EACbza,WAAW,G,EAsNb/4B,iBAAmB,SAAAyjB,GACjB,EAAK9+B,SAAS,CACZ2tD,aAAc7uB,EAAWgwB,SACzB3mD,QAAS22B,EAAWiwB,QACpBnB,gBAAgB,K,EAIpBhb,aAAe,SAAA9hC,GACb,IAAIxQ,EAAQoD,SAASoN,EAAG,IACxB,EAAK9Q,SAAS,CACZ6uD,YAAavuD,K,EAajBm/B,aAAe,SAAC39B,EAAMy1B,K,mFA3OpBx3B,KAAKqb,Y,oCAGO4zC,EAASC,GAAU,ItF64BO1pD,EAAOS,EsF74Bf,QtF64BQT,EsF54BAypD,EtF44BOhpD,EsF54BEipD,EtF64B1CzpD,IAAMC,IAAI,WAAaF,EAAQ,IAAMS,IsF54BvCyD,MAAK,SAAA3F,GAAU,EAAK9D,SAAS,CAAE6tD,QAAS/pD,EAAKA,UAC7C+F,OAAM,SAAAC,GAAS7H,QAAQC,IAAI,0CAA4CsL,KAAKC,UAAU3D,S,oCAE7EkoB,GAAM,ItF45BoBzsB,EAAOS,EsF55B5B,OACTiY,EAAale,KAAKI,MAAlB8d,UtF25B8B1Y,EsF15BA0Y,EAASzX,MtF05BFR,EsF15BSgsB,EtF25BjDxsB,IAAMC,IAAI,WAAaF,EAAQ,IAAMS,IsF15BvCyD,MAAK,SAAA3F,GACJ,EAAK9D,SAAS,CACZguD,QAASlqD,EAAKA,UAGjB+F,OAAM,SAAAC,GACL7H,QAAQC,IACN,0CAA4CsL,KAAKC,UAAU3D,S,mCAKtDkoB,GAAM,ItFi6BoBzsB,EAAOS,EsFj6B5B,OACRiY,EAAale,KAAKI,MAAlB8d,UtFg6B6B1Y,EsF/5BA0Y,EAASzX,MtF+5BFR,EsF/5BSgsB,EtFg6BhDxsB,IAAMC,IAAI,UAAYF,EAAQ,IAAMS,IsF/5BtCyD,MAAK,SAAA3F,GACJ,EAAK9D,SAAS,CACZouD,OAAQtqD,EAAKA,UAGhB+F,OAAM,SAAAC,GACL7H,QAAQC,IAAI,6BAA+BsL,KAAKC,UAAU3D,S,qCAGjDhI,EAAMkF,GAAM,IAAD,QtFg5BrB,SAAoCzB,EAAOzD,EAAMkF,GACtD,OAAOxB,IAAMC,IAAI,YAAcF,EAAQ,IAAMzD,EAAO,IAAMkF,IsF94BxDwC,CAFqBzJ,KAAKI,MAAlB8d,SAEwCzX,MAAO1E,EAAMkF,GAC1DyC,MAAK,SAAA3F,GACJ,EAAK9D,SAAS,CACZkuD,SAAUpqD,EAAKA,UAGlB+F,OAAM,SAAAC,GACL7H,QAAQC,IACN,2CAA6CsL,KAAKC,UAAU3D,S,wCAIlD5E,GAChBnF,KAAKC,SAAS,CACZsuD,YAAappD,M,oCAGHoI,EAAK0kB,EAAKk9B,GAAM,ItFm2BU3pD,EAAOS,EAAQqB,EsFn2B1B,QtFm2BW9B,EsFl2BA+H,EtFk2BOtH,EsFl2BFgsB,EtFk2BU3qB,EsFl2BL6nD,EtFm2B3C1pD,IAAMC,IAAI,WAAaF,EAAQ,IAAMS,EAAS,IAAMqB,IsFl2BtDoC,MAAK,SAAA3F,GACJ,EAAK9D,SAAS,CACZwuD,QAAS1qD,EAAKA,UAGjB+F,OAAM,SAAAC,GACL7H,QAAQC,IAAI,6BAA+BsL,KAAKC,UAAU3D,S,qCAGjDhG,GACb/D,KAAKC,SAAS,CACZ0uD,SAAU5qD,M,qCAICqrD,EAAUC,GAAW,ItF03BK7pD,EAAOzD,EAAMutD,EsF13BnB,OACzBpxC,EAAale,KAAKI,MAAlB8d,UtFy3B+B1Y,EsFv3BA0Y,EAASzX,MtFu3BF1E,EsFv3BSqtD,EtFu3BHE,EsFv3BaD,EtFw3B5D5pD,IAAMC,IAAI,YAAcF,EAAQ,IAAMzD,EAAO,IAAMutD,IsFv3BrD5lD,MAAK,SAAA3F,GACJ,EAAK9D,SAAS,CACZ4uD,SAAU9qD,EAAKA,UAGlB+F,OAAM,SAAAC,GACL7H,QAAQC,IACN,2CAA6CsL,KAAKC,UAAU3D,S,gCAIzD,IAAD,OACR/J,KAAKC,SAAS,CAAEo0C,WAAW,IADnB,ItF8zB8B7uC,EAAO0B,EsF5zBrCgX,EAAale,KAAKI,MAAlB8d,SAEF6vC,GtF0zBgCvoD,EsF1zBgB0Y,EAASzX,MtF0zBlBS,EsF1zByB,WtF2zBjEzB,IAAMC,IAAI,WAAaF,EAAQ,IAAM0B,IsF1zBvCwC,MAAK,SAAA3F,GACJ,OAAOA,EAAKA,QAEb+F,OAAM,SAAAC,GACL7H,QAAQC,IACN,0CAA4CsL,KAAKC,UAAU3D,OAI3DikD,EtFo0BH,SAAmCxoD,EAAO0B,GAC/C,OAAOzB,IAAMC,IAAI,WAAaF,EAAQ,IAAM0B,GsFr0B1BuC,CACdyU,EAASzX,MACT,YAECiD,MAAK,SAAA3F,GACJ,OAAOA,EAAKA,QAEb+F,OAAM,SAAAC,GACL7H,QAAQC,IACN,0CAA4CsL,KAAKC,UAAU3D,OAK3DmkD,EtF2zBH,SAAoC1oD,GACzC,OAAOC,IAAMC,IAAI,YAAcF,GsF5zBZiE,CAAuCyU,EAASzX,OAC9DiD,MAAK,SAAA3F,GACJ,OAAOA,EAAKA,QAEb+F,OAAM,SAAAC,GACL7H,QAAQC,IACN,2CAA6CsL,KAAKC,UAAU3D,OAK5DqkD,EtF80BH,SAAqC5oD,EAAO0B,EAAOqoD,GACxD,OAAO9pD,IAAMC,IAAI,aAAeF,EAAQ,IAAM0B,EAAQ,IAAMqoD,GsF/0BxC9lD,CAChByU,EAASzX,MACT,WACA,KAECiD,MAAK,SAAA3F,GACJ,OAAOA,EAAKA,QAEb+F,OAAM,SAAAC,GACL7H,QAAQC,IAAI,6BAA+BsL,KAAKC,UAAU3D,OAGxDykD,EtFqxBH,SAAmChpD,EAAO0B,GAC/C,OAAOzB,IAAMC,IAAI,WAAaF,EAAQ,IAAM0B,GsFtxB1BuC,CACdyU,EAASzX,MACT,YAECiD,MAAK,SAAA3F,GACJ,OAAOA,EAAKA,QAEb+F,OAAM,SAAAC,GACL7H,QAAQC,IAAI,6BAA+BsL,KAAKC,UAAU3D,OAY9D,IATmBxJ,EtF8ZE0F,EAAQC,EAAIC,EsFrZ3BqpD,EARU,QADGjvD,EASQ2d,EAASU,WAPzB,MAEY9c,IAAOvB,EAAMkvD,OAAQ,YAAYvhD,OAAO,UACtCwhD,OAAO,EAAG,GAK7BpB,EtFkzBH,SAAoC9oD,EAAOzD,EAAMkE,GACtD,OAAOR,IAAMC,IAAI,YAAc3D,EAAO,IAAMyD,EAAQ,IAAMS,GsFnzBvCwD,CACfyU,EAASzX,MACT+oD,EACAtxC,EAAS8J,QACTte,MAAK,SAAA3F,GACL,OAAOA,EAAKA,QACX+F,OAAM,SAAAC,GACP7H,QAAQC,IAAI,6BAA+BsL,KAAKC,UAAU3D,OAEtD4lD,EAAUzxC,EAASxN,UACnBu2B,EAAKnlC,IAAO6tD,EAAS,YAAYzhD,OAAO,gBACxCg5B,EAAKplC,MAASoM,OAAO,gBAErBwgD,GtFuYezoD,EsFvYciY,EAAS8J,OtFuYf9hB,EsFvYuB+gC,EtFuYnB9gC,EsFvYuB+gC,EtFwYnDzhC,IAAMC,IAAI,SAAWO,EAAS,IAAMC,EAAK,IAAMC,IsFvYjDuD,MAAK,SAAA3F,GAEJ,OADoBqK,EAAkBrK,EAAKA,SAG5C+F,OAAM,SAAAC,GACL7H,QAAQC,IAAI4H,MAEV6kD,EtFywBH,SAAoCppD,GACzC,OAAOC,IAAMC,IAAI,YAAcF,GsF1wBZiE,CAAuCyU,EAASzX,OAC9DiD,MAAK,SAAA3F,GACJ,OAAOA,EAAKA,QAEb+F,OAAM,SAAAC,GACL7H,QAAQC,IAAI4H,MAEhBM,QAAQC,IAAI,CACVyjD,EACAC,EACAE,EACAE,EACAE,EACAE,EACAE,EACAE,IACCllD,MAAK,SAAAa,GACN,EAAKtK,SAAS,CACZ8tD,QAASxjD,EAAO,GAChByjD,QAASzjD,EAAO,GAChB2jD,SAAU3jD,EAAO,GACjB6jD,UAAW7jD,EAAO,GAClB+jD,SAAU/jD,EAAO,GACjBikD,QAASjkD,EAAO,GAChBmkD,MAAOnkD,EAAO,GACdqkD,SAAUrkD,EAAO,GACjB8pC,WAAW,OAEZvqC,OAAM,WAAQ,EAAK7J,SAAS,CAAEo0C,WAAW,S,sCAmBnB,IAArBqZ,GAAUhqD,QACZ1D,KAAKC,SAAS,CACZknC,UAAWumB,GAAU,GACrB/vB,QAAS+vB,GAAU,O,uCAQP,IAAD,OA8Cf,OAjCE,yBACE/sD,MAAO,CACLC,QAAS,OACTI,oBAAqB,0BACrB4uD,UAAW,OACXprC,aAAc,OACdqrC,gBAAiB,QACjBC,aAAc,WAnBA,CAClB,CAAEplD,KAAM,2BAAQnK,MAAO,GACvB,CAAEmK,KAAM,2BAAQnK,MAAO,GACvB,CAAEmK,KAAM,2BAAQnK,MAAO,GACvB,CAAEmK,KAAM,2BAAQnK,MAAO,GACvB,CAAEmK,KAAM,2BAAQnK,MAAO,GACvB,CAAEmK,KAAM,2BAAQnK,MAAO,GACvB,CAAEmK,KAAM,2BAAQnK,MAAO,GACvB,CAAEmK,KAAM,2BAAQnK,MAAO,IAaR0L,KAAI,SAAAtC,GACf,OACE,kBAAC,KAAD,CACEuJ,QAAS,SAAAnC,GAAC,OAAI,EAAK8hC,aAAa9hC,EAAE6F,OAAOrW,QACzC2L,UAAU,UACVvL,MAAO,CACLue,aAAc,MACdtQ,MAAO,YACPqJ,OAAQ,sBACR8E,YAAa,MACbkU,aAAc,MACdlwB,OAAQ,OACRC,oBAAqB,SACrBgT,OAAQ,WAEVzT,MAAOoJ,EAAKpJ,OAEXoJ,EAAKe,Y,2CAWhB,IAAMY,EAAStL,KAAKN,MAAMovD,YAC1B,GAAe,IAAXxjD,EAAc,CAChB,IAAMvH,EAAO/D,KAAKN,MAAMouD,QACxB,OAAoB,IAAhB/pD,EAAKL,OACA,KAEaK,EACDkI,KAAI,SAAA8jD,GAAG,OACxB,yBAAKpvD,MAAO,CAAEkU,WAAY,aAAek7C,EAAIC,YAInD,GAAe,IAAX1kD,EAAc,CAChB,IAAMvH,EAAO/D,KAAKN,MAAMuuD,QACxB,OAAoB,IAAhBlqD,EAAKL,OACA,KAEaK,EACDkI,KAAI,SAAA8jD,GAAG,OACxB,yBAAKpvD,MAAO,CAAEkU,WAAY,aAAek7C,EAAI,OAInD,GAAe,IAAXzkD,EAAc,CAChB,IAAMvH,EAAO/D,KAAKN,MAAMyuD,SACxB,GAAoB,IAAhBpqD,EAAKL,OACP,OAAO,KAIP,IAFA,IAAIusD,EAAW,GACXC,EAAU,GAFT,aAKH,IAAMzsD,EAAOM,EAAK4Y,GAAGwzC,SACf9J,EAAQtiD,EAAK4Y,GAAGyzC,SAChB7nB,EAAUxkC,EAAK4Y,GAAG0zC,SACxB,IAAgC,IAA5BJ,EAAShlD,QAAQxH,GAAc,CAEjC,IAAM6sD,EAAS,CACb7sD,KAAMA,EACN4iD,MAAOA,EACP9d,QAASA,GAEX2nB,EAAQ5qD,KAAKgrD,GACbL,EAAS3qD,KAAK7B,OACT,CAEL,IAAM8sD,EAAML,EAAQh5C,WAAU,SAAAxM,GAAI,OAAIA,EAAKjH,OAASA,KACpDysD,EAAQK,GAAKlK,MAAQA,EACrB6J,EAAQK,GAAKhoB,QAAU2nB,EAAQK,GAAKhoB,QAAU,KAAOA,IAlBhD5rB,EAAI,EAAGA,EAAI5Y,EAAKL,OAAQiZ,IAAM,IAsBvC,IADA,IAAI6zC,EAAa,GACRjtD,EAAQ,EAAGA,EAAQ2sD,EAAQxsD,OAAQH,IAC1CitD,EAAWlrD,KAAK4qD,EAAQ3sD,GAAOE,MAC/B+sD,EAAWlrD,KAAK4qD,EAAQ3sD,GAAOglC,SAC/BioB,EAAWlrD,KAAK,MAGlB,OAAOkrD,EAAWvkD,KAAI,SAAA8jD,GAAG,OACvB,yBAAKpvD,MAAO,CAAEkU,WAAY,aAAek7C,MAI/C,GAAe,IAAXzkD,EAAc,CAChB,IAAMvH,EAAO/D,KAAKN,MAAM2uD,OACxB,OAAoB,IAAhBtqD,EAAKL,OACA,KAEaK,EACDkI,KAAI,SAAA8jD,GAAG,OACxB,yBAAKpvD,MAAO,CAAEkU,WAAY,aACvBpH,KAAKC,UAAUqiD,EAAK,KAAM,UAKnC,GAAe,IAAXzkD,EAAc,CAChB,IAAMvH,EAAO/D,KAAKN,MAAM6uD,YACxB,GAAoB,IAAhBxqD,EAAKL,OACP,OAAO,KAGP,IADA,IAAI+sD,EAAU,GACLltD,EAAQ,EAAGA,EAAQ,EAAGA,IAAS,CACtC,GAAc,IAAVA,EAAa,CACf,IAAMmtD,EAAa3sD,EAAKT,QAAO,SAAUqG,EAAMpG,EAAOqG,GACpD,MAA0C,MAAnCD,EAAKgnD,QAAQ3rD,WAAWC,UAEP,IAAtByrD,EAAWhtD,QACb+sD,EAAQnrD,KAAKorD,EAAW,IAI5B,GAAc,IAAVntD,EAAa,CACf,IAAMmtD,EAAa3sD,EAAKT,QAAO,SAAUqG,EAAMpG,EAAOqG,GACpD,MAA0C,MAAnCD,EAAKgnD,QAAQ3rD,WAAWC,UAEP,IAAtByrD,EAAWhtD,QACb+sD,EAAQnrD,KAAKorD,EAAW,IAI5B,GAAc,IAAVntD,EAAa,CACf,IAAMmtD,EAAa3sD,EAAKT,QAAO,SAAUqG,EAAMpG,EAAOqG,GACpD,MAA0C,MAAnCD,EAAKgnD,QAAQ3rD,WAAWC,UAEP,IAAtByrD,EAAWhtD,QACb+sD,EAAQnrD,KAAKorD,EAAW,IAI5B,GAAc,IAAVntD,EAAa,CACf,IAAMmtD,EAAa3sD,EAAKT,QAAO,SAAUqG,EAAMpG,EAAOqG,GACpD,MAA0C,MAAnCD,EAAKgnD,QAAQ3rD,WAAWC,UAEP,IAAtByrD,EAAWhtD,QACb+sD,EAAQnrD,KAAKorD,EAAW,IAI5B,GAAc,IAAVntD,EAAa,CACf,IAAMmtD,EAAa3sD,EAAKT,QAAO,SAAUqG,EAAMpG,EAAOqG,GACpD,MAA0C,MAAnCD,EAAKgnD,QAAQ3rD,WAAWC,UAEP,IAAtByrD,EAAWhtD,QACb+sD,EAAQnrD,KAAKorD,EAAW,KAY9B,OARgBD,EAAQxkD,KAAI,SAAUtC,EAAMpG,EAAOqG,GACjD,OACE,yBAAK1J,IAAKqD,EAAO5C,MAAO,CAAE6jB,aAAc,SACtC,yBAAK7jB,MAAO,CAAEkU,WAAY,aAAelL,EAAKgnD,SAC9C,yBAAKhwD,MAAO,CAAEkU,WAAY,aAAelL,EAAKinD,WAOxD,GAAe,IAAXtlD,EAAc,CAChB,IAAMvH,EAAO/D,KAAKN,MAAM+uD,QACxB,OAAoB,IAAhB1qD,EAAKL,OACA,KAEaK,EACDkI,KAAI,SAAA8jD,GAAG,OACxB,yBAAKpvD,MAAO,CAAEkU,WAAY,aAAek7C,EAAI,OAInD,GAAe,IAAXzkD,EAAc,CAChB,IAAMvH,EAAO/D,KAAKN,MAAMivD,SACxB,OAAoB,IAAhB5qD,EAAKL,OACA,KAMaK,EAAKkI,KAAI,SAAUtC,EAAMpG,EAAOqG,GAClD,IAAMvB,EAAOsB,EAAKymB,KACZygC,EAAUlnD,EAAKknD,QACfC,EAAUnnD,EAAKmnD,QACrB,OACE,yBAAKnwD,MAAO,CAAE6jB,aAAc,SAC1B,6BAAMnc,GACN,kCAAkBjG,IAAZyuD,EAAwB,KAAOA,GACrC,kCAAkBzuD,IAAZ0uD,EAAwB,KAAOA,OAO/C,GAAe,IAAXxlD,EAAc,CAChB,IAAMvH,EAAO/D,KAAKN,MAAMmvD,SACxB,OAAoB,IAAhB9qD,EAAKL,OACA,KAEaK,EACDkI,KAAI,SAAA8jD,GAAG,OACxB,yBAAKpvD,MAAO,CAAEkU,WAAY,aAAek7C,EAAIrnC,YAIjD,OAAO,O,yCAGS,IAAD,OAiEjB,IAAM5P,EAAS9Y,KAAKN,MAAMovD,YAC1B,GAAe,IAAXh2C,EAAc,CAChB,IAAM/U,EAAO/D,KAAKN,MAAMquD,QACxB,GAAoB,IAAhBhqD,EAAKL,OACP,OACE,yBAAK/C,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,YAKvE,IAAMkwD,EAAahtD,EAAKkI,KAAI,SAAC+kD,EAAQztD,EAAOqG,GAC1C,IAAM2D,EAAMyjD,EAAO/B,QAAQjqD,WAAWC,OAChCgtB,EAAM++B,EAAO9B,QAAQlqD,WAAWC,OACtC,OACE,yBACE/E,IAAKqD,EACL2I,UAAU,WACV+kD,SAAS,IACTtwD,MAAO,CACL8T,QAAS,UACTwD,OAAQ,+BACRjE,OAAQ,UACRkL,aAAc,MACdsF,aAAc,OAEhBtR,QAAS,kBAAM,EAAKg+C,cAAc3jD,EAAK0kB,KAEvC,yBAAKtxB,MAAO,CAAEqO,SAAU,SAAxB,sBACOlN,IAAOkvD,EAAOG,QAAQnsD,WAAWC,OAAQ,YAAYiJ,OAAO,eAEnE,yBAAKvN,MAAO,CAAEqO,SAAU,SAAxB,gBAAsCgiD,EAAOI,aAInD,OAEE,6BAAML,IAIZ,GAAe,IAAXj4C,EAAc,CAChB,IAAM/U,EAAO/D,KAAKN,MAAMsuD,QACxB,GAAoB,IAAhBjqD,EAAKL,OACP,OACE,yBAAK/C,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,YAKvE,IAAMkwD,EAAahtD,EAAKkI,KAAI,SAAC+kD,EAAQztD,EAAOqG,GAE1C,IAAMqoB,EAAM++B,EAAOK,QAAQrsD,WAAWC,OACtC,OACE,yBACE/E,IAAKqD,EACL2I,UAAU,WACV+kD,SAAS,IACTtwD,MAAO,CACL8T,QAAS,UACTwD,OAAQ,+BACRjE,OAAQ,UACRkL,aAAc,MACdsF,aAAc,OAEhBtR,QAAS,kBAAM,EAAKo+C,cAAcr/B,KAElC,yBAAKtxB,MAAO,CAAEqO,SAAU,SAAxB,sBACOlN,IAAOkvD,EAAOO,SAASvsD,WAAWC,OAAQ,cAAciJ,OAC3D,eAGJ,yBAAKvN,MAAO,CAAEqO,SAAU,SAAxB,gBACMgiD,EAAOQ,SAASxsD,WAAWC,YAKvC,OACE,6BAAM8rD,GAIZ,GAAe,IAAXj4C,EAAc,CAChB,IAAM/U,EAAO/D,KAAKN,MAAMwuD,SACxB,GAAoB,IAAhBnqD,EAAKL,OACP,OACE,yBAAK/C,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,YAKvE,IAAMkwD,EAAahtD,EAAKkI,KAAI,SAAC+kD,EAAQztD,EAAOqG,GAC1C,IAAM6nD,EAAMT,EAAOU,QAAQ1sD,WAAWC,OAChC0sD,EAAUX,EAAOW,QAAQ3sD,WAAWC,OAC1C,OACE,yBACE/E,IAAKqD,EACL2I,UAAU,WACV+kD,SAAS,IACTtwD,MAAO,CACL8T,QAAS,UACTwD,OAAQ,+BACRjE,OAAQ,UACRkL,aAAc,MACdsF,aAAc,OAEhBtR,QAAS,kBAAM,EAAK0+C,eAAeD,EAASF,KAE5C,yBAAK9wD,MAAO,CAAEqO,SAAU,SAAxB,4BACQlN,IAAOkvD,EAAOW,QAAQ3sD,WAAWC,OAAQ,cAAciJ,OAC3D,eAGJ,yBAAKvN,MAAO,CAAEqO,SAAU,SAAxB,gBACMgiD,EAAOa,OAAO7sD,WAAWC,OAAS+rD,EAAOU,QAAQ1sD,WAAWC,QAElE,yBAAKtE,MAAO,CAAEqO,SAAU,SAAxB,gBACMgiD,EAAOc,SAAS9sD,WAAWC,OAAS+rD,EAAOe,SAAS/sD,WAAWC,YAK3E,OACE,6BAAM8rD,GAIZ,GAAe,IAAXj4C,EAAc,CAChB,IAAM/U,EAAO/D,KAAKN,MAAM0uD,UACxB,GAAoB,IAAhBrqD,EAAKL,OACP,OACE,yBAAK/C,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,YAKvE,IAAMkwD,EAAahtD,EAAKkI,KAAI,SAAC+kD,EAAQztD,EAAOqG,GAC1C,IAAMqoB,EAAM++B,EAAOhpD,QAAQhD,WAAWC,OACtC,OACE,yBACE/E,IAAKqD,EACL2I,UAAU,WACV+kD,SAAS,IACTtwD,MAAO,CACL8T,QAAS,UACTwD,OAAQ,+BACRjE,OAAQ,UACRwF,UAAW,SACX0F,aAAc,MACdsF,aAAc,OAEhBtR,QAAS,kBAAM,EAAK8+C,aAAa//B,KAEjC,yBAAKtxB,MAAO,CAAEqO,SAAU,SAAxB,sBACOlN,IAAOkvD,EAAOiB,OAAOjtD,WAAWC,OAAQ,YAAYiJ,OACvD,eAIJ,yBAAKvN,MAAO,CAAEqO,SAAU,SAAxB,gBACMgiD,EAAOkB,OAAOltD,WAAWC,YAKrC,OACE,6BAAM8rD,GAIZ,GAAe,IAAXj4C,EAAc,CAChB,IAAM/U,EA3OR,SAAyBm1C,GAkBvB,IAjBA,IAAI3uC,EAAS2uC,EAAU51C,QAAO,SAAU/C,EAAOgD,EAAOqG,GAOpD,OANYA,EAAIqC,KAAI,SAAU1L,EAAOgD,EAAOqG,GAC1C,OAAO9H,IACLvB,EAAM4xD,MAAMntD,WAAazE,EAAM6xD,MAAMptD,WACrC,sBACAK,aAGE4F,QACFnJ,IACEvB,EAAM4xD,MAAMntD,WAAazE,EAAM6xD,MAAMptD,WACrC,sBACAK,aACE9B,KAGN++C,EAAU,GAjBoB,WAkBzB/+C,GACP,IAAMsB,EAAU0F,EAAOhH,GACjBg/C,EAAezgD,IACnB+C,EAAQstD,MAAMntD,WAAaH,EAAQutD,MAAMptD,WACzC,sBACAK,UACIm9C,EAActJ,EAAU51C,QAAO,SAAU/C,EAAOgD,EAAOqG,GAC3D,OACE9H,IACEvB,EAAM4xD,MAAMntD,WAAazE,EAAM6xD,MAAMptD,WACrC,sBACAK,YAAck9C,KAGpBD,EAAQh9C,KAAKk9C,IAdNj/C,EAAQ,EAAGA,EAAQgH,EAAO7G,OAAQH,IAAU,EAA5CA,GAgBT,OAAO++C,EAyMM+P,CAAgBryD,KAAKN,MAAM4uD,UAExC,GADApsD,QAAQC,IAAI4B,GACQ,IAAhBA,EAAKL,OACP,OACE,yBAAK/C,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,YAKvE,IAqBMkwD,EArBOhtD,EAAKkI,KAAI,SAAUtC,EAAMpG,EAAOqG,GAO3C,MAAO,CACLzE,KAPcwE,EAAKsC,KAAI,SAAUqmD,EAAG31C,EAAGlO,GACvC,MAAO,CACLmiD,MAAO0B,EAAE1B,MACTD,QAAS2B,EAAE3B,YAKb4B,GAAI5oD,EAAK,GAAGwoD,MACZK,GAAI7oD,EAAK,GAAGyoD,MACZhiC,KAAMtuB,IAAO6H,EAAK,GAAGwoD,MAAMntD,WAAWC,OAAS0E,EAAK,GAAGyoD,MAAMptD,WAAWC,OAAQ,sBAAsBI,UACtGotD,QAAS9oD,EAAK,GAAG8oD,QACjBC,SAAU/oD,EAAK,GAAG+oD,SAClBC,QAAShpD,EAAK,GAAGgpD,QACjBC,SAAUjpD,EAAK,GAAGipD,aAGApkD,MAAK,SAAUC,EAAGC,GACtC,OAAOD,EAAE2hB,KAAO1hB,EAAE0hB,KAAO,GAAK,KAEJnkB,KAAI,SAAC+kD,EAAQztD,EAAOqG,GAC9C,OACE,yBACE1J,IAAKqD,EACL2I,UAAU,WACV+kD,SAAS,IACTtwD,MAAO,CACL8T,QAAS,UACTwD,OAAQ,+BACRjE,OAAQ,UACRwF,UAAW,SACX0F,aAAc,MACdsF,aAAc,OAEhBtR,QAAS,kBAAM,EAAK2/C,kBAAkB7B,EAAO7rD,QAE7C,yBAAKxE,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,gBAAiBpS,WAAY,WAC1E,yBAAKF,MAAO,CAAEqO,SAAU,SAAxB,gBACMlN,IACFkvD,EAAOuB,GAAGvtD,WAAagsD,EAAOwB,GAAGxtD,WACjC,sBACAkJ,OAAO,gBAEX,yBAAKvN,MAAO,CAAEqO,SAAU,SACrBgiD,EAAOyB,QAAQztD,WAAWC,OAAS,IAAMrF,OAAOoxD,EAAO0B,YAG5D,yBAAK/xD,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,gBAAiBpS,WAAY,WAC1E,yBAAKF,MAAO,CAAEqO,SAAU,SAAxB,gBACMgiD,EAAO2B,QAAQ3tD,WAAWC,QAEhC,yBAAKtE,MAAO,CAAEqO,SAAU,SACrBgiD,EAAO4B,SAAS5tD,WAAWC,OAAS,qBAO/C,OACE,6BAAM8rD,GAIZ,GAAe,IAAXj4C,EAAc,CAChB,IAAM/U,EAAO/D,KAAKN,MAAM8uD,QACxB,GAAoB,IAAhBzqD,EAAKL,OACP,OACE,yBAAK/C,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,YAKvE,IAAMkwD,EAAahtD,EAAKkI,KAAI,SAAC+kD,EAAQztD,EAAOqG,GAC1C,IAAMqoB,EAAM++B,EAAO8B,QAAQ9tD,WAAWC,OAChCkqD,EAAM6B,EAAO+B,QAAQ/tD,WAAWC,OAChCsI,EAAMyjD,EAAOgC,QAAQhuD,WAAWC,OACtC,OACE,yBACE/E,IAAKqD,EACL2I,UAAU,WACV+kD,SAAS,IACTtwD,MAAO,CACL8T,QAAS,UACTwD,OAAQ,+BACRjE,OAAQ,UACRwF,UAAW,SACX0F,aAAc,MACdsF,aAAc,OAEhBtR,QAAS,kBAAM,EAAK+/C,cAAc1lD,EAAK0kB,EAAKk9B,KAE5C,yBAAKxuD,MAAO,CAAEqO,SAAU,SAAxB,4BACQlN,IAAOkvD,EAAOkC,SAASluD,WAAWC,OAAQ,YAAYiJ,OAAO,eAErE,yBAAKvN,MAAO,CAAEqO,SAAU,SAAxB,4BACQgiD,EAAOmC,QAAQnuD,WAAWC,OAAS,IAAM+rD,EAAOoC,SAASpuD,WAAWC,QAE5E,yBAAKtE,MAAO,CAAEqO,SAAU,SAAxB,4BACQgiD,EAAOqC,SAASruD,WAAWC,OAAS+rD,EAAOsC,SAAStuD,WAAWC,SAAW,GAAK,GAAK,IAAM+rD,EAAOsC,SAAStuD,WAAWC,OAAS+rD,EAAOsC,SAAStuD,WAAWC,SAAW,GAAK,GAAK,IAAM+rD,EAAOuC,SAASvuD,WAAWC,YAK7N,OACE,6BAAM8rD,GAIZ,GAAe,IAAXj4C,EAAc,CAChB,IAAM/U,EAAO/D,KAAKN,MAAMgvD,MACxB,QAAatsD,IAAT2B,EACF,OACE,yBAAKpD,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,YAKzE,GAAoB,IAAhBkD,EAAKL,OACP,OACE,yBAAK/C,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,YAKvE,IAiBMkwD,EA/VV,SAAoB7X,GAYlB,IAXA,IAAI3uC,EAAS2uC,EAAU51C,QAAO,SAAU/C,EAAOgD,EAAOqG,GAIpD,OAHYA,EAAIqC,KAAI,SAAU1L,EAAOgD,EAAOqG,GAC1C,OAAO9H,IAAOvB,EAAMiD,QAAQwB,WAAY,YAAYK,aAGhD4F,QACFnJ,IAAOvB,EAAMiD,QAAQwB,WAAY,YAAYK,aACzC9B,KAGN++C,EAAU,GAXe,WAYpB/+C,GACP,IAAMsB,EAAU0F,EAAOhH,GACjBg/C,EAAezgD,IACnB+C,EAAQrB,QAAQwB,WAChB,YACAK,UACIm9C,EAActJ,EAAU51C,QAAO,SAAU/C,EAAOgD,EAAOqG,GAC3D,OACE9H,IAAOvB,EAAMiD,QAAQwB,WAAY,YAAYK,YAC7Ck9C,KAGJD,EAAQh9C,KAAKk9C,IAZNj/C,EAAQ,EAAGA,EAAQgH,EAAO7G,OAAQH,IAAU,EAA5CA,GAcT,OAAO++C,EAoTQkR,CAAWzvD,GACHkI,KAAI,SAAUtC,EAAMpG,EAAOqG,GAW9C,MAAO,CACLzE,KAXcwE,EAAKsC,KAAI,SAAUqmD,EAAG31C,EAAGlO,GACvC,MAAO,CACL2hB,KAAMtuB,IACJwwD,EAAE9uD,QAAQwB,WAAastD,EAAEjkD,QAAQrJ,WACjC,gBACAkJ,OAAO,eACT2iD,QAASyB,EAAEzB,QACXC,QAASwB,EAAExB,YAKbyB,GAAI5oD,EAAK,GAAGnG,QAAQwB,WAAWC,WAGRgH,KAAI,SAAC+kD,EAAQztD,EAAOqG,GAC7C,OACE,yBACE1J,IAAKqD,EACL2I,UAAU,WACV+kD,SAAS,IACTtwD,MAAO,CACL8T,QAAS,UACTwD,OAAQ,+BACRjE,OAAQ,UACRwF,UAAW,SACX0F,aAAc,MACdsF,aAAc,OAEhBtR,QAAS,kBAAM,EAAKugD,eAAezC,EAAO7rD,QAE1C,yBAAKxE,MAAO,CAAEqO,SAAU,SAAxB,gBACMlN,IAAOkvD,EAAOuB,GAAI,YAAYrkD,OAAO,mBAKjD,OACE,6BAAM6iD,GAIZ,GAAe,IAAXj4C,EAAc,CAChB,IAAM/U,EAAO/D,KAAKN,MAAMkvD,SACxB,GAAoB,IAAhB7qD,EAAKL,OACP,OACE,yBAAK/C,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WACnE,kBAAC,KAAD,CAAM4C,KAAK,aAIf,IAAMstD,EAAahtD,EAAKkI,KAAI,SAAC+kD,EAAQztD,EAAOqG,GAE1C1H,QAAQC,IAAI6uD,EAAO5B,UACnB,IAAMA,EC96BT,SAA4BA,GAC/B,SAASsE,EAASnzD,GACd,OAAIA,EAAQ,GACD,IAAMA,EAEVA,EAEX,GAAiBwsB,MAAbqiC,GAAiC,OAAbA,QAAkChtD,IAAbgtD,EACzC,MAAO,KAEX,IAAMuE,EAAOhwD,SAASyrD,EAAW,KAAS,KACpC7sD,EAAQoB,SAAUyrD,EAAW,IAAS,KACtC9sD,EAAMqB,SAASyrD,EAAW,KAC1BrtD,EAAO4xD,EAAK3uD,WAAa0uD,EAASnxD,GAASmxD,EAASpxD,GAC1D,OAAOR,IAAOC,EAAM,YAAYmM,OAAO,cDg6BhB0lD,CAA8Bh0D,OAAOoxD,EAAO5B,WAEvDyE,GADU7C,EAAO8C,QAAQ9uD,WAAWC,OACzB+rD,EAAO6C,SAAS7uD,WAAWC,QACtCoqD,EAAW2B,EAAO3B,SAASrqD,WAAWC,OAC5C,OACE,yBACE/E,IAAKqD,EACL2I,UAAU,WACV+kD,SAAS,IACTtwD,MAAO,CACL8T,QAAS,UACTwD,OAAQ,+BACRjE,OAAQ,UACRwF,UAAW,SACX0F,aAAc,MACdsF,aAAc,OAEhBtR,QAAS,kBAAM,EAAK6gD,eAAe3E,EAAUC,KAE7C,yBAAK1uD,MAAO,CAAEqO,SAAU,SAAxB,4BAAwCogD,GACxC,yBAAKzuD,MAAO,CAAEqO,SAAU,SAAxB,gBAAsC6kD,OAI5C,OACE,6BAAM9C,M,+BAMZ,IAAMiD,EAAUh0D,KAAKi0D,iBACfC,EAAqBl0D,KAAKk0D,qBAC1BC,EAAan0D,KAAKo0D,mBACxB,OACE,yBAAKloD,UAAU,cACZ8nD,EACD,6BACE,yBACErzD,MAAO,CACLC,QAAS,OACTI,oBAAqB,YACrBozB,QAAS,SAGX,6BACE,yBACEzzB,MAAO,CACL2U,gBAAiB,YACjBvU,OAAQ,OACRgc,YAAa,MACbsG,qBAAsB,MACtBD,oBAAqB,MACrBxU,MAAO,kBACP/N,WAAY,SACZiS,MAAO,UAGT,yBACEnS,MAAO,CACLqO,SAAU,OACVJ,MAAO,kBACPoiB,WAAY,SAJhB,6BAUF,yBACErwB,MAAO,CACL8T,QAAS,OACTkf,UAAW,QACXhf,SAAU,SAGX3U,KAAKN,MAAM20C,UAAa,kBAAC,KAAD,CAAM5wC,KAAK,YAAgB0wD,IAGxD,yBAAKxzD,MAAO,CAAEgU,SAAU,SACtB,yBACEhU,MAAO,CACL2U,gBAAiB,YACjBvU,OAAQ,OACRgc,YAAa,MACbsG,qBAAsB,MACtBD,oBAAqB,MACrBpU,SAAU,OACVJ,MAAO,kBACP/N,WAAY,WAGd,yBACEF,MAAO,CACLqO,SAAU,OACVJ,MAAO,kBACPoiB,WAAY,SAJhB,6BAUF,yBAAKrwB,MAAO,CAAEgzB,UAAW,QAAShf,SAAU,SACzC3U,KAAKN,MAAM20C,UAAa,kBAAC,KAAD,CAAM5wC,KAAK,YAAgBywD,W,GAzgC7C10D,aEyER60D,I,kNA5EX30D,MAAQ,CACJyvC,KAAM,GACNnF,gBAAiB,CAACloC,IAAOA,MAASmM,SAAS,EAAG,QAAQC,OAAO,aAC7DpM,IAAOA,MAASoM,OAAO,e,EAG3Bq7C,sBAAwB,SAACxnD,EAAMy1B,GAC3B,EAAKv3B,SAAS,CAAE+pC,gBAAiBjoC,K,EAGrCyZ,SAAW,SAACzK,GAAO,IACPmN,EAAa,EAAK9d,MAAlB8d,SACA8rB,EAAoB,EAAKtqC,MAAzBsqC,gBACFrK,EAAOzhB,EAASQ,aAAakhB,SAC7BC,EAAW/9B,IAAOA,IAAO69B,GAAMzxB,OAAO,aAAa7I,UACnDa,EAAK8jC,EAAgB,GAAG3kC,UACxBc,EAAK6jC,EAAgB,GAAG3kC,UACxB/C,EAAM,MAEZ,OAAQyO,EAAE6F,OAAOrW,OACb,IAAK,IACD,GAAIs/B,GAAa35B,EAAK5D,EAAM,CACxB,IAAMmZ,EAAQ,CAAC3Z,IAAOA,IAAOoE,EAAK5D,IAAOR,IAAOA,IAAOqE,EAAK7D,KAC5D,EAAKinD,sBAAsB9tC,GAE/B,MACJ,IAAK,IACD,IAAMC,EAAQ,CAAC5Z,IAAOA,MAASmM,SAAS,EAAG,QAAQC,OAAO,aAAcpM,OACxE,EAAKynD,sBAAsB7tC,GAC3B,MACJ,IAAK,IAED,GADc5Z,IAAOA,OAAUuD,WACjBc,EAAK7D,EAAM,CACrB,IAAMqZ,EAAQ,CAAC7Z,IAAOA,IAAOoE,EAAK5D,IAAOR,IAAOA,IAAOqE,EAAK7D,KAC5D,EAAKinD,sBAAsB5tC,M,wEAQjC,IACEuC,EAAale,KAAKI,MAAlB8d,SACAwZ,EAAgBC,KAAhBD,YACF01B,EAAaptD,KAAKN,MAAMsqC,gBAExBA,EAAkB,CAACojB,EAAW,GAAG/nD,UAAW+nD,EAAW,GAAG/nD,WAEhE,OACI,yBAAK6G,UAAU,gBACX,yBAAKvL,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,MAAOujB,aAAc,QACnG,kBAACkT,EAAD,CACI7hB,qBAAsB,SAAAC,GAAW,OAAIA,EAAYC,YACjDxV,MAAOP,KAAKN,MAAMsqC,gBAClB97B,OAAQ,aACRkP,YAAY,EACZwa,OAAQ,QACRhlB,SAAU5S,KAAKupD,sBACftsC,aAAc,SAACC,GAAc,OAAOA,EAAUpb,MAASqb,WAAaD,EAAUpb,IAAOoc,EAASQ,aAAakhB,SAAS56B,WAAY,YAAY+7B,WAEhJ,yBAAKpgC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,QAC9E,kBAAC,KAAD,CAAQV,MAAM,IAAI8c,MAAM,SAASC,KAAK,cAAcpK,QAASlT,KAAKwb,WAClE,kBAAC,KAAD,CAAQjb,MAAM,IAAI8c,MAAM,SAASC,KAAK,eAAepK,QAASlT,KAAKwb,WACnE,kBAAC,KAAD,CAAQjb,MAAM,IAAI8c,MAAM,SAASC,KAAK,eAAepK,QAASlT,KAAKwb,aAG3E,yBAAK7a,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWC,cAAe,QAC1E,kBAAC,GAAD,CAAK+oC,gBAAiBA,EAAiB9rB,SAAUA,EAAU0uB,WAAW,IACtE,kBAAC,GAAD,CAAW5C,gBAAiBA,EAAiB9rB,SAAUA,EAAU0uB,WAAW,U,GAtE3EptC,cCiHN80D,I,kNAlHX50D,MAAQ,CACJme,UAAU,EACVmwB,QAAQ,EACRruC,WAAY,EACZ6Q,OAAQ,I,EASZ29B,YAAc,WAAO,IAAD,EACW,EAAK/tC,MAAxB8d,EADQ,EACRA,SAAUna,EADF,EACEA,KAClB0F,EAAyByU,EAASzN,UAAW1M,EAAKkkB,SAAU,kBAAkBve,MAAK,SAAAa,GAC/ErI,QAAQC,IAAI,mBAAqBsL,KAAKC,UAAUnD,IAChD,EAAK2jC,UAAU3jC,EAAOxG,KAAK,GAAGyM,WAC/B1G,OAAM,SAAAC,GACL7H,QAAQC,IAAI,mBAAqBsL,KAAKC,UAAU3D,Q,EAkBxDiH,UAAY,WACR,EAAK/Q,SAAS,CACV+tC,QAAQ,K,EAIhB76B,SAAW,SAAA86B,GACP,EAAKhuC,SAAS,CACV+tC,QAAQ,EACRx9B,OAAQy9B,K,EAIhBn9B,aAAe,SAAAC,GACX,EAAK9Q,SAAS,CACV+tC,QAAQ,K,EAGhBE,UAAY,SAAC3tC,GACT,EAAKN,SAAS,CACVuQ,YAAkBpO,IAAV7B,EAAsBA,EAAQ,M,mFAjD1C,IAAMR,EAAcF,eAAeC,QAAQ,QAC3CE,KAAKC,SAAS,CAAEN,WAAYI,IAC5BC,KAAKmuC,gB,qCAcLnuC,KAAKC,SACD,CACI4d,UAAU,M,qCAKlB7d,KAAKC,SACD,CACI4d,UAAU,M,oCA4BRkyB,EAAO9I,GACjB,IAAMoG,EAAc,CAChB,WAAcpG,EACd,KAAQ8I,EACR,SAAY/vC,KAAKI,MAAM2D,KAAKkkB,SAC5B,OAAUjoB,KAAKN,MAAM8Q,OACrB,UAAaxQ,KAAKI,MAAM8d,SAASzN,UACjC,KAAQ,iBACR,OAAU5Q,eAAeC,QAAQ,SAGrC,OACI,kBAAC,GAAD,CAAautC,YAAaA,EAAat9B,QAAS/P,KAAKN,MAAMsuC,OAAQj7B,SAAU/S,KAAK8Q,aAAc0E,KAAMxV,KAAKmT,a,+BAIzG,IAAD,OACGpP,EAAS/D,KAAKI,MAAd2D,KACF2E,EAAY5G,IAAOiC,EAAKoN,QAAQnM,WAAWC,OAAQ,cAAciJ,OAAO,SACxEvF,EAAU7G,IAAOiC,EAAKwuC,QAAQvtC,WAAWC,OAAQ,cAAciJ,OAAO,SACtEoD,EAAOvN,EAAKoH,SAASnG,WAAWC,OAEtC,OACI,yBAAK20B,aAAc,kBAAM,EAAKA,gBAAgBE,aAAc,kBAAM,EAAKA,gBAAgB5tB,UAAU,UAC7F,yBAAKA,UAAU,qBAAqBvL,MAAO,CAAE8U,iBAAkB,CAAuB,KAAtBzV,KAAKN,MAAM8Q,aAAuCpO,IAAtBpC,KAAKN,MAAM8Q,QAA8C,OAAtBxQ,KAAKN,MAAM8Q,OAAkB,MAAQ,aAChK,yBAAKtE,UAAU,gBACX,yBAAKA,UAAU,cACX,4BAAKxD,IAET,yBAAKwD,UAAU,cACX,4BAAKvD,IAET,yBAAKuD,UAAU,cACX,4BAAKoF,KAGb,yBAAKpF,UAAU,gBAAgBvL,MAAO,CAAEC,QAAS,CAAuB,KAAtBZ,KAAKN,MAAM8Q,aAAuCpO,IAAtBpC,KAAKN,MAAM8Q,QAA8C,OAAtBxQ,KAAKN,MAAM8Q,OAAkB,OAAS,UACnJ,4BAAKxQ,KAAKN,MAAM8Q,UAGxB,yBAAK7P,MAAOX,KAAKN,MAAMme,SAAW,CAC9Bjd,QAAkC,GAAzBZ,KAAKN,MAAMC,WAAkB,OAAS,OAAQkB,WAAY,SAAUoS,eAAgB,SAAUyB,SAAU,WAAYgqB,IAAK,EAAGwB,MAAO,EAAGn/B,OAAQ,CAAuB,KAAtBf,KAAKN,MAAM8Q,aAAuCpO,IAAtBpC,KAAKN,MAAM8Q,QAA8C,OAAtBxQ,KAAKN,MAAM8Q,OAAkB,OAAS,SAAU2vB,WAAY,QAASrtB,MAAO,OAAQmF,OAAQ,oCACnT,CAAErX,QAAS,SACX,yBAAMsS,QAAS,kBAAM,EAAKlC,aAAarQ,MAAO,CAAEmS,MAAO,OAAQ/R,OAAQ,OAAQme,aAAc,OAAQihB,WAAY,uBAAwBv/B,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,SAAUmT,OAAQ,YAC9M,yBAAK3S,IAAKytC,KAAYvtC,IAAI,iBAGjCvB,KAAKu0D,cAAcjjD,EAAM5I,Q,GA7GTlJ,cC6HlBg1D,G,2MA1HX90D,MAAQ,CACJ2J,SAAU,GACVkd,OAAQ,CAAE,SAAY,IACtBplB,MAAO,4B,EAoCXsV,MAAQ,SAAC06B,EAAQ5qB,GACb,IAAI6B,EAAW7B,EAAO6B,SAClBgpB,EAAY,GAkBhB,OAjBAhpB,EAAS3C,SAAQ,SAAA4C,GACb+oB,EAAU/oB,EAAQnoB,KAAO,MAE7BkxC,EAAU,gBAAQ,GAElBD,EAAO1rB,SAAQ,SAAAsiB,GACX,IAAIQ,EAAUR,EAAM58B,SACpBid,EAAS3C,SAAQ,SAAA4C,GACb,IAAMC,EAAK,IAAIC,OAAOF,EAAQG,UAAWH,EAAQI,aAC3CtoB,EAAQooC,EAAQpoC,MAAMmoB,GACd,OAAVnoB,GAA+B,KAAbA,EAAM,IACxBixC,EAAU/oB,EAAQnoB,KAAKoF,KAAKyiC,MAIpCqJ,EAAU,gBAAM9rC,KAAKyiC,MAElBqJ,G,mFArDPpxC,KAAKy0D,oBACLz0D,KAAK00D,4B,0CAEY,IAAD,OACRx2C,EAAale,KAAKI,MAAlB8d,SAGRzU,GAFYyU,EAASzX,MAAMzB,WAAWC,OAC1BiZ,EAAS8J,OAAOhjB,WAAWC,QAElCyE,MAAK,SAAA3F,GACF7B,QAAQC,IAAI,wBAA0BsL,KAAKC,UAAU3J,EAAKA,OAC1D,EAAK9D,SAAS,CACVoJ,SAAUtF,EAAKA,UAGtB+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,0CAA4CsL,KAAKC,UAAU3D,S,gDAGxD,IAAD,OACtBK,GAAwB,cACnBV,MAAK,SAAA3F,GACF,IAAIwiB,EAASxiB,EAAKA,KAAK6jB,MAAK,SAAAld,GAAI,MAAkC,cAA9BA,EAAKmd,gBAAgBvW,QACzDiV,EAAO6B,SAAP,CAAmB,CAAE,IAAO,eAAM,UAAa,OAA/C,oBAA0D7B,EAAO6B,WACjElmB,QAAQC,IAAI,8BAAgCsL,KAAKC,UAAU6Y,IAC3D,EAAKtmB,SAAS,CACVsmB,OAAQA,OAGfzc,OAAM,SAAAC,GACH7H,QAAQC,IAAI4H,Q,+BA2Bd,IAAD,EACiC/J,KAAKI,MAAnC8d,EADH,EACGA,SAAU8rB,EADb,EACaA,gBAEZiF,EADQ,CAAC,2BAAQ,2BAAQ,4BACDhjC,KAAI,SAAUpH,EAAStB,EAAOqG,GACxD,OACI,yBAAK1J,IAAKqD,EAAO5C,MAAO,CAAE8T,QAAS,UAAW7T,QAAS,OAAQC,WAAY,SAAUqX,eAAgB,aACjG,yBAAKvX,MAAO,CAAEqO,SAAU,SAAWnK,OAKzC4R,EAAQzW,KAAKyW,MACf+6B,EAAgB,QACMpvC,IAAtBpC,KAAKN,MAAM6mB,SACXirB,EAAgB/6B,EAAMzW,KAAKN,MAAM2J,SAAUrJ,KAAKN,MAAM6mB,SAG1D,IAAIkrB,EAAeD,EAAcxxC,KAAKN,MAAMyB,OACxCm9B,EAAa,QACIl8B,IAAjBqvC,IAOAnT,GALAA,EADmBmT,EACOnuC,QAAO,SAACuB,EAAStB,EAAOqG,GAC9C,IAAMvB,EAAOvG,IAAO+C,EAAQsM,QAAS,cAAc9L,UACnD,OAAO2kC,EAAgB,IAAM3hC,GAAQA,GAAQ2hC,EAAgB,OAGzCx7B,MAAK,SAACC,EAAGC,GAG7B,OAFgB5M,IAAO2M,EAAE0C,QAAS,cAAc9L,UAChCvD,IAAO4M,EAAEyC,QAAS,cAAc9L,UACjB,GAAK,MAI5C,IAAMsvD,EAAiBr2B,EAAWryB,KAAI,SAAUpH,EAAStB,EAAOqG,GAC5D,OACI,kBAAC,GAAD,CAAoB1J,IAAKqD,EAAOQ,KAAMc,EAASqZ,SAAUA,OAIjE,OACI,6BACI,yBAAKvd,MAAO,CAAE2U,gBAAiB,YAAa8N,oBAAqB,MAAOC,qBAAsB,MAAOtiB,OAAQ,OAAQ0T,QAAS,WAAY7T,QAAS,OAAQC,WAAY,WACnK,wBAAIF,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBAAtC,kBAEJ,yBAAKjO,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,gBAAiBD,OAAQ,OAAQkX,OAAQ,gCAAiC3C,gBAAiB,yBAA0By3B,aAAc,WAClLkC,GAEkB,IAAtB3Q,EAAW56B,QACR,yBAAK/C,MAAO,CAAEizB,UAAW,QAASD,UAAW,QAAS4V,UAAW,SAC5DorB,GAEc,IAAtBr2B,EAAW56B,QACR,yBAAK/C,MAAO,CAAEI,OAAQ,OAAQgc,YAAa,OAAQnc,QAAS,OAAQC,WAAY,WAAhF,uC,GAnHcrB,aCqJnBo1D,I,kNAtJXl1D,MAAQ,CACJme,UAAU,EACVmwB,QAAQ,EACRx9B,OAAQ,KACR7Q,WAAY,G,EAShBwuC,YAAc,WAAO,IAAD,EACW,EAAK/tC,MAAxB8d,EADQ,EACRA,SAAUna,EADF,EACEA,KAClB0F,EAAyByU,EAASzN,UAAW1M,EAAK4rC,SAAU,cAAcjmC,MAAK,SAAAa,GAC3ErI,QAAQC,IAAI,mBAAqBsL,KAAKC,UAAUnD,IAChD,EAAK2jC,UAAU3jC,EAAOxG,KAAK,GAAGyM,WAC/B1G,OAAM,SAAAC,GACL7H,QAAQC,IAAI,mBAAqBsL,KAAKC,UAAU3D,Q,EAaxDiH,UAAY,WACR,EAAK/Q,SAAS,CACV+tC,QAAQ,K,EAIhB76B,SAAW,SAAA86B,GACP,EAAKhuC,SAAS,CACV+tC,QAAQ,EACRx9B,OAAQy9B,K,EAIhBn9B,aAAe,SAAAC,GACX,EAAK9Q,SAAS,CACV+tC,QAAQ,K,EAIhBE,UAAY,SAAC3tC,GACT,EAAKN,SAAS,CACVuQ,YAAkBpO,IAAV7B,EAAsBA,EAAQ,M,mFA7C1C,IAAMR,EAAcF,eAAeC,QAAQ,QAC3CE,KAAKC,SAAS,CAAEN,WAAYI,IAC5BC,KAAKmuC,gB,qCAaQnuC,KAAKC,SAAS,CAAE4d,UAAU,M,qCAGvC7d,KAAKC,SACD,CACI4d,UAAU,M,oCA6BRkyB,EAAO9I,GAEjB,IAAMoG,EAAc,CAChB,WAAcpG,EACd,KAAQ8I,EACR,SAAY/vC,KAAKI,MAAM2D,KAAK4rC,SAC5B,OAAU3vC,KAAKN,MAAM8Q,OACrB,UAAaxQ,KAAKI,MAAM8d,SAASzN,UACjC,KAAQ,aACR,OAAU5Q,eAAeC,QAAQ,SAGrC,OACI,kBAAC,GAAD,CAAautC,YAAaA,EAAat9B,QAAS/P,KAAKN,MAAMsuC,OAAQj7B,SAAU/S,KAAK8Q,aAAc0E,KAAMxV,KAAKmT,a,+BAIzG,IAAD,OACGpP,EAAS/D,KAAKI,MAAd2D,KAEF8wD,EADU,CAAC,OAAQ,KAAM,MAAO,KAAM,IAAK,KAAM,IAAK,MAC1B5oD,KAAI,SAAUtC,EAAMpG,GAClD,OACI,iCAAarD,IAAKqD,EAAO5C,MAAO,CAAEsX,OAAQ,gCAAiCC,eAAgB,aACvF,4BAAKvO,OAmBjB,IAAMmrD,EAfN,SAAuB/wD,EAAMgxD,GACzB,YAAgB3yD,IAAZ2yD,GAAqC,OAAZA,EAClB,GAEQ,CAAChxD,EAAKmsC,SAAUnsC,EAAKgxD,QAAQC,GAAIjxD,EAAKgxD,QAAQE,IAAKlxD,EAAKgxD,QAAQ1K,GAAItmD,EAAKgxD,QAAQvqC,EAAGzmB,EAAKgxD,QAAQG,GAAInxD,EAAKgxD,QAAQrqC,EAAG3mB,EAAKgxD,QAAQI,IAC7GlpD,KAAI,SAAUtC,EAAMpG,GACxD,OACI,iCAAarD,IAAKqD,EAAO5C,MAAO,CAAEsX,OAAQ,gCAAiCC,eAAgB,aACvF,4BAAKvO,OAOQyrD,CAAcrxD,EAAMA,EAAKgxD,SAChDM,EAAar1D,KAAKN,MAAM8Q,OAExB9H,EAAY5G,IAAOiC,EAAKusC,QAAQtrC,WAAWC,OAAQ,iCAAiCiJ,OAAO,kBAC3FvF,EAAU7G,IAAOiC,EAAKwsC,QAAQvrC,WAAWC,OAAQ,iCAAiCiJ,OAAO,kBACzFoD,EAAOvN,EAAKgH,QAAQ/F,WAAWC,OAErC,OACI,yBAAK20B,aAAc,kBAAM,EAAKA,gBAAgBE,aAAc,kBAAM,EAAKA,gBAAgB5tB,UAAU,yBAC7F,yBAAKvL,MAAO,CAAEI,OAAQ,CAAuB,KAAtBf,KAAKN,MAAM8Q,aAAuCpO,IAAtBpC,KAAKN,MAAM8Q,QAA8C,OAAtBxQ,KAAKN,MAAM8Q,OAAkB,QAAU,WACzH,yBAAK7P,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,sBAAuBD,OAAQ,UAC/E,yBAAKJ,MAAO,CAAE8T,QAAS,UAAW7T,QAAS,OAAQC,WAAY,SAAUoX,OAAQ,gCAAiCC,eAAgB,aAC9H,4BAAKxP,IAET,yBAAK/H,MAAO,CAAE8T,QAAS,UAAW7T,QAAS,OAAQC,WAAY,SAAUoX,OAAQ,gCAAiCC,eAAgB,aAC9H,4BAAKvP,IAET,yBAAKhI,MAAO,CAAE8T,QAAS,UAAW7T,QAAS,OAAQC,WAAY,SAAUoX,OAAQ,gCAAiCC,eAAgB,aAC9H,4BAZL,uBAcC,yBAAKvX,MAAO,CAAEC,QAAS,OAAQ6U,iBAAkB,cAC7C,yBAAK9U,MAAO,CAAE8T,QAAS,UAAW7T,QAAS,OAAQC,WAAY,SAAUoX,OAAQ,gCAAiCC,eAAgB,aAC9H,4BAAK5G,IAET,yBAAK3Q,MAAO,CAAEC,QAAS,OAAQ6U,iBAAkB,YAC7C,yBAAK9U,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,kBAC/C6zD,GAEL,yBAAKl0D,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,kBAC/C8zD,MAKjB,yBAAKn0D,MAAO,CAAEoO,WAAY,MAAOH,MAAO,eAAgBhO,QAAS,CAAuB,KAAtBZ,KAAKN,MAAM8Q,aAAuCpO,IAAtBpC,KAAKN,MAAM8Q,QAA8C,OAAtBxQ,KAAKN,MAAM8Q,OAAkB,OAAS,QAASyH,OAAQ,gCAAiCC,eAAgB,WAAYzD,QAAS,UAAW5T,WAAY,SAAUE,OAAQ,OAAQ+R,MAAO,SAClT,4BAAKuiD,KAGb,yBAAK10D,MAAOX,KAAKN,MAAMme,SAAW,CAC9Bjd,QAAkC,GAAzBZ,KAAKN,MAAMC,WAAkB,OAAS,OAAQkB,WAAY,SAAUoS,eAAgB,SAAUyB,SAAU,WAAYgqB,IAAK,EAAGwB,MAAO,EAAGn/B,OAAQ,CAAuB,KAAtBf,KAAKN,MAAM8Q,aAAuCpO,IAAtBpC,KAAKN,MAAM8Q,QAA8C,OAAtBxQ,KAAKN,MAAM8Q,OAAkB,QAAU,SAAU2vB,WAAY,QAASrtB,MAAO,OAAQmF,OAAQ,oCACpT,CAAErX,QAAS,SACX,yBAAMsS,QAAS,kBAAM,EAAKlC,aAAarQ,MAAO,CAAEmS,MAAO,OAAQ/R,OAAQ,OAAQme,aAAc,OAAQihB,WAAY,uBAAwBv/B,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,SAAUmT,OAAQ,YAC9M,yBAAK3S,IAAKytC,KAAYvtC,IAAI,iBAGjCvB,KAAKu0D,cAAcjjD,EAAM5I,Q,GAjJblJ,cCqTd81D,ICtTe91D,Y,kNDE1BE,MAAQ,CACJqQ,SAAS,EACT+I,OAAQ,KACRy8C,QAAS,M,EAEbvkD,UAAY,WACR,EAAK/Q,SAAS,CACV8P,SAAS,K,EAIjBoD,SAAW,SAAApC,GACP,EAAK9Q,SAAS,CACV8P,SAAS,K,EAIjBe,aAAe,SAAAC,GACX,EAAK9Q,SAAS,CACV8P,SAAS,EACT+I,OAAQ,KACRy8C,QAAS,Q,oFAGK,IACV90C,EAAYzgB,KAAKI,MAAjBqgB,QACRE,KAAU,IAAMF,GAASG,SACzB5gB,KAAK6gB,c,0CAIL7gB,KAAK6gB,c,sFAMQ,IAAD,EACiB7gB,KAAKI,MAA1BmtB,EADI,EACJA,QAASC,EADL,EACKA,QACjB,OAAID,EACIC,EACO,IAGA,IAIPA,EACO,IAGA,K,0CAKE,IAAD,EACaxtB,KAAKI,MAA1BmtB,EADQ,EACRA,QAASC,EADD,EACCA,QACjB,OAAID,EACIC,EACO,GAGA,GAKA,I,kCAQN,IAAD,aAK+CxtB,KAAKI,MAApDqgB,EALA,EAKAA,QAASM,EALT,EAKSA,OAAQrY,EALjB,EAKiBA,UAAW8sD,EAL5B,EAK4BA,eAC9B1iD,GAASkQ,OAAOC,OAAOC,WAAa,IAAM,EAAI,GAE9CuyC,EAPN,SAAyB/sD,EAAWC,GAEhC,OADkBhF,UAAUgF,EAAUD,GAAX,OAMbgtD,CAAgB5zD,IAAO4G,EAAW,YAAYrD,UAAWvD,MAASuD,WAEpF,GAA8B,IAA1BmwD,EAAe9xD,OACf,OAAO,KAEX,IAAMiyD,EAAa7iD,EAAQ2iD,EAAa,EACpC9zC,EAAIhB,OACHc,OAAO,CAAC,EAAG+zC,EAAe9xD,SAC1Bge,MAAM,CAAC,EAAG5O,IAIXmN,EAAIU,OACHc,OAAO,CAdW,EAAX,MAePC,MAAM,CAhBsD,IAgB7C,IAIhBE,EAAQjB,KAAYV,GACnB4B,MAAM,IACNG,YAAW,SAAAuM,GAAC,OAAKA,KACjBzM,SAAS,EAAG,GACZC,YAAY,IAEb6zC,EAAcj1C,KAAcgB,GAC3BE,MAAM2zC,EAAe9xD,QACrBse,YAAW,SAAAuM,GAAC,OAAKA,KACjBzM,SAAS,EAAG,GACZC,YAAYhhB,KACZihB,YAAW,SAAUC,GAClB,OAAIA,EAAI,KAAO,GACPA,EAAI,EACG,IAAMA,EAIT,QAIhBG,EAAMzB,KAAU,IAAMI,GACrBsB,OAAO,OACPC,KAAK,KAAM7B,GACX6B,KAAK,UAAW,CAAC,EAAG,EAAGxP,EAAQ,GAAI/R,MACnCshB,OAAO,KACPC,KAAK,YAAa,oBAIvBF,EAAIC,OAAO,KACNE,KAAKX,GACLU,KAAK,QAAS,QAEnBF,EAAIC,OAAO,KACNE,KAAKqzC,GACLtzC,KAAK,QAAS,QAGnB,IAAK,IAAI/e,EAAQ,EAAGA,EAAQ,GAAIA,IAE5B6e,EAAIC,OAAO,QACNC,KAAK,KAAM,GACXA,KAAK,KAAMrC,EAAU,GAAR1c,IACb+e,KAAK,KAAMxP,GACXwP,KAAK,KAAMrC,EAAU,GAAR1c,IACb5C,MAAM,SAAU,0BAChBA,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,KAGnC,IAAK,IAAI4C,EAAQ,EAAGA,EAAQiyD,EAAe9xD,OAAQH,IAE3CA,EAAQ,KAAO,GAAKA,EAAQ,GAC5B6e,EAAIC,OAAO,QACNC,KAAK,KAAMX,EAAE,GAAMpe,IACnB+e,KAAK,KAAMrC,EA5ED,IA6EVqC,KAAK,KAAMX,EAAE,GAAMpe,IACnB+e,KAAK,KAAMrC,EA9EZ,MA+ECtf,MAAM,SAAU,0BAChBA,MAAM,eAAgB,GACtBA,MAAM,mBAAoB,KAwBvC,IAAMmY,EAAS9Y,KAAKN,MAAMoZ,OACX,OAAXA,QAA8B1W,IAAX0W,GAAmC,KAAXA,GAC3C6H,KAAa,aAAaC,SAE9B,IApHQ,eAoHCrd,GACL,IAAMgyD,EAAUC,EAAejyD,GACzBsyD,EAAUtyD,EAAQ,GACpBuyD,EAAU1zC,EAAIC,OAAO,KAAKikC,GAAG,SAAS,WACtB,OAAZiP,GAIA,EAAKt1D,SAAS,CACV8P,SAAS,EACT+I,OAAQvV,EACRgyD,QAASA,OAKjBhyD,IAAUuV,EACVg9C,EAAQzzC,OAAO,QACVC,KAAK,KAAM,QACXA,KAAK,QAASqzC,EAAY,GAC1BrzC,KAAK,SAAUrC,EAAE,GAAKA,EAAEs1C,EAAQxwB,QAAUwwB,EAAQrwB,GAAKqwB,EAAQ5xB,QAC/DrhB,KAAK,IAAKX,EAAEk0C,GAAYF,EAAY,EAAK,GACzCrzC,KAAK,IAAKrC,EAAEs1C,EAAQxwB,QAAUwwB,EAAQrwB,GAAKqwB,EAAQ5xB,QACnDhjC,MAAM,OAAQ,iBACdA,MAAM,SAAU,WAChBA,MAAM,eAAgB,GACtBA,MAAM,SAAU,WAGrBm1D,EAAQzzC,OAAO,QACVC,KAAK,KAAM,QACXA,KAAK,QAASqzC,EAAY,GAC1BrzC,KAAK,SAAUrC,EAAE,GAAKA,EAAEs1C,EAAQxwB,QAAUwwB,EAAQrwB,GAAKqwB,EAAQ5xB,QAC/DrhB,KAAK,IAAKX,EAAEk0C,GAAYF,EAAY,EAAK,GACzCrzC,KAAK,IAAKrC,EAAEs1C,EAAQxwB,QAAUwwB,EAAQrwB,GAAKqwB,EAAQ5xB,QACnDhjC,MAAM,OAAQ,iBACdA,MAAM,SAAU,iBAChBA,MAAM,eAAgB,GACtBA,MAAM,SAAU,WAChBA,MAAM,UAAW,GAE1Bm1D,EAAQzzC,OAAO,QACVC,KAAK,KAAMX,EAAEk0C,IACbvzC,KAAK,KAAMrC,EAAEs1C,EAAQxwB,QAAUwwB,EAAQrwB,GAAKqwB,EAAQ5xB,QACpDrhB,KAAK,KAAMX,EAAEk0C,IACbvzC,KAAK,KAAMrC,EAAEs1C,EAAQrwB,GAAKqwB,EAAQ5xB,QAClChjC,MAAM,SAAU,WAChBA,MAAM,eAAgBg1D,GAE3BG,EAAQzzC,OAAO,QACVC,KAAK,KAAMX,EAAEk0C,IACbvzC,KAAK,KAAMrC,EAAEs1C,EAAQrwB,GAAKqwB,EAAQ5xB,QAClCrhB,KAAK,KAAMX,EAAEk0C,IACbvzC,KAAK,KAAMrC,EAAEs1C,EAAQ5xB,QACrBhjC,MAAM,SAAU,WAChBA,MAAM,eAAgBg1D,GAG3BG,EAAQzzC,OAAO,QACVC,KAAK,KAAMX,EAAEk0C,IACbvzC,KAAK,KAAMrC,EAAEs1C,EAAQ5xB,QACrBrhB,KAAK,KAAMX,EAAEk0C,IACbvzC,KAAK,KAAMrC,EAAE,IACbtf,MAAM,SAAU,WAEhBA,MAAM,eAAgBg1D,IAjEtBpyD,EAAQ,EAAGA,EAAQiyD,EAAe9xD,OAAQH,IAAS,CAAC,IAGrDuyD,EAHoD,EAAnDvyD,M,oCAsET,SAASwyD,EAASx1D,GACd,OAAc,OAAVA,QAA4B6B,IAAV7B,GAAiC,KAAVA,EAClC,EAEJA,EAEX,IAAMwD,EAAO/D,KAAKN,MAAM61D,QACxB,GAAa,OAATxxD,QAA0B3B,IAAT2B,EACjB,OAAO,KAQX,IAAM+U,EAAS9Y,KAAKN,MAAMoZ,OAEpBk9C,EADYh2D,KAAKI,MAAMo1D,eACP18C,GAAQm9C,YAC9B,OACI,kBAAC,KAAD,CACIlzD,MAAM,cACNgN,QAAS/P,KAAKN,MAAMqQ,QACpByF,KAAMxV,KAAKmT,SACXJ,SAAU/S,KAAK8Q,aACfkC,OAAQ,MAER,mCAAS+iD,EAAShyD,EAAKmhC,KACvB,wCAAc6wB,EAAShyD,EAAKghC,UAC5B,sCAAYgxB,EAAShyD,EAAK4/B,QAC1B,mDAAUqyB,EAAV,W,+BAIF,IACEj1C,EAAW/gB,KAAKI,MAAhB2gB,OACFm1C,EAAQl2D,KAAKm2D,cACnB,OACI,yBAAKxgD,GAAIoL,GACJm1C,O,GA/Sa12D,cEkZf42D,I,kNAxYX12D,MAAQ,CACJqQ,SAAS,EACT6S,oBAAqB,EACrBtZ,SAAU,GACVw4B,IAAK,GACLvuB,MAAO,GACP8gC,WAAW,EACXrK,gBAAiBloC,IAAOA,MAASoM,OAAO,c,EAuD5C2kC,aAAe,SAACpT,GACZ,EAAKx/B,SACD,CACI2iB,oBAAqB6c,K,EAKjCjqB,KAAO,SAACjV,K,EAERyQ,UAAY,WACR,EAAK/Q,SAAS,CACV8P,SAAS,K,EAIjBoD,SAAW,SAAApC,GACP,EAAK9Q,SAAS,CACV8P,SAAS,K,EAIjBe,aAAe,SAAAC,GACX,EAAK9Q,SAAS,CACV8P,SAAS,K,EAkNjBw5C,sBAAwB,SAACxnD,EAAMy1B,GAC3B,EAAKv3B,SAAS,CAAE+pC,gBAAiBjoC,K,EAGrCyZ,SAAW,SAACzK,GAAO,IAET4uB,EADe,EAAKv/B,MAAlB8d,SACcQ,aAAakhB,SAC7BC,EAAW/9B,IAAOA,IAAO69B,GAAMzxB,OAAO,aAAa7I,UAEnD4V,EAAa,EAAKvb,MAAMsqC,gBAAgB3kC,UAG9C,OAAQ0L,EAAE6F,OAAOrW,OACb,IAAK,IACD,IAAMkb,EAAQR,EAJV,MAMJ4kB,GADcpkB,EAAS,QACF,EAAK8tC,sBAAsBznD,IAAO2Z,IACvD,MACJ,IAAK,IACD,IAAMC,EAAQ5Z,IAAOA,MAASoM,OAAO,aACrC,EAAKq7C,sBAAsB7tC,GAC3B,MACJ,IAAK,IACD,IAAMC,EAAQV,EAbV,MAeJU,GADc7Z,IAAOA,MAASoM,OAAO,aAAa7I,WAChC,EAAKkkD,sBAAsBznD,IAAO6Z,M,mFAvT5D3b,KAAKkR,a,iCAEG,IAAD,OACCgN,EAAale,KAAKI,MAAlB8d,SACFla,EAAM,IAAIC,IACViC,EAAKpE,IAAOoc,EAASxN,UAAU1L,WAAY,YAAYkJ,OAAO,gBAC9D/H,EAAKrE,MAASoM,OAAO,gBAC3BzE,EAAmByU,EAAS8J,OAAQ9hB,EAAIC,GACnCuD,MAAK,SAAA3F,GACF,IAAMO,EAAYN,EAAIG,OAAOJ,EAAKA,MAAMK,OAAOG,SAASC,QACxDtC,QAAQC,IAAImC,GACZ,EAAKrE,SAAS,CACV6hC,IAAKx9B,OAGZwF,OAAM,SAAAC,GACH7H,QAAQC,IAAI,uBAAyBsL,KAAKC,UAAU3D,OAG5DN,GAAuCyU,EAASzX,MAAOyX,EAAS8J,OAAQ,OACnEte,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CACVo0C,WAAW,EACX/qC,SAAUvF,EAAKA,UAGtB+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,0CAA4CsL,KAAKC,UAAU3D,IACvE,EAAK9J,SAAS,CAAEo0C,WAAW,S,sCAGtB,IACLn2B,EAAale,KAAKI,MAAlB8d,SACF4C,EAAW,CACb,UAAalhB,OAAOse,EAAS+C,WAC7B,SAAYrhB,OAAOse,EAASiD,UAC5B,SAAYjD,EAASQ,aAAakhB,UAEhC9c,EAAa5E,EAASwiB,OACtBnvB,EAAMjC,GAAO4O,EAASQ,aAAaxM,MACnC6Q,EAAc/iB,KAAKN,MAAMkjB,oBACzB9P,GAASkQ,OAAOC,OAAOC,WAAa,KAAO,EACjD,OAAQH,GACJ,KAAK,EACD,OAAO,kBAAC,GAAD,CAAejQ,MAAOA,EAAO/R,OAHiB,IAGD+f,SAAUA,EAAUN,WAAYsC,EAAY/B,OAAQ,WAAYN,QAAS,eAAgBnR,OAAQiC,IACzJ,KAAK,EACD,OAAO,kBAAC,GAAD,CAAgBuB,MAAOA,EAAO/R,OALgB,IAKA+f,SAAUA,EAAUN,WAAYsC,EAAY/B,OAAQ,iBAAkBN,QAAS,qBAAsBnR,OAAQiC,IACtK,QACI,OAAO,Q,6CAgCf,OACI,yBAAK5Q,MAAO,CAAEC,QAAS,OAAQC,WAAY,WACvC,yBAAKF,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAe2N,YAAa,SAC5E,yBAAKhO,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUoS,eAAgB,WACjE,yBAAKtS,MAAO,CAAEI,OAAQ,OAAQ+R,MAAO,OAAQqtB,WAAY,UAAWxxB,YAAa,SACjF,mCAEJ,yBAAKhO,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUoS,eAAgB,WACjE,yBAAKtS,MAAO,CAAEI,OAAQ,OAAQ+R,MAAO,OAAQqtB,WAAY,UAAWxxB,YAAa,SACjF,qCAEJ,yBAAKhO,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUoS,eAAgB,WACjE,yBAAKtS,MAAO,CAAEI,OAAQ,OAAQ+R,MAAO,OAAQqtB,WAAY,UAAWxxB,YAAa,SACjF,0C,6CAOGwU,GA0BnB,OAAIA,IAAqBnjB,KAAKN,MAAMkjB,oBAzBP,CACzBhiB,QAAS,OACTqS,eAAgB,SAChBpS,WAAY,SACZE,OAAQ,OACR0T,QAAS,UACTyK,aAAc,MACd5J,gBAAiB,YACjB1G,MAAO,QACPI,SAAU,OACV0K,YAAa,MACbD,YAAa,QACbE,YAAa,YACb3F,OAAQ,WAEmB,CAC3BpT,QAAS,OAAQqS,eAAgB,SACjCpS,WAAY,SAAUE,OAAQ,OAC9B0T,QAAS,UACTyK,aAAc,MAAO5J,gBAAiB,QACtC1G,MAAO,YAAaI,SAAU,OAC9B0K,YAAa,MAAOD,YAAa,QACjCE,YAAa,YACb3F,OAAQ,a,8CAOS,IAAD,OACDi+B,KAAXD,OACR,OACI,yBAAK9lC,UAAU,eACX,yBAAKvL,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWC,cAAe,QAC1E,yBAAKN,MAAOX,KAAKsjB,uBAAuB,GAAIvL,UAAW,kBAAM,EAAK86B,aAAa,KAA/E,kBACA,yBAAKlyC,MAAOX,KAAKsjB,uBAAuB,GAAIvL,UAAW,kBAAM,EAAK86B,aAAa,KAA/E,sB,yCAqBG,IAUP30B,EAAale,KAAKI,MAAlB8d,SACF4jB,EAAM9hC,KAAKN,MAAMoiC,IACvB,GAAmB,IAAfA,EAAIp+B,OACJ,OAAO,KAEX,IAAMkiC,E1DpLP,SAAkB9D,GAErB,OAAI3+B,MAAMC,QAAQ0+B,GACCA,EAAIx+B,QAAO,SAAUqG,EAAMpG,EAAOqG,GAC7C,MAAuC,iBAAhCD,EAAKe,KAAK1F,WAAWC,UAI7B,G0D4KUsiC,CAAsBzF,GAC7BoD,E1D1KP,SAAgBpD,GAEnB,OAAI3+B,MAAMC,QAAQ0+B,GACCA,EAAIx+B,QAAO,SAAUqG,EAAMpG,EAAOqG,GAC7C,MAAuC,iBAAhCD,EAAKe,KAAK1F,WAAWC,QAAmD,iBAAhC0E,EAAKe,KAAK1F,WAAWC,UAIrE,G0DkKQsiC,CAAoBzF,GAEzBu0B,EAKN,SAA0BC,GACtB,GAAInzD,MAAMC,QAAQkzD,GAAY,CAI1B,OAHyBA,EAAUhzD,QAAO,SAAUqG,EAAMpG,EAAOqG,GAC7D,YAAyBxH,IAAlBuH,EAAKw7B,UAAoDpY,MAA1BntB,OAAO+J,EAAKw7B,aAI1D,MAAO,GAZcoxB,C1Db1B,SAAmBz0B,GAEtB,QAAI3+B,MAAMC,QAAQ0+B,IACCA,EAAIx+B,QAAO,SAAUqG,EAAMpG,EAAOqG,GAC7C,MAAuC,iBAAhCD,EAAKe,KAAK1F,WAAWC,QACQ,iBAAhC0E,EAAKe,KAAK1F,WAAWC,QACW,iBAAhC0E,EAAKe,KAAK1F,WAAWC,QACW,iBAAhC0E,EAAKe,KAAK1F,WAAWC,QACW,iBAAhC0E,EAAKe,KAAK1F,WAAWC,QACW,iBAAhC0E,EAAKe,KAAK1F,WAAWC,QACW,iBAAhC0E,EAAKe,KAAK1F,WAAWC,QACW,iBAAhC0E,EAAKe,KAAK1F,WAAWC,U0DCfsiC,CAAuBzF,IAGrC5/B,QAAQC,IAAIyjC,GAiBZ,SAAS4wB,EAAOrxD,GAEZ,IADA,IAAIsxD,EAAW,EACNlzD,EAAQ,EAAGA,EAAQ4B,EAAKzB,OAAQH,IAAS,CAC9C,IAAMsB,EAAUM,EAAK5B,GACA,iBAAjBsB,EAAQ6F,OACa,uBAAjB7F,EAAQggC,OACR4xB,GAAiD,GAA3B72D,OAAOiF,EAAQmgC,WAEpB,iBAAjBngC,EAAQggC,OACR4xB,GAAiD,GAA3B72D,OAAOiF,EAAQmgC,iBAIzB5iC,IAAhByC,EAAQw/B,MACuC,OAA3Cx/B,EAAQw/B,IAAIr/B,WAAW7E,MAAM,YAC7Bs2D,GAAiD,IAA3B72D,OAAOiF,EAAQsgC,WAEM,OAA3CtgC,EAAQw/B,IAAIr/B,WAAW7E,MAAM,YAC7Bs2D,GAAiD,IAA3B72D,OAAOiF,EAAQsgC,UAAmB,KAET,OAA/CtgC,EAAQw/B,IAAIr/B,WAAW7E,MAAM,gBAC7Bs2D,GAAiD,IAA3B72D,OAAOiF,EAAQsgC,WAEG,OAAxCtgC,EAAQw/B,IAAIr/B,WAAW7E,MAAM,SAC7Bs2D,GAAiD,IAA3B72D,OAAOiF,EAAQsgC,WAEG,OAAxCtgC,EAAQw/B,IAAIr/B,WAAW7E,MAAM,SAC7Bs2D,GAAiD,IAA3B72D,OAAOiF,EAAQsgC,UAAmB,KAEhB,OAAxCtgC,EAAQw/B,IAAIr/B,WAAW7E,MAAM,SAC7Bs2D,GAAiD,IAA3B72D,OAAOiF,EAAQsgC,UAAmB,GAEd,OAA1CtgC,EAAQw/B,IAAIr/B,WAAW7E,MAAM,WAC7Bs2D,GAAiD,IAA3B72D,OAAOiF,EAAQsgC,YAKjD,OAAOxhC,SAAS8yD,GAMpB,IAHA,IACM1zB,EA9EN,SAAyBr6B,GAGrB,IAFA,IAAMguD,EAAa/yD,UAAU7B,MAASuD,UAAYvD,IAAO4G,EAAW,YAAYrD,WAApD,OACxBsxD,EAAa,GACRpzD,EAAQ,EAAGA,EAAQmzD,EAAYnzD,IAAS,CAC7C,IAAM6sB,EAAOtuB,IAAOA,IAAO4G,EAAW,YAAYrD,UAAqB,GAAR9B,EAAa,GAAK,GAAK,KAAO2K,OAAO,cACpGyoD,EAAWrxD,KAAK8qB,GAEpB,OAAOumC,EAuEOC,CADA14C,EAASxN,UAAU1L,YAEjC6xD,EAAqB,GAhFV,WAiFNtzD,GACL,IAAMsB,EAAUk+B,EAAUx/B,GACpBuzD,EAAgBlxB,EAAKtiC,QAAO,SAAU/C,EAAOgD,EAAOqG,GACtD,OAAO9H,IAAO+C,EAAS,cAAcQ,YAAcvD,IAAOvB,EAAMiD,QAAQwB,WAAWC,OAAQ,cAAcI,aAEvGw+C,EAAW3e,EAAG5hC,QAAO,SAAU/C,EAAOgD,EAAOqG,GAC/C,OAAO9H,IAAO+C,EAAS,cAAcQ,YAAcvD,IAAOvB,EAAMiD,QAAQwB,WAAWC,OAAQ,cAAcI,aAEvG0xD,EAAcV,EAAiB/yD,QAAO,SAAU/C,EAAOgD,EAAOqG,GAChE,OAAO9H,IAAO+C,EAAS,cAAcQ,YAAcvD,IAAOvB,EAAMiD,QAAQwB,WAAWC,OAAQ,cAAcI,aAGvG2xD,EAsBV,SAAkBptD,GAEd,IADA,IAAIy5B,EAAM,EACD1mB,EAAI,EAAGA,EAAI/S,EAAIlG,OAAQiZ,IAC5B0mB,GAAOzjC,OAAOgK,EAAI+S,GAAGqoB,UAEzB,OAAOrhC,SAAS0/B,GA3BG4zB,CAASH,GACtBI,EAAQC,EAAQtT,GAChBuT,EAAWD,EAAQJ,GAEnBd,EAAcO,EAAOM,GAAiBN,EAAO3S,GAAY2S,EAAOO,GACtEF,EAAmBvxD,KAAK,CACpBy/B,QAASiyB,EACT9xB,GAAIgyB,EACJvzB,MAAOyzB,EACPhnC,KAAMvrB,EACNoxD,iBAtBC1yD,EAAQ,EAAGA,EAAQw/B,EAAUr/B,OAAQH,IAAU,EAA/CA,GA0BT,SAAS4zD,EAAQvtD,GAEb,IADA,IAAIy5B,EAAM,EACD1mB,EAAI,EAAGA,EAAI/S,EAAIlG,OAAQiZ,IAC5B0mB,GAAOzjC,OAAOgK,EAAI+S,GAAGwoB,UAEzB,OAAOxhC,SAAS0/B,GAWpB,OACI,kBAAC,GAAD,CAAiBozB,SAzFN,EAyF0BjB,eAAgBqB,EAAoBnuD,UAAWwV,EAASxN,UAAWqQ,OAAQ,WAAYN,QAAS,YAAa42C,WAAW,iB,+BAqCjK,IAAMC,EAAct3D,KAAKwjB,gBACnB+zC,EAAqBv3D,KAAKw3D,wBAC1BC,EAAoBz3D,KAAK03D,uBACzBC,EAAU33D,KAAKN,MAAM4J,SACrBsuD,EAAW53D,KAAKN,MAAM2J,SACtB6rC,EAAsBl1C,KAAKN,MAAMsqC,gBAAgB3kC,UAC/C6Y,EAAale,KAAKI,MAAlB8d,SAER,GAAuB,IAAnBy5C,EAAQj0D,QAA6B,IAAbk0D,EACxB,OAAO,KAGX,IAAMC,EAAc73D,KAAK83D,mBACnB9tB,EAAkB,CAACkL,EAAuB,OAA0BA,GAE1E,OACI,yBAAKhpC,UAAU,iBACX,yBAAKA,UAAU,iBACX,6BACI,yBAAKA,UAAU,6BACX,8DACClM,KAAKN,MAAM20C,UAAa,kBAAC,KAAD,CAAM5wC,KAAK,YAAiB8zD,GAEzD,yBAAKrrD,UAAU,+BAA+BorD,IAElD,6BACI,yBAAKprD,UAAU,6BACX,kDACA,yBAAKA,UAAU,eACVurD,IAGT,yBAAKvrD,UAAU,+BACVlM,KAAKN,MAAM20C,UAAa,kBAAC,KAAD,CAAM5wC,KAAK,YAAiBo0D,KAIjE,yBAAKl3D,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,MAAO4R,OAAQ,qBAC7F,kBAAC,KAAD,CACIgD,qBAAsB,SAAAC,GAAW,OAAIA,EAAYC,YACjDxV,MAAOP,KAAKN,MAAMsqC,gBAClB97B,OAAQ,aACRkP,YAAY,EACZwa,OAAQ,QACRhlB,SAAU5S,KAAKupD,wBAEnB,yBAAK5oD,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,QAC9E,kBAAC,KAAD,CAAQV,MAAM,IAAI8c,MAAM,SAASC,KAAK,cAAcpK,QAASlT,KAAKwb,WAClE,kBAAC,KAAD,CAAQjb,MAAM,IAAI8c,MAAM,SAASC,KAAK,eAAepK,QAASlT,KAAKwb,WACnE,kBAAC,KAAD,CAAQjb,MAAM,IAAI8c,MAAM,SAASC,KAAK,eAAepK,QAASlT,KAAKwb,aAG3E,yBAAK7a,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWC,cAAe,OAAQujB,aAAc,SAE5FxkB,KAAKN,MAAM20C,UAAa,kBAAC,KAAD,CAAM5wC,KAAK,YAAiB,kBAACs0D,GAAD,CAAqB/tB,gBAAiBA,EAAiB9rB,SAAUA,U,GAhYnH1e,cCoJXw4D,I,8LAtJC,OAAO,K,2CAQf,MAAO,U,sCAGP,SAAS7tB,EAAW8tB,EAAU/xD,GAE1B,IADA,IAAIgyD,EAAS,GADiB,WAErB30D,GACL,IAAMo3B,EAAQz0B,EAAc,EAAR3C,EAAY,GAAK,GAAK,IACpCq3B,EAAM10B,EAAoB,GAAb3C,EAAQ,GAAS,GAAK,GAAK,IACxC40D,EAAaF,EAAS30D,QAAO,SAAU/C,EAAOgD,EAAOqG,GACvD,OAAOrJ,EAAM6vB,KAAOuK,GAASp6B,EAAM6vB,KAAOwK,KAE1CyI,EAAM,EACV,IAAK,IAAI9/B,EAAQ,EAAGA,EAAQ40D,EAAWz0D,OAAQH,IAAS,CACpD,IAAMsB,EAAUszD,EAAW50D,GAC3B8/B,GAAYzjC,OAAOiF,EAAQge,MAE/Bq1C,EAAO5yD,KAAK+9B,IAXP9/B,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CAAC,IAMlC8/B,EANiC,EAAhC9/B,GAaT,OAAO20D,EAEX,SAASE,EAAWjzD,GAChB,SAASyxC,EAAeC,GACpB,OAAkB,OAAdA,EACO,GAED,GAAN,OAAUA,EAAU/jC,MAApB,kBAAmC+jC,EAAUjoC,OA4ErD,OAbczJ,EAAK8G,KAAI,SAAUtC,EAAMpG,GACnC,IA7DiBhD,EA6DX83D,EAvDV,SAAkBzvD,EAAUrF,GACxB,IAAMq0C,EAAY,CACd9kC,MAAO,GACPlE,MAAO,IAEX,OAAiB,IAAbhG,EACc,IAAVrF,GAAgBA,EAAQ,KAAQ,GAChCq0C,EAAU9kC,MAAQ,MAClB8kC,EAAUhpC,MAAQ,kBACXgpC,GACAr0C,EAAQ,IAAM,GACrBq0C,EAAU9kC,MAAQ,MAClB8kC,EAAUhpC,MAAQ,kBACXgpC,IAGPA,EAAU9kC,MAAQ,MAClB8kC,EAAUhpC,MAAQ,UACXgpC,GAGE,IAAbhvC,EACc,IAAVrF,GAAgBA,EAAQ,IAAO,GAC/Bq0C,EAAU9kC,MAAQ,MAClB8kC,EAAUhpC,MAAQ,kBACXgpC,GACAr0C,EAAQ,IAAM,GACrBq0C,EAAU9kC,MAAQ,MAClB8kC,EAAUhpC,MAAQ,kBACXgpC,IAGPA,EAAU9kC,MAAQ,MAClB8kC,EAAUhpC,MAAQ,UACXgpC,GAGE,IAAbhvC,GAEIgvC,EAAU9kC,MAAQ,MAClB8kC,EAAUhpC,MAAQ,kBACXgpC,GAOE,IAAbhvC,GACAgvC,EAAU9kC,MAAQ,MAClB8kC,EAAUhpC,MAAQ,kBACXgpC,QAHX,EAOkBD,CAAS,EAAGp0C,GAC9B,OAAa,IAAToG,EAEI,yBAAKhJ,MAAO,CAAEI,OAAQ,OAAQH,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,SAAUoX,OAAQ,gCAAiCC,eAAgB,WAAYy2B,WAAYiI,EAAeyhB,MAInM,yBAAK13D,MAAO,CAAE2U,gBAAiB,qBAAsBvU,OAAQ,OAAQiO,SAAU,OAAQpO,QAAS,OAAQC,WAAY,SAAUoS,eAAgB,SAAUgF,OAAQ,gCAAiCC,eAAgB,WAAYlE,OAAQ,UAAW26B,WAAYiI,EAAeyhB,KACvQ,4BApEM,KADG93D,EAqEQoJ,SApEIvH,IAAV7B,GAAiC,OAAVA,GAA4B,KAAVA,EACjD,GAEL,GAAN,OAAUA,QA9BN,MAqGyEP,KAAKI,MAAlF6a,EArGI,EAqGJA,WAAYq9C,EArGR,EAqGQA,QAASC,EArGjB,EAqGiBA,SAAUC,EArG3B,EAqG2BA,QAASC,EArGpC,EAqGoCA,QAASC,EArG7C,EAqG6CA,QAASC,EArGtD,EAqGsDA,QAAS51D,EArG/D,EAqG+DA,MACrEmD,EAAK+U,EAAc,OAAwB,OAC7C29C,EAAYzuB,EAAWmuB,EAASpyD,GAChC2yD,EAAa1uB,EAAWouB,EAAUryD,GAClC4yD,EAAY3uB,EAAWquB,EAAStyD,GAChC6yD,EAAY5uB,EAAWsuB,EAASvyD,GAChC8yD,EAAY7uB,EAAWuuB,EAASxyD,GAChC+yD,EAAY9uB,EAAWwuB,EAASzyD,GAC9BgzD,EAAUd,EAAWQ,GACrBO,EAAWf,EAAWS,GACtBO,EAAUhB,EAAWU,GACrBO,EAAUjB,EAAWW,GACrBO,EAAUlB,EAAWY,GACrBO,EAAUnB,EAAWa,GAC3B,OACI,yBAAKt4D,MAAO,CAAEC,QAAS,OAAQ6U,iBAAkB,UAAY1S,EAAMW,OAAS,UACxE,yBAAK/C,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAYhB,KAAKw5D,eAAiB,UAAYN,GAClG,yBAAKv4D,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAYhB,KAAKw5D,eAAiB,UAAYL,GAClG,yBAAKx4D,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAYhB,KAAKw5D,eAAiB,UAAYJ,GAClG,yBAAKz4D,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAYhB,KAAKw5D,eAAiB,UAAYH,GAClG,yBAAK14D,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAYhB,KAAKw5D,eAAiB,UAAYF,GAClG,yBAAK34D,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAYhB,KAAKw5D,eAAiB,UAAYD,M,+BAIpG,IAAD,EACuBv5D,KAAKI,MAAf2C,GADb,EACG02D,SADH,EACa12D,OACZs2C,EAAat2C,EAAMkJ,KAAI,SAACtC,EAAMpG,GAAP,OAAiB,yBAAK5C,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,SAAUE,OAAQ,OAAQkX,OAAQ,gCAAiCC,eAAgB,WAAY5C,gBAAiB,WAAapV,IAAKqD,GAAO,4BAAKoG,EAAK5G,WACtQ,OACI,yBAAKpC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAChD,yBAAKL,MAAO,CAAEC,QAAS,OAAQ6U,iBAAkB,UAAY1S,EAAMW,OAAS,UACvE21C,GAEJr5C,KAAK06C,qB,GAzJUl7C,cCajBk6D,G,iLAdD,IAAD,EAC8E15D,KAAKI,MAAhFk4D,EADH,EACGA,QAASC,EADZ,EACYA,SAAUC,EADtB,EACsBA,QAASC,EAD/B,EAC+BA,QAASC,EADxC,EACwCA,QAASC,EADjD,EACiDA,QAAQ19C,EADzD,EACyDA,WAAWlY,EADpE,EACoEA,MAEzE,OACI,yBAAKpC,MAAO,CAAE4Y,UAAW,SACzB,yBAAK5Y,MAAO,CAAE2U,gBAAiB,YAAa8N,oBAAqB,MAAOC,qBAAsB,MAAOtiB,OAAQ,OAAQ0T,QAAS,WAAY7T,QAAS,OAAQC,WAAY,WACnK,wBAAIF,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBAAqB7L,IAE3D,kBAAC,GAAD,CAAmBkY,WAAYA,EAAYlY,MANhC,CAAC,CAAEA,MAAO,OAAS,CAAEA,MAAO,QAAU,CAAEA,MAAO,OAAS,CAAEA,MAAO,QAAU,CAAEA,MAAO,OAAS,CAAEA,MAAO,QAMlDu1D,QAASA,EAASC,SAAUA,EAAUC,QAASA,EAASC,QAASA,EAASC,QAASA,EAASC,QAASA,S,GATzJn5D,aCgPZm6D,I,kNAtOXj6D,MAAQ,CACJ8iB,WAAY,GACZw+B,aAAc,KACd4Y,eAAgB,EAChB3+C,WAAYnZ,IAAOA,MAASoM,OAAO,YAAa,YAAY7I,UAC5DiE,SAAU,GACVsd,SAAU,GACVC,SAAU,GACViqB,iBAAa1uC,EACbiyC,WAAW,EACXwlB,aAAc,GACdC,aAAc,GACdC,eAAgB,GAChBC,cAAe,GACfC,cAAe,GACfC,aAAc,GACdj/B,KAAM,GACNC,KAAM,I,EAqDVzkB,MAAQ,SAAC06B,EAAQ5qB,GACb,IAAI6B,EAAW7B,EAAO6B,SAClBgpB,EAAY,GAehB,OAdAhpB,EAAS3C,SAAQ,SAAA4C,GACb+oB,EAAU/oB,EAAQnoB,KAAO,MAG7BixC,EAAO1rB,SAAQ,SAAAsiB,GACX,IAAIQ,EAAUR,EAAMh9B,QACpBqd,EAAS3C,SAAQ,SAAA4C,GACb,IAAMC,EAAK,IAAIC,OAAOF,EAAQG,UAAWH,EAAQI,aAC3CtoB,EAAQooC,EAAQpoC,MAAMmoB,GACd,OAAVnoB,GAA+B,KAAbA,EAAM,IACxBixC,EAAU/oB,EAAQnoB,KAAKoF,KAAKyiC,SAIjCqJ,G,EAEX6P,mBAAqB,SAAC1gD,GAClB,EAAKN,SAAS,CACV+gD,aAAczgD,K,mFAvElBP,KAAKutD,Y,gCAGE,IAAD,OACErvC,EAAale,KAAKI,MAAlB8d,SACRle,KAAKC,SAAS,CAAEo0C,WAAW,IAC3B,IACMluC,EADWnG,KAAKN,MAAMub,WACL,OACjB/U,EAAKpE,IAAOqE,EAAM,QAA0B+H,OAAO,cACnDisD,EAAW/vD,GAAwB,cACpCV,MAAK,SAAA3F,GACF,IAAIwiB,EAASxiB,EAAKA,KAAK6jB,MAAK,SAAAld,GAAI,MAAkC,iBAA9BA,EAAKmd,gBAAgBvW,QACzDpP,QAAQC,IAAI,iCAAmCsL,KAAKC,UAAU6Y,IAC9D,EAAKtmB,SAAS,CACV6wC,YAAavqB,OAGpBzc,OAAM,SAAAC,GACH7H,QAAQC,IAAI4H,MAEdirC,EAASvrC,GAAuCyU,EAASzX,MAAOyX,EAAS8J,OAAQ,OAClFte,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CACVqJ,SAAUvF,EAAKA,UAGtB+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,0CAA4CsL,KAAKC,UAAU3D,OAEzE4qC,EAAUlrC,GAAuCyU,EAASzX,MAAOP,GAClEwD,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CACV2mB,SAAU7iB,EAAKA,UAGtB+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,uBAAyBsL,KAAKC,UAAU3D,OAEtD6qC,EAAUnrC,GAAuCyU,EAASzX,MAAOP,GAClEwD,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CACV4mB,SAAU9iB,EAAKA,UAGtB+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,uBAAyBsL,KAAKC,UAAU3D,OAG5DM,QAAQC,IAAI,CAAC6vD,EAAUnlB,EAAQL,EAASC,IAAUlrC,MAAK,WAAQ,EAAKzJ,SAAS,CAAEo0C,WAAW,OAAYvqC,OAAM,WAAQ,EAAK7J,SAAS,CAAEo0C,WAAW,S,+BA6BzI,IAAD,OACL,SAASmV,EAAWjpD,GAChB,OAAc,OAAVA,QAA4B6B,IAAV7B,GAAiC,KAAVA,EAClC,GAEJA,EAAMyE,WAAWC,OALvB,IAQGiZ,EAAale,KAAKI,MAAlB8d,SARH,EAS6Ble,KAAKN,MAA/BoxC,EATH,EASGA,YAAaxnC,EAThB,EASgBA,SACf8wD,EAAUp6D,KAAKN,MAAMknB,SACrByzC,EAAWr6D,KAAKN,MAAMmnB,SAEtB1gB,EADWnG,KAAKN,MAAMub,WACL,OACjB/U,EAAKC,EAAM,OACbmyD,EAAU,GACVC,EAAW,GACXC,EAAU,GACVC,EAAU,GACVC,EAAU,GACVC,EAAU,GACd,GAAIx1D,MAAMC,QAAQg3D,IACS,IAAnBA,EAAQ12D,OACR,IAAK,IAAIH,EAAQ,EAAGA,EAAQ62D,EAAQ12D,OAAQH,IAAS,CACjD,IAAMsB,EAAUu1D,EAAQ72D,GAClBqmB,EAAM4/B,EAAW3kD,EAAQglB,OACzBigC,EAAON,EAAW3kD,EAAQ0lB,OAC1ByiC,EAAMxD,EAAW3kD,EAAQklB,OACzBigC,EAAMR,EAAW3kD,EAAQolB,OAEzB5hB,EAAOvG,IAAQ+C,EAAQigB,QAAQ9f,WAAaH,EAAQkgB,QAAQ/f,WAAa,sBAAsBK,UACjGa,EAAKmC,GAAQA,EAAOlC,IACR,OAARyjB,GAAwB,KAARA,QAAsBxnB,IAARwnB,GAC9B0uC,EAAQhzD,KAAK,CACT8qB,KAAM/nB,EACNwa,KAAM+G,IAGD,OAATkgC,GAA0B,KAATA,QAAwB1nD,IAAT0nD,GAChCyO,EAASjzD,KAAK,CACV8qB,KAAM/nB,EACNwa,KAAMinC,IAGF,OAARkD,GAAwB,KAARA,QAAsB5qD,IAAR4qD,GAC9BwL,EAAQlzD,KAAK,CACT8qB,KAAM/nB,EACNwa,KAAMmqC,IAGF,OAARhD,GAAwB,KAARA,QAAsB5nD,IAAR4nD,GAC9ByO,EAAQnzD,KAAK,CACT8qB,KAAM/nB,EACNwa,KAAMmnC,IAIV0O,EAAQpzD,KAAK,CACT8qB,KAAM/nB,EACNwa,KA9BA,QAqCxB,GAAI1f,MAAMC,QAAQi3D,IACU,IAApBA,EAAS32D,OACT,IAAK,IAAIH,EAAQ,EAAGA,EAAQ82D,EAAS32D,OAAQH,IAAS,CAClD,IAAMsB,EAAUw1D,EAAS92D,GACnBunB,EAAM0+B,EAAW3kD,EAAQkmB,OACzB1iB,EAAOvG,IAAQ+C,EAAQigB,QAAQ9f,WAAaH,EAAQkgB,QAAQ/f,WAAa,sBAAsBK,UACjGa,EAAKmC,GAAQA,EAAOlC,IACR,OAAR2kB,GAAwB,KAARA,QAAsB1oB,IAAR0oB,GAC9B6tC,EAAQrzD,KAAK,CACT8qB,KAAM/nB,EACNwa,KAAMiI,KAQ9B,IAAI0mB,EAAgB,QACApvC,IAAhB0uC,IACAU,EAAgBxxC,KAAKyW,MAAMnN,EAAUwnC,IAIzC,IAAMW,EAAeD,EAAc,kCAEnC,OACI,yBAAK7wC,MAAO,CAAE8T,QAAS,aACnB,yBAAKvI,UAAU,oBACX,kBAAC,KAAD,CACI2J,qBAAsB,SAAAC,GAAW,OAAIA,EAAYC,YACjDkH,aAAc,SAACC,GAAc,OAAOA,EAAUpb,MAASqb,WAAaD,EAAUpb,IAAOoc,EAASQ,aAAakhB,SAAS56B,WAAY,YAAY+7B,SAC5IpuB,aAAc7Q,IAAO9B,KAAKN,MAAMub,YAChCrI,SAAU,SAAC7Q,EAAMqZ,GAAiB,EAAKnb,SAAS,CAAEgb,WAAYlZ,EAAKsD,aACnE+X,YAAY,KAEpB,yBAAKzc,MAAO,CAAEkS,OAAQ,aAClB,yBAAKlS,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,WAAYD,OAAQ,SACpE,8BACA,kBAAC,GAAD,CAAYof,IAAK,IAAKD,IAAK,EAAG65B,gBAAiB,EAAG4F,aAAa,IAAI3oC,MAAO0D,UAAWqG,OAAO,eAAesZ,OAAO,uBAG1H,yBAAKnuB,UAAU,cAEXlM,KAAKN,MAAM20C,UAEH,kBAAC,KAAD,CAAM5wC,KAAK,YAGX,yBAAKyI,UAAU,mBACX,kBAAC,GAAD,CAAgB+O,WAAYjb,KAAKN,MAAMub,WAAY8+B,gBAAiB,EAAGyH,eAAe,EAAMtjC,SAAUA,EAAU5S,OAAQ,YAAavI,MAAM,UAG3I,kBAAC,GAAD,CAAgBkY,WAAYjb,KAAKN,MAAMub,WAAY3R,SAAUmoC,EAAcsI,gBAAiB,EAAG77B,SAAUA,EAAU5S,OAAQ,YAAavI,MAAM,6BAC9I,kBAAC,GAAD,CAAckY,WAAYjb,KAAKN,MAAMub,WAAYq9C,QAASA,EAASC,SAAUA,EAAUC,QAASA,EAASC,QAASA,EAASC,QAASA,EAASC,QAASA,EAAS51D,MAAM,8BAIrL,yBAAKpC,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,WAAYD,OAAQ,SACpE,8BACA,kBAAC,GAAD,CAAYof,IAAK,IAAKD,IAAK,EAAG65B,gBAAiB,EAAG4F,aAAa,IAAI3oC,MAAO0D,UAAWqG,OAAO,uBAAuBsZ,OAAO,mC,GAhOlH76B,cC4Fb86D,I,kNAhGX56D,MAAQ,CACJwe,SAAU,EAAK9d,MAAM8d,SACrBL,UAAU,EACV08C,cAAe,GACflkD,aAAc,GACd1W,WAAY,G,mFAIZK,KAAKsW,cAAgBtW,KAAKsW,cAAcC,KAAKvW,MAG7CA,KAAKw6D,qBAEL,IAAMz6D,EAAcF,eAAeC,QAAQ,QAC3CE,KAAKC,SAAS,CAAEN,WAAYI,M,2CAEV,IAAD,OACjB0J,EAAgCzJ,KAAKN,MAAMwe,SAASzN,WAC/C/G,MAAK,SAAA3F,GACF7B,QAAQC,IAAI,yBAA2BsL,KAAKC,UAAU3J,IACtD,EAAK9D,SAAS,CACVs6D,cAAex2D,EAAKA,KAAK,GAAGqE,aAGnC0B,OAAM,SAAAC,GACH7H,QAAQC,IAAI,yBAA2BsL,KAAKC,UAAU3D,S,oCAGpD4M,GACV3W,KAAKC,SAAS,CAAEoW,aAAcM,EAAMC,OAAOrW,U,yCAG3CP,KAAKC,SACD,CACI4d,UAAW7d,KAAKN,MAAMme,a,sCAM9B7d,KAAKC,SACD,CACI4d,UAAU,M,qCAKN,IAAD,QlG4qBZ,SAA6BzV,EAAS5C,EAAOoB,GAClD,IAAM0B,EAAO,CACXF,QAASA,EACT5C,MAAOA,EACPoB,QAASA,GAEX,OAAOnB,IAAM8C,KAAK,oCAAqCD,IkGjrBjDmB,CAAgCzJ,KAAKN,MAAM2W,aAAcrW,KAAKN,MAAMwe,SAASzX,MAAOzG,KAAKN,MAAMwe,SAASzN,WACnG/G,MAAK,SAAA3F,GACF7B,QAAQC,IAAI,0BAA4BsL,KAAKC,UAAU3J,IACvD,EAAK9D,SACD,CACIoW,aAAc,KAGtB,EAAKmkD,wBAER1wD,OAAM,SAAAC,GACH7H,QAAQC,IAAI,0BAA4BsL,KAAKC,UAAU3D,OAE/D/J,KAAKC,SACD,CACI4d,UAAU,M,+BAIZ,IAAD,OACL,OACI,yBAAKld,MAAO,CAAE6jB,aAAc,SACxB,yBAAKtY,UAAU,oBACX,wBAAIvL,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBAAtC,kCACA,yBAAKsE,QAAS,kBAAM,EAAKoM,oBAAoB3e,MAAO,CAAEC,QAAkC,GAAzBZ,KAAKN,MAAMC,WAAkB,OAAS,OAAQqU,OAAQ,YACjH,yBAAK3S,IAAK4S,KAAU1S,IAAI,eAGhC,yBAAK2K,UAAU,sBACX,4BAAKlM,KAAKN,MAAM66D,gBAEpB,yBAAK55D,MAAO,CAAEC,QAASZ,KAAKN,MAAMme,SAAW,QAAU,SACnD,yBAAKld,MAAO,CAAE8T,QAAS,WAAYa,gBAAiB,wBAChD,kBAAC,KAAD,CAAOM,YAAY,mDAAWrV,MAAOP,KAAKN,MAAM2W,aAAczD,SAAU5S,KAAKsW,iBAEjF,yBAAK3V,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WACjE,yBAAKF,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaC,cAAe,SAC5E,kBAAC,KAAD,CAAQiS,QAAS,kBAAM,EAAKwM,kBAA5B,gBACA,kBAAC,KAAD,CAAQxM,QAAS,kBAAM,EAAKyM,gBAAgBlc,KAAK,WAAjD,wB,GAxFFjE,cCDpBi7D,I,OAAY,sBACZC,GAAgB,qBAyKPC,G,2MAtKXj7D,MAAQ,CACJme,UAAU,EACV+8C,aAAa,EACbC,SAAU,GACV38C,SAAU,EAAK9d,MAAM8d,SACrB7H,kBAAcjU,EACdzC,WAAY,G,EA2EhBiT,SAAW,SAAC6sB,K,EAEZq7B,YAAc,SAACnkD,GAEX,IAAMokD,EAAe,EAAKr7D,MAAMm7D,SAASjzC,MAAK,SAAAld,GAAI,OAAIA,EAAKrC,OAASsO,EAAMC,OAAOrW,WAEjD,IAA3B,EAAKb,MAAMk7D,cAAiD,IAAzBjkD,EAAMC,OAAOgb,UAAkD,IAA3B,EAAKlyB,MAAMk7D,cAAkD,IAAzBjkD,EAAMC,OAAOgb,UACzHnoB,GAAuBsxD,EAAa5yD,OAAQ4yD,EAAa3yD,QAAS2yD,EAAa1yD,KAAM0yD,EAAav0D,UAAYu0D,EAAat3D,OAASg3D,GAAaC,GAAgBD,IAC5J/wD,MAAK,SAAA3F,GACF7B,QAAQC,IAAI,iBAAmBsL,KAAKC,UAAU3J,IAC9C,EAAKi3D,sBAERlxD,OAAM,SAAAC,GACH7H,QAAQC,IAAI,iBAAmBsL,KAAKC,UAAU3D,Q,mFApF1D/J,KAAKsW,cAAgBtW,KAAKsW,cAAcC,KAAKvW,MAG7CA,KAAKg7D,mBAEL,IAAMj7D,EAAcF,eAAeC,QAAQ,QAC3CE,KAAKC,SAAS,CAAEN,WAAYI,M,yCAEZ,IAAD,OACf0J,GAAuBzJ,KAAKN,MAAMwe,SAASzN,UAAWzQ,KAAKN,MAAMwe,SAAS8J,QACrEte,MAAK,SAAA3F,GACF7B,QAAQC,IAAI,uBAAyBsL,KAAKC,UAAU3J,IACpD,EAAK9D,SAAS,CACV46D,SAAU92D,EAAKA,UAGtB+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,uBAAyBsL,KAAKC,UAAU3D,S,oCAGlD4M,GACV3W,KAAKC,SAAS,CAAEoW,aAAcM,EAAMC,OAAOrW,U,yCAG3CP,KAAKC,SACD,CACI4d,UAAW7d,KAAKN,MAAMme,a,sCAM9B7d,KAAKC,SACD,CACI4d,UAAU,M,qCAKN,IAAD,OACLU,GAAa,IAAIvH,MAAOwH,cAC9B/U,GAAuBzJ,KAAKN,MAAMwe,SAAS8J,OAAQhoB,KAAKN,MAAM2W,aAAckI,EAAYve,KAAKN,MAAMwe,SAASzN,UAAWiqD,IAClHhxD,MAAK,SAAA3F,GACF7B,QAAQC,IAAI,iBAAmBsL,KAAKC,UAAU3J,IAC9C,EAAKi3D,sBAERlxD,OAAM,SAAAC,GACH7H,QAAQC,IAAI,iBAAmBsL,KAAKC,UAAU3D,OAEtD/J,KAAKC,SACD,CACI4d,UAAU,EACVxH,kBAAcjU,M,sCAKtBpC,KAAKC,SACD,CACI26D,aAAa,M,wCAKrB56D,KAAKC,SACD,CACI26D,aAAa,M,+BAsBf,IAAD,OAMCK,EAAgBj7D,KAAKN,MAAMm7D,SAC3BK,EAAcD,EAAc33D,QAAO,SAAUoH,EAAMnH,EAAO6B,GAC5D,OAAOsF,EAAKjH,OAASg3D,MAEnBU,EAAeD,EAAYjvD,KAAI,SAAUvB,EAAMnH,EAAO6B,GACxD,OAAOsF,EAAKrC,QAEV+yD,EAAgBH,EAAc33D,QAAO,SAAUoH,EAAMnH,EAAO6B,GAC9D,OAAOsF,EAAKjH,OAASi3D,MAGnBI,EAAc96D,KAAK86D,YACnBO,EAAkBH,EAAYjvD,KAAI,SAAUvB,EAAMnH,EAAO6B,GAC3D,OACI,yBAAKlF,IAAKqD,EAAO2I,UAAU,oBACvB,kBAAC,KAAD,CAAU3L,MAAOmK,EAAKrC,KAAMupB,SAAS,EAAMhf,SAAUkoD,EAAan6D,MAAO,CAAEkxB,eAAgB,iBAAmBnnB,EAAKtC,aAIzHkzD,EAAoBF,EAAcnvD,KAAI,SAAUvB,EAAMnH,EAAO6B,GAC/D,OACI,yBAAKlF,IAAKqD,EAAO2I,UAAU,oBACvB,kBAAC,KAAD,CAAU3L,MAAOmK,EAAKrC,KAAMupB,SAAS,EAAOhf,SAAUkoD,GAAcpwD,EAAKtC,aAIrF,OACI,yBAAKzH,MAAO,CAAE6jB,aAAc,SACxB,yBAAKtY,UAAU,qBACX,wBAAIvL,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBAAtC,4BACA,yBAAKsE,QAAS,kBAAM,EAAKoM,oBAAoB3e,MAAO,CAAEC,QAAkC,GAAzBZ,KAAKN,MAAMC,WAAkB,OAAS,OAAQqU,OAAQ,YACjH,yBAAK3S,IAAK4S,KAAU1S,IAAI,eAGhC,yBAAKZ,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,SAAU4T,QAAS,aACpF,yBAAK9T,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,cAAeC,cAAe,SAC9E,yBAAKN,MAAO,CAAEqT,OAAQ,WAAa9H,UAAWlM,KAAKN,MAAMk7D,YAAc,eAAiB,aAAc1nD,QAAS,kBAAM,EAAKqoD,oBAA1H,sBACA,yBAAK56D,MAAO,CAAEqT,OAAQ,WAAad,QAAS,kBAAM,EAAKsoD,iBAAiBtvD,UAAWlM,KAAKN,MAAMk7D,YAAc,aAAe,gBAA3H,wBAGR,kBAAC,KAASnjC,MAAV,CAAgB9kB,aAAcwoD,EAAcx6D,MAAO,CAAEmS,MAAO,QAAUF,SAAU5S,KAAK4S,UACjF,yBAAKjS,MAAO,CAAE4oC,UAAW,OAAQ5V,UAAW,UACvC3zB,KAAKN,MAAMk7D,YAAcS,EAAkBC,IAGpD,yBAAK36D,MAAO,CAAEC,QAASZ,KAAKN,MAAMme,SAAW,QAAU,SACnD,yBAAKld,MAAO,CAAE8T,QAAS,WAAY7T,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WACtF,kBAAC,KAAD,CAAO+U,YAAY,mDAAWrV,MAAOP,KAAKN,MAAM2W,aAAczD,SAAU5S,KAAKsW,gBAC7E,kBAAC,KAAD,CAAQ7S,KAAK,WAAb,iBAEJ,yBAAK9C,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WACjE,yBAAKF,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaC,cAAe,SAC5E,kBAAC,KAAD,CAAQiS,QAAS,kBAAM,EAAKwM,kBAA5B,gBACA,kBAAC,KAAD,CAAQxM,QAAS,kBAAM,EAAKyM,gBAAgBlc,KAAK,WAAjD,wB,GA9JDjE,a,8FCyFZi8D,G,YAzFX,WAAYr7D,GAAQ,IAAD,8BACf,4CAAMA,KAeVs7D,SAAW,YACmB,IAAtB,EAAKh8D,MAAMwE,OACX,EAAKjE,SAAS,CAAEiE,QAAQ,IAAQ,WAC5B,EAAK9D,MAAMu7D,cAAa,MAI5B,EAAK17D,SAAS,CAAEiE,QAAQ,IAAS,WAC7B,EAAK9D,MAAMu7D,cAAa,OAtBhC,EAAKj8D,MAAQ,CACTwE,QAAQ,GAHG,E,0EASNiW,EAAWyhD,GACpB57D,KAAKI,MAAMyY,eAAesB,EAAWyhD,K,mCAE5BzhD,EAAWyhD,GACpB57D,KAAK67D,aAAa1hD,EAAWyhD,GAC7B57D,KAAK07D,a,+BAiBC,IAAD,SACqE17D,KAAKI,MAAvEw7D,EADH,EACGA,WAAYl8D,EADf,EACeA,MAAgBya,GAD/B,EACsB2hD,QADtB,EAC+B3hD,WAAW4hD,EAD1C,EAC0CA,UAAWh4D,EADrD,EACqDA,KAAMi4D,EAD3D,EAC2DA,MAwBhE,SAASC,IAEL,OAAIzhD,GAAWuhD,KAAevhD,GAAWL,GAK7C,OACI,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAK1W,KAAK,OAAOy4D,QAAQ,UACrB,kBAAC,KAAD,CAAKC,KAAM,IACP,yBAAKjwD,UAAW+vD,IAAgB,0BAA4B,qBACxD/oD,QAAS,kBACL,EAAKkpD,aAAajiD,EAAWyhD,KAEjC,yBAAK1vD,UAAW+vD,IAAgB,+BAAiC,2BAC7D,wBAAI/vD,UAAU,gCAAgCsO,GAAWL,GAAzD,I1FGhC,SAAgCA,GAG5B,MADkB,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UADnC,IAAInD,KAAKmD,GAAWf,U0FJgEijD,CAAuBliD,GAA7F,IAnBhBA,IAAc6hD,EAAc,eACpB,OArBhB,SAAoBt8D,GAChB,IAAM48D,EAAgBv4D,EAAK2uB,aAAapvB,QAAO,SAAAoH,GAAI,MAAkB,iBAAdA,EAAKjH,QAC5D,OAAI/D,EAEI,yBAAKwM,UAAU,0BACX,yBAAK7K,IAAKk7D,KAAch7D,IAAI,iBAC5B,4BAAK+6D,EAAc54D,SAMvB,yBAAKwI,UAAU,0BACX,yBAAK7K,IAAKm7D,KAAmBj7D,IAAI,iBACjC,wBAAI2K,UAAU,eAAeowD,EAAc54D,SA4BtC+4D,CAAW/8D,MAGxB,kBAAC,KAAD,CAAK+D,KAAK,OAAOy4D,QAAQ,UACrB,kBAAC,KAAD,KACKD,KAAiBj8D,KAAKN,MAAMwE,OACzB,yBAAKvD,MAAO,CAAEmS,MAAO,EAAG/R,OAAQ,EAAG0Y,YAAa,QAASC,YAAa,qBAAsBC,YAAa,iDACvG,U,GAnFHna,aC0TZk9D,G,2MAlTXh9D,MAAQ,CACJi9D,aAAc,OACdC,UAAW,KACXC,UAAW,KACXC,YAAa,KACbC,gBAAiB,GACjBl9C,aAAc,GACdm9C,eAAgB,EAChBC,aAAc,EACd/pC,WAAY,EACZgqC,cAAe,GACfC,MAAM,G,EAsFV7hD,iBAAmB,SAACnB,EAAWyhD,GAC3B15D,QAAQC,IAAIgY,GACZ,EAAKla,SAAS,CACV48D,UAAW1iD,EACX2iD,YAAalB,K,EASrBD,aAAe,SAACp7D,IAEE,IAAVA,EACA,EAAKN,SAAS,CAAEk9D,MAAM,IAAQ,WAAQj7D,QAAQC,IAAI,YAAa,EAAKzC,UAEpE,EAAKO,SAAS,CAAEk9D,MAAM,IAAS,WAAQj7D,QAAQC,IAAI,aAAc,EAAKzC,W,EAG9EmzC,aAAe,SAACtyC,GACZ2B,QAAQC,IAAI5B,GACZ,EAAKN,SAAS,CACV08D,aAAcp8D,EACdu8D,YAAa,KACbF,UAAW,Q,EAGnBhqD,SAAW,SAACuH,GACRjY,QAAQC,IAAI,gB,mFAjHK,IAAD,EACqCnC,KAAKo9D,kBAAlDJ,EADQ,EACRA,eAAgBC,EADR,EACQA,aAAc/pC,EADtB,EACsBA,WACtClzB,KAAKC,SAAS,CACV+8D,eAAgBA,EAChBC,aAAcA,EACd/pC,WAAYA,EACZ2pC,UAAW3pC,IAEflzB,KAAKme,cAAc,IAAInH,KAAKgmD,GAAgBx+C,cAAcmH,MAAM,KAAK,GAAI,IAAI3O,KAAKimD,GAAcz+C,cAAcmH,MAAM,KAAK,IACzH3lB,KAAKwzC,gB,wCAGL,IAAMwoB,EAAQ,IAAIhlD,KACZqmD,EAAoB,IAAIrmD,KAAKglD,EAAM5hD,cAAe4hD,EAAM9iD,WAAY,GAAGE,SACvEkkD,EAAiB,IAAItmD,KAAKglD,EAAM5hD,cAAe4hD,EAAM9iD,WAAY,GAAGwB,UAAiC,GAApB2iD,EAAyB,GAAK,GAAK,IA/B3G,MAgCTnqC,EAAa,IAAIlc,KAAKglD,EAAM5hD,cAAe4hD,EAAM9iD,WAAY8iD,EAAM7iD,WAAWuB,UAhCrE,MAkCTsiD,EAA8C,SAA5Bh9D,KAAKN,MAAMi9D,aAA2BzpC,EAAa,OAA0BoqC,EAGrG,MAAO,CAAEN,iBAAgBC,aAFyB,SAA5Bj9D,KAAKN,MAAMi9D,aAA2BK,EAAiB,OAA0BA,EAAiB,OAEjF9pC,gB,oCAE7BqqC,EAAmBC,GAAkB,IAAD,OAC9C/zD,EAAkCzJ,KAAKI,MAAM8d,SAASzN,UAAW8sD,GAC5D7zD,MAAK,SAAA3F,GACF7B,QAAQC,IAAI,4BAA8BsL,KAAKC,UAAU3J,EAAKA,OAE9D,IAAM05D,EAAW15D,EAAKA,KAClB25D,EAAiB,GACrBD,EAASh4C,SAAQ,SAAA/a,GACb,IAAMizD,EAAcjzD,EAAKrC,KAAKsd,MAAM,KAAK,GACrCi4C,EAAiBF,EAAexmD,WAAU,SAAArS,GAAO,OAAIA,EAAQwD,OAASs1D,KAC1E,IAAwB,IAApBC,EAAuB,CAEvB,IAAIC,EAAU,CACVx1D,KAAMs1D,EACNxjD,UAAWzP,EAAKrC,KAChBqqB,aAAc,IAEdorC,EAAW,CACXr6D,KAAMiH,EAAKjH,KACX0W,UAAW,IAAInD,KAAKtM,EAAKrC,MAAMqS,UAC/BqjD,OA7DA,iBA6DSrzD,EAAKjH,KAAgC,qBAAQ,qBACtD6N,KAAM5G,EAAK4G,KACXi3B,QAAS79B,EAAKtC,QACdiN,UAAW3K,EAAK2K,WAEpBwoD,EAAQnrC,aAAaptB,KAAKw4D,GAC1BJ,EAAep4D,KAAKu4D,OACjB,CAEH,IAAIC,EAAW,CACXr6D,KAAMiH,EAAKjH,KACX0W,UAAW,IAAInD,KAAKtM,EAAKrC,MAAMqS,UAC/BqjD,OAzEA,iBAyESrzD,EAAKjH,KAAgC,qBAAQ,qBACtD6N,KAAM5G,EAAK4G,KACXi3B,QAAS79B,EAAKtC,QACdiN,UAAW3K,EAAK2K,WAEpBqoD,EAAeE,GAAgBlrC,aAAaptB,KAAKw4D,OAGzD,EAAK79D,SAAS,CACV88D,gBAAiBh5D,EAAKA,KACtB8b,aAAc69C,OAGrB5zD,OAAM,SAAAC,GACH7H,QAAQC,IAAI,4BAA8BsL,KAAKC,UAAU3D,S,oCAGtD,IAAD,OACVN,EAAgCzJ,KAAKI,MAAM8d,SAASzN,UAAWzQ,KAAKI,MAAM8d,SAAS8J,QAC9Ete,MAAK,SAAAa,GACFrI,QAAQC,IAAI,0BAA4BsL,KAAKC,UAAUnD,IACvD,EAAKtK,SAAS,CACVi9D,cAAe3yD,EAAOxG,UAG7B+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,0BAA4BsL,KAAKC,UAAU3D,S,sCAUlD,IAAD,OACZ/J,KAAKC,SAAS,CACV48D,UAAW78D,KAAKN,MAAMwzB,WACtB4pC,YAAa,OACd,WAAQ56D,QAAQC,IAAI,EAAKzC,Y,mCAqBnBs+D,GACTh+D,KAAKC,SAAS,CACVg+D,YAAaD,M,2CAGA7jD,GACjB,IAAM+jD,EAAU,IAAIlnD,KAAKmD,GAAWqE,cAAcmH,MAAM,KAAK,GACvDw4C,EAAiBn+D,KAAKN,MAAMmgB,aAAa3I,WAAU,SAAArS,GAAO,OAAIA,EAAQwD,OAAS61D,KAErF,OADuC,IAApBC,EAAyB,CAAEzrC,aAAc,IAAO1yB,KAAKN,MAAMmgB,aAAas+C,K,6CAGxEhkD,GACnB,IAAM+jD,EAAU,IAAIlnD,KAAKmD,GAAWqE,cAAcmH,MAAM,KAAK,GAE7D,OADyB3lB,KAAKN,MAAMw9D,cAAc55D,QAAO,SAAAuB,GAAO,OAAIA,EAAQwD,KAAK4C,QAAQizD,IAAY,O,iCAKrG,IADA,IAAIE,EAAc,GACT76D,EAAQ,EAAGA,EAAQ,EAAGA,IAAS,CACpC,IAAMy6D,EAAgBh+D,KAAKN,MAAMs9D,eAA0B,GAARz5D,EAAa,GAAK,GAAK,IACpExB,EAAOyY,GAAWwjD,GAClBK,EAAYr+D,KAAKs+D,qBAAqBN,GAExCz6D,EAAQ,IAAM,EACd66D,EAAY94D,KACR,kBAAC,GAAD,CAAcq2D,aAAc37D,KAAK27D,aAAcC,WAAY,OAAQG,UAAW/7D,KAAKN,MAAMm9D,UAAW1iD,UAAW6jD,EAAej8D,KAAMA,EAAMrC,OAAO,EAAMo8D,SAAS,EAAM/3D,KAAMs6D,EAAWrC,MAAOh8D,KAAKN,MAAMwzB,WAAYra,eAAgB7Y,KAAKsb,oBAI9O8iD,EAAY94D,KAER,kBAAC,GAAD,CAAcq2D,aAAc37D,KAAK27D,aAAcC,WAAY,OAAQG,UAAW/7D,KAAKN,MAAMm9D,UAAW1iD,UAAW6jD,EAAej8D,KAAMA,EAAMrC,MAAO+a,GAAWujD,GAAgBlC,SAAS,EAAO/3D,KAAMs6D,EAAWrC,MAAOh8D,KAAKN,MAAMwzB,WAAYra,eAAgB7Y,KAAKsb,oBAM5Q,OAAO8iD,I,oCAEGG,EAAYC,GAEtB,IADA,IAAIJ,EAAc,GACT76D,EAAQ,EAAGA,EAAQ,EAAGA,IAAS,CACpC,IAAMy6D,EAAgB,IAAIhnD,KAAKwnD,GAAmB9jD,UAAqB,GAARnX,EAAa,GAAK,GAAK,IA9K3E,MA+KLxB,EAAOyY,GAAWwjD,GAClBK,EAAYr+D,KAAKs+D,qBAAqBN,GAExC,IAAIhnD,KAAKwD,IAAW,IAAIxD,MAAO0D,YAAYA,WAAa,IAAI1D,KAAKwD,GAAW,IAAIxD,KAAKgnD,GAAetjD,YAAYA,UAChH0jD,EAAY94D,KAGR,kBAAC,GAAD,CAAcq2D,aAAc37D,KAAK27D,aAAcC,WAAY2C,EAAYxC,UAAW/7D,KAAKN,MAAMm9D,UAAW1iD,UAAW6jD,EAAej8D,KAAMA,EAAMrC,OAAO,EAAMo8D,SAAS,EAAM/3D,KAAMs6D,EAAWrC,MAAOh8D,KAAKN,MAAMwzB,WAAYra,eAAgB7Y,KAAKsb,oBAKlP8iD,EAAY94D,KAER,kBAAC,GAAD,CAAcq2D,aAAc37D,KAAK27D,aAAcC,WAAY2C,EAAYxC,UAAW/7D,KAAKN,MAAMm9D,UAAW1iD,UAAW6jD,EAAej8D,KAAMA,EAAMrC,OAAO,EAAOo8D,SAAS,EAAM/3D,KAAMs6D,EAAWrC,MAAOh8D,KAAKN,MAAMwzB,WAAYra,eAAgB7Y,KAAKsb,oBAM3P,OAAO8iD,I,iCAGAK,QACUr8D,IAAbq8D,IAAwBA,EAAW,GACvCv8D,QAAQC,IAAI,uBAAyBnC,KAAKN,MAAMm9D,WAEhD,IAGmBn9D,EAHb2+D,EAAYr+D,KAAKs+D,qBAAqBt+D,KAAKN,MAAMm9D,WACjD6B,EAAc1+D,KAAK2+D,uBAAuB3+D,KAAKN,MAAMm9D,WAY3D,OACI,6BACK78D,KAAKN,MAAMy9D,KACR,yBAAKjxD,WAbExM,EAamBM,KAAKN,MAAMo9D,YAZ/B,SAAVp9D,EACO,6BAEPA,IAAU++D,EACH,6BAEJ,mCAQK,yBAAKvyD,UAAU,kBACX,yDAGJ,yBAAKA,UAAU,gBACX,kBAAC,GAAD,CAAqB+O,WAAYjb,KAAKN,MAAMm9D,UAAWvxD,OAAQ,EAAG4S,SAAUle,KAAKI,MAAM8d,SAAUwF,WAAYg7C,EAAa7+C,aAAcw+C,EAAW/mD,YAAY,MAGrK,M,iCAWd,IAJA,IAAIsnD,EAAqB,GACnBC,EAAqB,IAAI7nD,KAAKuD,GAAoB,IAAIvD,OAASoC,SAC/DolD,EAAoB,IAAIxnD,KAAKuD,GAAoB,IAAIvD,OAAS0D,UAAkC,GAArBmkD,EAA0B,GAAK,GAAK,IAE5Gt7D,EAAQ,EAAGA,EAAQ,EAAGA,IAC3Bq7D,EAAmBt5D,KACf,yBAAK4G,UAAU,4BACVlM,KAAK8+D,cAAcv7D,EAAOi7D,EAA6B,EAARj7D,EAAY,GAAK,GAAK,GAAK,KAC1EvD,KAAK++D,WAAWx7D,KAK7B,OAAOq7D,I,iCAEAl/D,GACP,MAAc,SAAVA,EAEI,yBAAKwM,UAAU,mBACVlM,KAAKg/D,WACLh/D,KAAK++D,cAUP/+D,KAAKi/D,a,6CAII,IACZC,EAAgBvnC,KAAhBunC,YACR,MAAgC,UAA5Bl/D,KAAKN,MAAMi9D,aAEP,kBAACuC,EAAD,CAAarpD,qBAAsB,SAAAC,GAAW,OAAIA,EAAYC,YAAYH,YAAY,mCAKtF,kBAAC,KAAD,CAAYC,qBAAsB,SAAAC,GAAW,OAAIA,EAAYC,YAAYH,YAAa,CAAC,sC,+BAIzF,IACEo8B,EAAWC,KAAXD,OAQR,OACI,6BACI,wBAAI9lC,UAAU,iBACV,wBAAIvL,MAAO,CAAEqO,SAAU,OAAQJ,MAAO,mBAAtC,uBAEJ,yBAAK1C,UAAU,mBACVlM,KAAKm/D,uBACN,kBAAC,KAAD,CAAQxsD,aAAc3S,KAAKN,MAAMi9D,aAAc/pD,SAAU5S,KAAK6yC,cAC1D,kBAACb,EAAD,CAAQzxC,MAAM,QAAd,UACA,kBAACyxC,EAAD,CAAQzxC,MAAM,SAAd,YAGPP,KAAKo/D,WAAWp/D,KAAKN,MAAMi9D,mB,GA7SrBn9D,aC8BR6/D,I,wLAjCP,SAASC,EAAWj3D,GAChB,OAAO,IAAI2O,KAAK3O,GAAM+R,cAAgB,KAAkB,IAAIpD,KAAK3O,GAAM6Q,WAHxD,GAGsE,IAAM,IAAIlC,KAAK3O,GAAM8Q,UALzG,IAeG+E,EAAale,KAAKI,MAAlB8d,SACF7V,GAAO,IAAI2O,MAAO0D,UAExB,OACI,6BACI,yBAAK/Z,MAAO,CAAE6jB,aAAc,QACxB,qCACI,yBAAKtY,UAAU,iBAAf,4BAAqCozD,EAAWj3D,GAAhD,+BAfhB,SAAoBA,GAChB,OAAa,OAATA,EACO,KAGAi3D,EAAWj3D,GAUoDk3D,CAAW,QAE7E,yBAAKrzD,UAAU,eAEnB,yBAAKA,UAAU,kBACX,kBAAC,GAAD,CAAagS,SAAUA,IACvB,kBAAC,GAAD,CAAQA,SAAUA,IAClB,kBAAC,GAAD,CAAUA,SAAUA,IACpB,kBAAC,GAAD,CAAcA,SAAUA,U,GA/BjB1e,cC4cZggE,G,2MA5bX9/D,MAAQ,CACJ+/D,KAAM,EAAKr/D,MAAMC,SAASo/D,KAC1B/gD,aAAc,GACd2U,QAAS,GACTqsC,OAAQ,GACRpsD,KAAM,GACN0e,KAAM,GACNze,MAAO,GACPosD,UAAW,iCACX5vD,SAAS,EACT6O,UAAW,KACXoU,KAAM,KACNniB,cAAe,I,EAgDnB8gB,aAAe,SAACiuC,GACZ,IACMnrC,EADW,EAAK/0B,MAAMmgE,SACAv8D,QAAO,SAAUqG,EAAMpG,EAAO6B,GACtD,OAAOzB,SAASgG,EAAK+I,UAAYktD,KAErC,GAA0B,IAAtBnrC,EAAW/wB,OACX,OAAO,KAGP,IAAM4H,EAASmpB,EAAW,GACpBhuB,EAAQ6E,EAAOxD,SACfkgB,EAAS1c,EAAOtD,QAChB83D,EAAWr2D,GAA6BhD,GACzCiD,MAAK,SAAA3F,GACF,MAAO,CACH2a,aAAc3a,EAAKA,SAG1B+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,6BAA+BsL,KAAKC,UAAU3D,OAE5DspB,EAAU5pB,GAA4Bue,GACvCte,MAAK,SAAA3F,GACF,OAAOA,EAAKA,QAEf+F,OAAM,SAAAC,GACH7H,QAAQC,IAAI,gCAAkCsL,KAAKC,UAAU3D,OAE/DipB,EAAOvpB,GAAyBue,GACjCte,MAAK,SAAA3F,GACF,IAAMg8D,EAAWh8D,EAAKA,KACtB,OAAOg8D,EAASA,EAASr8D,OAAS,MAErCoG,OAAM,SAAAC,GACH7H,QAAQC,IAAI,6BAA+BsL,KAAKC,UAAU3D,OAElEM,QAAQC,IAAI,CAACw1D,EAAUzsC,EAASL,IAC3BtpB,MAAK,SAAAa,GAEF,OADA,EAAKy1D,kBAAkBh4C,EAAQzd,EAAO,GAAGmU,cAClC,CACHA,aAAcnU,EAAO,GAAGmU,aAExB2U,QAAS9oB,EAAO,GAChByoB,KAAMzoB,EAAO,OAGpBb,MAAK,SAAAa,GACF,EAAKtK,SAAS,CACVye,aAAcnU,EAAOmU,aACrB2U,QAAS9oB,EAAO8oB,QAChBL,KAAMzoB,EAAOyoB,UAGpBlpB,OAAM,SAAAC,GACH7H,QAAQC,IAAI,a,EAgD5ByQ,SAAW,SAACqtD,GACR,EAAKhgE,SAAS,CACV0/D,UAAWM,K,EAKnBjvD,UAAY,WACR,EAAK/Q,SAAS,CACV8P,SAAS,K,EAIjBoD,SAAW,SAAApC,GACP,EAAK9Q,SAAS,CACV8P,SAAS,K,EAIjBe,aAAe,SAAAC,GACX,EAAK9Q,SAAS,CACV8P,SAAS,K,EAgCjBsiB,eAAiB,SAACtuB,GACd,IAAMouB,EAAY,CACd,MAAS,2BACT,QAAW,6CACX,KAAQ,iCACR,MAAS,sBACT,QAAW,kCACX,MAAS,sBACT,QAAW,kCACX,IAAO,6CACP,MAAS,2BACT,IAAO,6CACP,MAAS,iCACT,MAAS,iCACT,KAAQ,iCACR,OAAU,kCAGRC,EAAc,GAEpB,IAAK,IAAI7uB,KAAS4uB,EACM,KAAhBpuB,EAAKR,IACL6uB,EAAY9sB,KAAK,CAAC6sB,EAAU5uB,GAAQQ,EAAKR,KAIjD,OAAO6uB,G,mFAlOP,IAAMpK,EAAShoB,KAAKI,MAAMC,SAASX,MAAMsoB,OACnCvhB,EAAQzG,KAAKI,MAAMC,SAASX,MAAM+G,MACxCzG,KAAKkgE,gBAAgBz5D,EAAOuhB,K,sCAEhBza,EAAK0kB,GAAM,IvGwiBPhsB,EuGxiBM,OACtBwD,GAAyBwoB,GACpBvoB,MAAK,SAAA3F,GACF7B,QAAQC,IAAI4B,EAAKA,MACjB,IAAMwG,EAASxG,EAAKA,KACpB,EAAK9D,SAAS,CAAE+yB,KAAMzoB,EAAOA,EAAO7G,OAAS,GAAIkb,UAAWrU,EAAO,QAEtET,OAAM,SAAAC,GACH7H,QAAQC,IAAI,6BAA+BsL,KAAKC,UAAU3D,OAElEN,GAA4BwoB,GACvBvoB,MAAK,SAAA3F,GAAU,EAAK9D,SAAS,CAAEozB,QAAStvB,EAAKA,UAC7C+F,OAAM,SAAAC,GAAS7H,QAAQC,IAAI,gCAAkCsL,KAAKC,UAAU3D,OACjFN,GAA6B8D,GACxB7D,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CAAEye,aAAc3a,EAAKA,OACnC,IvG4iBUkC,EAAQC,EAAIC,EuG5iBhBuY,EAAe3a,EAAKA,KACpBw1C,EAAYz3C,IAAO4c,EAAakhB,SAAU,YAAY1xB,OAAO,gBAC7DozC,EAAUx/C,MAASoM,OAAO,iBvG0iBtBjI,EuGziBYgsB,EvGyiBJ/rB,EuGziBSqzC,EvGyiBLpzC,EuGziBgBm7C,EvG0iB7C77C,IAAMC,IAAI,UAAYO,EAAS,IAAMC,EAAK,IAAMC,IuGziBpCuD,MAAK,SAAAa,GACF,IAAMgJ,EAAQqtB,EAAkBr2B,EAAOxG,MACvC,EAAK9D,SAAS,CAAEsT,MAAOA,OAE1BzJ,OAAM,SAAAC,GACH7H,QAAQC,IAAI,0BAA4BsL,KAAKC,UAAU3D,UAGlED,OAAM,SAAAC,GAAS7H,QAAQC,IAAI,6BAA+BsL,KAAKC,UAAU3D,OAC9EN,EAA+B8D,GAC1B7D,MAAK,SAAA3F,GAAU7B,QAAQC,IAAI4B,EAAKA,MAAO,EAAK9D,SAAS,CAAE4Q,cAAe9M,EAAKA,UAC3E+F,OAAM,SAAAC,GAAS7H,QAAQC,IAAI4H,MAChCN,EAAoBwoB,GACfvoB,MAAK,SAAA3F,GAAU,EAAK9D,SAAS,CAAE+xB,KAAM4O,EAAkB78B,EAAKA,WAC5D+F,OAAM,SAAAC,GAAS7H,QAAQC,IAAI4H,OvGsgBhB9D,EuGrgBIgsB,EvGsgBnBxsB,IAAMC,IAAI,QAAUO,IuGrgBhByD,MAAK,SAAA3F,GAAU,EAAK9D,SAAS,CAAEqT,KAAMstB,EAAkB78B,EAAKA,WAC5D+F,OAAM,SAAAC,GAAS7H,QAAQC,IAAI,6BAA+BsL,KAAKC,UAAU3D,S,wCAgEhEie,EAAQtJ,GAAe,IAAD,OACxB,IAAIza,IAChBwF,EAAoBue,GACfte,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CACV+xB,KAAM4O,EAAkB78B,EAAKA,WAGpC+F,OAAM,SAAAC,GAAS7H,QAAQC,IAAI4H,MA4BhC/J,KAAKC,SAAS,CAAEsT,MAAOuP,GAAgB1e,OAAOG,SAASC,Y,2CA+CvD,IAAM27D,EAAUngE,KAAKI,MAAMC,SAASX,MAAM4L,OAClC0mC,EAAWC,KAAXD,OACFouB,EAAYxgE,OAAOI,KAAKI,MAAMC,SAASX,MAAM0gE,WACnD,OAAgB,OAAZD,EAEI,kBAAC,KAAD,CAAQxtD,aAAc/S,OAAOwgE,GAAYz/D,MAAO,CAAEmS,MAAO,KAAOF,SAAU5S,KAAK2xB,cAC7DwuC,EAdKl0D,KAAI,SAAUtC,EAAMpG,EAAO6B,GAClD,OACI,kBAAC4sC,EAAD,CAAQ9xC,IAAKqD,EAAOhD,MAAOX,OAAO+J,EAAK+I,SAAvC,gBATKnS,EASsDoD,SAASgG,EAAK+I,SARrE,GACD,IAAMnS,EAEVA,GAJX,IAAiBA,MAyBV,O,+BA+BP,SAAS8/D,EAAU9/D,GACf,OAAI4C,MAAMC,QAAQ7C,GACO,IAAjBA,EAAMmD,OAKA,OAAVnD,QAA4B6B,IAAV7B,GAAiC,KAAVA,EAR5C,MAauBP,KAAKN,MAAzBszB,EAbH,EAaGA,KACR,IAAKqtC,EAdA,EAaSzhD,aACgByhD,EAAUrtC,GACpC,OAAO,kBAAC,KAAD,CAAMvvB,KAAK,YAMtB,SAAS4P,EAAcxC,EAAeyC,EAAMC,EAAOpB,GAG/C,OAFAjQ,QAAQC,IAAI0O,GAEiB,IAAzBA,EAAcnN,QACdxB,QAAQC,IAAImR,GAEQ,IAAhBA,EAAK5P,OACE,CACHV,gBAAYZ,EACZiQ,eAAWjQ,EACXkQ,cAAUlQ,GAMX,CACHY,WAJeoL,EAAqBmF,EAAOpB,GAK3CE,UAJczS,OAAO0T,EAAK,GAAGE,OAK7BlB,SAJa1S,OAAO0T,EAAK,GAAGG,QAWzB,CACHzQ,WAJ8C,IAAnCpD,OAAOiR,EAAc,GAAGe,SAKnCS,UAJczS,OAAOiR,EAAc,GAAGgB,OAKtCS,SAJa1S,OAAOiR,EAAc,GAAGiB,OAQjD,SAASsB,EAAY7S,GACjB,MAAc,KAAVA,GAA0B,OAAVA,QAA4B6B,IAAV7B,EAC3B,KAEJA,EAAMyE,WAQjB,IAAMs7D,EAAWtgE,KAAKN,MAAMgf,aAC5B,GAAwB,IAApB4hD,EAAS58D,OACT,OAAO,kBAAC,KAAD,CAAMD,KAAK,YAEtB,IAAM28D,EAAYxgE,OAAOI,KAAKI,MAAMC,SAASX,MAAM0gE,WAC7Cp4C,EAAShoB,KAAKI,MAAMC,SAASX,MAAMsoB,OACnCvhB,EAAQzG,KAAKI,MAAMC,SAASX,MAAM+G,MAElC85D,GADUvgE,KAAKN,MAAM2zB,QACdrzB,KAAKN,MAAMszB,MAClBqF,EAAckoC,EAAKC,OAAOx7D,WAC1By7D,EAAYF,EAAK9Q,OAAOzqD,WACxB6e,EAAY,OAAS48C,EAAYpoC,EAC/BqoC,EAAYC,KAAZD,QAEFvuD,EAAWmuD,EAAS1gC,SAhFrB,EAiFkC5/B,KAAKN,MAApCmR,EAjFH,EAiFGA,cAAeyC,EAjFlB,EAiFkBA,KAAMC,EAjFxB,EAiFwBA,MACvBvQ,EAAaqQ,EAAcxC,EAAeyC,EAAMC,EAAOpB,GAAUnP,WACjEqP,EAAYgB,EAAcxC,EAAeyC,EAAMC,EAAOpB,GAAUE,UAChEC,EAAWe,EAAcxC,EAAeyC,EAAMC,EAAOpB,GAAUG,SAC/DuB,EAAS+sB,EAAuBrtB,GAKtCrR,QAAQC,IAAInC,KAAKI,MAAMC,SAASX,MAAMY,aAGtC,IAGM4d,EAAW,CACb,MAASzX,EACT,OAAUuhB,EACV,UAAa3V,EACb,SAAYC,EACZ,UAAauR,EACb,UAAa48C,EACb,OAVeltD,EAAMjQ,QAAO,SAAUqG,EAAMpG,EAAOqG,GACnD,MAAqB,OAAdD,EAAKlG,QAUZ,aAAgB68D,EAChB,UAAatgE,KAAKN,MAAMkf,WAE5B1c,QAAQC,IAAIoR,GACZ,IAAM2e,EAAgBlyB,KAAKqyB,eAAeryB,KAAKN,MAAMsyB,MAM/Cle,EAAY8sB,EALH,CACX7+B,KAAMD,IAAOqQ,EAAU,YAAY9M,UACnChD,KAAMgQ,EACN/P,IAAKgQ,IAoBT,IAxEyB/R,EAwEnBqgE,EAhBN,SAAuBtgE,EAAaugE,EAAcJ,GAC9C,IAAoB,IAAhBngE,EAAsB,CACtB,QAAqB8B,IAAjBy+D,GAA+C,OAAjBA,EAAuB,CACrD3+D,QAAQC,IAAIs+D,GACZ,IAAM7lC,EAAM94B,IAAO++D,EAAc,YAC3BlmC,EAAQ74B,IAAO2+D,EAAW,YAEhC,MAAO,0CADS7lC,EAAI34B,KAAK04B,EAAO,QACD,SAEnC,MAAO,KAEX,IAAMC,EAAM94B,MACN64B,EAAQ74B,IAAO2+D,EAAW,YAEhC,MAAO,wBADS7lC,EAAI34B,KAAK04B,EAAO,QACJ,SAEhBmmC,CAAc9gE,KAAKI,MAAMC,SAASX,MAAMY,YAAaN,KAAKI,MAAMC,SAASX,MAAM42B,aAAcmqC,GAC7G,OACI,6BACI,yBAAK9/D,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,gBAAiBpS,WAAY,SAAUE,OAAQ,OAAQwY,UAAW,OAAQ9E,QAAS,MAAO2O,oBAAqB,MAAOC,qBAAsB,MAAO/N,gBAAiB,cAE/M,yBAAK3U,MAAO,CAAEoO,WAAY,MAAOH,MAAO,QAASI,SAAU,SAA3D,QACUI,GAAgBxP,OAAOwgE,IAC7B,0BAAMz/D,MAAO,CAAEqwB,WAAY,OAAQhiB,SAAU,OAAQyF,QAAS,YAAc6rD,EAASruD,OAAOjN,WAAWC,QACtGwB,GAEL,iDACO,0BAAM9F,MAAO,CAAEoO,WAAY,MAAOH,MAAO,UAAY9M,IAAOqQ,EAAU,YAAYjE,OAAO,gBAEhG,8DACWkF,EAAYf,GADvB,IACoCe,EAAYd,GADhD,MAC6D,0BAAM3R,MAAO,CAAEoO,WAAY,MAAOH,MAAO,UAAYkF,IAElH,8DAvFM,MADOvT,EAyFcyC,IAxFL,OAAVzC,QAA4B6B,IAAV7B,GAAiC,IAAVA,EAClD,GAEJA,EAAMyE,WAAa,YAqFqB,0BAAMrE,MAAO,CAAEoO,WAAY,MAAOH,MAAO,UAAYwE,EAAYS,GAAjE,MAEvC,wBAAIlT,MAAO,CAAEoO,WAAY,MAAOH,MAAO,UAAYgyD,GACnD,wBAAIjgE,MAAO,CAAEiO,MAAO,OAAQijB,eAAgB,YAAa7d,OAAQ,WAAad,QAASlT,KAAKgR,WAA5F,4BACA,kBAAC,KAAD,CACIjO,MAAM,uCACNgN,QAAS/P,KAAKN,MAAMqQ,QACpByF,KAAMxV,KAAKmT,SACXJ,SAAU/S,KAAK8Q,aACfgC,MAAO,IACPE,OAAQ,MACR,kBAAC,GAAD,CAAakL,SAAUA,EAAUgU,cAAeA,MAIxD,kBAAC,KAAD,CAAM6uC,iBAAkB/gE,KAAKN,MAAMigE,UAAWqB,YAAa,MAAOpuD,SAAU5S,KAAK4S,UAC7E,kBAAC8tD,EAAD,CAASO,IAAI,iCAAQ/gE,IAAI,kCACrB,kBAAC,GAAD,CAAoBk/B,mBAAoBp/B,KAAKkhE,SAAUhjD,SAAUA,KAErE,kBAACwiD,EAAD,CAASO,IAAI,iCAAQ/gE,IAAI,kCACrB,kBAAC,GAAD,CAAiBge,SAAUA,KAE/B,kBAACwiD,EAAD,CAASO,IAAI,iCAAQ/gE,IAAI,kCACrB,kBAAC,GAAD,CAAiBge,SAAUA,KAE/B,kBAACwiD,EAAD,CAASO,IAAI,iCAAQ/gE,IAAI,kCACrB,kBAAC,GAAD,CAAYge,SAAUA,GAAtB,MAEJ,kBAACwiD,EAAD,CAASO,IAAI,iCAAQ/gE,IAAI,kCACrB,kBAAC,GAAD,CAAWge,SAAUA,GAArB,MAEJ,kBAACwiD,EAAD,CAASO,IAAI,iCAAQ/gE,IAAI,kCACrB,kBAAC,GAAD,CAAUge,SAAUA,GAApB,MAEJ,kBAACwiD,EAAD,CAASO,IAAI,2BAAO/gE,IAAI,4BACpB,kBAAC,GAAD,CAAQge,SAAUA,GAAlB,MAEJ,kBAACwiD,EAAD,CAASO,IAAI,2BAAO/gE,IAAI,4BACpB,kBAAC,GAAD,CAAage,SAAUA,GAAvB,MAEJ,kBAACwiD,EAAD,CAASO,IAAI,2BAAO/gE,IAAI,4BACpB,kBAAC,GAAD,CAAege,SAAUA,GAAzB,MAEJ,kBAACwiD,EAAD,CAASO,IAAI,uCAAS/gE,IAAI,wCACtB,kBAAC,GAAD,CAAcge,SAAUA,GAAxB,Y,GArbQ1e,aCnBxB2hE,GAAYC,KAAZD,QA6UOE,G,YA1UX,WAAYjhE,GAAQ,IAAD,8BACf,+CAMJV,MAAQ,CACJs1B,WAAY,EACZ1jB,KAAM,GACNyC,KAAM,EACNutD,aAASl/D,EACTm/D,SAAU,GACVC,MAAO,CAAC,6FAAmB,yGAAqB,8FAChDC,UAAW,CAAC,iCAAS,iCAAS,kCAC9B1xD,SAAS,EACT2xD,WAAY,EACZC,UAAU,EACVC,cAAe,GACfC,cAAe,GACfC,UAAW,GACXC,cAAe,GACfpiE,WAAY,GAtBG,EA2CnBqiE,cAAgB,SAAAjxD,GACZ,EAAK9Q,SAAS,CACVyhE,WAAY3wD,EAAE6F,OAAOrW,QACtB,WAC+B,IAA1B,EAAKb,MAAMgiE,WACX,EAAKzhE,SAAS,CACV0hE,UAAU,IAEmB,IAA1B,EAAKjiE,MAAMgiE,YAClB,EAAKzhE,SAAS,CACV0hE,UAAU,QArDP,EA2DnB3wD,UAAY,WACR,EAAK/Q,SAAS,CACV8P,SAAS,KA7DE,EAiEnBe,aAAe,SAAAC,GACX,EAAK9Q,SAAS,CACV8P,SAAS,KAnEE,EAgJnB8iC,aAAe,SAACtyC,GACZ,EAAKN,SAAS,CAAE8T,KAAMxT,KAjJP,EA4KnB84B,UAAY,WAAO,IACP2Y,EAAWC,KAAXD,OAER,OACI,yBAAKrxC,MAAO,CAAEC,QAAS,OAAQC,WAAY,WACvC,yBAAKF,MAAO,CAAEC,QAAS,OAAQC,WAAY,WACvC,yBAAKF,MAAO,CAAEqO,SAAU,SAAxB,iBAGA,yBAAKrO,MAAO,CAAEG,WAAY,SACtB,kBAAC,KAAD,CAAQ6R,aAAc,EAAKjT,MAAMqU,KAAMpT,MAAO,CAAEmS,MAAO,KAAOF,SAAU,EAAKigC,cACzE,kBAACb,EAAD,CAAQzxC,MAAO,GAAf,kCACA,kBAACyxC,EAAD,CAAQzxC,MAAO,GAAf,kCACA,kBAACyxC,EAAD,CAAQzxC,MAAO,GAAf,qCAIZ,yBAAKI,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,WAAY,SAC7D,yBAAKH,MAAO,CAAEqO,SAAU,SAAxB,iBAGA,yBAAKrO,MAAO,CAAEG,WAAY,SACtB,kBAAC,KAAD,CAAO8U,YAAY,uCAAShD,SAAU,EAAKqvD,iBA/L3D,EAAKC,YAAc,EAAKA,YAAY3rD,KAAjB,iBACnB,EAAK4rD,oBAAsB,EAAKA,oBAAoB5rD,KAAzB,iBAJZ,E,iFAyBE,IAAD,OAChBvW,KAAKiiE,WAAajiE,KAAKiiE,WAAW1rD,KAAKvW,MACvCA,KAAKoiE,cAAgBpiE,KAAKoiE,cAAc7rD,KAAKvW,MAC7CA,KAAKqiE,cAAgBriE,KAAKqiE,cAAc9rD,KAAKvW,MAC7CA,KAAK6hE,cAAgB7hE,KAAK6hE,cAActrD,KAAKvW,MAC7CA,KAAK8hE,UAAY9hE,KAAK8hE,UAAUvrD,KAAKvW,MACrCA,KAAK+hE,cAAgB/hE,KAAK+hE,cAAcxrD,KAAKvW,MAE7CyJ,IACKC,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CAAEshE,SAAUx9D,EAAKA,UAElC+F,OAAM,SAAAC,OAEX,IAAMhK,EAAcF,eAAeC,QAAQ,QAC3CE,KAAKC,SAAS,CAAEN,WAAYI,M,sCA+BhB22B,GACZ12B,KAAKC,SAAS,CACV+0B,WAAY0B,M,sCAIH,IAAD,SACe12B,KAAKN,MAAxB6hE,EADI,EACJA,SAAUxtD,EADN,EACMA,KACdoQ,EAAUo9C,EASd,OAPY,GAARxtD,IACAoQ,EAAUA,EAAQ7gB,QAAO,SAAAS,GAAI,OAAIA,EAAKgQ,MAASA,EAAO,MAGlC,KAApB/T,KAAKN,MAAM4R,OACX6S,EAAUA,EAAQ7gB,QAAO,SAAAS,GAAI,OAAwC,MAApCA,EAAKuN,KAAKnR,MAAM,EAAKT,MAAM4R,UAEzD6S,I,oCAGI,IAAD,QxGgBX,SAAkB7S,EAAMgxD,EAAUvuD,EAAMwuD,EAAUC,GACvD,IAAMl6D,EAAO,CACXgJ,KAAMA,EACNgxD,SAAUA,EACVvuD,KAAMA,EACNwuD,SAAUA,EACVC,SAAUA,GAEZ,OAAO/8D,IAAM8C,KAAK,WAAYD,IwGvBxBmB,CAAqBzJ,KAAKN,MAAMoiE,UAAW,GAAI9hE,KAAKN,MAAM4hE,QAASthE,KAAKN,MAAMkiE,cAAe,QACxFl4D,MAAK,SAAA3F,GACF0F,IACKC,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CAAEshE,SAAUx9D,EAAKA,KAAM69D,cAAe,GAAIC,cAAe,GAAIC,UAAW,GAAIC,cAAe,QAE5Gj4D,OAAM,SAAAC,UAEdD,OAAM,SAAAC,OACX/J,KAAKC,SAAS,CACV8P,SAAS,M,wCAKCuB,EAAMmxD,EAAS1uD,EAAM2uD,GACnC,IAAMC,EAAY3iE,KAAKC,SAASsW,KAAKvW,MACrCmhE,GAAQ,CACJp+D,MAAO,4EACPwlC,QAAS,kDAASj3B,EAAK,6BAAd,qBAAwBoxD,EAAW,6BAAnC,qBAA6CD,GACtD90B,OAAQ,MACRi1B,OAAQ,SACRh1B,WAAY,KACZp4B,KANI,YxG9BT,SAAoBlE,EAAMyC,EAAMwuD,GACrC,OAAO98D,IAAM8xB,OAAO,WAAajmB,EAAO,IAAMyC,EAAO,IAAMwuD,IwGoC7C94D,CAAuB6H,EAAMyC,EAAM0uD,GAAS/4D,MAAK,SAAA3F,GAC7C0F,IACKC,MAAK,SAAA3F,GACF4+D,EAAU,CAAEpB,SAAUx9D,EAAKA,UAE9B+F,OAAM,SAAAC,UACZD,OAAM,SAAAC,QAEbgJ,SAfI,iB,gCAoBF7S,EAAKoR,EAAMmxD,EAAS1uD,EAAM2uD,GAChC,OAAIxiE,IAAQF,KAAKN,MAAMs1B,WAEf,yBAAKr0B,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,UAAWC,cAAe,SAC1E,6BACI,kBAAC,KAAD,CAAQiS,QAASlT,KAAK6iE,kBAAkBtsD,KAAKvW,KAAMsR,EAAMmxD,EAAS1uD,EAAM2uD,GAAaj/D,KAAK,UAA1F,kBAOJ,O,0CAOIlD,GAChBP,KAAKC,SAAS,CAAEqhE,QAAS/gE,M,iCAGlBoW,GACP3W,KAAKC,SAAS,CAAEqR,KAAMqF,EAAMC,OAAOrW,U,oCAGzBoW,GACV3W,KAAKC,SAAS,CAAE2hE,cAAejrD,EAAMC,OAAOrW,U,oCAGlCoW,GACV3W,KAAKC,SAAS,CAAE4hE,cAAelrD,EAAMC,OAAOrW,U,gCAGtCoW,GACN3W,KAAKC,SAAS,CAAE6hE,UAAWnrD,EAAMC,OAAOrW,U,oCAG9BoW,GACV3W,KAAKC,SAAS,CAAE8hE,cAAeprD,EAAMC,OAAOrW,U,+BA+BtC,IAAD,OA0CCuiE,EAFU9iE,KAAKoiE,gBAEIn2D,KAAI,SAAClI,EAAMR,GAChC,IAAIm/D,EACAK,EAKJ,OAHAL,EAAa,EAAKhjE,MAAM+hE,UAAU19D,EAAKgQ,MACvCgvD,EAAc,EAAKrjE,MAAM8hE,MAAMz9D,EAAKgQ,MAE7B,CACH,CACI7T,MAAOqD,EACPoS,GAAIpS,EACJ+N,KAAMvN,EAAKuN,KACXyC,KAAM2uD,EACNlB,MAAOuB,EACPN,QAAS1+D,EAAKw+D,SACdC,SAAUz+D,EAAKy+D,SACf5yD,WAAY,EAAKkpB,UAAUv1B,EAAOQ,EAAKuN,KAAMvN,EAAKw+D,SAAUx+D,EAAKgQ,KAAM2uD,QAK/EM,EAAa,GAAGC,OAAOzjB,MAAM,GAAIsjB,GAC7B9wB,EAAWC,KAAXD,OAUR,OACI,6BACI,yBAAKrxC,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,gBAAiBpS,WAAY,WACvEb,KAAKq5B,YACN,yBAAK14B,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WACjE,kBAAC,KAAD,CAAQF,MAAO,CAAEmS,MAAO,QAAUI,QAASlT,KAAKgR,WAAhD,4BACA,kBAAC,KAAD,CACIjO,MAAM,2BACNgN,QAAS/P,KAAKN,MAAMqQ,QACpByF,KAAMxV,KAAKkiE,YACXnvD,SAAU/S,KAAK8Q,aACfgC,MAAM,SAEN,yBAAKnS,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,YAGrE,yBAAKF,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,SAAU0Y,UAAW,SACtF,yBAAK5Y,MAAO,CAAEG,WAAY,SAA1B,iCAEA,kBAAC,KAAD,CAAO6U,GAAG,WAAWpV,MAAOP,KAAKN,MAAMkiE,cAAehvD,SAAU5S,KAAKqiE,cAAezsD,YAAY,2BAAOjV,MAAO,CAAEmS,MAAO,YAEvH,yBAAKnS,MAAO,CAAEG,WAAY,SAA1B,qBAEA,kBAAC,KAAD,CAAO6U,GAAG,OAAOC,YAAY,2BAAOrV,MAAOP,KAAKN,MAAMoiE,UAAWlvD,SAAU5S,KAAK8hE,UAAWnhE,MAAO,CAAEmS,MAAO,aAG/G,yBAAKnS,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,SAAU0Y,UAAW,OAAQzY,WAAY,SAC1G,yBAAKH,MAAO,CAAEG,WAAY,QAA1B,qBACQd,KAAKN,MAAMiiE,SACX,kBAAC,KAAD,CAAQ/rD,YAAY,2BAAOjV,MAAO,CAAEmS,MAAO,KAAOF,SAAU5S,KAAKmiE,oBAAoB5rD,KAAKvW,OACtF,kBAACgyC,EAAD,CAAQzxC,MAAO,GAAf,kCACA,kBAACyxC,EAAD,CAAQzxC,MAAO,GAAf,mCAEJ,kBAAC,KAAD,CAAQqV,YAAY,2BAAOjV,MAAO,CAAEmS,MAAO,KAAOF,SAAU5S,KAAKmiE,oBAAoB5rD,KAAKvW,OACtF,kBAACgyC,EAAD,CAAQzxC,MAAO,GAAf,iDAIhB,iCAKZ,yBAAKI,MAAO,CAAE4Y,UAAW,SACrB,kBAAC,KAAD,CAAOigB,QApHH,CACZ,CACIz2B,MAAO,eACP02B,UAAW,KACXv5B,IAAK,KACL4S,MAAO,OAEX,CACI/P,MAAO,eACP02B,UAAW,OACXv5B,IAAK,OACL4S,MAAO,OAEX,CACI/P,MAAO,2BACP02B,UAAW,UACXv5B,IAAK,UACL4S,MAAO,OAEX,CACI/P,MAAO,eACP02B,UAAW,OACXv5B,IAAK,OACL4S,MAAO,OAEX,CACI/P,MAAO,eACP02B,UAAW,QACXv5B,IAAK,QACL4S,MAAO,OAEX,CACI2mB,UAAW,aACXv5B,IAAK,aACL4S,MAAO,OAkFsB4mB,WAAYspC,EAAYrpC,MAAO,SAAAjD,GACpD,MAAO,CACHkD,aAAc,SAAAjjB,GAAW,EAAKkjB,gBAAgBnD,EAAOx2B,MACrD45B,aAAc,SAAAnjB,GAAW,EAAKkjB,gBAAgB,c,GAlU/Cr6B,a,UCuGZ0jE,G,2MAxGXxjE,MAAQ,CACJs1B,WAAY,G,+EAGA0B,GACZ12B,KAAKC,SAAS,CACV+0B,WAAY0B,M,+BAIV,IAAD,OAEC+qC,EAAY,CAAC,iCAAS,iCAAS,kCAC/B0B,EAAiBnjE,KAAKI,MAAMgjE,aAAan3D,KAC3C,SAACtC,EAAMpG,GACH,IAAI8/D,EACA3mD,EAAW/S,EAAKtB,KAAKsd,MAAM,KAAK,GAAK,IAAMhc,EAAKtB,KAAKsd,MAAM,KAAK,GAAGA,MAAM,KAAK,GAIlF,OAFA09C,EAAc5B,EAAU93D,EAAKoK,MAEtB,CACH7T,IAAKqD,EACL8E,KAAMqU,EACN/F,MAAO,QAAUhN,EAAK2H,KAAO,IAAM+xD,EAAc,qBAKvDC,EAAetjE,KAAKI,MAAMmjE,WAAWt3D,KAAI,SAAClI,EAAMR,GAClD,GAAa,OAATQ,EAAe,CAGf,IAFA,IAAIhC,EAAOgC,EAAK4hB,MAAM,OAAO,GAAGA,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAGA,MAAM,KAC1E69C,EAAS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACpFC,EAAI,EAAGA,EAAID,EAAO9/D,OAAQ+/D,IAC3B1hE,EAAK,KAAOyhE,EAAOC,KACnB1hE,EAAK,GAAKyhE,EAAOv4D,QAAQu4D,EAAOC,IAAM,GAS9C,OANI1hE,EAAK,GAAK,KACVA,EAAK,GAAK,IAAMA,EAAK,IAKlB,CACH7B,IAAKqD,EACL8E,KALOtG,EAAK,GAAG4jB,MAAM,KAAK,GAAK,IAAM5jB,EAAK,GAAK,IAAMA,EAAK,GAAK,IAAMA,EAAK,GAAG4jB,MAAM,KAAK,GAAK,IAAM5jB,EAAK,GAAG4jB,MAAM,KAAK,GAAK,IAAM5jB,EAAK,GAAG4jB,MAAM,KAAK,GAMpJhP,MALU5S,EAAK4hB,MAAM,OAAO,GAAGA,MAAM,KAAK,IAQlD,OAAO,QAGL6T,EAAU,CACZ,CACIz2B,MAAO,2BACP02B,UAAW,OACXv5B,IAAK,OACL4S,MAAO,MAEX,CACI/P,MAAO,eACP02B,UAAW,QACXv5B,IAAK,QACL4S,MAAO,QAYf,OACI,yBAAKnS,MAAO,CAAE4Y,UAAW,SAEjBvZ,KAAKI,MAAMsjE,YAAc,kBAAC,KAAD,CAAOlqC,QAASA,EAASE,WAAY4pC,EAAc3pC,MAAO,SAAAjD,GAC/E,MAAO,CACHkD,aAAc,SAAAjjB,GAAW,EAAKkjB,gBAAgBnD,EAAOx2B,MACrD45B,aAAc,SAAAnjB,GAAW,EAAKkjB,gBAAgB,MAEnD8pC,WAAY,CACX/wD,SAAU,SAACgxD,EAAMC,GACb,EAAKzjE,MAAM0jE,SAASF,OAGxB,kBAAC,KAAD,CAAOpqC,QAASA,EAASE,WAAYypC,EAAgBxpC,MAAO,SAAAjD,GACxD,MAAO,CACHkD,aAAc,SAAAjjB,GAAW,EAAKkjB,gBAAgBnD,EAAOx2B,MACrD45B,aAAc,SAAAnjB,GAAW,EAAKkjB,gBAAgB,MAEnD8pC,WAAY,CACX/wD,SAAU,SAACgxD,EAAMC,GACb,EAAKzjE,MAAM0jE,SAASF,Y,GAhGvBpkE,aC+FdukE,G,2MA3FXrkE,MAAQ,CAAEgJ,UAAW,GAAIC,QAAS,GAAIq7D,WAAY,EAAGC,WAAY,EAAGC,QAAS,EAAGC,OAAQ,EAAGf,aAAc,GAAIG,WAAY,GAAIK,KAAM,G,mFAE9G,IAAD,O1GuFfn+D,IAAMC,IAAI,Y0GrFNgE,MAAK,SAAA3F,GACF,IAAMigE,EAAajgE,EAAKA,KAAK,GAAGqgE,MAAQ,KAAO,KAAO,KAChDH,GAAclgE,EAAKA,KAAK,GAAGqgE,MAAQrgE,EAAKA,KAAK,GAAGsgE,OAAS,KAAO,KAAO,KACvEH,EAAWD,EAAaD,EAAc,IAC5C,EAAK/jE,SAAS,CAAE+jE,WAAYA,EAAWvyD,QAAQ,GAAIwyD,WAAYA,EAAWxyD,QAAQ,GAAIyyD,QAASA,EAAQzyD,QAAQ,QAElH3H,OAAM,SAAAC,OACX/J,KAAK6yC,aAAe7yC,KAAK6yC,aAAat8B,KAAKvW,Q,+BAGtC+B,EAAMy1B,GAAa,IAAD,OACvBx3B,KAAKC,SAAS,CAAEyI,UAAW8uB,EAAW,GAAI7uB,QAAS6uB,EAAW,KAAM,WACtC,IAAtB,EAAK93B,MAAMykE,OACX,EAAKG,oBACwB,IAAtB,EAAK5kE,MAAMykE,QAClB,EAAKI,uB,0CAKI,I1G4GG77D,EAAWC,E0G5Gf,OAChB,GAA6B,KAAzB3I,KAAKN,MAAMgJ,WAA2C,KAAvB1I,KAAKN,MAAMiJ,QAAgB,CAC1D,IAAMzC,EAAK,IAAI8Q,KAAKhX,KAAKN,MAAMgJ,UAAUid,MAAM,KAAK,GAAI3lB,KAAKN,MAAMgJ,UAAUid,MAAM,KAAK,GAAK,EAAG3lB,KAAKN,MAAMgJ,UAAUid,MAAM,KAAK,IAAInH,cAAcmH,MAAM,KAAK,GACvJxf,EAAK,IAAI6Q,KAAKhX,KAAKN,MAAMiJ,QAAQgd,MAAM,KAAK,GAAI3lB,KAAKN,MAAMiJ,QAAQgd,MAAM,KAAK,GAAK,EAAG3lB,KAAKN,MAAMiJ,QAAQgd,MAAM,KAAK,IAAInH,cAAcmH,MAAM,KAAK,I1GyGvIjd,E0GvGQxC,E1GuGGyC,E0GvGCxC,E1GwG/BV,IAAMC,IAAI,eAAiBgD,EAAY,IAAMC,I0GvGrCe,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CAAEmjE,aAAcr/D,EAAKA,KAAMw/D,WAAY,QAExDz5D,OAAM,SAAAC,U,wCAIA,I1GoGGqmB,E0GpGJ,OACe,KAAzBpwB,KAAKN,MAAMgJ,WAA2C,KAAvB1I,KAAKN,MAAMiJ,U1GmG5BynB,E0GlGQpwB,KAAKN,MAAMgJ,U1GmGpCjD,IAAMC,IAAI,aAAe0qB,I0GlGjB1mB,MAAK,SAAA3F,GACF,EAAK9D,SAAS,CAAEsjE,WAAYx/D,EAAKA,KAAMq/D,aAAc,QAExDt5D,OAAM,SAAAC,S,+BAIVy6D,GACLxkE,KAAKC,SAAS,CAAE2jE,KAAMY,M,mCAGbjkE,GACTP,KAAKC,SAAS,CAAEkkE,OAAQ5jE,M,+BAElB,IACEyxC,EAAWC,KAAXD,OACAta,EAAgBC,KAAhBD,YACF9kB,EAAW5S,KAAK4S,SAAS2D,KAAKvW,MAEpC,OACI,6BACI,yBAAKW,MAAO,CAAEqO,SAAU,SAAxB,oDACA,yBAAKrO,MAAO,CAAE4Y,UAAW,SAAU,kBAAC,KAAD,CAAU2qD,QAASlkE,KAAKN,MAAMwkE,QAASO,UAAU,KACpF,yBAAK9jE,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,gBAAiBpS,WAAY,SAAU0Y,UAAW,SAC7F,6BACI,kFACA,6BAAMvZ,KAAKN,MAAMukE,WAAjB,MAAgCjkE,KAAKN,MAAMwkE,QAA3C,MAAuDlkE,KAAKN,MAAMskE,WAAlE,OAEJ,6BACI,6FACA,+CAGR,yBAAKrjE,MAAO,CAAE4Y,UAAW,SACrB,yBAAK5Y,MAAO,CAAEqO,SAAU,SAAxB,aACA,yBAAKrO,MAAO,CAAE4Y,UAAW,SACrB,kBAAC,KAAD,CAAQ3D,YAAY,kBAAQjV,MAAO,CAAEmS,MAAO,KAAOF,SAAU5S,KAAK6yC,aAAat8B,KAAKvW,OAChF,kBAACgyC,EAAD,CAAQzxC,MAAO,GAAf,aACA,kBAACyxC,EAAD,CAAQzxC,MAAO,GAAf,mBAEJ,kBAACm3B,EAAD,CAAa7hB,qBAAsB,SAAAC,GAAW,OAAIA,EAAYC,YAAYnD,SAAUA,EAAUjS,MAAO,CAAEG,WAAY,OAAQgS,MAAO,YAEtI,yBAAKnS,MAAO,CAAE4Y,UAAW,SACrB,kBAAC,GAAD,CAAgB6pD,aAAcpjE,KAAKN,MAAM0jE,aAAcG,WAAYvjE,KAAKN,MAAM6jE,WAAYG,YAAa1jE,KAAKN,MAAMykE,OAAQL,SAAU9jE,KAAK8jE,SAASvtD,KAAKvW,e,GArFvJR,aCuCTklE,G,2MApCXhlE,MAAQ,CACJC,WAAY,G,mFAGZ,IAAMI,EAAcF,eAAeC,QAAQ,QAC3CE,KAAKC,SAAS,CAAEN,WAAYI,M,+BAEtB,IAEE2gE,EAAYC,KAAZD,QACFiE,EAAoC,GAAzB3kE,KAAKN,MAAMC,WAC5B,OACI,yBAAKgB,MAAO,CAAEoc,YAAa,OAAQkU,aAAc,SAC7C,yBAAKtwB,MAAO,CAAEqO,SAAU,OAAQjO,OAAQ,OAAQiwB,WAAY,SAA5D,4BACA,kBAAC,KAAD,CAAM+vC,iBAAiB,KACnB,kBAACL,EAAD,CAASO,IAAI,2BAAO/gE,IAAI,KACpB,kBAAC,GAAD,OAGAykE,GAAY,kBAACjE,EAAD,CAASO,IAAI,2BAAO/gE,IAAI,KAChC,kBAAC,GAAD,a,GArBAV,aCuCbolE,G,wLAjCP/kE,eAAeglE,U,+BAET,IlG+DU1qD,EkG/DX,OACC2qD,EAAUjlE,eAAeC,QAAQ,QACjCilE,EAAW/kE,KAAKI,MAAMC,SAASyU,SACrC,OACI,yBAAKnU,MAAO,CAAEI,OAAQ,UAClB,yBAAKmL,UAAU,UAEX,yBAAKvL,MAAO,CAAEC,QAAS,OAAQC,WAAY,WACvC,yBAAKF,MAAO,CAAEqO,SAAU,OAAQD,WAAY,YAA5C,wDACA,kBAAC,EAAD,CAAWvO,KAAMukE,EAAUC,OAAQhlE,KAAKI,MAAM6kE,SAElD,yBAAKtkE,MAAO,CAAEC,QAAS,OAAQI,oBAAqB,YAAaC,cAAe,SAC5E,wBAAIN,MAAO,CAAEiO,MAAO,UAAYk2D,EAAhC,gBAA4C5qD,GAAe,IAAIlD,MAA/D,KlGmDAmD,EkGnDwF,IAAInD,KlGqD9F,CAAC,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,sBAD/C,IAAIA,KAAKmD,GAAWf,YkGnDd,kBAAC,IAAD,CAAMlY,GAAG,SAASgS,QAAS,kBAAM,EAAKgyD,kBAClC,kBAAC,KAAD,CAAMvkE,MAAO,CAAEiO,MAAO,SAAWnL,KAAK,cAIlD,yBAAKyI,UAAU,WACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO1L,KAAI,UAAKR,KAAKI,MAAMD,MAAMK,KAAtB,SAAmC+zB,UAAWT,KACzD,kBAAC,IAAD,CAAOtzB,KAAI,UAAKR,KAAKI,MAAMD,MAAMK,KAAtB,YAAsC+zB,UAAWQ,KAC5D,kBAAC,IAAD,CAAOv0B,KAAI,UAAKR,KAAKI,MAAMD,MAAMK,KAAtB,WAAqC+zB,UAAWmwC,KAC3D,kBAAC,IAAD,CAAOlkE,KAAI,UAAKR,KAAKI,MAAMD,MAAMK,KAAtB,YAAsC+zB,UAAWirC,Y,GA3B1DhgE,a,qBCiGX2lE,G,YAlGX,WAAY/kE,GAAQ,IAAD,8BACf,4CAAMA,KA4BVglE,YAAc,WACV,IAAM3C,EAAUttD,SAASC,eAAe,WAAW7U,MAC7C+hE,EAAWntD,SAASC,eAAe,YAAY7U,O7G2DtD,SAAegiE,EAAUD,GAC9B,IAAMh6D,EAAO,CACXi6D,SAAUA,EACVD,SAAUA,GAEZ,OAAO78D,IAAM8C,KAAK,QAASD,I6G/DrBmB,CAAkBg5D,EAASH,GACtB54D,MAAK,SAAAa,GACFrI,QAAQC,IAAI,YAAcsL,KAAKC,UAAUnD,IACzC,IAAMu4D,EAAWv4D,EAAOxG,KAClBshE,EAAO5C,EACP1uD,EAAO+uD,EAAS,GAAG/uD,KACzBlU,eAAeylE,QAAQ,OAAQD,GAC/BxlE,eAAeylE,QAAQ,OAAQvxD,GAC/B,EAAK9T,SAAS,CACVslE,UAAU,OAGjBz7D,OAAM,SAAAC,GACH7H,QAAQC,IAAI,YAAcsL,KAAKC,UAAU3D,IACzC,EAAK9J,SAAS,CACVulE,YAAY,EACZC,aAAc,mDAhDX,EAoDnBC,eAAiB,WACb,IAAMC,EAAQ9lE,eAAeC,QAAQ,QAC/BiU,EAAOlU,eAAeC,QAAQ,QACpC,GAAc,OAAV6lE,EACA,OAAqB,IAAjB/lE,OAAOmU,GACA,kBAAC,IAAD,CAAU/B,KAAM,SAAU9Q,GAAI,iBAElC,kBAAC,IAAD,CAAU8Q,KAAM,SAAU9Q,GAAI,0BAzDzC,EAAKxB,MAAQ,CACT6lE,UAAU,EACVC,YAAY,EACZC,aAAc,MAElB,EAAKL,YAAc,EAAKA,YAAY7uD,KAAjB,iBAPJ,E,iFAUE,IAAD,OACVksD,EAAUttD,SAASywD,cAAc,YACjCtD,EAAWntD,SAASywD,cAAc,aACxCnD,EAAQ1jB,iBAAiB,SAAS,WAC9B0jB,EAAQ1jB,iBAAiB,SAAS,SAAAhuC,GACZ,KAAdA,EAAE80D,UACFpD,EAAQqD,OACRxD,EAASyD,eAKrBzD,EAASvjB,iBAAiB,SAAS,WAC/BujB,EAASvjB,iBAAiB,SAAS,SAAAhuC,GACjB,KAAdA,EAAE80D,SAAkB,EAAKT,sB,+BAyCjC,OACI,yBAAKzkE,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,SAAUE,OAAQ,QAAS+R,MAAO,QAASqtB,WAAY,8EACvHngC,KAAK0lE,iBACN,yBAAK/kE,MAAO,CAAE6Y,UAAW,WACrB,yBAAK7Y,MAAO,CAAEmS,MAAO,SAAWzR,IAAK2kE,KAAMzkE,IAAI,SAC/C,yBAAKZ,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,SAAUolE,SAAU,SACrF,yBAAKtlE,MAAO,CAAEiO,MAAO,QAASI,SAAU,OAAQwK,UAAW,SAAU1G,MAAO,SAA5E,uFACA,yBAAKnS,MAAO,CAAEmS,MAAO,OAAQlS,QAAS,OAAQqS,eAAgB,SAAUpS,WAAY,WAChF,yBAAKF,MAAO,CAAEmS,MAAO,QAAS/R,OAAQ,QAASme,aAAc,MAAO5J,gBAAiB,QAASkE,UAAW,SAAU/E,QAAS,OAAQC,SAAU,aAC1I,yBAAK/T,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,gBAAiBpS,WAAY,WACxE,yBAAKF,MAAO,CAAEI,OAAQ,OAAQ+R,MAAO,OAAQoM,aAAc,MAAO5J,gBAAiB,qBAAsB1G,MAAO,QAAShO,QAAS,OAAQC,WAAY,SAAUoS,eAAgB,WAC5K,kBAAC,KAAD,CAAMxP,KAAK,OAAO9C,MAAO,CAAEiO,MAAO,YAEtC,kBAAC,KAAD,CAAO+G,GAAG,UAAUhV,MAAO,CAAEG,WAAY,QAAU8U,YAAY,oDAEnE,yBAAKjV,MAAO,CAAEC,QAAS,OAAQqS,eAAgB,gBAAiBpS,WAAY,SAAU0Y,UAAW,SAC7F,yBAAK5Y,MAAO,CAAEI,OAAQ,OAAQ+R,MAAO,OAAQoM,aAAc,MAAO5J,gBAAiB,qBAAsB1G,MAAO,QAAShO,QAAS,OAAQC,WAAY,SAAUoS,eAAgB,WAC5K,kBAAC,KAAD,CAAMxP,KAAK,OAAO9C,MAAO,CAAEiO,MAAO,YAEtC,kBAAC,KAAD,CAAOnL,KAAK,WAAWkS,GAAG,WAAWhV,MAAO,CAAEG,WAAY,QAAU8U,YAAY,oCAEpF,kBAAC,KAAD,CAAQjV,MAAO,CAAEmS,MAAO,QAASwC,gBAAiB,wBAAyB1G,MAAO,QAAS2K,UAAW,QAAUrG,QAASlT,KAAKolE,aAA9H,gBACA,yBAAKzkE,MAAO,CAAEC,QAASZ,KAAKN,MAAM8lE,WAAa,OAAS,QAAS52D,MAAO,MAAOI,SAAU,SAAWhP,KAAKN,MAAM+lE,gBAGvH,yBAAK9kE,MAAO,CAAEmS,MAAO,OAAQG,eAAgB,SAAUpS,WAAY,SAAUD,QAAS,SAAtF,uB,GA5FApB,a,mCCGxBsC,IAAO81B,OAAO,SAoBCsuC,OAhBf,WAEE,OADA/wD,SAASgxD,gBAAgBxlE,MAAMqO,SAAW,OAExC,yBAAK9C,UAAU,WACb,kBAAC,KAAD,CAAgB0rB,OAAQwuC,MACtB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAAC7lE,KAAK,IAAI+zB,UAAWh1B,IACjC,kBAAC,IAAD,CAAUyS,KAAM,IAAK9Q,GAAI,WACzB,kBAAC,IAAD,CAAOV,KAAK,QAAQ+zB,UAAWqwC,KAC/B,kBAAC,IAAD,CAAOpkE,KAAK,SAAS+zB,UAAW4wC,SCZtBmB,QACW,cAA7BtjD,OAAO3iB,SAASkmE,UAEe,UAA7BvjD,OAAO3iB,SAASkmE,UAEhBvjD,OAAO3iB,SAASkmE,SAASpmE,MACvB,2DCZNqmE,IAASjoB,OAAO,kBAAC,GAAD,MAAQppC,SAASC,eAAe,SD2H1C,kBAAmBqxD,WACrBA,UAAUC,cAAcC,MAAMj9D,MAAK,SAAAk9D,GACjCA,EAAaC,iB,mBEnInBxnE,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.91bd4e79.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/edit2.8fc62700.svg\";","module.exports = __webpack_public_path__ + \"static/media/filter.43b66bba.svg\";","module.exports = __webpack_public_path__ + \"static/media/Wardview.6c75f5a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/Historyview.0467b7bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Control.aa66ed95.svg\";","module.exports = __webpack_public_path__ + \"static/media/file1.6f94c891.svg\";","module.exports = __webpack_public_path__ + \"static/media/file2.2b64f736.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.870c0c52.svg\";","module.exports = __webpack_public_path__ + \"static/media/dragdown.0cdfe02a.svg\";","module.exports = __webpack_public_path__ + \"static/media/RT.41b174eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/calender.da91395a.svg\";","module.exports = __webpack_public_path__ + \"static/media/calenderwhite.d66bfce7.svg\";","module.exports = __webpack_public_path__ + \"static/media/1200px-Taipei_Veterans_General_Hospital_Emblem.svg.b744f9a1.png\";","module.exports = __webpack_public_path__ + \"static/media/Edit.a7d4c3ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/ping.c2141b87.svg\";","module.exports = __webpack_public_path__ + \"static/media/pingwhite.0f1e8cfb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Chooseedit.def74a6e.svg\";","import React, { Component } from 'react';\n\nclass Homepage extends Component {\n    render() {\n        return (\n            <div></div>\n        );\n    }\n}\n\nexport default Homepage","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport wardviewlogo from '../Image/svg/Wardview.svg'\nimport historylogo from '../Image/svg/Historyview.svg'\nimport controllogo from '../Image/svg/Control.svg'\nimport './Sidermenu.scss';\n\n\nclass Sidermenu extends Component {\n\n    state = {\n        powerLogin: Number(sessionStorage.getItem('role'))\n    }\n\n    componentDidMount() {\n        const powerLogins = Number(sessionStorage.getItem('role'))\n        this.setState({ powerLogin: powerLogins })\n    }\n\n    Selectkeynumber(key) {\n\n        switch (key) {\n            case '/nicu':\n                return 0;\n            case '/nicu/history':\n                return 1;\n            case '/nicu/system':\n                return 2;\n            default:\n                if (key.match('patient') != null) {\n                    if(this.props.location.state && this.props.location.state.fromHistory){\n                        return 1;\n                    }\n                    return 0;\n                }\n                if (key.match('ward') != null) {\n                    return 0;\n                }\n                return '';\n        }\n    }\n\n    select_hover(value) {\n        const { path } = this.props\n        const keynumber = this.Selectkeynumber(path)\n        if (keynumber === value) {\n            return true\n        }\n        return false\n    }\n    render() {\n        const rule = this.state.powerLogin\n        return (\n            <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"20px\", height: '100%' }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto auto\", gridColumnGap: \"10px\" }}>\n                    <Link to=\"/nicu/ward/wardindex\" class={this.select_hover(0) ? \"linkstate\" : \"dislinkstate\"} style={{ display: rule == 2 ? \"none\" : \"flex\" }}>\n                        <img src={wardviewlogo} alt='wardviewlogo'></img>\n                        <centerstyle>\n                            <t2 class={this.select_hover(0) ? \"linkfont\" : \"dislinkfont\"}>住院病人資訊</t2>\n                        </centerstyle>\n                    </Link>\n                    <Link to=\"/nicu/history\" class={this.select_hover(1) ? \"linkstate\" : \"dislinkstate\"} style={{ display: rule == 1 ? \"flex\" : \"none\" }}>\n                        <img src={historylogo} alt='historyviewlogo'></img>\n                        <centerstyle>\n                            <t2 class={this.select_hover(1) ? \"linkfont\" : \"dislinkfont\"} >歷史病歷管理</t2>\n                        </centerstyle>\n                    </Link>\n                    <Link to='/nicu/system' class={this.select_hover(2) ? \"linkstate\" : \"dislinkstate\"} style={{ display: rule == 2 ? \"flex\" : \"none\" }}>\n                        <img src={controllogo} alt='systemviewlogo'></img>\n                        <centerstyle>\n                            <t2 class={this.select_hover(2) ? \"linkfont\" : \"dislinkfont\"}>系統設定</t2>\n                        </centerstyle>\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Sidermenu);\n","import X2JS from \"x2js\"\nimport moment from 'moment';\n\n\nexport function CalculateAge(BornStatus) {\n    const startDate = moment(BornStatus.date);\n    const endDate = moment();\n    const minus = endDate.diff(startDate, 'days');\n    console.log(BornStatus)\n    if (BornStatus === undefined || BornStatus.date === undefined || BornStatus.week === undefined || BornStatus.day === undefined) {\n        return \"未知年齡\"\n    }\n    if (BornStatus.week >= 37) {\n        const month = Math.floor((minus) / 30);\n        const day = Math.floor((minus) % 30);\n        return month > 0 ? `${month}月+${day}天` : `${day}天`\n    }\n\n    const tempWeek = Math.floor(BornStatus.week + (BornStatus.day + minus) / 7);\n    const tempDay = Math.floor((BornStatus.day + minus) % 7);\n    if (tempWeek >= 40) {\n        const overDay = (tempWeek - 40) * 7 + tempDay\n        const month = Math.floor(overDay / 30)\n        const day = overDay % 30\n        return month > 0 ? `矯齡${month}月${day}天` : `矯齡${day}天`\n    } else {\n        const week = tempWeek\n        const day = tempDay\n        return `${week}+${day}`\n    }\n}\n\n\nexport function statecolor(state) {\n    if (state === 'HR') {\n        return \"rgb(100,140,60)\"\n    }\n    if (state === 'BP') {\n        return \"rgb(193,37,40) \"\n    }\n\n    if (state === 'ABP') {\n        return \"#C12528\"\n    }\n    if (state === 'NBP') {\n        return \"#C12528\"\n    }\n    if (state === 'SpO2') {\n        return \"rgb(60,105,160) \"\n    }\n    if (state === 'BT') {\n        return \"rgb(127,61,181)\"\n    }\n    if (state === 'RR') {\n        return \"rgb(200,110,40) \"\n    }\n    return null\n}\n\n//parse flag\nexport function Respiratorswitch(Respirator) {\n    if (Respirator === '呼(非侵入)') {\n        return '非侵入呼吸器'\n    }\n    if (Respirator === '呼(侵入)') {\n        return '侵入性呼吸器'\n    }\n    return '呼吸器'\n}\n\nexport function wardstatestringformat(item) {\n    switch (item.item) {\n        case \"Respirator\":\n            return Respiratorswitch(item.data)\n        case \"TPN\":\n            return \"TPN\"\n        case \"NPO\":\n            return \"NPO\"\n        case \"HD\":\n            return \"HD\"\n        case \"Abx\":\n            return \"Abx\"\n        case \"CVC\":\n            return \"CVC\"\n        case \"Xanth\":\n            return \"Xanth\"\n        case \"Phototherapy\":\n            return \"照光\"\n        case \"DNR\":\n            return \"DNR\"\n        default:\n            return item.item\n    }\n}\n\nexport function Labwarningvalue(value, title) {\n    if (title === \"Glucose\") {\n        if (value > 120 || value < 50) {\n            return false\n        }\n    }\n    if (title === \"WBC\") {\n        if (value < 10000 || value > 30000) {\n            return false\n        }\n    }\n    if (title === \"Hgb\") {\n        if (value < 10 || value > 18) {\n            return false\n        }\n    }\n    if (title === \"Platelet\") {\n        if (value < 100000 || value > 450000) {\n            return false\n        }\n    }\n    if (title === \"Na+\") {\n        if (value < 135 || value > 145) {\n            return false\n        }\n    }\n    if (title === \"K+\") {\n        if (value < 3.5 || value > 5.5) {\n            return false\n        }\n    }\n    if (title === \"Ca2+\") {\n        if (value < 0.8 || value > 1.4) {\n            return false\n        }\n    }\n    if (title === \"P\") {\n        if (value < 4.5 || value > 6.0) {\n            return false\n        }\n    }\n    if (title === \"Mg2+\") {\n        if (value < -1.5 || value > 4.5) {\n            return false\n        }\n    }\n    if (title === \"Alb\") {\n        if (value > 3) {\n            return false\n        }\n    }\n    if (title === \"CRP\") {\n        if (value < 1) {\n            return false\n        }\n    }\n    if (title === \"Procalcitionin\") {\n        if (value < 0.5) {\n            return false\n        }\n    }\n    if (title === \"pH\") {\n        if (value < 7.25 || value > 7.4) {\n            return false\n        }\n    }\n    if (title === \"PCO2\") {\n        if (value < 40 || value > 60) {\n            return false\n        }\n    }\n    if (title === \"BE\") {\n        if (value < -7 || value > 6) {\n            return false\n        }\n    }\n    if (title === \"PO2\") {\n        if (value < 40 || value > 90) {\n            return false\n        }\n    }\n    if (title === \"BUN\") {\n        if (value < 1) {\n            return false\n        }\n    }\n    if (title === \"Cr\") {\n        if (value < 1) {\n            return false\n        }\n    }\n    if (title === \"ALT\") {\n        if (value < 45) {\n            return false\n        }\n    }\n    if (title === \"AST\") {\n        if (value < 45) {\n            return false\n        }\n    }\n    if (title === \"TBil\") {\n        if (value < 2) {\n            return false\n        }\n    }\n    if (title === \"DBil\") {\n        if (value < 0.5) {\n            return false\n        }\n    }\n    if (title === \"ALKP\") {\n        if (value < 450) {\n            return false\n        }\n    }\n    if (title === \"Total Ca\") {\n        if (value < 8 || value > 12) {\n            return false\n        }\n    }\n    if (title === \"FeSat\") {\n        if (value < 0.15) {\n            return false\n        }\n    }\n    return true\n}\n\n\nexport function getRandom(number) {\n    return Math.floor(Math.random() * 5) + number;\n};\n\nexport function getRandomfornumber(number) {\n    return Math.floor(Math.random() * number);\n};\n\nexport function arraychange(list) {\n    var myNewArray = []\n    for (var i = 0; i < list.length; ++i) {\n        for (var j = 0; j < list[i].length; ++j) {\n            myNewArray.push(list[i][j]);\n        }\n    }\n    return myNewArray\n}\n\nexport function WeightList(weightlist) {\n    if (weightlist === undefined || weightlist === null) {\n        return \"--\"\n    }\n    const findata = weightlist.filter(function (value, index) {\n        return value.type === \"TW\"\n    })\n    if (findata.length === 0) {\n        return 0\n    }\n    else return findata\n}\n\nexport function BornWeight(weightlist, birthday) {\n    if (weightlist === undefined || weightlist === null) {\n        return \"--\"\n    }\n    if (Array.isArray(weightlist)) {\n        const findata = weightlist.filter(function (value, index) {\n            return value.rec_dat === birthday && value.type === \"TW\"\n        })\n        if (findata.length === 0) {\n            return 0\n        }\n        else return parseInt(Number(findata[findata.length - 1].value2) * 1000)\n    }\n    else {\n        return parseInt(Number(weightlist.value2) * 1000)\n    }\n}\n\nexport function NewestWeight(weightlist) {\n    if (weightlist === undefined) {\n        return \"--\"\n    }\n    if (weightlist.length === 0) {\n        return 0\n    }\n    if (Array.isArray(weightlist)) {\n        const findata = weightlist.filter(function (value, index) {\n            return value.type === \"TW\"\n        })\n        if (findata.length === 0) {\n            return \"--\"\n        }\n        return parseInt(Number(findata[0].value2) * 1000)\n    }\n    else {\n        return parseInt(Number(weightlist.value2) * 1000)\n    }\n\n}\n\nexport function XM2JSON(data) {\n    const xm2 = new X2JS()\n    if (data === undefined) {\n        return []\n    }\n    const status = xm2.xml2js(data).outmsg.ret\n    if (Number(status) === 0) {\n        const parsedata = xm2.xml2js(data).outmsg.resconts.rescont\n        if (!Array.isArray(parsedata)) {\n            return [parsedata]\n        }\n        return parsedata\n    }\n    return []\n}\n\nexport function QMNCXM2JSON(data) {\n    const xm2 = new X2JS()\n    if (data === undefined) {\n        return []\n    }\n    const status = xm2.xml2js(data).outmsg.ret\n    if (Number(status) === 0) {\n        const parsedata = xm2.xml2js(data).outmsg.resconts.rescont\n        return parsedata\n    }\n    return []\n}\n\nexport function Doc(DocList, type) {\n    if (DocList === undefined || DocList === null || DocList === \"\") {\n        return \"\"\n    }\n    const Main = DocList.filter(function (element, index) {\n        return element.PDTYPE === type\n    })\n    if (Main.length === 0) {\n        return \"\"\n    }\n    return Main[0].PDDOCNMC.toString().trim()\n}\n\nexport function selectweight(List, date) {\n    if (List === undefined || List === null) {\n        return \"--\"\n    }\n    var array = []\n    for (let index = 0; index < List.length; index++) {\n        const element = List[index];\n        if (moment(element.rec_dat, 'YYYYMMDD').valueOf() < date) {\n            array.push(element)\n        }\n    }\n    if (array.length === 0) {\n        return 0\n    }\n    return Number(array[0].value2) * 1000\n}\n\n\n","import axios from 'axios';\n\n\naxios.defaults.baseURL = \"http://10.97.241.48/deploy/\";\n// axios.defaults.baseURL = \"http://172.24.7.33/deploy/\";\n// axios.defaults.baseURL = \"http://127.0.0.1:8888/deploy/\";\n\n//----------------------------------------------\n// announcement-controller 病房公告(Ward View)\n//----------------------------------------------\n//建立公告資訊\n/*\nexport function createAnnounce(context, editor, transinno, time) {\n  const body = {\n    context: context,\n    editor: editor,\n    transinno: transinno,\n    time: time\n  }\n  return axios.post(\"Announcement/createAnnouncement\", body);\n}*/\n\n//Create bweek bday bweight\nexport function createPatientInfo(hisid, pname, psex, bweight, bweek, bday) {\n  const body = {\n    \"bday\": bday,\n    \"bweek\": bweek,\n    \"bweight\": bweight,\n    \"hisid\": hisid,\n    \"pname\": pname,\n    \"psex\": psex\n  }\n  return axios.post(\"patientinfo/createPatientInfo\", body)\n}\n\nexport function getPersionalStatus(hisid) {\n  return axios.get(\"patientinfo/getOnePatientInfo/\" + hisid);\n}\n\nexport function createAnnounce(announceArray) {\n  return axios.post(\"Announcement/createAnnouncement\", announceArray);\n}\n\n//刪除某天公告資訊\nexport function deleteAnnounce(transinno, dateTime) {\n  return axios.delete(\"Announcement/delannouncement/\" + transinno + \"/\" + dateTime);\n}\n\n//取得全部資訊\nexport function getAllAnnounce() {\n  return axios.get(\"Announcement/getAllannounce\");\n}\n\n//取得某位病人某天資訊\nexport function getOneAnnounce(transinno, dateTime) {\n  return axios.get(\"Announcement/getOneannouncement/\" + transinno + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// export/import-controller 匯入匯出\n//----------------------------------------------\n//匯出\nexport function exportJson(transinno) {\n  return axios.get(\"exportJson/\" + transinno);\n}\n\n//匯入\nexport function importJson(filename) {\n  return axios.get(\"importJson/\" + filename);\n}\n\n//下載檔案\nexport function downloadFile(filename) {\n  return axios.get(\"downloadFile/\" + filename);\n}\n\n//上傳檔案\nconst config = { headers: { 'Content-Type': 'multipart/form-data' } }\nexport function uploadFile(fileData) {\n  return axios.post(\"uploadFile\", fileData, config);\n}\n//----------------------------------------------\n// login-controller 登入與權限設定\n//----------------------------------------------\n//刪除帳號\nexport function deleteUser(name, role, username) {\n  return axios.delete(\"delUser/\" + name + \"/\" + role + \"/\" + username);\n}\n\n//查詢某帳號權限：1->read only 2->general user 3->general manager 4->system manager 5->super user\nexport function getAuth(username) {\n  return axios.get(\"getAuth/\" + username);\n}\n\n//取得系統空間\nexport function getSpace() {\n  return axios.get(\"getSpace\");\n}\n\n//登入\nexport function login(username, password) {\n  const body = {\n    username: username,\n    password: password\n  }\n  return axios.post(\"login\", body);\n}\n\nexport function getSSOLogin(username, password) {\n  return axios.get(\"LoginInSSO/\" + username + \"/\" + password);\n}\n\n//新增帳號與權限\nexport function register(name, password, role, username, doctorid) {\n  const body = {\n    name: name,\n    password: password,\n    role: role,\n    username: username,\n    doctorid: doctorid\n  }\n  return axios.post(\"register\", body);\n}\n\n//取得全部資訊\nexport function getAlluser() {\n  return axios.get(\"getAlluser\")\n}\n\n//角色、姓名搜尋其內容\nexport function searchUser(name, role) {\n  return axios.get(\"searchUser/\" + name + \"/\" + role);\n}\n\n//----------------------------------------------\n// log-controller 顯示Log日誌\n//----------------------------------------------\n\n//Show login log(根據起始時間查詢成功登入記錄)(time格式為yyyy-MM-ddTHH:mm:ss)\nexport function getLoginlog(startTime, endTime) {\n  return axios.get(\"getLoginlog/\" + startTime + \"/\" + endTime);\n}\n\n//Show API access log (date格式為yyyy-MM-dd)\nexport function getApilog(Time) {\n  return axios.get(\"getApilog/\" + Time)\n}\n\n//Show Debug log (date格式為yyyy-MM-dd)\nexport function getDebuglog(Time) {\n  return axios.get(\"getDebuglog/\" + Time)\n}\n\n//----------------------------------------------\n// breath-controller 呼吸RT\n//----------------------------------------------\n//createBreath\nexport function createBreath(editTime, hisid, model, note, setting) {\n  const body = {\n    editTime: editTime,\n    hisid: hisid,\n    model: model,\n    note: note,\n    setting: setting\n  }\n  return axios.post(\"breath/createBreath\", body);\n}\n\n//getBreath\nexport function getAllBreath() {\n  return axios.get(\"breath/getAllbreath\");\n}\n\n//updateNote\nexport function updateNote(editTime, hisid, model, note, setting) {\n  const body = {\n    editTime: editTime,\n    hisid: hisid,\n    model: model,\n    note: note,\n    setting: setting\n  }\n  return axios.put(\"breath/updatebnote/\" + editTime, body);\n}\n\n//----------------------------------------------\n// exam-cbc-controller Exam CBC Controller\n//----------------------------------------------\n//寫入CBC資訊\nexport function createExamCbc(band, hb, hct, hisid, lym, plt, seg, updateTime, wbc) {\n  const body = {\n    band: band,\n    hb: hb,\n    hct: hct,\n    hisid: hisid,\n    lym: lym,\n    plt: plt,\n    seg: seg,\n    updateTime: updateTime,\n    wbc: wbc\n  }\n  return axios.post(\"examcbc/createexamcbc\", body);\n}\n\n//取得全部資訊\nexport function getAllExamCbc() {\n  return axios.get(\"examcbc/getAllexamcbc\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamCbcOfPatient(hisid, dateTime) {\n  return axios.get(\"examcbc/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-cbc-two-controller Exam CBC Two Controller\n//----------------------------------------------\n//寫入CBC資訊\nexport function createExamCbcTwo(band, crp, hisid, lym, ptc, seg, updateTime, wbc) {\n  const body = {\n    band: band,\n    crp: crp,\n    hisid: hisid,\n    lym: lym,\n    ptc: ptc,\n    seg: seg,\n    updateTime: updateTime,\n    wbc: wbc\n  }\n  return axios.post(\"examcbctwo/createexamcbctwo\", body);\n}\n\n//取得全部資訊\nexport function getAllExamCbcTwo() {\n  return axios.get(\"examcbctwo/getAllexamcbctwo\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamCbcTwoOfPatient(hisid, dateTime) {\n  return axios.get(\"examcbctwo/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-cruor-controller Exam Cruor Controller\n//----------------------------------------------\n//createExamCruor\nexport function createExamCruor(apiT, hisid, inr, pt, updateTime) {\n  const body = {\n    apiT: apiT,\n    hisid: hisid,\n    inr: inr,\n    pt: pt,\n    updateTime: updateTime\n  }\n  return axios.post(\"examcruor/createexamcruor\", body);\n}\n\n//getExamCruor\nexport function getAllExamCruor() {\n  return axios.get(\"examcruor/getAllexamcruor\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamCruorOfPatient(hisid, dateTime) {\n  return axios.get(\"examcruor/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-electrolyte-controller Exam Electrolyte Controller\n//----------------------------------------------\n//createExamEletrolyte\nexport function createExamElectrolyte(bun, caFree, caTotal, caseid, cl, cr, hisid, k, mg, na, p, updateTime) {\n  const body = {\n    bun: bun,\n    caFree: caFree,\n    caTotal: caTotal,\n    caseid: caseid,\n    cl: cl,\n    cr: cr,\n    hisid: hisid,\n    k: k,\n    mg: mg,\n    na: na,\n    p: p,\n    updateTime: updateTime\n  }\n  return axios.post(\"examelectrolyte/createexamelectrolyte\", body);\n}\n\n//getExamElectrolyte\nexport function getAllExamElectrolyte() {\n  return axios.get(\"examelectrolyte/getAllexamelectrolyte\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamElectrolyteOfPatient(hisid, dateTime) {\n  return axios.get(\"examcruor/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-gas-addi-controller Exam GAS Addi Controller\n//----------------------------------------------\n//createExamGasAddi\nexport function createExamGasAddi(bun, caFree, cr, hb, hct, hisid, k, na, updateTime) {\n  const body = {\n    bun: bun,\n    caFree: caFree,\n    cr: cr,\n    hb: hb,\n    hct: hct,\n    hisid: hisid,\n    k: k,\n    na: na,\n    updateTime: updateTime\n  }\n  return axios.post(\"examgasaddi/createexamgasaddi\", body);\n}\n\n//getExamGasAddi\nexport function getAllExamGasAddi() {\n  return axios.get(\"examgasaddi/getAllexamgasaddi\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamGasAddiOfPatient(hisid, dateTime) {\n  return axios.get(\"examgasaddi/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-gas-controller Exam GAS Controller\n//----------------------------------------------\n//createExamGas\nexport function createExamGas(be, fiO2, hco3, hisid, o2Sat, pco2, ph, po2, sample, updateTime) {\n  const body = {\n    be: be,\n    fiO2: fiO2,\n    hco3: hco3,\n    hisid: hisid,\n    o2Sat: o2Sat,\n    pco2: pco2,\n    ph: ph,\n    po2: po2,\n    sample: sample,\n    updateTime: updateTime\n  }\n  return axios.post(\"examgas/createexamgas\", body);\n}\n\n//getExamGas\nexport function getAllExamGas() {\n  return axios.get(\"examgas/getAllexamgas\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamGasOfPatient(hisid, dateTime) {\n  return axios.get(\"examgas/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-glu-controller Exam Glu Controller\n//----------------------------------------------\n//createExamGlu\nexport function createExamGlu(gluBedside, gluLab, hisid, updateTime) {\n  const body = {\n    gluBedside: gluBedside,\n    gluLab: gluLab,\n    hisid: hisid,\n    updateTime: updateTime\n  }\n  return axios.post(\"examglu/createexamglu\", body);\n}\n\n//getExamGlu\nexport function getAllExamGlu() {\n  return axios.get(\"examglu/getAllexamglu\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamGluOfPatient(hisid, dateTime) {\n  return axios.get(\"examglu/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-heart-controller Exam Heart Controller\n//----------------------------------------------\n//createExamHeart\nexport function createExamHeart(bnp, caseid, ck, ckMB, hisid, tropoin, updateTime) {\n  const body = {\n    bnp: bnp,\n    caseid: caseid,\n    ck: ck,\n    ckMB: ckMB,\n    hisid: hisid,\n    tropoin: tropoin,\n    updateTime: updateTime\n  }\n  return axios.post(\"examheart/createexamheart\", body);\n}\n\n//getExamGlu\nexport function getAllExamHeart() {\n  return axios.get(\"examheart/getAllexamheart\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamHeartOfPatient(hisid, dateTime) {\n  return axios.get(\"examheart/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-jaundice-controller Exam Jaundice Controller\n//----------------------------------------------\n//createExamJaundice\nexport function createExamJaundice(dbil, hisid, microBil, tbil, tcb, updateTime) {\n  const body = {\n    dbil: dbil,\n    hisid: hisid,\n    microBil: microBil,\n    tbil: tbil,\n    tcb: tcb,\n    updateTime: updateTime\n  }\n  return axios.post(\"examjaundice/createexamjaundice\", body);\n}\n\n//getExamJaundice\nexport function getAllExamJaundice() {\n  return axios.get(\"examjaundice/getAllexamjaundice\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamJaundiceOfPatient(hisid, dateTime) {\n  return axios.get(\"examjaundice/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-liver-controller Exam Liver Controller\n//----------------------------------------------\n//createExamLiver\nexport function createExamLiver(alKp, alb, alt, ast, dbil, hisid, rggt, tbil, updateTime) {\n  const body = {\n    alKp: alKp,\n    alb: alb,\n    alt: alt,\n    ast: ast,\n    dbil: dbil,\n    hisid: hisid,\n    rggt: rggt,\n    tbil: tbil,\n    updateTime: updateTime\n  }\n  return axios.post(\"examliver/createexamliver\", body);\n}\n\n//getExamLiver\nexport function getAllExamLiver() {\n  return axios.get(\"examliver/getAllexamliver\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamLiverOfPatient(hisid, dateTime) {\n  return axios.get(\"examliver/getOnepatient/\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-premature-baby-controller Exam Premature Baby Controller\n//----------------------------------------------\n//createExamPrematureBaby\nexport function createExamPrematureBaby(alkp, feSat, hisid, iron, ldh, tibc, updateTime) {\n  const body = {\n    alkp: alkp,\n    feSat: feSat,\n    hisid: hisid,\n    iron: iron,\n    ldh: ldh,\n    tibc: tibc,\n    updateTime: updateTime\n  }\n  return axios.post(\"examprematurebaby/createexamprematurebaby\", body);\n}\n\n//getExamPrematureBaby\nexport function getAllExamPrematureBaby() {\n  return axios.get(\"examprematurebaby/getAllexamprematurebaby\");\n}\n\n//取得近三天某位病人資訊\nexport function getExamPrematureBabyOfPatient(hisid, dateTime) {\n  return axios.get(\"examprematurebaby/getOnepatient\" + hisid + \"/\" + dateTime);\n}\n\n//----------------------------------------------\n// exam-unstructured-controller Exam Unstructured Controller\n//----------------------------------------------\n//createExamUnstructured\nexport function createExamUnstructured(hisid, item, result, state, time) {\n  const body = {\n    hisid: hisid,\n    item: item,\n    result: result,\n    state: state,\n    time: time\n  }\n  return axios.post(\"examunstructured/createexamunstructured\", body);\n}\n\n//getExamUnstructured\nexport function getAllExamUnstructured() {\n  return axios.get(\"examunstructured/getAllexamunstructured\");\n}\n\n//----------------------------------------------\n// feeding-controller Feeding Controller\n//----------------------------------------------\n//createExamFeeding\nexport function createExamFeeding(editDoctor, editTime, endTime, hisid, name, notice, startTime) {\n  const body = {\n    editDoctor: editDoctor,\n    editTime: editTime,\n    endTime: endTime,\n    hisid: hisid,\n    name: name,\n    notice: notice,\n    startTime: startTime\n  }\n  return axios.post(\"feeding/createfeeding\", body);\n}\n\n//getExamFeeding\nexport function getAllExamFeeding() {\n  return axios.get(\"feeding/getAllfeeding\");\n}\n\n//----------------------------------------------\n// hospitalization-record-controller Hospitalization Record Controller\n//----------------------------------------------\n//createHospitalizationRecord\nexport function createHospitalizationRecord(hisid, hospitalDoctor, tricuactiveue, mainDoctor, nonReport, note, report, updateTime) {\n  const body = {\n    hisid: hisid,\n    hospitalDoctor: hospitalDoctor,\n    icuactive: tricuactiveue,\n    mainDoctor: mainDoctor,\n    nonReport: nonReport,\n    note: note,\n    report: report,\n    updateTime: updateTime\n  }\n  return axios.post(\"hospitalizationrecord/createhospitalizationrecord\", body);\n}\n\n//getHospitalizationRecord\nexport function getHospitalizationRecord() {\n  return axios.get(\"hospitalizationrecord/getAllhospitalizationrecord\");\n}\n\n//----------------------------------------------\n// io-controller IO Controller\n//----------------------------------------------\n//createIO\nexport function createIO(caseid, hisid, item, updateTime) {\n  const body = {\n    caseid: caseid,\n    hisid: hisid,\n    item: item,\n    updateTime: updateTime\n  }\n  return axios.post(\"io/createio\", body);\n}\n\n//getIO\nexport function getIO() {\n  return axios.get(\"io/getAllio\");\n}\n\n//----------------------------------------------\n// nis-controller NIS Controller\n//----------------------------------------------\n//getQDC\nexport function getQDC(caseno, st, et) {\n  return axios.get(\"QDC/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQENT\nexport function getQENT(caseno) {\n  return axios.get(\"QENT/\" + caseno);\n}\n\n//getQDVS\nexport function getQDVS(caseno, st, et) {\n  return axios.get(\"QDVS/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQMNC\nexport function getQMNC(caseno) {\n  return axios.get(\"QMNC/\" + caseno);\n}\n\n//getQOXY\nexport function getQOXY(caseno, st, et) {\n  return axios.get(\"QOXY/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQPNOT\nexport function getQPNOT(caseno, st, et) {\n  return axios.get(\"QPNOT/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQSPE\nexport function getQSPE(caseno, st, et) {\n  return axios.get(\"QSPE/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//getQTWPER\nexport function getQTWPER(caseno, st, et) {\n  return axios.get(\"QTWPER/\" + caseno + \"/\" + st + \"/\" + et);\n}\n\n//----------------------------------------------\n// note-controller Note Controller\n//----------------------------------------------\n//createNote\nexport function createNote(caseid, context, editTime, hisid, type) {\n  const body = {\n    caseid: caseid,\n    context: context,\n    editTime: editTime,\n    hisid: hisid,\n    type: type\n  }\n  return axios.post(\"note/createnote\", body);\n}\n\n//getNote\nexport function getNote() {\n  return axios.get(\"note/getAllnote\");\n}\n\n//----------------------------------------------\n// notice-controller 待辦事項 Notice (Ward/Patient View)\n//----------------------------------------------\n//建立資訊\nexport function createNotice(hisid, context, time, transinno, doc) {\n  const body = {\n    hisid: hisid,\n    context: context,\n    time: time,\n    transinno: transinno,\n    doc: doc\n  }\n  return axios.post(\"notice/createNotice\", body);\n}\n\n//刪除某人某件資訊\nexport function deleteNotice(transinno, date) {\n  return axios.delete(\"notice/delnotice/\" + transinno + \"/\" + date);\n}\n\n//取得全部資訊\nexport function getAllNotice() {\n  return axios.get(\"notice/getAllnotice\");\n}\n\n//取得某位病人資訊\nexport function getOnePatientNotice(transinno, HISID, st, et) {\n  return axios.get(\"notice/getOnePatientNotice/\" + transinno + \"/\" + HISID + \"/\" + st + \"/\" + et);\n}\n\n//----------------------------------------------\n// patient-controller 基本資料(Ward View)\n//----------------------------------------------\n//填寫基本資料\nexport function createPatient(nonreport, pacseno, pbirthdt, pbirthweight, pblood, pday, phistnum, pnamec, psex, pweek, report, transinid) {\n  const body = {\n    nonreport: nonreport,\n    pacseno: pacseno,\n    pbirthdt: pbirthdt,\n    pbirthweight: pbirthweight,\n    pblood: pblood,\n    pday: pday,\n    phistnum: phistnum,\n    pnamec: pnamec,\n    psex: psex,\n    pweek: pweek,\n    report: report,\n    transinid: transinid\n  }\n  return axios.post(\"patient/createpatient\", body);\n}\n\n//刪除某位病人\nexport function deletePatient(transinid, caseid, hisid) {\n  return axios.delete(\"patient/delpatient/\" + transinid + \"/\" + caseid + \"/\" + hisid);\n}\n\n//取得全部資訊\nexport function getAllPatient() {\n  return axios.get(\"patientinfo/getAllpatient\");\n}\n\n//取得某位病人資訊\nexport function getOnePatient(hisid) {\n  return axios.get(\"patient/getOnepatient/\" + hisid);\n}\n\n\n//----------------------------------------------\n// patient-important-matter-controller 病人重要注意事項(Patient View)\n//----------------------------------------------\n//建立事項資訊\nexport function createPatientImportantMatter(context, editor, hisid, updateTime, transinid) {\n  const body = {\n    context: context,\n    editor: editor,\n    hisid: hisid.trim(),\n    time: updateTime,\n    transinid: transinid\n  }\n  return axios.post(\"patientimportantmatter/createpatientimportantmatter\", body);\n}\n\n//刪除某日資訊\nexport function deletePatientImportantMatter(date) {\n  return axios.delete(\"patientimportantmatter/delpatientimportantmatter/\" + date);\n}\n\n//取得全部資訊\nexport function getAllPatientImportantMatter() {\n  return axios.get(\"patientimportantmatter/getAllpatientimportantmatter\");\n}\n\n//取得某位病人資訊\nexport function getOnePatientImportantMatter(transinid) {\n  return axios.get(\"patientimportantmatter/getOnepatient/\" + transinid);\n}\n\n//----------------------------------------------\n// patient-remark-controller 病人註記(Patient View)\n//----------------------------------------------\n//createPatientRemark\nexport function createPatientRemark(context, hisid, transid) {\n  const body = {\n    context: context,\n    hisid: hisid,\n    transid: transid\n  }\n  return axios.post(\"patientremark/createpatientremark\", body);\n}\n\n//delPatientremark\nexport function deletePatientRemark(transid) {\n  return axios.delete(\"patientremark/delpatientremark/\" + transid);\n}\n\n//getPatientRemark\nexport function getAllPatientRemark() {\n  return axios.get(\"patientremark/getAllpatientremark\");\n}\n\n//getOnePatientRemark\nexport function getOnePatientRemark(transid) {\n  return axios.get(\"patientremark/getOnepatientremark/\" + transid);\n}\n\n//----------------------------------------------\n// remark-controller 註記\n//----------------------------------------------\n//建立註記\n\nexport function createRemark(name, remark, remarkId, time, transinId, type, editor) {\n  const body = {\n    name: name,\n    remark: remark,\n    remarkid: remarkId,\n    time: time,\n    transinid: transinId,\n    type: type,\n    editor: editor\n  }\n  return axios.post(\"Remark/createremark\", body);\n}\n\n//取得全部註記\nexport function getAllRemark() {\n  return axios.get(\"Remark/getAllremark\");\n}\n\n//取得某一類型註記\nexport function getOneRemark(transid, remarkid, type) {\n  return axios.get(\"Remark/getOneremark/\" + transid + \"/\" + remarkid + \"/\" + type);\n}\n\n//----------------------------------------------\n// patient-weight-controller 基本資料-體重(Ward View)\n//----------------------------------------------\n//填寫體重資訊\nexport function createPatientWeight(hisid, updateTime, weight) {\n  const body = {\n    hisid: hisid,\n    updateTime: updateTime,\n    weight: weight\n  }\n  return axios.post(\"patientweight/createpatientweight\", body);\n}\n\n//刪除某位病人體重資訊\nexport function deletePatientWeight(date) {\n  return axios.delete(\"patientweight/delpatientweight/\" + date);\n}\n\n//取得全部資訊\nexport function getAllPatientWeight() {\n  return axios.get(\"patientweight/getAllpatientweight\");\n}\n\n//取得某位病人體重資訊\nexport function getOnePatientWeight(hisid) {\n  return axios.get(\"patientweight/getOnepatientweight/\" + hisid);\n}\n\n//----------------------------------------------\n// prescription-order-controller Prescription Order\n//----------------------------------------------\n//建立Prescription Order資訊\nexport function createPrescriptionOrder(caseid, dosage, editTime, endTime, frequency, hisid, name, note, route, scientificName, startTime, state, unit) {\n  const body = {\n    caseid: caseid,\n    dosage: dosage,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    route: route,\n    scientificName: scientificName,\n    startTime: startTime,\n    state: state,\n    unit: unit\n  }\n  return axios.post(\"prescriptionorder/createprescriptionorder\", body);\n}\n\n//取得全部資訊\nexport function getAllPrescriptionOrder() {\n  return axios.get(\"prescriptionorder/getAllprescriptionorder\");\n}\n\n//更新Prescription Order備註\nexport function updatePrescriptionOrder(updateTime, caseid, dosage, editTime, endTime, frequency, hisid, name, note, route, scientificName, startTime, state, unit) {\n  const body = {\n    caseid: caseid,\n    dosage: dosage,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    route: route,\n    scientificName: scientificName,\n    startTime: startTime,\n    state: state,\n    unit: unit\n  }\n  return axios.put(\"prescriptionorder/updateponote/\" + updateTime, body);\n}\n\n//----------------------------------------------\n// schedule-controller 排程與事件(Ward/Patient View)\n//----------------------------------------------\n//建立排程資訊\nexport function createPatientSchedule(bednumber, context, time, transinno, type, writter, name, hisid, selectdate) {\n  const body = {\n    bednumber: bednumber,\n    context: context,\n    time: time,\n    transinno: transinno,\n    type: type,\n    writter: writter,\n    name: name,\n    hisid: hisid,\n    selectDate: selectdate\n  }\n  return axios.post(\"schedule/createschedule\", body);\n}\n\n//刪除某人某天排程資訊\nexport function deletePatientSchedule(transinno, date) {\n  return axios.delete(\"schedule/delschedule/\" + transinno + \"/\" + date);\n}\n\n//取得全部資訊\nexport function getAllSchedule() {\n  return axios.get(\"schedule/getAllschedule\");\n}\n\nexport function getAllPatientFromDate(date) {\n  return axios.get(\"schedule/getAllPatientFromDate/\" + date);\n\n}\n\n//取得某位某時段病人資訊\nexport function getOnePatientSchedule(transinno, date) {\n  return axios.get(\"schedule/getOnepatient/\" + transinno + \"/\" + date);\n}\n\n//----------------------------------------------\n// sso-controller SSO Controller\n//----------------------------------------------\n//get_user_profile\nexport function ssoUserProfile(app_COMPANY_UUID, app_USER_BASIC_PROFILE, app_USER_NODE_UUID, privileged_APP_SSO_TOKEN, public_APP_USER_SSO_TOKEN_TO_QUERY) {\n  const body = {\n    app_COMPANY_UUID: app_COMPANY_UUID,\n    app_USER_BASIC_PROFILE: app_USER_BASIC_PROFILE,\n    app_USER_NODE_UUID: app_USER_NODE_UUID,\n    privileged_APP_SSO_TOKEN: privileged_APP_SSO_TOKEN,\n    public_APP_USER_SSO_TOKEN_TO_QUERY: public_APP_USER_SSO_TOKEN_TO_QUERY\n  }\n  return axios.post(\"nicu/get_user_profile\", body);\n}\n\n//get_uuid\nexport function ssoUuid(privileged_APP_SSO_TOKEN, public_APP_USER_SSO_TOKEN_TO_QUERY) {\n  const body = {\n    privileged_APP_SSO_TOKEN: privileged_APP_SSO_TOKEN,\n    public_APP_USER_SSO_TOKEN_TO_QUERY: public_APP_USER_SSO_TOKEN_TO_QUERY\n  }\n  return axios.post(\"nicu/get_uuid\", body);\n}\n\n//Login\nexport function ssoLogin(app_PRIVATE_ID, app_PRIVATE_PASSWD) {\n  const body = {\n    app_PRIVATE_ID: app_PRIVATE_ID,\n    app_PRIVATE_PASSWD: app_PRIVATE_PASSWD\n  }\n  return axios.post(\"nicu/login\", body);\n}\n\n//login_action\nexport function ssoLoginAction(login_name, password) {\n  const body = {\n    login_name: login_name,\n    password: password\n  }\n  return axios.post(\"nicu/login_a\", body);\n}\n\n//----------------------------------------------\n// stored-procedure-controller Stored Procedure Controller\n//----------------------------------------------\n//getADMDISP\nexport function getStoredProcedureADMDISP(hisid, caseno) {\n  return axios.get(\"ADMDISP/\" + hisid + \"/\" + caseno);\n}\n\n//getADMLIST\nexport function getStoredProcedureADMLIST(hisid, docid) {\n  return axios.get(\"ADMLIST/\" + hisid + \"/\" + docid);\n}\n\n//getCPSDISP\nexport function getStoredProcedureCPSDISP(hisid, caseno, seq) {\n  return axios.get(\"CPSDISP/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//getCPSLIST\nexport function getStoredProcedureCPSLIST(hisid, docid) {\n  return axios.get(\"CPSLIST/\" + hisid + \"/\" + docid);\n}\n\n//getDISDISP\nexport function getStoredProcedureDISDISP(hisid, caseno) {\n  return axios.get(\"DISDISP/\" + hisid + \"/\" + caseno);\n}\n\n//getDISLIST\nexport function getStoredProcedureDISLIST(hisid, docid) {\n  return axios.get(\"DISLIST/\" + hisid + \"/\" + docid);\n}\n\n//getDTAROTQ4\nexport function getStoredProcedureDTAROTQ4(hisid) {\n  return axios.get(\"DTAROTQ4/\" + hisid);\n}\n\n//getDTASOAPQ\nexport function getStoredProcedureDTASOAPQ(hisid, date, dpt) {\n  return axios.get(\"DTASOAPQ/\" + hisid + \"/\" + date + \"/\" + dpt);\n}\n\n//getERDISP\nexport function getStoredProcedureERDISP(hisid, caseno) {\n  return axios.get(\"ERDISP/\" + hisid + \"/\" + caseno);\n}\n\n//getOPSORAQ1\nexport function getStoredProcedureOPSORAQ1(hisid) {\n  return axios.get(\"OPSORAQ1/\" + hisid);\n}\n\n//getOPSORAQ2\nexport function getStoredProcedureOPSORAQ2(hisid, date, times) {\n  return axios.get(\"OPSORAQ2/\" + hisid + \"/\" + date + \"/\" + times);\n}\n\n//getORDLIST\nexport function getStoredProcedureORDLIST(hisid, date, dpt, docid) {\n  return axios.get(\"ORDLIST/\" + hisid + \"/\" + date + \"/\" + dpt + \"/\" + docid);\n}\n\n//getPCASELIST\nexport function getStoredProcedurePCASELIST(hisid, docid, ttype) {\n  return axios.get(\"PCASELIST/\" + hisid + \"/\" + docid + \"/\" + ttype);\n}\n\n//getPRGTXQRY\nexport function getStoredProcedurePRGTXQRY(hisid, date, caseno) {\n  return axios.get(\"PRGTXQRY/\" + date + \"/\" + hisid + \"/\" + caseno);\n}\n\n//getRESDBGAS\nexport function getStoredProcedureRESDBGAS(hisid, date) {\n  return axios.get(\"RESDBGAS/\" + hisid + \"/\" + date);\n}\n\n//getRESDGLU1\nexport function getStoredProcedureRESDGLU1(hisid, date) {\n  return axios.get(\"RESDGLU1/\" + hisid + \"/\" + date);\n}\n\n//getRESDISP\nexport function getStoredProcedureRESDISP(hisid, month, caseno, seq) {\n  return axios.get(\"RESDISP/\" + month + \"/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//getRESDNM2\nexport function getStoredProcedureRESDNM2(hisid, date) {\n  return axios.get(\"RESDNM2/\" + hisid + \"/\" + date);\n}\n\n//getRESLAB01\nexport function getStoredProcedureRESLAB01(hisid, date) {\n  return axios.get(\"RESLAB01/\" + hisid + \"/\" + date);\n}\n\n//getRESLAB02\nexport function getStoredProcedureRESLAB02(hisid, date) {\n  return axios.get(\"RESLAB02/\" + hisid + \"/\" + date);\n}\n\n//getRESLAB0C\nexport function getStoredProcedureRESLAB0C(hisid, date) {\n  return axios.get(\"RESLAB0C/\" + hisid + \"/\" + date);\n}\n\n//getRESSECT\nexport function getStoredProcedureRESSECT(hisid, month, dpt, docid) {\n  return axios.get(\"RESSECT/\" + month + \"/\" + hisid + \"/\" + dpt + \"/\" + docid);\n}\n\n//getTRTMNTQ1\nexport function getStoredProcedureTRTMNTQ1(hisid, caseno) {\n  return axios.get(\"TRTMNTQ1/\" + hisid + \"/\" + caseno);\n}\n\n//getUDORDER0\nexport function getStoredProcedureUDORDER0(hisid, caseno, seq) {\n  return axios.get(\"UDORDER0/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//getUDTEXTQ1\nexport function getStoredProcedureUDTEXTQ1(caseno, seq) {\n  return axios.get(\"UDTEXTQ1/\" + caseno + \"/\" + seq);\n}\n\n//getWARDFLAG\nexport function getStoredProcedureWARDFLAG(hisid, caseno, seq) {\n  return axios.get(\"WARDFLAG/\" + hisid + \"/\" + caseno + \"/\" + seq);\n}\n\n//----------------------------------------------\n// table-controller Table Controller\n//----------------------------------------------\n//getTableHBED\nexport function getTableHBED() {\n  return axios.get(\"HBED\");\n}\n\n//getTablePBASINFO\nexport function getTablePBASINFO(PHISTNUM) {\n  return axios.get(\"PBASINFO/\" + PHISTNUM);\n}\n\n//getTablePDOCNEW\nexport function getTablePDOCNEW(PCASENO) {\n  return axios.get(\"PDOCNEW/\" + PCASENO);\n}\n\n//getTablePLOC\nexport function getTablePLOC(PCASENO) {\n  return axios.get(\"PLOC/\" + PCASENO);\n}\n\n//----------------------------------------------\n// to-do-controller 待辦事項To Do List(Ward/Patient View)\n//----------------------------------------------\n//建立待辦資訊\nexport function createTodo(caseid, context, time, transinno, type) {\n  const body = {\n    caseid: caseid,\n    context: context,\n    time: time,\n    transinno: transinno,\n    type: type\n  }\n  return axios.post(\"todo/createtodo\", body);\n}\n\n//刪除某件待辦資訊\nexport function deleteTodo(index) {\n  return axios.delete(\"todo/deltodo/\" + index);\n}\n\n//取得全部資訊\nexport function getAllTodo() {\n  return axios.get(\"todo/getAlltodo\");\n}\n\n//取得某位病人資訊\nexport function getOneTodo(transinno, caseid) {\n  return axios.get(\"todo/getOnepatient/\" + transinno + \"/\" + caseid);\n}\n\n//----------------------------------------------\n// tpn-controller TPN Controller\n//----------------------------------------------\n//createTPN\nexport function createTPN(aa, ca, editTime, endTime, frequency, glu, hisid, k, mg, na, name, notice, p, startTime, state, tpn) {\n  const body = {\n    aa: aa,\n    ca: ca,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    glu: glu,\n    hisid: hisid,\n    k: k,\n    mg: mg,\n    na: na,\n    name: name,\n    notice: notice,\n    p: p,\n    startTime: startTime,\n    state: state,\n    tpn: tpn\n  }\n  return axios.post(\"tpn/createtpn\", body);\n}\n\n//getTPN\nexport function getAllTPN() {\n  return axios.get(\"tpn/getAlltpn\");\n}\n\n//----------------------------------------------\n// treatment-order-controller Treatment Order\n//----------------------------------------------\n//建立Treatment Order資訊\nexport function createTreatmentOrder(caseid, editTime, endTime, frequency, hisid, name, note, startTime, state) {\n  const body = {\n    caseid: caseid,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    startTime: startTime,\n    state: state\n  }\n  return axios.post(\"treatmentorder/createtreatmentorder\", body);\n}\n\n//取得全部資訊\nexport function getAllTreatmentOrder() {\n  return axios.get(\"treatmentorder/getAlltreatmentorder\");\n}\n\n//更新Treatment Order備註\nexport function updateTreatmentOrder(EditTime, caseid, editTime, endTime, frequency, hisid, name, note, startTime, state) {\n  const body = {\n    caseid: caseid,\n    editTime: editTime,\n    endTime: endTime,\n    frequency: frequency,\n    hisid: hisid,\n    name: name,\n    note: note,\n    startTime: startTime,\n    state: state\n  }\n  return axios.put(\"treatmentorder/updatetonote/\" + EditTime, body);\n}\n\n//----------------------------------------------\n// ward-bed-information-history-controller 歷史病床資訊(Ward View)\n//----------------------------------------------\n//建立床位歷史資訊\nexport function createWardbedInformation(breath, hisid, nonBreath, onBedNumber, tpn, updateTime) {\n  const body = {\n    breath: breath,\n    hisid: hisid,\n    nonBreath: nonBreath,\n    onBedNumber: onBedNumber,\n    tpn: tpn,\n    updateTime: updateTime\n  }\n  return axios.post(\"wardbedinformation/createwardbedinformation\", body);\n}\n\n//取得全部資訊\nexport function getAllWardbedInformation() {\n  return axios.get(\"wardbedinformation/getAllwardbedinformation\");\n}\n\n//當日床位資訊\nexport function getOneWardbedInformation(date) {\n  return axios.get(\"wardbedinformation/getOnewardbedinformation/\" + date);\n}\n\n//近兩週床位資訊\nexport function getWeekWardbedInformation(date) {\n  return axios.get(\"wardbedinformation/getWeekswardbedinformation/\" + date);\n}\n\n//----------------------------------------------\n// ward-information-controller Ward Information Controller\n//----------------------------------------------\n//建立WardInformation資訊\nexport function createWardInformation(bednumber, caseid, hisid, indexId, today, transformintime, transformouttime) {\n  const body = {\n    bednumber: bednumber,\n    caseid: caseid,\n    hisid: hisid,\n    indexId: indexId,\n    today: today,\n    transformintime: transformintime,\n    transformouttime: transformouttime\n  }\n  return axios.post(\"wardinformation/createwardinformation\", body);\n}\n\n//取得全部資訊\nexport function getAllWardInformation() {\n  return axios.get(\"wardinformation/getAllwardinformation\");\n}\n\n//取得當日資訊\nexport function getOneWardInformation(date) {\n  return axios.get(\"wardinformation/getTodaywardinformation/\" + date);\n}\n\n//----------------------------------------------\n// ward-state-controller 病床狀態(Ward View)\n//----------------------------------------------\n//建立床位狀態資訊\nexport function createWardState(anti, breath, drain, foley, hd, hisid, npo, tpn) {\n  const body = {\n    anti: anti,\n    breath: breath,\n    drain: drain,\n    foley: foley,\n    hd: hd,\n    hisid: hisid,\n    npo: npo,\n    tpn: tpn\n  }\n  return axios.post(\"wardstate/createwardstate\", body);\n}\n\n//取得全部資訊\nexport function getAllWardState() {\n  return axios.get(\"wardstate/getAllwardstate\");\n}\n\n//取得某人床位狀態資訊\nexport function getOneWardState(hisid) {\n  return axios.get(\"wardstate/getOnewardstate/\" + hisid);\n}\n\n//----------------------------------------------\n// ward-value-controller 生命跡象(Ward/Patient View)\n//----------------------------------------------\n//建立生命跡象資訊\nexport function createWardValue(abpd, abpm, abps, bt, hr, nbpd, nbpm, nbps, phistnum, rr, spO2, time) {\n  const body = {\n    abpd: abpd,\n    abpm: abpm,\n    abps: abps,\n    bt: bt,\n    hr: hr,\n    nbpd: nbpd,\n    nbpm: nbpm,\n    nbps: nbps,\n    phistnum: phistnum,\n    rr: rr,\n    spO2: spO2,\n    time: time\n  }\n  return axios.post(\"wardvalue/createwardvalue\", body);\n}\n\nexport function getWardDebInfo(date) {\n  return axios.get(\"patient/getWardDebInfo/\" + date);\n}\n\nexport function getPatientwarMidValue(hisid, time, interval) {\n  return axios.get(\"wardvalue/getPatientwarMidValue/\" + hisid + \"/\" + time + \"/\" + interval);\n}\n\nexport function getPatientwardvalueMedian(hisid, startTime, endTime) {\n  return axios.get(\"wardvalue/getPatientwardvalueMedian/\" + hisid + \"/\" + startTime + \"/\" + endTime);\n}\n\n\nexport function getPatientwardvalueBoxPlot(hisid, startTime, endTime, type, interval) {\n  return axios.get(\"wardvalue/getPatientwardvalueBoxPlot/\" + hisid + \"/\" + startTime + \"/\" + endTime + \"/\" + type + \"/\" + interval);\n}\n\nexport function getVitalSignData(hisid, startTime, endTime, type) {\n  return axios.get(\"wardvalue/getVitalSignData/\" + hisid + \"/\" + startTime + \"/\" + endTime + \"/\" + type);\n}\n\n//取得全部資訊\nexport function getAllWardValue() {\n  return axios.get(\"wardvalue/getAllwardvalue\");\n}\n\n//取得全部資訊\nexport function getHisidwardvalue(hisid) {\n  return axios.get(\"wardvalue/getHisidwardvalue/\" + hisid);\n}\n\n//取得某一段時間某一個人生命跡象(原始資料)\nexport function getPatientWardValue(endTime, hisid, startTime, interval, type) {\n  return axios.get(\"wardvalue/getPatientwardvalue/\" + hisid + \"/\" + startTime + \"/\" + endTime + \"/\" + type + \"/\" + interval);\n}\n\n//取得某一個人某類型最新生命跡象\nexport function getWardvalueByType(hisid, type) {\n  return axios.get(\"wardvalue/getWardvalueByType/\" + hisid + \"/\" + type);\n}\n\n\n//----------------------------------------------\n// water-volume-controller Water Volume Controller\n//----------------------------------------------\n//createWaterVolume\nexport function createWaterVolume(endTime, feed, hisid, iv, other, startTime, updateTime) {\n  const body = {\n    endTime: endTime,\n    feed: feed,\n    hisid: hisid,\n    iv: iv,\n    other: other,\n    startTime: startTime,\n    updateTime: updateTime\n  }\n  return axios.post(\"watervolume/createwatervolume\", body);\n}\n\n//取得全部資訊\nexport function getAllWaterVolume() {\n  return axios.get(\"watervolume/getAllwatervolume\");\n}\n","import axios from 'axios';\n\nconst githubApiUrl = \"https://raw.githubusercontent.com/gerrykiki/JsonRegObject/master/\";\n\n//create new instance of github API\nvar axiosGithub = axios.create({\n    baseURL: githubApiUrl,\n    timeout: 1000,\n    //headers: {'X-Custom-Header': 'foobar'}\n});\n\nexport function getGitHubJson(string) {\n    return axiosGithub.get(string);\n}\n\n// export function getExamReport() {\n//     return axios.get(\"ExamRepor.json\");\n// }\n\n","import React, { Component } from 'react';\nimport { wardstatestringformat } from '../Function/Wardstate'\nimport './Wardcardstatus.scss'\nimport * as ApiProvider from '../API/ApiProvider'\nimport * as ApiGithub from '../API/ApiGithub'\n// import moment from 'moment';\n// import * as RegularData from '../Data/RegularData'\n\nclass Wardcarstatus extends Component {\n    state = {\n        TRTMNTQ1: [],\n        UDORDER0: [],\n        FlagReg: []\n    }\n    componentDidMount() {\n        const { PCASENO, PHISTNUM } = this.props\n        const TRQ1 = ApiProvider.getStoredProcedureTRTMNTQ1(PHISTNUM, PCASENO)\n            .then(data => {\n                const rowList = data.data\n                const filterStatusList = rowList.filter(function (info, index, arr) {\n                    return Number(info.ORSTATUS) === 30 || Number(info.ORSTATUS) === 90\n                })\n                return filterStatusList\n            })\n            .catch(err => {\n\n            })\n        const UDORDER = ApiProvider.getStoredProcedureUDORDER0(PHISTNUM, PCASENO, \"123\")\n            .then(data => {\n                var List = []\n                const dataList = data.data\n                if (Array.isArray(dataList)) {\n                    for (let index = 0; index < dataList.length; index++) {\n                        const status = Number(dataList[index].UDSTATUS)\n                        if (status === 30) {\n                            List.push(dataList[index])\n                        }\n                    }\n                }\n                return List\n            })\n            .catch(err => {\n\n            })\n        const Reg = ApiGithub.getGitHubJson(\"FlagReg.json\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        Promise.all([TRQ1, UDORDER, Reg])\n            .then(result => {\n                this.setState({\n                    TRTMNTQ1: result[0],\n                    UDORDER0: result[1],\n                    FlagReg: result[2]\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    render() {\n        function RespiratorStatusParse(InvasiveRespiratorStatus, NonInvasiveRespiratorStatus) {\n            if (InvasiveRespiratorStatus === false && NonInvasiveRespiratorStatus === false) {\n                return \"false\"\n            }\n            if (InvasiveRespiratorStatus === true && NonInvasiveRespiratorStatus === true) {\n                return \"false\"\n            }\n            if (InvasiveRespiratorStatus === true) {\n                return '呼(侵入)'\n            }\n            if (NonInvasiveRespiratorStatus === true) {\n                return \"呼(非侵入)\"\n            }\n            return \"--\"\n        }\n\n        function parseFlagData(TRTMNTQ1, UDORDER, FlagReg, type) {\n            //filter  status 生效中\n            if (FlagReg === undefined || FlagReg === null) { return null }\n            const Flag = FlagReg.filter(function (value, index, arr) {\n                return value.item === type\n            })\n            if (Flag.length === 0) {\n                return null\n            }\n            const StatusUDORDER = UDORDER.some(function (value, index, arr) {\n                const UDDRGNAM = value.UDDRGNAM.toLowerCase()\n                const UDGNAME = value.UDGNAME.toLowerCase()\n                const findFlag = Flag[0].ParseValueUD.some(function (value, index, arr) {\n                    return UDDRGNAM.indexOf(value) >= 0 || UDGNAME.indexOf(value)\n                })\n                return findFlag\n            })\n            const StatusTRTMNTQ1 = TRTMNTQ1.some(function (value, index, arr) {\n                const ORPROCED = value.ORPROCED.toLowerCase()\n                const findFlag = Flag[0].ParseValueTRT.some(function (value, index, arr) {\n                    return ORPROCED.match(value) !== null\n                    // return value\n                })\n                return findFlag\n            })\n            if (StatusUDORDER === false && StatusTRTMNTQ1 === false) {\n                return false\n            }\n            return true\n        }\n\n        function statusspan(source) {\n            if (source.item === 'Respirator') {\n                return 'gridtwocoltwo'\n            }\n            else return 'gridtwocolone'\n        }\n        function style_change(source) {\n            if (source.item === 'Respirator') {\n                if (source.data === '呼(侵入)') {\n                    return 'statustrue'\n                }\n                if (source.data === '呼(非侵入)') {\n                    return 'statusfalse'\n                }\n                if (source.data === 'true') {\n                    return 'statustrue'\n                }\n                return 'statusfalse'\n\n            }\n            else {\n                if (source.data) {\n                    return 'statustrue'\n                }\n                else {\n                    return 'statusfalse'\n                }\n            }\n        }\n\n        const UDORDER = this.state.UDORDER0\n        const TRTMNTQ1 = this.state.TRTMNTQ1\n\n\n        const Flag = this.state.FlagReg\n\n\n        const AntiStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"Anti\")\n        const TPNStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"TPN\")\n        const NP0Status = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"NPO\")\n        const FoleyStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"Foley\")\n        const DrainStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"Drain\")\n        const InvasiveRespiratorStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"InvasiveRespirator\")\n        const NonInvasiveRespiratorStatus = parseFlagData(TRTMNTQ1, UDORDER, Flag, \"NonInvasiveRespirator\")\n        const RespiratorStatus = RespiratorStatusParse(InvasiveRespiratorStatus, NonInvasiveRespiratorStatus)\n\n        const StatusArray = [\n            { \"item\": \"Respirator\", \"data\": RespiratorStatus },\n            { \"item\": \"CVC\", \"data\": FoleyStatus },\n            { \"item\": \"NPO\", \"data\": NP0Status },\n            { \"item\": \"TPN\", \"data\": TPNStatus },\n            { \"item\": \"Abx\", \"data\": AntiStatus },\n            { \"item\": \"Xanth\", \"data\": [] },\n            { \"item\": \"照光\", \"data\": [] },\n            { \"item\": \"DNR\", \"data\": DrainStatus }\n        ]\n\n        const statuslist = StatusArray.map(function (info, index, arr) {\n            return (\n                <div key={index} className={statusspan(info)}>\n                    <t4 className={style_change(info)}>{wardstatestringformat(info)}</t4>\n                </div>\n            );\n        })\n        const source = this.props.source\n        return (\n            <div className={source ? \"warscardstatusgrid\" : \"wardinfouserstatusgrid\"}>\n                {statuslist}\n            </div >\n        );\n    }\n}\n\nexport default Wardcarstatus\n","import React, { useState, useEffect } from \"react\";\nimport { statecolor } from '../Function/Wardstate'\nimport Wardcarstatus from './Wardcardstatus'\nimport * as Wardstate from \"../Function/Wardstate\";\nimport * as ApiProvider from '../API/ApiProvider'\nimport './Wardcardvalue.scss'\nimport moment from 'moment';\nimport { Icon } from 'antd';\n\n\nexport function WardCard(props) {\n    const [CenterMonitorValue, SetCenterMonitorValue] = useState(null)\n    const [HID, SetHID] = useState(\"\")\n    const [Timer, SetTimer] = useState(0)\n    const [ChangeAN, SetChangeAN] = useState(false)\n    const [CenterNisValue, SetCenterNisValue] = useState(null)\n    const [TimerNIS, SetTimerNIS] = useState(0)\n\n    useEffect(() => {\n        const TimerID = setInterval(() => {\n            SetTimer(Timer + 1)\n        }, 5000)\n        return () => clearInterval(TimerID);\n    }, [Timer])\n\n    useEffect(() => {\n        const TimerNIS = setInterval(() => {\n            SetTimerNIS(TimerNIS + 1)\n        }, 1000 * 60 * 5)\n        return () => clearInterval(TimerNIS);\n    }, [TimerNIS])\n\n    useEffect(() => {\n        const hisid = props.PHISTNUM.toString().trim()\n        ApiProvider.getHisidwardvalue(hisid)\n            .then(data => {\n                const source = data.data\n                const HID = source.phistnum\n                SetCenterMonitorValue(source[0]);\n                SetHID(HID)\n            })\n            .catch(err => {\n                console.log(\"Andy test getHisidwardvalue NG \" + JSON.stringify(err));\n            });\n    }, [Timer]);\n\n\n    useEffect(() => {\n        if (CenterMonitorValue !== null && CenterMonitorValue !== undefined) {\n            const pd = InitCenterData(CenterMonitorValue.abpd)\n            const ps = InitCenterData(CenterMonitorValue.abps)\n            const pm = InitCenterData(CenterMonitorValue.abpm)\n\n            if (pd === \"--\" && ps === \"--\" && pm === \"--\") {\n                SetChangeAN(true)\n                const st = moment().subtract(5, 'm').format(\"YYYYMMDDHHmm\");\n                const et = moment().format(\"YYYYMMDDHHmm\");\n                const caseno = props.PCASENO\n\n                ApiProvider.getQDVS(caseno, st, et)\n                    .then(data => {\n                        let tempData = Wardstate.XM2JSON(data.data)\n                        tempData = tempData.map(data => {\n                            const tempTime = data.rec_dat + data.rec_tim\n                            return { \"time\": tempTime, \"diastolic\": data.diastolic, \"systolic\": data.systolic }\n                        })\n                        tempData = tempData.sort((a, b) => {\n                            const tempAtime = moment(a.time, \"YYYYMMDDHHmm\").valueOf()\n                            const tempBtime = moment(b.time, \"YYYYMMDDHHmm\").valueOf()\n                            return tempAtime < tempBtime ? 1 : -1\n                        })\n                        SetCenterNisValue(tempData[0])\n                    })\n                    .catch(err => {\n                        console.log(\"Andy test getHisidwardvalue NG \" + JSON.stringify(err));\n                    });\n            }\n        }\n    }, [TimerNIS]);\n\n    function decideABP() {\n        if (ChangeAN) {\n            return CenterNisValue !== null ? `${CenterNisValue.systolic}/${CenterNisValue.diastolic}`\n                :\n                <Icon type=\"loading\" />\n        }\n        return `${CenterMonitorValue.abps}/${CenterMonitorValue.abpd}(${CenterMonitorValue.abpm})`\n    }\n\n    function InitCenterData(value) {\n        if (value === undefined || value === null || value === \"\") {\n            return \"--\"\n        }\n        else return value\n    }\n    if (CenterMonitorValue === null || CenterMonitorValue === undefined) {\n        return null\n    }\n    return (\n        <div className='Wardcardvaluelayout'>\n            <div className='Wardcardvitalvalue'>\n                <div className='valueRows' style={{ marginRight: \"16px\" }}>\n                    <div >\n                        <t4 style={{ display: \"block\", color: statecolor('HR'), }}>HR</t4>\n                        <t2 className=\"bothWordValue\" style={{ color: statecolor('HR') }}>{InitCenterData(CenterMonitorValue.hr)}</t2>\n                    </div>\n                    <div >\n                        <t4 style={{ display: \"block\", color: statecolor('SpO2') }}>SpO<sub>2</sub></t4>\n                        <t2 className=\"bothWordValue\" style={{ color: statecolor('SpO2') }}>\n                            {InitCenterData(CenterMonitorValue.spo2)}\n                            <span style={{ fontWeight: \"400\", fontSize: \"12px\" }}>%</span>\n                        </t2>\n                    </div>\n                </div>\n                <div className='valueRows'>\n                    <div >\n                        <t4 style={{ display: \"block\", color: statecolor('BP') }}>{ChangeAN ? \"BP\" : \"ABP\"}</t4>\n                        <t2 className=\"bothWordValue\" style={{ color: statecolor('BP') }}>{decideABP()}</t2>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnsGap: \"5px\" }}>\n                        <div >\n                            <t4 style={{ display: \"block\", color: statecolor('RR') }}>RR</t4>\n                            <t2 className=\"bothWordValue\" style={{ color: statecolor('RR') }}>{InitCenterData(CenterMonitorValue.rr)}</t2>\n                        </div>\n                        <div >\n                            <t4 style={{ display: \"block\", color: statecolor('BT') }}>BT</t4>\n                            <t2 className=\"bothWordValue\" style={{ color: statecolor('BT') }}>\n                                {InitCenterData(CenterMonitorValue.bt)}\n                                <span style={{ fontWeight: \"400\", fontSize: \"12px\" }}>&deg;C</span>\n                            </t2>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Wardcarstatus source={true} PCASENO={props.PCASENO} PHISTNUM={props.PHISTNUM}></Wardcarstatus>\n        </div>\n    );\n}\n","function bednumberformat(number) {\n    if (number < 10) {\n        return '0' + number\n    }\n    return number\n}\n\nfunction gender(gender) {\n    if (gender === \"1\") {\n        return '男'\n    }\n    return '女'\n}\n\nfunction WardCardgender(gender) {\n    console.log(gender)\n    if (gender === \"M\") {\n        return '男'\n    }\n    return '女'\n}\n\nfunction pregancybirthdayweekday(pregancy, birthday) {\n    const pregancydays = (new Date(birthday).getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    const pregancyweeks = pregancydays / 7\n    const pregancyweeksdays = pregancydays % 7\n    return '[' + parseInt(pregancyweeks) + '+' + parseInt(pregancyweeksdays) + ']'\n}\n\nfunction pregancynowweek(pregancy) {\n    const pregancydays = (new Date().getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    console.log(pregancydays)\n    const pregancyweeks = pregancydays / 7\n    const pregancyweeksdays = pregancydays % 7\n    console.log(pregancyweeksdays)\n    return '[' + parseInt(pregancyweeks) + '+' + parseInt(pregancyweeksdays) + ']'\n}\n\nfunction pregancytoloaclweeks(pregancy) {\n    const pregancydays = (new Date().getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    console.log(pregancydays)\n    return parseInt(pregancydays / 7)\n}\n\nfunction pregancytolocaldays(pregancy) {\n    const pregancydays = (new Date().getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n\n    return parseInt(pregancydays % 7)\n}\n\nfunction pregancyweek(pregancy, birthday) {\n    const pregancydays = (new Date(birthday).getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    const pregancyweeks = pregancydays / 7\n    return parseInt(pregancyweeks)\n}\n\nfunction pregancydays(pregancy, birthday) {\n    const pregancydays = (new Date(birthday).getTime() - new Date(pregancy).getTime()) / (24 * 60 * 60 * 1000)\n    const pregancyweekdays = pregancydays % 7\n    return parseInt(pregancyweekdays)\n}\n\nfunction birthdayweeks(birthday) {\n    const birthdays = (new Date().getTime() - new Date(birthday).getTime()) / (24 * 60 * 60 * 1000)\n    return parseInt(birthdays / 7)\n}\n\nfunction pregancyweeksanddays(bornweeks, borndays, birthdays) {\n    if (bornweeks === null || bornweeks === undefined || bornweeks === \"\") {\n        return \"-- + --\"\n    }\n    if (borndays === null || borndays === undefined || borndays === \"\") {\n        return \"-- + --\"\n    }\n    if (birthdays === null || birthdays === undefined || birthdays === \"\") {\n        return \"-- + --\"\n    }\n    const localtoborndays = parseInt((new Date().getTime() - new Date(birthdays).getTime()) / (24 * 60 * 60 * 1000)) + parseInt(borndays) + 1\n    const localweeks = parseInt(localtoborndays / 7) + parseInt(bornweeks)\n    const localdays = parseInt(localtoborndays % 7)\n    return localweeks + \"+\" + localdays\n\n}\n\nfunction WeightFormat(BornWeight, Weight) {\n    return BornWeight + \"g -> \" + Weight + \"g\"\n\n}\nexport { bednumberformat, gender, pregancybirthdayweekday, pregancynowweek, pregancyweek, pregancydays, birthdayweeks, pregancytoloaclweeks, pregancytolocaldays, pregancyweeksanddays, WardCardgender, WeightFormat }\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n//Component\nimport * as Wardstate from '../../Function/Wardstate'\nimport * as Wardcardvalue from '../WardCardvalue-k'\nimport { bednumberformat, WardCardgender } from '../../Function/Wardbedfunction'\nimport './Wardcarddetail.scss'\n//image\nimport editlogo from '../../Image/svg/edit2.svg'\nimport fileLogo from '../../Image/svg/file1.svg'\nimport file2Logo from '../../Image/svg/file2.svg'\n//antdesign\nimport { Modal, InputNumber, Button } from 'antd';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment';\n\nvar BornChangeWeek = 0\nvar BornChangeDay = 0\nvar BornChangeWeight = 0\nclass Wardcarddetail extends Component {\n    state = {\n        hoverstate: \"none\",\n        clickstate: false,\n        mouse_hover: false,\n        edit_hover: false,\n        visible: false,\n        pbasignfo: null,\n        birthdayweight: \"N\",\n        weight: 0,\n        bornweek: 0,\n        bornday: 0,\n        nowweight: 0,\n        report: 0,\n        nonreport: 0,\n        remark: \"\",\n        TRANSINID: \"\",\n        TRANSINDT: \"\",\n        TRANSINTM: \"\",\n\n        modatstatus: true,\n        persionstatus: []\n    };\n\n    componentDidMount() {\n        const { data } = this.props\n        // console.log(data)\n        const HID = data.PHISTNUM\n        const date = moment(moment().valueOf() - 24 * 60 * 60 * 1000)\n        const TRID = data.TRANSINID\n        this.API_DATA(HID, date, TRID)\n    }\n\n    API_DATA(HID, date, TRID) {\n        // ApiProvider.getStoredProcedureRESSECT(HID, 1, \"ALL\", \"DOC3924B\")\n        //     .then(data => {\n        //         const ReportList = data.data\n        //         const mapList = ReportList.filter(function (value, index, array) {\n        //             const DTstring = value.ORRCPDT.toString()\n        //             const TMstring = value.ORRCPTM.toString()\n        //             const time = DTstring + TMstring\n        //             return moment(time, 'YYYY-MM-DDHH:mm:ss').valueOf() > date.valueOf()\n        //         })\n        //         this.setState({ report: mapList.length })\n        //     })\n        //     .catch(err => {\n        //         console.log(\"Andy test getStoredProcedureRESSECT NG \" + JSON.stringify(err));\n        //     });\n        ApiProvider.getStoredProcedureORDLIST(HID, date.format('YYYY-MM-DD'), \"ALL\", \"DOC3924B\")\n            .then(data => {\n                const filter = data.data.filter(function (info, index, arr) {\n                    const time = moment(info.ORBGNDT.toString().trim() + info.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n                    console.log(moment(time).format(\"YYYYMMDD HHmmss\"))\n                    console.log(moment(date.valueOf()).format(\"YYYYMMDD HHmmss\"))\n                    return info.ORSTATUS === \"31\" && time > date.valueOf() && time < date.valueOf() + (24 * 60 * 60 * 1000)\n                })\n                console.log(filter)\n                const Reportfilter = data.data.filter(function (info, index, arr) {\n                    const time = moment(info.ORBGNDT.toString().trim() + info.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n                    return info.ORSTATUS === \"64\" && time > date.valueOf() && time < date.valueOf() + (24 * 60 * 60 * 1000)\n                })\n                this.setState({ nonreport: filter.length, report: Reportfilter.length })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getOnePatientRemark(TRID)\n            .then(data => {\n                this.setState({\n                    remark: data.data[0].context\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getOnePatientRemark NG \" + JSON.stringify(err));\n            })\n        ApiProvider.getPersionalStatus(HID)\n            .then(data => { console.log(data.data); this.setState({ persionstatus: data.data }) })\n            .catch(err => { console.log(err) })\n    }\n\n    //Module show\n    handleOk(HID, name, sex) {\n        const week = Number(BornChangeWeek)\n        const day = Number(BornChangeDay)\n        const weight = parseFloat(Number(BornChangeWeight) / 1000).toFixed(3)\n        if (weight === undefined || weight === 0 || weight === null || week === 0 || day === 0 || week === undefined || week === null || day === null || day === undefined) {\n            this.setState({ modatstatus: false })\n        }\n        else if (Number(day) > 6) {\n            this.setState({ modatstatus: false })\n        }\n        else {\n            ApiProvider.createPatientInfo(HID, name, sex, weight, week, day)\n                .then(data => {\n                    console.log(data.data);\n                    ApiProvider.getPersionalStatus(HID)\n                        .then(data => { console.log(data.data); this.setState({ persionstatus: data.data, visible: false, modatstatus: true }) })\n                        .catch(err => { console.log(err) })\n                })\n                .catch(err => { console.log(err) })\n        }\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n            modatstatus: true\n        });\n    };\n    showModal = () => { this.setState({ visible: true }); };\n\n    Modelrender(personstatus) {\n        function typefrom(from) {\n            if (from === 'Custom') {\n                return true\n            }\n            return false\n        }\n        function BornWeekAndDay(BornWeeks, BornDays) {\n            if (BornWeeks === null || BornWeeks === undefined || BornWeeks === \"\") {\n                return []\n            }\n            return [BornWeeks, BornDays]\n        }\n        const { data } = this.props\n        const source = data\n        const HID = source.PHISTNUM.toString().trim()\n        const name = source.PNAMEC.toString().trim()\n        const sex = source.PSEX.toString().trim()\n        const Birthday = source.PBIRHDT\n        const BornWeight = personstatus.BornWeight\n        const BornWeeks = personstatus.BornWeeks\n        const BornWdays = personstatus.BornDays\n        const BornStatus = BornWeekAndDay(BornWeeks, BornWdays)\n        const viewstatus = this.state.modatstatus\n        const dataArray = [\n            { item: \"病床號碼:\", value: bednumberformat(parseInt(source.HBEDNO)) },\n            { item: \"病歷號碼:\", value: source.PHISTNUM.toString().trim() },\n            { item: \"出生週數:\", value: BornStatus },\n            { item: \"生日:\", value: moment(Birthday, 'YYYYMMDD').format('YYYY/MM/DD') },\n            { item: \"出生體重:\", value: BornWeight }\n        ]\n        const dataArrayRender = dataArray.map(function (info, index, arr) {\n            if (info.item === \"出生體重:\") {\n                return (\n                    <div key={index} >\n                        <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\", height: \"50px\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                                {info.item}\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                                <InputNumber defaultValue={info.value} onChange={(value) => { BornChangeWeight = value }}></InputNumber>\n                                <div style={{ margin: \"0px 5px\" }}>g</div>\n                            </div>\n                        </div>\n                        <div style={{ display: viewstatus ? \"none\" : \"block\", color: \"red\" }}>輸入錯誤</div>\n                    </div>\n                );\n            }\n            if (info.item === \"出生週數:\") {\n                return (\n                    <div key={index}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\", height: \"50px\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                                {info.item}\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                                <InputNumber defaultValue={info.value} onChange={(value) => { BornChangeWeek = value }}></InputNumber>\n                                <div style={{ margin: \"0px 5px\" }}>週</div>\n                                <InputNumber defaultValue={info.value} onChange={(value) => { BornChangeDay = value }}></InputNumber>\n                                <div style={{ margin: \"0px 5px\" }}>日</div>\n                            </div>\n                        </div>\n                        <div style={{ display: viewstatus ? \"none\" : \"block\", color: \"red\" }}>輸入錯誤</div>\n                    </div>\n                );\n            }\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"1fr 2fr\", height: \"50px\" }}>\n                    <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                        {info.item}\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", fontSize: \"16px\" }}>\n                        {info.value}\n                    </div>\n                </div>\n            );\n        })\n        return (\n            <Modal\n                width={400}\n                title=\"填寫病床資訊\"\n                visible={this.state.visible}\n                onCancel={this.handleCancel}\n                footer={\n                    <div style={{ display: \"flex\", justifyContent: typefrom(source.type) ? 'space-between' : 'flex-end', alignItems: \"center\" }}>\n                        {/* <Button key=\"delete\" style={typefrom(source.type) ? { border: \"1px solid rgba(208,2,27,1)\", color: \"rgba(208,2,27,1)\" } : { display: \"none\" }} onClick={this.handleCancel}>清床</Button> */}\n                        <div>\n                            <Button key=\"cancel\" onClick={this.handleCancel}>取消</Button>\n                            <Button key=\"ok\" type=\"primary\" onClick={() => { this.handleOk(HID, name, sex) }}>儲存</Button>\n                        </div>\n                    </div>}>\n                {dataArrayRender}\n            </Modal>\n        );\n    }\n    render() {\n        function valueFormat(value) {\n            if (value === \"\" || value === null || value === undefined) {\n                return \"--\"\n            }\n            return value.toString()\n        }\n        function valueBornWeight(value) {\n            if (value === \"\" || value === null || value === undefined || value === 0) {\n                return \"\"\n            }\n            return value.toString() + \"g → \"\n        }\n        function statusPersion(persionstatus, QMNC, QTWER, Birthday) {\n            console.log(persionstatus)\n            // console.log(QMNC)\n            if (persionstatus.length === 0) {\n                console.log(QMNC)\n                // console.log(\"000\" + Number(QMNC.weeks))\n                if (QMNC.length === 0) {\n                    return {\n                        BornWeight: undefined,\n                        BornWeeks: undefined,\n                        BornDays: undefined\n                    }\n                }\n                const BornWeight = Wardstate.BornWeight(QTWER, Birthday)\n                const BornWeeks = Number(QMNC.weeks)\n                const BornDays = Number(QMNC.days)\n                return {\n                    BornWeight: BornWeight,\n                    BornWeeks: BornWeeks,\n                    BornDays: BornDays\n                }\n            }\n            else {\n                const Weight = Number(persionstatus[0].bweight) * 1000\n                const BornWeeks = Number(persionstatus[0].bweek)\n                const BornDays = Number(persionstatus[0].bday)\n                return {\n                    BornWeight: Weight,\n                    BornWeeks: BornWeeks,\n                    BornDays: BornDays\n                }\n            }\n        }\n        const { data, previewmode, hbedlist } = this.props\n        const { persionstatus } = this.state\n        const source = data\n        const Birthday = source.PBIRHDT\n        const QTWER = Wardstate.XM2JSON(source.QTWPER)\n        const QMNC = Wardstate.QMNCXM2JSON(source.QMNC)\n        const Weight = Wardstate.NewestWeight(QTWER)\n        const BornWeight = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornWeight\n        const BornWeeks = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornWeeks\n        const BornDays = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornDays\n        const remark = this.state.remark\n        if (source === undefined) { return null }\n        const status = {\n            date: moment(Birthday, \"YYYYMMDD\").valueOf(),\n            week: BornWeeks,\n            day: BornDays\n        }\n        const AgeStatus = Wardstate.CalculateAge(status)\n        const role = Number(sessionStorage.getItem('role'))\n\n        return (\n            <div>\n                <div className='wardcarddetailtitle'>\n                    <t3 style={{ color: \"rgba(0, 26, 109)\", fontSize: \"14px\", fontWeight: \"600\" }}>NI-{bednumberformat(Number(source.HBEDNO))}</t3>\n                    <t3 style={{ color: \"rgba(0, 26, 109)\", fontSize: \"16px\", fontWeight: \"600\" }}>{source.PNAMEC.toString().trim()}</t3>\n                    <t3 style={{ color: \"rgba(0, 26, 109)\", fontSize: \"14px\", fontWeight: \"600\" }}>{source.PHISTNUM}</t3>\n                    <t3 style={{ color: \"rgba(0, 26, 109, .7)\", fontSize: \"12px\" }}>{WardCardgender(source.PSEX)}</t3>\n                    <t3 style={{ color: \"rgba(0, 26, 109, .7)\", fontSize: \"12px\" }}>{moment(Birthday, 'YYYYMMDD').format('MM/DD')}生</t3>\n                    {role == 1 && <div onClick={this.showModal} className='wardcarddetileditbutton' style={{ cursor: \"pointer\" }}>\n                        <img src={editlogo} alt='editlogo'></img>\n                    </div>}\n                </div>\n                <div>\n                    <div className='wardinfoweeks'>\n                        <t3 style={{ color: \"rgba(0, 26, 109)\" }}>\n                            {valueFormat(BornWeeks)}+{valueFormat(BornDays)}&gt;<span style={{ fontWeight: \"900\" }}>{AgeStatus}</span>\n                        </t3>\n                        <t3 style={{ color: \"rgba(0, 26, 109)\" }}>\n                            {valueBornWeight(BornWeight)}<span style={{ fontWeight: \"900\" }}>{valueFormat(Weight)}g</span>\n                        </t3>\n                        <div className='wardinforeportgroup'>\n                            <img src={fileLogo} alt='fileLogo'></img>\n                            <div style={{ fontSize: \"12px\" }}>{this.state.report}</div>\n                            <img src={file2Logo} alt='file2Logo'></img>\n                            <div style={{ fontSize: \"12px\" }}>{this.state.nonreport}</div>\n                        </div>\n                    </div>\n                    <div style={{ display: previewmode ? \"block\" : \"none\", borderBottomWidth: \"0.5px\", borderBottomColor: \"rgba(215, 238, 255, 1)\", borderBottomStyle: \"solid\" }}>\n                        <Wardcardvalue.WardCard centerdata={source.centerMonitorData} previewmode={previewmode} PHISTNUM={source.PHISTNUM} PCASENO={source.PCASENO}></Wardcardvalue.WardCard>\n                    </div>\n                    <div style={{ height: '30px', display: 'grid', justifyContent: 'space-between', alignItems: 'center', padding: \"0px 10px\", position: 'relative', gridTemplateColumns: \"2fr 1fr\" }}>\n                        <div style={{ overflow: \"hidden\", fontSize: \"12px\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\" }}>{remark}</div>\n                        <Link className='patientviewbutton' to={{ pathname: \"/nicu/patient/\" + source.PHISTNUM.toString().trim(), state: { \"source\": hbedlist, \"HISID\": source.PHISTNUM, \"CASEID\": source.PCASENO, \"BEDNUMBER\": source.HBEDNO, \"TYPE\": true, \"TRANSINID\": this.state.TRANSINID } }}>\n                            <centerstyle>\n                                <div style={{ fontSize: \"12px\" }}>進入病人資料頁面</div>\n                            </centerstyle>\n                        </Link>\n                    </div>\n                </div>\n                {this.Modelrender(statusPersion(persionstatus, QMNC, QTWER, Birthday))}\n            </div>\n        );\n    }\n}\n\nexport default Wardcarddetail;\n","import React, { Component } from 'react';\nimport { format_bednumber } from '../../Commonfunction'\nimport editlogo from '../../Image/svg/edit2.svg'\nimport { Modal, Input, DatePicker } from 'antd';\nimport './UnpreviewWardCardDetail.scss'\nimport { bednumberformat } from '../../Function/Wardbedfunction'\n\nclass Unpreviewwardcarddetail extends Component {\n    state = { visible: false, powerLogin: 0 };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n            databool: false,\n            data: null\n        });\n    };\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n\n    handleOk(string) {\n\n        const bednumber = document.getElementById(\"bednumber\").value;\n        const hisnumber = document.getElementById(\"hisid\").value;\n        const birweek = document.getElementById(\"birweek\").value;\n        const birthday = string;\n        const weight = document.getElementById(\"weight\").value;\n        const statedata = {\n            \"BedNumber\": bednumber,\n            \"id\": hisnumber,\n            \"birweek\": birweek,\n            \"birthday\": birthday,\n            \"weight\": weight\n        }\n        this.setState({\n            visible: false,\n            data: statedata,\n            databool: false\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    // savestatus(string) {\n    // }\n\n    render() {\n        function modedisplay(mode) {\n            if (mode) {\n                return \"none\"\n            }\n            else {\n                return \"block\"\n            }\n        }\n        const number = this.props.bednumber\n        const { previewmode } = this.props\n        return (\n            <div style={{ height: '100%' }}>\n                <div style={{ height: '40px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', backgroundColor: \"rgba(215, 238, 255, 1)\", padding: \"9px 10px\" }}>\n                    <t3 style={{ color: \"rgba(61, 119, 181, 1)\" }}>NI-{format_bednumber(number)}</t3>\n                    <div className='wardcardeditbtn' onClick={this.showModal} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                        <img src={editlogo} alt='editlogo'></img>\n                    </div>\n                    <Modal\n                        width={270}\n                        title=\"填寫病床資訊\"\n                        visible={this.state.visible}\n                        onOk={() => this.handleOk(\"2019/12/12\")}\n                        onCancel={this.handleCancel}\n                    >\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr\", gridRowGap: \"10px\" }}>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>病床號碼:</t2>\n                                </centerstyle>\n                                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                    <div>{bednumberformat(number)}</div>\n                                </div>\n                            </div>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>病歷號碼:</t2>\n                                </centerstyle>\n                                <Input id=\"hisid_wardcard\" />\n                            </div>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>出生週數:</t2>\n                                </centerstyle>\n                                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                    <Input id='week' placeholder=\"20\" style={{ marginRight: \"5px\" }}></Input>\n                                    <t2 style={{ marginRight: \"5px\" }}>週</t2>\n                                    <Input id='days' placeholder=\"20\" style={{ marginRight: \"5px\" }}></Input>\n                                    <t2>日</t2>\n                                </div>\n                            </div>\n                            <div className='modulecontent'>\n                                <div style={{ display: 'flex', justifyContent: \"space-between\", alignItems: \"cneter\", width: \"69px\" }}>\n                                    <t2>生</t2>\n                                    <t2>日:</t2>\n                                </div>\n                                <DatePicker getCalendarContainer={triggerNode => triggerNode.parentNode} placeholder=\"選擇日期\" id=\"birthday\" />\n                            </div>\n                            <div className='modulecontent'>\n                                <centerstyle>\n                                    <t2>出生體重:</t2>\n                                </centerstyle>\n                                <div style={{ display: 'flex' }}><Input placeholder=\"120\" id=\"weight\" />&nbsp;g</div>\n                            </div>\n                        </div>\n                    </Modal>\n                </div>\n                <div style={{ height: 'calc(100% - 40px)',display: 'flex', justifyContent: 'center', alignItems: 'center', padding: \"10px\" }}>\n                    <div style={{ fontSize: '28px', color: \"rgba(0,0,0,0.1)\" }}>\n                        空床\n                    </div>\n                </div>\n                {/* <div style={{ display: modedisplay(previewmode) }}>\n                    <div style={{ height: '30px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: \"10px\" }}></div>\n                </div> */}\n            </div>\n        );\n    }\n}\n\nexport default Unpreviewwardcarddetail;\n","\nconst Month_format = (time) => {\n    switch (time) {\n        case 0:\n            return \"1\";\n        case 1:\n            return \"2\";\n        case 2:\n            return \"3\";\n        case 3:\n            return \"4\";\n        case 4:\n            return \"5\";\n        case 5:\n            return \"6\";\n        case 6:\n            return \"7\";\n        case 7:\n            return \"8\";\n        case 8:\n            return \"9\";\n        case 9:\n            return \"10\";\n        case 10:\n            return \"11\";\n        case 11:\n            return \"12\";\n        default:\n            return null;\n    }\n};\nconst format_bednumber = (number) => {\n    if (number < 10) {\n        return \"0\" + number;\n    }\n    return number;\n}\n\nexport { Month_format, format_bednumber }\n","import React, { Component } from 'react';\nimport { Input, Button } from 'antd';\nimport editlogo from '../Image/svg/Edit.svg'\nimport './Wardnote.scss'\nimport deleteimg from '../Image/svg/delete.svg'\nimport detail from '../Image/svg/details.svg'\nimport { Tooltip } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider';\nimport moment from 'moment'\n\nclass WardcardNote extends Component {\n    _isMounted = false;\n    state = {\n        editstate: false,\n        AnnoceRawData: [],\n        AnnoceDisplayData: [],\n        inputContent: undefined,\n        powerLogin: 0\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n    componentDidMount() {\n        this.onInputChange = this.onInputChange.bind(this);\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.queryAllAnnounce();\n    }\n    queryAllAnnounce() {\n        ApiProvider.getAllAnnounce()\n            .then(result => {\n                console.log(\"getAllAnnounce OK \" + JSON.stringify(result));\n                this.setState({\n                    AnnoceRawData: result.data,\n                    AnnoceDisplayData: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getAllAnnounce NG \" + JSON.stringify(err));\n            });\n    }\n    canceledit() {\n        //取消前先拿取server資料\n        this._isMounted = true\n        this.setState({\n            inputContent: undefined,\n            editstate: false,\n            AnnoceDisplayData: JSON.parse(JSON.stringify(this.state.AnnoceRawData))\n        });\n    }\n\n    okeditlist() {\n        //確定上傳\n        this.setState({\n            editstate: false\n        });\n        ApiProvider.createAnnounce(this.state.AnnoceDisplayData)\n            .then(result => {\n                console.log(\"createAnnounce OK \" + JSON.stringify(result));\n                this.queryAllAnnounce();\n            })\n            .catch(err => {\n                console.log(\"createAnnounce NG \" + JSON.stringify(err));\n            });\n    }\n\n    editlist() {\n        this.setState({\n            editstate: !this.state.editstate,\n            AnnoceDisplayData: (this.state.editstate) ? JSON.parse(JSON.stringify(this.state.AnnoceDisplayData)) : JSON.parse(JSON.stringify(this.state.AnnoceRawData))\n        });\n    }\n\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n\n    AddNewannouce() {\n        const announce = this.state.AnnoceDisplayData;\n\n        const doc = sessionStorage.getItem('user')\n        const newAnnounce = {\n            context: this.state.inputContent,\n            time: +(new Date()),\n            editor: doc + \"醫生\",\n            transinno: doc + moment().format(\"YYYYMMDDHHmmss\").toString()\n        }\n        announce.push(newAnnounce)\n        this.setState({\n            AnnoceDisplayData: announce,\n            inputContent: undefined\n        });\n    }\n\n    ondeleteannounce(element) {\n        const announce = this.state.AnnoceDisplayData;\n        const index = announce.findIndex(item => item === element);\n        announce.splice(index, 1);\n        this.setState({ AnnoceDisplayData: announce });\n    }\n    announcelist(announcelist, status) {\n        var list = []\n        if (announcelist === null || announcelist.length === 0) {\n            list.push(\n                <div className='announcelistcontext'>無公告</div>\n            )\n        }\n        for (let index = 0; index < announcelist.length; index++) {\n            const element = announcelist[index];\n            list.push(\n                <div className='announcelistcontext'>\n                    <t2>{index + 1}.{element.context}</t2>\n                    {this.editstatus(element, status)}\n                </div>\n            )\n        }\n        return list\n    }\n    editstatus(element, status) {\n        const time = moment(element.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n        const localTime = moment.utc(time).toDate()\n        const string = element.editor + '醫師於' + moment(localTime).format(\"MM/DD HH:mm\") + '更新'\n        if (status) {\n            return (\n                <img src={deleteimg} alt='deletelogo' onClick={() => this.ondeleteannounce(element)}></img>\n            );\n        }\n        return (\n            <Tooltip placement=\"top\" title={string}>\n                <img src={detail} alt='detaillogo'></img>\n            </Tooltip>\n        );\n    }\n    render() {\n\n        function changehight(state) {\n            if (!state) {\n                return 'wardnotecontextdisedit'\n            }\n            else {\n                return 'wardnotecontextonedit'\n\n            }\n        }\n        let annData = this.state.AnnoceDisplayData\n\n        annData = annData.sort((a, b) => {\n            let tempTimeA = moment(a.time, \"YYYY-MM-DD[T]HH:mm:ss\").valueOf()\n            let tempTimeB = moment(b.time, \"YYYY-MM-DD[T]HH:mm:ss\").valueOf()\n            return tempTimeA < tempTimeB ? 1 : -1\n        })\n\n        return (\n            <div>\n                <div className='wardnotetitle'>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>病房公告</t2>\n                    <div onMouseUp={() => this.editlist()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", width: \"18px\", cursor: \"pointer\" }}>\n                        <img src={editlogo} alt='editlogo'></img>\n                    </div>\n                </div>\n                <div>\n                    <div className={changehight(this.state.editstate)}>\n                        {this.announcelist(annData, this.state.editstate)}\n                    </div>\n                    <div style={{ display: this.state.editstate ? \"block\" : \"none\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"c\" }}>\n                        <div style={{ height: \"50px\", backgroundColor: \"rgba(238,238,238,1)\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                            <Input placeholder=\"新增公告內容\" style={{ marginLeft: \"16px\", width: \"315px\" }} value={this.state.inputContent} onChange={this.onInputChange} />\n                            <Button type=\"primary\" style={{ marginRight: \"16px\" }} onClick={() => this.AddNewannouce()}>\n                                新增\n                            </Button>\n                        </div>\n                        <div style={{ height: \"50px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <Button style={{ margin: \"10px\", width: \"90px\" }} onClick={() => this.canceledit()}>取消</Button>\n                            <Button type=\"primary\" style={{ margin: \"10px\", width: \"90px\" }} onClick={() => this.okeditlist()}>儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WardcardNote;\n","import React, { Component } from 'react';\nimport { Month_format } from '../Commonfunction'\n\nclass Bedinformation extends Component {\n    state = {\n        tableselect: false\n    }\n\n    SelectTruechange() {\n        this.setState({\n            tableselect: true\n        })\n    }\n\n    SelectFalsechange() {\n        this.setState({\n            tableselect: false\n        })\n    }\n\n    sendReturnSelect = (id) => {\n        const { selectkey, idkey, localtime } = this.props\n        const select = this.Selectswitch(idkey, selectkey)\n        if (select) {\n            const data = { \"idkey\": null, \"time\": localtime }\n            this.props.parentCallback(data);\n        }\n        else {\n            this.props.parentCallback(id);\n        }\n    }\n\n    Selectswitch(id, select) {\n        if (id === select) {\n            return true\n        }\n        else return false\n    }\n    render() {\n        function weekdatformat(weekday) {\n            switch (weekday) {\n                case 0:\n                    return \"日\"\n                case 1:\n                    return \"一\"\n                case 2:\n                    return \"二\"\n                case 3:\n                    return \"三\"\n                case 4:\n                    return \"四\"\n                case 5:\n                    return \"五\"\n                case 6:\n                    return \"六\"\n                default:\n                    return null\n            }\n        }\n        const { selectkey, idkey, localtime, data } = this.props\n        const day = Month_format(new Date(localtime).getMonth()) + \"/\" + new Date(localtime).getDate()\n        const weekday = new Date(localtime).getDay()\n        const Unselect_tablestyle = { height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"1px solid rgba(238,238,238,1)\", borderLeftWidth: \"0px\" }\n        const select = this.Selectswitch(idkey, selectkey)\n        if (data === null) {\n            return (\n                <div>\n                    <div style={select ? { border: \"1px solid rgba(59, 151, 225, 1)\", backgroundColor: \"#ffe1c499\", marginTop: '-2px' } : { cursor: \"pointer\" }} onMouseUp={() => this.sendReturnSelect({ \"idkey\": idkey, \"time\": localtime })}>\n                        <div style={Unselect_tablestyle}>\n                            <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                <t2 style={{ textAlign: \"center\" }}>{day}</t2>\n                                <t2 style={{ textAlign: \"center\" }}>{weekdatformat(weekday)}</t2>\n                            </div>\n                        </div>\n                        <div style={Unselect_tablestyle}>\n                            <t2 style={{ textAlign: \"center\" }}>0(12)</t2>\n                        </div>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                        <t2 style={Unselect_tablestyle}>0</t2>\n                    </div>\n                    <div style={{ display: select ? \"flex\" : \"none\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ width: 0, height: 0, borderStyle: \"solid\", borderWidth: \"17.3px 10px 0 10px\", borderColor: \"#ffbe59 transparent transparent transparent\" }}></div>\n                    </div>\n                </div>\n            );\n\n        }\n        return (\n            <div>\n                <div style={select ? { border: \"1px solid rgba(59, 151, 225, 1)\", backgroundColor: \"#ffe1c499\", marginTop: '-2px' } : { cursor: \"pointer\" }} onMouseUp={() => this.sendReturnSelect({ \"idkey\": idkey, \"time\": localtime })}>\n                    <div style={Unselect_tablestyle}>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                            <t2 style={{ textAlign: \"center\" }}>{day}</t2>\n                            <t2 style={{ textAlign: \"center\" }}>{weekdatformat(weekday)}</t2>\n                        </div>\n                    </div>\n                    <div style={Unselect_tablestyle}>\n                        <t2 style={{ textAlign: \"center\" }}>{data.hbedcount}({parseInt(parseInt(data.hbedcount) * 100 / 12)}%)</t2>\n                    </div>\n                    <t2 style={Unselect_tablestyle}>{data.transoutcount}</t2>\n                    <t2 style={Unselect_tablestyle}>{data.transincount}</t2>\n                    <t2 style={Unselect_tablestyle}>{data.rtcount}</t2>\n                    <t2 style={Unselect_tablestyle}>{data.nonrtcount}</t2>\n                    <t2 style={Unselect_tablestyle}>{data.tpncount}</t2>\n                </div>\n                <div style={{ display: select ? \"flex\" : \"none\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <div style={{ width: 0, height: 0, borderStyle: \"solid\", borderWidth: \"17.3px 10px 0 10px\", borderColor: \"rgba(255,190,5,1) transparent transparent transparent\" }}></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Bedinformation\n","import moment from 'moment';\n\nfunction HISAPI_stringtodate(datestring) {\n    function addzero(value) {\n        if (value < 10) {\n            return \"0\" + value\n        }\n        return value\n    }\n    const datenumber = Number(datestring)\n    const dateformat = parseInt(datenumber / 10000) + '-' + parseInt(parseInt(datenumber / 100) % 100) + '-' + addzero(parseInt(datenumber % 100))\n    return dateformat\n}\n\nfunction yyyymmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + \"/\" + Monthformat(new Date(timestamp).getMonth()) + \"/\" + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction yyyymmddstring(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + Monthformat(new Date(timestamp).getMonth()) + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction yyyymmfirstweeksate(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    return new Date(timestamp).getFullYear() + \"/\" + Monthformat(new Date(timestamp).getMonth()) + \"/1\"\n}\n\n\n\nfunction mmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return Monthformat(new Date(timestamp).getMonth()) + '/' + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction weekdateformat(timestamp) {\n    const param = new Date(timestamp).getDay()\n    const weekarray = ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六']\n    return weekarray[param]\n}\n\nfunction weekdateformatcalender(timestamp) {\n    const param = new Date(timestamp).getDay()\n    const weekarray = ['日', '一', '二', '三', '四', '五', '六']\n    return weekarray[param]\n}\n\nfunction hhmmssformat(timestamp) {\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return addZero(new Date(timestamp).getHours()) + ':' + addZero(new Date(timestamp).getMinutes())\n}\n\nfunction hhmmssformattohalf(timestamp) {\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return addZero(new Date(timestamp).getHours()) + ':30:00'\n}\n\n\nfunction yyyymmddHHmmfromat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return new Date(timestamp).getFullYear().toString() + Monthformat(new Date(timestamp).getMonth()).toString() + Dateformat(new Date(timestamp).getDate()).toString() + addZero(new Date(timestamp).getHours()).toString() + addZero(new Date(timestamp).getMinutes()).toString()\n}\n\nfunction MMDDhhmmfromat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i;\n        }\n        return i;\n    }\n    return Monthformat(new Date(timestamp).getMonth()) + '/' + Dateformat(new Date(timestamp).getDate()) + ' ' + addZero(new Date(timestamp).getHours()) + ':' + addZero(new Date(timestamp).getMinutes())\n}\n\n\nfunction daysdiff(newtime, oldtime) {\n    const timestampdiff = new Date(newtime).getTime() - new Date(oldtime).getTime()\n    const dissdays = timestampdiff / (24 * 60 * 60 * 1000)\n    return parseInt(dissdays)\n}\n\n\nfunction disabledDate(current) {\n    // Can not select days before today and today\n    return current && current < moment().endOf('day');\n}\n\nfunction compareday(date) {\n    if (new Date(date).getTime() > new Date().getTime()) {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunction formatxArrayhalf(time, interval) {\n    var xAxisarray = []\n    if (interval === 24) {\n        for (let index = 0; index < 144; index++) {\n            xAxisarray.push(time + (index * 10 * 60 * 1000))\n        }\n    }\n    if (interval === 18) {\n        for (let index = 0; index < 18; index++) {\n            xAxisarray.push(time + (60 * 60 * 1000 * 2) + (index * 60 * 60 * 1000 * 4))\n        }\n    }\n\n    if (interval === 21) {\n        for (let index = 0; index < 21; index++) {\n            xAxisarray.push(time + (60 * 60 * 1000 * 4) + (index * 60 * 60 * 1000 * 8))\n        }\n    }\n    if (interval === 14) {\n        for (let index = 0; index < 14; index++) {\n            xAxisarray.push(time + (60 * 60 * 1000 * 12) + (index * 60 * 60 * 1000 * 24))\n        }\n    }\n    return xAxisarray\n}\n\n\nfunction formatendtime(time) {\n    const endtime = new Date(yyyymmddformat(time)).getTime() + (31 * 60 * 60 * 1000)\n    return endtime\n}\n\nfunction formatintervaldays(days, interval) {\n    //false:一天 true:三天\n    if (interval === 1) {\n        return days - (24 * 60 * 60 * 1000) * 1\n\n    }\n    if (interval === 3) {\n        return days - (24 * 60 * 60 * 1000) * 3\n\n    }\n    else {\n        return null\n    }\n}\n\nfunction datestringformat(datestring) {\n    function addzero(value) {\n        if (value < 10) {\n            return \"0\" + value\n        }\n        return value\n    }\n    const datenumber = Number(datestring)\n    const dateformat = parseInt(datenumber / 10000) + '/' + parseInt(parseInt(datenumber / 100) % 100) + '/' + addzero(parseInt(datenumber % 100))\n    return dateformat\n}\n\nfunction apiyyyymmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + \"-\" + Monthformat(new Date(timestamp).getMonth()) + \"-\" + Dateformat(new Date(timestamp).getDate())\n}\n\nfunction nisapiyyyymmddformat(timestamp) {\n    function Monthformat(month) {\n        const formatmonth = month + 1\n        if (formatmonth < 10) {\n            return \"0\" + formatmonth\n        }\n        else return formatmonth\n    }\n    function Dateformat(date) {\n        if (date < 10) {\n            return \"0\" + date\n        }\n        else return date\n    }\n    return new Date(timestamp).getFullYear() + Monthformat(new Date(timestamp).getMonth()) + Dateformat(new Date(timestamp).getDate())\n}\nexport {\n    yyyymmddformat,\n    weekdateformat,\n    hhmmssformat,\n    mmddformat,\n    MMDDhhmmfromat,\n    daysdiff,\n    disabledDate,\n    compareday,\n    weekdateformatcalender,\n    yyyymmfirstweeksate,\n    hhmmssformattohalf,\n    formatxArrayhalf,\n    formatendtime,\n    formatintervaldays,\n    datestringformat,\n    yyyymmddHHmmfromat,\n    yyyymmddstring,\n    apiyyyymmddformat,\n    nisapiyyyymmddformat,\n    HISAPI_stringtodate\n}\n","import React, { Component } from 'react';\nimport Labviewitem from './Labviewitem'\n// import { labdata } from '../../Data/Wardviewdata'\nimport * as FiliterReg from '../../Function/FiliterReg'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport moment from 'moment'\nimport * as ApiGithub from '../../API/ApiGithub'\n\nvar MG_VALUE, PROC_VALUE, CA_VALUE;\nclass Labviewlayout extends Component {\n    state = {\n        parser: [{ \"apply_condition\": { \"name\": \"\" }, \"mappings\": [] }],\n        dummy_mg: 0,\n        dummy_pct: 0,\n        dummy_ca: 0,\n\n        RESDGLU1: [],\n        RESLAB02: [],\n        RESLAB01: [],\n        RESDBGAS: [],\n        RESLAB0C: [],\n        RESSECT: [],\n\n        prePickerDate: null,\n        preHID: null,\n        preTRDT: null\n    }\n    componentDidMount() {\n        ApiGithub.getGitHubJson(\"Labview.json\")\n            .then(result => {\n                console.log(\"getGitHubJson Labview.json OK \" + JSON.stringify(result.data));\n                this.setState({\n                    parser: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getGitHubJson Labview.json NG \" + JSON.stringify(err));\n            })\n        const { PickerDate, caseinfo } = this.props\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        this.setState({ prePickerDate: PickerDate, preHID: caseinfo.HISID, preTRDT: TRDT })\n        this.getLabData(PickerDate, caseinfo.HISID, TRDT)\n    }\n\n    componentDidUpdate() {\n        const { PickerDate, caseinfo } = this.props\n        const { prePickerDate, preHID, preTRDT } = this.state\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        if (prePickerDate !== PickerDate || preHID !== caseinfo.HISID || preTRDT !== TRDT) {\n            this.setState({ prePickerDate: PickerDate, preHID: caseinfo.HISID, preTRDT: TRDT })\n            this.getLabData(PickerDate, caseinfo.HISID, TRDT)\n        }\n    }\n    getLabData(PickerDate, HID, TRDT) {\n        function selectMonthInterval(PickerDate) {\n            const timestampInterval = new Date().getTime() - PickerDate\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        const TransinDate = moment(TRDT).format(\"YYYY-MM-DD\")\n        const MonthInterval = selectMonthInterval(PickerDate)\n        ApiProvider.getStoredProcedureRESDGLU1(HID, TransinDate)\n            .then(data => { this.setState({ RESDGLU1: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESDGLU1 NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESLAB02(HID, TransinDate)\n            .then(data => { this.setState({ RESLAB02: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESLAB02 NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESLAB01(HID, TransinDate)\n            .then(data => { this.setState({ RESLAB01: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESLAB01 NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESDBGAS(HID, TransinDate)\n            .then(data => { this.setState({ RESDBGAS: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESDBGAS NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESLAB0C(HID, TransinDate)\n            .then(data => { this.setState({ RESLAB0C: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESLAB0C NG \" + JSON.stringify(err)); });\n        ApiProvider.getStoredProcedureRESSECT(HID, MonthInterval, \"ALL\", \"DOC3924B\")\n            .then(data => { this.setState({ RESSECT: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureRESSECT NG \" + JSON.stringify(err)) });\n    }\n    findLastestTargetValue(arr, target) {\n        const { caseinfo } = this.props\n        const { parser } = this.state\n        let latestTimestamp = 0;\n        let latestvalue = undefined;\n        const selected_parser = parser.find(item => item.apply_condition.name.match(target) !== null);\n        const arrayLength = arr.length;\n        arr.forEach((item, index) => {\n            ApiProvider.getStoredProcedureRESDISP(caseinfo.HISID, item.ORMM, caseinfo.CASEID, item.ORDSEQNO)\n                .then(data => {\n                    console.log(\"getStoredProcedureRESDISP OK \" + JSON.stringify(data.data));\n                    const RESDISP = data.data\n\n                    //search for target\n                    const selected_mapping = selected_parser.mappings.find(mapping => mapping.key === target)\n                    const re = new RegExp(selected_mapping.regex_str, selected_mapping.regex_flags)\n\n                    RESDISP.forEach(element => {\n                        const match = element.CONTENT.match(re)\n                        if (match !== null) {\n                            const currentTimeStr = item.ORRCPDT + \"-\" + item.ORRCPTM\n                            const currentItemTimestamp = moment(currentTimeStr.trim(), \"YYYY-MM-DD-HH.mm.ss\").valueOf()\n                            const matchValue = match[selected_mapping.position]\n\n                            if (matchValue !== \"\" && matchValue !== undefined && matchValue !== null && currentItemTimestamp > latestTimestamp) {\n                                latestvalue = matchValue\n                                if (target === \"mg\") {\n                                    MG_VALUE = latestvalue\n                                } else if (target === \"pct\") {\n                                    PROC_VALUE = latestvalue\n                                } else if (target === \"ca\") {\n                                    CA_VALUE = latestvalue\n                                }\n                            }\n                        }\n                    })\n                    this.updateLabviewIfNeed(arrayLength, index, target)\n                })\n                .catch(err => {\n                    console.log(\"getStoredProcedureRESDISP NG \" + JSON.stringify(err));\n                    this.updateLabviewIfNeed(arrayLength, index, target)\n                });\n        })\n    }\n    updateLabviewIfNeed(arrayLength, currentIdx, target) {\n        const retryMax = 3\n        if (currentIdx === arrayLength - 1) {\n            if (target === \"mg\" && this.state.dummy_mg < retryMax) {\n                this.setState({ dummy_mg: this.state.dummy_mg + 1 })\n            } else if (target === \"pct\" && this.state.dummy_pct < retryMax) {\n                this.setState({ dummy_pct: this.state.dummy_pct + 1 })\n            } else if (target === \"ca++\" && this.state.dummy_ca < retryMax) {\n                this.setState({ dummy_ca: this.state.dummy_ca + 1 })\n            }\n        }\n    }\n    TitleRender() {\n        const { Source } = this.props\n        if (Source === \"Wardview\") {\n            return null\n        }\n        else return (\n            <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                <t1 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>最近實驗室數據</t1>\n            </div>\n        );\n    }\n    render() {\n        function ListEndData(array) {\n            if (array.length === 0) {\n                return \"--\"\n            }\n            return array[array.length - 1]\n        }\n        // const data = labdata.data\n        const { PickerDate, Source } = this.props\n        const { RESDGLU1, RESLAB02, RESLAB01, RESDBGAS, RESSECT } = this.state\n\n        const RESDGLU1LIST = FiliterReg.ListForTime(RESDGLU1, PickerDate)\n        const RESLAB02LIST = FiliterReg.ListForTime(RESLAB02, PickerDate)\n        const RESLAB01LIST = FiliterReg.ListForTime(RESLAB01, PickerDate)\n        const RESDBGASLIST = FiliterReg.ListForTime(RESDBGAS, PickerDate)\n        // const RESLAB0CLIST = FiliterReg.ListForTime(RESLAB0C, PickerDate)\n\n        const RESSECT_CA_LIST = FiliterReg.ListForTimeAndTarget(RESSECT, PickerDate, \"Ca\")\n        this.findLastestTargetValue(RESSECT_CA_LIST, \"ca\")\n\n        const RESSECT_MG_LIST = FiliterReg.ListForTimeAndTarget(RESSECT, PickerDate, \"Mg\")\n        this.findLastestTargetValue(RESSECT_MG_LIST, \"mg\")\n\n        const RESSECT_PROC_LIST = FiliterReg.ListForTimeAndTarget(RESSECT, PickerDate, \"Procalcitonin\")\n        this.findLastestTargetValue(RESSECT_PROC_LIST, \"pct\")\n\n        const GLUFAST = ListEndData(RESDGLU1LIST.filter(function (value, index, array) {\n            return value.GLUFAST !== null\n        }))\n        const WBC = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV01 !== null\n        }))\n        const SEG = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV14 !== null\n        }))\n        const LYMP = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV15 !== null\n        }))\n        const HGB = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV03 !== null\n        }))\n        const PLATELET = ListEndData(RESLAB02LIST.filter(function (value, index, array) {\n            return value.RSV09 !== null\n        }))\n        const NA = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV13 !== null\n        }))\n        const K = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV14 !== null\n        }))\n        const CA = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV15 !== null\n        }))\n        const P = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV17 !== null\n        }))\n        const ALB = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV02 !== null\n        }))\n        const CRP = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV30 !== null\n        }))\n        const PH = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS07 !== null\n        }))\n        const PCO2 = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS06 !== null\n        }))\n        const BE = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS01 !== null\n        }))\n        const PO2 = ListEndData(RESDBGASLIST.filter(function (value, index, array) {\n            return value.SS08 !== null\n        }))\n        const BUN = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV05 !== null\n        }))\n        //02\n        const CR = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV06 !== null\n        }))\n        const ALT = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV11 !== null\n        }))\n        const AST = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV12 !== null\n        }))\n        const TBIL = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV08 !== null\n        }))\n        const DBIL = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV25 !== null\n        }))\n        const ALKP = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV09 !== null\n        }))\n        const TOTALCA = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV03 !== null\n        }))\n        const IRON = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV26 !== null\n        }))\n        const TIBC = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV27 !== null\n        }))\n        const FERRITIN = ListEndData(RESLAB01LIST.filter(function (value, index, array) {\n            return value.RSV03 !== null\n        }))\n        const FeSat = feSatformat(IRON, TIBC)\n        function feSatformat(IRON, TIBC) {\n            console.log(IRON)\n            if (IRON === null || IRON.RSV26 === null || IRON.RSV26 === undefined || Number(IRON.RSV26) === 0) {\n                return null\n            }\n            if (TIBC === null || TIBC.RSV27 === null || TIBC.RSV27 === undefined || Number(TIBC.RSV27) === 0) {\n                return null\n            }\n            return parseFloat(Number(IRON.RSV26) / Number(TIBC.RSV27)).toFixed(1)\n        }\n        function areainterval(source) {\n            if (source === \"Wardview\") {\n                return \"0px\"\n            }\n            else return \"10px\"\n        }\n\n        function nullvalue(value) {\n            if (value === undefined || value === null || value === NaN) {\n                return null\n            }\n            return value.toString().trim()\n        }\n        const TitleR = this.TitleRender()\n        return (\n            <div >\n                {TitleR}\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 5fr\", gridColumnGap: areainterval(Source) }}>\n                    <div style={{ border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(GLUFAST.GLUFAST)} title={\"Glucose\"} time={(GLUFAST)}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(WBC.RSV01)} title={\"WBC\"} time={WBC}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(SEG.RSV14)} title={\"Seg\"} time={SEG}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(LYMP.RSV15)} title={\"Lymp\"} time={LYMP}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(HGB.RSV03)} title={\"Hgb\"} time={HGB}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PLATELET.RSV09)} title={\"Platelet\"} time={PLATELET}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"5fr 1fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(NA.RSV13)} title={\"Na\"} time={NA}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(K.RSV14)} title={\"K\"} time={K}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(CA_VALUE)} title={\"Ca\"} time={CA}></Labviewitem> {/*parse*/}\n                        <Labviewitem Source={Source} value={nullvalue(P.RSV17)} title={\"P\"} time={P}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(MG_VALUE)} title={\"Mg\"} time={null}></Labviewitem> {/*parse*/}\n                    </div>\n                    <div style={{ border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(ALB.RSV02)} title={\"ALB\"} time={ALB}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 4fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(CRP.RSV32)} title={\"CRP\"} time={CRP}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PROC_VALUE)} title={\"PCT\"} time={null}></Labviewitem>  {/*parse*/}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(PH.SS07)} title={\"pH\"} time={PH}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PCO2.SS06)} title={\"PCO\"} time={PCO2}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(BE.SS01)} title={\"BE\"} time={BE}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(PO2.SS08)} title={\"PO\"} time={PO2}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 2fr 2fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(BUN.RSV05)} title={\"BUN\"} time={BUN}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(CR.RSV06)} title={\"Cr\"} time={CR}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(ALT.RSV11)} title={\"ALT\"} time={ALT}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(AST.RSV12)} title={\"AST\"} time={AST}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(TBIL.RSV08)} title={\"TBil\"} time={TBIL}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(DBIL.RSV25)} title={\"DBil\"} time={DBIL}></Labviewitem>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 4fr\", gridColumnGap: areainterval(Source), marginTop: areainterval(Source) }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(ALKP.RSV09)} title={\"ALK-P\"} time={ALKP}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(TOTALCA.RSV03)} title={\"Total Ca\"} time={TOTALCA}></Labviewitem>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4,1fr)\", border: \"rgba(238,238,238,1) solid 1px\" }}>\n                        <Labviewitem Source={Source} value={nullvalue(IRON.RSV26)} title={\"Iron\"} time={IRON}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(TIBC.RSV27)} title={\"TIBC\"} time={TIBC}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(FeSat * 100)} title={\"FeSat\"} time={null}></Labviewitem>\n                        <Labviewitem Source={Source} value={nullvalue(FERRITIN.RSV03)} title={\"Ferritin\"} time={FERRITIN}></Labviewitem> {/* No Data */}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Labviewlayout\n","import React, { Component } from 'react';\nimport Bedinformation from './Bedinfo'\nimport { DatePicker, Button } from 'antd';\nimport moment from 'moment';\nimport * as apiProvide from '../API/ApiProvider'\nimport { yyyymmddformat } from '../Function/Timeformat'\nimport './WardBedinformation.scss'\n\nclass Wardbedinformation extends Component {\n    state = {\n        subselectdate: null,\n        selectid: null,\n        PickerDate: moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf(),\n        bedinfo: []\n    }\n    componentDidMount() {\n        this.apiData(this.state.PickerDate)\n    }\n    apiData(PickerDate) {\n        apiProvide.getWardDebInfo(moment(PickerDate).format(\"YYYY-MM-DD\"))\n            .then(data => {\n                this.setState({ bedinfo: data.data })\n            })\n            .catch(err => { console.log(err) })\n    }\n    onChangeDate = (date, datestring) => {\n        this.setState({\n            PickerDate: date.valueOf(),\n            selectid: null\n        }, () => { this.apiData(this.state.PickerDate) })\n    }\n    callbackFunction = (idnumber) => {\n        this.setState({\n            selectid: idnumber.idkey,\n            subselectdate: idnumber.time\n        })\n    }\n    transferListlayout(trans) {\n        const RenderCell = trans.map(function (element, index, arr) {\n            return (\n                <div className='wardbedinfoitemcontextgridRow'>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>{element.caseid}</t2>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>{element.pnamec}</t2>\n                </div>\n            );\n        })\n        return (\n            <div>\n                <div className='wardbedinfoitemcontextgridRow'>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>病歷號碼</t2>\n                    <t2 className='wardbedinfoitemcontextgridRowStyle'>姓名</t2>\n                </div>\n                {RenderCell}\n            </div>\n        );\n    }\n    infoitem() {\n        const selectDateitem = this.state.subselectdate\n        const bedinfo = this.state.bedinfo\n        const filterdate = bedinfo.filter(function (info, index) {\n            const tempDate = moment(info.Date, 'YYYYMMDD')\n            return yyyymmddformat(tempDate) === yyyymmddformat(selectDateitem)\n        })\n\n        if (this.state.selectid === null) {\n            return null\n        }\n        else {\n            const inType = filterdate.length === 0\n            const outType = filterdate.length === 0\n\n            const transIn = filterdate.length === 0 ? 0 : filterdate[0].transoutIncountperson\n            const transOut = filterdate.length === 0 ? 0 : filterdate[0].transoutOutcountperson\n\n            return (\n                <div>\n                    <div className='wardbedinfoitemcontext'>\n                        <div className='wardbedinfoitemcontextgrid'>\n                            <div>\n                                <t2 className='wardbedinfoitemcontexttitle'>轉入病人清單</t2>\n                                <div className='wardbedinfoitemcontextgridlayout'>\n                                    {inType ? <div className='nopatient'>無病人</div> : this.transferListlayout(transIn)}\n                                </div>\n                            </div>\n                            <div>\n                                <t2 className='wardbedinfoitemcontexttitle'>轉出病人清單</t2>\n                                <div className='wardbedinfoitemcontextgridlayout'>\n                                    {outType ? <div className='nopatient'>無病人</div> : this.transferListlayout(transOut)}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n            // }\n        }\n\n    }\n    bedinfotitle() {\n        const maparray = ['日期', '佔床數', '轉出', '轉入', '侵入式呼吸器', '非侵入式呼吸器', '開立PN']\n        const title = maparray.map(function (info, index) {\n            return (\n                <div className='wardbedinfotablerowtitle'>\n                    <t2>{info}</t2>\n                </div>\n            );\n        })\n        return title\n    }\n    weekbedinfo() {\n        var infolist = []\n        const infoList = this.state.bedinfo\n        const dateTime = this.state.PickerDate\n        for (let i = 0; i < 7; i++) {\n            const localtime = dateTime - (i * 24 * 60 * 60 * 1000);\n            const filterdate = infoList.filter(function (info, index) {\n                const tempDate = moment(info.Date, 'YYYYMMDD').valueOf()\n                return tempDate === localtime\n            })\n            // console.log(filterdate)\n            if (filterdate.length === 0) {\n                infolist.push(\n                    <div >\n                        <Bedinformation data={null} key={i} localtime={localtime} selectkey={this.state.selectid} idkey={i} parentCallback={this.callbackFunction}></Bedinformation>\n                    </div>\n                )\n            }\n            else {\n                infolist.push(\n                    <div >\n                        <Bedinformation data={filterdate[0]} key={i} localtime={localtime} selectkey={this.state.selectid} idkey={i} parentCallback={this.callbackFunction}></Bedinformation>\n                    </div>\n                )\n            }\n        }\n        infolist.reverse()\n        return infolist\n\n    }\n\n    trainDay = (e) => {\n        // const { caseinfo } = this.props\n        const { PickerDate } = this.state\n        // const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        // const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                // const bTemp = bTime - (6 * day)\n                // bronDate <= bTemp && this.onChange(moment(bTime))\n                this.onChangeDate(moment(bTime))\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD'))\n                this.onChangeDate(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= aTemp && this.onChangeDate(moment(aTime))\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        return (\n            <div style={{ marginTop: \"10px\" }}>\n                <div className='wardbrdinfomationtitle'>\n                    <centerstyle>\n                        <t2 style={{ fontSize: \"16px\", color: \"rgba(0, 0, 0, .7)\" }}>病房每日統計</t2>\n                        <t2 style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"rgba(0, 0, 0, .7)\", paddingLeft: \"10px\" }}>每日上午七點統計</t2>\n                    </centerstyle>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"140px 120px\", gridColumnGap: \"5px\" }}>\n                        <DatePicker getCalendarContainer={triggerNode => triggerNode.parentNode} showToday={true} disabledDate={(current) => { return current && current > moment().startOf('day') }} value={moment(this.state.PickerDate)} format={\"YYYY/MM/DD\"} onChange={this.onChangeDate} allowClear={false} />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\", marginLeft: \"10px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"minus-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                    </div>\n                </div>\n                <div className='wardbedinformationcontext'>\n                    <div>\n                        {this.bedinfotitle()}\n                    </div>\n                    {this.weekbedinfo()}\n                </div>\n                {this.infoitem()}\n            </div>\n        );\n    }\n}\n\nexport default Wardbedinformation;\n","import React, { Component } from 'react';\nimport detaillogo from '../Image/svg/details.svg'\nimport editlogo from '../Image/svg/Edit.svg'\nimport { Tooltip, Input, Button } from 'antd';\nimport './Schedule_event.scss'\nimport * as ApiProvider from '../API/ApiProvider';\n//資料\n// import { eventdata } from '../jsonResponse'\nimport moment from 'moment';\n\nconst parseBedNumber = (bedNumber) => {\n    if (Number.isInteger(bedNumber)) {\n        return bedNumber > 9 ? bedNumber : `0${bedNumber.toString()}`;\n    }\n\n    return '00'\n}\n\nclass Schedule_event_list extends Component {\n    state = {\n        detailstate: \"none\",\n        // pressitemstate: \"all\",\n        items_interval: 0,\n        powerLogin: 0,\n        EditMode: false,\n        inputContent: '',\n        selSchedule: '排程',\n\n        Scheduledata: [],\n        status: false,\n        PickerDate: moment().valueOf(),\n        TRANSINID: null\n    }\n\n    querySchedule(time, ID) {\n        const timeDate = moment(time).format(\"YYYY-MM-DD\")\n        // const et = moment(moment(time).format(\"YYYY/MM/DD\"), \"YYYY/MM/DD\").valueOf() + (24 * 60 * 60 * 1000)\n        // console.log(ID, st, et)\n        ApiProvider.getOnePatientSchedule(ID, timeDate)\n            .then(data => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n                this.setState({ Scheduledata: data.data })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }\n\n    queryALLSchedule() {\n        // ApiProvider.getAllSchedule()\n        //     .then(data => {\n        //         console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n        //         this.setState({ Scheduledata: data.data })\n        //     })\n        //     .catch(err => {\n        //         console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n        //     });\n        const date = this.props.PickerDate\n        const selectdate = moment(date).format(\"YYYY-MM-DD\")\n        console.log(selectdate)\n        ApiProvider.getAllPatientFromDate(selectdate)\n            .then(data => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n                this.setState({ Scheduledata: data.data })\n            })\n            .catch(err => {\n                console.log(\"getAllPatientFromDate NG \" + JSON.stringify(err));\n            })\n    }\n    componentDidMount() {\n        this.onInputChange = this.onInputChange.bind(this);\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        const source = this.props.source\n        if (source === 1) {\n            const ID = this.props.caseinfo.TRANSINID\n            const date = this.props.PickerDate\n            console.log(this.props.caseinfo)\n            if (ID === null) {\n\n            }\n            else {\n                this.setState({\n                    PickerDate: date,\n                    TRANSINID: ID\n                })\n                this.querySchedule(date, ID)\n            }\n        }\n        else {\n            //get ALL\n            this.queryALLSchedule()\n        }\n\n    }\n\n    componentDidUpdate() {\n        const source = this.props.source\n        if (this.state.status) {\n            this.setState({ status: false })\n            if (source === 1) {\n                const ID = this.props.caseinfo.TRANSINID\n                this.querySchedule(this.state.PickerDate, ID)\n            }\n            else {\n                //get ALL\n                this.queryALLSchedule()\n            }\n        }\n        const propsDate = this.props.PickerDate\n        const stateDate = this.state.PickerDate\n        if (propsDate !== stateDate) {\n            this.setState({ PickerDate: propsDate })\n            if (source === 1) {\n                const ID = this.props.caseinfo.TRANSINID\n                console.log(moment(propsDate).format(\"YYYYMMDDHHmmss\"))\n                console.log(moment(stateDate).format(\"YYYYMMDDHHmmss\"))\n                this.querySchedule(propsDate, ID)\n            }\n            else {\n                //get ALL\n            }\n        }\n    }\n    selSchedule(value) {\n        this.setState({ selSchedule: value })\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n    onClickEnter() {\n        console.log(this.state.PickerDate)\n        const timeNowStr = new Date().toISOString()\n        console.log(timeNowStr)\n        const writter = sessionStorage.getItem(\"user\")\n        const name = this.props.caseinfo.PBASINGNINFO.PNAMEC\n        const hisid = this.props.caseinfo.HISID\n        const date = this.props.PickerDate\n        const selectdate = moment(date).format(\"YYYY-MM-DD\")\n        console.log(date)\n        console.log(selectdate)\n        ApiProvider.createPatientSchedule(this.props.caseinfo.PLOCSTART.HBEDNO, this.state.inputContent, timeNowStr, this.props.caseinfo.TRANSINID, this.state.selSchedule, writter, name, hisid, selectdate)\n            .then(data => {\n                console.log(\" OK \" + JSON.stringify(data.data))\n                this.setState(\n                    {\n                        EditMode: false,\n                        inputContent: undefined,\n                        status: true\n                    })\n            })\n            .catch(err => {\n                console.log(\" Err \" + JSON.stringify(err))\n            })\n    }\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    timechange(timestamp) {\n        const changetime = new Date(timestamp).getHours() + \":\" + new Date(timestamp).getMinutes()\n        return changetime\n    }\n\n    // pressbtn(pressitem) {\n    //     this.setState(\n    //         {\n    //             pressitemstate: pressitem\n    //         }\n    //     );\n    // }\n    listevent() {\n        let ScheduleList = this.state.Scheduledata\n        console.log(ScheduleList)\n        if (ScheduleList.length === 0) {\n            return <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\" }}>\n                當日無排程\n                    </div>\n        }\n        // const RenderData = scheduleList(eventstate)\n\n        if (ScheduleList.length > 1) {\n            ScheduleList = ScheduleList.sort((a, b) => {\n                let tempTimeA = moment(moment(a.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss'), \"YYYYMMDD\").valueOf()\n                let tempTimeB = moment(moment(b.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss'), \"YYYYMMDD\").valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n        }\n\n        const CellRender = ScheduleList.map(function (info, index, arr) {\n            const time = moment(info.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n            const localTime = moment.utc(time).toDate()\n            const text = <div>{info.writter}醫師於{moment(localTime).format(\"YYYY/MM/DD HH:mm:ss\")}更新</div>\n            return (\n                <div key={index} className='CellLayout'>\n                    <div className='Context'>\n                        <div style={{ height: '30px', width: \"60px\", borderRadius: \"4px\", backgroundColor: \"rgba(124,179,5,1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <t2 style={{ color: 'white' }}>NI-{parseBedNumber(info.bednumber)}</t2>\n                            {/* itemchange(info.type) */}\n                        </div>\n                        <div style={{ fontSize: \"16px\" }}>\n                            {info.name}\n                            {/* {moment(localTime).format(\"HH:mm\")}  */}\n                            {info.context}\n                        </div>\n                    </div>\n                    <Tooltip placement=\"right\" title={text}>\n                        <div>\n                            <img src={detaillogo} alt='detaillogo'></img>\n                        </div>\n                    </Tooltip>\n                </div>\n            );\n        })\n        return CellRender\n    }\n\n\n    //測驗項目功能_區間按鈕樣式\n    // SwitchTestItemInterval(testiteminterval) {\n    //     const stylestate = this.state.pressitemstate\n    //     if (testiteminterval === stylestate) {\n    //         return 'buttonselect'\n    //     }\n    //     else return 'buttonUnselect'\n    // }\n    //測驗項目功能_區間按鈕選擇\n    Onchangetimeinterval(changestate) { this.setState({ items_interval: changestate }) }\n    EditControl() {\n        const edit = this.props.editstatus\n        if (edit) {\n            return (\n                <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                    <img src={editlogo} alt=\"editlogo\" />\n                </div>\n            );\n        }\n        return null\n    }\n    render() {\n        const { title } = this.props\n        const EditButton = this.EditControl()\n        return (\n            <div className='ScheduleEventLayout'>\n                <div className='ScheduleEventTitle'>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t2>\n                    {EditButton}\n                </div>\n                <div className='ScheduleEventContext'>\n                    <div className='ContextList'>\n                        {this.listevent()}\n                    </div>\n                </div>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div value='排程' style={{ display: \"grid\", width: 150, height: \"32px\", justifyContent: \"center\", alignItems: \"center\", border: \"1px solid #d9d9d9\", borderRadius: \"4px\", marginRight: \"5px\" }}>排程</div>\n                        <Input placeholder=\"輸入當日內容\" value={this.state.inputContent} onChange={this.onInputChange}></Input>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Schedule_event_list\n","import React, { Component } from 'react';\nimport Schedule_event_list from '../Module/Schedule_event'\nimport moment from 'moment';\n\nclass Wardschedule extends Component {\n\n    render() {\n        return (\n            <Schedule_event_list  PickerDate={moment(moment().format(\"YYYYMMDD\"),\"YYYYMMDD\").valueOf()}  source={this.props.source} title=\"今日排程\" data={this.props.scheduleData} editstatus={this.props.editstatus} />\n        );\n    }\n}\n\n\nexport default Wardschedule\n","import React, { Component } from 'react';\nimport WardcardNote from './Wardnote'\nimport Wardbedinformation from './WardBedinformation'\nimport Wardschedule from './Wardschedule'\nimport './Wardinfoindex.scss'\n// import * as ApiProvider from '../API/ApiProvider';\n\n// const SCHEDULE_TYPE_EVENT = \"事件\";\n\nclass Wardinfoindex extends Component {\n    render() {\n        return (\n            <div className='Wardinfoindexcontent'>\n                <div style={{ fontSize: \"22px\", color: \"rgba(0, 0, 0, .7)\", fontWeight: \"600\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>NICU總覽</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"5px\", marginTop: \"10px\" }}>\n                    <WardcardNote></WardcardNote>\n                    <Wardschedule source={0} editstatus={false}></Wardschedule>\n                </div>\n                <Wardbedinformation></Wardbedinformation>\n            </div>\n        );\n    }\n}\n\nexport default Wardinfoindex;\n","// Get api\n\n\n\n//資料更新時間\nconst updatetime = {\n    'time': 1567051200000\n}\n\nconst eventdata = [\n    {\n        \"item\": \"schedule\",\n        \"time\": 1565748000000,\n        \"result\": \"手術前檢查\",\n        \"name\": \"林博偉\",\n        \"bednumber\": \"01\",\n        \"writter\": \"林天財\"\n    },\n    {\n        \"item\": \"event\",\n        \"time\": 1565748000000,\n        \"result\": \"傷口變大了\",\n        \"name\": \"王添財\",\n        \"bednumber\": \"02\",\n        \"writter\": \"林天財\"\n    }\n]\n\n//Ward_bed_vitalData_last POST\nconst ward_bed_lastData = [\n    {\n        \"MedicalNumber\": \"123456789\",\n        \"Data\": {\n            \"HR\": 120,\n            \"ABP1\": 45,\n            \"ABP2\": 30,\n            \"ABP3\": 35,\n            \"SpO2\": 96,\n            \"BT\": 37.5,\n            \"RR\": 22\n        },\n        \"Status\": {\n            \"Ventilator\": false,\n            \"TPN\": true,\n            \"NPO\": false,\n            \"ECMO\": false,\n            \"Antibiotics\": false,\n            \"Hemodialysis\": false,\n            \"Foley\": false,\n            \"Drain\": false\n        }\n    },\n    {\n        \"MedicalNumber\": \"987654321\",\n        \"Data\": {\n            \"HR\": 120,\n            \"ABP1\": 45,\n            \"ABP2\": 30,\n            \"ABP3\": 35,\n            \"SpO2\": 96,\n            \"BT\": 37.5,\n            \"RR\": 22\n        }\n    },\n    {\n        \"MedicalNumber\": \"123454321\",\n        \"Data\": {\n            \"HR\": 120,\n            \"ABP1\": 45,\n            \"ABP2\": 30,\n            \"ABP3\": 35,\n            \"SpO2\": 96,\n            \"BT\": 37.5,\n            \"RR\": 22\n        }\n    }\n]\n\nconst WardInfo = {\n    UpdateTime: 1567051200000,\n    Director: \"林又新\",\n    HeadNurse: \"鄭麗貞\",\n    BedTotal: 12,\n    SignBed: 7,\n    EmptyBed: 9,\n    TransferBed: 8,\n    NewPatient: 2,\n    Ventilator: 1,\n    NPO: 7,\n    TPN: 4,\n    ECMO: 8,\n    Antibiotics: 6,\n    Hemodialysis: 1,\n    Announcement: [\n        {\n            time: 1567051200000,\n            text: \"7/10 王大明醫師請假，下午請李小華醫師cover ，6/30XXX醫師留\",\n            writter: \"張大帥\"\n        },\n        {\n            time: 1567051250000,\n            text: \"「超音波用完請記得歸還原位」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        },\n        {\n            time: 1567051290000,\n            text: \"「6月起擴大公費施打B型肝炎免疫球蛋白」\",\n            writter: \"邱獻章\"\n        }\n    ]\n}\nconst labdata = [\n    [{ title: \"Glucose\", score: 77, date: \"2019/01/01\" }],\n    [{ title: \"WBC\", score: 19647, date: \"Seg 59%2019/01/01\" }],\n    [{ title: \"WBC\", score: 14.8, date: \"2019/01/01\" }],\n    [{ title: \"Platelet\", score: 125, date: \"2019/01/01\" }],\n    [\n        { title: \"Na+\", score: 125, date: \"2019/01/01\" },\n        { title: \"K+\", score: 125, date: \"2019/01/01\" },\n        { title: \"Ca2+\", score: 125, date: \"2019/01/01\" },\n        { title: \"P\", score: 125, date: \"2019/01/01\" },\n        { title: \"Mg2+\", score: 125, date: \"2019/01/01\" },\n    ],\n    [\n        { title: \"CRP\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Procalcitionin\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Current Antibiotics\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Bun\", score: 125, date: \"2019/01/01\" },\n        { title: \"Cr\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"ALT\", score: 125, date: \"2019/01/01\" },\n        { title: \"AST\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"TBIL\", score: 125, date: \"2019/01/01\" },\n        { title: \"D.Bil\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"ALKP\", score: 125, date: \"2019/01/01\" },\n        { title: \"Total Ca\", score: 125, date: \"2019/01/01\" },\n        { title: \"LDH\", score: 125, date: \"2019/01/01\" }\n    ],\n    [\n        { title: \"Iron\", score: 125, date: \"2019/01/01\" },\n        { title: \"TIBC\", score: 125, date: \"2019/01/01\" },\n        { title: \"FeSat\", score: 125, date: \"2019/01/01\" },\n        { title: \"Ferritin\", score: 125, date: \"2019/01/01\" }\n    ]\n]\nconst jsonResponse = [\n    {\n        \"HISID\": \"H1234567\",\n        \"CASEID\": \"C1234567\",\n        \"name\": \"吳大胖之女\",\n        \"gender\": 1,\n        \"birthday\": \"2019/11/11\",\n        \"bednumber\": 1,\n        \"pregnancy\": \"2019/11/10\",\n        \"weightbirth\": 1400,\n        \"weight\": 2300,\n        'report': 3,\n        'nonreport': 3,\n        'note': '隨時注意病人血壓狀態隨時注意病人血壓狀態',\n        'type':'NIS',\n        'MainDoctor':'張大春',\n        'IcuInTime':'2019/11/11'\n    },\n    {\n        \"HISID\": \"H9876543\",\n        \"CASEID\": \"C12345622\",\n        \"name\": \"吳大胖之女\",\n        \"gender\": 1,\n        \"birthday\": \"2019/11/11\",\n        \"bednumber\": 2,\n        \"pregnancy\": \"2019/11/10\",\n        \"weightbirth\": 1400,\n        \"weight\": 2300,\n        'report': 3,\n        'nonreport': 3,\n        'note': '隨時注意病人血壓狀態隨時注意病人血壓狀態',\n        'type':'Custom',\n        'MainDoctor':'張大春',\n        'IcuInTime':'2019/11/11'\n    }\n]\n\n//Wardview TCP data\nconst centerrowdata = {\n    \"id\": 20190817001,\n    \"data\": {\n        \"Weight\": 5000,\n        \"WeightDif\": 700,\n        \"BP\": [\n            {\n                \"time\": 1565395200,\n                \"DBP\": 60,\n                \"SBP\": 90\n            }\n        ],\n        \"HR\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"RR\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"BT\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"Urine\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"Suger\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ],\n        \"SP\": [\n            {\n                \"time\": 1565395200,\n                \"data\": 60\n            }\n        ]\n    }\n}\n\nconst growdata = {\n    Male_befor: [\n        { y: 22, min: 420, max: 600 },\n        { y: 23, min: 470, max: 700 },\n        { y: 24, min: 510, max: 800 },\n        { y: 25, min: 570, max: 900 },\n        { y: 26, min: 610, max: 1040 },\n        { y: 27, min: 700, max: 1200 },\n        { y: 28, min: 790, max: 1340 },\n        { y: 29, min: 870, max: 1520 },\n        { y: 30, min: 1000, max: 1740 },\n        { y: 31, min: 1120, max: 2000 },\n        { y: 32, min: 1300, max: 2240 },\n        { y: 33, min: 1500, max: 2500 },\n        { y: 34, min: 1700, max: 2800 },\n        { y: 35, min: 1960, max: 3040 },\n        { y: 36, min: 2180, max: 3300 },\n        { y: 37, min: 2400, max: 3500 },\n        { y: 38, min: 2600, max: 3780 },\n        { y: 39, min: 2810, max: 3980 },\n        { y: 40, min: 3000, max: 4200 },\n        { y: 41, min: 3200, max: 4440 },\n        { y: 42, min: 3400, max: 4700 },\n        { y: 43, min: 3600, max: 5000 },\n        { y: 44, min: 3800, max: 5270 }\n    ],\n    FeMale_before: [\n        { y: 22, min: 400, max: 580 },\n        { y: 23, min: 430, max: 640 },\n        { y: 24, min: 490, max: 730 },\n        { y: 25, min: 550, max: 850 },\n        { y: 26, min: 580, max: 1000 },\n        { y: 27, min: 630, max: 1120 },\n        { y: 28, min: 700, max: 1300 },\n        { y: 29, min: 800, max: 1500 },\n        { y: 30, min: 900, max: 1700 },\n        { y: 31, min: 1050, max: 1910 },\n        { y: 32, min: 1200, max: 2180 },\n        { y: 33, min: 1400, max: 2400 },\n        { y: 34, min: 1600, max: 2680 },\n        { y: 35, min: 1850, max: 2930 },\n        { y: 36, min: 2050, max: 3200 },\n        { y: 37, min: 2300, max: 3490 },\n        { y: 38, min: 2480, max: 3700 },\n        { y: 39, min: 2680, max: 3900 },\n        { y: 40, min: 2820, max: 4100 },\n        { y: 41, min: 2980, max: 4300 },\n        { y: 42, min: 3150, max: 4520 },\n        { y: 43, min: 3300, max: 4740 },\n        { y: 44, min: 3500, max: 5000 }\n    ],\n    Male_after: [\n        { y: 0, min: 2500, max: 4300 },\n        { y: 1, min: 2600, max: 4500 },\n        { y: 2, min: 2800, max: 4900 },\n        { y: 3, min: 3100, max: 5200 },\n        { y: 4, min: 3400, max: 5600 },\n        { y: 5, min: 3600, max: 5900 },\n        { y: 6, min: 3800, max: 6300 }\n    ],\n    FeMale_after: [\n        { y: 0, min: 2400, max: 4200 },\n        { y: 1, min: 2500, max: 4400 },\n        { y: 2, min: 2700, max: 4600 },\n        { y: 3, min: 2900, max: 5000 },\n        { y: 4, min: 3100, max: 5300 },\n        { y: 5, min: 3300, max: 5600 },\n        { y: 6, min: 3500, max: 5900 }\n    ]\n}\n\nconst Note_data = [\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 },\n    { data: \"林曉明醫師今天對這位病人下了第一筆註記\", updatedoctor: \"林曉明\", updatetime: 1572417000000 }\n]\n\nconst todo_data = [\n    {\n        Time: 1566287810473,\n        Content: \"幫大明量體重\",\n        Flag: true,\n        Editor: \"修改者\"\n    },\n    {\n        Time: 1566287810473,\n        Content: \"幫大明量體重\",\n        Flag: true,\n        Editor: \"修改者\"\n    },\n    {\n        Time: 1566287810473,\n        Content: \"幫大明量體重\",\n        Flag: true,\n        Editor: \"修改者\"\n    }\n]\n\n\nexport { jsonResponse, centerrowdata, WardInfo, updatetime, ward_bed_lastData, labdata, eventdata, growdata, Note_data, todo_data };","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { growdata } from '../jsonResponse'\nimport moment from 'moment';\n\n//40週前\nclass WardlifeChart extends Component {\n\n    componentDidMount() {\n\n        const { weightList, svg_key } = this.props\n        this.setState({ preWeight: weightList })\n        d3.select(\"#\" + svg_key).remove()\n        this.drawChart();\n    }\n\n    componentDidUpdate() {\n        const { weightList, svg_key } = this.props\n        const { preWeight } = this.state\n        if (weightList !== preWeight) {\n            this.setState({ preWeight: weightList })\n            d3.select(\"#\" + svg_key).remove()\n            this.drawChart();\n        }\n\n    }\n\n    drawChart() {\n        const { gender, svg_key, weightList, grewinfo, width, height, id_key } = this.props\n        if (grewinfo === null || grewinfo === undefined) {\n            return null\n        }\n        const bornweeks = Number(grewinfo.WEEK_BORN)\n        const borndays = Number(grewinfo.DAY_BORN)\n        const Birthday = grewinfo.BIRTHDAY\n        const pregencyTimestamp = moment(Birthday, \"YYYYMMDD\").valueOf() - ((bornweeks * 7) + borndays) * 24 * 60 * 60 * 1000\n\n\n        function tickValues(growdata, gender) {\n            if (gender === 'M' || gender === '1') {\n                const Row = growdata.Male_befor\n                return [Row[Row.length - 1].min, Row[Row.length - 1].max]\n            }\n            const Row = growdata.FeMale_before\n            return [Row[Row.length - 1].min, Row[Row.length - 1].max]\n        }\n\n        const tick = tickValues(growdata, gender)\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([0, 5500])\n            .range([height, 0])\n\n        var x = d3.scaleLinear()\n            .domain([22, 44])\n            .range([0, width])\n\n\n        var yAxis = d3.axisLeft(y)\n            .ticks(10)\n            .tickSize(0, 0)\n            .tickPadding(10)\n            .tickFormat(function (d, index) { return index === 11 ? d + \"(g)\" : d });\n\n\n        var xAxis = d3.axisTop(x)\n            .ticks(14)\n            .tickSize(0, 0)\n            .tickPadding(-15)\n            .tickFormat(function (d, index) { return d + 'W'; });\n\n        var yRightAxis = d3.axisLeft(y)\n            .tickValues(tick)\n            .tickSize(0, 0)\n            .tickPadding(-40)\n            .tickFormat(function (d, index) {\n                if (index === 0) {\n                    return \"10th%\"\n                }\n                if (index === 1) {\n                    return \"90th%\"\n                }\n                return null\n            });\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_key)\n            .style(\"height\", \"435px\")\n            .style(\"width\", \"100%\")\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 30 + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(\" + 0 + \", \" + height + \")\");\n\n        svg.append(\"g\")\n            .call(yRightAxis)\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(\" + width + \", \" + 0 + \")\");\n\n        for (let index = 0; index < 13; index++) {\n            const number = index * 500\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(number))\n                .attr('x2', width)\n                .attr('y2', y(number))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n\n        }\n\n        // for (let index = 0; index < 13; index++) {\n        //     const number = index * 500\n        //     svg.append('line')\n        //         .attr('x1', 0)\n        //         .attr('y1', y(number))\n        //         .attr('x2', width)\n        //         .attr('y2', y(number))\n        //         .style('stroke', 'rgba(187, 187, 187, 1)')\n        //         .style('stroke-width', 1)\n        //         .style('stroke-dasharray', 5.5);\n        // }\n\n        for (let index = 22; index < 45; index++) {\n            if (index % 2 == 0) {\n                svg.append('line')\n                    .attr('x1', x(index))\n                    .attr('y1', 0)\n                    .attr('x2', x(index))\n                    .attr('y2', height)\n                    .style('stroke', 'rgba(187, 187, 187, 1)')\n                    .style('stroke-width', 1)\n                    .style('stroke-dasharray', 5.5);\n            }\n        }\n\n        if (gender === 'M' || gender === '1') {\n            for (let index = 0; index < growdata.Male_befor.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_befor[index].y))\n                    .attr('y1', y(growdata.Male_befor[index].min))\n                    .attr('x2', x(growdata.Male_befor[index + 1].y))\n                    .attr('y2', y(growdata.Male_befor[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 3);\n            }\n\n            for (let index = 0; index < growdata.Male_befor.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_befor[index].y))\n                    .attr('y1', y(growdata.Male_befor[index].max))\n                    .attr('x2', x(growdata.Male_befor[index + 1].y))\n                    .attr('y2', y(growdata.Male_befor[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 3);\n            }\n        }\n        else {\n            for (let index = 0; index < growdata.FeMale_before.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_before[index].y))\n                    .attr('y1', y(growdata.FeMale_before[index].min))\n                    .attr('x2', x(growdata.FeMale_before[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_before[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 3);\n            }\n\n            for (let index = 0; index < growdata.FeMale_before.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_before[index].y))\n                    .attr('y1', y(growdata.FeMale_before[index].max))\n                    .attr('x2', x(growdata.FeMale_before[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_before[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 3);\n            }\n        }\n        const datasource = weightList\n        //x 週數 y體重 NIS\n        for (let index = 0; index < datasource.length; index++) {\n            const element = datasource[index];\n            const BornDay = element.rec_dat.toString().trim()\n            const BornTime = element.rec_tim.toString().trim()\n            const time = BornDay + BornTime\n            const weighttimestamp = moment(time, \"YYYYMMDDHHmm\").valueOf() //體重時間\n            const weeks = (weighttimestamp - pregencyTimestamp) / (7 * 24 * 60 * 60 * 1000) //體重週數\n            console.log(weeks)\n            if (weeks < 22) {\n                continue\n            }\n            if (weeks > 44) {\n                continue\n            }\n            svg.append('circle')\n                .attr('cx', x(weeks))\n                .attr('cy', y(Number(element.value2) * 1000))\n                .attr('r', 3)\n                .style('fill', 'green')\n        }\n\n\n    }\n\n    render() {\n        const { id_key, svg_key } = this.props\n        return (\n            <div id={id_key}>\n\n            </div>\n        );\n    }\n}\n\nexport default WardlifeChart;\n","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { growdata } from '../jsonResponse'\nimport moment from 'moment'\n\n//40週後\nclass Wardmonthafter extends Component {\n    componentDidMount() {\n        const { weightList, svg_key } = this.props\n        this.setState({ preWeight: weightList })\n        d3.select(\"#\" + svg_key).remove()\n        this.drawChart();\n    }\n\n    componentDidUpdate() {\n        const { weightList, svg_key } = this.props\n        const { preWeight } = this.state\n        if (weightList !== preWeight) {\n            this.setState({ preWeight: weightList })\n            d3.select(\"#\" + svg_key).remove()\n            this.drawChart();\n        }\n    }\n    drawChart() {\n        const { gender, svg_key, weightList, grewinfo, width, height, id_key } = this.props\n        if (grewinfo === null || grewinfo === undefined) {\n            return null\n        }\n        const Birthday = grewinfo.BIRTHDAY\n        const pregencyTimestamp = moment(Birthday, \"YYYYMMDD\").valueOf()\n        //var vertigo = datarelease();\n\n        function tickValues(growdata, gender) {\n            if (gender === 'M' || gender === '1') {\n                const Row = growdata.Male_after\n                console.log(Row)\n                return [Row[Row.length - 1].min, Row[Row.length - 1].max]\n            }\n            const Row = growdata.FeMale_after\n            return [Row[Row.length - 1].min, Row[Row.length - 1].max]\n\n        }\n\n        const tick = tickValues(growdata, gender)\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([1500, 7000])\n            .range([height, 0])\n\n\n\n        var x = d3.scaleLinear()\n            .domain([0, 6])\n            .range([0, width])\n\n        var yAxis = d3.axisLeft(y)\n            .ticks(10)\n            .tickSize(0, 0)\n            .tickPadding(10)\n            .tickFormat(function (d, index) { return index === 11 ? d + \"(g)\" : d });\n\n        var yRightAxis = d3.axisLeft(y)\n            .tickValues(tick)\n            .tickSize(0, 0)\n            .tickPadding(-40)\n            .tickFormat(function (d, index) {\n                if (index === 0) { return \"10th%\" }\n                if (index === 1) { return \"90th%\" }\n                return null\n            });\n\n\n        var xAxis = d3.axisTop(x)\n            .ticks(6)\n            .tickSize(0, 0)\n            .tickPadding(-15)\n            .tickFormat(function (d) {\n                return d + \"m\";\n            });\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_key)\n            .style(\"height\", \"435px\")\n            .style(\"width\", \"100%\")\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 30 + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(\" + 0 + \", \" + height + \")\");\n\n\n        svg.append(\"g\")\n            .call(yRightAxis)\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", \"translate(\" + width + \", \" + 0 + \")\");\n\n        for (let index = 0; index < 7; index++) {\n            svg.append('line')\n                .attr('x1', x(index))\n                .attr('y1', 0)\n                .attr('x2', x(index))\n                .attr('y2', height)\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n\n        }\n\n        for (let index = 1; index < 13; index++) {\n            const number = index * 500 + 1000\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(number))\n                .attr('x2', width)\n                .attr('y2', y(number))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n\n        }\n\n        // for (let index = 22; index < 45; index++) {\n        //     svg.append('line')\n        //         .attr('x1', x(index))\n        //         .attr('y1', 0)\n        //         .attr('x2', x(index))\n        //         .attr('y2', height)\n        //         .style('stroke', 'rgba(187, 187, 187, 1)')\n        //         .style('stroke-width', 1)\n        //         .style('stroke-dasharray', 5.5);\n        // }\n\n        if (gender === 'M' || gender === '1') {\n            for (let index = 0; index < growdata.Male_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_after[index].y))\n                    .attr('y1', y(growdata.Male_after[index].min))\n                    .attr('x2', x(growdata.Male_after[index + 1].y))\n                    .attr('y2', y(growdata.Male_after[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 3);\n            }\n\n            for (let index = 0; index < growdata.Male_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.Male_after[index].y))\n                    .attr('y1', y(growdata.Male_after[index].max))\n                    .attr('x2', x(growdata.Male_after[index + 1].y))\n                    .attr('y2', y(growdata.Male_after[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 3);\n            }\n        }\n        else {\n            for (let index = 0; index < growdata.FeMale_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_after[index].y))\n                    .attr('y1', y(growdata.FeMale_after[index].min))\n                    .attr('x2', x(growdata.FeMale_after[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_after[index + 1].min))\n                    .style('stroke', 'orange')\n                    .style('stroke-width', 3);\n            }\n\n            for (let index = 0; index < growdata.FeMale_after.length - 1; index++) {\n                svg.append('line')\n                    .attr('x1', x(growdata.FeMale_after[index].y))\n                    .attr('y1', y(growdata.FeMale_after[index].max))\n                    .attr('x2', x(growdata.FeMale_after[index + 1].y))\n                    .attr('y2', y(growdata.FeMale_after[index + 1].max))\n                    .style('stroke', 'blue')\n                    .style('stroke-width', 3);\n            }\n        }\n\n        const datasource = weightList\n        //x時間 y體重\n        for (let index = 0; index < datasource.length; index++) {\n            const element = datasource[index];\n            const BornDay = element.rec_dat.toString().trim()\n            const BornTime = element.rec_tim.toString().trim()\n            const time = BornDay + BornTime\n            const weighttimestamp = moment(time, \"YYYYMMDDHHmm\").valueOf() //體重時間\n            const Month = (weighttimestamp - pregencyTimestamp) / (30 * 24 * 60 * 60 * 1000) //體重週數\n            if (Month < 0 || Month > 6) {\n                continue\n            }\n            if (Number(element.value2) * 1000 > 1500) {\n                svg.append('circle')\n                    .attr('cx', x(Month))\n                    .attr('cy', y(Number(element.value2) * 1000))\n                    .attr('r', 3)\n                    .style('fill', 'green')\n            }\n\n        }\n        // const datacustom = wardchartoncustom\n        // for (let index = 0; index < datacustom.length; index++) {\n        //     const element = datacustom[index];\n        //     svg.append('circle')\n        //         .attr('cx', x(element.x))\n        //         .attr('cy', y(element.y))\n        //         .attr('r', 3)\n        //         .style('fill', 'blue')\n        // }\n\n    }\n\n    render() {\n        const { id_key, svg_key } = this.props\n        return (\n            <div id={id_key}>\n                <svg id={svg_key}></svg>\n            </div>\n        );\n    }\n}\n\nexport default Wardmonthafter;\n","import React, { Component } from 'react';\nimport WardlifeChart from './Wardlifechart'\nimport Wardmonthafter from './Wardmonthafter'\n\n\nclass Wardgrewchart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            test_items_interval: 0\n        };\n    }\n    switch_monthy() {\n        const { Data, WeightList, grewinfo } = this.props\n        const switch_data = this.state.test_items_interval\n        const width = (window.screen.availWidth - 650) / 2, height = 350\n        switch (switch_data) {\n            case 0:\n                return <WardlifeChart width={width} height={height} grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife\"} svg_key={\"wardlife_svg\"} gender={Data.PSEX}></WardlifeChart>\n            case 1:\n                return <Wardmonthafter width={width} height={height} grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife_after\"} svg_key={\"wardlife_after_svg\"} gender={Data.PSEX}></Wardmonthafter>\n            default:\n                return null;\n        }\n    }\n    //測驗項目功能_區間按鈕樣式\n    SwitchTestItemInterval(testiteminterval) {\n        const time_selectbtn_style = {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"25px\",\n            padding: \"0px 5px\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#001a6dbb\",\n            color: \"white\",\n            fontSize: \"1rem\",\n            borderWidth: \"1px\",\n            borderStyle: \"solid\",\n            borderColor: \"#001a6d88\",\n            cursor: \"pointer\"\n        }\n        const time_unselectbtn_style = {\n            display: \"flex\", justifyContent: \"center\",\n            alignItems: \"center\", height: \"25px\",\n            padding: \"0px 5px\",\n            borderRadius: \"4px\", backgroundColor: \"white\",\n            color: \"#001a6d88\", fontSize: \"1rem\",\n            borderWidth: \"1px\", borderStyle: \"solid\",\n            borderColor: \"#001a6d88\",\n            cursor: \"pointer\"\n        }\n        if (testiteminterval === this.state.test_items_interval) {\n            return time_selectbtn_style\n        }\n        else return time_unselectbtn_style\n    }\n    //測驗項目功能_區間按鈕選擇\n    Onchangetimeinterval(changestate) {\n        this.setState(\n            {\n                test_items_interval: changestate\n            }\n        )\n    }\n    render() {\n        return (\n            <div>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: 'center', backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>生長曲線圖</t2>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"5px\", alignItems: \"center\" }}>\n                        <div style={this.SwitchTestItemInterval(1)} onMouseUp={() => this.Onchangetimeinterval(0)}>40週前</div>\n                        <div style={this.SwitchTestItemInterval(0)} onMouseUp={() => this.Onchangetimeinterval(1)}>40週後</div>\n                    </div>\n                </div>\n                {this.switch_monthy()}\n            </div>\n        );\n    }\n}\nexport default Wardgrewchart\n","import React, { Component } from 'react';\nimport editlogo from '../../Image/svg/Edit.svg'\nimport detaillogo from '../../Image/svg/details.svg'\nimport { Tooltip, Input, Button } from 'antd';\nimport './Notice.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass Notice extends Component {\n    state = {\n        caseinfo: this.props.caseinfo,\n        EditMode: false,\n        noticeData: [],\n        inputContent: undefined,\n        powerLogin: 0,\n        preTRID: null,\n    }\n    componentDidMount() {\n        //bind function\n        this.onInputChange = this.onInputChange.bind(this);\n        //query patient notice\n        const TRID = this.props.caseinfo.TRANSINID.toString().trim()\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins, preTRID: TRID })\n        this.queryPatientImportant(TRID);\n    }\n    componentDidUpdate() {\n        const TRID = this.props.caseinfo.TRANSINID.toString().trim()\n        const preTRID = this.state.preTRID\n        if (TRID !== preTRID) {\n            this.setState({ preTRID: TRID })\n            this.queryPatientImportant(TRID);\n        }\n    }\n    queryPatientImportant(TRID) {\n        ApiProvider.getOnePatientImportantMatter(TRID)\n            .then(data => {\n                console.log(\"getOnePatientImportantMatter OK \" + JSON.stringify(data));\n                this.setState({ noticeData: data.data });\n            })\n            .catch(err => {\n                console.log(\"getOnePatientImportantMatter NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString();\n        ApiProvider.createPatientImportantMatter(this.state.inputContent, \"\", this.state.caseinfo.HISID, timeNowStr, this.state.caseinfo.TRANSINID)\n            .then(data => {\n                console.log(\"createPatientImportantMatter OK \" + JSON.stringify(data));\n                this.queryPatientImportant(this.state.preTRID);\n            })\n            .catch(err => {\n                console.log(\"createPatientImportantMatter NG \" + JSON.stringify(err));\n            });\n        this.setState(\n            {\n                EditMode: false,\n                inputContent: undefined\n            }\n        )\n    }\n    renderEditButton() {\n        if (this.props.disableEdit === true) {\n            return null;\n        } else {\n            return (\n                <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                    <img src={editlogo} alt=\"editlogo\" />\n                </div>\n            )\n        }\n    }\n\n    render() {\n        function remarkcellRender(dataList) {\n            if (Array.isArray(dataList)) {\n                if (dataList.length === 0) {\n                    return (\n                        <div style={{ height: \"50px\", paddingLeft: \"15px\", display: \"flex\", alignItems: \"center\" }}>\n                            無病人註記\n                        </div>\n                    );\n                }\n                const remarkcell = dataList.map((info, index) =>\n                    <div key={index} className='noticecontext'>\n                        <div style={{ whiteSpace: \"pre-wrap\" }}>{info.context}</div>\n                        <Tooltip placement=\"topRight\" title={tooltiptext(info.Editor, info.time)}>\n                            <img src={detaillogo} alt=\"detaillogo\" />\n                        </Tooltip>\n                    </div>\n                )\n                return remarkcell\n            }\n            return (\n                <div style={{ height: \"50px\", paddingLeft: \"15px\", display: \"flex\", alignItems: \"center\" }}>\n                    無病人註記\n                </div>\n                // <div style={{ padding: \"5px 15px\" }}>無病人註記</div>\n            );\n        }\n        function tooltiptext(editor, time) {\n            function nullvalue(value) {\n                if (value === null || value === undefined) {\n                    return \"--\"\n                }\n                return value\n            }\n            const t = moment(time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n            const localTime = moment.utc(t).toDate()\n            const displayTime = moment(localTime).format(\"MM/DD HH:mm\")\n            return nullvalue(editor) + \"醫師於\" + displayTime + \"更新\"\n        }\n\n        console.log(this.state.noticeData)\n\n        const fixData = this.state.noticeData.sort((a, b) => {\n            let tempTimeA = moment(a.time, 'YYYY-MM-DDThh:mm:ssZ').valueOf()\n            let tempTimeB = moment(b.time, 'YYYY-MM-DDThh:mm:ssZ').valueOf()\n            return tempTimeA < tempTimeB ? 1 : -1\n        })\n\n        const remarkcell = remarkcellRender(fixData)\n        const { TextArea } = Input;\n        return (\n            <div style={{ marginBottom: '10px' }}>\n                {this.props.disableEdit\n                    ?\n                    <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                        <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>病人註記</t2>\n                    </div>\n                    :\n                    <div className='noticetitle'>\n                        <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>病人註記</t2>\n                        {this.renderEditButton()}\n                    </div>}\n                <div className='noticecontextborder'>\n                    {remarkcell}\n                </div>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", backgroundColor: \"rgba(238,238,238,1)\" }}>\n                        <TextArea id=\"noticeContent\" placeholder=\"輸入當日註記內容\" value={this.state.inputContent} onChange={this.onInputChange} autoSize={true}></TextArea>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Notice\n","import React, { Component } from \"react\";\nimport { Labwarningvalue } from \"../../Function/Wardstate\";\nimport moment from \"moment\";\nimport { Tooltip } from \"antd\";\n\nclass Labviewitem extends Component {\n  TimeRender(time) {\n    function formatTime(timevalue) {\n      if (timevalue === null || time === \"--\") {\n        return \"--\"\n      }\n      return moment(time.ORRESDT.toString().trim() + time.ORRESTM.toString().trim(), \"YYYY-MM-DDHH.mm.ss\").format(\"MM/DD\")\n    }\n    function formatTimeToolTip(timevalue) {\n      if (timevalue === null || time === \"--\") {\n        return \"--\"\n      }\n      return moment(time.ORRESDT.toString().trim() + time.ORRESTM.toString().trim(), \"YYYY-MM-DDHH.mm.ss\").format(\"HH:mm\")\n    }\n    // console.log(time)\n    if (time === null || time === \"--\") {\n      return (\n        <centerstyle>\n          {\"--\"}\n        </centerstyle>\n      )\n    }\n    return (\n      <centerstyle>\n        <Tooltip placement=\"bottom\" title={formatTimeToolTip(time)}>\n          {formatTime(time)}\n        </Tooltip>\n      </centerstyle>\n    );\n  }\n\n  fixtitle = title => {\n    switch (title) {\n      case \"Seg\":\n      case \"Lymp\":\n        return (\n          <div>\n            <t3>{title}</t3>\n            <t3 style={{ fontSize: \"10px\" }}>%</t3>\n          </div>\n        );\n      case \"Na\":\n        return (\n          <div>\n            <t3>{\"Na\"}</t3>\n            <sup>+</sup>\n          </div>\n        );\n      case \"K\":\n        return (\n          <div>\n            <t3>{\"K\"}</t3>\n            <sup>+</sup>\n          </div>\n        );\n      case \"Ca\":\n        return (\n          <div>\n            <t3>{\"Ca\"}</t3>\n            <sup>2+</sup>\n          </div>\n        );\n      case \"Mg\":\n        return (\n          <div>\n            <t3>{title}</t3>\n            <sup>2+</sup>\n          </div>\n        );\n      case \"PCO\":\n        return (\n          <div>\n            <t3>{title}</t3>\n            <sub>2</sub>\n          </div>\n        );\n      case \"PO\":\n        return (\n          <div>\n            <t3>{title}</t3>\n            <sub>2</sub>\n          </div>\n        );\n      default:\n        break;\n    }\n    return title;\n  };\n\n  render() {\n    function formatValue(value, title) {\n      if (title === \"FeSat\") {\n        if (value === \"--\") {\n          return \"--\"\n        }\n        return value + \"%\"\n      }\n      return value\n    }\n    function RowsGrid(source) {\n      if (source === \"Wardview\") {\n        return \"1fr 1fr 1fr\";\n      }\n      return \"1fr 1fr 1fr\";\n    }\n    function RowsHeight(source) {\n      if (source === \"Wardview\") {\n        return \"80px\";\n      }\n      return \"80px\";\n    }\n\n    const { value, title, time, Source } = this.props;\n    // console.log(time)\n    const timeCell = this.TimeRender(time)\n    const fixtitle = this.fixtitle(title);\n    return (\n      <div style={{\n        display: \"grid\",\n        gridTemplateRows: RowsGrid(Source),\n        height: RowsHeight(Source)\n      }}>\n        <centerstyle>\n          {/* <t3>{title}</t3> */}\n          {fixtitle}\n        </centerstyle>\n        <centerstyle>\n          <t2\n            style={{\n              fontSize: \"20px\",\n              color: Labwarningvalue(value, title) ? \"black\" : \"red\"\n            }}\n          >\n            {formatValue(value, title)}\n          </t2>\n        </centerstyle>\n        {timeCell}\n      </div>\n    );\n  }\n}\n\nexport default Labviewitem;\n","import React from 'react'\nimport moment from 'moment';\nexport function firstarea_Reg_IO() {\n    return [\"輸液\"];\n}\n\nexport function Secondarea_reg_IO() {\n    return [\"血品\"];\n}\n\nexport function Thirdarea_reg_IO() {\n    return [\"進食\"];\n}\n\nexport function Fourtharea_reg_IO() {\n    return [\"失血\", \"滲液\", \"嘔吐\", \"引流\", \"穿刺\", \"透析\", \"沖洗\", \"排便\", \"排尿\"];\n}\n\n\n\nexport function Feedarea_Reg_IO() {\n    return [\"進食\"];\n}\n\nexport function IVarea_reg_IO() {\n    return [\"血品\", \"輸液\"];\n}\n\nexport function UOarea_reg_IO() {\n    return [\"排尿\"];\n}\n\nexport function Otherarea_reg_IO() {\n    return [\"失血\", \"滲液\", \"嘔吐\", \"引流\", \"穿刺\", \"透析\", \"沖洗\", \"排便\"];\n}\n\nexport function Select_Main_Doc(DOCLIST) {\n    const MainDoc = DOCLIST.filter(function (value, index, array) {\n        return value.PDTYPE === \"B\"\n    })\n    if (MainDoc.length === 0) {\n        return \"\"\n    }\n    else {\n        const data = MainDoc[0]\n        return data.PDDOCNMC\n    }\n}\n\nexport function SumFeedDataMapReduce(arr) {\n    const sumlist = arr.map(function (value, index) {\n        return Number(value.inp_val2)\n    })\n    var sum = 0\n    for (let index = 0; index < sumlist.length; index++) {\n        const element = sumlist[index];\n        sum = sum + element\n    }\n    return sum\n}\n\nexport function SumIVDataMapReduce(arr) {\n    const sumlist = arr.map(function (value, index) {\n        return Number(value.inp_val1)\n    })\n    var sum = 0\n    for (let index = 0; index < sumlist.length; index++) {\n        const element = sumlist[index];\n        sum = sum + element\n    }\n    return sum\n}\n\nexport function SumUrineDataMapReduce(arr) {\n    const sumlist = arr.map(function (value, index) {\n        return Number(value.inp_val1)\n    })\n    var sum = 0\n    for (let index = 0; index < sumlist.length; index++) {\n        const element = sumlist[index];\n        sum = sum + element\n    }\n    return sum\n}\nexport function SumInOtherDataMapReduce(arr) {\n    return arr.map(el => Number(el.inp_val1)).reduce((a, b) => a + b);\n}\nexport function SumOutOtherDataMapReduce(arr) {\n    return arr.map(el => Number(el.out_val1)).reduce((a, b) => a + b);\n}\n\n\n\n//累積報告\n\nexport function ListForTime(arr, time) {\n    var DataList = []\n    const pickerTime = time + (24 * 60 * 60 * 1000)\n    for (let index = 0; index < arr.length; index++) {\n        const element = arr[index];\n        const objectTime = moment(element.ORRESDT.toString().trim() + element.ORRESTM.toString().trim(), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n        if (objectTime <= pickerTime) {\n            DataList.push(element)\n        }\n    }\n    return DataList\n}\n\nexport function ListForTimeAndTarget(arr, time, target) {\n    var DataList = []\n    arr.forEach(element => {\n        const parseTimestamp = new Date(element.ORRCPDT.split(\"-\")[0], element.ORRCPDT.split(\"-\")[1], element.ORRCPDT.split(\"-\")[2]).getTime()\n        // const nowTimestamp = new Date(time).getTime()\n        if (parseTimestamp <= new Date(time).getTime() && element.ORPROCED.indexOf(target) > -1) {\n            DataList.push(element)\n        }\n    })\n    return DataList\n}\n\nexport function CaRegString(ressectobject) {\n    var select = []\n    if (Array.isArray(ressectobject)) {\n        for (let index = 0; index < ressectobject.length; index++) {\n            const element = ressectobject[index];\n            const elementstring = element.ORPROCED.toString()\n            if (elementstring.match(\"Ca++, free\") !== null) {\n                select.push(element)\n            }\n        }\n    }\n    if (select.length === 0) {\n        return \"null\"\n    }\n\n}\n\nexport function QSPERegList(qspe) {\n    function SettingValue(mode, value) {\n        if (value === undefined || value === null) {\n            return \"\"\n        }\n        const valueList = value.split(\"/\")\n        if (mode === 'NC') {\n            return (<div>Flow:{valueList[0]}L/min</div>)\n        }\n        if (mode === 'HF') {\n            return (<div style={{ display: \"inline\" }}>FiO<sub>2</sub>:{valueList[0]}% ,PEEP:{valueList[1]}cmH<sub>2</sub>O</div>)\n        }\n        if (mode === 'UW' || mode === 'bcpap' || mode === 'CPAP') {\n            return (<div style={{ display: \"inline\" }}>FiO<sub>2</sub>:{valueList[0]}% ,PEEP:{valueList[1]}cmH<sub>2</sub>O</div>)\n        }\n        if (mode === 'NIPPV' || mode.match(\"PC\") !== null) {\n            // return (<sub>123</sub>)\n            return (<div style={{ display: \"inline\" }}>FiO<sub>2</sub>:{valueList[0]}% ,Rate:{valueList[1]}/min ,PIP:{valueList[2]}mmH<sub>2</sub>O ,PEEP:{valueList[3]}cmH<sub>2</sub>O</div>)\n        }\n        if (mode.match(\"HFOV\") !== null) {\n            return (<div style={{ display: \"inline\" }}>FiO<sub>2</sub>:{valueList[0]}% ,Amp:{valueList[1]}cmH<sub>2</sub>O ,MAP:{valueList[2]}cmH<sub>2</sub>O ,Freq:{valueList[3]}Hz</div>)\n        }\n        if (mode.match(\"HFPPV\") !== null) {\n            return (<div style={{ display: \"inline\" }}>FiO<sub>2</sub>:{valueList[0]}% ,Rate:{valueList[1]}/min ,PIP:{valueList[2]}mmH<sub>2</sub>O ,PEEP:{valueList[3]}cmH<sub>2</sub>O\"</div>)\n        }\n        return value\n    }\n\n    var qspearray = []\n    if (Array.isArray(qspe)) {\n        for (let index = 0; index < qspe.length; index++) {\n            const element = qspe[index];\n            if (element !== undefined) {\n                const SelectElement = element.special.toString()\n                if (SelectElement.match(\"@v\") !== null) {\n                    const DataArray = SelectElement.split(\" \")\n                    const title = DataArray[1]\n                    const value = DataArray[2]\n                    const DataJson = {\n                        \"Mode\": title,\n                        \"Setting\": SettingValue(title, value),\n                        \"Date\": element.rec_dat.toString().trim(),\n                        \"Time\": element.rec_tim,\n                    }\n                    qspearray.push(DataJson)\n                }\n            }\n        }\n    }\n    return qspearray\n}\n\nexport function QSPESetting(qspesettingarray) {\n    const regString = qspesettingarray.Mode\n    const regValue = qspesettingarray.Setting.split(\"/\")\n    if (regString.match(\"RA\") !== null) {\n        return \"\"\n    }\n    if (regString.match(\"NC\") !== null) {\n        return \"Flow:\" + regValue[0]\n    }\n    if (regString.match(\"UW\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/PEEP:\" + regValue[1]\n    }\n    if (regString.match(\"bcpap\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/PEEP:\" + regValue[1]\n    }\n    if (regString.match(\"CPAP\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/PEEP:\" + regValue[1]\n    }\n    if (regString.match(\"NIPPV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Rate:\" + regValue[1] + \"/PIP:\" + regValue[2] + \"/PEEP:\" + regValue[3]\n    }\n    if (regString.match(\"HFOV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Rate:\" + regValue[1] + \"/PIP:\" + regValue[2] + \"/PEEP:\" + regValue[3]\n    }\n    if (regString.match(\"HFOV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Amp:\" + regValue[1] + \"/MAP:\" + regValue[2] + \"/Freq:\" + regValue[3]\n    }\n    if (regString.match(\"HFPPV\") !== null) {\n        return \"FiO2:\" + regValue[0] + \"/Rate:\" + regValue[1] + \"/PIP:\" + regValue[2] + \"/PEEP:\" + regValue[3]\n    }\n    return qspesettingarray.value\n}\n","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport './Wardcardvitalsign.scss';\nimport { mmddformat } from '../Function/Timeformat'\nimport * as ApiProvider from '../API/ApiProvider'\nimport moment from 'moment';\n\n\n\nclass WardcardvitalsignChart extends Component {\n    state = {\n        sourcedata: [],\n        preHID: null\n    }\n    componentDidUpdate() {\n        const { HISID } = this.props\n        const HID = HISID.toString().trim()\n        const preHID = this.state.preHID\n        if (HID !== preHID) {\n            this.setState({ preHID: HISID.toString().trim() })\n            this.getCenterMonitor()\n        }\n\n    }\n    componentDidMount() {\n        const { HISID } = this.props\n        this.setState({ preHID: HISID.toString().trim() })\n        this.getCenterMonitor()\n    }\n\n    getCenterMonitor() {\n        function selectType(type) {\n            switch (type) {\n                case \"div_hr\":\n                    return \"hr\"\n                case \"div_bp\":\n                    return \"nbp\"\n                case \"div_rr\":\n                    return \"rr\"\n                case \"div_spo\":\n                    return \"spo2\"\n                case \"div_abp\":\n                    return \"abp\"\n                case \"div_bt\":\n                    return \"bt\"\n                default:\n                    break;\n            }\n        }\n        // const simdata = vitalData.simdata\n        const endTime = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").format(\"YYYYMMDDHHmmss\");\n        const startTime = moment(moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf() - (24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\");\n        const { id_key, HISID } = this.props\n        const HID = HISID.toString().trim()\n        const type = selectType(id_key)\n        if (id_key === \"div_abp\") {\n            ApiProvider.getPatientwardvalueBoxPlot(HID, startTime, endTime, type, 0)\n                .then(data => {\n                    this.setState({\n                        sourcedata: data.data\n                    })\n                    this.drawChart()\n                })\n                .catch(err => { console.log(err) })\n        }\n        if (id_key === \"div_hr\" || id_key === \"div_rr\" || id_key === \"div_spo\") {\n\n            ApiProvider.getPatientwardvalueBoxPlot(HID, startTime, endTime, type, 0)\n                .then(data => {\n                    this.setState({\n                        sourcedata: data.data\n                    })\n                    this.drawChart()\n                })\n                .catch(err => { console.log(err) })\n        }\n        if (id_key === \"div_bp\") {\n\n            ApiProvider.getVitalSignData(HID, startTime, endTime, type)\n                .then(data => {\n                    this.setState({\n                        sourcedata: data.data\n                    })\n                    this.drawChart()\n                })\n                .catch(err => {\n                    console.log(err);\n                })\n        }\n        if (id_key === \"div_bt\") {\n            d3.select(\"#svg_bt\").remove()\n            this.drawChart([]);\n        }\n    }\n    cal_svg_hight() {\n        const { axisTop, axisBot } = this.props\n        if (axisTop) {\n            if (axisBot) {\n                return 160\n            }\n            else {\n                return 145\n            }\n        }\n        else {\n            if (axisBot) {\n                return 100\n            }\n            else {\n                return 90\n            }\n        }\n    }\n\n    cal_svg_transform() {\n        const { axisTop, axisBot } = this.props\n        if (axisTop) {\n            if (axisBot) {\n                return 70\n            }\n            else {\n                return 50\n            }\n        }\n        else {\n            if (axisBot) {\n                return 20\n            }\n            else {\n                return 10\n            }\n        }\n    }\n\n    drawChart() {\n        function multiFormat(date, i, n) {\n            if ((n.length - 1) == i) {\n                return \"現在\"\n            }\n            if (formatHour(date) % 4 === 0) {\n                return formatHour(date)\n            }\n            else return null\n        }\n        function multibotformat(date) {\n            if (new Date(date).getHours() === 0) {\n                return mmddformat(date)\n            }\n            else return null\n        }\n        const { svg_key, circlrcolor, axisTop, id_key, axisBot, MAX, MIN, Upper, Lower } = this.props\n        const width = window.screen.availWidth * 0.25, height = 70, transformmargin = this.cal_svg_transform(), margin = 20\n        // const borderwidth = width / 27\n        const time_now = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf()\n        const startTime = time_now - (24 * 60 * 60 * 1000);\n\n        var time_array = []\n        var time_axis_array = []\n        for (let index = 0; index < 25; index++) {\n            time_array.push({ key: \"time\", x_axis_time: time_now - index * 60 * 60 * 1000 })\n            time_axis_array.push(time_now - index * 60 * 60 * 1000)\n        }\n        var time_array_reverse = time_array.reverse()\n        var time_axis_array_reverse = time_axis_array.reverse()\n        var formatHour = d3.timeFormat(\"%H\")\n\n        // const endTime = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf();\n\n\n        var x = d3.scaleLinear()\n            .domain([time_array_reverse[0].x_axis_time, time_array_reverse[24].x_axis_time])\n            .range([0, width - 40]);\n\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([MIN, MAX])\n            .range([height, 0])\n\n        var yAxis = d3.axisLeft(y)\n            .tickValues([MIN, MAX])\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(10);\n\n        var xAxisTop = d3.axisTop(x)\n            .tickValues(time_axis_array_reverse)\n            .tickSize(0, 0)\n            .tickPadding(margin + 15)\n            .tickFormat(function (d) { return multibotformat(d); });\n\n        var xAxis = d3.axisTop(x)\n            .tickValues(time_axis_array_reverse)\n            .tickSize(0, 0)\n            .tickPadding(margin)\n            .tickFormat(function (d, i, n) { return multiFormat(d, i, n); });\n\n        d3.select(\"#\" + svg_key).remove()\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_key)\n            .attr(\"viewBox\", [0, 0, width, this.cal_svg_hight()])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 30 + \",\" + transformmargin + \")\");\n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n        if (axisTop) {\n            svg.append(\"g\")\n                .call(xAxis)\n                .attr(\"class\", \"axis\");\n\n            svg.append(\"g\")\n                .call(xAxisTop)\n                .attr(\"class\", \"axis\");\n        }\n\n        // if (axisBot) {\n        //     svg.append(\"g\")\n        //         .call(xAxisBottom)\n        //         .attr(\"class\", \"axis\");\n        // }\n\n        //上下虛線\n        svg.append('line')\n            .attr('x1', 0)\n            .attr('y1', y(MAX))\n            .attr('x2', width)\n            .attr('y2', y(MAX))\n            .style('stroke', '#E0E0E0')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n        svg.append('line')\n            .attr('x1', 0)\n            .attr('y1', y(MIN))\n            .attr('x2', width)\n            .attr('y2', y(MIN))\n            .style('stroke', '#E0E0E0')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n\n        for (let index = 0; index < time_array_reverse.length; index++) {\n            svg.append('line')\n                .attr('x1', x(time_array_reverse[index].x_axis_time))\n                .attr('y1', 0)\n                .attr('x2', x(time_array_reverse[index].x_axis_time))\n                .attr('y2', height)\n                .style('stroke', '#E0E0E0')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n        }\n\n\n\n        drawshadow(startTime, 0, Lower, Upper)\n        function drawshadow(startTime, interval, lower, upper) {\n            const LimitBoxTimer = formatBox(startTime, interval, width)\n            for (let index = 0; index < LimitBoxTimer.length; index++) {\n                const boxwidth = formatBoxWidth(width, interval)\n                const element = LimitBoxTimer[index];\n                svg.append('line')\n                    .attr('x1', x(element))\n                    .attr('y1', y(lower))\n                    .attr('x2', x(element))\n                    .attr('y2', y(upper))\n                    .style('stroke', circlrcolor)\n                    .style('opacity', 0.7)\n                    .style('stroke-width', boxwidth)\n\n                if (id_key === \"div_bp\" || id_key === \"div_abp\") {\n                    svg.append('line')\n                        .attr('x1', x(element))\n                        .attr('y1', y(35))\n                        .attr('x2', x(element))\n                        .attr('y2', y(55))\n                        .style('stroke', circlrcolor)\n                        .style('opacity', 0.3)\n                        .style('stroke-width', boxwidth)\n                }\n            }\n        }\n        function formatBox(startTime, interval) {\n            function interFormat(startTime, interval) {\n                var TimeArray = []\n                for (let index = 0; index < interval; index++) {\n                    if (interval === 24) {\n                        const boxTime = startTime + (30 * 60 * 1000) + (index * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 18) {\n                        const boxTime = startTime + (2 * 60 * 60 * 60 * 1000) + (index * 4 * 60 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 21) {\n                        const boxTime = startTime + (4 * 60 * 60 * 60 * 1000) + (index * 8 * 60 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else {\n                        const boxTime = startTime + (12 * 60 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                }\n                return TimeArray\n            }\n            if (interval === 0) {\n                return interFormat(startTime, 24)\n            }\n            if (interval === 1) {\n                return interFormat(startTime, 18)\n            }\n            if (interval === 2) {\n                return interFormat(startTime, 21)\n            }\n            return interFormat(startTime, 14)\n        }\n        function formatBoxWidth(viewwidth, interval) {\n            if (interval === 0) {\n                return viewwidth / 26.5\n            }\n            if (interval === 1) {\n                return viewwidth / 18\n            }\n            if (interval === 2) {\n                return viewwidth / 21\n            }\n            return viewwidth / 14\n        }\n        // var sim_data = this.state.sourcedata\n        const BoxPlotData = this.state.sourcedata\n        console.log(id_key, BoxPlotData)\n        if (BoxPlotData.length === 0) {\n            return null\n        }\n\n        if (id_key === \"div_abp\") {\n            const dataAbps = BoxPlotData.abps\n            const dataAbpd = BoxPlotData.abpd\n            const boxwidth = 10\n            for (let index = 0; index < dataAbpd.length; index++) {\n                const element = dataAbpd[index];\n                const q1 = element.Q1\n                const q2 = element.Q2\n                const q3 = element.Q3\n                const q4 = element.Q4\n                const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                svg.append(\"line\")\n                    .attr(\"x1\", x(Xtime))\n                    .attr(\"x2\", x(Xtime))\n                    .attr(\"y1\", y(q1))\n                    .attr(\"y2\", y(q4))\n                    .attr(\"stroke\", circlrcolor)\n                    .style('opacity', 0.5)\n                    // .attr(\"stroke\", \"blcak\")\n                    .style('stroke-width', 1)\n\n                svg.append(\"rect\")\n                    .attr(\"x\", x(Xtime) - boxwidth / 2)\n                    .attr(\"y\", y(q3))\n                    .attr(\"height\", (y(q2) - y(q3)))\n                    .attr(\"width\", boxwidth)\n                    .attr(\"stroke\", circlrcolor)\n                    .style('opacity', 0.5)\n                    .style(\"fill\", \"rgba(255,255,255,1)\")\n                    .style('stroke-width', 1);\n\n                svg\n                    .selectAll(\"toto\")\n                    .data([q1, q4])\n                    .enter()\n                    .append(\"line\")\n                    .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                    .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                    .attr(\"y1\", function (d) { return (y(d)) })\n                    .attr(\"y2\", function (d) { return (y(d)) })\n                    .attr(\"stroke\", circlrcolor)\n                    .style('opacity', 0.5)\n                    .style('stroke-width', 1);\n            }\n            for (let index = 0; index < dataAbps.length; index++) {\n                const element = dataAbps[index];\n                const q1 = element.Q1\n                const q2 = element.Q2\n                const q3 = element.Q3\n                const q4 = element.Q4\n                const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                svg.append(\"line\")\n                    .attr(\"x1\", x(Xtime))\n                    .attr(\"x2\", x(Xtime))\n                    .attr(\"y1\", y(q1))\n                    .attr(\"y2\", y(q4))\n                    .attr(\"stroke\", circlrcolor)\n                    // .attr(\"stroke\", \"blcak\")\n                    .style('stroke-width', 1)\n\n                svg.append(\"rect\")\n                    .attr(\"x\", x(Xtime) - boxwidth / 2)\n                    .attr(\"y\", y(q3))\n                    .attr(\"height\", (y(q2) - y(q3)))\n                    .attr(\"width\", boxwidth)\n                    .attr(\"stroke\", circlrcolor)\n                    .style(\"fill\", \"rgba(255,255,255,1)\")\n                    .style('stroke-width', 1);\n\n                svg\n                    .selectAll(\"toto\")\n                    .data([q1, q4])\n                    .enter()\n                    .append(\"line\")\n                    .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                    .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                    .attr(\"y1\", function (d) { return (y(d)) })\n                    .attr(\"y2\", function (d) { return (y(d)) })\n                    .attr(\"stroke\", circlrcolor)\n                    .style('stroke-width', 1);\n            }\n        }\n        if (id_key === \"div_bp\") {\n            for (let index = 0; index < BoxPlotData.length; index++) {\n                const element = BoxPlotData[index];\n                const Xtime = moment(element.Time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                const SBP = element.SBP\n                const DBP = element.DBP\n                if (SBP === 0 || DBP === 0) {\n                    continue\n                }\n                svg.append('circle')\n                    .attr('cx', x(Xtime))\n                    .attr('cy', y(SBP))\n                    .attr('r', 3)\n                    .style('fill', circlrcolor)\n\n\n                svg.append('circle')\n                    .attr('cx', x(Xtime))\n                    .attr('cy', y(DBP))\n                    .attr('r', 3)\n                    .style('opacity', 0.5)\n                    .style('fill', circlrcolor)\n            }\n        }\n        if (id_key === \"div_hr\" || id_key === \"div_rr\" || id_key === \"div_spo\" || id_key === \"div_bt\") {\n            // for (let index = 0; index < BoxPlotData.length; index++) {\n            //     const element = BoxPlotData[index];\n            //     const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + (30 * 60 * 1000)\n            //     svg.append('line')\n            //         .attr('x1', x(Xtime))\n            //         .attr('y1', y(Lower))\n            //         .attr('x2', x(Xtime))\n            //         .attr('y2', y(Upper))\n            //         .style('stroke', circlrcolor)\n            //         .style('opacity', 0.5)\n            //         // .style('stroke', 'red')\n            //         .style('stroke-width', borderwidth)\n\n            // }\n            for (let index = 0; index < BoxPlotData.length; index++) {\n                const element = BoxPlotData[index];\n                const q1 = element.Q1\n                const q2 = element.Q2\n                const q3 = element.Q3\n                const q4 = element.Q4\n                const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + (30 * 60 * 1000)\n                const boxwidth = 10\n                svg.append(\"line\")\n                    .attr(\"x1\", x(Xtime))\n                    .attr(\"x2\", x(Xtime))\n                    .attr(\"y1\", y(q1))\n                    .attr(\"y2\", y(q4))\n                    .attr(\"stroke\", circlrcolor)\n                    .style('stroke-width', 1)\n\n                svg.append(\"rect\")\n                    .attr(\"x\", x(Xtime) - boxwidth / 2)\n                    .attr(\"y\", y(q3))\n                    .attr(\"height\", (y(q2) - y(q3)))\n                    .attr(\"width\", boxwidth)\n                    .attr(\"stroke\", circlrcolor)\n                    .style(\"fill\", \"rgba(255,255,255,1)\")\n                    .style('stroke-width', 1);\n\n                svg\n                    .selectAll(\"toto\")\n                    .data([q1, q4])\n                    .enter()\n                    .append(\"line\")\n                    .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                    .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                    .attr(\"y1\", function (d) { return (y(d)) })\n                    .attr(\"y2\", function (d) { return (y(d)) })\n                    .attr(\"stroke\", circlrcolor)\n                    .style('stroke-width', 1);\n\n            }\n        }\n\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default WardcardvitalsignChart;\n","import React, { Component } from 'react';\nimport WardcardvitalsignChart from './Wardcardvitalsign'\nimport { statecolor } from '../Function/Wardstate'\n// import * as ApiProvider from '../API/ApiProvider'\nimport './Wardchart.scss'\n// import moment from 'moment';\n\n\n\nclass WardChart extends Component {\n    state = {\n        data: [],\n        pbStatus: true\n    }\n\n    changePb = () => {\n        this.setState({\n            pbStatus: false\n        })\n    }\n\n    decidePB = (hr, nbpd, abpd) => {\n        const status = this.state.pbStatus\n        if (status) {\n            hr > 160 || hr < 100 && this.changePb()\n            nbpd > 75 || nbpd < 55 && this.changePb()\n            abpd > 75 || abpd < 55 && this.changePb()\n        }\n    }\n\n    render() {\n        function valueFormat(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"--\"\n            }\n            return value\n        }\n        const data = this.state.data\n        const { CMvalue, HISID } = this.props\n        const vitalvalue = CMvalue\n        if (vitalvalue === undefined || vitalvalue === null) {\n            return null\n        }\n\n        this.decidePB(vitalvalue.hr, vitalvalue.nbpd, vitalvalue.abpd)\n\n        function limitValue(value, upper, lower) {\n            if (value > upper || value < lower) {\n                return false\n            }\n            return true\n        }\n\n        const status = this.state.pbStatus\n        return (\n            <div className='Wardchartlayout'>\n                <div className='halfwardchart'>\n                    <div className='singlewardchart'>\n                        <div className='firstRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"90px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: status ? \"white\" : statecolor('HR') }}>\n                                <centerstyle>\n                                    <t3 style={{ color: status ? statecolor('HR') : \"white\" }}>HR(min)</t3>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"30px\", lineHeight: \"44px\", paddingRight: \"3px\", color: status ? statecolor('HR') : \"white\" }}>{valueFormat(vitalvalue.hr)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <div className='secondRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"90px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: status ? \"white\" : statecolor('BP') }}>\n                                <centerstyle>\n                                    <t3 style={{ color: status ? statecolor('BP') : \"white\" }}>NBP(mmHg)</t3>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"30px\", lineHeight: \"34px\", color: status ? statecolor('BP') : \"white\" }}>{valueFormat(vitalvalue.nbps)}/{valueFormat(vitalvalue.nbpd)}</div>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"20px\", lineHeight: \"22px\", color: status ? statecolor('BP') : \"white\" }}>({valueFormat(vitalvalue.nbpm)})</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <div className='thirdRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"90px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: status ? \"white\" : statecolor('BP') }}>\n                                <centerstyle>\n                                    <t3 style={{ color: status ? statecolor('BP') : \"white\" }}>ABP(mmHg)</t3>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"30px\", lineHeight: \"34px\", color: status ? statecolor('BP') : \"white\" }}>{valueFormat(vitalvalue.abps)}/{valueFormat(vitalvalue.abpd)}</div>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"20px\", lineHeight: \"22px\", color: status ? statecolor('BP') : \"white\" }}>({valueFormat(vitalvalue.abpm)})</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ position: \"relative\" }}>\n                        <WardcardvitalsignChart MAX={200} MIN={0} Upper={160} Lower={100} HISID={HISID} svg_key={\"svg_hr\"} id_key={\"div_hr\"} data={data} axisBot={false} axisTop={true} colorshadow={\"rgba(126, 211, 33, 0.1)\"} circlrcolor={\"#779F50\"}></WardcardvitalsignChart>\n                        <WardcardvitalsignChart MAX={100} MIN={0} Upper={75} Lower={55} HISID={HISID} svg_key={\"svg_bp\"} id_key={\"div_bp\"} data={data} data2={true} axisBot={false} axisTop={false} colorshadow={\"rgba(240, 144, 144, 0.1)\"} circlrcolor={\"#C12528\"} data_2_circlrcolor={\"rgba(240, 144, 144, 0.5)\"}></WardcardvitalsignChart>\n                        <WardcardvitalsignChart MAX={100} MIN={0} Upper={75} Lower={55} HISID={HISID} svg_key={\"svg_abp\"} id_key={\"div_abp\"} data={data} data2={true} axisBot={true} axisTop={false} colorshadow={\"rgba(240, 144, 144, 0.1)\"} circlrcolor={\"#C12528\"} data_2_circlrcolor={\"rgba(240, 144, 144, 0.5)\"}></WardcardvitalsignChart>\n                    </div>\n                </div>\n                <div className='halfwardchart'>\n                    <div className='singlewardchart'>\n                        <div className='firstRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"90px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: limitValue(vitalvalue.spo2, 100, 90) ? \"white\" : statecolor('SpO2') }}>\n                                <centerstyle>\n                                    <t3 style={{ color: limitValue(vitalvalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>\n                                        SpO\n                                        <sub >2</sub>\n                                        (%)\n                                    </t3>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"30px\", lineHeight: \"44px\", paddingRight: \"3px\", color: limitValue(vitalvalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>{valueFormat(vitalvalue.spo2)}%</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <div className='secondRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"90px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: limitValue(vitalvalue.bt, 38, 36) ? \"white\" : statecolor('BT') }}>\n                                <centerstyle>\n                                    <t3 style={{ color: limitValue(vitalvalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>BT(<sup>&ordm;</sup>C)</t3>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"30px\", lineHeight: \"44px\", paddingRight: \"3px\", color: limitValue(vitalvalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>{valueFormat(vitalvalue.bt)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                        <div className='thirdRowTitle'>\n                            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"90px\", height: \"80px\", padding: \"0px 2px\", backgroundColor: limitValue(vitalvalue.rr, 60, 20) ? \"white\" : statecolor('RR') }}>\n                                <centerstyle>\n                                    <t3 style={{ color: limitValue(vitalvalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>RR(min)</t3>\n                                </centerstyle>\n                                <centerstyle>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"30px\", lineHeight: \"44px\", paddingRight: \"3px\", color: limitValue(vitalvalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>{valueFormat(vitalvalue.rr)}</div>\n                                </centerstyle>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ position: \"relative\" }}>\n                        <WardcardvitalsignChart MAX={100} MIN={60} Upper={100} Lower={90} HISID={HISID} svg_key={\"svg_spo\"} id_key={\"div_spo\"} data={data} axisBot={false} axisTop={true} colorshadow={\"rgba(0, 183, 255, 0.1)\"} circlrcolor={\"#4773B8\"}></WardcardvitalsignChart>\n                        <WardcardvitalsignChart MAX={41} MIN={34} Upper={38} Lower={36} HISID={HISID} svg_key={\"svg_bt\"} id_key={\"div_bt\"} data={data} axisBot={false} axisTop={false} colorshadow={\"rgba(199, 162, 244,0.1)\"} circlrcolor={\"#7F3DB5\"}></WardcardvitalsignChart>\n                        <WardcardvitalsignChart MAX={100} MIN={0} Upper={60} Lower={20} HISID={HISID} svg_key={\"svg_rr\"} id_key={\"div_rr\"} data={data} axisBot={true} axisTop={false} colorshadow={\"rgba(255, 152, 0, 0.1)\"} circlrcolor={\"#DE7531\"}></WardcardvitalsignChart>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WardChart;\n","import React, { Component } from 'react';\nimport { Checkbox } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider'\n\nclass Wardinfousercheckbox extends Component {\n    state = {\n        checkboxselect: this.props.selectstate\n    }\n\n    updateOnePatientTodo() {\n        if (this.state.checkboxselect) {\n            ApiProvider.createTodo(this.props.item.caseid, this.props.item.context, this.props.item.time, this.props.item.transinno, '已完成')\n                .then(data => {\n                    console.log('updateOnePatientTodo ok ' + JSON.stringify(data))\n                })\n                .catch(err => {\n                    console.log('updateOnePatientTodo ng ' + JSON.stringify(err))\n                })\n        } else {\n            ApiProvider.createTodo(this.props.item.caseid, this.props.item.context, this.props.item.time, this.props.item.transinno, '未完成')\n                .then(data => {\n                    console.log('updateOnePatientTodo ok ' + JSON.stringify(data))\n                })\n                .catch(err => {\n                    console.log('updateOnePatientTodo ng ' + JSON.stringify(err))\n                })\n        }\n    }\n    selectchange() {\n        this.setState({\n            checkboxselect: !this.state.checkboxselect\n        }, this.updateOnePatientTodo)\n    }\n\n    render() {\n        const selectunstyle = {\n            fontSize: \"1rem\"\n        }\n        const selectstyle = {\n            textDecoration: \"line-through\", fontSize: \"1rem\"\n        }\n        return (\n            <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\" }}>\n                <Checkbox onChange={() => this.selectchange()} checked={this.state.checkboxselect} style={this.state.checkboxselect ? selectstyle : selectunstyle}>{this.props.item.context}</Checkbox>\n            </div>\n        )\n    }\n\n}\n\nexport default Wardinfousercheckbox;\n","import React, { Component } from 'react';\nimport './Patientviewinfo.scss'\nimport { Icon } from 'antd'\nimport * as Wardstate from '../Function/Wardstate'\nimport * as ApiProvider from '../API/ApiProvider'\nclass Patientinfo extends Component {\n\n    state = { preCID: null, QENT: [] };\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const CID = caseinfo.CASEID\n        this.setState({ preCID: CID })\n        this.getQENT(CID)\n    }\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const { preCID } = this.state\n        const CID = caseinfo.CASEID\n        if (CID !== preCID) {\n            this.setState({ preCID: CID })\n            this.getQENT(CID)\n\n        }\n    }\n    getQENT(CID) {\n        ApiProvider.getQENT(CID)\n            .then(data => {\n                const parsedata = Wardstate.QMNCXM2JSON(data.data)\n                this.setState({ QENT: parsedata })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQENT NG \" + JSON.stringify(err));\n            });\n    }\n    render() {\n        function fixpatientDate(data) {\n            const transdata = {\n                'cause': '住院原因',\n                'car_pho': '主要照顧者電話',\n                'care': '主要照顧者',\n                'con_1': '聯絡人1',\n                'con_p11': '聯絡人1電話',\n                'con_2': '聯絡人2',\n                'con_p21': '聯絡人2電話',\n                'dvs': '住院時生命徵象',\n                'habit': '飲食狀況',\n                'oxy': '住院時氧合評估',\n                'h_val': '住院時頭圍',\n                'b_val': '住院時胸圍',\n                'tall': '住院時身高',\n                'weight': '住院時體重'\n            }\n\n            const patientDate = []\n\n            for (let index in transdata) {\n                if (data[index] !== \"\") {\n                    patientDate.push([transdata[index], data[index]])\n                }\n            }\n\n            return patientDate\n        }\n\n        const patientDetail = fixpatientDate(this.state.QENT)\n        const patientData = patientDetail.map(element =>\n            <div className='context'>\n                <div className='title'>{element[0]} ：</div>\n                <div className='item'>{element[1]}</div>\n            </div>\n        )\n        if (this.state.preCID === null || patientDetail.length === 0) {\n            return (\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>\n                    <Icon type=\"loading\" />\n                </div>\n            );\n        }\n        return (\n            <div className='patientinfolayout'>\n                {patientData}\n            </div>\n        );\n    }\n}\n\nexport default Patientinfo\n","import React, { useState, useEffect } from \"react\";\nimport './Wardinfouser.scss'\nimport moment from 'moment'\nimport { Modal } from 'antd';\nimport * as Wardstate from '../Function/Wardstate'\nimport * as ApiProvider from '../API/ApiProvider'\n// import * as ApiGithub from '../API/ApiGithub'\nimport { gender } from '../Function/Wardbedfunction'\nimport Wardgrewchart from './Wardgrewchart'\nimport Notice from '../Patientview/Schedule/Notice'\nimport Labviewlayout from '../Patientview/CrossSectionView/Labview'\nimport WardChart from './Wardchart'\nimport Wardinfousercheckbox from './Wardunfousercheckbox'\nimport { Link } from \"react-router-dom\";\n// import * as Reg from '../Data/RegularData';\nimport Patientinfo from '../Patientview/Patientviewinfo';\nimport Wardcarstatus from './Wardcardstatus'\n\nfunction statusPersion(persionstatus, QMNC, QTWER, Birthday) {\n    console.log(persionstatus)\n    // console.log(QMNC)\n    if (persionstatus.length === 0) {\n        console.log(QMNC)\n        // console.log(\"000\" + Number(QMNC.weeks))\n        if (QMNC.length === 0) {\n            return {\n                BornWeight: undefined,\n                BornWeeks: undefined,\n                BornDays: undefined\n            }\n        }\n        const BornWeight = Wardstate.BornWeight(QTWER, Birthday)\n        const BornWeeks = Number(QMNC.weeks)\n        const BornDays = Number(QMNC.days)\n        return {\n            BornWeight: BornWeight,\n            BornWeeks: BornWeeks,\n            BornDays: BornDays\n        }\n    }\n    else {\n        const Weight = Number(persionstatus[0].bweight) * 1000\n        const BornWeeks = Number(persionstatus[0].bweek)\n        const BornDays = Number(persionstatus[0].bday)\n        return {\n            BornWeight: Weight,\n            BornWeeks: BornWeeks,\n            BornDays: BornDays\n        }\n    }\n}\n\nexport function Wardinfouser(props) {\n    const [Visible, setVisible] = useState(false);\n    const [CenterMonitorValue, SetCenterMonitorValue] = useState([])\n    const [scheduleList, SetScheduleList] = useState([]);\n    const [todoList, SetTodoList] = useState([]);\n    const [Timer, SetTimer] = useState(0);\n    const [Persionstatus, SetPersionstatus] = useState([]);\n\n    useEffect(() => {\n        const TimerID = setInterval(() => {\n            SetTimer(Timer + 1)\n        }, 5000)\n        return () => clearInterval(TimerID);\n    }, [Timer])\n\n\n    useEffect(() => {\n        const data = props.location.state.data\n        // const hisid = \"TEST1234\"\n        const hisid = data.PHISTNUM.toString()\n        ApiProvider.getHisidwardvalue(hisid)\n            .then(data => {\n                console.log(data.data)\n\n                SetCenterMonitorValue(data.data[0]);\n            })\n            .catch(err => {\n                console.log(\"Andy test getHisidwardvalue NG \" + JSON.stringify(err));\n            });\n    }, [Timer, props.location.state.data.PHISTNUM])\n\n    useEffect(() => {\n        const data = props.location.state.data\n        const HID = data.PHISTNUM.toString()\n        ApiProvider.getPersionalStatus(HID)\n            .then(data => {\n                console.log(data.data);\n                SetPersionstatus(data.data)\n            })\n            .catch(err => { console.log(err) })\n    }, [props.location.state.data.PHISTNUM])\n\n\n    useEffect(() => {\n        // \"query schedule list\"\n\n        const data = props.location.state.data\n        const source = data\n        const PLOC = source.PLOC\n        const TRANSINID = source.TRANSINID.toString()\n\n        const now = new Date();\n        const todayBegin = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n        const startTime = todayBegin.toISOString().split(\".\")[0];\n        const endTime = new Date(todayBegin.getTime() + 24 * 60 * 60 * 1000).toISOString().split(\".\")[0];\n        ApiProvider.getOnePatientSchedule(TRANSINID, startTime, endTime)\n            .then(result => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(result.data));\n                SetScheduleList(result.data);\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }, [props.location.state.data.TRANSINID]);\n\n    useEffect(() => {\n        // \"query todo list\"\n        const data = props.location.state.data\n        const source = data\n        const PLOC = source.PLOC\n        const TRANSINID = source.TRANSINID.toString()\n        ApiProvider.getOneTodo(TRANSINID, source.PCASENO.toString())\n            .then(result => {\n                console.log(\"getOneTodo OK \" + JSON.stringify(result.data));\n                SetTodoList(result.data);\n            })\n            .catch(err => {\n                console.log(\"getOneTodo NG \" + JSON.stringify(err));\n            });\n    }, [props.location.state.data.PCASENO]);\n\n    function renderScheduleItem() {\n        if (scheduleList.length === 0) {\n            return (\n                <div style={{ height: \"50px\", paddingLeft: \"15px\", display: \"flex\", alignItems: \"center\" }}>\n                    沒有排程\n                </div>\n                // <div>沒有排程</div>\n            )\n        } else {\n            let DataFormat = scheduleList.sort((a, b) => {\n                let tempTimeA = moment(a.time, \"YYYY-MM-DD[T]HH:mm:ss\").valueOf()\n                let tempTimeB = moment(b.time, \"YYYY-MM-DD[T]HH:mm:ss\").valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n\n            return DataFormat.map((item, index) => {\n                if (item.type === \"排程\") {\n                    // const rawDateStr = item.time;\n                    const time = moment(item.time, \"YYYY-MM-DD[T]HH:mm:ss\").format('YYYY-MM-DD HH:mm:ss')\n                    const localTime = moment.utc(time).toDate()\n                    const displayTimeStr = moment(localTime).format(\"MM/DD HH:mm\")\n                    return (\n                        <div key={index} style={{ height: \"50px\", display: 'grid', gridTemplateColumns: \"35% 65%\", borderBottomWidth: \"1px\", borderBottomColor: \"rgba(232, 232, 232, 1)\", borderBottomStyle: \"solid\", paddingLeft: \"15px\" }}>\n                            <div style={{ fontSize: \"1rem\", display: \"flex\", paddingLeft: \"15px\", alignItems: \"center\" }}>{displayTimeStr}</div>\n                            <div style={{ fontSize: \"1rem\", display: \"flex\", paddingLeft: \"15px\", alignItems: \"center\" }}>{item.context}</div>\n                        </div>\n                    )\n                }\n            })\n        }\n    }\n    function renderTodoItem() {\n        if (todoList.length === 0) {\n            return (\n                <div style={{ height: \"50px\", paddingLeft: \"15px\", display: \"flex\", alignItems: \"center\" }}>\n                    沒有待辦事項\n                </div>\n                // <div>沒有待辦事項</div>\n            )\n        } else {\n            return todoList.map((item, index) => {\n                if (item.type === \"未完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={false}></Wardinfousercheckbox>)\n                } else if (item.type === \"已完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={true}></Wardinfousercheckbox>)\n                }\n\n            });\n        }\n    }\n\n\n\n\n\n    function valueFormat(value) {\n        if (value === \"\" || value === null || value === undefined) {\n            return \"--\"\n        }\n        return value.toString()\n    }\n    function valueBornWeight(value) {\n        if (value === \"\" || value === null || value === undefined || value === 0) {\n            return \"\"\n        }\n        return value.toString() + \"g → \"\n    }\n\n    const data = props.location.state.data\n    const source = data\n    const Birthday = source.PBIRHDT\n    const QTWER = Wardstate.XM2JSON(source.QTWPER)\n    const QMNC = Wardstate.QMNCXM2JSON(source.QMNC)\n    const ListWeight = Wardstate.WeightList(QTWER)\n    const Weight = Wardstate.NewestWeight(QTWER)\n\n\n    const TRANSINID = source.TRANSINID\n    const TRANSINDT = source.TRANSINDT\n    const DOCLIST = source.PDOCNEW\n    const MainDoc = Wardstate.Doc(DOCLIST, \"B\")\n    const LiveDoc = Wardstate.Doc(DOCLIST, \"D\")\n    const MainNur = Wardstate.Doc(DOCLIST, \"N\")\n    const ICUMainDoc = Wardstate.Doc(DOCLIST, \"U\")\n\n    const BornWeight = statusPersion(Persionstatus, QMNC, QTWER, Birthday).BornWeight\n    const BornWeeks = statusPersion(Persionstatus, QMNC, QTWER, Birthday).BornWeeks\n    const BornDays = statusPersion(Persionstatus, QMNC, QTWER, Birthday).BornDays\n    const status = {\n        date: moment(Birthday, \"YYYYMMDD\").valueOf(),\n        week: BornWeeks,\n        day: BornDays\n    }\n    const AgeStatus = Wardstate.CalculateAge(status)\n\n    // const PBASINFO = data.PBASINFO\n    const caseinfo = {\n        \"HISID\": source.PHISTNUM.toString(),\n        \"CASEID\": source.PCASENO.toString(),\n        \"WEEK_BORN\": BornWeeks,\n        \"DAY_BORN\": BornDays,\n        \"TRANSINID\": TRANSINID,\n        \"TRANSINDT\": TRANSINDT,\n        \"WEIGHT\": QTWER,\n        \"PBASINGNINFO\": source\n    }\n\n    const grewinfo = {\n        \"WEEK_BORN\": BornWeeks,\n        \"DAY_BORN\": BornDays,\n        \"BIRTHDAY\": Birthday\n    }\n    // const patientDetail = fixpatientDate(QENT)\n    return (\n        <div className='wardinfouserlayout'>\n            <Modal\n                width={800}\n                title=\"入院時評估\"\n                visible={Visible}\n                onOk={() => setVisible(false)}\n                onCancel={() => setVisible(false)}\n                footer={null}>\n                <Patientinfo caseinfo={caseinfo}></Patientinfo>\n            </Modal>\n            <div className='wardinfopatient'>\n                <div style={{ height: '50px', display: 'grid', gridTemplateColumns: \"1fr 1fr 1fr\" }}>\n                    <Link to=\"/nicu/ward/wardindex\" style={{ alignItems: \"center\", display: \"flex\" }}>\n                        <t2 className='wardblacktoindex'>&larr;返回總覽</t2>\n                    </Link>\n                    <centerstyle>\n                        <t1 sytle={{ fontSize: \"22px\" }}>NICU-{Number(source.HBEDNO)} {source.PNAMEC.toString().trim()}</t1>\n                    </centerstyle>\n                    <Link to={{ pathname: \"/nicu/patient/\" + source.PHISTNUM.toString().trim(), state: { \"source\": null, \"HISID\": caseinfo.HISID, \"CASEID\": caseinfo.CASEID, \"BEDNUMBER\": Number(source.HBEDNO), \"TYPE\": true, \"TRANSINID\": caseinfo.TRANSINID } }} style={{ alignItems: \"center\", justifyContent: \"flex-end\", display: \"flex\" }}>\n                        <t2 className='wardblacktoindex'>進入病人資料頁面&rarr;</t2>\n                    </Link>\n                </div>\n                <div style={{ height: \"50px\" }}>\n                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <t2>病歷號:{source.PHISTNUM}</t2>\n                        <t2>性別:{gender(source.PSEX)}</t2>\n                        <t2>生日:{moment(Birthday, \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</t2>\n                        <t2>住院日:{source.TRANSINDT}</t2>\n                        <Wardcarstatus source={false} PCASENO={source.PCASENO} PHISTNUM={source.PHISTNUM}></Wardcarstatus>\n                    </div>\n                    <div style={{ display: 'flex', justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\" }}>\n                            <t3 style={{ color: \"rgba(0,0,0,0.7)\" }}>\n                                {valueFormat(BornWeeks)}+{valueFormat(BornDays)}&gt;<span style={{ fontWeight: \"900\" }}>{AgeStatus}</span>\n                            </t3>\n                            <t3 style={{ color: \"rgba(0,0,0,0.7)\", marginLeft: 60 }}>\n                                {valueBornWeight(BornWeight)}<span style={{ fontWeight: \"900\" }}>{valueFormat(Weight)}g</span>\n                            </t3>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,auto)\", gridColumnGap: \"10px\" }}>\n                            <t3>主治 {MainDoc}</t3>\n                            {MainDoc == ICUMainDoc || <t3>加護 {ICUMainDoc}</t3>}\n                            {MainDoc == LiveDoc || <t3>住院 {LiveDoc}</t3>}\n                            {MainNur == '' || <t3>NP {MainNur}</t3>}\n                            <div className='wardblacktoindex' onClick={() => setVisible(true)}>入院時評估</div>\n                        </div>\n                    </div>\n                </div>\n                <div className='wardinfousercontent'>\n                    <div style={{ padding: \"10px 15px\" }}>\n                        <WardChart HISID={source.PHISTNUM} CMvalue={CenterMonitorValue}></WardChart>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\", padding: \"0px 3px\" }}>\n                        <div style={{ borderRadius: \"4px\" }}>\n                            <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>檢驗項目</t2>\n                            </div>\n                            <Labviewlayout Source={\"Wardview\"} PickerDate={moment(moment().format('YYYYMMDD')).valueOf()} caseinfo={caseinfo}></Labviewlayout>\n                        </div>\n                        <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\", height: 446 }}>\n                            <Wardgrewchart grewinfo={grewinfo} Data={source} WeightList={ListWeight} type={true}></Wardgrewchart>\n                        </div>\n                    </div>\n                    <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\", marginTop: \"10px\", marginRight: \"3px\" }}>\n                        {<Notice caseinfo={caseinfo} disableEdit={true}></Notice>}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\", marginTop: \"10px\", paddingRight: \"3px\" }}>\n                        <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\" }}>\n                            <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>排程</t2>\n                            </div>\n                            <div style={{ maxHeight: \"200px\", overflow: 'auto', minHeight: \"50px\" }}>\n                                {renderScheduleItem()}\n                            </div>\n                        </div>\n                        <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"4px\" }}>\n                            <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                                <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>待辦事項</t2>\n                            </div>\n                            <div style={{ maxHeight: \"200px\", overflow: 'auto', minHeight: \"50px\" }}>\n                                {renderTodoItem()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n} \n","import React, { Component } from 'react';\nimport * as antswitch from 'antd';\nimport Wardcarddetail from '../Wardcard/Wardcarddetail';\nimport Unpreviewwardcarddetail from '../Wardcard/UnpreviewWardCardDetail'\nimport Wardinfoindex from '../Wardinfoindex'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport './Bedview.scss'\nimport moment from 'moment';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport * as WardinfouserK from '../Wardinfouser-k'\n\n\nclass Bedview extends Component {\n    state = {\n        index: true,\n        previewmode: false,\n        simplemode: true,\n        SelectHISID: null,\n        source: [],\n        prePath: null\n    };\n    HBEDApiGet() {\n        ApiProvider.getTableHBED()\n            .then(data => { this.setState({ source: data.data }) })\n            .catch(err => { console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err)); });\n    }\n    componentDidMount() {\n        this.setState({ prePath: this.props.location.pathname })\n        this.HBEDApiGet();\n    }\n\n    componentDidUpdate() {\n        const path = this.props.location.pathname\n        const { prePath } = this.state\n        if (prePath !== path) {\n            this.setState({ prePath: this.props.location.pathname })\n            if (this.props.location.pathname === \"/nicu/ward/wardindex\") {\n                this.setState({ SelectHISID: null })\n            }\n        }\n    }\n\n    onWardcardDisplay() {\n        const simple_style = { display: \"grid\", gridTemplateColumns: \"350px 1fr\", gridGap: \"5px\", marginTop: \"5px\" }\n        const Unsimple_style = { display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr 1fr\", gridTemplateRows: \"1fr 1fr 1fr\", gridGap: \"5px\", marginTop: \"5px\" }\n        const source = this.state.source;\n        if (source === null || source === undefined || source.length === 0) {\n            return null\n        }\n        const wardcarddetaillist = []\n        //simplemode true:病人摘要檢視(開) false:病人摘要檢視(關)\n        //previewmode true:床頭卡顯示(繁) flase:床頭卡顯示(簡) \n        if (this.state.simplemode) {\n            for (let index = 0; index < source.length; index++) {\n                const element = source[index]\n                const string = \"/nicu/ward/wardinfo/\" + element.PHISTNUM.toString().trim()\n                if (element.PHISTNUM.toString().trim() !== \"\") {\n                    wardcarddetaillist.push(\n                        <Link to={{ pathname: string, state: { data: element } }}\n                            style={{ border: this.state.SelectHISID === element.PHISTNUM ? \"2px solid rgb(59,151,224)\" : \"2px solid rgba(59,151,224,0.4)\", borderRadius: \"4px\" }}\n                            onClick={() => { this.setState({ SelectHISID: element.PHISTNUM }) }}>\n                            <Wardcarddetail key={index} data={element} previewmode={this.state.previewmode} hbedlist={source} />\n                        </Link>\n                    )\n                }\n            }\n            return (\n                <div style={this.state.simplemode ? simple_style : Unsimple_style}>\n                    <div className='wardcardcontent'>\n                        {wardcarddetaillist}\n                    </div>\n                    <Switch>\n                        <Route path={`${this.props.match.path}/wardindex`} component={Wardinfoindex} />\n                        <Route path={`${this.props.match.path}/wardinfo`} component={WardinfouserK.Wardinfouser} />\n                    </Switch>\n                </div>\n            );\n        }\n        else {\n            for (let index = 1; index < 15; index++) {\n                const element = source.filter(function (value, i) {\n                    return Number(value.HBEDNO) === index\n                })\n                if (index === 4 || index === 13) {\n                    //沒有4號以及13號床\n                    continue\n                }\n                if (element.length === 0) {\n                    wardcarddetaillist.push(\n                        <div style={{ border: \"1px solid rgba(59, 151, 225, 1)\" }}>\n                            <Unpreviewwardcarddetail bednumber={index} key={index} previewmode={this.state.previewmode} />\n                        </div>\n                    )\n                }\n                else {\n                    if (element[0].PHISTNUM.toString().trim() === \"\") {\n                        wardcarddetaillist.push(\n                            <div style={{ border: \"1px solid rgba(59, 151, 225, 1)\" }}>\n                                <Unpreviewwardcarddetail bednumber={index} key={index} previewmode={this.state.previewmode} />\n                            </div>\n                        )\n                    }\n                    else {\n                        wardcarddetaillist.push(\n                            <div style={{ border: \"1px solid rgba(59, 151, 225, 1)\" }}>\n                                <Wardcarddetail key={index} data={element[0]} previewmode={this.state.previewmode} hbedlist={source} />\n                            </div>\n                        )\n                    }\n                }\n            }\n            return (\n                <div style={this.state.simplemode ? simple_style : Unsimple_style}>\n                    {wardcarddetaillist}\n                </div>\n            );\n        }\n    }\n\n\n\n    render() {\n        function switch_titile_string(hisid, source) {\n            function addzero(value) {\n                if (value < 10) {\n                    return \"0\" + value\n                }\n                else return value\n            }\n            if (hisid === null) {\n                return \"NICU總覽\"\n            }\n            else {\n                const filterdata = source.filter(function (item, index, array) {\n                    return item.PHISTNUM === HISID;\n                });\n                const HBEDNUMBER = addzero(parseInt(filterdata[0].HBEDNO))\n                return \"NI-\" + HBEDNUMBER + \"病人資訊摘要\"\n            }\n        }\n        const source = this.state.source\n        const HISID = this.state.SelectHISID\n        const title = switch_titile_string(HISID, source)\n        const WardCard = this.onWardcardDisplay()\n\n        return (\n            <div>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridGap: \"5px\" }}>\n                        <div style={{ height: \"40px\", display: \"flex\", alignItems: \"center\" }}>\n                            <t2 style={{ color: \"rgba(0, 0, 0, 0.85)\" }}>住院病人資訊 > {title}</t2>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: 'center', width: \"200px\" }}>\n                            <antswitch.Switch style={{ backgroundColor: this.state.previewmode === true ? \"#001a6d\" : \"rgba(0, 0, 0, 0.25)\" }} checkedChildren=\"即時生命徵象\" unCheckedChildren=\"即時生命徵象\" defaultChecked={this.state.previewmode} onChange={(checked) => { this.setState({ previewmode: checked }) }} />\n                            <antswitch.Switch style={{ backgroundColor: this.state.simplemode === true ? \"#001a6d\" : \"rgba(0, 0, 0, 0.25)\" }} checkedChildren=\"顯示摘要\" unCheckedChildren=\"顯示摘要\" defaultChecked={this.state.simplemode} onChange={(checked) => { this.setState({ simplemode: checked }) }} />\n                        </div>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto auto\", gridColumnGap: \"10px\" }}>\n                        <t3>資料更新時間</t3>\n                        <t3>{moment().format('YYYY/MM/DD HH:mm:ss')}</t3>\n                    </div>\n                </div>\n                {WardCard}\n            </div>\n        );\n    }\n}\n\nexport default Bedview;\n","import React, { Component } from 'react';\nimport { Icon, Upload, Table, Input, DatePicker, Button } from 'antd';\nimport { Link } from 'react-router-dom';\nimport * as ApiProvider from '../API/ApiProvider';\nimport moment from 'moment';\n\nclass Historyview extends Component {\n    state = {\n        MouseClick: 0,\n        allPatientDisplayData: [],\n        allPatientUnset: [],\n        allPatientSet: [],\n        selectedRowsArray: [],\n        hospitalindex: '',\n        selectedFile: null,\n        fileList: [],\n        uploading: false,\n        name: '',\n        hisid: '',\n        doctor: '',\n        transOuttime: undefined,\n        deletedisable: true,\n        selectedRowKeys: []\n    }\n\n    componentDidMount() {\n        this.onChangeName = this.onChangeName.bind(this)\n        this.onChangeHisid = this.onChangeHisid.bind(this)\n        //this.onChangeDoctor = this.onChangeDoctor.bind(this)\n        // this.onClickSearch = this.onClickSearch.bind(this)\n        this.onChangeDate = this.onChangeDate.bind(this)\n        console.log(\"Historyview componentDidMount\")\n        ApiProvider.getAllPatient()\n            .then(result => {\n                console.log(\"getAllPatient OK \" + JSON.stringify(result));\n                console.log(result.data)\n                const setedUser = result.data.filter(item => item.patient.transouttime === \"unset\");\n                const unsetUser = result.data.filter(item => item.patient.transouttime !== \"unset\");\n                console.log(unsetUser)\n                this.setState({\n                    allPatientDisplayData: setedUser,\n                    allPatientUnset: unsetUser,\n                    allPatientSet: setedUser\n                });\n            })\n            .catch(err => {\n                console.log(\"getAllPatient NG \" + JSON.stringify(err));\n            });\n    }\n\n    MouseClickTable(record) {\n        //console.log(this.state.MouseClick)\n        this.setState({\n            MouseClick: record\n        })\n    }\n\n    EditStyle(HISID, CASEID, TRANSINID, key, transouttime) {\n        const fromHistory = !this.state.deletedisable;\n        if (key === this.state.MouseClick) {\n            return (\n                <Link to={{ pathname: \"/nicu/patient/\" + HISID, state: { fromHistory, \"source\": [], \"HISID\": HISID, \"CASEID\": CASEID, \"BEDNUMBER\": 0, \"TYPE\": false, \"TRANSINID\": TRANSINID, \"transouttime\": transouttime } }} style={{ height: \"40px\", width: \"100px\", borderRadius: \"4px\" }}>檢視</Link>\n            );\n        }\n        else return null\n    }\n\n    genderswitch(key) {\n        if (key === \"M\") {\n            return '男'\n        }\n        else {\n            return '女'\n        }\n    }\n\n    bornweeks(birthday) {\n        //console.log(Math.floor(birthday / 7))\n        //console.log(birthday % 7)\n        const weeks = Math.floor(birthday / 7)\n        const days = birthday % 7\n        if (days === 0) {\n            return weeks + '週歲'\n        }\n        else return weeks + '週' + days + '天'\n    }\n\n    exportClick() {\n        this.state.selectedRowsArray.map((data, index) => {\n            ApiProvider.exportJson(data.hospitalindex)\n                .then(result => {\n                    ApiProvider.downloadFile(result.data.filename)\n                        .then(resultD => {\n                            const url = window.URL.createObjectURL(new Blob([JSON.stringify(resultD.data)]));\n                            const link = document.createElement('a');\n                            link.href = url;\n                            link.setAttribute('download', result.data.filename);\n                            document.body.appendChild(link);\n                            link.click();\n                        }).catch(err => { })\n                })\n                .catch(err => { })\n        })\n    }\n\n    handleUpload = () => {\n        const { fileList } = this.state\n        const formData = new FormData()\n        fileList.forEach(file => {\n            formData.append('file', file)\n        })\n\n        this.setState({\n            uploading: true,\n        })\n\n        ApiProvider.uploadFile(formData)\n            .then(res => {\n                ApiProvider.importJson(res.data)\n                    .then(result => {\n                        ApiProvider.getAllPatient()\n                            .then(result => {\n                                const setedUser = result.data.filter(item => item.patient.transouttime !== \"unset\");\n                                const unsetUser = result.data.filter(item => item.patient.transouttime === \"unset\");\n                                this.setState({\n                                    allPatientDisplayData: setedUser,\n                                    allPatientUnset: unsetUser,\n                                    allPatientSet: setedUser\n                                });\n                            })\n                            .catch(err => {\n                                console.log(\"getAllPatient NG \" + JSON.stringify(err));\n                            });\n                    })\n                    .catch(err => { })\n            })\n            .catch(err => { })\n    }\n\n    deleteHistoryUser() {\n        this.state.selectedRowsArray.map((data, index) => {\n            ApiProvider.deletePatient(data.hospitalindex, data.hospitalnumber, data.id)\n                .then(res => {\n                    ApiProvider.getAllPatient()\n                        .then(result => {\n                            const setedUser = result.data.filter(item => item.patient.transouttime === \"unset\");\n                            const unsetUser = result.data.filter(item => item.patient.transouttime !== \"unset\");\n                            this.setState({\n                                allPatientDisplayData: unsetUser,\n                                allPatientUnset: unsetUser,\n                                allPatientSet: setedUser,\n                                selectedRowKeys: []\n                            });\n                        })\n                        .catch(err => {\n                            console.log(\"getAllPatient NG \" + JSON.stringify(err));\n                        });\n                })\n                .catch(err => { })\n        })\n    }\n\n    onChangeName(event) { this.setState({ name: event.target.value }) }\n    onChangeHisid(event) { this.setState({ hisid: event.target.value }) }\n    onChangeDate(date, dateString) { this.setState({ transOuttime: dateString }) }\n\n    Searchbar() {\n        const InputGroup = Input.Group;\n        const { RangePicker } = DatePicker;\n\n        return (\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        病歷號碼:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"輸入病歷號碼\" onChange={this.onChangeHisid} value={this.state.hisid}></Input>\n                    </div>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <div style={{ fontSize: '16px' }}>\n                        個案姓名:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"輸入個案姓名\" onChange={this.onChangeName} value={this.state.name}></Input>\n                    </div>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        轉入時間:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        {/* <InputGroup compact> */}\n                        {/* <DatePicker placeholder=\"選擇轉出時間\" onChange={this.onChangeDate} /> */}\n                        <RangePicker getCalendarContainer={triggerNode => triggerNode.parentNode} style={{ width: \"250px\" }} format={\"YYYY/MM/DD\"} locale={\"zh_TW\"}\n                            placeholder={[\"請輸入日期\", \"請輸入日期\"]} onChange={this.onChangeDate} allowClear={false} />\n                        {/* </InputGroup> */}\n                    </div>\n                </div>\n\n                {/*<div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        主治醫生:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"選擇主治醫師\" onChange={this.onChangeDoctor} value={this.state.doctor}></Input>\n                    </div>\n        </div>*/}\n                {/* <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <Button shape=\"circle\" icon=\"search\" onClick={this.onClickSearch} />\n                </div> */}\n            </div>\n        );\n    }\n\n    handleDisplaySwitchChange(event) {\n        this.setState({\n            allPatientDisplayData: event.target.value == 'in' ? this.state.allPatientSet : this.state.allPatientUnset,\n            deletedisable: event.target.value == 'in' ? true : false\n        })\n    }\n\n\n    render() {\n        // rowSelection object indicates the need for row selection\n        const { selectedRowKeys } = this.state\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: (selectedRowKeys, selectedRows) => {\n                //console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows)\n                this.setState({\n                    selectedRowsArray: selectedRows,\n                    selectedRowKeys: selectedRowKeys\n                })\n            },\n            getCheckboxProps: record => ({\n                disabled: record.name === 'Disabled User', // Column configuration not to be checked\n                name: record.name,\n            }),\n        };\n        const columns = [\n            {\n                title: '轉出時的床號',\n                dataIndex: 'hbedno',\n                key: 'hbedno',\n                width: \"8%\"\n            },\n            {\n                title: '病歷號碼',\n                dataIndex: 'id',\n                key: 'id',\n                width: \"8%\"\n            },\n            {\n                title: '個案名稱',\n                dataIndex: 'name',\n                key: 'name',\n                width: \"8%\"\n            },\n            {\n                title: '性別',\n                dataIndex: 'gender',\n                key: 'gender',\n                width: \"6%\"\n            },\n            {\n                title: '出生體重',\n                dataIndex: 'weight',\n                key: 'weight',\n                width: \"6%\"\n            },\n            {\n                title: '出生周數',\n                dataIndex: 'birweek',\n                key: 'birweek',\n                width: \"6%\"\n            },\n            {\n                title: '轉入時年齡',\n                dataIndex: 'transinage',\n                key: 'transinage',\n                width: \"6%\"\n            },\n            {\n                title: '轉出時年齡',\n                dataIndex: 'transoutage',\n                key: 'transoutage',\n                width: \"6%\"\n            },\n            {\n                title: '院序號',\n                dataIndex: 'hospitalnumber',\n                key: 'hospitalnumber',\n                width: \"15%\"\n            },\n            {\n                title: '索引號',\n                dataIndex: 'hospitalindex',\n                key: 'hospitalindex',\n                width: \"15%\"\n            },\n            {\n                title: '轉出ICU時間',\n                dataIndex: 'transicutime',\n                key: 'transicutime',\n                width: \"9%\"\n            },\n            {\n                dataIndex: 'clickstate',\n                key: 'clickstate',\n                width: \"7%\"\n            }\n        ];\n        function search(data, searchName) {\n            if (searchName === \"\" || searchName === undefined || searchName === null) {\n                return data\n            }\n            const filterData = data.filter(function (item, index, arr) {\n                const fn = item.patient.pnamec.toString().trim()\n                return fn.indexOf(searchName) >= 0\n            })\n            return filterData\n        }\n        function searchTime(data, searchTime) {\n            if (searchTime === \"\" || searchTime === undefined || searchTime === null) {\n                return data\n            }\n            const filterData = data.filter(function (item, index, arr) {\n                // console.log(item)\n                const fn = moment(item.patient.transintime.toString().trim(), \"YYYYMMDD\").valueOf()\n                const st = moment(searchTime[0].toString().trim(), \"YYYYMMDD\").valueOf()\n                const et = moment(searchTime[1].toString().trim(), \"YYYYMMDD\").valueOf()\n                return st <= fn && fn <= et\n            })\n            return filterData\n        }\n\n        function searchNO(data, searchNO) {\n            if (searchNO === \"\" || searchNO === undefined || searchNO === null) {\n                return data\n            }\n            const filterData = data.filter(function (item, index, arr) {\n                const HID = item.patient.hisid.toString().trim()\n                return HID.match(searchNO)\n            })\n            return filterData\n        }\n        // const dataArr = this.state.allPatientDisplayData\n        // if (dataArr.length === 0) {\n        //     return null\n        // }\n        const rowData = this.state.allPatientDisplayData\n        const d = search(rowData, this.state.name)\n        const f = searchTime(d, this.state.transOuttime)\n        const H = searchNO(f, this.state.hisid)\n        if (H === undefined || H === null) { return null }\n        const data = H.map((item, index) => {\n            return {\n                key: index,\n                id: item.patient.hisid,\n                name: item.patient.pnamec,\n                gender: this.genderswitch(item.patient.psex),\n                weight: item.patientinfo.length === 0 ? \"--\" : Number(item.patientinfo[0].bweight) * 1000,\n                birweek: item.patientinfo.length === 0 ? \"--\" : item.patientinfo[0].bweek + \"週\" + item.patientinfo[0].bday + '天',\n                transage: \"--\",\n                hospitalnumber: item.patient.caseid,\n                hospitalindex: item.patient.transinid,\n                transicutime: item.patient.transouttime,\n                maindoc: \"--\",\n                clickstate: this.EditStyle(item.patient.hisid, item.patient.caseid, item.patient.transinid, index, item.patient.transouttime)\n            }\n        });\n\n        const { uploading, fileList } = this.state;\n        const props = {\n            onRemove: file => {\n                this.setState(state => {\n                    const index = state.fileList.indexOf(file);\n                    const newFileList = state.fileList.slice();\n                    newFileList.splice(index, 1);\n                    return {\n                        fileList: newFileList,\n                    };\n                });\n            },\n            beforeUpload: file => {\n                this.setState(state => ({\n                    fileList: [...state.fileList, file],\n                }));\n                return false;\n            },\n            fileList,\n            showUploadList: false\n        };\n\n        return (\n            <div style={{ paddingLeft: \"24px\", paddingRight: \"24px\" }}>\n\n                <div style={{ display: \"flex\", marginLeft: \"20px\", alignItems: 'center' }}>\n                    <div style={{ fontSize: \"22px\", height: '50px', lineHeight: \"50px\", marginRight: 10 }}>\n                        歷史病歷管理\n                </div>\n                    <div value=\"in\" className={this.state.deletedisable ? \"vitalBtnSource\" : \"vitalBtnSelectSource\"} style={{ marginRight: 5 }} onClick={() => { this.handleDisplaySwitchChange({ target: { value: 'in' } }) }}>\n                        住院中\n                    </div>\n                    <div value=\"out\" className={!this.state.deletedisable ? \"vitalBtnSource\" : \"vitalBtnSelectSource\"} onClick={() => { this.handleDisplaySwitchChange({ target: { value: 'out' } }) }}>\n                        已轉出\n                     </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr\", height: '50px', gridColumnGap: \"10px\" }}>\n                    {this.Searchbar()}\n                    {this.state.deletedisable == false ? <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gridGap: \"10px\", marginRight: this.state.deletedisable == false ? 0 : -200 }}>\n                        <div style={{ display: \"flex\", justifyContent: 'space-between', alignItems: \"center\" }}>\n                            <Upload {...props}>\n                                <Button style={{ width: \"100%\" }}>\n                                    <Icon type=\"upload\" /> 選擇檔案\n                                </Button>\n                            </Upload>\n                            <Button\n                                onClick={this.handleUpload.bind(this)}\n                                disabled={fileList.length === 0}\n                                style={{ width: \"100%\" }}\n                            >\n                                匯入\n                            </Button>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                            <Button onClick={this.exportClick.bind(this)} style={{ width: \"100%\" }}>匯出</Button>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                            <Button onClick={this.deleteHistoryUser.bind(this)} style={{ width: \"100%\" }}>刪除</Button>\n                        </div>\n                    </div> : null}\n                </div>\n                <div>\n                    <Table rowSelection={rowSelection} columns={columns} dataSource={data} onRow={record => {\n                        return {\n                            onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                            onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                        };\n                    }} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Historyview;\n","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport './Crosssectionvitalsignchart.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport X2JS from 'x2js';\n\nclass Crosssectionvitalsignchart extends Component {\n    state = {\n        change: false,\n        sourcedata: [],\n        prepickerdate: null,\n        presource: null,\n        preinterval: null,\n        prewidth: null,\n    }\n\n    centermonitorApiDataGet() {\n        function formatTimer(interval, pickerdate) {\n            const endTimeStamp = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    start: moment(endTimeStamp - (24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                    interval: 0\n                }\n            }\n            if (interval === 1) {\n                return {\n                    start: moment(endTimeStamp - (3 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                    interval: 1\n                }\n            }\n            if (interval === 2) {\n                return {\n                    start: moment(endTimeStamp - (7 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                    interval: 2\n                }\n            }\n            return {\n                start: moment(endTimeStamp - (14 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\"),\n                end: moment(endTimeStamp).format(\"YYYYMMDDHHmmss\"),\n                interval: 3\n            }\n        }\n        function formatPickerDate(PickerDate) {\n            const nowDateForSeven = moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf() + (7 * 60 * 60 * 1000)\n            const newDateForZero = moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n            const now = moment().valueOf()\n            if (PickerDate === newDateForZero) {\n                if (now < nowDateForSeven) {\n                    return PickerDate - (24 * 60 * 60 * 1000)\n                }\n                return PickerDate\n            }\n            return PickerDate\n        }\n        const { type, interval, PickerDate, HID, source, CID, svg_id } = this.props\n        const PHID = HID.toString().trim()\n        const PCID = CID.toString().trim()\n        const forPicker = formatPickerDate(PickerDate)\n        const optionvalue = formatTimer(interval, forPicker)\n        if (source === \"CM\") {\n            if (type === \"abp\") {\n                ApiProvider.getPatientwardvalueBoxPlot(PHID, optionvalue.start, optionvalue.end, type, optionvalue.interval)\n                    .then(data => {\n                        d3.select(\"#\" + svg_id).remove()\n                        this.drawChart(data.data);\n                    })\n                    .catch(err => { console.log(err) })\n            }\n            if (type === \"hr\" || type === \"rr\" || type === \"spo2\") {\n                ApiProvider.getPatientwardvalueBoxPlot(PHID, optionvalue.start, optionvalue.end, type, optionvalue.interval)\n                    .then(data => {\n                        d3.select(\"#\" + svg_id).remove()\n                        this.drawChart(data.data);\n                    })\n                    .catch(err => { console.log(err) })\n            }\n            if (type === \"nbp\") {\n                ApiProvider.getVitalSignData(PHID, optionvalue.start, optionvalue.end, type)\n                    .then(data => {\n                        d3.select(\"#\" + svg_id).remove()\n                        this.drawChart(data.data);\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    })\n            }\n            if (type === \"bt\") {\n                d3.select(\"#\" + svg_id).remove()\n                this.drawChart([]);\n            }\n        }\n        if (source === \"NIS\") {\n            const xm2 = new X2JS()\n            const st = moment(optionvalue.start, \"YYYYMMDDHHmmss\").format(\"YYYYMMDDHHmm\")\n            const et = moment(optionvalue.end, \"YYYYMMDDHHmmss\").format(\"YYYYMMDDHHmm\")\n            const QDVS = ApiProvider.getQDVS(PCID, st, et)\n                .then(data => {\n                    return xm2.xml2js(data.data).outmsg.resconts.rescont\n                })\n                .catch(err => { console.log(err) })\n\n            const QOXY = ApiProvider.getQOXY(PCID, st, et)\n                .then(data => {\n                    return xm2.xml2js(data.data).outmsg.resconts.rescont\n\n                })\n                .catch(err => { console.log(err) })\n            Promise.all([QDVS, QOXY]).then(result => {\n                function FormatNISData(QDVS, QOXY, type) {\n                    var HRNISLIST = []\n                    var RRNISLIST = []\n                    var SBPNISLIST = []\n                    var DBPNISLIST = []\n                    var BTNISLIST = []\n                    var Spo2NISLIST = []\n                    if (Array.isArray(QDVS)) {\n                        for (let index = 0; index < QDVS.length; index++) {\n                            const element = QDVS[index];\n                            const hr = element.pluse\n                            const rr = element.breath\n                            const SBP = element.systolic\n                            const DBP = element.diastolic\n                            const BT = element.temperature\n                            const time = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                            console.log(element)\n                            console.log(Number(DBP))\n                            if (Number(hr) !== NaN) {\n                                HRNISLIST.push({\n                                    Data: hr,\n                                    Time: time\n                                })\n                            }\n                            if (Number(rr) === NaN) {\n\n                                RRNISLIST.push({\n                                    Data: rr,\n                                    Time: time\n                                })\n                            }\n                            if (Number(SBP) === NaN) {\n                                SBPNISLIST.push({\n                                    Data: SBP,\n                                    Time: time\n                                })\n                            }\n                            if (Number(DBP) === NaN) {\n                                DBPNISLIST.push({\n                                    Data: DBP,\n                                    Time: time\n                                })\n                            }\n                            console.log(Number(BT))\n                            if (Number(BT) === NaN) {\n\n                                BTNISLIST.push({\n                                    Data: BT,\n                                    Time: time\n                                })\n                            }\n                        }\n                    }\n                    if (Array.isArray(QOXY)) {\n                        for (let index = 0; index < QOXY.length; index++) {\n                            const element = QOXY[index];\n                            const spo2 = element.concen\n                            if (Number(spo2) === NaN) {\n                                continue\n                            }\n                            const time = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                            Spo2NISLIST.push({\n                                Data: spo2,\n                                Time: time\n\n                            })\n                        }\n                    }\n                    if (type === \"hr\") { return HRNISLIST }\n                    if (type === \"rr\") { return RRNISLIST }\n                    if (type === \"spo2\") { return Spo2NISLIST }\n                    if (type === \"abp\") { return [SBPNISLIST, DBPNISLIST] }\n                    if (type === \"bt\") { return BTNISLIST }\n                    return []\n                }\n                d3.select(\"#\" + svg_id).remove()\n                this.drawChart(FormatNISData(result[0], result[1], type))\n            })\n        }\n    }\n    componentDidUpdate() {\n        const { interval, PickerDate, HID, source, width } = this.props\n        const PrePickerDate = this.state.prepickerdate\n        if (PrePickerDate !== PickerDate) {\n            this.setState({ prepickerdate: this.props.PickerDate })\n            this.centermonitorApiDataGet()\n        }\n        const Presource = this.state.presource\n        if (Presource !== source) {\n            this.setState({ presource: source })\n            this.centermonitorApiDataGet()\n        }\n        if (this.state.prewidth !== width) {\n            this.setState({ prewidth: width });\n            this.centermonitorApiDataGet();\n        }\n        const Preinterval = this.state.preinterval\n        if (interval !== Preinterval) {\n            this.setState({ preinterval: interval })\n            this.centermonitorApiDataGet()\n        }\n        const PreHID = this.state.prehid\n        if (HID !== PreHID) {\n            this.setState({ prehid: HID })\n            this.centermonitorApiDataGet()\n        }\n    }\n\n    componentDidMount() {\n\n        this.setState({\n            prepickerdate: this.props.PickerDate,\n            presource: this.props.source,\n            preinterval: this.props.interval,\n            prehid: this.props.prehid,\n            prewidth: this.props.width,\n        })\n        this.centermonitorApiDataGet()\n\n    }\n    drawChart(sourcedata) {\n        function formatxArray(startTime, interval) {\n            var xAxisarray = []\n            if (interval === 0) {\n                for (let index = 0; index < 25; index++) {\n                    if (index % 4 === 0) {\n                        xAxisarray.push(startTime + (index * 60 * 60 * 1000))\n                    }\n                }\n            }\n            else if (interval === 1) {\n                for (let index = 0; index < 19; index++) {\n                    if (index % 2 === 0) {\n                        xAxisarray.push(startTime + (index * 4 * 60 * 60 * 1000))\n                    }\n                }\n            }\n            else if (interval === 2) {\n                for (let index = 0; index < 21; index++) {\n                    xAxisarray.push(startTime + (index * 60 * 60 * 1000 * 8))\n                }\n            }\n            else {\n                for (let index = 0; index < 14; index++) {\n                    xAxisarray.push(startTime + (index * 60 * 60 * 1000 * 24))\n                }\n            }\n            return xAxisarray\n        }\n\n        function formatbotaxis(time, interval) {\n            var xAxisarray = []\n            if (interval === 0) {\n                xAxisarray.push(time + (17 * 60 * 60 * 1000))\n            }\n            else if (interval === 1) {\n                for (let index = 0; index < 3; index++) {\n                    xAxisarray.push(time + (17 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000))\n                }\n            }\n            else if (interval === 2) {\n                for (let index = 0; index < 21; index++) {\n                    xAxisarray.push(time + (index * 60 * 60 * 1000 * 8))\n                }\n            }\n            else {\n                for (let index = 0; index < 14; index++) {\n                    xAxisarray.push(time + (index * 60 * 60 * 1000 * 24))\n                }\n            }\n            return xAxisarray\n        }\n\n        var formatHour = d3.timeFormat(\"%H\")\n\n        function multiFormat(date) {\n            return formatHour(date)\n        }\n\n\n        //vitaldays true:threeday\n        const {\n            comein,\n            id_key,\n            svg_id,\n            height,\n            width,\n            interval, //0:1天 1:3天 2:1週 3:2週 \n            axisBot,\n            axisTop,\n            circlrcolor,\n            max,\n            min,\n            upper,\n            lower,\n            source,\n            type,\n            PickerDate,\n        } = this.props\n\n        function formatTimer(interval, pickerdate) {\n            const endTimeStamp = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    start: endTimeStamp - (24 * 60 * 60 * 1000),\n                    end: endTimeStamp,\n                    interval: 0\n                }\n            }\n            if (interval === 1) {\n                return {\n                    start: endTimeStamp - (3 * 24 * 60 * 60 * 1000),\n                    end: endTimeStamp,\n                    interval: 1\n                }\n            }\n            if (interval === 2) {\n                return {\n                    start: endTimeStamp - (7 * 24 * 60 * 60 * 1000),\n                    end: endTimeStamp,\n                    interval: 2\n                }\n            }\n            return {\n                start: endTimeStamp - (14 * 24 * 60 * 60 * 1000),\n                end: endTimeStamp,\n                interval: 3\n            }\n        }\n        function formatPickerDate(PickerDate) {\n            const nowDateForSeven = moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf() + (7 * 60 * 60 * 1000)\n            const newDateForZero = moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n            const now = moment().valueOf()\n            if (PickerDate === newDateForZero) {\n                if (now < nowDateForSeven) {\n                    return PickerDate - (24 * 60 * 60 * 1000)\n                }\n                return PickerDate\n            }\n            return PickerDate\n        }\n\n        // const width = window.screen.availWidth * 0.25, height = 100, viewwidth = width - 50, rect_width = width / 46\n        const viewwidth = width - 50\n        // const EndTime = formatendtime(defaultdate)\n        // var vital_interval = formatintervaldays(EndTime, vitaldays)\n\n        const forPicker = formatPickerDate(PickerDate)\n        const optionvalue = formatTimer(interval, forPicker)\n        console.log(optionvalue)\n        var y = d3.scaleLinear()\n            .domain([min, max])\n            .range([height, 0])\n\n        var x = d3.scaleLinear()\n            .domain([optionvalue.start, optionvalue.end])\n            .range([0, viewwidth - 1])\n\n\n        var yAxis = d3.axisLeft(y)\n            .tickValues([min, max])\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(15);\n\n\n        const xAxisvalue = formatxArray(optionvalue.start, interval)\n        const xAxisbotvalue = formatbotaxis(optionvalue.start, interval)\n\n        var xAxis = d3.axisTop(x)\n            .tickValues(xAxisvalue)\n            .tickSize(0, 0)\n            .tickPadding(0)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n        var xAxisbot = d3.axisTop(x)\n            .tickValues(xAxisbotvalue)\n            .tickSize(0, 0)\n            .tickPadding(12)\n            .tickFormat(function (d) { return moment(d).format(\"MM/DD\") });\n\n        var svg\n        if (axisTop) {\n            svg = d3.select(\"#\" + id_key)\n                .append(\"svg\")\n                .attr(\"id\", svg_id)\n                .style(\"width\", width + 10)\n                .style(\"height\", height + 25)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + 50 + \",\" + 20 + \")\");\n        }\n        else {\n            if (axisBot) {\n                svg = d3.select(\"#\" + id_key)\n                    .append(\"svg\")\n                    .attr(\"id\", svg_id)\n                    .style(\"width\", width)\n                    .style(\"height\", height + 25)\n                    .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + 50 + \",\" + 5 + \")\");\n            }\n            else {\n\n                svg = d3.select(\"#\" + id_key)\n                    .append(\"svg\")\n                    .attr(\"id\", svg_id)\n                    .style(\"width\", width)\n                    .style(\"height\", height + 10)\n                    .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + 50 + \",\" + 5 + \")\");\n            }\n        }\n\n        if (axisTop) {\n            svg.append(\"g\")\n                .call(xAxis)\n                .attr(\"class\", \"axis\");\n        }\n\n        if (axisBot) {\n            svg.append(\"g\")\n                .call(xAxisbot)\n                .attr(\"class\", \"axis\");\n\n        }\n\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n\n        //上下橫線\n        svg.append('line')\n            .attr('x1', x(optionvalue.start))\n            .attr('y1', y(max))\n            .attr('x2', x(optionvalue.end))\n            .attr('y2', y(max))\n            .style('stroke', 'rgba(220,220,220,1)')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n        svg.append('line')\n            .attr('x1', x(optionvalue.start))\n            .attr('y1', y(min))\n            .attr('x2', x(optionvalue.end))\n            .attr('y2', y(min))\n            .style('stroke', 'rgba(220,220,220,1)')\n            .style('stroke-width', 1)\n            .style('stroke-dasharray', 5.5);\n\n\n        if (interval === 0) {\n            for (let index = 0; index < 25; index++) {\n                if ((index % 24) === 0) {\n                    svg.append('line')\n                        .attr('x1', x(optionvalue.start + (index * 60 * 60 * 1000)))\n                        .attr('y1', 0)\n                        .attr('x2', x(optionvalue.start + (index * 60 * 60 * 1000)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(0,0,0,0.2)')\n                        .style('stroke-width', 2);\n                } else if (index % 8 === 0) {\n                    svg.append('line')\n                        .attr('x1', x(optionvalue.start + (index * 60 * 60 * 1000)))\n                        .attr('y1', 0)\n                        .attr('x2', x(optionvalue.start + (index * 60 * 60 * 1000)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(0,0,0,0.2)')\n                        .style('stroke-width', 2);\n                }\n                else {\n                    svg.append('line')\n                        .attr('x1', x(optionvalue.start + (index * 60 * 60 * 1000)))\n                        .attr('y1', 0)\n                        .attr('x2', x(optionvalue.start + (index * 60 * 60 * 1000)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(220,220,220,1)')\n                        .style('stroke-width', 1)\n                        .style('stroke-dasharray', 5.5);\n                }\n            }\n\n            drawshadow(optionvalue.start, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n\n        }\n        if (interval === 1) {\n            for (let index = 0; index < 19; index++) {\n                if ((index % 6) === 0) {\n                    svg.append('line')\n                        .attr('x1', x(optionvalue.start + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y1', 0)\n                        .attr('x2', x(optionvalue.start + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(0,0,0,0.2)')\n                        .style('stroke-width', 2);\n                } else if (index % 2 === 0) {\n                    svg.append('line')\n                        .attr('x1', x(optionvalue.start + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y1', 0)\n                        .attr('x2', x(optionvalue.start + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(0,0,0,0.2)')\n                        .style('stroke-width', 2);\n                }\n                else {\n                    svg.append('line')\n                        .attr('x1', x(optionvalue.start + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y1', 0)\n                        .attr('x2', x(optionvalue.start + (index * 60 * 60 * 1000 * 4)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(220,220,220,1)')\n                        .style('stroke-width', 1)\n                        .style('stroke-dasharray', 5.5);\n                }\n            }\n\n            drawshadow(optionvalue.start, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n        }\n        if (interval === 2) {\n            for (let index = 0; index < 22; index++) {\n                if ((index % 3) === 0) {\n                    svg.append('line')\n                        .attr('x1', x(optionvalue.start + (index * 60 * 60 * 1000 * 8)))\n                        .attr('y1', 0)\n                        .attr('x2', x(optionvalue.start + (index * 60 * 60 * 1000 * 8)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(0,0,0,0.2)')\n                        .style('stroke-width', 2);\n                } else {\n                    svg.append('line')\n                        .attr('x1', x(optionvalue.start + (index * 60 * 60 * 1000 * 8)))\n                        .attr('y1', 0)\n                        .attr('x2', x(optionvalue.start + (index * 60 * 60 * 1000 * 8)))\n                        .attr('y2', height)\n                        .style('stroke', 'rgba(0,0,0,0.2)')\n                        .style('stroke-width', 2);\n                }\n\n            }\n\n            drawshadow(optionvalue.start, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n        }\n        if (interval === 3) {\n            for (let index = 0; index < 15; index++) {\n                svg.append('line')\n                    .attr('x1', x(optionvalue.start + (index * 60 * 60 * 1000 * 24)))\n                    .attr('y1', 0)\n                    .attr('x2', x(optionvalue.start + (index * 60 * 60 * 1000 * 24)))\n                    .attr('y2', height)\n                    .style('stroke', 'rgba(0,0,0,0.2)')\n                    .style('stroke-width', 2);\n            }\n\n            drawshadow(optionvalue.start, interval, lower, upper, type)\n            drawData(type, source, sourcedata, interval, 10)\n        }\n\n        function formatBox(startTime, interval) {\n            function interFormat(startTime, interval) {\n                var TimeArray = []\n                for (let index = 0; index < interval; index++) {\n                    if (interval === 24) {\n                        const boxTime = startTime + (30 * 60 * 1000) + (index * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 18) {\n                        const boxTime = startTime + (2 * 60 * 60 * 1000) + (index * 4 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else if (interval === 21) {\n                        const boxTime = startTime + (4 * 60 * 60 * 1000) + (index * 8 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                    else {\n                        const boxTime = startTime + (12 * 60 * 60 * 1000) + (index * 24 * 60 * 60 * 1000)\n                        TimeArray.push(boxTime)\n                    }\n                }\n                return TimeArray\n            }\n            if (interval === 0) {\n                return interFormat(startTime, 24)\n            }\n            if (interval === 1) {\n                return interFormat(startTime, 18)\n            }\n            if (interval === 2) {\n                return interFormat(startTime, 21)\n            }\n            return interFormat(startTime, 14)\n        }\n        function formatBoxWidth(viewwidth, interval) {\n            if (interval === 0) {\n                return comein === 'line' ? viewwidth / 27.5 : viewwidth / 25\n            }\n            if (interval === 1) {\n                return comein === 'line' ? viewwidth / 20.5 : viewwidth / 18.5\n            }\n            if (interval === 2) {\n                return comein === 'line' ? viewwidth / 21 : viewwidth / 22.5\n            }\n            return comein === 'line' ? viewwidth / 14 : viewwidth / 14.5\n        }\n        function drawshadow(startTime, interval, lower, upper, type) {\n            const LimitBoxTimer = formatBox(startTime, interval)\n            for (let index = 0; index < LimitBoxTimer.length; index++) {\n                const boxwidth = formatBoxWidth(width, interval)\n                const element = LimitBoxTimer[index];\n                svg.append('line')\n                    .attr('x1', x(element))\n                    .attr('y1', y(lower))\n                    .attr('x2', x(element))\n                    .attr('y2', y(upper))\n                    .style('stroke', circlrcolor)\n                    .style('opacity', 0.5)\n                    .style('stroke-width', boxwidth)\n\n                if (type === \"nbp\" || type === \"abp\") {\n                    svg.append('line')\n                        .attr('x1', x(element))\n                        .attr('y1', y(35))\n                        .attr('x2', x(element))\n                        .attr('y2', y(55))\n                        .style('stroke', circlrcolor)\n                        .style('opacity', 0.2)\n                        .style('stroke-width', boxwidth)\n                }\n            }\n        }\n        function drawData(type, source, sourcedata, interval, boxwidth) {\n            function formatShift(interval) {\n                if (interval === 0) {\n                    return 30 * 60 * 1000\n                }\n                if (interval === 1) {\n                    return 2 * 60 * 60 * 1000\n                }\n                if (interval === 2) {\n                    return 4 * 60 * 60 * 1000\n                }\n                return 12 * 60 * 60 * 1000\n            }\n            if (source === \"CM\") {\n                if (type === \"abp\") {\n                    const dataAbps = sourcedata.abps\n                    const dataAbpd = sourcedata.abpd\n                    for (let index = 0; index < dataAbpd.length; index++) {\n                        const element = dataAbpd[index];\n                        const q1 = element.Q1\n                        const q2 = element.Q2\n                        const q3 = element.Q3\n                        const q4 = element.Q4\n                        const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + formatShift(interval)\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(q1))\n                            .attr(\"y2\", y(q4))\n                            .attr(\"stroke\", circlrcolor)\n                            .style('opacity', 0.5)\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q2) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style('opacity', 0.5)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg\n                            .selectAll(\"toto\")\n                            .data([q1, q4])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('opacity', 0.5)\n                            .style('stroke-width', 1);\n                    }\n                    for (let index = 0; index < dataAbps.length; index++) {\n                        const element = dataAbps[index];\n                        const q1 = element.Q1\n                        const q2 = element.Q2\n                        const q3 = element.Q3\n                        const q4 = element.Q4\n                        const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + formatShift(interval)\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(q1))\n                            .attr(\"y2\", y(q4))\n                            .attr(\"stroke\", circlrcolor)\n                            // .attr(\"stroke\", \"blcak\")\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q2) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg\n                            .selectAll(\"toto\")\n                            .data([q1, q4])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1);\n                    }\n                }\n                if (type === \"hr\" || type === \"rr\" || type === \"spo2\") {\n                    for (let index = 0; index < sourcedata.length; index++) {\n                        const element = sourcedata[index];\n                        const q1 = element.Q1\n                        const q2 = element.Q2\n                        const q3 = element.Q3\n                        const q4 = element.Q4\n                        const Xtime = moment(element.time, \"YYYY-MM-DD HH:mm:ss\").valueOf() + formatShift(interval)\n                        svg.append(\"line\")\n                            .attr(\"x1\", x(Xtime))\n                            .attr(\"x2\", x(Xtime))\n                            .attr(\"y1\", y(q1))\n                            .attr(\"y2\", y(q4))\n                            .attr(\"stroke\", circlrcolor)\n                            // .attr(\"stroke\", \"blcak\")\n                            .style('stroke-width', 1)\n\n                        svg.append(\"rect\")\n                            .attr(\"x\", x(Xtime) - boxwidth / 2)\n                            .attr(\"y\", y(q3))\n                            .attr(\"height\", (y(q2) - y(q3)))\n                            .attr(\"width\", boxwidth)\n                            .attr(\"stroke\", circlrcolor)\n                            .style(\"fill\", \"rgba(255,255,255,1)\")\n                            .style('stroke-width', 1);\n\n                        svg\n                            .selectAll(\"toto\")\n                            .data([q1, q4])\n                            .enter()\n                            .append(\"line\")\n                            .attr(\"x1\", x(Xtime) - boxwidth / 2)\n                            .attr(\"x2\", x(Xtime) + boxwidth / 2)\n                            .attr(\"y1\", function (d) { return (y(d)) })\n                            .attr(\"y2\", function (d) { return (y(d)) })\n                            .attr(\"stroke\", circlrcolor)\n                            .style('stroke-width', 1);\n\n                    }\n                }\n                if (type === \"nbp\") {\n                    for (let index = 0; index < sourcedata.length; index++) {\n                        const element = sourcedata[index];\n                        const Xtime = moment(element.Time, \"YYYY-MM-DD HH:mm:ss\").valueOf()\n                        const SBP = element.SBP\n                        const DBP = element.DBP\n                        if (SBP === 0 || DBP === 0) {\n                            continue\n                        }\n                        else {\n                            svg.append('circle')\n                                .attr('cx', x(Xtime))\n                                .attr('cy', y(SBP))\n                                .attr('r', 3)\n                                .style('fill', circlrcolor)\n\n\n                            svg.append('circle')\n                                .attr('cx', x(Xtime))\n                                .attr('cy', y(DBP))\n                                .attr('r', 3)\n                                .style('opacity', 0.5)\n                                .style('fill', circlrcolor)\n                        }\n\n                    }\n                }\n            }\n            else {\n                if (type === \"abp\" || type === \"nbp\") {\n                    if (sourcedata === undefined) {\n                        return null\n                    }\n                    if (sourcedata.length === 0) {\n                        return null\n                    }\n                    const SBP = sourcedata[0]\n                    const DBP = sourcedata[1]\n                    for (let index = 0; index < SBP.length; index++) {\n                        const element = SBP[index];\n                        svg.append('circle')\n                            .attr('cx', x(element.Time))\n                            .attr('cy', y(element.Data))\n                            .attr('r', 3)\n                            .style('fill', circlrcolor)\n\n                    }\n\n                    for (let index = 0; index < DBP.length; index++) {\n                        const element = DBP[index];\n                        svg.append('circle')\n                            .attr('cx', x(element.Time))\n                            .attr('cy', y(element.Data))\n                            .attr('r', 3)\n                            .style('fill', circlrcolor)\n                            .style('opacity', 0.5)\n\n                    }\n                }\n                else {\n                    for (let index = 0; index < sourcedata.length; index++) {\n                        const element = sourcedata[index];\n                        svg.append('circle')\n                            .attr('cx', x(element.Time))\n                            .attr('cy', y(element.Data))\n                            .attr('r', 3)\n                            .style('fill', circlrcolor)\n\n                    }\n                }\n\n            }\n        }\n    }\n\n    changestate() {\n        this.setState({\n            change: !this.state.change\n        })\n    }\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key} style={{ paddingTop: 10 }}></div>\n        );\n    }\n}\n\nexport default Crosssectionvitalsignchart;\n","import React, { Component } from 'react';\nimport { Select, Modal, Tabs, Icon, Button } from 'antd';\nimport Crosssectionvitalsignchart from './Crossectionvitalsignchart'\nimport Warningsetting from './Warningsettinglist'\n// import Addwarningsetting from './Addnewwaring'\nimport './Vitalsign.scss'\n// import { formatxArrayhalf, formatendtime } from '../../Function/Timeformat'\n// import { simulationCentermonitordata, simulationnisdata } from '../../Function/Wardstate'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport '../../Wardview/Wardchart.scss'\nimport { statecolor } from '../../Function/Wardstate'\n\n\nclass Vitalsign extends Component {\n\n    state = {\n        vital_days: 0, //false:一天 true:三天\n        source: \"CM\", //false:中央站 true:NIS\n        visible: false,\n        visibleConflict: false,\n        chackstate_one: 0,\n        chackstate_three: 0,\n        datasource: null,\n        addNewWarningDateStr: null,\n        addNewWarningHourStr: null,\n\n        CenterMonitorValue: null,\n        preHISID: null,\n        prePickerDate: null,\n        checkStateNumber: null,\n\n        pbStatus: true\n    }\n    componentDidUpdate() {\n        const { PickerDate } = this.props\n        const { prePickerDate } = this.state\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        const preHISID = this.state.preHISID\n        const Time = moment(this.timeCheck(PickerDate, this.state.vital_days).time).format(\"YYYYMMDDHHmmss\")\n        if (Phistnum !== preHISID || PickerDate !== prePickerDate) {\n            this.setState({ preHISID: Phistnum, prePickerDate: PickerDate, checkStateNumber: this.timeCheck(PickerDate, this.state.vital_days).checkNum })\n            this.getVitalSignData(Time.time, Phistnum)\n        }\n    }\n    componentDidMount() {\n        //選取現在時間\n        const { PickerDate } = this.props\n        const Time = moment(this.timeCheck(PickerDate, this.state.vital_days).time).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ preHISID: Phistnum, prePickerDate: PickerDate, checkStateNumber: this.timeCheck(PickerDate, this.state.vital_days).checkNum })\n        this.getVitalSignData(Time, Phistnum)\n    }\n\n    changePb = () => {\n        this.setState({\n            pbStatus: false\n        })\n    }\n\n    decidePB = (hr, nbpd, abpd) => {\n        const status = this.state.pbStatus\n        if (status) {\n            hr > 160 || hr < 100 && this.changePb()\n            nbpd > 75 || nbpd < 55 && this.changePb()\n            abpd > 75 || abpd < 55 && this.changePb()\n        }\n    }\n\n    timeCheck(PickerDate, interval) {\n        function sevenFormat(nowDaySeven) {\n            const now = moment().valueOf()\n            if (now < nowDaySeven) {\n                return nowDaySeven - (24 * 60 * 60 * 1000)\n            }\n            return nowDaySeven\n        }\n        const nowDaySeven = moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf() + (7 * 60 * 60 * 1000)\n        const time = sevenFormat(nowDaySeven)\n        const PickerDateSeven = PickerDate + (7 * 60 * 60 * 1000)\n        const hourFormat = moment().get('hours')\n        if (PickerDateSeven === time) {\n            //選取到今天\n            const EndTime = moment(moment().format(\"YYYYMMDDHH\"), \"YYYYMMDDHH\").valueOf()\n            if (interval === 0) {\n                return {\n                    time: EndTime - (60 * 60 * 1000),\n                    checkNum: hourFormat - 7\n                }\n            }\n            const format = parseInt(hourFormat % 4) + 1\n            return {\n                time: EndTime - (format * 60 * 60 * 1000),\n                checkNum: 18 - parseInt((moment(time + (24 * 60 * 60 * 1000)).diff(moment(EndTime - (format * 60 * 60 * 1000)), \"hours\") / 4))\n            }\n\n        }\n        const EndTime = moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf() + (31 * 60 * 60 * 1000)\n        if (interval === 0) {\n            return {\n                time: EndTime - (60 * 60 * 1000),\n                checkNum: 24\n            }\n        }\n        return {\n            time: EndTime - (4 * 60 * 60 * 1000),\n            checkNum: 18\n        }\n\n    }\n\n    getVitalSignData(Time, Phistnum) {\n        const Interval = this.formatvital_daysToInterval()\n        ApiProvider.getPatientwarMidValue(Phistnum, Time, Interval)\n            .then(data => { console.log(data.data); this.setState({ CenterMonitorValue: data.data }) })\n            .catch(err => { console.log(err) })\n    }\n\n    onVitalCheck(interval) {\n        var gridarray = []\n        if (interval === 1) {\n            for (let index = 0; index < 18; index++) {\n                const checknumber = index + 1\n                if (checknumber === this.state.checkStateNumber) {\n                    gridarray.push(<div key={index} style={{ height: 370, width: \"100%\", border: \"rgba(245, 166, 35, 1) 1px solid\" }} ></div>)\n                }\n                else gridarray.push(<div key={index} style={{ height: 370, width: \"100%\", cursor: \"pointer\" }} onClick={() => this.onClickCheckgrid(checknumber, interval)}></div>)\n            }\n        }\n        else {\n            for (let index = 0; index < 24; index++) {\n                const checknumber = index + 1\n                if (checknumber === this.state.checkStateNumber) {\n                    gridarray.push(<div key={index} style={{ height: 370, width: \"100%\", border: \"rgba(245, 166, 35, 1) 1px solid\" }} ></div>)\n                }\n                else gridarray.push(<div key={index} style={{ height: 370, width: \"100%\", cursor: \"pointer\" }} onClick={() => this.onClickCheckgrid(checknumber, interval)}></div>)\n            }\n        }\n        return gridarray;\n    }\n\n    formatvital_daysToInterval() {\n        const vitaldays = this.state.vital_days\n        if (vitaldays === 0) {\n            return 0\n        }\n        return 1;\n    }\n\n    onClickCheckgrid(number, Interval) {\n        function startTime(PickerDate, Interval) {\n            const End = PickerDate + (31 * 60 * 60 * 1000)\n            if (Interval === 0) {\n                return End - (24 * 60 * 60 * 1000)\n            }\n            return End - (3 * 24 * 60 * 60 * 1000)\n        }\n        function intervalforhour(Interval) {\n            if (Interval === 0) {\n                return 1;\n            }\n            return 4;\n        }\n        const { PickerDate } = this.props\n        const time = moment(startTime(PickerDate, Interval) + (intervalforhour(Interval) * (number - 1) * 60 * 60 * 1000)).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ checkStateNumber: number })\n        this.getVitalSignData(time, Phistnum)\n    }\n\n    render() {\n        function valueFormat(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"--\"\n            }\n            return value\n        }\n        function centervalueNull(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            return value\n        }\n        function centervaluetoNull(value) {\n            function FilterList(DataList, type) {\n                const filterData = DataList.filter(function (value, index, arr) {\n                    return value.type === type\n                })\n                if (filterData.length === 0) {\n                    return null\n                }\n                return filterData[0].Mid\n            }\n            if (value === undefined || value === null) {\n                return {\n                    hr: null,\n                    rr: null,\n                    bt: null,\n                    spo2: null,\n                    abpd: null,\n                    abpm: null,\n                    abps: null,\n                    nbpm: null,\n                    nbps: null,\n                    nbpd: null\n                }\n            }\n            return {\n                hr: FilterList(value, \"hr\"),\n                rr: FilterList(value, \"rr\"),\n                bt: FilterList(value, \"bt\"),\n                spo2: FilterList(value, \"spo2\"),\n                abpd: FilterList(value, \"abpd\"),\n                abpm: FilterList(value, \"abpm\"),\n                abps: FilterList(value, \"abps\"),\n                nbpd: FilterList(value, \"nbpd\"),\n                nbps: FilterList(value, \"nbps\"),\n                nbpm: FilterList(value, \"nbpm\"),\n            }\n        }\n\n        function limitValue(value, upper, lower) {\n            if (value > upper || value < lower) {\n                return false\n            }\n            return true\n        }\n\n        function vitaldaysBool(vitaldays) {\n            if (vitaldays === 3) {\n                return true\n            }\n            return false\n        }\n\n        function formatPickerTimer(pickerdate, interval) {\n            if (interval === 0) {\n                return {\n                    startTime: pickerdate + (7 * 60 * 60 * 1000),\n                    endTime: pickerdate + (31 * 60 * 60 * 1000)\n                }\n            }\n            else {\n                return {\n                    startTime: pickerdate + (31 * 60 * 60 * 1000) - (3 * 24 * 60 * 60 * 1000),\n                    endTime: pickerdate + (31 * 60 * 60 * 1000)\n                }\n\n            }\n        }\n        const width = window.screen.availWidth * 0.25\n        const centervalue = centervaluetoNull(this.state.CenterMonitorValue)\n        const pickerTimer = formatPickerTimer(this.props.PickerDate, this.state.vital_days)\n        const PickerDate = this.props.PickerDate\n\n        this.decidePB(centervalue.hr, centervalue.nbpd, centervalue.abpd)\n        const status = this.state.pbStatus\n        return (\n            <div style={{ border: '1px solid rgba(238, 238, 238, 1)' }}>\n                <div style={{ display: 'flex', alignItems: 'center', height: \"36px\", backgroundColor: \"#71b0e46e\", padding: \"0px 16px\" }}>\n                    <div style={{ fontSize: \"16px\" }}>生命徵象</div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridGap: \"5px\", marginLeft: \"20px\" }}>\n                        <div className={this.state.source === \"CM\" ? \"vitalBtnSource\" : \"vitalBtnSelectSource\"} style={{ marginRight: \"1px\" }} onClick={() => { this.setState({ source: \"CM\", checkStateNumber: null }) }}>\n                            中央站資訊\n                        </div>\n                        <div className={this.state.source === \"NIS\" ? \"vitalBtnSource\" : \"vitalBtnSelectSource\"} onClick={() => { this.setState({ source: \"NIS\", checkStateNumber: null }) }}>\n                            護理系統資訊\n                        </div>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridGap: \"2px\", marginLeft: \"15px\" }}>\n                        <div className={this.state.vital_days === 0 ? \"vitalBtnInterval\" : \"vitalBtnSelectInterval\"} style={{ marginRight: \"1px\" }} onClick={() => { this.setState({ vital_days: 0, checkStateNumber: this.timeCheck(PickerDate, 0).checkNum }) }}>\n                            顯示一天\n                        </div>\n                        <div className={this.state.vital_days === 1 ? \"vitalBtnInterval\" : \"vitalBtnSelectInterval\"} onClick={() => { this.setState({ vital_days: 1, checkStateNumber: this.timeCheck(PickerDate, 1).checkNum }) }}>\n                            顯示三天\n                        </div>\n                    </div>\n                </div>\n                <div className='Wardchartlayout'>\n                    <div className=\"halfwardchart\">\n                        <div className='singlewardchart' style={{ display: 'grid', gridTemplateRows: '22px 122px 122px 123px' }}>\n                            <div></div>\n                            <div className=\"rowTitle\" >\n                                <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"100px\", height: \"100px\", backgroundColor: status ? \"white\" : statecolor('HR') }}>\n                                    <t3 style={{ color: status ? statecolor('HR') : \"white\" }}>HR</t3>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"40px\", lineHeight: \"44px\", paddingRight: \"3px\", color: status ? statecolor('HR') : \"white\" }}>{centervalueNull(centervalue.hr)}</div>\n                                </div>\n                            </div>\n                            {\n                                this.state.source === 'CM' ? (\n                                    <div className=\"rowTitle\">\n                                        <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"100px\", height: \"100px\", backgroundColor: status ? \"white\" : statecolor('BP') }}>\n                                            <div style={{ color: status ? statecolor('BP') : \"white\" }}>NBP(mmHg)</div>\n                                            <div style={{ fontWeight: \"600\", fontSize: \"30px\", lineHeight: \"34px\", color: status ? statecolor('BP') : \"white\" }}>{centervalueNull(centervalue.nbps)}/{centervalueNull(centervalue.nbpd)}</div>\n                                            <div style={{ fontWeight: \"600\", fontSize: \"20px\", lineHeight: \"22px\", color: status ? statecolor('BP') : \"white\" }}>({centervalueNull(centervalue.nbpm)})</div>\n                                        </div>\n                                    </div>\n                                ) : null\n                            }\n                            <div className=\"rowTitle\">\n                                <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"100px\", height: \"100px\", backgroundColor: status ? \"white\" : statecolor('BP') }}>\n                                    <div style={{ color: status ? statecolor('BP') : \"white\" }}>{this.state.source === 'CM' ? 'ABP' : 'BP'}(mmHg)</div>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"30px\", lineHeight: \"34px\", color: status ? statecolor('BP') : \"white\" }}>{centervalueNull(centervalue.abps)}/{centervalueNull(centervalue.abpd)}</div>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"20px\", lineHeight: \"22px\", color: status ? statecolor('BP') : \"white\" }}>({centervalueNull(centervalue.abpm)})</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ position: \"relative\" }}>\n                            {\n                                this.state.source === 'CM' ? (\n                                    <div style={{ position: \"absolute\", top: 20, left: 50, width: width - 50, height: 330 }}>\n                                        <div style={{ display: \"grid\", gridTemplateColumns: this.state.vital_days === 1 ? \"repeat(18, 1fr)\" : \"repeat(24,1fr)\" }}>\n                                            {this.onVitalCheck(this.state.vital_days)}\n                                        </div>\n                                    </div>\n                                ) : null\n                            }\n                            <Crosssectionvitalsignchart\n                                comein={'line'}\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"HR_svg\"}\n                                id_key={\"HR_div\"}\n                                type={\"hr\"}\n                                source={this.state.source}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={100}\n                                upper={160}\n                                axisBot={true}\n                                axisTop={true}\n                                circlrcolor=\"#779F50\"\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={200}>\n                            </Crosssectionvitalsignchart>\n                            {\n                                this.state.source === 'CM' ? (\n                                    <Crosssectionvitalsignchart\n                                        comein={'line'}\n                                        CID={this.props.caseinfo.CASEID}\n                                        HID={this.props.caseinfo.HISID}\n                                        PickerDate={PickerDate}\n                                        svg_id={\"NBP_svg\"}\n                                        id_key={\"NBP_div\"}\n                                        type={\"nbp\"}\n                                        source={this.state.source}\n                                        startTime={pickerTimer.startTime}\n                                        endTime={pickerTimer.endTime}\n                                        height={100}\n                                        width={width}\n                                        interval={this.state.vital_days}\n                                        lower={55}\n                                        upper={75}\n                                        axisBot={false}\n                                        axisTop={false}\n                                        circlrcolor={\"#C12528\"}\n                                        colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                        min={0}\n                                        max={100}>\n                                    </Crosssectionvitalsignchart>\n                                ) : null\n                            }\n                            <Crosssectionvitalsignchart\n                                comein={'line'}\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"ABP_svg\"}\n                                id_key={\"ABP_div\"}\n                                type={\"abp\"}\n                                source={this.state.source}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={55}\n                                upper={75}\n                                axisBot={false}\n                                axisTop={false}\n                                circlrcolor={\"#C12528\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={100}>\n                            </Crosssectionvitalsignchart>\n                        </div>\n                    </div>\n                    <div className=\"halfwardchart\">\n                        <div className='singlewardchart' style={{ display: 'grid', gridTemplateRows: '22px 122px 122px 123px' }}>\n                            <div></div>\n                            <div className=\"rowTitle\" >\n                                <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"100px\", height: \"100px\", backgroundColor: limitValue(centervalue.spo2, 100, 90) ? \"white\" : statecolor('SpO2') }}>\n                                    <t3 style={{ color: limitValue(centervalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>\n                                        SpO\n                                        <sub >2</sub>\n                                        (%)\n                                    </t3>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"40px\", lineHeight: \"44px\", paddingRight: \"3px\", color: limitValue(centervalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>{centervalueNull(centervalue.spo2)}%</div>\n                                </div>\n                            </div>\n                            <div className=\"rowTitle\" >\n                                <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"100px\", height: \"100px\", backgroundColor: limitValue(centervalue.bt, 38, 36) ? \"white\" : statecolor('BT') }}>\n                                    <div style={{ color: limitValue(centervalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>BT</div>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"40px\", lineHeight: \"44px\", paddingRight: \"3px\", color: limitValue(centervalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>{valueFormat(centervalue.bt)}</div>\n                                </div>\n                            </div>\n                            <div className=\"rowTitle\">\n                                <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width: \"100px\", height: \"100px\", backgroundColor: limitValue(centervalue.rr, 60, 20) ? \"white\" : statecolor('RR') }}>\n                                    <div style={{ color: limitValue(centervalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>RR(min)</div>\n                                    <div style={{ fontWeight: \"600\", fontSize: \"40px\", lineHeight: \"44px\", paddingRight: \"3px\", color: limitValue(centervalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>{centervalueNull(centervalue.rr)}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ position: \"relative\" }}>\n                            {\n                                this.state.source === 'CM' ? (\n                                    <div style={{ position: \"absolute\", top: 20, left: 50, width: width - 50, height: 330 }}>\n                                        <div style={{ display: \"grid\", gridTemplateColumns: this.state.vital_days === 1 ? \"repeat(18, 1fr)\" : \"repeat(24,1fr)\" }}>\n                                            {this.onVitalCheck(this.state.vital_days)}\n                                        </div>\n                                    </div>\n                                ) : null\n                            }\n\n                            <Crosssectionvitalsignchart\n                                comein={'line'}\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"SpO2_svg\"}\n                                id_key={\"SpO2_div\"}\n                                type={\"spo2\"}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={90}\n                                upper={100}\n                                axisBot={true}\n                                axisTop={true}\n                                circlrcolor={\"#4773B8\"}\n                                colorshadow={\"#4773B8\"}\n                                min={60}\n                                max={100}\n                                source={this.state.source}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                comein={'line'}\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"BT_svg\"}\n                                id_key={\"BT_div\"}\n                                type={\"bt\"}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                source={this.state.source}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={36}\n                                upper={38}\n                                axisBot={false}\n                                axisTop={false}\n                                circlrcolor={\"#7F3DB5\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={34}\n                                max={41}>\n                            </Crosssectionvitalsignchart>\n                            <Crosssectionvitalsignchart\n                                comein={'line'}\n                                CID={this.props.caseinfo.CASEID}\n                                HID={this.props.caseinfo.HISID}\n                                PickerDate={PickerDate}\n                                svg_id={\"RR_svg\"}\n                                id_key={\"RR_div\"}\n                                type={\"spo2\"}\n                                startTime={pickerTimer.startTime}\n                                endTime={pickerTimer.endTime}\n                                height={100}\n                                width={width}\n                                interval={this.state.vital_days}\n                                lower={20}\n                                upper={60}\n                                axisBot={false}\n                                axisTop={false}\n                                circlrcolor={\"#DE7531\"}\n                                colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                min={0}\n                                max={100}\n                                source={this.state.source}>\n                            </Crosssectionvitalsignchart>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n\n}\n\nexport default Vitalsign;\n","import React, { Component } from 'react';\nimport dragdown from '../../Image/svg/dragdown.svg'\n\nclass Warningsetting extends Component {\n    state = {\n        dragstate: false\n    }\n    onClickdrag = () => {\n        this.setState(\n            {\n                dragstate: !this.state.dragstate\n            }\n        )\n    }\n    render() {\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div style={{ height: 50, background: \"rgba(238,238,238,1)\", padding: \"10px 16px\", display: \"flex\", justifyContent: \"space-between\" }}>\n                    <div style={{ display: \"flex\" }}>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>2019-06-01 08:00</div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", marginLeft: \"20px\" }}>\n                            <div style={{ border: \"red 1px solid\", borderRadius: \"4px\", cursor: \"pointer\", color: \"red\", padding: \"5px 20px\", background: \"white\" }}>刪除</div>\n                        </div>\n                    </div>\n                    <div onClick={this.onClickdrag} style={{ transform: this.state.dragstate ? \"scaleY(1)\" : \"scaleY(-1)\" }}>\n                        <img src={dragdown} alt=\"dragdown\"></img>\n                    </div>\n                </div>\n                <div style={{ display: this.state.dragstate ? \"block\" : \"none\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 4fr 1fr 4fr\" }}>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>HR</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>ABP</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>NBP</div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>SpO2</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>BT</div>\n                            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>RR</div>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr 1fr\" }}>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                            <div style={{ padding: \"5px 10px\" }}>\n                                <div>數值上下界:170(XXX)~70(XXX)</div>\n                                <div>正常值:170(XXX)~70(XXX)</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ height: 50, padding: \"10px 16px\", display: \"flex\", alignItems: \"center\" }}>生效時間範圍:2019-06-01 08:00~2019-06-31 08:00</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Warningsetting","import React, { Component } from 'react';\nimport { Button, DatePicker, Checkbox } from 'antd';\nimport moment from 'moment';\nimport displaylogo from '../Image/svg/filter.svg'\nimport { daysdiff } from '../Function/Timeformat'\nimport { pregancyweeksanddays } from '../Function/Wardbedfunction'\nimport './Controlbar.scss'\n// import * as ApiProvider from '../API/ApiProvider';\nimport * as WardState from '../Function/Wardstate'\nimport locale from 'antd/es/date-picker/locale/zh_TW';\n\n\nclass Controlbar extends Component {\n    state = {\n        display_Mode: false,\n        item: this.props.item_array,\n        scrollstate: 0,\n    }\n    sendData = (itwm_array) => {\n        this.props.parentCallback(itwm_array);\n    }\n\n\n    sendDateData = (PickerDate) => {\n        this.props.parentDateCallback(PickerDate);\n    }\n    //快速滑動\n    scrollToAnchor = (anchorName) => {\n        if (anchorName) {\n            let anchorElement = document.getElementById(anchorName);\n            if (anchorElement) { anchorElement.scrollIntoView(); }\n        }\n    }\n    onChange = (checkedValues) => {\n        this.sendData(checkedValues)\n\n    }\n    onDateChange = (date, dateString) => {\n        this.sendDateData(date.valueOf())\n    }\n    open_display() {\n        this.setState({\n            display_Mode: !this.state.display_Mode\n        })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo, PickerDate } = this.props\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const bTemp = moment(moment(bTime).format('YYYYMMDD')).valueOf()\n                bronDate <= bTemp && this.sendDateData(bTime)\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD')).valueOf()\n                this.sendDateData(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const atemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= atemp && this.sendDateData(aTime)\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n\n        const btn_style = {\n            unclick_style: { borderRadius: \"4px\", color: \"#001a6d88\", border: \"1px solid #001a6d88\", padding: \"0px 4px\", height: \"30px\" }\n        }\n\n        function Monthformat(month) {\n            return month + 1\n        }\n        function timeformat(timestring) {\n            return new Date(timestring).getFullYear() + \"/\" + Monthformat(new Date(timestring).getMonth()) + \"/\" + new Date(timestring).getDate()\n        }\n        function valueFormat(value) {\n            if (value === \"\" || value === null || value === undefined) {\n                return \"--\"\n            }\n            return value.toString()\n        }\n        function valueBornWeight(value) {\n            if (value === \"\" || value === null || value === undefined || value === 0) {\n                return \"\"\n            }\n            return value.toString() + \"g → \"\n        }\n        const display_style = {\n            displye_mode: { position: \"absolute\", right: '0px', top: \"50px\", width: \"200px\", background: \"white\", boxShadow: \"3px 3px 12px\", zIndex: \"100\", borderRadius: \"4px\" },\n            non_display_mode: { display: \"none\" },\n            check_area: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\" },\n            check_text: { padding: \"4px\", width: \"140px\", borderRadius: \"4px\", borderColor: 'rgba(0, 0, 0, 0.15)', borderStyle: \"solid\", borderWidth: \"1px\", marginLeft: \"10px\", borderRadius: \"4px\" }\n        }\n\n        function disabledDate(current) {\n            // Can not select days before today and today\n            const endvalue = moment(caseinfo.PBASINGNINFO.PBIRTHDT, 'YYYYMMDD')\n            return endvalue.endOf('day') > current || current > moment().endOf('day')\n        }\n\n        const { caseinfo, btnlist, PickerDate } = this.props\n        const weightList = caseinfo.WEIGHT\n        const Birthday = caseinfo.PBASINGNINFO.PBIRTHDT\n        const BornWeight = WardState.BornWeight(weightList, Birthday)\n        const DayWeight = WardState.selectweight(weightList, PickerDate)\n        const btn = btnlist.map(\n            (item, index) => <Button onClick={this.scrollToAnchor.bind(this, item.scrollpoint)} key={index} style={btn_style.unclick_style}>\n                <t3>{item.name}</t3>\n            </Button>\n        )\n        return (\n            // <div>\n            <div className='controlbarlayout'>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto auto\", gridColumnGap: \"30px\" }}>\n                    <DatePicker getCalendarContainer={triggerNode => triggerNode.parentNode} locale={locale} width={140} onChange={this.onDateChange} value={moment(PickerDate)} allowClear={false} showToday={false} disabledDate={(current) => { return current > moment().startOf(\"day\") || current < moment(Birthday, \"YYYYMMDD\").add(-1, \"days\").endOf(\"day\") }} />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"2px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"minus-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                    <div style={{ display: 'grid', gridTemplateColumns: \"repeat(3,auto)\", gridColumnGap: \"30px\", alignContent: \"center\" }}>\n                        {/* <t2>矯正週數：{pregancyweeksanddays(caseinfo.WEEK_BORN, caseinfo.DAY_BORN, moment(Birthday, 'YYYYMMDD').format('YYYY/MM/DD'))}</t2>\n                        <t2>體重：{valueFormat(DayWeight)}g</t2>\n                        <t2>住院第{daysdiff(moment(PickerDate).format('YYYY/MM/DD'), moment(caseinfo.TRANSINDT, 'YYYYMMDD').format('YYYY/MM/DD'))}天</t2> */}\n                    </div>\n                </div>\n                <div style={{ display: \"flex\", alignItems: 'center', position: \"relative\" }}>\n                    <t2>快速切換：</t2>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(5,auto)\", gridColumnGap: \"5px\" }}>{btn}</div>\n                    <div onClick={() => this.open_display()} style={{ cursor: \"pointer\", marginLeft: \"5px\" }}>\n                        <img src={displaylogo} alt='displaylogo' style={{ width: '15px', height: '15px' }}></img>\n                    </div>\n                    <div style={this.state.display_Mode ? display_style.displye_mode : display_style.non_display_mode}>\n                        <t2 className='controlmoduletitle'>顯示切換</t2>\n                        <div style={{ marginTop: \"10px\", marginBottom: \"20px\" }}>\n                            <Checkbox.Group defaultValue={this.state.item} id={\"checkbox_group\"} style={{ width: '100%', display: \"grid\", gridTemplateRows: \"repeat(5,1fr)\", gridRowGap: \"5px\" }} onChange={this.onChange}>\n                                <div style={display_style.check_area}>\n                                    <Checkbox value={0}></Checkbox>\n                                    <t3 style={display_style.check_text}>生命徵象</t3>\n                                </div>\n                                <div style={display_style.check_area}>\n                                    <Checkbox value={1} ></Checkbox>\n                                    <t3 style={display_style.check_text}>檢驗</t3>\n                                </div>\n                                <div style={display_style.check_area}>\n                                    <Checkbox value={2}></Checkbox>\n                                    <t3 style={display_style.check_text}>呼吸評估</t3>\n                                </div>\n                                <div style={display_style.check_area}>\n                                    <Checkbox value={3}></Checkbox>\n                                    <t3 style={display_style.check_text}>醫藥囑</t3>\n                                </div>\n                                <div style={display_style.check_area}>\n                                    <Checkbox value={4}></Checkbox>\n                                    <t3 style={display_style.check_text}>行事曆及註記</t3>\n                                </div>\n                                {/* <div style={display_style.check_area}>\n                                        <Checkbox value={5}></Checkbox>\n                                        <t3 style={display_style.check_text}>To Do List</t3>\n                                    </div> */}\n                            </Checkbox.Group>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            //     <div className='boxshadow'></div>\n            // </div >\n\n        );\n    }\n}\n\nexport default Controlbar;\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport { Icon } from 'antd'\n\nconst calcBorderLeft = (intervalStatus, index, Status) => {\n    if (Status === \"Crossection\") {\n        return '1px solid #eeeeee';\n    }\n    if (intervalStatus === 0) {\n        if (index % 24 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else if (index % 8 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else {\n            return '1px solid #eeeeee';\n        }\n    } else if (intervalStatus === 1) {\n        if (index % 6 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else if (index % 2 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else {\n            return '1px solid #eeeeee';\n        }\n    } else if (intervalStatus === 2) {\n        if (index % 3 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else {\n            return '2px solid rgba(0,0,0,0.2)';\n        }\n    } else {\n        return '2px solid rgba(0,0,0,0.2)';\n    }\n}\n\nclass IOpageCell extends Component {\n    render() {\n        const { IntervalStatus, Status, data, weightList, index } = this.props\n        // console.log(weightList)\n        const startTime = data.start\n        const endTime = data.end\n        const element = data.element\n        const urine = data.urine\n        var weightData = 0\n        if (Array.isArray(weightList)) {\n            for (let index = 0; index < weightList.length; index++) {\n                const element = weightList[index];\n                const elementTime = moment(element.rec_dat.toString().trim() + element.rec_tim.toString().trim(), \"YYYYMMDDHHmm\").valueOf()\n                if (elementTime <= endTime) {\n                    weightData = Number(element.value2)\n                }\n            }\n        }\n        var urineValue = 0\n        if (Array.isArray(element)) {\n            for (let index = 0; index < element.length; index++) {\n                const info = element[index];\n                const value = Number(info.out_val2)\n                urineValue = urineValue + value\n            }\n        }\n        if (weightData !== 0 && urineValue !== 0 && urine !== 0) {\n            // console.log((urineValue / urine) / weightData)\n            const cellValue = parseFloat((urineValue / urine) / weightData).toFixed(1)\n            return (\n                <div key={index} style={{\n                    borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #eeeeee\", borderCollapse: 'collapse',\n                    borderLeft: calcBorderLeft(IntervalStatus, index, Status),\n                    backgroundColor: Status !== \"Crossection\" ?\n                        (parseFloat(cellValue) === '' ? 'white' : \"rgba(175,75,25,0.05)\")\n                        :\n                        (index === 3 ? \"rgba(175,75,25,0.2)\"\n                            :\n                            \"rgba(175,75,25,0.05)\")\n                }}>\n                    {(parseFloat(cellValue) === '' && Status !== \"Crossection\") || <div style={{\n                        fontWeight: (Status === \"Crossection\" && index === 3) ? \"600\" : \"\",\n                        color: (parseFloat(cellValue) < 0.5 || parseFloat(cellValue) > 5) ? \"#FF0000\" : \"black\"\n                    }}>\n                        {(parseFloat(cellValue) === '' || parseFloat(cellValue) === 0) ? '--'\n                            :\n                            parseFloat(cellValue) >= 0 ? `+${parseFloat(cellValue).toFixed(1)}` : parseFloat(cellValue).toFixed(1)}\n                    </div>}\n                </div>\n            )\n        }\n        return (\n            <div key={index} style={{\n                borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #eeeeee\", borderCollapse: 'collapse',\n                borderLeft: calcBorderLeft(IntervalStatus, index, Status),\n                backgroundColor: Status !== \"Crossection\" ? \"white\"\n                    :\n                    index === 3 ? \"rgba(175,75,25,0.2)\"\n                        :\n                        \"rgba(175,75,25,0.05)\"\n            }}>\n                {Status === \"Crossection\" && <div style={{\n                    fontWeight: index === 3 ? \"600\" : \"\",\n                    color: \"black\"\n                }}>--</div>}\n            </div>\n        )\n    }\n\n}\n\nexport default IOpageCell\n","import React, { Component } from 'react';\nimport './iopage.scss'\nimport moment from 'moment';\nimport * as WardState from '../Function/Wardstate'\nimport * as ApiProvider from '../API/ApiProvider'\nimport * as ApiGithub from '../API/ApiGithub'\nimport X2JS from 'x2js';\nimport * as QDCList from '../Resource/QDC'\nimport * as ioDataFormat from './ioDataFormat'\nimport IOpageCell from './ioPageCell'\n\nconst calcBorderLeft = (intervalStatus, index, Status) => {\n    if (Status === \"Crossection\") {\n        return '1px solid #eeeeee';\n    }\n    if (intervalStatus === 0) {\n        if (index % 24 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else if (index % 8 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else {\n            return '1px solid #eeeeee';\n        }\n    } else if (intervalStatus === 1) {\n        if (index % 6 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else if (index % 2 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else {\n            return '1px solid #eeeeee';\n        }\n    } else if (intervalStatus === 2) {\n        if (index % 3 === 0) {\n            return '2px solid rgba(0,0,0,0.2)';\n        } else {\n            return '2px solid rgba(0,0,0,0.2)';\n        }\n    } else {\n        return '2px solid rgba(0,0,0,0.2)';\n    }\n}\n\nclass IOpage extends Component {\n    state = {\n        QDC: [],\n        PreStatus: null,\n        PreIntervalStatus: null,\n        PreCID: null,\n        PrePickerDate: null,\n        RegQDC: null,\n        CarloriesCal: []\n    }\n    getAPI(caseid, pickerdate, intervalStatus, status) {\n        if (caseid === undefined || caseid === null) {\n            return null\n        }\n        if (pickerdate === undefined || pickerdate === null) {\n            return null\n        }\n        if (intervalStatus === undefined || intervalStatus === null) {\n            return null\n        }\n        if (status === undefined || status === null) {\n            return null\n        }\n        function formatTimer(pickerdate, interstatus, status) {\n            const endTimeStamp = pickerdate + 31 * 60 * 60 * 1000\n            if (status === \"Crossection\") {\n                return {\n                    start: moment(endTimeStamp - (3 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            if (interstatus === 0) {\n                return {\n                    start: moment(endTimeStamp - (24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            if (interstatus === 1) {\n                return {\n                    start: moment(endTimeStamp - (3 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            if (interstatus === 2) {\n                return {\n                    start: moment(endTimeStamp - (7 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                    end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n                }\n            }\n            return {\n                start: moment(endTimeStamp - (14 * 24 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\"),\n                end: moment(endTimeStamp).format(\"YYYYMMDDHHmm\")\n            }\n        }\n        const xm2 = new X2JS()\n        const timer = formatTimer(pickerdate, intervalStatus, status)\n        ApiProvider.getQDC(caseid, timer.start, timer.end)\n            .then(data => {\n                const Result = xm2.xml2js(data.data).outmsg\n                if (Number(Result.ret) === 0) {\n                    const parsedata = Result.resconts.rescont\n                    if (Array.isArray(parsedata)) {\n                        this.setState({ QDC: parsedata })\n                    }\n                    else {\n                        this.setState({ QDC: [parsedata] })\n                    }\n                }\n\n            })\n            .catch(err => {\n                console.log(\"getQDC NG \" + JSON.stringify(err));\n            });\n        // this.setState({ QDC: QDCList.data.outmsg.resconts.rescont })\n        ApiGithub.getGitHubJson(\"IOReg_QDC.json\")\n            .then(data => {\n                this.setState({ RegQDC: data.data })\n            })\n            .catch(err => {\n                console.log(\"getGithubNG\" + JSON.stringify(err))\n            })\n    }\n    componentDidMount() {\n        const { Status, IntervalStatus, caseinfo, PickerDate } = this.props\n        this.setState({ PreStatus: Status, PreIntervalStatus: IntervalStatus, PreCID: caseinfo.CASEID, PrePickerDate: PickerDate })\n        this.getAPI(caseinfo.CASEID, PickerDate, IntervalStatus, Status)\n\n    }\n    componentDidUpdate() {\n        const { Status, IntervalStatus, caseinfo, PickerDate } = this.props\n        const prestatus = this.state.PreStatus\n        const preinterstatus = this.state.PreIntervalStatus\n        const precid = this.state.PreCID\n        const prepickerdate = this.state.PrePickerDate\n        if (prepickerdate !== PickerDate || caseinfo.CASEID !== precid || IntervalStatus !== preinterstatus || Status !== prestatus) {\n            console.log(Status, IntervalStatus, caseinfo, PickerDate)\n            this.setState({ PreStatus: Status, PreIntervalStatus: IntervalStatus, PreCID: caseinfo.CASEID, PrePickerDate: PickerDate })\n            this.getAPI(caseinfo.CASEID, PickerDate, IntervalStatus, Status)\n        }\n    }\n    cellRender(arr) {\n        const { Status, IntervalStatus } = this.props\n        const mapcell = arr.map(function (value, index, array) {\n            return (\n                <div key={index} style={{ border: \"1px solid #eeeeee\", borderCollapse: \"collapse\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <t2>{parseInt(value)}</t2>\n                </div>\n            );\n        })\n        if (Status === \"Crossection\") {\n            return (\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(4,1fr)\" }}>\n                    {mapcell}\n                </div>\n            );\n        }\n        else {\n            if (IntervalStatus === 0) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(24,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n            if (IntervalStatus === 1) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(18,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n            if (IntervalStatus === 2) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(21,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n            if (IntervalStatus === 3) {\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(14,1fr)\" }}>\n                        {mapcell}\n                    </div>\n                );\n            }\n        }\n    }\n    render() {\n        function pickerTimeArray(pickerdate, intervalstatus, status) {\n            const et = pickerdate + (31 * 60 * 60 * 1000)\n            var timearray = []\n            if (status === \"Crossection\") {\n                const st = pickerdate + (7 * 60 * 60 * 1000)\n                for (let index = 0; index < 3; index++) {\n                    const time = st + (index * 8 * 60 * 60 * 1000)\n                    timearray.push(time)\n                }\n            }\n            else {\n                //IntervalStatus 0:1天 1:3天 2:一週 3:兩週\n                if (intervalstatus === 0) {\n                    const st = et - (24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 24; index++) {\n                        const time = st + (index * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (intervalstatus === 1) {\n                    const st = et - (3 * 24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 18; index++) {\n                        const time = st + (index * 4 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (intervalstatus === 2) {\n                    const st = et - (7 * 24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 21; index++) {\n                        const time = st + (index * 8 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n                if (intervalstatus === 3) {\n                    const st = et - (14 * 24 * 60 * 60 * 1000)\n                    for (let index = 0; index < 14; index++) {\n                        const time = st + (index * 24 * 60 * 60 * 1000)\n                        timearray.push(time)\n                    }\n                }\n            }\n            return timearray\n        }\n\n        function starttime(status, intervalstatus, time) {\n            if (status === \"Crossection\") {\n                return time - (24 * 60 * 60 * 1000)\n            }\n            if (intervalstatus === 0) {\n                return time - (24 * 60 * 60 * 1000)\n            }\n            if (intervalstatus === 1) {\n                return time - (3 * 24 * 60 * 60 * 1000)\n            }\n            if (intervalstatus === 2) {\n                return time - (7 * 24 * 60 * 60 * 1000)\n            }\n            return time - (14 * 24 * 60 * 60 * 1000)\n\n        }\n\n        function IntervalToDataArray(startTime, status, intervalstatus, element) {\n            if (Array.isArray(element)) {\n                if (status === 'Crossection') {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (8 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                if (intervalstatus === 0) {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (1 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                if (intervalstatus === 1) {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (4 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                if (intervalstatus === 2) {\n                    const filterdata = element.filter(function (value, index, arr) {\n                        const valueTimeString = value.rec_dat + value.rec_tim\n                        const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                        const endTime = startTime + (8 * 60 * 60 * 1000)\n                        return valueTime > startTime && valueTime < endTime\n                    })\n                    return filterdata\n                }\n                const filterdata = element.filter(function (value, index, arr) {\n                    const valueTimeString = value.rec_dat + value.rec_tim\n                    const valueTime = moment(valueTimeString, 'YYYYMMDDHHmm').valueOf()\n                    const endTime = startTime + (24 * 60 * 60 * 1000)\n                    return valueTime > startTime && valueTime < endTime\n                })\n                return filterdata\n            }\n            return []\n        }\n\n        function SumforEach(arr) {\n            var sum = 0;\n            arr.forEach(function (element) {\n                sum += Number(element);\n            });\n            return sum;\n        }\n\n\n        function formatQDCtoIO(QDC) {\n            function caloriesCal(lost, value) {\n                if (lost === \"配方奶\") {\n                    return Number(value) * 0.8\n                }\n                if (lost === \"母奶\") {\n                    return Number(value) * 0.7\n                }\n                return 0\n            }\n            function caloriesCalonnam(nam, value) {\n                if (nam === null || nam === undefined || nam === \"\") {\n                    return 0\n                }\n                const namstring = nam.toString()\n                const valueNumber = Number(value)\n                if (valueNumber === null || valueNumber === undefined) { return 0 }\n                if (namstring.match(\"10%TPN\") !== null) { return valueNumber * 0.34 }\n                if (namstring.match(\"SMOFliquid\") !== null) { return valueNumber * 1.8 }\n                if (namstring.match(\"D10\") !== null) { return valueNumber * 0.34 }\n                if (namstring.match(\"D12\") !== null) { return valueNumber * 0.34 * 1.2 }\n                if (namstring.match(\"D50\") !== null) { return valueNumber * 0.34 * 5 }\n                if (namstring.match(\"taita\") !== null) { return valueNumber * 0.34 }\n                return 0\n            }\n            var FormatFeedingList = []\n            var FormatIVList = []\n            var FormatUrineList = []\n            var FormatOtherInList = []\n            var FormatOtherOutList = []\n            for (let index = 0; index < QDC.length; index++) {\n                const element = QDC[index];\n                const elementItem = element.item;\n                const time = moment(element.rec_dat.toString().trim() + element.rec_tim.toString().trim(), \"YYYYMMDDHHmm\").valueOf()\n                const nam = element.nam\n                const FeedingReg = RegQDC.Feeding\n                const filterFeedingStatus = FeedingReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterFeedingStatus) {\n                    FormatFeedingList.push({\n                        time: time,\n                        value: Number(element.inp_val2),\n                        calories: caloriesCal(element.lost, element.inp_val2),\n                        element: element\n                    })\n                }\n                const IVReg = RegQDC.IV\n                const filterIVStatus = IVReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterIVStatus) {\n                    FormatIVList.push({\n                        time: time,\n                        value: Number(element.inp_val1),\n                        calories: caloriesCalonnam(nam, element.inp_val1),\n                        element: element\n                    })\n                }\n                const UrineReg = RegQDC.Urine\n                const filterUrineStatus = UrineReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterUrineStatus) {\n                    FormatUrineList.push({\n                        time: time,\n                        value: Number(element.out_val2),\n                        calories: caloriesCalonnam(nam, element.out_val2),\n                        element: element\n                    })\n                }\n                const OtherReg = RegQDC.Other\n                const filterOtherStatus = OtherReg.some(function (info, index, arr) {\n                    return info === elementItem\n                })\n                if (filterOtherStatus) {\n                    const input_1 = Number(element.inp_val1)\n                    const output_1 = Number(element.out_val1)\n                    if (elementItem === \"排便\") {\n                        // FormatOtherInList.push({\n                        //     time: time,\n                        //     value: 1,\n                        //     calories: 0,\n                        //     element: element\n                        // })\n                        FormatOtherOutList.push({\n                            time: time,\n                            value: 1,\n                            calories: 0,\n                            element: element\n                        })\n                    }\n                    else {\n                        if (input_1 === null || input_1 === undefined) {\n                            FormatOtherOutList.push({\n                                time: time,\n                                value: Number(element.inp_val1),\n                                calories: caloriesCalonnam(nam, element.inp_val1),\n                                element: element\n                            })\n                        }\n                        if (output_1 === null || output_1 === undefined) {\n                            FormatOtherInList.push({\n                                time: time,\n                                value: Number(element.output_1),\n                                calories: 0,\n                                element: element\n                            })\n                        }\n                    }\n                }\n\n            }\n            return {\n                Feeding: FormatFeedingList,\n                IV: FormatIVList,\n                OtherIn: FormatOtherInList,\n                Urine: FormatUrineList,\n                OtherOut: FormatOtherOutList\n            }\n        }\n        function timerFormat(PickerDate, Interval, Status) {\n            const EndTime = PickerDate + (31 * 60 * 60 * 1000)\n            if (Status === 'Crossection') {\n                return {\n                    interval: 3,\n                    hourInterval: 8,\n                    startTime: EndTime - (24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            if (Interval === 0) {\n                return {\n                    interval: 24,\n                    hourInterval: 1,\n                    startTime: EndTime - (24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            if (Interval === 1) {\n                return {\n                    interval: 18,\n                    hourInterval: 4,\n                    startTime: EndTime - (3 * 24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            if (Interval === 2) {\n                return {\n                    interval: 21,\n                    hourInterval: 8,\n                    startTime: EndTime - (7 * 24 * 60 * 60 * 1000),\n                    endTime: EndTime\n                }\n            }\n            return {\n                interval: 14,\n                hourInterval: 24,\n                startTime: EndTime - (14 * 24 * 60 * 60 * 1000),\n                endTime: EndTime\n            }\n        }\n        function listTimerFormat(List, timer, status) {\n            const inter = timer.interval\n            var TimerList = []\n            for (let index = 0; index < inter; index++) {\n                const st = timer.startTime + (index * timer.hourInterval * 60 * 60 * 1000)\n                const et = timer.startTime + ((index + 1) * timer.hourInterval * 60 * 60 * 1000)\n                const filterList = List.filter(function (info, index, arr) {\n                    const time = info.time\n                    return st <= time && time < et\n                })\n                TimerList.push(filterList)\n            }\n            if (status === 'Crossection') {\n                const st = timer.startTime\n                const et = timer.endTime\n                const filterListALL = List.filter(function (info, index, arr) {\n                    const time = info.time\n                    return st <= time && time < et\n                })\n                TimerList.push(filterListALL)\n            }\n            return TimerList\n        }\n\n        function sumIn(arr1, arr2, arr3) {\n            var sumlist = []\n            for (let index = 0; index < arr1.length; index++) {\n                const element1 = arr1[index];\n                const element2 = arr2[index];\n                const element3 = arr3[index];\n                const sum = element1 + element2 + element3\n                sumlist.push(sum)\n            }\n            return sumlist\n        }\n        function sumOut(arr1, arr2) {\n            var sumlist = []\n            for (let index = 0; index < arr1.length; index++) {\n                const element1 = arr1[index];\n                const element2 = arr2[index];\n                const sum = element1 + element2\n                sumlist.push(sum)\n            }\n            return sumlist\n        }\n        function sumInAndOut(Input, Outout) {\n            var sumlist = []\n            for (let index = 0; index < Input.length; index++) {\n                const element1 = Input[index];\n                const element2 = Outout[index];\n                const sum = parseFloat(element1 - element2).toFixed(1)\n                sumlist.push(sum)\n            }\n            return sumlist\n        }\n        function gridNumber(interval, status) {\n            if (status === \"Crossection\") {\n                return 4\n            }\n            return interval\n        }\n        function cellsum(list) {\n            const CellSum = list.map(function (info, index, arr) {\n                var sum = 0\n                for (let index = 0; index < info.length; index++) {\n                    const element = info[index];\n                    sum = sum + element.value\n                }\n                return sum\n            })\n            return CellSum\n        }\n        function cellRenderSum(Status, list, rows, type, IntervalStatus) {\n            const rowColorStyle = {\n                '0': {\n                    'SE': `rgba(15, 75, 175, 0.2)`,\n                    'Other': `rgba(15, 75, 175, 0.05)`,\n                },\n                '1': {\n                    'SE': `rgba(175,75,25,0.2)`,\n                    'Other': `rgba(175,75,25,0.05)`,\n                },\n                '2': {\n                    'SE': `rgba(100,180,200,.6)`,\n                    'Other': `rgba(100,180,200,.3)`,\n                }\n            }\n\n            const CellRender = list.map(function (info, index, arr) {\n                if (info.length === 0 || info.length === undefined) {\n                    return (\n                        <div key={index} style={{\n                            borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #eeeeee\", borderCollapse: 'collapse',\n                            borderLeft: calcBorderLeft(IntervalStatus, index, Status),\n                            backgroundColor: Status !== \"Crossection\" ? \"white\" : index === 3 ? rowColorStyle[rows].SE : rowColorStyle[rows].Other\n                        }}>\n                            {Status === \"Crossection\" && <div style={{\n                                fontWeight: (Status === \"Crossection\" && index === 3) ? \"600\" : \"\",\n                                color: \"black\"\n                            }}>--</div>}\n                        </div>\n\n                    );\n                }\n                return (\n                    <div key={index} style={{\n                        borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #eeeeee\", borderCollapse: 'collapse',\n                        borderLeft: calcBorderLeft(IntervalStatus, index, Status),\n                        backgroundColor: Status !== \"Crossection\" ?\n                            (parseFloat(info) === '' ? 'white' : rowColorStyle[rows].Other) : (index === 3 ? rowColorStyle[rows].SE : rowColorStyle[rows].Other)\n                    }}>\n                        {(parseFloat(info) === '' && Status !== \"Crossection\") || <div style={{\n                            fontWeight: (Status === \"Crossection\" && index === 3) ? \"600\" : \"\",\n                            color: type === 2 && parseFloat(info) < 0 ? \"red\"\n                                :\n                                type === 2 && parseFloat(info) >= 0 ? \"blue\" : \"black\"\n                        }}>\n                            {(parseFloat(info) === '' || parseFloat(info) === 0) ? '--'\n                                :\n                                parseFloat(info) >= 0 ? `+${parseFloat(info).toFixed(1)}` : parseFloat(info).toFixed(1)}\n                        </div>}\n                    </div>\n                );\n            })\n            return (\n                <div style={{ display: 'grid', gridTemplateColumns: 'repeat( ' + gridNumber(timerStruct.interval, Status) + ' ,1fr)' }}>\n                    {CellRender}\n                </div>\n            );\n        }\n        function cellRender(Status, list, rows, IntervalStatus) {\n            const rowColorStyle = {\n                '0': {\n                    'SE': `rgba(15, 75, 175, 0.2)`,\n                    'Other': `rgba(15, 75, 175, 0.05)`,\n                },\n                '1': {\n                    'SE': `rgba(175,75,25,0.2)`,\n                    'Other': `rgba(175,75,25,0.05)`,\n                },\n            }\n            const CellRender = list.map(function (info, index, arr) {\n                var sum = 0\n                if (info.length === 0 || info.length === undefined) {\n                    return (\n                        <div key={index} style={{\n                            borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #eeeeee\", borderCollapse: 'collapse',\n                            borderLeft: calcBorderLeft(IntervalStatus, index, Status),\n                            backgroundColor: Status !== \"Crossection\" ? \"white\"\n\n                                :\n                                index === 3 ? rowColorStyle[rows].SE\n                                    :\n                                    rowColorStyle[rows].Other\n                        }}>\n                            {Status === \"Crossection\" && <div style={{\n                                fontWeight: index === 3 ? \"600\" : \"\",\n                                color: \"black\"\n                            }}>--</div>}\n                        </div>\n                    );\n                }\n                for (let index = 0; index < info.length; index++) {\n                    const element = info[index];\n                    sum = sum + element.value\n                }\n                return (\n                    <div key={index} style={{\n                        borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', justifyContent: \"center\", border: \"1px solid #eeeeee\", borderCollapse: 'collapse',\n                        borderLeft: calcBorderLeft(IntervalStatus, index, Status),\n                        backgroundColor: Status !== \"Crossection\" ?\n                            (parseFloat(sum) === '' ? 'white' : rowColorStyle[rows].Other)\n\n                            :\n                            (index === 3 ? rowColorStyle[rows].SE : rowColorStyle[rows].Other)\n                    }}>\n                        {(parseFloat(sum) === '' && Status !== \"Crossection\") || <div style={{\n                            fontWeight: (Status === \"Crossection\" && index === 3) ? \"600\" : \"\",\n                            color: \"black\"\n                        }}>\n                            {parseFloat(info) === '' ? '--'\n                                : parseFloat(sum) === 0 ? parseFloat(sum) : parseFloat(sum).toFixed(1)}\n                        </div>}\n                    </div>\n                );\n            })\n            return (\n                <div style={{ borderCollapse: \"collapse\", display: 'grid', gridTemplateColumns: 'repeat( ' + gridNumber(timerStruct.interval, Status) + ' ,1fr)' }}>\n                    {CellRender}\n                </div>\n            );\n        }\n\n\n        function formatTime(time) {\n            if (Number(time) / 1000 >= 1) {\n                return time.toString().trim()\n            }\n            return \"0\" + time.toString().trim()\n        }\n\n        function stylechange(status) {\n            const chronicstyle = \"140px 1fr\"\n            const crossectionstyle = \"1fr 4fr\"\n            if (status === \"Crossection\") {\n                return crossectionstyle\n            }\n            else return chronicstyle\n        }\n\n        function urineforWeightAndHourCrossection(Urine, weight) {\n            const datamap = Urine.map(function (info, index, arr) {\n                var sum = 0\n                for (let index = 0; index < info.length; index++) {\n                    const element = info[index];\n                    sum = sum + element.value\n                }\n                if (sum === 0) {\n                    return 0\n                }\n                if (weight === null || weight === undefined) {\n                    return \"--\"\n                }\n                return parseFloat(sum / weight / 8).toFixed(1)\n            })\n            for (let index = 0; index < Urine.length; index++) {\n                const element = Urine[index];\n\n            }\n            return datamap\n        }\n        const { Status, IntervalStatus, caseinfo, PickerDate } = this.props\n        const timeInterval = pickerTimeArray(PickerDate, IntervalStatus, Status)\n        const et = PickerDate + (31 * 60 * 60 * 1000)\n        const st = starttime(Status, IntervalStatus, et)\n        const WEIGHT = caseinfo.WEIGHT\n        const dateWeoght = WardState.selectweight(WEIGHT, PickerDate)\n        const QDCLIST = this.state.QDC\n        // const Weight = 1000\n        const RegQDC = this.state.RegQDC\n        if (RegQDC === null || RegQDC === undefined) { return null }\n        const formatData = formatQDCtoIO(QDCLIST)\n        const timerStruct = timerFormat(PickerDate, IntervalStatus, Status)\n        const feed = listTimerFormat(formatData.Feeding, timerStruct, Status)\n        const IV = listTimerFormat(formatData.IV, timerStruct, Status)\n        const OtherIn = listTimerFormat(formatData.OtherIn, timerStruct, Status)\n        const sumin = sumIn(cellsum(feed), cellsum(IV), cellsum(OtherIn))\n        const Urine = listTimerFormat(formatData.Urine, timerStruct, Status)\n        const UrinForUnit = urineforWeightAndHourCrossection(Urine, 1000)\n        const OtherOut = listTimerFormat(formatData.OtherOut, timerStruct, Status)\n        const sumout = sumOut(cellsum(Urine), cellsum(OtherOut))\n        const sumInTotal = sumInAndOut(sumin, sumout)\n        //====================================================================\n\n        // console.log(Status)\n        const urineData = ioDataFormat.UrineData(QDCLIST)\n        const urineTimer = ioDataFormat.formatTimerData(urineData, PickerDate, IntervalStatus, Status)\n        // console.log(urineTimer)\n        const cellMap = urineTimer.map(function (info, index, arr) {\n            return <IOpageCell IntervalStatus={IntervalStatus} Status={Status} key={index} index={index} data={info} weightList={WEIGHT}></IOpageCell>\n        })\n        const titleInarray = ['進食', '點滴', '其他', '總輸入']\n        const titleOutarray = ['排尿', 'ml/kg/hr', '其他', '總排出']\n        const TitleCellIn = titleInarray.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ border: \"1px solid #eeeeee\", borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', backgroundColor: \"rgba(15,75,175,0.2)\", paddingLeft: \"10px\" }}>\n                    <t2>{value}</t2>\n                </div>\n            );\n        })\n\n        const TitleCellOut = titleOutarray.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ border: \"1px solid #eeeeee\", borderCollapse: \"collapse\", display: \"flex\", alignItems: 'center', backgroundColor: \"rgba(175,75,25,0.2)\", paddingLeft: \"10px\" }}>\n                    <t2>{value}</t2>\n                </div>\n            );\n        })\n        return (\n            <div>\n                <div style={{ display: \"grid\", gridTemplateColumns: stylechange(Status) }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"32px 32px 32px 32px\" }}>\n                        {TitleCellIn}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"32px 32px 32px 32px\" }}>\n                        {cellRender(Status, feed, '0', IntervalStatus)}\n                        {cellRender(Status, IV, '0', IntervalStatus)}\n                        {cellRender(Status, OtherIn, '0', IntervalStatus)}\n                        {cellRenderSum(Status, sumin, '0', 0, IntervalStatus)}\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: stylechange(Status), marginTop: \"8px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"32px 32px 32px 32px\", borderCollapse: \"collapse\" }}>\n                        {TitleCellOut}\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateRows: \"32px 32px 32px 32px\", borderCollapse: \"collapse\" }}>\n                        {cellRender(Status, Urine, '1', IntervalStatus)}\n                        {/* 幫忙style */}\n                        <div style={{ borderCollapse: \"collapse\", display: 'grid', gridTemplateColumns: 'repeat( ' + gridNumber(timerStruct.interval, Status) + ' ,1fr)' }}>\n                            {cellMap}\n                        </div>\n                        {cellRender(Status, OtherOut, '1', IntervalStatus)}\n                        {cellRenderSum(Status, sumout, '1', 0, IntervalStatus)}\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: stylechange(Status), marginTop: \"8px\" }}>\n                    <div style={{ border: \"1px solid #eeeeee\", borderCollapse: \"collapse\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", backgroundColor: \"rgba(100,180,200,.6)\", height: \"40px\" }}>\n                        {Status === \"Crossection\" ?\n                            <t2 style={{ fontSize: \"16px\", fontWeight: \"600\" }}>IO</t2>\n                            :\n                            <t2 >IO</t2>}\n                    </div>\n                    {cellRenderSum(Status, sumInTotal, '2', 2, IntervalStatus)}\n                    {/* {totalcell} */}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default IOpage;\n","import moment from 'moment'\n\nexport function formatUringWeightTimer(weightList, pickerDate, interval) {\n    function formatStartTime(interval, endTime) {\n        if (interval === 0) {\n            return endTime - (24 * 60 * 60 * 1000)\n        }\n        if (interval === 0) {\n            return endTime - (3 * 24 * 60 * 60 * 1000)\n        }\n        if (interval === 0) {\n            return endTime - (7 * 24 * 60 * 60 * 1000)\n        }\n        return endTime - (14 * 24 * 60 * 60 * 1000)\n    }\n    const endTime = pickerDate + (31 * 60 * 60 * 1000)\n    const startTime = formatStartTime(interval, endTime)\n\n}\n\nexport function FeedData(QDC) {\n    //進食\n    if (Array.isArray(QDC)) {\n        const filter = QDC.filter(function (info, index, arr) {\n            return info.item.toString().trim() === \"進食\"\n        })\n        return filter\n    }\n    return []\n}\n\nexport function IVData(QDC) {\n    //血品&輸液 line:IV\n    if (Array.isArray(QDC)) {\n        const filter = QDC.filter(function (info, index, arr) {\n            return info.item.toString().trim() === \"血品\" || info.item.toString().trim() === \"輸液\"\n        })\n        return filter\n    }\n    return []\n}\n\nexport function UrineData(QDC) {\n    //排尿\n    if (Array.isArray(QDC)) {\n        const filter = QDC.filter(function (info, index, arr) {\n            return info.item.toString().trim() === \"排尿\"\n        })\n        return filter\n    }\n    return []\n}\n\nexport function formatTimerData(dataArray, pickerdate, interval, source) {\n    function formatStartTime(source, interval, endTime) {\n        if (source === 'Crossection') {\n            return endTime - (24 * 60 * 60 * 1000)\n        }\n        if (interval === 0) {\n            return endTime - (24 * 60 * 60 * 1000)\n        }\n        if (interval === 1) {\n            return endTime - (3 * 24 * 60 * 60 * 1000)\n        }\n        if (interval === 2) {\n            return endTime - (7 * 24 * 60 * 60 * 1000)\n        }\n        return endTime - (14 * 24 * 60 * 60 * 1000)\n    }\n    function formatInterval(source, interval) {\n        if (source === 'Crossection') { return 4 }\n        if (interval === 0) { return 24 }\n        if (interval === 1) { return 18 }\n        if (interval === 2) { return 21 }\n        return 14\n    }\n    function formatStartAndEnd(source, interval, index, StartTime) {\n        if (source === 'Crossection') {\n            return {\n                start: StartTime + (index * 8 * 60 * 60 * 1000),\n                end: StartTime + ((index + 1) * 8 * 60 * 60 * 1000)\n            }\n        }\n        if (interval === 0) {\n            return {\n                start: StartTime + (index * 60 * 60 * 1000),\n                end: StartTime + ((index + 1) * 60 * 60 * 1000)\n            }\n        }\n        if (interval === 1) {\n            return {\n                start: StartTime + (index * 4 * 60 * 60 * 1000),\n                end: StartTime + ((index + 1) * 4 * 60 * 60 * 1000)\n            }\n        }\n        if (interval === 2) {\n            return {\n                start: StartTime + (index * 8 * 60 * 60 * 1000),\n                end: StartTime + ((index + 1) * 8 * 60 * 60 * 1000)\n            }\n        }\n        return {\n            start: StartTime + (index * 24 * 60 * 60 * 1000),\n            end: StartTime + ((index + 1) * 24 * 60 * 60 * 1000)\n        }\n    }\n    function formatUrineforTimer(source, interval, urine, sortData, ST, ET) {\n        if (source === 'Crossection') {\n            return {\n                start: ST,\n                end: ET,\n                element: sortData,\n                urine: 8\n            }\n        }\n        if (interval === 0) {\n            return {\n                start: ST,\n                end: ET,\n                element: sortData,\n                urine: urine\n            }\n        }\n        if (interval === 1) {\n            return {\n                start: ST,\n                end: ET,\n                element: sortData,\n                urine: urine * 4\n            }\n\n        }\n        if (interval === 2) {\n            return {\n                start: ST,\n                end: ET,\n                element: sortData,\n                urine: 8\n            }\n        }\n        return {\n            start: ST,\n            end: ET,\n            element: sortData,\n            urine: 24\n        }\n    }\n    const EndTime = pickerdate + (31 * 60 * 60 * 1000)\n    const StartTime = formatStartTime(source, interval, EndTime)\n    var urine = 0\n    var filterData = []\n    if (Array.isArray(dataArray)) {\n        for (let index = 0; index < formatInterval(source, interval); index++) {\n            const Timer = formatStartAndEnd(source, interval, index, StartTime)\n            const ST = Timer.start\n            const ET = Timer.end\n            const SortDataArray = dataArray.filter(function (info, i, arr) {\n                const time = moment(info.rec_dat.toString().trim() + info.rec_tim.toString().trim(), \"YYYYMMDDHHmm\").valueOf()\n                if (source === 'Crossection') {\n                    if (index === 3) {\n                        return StartTime <= time && time <= EndTime\n                    }\n                }\n                return ST <= time && time <= ET\n            })\n            if (source === 'Crossection') {\n                if (index === 3) {\n                    filterData.push(formatUrineforTimer(source, interval, 8, SortDataArray, StartTime, EndTime))\n\n                }\n                else {\n                    filterData.push(formatUrineforTimer(source, interval, 8, SortDataArray, ST, ET))\n                }\n            }\n            else {\n                if (SortDataArray.length === 0) {\n                    urine = urine + 1\n                    filterData.push(formatUrineforTimer(source, interval, 0, SortDataArray, ST, ET))\n                }\n                else {\n                    urine = urine + 1\n                    filterData.push(formatUrineforTimer(source, interval, urine, SortDataArray, ST, ET))\n                    urine = 0\n                }\n            }\n        }\n    }\n    return filterData\n}\n\nexport function OtherData(QDC) {\n    //第四區不屬於排尿\n    if (Array.isArray(QDC)) {\n        const filter = QDC.filter(function (info, index, arr) {\n            return info.item.toString().trim() === \"失血\" ||\n                info.item.toString().trim() === \"滲液\" ||\n                info.item.toString().trim() === \"嘔吐\" ||\n                info.item.toString().trim() === \"引流\" ||\n                info.item.toString().trim() === \"穿刺\" ||\n                info.item.toString().trim() === \"透析\" ||\n                info.item.toString().trim() === \"沖洗\" ||\n                info.item.toString().trim() === \"排便\"\n        })\n        return filter\n    }\n    return false\n}\n\n","import React, { Component } from 'react';\nimport IOpage from '../../Module/iopage'\nimport moment from 'moment';\n\n\nclass CrossectionIo extends Component {\n    render() {\n        const { caseinfo, title, PickerDate } = this.props\n        const titlearray = ['白班', '小夜', '大夜', '全日']\n        const titlelab = titlearray.map(function (info, index) {\n            return (\n                <centerstyle key={index}>\n                    <t2 style={{ fontWeight: index === 3 ? '600' : \"\" }}>{info}</t2>\n                </centerstyle>\n            );\n        })\n        return (\n            <div style={{ border: '1px solid rgba(238, 238, 238, 1)' }}>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t1 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t1>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr\", height: \"40px\" }}>\n                    <div style={{ display: 'flex', justifyContent: \"center\", alignItems: \"center\" }}>{moment(PickerDate).format('M/DD')}</div>\n                    {titlelab}\n                </div>\n                <IOpage PickerDate={PickerDate} caseinfo={caseinfo} Status={\"Crossection\"} IntervalStatus={0}></IOpage>\n            </div>\n        );\n    }\n}\n\nexport default CrossectionIo\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport * as ApiGithub from '../../API/ApiGithub'\nimport './NonlabviewtableCell.scss'\n\nconst STATUS_REPORT = 0\n\nexport default class NonlabviewtableCell extends Component {\n    state = {\n        Result: [],\n        parser: { \"mappings\": [] },\n        summary_str: \"--\",\n        RESDISP: []\n    }\n\n    componentDidMount() {\n        //call API\n        const { caseId, hisId, month, seq, name, time, status } = this.props;\n\n        if (caseId !== undefined && hisId !== undefined && month !== undefined && seq !== undefined) {\n            ApiProvider.getStoredProcedureRESDISP(hisId.trim(), month, caseId.trim(), seq)\n                .then(result => {\n                    this.setState({\n                        RESDISP: result.data\n                    })\n\n                    let input = {\n                        item_name: name.trim(),\n                        content: \"\",\n                        sample: \"\",\n                        lab: \"\",\n                        datatime: moment(time).format(\"YYYY-MM-DD HH:mm\")\n                    }\n\n                    result.data.forEach(item => {\n                        input.content = `${input.content} \"\\n\" ${item.CONTENT}`;\n                    });\n\n                    //status 0:正式報告 只有0需要做parse\n                    if (parseInt(status) === STATUS_REPORT) {\n                        ApiGithub.getGitHubJson(\"Summary.json\")\n                            .then(data => {\n                                console.log(\"get Summary.json OK \" + JSON.stringify(data.data));\n\n                                const selected_parser = this.select_parser(input, data.data)\n                                console.log(\"selected_parser \" + JSON.stringify(selected_parser));\n                                this.setState({\n                                    parser: selected_parser\n                                })\n\n                                if (selected_parser !== undefined) {\n                                    const result_kv_pairs = this.parse(input, selected_parser)\n                                    console.log(\"result_kv_pairs \" + JSON.stringify(result_kv_pairs));\n\n                                    const summary_str = this.summerize(result_kv_pairs, selected_parser)\n                                    console.log(\"summary_str \" + JSON.stringify(summary_str));\n\n                                    this.setState({\n                                        summary_str: summary_str\n                                    })\n                                }\n                            })\n                            .catch(err => {\n                                console.log(err)\n                            })\n                    }\n                })\n                .catch(err => {\n                    console.log(\"getStoredProcedureRESDISP NG \" + JSON.stringify(err));\n                });\n        }\n    }\n\n    select_parser = (input, parsers) => {\n        return parsers.find(x =>\n            input.item_name.match(x.apply_condition.name)\n            && (!x.apply_condition.sample || input.sample.match(x.apply_condition.sample))\n            && (!x.apply_condition.lab || input.lab.match(x.apply_condition.lab))\n            && (!x.apply_condition.start_time || input.datetime >= x.apply_condition.start_time)\n            && (!x.apply_condition.end_time || input.datetime < x.apply_condition.end_time)\n        )\n    }\n\n    parse = (input, parser) => {\n        let mappings = parser.mappings\n        let content = input.content\n        let result = {}\n        mappings.forEach(mapping => {\n            const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n            const match = content.match(re)\n            result[mapping.key] = match && match[mapping.position]\n        });\n        return result;\n    }\n\n    summerize = (kv_pairs, parser) => {\n        let summary_str = parser.summary\n        for (const key in kv_pairs) {\n            let match_replacer = summary_str.match(RegExp(\"\\\\[\" + key + \"(;(.*?))?\\\\]\"))\n            let replacer = \"\"\n            if (match_replacer && match_replacer.length === 3) {\n                replacer = match_replacer[2]\n            }\n            summary_str = summary_str.replace(RegExp(\"\\\\[\" + key + \"(;.*?)?\\\\]\"), kv_pairs[key] || replacer)\n        }\n        return summary_str;\n    }\n\n    render() {\n        function statusFormat(status) {\n            if (status === 0) {\n                return \"正式報告\"\n            }\n            if (status === 1) {\n                return \"已簽收\"\n\n            }\n            if (status === 2) {\n                return \"待送檢\"\n            }\n            return status\n        }\n        //status 0:正式報告 只有0需要做parse\n        const { time, name, status, come, showModal, isSameDay } = this.props;\n        const { summary_str, RESDISP } = this.state;\n        const statusRender = statusFormat(status)\n        const canShowReport = parseInt(status) === 0\n        return (\n            <div style={{ minHeight: \"40px\", display: \"grid\", gridTemplateColumns: \"1fr 1.5fr 1fr 1fr 1fr\", overflowY: \"auto\", borderBottom:  isSameDay ? null : '#989898 1px solid' }}>\n                <t3 className='nonlabteblecell'>{moment(time).format('MM/DD HH:mm')}</t3>\n                <t3 className='nonlabteblecell' style={{ justifyContent: \"left\" }}>{name}</t3>\n                <t3 className='nonlabteblecell'>{come}</t3>\n                <t3 className='nonlabteblecell'>{statusRender}</t3>\n                {canShowReport && <t3 className='nonlabteblecell' onClick={() => showModal(RESDISP)} style={{ color: \"blue\", textDecoration: \"underline\", cursor: \"pointer\" }}>{summary_str}</t3>}\n                {!canShowReport && <t3 className='nonlabteblecell'>{summary_str}</t3>}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nclass ExamReportModal extends Component {\n    render() {\n        const reportDetail = this.props.report\n        const showDetail = reportDetail.map((data, index) => {\n            return data.CONTENT !== \"\" ? <div key={ \"ExamReportModal\" + index } style={{ whiteSpace: \"pre-wrap\" }}>{data.CONTENT}</div> : \"\"\n        })\n        return (\n            <div>{showDetail}</div>\n        );\n    }\n}\n\nexport default ExamReportModal\n","import React, { Component } from 'react';\nimport './Nonlabviewtable.scss'\nimport NonlabviewtableCell from './NonlabviewtableCell'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider'\nimport { Modal } from 'antd';\nimport InsReportModal from '../ExamReportModal'\nimport * as ORDERLIST from '../../Resource/ORDERLIST'\n\nclass Nonlabviewtable extends Component {\n    state = {\n        visible: false,\n\n        modalVisible: false,\n        modalReport: \"\",\n        ORDLIST: [],\n        RESSECT: [],\n\n        preDate: null\n    }\n    componentDidMount() {\n        const start = this.props.PickerDateRange[0]\n        this.setState({ preDate: start })\n        this.nonLabApiGet()\n    }\n    componentDidUpdate() {\n        const start = this.props.PickerDateRange[0]\n        const { preDate } = this.state\n        if (start !== preDate) {\n            this.setState({ preDate: start })\n            this.nonLabApiGet()\n        }\n    }\n    nonLabApiGet() {\n        function selectMonthInterval(storeProcedureTime) {\n            const timestampInterval = moment() - moment(storeProcedureTime, \"YYYY-MM-DD\").valueOf()\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        // ApiProvider.getStoredProcedureRESSECT(caseinfo.HISID, MonthInterval, \"ALL\", \"DOC3924B\")\n        //     .then(data => { this.setState({ RESSECT: data.data }) })\n        //     .catch(err => { console.log(\"getStoredProcedureRESSECT NG \" + JSON.stringify(err)) });\n        const { caseinfo, PickerDateRange } = this.props\n        const storeProcedureTime = moment(PickerDateRange[0]).format(\"YYYY-MM-DD\")\n        const MonthInterval = selectMonthInterval(storeProcedureTime)\n        ApiProvider.getStoredProcedureORDLIST(caseinfo.HISID, storeProcedureTime, \"ALL\", \"DOC3924B\")\n            .then(data => { this.setState({ ORDLIST: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureORDLIST NG \" + JSON.stringify(err)) });\n        // this.setState({ ORDLIST: ORDERLIST.data })\n    }\n    showModal = (report) => {\n        this.setState({\n            modalVisible: true,\n            modalReport: report\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n    render() {\n        function ORDLISTFormat(ORDLIST, PickerDateRange) {\n            console.log(PickerDateRange)\n            var ORDLIST_Format = []\n            if (Array.isArray(ORDLIST)) {\n                for (let index = 0; index < ORDLIST.length; index++) {\n                    const element = ORDLIST[index];\n                    const elemetnStatus = Number(element.ORSTATUS)\n                    const elementORBGNTime = moment(element.ORBGNDT.toString().trim() + element.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n                    if (PickerDateRange[0] <= elementORBGNTime && elementORBGNTime <= PickerDateRange[1]) {\n                        if (elemetnStatus === 64) {\n                            //正式報告\n                            ORDLIST_Format.push({\n                                time: elementORBGNTime,\n                                status: 0,\n                                element: element\n                            })\n                        }\n                        else if (elemetnStatus === 38) {\n                            //已簽收 \n                            ORDLIST_Format.push({\n                                time: elementORBGNTime,\n                                status: 1,\n                                element: element\n                            })\n                        }\n                        else if (elemetnStatus === 31) {\n                            //待送檢\n                            ORDLIST_Format.push({\n                                time: elementORBGNTime,\n                                status: 2,\n                                element: element\n                            })\n                        }\n                        else if (elemetnStatus === 82 || elemetnStatus === 60 || elemetnStatus === 61) {\n                            //已取消 不顯示\n                            continue\n                        }\n                        else {\n                            //Other\n                            ORDLIST_Format.push({\n                                time: elementORBGNTime,\n                                status: elemetnStatus,\n                                element: element\n                            })\n                        }\n                    }\n                }\n            }\n            return ORDLIST_Format\n        }\n        const { modalVisible, modalReport, ORDLIST } = this.state\n        const { PickerDateRange } = this.props\n        let FormatList = ORDLISTFormat(ORDLIST, PickerDateRange)\n        const showModal = this.showModal\n        const handleOk = this.handleOk\n        const handleCancel = this.handleCancel\n\n        if (FormatList.length > 1) {\n            FormatList = FormatList.sort((a, b) => {\n                return a.time < b.time ? 1 : -1\n            })\n        }\n\n        const nonlabcell = FormatList.map(function (value, index, array) {\n            const come = value.element.ORSPCN1;\n            const time = value.time\n            const name = value.element.ORPROCED;\n            const status = value.status;\n            let isSameDay = false;\n            if (index < FormatList.length - 1) {\n                isSameDay = moment(value.time).isSame(moment(FormatList[index + 1].time), 'day');\n            }\n            if (index === FormatList.length - 1) {\n                isSameDay = true;\n            }\n\n            return (\n                <NonlabviewtableCell key={\"Nonlabviewtable\" + index} come={come} time={time} name={name} status={status} hisId={value.element.ORHISTNO} caseId={value.element.ORDSEQCN} month={value.element.ORMM} seq={value.element.ORDSEQNO} showModal={showModal} isSameDay={isSameDay}></NonlabviewtableCell>\n            );\n        })\n        const title = [\"時間\", \"檢驗項目\", \"檢體\", \"狀態\", \"報告\"]\n        const titlecell = title.map(function (value, index, arr) {\n            const tempStyle = index == 1\n            return (\n                <t3 className='nonlabtebletitlecell' style={{ justifyContent: \"center\" }}>{value}</t3>\n            );\n        })\n\n\n        return (\n            <div>\n                <div style={{ height: \"30px\", backgroundColor: \"rgba(226, 237, 243,.5)\", display: \"grid\", gridTemplateColumns: \"1fr 1.5fr 1fr 1fr 1fr\" }}>\n                    {titlecell}\n                </div>\n                <div style={{ border: \"1px solid rgba(232, 232, 232, 1)\", borderRadius: \"0 0 4px 4px\", borderCollapse: \"collapse\" }}>\n                    <div className='nonlabviewtable'>\n                        {JSON.stringify(FormatList) !== '[]' ?\n                            nonlabcell\n                            :\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1.5fr 1fr 1fr 1fr\" }}>\n                                <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                    無資料\n                                </div>\n                            </div>}\n                    </div>\n                    <Modal\n                        title={\"檢驗結果\"}\n                        visible={modalVisible}\n                        onOk={handleOk}\n                        onCancel={handleCancel}\n                        width={1000}\n                        footer={null}>\n                        <InsReportModal report={modalReport}></InsReportModal>\n                    </Modal>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Nonlabviewtable\n","import React, { Component } from 'react';\nimport Nonlabviewtable from './Nonlabviewtable'\n \n\nclass Nonlabviewlayout extends Component {\n    render() {\n        // const { PickerDate } = this.props\n        // const { modalVisible, modalReport } = this.state\n        // const showModal = this.showModal\n        // const handleOk = this.handleOk\n        // const handleCancel = this.handleCancel\n        return (\n            <div style={{ marginBottom: \"10px\" }}> \n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t1 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>近三日報告清單</t1>\n                </div>\n                <Nonlabviewtable caseinfo={this.props.caseinfo} PickerDateRange={this.props.PickerDateRange}></Nonlabviewtable>\n            </div>\n        );\n    }\n}\n\nexport default Nonlabviewlayout\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider'\n\nclass RTtable extends Component {\n    state = {\n        RESDBGAS: [],\n        PreHID: null,\n        PreTransInDate: null,\n    }\n    componentDidMount() {\n        const HID = this.props.caseinfo.HISID\n        const TRDT = this.props.caseinfo.TRANSINDT\n        this.setState({ PreHID: HID, PreTransInDate: TRDT })\n        this.getGasAPI()\n    }\n    componentDidUpdate() {\n        const HID = this.props.caseinfo.HISID\n        const TRDT = this.props.caseinfo.TRANSINDT\n        const PreHID = this.state.PreHID\n        const PreTRDT = this.state.PreTransInDate\n        if (HID !== PreHID || TRDT !== PreTRDT) {\n            this.setState({ PreHID: HID, PreTransInDate: TRDT })\n            this.getGasAPI()\n        }\n    }\n    getGasAPI() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID\n        const TransInDate = moment(caseinfo.TRANSINDT, \"YYYYMMDD\").format(\"YYYY-MM-DD\")\n        ApiProvider.getStoredProcedureRESDBGAS(HID, TransInDate)\n            .then(data => { this.setState({ RESDBGAS: data.data }) })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDBGAS NG \" + JSON.stringify(err));\n            });\n    }\n    GasListToCell = () => {\n\n        function formatGasData(GasDataList, st, et) {\n            let filterTimer = GasDataList.filter(function (element, index, arr) {\n                const timeStamp = moment(element.ORRESDT.toString().trim() + element.ORRESTM.toString().trim(), 'YYYY-MM-DDHH.mm.ss').valueOf()\n                return st <= timeStamp && timeStamp <= et\n            })\n\n            if (Object.keys(filterTimer).length > 1) {\n                filterTimer = filterTimer.sort((a, b) => {\n                    let tempTimeA = moment(a.ORRESDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n                    let tempTimeB = moment(b.ORRESDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n                    return tempTimeA < tempTimeB ? 1 : -1\n                })\n            }\n\n            const decideStyle = {\n                \"1\": { \"min\": 6.5, \"max\": 7.7 },\n                \"2\": { \"min\": 0, \"max\": 100 },\n                \"3\": { \"min\": 0, \"max\": 200 },\n                \"4\": { \"min\": 0, \"max\": 40 },\n                \"5\": { \"min\": -30, \"max\": 20 },\n                \"6\": { \"min\": 0, \"max\": 100 },\n                \"7\": { \"min\": 0, \"max\": 100 }\n            }\n                        \n            const cellMap = filterTimer.map(function (element, index, arr) {\n                const PHValue = element.SS07\n                const PCO2Value = element.SS06\n                const PO2Value = element.SS08\n                const HCO3Value = element.SS04\n                const BEValue = element.SS01\n                const O2SatValue = element.SS05\n                const FiO2Value = element.SS03\n                const timeStamp = moment(element.ORRESDT.toString().trim() + element.ORRESTM.toString().trim(), 'YYYY-MM-DDHH.mm.ss').valueOf()\n                const time = moment(timeStamp).format(\"MM/DD HH:mm\")\n                const reportSample = 'link'\n                const gasDataArray = [time, PHValue, PCO2Value, PO2Value, HCO3Value, BEValue, O2SatValue, FiO2Value, reportSample]\n                let isSameDay = false;\n                if (index < filterTimer.length - 1) {\n                    const day = moment(timeStamp).format('YYYY/MM/DD');\n                    const compareDay = moment(filterTimer[index + 1].ORRESDT.toString().trim() + filterTimer[index + 1].ORRESTM.toString().trim(), 'YYYY-MM-DDHH.mm.ss').format('YYYY/MM/DD')\n                    isSameDay = moment(day).isSame(compareDay, 'day');\n\n                }\n                if (index === filterTimer.length - 1) {\n                    isSameDay = true;\n                }\n\n                const GasCell = gasDataArray.map(function (value, index, array) {\n                    let tempStyle = false\n                    const tempValue = parseFloat(value)\n                    // console.log(index.toString())\n                    if (index != 0 && index != 8 && (tempValue > decideStyle[index.toString()].max || tempValue < decideStyle[index.toString()].min) || isNaN(tempValue) == true) {\n                        tempStyle = true;\n                    }\n                    return (\n                        <centerstyle key={index} style={{ border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\"}}>\n                            <t2 style={{ color: tempStyle ? \"red\" : \"black\", fontWeight: 600 }}>{value}</t2>\n                        </centerstyle>\n                    );\n                })           \n                \n                return (\n                    <div key={index} style={{ height: \"40px\", display: \"grid\", gridTemplateColumns: \"110px repeat(8,1fr)\", borderBottom: isSameDay ? null : '#989898 1px solid' }}>{GasCell}</div>\n                );\n            })\n            return cellMap\n\n        }\n        const { Timer } = this.props\n        const startTime = Timer[0]\n        const endTime = Timer[1]\n        const GasData = this.state.RESDBGAS\n        const CellRander = formatGasData(GasData, startTime, endTime)\n\n        return CellRander\n    }\n\n    render() {\n        const { searchbar } = this.props\n        const GasTitleList = ['時間', 'pH', `PCO2`, 'PO2', 'HCO3', 'BE', 'O2SAT', 'FiO2', '報告']\n        const GasTitleCell = GasTitleList.map(function (value, index, array) {\n            function formatString(value) {\n                // console.log(value)\n                if (value === \"O2SAT\") {\n                    return <div style={{ fontSize: \"14px\" }}>O<sub>2</sub>SaT</div>\n                }\n                if (value === \"PCO2\") {\n                    return <div style={{ fontSize: \"14px\" }}>PCO<sub>2</sub></div>\n                }\n                if (value === \"PO2\") {\n                    return <div style={{ fontSize: \"14px\" }}>PO<sub>2</sub></div>\n                }\n                if (value === \"HCO3\") {\n                    return <div style={{ fontSize: \"14px\" }}>HCO<sub>2</sub></div>\n                }\n                if (value === \"FiO2\") {\n                    return <div style={{ fontSize: \"14px\" }}>FiO<sub>2</sub></div>\n                }\n                return value\n            }\n            return (\n                <centerstyle key={index} style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", borderCollapse: \"collapse\" }}>\n                    <div style={{ fontSize: \"14px\" }}>{formatString(value)}</div>\n                </centerstyle>\n            );\n        })\n        const GasListToCell = this.GasListToCell()\n\n        return (\n            <div>\n                <div style={{ justifyItems: \"center\", height: \"30px\", backgroundColor: \"rgba(226, 237, 243,.5)\", display: \"grid\", gridTemplateColumns: \"110px repeat(8,1fr)\" }}>\n                    {GasTitleCell}\n                </div>\n                <div style={{ border: \"1px solid rgba(232, 232, 232, 1)\", borderRadius: \"0 0 4px 4px\", borderCollapse: \"collapse\" }}>\n                    <div style={{ minHeight: searchbar ? \"calc(100vh - 305px)\" : \"120px\", maxHeight: searchbar ? \"calc(100vh - 305px)\" : \"400px\", overflowY: \"auto\" }}>\n                        {GasListToCell.length !== 0 ?\n                            GasListToCell\n                            :\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"110px repeat(8,1fr)\" }}>\n                                <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                    無資料\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTtable\n","import React, { Component } from 'react';\nimport RTtable from './RTtable'\nclass GAS extends Component {\n\n\n    render() {\n        const { caseinfo, PickerDateRange, searchbar } = this.props\n\n        return (\n            <div >\n                <div style={{ backgroundColor: \"#71b0e46e\", borderRadius: \"4px 4px 0 0\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>\n                        {searchbar ? \"GAS累積報告\" : \"近三日血液氣體分析\"}\n                    </t2>\n                </div>\n                <RTtable Timer={PickerDateRange} caseinfo={caseinfo} searchbar={searchbar}></RTtable>\n            </div>\n        );\n    }\n}\n\nexport default GAS\n","import React, { Component } from 'react';\nimport { Modal, Input, Button } from 'antd';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nexport default class RemarkModal extends Component {\n    state = {\n        preremark: null,\n        preeditor: null,\n    }\n\n    componentDidMount() {\n        this.onInputChange = this.onInputChange.bind(this);\n        this.onOkClick = this.onOkClick.bind(this);\n        const remark = this.props.remarkValue.remark\n        console.log(this.props.remarkValue.remark)\n        this.setState({ preremark: remark })\n\n    }\n\n    componentDidUpdate() {\n        const remark = this.props.remarkValue.remark\n        const { preremark } = this.state\n        console.log(preremark)\n        if (preremark === null || preremark === \"\") {\n            if (preremark !== remark) {\n                this.setState({ preremark: remark })\n            }\n        }\n\n    }\n    onInputChange(event) {\n        // const preString = this.state.preremark + event.target.value\n        console.log(event.target.value)\n        this.setState({ preremark: event.target.value })\n    }\n\n    onOkClick(event) {\n        const { transinId, type, remarkId } = this.props.remarkValue\n        const { preremark, preeditor, } = this.state;\n        let fixTime = moment().format('YYYY-MM-DD[T]HH:mm:ss');\n        // console.log(name, remark, remarkId, fixTime, transinId, type, editor)\n        const name = \"breathSetting\"\n\n        let tempRemark = ''\n\n        if (event.target.value == '1') {\n            tempRemark = preremark\n        } else {\n            tempRemark = ''\n            this.setState({ preremark: null })\n        }\n\n        ApiProvider.createRemark(name, tempRemark, remarkId, fixTime, transinId, type, preeditor)\n            .then(result => {\n                console.log(\"createRemark OK \" + JSON.stringify(result));\n                this.props.onOk(tempRemark);\n            })\n            .catch(err => {\n                console.log(\"createRemark NG \" + JSON.stringify(err));\n            });\n    }\n\n    render() {\n        const { TextArea } = Input;\n        const { createTime, name } = this.props.remarkValue;\n        const onCancel = this.props.onCancel;\n        const onOk = this.onOkClick.bind(this);\n        console.log(this.state.preremark)\n        return (\n            <Modal\n                title=\"註記功能\"\n                visible={this.props.visible}\n                onCancel={onCancel}\n                okText=\"儲存\"\n                cancelText=\"取消\"\n                footer={[\n                    <Button style={{ float: 'left' }} onClick={onOk} value=\"0\">刪除</Button>,\n                    <Button onClick={onCancel}>取消</Button>,\n                    <Button type=\"primary\" onClick={onOk} value=\"1\">儲存</Button>\n                ]}\n            >\n                <div style={{ display: \"grid\", gridTemplateRows: \"30px 30px 30px 30px\" }}>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div>開立時間: {createTime}</div>\n                        <div>上次編輯時間: </div>\n                        {/* <div>上次編輯時間: {this.state.editTime}</div> */}\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div>處理名稱: {name}</div>\n                        <div>上次編輯者: {this.state.editor}</div>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <div>頻次:</div>\n                        <div>開立醫師: {this.state.editor}</div>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>註記內容:</div>\n                    <TextArea rows={5} placeholder=\"請輸入備註內容\" value={this.state.preremark} onChange={this.onInputChange} />\n                </div>\n            </Modal>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './RTbreathtablecell.scss'\n// import * as FiliterReg from '../../Function/FiliterReg'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass RTbreathetablecell extends Component { \n    state = {\n        onCell: false,\n        onEdit: false,\n        remark: '',\n        powerLogin: 0\n    }\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n    Mouse_move() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onCell: true\n                }\n            )\n        }\n    }\n\n    Mouse_leave() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onCell: false\n                }\n            )\n        }\n    }\n\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = newRemarkValue => {\n        console.log(newRemarkValue)\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            onEdit: false,\n        });\n    }\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    seachRemark = () => {\n        const { caseinfo, value } = this.props\n        const id = `Breath${moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").valueOf()}`\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, id, \"RTbreath\").then(result => {\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    render() {\n        const { value, caseinfo, isSameDay } = this.props\n        const id = `Breath${moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").valueOf()}`\n        const time = moment(value.Date.toString() + value.Time.toString(), \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\")\n        const mode = value.Mode.toString().trim()\n        const setting = value.Setting\n\n        console.log(setting)\n\n        const remarkValue = {\n            \"createTime\": time,\n            \"name\": setting,\n            \"remarkId\": id,\n            \"remark\": this.state.remark,\n            \"transinId\": caseinfo.TRANSINID,\n            \"type\": \"RTbreath\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <div onMouseMove={() => this.Mouse_move()} onMouseLeave={() => this.Mouse_leave()} className=\"RTtablecell\" style={{ minheight: this.state.remark === '' ? '40px' : '60px', borderBottom:  isSameDay ? \"rgba(238, 238, 238, 1) 1px solid\" : '#989898 1px solid'  }}>\n                <t3 className='RTBreathDateCell' style={{ minheight: this.state.remark === '' ? '40px' : '60px' }}>{time}</t3>\n                <div style={{ display: \"grid\", gridTemplateRows: [this.state.remark === null || this.state.remark === undefined || this.state.remark === '' ? \"1fr\" : \"1fr 20px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 3fr\" }}>\n                        <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", borderCollapse: \"collapse\", borderLeft: \"rgba(238, 238, 238, 1) 1px solid\" }}>\n                            <t2 style={{ fontWeight: 600, color: 'black' }}>\n                                {mode}\n                            </t2>\n                        </div>\n                        <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", borderCollapse: \"collapse\", borderLeft: \"rgba(238, 238, 238, 1) 1px solid\" }}>\n                            <t2 style={{ fontWeight: 600, color: 'black' }}>\n                                {setting}\n                            </t2>\n                        </div>\n                    </div>\n                    <t3 style={{ fontWeight: 600, alignItems: \"center\", borderCollapse: \"collapse\", color: \"rgb(0,120,0)\", overflow: \"hidden\", height: \"20px\", display: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"none\" : \"\"], borderLeft: \"rgba(238, 238, 238, 1) 1px solid\", borderTop: \"rgba(238, 238, 238, 1) 1px solid\" }}>{this.state.remark}</t3>\n                    <div style={this.state.onCell ?\n                        { display: this.state.powerLogin == 1 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", right: 0, height: this.state.remark === '' ? \"100%\" : \"100%\", background: \"transparent\", width: \"77px\" }\n                        :\n                        { display: \"none\" }}>\n                        <div onClick={() => this.Edit_state()} style={{ width: this.state.remark === '' ? '30px' : '40px', height: this.state.remark === '' ? '30px' : '40px', borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }}>\n                            <img src={chooseedit} alt='chooseedit'></img>\n                        </div>\n                    </div>\n                </div>\n                <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            </div>\n        );\n    }\n}\n\nexport default RTbreathetablecell\n","import React, { Component } from 'react';\nimport RTbreathetablecell from './RTbreathtablecell'\nimport moment from 'moment';\n// import * as FilterReg from '../../Function/FiliterReg'\n// import moment from 'moment'\n\nclass RTbreathetable extends Component {\n    createRTbreathetable = () => {\n        const { DataList, caseinfo, searchbar } = this.props\n\n        // const DataList = [\n        //     {Mode: \"OETT+PC\", Setting: \"30/20/24/5\",Date: \"20200304\", Time: 2000},\n        //     {Mode: \"OETT+PC\", Setting: \"30/20/24/5\",Date: \"20200304\", Time: 1709},\n        //     {Mode: \"OETT+PC\", Setting: \"30/20/24/5\",Date: \"20200304\", Time: 1500},\n        //     {Mode: \"OETT+PC\", Setting: \"30/20/24/5\",Date: \"20200304\", Time: 1400},\n        //      {Mode: \"OETT+SIMV+PS\", Setting: \"30/20/24/5\", Date: \"20200304\", Time: 1233},\n        //     {Mode: \"OETT+SIMV+PS\", Setting: \"30/20/24/5\", Date: \"20200305\", Time: 1017},\n        //      {Mode: \"OETT+PC\", Setting: \"30/20/24/5\", Date: \"20200305\", Time: \"0700\"},\n        // ]       \n        const RTbreathetable = DataList.map(\n            (value, index, array) => {\n                let isSameDay = false;\n                if (index < DataList.length - 1) {\n                    isSameDay = moment(value.Date, \"YYYYMMDD\").isSame(moment(DataList[index + 1].Date, \"YYYYMMDD\"), 'day');\n                }\n                if (index === DataList.length - 1) {\n                    isSameDay = true;\n                }\n                return <RTbreathetablecell key={index} value={value} caseinfo={caseinfo} searchbar={searchbar} isSameDay={isSameDay}></RTbreathetablecell>\n            }\n        )\n\n        return DataList.length !== 0 ? RTbreathetable :\n            <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr 3fr\" }}>\n                <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                    無資料\n                </div>\n            </div>\n    }\n\n    render() {\n        const title = [\"時間\", \"模式\", \"設定\"]\n        const { searchbar } = this.props\n        const titleCellRender = title.map(function (element, index, arr) {\n            return (\n                <div key={index} style={{ display: \"flex\", alignItems: \"center\", borderCollapse: \"collapse\", justifyContent: \"center\" }}>\n                    <div style={{ fontSize: \"14px\" }}>{element}</div>\n                </div>\n            );\n        })\n\n        return (\n            <div>\n                <div style={{ height: \"30px\", display: \"grid\", gridTemplateColumns: \"90px 1fr 3fr\", backgroundColor: \"rgba(226, 237, 243,.5)\", justifyItems: \"center\" }}>\n                    {titleCellRender}\n                </div>\n                <div style={{ border: \"1px solid rgba(232, 232, 232, 1)\", borderRadius: \"0 0 4px 4px\", borderCollapse: \"collapse\" }}>\n                    <div style={{ minHeight: searchbar ? \"calc(100vh - 305px)\" : \"120px\", maxHeight: searchbar ? \"calc(100vh - 305px)\" : \"400px\", overflow: \"auto\" }}>\n                        {this.createRTbreathetable()}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTbreathetable\n","import React, { Component } from 'react';\nimport RTbreathetable from './RTbreathetable'\n// import { DatePicker } from 'antd';\nimport * as FilterReg from '../../Function/FiliterReg'\nimport X2JS from 'x2js';\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as QSPEList from '../../Resource/QSPE'\n\nclass RTbreathe extends Component {\n    state = {\n        preCID: null,\n        QSPE: []\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDateRange } = this.props\n        this.setState({ preCID: caseinfo.CASEID, preST: PickerDateRange[0], preET: PickerDateRange[1] })\n        this.getQSPEApi(caseinfo.CASEID, PickerDateRange[0], PickerDateRange[1])\n\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDateRange } = this.props\n        const { preCID, preST, preET } = this.state\n        const CID = caseinfo.CASEID\n        const ST = PickerDateRange[0]\n        const ET = PickerDateRange[1]\n        if (CID !== preCID || ST !== preST || ET !== preET) {\n            this.setState({ preCID: caseinfo.CASEID, preST: PickerDateRange[0], preET: PickerDateRange[1] })\n            this.getQSPEApi(caseinfo.CASEID, PickerDateRange[0], PickerDateRange[1])\n        }\n    }\n    getQSPEApi(CID, st, et) {\n        const xm2 = new X2JS()\n        const start = moment(st).format(\"YYYYMMDDHHmm\")\n        const end = moment(et).format(\"YYYYMMDDHHmm\")\n        ApiProvider.getQSPE(CID, start, end)\n            .then(data => {\n                console.log(xm2.xml2js(data.data).outmsg.resconts.rescont)\n                const result = xm2.xml2js(data.data).outmsg\n                if (Number(result.ret) === 0) {\n                    const resultData = result.resconts.rescont\n                    if (Array.isArray(resultData)) {\n                        this.setState({ QSPE: resultData })\n                    }\n                    else {\n                        this.setState({ QSPE: [resultData] })\n                    }\n                }\n                return []\n            })\n            .catch(err => {\n                console.log(\"getQSPE NG \" + JSON.stringify(err))\n            });\n        // this.setState({ QSPE: QSPEList.data })\n    }\n\n    createRTbreathetable = () => {\n        const { caseinfo, PickerDateRange, searchbar } = this.props\n        const { QSPE } = this.state\n        let DataList = FilterReg.QSPERegList(QSPE)\n\n        //這邊不用再分時間\n        DataList = DataList.filter(data => {\n            let time = moment(data.Date + data.Time, \"YYYYMMDDHHmm\").valueOf()\n            return PickerDateRange[0] <= time && time <= PickerDateRange[1]\n        })\n\n        if (Object.keys(DataList).length > 1) {\n            DataList = DataList.sort((a, b) => {\n                let tempTimeA = moment(a.Date + a.Time, \"YYYYMMDDHHmm\").valueOf()\n                let tempTimeB = moment(b.Date + b.Time, \"YYYYMMDDHHmm\").valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n        }\n\n        return <RTbreathetable DataList={DataList} caseinfo={caseinfo} searchbar={searchbar}></RTbreathetable>\n    }\n\n    render() {\n        const { searchbar } = this.props\n        return (\n            <div >\n                <div style={{ backgroundColor: \"#71b0e46e\", borderRadius: \"4px 4px 0 0\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>\n                        {searchbar ? \"呼吸器設定紀錄\" : \"近三日呼吸器設定\"}\n                    </t2>\n                </div>\n                {this.createRTbreathetable()}\n            </div>\n        );\n    }\n}\n\nexport default RTbreathe\n","import React, { Component } from 'react';\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Prescriptionordertablecell.scss'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Prescriptionordertablecell extends Component {\n    state = {\n        onEdit: false,\n        onMove: false,\n        remark: '',\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { caseinfo, value } = this.props\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, value.UDORDSEQ, \"prescription\").then(result => {\n            console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    on_Mouse() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: true\n                }\n            )\n        }\n    }\n    on_leave() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: false\n                }\n            )\n        }\n    }\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = newRemarkValue => {\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    checkStatus = () => {\n        const { value } = this.props\n        const valueStatus = Number(value.UDSTATUS)\n        if (valueStatus === 80) {\n            return \"已取消\"\n        }\n        if (valueStatus === 30) {\n            return \"生效中\"\n        }\n        if (valueStatus === 60) {\n            return \"已完成\"\n        }\n        return valueStatus\n    }\n\n    render() {\n        const { caseinfo, value } = this.props\n        const Name = value.UDGNAME.toString()\n        const PName = value.UDRPNAME.toString()\n        const Unit = value.UDDOSAGE.toString() + \"/\" + value.UDDUNIT.toString() + \"/\" + value.UDFREQN.toString() + \"/\" + value.UDROUTE.toString()\n        const ST = moment(value.UDBGNDT, \"YYYY-MM-DD-HH:mm:ss.000000\").format('MM/DD HH:mm')\n        const ET = moment(value.UDENDDT, \"YYYY-MM-DD-HH:mm:ss.000000\").format('MM/DD HH:mm')\n        const Status = this.checkStatus()\n\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": PName,\n            \"remarkId\": value.UDORDSEQ,\n            \"remark\": this.state.remark,\n            \"transinId\": caseinfo.TRANSINID,\n            \"type\": \"prescription\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <div onMouseMove={() => this.on_Mouse()} onMouseLeave={() => this.on_leave()} className='prescriptiontablecell' style={{ minheight: this.state.remark === '' ? '40px' : '60px', borderTop: '#989898 1px solid', borderBottom: \"#989898 1px solid\", borderCollapse: \"collapse\" }}>\n                <t3 className='prescriptiontablecellcontexttext' style={{ minheight: this.state.remark === '' ? '40px' : '1fr' }}>{ST} - {ET}</t3>\n                <div style={{ display: \"grid\", gridTemplateRows: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"1fr\" : \"1fr 20px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 140px 70px\", minHeight: \"40px\" }}>\n                        <div className='prescriptiontablecellcontext'>\n                            <t2 className='prescriptiontablecellcontexttext' style={{ color: \"black\", fontWeight: 600 }}>{Name}</t2>\n                        </div>\n                        <div className='prescriptiontablecellcontext'>\n                            <t3 className='prescriptiontablecellcontexttext'>{Unit}</t3>\n                        </div>\n                        <div className='prescriptiontablecellcontext'>\n                            <t3 className='prescriptiontablecellcontexttext'>{Status}</t3>\n                        </div>\n                    </div>\n                    <t3 style={{ fontWeight: 600, alignItems: \"center\", borderTop: \"rgba(238,238,238,1) 1px solid\", borderLeft: \"rgba(238,238,238,1) 1px solid\", borderCollapse: \"collapse\", padding: \"0px 5px\", color: \"rgb(0,120,0)\", overflow: \"hidden\", height: \"20px\", display: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"none\" : \"\"] }}>{this.state.remark}</t3>\n                    <div style={this.state.onMove ?\n                        { display: this.state.powerLogin == 1 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", right: 0, height: [this.state.remark === undefined || this.state.remark === \"\" ? \"40px\" : \"60px\"], background: \"transparent\", width: \"77px\" }\n                        :\n                        { display: \"none\" }}>\n                        <div onClick={() => this.Edit_state()} style={{ width: this.state.remark === '' ? '30px' : '40px', height: this.state.remark === '' ? '30px' : '40px', borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }}>\n                            <img src={chooseedit} alt='chooseedit'></img>\n                        </div>\n                    </div>\n                </div>\n                <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            </div>\n        );\n    }\n}\n\nexport default Prescriptionordertablecell\n","import React, { Component } from 'react';\nimport Prescriptionordertablecell from './Prescriptionordertablecell'\nimport './Prescriptionordertable.scss'\n\n\nclass Prescriptionordertable extends Component {\n    render() {\n        const { UDORDER0, caseinfo, SelectMode, searchbar } = this.props\n\n        const title = [\"時間起迄\", \"學名\", \"用法\", \"狀態\"]\n        const titlecell = title.map(function (value, index, arr) {\n            return (\n                <t3 className='title'>{value}</t3>\n            );\n        })\n        const Prescriptionordertabletable = UDORDER0.map(\n            (value, index, array) =>\n                <Prescriptionordertablecell caseinfo={caseinfo} key={index} value={value} SelectMode={SelectMode}></Prescriptionordertablecell>\n        )\n        return (\n            <div>\n                <div className='Prescriptionordertablelayout'>\n                    {titlecell}\n                </div>\n                <div style={{ border: \"1px solid rgba(232, 232, 232, 1)\", borderRadius: \"0 0 4px 4px\", borderCollapse: \"collapse\" }}>\n                    <div style={{ minHeight: searchbar ? \"calc(100vh - 300px)\" : \"120px\", maxHeight: searchbar ? \"calc(100vh - 300px)\" : \"400px\", overflowY: \"auto\" }}>\n                        {JSON.stringify(UDORDER0) !== '[]' ?\n                            Prescriptionordertabletable\n                            :\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"180px 1fr 140px 70px\" }}>\n                                <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                    {searchbar ? \"無資料\" : \"當日無資料\"}\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Prescriptionordertable\n","import React, { Component } from 'react';\nimport Prescriptionordertable from './Prescriptionordertable'\nimport { Select, Input } from 'antd';\nimport moment from 'moment'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as UDORDER from '../../Resource/UDORDER0'\n\nclass Prescriptionorderlayout extends Component {\n    state = {\n        classParser: { \"mappings\": [] },\n        class: \"全部類別\",\n        SelectMode: 0,\n        InputMode: null,\n        preHID: null,\n        preCID: null,\n        UDORDER0: []\n    }\n    componentDidMount() {\n        this.getGithub()\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        this.setState({ preHID: HID, preCID: CID })\n        this.getUDORDER0(HID, CID)\n    }\n    componentDidUpdate() {\n        const { caseinfo } = this.props\n        const { preHID, preCID } = this.state\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        if (HID !== preHID || CID !== preCID) {\n            this.setState({ preHID: HID, preCID: CID })\n            this.getUDORDER0(HID, CID)\n        }\n    }\n    getGithub() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Prescription\");\n                parser.mappings = [{ \"key\": \"全部類別\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson Prescription OK \" + JSON.stringify(parser))\n                this.setState({\n                    classParser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    getUDORDER0(HID, CID, Start, End) {\n\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                // const RowData = data.data\n                // const SortFromRangeDate = RowData.filter(function (info, index, arr) {\n                //     return\n                // })\n                this.setState({ UDORDER0: data.data })\n            })\n            .catch(err => { console.log(\"getStoredProcedureUDORDER0 NG \" + JSON.stringify(err)) });\n        // this.setState({ UDORDER0: UDORDER.data })\n    }\n\n\n    onChangeClass = (value) => {\n        this.setState({ class: value })\n    }\n    onChangeinputKey = (event) => {\n        this.setState({ InputMode: event.target.value })\n    }\n\n    ControlBarRender() {\n        const { Option } = Select;\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"110px 135px auto\", gridColumnGap: \"10px\" }}>\n                <Select defaultValue={this.state.class} style={{ width: 110 }} onChange={this.onChangeClass}>\n                    {this.state.classParser.mappings.map((mapping, index) => {\n                        return <Option value={mapping.key}>{mapping.key}</Option>\n                    })}\n                </Select>\n                <Select defaultValue={this.state.SelectMode} style={{ width: 135 }} onChange={(value) => { console.log(value); this.setState({ SelectMode: value }) }}>\n                    <Option value={0}>全部狀態</Option>\n                    <Option value={30}>生效中</Option>\n                    <Option value={60}>已完成</Option>\n                    <Option value={80}>已取消</Option>\n                </Select>\n                <Input id=\"prescriptionorderinput\" placeholder=\"輸入藥囑關鍵字\" onChange={this.onChangeinputKey} />\n            </div>\n        );\n    }\n\n    parseClass = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部類別\"] = []\n\n        inputs.forEach(input => {\n            let content = input.UDGNAME;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部類別\"].push(input)\n        });\n        return allResult;\n    }\n\n    onClickSearch = () => {\n        function formatUDORDERStatus(UDORDER0, Status) {\n            if (Status === 0) {\n                return UDORDER0\n            }\n            const filterUDORDER = UDORDER0.filter(function (info, index, arr) {\n                return Number(info.UDSTATUS) === Status\n            })\n            return filterUDORDER\n        }\n        const { searchbar } = this.props\n        const { UDORDER0 } = this.state\n        const parseClass = this.parseClass\n        const Status = this.state.SelectMode\n        const activeList = formatUDORDERStatus(UDORDER0, Status)\n        let ListData = [];\n        let clusteredData = {}\n        if (this.state.classParser !== undefined) {\n            clusteredData = parseClass(activeList, this.state.classParser)\n        }\n        let filteredData = clusteredData[this.state.class];\n        ListData = this.SortDataList(filteredData)\n        return ListData\n    }\n\n    SortDataList = (DataList) => {\n        const { PickerDateRange, searchbar } = this.props\n        const { InputMode } = this.state\n        if (InputMode !== null) {\n            const regex = new RegExp(InputMode, \"i\");\n            DataList = DataList.filter(data => {\n                return data.UDGNAME.match(regex) !== null || data.UDRPNAME.match(regex) !== null\n            })\n        }\n\n        const st = searchbar ? PickerDateRange[0] : PickerDateRange[0]\n        const et = searchbar ? PickerDateRange[1] + (24 * 60 * 60 * 1000) : PickerDateRange[1]\n\n        let filterDate = DataList.filter(function (element, index, arr) {\n            const startTime = moment(element.UDBGNDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n            const endTime = moment(element.UDENDDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n            return !(st > endTime || et < startTime)\n        })\n\n        if (Object.keys(filterDate).length > 1) {\n            filterDate = filterDate.sort((a, b) => {\n                console.log()\n                let tempTimeA = moment(a.UDBGNDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n                let tempTimeB = moment(b.UDBGNDT.toString().trim(), 'YYYY-MM-DD-HH.mm.ss.000000').valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n        }\n        return filterDate\n    }\n\n    render() {\n        const { searchbar, caseinfo } = this.props\n        const { SelectMode } = this.state\n\n        const filterData = this.onClickSearch()\n\n        return (\n            <div >\n                <div style={{ backgroundColor: \"#71b0e46e\", borderRadius: \"4px 4px 0 0\", height: \"36px\", padding: \"0px 16px\", display: \"grid\", gridTemplateColumns: searchbar ? \"2fr 3fr\" : \"1fr\", alignItems: \"center\" }\n                }>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{searchbar ? \"藥物處方\" : \"當日處方\"}</t2>\n                    {searchbar ? this.ControlBarRender() : null}\n                </div>\n                <Prescriptionordertable caseinfo={caseinfo} UDORDER0={filterData} SelectMode={SelectMode} searchbar={searchbar}></Prescriptionordertable>\n            </div>\n        );\n    }\n}\n\nexport default Prescriptionorderlayout\n","import React, { Component } from 'react';\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Treatmentordertablecell.scss'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment';\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Treatmentordertablecell extends Component {\n    state = {\n        onEdit: false,\n        onMove: false,\n        remark: this.props.info.remark,\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { info } = this.props\n        ApiProvider.getOneRemark(this.props.caseinfo.TRANSINID, info.ORDSEQNO, \"treatment\").then(result => {\n            console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    on_Mouse() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: true\n                }\n            )\n        }\n    }\n    on_leave() {\n        if (this.state.onEdit) {\n\n        }\n        else {\n            this.setState(\n                {\n                    onMove: false\n                }\n            )\n        }\n    }\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = newRemarkValue => {\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    render() {\n        function formatStatus(ORSTATUS) {\n            if (Number(ORSTATUS) === 30 || Number(ORSTATUS) === 90) {\n                return \"生效中\"\n            }\n            if (Number(ORSTATUS) === 60) {\n                return \"已完成\"\n            }\n            if (Number(ORSTATUS) === 80) {\n                return \"已取消\"\n            }\n            return ORSTATUS\n        }\n        const { info } = this.props\n\n        const Name = info.ORPROCED\n        const QD = info.ORFREQN\n        const Status = formatStatus(info.ORSTATUS)\n        const infoRemark = info[\"15\"].toString().trim()\n        const ST = moment(info.ORBGNDT.toString(), 'YYYY-MM-DD').format(\"MM/DD\")\n        const ET = moment(info.ORENDDT.toString(), 'YYYY-MM-DD').format(\"MM/DD\")\n\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": Name,\n            \"remarkId\": info.ORDSEQNO,\n            \"remark\": this.state.remark,\n            \"transinId\": this.props.caseinfo.TRANSINID,\n            \"type\": \"treatment\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <div onMouseMove={() => this.on_Mouse()} onMouseLeave={() => this.on_leave()} className=\"treatmentordercell\" style={{ minheight: this.state.remark === '' ? '40px' : '60px', borderTop: '#989898 1px solid', borderBottom: '#989898 1px solid' }}>\n                <t3 className='cellstyle' style={{ minheight: this.state.remark === '' ? '40px' : '60px' }}>{ST} - {ET}</t3>\n                <div style={{ display: \"grid\", gridTemplateRows: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"1fr\" : \"1fr 20px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 40px 70px\" }}>\n                        <t3 className='cellstyle' style={{ color: \"black\", fontWeight: 600, borderLeft: \"rgba(238, 238, 238, 1) 1px solid\" }}>{Name}</t3>\n                        <t3 className='textHidden'>{infoRemark}</t3>\n                        <t3 className='cellstyle'>{QD}</t3>\n                        <t3 className='cellstyle'>{Status}</t3>\n                    </div>\n                    <t3 className='cellstyle' style={{ borderTop: \"rgba(238, 238, 238, 1) 1px solid\", fontWeight: 600, color: \"rgb(0,120,0\", overflow: \"hidden\", height: \"20px\", display: [this.state.remark === undefined || this.state.remark === \"\" ? \"none\" : \"\"] }}>{this.state.remark}</t3>\n                    <div style={this.state.onMove ?\n                        { display: this.state.powerLogin == 1 ? \"flex\" : \"none\", justifyContent: \"center\", alignItems: \"center\", position: 'absolute', right: 0, height: [this.state.remark === null || this.state.remark === undefined || this.state.remark === \"\" ? \"100%\" : \"100%\"], background: \"transparent\", width: \"77px\" }\n                        :\n                        { display: \"none\" }}>\n                        <div onClick={() => this.Edit_state()} style={{ width: this.state.remark === '' ? '30px' : '40px', height: this.state.remark === '' ? '30px' : '40px', borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }}>\n                            <img src={chooseedit} alt='chooseedit'></img>\n                        </div>\n                    </div>\n                </div>\n                <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            </div>\n        );\n    }\n}\nexport default Treatmentordertablecell\n","import React, { Component } from 'react';\nimport Treatmentordertablecell from './Treatmentordertablecell'\nimport './Treatmentordertable.scss'\n\nclass Treatmentordertable extends Component {\n    render() {\n        const { TRTMNT01, caseinfo, PickerDate, searchbar } = this.props\n\n        if (TRTMNT01 === null || TRTMNT01 === undefined) {\n            return null\n        }\n        // const DataList = TRTMNT01 //SortDataList(TRTMNT01, PickerDate)\n        const Treatmentordertablecelllist = TRTMNT01.map(\n            (info, index) => <Treatmentordertablecell caseinfo={caseinfo} key={index} info={info}></Treatmentordertablecell>\n\n        )\n        const titlearray = ['時間起迄', '處置名稱', '備註內容', '頻次', '狀態']\n        const titlecell = titlearray.map(function (info, index) {\n            return (\n                <t3 className=\"treatmentordertablecellstyle\" key={index}>{info}</t3>\n            );\n        })\n\n        return (\n            <div>\n                <div className='treatmentordertable'>\n                    {titlecell}\n                </div>\n                <div style={{ border: \"1px solid rgba(232, 232, 232, 1)\", borderRadius: \"0 0 4px 4px\", borderCollapse: \"collapse\" }}>\n                    <div style={{ minHeight: searchbar ? \"calc(100vh - 300px)\" : \"120px\", maxHeight: searchbar ? \"calc(100vh - 300px)\" : \"400px\", overflowY: \"auto\" }}>\n                        {JSON.stringify(TRTMNT01) !== '[]' ?\n                            Treatmentordertablecelllist\n                            :\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"100px 1fr 1fr 40px 70px\" }}>\n                                <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                    {searchbar ? \"無資料\" : \"當日無資料\"}\n                                </div>\n                            </div>}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Treatmentordertable\n","import React, { Component } from 'react';\nimport Treatmentordertable from './Treatmentordertable'\nimport { Select, Input } from 'antd';\nimport * as ApiGithub from '../../API/ApiGithub'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\n\nclass Treatmentorderlayout extends Component {\n    state = {\n        // PickerDateRange: [moment().subtract(6, 'days'), moment()],\n        parser: { \"mappings\": [] },\n        DateRangeMode: {},\n        class: \"全部類別\",\n        SelectMode: 0,\n        InputMode: '',\n        preHID: null,\n        preCID: null,\n        TRTMNTQ1: []\n    }\n\n    componentDidMount() {\n        this.getGithub()\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        this.setState({ preHID: HID, preCID: CID })\n        this.getTreatmentQ1(HID, CID)\n    }\n    componentDidUpdate() {\n        const { caseinfo } = this.props\n        const { preHID, preCID } = this.state\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        if (HID !== preHID || CID !== preCID) {\n            this.setState({ preHID: HID, preCID: CID })\n            this.getTreatmentQ1(HID, CID)\n        }\n\n\n    }\n    getGithub() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Treatment\");\n                parser.mappings = [{ \"key\": \"全部類別\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson Treatment OK \" + JSON.stringify(parser))\n                this.setState({\n                    parser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    getTreatmentQ1(HID, CID) {\n        ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => { this.setState({ TRTMNTQ1: data.data }) })\n            .catch(err => { console.log(\"getStoredProcedureTRTMNTQ1 NG \" + JSON.stringify(err)) });\n    }\n\n    onChangeClass = (value) => {\n        this.setState({ class: value })\n    }\n\n    handleChange = (value) => {\n        this.setState({ SelectMode: value })\n    }\n\n    onChangeinputKey = (event) => {\n        this.setState({ InputMode: event.target.value })\n    }\n\n    Search_bar = () => {\n        // const { RangePicker } = DatePicker;\n        const { Option } = Select;\n\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"110px 135px auto\", gridColumnGap: \"10px\" }}>\n                <Select defaultValue={this.state.class} style={{ width: 110 }} onChange={this.onChangeClass}>\n                    {this.state.parser.mappings.map((mapping, index) => {\n                        return <Option key={index} value={mapping.key}>{mapping.key}</Option>\n                    })}\n                </Select>\n                <Select defaultValue={0} style={{ width: 135 }} onChange={this.handleChange}>\n                    <Option value={0}>全部狀態</Option>\n                    <Option value={1}>生效中</Option>\n                    <Option value={2}>已完成</Option>\n                    <Option value={3}>已結束</Option>\n                </Select>\n                <Input placeholder=\"輸入藥囑關鍵字\" value={this.state.InputMode} onChange={this.onChangeinputKey} />\n            </div>\n        );\n\n    }\n\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部類別\"] = []\n\n        inputs.forEach(input => {\n            let content = input.ORPROCED;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部類別\"].push(input)\n        });\n        return allResult;\n    }\n\n    onClickSearch = () => {\n        function formatTRMINQtatus(TRTMNT01, Status) {\n            if (Status === 0) {\n                return TRTMNT01\n            }\n            const filterTRTMNT01 = TRTMNT01.filter(function (info, index, arr) {\n                if (Status === 1) {\n                    return Number(info.ORSTATUS) === 30 || Number(info.ORSTATUS) === 90\n                }\n                if (Status === 2) {\n                    return Number(info.ORSTATUS) === 60\n                }\n                return Number(info.ORSTATUS) === 80\n\n            })\n            return filterTRTMNT01\n        }\n        const { TRTMNT01 } = this.props\n        const { SelectMode } = this.state\n        const parse = this.parse;\n\n        const activeList = formatTRMINQtatus(TRTMNT01, SelectMode)\n        console.log(\"activeList \" + JSON.stringify(activeList));\n\n        let clusteredData = {}\n        if (this.state.parser !== undefined) {\n            clusteredData = parse(activeList, this.state.parser)\n        }\n\n        //filter data by selected class\n        let filteredData = clusteredData[this.state.class];\n\n        const ListData = this.SortDataList(filteredData)\n\n        return ListData\n    }\n\n    SortDataList = (DataList) => {\n        const { PickerDateRange, searchbar } = this.props\n        const { InputMode } = this.state\n\n        if (InputMode !== '') {\n            const regex = new RegExp(InputMode, \"i\");\n            DataList = DataList.filter(data => {\n                return data.ORPROCED.match(regex) !== null\n            })\n        }\n\n        const st = searchbar ? PickerDateRange[0] : PickerDateRange[0]\n        const et = searchbar ? PickerDateRange[1] + (24 * 60 * 60 * 1000) : PickerDateRange[1]\n\n        let filterDate = DataList.filter(function (element, index, arr) {\n            const startTime = moment(element.ORBGNDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n            const endTime = moment(element.ORENDDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n            return !(st > endTime || et < startTime)\n        })\n\n        if (Object.keys(filterDate).length > 1) {\n            filterDate = filterDate.sort((a, b) => {\n                let tempTimeA = moment(a.ORBGNDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n                let tempTimeB = moment(b.ORBGNDT.toString().trim(), 'YYYY-MM-DD').valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n        }\n        return filterDate\n    }\n\n    render() {\n        const { searchbar, caseinfo } = this.props\n\n        const filterData = this.onClickSearch()\n\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderRadius: \"4px 4px 0 0\", height: \"36px\", padding: \"0px 16px\", display: \"grid\", gridTemplateColumns: searchbar ? \"2fr 3fr\" : \"1fr\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{searchbar ? \"治療處置\" : \"當日處置\"}</t2>\n                    {searchbar ? this.Search_bar() : null}\n                </div>\n                <Treatmentordertable caseinfo={caseinfo} TRTMNT01={filterData} searchbar={searchbar}></Treatmentordertable>\n            </div>\n        );\n    }\n}\n\nexport default Treatmentorderlayout\n","import React, { Component } from 'react';\nimport detaillogo from '../Image/svg/details.svg'\nimport { Tooltip } from 'antd';\n\nclass Notecell extends Component {\n\n    updatetime_format(updatetime) {\n        function monthformat(month) {\n            return month + 1\n        }\n        return new Date(updatetime).getFullYear() + \"-\" + monthformat(new Date(updatetime).getMonth()) + \"-\" + new Date(updatetime).getDate() + \" \" + new Date(updatetime).getHours() + \":\" + new Date(updatetime).getMinutes()\n    }\n    render() {\n        const { info } = this.props\n        const text = info.updatedoctor + \"醫師於\" + this.updatetime_format(info.updatetime) + \"更新\"\n\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"19fr 1fr\", minHeight: \"35px\" }}>\n                <div style={{ wordBreak: \"break-all\", fontSize: \"1.3rem\", display: \"flex\", alignItems: \"center\" }}>{info.data}</div>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <Tooltip placement=\"right\" title={text}>\n                        <div>\n                            <img src={detaillogo} alt='detaillogo'></img>\n                        </div>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Notecell\n","import React, { Component } from 'react';\nimport Notecell from './Notecell'\nimport editlogo from '../Image/svg/Edit.svg'\nimport { Input, Button } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider';\nimport moment from 'moment';\nclass Note extends Component {\n    state = {\n        powerLogin: 0,\n        EditMode: false,\n        inputContent: '',\n        noteData: [],\n        PickerDate: moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.queryNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.HISID, this.state.PickerDate)\n    }\n    componentDidUpdate() {\n        const propDate = this.props.PickerDate\n        const stateDate = this.state.PickerDate\n        if (propDate !== stateDate) {\n            this.setState({ PickerDate: propDate })\n            this.queryNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.HISID, propDate)\n        }\n    }\n    queryNotice(TRANSID, HISID, pickerdate) {\n        const st = moment(moment(pickerdate).format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n        const et = moment(moment(pickerdate).format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf() + (24 * 60 * 60 * 1000)\n        ApiProvider.getOnePatientNotice(TRANSID, HISID, st, et)\n            .then(result => {\n                console.log(\"getOnePatientNotice OK \" + JSON.stringify(result));\n                this.setState({\n                    noteData: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientNotice NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n    // queryOnePatientNotice() {\n    //     ApiProvider.getOnePatientNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID)\n    //         .then(data => {\n    //             this.setState({ noteData: data.data })\n    //         }).catch(err => { })\n    // }\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString()\n        const doc = sessionStorage.getItem('user')\n        ApiProvider.createNotice(this.props.caseinfo.HISID, this.state.inputContent, timeNowStr, this.props.caseinfo.TRANSINID, doc)\n            .then(data => {\n                this.queryNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID, this.props.PickerDate)\n            })\n            .catch(err => {\n                console.log(\" Err \" + JSON.stringify(err))\n            })\n        this.setState(\n            {\n                EditMode: false,\n                inputContent: undefined\n            }\n        )\n    }\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    EditControl() {\n        const edit = this.props.editstatus\n        if (edit) {\n            return (\n                <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                    <img src={editlogo} alt=\"editlogo\" />\n                </div>\n            );\n        }\n        return null\n    }\n    render() {\n        let dataList = this.state.noteData\n\n        if (Object.keys(dataList).length > 1) {\n            dataList = dataList.sort((a, b) => {\n                let tempTimeA = moment(a.time, \"YYYY-MM-DD[T]HH:mm:ss.000+0000\").valueOf()\n                let tempTimeB = moment(b.time, \"YYYY-MM-DD[T]HH:mm:ss.000+0000\").valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n        }\n\n        const notelist = dataList.map((info, index) => {\n            const time = moment(info.time, \"YYYY-MM-DD[T]HH:mm:ss.000+0000\").format('YYYY-MM-DD HH:mm:ss')\n            const localTime = moment.utc(time).toDate()\n            const infoObj = {\n                updatedictor: info.doc,\n                updatetime: moment(localTime).format(\"YYYY/MM/DD HH:mm:ss\"),\n                data: info.context\n            }\n            return <Notecell key={index} info={infoObj}></Notecell>\n        })\n        const EditButton = this.EditControl()\n        return (\n            <div >\n                <div style={{ backgroundColor: \"#71b0e46e\", borderRadius: \"4px 4px 0 0\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\", justifyContent: 'space-between' }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{this.props.title}</t2>\n                    {EditButton}\n                </div>\n                <div style={{ border: \"1px solid rgba(232, 232, 232, 1)\", borderRadius: \"0 0 4px 4px\", borderCollapse: \"collapse\", padding: \"0px 16px\" }}>\n                    <div style={{ maxHeight: \"300px\", minHeight: \"120px\", overflowY: \"auto\" }}>\n                        {JSON.stringify(dataList) !== '[]' ? <div style={{ minHeight: \"120px\", maxHeight: \"400px\", overflow: \"auto\" }}>\n                            {notelist}\n                        </div> :\n                            <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\" }}>\n                                當日無評論\n                        </div>}\n                    </div>\n                    <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                        <div style={{ padding: \"5px 10px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <Input placeholder=\"輸入當日內容\" value={this.state.inputContent} onChange={this.onInputChange.bind(this)}></Input>\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                                <Button onClick={() => this.onClickCancel()}>取消</Button>\n                                <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default Note\n","import React, { Component } from 'react';\nimport Schedule_event_list from '../../Module/Schedule_event'\nimport Note from '../../Module/Note'\nclass CrossectionSchedule extends Component {\n    render() {\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"10px\" }}>\n                <Schedule_event_list source={this.props.source} PickerDate={this.props.PickerDate} title=\"排程\" caseinfo={this.props.caseinfo} editstatus={this.props.editstatus}></Schedule_event_list>\n                <Note title=\"評論\" PickerDate={this.props.PickerDate} caseinfo={this.props.caseinfo} data={this.props.noticeData} editstatus={this.props.editstatus}></Note>\n            </div>\n        );\n    }\n}\n\nexport default CrossectionSchedule;\n","import React, { Component } from 'react';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport Wardinfousercheckbox from '../../Wardview/Wardunfousercheckbox';\n\nclass CrosssectionTodo extends Component {\n    state = {\n        todoList: []\n    }\n\n    componentDidMount() {\n        this.queryTodo();\n    }\n\n    queryTodo() {\n        ApiProvider.getOneTodo(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID)\n            .then(result => {\n                console.log(\"getOneTodo OK \" + JSON.stringify(result.data));\n                this.setState({\n                    todoList: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getOneTodo NG \" + JSON.stringify(err));\n            });\n    }\n\n    renderTodoItem() {\n        if (this.state.todoList.length === 0) {\n            return (\n                // <div>沒有待辦事項</div>\n                <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\" }}>\n                    沒有待辦事項\n                </div>\n            )\n        } else {\n            return this.state.todoList.map((item, index) => {\n                if (item.type === \"未完成\") {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={false}></Wardinfousercheckbox>);\n                } else {\n                    return (<Wardinfousercheckbox key={index} item={item} selectstate={true}></Wardinfousercheckbox>);\n                }\n\n            });\n        }\n    }\n\n    render() {\n        const renderTodoItem = this.renderTodoItem.bind(this);\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>待辦事項</t2>\n                </div>\n                <div style={{ border: \"1px solid rgba(232,232,232,1)\", borderRadius: \"0 0 4px 4px\", borderCollapse: \"collapse\", padding: \"0px 16px\" }}>\n                    {renderTodoItem()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CrosssectionTodo\n","import React, { Component } from 'react';\nimport { Icon } from 'antd';\nimport Vitalsign from './Vitalsign';\nimport Controlbar from '../Controlbar';\nimport CrossectionIo from './Crossection_io'\nimport Labviewlayout from './Labview'\nimport Nonlabviewlayout from './Nonlabview'\nimport GAS from './GAS'\nimport RTbreathe from './RTbreathe'\nimport Prescriptionorderlayout from '../Prescriptionorder/Prescriptionorder'\nimport Treatmentorderlayout from '../Treatmentorder/Treatmentorder'\nimport CrossectionSchedule from './Crosssectionschedule'\nimport CrosssectionTodo from './Crosssection_todo'\nimport './Crosssectionlayout.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass Crosssectionlayout extends Component {\n    state = {\n        Cross_item: [0, 1, 2, 3, 4, 5],\n        RESDGLU1: [],\n        RESLAB02: [],\n        RESLAB01: [],\n        RESDBGAS: [],\n        RESLAB0C: [],\n        RESSECT: [],\n        UDORDER0: [],\n        TRTMNTQ1: [],\n\n        PickerDate: moment(moment().format('YYYYMMDD')).valueOf(),\n\n        SelectInterval: 1,\n\n        preCID: null,\n        preHID: null,\n        isLoading: false,\n    }\n    componentDidMount() {\n        const CID = this.props.caseinfo.CASEID\n        const HID = this.props.caseinfo.HISID\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        this.setState({\n            preCID: CID,\n            preHID: HID\n        })\n        this.NIS_API_IO(this.state.PickerDate, CID, HID, TRDT)\n    }\n    componentDidUpdate() {\n        const CID = this.props.caseinfo.CASEID\n        const HID = this.props.caseinfo.HISID\n        const TRDT = moment(this.props.caseinfo.TRANSINDT, 'YYYYMMDD').valueOf()\n        const { preCID, preHID } = this.state\n        if (preCID !== CID || preHID !== HID) {\n            this.setState({\n                preCID: CID,\n                preHID: HID\n            })\n            this.NIS_API_IO(this.state.PickerDate, CID, HID, TRDT)\n        }\n    }\n    NIS_API_IO(Datetime, CID, HID, TRDT) {\n        function selectMonthInterval(Datetime) {\n            const timestampInterval = new Date().getTime() - Datetime\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n        const TransinDate = moment(TRDT).format(\"YYYY-MM-DD\")\n        const MonthInterval = selectMonthInterval(Datetime)\n        this.setState({ isLoading: true });\n        const apiGLU = ApiProvider.getStoredProcedureRESDGLU1(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESDGLU1: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDGLU1 NG \" + JSON.stringify(err));\n            });\n        const apiLAB2 = ApiProvider.getStoredProcedureRESLAB02(HID, TransinDate)\n            .then(data => {\n                this.setState({ RESLAB02: data.data })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESLAB02 NG \" + JSON.stringify(err));\n            });\n        const apiLAB1 = ApiProvider.getStoredProcedureRESLAB01(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESLAB01: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESLAB01 NG \" + JSON.stringify(err));\n            });\n        const apiGAS = ApiProvider.getStoredProcedureRESDBGAS(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESDBGAS: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDBGAS NG \" + JSON.stringify(err));\n            });\n        const apiLABC = ApiProvider.getStoredProcedureRESLAB0C(HID, TransinDate)\n            .then(data => {\n                this.setState({\n                    RESLAB0C: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESLAB0C NG \" + JSON.stringify(err));\n            });\n        const apiRESS = ApiProvider.getStoredProcedureRESSECT(HID, MonthInterval, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                this.setState({\n                    RESSECT: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESSECT NG \" + JSON.stringify(err))\n            });\n\n        const apiUDO = ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                this.setState({\n                    UDORDER0: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureUDORDER0 NG \" + JSON.stringify(err))\n            });\n        const apiTRT = ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => {\n                this.setState({\n                    TRTMNTQ1: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureTRTMNTQ1 NG \" + JSON.stringify(err))\n            });\n\n        Promise.all([apiGAS, apiGLU, apiLAB1, apiLAB2, apiLABC, apiRESS, apiTRT, apiUDO])\n            .then(() => {\n                this.setState({ isLoading: false });\n            })\n            .catch(() => {\n                this.setState({ isLoading: false });\n            })\n    }\n\n    callbackFunction = (item_array) => {\n        this.setState({ Cross_item: item_array })\n    }\n\n    callbackDateFunction = (PickerTimeStamp) => {\n        this.setState({ PickerDate: PickerTimeStamp })\n    }\n\n    display_item(number) {\n        const item = this.state.Cross_item\n        var filter = item.some(function (item, index, array) {\n            return item === number\n        });\n        return filter\n    }\n    render() {\n        const crosssectioncontrollist = [\n            {\n                \"name\": \"生命徵象\",\n                \"scrollpoint\": \"vitalsignIO\"\n            },\n            {\n                \"name\": \"檢驗\",\n                \"scrollpoint\": \"lab\"\n            },\n            {\n                \"name\": \"呼吸評估\",\n                \"scrollpoint\": \"rt\"\n            },\n            {\n                \"name\": \"醫藥囑\",\n                \"scrollpoint\": \"order\"\n            },\n            {\n                \"name\": \"行事曆及註記\",\n                \"scrollpoint\": \"schedule\"\n            }\n        ]\n        const { caseinfo } = this.props\n        const TimeStampPickerDate = this.state.PickerDate\n        const endTime = TimeStampPickerDate + (31 * 60 * 60 * 1000)\n        const startTime = endTime - (3 * 24 * 60 * 60 * 1000)\n        const PickerDateRange = [TimeStampPickerDate - (6 * 24 * 60 * 60 * 1000), TimeStampPickerDate]\n\n        const POneDayRange = [endTime - (24 * 60 * 60 * 1000), endTime]\n        const PThreeDayRange = [endTime - (3 * 24 * 60 * 60 * 1000), endTime]\n\n        return this.state.isLoading\n            ? (<Icon type=\"loading\" />)\n            : (\n                <div>\n                    <Controlbar caseinfo={caseinfo} PickerDate={this.state.PickerDate} parentDateCallback={this.callbackDateFunction} parentCallback={this.callbackFunction} btnlist={crosssectioncontrollist} item_array={this.state.Cross_item}></Controlbar>\n                    <div id=\"crossection\" className='crossectioncontent'>\n                        <div id={\"vitalsignIO\"} style={this.display_item(0) ? { display: \"grid\", gridTemplateColumns: \"1fr 400px\", gridGap: \"10px\", marginBottom: \"10px\" } : { display: \"none\" }}>\n                            <Vitalsign PickerDate={this.state.PickerDate} caseinfo={caseinfo}></Vitalsign>\n                            <CrossectionIo PickerDate={this.state.PickerDate} caseinfo={caseinfo} title=\"輸出入\"></CrossectionIo>\n                        </div>\n                        <div id={\"lab\"} style={this.display_item(1) ? { display: \"grid\", gridTemplateColumns: \"650px 650px\", gridGap: \"10px\" } : { display: \"none\" }}>\n                            <Labviewlayout PickerDate={this.state.PickerDate} caseinfo={caseinfo} RESLAB01={this.state.RESLAB01} RESLAB02={this.state.RESLAB02} RESDBGAS={this.state.RESDBGAS} RESLAB0C={this.state.RESLAB0C} RESDGLU1={this.state.RESDGLU1} RESSECT={this.state.RESSECT}></Labviewlayout>\n                            <Nonlabviewlayout caseinfo={caseinfo} PickerDateRange={PickerDateRange}></Nonlabviewlayout>\n                        </div>\n                        <div id={\"rt\"} style={this.display_item(2) ? { display: \"grid\", gridTemplateColumns: \"650px 650px\", gridGap: \"10px\", margin: \"10px 2px 0px 0px\" } : { display: \"none\" }}>\n                            <GAS caseinfo={caseinfo} PickerDateRange={PickerDateRange} searchbar={false}></GAS>\n                            <RTbreathe caseinfo={caseinfo} PickerDateRange={PThreeDayRange} searchbar={false}></RTbreathe>\n                        </div>\n                        <div id={\"order\"} style={this.display_item(3) ? { display: \"grid\", gridTemplateColumns: \"650px 650px\", gridGap: \"10px\", margin: \"10px 2px 0px 0px\" } : { display: \"none\" }}>\n                            <Prescriptionorderlayout UDORDER0={this.state.UDORDER0} caseinfo={caseinfo} searchbar={false} PickerDateRange={POneDayRange}></Prescriptionorderlayout>\n                            <Treatmentorderlayout TRTMNT01={this.state.TRTMNTQ1} caseinfo={caseinfo} searchbar={false} PickerDateRange={POneDayRange}></Treatmentorderlayout>\n                        </div>\n                        <div id={\"schedule\"} style={this.display_item(4) ? { margin: \"10px 2px 0px 0px\" } : { display: \"none\" }}>\n                            <CrossectionSchedule source={1} PickerDate={this.state.PickerDate} editstatus={false} caseinfo={caseinfo}></CrossectionSchedule>\n                        </div>\n                        <div style={this.display_item(5) ? { margin: \"10px 2px 0px 0px\" } : { display: \"none\" }}>\n                            <CrosssectionTodo caseinfo={caseinfo} ></CrosssectionTodo>\n                        </div>\n                    </div>\n                </div>\n            )\n    }\n}\n\nexport default Crosssectionlayout;\n","import React, { Component } from 'react';\nimport IOpage from '../../Module/iopage'\n\nclass Inoutonchronic extends Component {\n    render() {\n        const { title, caseinfo, IntervalStatus, PickerDate } = this.props\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                {/* 樣式修改issue10 */}\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t2>\n                </div>\n                <IOpage caseinfo={caseinfo} Status={\"Chronic\"} IntervalStatus={IntervalStatus} PickerDate={PickerDate}></IOpage>\n            </div>\n        );\n    }\n}\n\nexport default Inoutonchronic\n","import React, { Component } from 'react'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport { Spin, Icon } from 'antd';\nimport moment from 'moment'\n\nclass Chronictablecelltooltip extends Component {\n    state = {\n        preStartTimeStamp: null,\n        loading: true,\n        resultStr: \"--\"\n    }\n    componentDidUpdate() {\n        const { startTimeStamp } = this.props\n        const { preStartTimeStamp } = this.state\n        if (startTimeStamp !== preStartTimeStamp) {\n            console.log(\"Chronictablecelltooltip componentDidUpdate\")\n        }\n    }\n    componentDidMount() {\n        const { startTimeStamp } = this.props\n        this.setState({ preStartTimeStamp: startTimeStamp })\n        console.log(\"Chronictablecelltooltip componentDidMount\")\n        this.apiGet()\n    }\n    apiGet() {\n        const { tooltipelement, caseinfo } = this.props\n        const ORMM = tooltipelement.ORMM.toString().trim()\n        const ORDSEQNO = tooltipelement.ORDSEQNO.toString().trim()\n        //RESDISP\n        ApiProvider.getStoredProcedureRESDISP(caseinfo.HISID, ORMM, caseinfo.CASEID, ORDSEQNO)\n            .then(data => {\n                //parse content\n                const parsers = this.props.summaryParse\n                const parser = data.data.length > 0 ? this.select_parser(\"Chronic table\", data.data[0], parsers) : undefined\n\n                if (parser !== undefined) {\n                    //concat all content\n                    let allContent = \"\"\n                    //fakeData.forEach(item => {\n                    data.data.forEach(item => {\n                        allContent = `${allContent} \"\\n\" ${item.CONTENT}`;\n                    });\n\n                    const result = this.parse(allContent, parser)\n\n                    const resultStr = this.summerize(result, parser)\n\n                    this.setState({ resultStr: resultStr })\n                }\n\n                this.setState({ loading: false })\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureRESDISP NG \" + JSON.stringify(err))\n                this.setState({ loading: false })\n            })\n    }\n    select_parser = (parserName, input, parsers) => {\n        const inputBeginTime = moment(input.ORBGNDT, \"YYYY-MM-DD\").valueOf()\n        return parsers.find(x =>\n            parserName.match(x.parser_name)\n            && (!x.apply_condition.start_time || inputBeginTime >= x.apply_condition.start_time)\n        )\n    }\n    parse = (input, parser) => {\n        let mappings = parser.mappings\n        let result = {}\n        mappings.forEach(mapping => {\n            const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n            const match = input.match(re)\n            result[mapping.key] = match && match[mapping.position]\n        });\n        return result;\n    }\n    summerize = (kv_pairs, parser) => {\n        let summary_str = parser.summary\n        for (const key in kv_pairs) {\n            let match_replacer = summary_str.match(RegExp(\"\\\\[\" + key + \"(:(.*?))?\\\\]\"))\n            let replacer = \"\"\n            if (match_replacer && match_replacer.length === 3) {\n                replacer = match_replacer[2]\n            }\n            const match = summary_str.match(RegExp(\"\\\\[\" + key + \":(.*?)?\\\\]\"))\n            summary_str = summary_str.replace(match[0], match[0].replace(match[1], kv_pairs[key] || replacer))\n        }\n        return summary_str;\n    }\n    render() {\n        const { tooltipelement } = this.props\n        const { loading, resultStr } = this.state\n        const infoTime = tooltipelement.ORRCPTM.toString().trim()\n        const name = tooltipelement.ORPROCED.toString().trim()\n        const reportname = tooltipelement.ORSPCN1.toString().trim()\n        const cellRenderData = [infoTime, name, reportname, resultStr]\n        const Cell = cellRenderData.map(function (value, index) {\n            if (loading) {\n                const antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n                return (\n                    <Spin key={index} indicator={antIcon} />\n                );\n            } else {\n                return (\n                    <div key={index} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"0px 5px\" }}>\n                        {value}\n                    </div>\n                );\n            }\n\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"100px 150px 150px 200px\" }}>{Cell}</div>\n        );\n    }\n}\n\nexport default Chronictablecelltooltip\n","import React, { Component } from 'react'\nimport { Tooltip } from 'antd'\nimport moment from 'moment'\nimport Chronictablecelltooltip from './ChronicTableCellTooltipCell'\n\nclass Chronictablecell extends Component {\n    CellText() {\n        const { element, caseinfo, summaryParse } = this.props\n        const start = moment(element.StartTime).format(\"YYYY/MM/DD HH:mm:ss\")\n        const startTimeStamp = moment(element.StartTime).valueOf()\n        const end = moment(element.EndTime).format(\"HH:mm:ss\")\n        const title = [\"採檢時間\", \"檢驗項目\", \"檢體\", \"報告\"]\n        const titleCell = title.map(function (value, index) {\n            return (\n                <div key={index} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"0px 5px\" }}>\n                    {value}\n                </div>\n            );\n        })\n        const objectElement = element.element\n        const objectElementCell = objectElement.map(function (info, index, arr) {\n            return (\n                <Chronictablecelltooltip key={index} startTimeStamp={startTimeStamp} tooltipelement={info} caseinfo={caseinfo} summaryParse={summaryParse}></Chronictablecelltooltip>\n            );\n        })\n        return (\n            <div>\n                {/* <div>{start}-{end}</div>\n                <div>檢驗檢查項目 : {element.title}類</div> */}\n                <div style={{ display: \"grid\", gridTemplateColumns: \"100px 150px 150px 200px\" }}>\n                    {titleCell}\n                </div>\n                {objectElementCell}\n            </div>\n        );\n    }\n    render() {\n        function checkLineColor(lineColor) {\n            if(lineColor === null){\n                return '';\n            }else{\n                return `${lineColor.width} solid ${lineColor.color}`;\n            }\n        }\n        function valueNull(value) {\n            if (value === null || value === undefined || value === 0) {\n                return \"\"\n            }\n            return `${value}筆`\n        }\n        const { element } = this.props\n        const TitleRender = this.CellText()\n        if (element.element.length === 0) {\n            return (\n                <div style={{ height: '40px', display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', borderLeft: checkLineColor(this.props.lineColor) }}></div>\n            );\n        }\n        return (\n            <Tooltip title={TitleRender} autoAdjustOverflow={true} overlayStyle={{ maxWidth: \"800px\" }}>\n                <div style={{ backgroundColor:'rgba(0,120,230,.1)', height: '40px',fontSize: \"16px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', cursor: \"pointer\", borderLeft: checkLineColor(this.props.lineColor) }}>\n                    {valueNull(element.element.length)}\n                </div>\n            </Tooltip>\n        );\n    }\n}\n\nexport default Chronictablecell","import React, { Component } from 'react'\nimport moment from 'moment'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport * as ApiPronider from '../../API/ApiProvider'\nimport Chronictablecell from './ChronicTableCell'\nimport * as RSData from '../../Resource/RESSECT'\n\nclass Tableonchronic extends Component {\n    state = {\n        LabParse: [],\n        SummaryParse: [{ apply_condition: \"\", mappings: [] }],\n        RESSECT: [],\n        preHID: null\n    }    \n\n    ApiGet(HID, monthly) {\n        ApiGithub.getGitHubJson(\"Chronic_Lab.json\")\n            .then(data => {\n                this.setState({\n                    LabParse: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiGithub.getGitHubJson(\"Summary.json\")\n            .then(data => {\n                this.setState({\n                    SummaryParse: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiPronider.getStoredProcedureRESSECT(HID, \"1\", \"ALL\", \"DOC3924B\")\n            .then(data => {\n                this.setState({ RESSECT: data.data })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        // this.setState({ RESSECT: RSData.data })\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDate, chronic_state } = this.props\n        const HID = caseinfo.HISID\n        const monthly = this.fotmatTimerMonthly(PickerDate)\n        this.setState({ preHID: caseinfo.HISID, prePickerDate: PickerDate, preInterval: chronic_state })\n        this.ApiGet(HID, monthly)\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDate, chronic_state } = this.props\n        const HID = caseinfo.HISID\n        const { preHID, prePickerDate, preInterval } = this.state\n        const monthly = this.fotmatTimerMonthly(PickerDate)\n        if (HID !== preHID || prePickerDate !== PickerDate || preInterval !== chronic_state) {\n            this.setState({ preHID: caseinfo.HISID, prePickerDate: PickerDate, preInterval: chronic_state })\n            this.ApiGet(HID, monthly)\n        }\n    }\n\n    fotmatTimerMonthly(pickerdate) {\n        const timestampInterval = moment().valueOf() - pickerdate\n        const timestampMonth = 30 * 24 * 60 * 60 * 1000\n        const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n        return MonthInt\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    render() {\n        function DataForTimer(dataList, interval, pickerdate) {\n            function starttime(interval, entTimeStamp) {\n                if (interval === 0) {\n                    return entTimeStamp - (24 * 60 * 60 * 1000)\n                }\n                if (interval === 1) {\n                    return entTimeStamp - (3 * 24 * 60 * 60 * 1000)\n                }\n                if (interval === 2) {\n                    return entTimeStamp - (7 * 24 * 60 * 60 * 1000)\n                }\n                return entTimeStamp - (14 * 24 * 60 * 60 * 1000)\n            }\n\n            function fotmatTimerForTimer(interval, st, list, title, grid) {\n                var TimerForList = []\n                for (let index = 0; index < interval; index++) {\n                    const StartTime = st + (index * grid * 60 * 60 * 1000)\n                    const EndTime = st + ((index + 1) * grid * 60 * 60 * 1000)\n                    const filterTimerForDataList = list.filter(function (element, index, arr) {\n                        const time = element.ORRCPDT.toString().trim() + element.ORRCPTM.toString().trim()\n                        const timestamp = moment(time, 'YYYY-MM-DDHH:mm:ss').valueOf()\n                        return StartTime <= timestamp && timestamp < EndTime\n                    })\n                    TimerForList.push({\n                        StartTime: StartTime,\n                        EndTime: EndTime,\n                        element: filterTimerForDataList,\n                        title: title\n                    })\n                }\n                return TimerForList\n            }\n            const et = pickerdate + (31 * 60 * 60 * 1000)\n            const st = starttime(interval, et)\n            const slectInt = TimeInterval(interval)\n            const DataTransForTimer = fotmatTimerForTimer(slectInt.interval, st, dataList.array, dataList.title, slectInt.grid)\n            return DataTransForTimer\n        }\n\n\n\n        function LabFormat(ressect, parsrList) {\n            var arrayBiochemical = []\n            var arrayBlood = []\n            var arrayCultivate = []\n            var arrayGAS = []\n            // var arrayGlu = []\n            var arrayRadiation = []\n            var arrayOther = []\n\n            for (let index = 0; index < ressect.length; index++) {\n                const element = ressect[index];\n                const element_ORPROCED = element.ORPROCED\n                const BioFind = parsrList.Biochemical.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const BloFind = parsrList.Blood.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const CulFind = parsrList.Cultivate.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                const GasFind = parsrList.GAS.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                // const GluFind = parsrList.GAS.some(function (value, index, arr) {\n                //     return element_ORPROCED.match(value) !== null\n                // })\n                const RadFind = parsrList.Radiation.some(function (value, index, arr) {\n                    return element_ORPROCED.match(value) !== null\n                })\n                if (BioFind) {\n                    arrayBiochemical.push(element)\n                }\n                if (BloFind) {\n                    arrayBlood.push(element)\n                }\n                if (CulFind) {\n                    arrayCultivate.push(element)\n                }\n                if (GasFind) {\n                    arrayGAS.push(element)\n                }\n                // if (GluFind) {\n                //     arrayGlu.push(element)\n                // }\n                if (RadFind) {\n                    arrayRadiation.push(element)\n                }\n                if (BioFind === false && BloFind === false && CulFind === false && GasFind === false && RadFind === false) {\n                    arrayOther.push(element)\n                }\n            }\n            const arrayList = []\n            arrayList.push({\n                title: \"生化\",\n                array: arrayBiochemical,\n            })\n            arrayList.push({\n                title: \"血液\",\n                array: arrayBlood,\n            })\n            arrayList.push({\n                title: \"培養\",\n                array: arrayCultivate,\n            })\n            arrayList.push({\n                title: \"GAS\",\n                array: arrayGAS,\n            })\n            // arrayList.push({\n            //     title: \"Glu\",\n            //     array: arrayGlu,\n            // })\n            arrayList.push({\n                title: \"放射\",\n                array: arrayRadiation,\n            })\n            arrayList.push({\n                title: \"其他\",\n                array: arrayOther,\n            })\n            return arrayList\n        }\n        function TimeLine(interval, index) {\n            const lineStyle = {\n                width: '',\n                color: '',\n            }\n            if (interval === 0) {\n                if (index === 0 || (index % 24) === 0) {\n                    lineStyle.width = '2px';\n                    lineStyle.color = 'rgba(0,0,0,0.2)';\n                    return lineStyle;\n                } else if (index % 8 === 0) {\n                    lineStyle.width = '2px';\n                    lineStyle.color = 'rgba(0,0,0,0.2)';\n                    return lineStyle;\n                }\n                else {\n                    lineStyle.width = '1px';\n                    lineStyle.color = '#eeeeee';\n                    return lineStyle;\n                }\n            }\n            if (interval === 1) {\n                if (index === 0 || (index % 6) === 0) {\n                    lineStyle.width = '2px';\n                    lineStyle.color = 'rgba(0,0,0,0.2)';\n                    return lineStyle;\n                } else if (index % 2 === 0) {\n                    lineStyle.width = '2px';\n                    lineStyle.color = 'rgba(0,0,0,0.2)';\n                    return lineStyle;\n                }\n                else {\n                    lineStyle.width = '1px';\n                    lineStyle.color = '#eeeeee';\n                    return lineStyle;\n                }\n            }\n            if (interval === 2) {\n                if (index === 0 || (index % 3) === 0) {\n                    lineStyle.width = '2px';\n                    lineStyle.color = 'rgba(0,0,0,0.2)';\n                    return lineStyle;\n                } else {\n                    lineStyle.width = '2px';\n                    lineStyle.color = 'rgba(0,0,0,0.2)';\n                    return lineStyle;\n                }\n            }\n            if (interval === 3) {\n                lineStyle.width = '2px';\n                lineStyle.color = 'rgba(0,0,0,0.2)';\n                return lineStyle;\n            }\n        }\n        function TimeInterval(interval) {\n            if (interval === 0) {\n                return { interval: 24, grid: 1 }\n            }\n            if (interval === 1) {\n                return { interval: 18, grid: 4 }\n            }\n            if (interval === 2) {\n                return { interval: 21, grid: 8 }\n            }\n            return { interval: 14, grid: 24 }\n        }\n        const { chronic_state, caseinfo, PickerDate, title, openTimeline } = this.props\n        const { LabParse, RESSECT, SummaryParse } = this.state\n        if (LabParse === null || LabParse === undefined || LabParse.length === 0) {\n            return null\n        }\n        if (RESSECT === null || RESSECT === undefined || RESSECT.length === 0) {\n            return null\n        }\n        const data = LabFormat(RESSECT, LabParse)\n        const statestatus = TimeInterval(chronic_state)\n        const title_list = title.map((info, index) =>\n            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"40px\", border: \"1px solid rgba(238,238,238,1)\", borderCollapse: \"collapse\", backgroundColor: \"#eeeeee\" }} key={index}>\n                <t2>{info.title}</t2>\n            </div>\n        )\n        const cell_list = data.map(function (value, index, arr) {\n            const DataList = DataForTimer(value, chronic_state, PickerDate)\n            return DataList\n        })\n        const cellRender = cell_list.map(function (value, index, array) {\n            const valuecell = value.map(function (element, index, arr) {\n                const toolTipID = \"ChronicTableTootip\" + index\n                return (\n                    <Chronictablecell lineColor={openTimeline ? TimeLine(chronic_state, index) : null} key={toolTipID} element={element} caseinfo={caseinfo} summaryParse={SummaryParse}></Chronictablecell>\n                );\n            })\n            return valuecell\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\" }}>\n                <div style={{ display: \"grid\", gridTemplateRows: \"repeat(\" + title.length + \",1fr)\" }}>\n                    {title_list}\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + statestatus.interval + \",1fr)\", gridTemplateRows: \"repeat(6,1fr)\" }}>\n                    {cellRender}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Tableonchronic\n","import React, { Component } from 'react'\nimport Tableonchronic from './ChronicTable'\n\nclass Chroniclab extends Component {\n    render() {\n        const { title, caseinfo, select_interval, PickerDate } = this.props\n        const item_title = [{ title: \"生化\" }, { title: \"血液\" }, { title: \"培養\" }, { title: \"GAS\" }, { title: \"放射\" }, { title: \"其他\" }]\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                {/* 樣式修改issue10 */}\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t2>\n                </div>\n                <Tableonchronic openTimeline={true} title={item_title} caseinfo={caseinfo} chronic_state={select_interval} PickerDate={PickerDate}></Tableonchronic>\n            </div>\n        );\n    }\n}\n\nexport default Chroniclab\n","import React, { Component } from 'react'\nimport rtlogo from '../../Image/svg/RT.svg'\nimport { Tooltip } from 'antd'\nimport moment from 'moment'\n\nclass Chronicrttablecell extends Component {\n    ToolTipRender() {\n        const { cellelement } = this.props\n        const startTime = moment(cellelement.startTime).format(\"MM/DD HH:mm\")\n        const endTime = moment(cellelement.endTime).format(\"MM/DD HH:mm\")\n        const RTListRender = cellelement.element.map(function (info, index, arr) {\n            const time = moment(info.Date + info.Time, \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\")\n            const Mode = info.Mode\n            const Setting = info.Setting\n            return (\n                <div>\n                    <div>Time:{time}</div>\n                    <div>Mode:{Mode}</div>\n                    <div style={{ display: \"flex\" }}>\n                        <div>Setting:</div>\n                        <div>{Setting}</div>\n                    </div>\n                </div>\n            );\n        })\n\n        return (\n            <div>\n                <div>{startTime}~{endTime}</div>\n                {RTListRender}\n            </div>\n        );\n    }\n    render() {\n        function checkLineColor(lineColor) {\n            if(lineColor === null){\n                return '';\n            }else{\n                return `${lineColor.width} solid ${lineColor.color}`;\n            }\n        }\n        function changetext(text) {\n            if (text === 0) {\n                return '--'\n            }\n            return <img src={rtlogo} alt=\"rtlogo\" />\n        }\n        const { cellelement } = this.props\n        if (cellelement.length === 0) {\n            return <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center', border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse',borderLeft: checkLineColor(this.props.lineColor) }}>--</div>\n        }\n        return (\n            <Tooltip placement=\"right\" autoAdjustOverflow={true} title={this.ToolTipRender()} overlayStyle={{ maxWidth: \"800px\", background: \"white\" }}>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', cursor: \"pointer\", borderLeft: checkLineColor(this.props.lineColor) }}>\n                    {changetext(cellelement.length)}\n                </div>\n            </Tooltip >\n        );\n    }\n}\nexport default Chronicrttablecell","import React, { Component } from 'react'\nimport * as FilterReg from '../../Function/FiliterReg'\nimport moment from 'moment'\nimport X2JS from 'x2js';\nimport * as ApiProvider from '../../API/ApiProvider'\nimport Chronicrttablecell from './ChronicRTTableCell'\nimport * as QSPEList from '../../Resource/QSPE'\n\nconst TimeLine = (interval, index) => {\n    const lineStyle = {\n        width: '',\n        color: '',\n    }\n    if (interval === 0) {\n        if (index === 0 || (index % 24) === 0) {\n            lineStyle.width = '2px';\n            lineStyle.color = 'rgba(0,0,0,0.2)';\n            return lineStyle;\n        } else if (index % 8 === 0) {\n            lineStyle.width = '2px';\n            lineStyle.color = 'rgba(0,0,0,0.2)';\n            return lineStyle;\n        }\n        else {\n            lineStyle.width = '1px';\n            lineStyle.color = '#eeeeee';\n            return lineStyle;\n        }\n    }\n    if (interval === 1) {\n        if (index === 0 || (index % 6) === 0) {\n            lineStyle.width = '2px';\n            lineStyle.color = 'rgba(0,0,0,0.2)';\n            return lineStyle;\n        } else if (index % 2 === 0) {\n            lineStyle.width = '2px';\n            lineStyle.color = 'rgba(0,0,0,0.2)';\n            return lineStyle;\n        }\n        else {\n            lineStyle.width = '1px';\n            lineStyle.color = '#eeeeee';\n            return lineStyle;\n        }\n    }\n    if (interval === 2) {\n        if (index === 0 || (index % 3) === 0) {\n            lineStyle.width = '2px';\n            lineStyle.color = 'rgba(0,0,0,0.2)';\n            return lineStyle;\n        } else {\n            lineStyle.width = '2px';\n            lineStyle.color = 'rgba(0,0,0,0.2)';\n            return lineStyle;\n        }\n    }\n    if (interval === 3) {\n        lineStyle.width = '2px';\n        lineStyle.color = 'rgba(0,0,0,0.2)';\n        return lineStyle;\n    }\n}\n\nclass Chronicrttable extends Component {\n    state = {\n        QSPE: [],\n        preCID: null,\n        prePickerdate: null,\n        preInterval: null\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDate, select_interval } = this.props\n        this.setState({ preCID: caseinfo.CASEID, prePickerdate: PickerDate, preInterval: select_interval })\n        const timer = this.timerFormat(PickerDate, select_interval)\n        const start = moment(timer.StartTime).format(\"YYYYMMDDHHmm\")\n        const end = moment(timer.EndTime).format(\"YYYYMMDDHHmm\")\n        this.getQSPE(caseinfo.CASEID, start, end)\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDate, select_interval } = this.props\n        const { preCID, prePickerdate, preInterval } = this.state\n        if (caseinfo.CASEID !== preCID || PickerDate !== prePickerdate || preInterval !== select_interval) {\n            const { caseinfo, PickerDate } = this.props\n            this.setState({ preCID: caseinfo.CASEID, prePickerdate: PickerDate, preInterval: select_interval })\n            const timer = this.timerFormat(PickerDate, select_interval)\n            const start = moment(timer.StartTime).format(\"YYYYMMDDHHmm\")\n            const end = moment(timer.EndTime).format(\"YYYYMMDDHHmm\")\n            this.getQSPE(caseinfo.CASEID, start, end)\n        }\n\n    }\n    getQSPE(CID, st, et) {\n        const xm2 = new X2JS()\n        ApiProvider.getQSPE(CID, st, et)\n            .then(data => {\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                if (Array.isArray(parsedata)) {\n                    this.setState({ QSPE: parsedata })\n                }\n                else {\n                    this.setState({ QSPE: [parsedata] })\n                }\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        // this.setState({ QSPE: QSPEList.data })\n    }\n\n    timerFormat(PickerDate, Interval) {\n        const EndTime = PickerDate + (31 * 60 * 60 * 1000)\n        if (Interval === 0) {\n            return {\n                StartTime: EndTime - (24 * 60 * 60 * 1000),\n                EndTime: EndTime,\n                Interval: 24,\n                grid: 1\n            }\n        }\n        if (Interval === 1) {\n            return {\n                StartTime: EndTime - (3 * 24 * 60 * 60 * 1000),\n                EndTime: EndTime,\n                Interval: 18,\n                grid: 4\n            }\n\n        }\n        if (Interval === 2) {\n            return {\n                StartTime: EndTime - (7 * 24 * 60 * 60 * 1000),\n                EndTime: EndTime,\n                Interval: 21,\n                grid: 8\n            }\n\n        }\n        return {\n            StartTime: EndTime - (14 * 24 * 60 * 60 * 1000),\n            EndTime: EndTime,\n            Interval: 14,\n            grid: 24\n        }\n    }\n\n\n\n    table_content() {\n        function formatDataList(startTime, interval, list, grid) {\n            var timerList = []\n            for (let index = 0; index < interval; index++) {\n                const start = startTime + (index * grid * 60 * 60 * 1000)\n                const end = startTime + ((index + 1) * grid * 60 * 60 * 1000)\n                const listFilter = list.filter(function (info, index, arr) {\n                    const time = moment(info.Date.toString() + info.Time.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    return start <= time && time < end\n                })\n                timerList.push({\n                    length: listFilter.length,\n                    element: listFilter,\n                    startTime: start,\n                    endTime: end\n                })\n            }\n            return timerList\n        }\n\n        const { select_interval, PickerDate } = this.props\n        const QSPE = this.state.QSPE\n        const dataList = FilterReg.QSPERegList(QSPE)\n        if (dataList === null || dataList === undefined || dataList.length === 0) {\n            return null\n        }\n        const timer = this.timerFormat(PickerDate, select_interval)\n        const calldata = formatDataList(timer.StartTime, timer.Interval, dataList, timer.grid)\n        const cellRender = calldata.map(function (value, index, arr) {\n            return (\n                <Chronicrttablecell lineColor={TimeLine(select_interval, index)} key={index} cellelement={value}></Chronicrttablecell>\n            );\n        })\n        return cellRender\n    }\n    render() {\n        const { select_interval, PickerDate } = this.props\n        const timer = this.timerFormat(PickerDate, select_interval)\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\", height: \"40px\" }}>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", background: \"rgba(59, 151, 255,.4)\" }}>\n                    <t2>呼吸治療設定</t2>\n                </div>\n                {/* <div style={{ display: \"flex\", paddingLeft: \"16px\", alignItems: \"center\" }}>\n                    <t2>呼吸治療設定</t2>\n                </div> */}\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + timer.Interval + \",1fr)\" }}>\n                    {this.table_content()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chronicrttable\n","import React, { Component } from 'react'\nimport Chronicrttable from './ChronicRTTable'\n\nclass Chronicrt extends Component {\n    render() {\n        const {caseinfo, select_interval, PickerDate } = this.props\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <Chronicrttable PickerDate={PickerDate} title={{ title: \"RT\" }} caseinfo={caseinfo} select_interval={select_interval}></Chronicrttable>\n            </div>\n        );\n    }\n}\n\nexport default Chronicrt","import React, { Component } from 'react'\nimport './ChronicOrderTable.scss'\nimport moment from 'moment'\nimport { Tooltip } from 'antd'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport * as UDOR from '../../Resource/UDORDER0'\n\nclass Chronicordertable extends Component {\n    state = {\n        UDORDER: [],\n        whiteBlackListParser: [],\n        tpnParsers: [],\n        preHID: null,\n        preCID: null\n    }\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        this.setState({ preHID: HID, preCID: CID })\n        this.getUDORDER(HID, CID)\n\n    }\n    componentDidUpdate() {\n        const { caseinfo } = this.props\n        const { preHID, preCID } = this.state\n        const HID = caseinfo.HISID\n        const CID = caseinfo.CASEID\n        if (preHID !== HID || preCID !== CID) {\n            this.setState({ preHID: HID, preCID: CID })\n            this.getUDORDER(HID, CID)\n        }\n    }\n    getUDORDER(HID, CID) {\n        ApiGithub.getGitHubJson(\"WhiteBlackList.json\")\n            .then(data => {\n                let parser = data.data;\n                this.setState({ whiteBlackListParser: parser })\n            })\n            .catch(err => { console.log(err) })\n        ApiGithub.getGitHubJson(\"TpnOrder.json\")\n            .then(data => {\n                let parser = data.data\n                this.setState({ tpnParsers: parser })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                this.setState({ UDORDER: data.data })\n                //this.setState({ UDORDER: fakeData })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        // this.setState({ UDORDER: UDOR.data })\n    }\n    // 0:一天 1:三天 2:一週 3:兩週\n    switch_state() {\n        const { chronic_state } = this.props\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 21\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    select_parser = (input, parser) => {\n        if (parser === undefined) return undefined;\n        return parser.find(x =>\n            input.match(x.parser_name)\n        )\n    }\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let excludeBlackListResult = [];\n        const UDGNAME_condition = mappings.find(item => item.key === \"UDGNAME\");\n        const UDRPNAME_condition = mappings.find(item => item.key === \"UDRPNAME\");\n        if (inputs === undefined) return []\n        inputs.forEach(input => {\n            const UDGNAME_re = new RegExp(UDGNAME_condition.regex_str, UDGNAME_condition.regex_flags)\n            const UDGNAME_match = input.UDGNAME.match(UDGNAME_re)\n\n            const UDRPNAME_re = new RegExp(UDRPNAME_condition.regex_str, UDRPNAME_condition.regex_flags)\n            const UDRPNAME_match = input.UDRPNAME.match(UDRPNAME_re)\n\n            if (UDGNAME_match === null || UDRPNAME_match === null) {\n                excludeBlackListResult.push(input);\n            }\n        });\n\n        return excludeBlackListResult;\n    }\n    celltable() {\n        function changegridnumber(key) {\n            switch (key) {\n                case 0:\n                    return 24\n                case 1:\n                    return 18\n                case 2:\n                    return 21\n                case 3:\n                    return 14\n                default:\n                    break;\n            }\n        }\n        const { chronic_state, openTimeLine } = this.props\n\n        function TimeLine(interval, index) {\n            if (interval === 0) {\n                if (index === 0 || (index % 24) === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                } else if (index % 8 === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                }\n                else {\n                    return '1px #eeeeee solid';\n                }\n            }\n            if (interval === 1) {\n                if (index === 0 || (index % 6) === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                } else if (index % 2 === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                }\n                else {\n                    return '1px #eeeeee solid';\n                }\n            }\n            if (interval === 2) {\n\n                if (index === 0 || (index % 3) === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                } else {\n                    return '2px rgba(0,0,0,0.2) solid';\n                }\n            }\n            if (interval === 3) {\n                return '2px rgba(0,0,0,0.2) solid';\n            }\n        }\n        function checkLineColor(openTimeLine, chronic_state, index) {\n            if (openTimeLine) {\n                return TimeLine(chronic_state, index);\n            }\n        }\n        const number = changegridnumber(chronic_state)\n        var arr = []\n        for (let index = 0; index < number; index++) {\n            arr.push(\n                <div key={index} className='cell' style={{ borderLeft: checkLineColor(openTimeLine, chronic_state, index) }}></div>\n            )\n\n        }\n        return arr\n    }\n    render() {\n        function changegridstyle(key) {\n            switch (key) {\n                case 0:\n                    return 'ordertableoneday'\n                case 1:\n                    return 'ordertablethirdday'\n                case 2:\n                    return 'ordertableoneweek'\n                case 3:\n                    return 'ordertabletwoweek'\n                default:\n                    return null\n            }\n        }\n        function ListData(UDORDER0, interval, pickerdate) {\n\n            function formatTimer(pickerdate, interval) {\n                const endTime = pickerdate + (31 * 60 * 60 * 1000)\n                if (interval === 0) {\n                    return {\n                        startTime: endTime - (24 * 60 * 60 * 1000),\n                        endTime: endTime\n                    }\n                }\n                if (interval === 1) {\n                    return {\n                        startTime: endTime - (3 * 24 * 60 * 60 * 1000),\n                        endTime: endTime\n                    }\n                }\n                if (interval === 2) {\n                    return {\n                        startTime: endTime - (7 * 24 * 60 * 60 * 1000),\n                        endTime: endTime\n                    }\n                }\n                return {\n                    startTime: endTime - (14 * 24 * 60 * 60 * 1000),\n                    endTime: endTime\n                }\n            }\n            function formatWidth(startTime, endTime, elementStart, elementEnd) {\n                function formatStart(elementStart, startTime) {\n                    if (elementStart <= startTime) {\n                        return startTime\n                    }\n                    return elementStart\n                }\n                function formatEnd(elementEnd, endTime) {\n                    if (elementEnd <= endTime) {\n                        return elementEnd\n                    }\n                    return endTime\n                }\n                const width = document.body.clientWidth - 220\n                const widthRate = width / (endTime - startTime)\n                const start = formatStart(elementStart, startTime)\n                const end = formatEnd(elementEnd, endTime)\n                return (end - start) * widthRate\n            }\n            function formatStartPosition(startTime, endTime, elementStart) {\n                const width = document.body.clientWidth - 220\n                if (elementStart <= startTime) {\n                    return 0\n                }\n                const widthRate = width / (endTime - startTime)\n                return ((elementStart - startTime) * widthRate)\n            }\n            function formatUDORDER0(UDORDER0, timer) {\n                var arraylist = []\n                const startTime = timer.startTime\n                const endTime = timer.endTime\n                for (let index = 0; index < UDORDER0.length; index++) {\n                    const element = UDORDER0[index];\n                    const elementStart = moment(element.UDBGNDT.toString(), \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n                    const elementEnd = moment(element.UDENDDT.toString(), \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n                    if (endTime < elementStart || elementEnd < startTime) {\n                        continue\n                    }\n                    const shift = formatStartPosition(startTime, endTime, elementStart)\n                    const width = formatWidth(startTime, endTime, elementStart, elementEnd)\n                    arraylist.push({\n                        \"width\": width,\n                        \"shift\": shift,\n                        \"element\": element\n                    })\n                }\n                return arraylist\n            }\n            const timer = formatTimer(pickerdate, interval)\n            if (UDORDER0 === undefined || UDORDER0 === null) {\n                return []\n            }\n            if (UDORDER0.length === 0) {\n                return []\n            }\n            const formatUDORDER = formatUDORDER0(UDORDER0, timer)\n            return formatUDORDER\n        }\n\n        const { chronic_state, PickerDate, source } = this.props\n\n\n        const rawData = this.state.UDORDER\n\n        //filter TPN items for infection page\n        let filteredRawData = []\n        if (source === \"infection\") {\n            const selected_tpn_parser = this.select_parser(\"TPN Order\", this.state.tpnParsers)\n            if (selected_tpn_parser !== undefined) {\n                rawData.forEach(item => {\n                    const found = item.UDDRGNAM.match(RegExp(selected_tpn_parser.apply_condition.name, selected_tpn_parser.apply_condition.name_regex_flags))\n                    if (found !== null && found !== \"\") filteredRawData.push(item)\n                })\n            }\n        } else {\n            filteredRawData = rawData\n        }\n\n        let filteredData = [];\n        const selected_white_black_list_parser = this.select_parser(\"Black List\", this.state.whiteBlackListParser)\n        if (selected_white_black_list_parser !== undefined) {\n            filteredData = this.parse(filteredRawData, selected_white_black_list_parser)\n        }\n\n        const datalist = ListData(filteredData, chronic_state, PickerDate)\n        // const datalist = ListData(UDORDER0, chronic_state, PickerDate)\n\n        const Tablecell = datalist.map(function (value, index, array) {\n            function formatString(value) {\n\n                if (value === undefined || value === null) {\n                    return \"--\"\n                }\n                return value.toString().trim()\n            }\n\n            function ToolTipRender(value) {\n                function statusFormat(Status) {\n                    if (Status === 30){\n                        return \"使用中\"\n                    }\n                    if (Status === 60){\n                        return \"已完成\"\n                    }\n                    if (Status === 80){\n                        return \"已取消\"\n                    }\n                    return Status\n                }\n                const startTimeFormat = moment(value.element.UDBGNDT, \"YYYY-MM-DD-HH:mm:ss.000000\").format('MM/DD HH:mm')\n                const endTimeFormat = moment(value.element.UDENDDT, \"YYYY-MM-DD-HH:mm:ss.000000\").format('MM/DD HH:mm')\n                const status = statusFormat(Number(value.element.UDSTATUS))\n                return (\n                    <div>\n                        <div>時間起迄: {`${startTimeFormat} - ${endTimeFormat}`}</div>\n                        <div>用法: {`${value.element.UDDOSAGE} - ${value.element.UDDUNIT} - ${value.element.UDFREQN} - ${value.element.UDROUTE}`}</div>\n                        <div>狀態: {status}</div>\n                    </div>\n                );\n            }\n\n            return (\n                <div key={index} style={{ padding: \"2px 0px\", paddingLeft: value.shift + 2 + \"px\", cursor: \"pointer\" }}>\n                    <Tooltip placement=\"bottom\" autoAdjustOverflow={true} title={ToolTipRender(value)} overlayStyle={{ maxWidth: \"800px\" }}>\n                        <div style={{ width: value.width + \"px\", height: \"20px\", backgroundColor: \"#3B97E1\", color: \"black\", padding: \"0px 5px\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\", fontWeight: \"600\" }}>{formatString(value.element.UDGNAME)}</div>\n                    </Tooltip>\n                </div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\", position: 'relative' }}>\n                <div style={{ background: \"#eeeeee\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <t2>甘特圖</t2>\n                </div>\n                <div className={changegridstyle(chronic_state)} style={{ height: Tablecell.length ? Tablecell.length * 30 : 40 + \"px\" }}>{this.celltable()}</div>\n                <div style={{ position: 'absolute', left: 140, minHeight: \"40px\", overflowX: \"hidden\" }}>\n                    {Tablecell}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chronicordertable\n","import React, { Component } from 'react'\nimport Chronicordertable from './ChronicOrderTable'\n// import * as ApiGithub from '../../API/ApiGithub'\n\nclass Orderonchronic extends Component {\n    render() {\n        const { caseinfo, select_interval, UDORDER0,PickerDate, title } = this.props \n        const item_title = [{ title: \"醫藥囑\" }]\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t2>\n                </div>\n                <Chronicordertable openTimeLine={true} title={item_title} caseinfo={caseinfo} chronic_state={select_interval} UDORDER0={UDORDER0} PickerDate={PickerDate} source={this.props.source}></Chronicordertable>\n            </div>\n        );\n    }\n}\n\nexport default Orderonchronic","export const data = {\n    \"outmsg\": {\n      \"resconts\": {\n        \"rescont\": [\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200306\",\n            \"rec_tim\": \"0034\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"3.288\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200305\",\n            \"rec_tim\": \"0023\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"3.270\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200304\",\n            \"rec_tim\": \"0028\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"3.200\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200303\",\n            \"rec_tim\": \"0045\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value\": \"46\",\n            \"value2\": \"3.204\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200302\",\n            \"rec_tim\": \"0047\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"3.240\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200301\",\n            \"rec_tim\": \"0123\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"3.220\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200229\",\n            \"rec_tim\": \"0040\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"3.190\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200228\",\n            \"rec_tim\": \"0129\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"3.030\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200227\",\n            \"rec_tim\": \"0123\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"3.092\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200226\",\n            \"rec_tim\": \"0200\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"3.155\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200225\",\n            \"rec_tim\": \"0141\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value\": \"46\",\n            \"value2\": \"3.050\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200224\",\n            \"rec_tim\": \"0045\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.976\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200223\",\n            \"rec_tim\": \"0124\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.954\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200222\",\n            \"rec_tim\": \"0035\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.948\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200221\",\n            \"rec_tim\": \"0030\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.885\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200220\",\n            \"rec_tim\": \"0223\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.844\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200219\",\n            \"rec_tim\": \"0128\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.788\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200218\",\n            \"rec_tim\": \"0424\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value\": \"44.3\",\n            \"value2\": \"2.697\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200217\",\n            \"rec_tim\": \"0000\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.644\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200216\",\n            \"rec_tim\": \"0005\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.624\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200215\",\n            \"rec_tim\": \"0014\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.595\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200214\",\n            \"rec_tim\": \"0114\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.622\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200213\",\n            \"rec_tim\": \"0144\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.610\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200212\",\n            \"rec_tim\": \"0022\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.580\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200211\",\n            \"rec_tim\": \"0128\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value\": \"46.3\",\n            \"value2\": \"2.598\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200210\",\n            \"rec_tim\": \"0125\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.600\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200209\",\n            \"rec_tim\": \"0013\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.648\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200208\",\n            \"rec_tim\": \"0139\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.600\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200207\",\n            \"rec_tim\": \"0117\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.570\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200206\",\n            \"rec_tim\": \"0136\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.525\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200205\",\n            \"rec_tim\": \"0121\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.470\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200204\",\n            \"rec_tim\": \"0115\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value\": \"44\",\n            \"value2\": \"2.370\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200203\",\n            \"rec_tim\": \"0112\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.347\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200202\",\n            \"rec_tim\": \"0133\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.370\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200201\",\n            \"rec_tim\": \"0104\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.346\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200131\",\n            \"rec_tim\": \"0028\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.368\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200130\",\n            \"rec_tim\": \"0018\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.314\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200129\",\n            \"rec_tim\": \"0027\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.285\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200128\",\n            \"rec_tim\": \"0030\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value\": \"44\",\n            \"value2\": \"2.304\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200127\",\n            \"rec_tim\": \"0619\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.340\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200126\",\n            \"rec_tim\": \"0006\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.344\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200125\",\n            \"rec_tim\": \"0120\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.350\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200124\",\n            \"rec_tim\": \"0139\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.360\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200123\",\n            \"rec_tim\": \"0212\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.295\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200122\",\n            \"rec_tim\": \"0350\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.326\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200121\",\n            \"rec_tim\": \"0310\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value\": \"44\",\n            \"value2\": \"2.272\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200120\",\n            \"rec_tim\": \"0334\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.268\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200119\",\n            \"rec_tim\": \"0101\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.260\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200118\",\n            \"rec_tim\": \"0354\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.231\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200117\",\n            \"rec_tim\": \"0018\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.214\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200116\",\n            \"rec_tim\": \"0106\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.207\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200115\",\n            \"rec_tim\": \"0237\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.139\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200114\",\n            \"rec_tim\": \"0043\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value\": \"42.6\",\n            \"value2\": \"2.112\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200113\",\n            \"rec_tim\": \"0440\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.129\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200112\",\n            \"rec_tim\": \"0410\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.063\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200111\",\n            \"rec_tim\": \"0122\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.995\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200110\",\n            \"rec_tim\": \"0149\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.013\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200109\",\n            \"rec_tim\": \"0119\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.937\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200108\",\n            \"rec_tim\": \"0118\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.949\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200107\",\n            \"rec_tim\": \"0130\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value\": \"41.9\",\n            \"value2\": \"1.985\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200106\",\n            \"rec_tim\": \"0240\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"2.000\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200104\",\n            \"rec_tim\": \"0046\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.917\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200103\",\n            \"rec_tim\": \"0146\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.937\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200102\",\n            \"rec_tim\": \"0315\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.897\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200101\",\n            \"rec_tim\": \"0405\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.918\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191231\",\n            \"rec_tim\": \"0130\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value\": \"39.2\",\n            \"value2\": \"1.917\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191230\",\n            \"rec_tim\": \"0040\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.883\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191229\",\n            \"rec_tim\": \"0126\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.845\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191228\",\n            \"rec_tim\": \"0402\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.784\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191227\",\n            \"rec_tim\": \"0137\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.894\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191226\",\n            \"rec_tim\": \"0201\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.884\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191225\",\n            \"rec_tim\": \"0042\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.927\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191224\",\n            \"rec_tim\": \"0038\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value\": \"35.5\",\n            \"value2\": \"1.827\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191223\",\n            \"rec_tim\": \"0239\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.887\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191222\",\n            \"rec_tim\": \"0153\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.947\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191221\",\n            \"rec_tim\": \"0031\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.917\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191220\",\n            \"rec_tim\": \"0116\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.887\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191219\",\n            \"rec_tim\": \"0122\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.887\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191218\",\n            \"rec_tim\": \"0117\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.947\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191217\",\n            \"rec_tim\": \"0117\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value\": \"35\",\n            \"value2\": \"1.917\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191216\",\n            \"rec_tim\": \"0225\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.897\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191212\",\n            \"rec_tim\": \"0144\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.697\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191210\",\n            \"rec_tim\": \"0133\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value\": \"34\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191209\",\n            \"rec_tim\": \"0127\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.697\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191205\",\n            \"rec_tim\": \"0219\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.527\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191204\",\n            \"rec_tim\": \"0651\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value2\": \"1.537\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191203\",\n            \"rec_tim\": \"1346\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"TW\",\n            \"value\": \"34\",\n            \"value2\": \"1.6\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200303\",\n            \"rec_tim\": \"0922\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"PER\",\n            \"value\": \"頭圍\",\n            \"value2\": \"33.5\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200225\",\n            \"rec_tim\": \"0843\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"PER\",\n            \"value\": \"頭圍\",\n            \"value2\": \"33.1\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200218\",\n            \"rec_tim\": \"1521\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"PER\",\n            \"value\": \"頭圍\",\n            \"value2\": \"32.4\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200211\",\n            \"rec_tim\": \"0900\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"PER\",\n            \"value\": \"頭圍\",\n            \"value2\": \"33\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200204\",\n            \"rec_tim\": \"0947\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"PER\",\n            \"value\": \"頭圍\",\n            \"value2\": \"31.8\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200128\",\n            \"rec_tim\": \"0924\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"PER\",\n            \"value\": \"頭圍\",\n            \"value2\": \"31.5\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200121\",\n            \"rec_tim\": \"1027\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"PER\",\n            \"value\": \"頭圍\",\n            \"value2\": \"30.6\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200114\",\n            \"rec_tim\": \"1432\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"PER\",\n            \"value\": \"頭圍\",\n            \"value2\": \"30.5\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20200107\",\n            \"rec_tim\": \"0956\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"PER\",\n            \"value\": \"頭圍\",\n            \"value2\": \"30.8\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191231\",\n            \"rec_tim\": \"0900\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"PER\",\n            \"value\": \"頭圍\",\n            \"value2\": \"31\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191224\",\n            \"rec_tim\": \"0930\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"PER\",\n            \"value\": \"頭圍\",\n            \"value2\": \"29.5\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191217\",\n            \"rec_tim\": \"0957\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"PER\",\n            \"value\": \"頭圍\",\n            \"value2\": \"29.5\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191210\",\n            \"rec_tim\": \"1306\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"PER\",\n            \"value\": \"頭圍\",\n            \"value2\": \"29.3\"\n          },\n          {\n            \"-xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"-xsi:type\": \"nnisRes\",\n            \"rec_dat\": \"20191203\",\n            \"rec_tim\": \"1011\",\n            \"ser_num\": \"25430982\",\n            \"type\": \"PER\",\n            \"value\": \"頭圍\",\n            \"value2\": \"27.2\"\n          }\n        ]\n      },\n      \"ret\": \"0\",\n      \"retMsg\": \"Success\"\n    }\n  }","import React, { Component } from 'react'\nimport './ChronicWeightTable.scss'\nimport moment from 'moment'\nimport * as QTWPER from '../../Resource/QTWPER'\n// import * as ApiProvider from '../../API/ApiProvider'\n\nclass Chronicweighttable extends Component {\n    // 0:一天 1:三天 2:一週 3:兩週\n    state = { QTWPER: null }\n    componentDidMount() {\n        const { caseinfo } = this.props\n        const weight = caseinfo.WEIGHT\n        this.setState({ QTWPER: weight })\n        // this.setState({ QTWPER: QTWPER.data.outmsg.resconts.rescont })\n    }\n\n    switch_state() {\n        const { chronic_state } = this.props\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 21\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    celltable() {\n        function changegridnumber(key) {\n            switch (key) {\n                case 0:\n                    return 24\n                case 1:\n                    return 18\n                case 2:\n                    return 21\n                case 3:\n                    return 14\n                default:\n                    break;\n            }\n        }\n        const { chronic_state, openTimeLine } = this.props\n        const number = changegridnumber(chronic_state);\n        function TimeLine(interval, index) {\n            if (interval === 0) {\n                if (index === 0 || (index % 24) === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                } else if (index % 8 === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                }\n                else {\n                    return '1px rgba(220,220,220,1) solid';\n                }\n            }\n            if (interval === 1) {\n                if (index === 0 || (index % 6) === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                } else if (index % 2 === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                }\n                else {\n                    return '1px rgba(220,220,220,1) solid';\n                }\n            }\n            if (interval === 2) {\n\n                if (index === 0 || (index % 3) === 0) {\n                    return '2px rgba(0,0,0,0.2) solid';\n                } else {\n                    return '2px rgba(0,0,0,0.2) solid';\n                }\n            }\n            if (interval === 3) {\n                return '2px rgba(0,0,0,0.2) solid';\n            }\n        }\n        function checkLineColor(openTimeLine, chronic_state, index) {\n            if (openTimeLine) {\n                return TimeLine(chronic_state, index);\n            }\n        }\n        var arr = []\n        for (let index = 0; index < number; index++) {\n            arr.push(\n                <div key={index} className='cell' style={{ borderLeft: checkLineColor(openTimeLine, chronic_state, index) }}></div>\n            )\n\n        }\n        return arr\n    }\n    weightRectRender() {\n        function TimerFormat(interval, pickerdate) {\n            const endTime = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    startTime: endTime - (24 * 60 * 60 * 1000),\n                    endTime: endTime,\n                    interval: 24,\n                    grid: 1\n                }\n            }\n            if (interval === 1) {\n                return {\n                    startTime: endTime - (3 * 24 * 60 * 60 * 1000),\n                    endTime: endTime,\n                    interval: 18,\n                    grid: 4\n                }\n            }\n            if (interval === 2) {\n                return {\n                    startTime: endTime - (7 * 24 * 60 * 60 * 1000),\n                    endTime: endTime,\n                    interval: 21,\n                    grid: 8\n                }\n            }\n            return {\n                startTime: endTime - (14 * 24 * 60 * 60 * 1000),\n                endTime: endTime,\n                interval: 14,\n                grid: 24\n            }\n        }\n        const { chronic_state, caseinfo, PickerDate } = this.props\n        // const QTPWERList = caseinfo.WEIGHT\n        const QTPWERList = this.state.QTWPER\n        if (QTPWERList === undefined || QTPWERList === null) {\n            return null\n        }\n        const WeightList = QTPWERList.filter(function (info, index, arr) {\n            return info.type === \"TW\"\n        })\n\n        const timer = TimerFormat(chronic_state, PickerDate)\n        const width = document.body.clientWidth - 220\n        const widthRate = width / (timer.endTime - timer.startTime)\n        var WeightListFormat = []\n        const sortWeightList = WeightList.sort(function (a, b) {\n            const aTime = moment(a.rec_dat.toString() + a.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n            const bTime = moment(b.rec_dat.toString() + b.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n            return aTime > bTime ? 1 : -1;\n        });\n        var lastelement = null\n        for (let index = 0; index < sortWeightList.length; index++) {\n            const element = WeightList[index];\n            const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n            if (timer.startTime > elementTime) {\n                const elementValue = parseInt(Number(element.value2) * 1000)\n                lastelement = { Time: elementTime, Value: elementValue }\n            }\n            console.log(lastelement)\n            if (timer.startTime <= elementTime && elementTime <= timer.endTime) {\n                const elementValue = parseInt(Number(element.value2) * 1000)\n                WeightListFormat.push({\n                    Time: elementTime,\n                    Value: elementValue\n                })\n            }\n        }\n        console.log(WeightListFormat)\n        if (lastelement !== null) {\n            WeightListFormat.splice(0,0,lastelement)\n            lastelement = null\n        }\n        console.log(WeightListFormat)\n        const sortWeight = WeightListFormat.sort(function (a, b) {\n            return a.Time > b.Time ? 1 : -1;\n        });\n        var shift = 0\n        var elementWidthList = []\n        for (let index = 0; index < sortWeight.length; index++) {\n            const element = sortWeight[index];\n            if (index === 0) {\n                if (element.Time < timer.startTime) {\n                    shift = 0\n                }\n                else {\n                    shift = (element.Time - timer.startTime) * widthRate\n                }\n            }\n            if (sortWeight.length - 1 === index) {\n                const time1 = element.Time\n                const time2 = timer.endTime\n                const elementWidth = (time2 - time1) * widthRate\n                elementWidthList.push({\n                    Value: element.Value,\n                    width: elementWidth\n                })\n            }\n            else {\n                const time1 = sortWeight[index].Time\n                const time2 = sortWeight[index + 1].Time\n                const elementWidth = (time2 - time1) * widthRate\n                elementWidthList.push({\n                    Value: element.Value,\n                    width: elementWidth\n                })\n            }\n        }\n        return {\n            shift: shift,\n            elementWidthList: elementWidthList\n        }\n    }\n    render() {\n        const { chronic_state, caseinfo, PickerDate } = this.props\n        const weight = caseinfo.WEIGHT\n        console.log(caseinfo)\n        // const weight = this.state.QTWPER\n        if (weight === null) { return null }\n        function FormatEndTimeStamp(start, interval) {\n            if (interval === 0) {\n                return start - (24 * 60 * 60 * 1000)\n            }\n            if (interval === 1) {\n                return start - (3 * 24 * 60 * 60 * 1000)\n\n            }\n            if (interval === 2) {\n                return start - (7 * 24 * 60 * 60 * 1000)\n\n            }\n            if (interval === 3) {\n                return start - (14 * 24 * 60 * 60 * 1000)\n\n            }\n        }\n        const end = PickerDate + (31 * 60 * 60 * 1000)\n        const start = FormatEndTimeStamp(end, chronic_state)\n        const datafilter = weight.filter(function (value, index, arr) {\n            const timeString = value.rec_dat.toString() + value.rec_tim.toString()\n            const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n            return start < time && time < end\n        })\n        const datafilterTime = datafilter.map(function (value, index, arr) {\n            const timeString = value.rec_dat.toString() + value.rec_tim.toString()\n            const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n            return time\n        })\n        const diff = end - start\n        var widthArray = []\n        if (datafilter.length === 0) {\n            // const element = weight[0]\n            // widthArray.push({\n            //     width: 100,\n            //     weight: (element.value2) * 1000\n            // })\n        }\n        if (datafilter.length === 1) {\n            for (let index = 0; index < datafilter.length; index++) {\n                const element = datafilter[index];\n                const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                const width = parseInt(100 * (time - start) / diff)\n                widthArray.push({\n                    width: width,\n                    weight: Number(element.value2) * 1000\n                })\n            }\n        }\n        else {\n            for (let index = 0; index < datafilter.length - 1; index++) {\n                const element = datafilter[index];\n                if (index === 0) {\n                    const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                    const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                    const width = parseInt(100 * (time - start) / diff)\n                    widthArray.push({\n                        width: width,\n                        weight: Number(element.value2) * 1000\n                    })\n                }\n                else if (index === (datafilterTime.length - 1)) {\n                    const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                    const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                    const width = parseInt(100 * (end - time) / diff)\n                    widthArray.push({\n                        width: width,\n                        weight: Number(element.value2) * 1000\n                    })\n                }\n                else {\n                    const element2 = datafilter[index + 1]\n                    const timeString2 = element2.rec_dat.toString() + element2.rec_tim.toString()\n                    const time2 = moment(timeString2, \"YYYYMMDDHHmm\").valueOf()\n                    const timeString = element.rec_dat.toString() + element.rec_tim.toString()\n                    const time = moment(timeString, \"YYYYMMDDHHmm\").valueOf()\n                    const width = parseInt(100 * (time2 - time) / diff)\n                    widthArray.push({\n                        width: width,\n                        weight: Number(element.value2) * 1000\n                    })\n                }\n            }\n        }\n        function changegridstyle(key) {\n            switch (key) {\n                case 0:\n                    return 'chronicweighttableoneday'\n                case 1:\n                    return 'chronicweighttablethreeday'\n                case 2:\n                    return 'chronicweighttableoneweek'\n                case 3:\n                    return 'chronicweighttabletwoweek'\n                default:\n                    return null\n            }\n        }\n        const list = this.weightRectRender()\n        if (list === null || list === undefined) {\n            return null\n        }\n        const render = list.elementWidthList.map(function (value, index, arr) {\n            return (\n                <div key={index} style={{ border: \"1px black solid\", borderCollapse: \"collapse\", width: value.width + '%', height: \"20\", backgroundColor: \"#3B97E1\", color: \"white\", display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>{Math.round(value.Value)}g</div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\", position: 'relative' }}>\n                <div style={{ display: \"flex\", justifyContent: \"left\", alignItems: \"center\", background: \"rgba(59, 151, 255,.4)\", paddingLeft: \"10px\" }}>\n                    <t2>體重</t2>\n                </div>\n                <div className={changegridstyle(chronic_state)}>{this.celltable()}</div>\n                <div style={{ position: 'absolute', left: 140, paddingTop: \"15px\" }}>\n                    <div style={{ paddingLeft: list.shift + \"px\", display: \"flex\", width: 'calc(100vw - 220px)', overflow: \"hidden\" }}>\n                        {render}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chronicweighttable\n","import React, { Component } from 'react'\nimport Chronicweighttable from './ChronicWeightTable'\n\nclass Weightonchronic extends Component {\n    render() {\n        const { caseinfo, PickerDate, select_interval } = this.props\n        const item_title = [{ title: \"體重\" }] \n        return (\n            <div style={{ marginTop: \"15px\" }}>\n                <Chronicweighttable openTimeLine={true} PickerDate={PickerDate} title={item_title} caseinfo={caseinfo} chronic_state={select_interval}></Chronicweighttable>\n            </div>\n        );\n    }\n}\n\nexport default Weightonchronic","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport '../Patientview/CrossSectionView/Crosssectionvitalsignchart.scss'\n\nclass Vitalxaxis extends Component {\n    state = {\n        change: false,\n        viewwidth: window.innerWidth - 220\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n        window.addEventListener('resize', this.debounceWindowSize);\n    }\n    debounce(func, wait, immediate) {\n        var timeout;\n        return () => {\n            var context = this, args = arguments;\n            var later = function() {\n                timeout = null;\n                if (!immediate) func.apply(context, args);\n            };\n            var callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) func.apply(context, args);\n        };\n    }\n\n    debounceWindowSize = this.debounce(this.recalcWindowSize, 500);\n\n    componentWillUnmount(){\n        window.removeEventListener('resize', this.debounceWindowSize);\n    }\n\n    recalcWindowSize() {\n        this.setState({ viewwidth: window.innerWidth - 220 });\n    }\n\n    drawChart() {\n        function nowtime(time) {\n            return time + (7 * 60 * 60 * 1000)\n        }\n        function monthformat(month) {\n            return month + 1\n        }\n        function intervaldays(select_date, select_interval) {\n            switch (select_interval) {\n                //一天\n                case 0:\n                    return select_date - 86400000 * 1\n                //三天\n                case 1:\n                    return select_date - 86400000 * 3\n                //一週\n                case 2:\n                    return select_date - 86400000 * 7\n                //兩週\n                case 3:\n                    return select_date - 86400000 * 14\n                default:\n                    return null\n            }\n        }\n\n        const { id_key, svg_id,select_interval, select_date } = this.props\n        // const viewwidth = window.screen.availWidth - 220\n        //選取時間(0點)\n        const select_date_zero = new Date(new Date(select_date).getFullYear() + ',' + monthformat(new Date(select_date).getMonth()) + ',' + new Date(select_date).getDate()).getTime()\n        //選取時間(7點)\n        const select_time_format = nowtime(select_date_zero)\n        //select_intercal:0一天 1三天 2兩週\n        const Start_time = intervaldays(select_time_format, select_interval)\n        var xaxis = []\n        if (select_interval === 0) {\n            for (let index = 0; index < 24; index++) {\n                const time = Start_time + (30 * 60 * 1000) + (index * 60 * 60 * 1000)\n                xaxis.push(time)\n            }\n        }\n        if (select_interval === 1) {\n            for (let index = 0; index < 21; index++) {\n                const time = Start_time + (2 * 60 * 60 * 1000) + (index * 60 * 60 * 1000 * 4)\n                xaxis.push(time)\n            }\n        }\n\n        if (select_interval === 2) {\n            for (let index = 0; index < 21; index++) {\n                const time = Start_time + (4 * 60 * 60 * 1000) + (index * 60 * 60 * 1000 * 8)\n                xaxis.push(time)\n            }\n        }\n\n        // if (select_interval === 3) {\n        //     for (let index = 0; index < 14; index++) {\n        //         const time = Start_time + (12 * 60 * 60 * 1000) + (index * 60 * 60 * 1000 * 24)\n        //         xaxis.push(time)\n        //     }\n        // }\n        var x = d3.scaleLinear()\n            .domain([Start_time, select_time_format])\n            .range([0, this.state.viewwidth])\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            // .attr(\"viewbox\", [0, 0, viewwidth + 60, 25])\n            .style(\"width\", this.state.viewwidth + 100)\n            .style(\"height\", 25)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 15 + \")\");\n\n        var formatHour = d3.timeFormat(\"%H\")\n        var formatday = d3.timeFormat(\"%d\")\n        function multiFormat(date) {\n            if (select_interval === 0) {\n                return formatHour(date) + '~' + formatHour(date + (60 * 60 * 1000))\n            }\n            if (select_interval === 1) {\n                return formatHour(date - (2 * 60 * 60 * 1000)) + '~' + formatHour(date + (2 * 60 * 60 * 1000))\n            }\n            if (select_interval === 2) {\n                return formatHour(date - (4 * 60 * 60 * 1000)) + '~' + formatHour(date + (4 * 60 * 60 * 1000))\n            }\n            if (select_interval === 3) {\n                return monthformat(new Date(date).getMonth()) + '/' + formatday(date)\n            }\n            return formatHour(date)\n        }\n        var xAxis = d3.axisTop(x)\n            .tickValues(xaxis)\n            .tickSize(0, 0)\n            .tickPadding(5)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .attr(\"class\", \"axis\");\n\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default Vitalxaxis;","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport '../Patientview/CrossSectionView/Crosssectionvitalsignchart.scss'\nimport { yyyymmddformat } from '../Function/Timeformat'\nimport moment from 'moment';\n\nclass Vitalxaxisbot extends Component {\n    state = {\n        change: false,\n        viewwidth: window.innerWidth - 221\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n        window.addEventListener('resize', this.debounceWindowSize);\n    }\n\n    debounce(func, wait, immediate) {\n        var timeout;\n        return () => {\n            var context = this, args = arguments;\n            var later = function () {\n                timeout = null;\n                if (!immediate) func.apply(context, args);\n            };\n            var callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) func.apply(context, args);\n        };\n    }\n\n    debounceWindowSize = this.debounce(this.recalcWindowSize, 500);\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.debounceWindowSize);\n    }\n\n    recalcWindowSize() {\n        this.setState({ viewwidth: window.innerWidth - 221 });\n    }\n\n    drawChart() {\n        function intervaldays(select_date, select_interval) {\n            switch (select_interval) {\n                //一天\n                case 0:\n                    return moment(select_date).add(7, 'hours').valueOf();\n                //三天\n                case 1:\n                    return moment(select_date).subtract(2, 'days').add(7, 'hours').valueOf();\n                //一週\n                case 2:\n                    return moment(select_date).subtract(6, 'days').add(7, 'hours').valueOf();\n                //兩週\n                case 3:\n                    return moment(select_date).subtract(13, 'days').add(7, 'hours').valueOf();\n                default:\n                    return null\n            }\n        }\n\n        const { id_key, svg_id, select_interval, select_date } = this.props;\n        const Start_time = intervaldays(select_date, select_interval)\n        const End_time = moment(select_date).add(1, 'day').startOf('day').add(7, 'hours').valueOf();\n        var xaxis = []\n        if (select_interval === 0) {\n            xaxis.push(Start_time);\n            const time = moment(Start_time).add(1, 'day').startOf('day').valueOf();\n            xaxis.push(time)\n        }\n        if (select_interval === 1) {\n            xaxis.push(Start_time);\n            for (let index = 1; index < 4; index++) {\n                const time = moment(Start_time).add(index, 'days').startOf('day').valueOf();\n                xaxis.push(time)\n            }\n        }\n\n        if (select_interval === 2) {\n            xaxis.push(Start_time);\n            for (let index = 1; index < 8; index++) {\n                const time = moment(Start_time).add(index, 'days').startOf('day').valueOf();\n                xaxis.push(time)\n            }\n        }\n\n        if (select_interval === 3) {\n            xaxis.push(Start_time);\n            for (let index = 1; index < 7; index++) {\n                const time = moment(Start_time).add(2*index, 'days').startOf('day').valueOf();\n                xaxis.push(time)\n            }\n        }\n        var x = d3.scaleLinear()\n            .domain([Start_time, End_time])\n            .range([0, this.state.viewwidth - 1])\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            // .attr(\"viewbox\", [0, 0, viewwidth + 60, 25])\n            .style(\"width\", this.state.viewwidth)\n            .style(\"height\", 25)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 14 + \",\" + -9 + \")\");\n\n\n        function multiFormat(date) {\n            return moment(date).format(\"MM/DD\")\n        }\n\n\n        var xAxis = d3.axisBottom(x)\n            .tickValues(xaxis)\n            .tickSize(0, 0)\n            .tickPadding(10)\n            .tickFormat(function (d) { return multiFormat(d); });\n\n\n        svg.append(\"g\")\n            .call(xAxis)\n            .style(\"font-size\", \"11px\")\n            .attr(\"class\", \"axis\");\n\n    }\n\n    render() {\n        const { id_key } = this.props\n        return (\n            <div id={id_key}></div>\n        );\n    }\n}\n\nexport default Vitalxaxisbot;\n","import React, { Component } from 'react'\nimport { Select, Button } from 'antd';\n// import Chronicvitalchart from './Chronic_vital_chart'\nimport { statecolor } from '../../Function/Wardstate'\nimport { formatxArrayhalf, formatendtime } from '../../Function/Timeformat'\nimport './Chronic_vital.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport Crosssectionvitalsignchart from '../CrossSectionView/Crossectionvitalsignchart'\nimport '../../Wardview/Wardchart.scss'\n\nconst Interval_grid = (number) => {\n    switch (number) {\n        case 0:\n            return 24\n        case 1:\n            return 18\n        case 2:\n            return 21\n        case 3:\n            return 14\n        default:\n            return null\n    }\n}\n\n\nconst timeCheck = (interval, pickerDate) => {\n    // 選的日期7:00距離目前時間差距\n    const duration = moment.duration(moment().diff(moment(pickerDate).startOf('day').hour(7)));\n    // \b如果選擇的日期在今天之前，那就直接選擇最後一格\n    if (moment(pickerDate).isBefore(moment().startOf('day'))) {\n        return Interval_grid(interval);\n    } else if (interval === 0) { // day 目前距離幾個小時就幾格\n        const hours = Math.floor(duration.asHours());\n        return hours > 0 ? hours : 0;\n    } else if (interval === 1) { // three day 每4小時一格，基礎 12 格是今天 7:00\n        const step = Math.floor(duration.asHours() / 4);\n        return 12 + step;\n    } else if (interval === 2) { // one week 每8小時一格，基礎 18 格是今天 7:00\n        const step = Math.floor(duration.asHours() / 8);\n        return 18 + step;\n    } else if (interval === 3) { // two week 直接看倒數第2格\n        return 13;\n    }\n}\n\n\nclass Vitalonchronic extends Component {\n    state = {\n        check_state_one: 0,\n        check_state_three: 0,\n        check_state_oneweek: 0,\n        check_state_twoweek: 0,\n        statussource: \"CM\",\n        CenterMonitorValue: [],\n        width: window.innerWidth - 171,\n        pbStatus: true,\n        preInterval: 0,\n        prePickerDate: 0,\n    }\n\n    debounce(func, wait, immediate) {\n        var timeout;\n        return () => {\n            var context = this, args = arguments;\n            var later = function () {\n                timeout = null;\n                if (!immediate) func.apply(context, args);\n            };\n            var callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) func.apply(context, args);\n        };\n    }\n\n    debounceWindowSize = this.debounce(this.recalcWindowSize, 500);\n\n    componentDidMount() {\n        const { select_interval, PickerDate } = this.props;\n        this.onClickCheckgrid_one(timeCheck(select_interval, PickerDate));\n        window.addEventListener('resize', this.debounceWindowSize);\n        this.setState({ preInterval: select_interval, prePickerDate: PickerDate });\n    }\n\n    componentDidUpdate() {\n        const { select_interval, PickerDate } = this.props;\n        const { preInterval, prePickerDate } = this.state;\n        if (select_interval !== preInterval || PickerDate !== prePickerDate) {\n            this.setState({ preInterval: select_interval, prePickerDate: PickerDate });\n            if (select_interval === 0) {\n                this.onClickCheckgrid_one(timeCheck(select_interval, PickerDate));\n            } else if (select_interval === 1) {\n                this.onClickCheckgrid_three(timeCheck(select_interval, PickerDate));\n            } else if (select_interval === 2) {\n                this.onClickCheckgrid_oneweek(timeCheck(select_interval, PickerDate));\n            } else if (select_interval === 3) {\n                this.onClickCheckgrid_twoweek(timeCheck(select_interval, PickerDate));\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.debounceWindowSize);\n    }\n\n    recalcWindowSize() {\n        this.setState({ width: window.innerWidth - 171 });\n    }\n\n    getVitalSignData(startTime, EndTime, Phistnum) {\n        ApiProvider.getPatientwardvalueMedian(Phistnum, startTime, EndTime)\n            .then(data => {\n                this.setState({\n                    CenterMonitorValue: data.data\n                })\n            })\n            .catch(err => {\n                console.log(err)\n                this.setState({\n                    CenterMonitorValue: null\n                })\n            })\n    }\n\n    // switchdata(value_interval, sourcefrom) {\n    //     const { defaultdate } = this.props\n    //     function changevitaldays(vitaldays) {\n    //         if (vitaldays === 3) {\n    //             return 18\n    //         }\n    //         else {\n    //             return 24\n    //         }\n    //     }\n\n    //     function Interval_switch(interval) {\n    //         if (interval === 0) {\n    //             return 1\n    //         }\n    //         if (interval === 1) {\n    //             return 3\n    //         }\n    //     }\n    //     const interval = Interval_switch(value_interval)\n    //     const starttime = formatendtime(defaultdate) - (interval * 24 * 60 * 60 * 1000)\n    //     if (sourcefrom === 'NIS') {\n    //         const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n    //         const data = simulationnisdata(datatime, changevitaldays(interval))\n    //         return data\n    //     }\n    //     else {\n\n    //         const datatime = formatxArrayhalf(starttime, changevitaldays(interval))\n    //         const data = simulationCentermonitordata(datatime, changevitaldays(interval))\n    //         return data\n    //     }\n    // }\n    Interval_grid_box() {\n        var gridarray = []\n        if (this.props.select_interval === 0) {\n            for (let index = 0; index < 24; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_one) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: '100%', border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_one(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: '100%' }} onClick={() => this.onClickCheckgrid_one(number)}></div>)\n            }\n        }\n        if (this.props.select_interval === 1) {\n            for (let index = 0; index < 18; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_three) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: '100%', border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_three(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: '100%' }} onClick={() => this.onClickCheckgrid_three(number)}></div>)\n            }\n        }\n        if (this.props.select_interval === 2) {\n            for (let index = 0; index < 21; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_oneweek) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: '100%', border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_oneweek(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: '100%' }} onClick={() => this.onClickCheckgrid_oneweek(number)}></div>)\n            }\n        }\n        if (this.props.select_interval === 3) {\n            for (let index = 0; index < 14; index++) {\n                const number = index + 1\n                if (number === this.state.check_state_twoweek) {\n                    gridarray.push(<div key={index} style={{ width: \"100%\", height: '100%', border: \"rgba(245, 166, 35, 1) 1px solid\" }} onClick={() => this.onClickCheckgrid_twoweek(number)}></div>)\n                }\n                else gridarray.push(<div key={index} style={{ width: \"100%\", height: '100%' }} onClick={() => this.onClickCheckgrid_twoweek(number)}></div>)\n            }\n        }\n        return gridarray\n    }\n\n    onClickCheckgrid_one(number) {\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (24 * 60 * 60 * 1000)\n        const endtime = ST + (number * 60 * 60 * 1000)\n        const starttime = endtime - 60 * 60 * 1000\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ check_state_one: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n    onClickCheckgrid_three(number) {\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (3 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 4) * 60 * 60 * 1000)\n        const starttime = endtime - (4 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ check_state_three: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n\n    onClickCheckgrid_oneweek(number) {\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (7 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 8) * 60 * 60 * 1000)\n        const starttime = endtime - (8 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ check_state_oneweek: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n    onClickCheckgrid_twoweek(number) {\n        const { PickerDate } = this.props\n        const ST = moment(PickerDate).valueOf() + (31 * 60 * 60 * 1000) - (14 * 24 * 60 * 60 * 1000)\n        const endtime = ST + ((number * 24) * 60 * 60 * 1000)\n        const starttime = endtime - (24 * 60 * 60 * 1000)\n        const start = moment(starttime).format(\"YYYYMMDDHHmmss\")\n        const end = moment(endtime).format(\"YYYYMMDDHHmmss\")\n        const Phistnum = this.props.caseinfo.HISID.toString().trim()\n        this.setState({ check_state_twoweek: number })\n        this.getVitalSignData(start, end, Phistnum)\n    }\n\n    sourcehandleChange = (value) => {\n        this.setState({ statussource: value })\n    }\n    render() {\n        function centervaluetoNull(value) {\n            function FilterList(DataList, type) {\n                const filterData = DataList.filter(function (value, index, arr) {\n                    return value.type === type\n                })\n                if (filterData.length === 0) {\n                    return null\n                }\n                return filterData[0].Mid\n            }\n            if (value === undefined || value === null) {\n                return {\n                    hr: null,\n                    rr: null,\n                    bt: null,\n                    spo2: null,\n                    abpd: null,\n                    abpm: null,\n                    abps: null,\n                    nbpm: null,\n                    nbps: null,\n                    nbpd: null\n                }\n            }\n            return {\n                hr: FilterList(value, \"hr\"),\n                rr: FilterList(value, \"rr\"),\n                bt: FilterList(value, \"bt\"),\n                spo2: FilterList(value, \"spo2\"),\n                abpd: FilterList(value, \"abpd\"),\n                abpm: FilterList(value, \"abpm\"),\n                abps: FilterList(value, \"abps\"),\n                nbpd: FilterList(value, \"nbpd\"),\n                nbps: FilterList(value, \"nbps\"),\n                nbpm: FilterList(value, \"nbpm\"),\n            }\n        }\n        function centervalueNull(value) {\n            if (value === undefined || value === null) {\n                return \"--\"\n            }\n            return value\n        }\n\n        function formatPickerTimer(pickerdate, interval) {\n            const end = pickerdate + (31 * 60 * 60 * 1000)\n            if (interval === 0) {\n                return {\n                    startTime: end - (24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n            if (interval === 1) {\n                return {\n                    startTime: end - (3 * 24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n            if (interval === 2) {\n                return {\n                    startTime: end - (7 * 24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n            else {\n                return {\n                    startTime: end - (14 * 24 * 60 * 60 * 1000),\n                    endTime: end\n                }\n            }\n        }\n        function limitValue(value, upper, lower) {\n            if (value > upper || value < lower) {\n                return false\n            }\n            return true\n        }\n        function valueFormat(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"--\"\n            }\n            return value\n        }\n\n        const { Option } = Select;\n        const { source } = this.props\n        const pickerTimer = formatPickerTimer(this.props.PickerDate, this.props.select_interval)\n        const centervalue = centervaluetoNull(this.state.CenterMonitorValue)\n        const { width } = this.state;\n        const status = this.state.pbStatus\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\", marginTop: \"10px\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>生命徵象</t2>\n                    {/* <div >\n                        <Button style={{ margin: \"0px 10px\" }} value={\"CM\"} type=\"primary\" onClick={this.sourcehandleChange}>Center Monitor</Button>\n                        <Button style={{}} value={\"NIS\"} type=\"primary\" onClick={this.sourcehandleChange}>NIS</Button>\n                    </div> */}\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridGap: \"5px\", marginLeft: \"20px\" }}>\n                        <div className={this.state.statussource === \"CM\" ? \"vitalBtnSource\" : \"vitalBtnSelectSource\"} style={{ marginRight: \"1px\" }} onClick={() => this.sourcehandleChange('CM')}>\n                            中央站資訊\n                        </div>\n                        <div className={this.state.statussource === \"NIS\" ? \"vitalBtnSource\" : \"vitalBtnSelectSource\"} onClick={() => this.sourcehandleChange('NIS')}>\n                            護理系統資訊\n                        </div>\n                    </div>\n                    {\n                        this.props.fromInfection ? null\n                            :\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto auto auto\", gridGap: \"2px\", marginLeft: \"15px\" }}>\n                                <div className={this.props.select_interval === 0 ? \"vitalBtnInterval\" : \"vitalBtnSelectInterval\"} style={{ marginRight: \"1px\" }} onClick={() => this.props.onSelectchange(0)}>\n                                    顯示一天\n                                </div>\n                                <div className={this.props.select_interval === 1 ? \"vitalBtnInterval\" : \"vitalBtnSelectInterval\"} style={{ marginRight: \"1px\" }} onClick={() => this.props.onSelectchange(1)}>\n                                    顯示三天\n                                </div>\n                                <div className={this.props.select_interval === 2 ? \"vitalBtnInterval\" : \"vitalBtnSelectInterval\"} style={{ marginRight: \"1px\" }} onClick={() => this.props.onSelectchange(2)}>\n                                    顯示一週\n                                </div>\n                                <div className={this.props.select_interval === 3 ? \"vitalBtnInterval\" : \"vitalBtnSelectInterval\"} onClick={() => this.props.onSelectchange(3)}>\n                                    顯示二週\n                                </div>\n                            </div>\n                    }\n                </div>\n\n                <div className=\"halfwardchart\">\n                    <div style={{ display: \"grid\", gridTemplateRows: this.state.statussource === 'CM' ? \"repeat(6,110px)\" : \"repeat(5,110px)\" }}>\n\n                        <div className=\"chronicvitalCardTitle\" style={{ backgroundColor: status ? \"white\" : statecolor('HR') }}>\n                            <t4 style={{ color: status ? statecolor('HR') : \"white\" }}>HR</t4>\n                            <t1 style={{ lineHeight: \"44px\", color: status ? statecolor('HR') : \"white\" }}>{centervalueNull(centervalue.hr)}</t1>\n                        </div>\n\n                        {\n                            this.state.statussource === \"CM\" ? (\n                                <div className=\"chronicvitalCardTitle\" style={{ backgroundColor: status ? \"white\" : statecolor('BP') }}>\n                                    <div className=\"chronicvitalCardTitleText\" style={{ color: status ? statecolor('BP') : \"white\" }}>\n                                        <t4>NBP</t4>\n                                        <t4>(mmHg)</t4>\n                                    </div>\n                                    <div className=\"chronicvitalCardTitleVal\">\n                                        <t3 style={{ color: status ? statecolor('BP') : \"white\" }}>{centervalueNull(centervalue.nbps)}/{centervalueNull(centervalue.nbpd)}</t3>\n                                        <t3 style={{ color: status ? statecolor('BP') : \"white\" }}>({centervalueNull(centervalue.nbpm)})</t3>\n                                    </div>\n                                </div>\n                            ) : null\n                        }\n\n\n                        <div className=\"chronicvitalCardTitle\" style={{ backgroundColor: status ? \"white\" : statecolor('BP') }}>\n                            <div className=\"chronicvitalCardTitleText\" style={{ color: status ? statecolor('BP') : \"white\" }}>\n                                <t4>{this.state.statussource === \"CM\" ? 'ABP' : 'BP'}</t4>\n                                <t4>(mmHg)</t4>\n                            </div>\n                            <div className=\"chronicvitalCardTitleVal\">\n                                <t3 style={{ color: status ? statecolor('BP') : \"white\" }}>{centervalueNull(centervalue.abps)}/{centervalueNull(centervalue.abpd)}</t3>\n                                <t3 style={{ color: status ? statecolor('BP') : \"white\" }}>({centervalueNull(centervalue.abpm)})</t3>\n                            </div>\n                        </div>\n                        <div className=\"chronicvitalCardTitle\" style={{ backgroundColor: limitValue(centervalue.spo2, 100, 90) ? \"white\" : statecolor('SpO2') }}>\n                            <div className=\"chronicvitalCardTitleText\" style={{ color: limitValue(centervalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>\n                                <t4>SpO<sub >2</sub></t4>\n                                <t4>(%)</t4>\n                            </div>\n                            <t1 style={{ lineHeight: \"44px\", color: limitValue(centervalue.spo2, 100, 90) ? statecolor('SpO2') : \"white\" }}>{centervalueNull(centervalue.spo2)}%</t1>\n                        </div>\n                        <div className=\"chronicvitalCardTitle\" style={{ backgroundColor: limitValue(centervalue.bt, 38, 36) ? \"white\" : statecolor('BT') }}>\n                            <div className=\"chronicvitalCardTitleText\" style={{ color: limitValue(centervalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>\n                                <t4>BT</t4>\n                            </div>\n                            <t1 style={{ lineHeight: \"44px\", color: limitValue(centervalue.bt, 38, 36) ? statecolor('BT') : \"white\" }}>{valueFormat(centervalue.bt)}</t1>\n                        </div>\n                        <div className=\"chronicvitalCardTitle\" style={{ backgroundColor: limitValue(centervalue.rr, 60, 20) ? \"white\" : statecolor('RR') }}>\n                            <div className=\"chronicvitalCardTitleText\" style={{ color: limitValue(centervalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>\n                                <t4>SpO<sub >2</sub></t4>\n                                <t4>(%)</t4>\n                            </div>\n                            <t1 style={{ lineHeight: \"44px\", color: limitValue(centervalue.rr, 60, 20) ? statecolor('RR') : \"white\" }}>{centervalueNull(centervalue.rr)}</t1>\n                        </div>\n\n\n                    </div>\n                    <div style={{ position: \"relative\" }}>\n                        {\n                            this.state.statussource === \"CM\" ? (\n                                <div style={{ position: \"absolute\", height: this.state.statussource === 'CM' ? 660 : 550, width: width - 50, top: 5, left: 50 }} >\n                                    <div style={{ display: \"grid\", height: '100%', gridTemplateColumns: \"repeat(\" + Interval_grid(this.props.select_interval) + \",1fr)\" }}>\n                                        {this.Interval_grid_box()}\n                                    </div>\n                                </div>\n                            ) : null\n                        }\n\n                        <Crosssectionvitalsignchart\n                            comein={'node'}\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"hr_svg_\" + source}\n                            id_key={\"hr_id_\" + source}\n                            type={\"hr\"}\n                            source={this.state.statussource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={85}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={100}\n                            upper={160}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor=\"#779F50\"\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={200}>\n                        </Crosssectionvitalsignchart>\n                        {\n                            this.state.statussource === \"CM\" ? (\n                                <Crosssectionvitalsignchart\n                                    comein={'node'}\n                                    CID={this.props.caseinfo.CASEID}\n                                    HID={this.props.caseinfo.HISID}\n                                    PickerDate={this.props.PickerDate}\n                                    svg_id={\"nbp_svg\" + source}\n                                    id_key={\"nbp_id\" + source}\n                                    type={\"nbp\"}\n                                    source={this.state.statussource}\n                                    startTime={pickerTimer.startTime}\n                                    endTime={pickerTimer.endTime}\n                                    height={85}\n                                    width={width}\n                                    interval={this.props.select_interval}\n                                    lower={55}\n                                    upper={75}\n                                    axisBot={false}\n                                    axisTop={false}\n                                    circlrcolor={\"#C12528\"}\n                                    colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                                    min={0}\n                                    max={100}>\n                                </Crosssectionvitalsignchart>\n                            ) : null\n                        }\n                        <Crosssectionvitalsignchart\n                            comein={'node'}\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"abp_svg\" + source}\n                            id_key={\"abp_id\" + source}\n                            type={\"abp\"}\n                            source={this.state.statussource}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={85}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={55}\n                            upper={75}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#C12528\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            comein={'node'}\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"spo2_svg_\" + source}\n                            id_key={\"spo2_id_\" + source}\n                            type={\"spo2\"}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={85}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={90}\n                            upper={100}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#4773B8\"}\n                            colorshadow={\"#4773B8\"}\n                            min={60}\n                            max={100}\n                            source={this.state.statussource}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            comein={'node'}\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"bt_svg_\" + source}\n                            id_key={\"bt_id_\" + source}\n                            type={\"bt\"}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            source={this.state.statussource}\n                            height={85}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={36}\n                            upper={38}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#7F3DB5\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={34}\n                            max={41}>\n                        </Crosssectionvitalsignchart>\n                        <Crosssectionvitalsignchart\n                            comein={'node'}\n                            CID={this.props.caseinfo.CASEID}\n                            HID={this.props.caseinfo.HISID}\n                            PickerDate={this.props.PickerDate}\n                            svg_id={\"rr_svg_\" + source}\n                            id_key={\"rr_id_\" + source}\n                            type={\"rr\"}\n                            startTime={pickerTimer.startTime}\n                            endTime={pickerTimer.endTime}\n                            height={85}\n                            width={width}\n                            interval={this.props.select_interval}\n                            lower={20}\n                            upper={60}\n                            axisBot={false}\n                            axisTop={false}\n                            circlrcolor={\"#DE7531\"}\n                            colorshadow={\"rgba(126, 211, 33, 0.5)\"}\n                            min={0}\n                            max={100}\n                            source={this.state.statussource}>\n                        </Crosssectionvitalsignchart>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default Vitalonchronic\n","import React, { Component } from 'react';\nimport { DatePicker, Button, Select, Checkbox } from 'antd';\nimport filterlogo from '../../Image/svg/filter.svg'\nimport Inoutonchronic from './Chronic_io'\nimport Chroniclab from './ChronicLab'\nimport Chronicrt from './ChronicRT'\nimport Orderonchronic from './ChronicOrder'\nimport Weightonchronic from './ChronicWeight'\nimport Vitalxaxis from '../../Module/Vitalxaxis'\nimport Vitalxaxisbot from '../../Module/Vitalxaxisbot'\nimport moment from 'moment'\nimport './Chroniclelayout.scss'\nimport Vitalonchronic from './Chronic_vital'\nimport locale from 'antd/es/date-picker/locale/zh_TW';\n\nclass Chroniclelayout extends Component {\n    state = {\n        display_Mode: false,\n        Cross_item: [0, 1, 2, 4],\n        scrollstate: 0,\n        PickerDate: moment(moment().format('YYYYMMDD'), \"YYYYMMDD\").valueOf(), //選擇日期\n        select_interval: 0, //選擇區間\n        statuschange: 0,\n    }\n    onChangeCross = (checkedValues) => {\n        this.setState({ Cross_item: checkedValues })\n    }\n\n    open_display() {\n        this.setState({\n            display_Mode: !this.state.display_Mode\n        })\n    }\n    scrollToAnchor = (anchorName) => {\n        if (anchorName) {\n            let anchorElement = document.getElementById(anchorName);\n            if (anchorElement) { anchorElement.scrollIntoView(); }\n        }\n    }\n    scroll_btn_style(index) {\n        if (index === this.state.scrollstate) {\n            return true\n        }\n        else return false\n    }\n    onChange = (date, dateString) => {\n\n        this.setState(\n            {\n                PickerDate: date.valueOf()\n            }\n        )\n    }\n    onSelectchange = (value) => {\n        this.setState(\n            {\n                select_interval: value\n            }\n        )\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDate } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const bTemp = moment(moment(bTime).format('YYYYMMDD')).valueOf()\n                bronDate <= bTemp && this.onChange(moment(bTime))\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD'))\n                this.onChange(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= aTemp && this.onChange(moment(aTime))\n                break;\n            default:\n                break;\n        }\n    }\n\n    display_item(number) {\n        const item = this.state.Cross_item\n        var filter = item.some(function (item, index, array) {\n            return item === number\n        });\n        return filter\n    }\n\n    render() {\n        const { Option } = Select;\n        // const dateFormat = 'YYYY/MM/DD';\n        const { caseinfo } = this.props\n        const crosssectioncontrollist =\n            [{ \"name\": \"生命徵象\", \"scrollpoint\": \"vital_sign_chronic\" },\n            { \"name\": \"輸出入\", \"scrollpoint\": \"input_output_chronic\" },\n            { \"name\": \"檢驗\", \"scrollpoint\": \"lab_chronic\" },\n            { \"name\": \"藥物處方\", \"scrollpoint\": \"order_chronic\" }]\n\n        const btn_style = {\n            unclick_style: { borderRadius: \"4px\", color: \"#001a6d88\", border: \"1px solid #001a6d88\", padding: \"0px 4px\", height: \"30px\" }\n        }\n\n        let button = crosssectioncontrollist.map(\n            (item, index) => <Button onClick={this.scrollToAnchor.bind(this, item.scrollpoint)} key={index} style={btn_style.unclick_style}>\n                <t3>{item.name}</t3>\n            </Button>);\n\n        const display_style = {\n            displye_mode: { position: \"absolute\", right: '0px', top: \"50px\", width: \"200px\", background: \"white\", boxShadow: \"3px 3px 12px\", zIndex: \"100\", borderRadius: \"4px\" },\n            non_display_mode: { display: \"none\" },\n            check_area: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\" },\n            check_text: { padding: \"4px\", width: \"140px\", borderRadius: \"4px\", borderColor: 'rgba(0, 0, 0, 0.15)', borderStyle: \"solid\", borderWidth: \"1px\", marginLeft: \"10px\", borderRadius: \"4px\" }\n        }\n        return (\n            <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", height: \"40px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"140px 120px auto\", gridColumnGap: \"5px\" }}>\n                        <DatePicker getCalendarContainer={triggerNode => triggerNode.parentNode} locale={locale} disabledDate={(current) => { return current > moment().startOf(\"day\") || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }} onChange={this.onChange} value={moment(this.state.PickerDate)} allowClear={false} />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\", marginLeft: \"10px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"minus-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", position: \"relative\" }}>\n                        <t2 >快速切換：</t2>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(6,auto)\", gridColumnGap: \"5px\" }}>{button}</div>\n                        <div onClick={() => this.open_display()} style={{ cursor: \"pointer\", marginLeft: \"5px\" }}>\n                            <img src={filterlogo} alt='filterlogo' style={{ width: '15px', height: '15px' }}></img>\n                        </div>\n                        <div style={this.state.display_Mode ? display_style.displye_mode : display_style.non_display_mode}>\n                            <t2 className='controlmoduletitle'>顯示切換</t2>\n                            <div style={{ marginTop: \"10px\", marginBottom: \"20px\" }}>\n                                <Checkbox.Group defaultValue={this.state.Cross_item} id={\"checkbox_group\"} style={{ width: '100%', display: \"grid\", gridTemplateRows: \"repeat(4,1fr)\", gridRowGap: \"5px\" }} onChange={this.onChangeCross}>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={0}></Checkbox>\n                                        <t3 style={display_style.check_text}>生命徵象</t3>\n                                    </div>\n                                    {/* <div style={display_style.check_area}>\n                                        <Checkbox value={3}></Checkbox>\n                                        <t3 style={display_style.check_text}>呼吸治療設定</t3>\n                                    </div> */}\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={1} ></Checkbox>\n                                        <t3 style={display_style.check_text}>輸出入</t3>\n                                    </div>\n                                    {/* <div style={display_style.check_area}>\n                                        <Checkbox value={5}></Checkbox>\n                                        <t3 style={display_style.check_text}>體重</t3>\n                                    </div> */}\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={2}></Checkbox>\n                                        <t3 style={display_style.check_text}>檢驗</t3>\n                                    </div>\n                                    <div style={display_style.check_area}>\n                                        <Checkbox value={4}></Checkbox>\n                                        <t3 style={display_style.check_text}>藥物處方</t3>\n                                    </div>\n                                </Checkbox.Group>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"150px 1fr\", height: \"10px\", marginTop: \"10px\" }}>\n                    <div></div>\n                    <Vitalxaxisbot max={200} min={0} select_interval={this.state.select_interval} select_date={this.state.PickerDate} id_key=\"xaxis_bot_chronic\" svg_id=\"xaxis_bot_svg_chronic\"></Vitalxaxisbot>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\", margin: \"10px 0px\" }}>\n                    <div></div>\n                    <Vitalxaxis max={200} min={0} select_interval={this.state.select_interval} select_date={this.state.PickerDate} id_key=\"xaxis_chronic\" svg_id=\"xaxis_svg_chronic\"></Vitalxaxis>\n                </div>\n                <div className='boxshadow'></div>\n                <div className='chroniclayout'>\n                    {/* Vital sign */}\n                    <div id=\"vital_sign_chronic\" style={{ display: this.display_item(0) ? \"grid\" : \"none\" }}>\n                        <Vitalonchronic source={\"Chronic\"} PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"Vital\" onSelectchange={this.onSelectchange}></Vitalonchronic>\n                        <Chronicrt PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo}></Chronicrt>\n                    </div>\n                    {/* RT */}\n                    {/* <div id=\"rt_chronic\" style={{ display: this.display_item(3) ? \"block\" : \"none\" }}>\n                        <Chronicrt PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo}></Chronicrt>\n                    </div> */}\n                    {/* I/O */}\n                    <div id=\"input_output_chronic\" style={{ display: this.display_item(1) ? \"block\" : \"none\" }}>\n                        <Inoutonchronic PickerDate={this.state.PickerDate} Status={\"Chronic\"} IntervalStatus={this.state.select_interval} caseinfo={caseinfo} title=\"輸出入\"></Inoutonchronic>\n                        <Weightonchronic PickerDate={this.state.PickerDate} QTWPER={this.state.QTWPER} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"\"></Weightonchronic>\n                    </div>\n                    {/* 體重 */}\n                    {/* <div id=\"infection_chronic\" style={{ display: this.display_item(5) ? \"block\" : \"none\" }}>\n                    </div> */}\n                    {/* Lab */}\n                    <div id=\"lab_chronic\" style={{ display: this.display_item(2) ? \"block\" : \"none\" }}>\n                        <Chroniclab PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"檢驗\"></Chroniclab>\n                    </div>\n                    {/* Order */}\n                    <div id=\"order_chronic\" style={{ display: this.display_item(4) ? \"block\" : \"none\" }}>\n                        <Orderonchronic PickerDate={this.state.PickerDate} select_interval={this.state.select_interval} caseinfo={caseinfo} title=\"藥物處方\"></Orderonchronic>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chroniclelayout;\n","import moment from \"moment\"\nimport React, { Component } from 'react';\n\nexport function formatIV(QDC) {\n    if (Array.isArray(QDC)) {\n        const filterIV = QDC.filter(function (info, index, arr) {\n            return info.line.toString().toUpperCase().trim() === \"IV\"\n        })\n        if (filterIV.length === 0) {\n            return false\n        }\n        return true\n    }\n    return false\n}\n\nexport function formatALUA(QDC) {\n    if (Array.isArray(QDC)) {\n        const filterIV = QDC.filter(function (info, index, arr) {\n            return info.line.toString().toUpperCase().trim() === \"A-LINE\" || info.line.toString().toUpperCase().trim() === \"UVA\"\n        })\n        console.log(filterIV)\n        if (filterIV.length === 0) {\n            return false\n        }\n        return true\n    }\n    return false\n}\n\nexport function formatCVCPICC(QDC) {\n    if (Array.isArray(QDC)) {\n        const filterIV = QDC.filter(function (info, index, arr) {\n            return info.line.toString().toUpperCase().trim() === \"CVC\" || info.line.toString().toUpperCase().trim() === \"PICC\" || info.line.toString().toUpperCase().trim() === \"UVC\"\n        })\n        if (filterIV.length === 0) {\n            return false\n        }\n        return true\n    }\n    return false\n}\n\nexport function formatIOData(QDC, filterString) {\n    if (Array.isArray(QDC)) {\n        const filter = QDC.filter(function (info, index, arr) {\n            return info.item.toString().trim() === filterString\n        })\n        return filter\n    }\n    return false\n}\n\nexport function formatData(filterData, PickerDate, filterString) {\n    function nullvalue(value) {\n        if (value === undefined || value === null || value === 0) {\n            return null\n        }\n        return value.toString().trim()\n    }\n    const end = PickerDate + (31 * 60 * 60 * 1000)\n    const start = PickerDate + (7 * 60 * 60 * 1000)\n    if (Array.isArray(filterData)) {\n        const formatTimer = filterData.filter(function (info, index, arr) {\n            const time = moment(info.rec_dat.toString().trim() + info.rec_tim.toString().trim(), \"YYYYMMDDHHmm\").valueOf()\n            return start <= time && time <= end\n        })\n        if (formatTimer.length === 0) {\n            return null\n        }\n        if (filterString === '輸液') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = nullvalue(info.line) + \"/\" + nullvalue(info.nam) + \"/\" + nullvalue(info.pos)\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '血品') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = nullvalue(info.line) + \"/\" + nullvalue(info.nam) + \"/\" + nullvalue(info.pos)\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '進食') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = nullvalue(info.nam) + \"/\" + nullvalue(info.lost)\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '失血') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"失血\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '滲液') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"滲液\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '嘔吐') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"嘔吐\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '引流') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = nullvalue(info.line) + \"/\" + nullvalue(info.pos)\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '穿刺出') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"穿刺出\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '穿刺入') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"穿刺入\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '透析入') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"穿刺入\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '透析出') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"穿刺入\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '透析總') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"穿刺入\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '沖洗出') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = nullvalue(info.line) + \"/\" + nullvalue(info.pos)\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '沖洗入') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = nullvalue(info.line) + \"/\" + nullvalue(info.pos)\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === 'Stool') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"Stool\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === 'Stimulation') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"Enema/Stimulation\"\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        if (filterString === '排尿') {\n            const format = formatTimer.map(function (info, index, arr) {\n                const title = \"Urine\" + nullvalue(info.inp_val1)\n                return {\n                    title: title,\n                    compare: title,\n                    element: info\n                }\n            })\n            return format\n        }\n        return null\n    }\n    return null\n}\n\nexport function groupArray(arrayList) {\n    if (Array.isArray(arrayList)) {\n        var result = arrayList.filter(function (value, index, arr) {\n            const res = arr.map(function (value, index, arr) {\n                return value.compare\n            })\n            return res.indexOf(value.compare) === index;\n        });\n        var arrList = []\n        for (let index = 0; index < result.length; index++) {\n            const element = result[index];\n            const comparevalue = element.compare\n            const filterarray = arrayList.filter(function (value, index, arr) {\n                return value.compare === comparevalue\n            })\n            arrList.push(filterarray)\n        }\n        return arrList\n    }\n    return null\n\n}\n\nexport function mapCellrender(ArrayList, PickerDate, filterString) {\n    function formatColor(filterString) {\n        if (filterString === \"輸液\") {\n            return \"rgb(160, 200, 200)\"\n        }\n        if (filterString === \"血品\") {\n            return \"rgb(210, 175, 165)\"\n        }\n        if (filterString === '進食') {\n            return \"rgb(179, 173, 50)\"\n        }\n        return \"rgb(140, 118, 162)\"\n    }\n    function formatBackgroundColor(filterString) {\n        if (filterString === \"輸液\") {\n            return \"rgb(195, 225, 225)\"\n        }\n        if (filterString === \"血品\") {\n            return \"rgb(220, 205, 200)\"\n        }\n        if (filterString === '進食') {\n            return \"rgb(230, 217, 154)\"\n        }\n        return \"rgb(212, 202, 221)\"\n    }\n    function nullvalue(value) {\n        if (value === undefined || value === null || value === 0 || value === '') {\n            return null\n        }\n        if (value.toString().match(\"null\") === 0) {\n            return \"\"\n        }\n        return value.toString().trim()\n    }\n    const start = PickerDate + (7 * 60 * 60 * 1000)\n    function valueToInit(filterString) {\n        if (filterString === '嘔吐') {\n            return \"\"\n        }\n        if (filterString === '引流') {\n            return \"\"\n        }\n        if (filterString === 'Stool') {\n            return \"\"\n        }\n        if (filterString === 'Stimulation') {\n            return \"\"\n\n        }\n        if (filterString === '排尿') {\n            return \"\"\n\n        }\n        return 0\n    }\n    function valueToVar(filterString, element) {\n        function vallNull(value) {\n            if (value === null || value === undefined) {\n                return null\n            }\n            return value.toString().trim()\n        }\n        if (filterString === \"輸液\") {\n            return Number(element.inp_val1)\n        }\n        if (filterString === \"血品\") {\n            return Number(element.inp_val1)\n        }\n        if (filterString === \"進食\") {\n            return Number(element.inp_val2)\n        }\n        if (filterString === '失血') {\n            return Number(element.out_val1)\n        }\n        if (filterString === '滲液') {\n            return Number(element.out_val1)\n        }\n        if (filterString === '嘔吐') {\n            return element.out_val1.toString() + \"\\n\" + vallNull(element.nam) + \"\\n\" + vallNull(element.color)\n        }\n        if (filterString === '引流') {\n            return Number(element.out_val1) + \"\\n\" + vallNull(element.color)\n        }\n        if (filterString === '穿刺出') {\n            return Number(element.out_val1)\n        }\n        if (filterString === '穿刺入') {\n            return Number(element.inp_val1)\n        }\n        if (filterString === '透析入') {\n            return Number(element.out_val1)\n        }\n        if (filterString === '透析出') {\n            return Number(element.inp_val1)\n        }\n        if (filterString === '透析總') {\n            return Number(element.out_val1) - Number(element.inp_val1)\n        }\n        if (filterString === '沖洗出') {\n            return Number(element.out_val1)\n        }\n        if (filterString === '沖洗入') {\n            return Number(element.out_val1)\n        }\n        if (filterString === 'Stool') {\n            // console.log(element)\n            const cellStringArray = element.out_val1.toString().split(\"|\")\n            // console.log(cellStringArray)\n            if (cellStringArray[1] !== null || cellStringArray[1] !== undefined || cellStringArray[1].length === 0) {\n                // console.log(cellStringArray[1] + \"\\n\" + element.nam.toString().trim() + \"\\n\" + element.color.toString().trim())\n                console.log(element)\n                return cellStringArray[1] + \"\\n\" + vallNull(element.nam) + \"\\n\" + vallNull(element.color)\n            }\n            if (cellStringArray[0].length === 0) {\n                return element.nam.toString().trim() + \"\\n\" + element.color.toString().trim()\n            }\n            return cellStringArray[0] + \"次\" + \"\\n\" + vallNull(element.nam) + \"\\n\" + vallNull(element.color)\n        }\n        if (filterString === 'Stimulation') {\n\n            if (Number(element.inp_val1) !== undefined || Number(element.inp_val1) !== null || Number(element.inp_val1) !== 0) {\n                if (Number(element.out_val2) !== undefined || Number(element.out_val2) !== null || Number(element.out_val2) !== 0) {\n                    return \"ES\\n\"\n                }\n                return \"E\\n\"\n            }\n            if (Number(element.out_val2) !== undefined || Number(element.out_val2) !== null || Number(element.out_val2) !== 0) {\n                return \"S\\n\"\n            }\n            return \"\\n\"\n\n        }\n        if (filterString === '排尿') {\n            return nullvalue(element.out_val2) + \"\\n\" + nullvalue(element.nam) + \"\\n\" + nullvalue(element.color)\n\n        }\n        return 0\n    }\n    if (Array.isArray(ArrayList) && ArrayList.length > 0) {\n        const mapList = ArrayList.map(function (info, index, arr) {\n            const title = info[0].title\n            var timeForList = []\n            for (let index = 0; index < 24; index++) {\n                const startTime = start + (index * 60 * 60 * 1000)\n                const endTime = start + ((index + 1) * 60 * 60 * 1000)\n                var sum = valueToInit(filterString)\n                var elementList = []\n                for (let index = 0; index < info.length; index++) {\n                    const element = info[index].element;\n                    const valueSum = valueToVar(filterString, element)\n                    const elementTime = moment(element.rec_dat.toString() + element.rec_tim.toString(), \"YYYYMMDDHHmm\").valueOf()\n                    if (startTime <= elementTime && elementTime < endTime) {\n                        sum = sum + valueSum\n                        elementList.push(element)\n                    }\n                }\n                timeForList.push({\n                    value: sum,\n                    startTime: startTime,\n                    endTime: endTime,\n                    elementList: elementList\n                })\n            }\n\n            const styleList = ['輸液', '血品', '進食']\n            const decideStyle = styleList.indexOf(filterString) !== -1\n\n            const cellMap = timeForList.map(function (info, index, arr) {\n                return (\n                    <div key={index} style={{ borderRight: (index + 1) % 8 == 0 && index != 0 && index != timeForList.length - 1 ? formatColor(filterString) + ' 5px solid' : formatColor(filterString) + ' 1px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: decideStyle ? \"center\" : '', whiteSpace: \"pre-wrap\", backgroundColor: nullvalue(info.value) !== null ? \"#fffa\" : \"\", minHeight: \"50px\" }}>{nullvalue(info.value)}</div>\n                );\n            })\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", minHeight: \"50px\" }}>\n                    <div style={{ borderRight: formatColor(filterString) + ' 5px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', backgroundColor: formatBackgroundColor(filterString), display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{title}</div>\n                    {cellMap}\n                </div>\n            );\n        })\n        return mapList\n    }\n    if (filterString === \"血品\") {\n        var cell = []\n        for (let index = 0; index < 24; index++) {\n            cell.push({\n                value: 0\n            })\n        }\n        const cellMap = cell.map(function (info, index, arr) {\n            return (\n                <div key={index} style={{ borderRight: (index + 1) % 8 == 0 && index != 0 && index != cell.length - 1 ? formatColor(filterString) + ' 5px solid' : formatColor(filterString) + ' 1px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", minHeight: \"50px\" }}>\n                <div style={{ borderRight: formatColor(filterString) + ' 5px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', backgroundColor: formatBackgroundColor(filterString), display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{\"無輸血紀錄\"}</div>\n                {cellMap}\n            </div>\n        );\n    }\n    if (filterString === \"進食\") {\n        var cell = []\n        for (let index = 0; index < 24; index++) {\n            cell.push({\n                value: 0\n            })\n        }\n        const cellMap = cell.map(function (info, index, arr) {\n            return (\n                <div key={index} style={{ borderRight: (index + 1) % 8 == 0 && index != 0 && index != cell.length - 1 ? formatColor(filterString) + ' 5px solid' : formatColor(filterString) + ' 1px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", minHeight: \"50px\" }}>\n                <div style={{ borderRight: formatColor(filterString) + ' 5px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', backgroundColor: formatBackgroundColor(filterString), display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{\"無進食紀錄\"}</div>\n                {cellMap}\n            </div>\n        );\n    }\n    if (filterString === \"Stool\") {\n        var cell = []\n        for (let index = 0; index < 24; index++) {\n            cell.push({\n                value: 0\n            })\n        }\n        const cellMap = cell.map(function (info, index, arr) {\n            return (\n                <div key={index} style={{ borderRight: (index + 1) % 8 == 0 && index != 0 && index != cell.length - 1 ? formatColor(filterString) + ' 5px solid' : formatColor(filterString) + ' 1px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", minHeight: \"50px\" }}>\n                <div style={{ borderRight: formatColor(filterString) + ' 5px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', backgroundColor: formatBackgroundColor(filterString), display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{\"Stool\"}</div>\n                {cellMap}\n            </div>\n        );\n    }\n    if (filterString === \"排尿\") {\n        var cell = []\n        for (let index = 0; index < 24; index++) {\n            cell.push({\n                value: 0\n            })\n        }\n        const cellMap = cell.map(function (info, index, arr) {\n            return (\n                <div key={index} style={{ borderRight: (index + 1) % 8 == 0 && index != 0 && index != cell.length - 1 ? formatColor(filterString) + ' 5px solid' : formatColor(filterString) + ' 1px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n            );\n        })\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", minHeight: \"50px\" }}>\n                <div style={{ borderRight: formatColor(filterString) + ' 5px solid', borderBottom: formatColor(filterString) + \" 1px solid\", borderTop: formatColor(filterString) + \" 1px solid\", borderCollapse: 'collapse', backgroundColor: formatBackgroundColor(filterString), display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{\"Urine\"}</div>\n                {cellMap}\n            </div>\n        );\n    }\n    return null\n}\n","import React, { Component } from 'react';\nimport './Flootsheetio.scss'\nimport * as RegFilter from '../../Function/FiliterReg'\nimport moment from 'moment';\nimport X2JS from 'x2js';\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as QDCR from '../../Resource/QDC'\nimport * as FlootSheetDataFormat from './FlootSheetDataFormat'\nimport { QDC } from '../../Data/RegularData';\n\nconst generateDateColumn1 = () => {\n    const dateArr = Array.from(Array(24).keys()).map(d => (d + 7) % 24);\n    return (\n        <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n            <div style={{ borderRight: '5px solid transparent', borderBottom: \"1px solid transparent\", borderTop: \"1px solid transparent\", borderCollapse: 'collapse', display: \"flex\", alignItems: \"center\", justifyContent: 'flex-end', fontSize: \"12px\" }}>時間</div>\n            {dateArr.map((time, index) => (\n                <div key={index} style={{ borderRight: (index + 1) % 8 === 0 && index !== 0 && index !== dateArr.length - 1 ? '5px solid transparent' : '1px solid transparent', borderBottom: \"1px solid transparent\", borderTop: \"1px solid transparent\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{time}</div>\n            ))}\n        </div>\n    )\n}\n\n\nclass Flootsheetio extends Component {\n    state = {\n        itemNumber: \"day\",\n        preCID: null,\n        prePickerDate: null,\n        QDC: []\n    }\n    componentDidMount() {\n        const { caseinfo, PickerDate } = this.props\n        const CID = caseinfo.CASEID\n        this.setState({ preCID: CID, prePickerDate: PickerDate })\n        this.getQDC(CID, PickerDate)\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDate } = this.props\n        const CID = caseinfo.CASEID\n        const preCID = this.state.preCID\n        const prePickerDate = this.state.prePickerDate\n        if (CID !== preCID || PickerDate !== prePickerDate) {\n            this.setState({ preCID: CID, prePickerDate: PickerDate })\n            this.getQDC(CID, PickerDate)\n        }\n    }\n\n    ToolTipRender(elementList) {\n        console.log(elementList)\n    }\n\n    getQDC(CID, PickerDate) {\n        const xm2 = new X2JS()\n        const st = moment(PickerDate + (7 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        const et = moment(PickerDate + (31 * 60 * 60 * 1000)).format(\"YYYYMMDDHHmm\")\n        ApiProvider.getQDC(CID, st, et)\n            .then(data => {\n                console.log(xm2.xml2js(data.data))\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                this.setState({\n                    QDC: parsedata\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        // this.setState({ QDC: QDCR.data.outmsg.resconts.rescont })\n    }\n    render() {\n        function nullvalue(value) {\n            if (value === undefined || value === null || value === 0) {\n                return \"\"\n            }\n            return value.toString().trim()\n        }\n        function formatDayData(valueStatus, title) {\n            if (!valueStatus) {\n                var cell = []\n                for (let index = 0; index < 24; index++) {\n                    cell.push({\n                        value: 0\n                    })\n                }\n                const cellMap = cell.map(function (info, index, arr) {\n                    if (title === \"無輸血紀錄\") {\n                        return (\n                            <div key={index} style={{ borderRight: (index + 1) % 8 == 0 && index != 0 && index != cell.length - 1 ? 'rgb(210, 175, 165) 5px solid' : 'rgb(160, 200, 200) 1px solid', borderBottom: \"rgb(160, 200, 200) 1px solid\", borderTop: \"rgb(160, 200, 200) 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n                        );\n                    }\n                    return (\n                        <div key={index} style={{ borderRight: (index + 1) % 8 == 0 && index != 0 && index != cell.length - 1 ? 'rgb(160, 200, 200) 5px solid' : 'rgb(160, 200, 200) 1px solid', borderBottom: \"rgb(160, 200, 200) 1px solid\", borderTop: \"rgb(160, 200, 200) 1px solid\", borderCollapse: 'collapse', display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{nullvalue(info.value)}</div>\n                    );\n                })\n                return (\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"140px repeat(24,1fr)\", height: \"50px\" }}>\n                        <div style={{ borderRight: 'rgb(160, 200, 200) 5px solid', borderBottom: \"rgb(160, 200, 200) 1px solid\", borderTop: \"rgb(160, 200, 200) 1px solid\", borderCollapse: 'collapse', backgroundColor: \"rgb(195, 225, 225)\", display: \"flex\", alignItems: \"center\", fontSize: \"12px\" }}>{title}</div>\n                        {cellMap}\n                    </div>\n                );\n            }\n            return null\n        }\n\n        const { PickerDate } = this.props\n        const { QDC } = this.state\n        const Infusion = FlootSheetDataFormat.formatIOData(QDC, \"輸液\")\n        const IV = FlootSheetDataFormat.formatIV(Infusion)\n        console.log(IV)\n        const ALINE = FlootSheetDataFormat.formatALUA(Infusion)\n        const PICC = FlootSheetDataFormat.formatCVCPICC(Infusion)\n        const filterInfusion = FlootSheetDataFormat.formatData(Infusion, PickerDate, \"輸液\")\n        const groupFilterInfusion = FlootSheetDataFormat.groupArray(filterInfusion)\n        const mapInfusion = FlootSheetDataFormat.mapCellrender(groupFilterInfusion, PickerDate, \"輸液\")\n        // console.log(groupFilterInfusion)\n        const Blood = FlootSheetDataFormat.formatIOData(QDC, \"血品\")\n        const filterBlood = FlootSheetDataFormat.formatData(Blood, PickerDate, \"血品\")\n        const groupFilterBlood = FlootSheetDataFormat.groupArray(filterBlood)\n        const mapBlood = FlootSheetDataFormat.mapCellrender(groupFilterBlood, PickerDate, \"血品\")\n        // console.log(mapBlood)\n        const Eat = FlootSheetDataFormat.formatIOData(QDC, \"進食\")\n        const filterEat = FlootSheetDataFormat.formatData(Eat, PickerDate, \"進食\")\n        const groupFilterEat = FlootSheetDataFormat.groupArray(filterEat)\n        const mapEat = FlootSheetDataFormat.mapCellrender(groupFilterEat, PickerDate, \"進食\")\n\n        //Fourth\n        const BloodLoss = FlootSheetDataFormat.formatIOData(QDC, \"失血\")\n        const filterBloodLoss = FlootSheetDataFormat.formatData(BloodLoss, PickerDate, \"失血\")\n        const groupFilterBloodLoss = FlootSheetDataFormat.groupArray(filterBloodLoss)\n        const mapBloodLoss = FlootSheetDataFormat.mapCellrender(groupFilterBloodLoss, PickerDate, \"失血\")\n\n        const Exudate = FlootSheetDataFormat.formatIOData(QDC, \"滲液\")\n        const filterExudate = FlootSheetDataFormat.formatData(Exudate, PickerDate, \"滲液\")\n        const groupFilterExudate = FlootSheetDataFormat.groupArray(filterExudate)\n        const mapExudate = FlootSheetDataFormat.mapCellrender(groupFilterExudate, PickerDate, \"滲液\")\n\n        const Vomit = FlootSheetDataFormat.formatIOData(QDC, \"嘔吐\")\n        const filterVomit = FlootSheetDataFormat.formatData(Vomit, PickerDate, \"嘔吐\")\n        const groupFilterVomit = FlootSheetDataFormat.groupArray(filterVomit)\n        const mapVomit = FlootSheetDataFormat.mapCellrender(groupFilterVomit, PickerDate, \"嘔吐\")\n\n        const Drainage = FlootSheetDataFormat.formatIOData(QDC, \"引流\")\n        const filterDrainage = FlootSheetDataFormat.formatData(Drainage, PickerDate, \"引流\")\n        const groupFilterDrainage = FlootSheetDataFormat.groupArray(filterDrainage)\n        const mapDrainage = FlootSheetDataFormat.mapCellrender(groupFilterDrainage, PickerDate, \"引流\")\n\n\n        const Puncture = FlootSheetDataFormat.formatIOData(QDC, \"穿刺\")\n        const filterPunctureOut = FlootSheetDataFormat.formatData(Puncture, PickerDate, \"穿刺出\")\n        const groupFilterPunctureOut = FlootSheetDataFormat.groupArray(filterPunctureOut)\n        const mapPunctureOut = FlootSheetDataFormat.mapCellrender(groupFilterPunctureOut, PickerDate, \"穿刺出\")\n\n        const filterPunctureIn = FlootSheetDataFormat.formatData(Puncture, PickerDate, \"穿刺入\")\n        const groupFilterPunctureIn = FlootSheetDataFormat.groupArray(filterPunctureIn)\n        const mapPunctureIn = FlootSheetDataFormat.mapCellrender(groupFilterPunctureIn, PickerDate, \"穿刺入\")\n\n\n        const Dialysis = FlootSheetDataFormat.formatIOData(QDC, \"透析\")\n        const filterDialysisIn = FlootSheetDataFormat.formatData(Dialysis, PickerDate, \"透析入\")\n        const groupFilterDialysisIn = FlootSheetDataFormat.groupArray(filterDialysisIn)\n        const mapDialysisIn = FlootSheetDataFormat.mapCellrender(groupFilterDialysisIn, PickerDate, \"透析入\")\n\n        const filterDialysisOut = FlootSheetDataFormat.formatData(Dialysis, PickerDate, \"透析出\")\n        const groupFilterDialysisOut = FlootSheetDataFormat.groupArray(filterDialysisOut)\n        const mapDialysisOut = FlootSheetDataFormat.mapCellrender(groupFilterDialysisOut, PickerDate, \"透析出\")\n\n        const filterDialysisTotal = FlootSheetDataFormat.formatData(Dialysis, PickerDate, \"透析總\")\n        const groupFilterDialysisTotal = FlootSheetDataFormat.groupArray(filterDialysisTotal)\n        const mapDialysisTotal = FlootSheetDataFormat.mapCellrender(groupFilterDialysisTotal, PickerDate, \"透析總\")\n\n\n\n        const Rinse = FlootSheetDataFormat.formatIOData(QDC, \"沖洗\")\n        const filterRinseIn = FlootSheetDataFormat.formatData(Rinse, PickerDate, \"沖洗入\")\n        const groupFilterRinseIn = FlootSheetDataFormat.groupArray(filterRinseIn)\n        const mapRinseIn = FlootSheetDataFormat.mapCellrender(groupFilterRinseIn, PickerDate, \"沖洗入\")\n\n\n        const filterRinseOut = FlootSheetDataFormat.formatData(Rinse, PickerDate, \"沖洗出\")\n        const groupFilterRinseOut = FlootSheetDataFormat.groupArray(filterRinseOut)\n        const mapRinseOut = FlootSheetDataFormat.mapCellrender(groupFilterRinseOut, PickerDate, \"沖洗出\")\n\n\n        const Stool = FlootSheetDataFormat.formatIOData(QDC, \"排便\")\n        const filterStool = FlootSheetDataFormat.formatData(Stool, PickerDate, \"Stool\")\n        const groupFilterStool = FlootSheetDataFormat.groupArray(filterStool)\n        const mapStool = FlootSheetDataFormat.mapCellrender(groupFilterStool, PickerDate, \"Stool\")\n\n        const filterStimulation = FlootSheetDataFormat.formatData(Stool, PickerDate, \"Stimulation\")\n        const groupFilterStimulation = FlootSheetDataFormat.groupArray(filterStimulation)\n        const mapStimulation = FlootSheetDataFormat.mapCellrender(groupFilterStimulation, PickerDate, \"Stimulation\")\n\n\n        const Urine = FlootSheetDataFormat.formatIOData(QDC, \"排尿\")\n        const filterUrine = FlootSheetDataFormat.formatData(Urine, PickerDate, \"排尿\")\n        const groupFilterUrine = FlootSheetDataFormat.groupArray(filterUrine)\n        const mapUrine = FlootSheetDataFormat.mapCellrender(groupFilterUrine, PickerDate, \"排尿\")\n\n        return (\n\n            <div>\n\n                {/* <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <div style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>I/O</div>\n                </div> */}\n\n                {/* <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>I/O</t2>\n                </div> */}\n                <div style={{ margin: \"0 auto\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", maxWidth: \"1360px\" }}>\n                    {generateDateColumn1()}\n                    {Infusion.length != 0 ? '輸液' : null}\n                    <div style={{ backgroundColor: \"rgb(195, 225, 225)\", display: \"block\", border: \"5px solid rgb(160, 200, 200)\", borderCollapse: \"collapse\" }}>\n                        {formatDayData(IV, \"IV\")}\n                        {formatDayData(ALINE, \"A-LINE/UVA\")}\n                        {formatDayData(PICC, \"CVC/PICC/UVC\")}\n                        {mapInfusion}\n                    </div>\n                    {'血品'}\n                    <div style={{ backgroundColor: \"rgb(220, 205, 200)\", display: \"block\", border: \"5px solid rgb(210, 175, 165)\", borderCollapse: \"collapse\" }}>\n                        {mapBlood}\n                    </div>\n                    {'進食'}\n                    <div style={{ backgroundColor: \"rgb(230, 217, 154)\", display: \"block\", border: \"5px solid rgb(179, 173, 50)\", borderCollapse: \"collapse\" }}>\n                        {mapEat}\n                        {/* {RV} */}\n                    </div>\n                    {'排泄引流'}\n                    <div style={{ backgroundColor: \"rgb(212, 202, 221)\", display: \"block\", border: \"5px solid rgb(140, 118, 162)\", borderCollapse: \"collapse\" }}>\n                        {mapBloodLoss}\n                        {mapExudate}\n                        {mapVomit}\n                        {mapDrainage}\n                        {mapPunctureOut}\n                        {mapPunctureIn}\n                        {mapDialysisIn}\n                        {mapDialysisOut}\n                        {mapDialysisTotal}\n                        {mapRinseIn}\n                        {mapRinseOut}\n                        {mapStool}\n                        {mapStimulation}\n                        {mapUrine}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Flootsheetio;\n","import React, { Component } from \"react\";\nimport Flootsheetio from \"./Flootsheetio\";\n// import Flowsheetvitalsign from './Flootsheetvitalsign'\nimport Vitalxaxis from \"../../Module/Vitalxaxis\";\nimport { DatePicker, Button, Icon } from \"antd\";\nimport moment from \"moment\";\nimport * as ApiProvider from \"../../API/ApiProvider\";\nimport \"./Flootsheetlayout.scss\";\nimport X2JS from \"x2js\";\nimport * as Wardstate from \"../../Function/Wardstate\";\nimport locale from \"antd/es/date-picker/locale/zh_TW\";\nimport { pregancyweeksanddays } from \"../../Function/Wardbedfunction\";\nimport { daysdiff } from \"../../Function/Timeformat\";\nimport * as WardState from \"../../Function/Wardstate\";\n\nclass Flowsheetlayout extends Component {\n  state = {\n    PickerDate: moment(moment().format(\"YYYYMMDD\")).valueOf(),\n    preCID: null,\n    QSPE: [],\n    isLoading: false,\n    // itemlist: []\n  };\n  componentDidMount() {\n    const { caseinfo } = this.props;\n    const CID = caseinfo.CASEID;\n    const date = moment(moment().format(\"YYYYMMDD\")).valueOf();\n    this.setState({ preCID: CID, PickerDate: date });\n    this.ApiData(CID, date);\n  }\n  componentDidUpdate() {\n    const CID = this.props.caseinfo.CASEID;\n    const preCID = this.state.preCID;\n    if (CID !== preCID) {\n      const date = this.state.PickerDate;\n      this.setState({ preCID: CID, PickerDate: date });\n      this.ApiData(CID, date);\n    }\n  }\n  ApiData(CID, DateTime) {\n    const st = moment(DateTime + 7 * 60 * 60 * 1000).format(\"YYYYMMDDHHmm\");\n    const et = moment(DateTime + 31 * 60 * 60 * 1000).format(\"YYYYMMDDHHmm\");\n    this.setState({ isLoading: true });\n    const apiQSPE = ApiProvider.getQSPE(CID, st, et)\n      .then(data => {\n        const dataJson = Wardstate.XM2JSON(data.data);\n        // const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n        if (Array.isArray(dataJson)) {\n          this.setState({ QSPE: dataJson });\n        } else {\n          this.setState({\n            QSPE: [dataJson]\n          });\n        }\n      })\n      .catch(err => {\n        console.log(\n          \"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err)\n        );\n      });\n\n    Promise.all([apiQSPE]).then(() => { this.setState({ isLoading: false }) }).catch(() => { this.setState({ isLoading: false }) });\n  }\n  onDateChange = (date, dateString) => {\n    const CID = this.props.caseinfo.CASEID;\n    this.setState({ preCID: CID, PickerDate: date.valueOf() });\n    this.ApiData(date.valueOf());\n  };\n\n  trainDay = e => {\n    const { caseinfo } = this.props;\n    const { PickerDate } = this.state;\n    const bron = caseinfo.PBASINGNINFO.PBIRTHDT;\n    const bronDate = moment(moment(bron).format(\"YYYYMMDD\")).valueOf();\n\n    const day = 24 * 60 * 60 * 1000;\n\n    switch (e.target.value) {\n      case \"B\":\n        const bTime = PickerDate - day;\n        const bTemp = bTime - 6 * day;\n        bronDate <= bTemp && this.onDateChange(moment(bTime));\n        break;\n      case \"N\":\n        const nTime = moment(moment().format(\"YYYYMMDD\"));\n        this.onDateChange(nTime);\n        break;\n      case \"A\":\n        const aTime = PickerDate + day;\n        const aTemp = moment(moment().format(\"YYYYMMDD\")).valueOf();\n        aTime <= aTemp && this.onDateChange(moment(aTime));\n        break;\n      default:\n        break;\n    }\n  };\n\n\n  render() {\n    const { caseinfo, btnlist, PickerDate } = this.props;\n    const data = this.state.QSPE || []; //特殊護理事件\n    const splist = data.filter(function (value, index, array) {\n      if (value === undefined) {\n        return null;\n      }\n      const str = value.special;\n      return str.match(\"@v\") === null;\n    });\n    const specialListRender = splist.map(function (value, index, arr) {\n      return (\n        <div\n          key={index}\n          style={{ display: \"flex\", color: \"rgba(59, 151, 225, 1)\" }}\n        >\n          {value.special.toString().trim()}\n        </div>\n      );\n    });\n    function valueFormat(value) {\n      if (value === \"\" || value === null || value === undefined) {\n        return \"--\";\n      }\n      return value.toString();\n    }\n\n    const weightList = caseinfo.WEIGHT;\n    const Birthday = caseinfo.PBASINGNINFO.PBIRTHDT;\n    const BornWeight = WardState.BornWeight(weightList, Birthday);\n    const DayWeight = WardState.selectweight(weightList, PickerDate);\n    return (\n      <div>\n        <div style={{ display: \"flex\" }}>\n          <DatePicker\n            getCalendarContainer={triggerNode => triggerNode.parentNode}\n            disabledDate={current => {\n              return (\n                current > moment().startOf(\"day\") ||\n                current <\n                moment(\n                  caseinfo.PBASINGNINFO.PBIRTHDT.toString(),\n                  \"YYYYMMDD\"\n                ).endOf()\n              );\n            }}\n            width={120}\n            value={moment(this.state.PickerDate)}\n            allowClear={false}\n            onChange={this.onDateChange}\n          />\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"1fr 1fr 1fr\",\n              gridColumnGap: \"1px\",\n              padding: \"2px 10px 0px 10px\"\n            }}\n          >\n            <Button\n              value=\"B\"\n              shape=\"circle\"\n              icon=\"left-circle\"\n              onClick={this.trainDay}\n            />\n            <Button\n              value=\"N\"\n              shape=\"circle\"\n              icon=\"minus-circle\"\n              onClick={this.trainDay}\n            />\n            <Button\n              value=\"A\"\n              shape=\"circle\"\n              icon=\"right-circle\"\n              onClick={this.trainDay}\n            />\n          </div>\n          {/* fix issue */}\n          {/* <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(3,auto)\",\n              gridColumnGap: \"30px\",\n              alignContent: \"center\"\n            }}\n          >\n            <t2>\n              矯正週數：\n              {pregancyweeksanddays(\n                caseinfo.WEEK_BORN,\n                caseinfo.DAY_BORN,\n                moment(Birthday, \"YYYYMMDD\").format(\"YYYY/MM/DD\")\n              )}\n            </t2>\n            <t2>體重：{valueFormat(DayWeight)}g</t2>\n            <t2>\n              住院第\n              {daysdiff(\n                moment(PickerDate).format(\"YYYY/MM/DD\"),\n                moment(caseinfo.TRANSINDT, \"YYYYMMDD\").format(\"YYYY/MM/DD\")\n              )}\n              天\n            </t2>\n          </div> */}\n        </div>\n        <div style={{ display: splist.length === 0 ? \"none\" : \"block\" }}>\n          <div\n            style={{\n              backgroundColor: \"#71b0e46e\",\n              borderTopLeftRadius: \"4px\",\n              borderTopRightRadius: \"4px\",\n              height: \"36px\",\n              padding: \"0px 16px\",\n              display: \"flex\",\n              alignItems: \"center\"\n            }}\n          >\n            <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>\n              特殊護理事件：\n            </t2>\n            <t2\n              style={{\n                width: \"20px\",\n                height: \"20px\",\n                borderRadius: \"99em\",\n                background: \"black\",\n                color: \"white\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              }}\n            >\n              {splist.length}\n            </t2>\n          </div>\n          <div style={{ maxHeight: \"100px\", width: \"100%\", overflow: \"auto\", paddingLeft: \"16px\" }}>\n            {specialListRender}\n          </div>\n        </div>\n        <div className=\"flootsheetlayout\">\n          {\n            this.state.isLoading\n              ? (\n                <Icon type=\"loading\" />\n              )\n              : (\n                <Flootsheetio\n                  PickerDate={this.state.PickerDate}\n                  caseinfo={caseinfo}\n                ></Flootsheetio>\n              )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Flowsheetlayout;\n","import React, { Component } from 'react';\nimport './Examchart.scss';\nimport * as d3 from \"d3\";\nimport moment from 'moment';\n\nclass Examchart extends Component {\n    state = {\n        change: false\n    }\n    componentDidUpdate() {\n\n        const { svg_id } = this.props\n        d3.select(\".tooltip\").remove()\n        d3.select(\"#\" + svg_id).remove()\n        this.drawChart()\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    decideValue = (value) => {\n        const tempValue = typeof (value) !== 'String' ? value.toString() : value\n        const { max, min } = this.props\n        if (tempValue === null || tempValue === undefined) {\n            return null\n        }\n        if (tempValue.indexOf('<') != -1) {\n            return min\n        } else if (tempValue.indexOf('>') != -1) {\n            return max\n        } else {\n            return tempValue\n        }\n    }\n\n    drawChart() {\n        const { id_key, svg_id, max, min, lineChart } = this.props\n\n        const sT = new Date(moment(lineChart[0].date, 'YYYYMMDD').valueOf() - 24 * 60 * 60 * 1000)\n        const endT = new Date(moment(lineChart[lineChart.length - 1].date, 'YYYYMMDD') + 24 * 60 * 60 * 1000)\n\n        const fixLineChart = lineChart.filter(data => {\n            return data.value !== \"\" && data.value !== null && data.value !== undefined\n        })\n\n        // 邊界\n        const margin = { top: 20, right: 20, bottom: 30, left: 50 },\n            width = 1000 - margin.left - margin.right,\n            height = 500 - margin.top - margin.bottom;\n\n        let x = d3.scaleTime().domain([sT, endT]).range([0, width - margin.left - margin.right])\n        let y = d3.scaleLinear().domain([min, max]).range([height, 0])\n\n        var div = d3.select(\"#\" + id_key).append(\"div\")\n            .attr(\"class\", \"tooltip\")\n            .style(\"opacity\", 0);\n\n        let svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_id)\n            .style(\"height\", height + margin.top + margin.bottom)\n            .style(\"width\", width + margin.left + margin.right)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        svg.append('g')\n            .call(d3.axisBottom(x).ticks(5).tickFormat(d3.timeFormat('%m/%d')))\n            .attr(\"transform\", `translate(0,${height})`)\n            .style('stroke', 'black')\n            .style('stroke-width', 1);\n\n        svg.append('g')\n            .call(d3.axisLeft(y))\n            .style('stroke', 'black')\n            .style('stroke-width', 1);\n\n        let line = d3.line()\n            .x(d => x(moment(d.date, 'YYYYMMDDHHmm').toDate()))\n            .y(d => {\n                const tempValue = this.decideValue(d.value)\n                return y(tempValue)\n            })\n            .curve(d3.curveMonotoneX);\n\n        let lines = svg.append('g').attr('class', 'lines');\n\n        lines.selectAll(\"circle\")\n            .data(fixLineChart)\n            .enter()\n            .append('g')\n            .append(\"circle\")\n            .attr(\"class\", \"lines-circle\")\n            .attr(\"cy\", d => {\n                const tempValue = this.decideValue(d.value)\n                return y(tempValue)\n            })\n            .attr(\"cx\", d => x(moment(d.date, 'YYYYMMDDHHmm').toDate()))\n            .attr('r', 5)\n            .on(\"mouseover\", function (d) {\n                div.transition()\n                    .duration(100)\n                    .style(\"opacity\", .9);\n                div.html(`檢驗時間 : ${d.date} <br/> 檢驗數值 : ${d.value}`)\n                    .style(\"left\", (d3.event.pageX - 200) + \"px\")\n                    .style(\"top\", (d3.event.pageY - 150) + \"px\");\n            })\n            .on(\"mouseout\", function (d) {\n                div.transition()\n                    .duration(300)\n                    .style(\"opacity\", 0);\n            })\n            .style('opacity', 1)\n            .style('fill', \"blue\");\n\n        lines\n            .selectAll('.line-group')\n            .data(fixLineChart)\n            .enter()\n            .append('g')\n            .attr('class', 'line-group')\n            .append('path')\n            .attr('class', 'line')\n            .attr('d', line(fixLineChart))\n            .style('stroke', 'black')\n            .style('fill', 'none');\n    }\n\n    render() {\n        function formatString(formatString) {\n            console.log(formatString)\n            if (formatString === \"Ca++\") {\n                return <span style={{ color: \"rgba(0, 0, 0, 0.85)\", fontSize: \"20px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>Ca<sup>2+</sup></span>\n            }\n            if (formatString === \"Mg++\") {\n                return <span style={{ color: \"rgba(0, 0, 0, 0.85)\", fontSize: \"20px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>Mg<sup>2+</sup></span>\n            }\n            if (formatString === \"pCO2\") {\n                return <span style={{ color: \"rgba(0, 0, 0, 0.85)\", fontSize: \"20px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>pCO<sub>2</sub></span>\n            }\n            if (formatString === \"pO2\") {\n                return <span style={{ color: \"rgba(0, 0, 0, 0.85)\", fontSize: \"20px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>pO<sub>2</sub></span>\n            }\n            if (formatString === \"HCO3\") {\n                return <span style={{ color: \"rgba(0, 0, 0, 0.85)\", fontSize: \"20px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>HCO<sub>3</sub></span>\n            }\n            if (formatString === \"FiO2\") {\n                return <span style={{ color: \"rgba(0, 0, 0, 0.85)\", fontSize: \"20px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>FiO<sub>2</sub></span>\n            }\n            if (formatString == 'Band' || formatString == 'Seg' || formatString == 'Lym') {\n                return (\n                    <div>\n                        <span style={{ color: \"rgba(0, 0, 0, 0.85)\", fontSize: \"20px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>{formatString}</span>\n                        <span style={{ color: \"rgba(0, 0, 0, 0.65)\", fontSize: \"16px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>%</span>\n                    </div>\n                )\n            }\n            return <span style={{ color: \"rgba(0, 0, 0, 0.85)\", fontSize: \"20px\", fontWeight: \"500\", lineHeight: \"22px\", wordWrap: \"break-word\" }}>{formatString}</span>\n        }\n        const { id_key, lineCharttitle } = this.props\n        console.log(lineCharttitle)\n        const title = lineCharttitle == 'Band' || lineCharttitle == 'Seg' || lineCharttitle == 'Lym' ? true : false\n        return (\n            <div>\n                <div style={{ padding: \"0px 24px 16px\", color: \"rgba(0, 0, 0, 0.65)\", background: \"#fff\", borderBottom: \"1px solid #e8e8e8\", borderRadius: \"4px 4px 0 0\" }}>\n                    {formatString(lineCharttitle)}\n                </div>\n                <div id={id_key}></div>\n            </div>\n        );\n    }\n}\n\nexport default Examchart;\n","import React, { Component } from 'react';\nimport { Select, Modal } from 'antd';\n// import * as ApiGithub from '../../API/ApiGithub'\nimport * as RegularData from '../../Data/RegularData'\nimport moment from 'moment'\nimport Examchart from './Examchart'\nimport { Button } from 'antd';\nimport './ExamLabview.scss';\n\nclass Labview extends Component {\n    state = {\n        Selectus: this.props.SelectStatus,\n        PickerDateRange: [moment(), moment()],\n        visible: false,\n        lineCharttitle: '',\n        lineChart: [],\n        IRParse: RegularData.InspectionReportExtent()\n    }\n    componentDidMount() {\n        // ApiGithub.getExamReport()\n        //     .then(data => {\n        //         this.setState({\n        //             TitleList: data.data\n        //         })\n        //     })\n        //     .catch(err=>{\n        //         console.log(\"GithubAPI NG\" + err)\n        //     })\n        // this.setState({\n        //     TitleList: RegularData.ExamReportJson\n        // })\n    }\n\n    callbackDateFunction = (value) => {\n        this.props.parentDateCallback(value);\n    }\n    handleChange = (value) => {\n        this.callbackDateFunction(value)\n        this.setState({\n            Selectus: value\n        })\n    }\n    titleSearch = (value) => {\n        this.props.parentTitleCallback(value.target.value);\n    }\n    CellRender() {\n        const { DataList } = this.props\n        if (DataList.length === 0) {\n            return (\n                <div style={{ display: \"grid\", gridTemplateColumns: \"110px 1fr\" }}>\n                    <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        無資料\n                    </div>\n                </div>\n            )\n        }\n        const DataListCell = DataList.map(function (element, index) {           \n            let isSameDay = false;\n            if(index < DataList.length - 1){                   \n                isSameDay = moment(element.Time).isSame(moment(DataList[index+1].Time),'day');                                     \n            }\n            if(index === DataList.length-1){\n                isSameDay = true;\n            }   \n            const cellRender = element.Data.map(function (info, index) {\n                return (\n                    <centerstyle key={index} style={{ flex: 1, borderLeft: \"rgba(238, 238, 238, 1) 1px solid\", borderCollapse: 'collapse' }}>\n                        <t3>{info}</t3>\n                    </centerstyle>\n                );\n            })\n            return (\n                <div key={index} style={{ display: \"grid\", gridTemplateColumns: \"110px 1fr\", height: \"50px\", borderBottom:  isSameDay ? null : '#989898 1px solid' }}>\n                    <centerstyle style={{ display: \"flex\", border: \"1px solid #cccccc\", borderCollapse: 'collapse' }}>\n                        <t3>{element.Time}</t3>\n                    </centerstyle>\n                    <div style={{ display: \"flex\", gridTemplateColumns: \"repeat(9,1fr)\" }}>\n                        {cellRender}\n                    </div>\n                </div>\n            );\n        })\n        return DataListCell\n    }\n\n    fixLineChartData(element) {\n        const { DataList } = this.props;\n        const value = element.value;\n        console.log(value)\n        const number = element.index;\n        let showDate = DataList.map(data => {\n            let temp = {}\n            temp['date'] = data.Time;\n            temp['value'] = data.Data[number];\n            return temp\n        })\n        console.log(showDate)\n        if (showDate === null || showDate.length === 0) {\n            return null\n        }\n\n        showDate.sort((x, y) => {\n            return moment(x.date, 'YYYYMMDDHHmm').valueOf() - moment(y.date, 'YYYYMMDDHHmm').valueOf()\n        })\n\n        this.setState({\n            lineCharttitle: value,\n            lineChart: showDate,\n        }, () => { this.showModel() });\n    }\n    showModel = () => {\n        this.setState({\n            visible: true,\n        });\n    }\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    charttableview = () => {\n        const { IRParse, Selectus, lineCharttitle, lineChart } = this.state\n        console.log(lineCharttitle)\n        if (lineCharttitle === '') { return null }\n\n        const key = Object.keys(IRParse)[Selectus]\n        const rangeKey = IRParse[key]\n        const range = rangeKey[lineCharttitle]\n        const itemValue = []\n        //主要崩潰點在這 因為你會了key但是lineCharttitle還有值 這樣會變成undefined這樣就crash了 你下面定義是有range情況下的max是不是undefined 但是你本身range就是undefined 所以會找不到range中的max\n        if (range === undefined) { return null }\n        console.log(range)\n        const max = range.max !== undefined ? range.max : Math.max(...itemValue)\n        const min = range.min !== undefined ? range.min : Math.min(...itemValue)\n\n        return (\n            <div style={{ margin: \"20px 0px\" }}>\n                <Examchart lineChart={lineChart} lineCharttitle={lineCharttitle} max={max} min={min} id_key={\"svgExamID\"} svg_id={\"svgExamSVG\"}></Examchart>\n            </div>\n        );\n    }\n\n    render() {\n        const { Option } = Select;\n        const visible = this.state.visible\n        // const lineCharttitle = this.state.lineCharttitle\n        const handleOk = this.handleOk\n        const handleCancel = this.handleCancel\n        // const fixLineChartData = this.fixLineChartData\n        const charttableview = this.charttableview()\n        const LabDataList = RegularData.ExamReportJson()\n        //0:CBC 1:電解質 2:肝功能 3:心臟 4:凝血 5:GAS 6:Glucose\n        const SelectList = LabDataList.map(function (info, index) {\n            // console.log(info.index)\n            function StringFormat(formatString) {\n                if (formatString === \"電解質與腎功能檢驗:Na、K、Cl、Ca++、Ca、Mg++、P、BUN、Cr\") {\n                    return <div style={{ fontSize: \"12px\" }}>電解質與腎功能檢驗:Na、K、Cl、Ca<sup>2+</sup>、Ca、Mg<sup>2+</sup>、P、BUN、Cr</div>\n                }\n                if (formatString === \"Gas檢驗:PH、pCO2、pO2、HCO3、BE、O2Sat、FiO2\") {\n                    return <div style={{ fontSize: \"12px\" }}>Gas檢驗:pH、pCO<sub>2</sub>、pO<sub>2</sub>、HCO<sub>3</sub>、BE、O<sub>2</sub>Sat、FiO<sub>2</sub></div>\n                }\n                if (formatString === \"GAS(Additionary)檢驗:Hgb、Hct、Na、K、Ca++、BUN、Cr\") {\n                    return <div style={{ fontSize: \"12px\" }}>GAS(Additionary)檢驗:Hgb、Hct、Na、K、Ca<sup>2+</sup>、BUN、Cr</div>\n                }\n                return <div style={{ fontSize: \"12px\" }}>{formatString}</div>\n            }\n            const string = StringFormat(info.select)\n            return (\n                <Option key={info.index} value={info.index} style={{ fontSize: \"12px\" }}>{string}</Option>\n            );\n        })\n        const SelectTitlefilter = LabDataList.filter(function (element, index) {\n            const selectdata = Select\n            return element.index = selectdata\n        })\n        if (SelectTitlefilter.length === 0) {\n            return null\n        }\n        const SelectTitle = SelectTitlefilter[this.state.Selectus].title\n        const SelectTitleRender = SelectTitle.map((info, index) => {\n            function formatString(formatString) {\n                if (formatString === \"Ca++\") {\n                    return <div style={{ fontSize: \"13px\" }}>Ca<sup>2+</sup></div>\n                }\n                if (formatString === \"Mg++\") {\n                    return <div style={{ fontSize: \"13px\" }}>Mg<sup>2+</sup></div>\n                }\n                if (formatString === \"pCO2\") {\n                    return <div style={{ fontSize: \"13px\" }}>pCO<sub>2</sub></div>\n                }\n                if (formatString === \"pO2\") {\n                    return <div style={{ fontSize: \"13px\" }}>pO<sub>2</sub></div>\n                }\n                if (formatString === \"HCO3\") {\n                    return <div style={{ fontSize: \"13px\" }}>HCO<sub>3</sub></div>\n                }\n                if (formatString === \"FiO2\") {\n                    return <div style={{ fontSize: \"13px\" }}>FiO<sub>2</sub></div>\n                }\n                if (formatString === \"O2Sat\") {\n                    return <div style={{ fontSize: \"13px\" }}>O<sub>2</sub>Sat</div>\n                }\n                return formatString\n            }\n            const infoString = formatString(info)\n            const element = {\n                value: info,\n                index: index\n            }\n            return (\n                <centerstyle style={{ flex: 1 }} key={index}>\n                    <Button style={{ height: \"26px\", width: \"70px\", backgroundColor: \"transparent\", border: \"2px white solid\" }} index={index} value={info} onClick={() => { this.fixLineChartData(element) }}>{infoString}</Button>\n                </centerstyle>\n            );\n        })\n        const ExamLab = this.CellRender()\n\n        return (\n            <div>\n                <Modal\n                    visible={visible}\n                    onOk={handleOk}\n                    onCancel={handleCancel}\n                    width={1200}\n                    footer={null}>\n                    {charttableview}\n                </Modal>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderRadius: \"4px 4px 0 0\", height: \"36px\", padding: \"0px 16px\", display: \"grid\", gridTemplateColumns: \"120px 1fr\", alignItems: \"center\" }}>\n                    <div style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>累積報告</div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"100px 1fr\", gridColumnGap: \"5px\" }}>\n                        <t2 style={{ display: \"flex\", alignItems: \"center\" }}>檢驗類別：</t2>\n                        <div className=\"Select-Dropdown\" style={{ display: \"flex\", alignItems: \"center\" }}>\n                            <Select getPopupContainer={triggerNode => triggerNode.parentNode} defaultValue={this.state.Selectus} style={{ width: \"100%\" }} onChange={this.handleChange}>\n                                {SelectList}\n                            </Select>\n                        </div>\n                    </div>\n                </div>\n                <div style={{ backgroundColor: \"rgba(226, 237, 243,.5)\", height: \"30px\", display: \"grid\", gridTemplateColumns: \"110px 1fr\", alignItems: \"center\" }}>\n                    <centerstyle>\n                        <t2 style={{ display: \"flex\", justifyItems: \"center\" }}>檢驗項目</t2>\n                    </centerstyle>\n                    <div style={{ display: \"flex\" }} onClick={this.titleSearch}>\n                        {SelectTitleRender}\n                    </div>\n                </div>\n                <div style={{ border: \"1px solid rgba(232, 232, 232, 1)\", borderRadius: \"0 0 4px 4px\", borderCollapse: \"collapse\" }}>\n                    <div style={{ minHeight: \"calc(100vh - 305px)\", maxHeight: \"calc(100vh - 305px)\", overflowY: \"auto\" }} >\n                        {ExamLab}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Labview;\n","export function ExamReportJson() {\n    return [\n        {\n            \"select\": \"CBC檢驗:WBC、Band、Seg、Lymp、Hgb、Hct、PLT\",\n            \"index\": 0,\n            \"title\": [\n                \"WBC\",\n                \"Band\",\n                \"Seg\",\n                \"Lymp\",\n                \"Hgb\",\n                \"Hct\",\n                \"PLT\"\n            ]\n        },\n        {\n            \"select\": \"電解質與腎功能檢驗:Na、K、Cl、Ca++、Ca、Mg++、P、BUN、Cr\",\n            \"index\": 1,\n            \"title\": [\n                \"Na\",\n                \"K\",\n                \"Cl\",\n                \"Ca++\",\n                \"Ca\",\n                \"Mg++\",\n                \"P\",\n                \"BUN\",\n                \"Cr\"\n            ]\n        },\n        {\n            \"select\": \"肝功能檢驗:ALT、AST、TBil、DBil、r-GT、Alk-P、ALB\",\n            \"index\": 2,\n            \"title\": [\n                \"ALT\",\n                \"AST\",\n                \"TBil\",\n                \"DBil\",\n                \"r-GT\",\n                \"Alk-P\",\n                \"ALB\"\n            ]\n        },\n        {\n            \"select\": \"早產兒追蹤:Iron、TIBC、FeSat、LDH、Alk-P\",\n            \"index\": 3,\n            \"title\": [\n                \"Iron\",\n                \"TIBC\",\n                \"FeSat\",\n                \"LDH\",\n                \"Alk-P\"\n            ]\n        },\n        {\n            \"select\": \"心臟功能檢驗:CK、CK-MB、BNP、Trop-T\",\n            \"index\": 4,\n            \"title\": [\n                \"CK\",\n                \"CK-MB\",\n                \"BNP\",\n                \"Trop-T\"\n            ]\n        },\n        {\n            \"select\": \"凝血功能檢驗:PT、APTT、INR\",\n            \"index\": 5,\n            \"title\": [\n                \"PT\",\n                \"APTT\",\n                \"INR\"\n            ]\n        },\n        {\n            \"select\": \"Gas檢驗:PH、pCO2、pO2、HCO3、BE、O2Sat、FiO2\",\n            \"index\": 6,\n            \"title\": [\n                \"pH\",\n                \"pCO2\",\n                \"pO2\",\n                \"HCO3\",\n                \"BE\",\n                \"O2Sat\",\n                \"FiO2\"\n            ]\n        },\n        ,\n        {\n            \"select\": \"GAS(Additionary)檢驗:Hgb、Hct、Na、K、Ca++、BUN、Cr\",\n            \"index\": 7,\n            \"title\": [\n                \"Hgb\",\n                \"Hct\",\n                \"Na\",\n                \"K\",\n                \"Ca++\",\n                \"BUN\",\n                \"Cr\"\n            ]\n        },\n        {\n            \"select\": \"Glucose檢驗:Glu(BedSide, Lab)\",\n            \"index\": 8,\n            \"title\": [\n                \"Glu(BedSide)\",\n                \"Glu(Lab)\"\n            ]\n        },\n        {\n            \"select\": \"黃疸檢查:TCB、MicroBil、TBil、DBil\",\n            \"index\": 9,\n            \"title\": [\n                \"TCB\",\n                \"MicroBil\",\n                \"TBil\",\n                \"DBil\"\n            ]\n        },\n        {\n            \"select\": \"感染指數:WBC、Band、Seg、Lymp、PCT、CRP\",\n            \"index\": 10,\n            \"title\": [\n                \"WBC\",\n                \"Band\",\n                \"Seg\",\n                \"Lymp\",\n                \"PCT\",\n                \"CRP\"\n            ]\n        }\n    ]\n}\nexport function FlagReg() {\n    return [\n        {\n            item: \"Respirator\",\n            \"ParseValueUD\": [\n                \"Restriction\"\n            ],\n            \"ParseValueTRT\": []\n        },\n        {\n            item: \"TPN\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"NPO\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"Anti\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"Foley\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        },\n        {\n            \"item\": \"Drain\",\n            \"ParseValueUD\": [],\n            \"ParseValueTRT\": []\n        }\n    ]\n}\nexport function QDC() {\n    return {\n        \"Feeding\": [\n            \"進食\"\n        ],\n        \"IV\": [\n            \"血品\",\n            \"輸液\"\n        ],\n        \"Urine\": [\n            \"排尿\"\n        ],\n        \"Other\": [\n            \"失血\",\n            \"滲液\",\n            \"嘔吐\",\n            \"引流\",\n            \"穿刺\",\n            \"透析\",\n            \"沖洗\",\n            \"排便\"\n        ]\n    }\n}\n\nexport function ChronicLab() {\n    return {\n        \"Biochemical\": [\n        ],\n        \"Blood\": [\n            \"BLOOD\"\n        ],\n        \"Cultivate\": [\n\n        ],\n        \"GAS\": [\n\n        ],\n        \"Glu\": [\n\n        ],\n        \"Radiation\": [\n        ]\n    }\n}\n\nexport function NonLabExamReportParser() {\n    return [\n        {\n            parser_name: \"CBC\",\n            apply_condition: {\n                name: \"CBC|WBC|HB|PLT\",\n                sample: null,\n                lab: null,\n                start_time: null,\n                end_time: null,\n            },\n            mappings: [\n                {\n                    key: \"Hb\",\n                    regex_str: \"HB:\\\\s+(\\\\d+(.\\\\d)?)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"WBC\",\n                    regex_str: \"wbc:\\\\s+(\\\\d+)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"PLT\",\n                    regex_str: \"plt:\\\\s+(\\\\d+)\",\n                    regex_flags: 'ism',\n                    position: 1\n                }\n            ],\n            summary: \"[WBC;-]/[Hb;]/[PLT;-]\"\n        },\n        {\n            parser_name: \"Atypical Respiratory Panel\",\n            apply_condition: {\n                name: \"Atypical Respiratory Panel|CBC|PH|HB|PO2\",\n                sample: null,\n                lab: null,\n                start_time: null,\n                end_time: null,\n            },\n            mappings: [\n                {\n                    key: \"Hb\",\n                    regex_str: \"Hb:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"PH\",\n                    regex_str: \"PH:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"PO2\",\n                    regex_str: \"PO2:\\\\s+\\\\((\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"FIO2\",\n                    regex_str: \"FIO2:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"HCO3\",\n                    regex_str: \"HCO3:\\\\s+\\\\((\\\\d+.\\\\d+)\\\\)\",\n                    regex_flags: 'ism',\n                    position: 1\n                }\n            ],\n            summary: \"[PH;-]/[Hb;-]/[PO2;-]/[FIO2;-]/[HCO3;-]\"\n        }\n    ]\n}\n\nexport function NonLabExamORDListParser() {\n    return [\n        {\n            parser_name: \"ORDLIST\",\n            apply_condition: {\n                name: \"ORDLIST\",\n                sample: null,\n                lab: null,\n                start_time: null,\n                end_time: null,\n            },\n            mappings: [\n                {\n                    key: \"飲食類別\",\n                    regex_str: \"(CHEST\\\\s+KUB\\\\s+\\\\(FOR\\\\s+BABY\\\\)\\\\s+PORTABLE)|(BRAIN\\\\s+ECHO\\\\s+\\\\(NBD\\\\))\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"管路類別\",\n                    regex_str: \"(BLOOD\\\\s+GAS)|(Atypical\\\\s+Respiratory\\\\s+Panel)|(BLOOD\\\\s+PRODUCTS\\\\s+IRRADIATION)|(Aliqot\\\\s+and\\\\s+storage\\\\s+of\\\\s+blood)\",\n                    regex_flags: 'ism',\n                    position: 1\n                },\n                {\n                    key: \"呼吸類別\",\n                    regex_str: \"(NT-pro-BNP)|(ANTIBODY\\\\s+SCREENING)\",\n                    regex_flags: 'ism',\n                    position: 1\n                }\n            ],\n            summary: \"[CHEST KUB;-]/[BLOOD GAS;-]/[Glucose;-]\"\n        }\n    ]\n}\n\nexport function InspectionReportExtent() {\n    return {\n        \"CBC\": {\n            \"WBC\": {\n                \"min\": 10000,\n                \"max\": 30000\n            },\n            \"Band\": {\n                \"min\": 0,\n                \"max\": 10\n            },\n            \"Seg\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"Lymp\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"Hgb\": {\n                \"min\": 10,\n                \"max\": 18\n            },\n            \"Hct\": {\n                \"min\": 30,\n                \"max\": 55\n            },\n            \"PLT\": {\n                \"min\": 100000,\n                \"max\": 450000\n            }\n        },\n        \"電解質與腎功能\": {\n            \"Na\": {\n                \"min\": 120,\n                \"max\": 160\n            },\n            \"K\": {\n                \"min\": 0,\n                \"max\": 8\n            },\n            \"Cl\": {\n                \"min\": 80,\n                \"max\": 120\n            },\n            \"Ca++\": {\n                \"min\": 0.5,\n                \"max\": 1.8\n            },\n            \"Ca\": {\n                \"min\": 6,\n                \"max\": 12\n            },\n            \"Mg++\": {\n                \"min\": 0,\n                \"max\": 8\n            },\n            \"P\": {\n                \"min\": 0,\n                \"max\": 10\n            },\n            \"BUN\": {\n                \"min\": 0,\n                \"max\": 60\n            },\n            \"Cr\": {\n                \"min\": 0,\n                \"max\": 5\n            }\n        },\n        \"肝功能\": {\n            \"ALT\": {\n                \"min\": 0,\n                \"max\": 200\n            },\n            \"AST\": {\n                \"min\": 0,\n                \"max\": 200\n            },\n            \"TBil\": {\n                \"min\": 0,\n                \"max\": 30\n            },\n            \"DBil\": {\n                \"min\": 0,\n                \"max\": 20\n            },\n            \"r-GT\": {\n                \"min\": 0,\n                \"max\": 200\n            },\n            \"Alk-P\": {\n                \"min\": 0,\n                \"max\": 1600\n            },\n            \"ALB\": {\n                \"min\": 0,\n                \"max\": 5\n            }\n        },\n        \"早產兒追蹤\": {\n            \"Iron\": {\n                \"min\": 0,\n                \"max\": 300\n            },\n            \"TIBC\": {\n                \"min\": 0,\n                \"max\": 300\n            },\n            \"FeSat\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"LDH\": {\n                \"min\": 0,\n                \"max\": 2000\n            },\n            \"Alk-P\": {\n                \"min\": 0,\n                \"max\": 1600\n            }\n        },\n        \"心臟功能\": {\n            \"CK\": {\n                \"min\": 0,\n                \"max\": 6000\n            },\n            \"CK-MB\": {\n                \"min\": 0,\n                \"max\": 2000\n            },\n            \"BNP\": {\n                \"min\": 0,\n                \"max\": 20000\n            },\n            \"Trop-T\": {\n                \"min\": 0,\n                \"max\": 1000\n            }\n        },\n        \"凝血功能\": {\n            \"PT\": {\n                \"min\": 0,\n                \"max\": 120\n            },\n            \"APTT\": {\n                \"min\": 0,\n                \"max\": 120\n            },\n            \"INR\": {\n                \"min\": 0,\n                \"max\": 4\n            }\n        },\n        \"Gas\": {\n            \"pH\": {\n                \"min\": 6.5,\n                \"max\": 7.7\n            },\n            \"pCO2\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"pO2\": {\n                \"min\": 0,\n                \"max\": 200\n            },\n            \"HCO3\": {\n                \"min\": 0,\n                \"max\": 40\n            },\n            \"BE\": {\n                \"min\": -30,\n                \"max\": 20\n            },\n            \"O2Sat\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"FiO2\": {\n                \"min\": 0,\n                \"max\": 100\n            }\n        },\n        \"GAS(Additionary)\": {\n            \"Hgb\": {\n                \"min\": 6,\n                \"max\": 22\n            },\n            \"Hct\": {\n                \"min\": 10,\n                \"max\": 70\n            },\n            \"Na\": {\n                \"min\": 120,\n                \"max\": 160\n            },\n            \"K\": {\n                \"min\": 0,\n                \"max\": 8\n            },\n            \"Ca++\": {\n                \"min\": 0.5,\n                \"max\": 1.8\n            },\n            \"BUN\": {\n                \"min\": 0,\n                \"max\": 60\n            },\n            \"Cr\": {\n                \"min\": 0,\n                \"max\": 5\n            }\n        },\n        \"Glucose\": {\n            \"Glu(BedSide)\": {\n                \"min\": 0,\n                \"max\": 300\n            },\n            \"Glu(Lab)\": {\n                \"min\": 0,\n                \"max\": 300\n            }\n        },\n        \"黃疸\": {\n            \"TCB\": {\n                \"min\": 0,\n                \"max\": 30\n            },\n            \"MicroBil\": {\n                \"min\": 0,\n                \"max\": 30\n            },\n            \"TBil\": {\n                \"min\": 0,\n                \"max\": 30\n            },\n            \"DBil\": {\n                \"min\": 0,\n                \"max\": 20\n            }\n        },\n        \"感染指數\": {\n            \"WBC\": {\n                \"min\": 0,\n                \"max\": 40000\n            },\n            \"Band\": {\n                \"min\": 0,\n                \"max\": 0.05\n            },\n            \"Seg\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"Lymp\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"PCT\": {\n                \"min\": 0,\n                \"max\": 20\n            },\n            \"CRP\": {\n                \"min\": 0,\n                \"max\": 20\n            }\n        }\n    }\n\n}\n","import React, { Component } from 'react';\nimport './ExamNonlabtablecell.scss'\n// import { Nonlablist } from '../../Data/Wardviewdata'\nimport moment from 'moment'\nimport NonlabviewtableCell from '../CrossSectionView/NonlabviewtableCell'\n// import { Modal } from 'antd';\n// import InsReportModal from '../ExamReportModal'\n\nclass Examnonlabviewtable extends Component { \n    state = {\n        visible: false\n    }\n\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            const resultKey = mapping.sample ? mapping.key + \"-\" + mapping.sample : mapping.key\n            allResult[resultKey] = []\n        });\n        allResult[\"全部類別\"] = []\n        inputs.forEach(input => {\n            let content = input.ORPROCED;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\" && (mapping.sample ? input.ORSPCN1.trim() === mapping.sample : true)) {\n                    const resultKey = mapping.sample ? mapping.key + \"-\" + mapping.sample : mapping.key\n                    allResult[resultKey].push(input)\n                }\n            });\n\n            allResult[\"全部類別\"].push(input)\n        });\n\n        return allResult;\n    }\n\n    render() {\n        function listforstatus(ordlist, ressect, pickerdaterange, StateMode, InputMode) {\n            if (StateMode !== 0) {\n                /*\n                預設 \n                全部 StateMode == 0\n                已開單 StateMode == 1, data.ORSTATUS == 30\n                已簽收 StateMode == 2, data.ORSTATUS == 31\n                已發報告 StateMode == 3, data.ORSTATUS == 32\n                */\n                const changeState = { '1': '30', '2': '31', '3': '32' }\n                ordlist = ordlist.filter(data => {\n                    return data.ORSTATUS === changeState[StateMode.toString()]\n                })\n            }\n\n            if (InputMode !== null) {\n                const regex = new RegExp(InputMode, \"i\");\n                ordlist = ordlist.filter(data => {\n                    return data.ORPROCED.match(regex) !== null\n                })\n            }\n\n            let status_report = []\n            const et = pickerdaterange[1].valueOf() + (24 * 60 * 60 * 1000)\n            const st = pickerdaterange[0].valueOf()\n\n            if (Array.isArray(ordlist) && Array.isArray(ressect)) {\n                for (let index = 0; index < ordlist.length; index++) {\n                    const element = ordlist[index];\n                    const time = element.ORBGNDT.toString().trim() + element.ORBGNTM.toString().trim()\n                    const timeStamp = moment(time, 'YYYY-MM-DDHHmmss').valueOf()\n                    if (timeStamp > st && timeStamp < et) {\n                        const status = ressect.find(function (value, index, array) {\n                            return value.ORDCLNM === element.ORDCLNM\n                        })\n                        if (status) {\n                            status_report.push({\n                                \"status\": true,\n                                \"element\": element\n                            })\n                        }\n                        else {\n                            status_report.push({\n                                \"status\": false,\n                                \"element\": element\n                            })\n\n                        }\n                    }\n                }\n            }\n\n            console.log(status_report.length)\n\n            status_report = status_report.sort((a, b) => {\n                let tempA = a.ORBGNDT.toString().trim() + a.ORBGNTM.toString().trim()\n                let tempTimeA = moment(tempA, 'YYYY-MM-DDHHmmss').valueOf()\n                let tempB = b.ORBGNDT.toString().trim() + b.ORBGNTM.toString().trim()\n                let tempTimeB = moment(tempB, 'YYYY-MM-DDHHmmss').valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n\n            return status_report\n        }\n        function formatPickerDateRangeToORDLIST(ORDLIST, PickerDateRange) {\n            const start = PickerDateRange[0]\n            const end = PickerDateRange[1]\n            if (Array.isArray(ORDLIST)) {\n                const filterORDLIST = ORDLIST.filter(function (info, index, arr) {\n                    const BGtime = moment(info.ORBGNDT.toString().trim() + info.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n                    return start <= BGtime && BGtime <= end\n                })\n                return filterORDLIST\n            }\n            return null\n\n        }\n        function formatSelectMode(data, selectMode) {\n            //StateMode 0:全部狀態 1:正式報告 2:已簽收 3:待送檢 4:其他\n            if (Array.isArray(data)) {\n                if (selectMode === 1) {\n                    const filterData = data.filter(function (info, index, arr) {\n                        return Number(info.ORSTATUS) === 64\n                    })\n                    return filterData\n                }\n                if (selectMode === 2) {\n                    const filterData = data.filter(function (info, index, arr) {\n                        return Number(info.ORSTATUS) === 38\n                    })\n                    return filterData\n                }\n                if (selectMode === 3) {\n                    const filterData = data.filter(function (info, index, arr) {\n                        return Number(info.ORSTATUS) === 31\n                    })\n                    return filterData\n                }\n                if (selectMode === 4) {\n                    const filterData = data.filter(function (info, index, arr) {\n                        return Number(info.ORSTATUS) !== 31 && Number(info.ORSTATUS) !== 64 && Number(info.ORSTATUS) !== 38\n                    })\n                    return filterData\n                }\n                return data\n            }\n            return null\n\n        }\n        function formatInputMode(data, InputMode) {\n            if (Array.isArray(data)) {\n                if (InputMode === null || InputMode === \"\" || InputMode === undefined) {\n                    return data\n                }\n                const filterInputMode = data.filter(function (info, index, arr) {\n                    return info.ORPROCED.toString().toLowerCase().match(InputMode) !== null || info.ORSPCN1.toString().toLowerCase().match(InputMode)\n                })\n                return filterInputMode\n            }\n            return null\n        }\n        const { PickerDateRange, ORDLIST, StateMode, InputMode, selectedClass } = this.props\n\n        const filterTimer = formatPickerDateRangeToORDLIST(ORDLIST, PickerDateRange)\n        const filterStateMode = formatSelectMode(filterTimer, StateMode)\n        const filterInput = formatInputMode(filterStateMode, InputMode)\n\n        console.log(filterTimer)\n        console.log(filterStateMode)\n        console.log(filterInput)\n        let clusteredData = null\n        if (this.props.parser !== undefined && this.props.parser.mappings.length !== 0) {\n            console.log(this.props.parser.mappings.length)\n            clusteredData = this.parse(filterInput, this.props.parser)\n        }\n\n        // console.log(clusteredData, this.props.selectedClass)\n        if (clusteredData === null) {\n            return null\n        }\n        const filteredData = clusteredData[this.props.selectedClass];\n        const sortfilteredData = filteredData.sort(function (a, b) {\n            const aBGtime = moment(a.ORBGNDT.toString().trim() + a.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n            const bBGtime = moment(b.ORBGNDT.toString().trim() + b.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n            return aBGtime < bBGtime ? 1 : -1;\n        });\n        // const list = listforstatus(filteredData, RESSECT, PickerDateRange, StateMode, InputMode)\n        const showModal = this.props.showModal\n        const nonlabcell = sortfilteredData.map(function (value, index, array) {\n            function ORSTATUSToString(ORSTATUS) {\n                if (ORSTATUS === 64) {\n                    return 0\n                }\n                if (ORSTATUS === 38) {\n                    return 1\n                }\n                if (ORSTATUS === 31) {\n                    return 2\n                }\n                return ORSTATUS\n            }\n            console.log(value)\n            const time = moment(value.ORBGNDT.toString().trim() + value.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf()\n            const come = value.ORSPCN1\n            const name = value.ORPROCED\n            const status = ORSTATUSToString(Number(value.ORSTATUS))\n\n            let isSameDay = false;\n            if(index < filteredData.length - 1){                   \n                const day = moment(time).format('YYYY/MM/DD');\n                const compareDay = moment(filteredData[index+1].ORBGNDT.toString().trim() + value.ORBGNTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").format('YYYY/MM/DD');\n                isSameDay = moment(day).isSame(compareDay,'day');                                     \n            }\n            if(index === filteredData.length-1){\n                isSameDay = true;\n            } \n\n            return (\n                <NonlabviewtableCell key={\"Examnonlabviewtable\" + index} come={come} time={time} name={name} status={status} hisId={value.ORHISTNO} caseId={value.ORDSEQCN} month={value.ORMM} seq={value.ORDSEQNO} showModal={showModal} isSameDay={isSameDay}></NonlabviewtableCell>\n            );\n        })\n\n        const title = [\"時間\", \"檢驗項目\", \"檢體\", \"狀態\", \"報告\"]\n        const titlecell = title.map(function (value, index, arr) {\n            // const tempStyle = index == 1\n            return (\n                <t3 className='nonlabtebletitlecell' style={{ justifyContent: \"center\" }}>{value}</t3>\n            );\n        })\n\n        return (\n            <div style={{ marginTop: \"10px\" }}>\n                <div style={{ height: \"30px\", border: \"rgba(238,238,238,1) 1px solid\", backgroundColor: \"rgba(226, 237, 243,.5)\", display: \"grid\", gridTemplateColumns: \"1fr 1.5fr 1fr 1fr 1fr\" }}>\n                    {titlecell}\n                </div>\n                <div style={{ border: \"1px solid rgba(232, 232, 232, 1)\", borderRadius: \"0 0 4px 4px\", borderCollapse: \"collapse\" }}>\n                    <div style={{ minHeight: \"calc(100vh - 305px)\", maxHeight: \"calc(100vh - 305px)\", overflowY: \"auto\" }} >\n                        {JSON.stringify(filteredData) !== '[]' ?\n                            nonlabcell\n                            :\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1.5fr 1fr 1fr 1fr\" }}>\n                                <div style={{ height: \"50px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                    無資料\n                                </div>\n                            </div>}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Examnonlabviewtable\n","import React, { Component } from 'react';\nimport Examnonlabviewtable from './ExamNonlabtablecell'\nimport { Input, Select, Modal } from 'antd';\n// import moment from 'moment';\n// import searchlogo from '../../Image/svg/Search.svg'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport * as Apiprovider from '../../API/ApiProvider'\nimport InsReportModal from '../ExamReportModal'\nimport moment from 'moment'\nimport * as ORDER from '../../Resource/ORDERLIST'\n\n// var mode_class, mode_state;\nclass Nonlabview extends Component {\n    state = {\n        ClassMode: \"全部類別\",\n        StateMode: 0,\n        InputMode: null,\n        parser: { \"mappings\": [] },\n        modalVisible: false,\n        modalReport: \"\",\n\n        preHID: null,\n        prestartTime: null,\n        preendTime: null,\n        ORDLIST: []\n    }\n\n    componentDidMount() {\n        const { caseinfo, PickerDateRange } = this.props\n        const HID = caseinfo.HISID\n        const startTime = moment(PickerDateRange[0]).format(\"YYYY-MM-DD\")\n        const endTime = moment(PickerDateRange[1]).format(\"YYYY-MM-DD\")\n        this.setState({ preHID: HID, prestartTime: startTime, preendTime: endTime })\n        this.getAPI(HID, startTime)\n    }\n    componentDidUpdate() {\n        const { caseinfo, PickerDateRange } = this.props\n        const { preHID, prestartTime, preendTime } = this.state\n        const HID = caseinfo.HISID\n        const startTime = moment(PickerDateRange[0]).format(\"YYYY-MM-DD\")\n        const endTime = moment(PickerDateRange[1]).format(\"YYYY-MM-DD\")\n        if (HID !== preHID || startTime !== prestartTime || endTime !== preendTime) {\n            this.setState({ preHID: HID, prestartTime: startTime, preendTime: endTime })\n            this.getAPI(HID, startTime)\n        }\n    }\n    getAPI(HID, storeProcedureTime) {\n        Apiprovider.getStoredProcedureORDLIST(HID, storeProcedureTime, \"ALL\", \"DOC3924B\")\n            .then(data => this.setState({ ORDLIST: data.data }))\n            .catch(err => { console.log(err) })\n\n        // this.setState({ ORDLIST: ORDER.data })\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"NonLabExamReport\");\n                parser.mappings = [{ \"key\": \"全部類別\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson ExamReportNonLab OK \" + JSON.stringify(parser))\n                this.setState({\n                    parser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    Inputvaluesearch = (event) => {\n        this.setState({ InputMode: event.target.value })\n    }\n\n    onChangeState = (value) => {\n        this.setState({ StateMode: value })\n    }\n\n    onChangeClass = (value) => {\n        this.setState({ ClassMode: value })\n    }\n\n    showModal = (report) => {\n        this.setState({\n            modalVisible: true,\n            modalReport: report\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    render() {\n        const { Option,caseinfo } = Select;\n        const { PickerDateRange } = this.props\n        const { modalVisible, modalReport, ORDLIST } = this.state\n        const showModal = this.showModal\n        const handleOk = this.handleOk\n        const handleCancel = this.handleCancel\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderRadius: \"4px 4px 0 0\", height: \"36px\", padding: \"0px 16px\", display: \"grid\", alignItems: \"center\", gridTemplateColumns: \"2fr 3fr\", justifyContent: \"space-between\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>檢驗清單及報告</t2>\n                    <div style={{ display: 'grid', gridTemplateColumns: \"130px 100px auto\", gridColumnGap: \"5px\" }}>\n                        <Select defaultValue={this.state.ClassMode} placeholder=\"選擇檢驗類別\" style={{ width: 120 }} onChange={this.onChangeClass}>\n                            {this.state.parser.mappings.map((mapping, index) => {\n                                return <Option key={index} value={mapping.sample ? mapping.key + \"-\" + mapping.sample : mapping.key}>{mapping.sample ? mapping.key + \"-\" + mapping.sample : mapping.key}</Option>\n                            })}\n                        </Select>\n                        <Select defaultValue={this.state.StateMode} placeholder=\"選擇項目狀態\" style={{ width: 100 }} onChange={this.onChangeState}>\n                            <Option value={0}>全部狀態</Option>\n                            <Option value={1}>正式報告</Option>\n                            <Option value={2}>已簽收</Option>\n                            <Option value={3}>待送檢</Option>\n                            <Option value={4}>其他</Option>\n                        </Select>\n                        <Input id=\"keywordsearch\" placeholder=\"輸入關鍵字\" onChange={this.Inputvaluesearch} />\n                    </div>\n                </div>\n                <Examnonlabviewtable PickerDateRange={PickerDateRange} ORDLIST={ORDLIST} selectedClass={this.state.ClassMode} parser={this.state.parser} StateMode={this.state.StateMode} InputMode={this.state.InputMode} visible={modalVisible} showModal={showModal} handleOk={handleOk} handleCancel={handleCancel}></Examnonlabviewtable>\n                {/* <Nonlabviewtable caseinfo={caseinfo} StartTime={PickerDateRange[0]} EndTime={PickerDateRange[1]}></Nonlabviewtable> */}\n                <Modal\n                    title={\"檢驗結果\"}\n                    visible={modalVisible}\n                    onOk={handleOk}\n                    onCancel={handleCancel}\n                    width={1000}\n                    footer={null}>\n                    <InsReportModal report={modalReport}></InsReportModal>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Nonlabview\n","import React, { Component } from 'react';\nimport Labview from './ExamLabview'\nimport { DatePicker, Button, Icon } from 'antd';\nimport './ExamReport.scss'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport Nonlabview from './NonLabview'\nimport locale from 'antd/es/date-picker/locale/zh_TW';\nimport Nonlabviewtable from '../CrossSectionView/Nonlabviewtable'\n// import * as RegularData from '../../Data/RegularData'\n\nclass Examreport extends Component {\n    state = {\n        selectdata: 0,\n        selectTitle: '',\n        PickerDateRange: [moment(moment().subtract(6, 'days').format('YYYYMMDD')),\n        moment(moment().format('YYYYMMDD'))],\n        RESDGLU1: [], //累積報告\n        RESLAB02: [], //累積報告\n        RESLAB01: [],  //累積報告\n        RESDBGAS: [],  //累積報告\n        RESLAB0C: [],//累積報告\n        ORDLIST: [],\n        RESSECT: [],\n        isLoading: false,\n    }\n    constructor(props) {\n        super(props)\n        this.PickerDateRangeChange = this.PickerDateRangeChange.bind(this)\n    }\n\n    SelectDataList() {\n        function vallofnull(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"\"\n            }\n            return value.toString().trim()\n        }\n        const DateRange = this.state.PickerDateRange\n        const selectData = this.state.selectdata\n        const st_timestamp = DateRange[0].valueOf()\n        const et_timestamp = DateRange[1].valueOf() + (24 * 60 * 60 * 1000)\n        // const { PickerDateRange, RESLAB02, RESDGLU1, RESLAB01, RESDBGAS, RESLAB0C, ORDLIST, RESSECT } = this.props\n        const RESLAB02 = this.state.RESLAB02\n        const RESDGLU1 = this.state.RESDGLU1\n        const RESLAB01 = this.state.RESLAB01\n        const RESDBGAS = this.state.RESDBGAS\n        const RESLAB0C = this.state.RESLAB0C\n\n\n        var CellData = []\n        if (selectData === 0) { // CBC\n            for (let index = 0; index < RESLAB02.length; index++) {\n                const element = RESLAB02[index];\n                const WBC = vallofnull(element.RSV01)\n                const Band = vallofnull(element.RSV13)\n                const Seq = vallofnull(element.RSV14)\n                const Lym = vallofnull(element.RSV15)\n                const Hb = vallofnull(element.RSV03)\n                const Hct = vallofnull(element.RSV04)\n                const Plt = vallofnull(element.RSV09)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [WBC, Band, Seq, Lym, Hb, Hct, Plt]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 1) { // 電解質與腎\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const Na = vallofnull(element.RSV13)\n                const K = vallofnull(element.RSV14)\n                const Cl = vallofnull(element.RSV15)\n                const CaFree = \"No\"\n                const CaTotal = vallofnull(element.RSV03)\n                const Mg = \"No\"\n                const P = vallofnull(element.RSV17)\n                const BUN = vallofnull(element.RSV05)\n                const Cr = vallofnull(element.RSV06)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [Na, K, Cl, CaFree, CaTotal, Mg, P, BUN, Cr]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 2) { // 肝功能\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const Alt = vallofnull(element.RSV11)\n                const AST = vallofnull(element.RSV12)\n                const TBil = vallofnull(element.RSV08)\n                const DBil = vallofnull(element.RSV25)\n                const rGGT = vallofnull(element.RSV19)\n                const Alkp = vallofnull(element.RSV09)\n                const Alb = vallofnull(element.RSV02)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [Alt, AST, TBil, DBil, rGGT, Alkp, Alb]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 3) { // 早產兒\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const Iron = vallofnull(element.RSV26)\n                const TIBC = vallofnull(element.RSV28)\n                const FeSat = parseInt(vallofnull(element.RSV26)) / parseInt(vallofnull(element.RSV26))\n                const LDH = vallofnull(element.RSV10)\n                const Alkp = vallofnull(element.RSV9)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [Iron, TIBC, FeSat, LDH, Alkp]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 4) { // 心臟\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const element = RESLAB01[index];\n                const ck = vallofnull(element.RSV18)\n                const ckMB = vallofnull(element.RSV28)\n                const BNP = \"No\"\n                const Troponinl = vallofnull(element.RSV30)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [ck, ckMB, BNP, Troponinl]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 5) { // 凝血\n            for (let index = 0; index < RESLAB02.length; index++) {\n                const element = RESLAB02[index];\n                const PT = vallofnull(element.RSV10)\n                const APTT = vallofnull(element.RSV11)\n                const INR = vallofnull(element.RSV12)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [PT, APTT, INR]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 6) { // GAS(Acid-Base)\n            for (let index = 0; index < RESDBGAS.length; index++) {\n                const element = RESDBGAS[index];\n                const PH = vallofnull(element.SS07)\n                const pCO2 = vallofnull(element.SS06)\n                const pO2 = vallofnull(element.SS08)\n                const HCO3 = vallofnull(element.SS04)\n                const BE = vallofnull(element.SS01)\n                const O2Sat = vallofnull(element.SS05)\n                const FiO2 = vallofnull(element.SS03)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [PH, pCO2, pO2, HCO3, BE, O2Sat, FiO2]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 7) { // GAS(Additionary)\n            for (let index = 0; index < RESDBGAS.length; index++) {\n                const element = RESDBGAS[index];\n                const Hb = vallofnull(element.SS11)\n                const Hct = vallofnull(element.SS12)\n                const Na = vallofnull(element.SS13)\n                const K = vallofnull(element.SS14)\n                const CaFree = vallofnull(element.SS15)\n                const Bun = vallofnull(element.SS16)\n                const Cr = vallofnull(element.SS17)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [Hb, Hct, Na, K, CaFree, Bun, Cr]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 8) { // Glucose\n            for (let index = 0; index < RESDGLU1.length; index++) {\n                const element = RESDGLU1[index]\n                const GluBeside = vallofnull(element.GLUFAST)\n                const GluLab = vallofnull(element.RSV16)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [GluBeside, GluLab]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 9) { // 黃疸\n            for (let index = 0; index < RESLAB0C.length; index++) {\n                const element = RESLAB0C[index]\n                const TCB = vallofnull(element.RSV01)\n                const MicroBil = vallofnull(element.RSV02)\n                const TBil = vallofnull(element.RSV03)\n                const DBil = vallofnull(element.RSV04)\n                const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [TCB, MicroBil, TBil, DBil]\n                    })\n                }\n            }\n            return CellData\n        }\n        if (selectData === 10) { // 感染指數\n            for (let index = 0; index < RESLAB02.length; index++) {\n                const elementOne = RESLAB02[index]\n                const WBC = vallofnull(elementOne.RSV01)\n                const Band = vallofnull(elementOne.RSV13)\n                const Seg = vallofnull(elementOne.RSV14)\n                const Lym = vallofnull(elementOne.RSV15)\n\n                const time = moment((elementOne.ORRESDT.toString() + elementOne.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((elementOne.ORRESDT.toString() + elementOne.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [WBC, Band, Seg, Lym, null, null]\n                    })\n                }\n            }\n            for (let index = 0; index < RESLAB01.length; index++) {\n                const elementTwo = RESLAB01[index]\n                const PCT = null\n                const CRP = vallofnull(elementTwo.RSV32)\n                const time = moment((elementTwo.ORRESDT.toString() + elementTwo.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                if (st_timestamp < time && time < et_timestamp) {\n                    CellData.push({\n                        Time: moment((elementTwo.ORRESDT.toString() + elementTwo.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").format(\"YYYY/MM/DD HH:mm:ss\"),\n                        Data: [null, null, null, null, PCT, CRP]\n                    })\n                }\n            }\n            return CellData\n        }\n        return null\n\n    }\n\n    componentDidMount() {\n        const { caseinfo } = this.props\n        this.setState({ preHID: caseinfo.HISID })\n        this.APIUpdate(caseinfo.TRANSINDT, caseinfo.HISID)\n        this.SelectDataList = this.SelectDataList.bind(this)\n    }\n\n    componentDidUpdate() {\n        const { caseinfo } = this.props\n        const { preHID } = this.state\n        if (preHID !== caseinfo.HISID) {\n            this.setState({ preHID: caseinfo.HISID })\n            this.APIUpdate(caseinfo.TRANSINDT, caseinfo.HISID)\n            this.SelectDataList = this.SelectDataList.bind(this)\n        }\n    }\n\n    // ChangeRangePicker(dates, datestrings) {\n\n    // }\n    APIUpdate(DateRange,HID) {\n        this.setState({ isLoading: true });\n        function selectMonthInterval(PickerDate) {\n            const timestampInterval = new Date().getTime() - new Date(PickerDate).getTime()\n            const timestampMonth = 30 * 24 * 60 * 60 * 1000\n            const MonthInt = parseInt(timestampInterval / timestampMonth) + 1\n            return MonthInt\n        }\n\n        const st = moment(DateRange, \"YYYYMMDD\").format(\"YYYY-MM-DD\")\n        console.log(DateRange, HID)\n        const datePick = moment(DateRange, \"YYYYMMDD\").format('YYYY/MM/DD')\n        const MonthInterval = selectMonthInterval(datePick)\n        const RESDGLU1 = ApiProvider.getStoredProcedureRESDGLU1(HID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESLAB02 = ApiProvider.getStoredProcedureRESLAB02(HID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESLAB01 = ApiProvider.getStoredProcedureRESLAB01(HID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESDBGAS = ApiProvider.getStoredProcedureRESDBGAS(HID, st)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const RESLAB0C = ApiProvider.getStoredProcedureRESLAB0C(HID, st)\n            .then(data => {\n                console.log(data.data)\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const ORDLIST = ApiProvider.getStoredProcedureORDLIST(HID, st, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                console.log(data.data)\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        const RESSECT = ApiProvider.getStoredProcedureRESSECT(HID, MonthInterval, \"ALL\", \"DOC3924B\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        Promise.all([RESDGLU1, RESLAB02, RESLAB01, RESDBGAS, RESLAB0C, ORDLIST, RESSECT]).then(result => {\n            this.setState({\n                RESDGLU1: result[0], //累積報告\n                RESLAB02: result[1],  //累積報告\n                RESLAB01: result[2],  //累積報告\n                RESDBGAS: result[3],  //累積報告\n                RESLAB0C: result[4],  //累積報告\n                ORDLIST: result[5],\n                RESSECT: result[6],\n                isLoading: false,\n            })\n        }).catch(() => { this.setState({ isLoading: false }); });\n    }\n    callbackDateFunction = (select) => {\n        this.setState({\n            selectdata: select\n        })\n    }\n\n    callbackTitleFunction = (select) => {\n        this.setState({\n            selectTitle: select\n        })\n    }\n\n    PickerDateRangeChange(date, dateString) {\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDateRange } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const st = PickerDateRange[0].valueOf()\n        const et = PickerDateRange[1].valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                if (bronDate <= (st - day)) {\n                    const bTime = [moment(moment(st - day).format('YYYYMMDD')), moment(moment(et - day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(bTime)\n                }\n                break;\n            case 'N':\n                const nTime = [moment(moment().subtract(6, 'days').format('YYYYMMDD')), moment(moment().format('YYYYMMDD'))]\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                if (aTemp >= (et + day)) {\n                    const aTime = [moment(moment(st + day).format('YYYYMMDD')), moment(moment(et + day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(aTime)\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const momentDate = this.state.PickerDateRange\n        let data = this.SelectDataList()\n\n        data = data.sort((a, b) => {\n            let tempTimeA = moment(a.Time, 'YYYY-MM-DDHHmmss').valueOf()\n            let tempTimeB = moment(b.Time, 'YYYY-MM-DDHHmmss').valueOf()\n            return tempTimeA < tempTimeB ? 1 : -1\n        })\n\n        const { RangePicker } = DatePicker\n        const PickerDateRange = [momentDate[0].valueOf(), momentDate[1].valueOf()]\n\n        return (\n            <div className='examreportlayout'>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"250px 120px\", gridColumnGap: \"5px\", marginBottom: \"5px\" }}>\n                    <RangePicker\n                        // defaultValue={this.state.PickerDateRange}\n                        getCalendarContainer={triggerNode => triggerNode.parentNode}\n                        value={this.state.PickerDateRange}\n                        format={\"YYYY/MM/DD\"}\n                        allowClear={false}\n                        locale={locale}\n                        disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                        // toString={(dates, datestrings) => { this.setState({ RangePicker: dates }) }}\n                        onChange={this.PickerDateRangeChange}\n                    />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"minus-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                </div>\n                {\n                    this.state.isLoading\n                        ? (<Icon type=\"loading\" />)\n                        : (\n                            <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" }}>\n                                <Labview selectvalue={this.state.selectdata}\n                                    parentDateCallback={this.callbackDateFunction}\n                                    DataList={data}\n                                    SelectStatus={this.state.selectdata}\n                                    PickerDateRange={PickerDateRange}\n                                    parentTitleCallback={this.callbackTitleFunction}>\n                                </Labview>\n                                <Nonlabview caseinfo={caseinfo} PickerDateRange={PickerDateRange}></Nonlabview>\n                            </div>\n                        )\n                }\n                {/* {this.charttableview()} */}\n                <div style={{ display: \"flex\", justifyContent: 'center', alignItems: 'center' }}>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Examreport;\n","import React, { Component } from 'react';\nimport { DatePicker, Button, Icon } from 'antd';\nimport Prescriptionordertable from '../Prescriptionorder/Prescriptionorder'\nimport Treatmentorderlayout from '../Treatmentorder/Treatmentorder'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass Orderview extends Component {\n    state = {\n        UDORDER0: [],\n        TRTMNTQ1: [],\n        isLoading: false,\n        PickerDateRange: [moment(moment().subtract(6, 'days').format('YYYYMMDD')),\n        moment(moment().format('YYYYMMDD'))],\n    }\n    componentDidMount() {\n        this.apidata()\n    }\n    apidata() {\n        this.setState({ isLoading: true });\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID.toString().trim()\n        const CID = caseinfo.CASEID.toString().trim()\n        const UDORDER0 = ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureUDORDER0 NG \" + JSON.stringify(err))\n            });\n        const TRTMNTQ1 = ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => {\n                return data.data\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureTRTMNTQ1 NG \" + JSON.stringify(err))\n            });\n        Promise.all([UDORDER0, TRTMNTQ1]).then(result => {\n            this.setState({\n                UDORDER0: result[0],\n                TRTMNTQ1: result[1],\n                isLoading: false,\n            });\n        }).catch(() => { this.setState({ isLoading: false }) });\n    }\n\n    PickerDateRangeChange = (date, dateString) => {\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDateRange } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const st = PickerDateRange[0].valueOf()\n        const et = PickerDateRange[1].valueOf()\n\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                if (bronDate <= (st - day)) {\n                    const bTime = [moment(moment(st - day).format('YYYYMMDD')), moment(moment(et - day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(bTime)\n                }\n                break;\n            case 'N':\n                const nTime = [moment(moment().subtract(6, 'days').format('YYYYMMDD')), moment(moment().format('YYYYMMDD'))]\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                if (aTemp >= (et + day)) {\n                    const aTime = [moment(moment(st + day).format('YYYYMMDD')), moment(moment(et + day).format('YYYYMMDD'))]\n                    this.PickerDateRangeChange(aTime)\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const udata = this.state.UDORDER0\n        const tdata = this.state.TRTMNTQ1\n        const momentDate = this.state.PickerDateRange\n\n        const { RangePicker } = DatePicker\n        const PickerDateRange = [momentDate[0].valueOf(), momentDate[1].valueOf()]\n        if (udata.length === 0 || tdata.length === 0) {\n            //Loading\n            return null\n        }\n\n        return (\n            <div>\n                <div style={{ overflowY: 'auto' }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"250px 120px\", gridColumnGap: \"5px\", marginBottom: \"5px\" }}>\n                        <RangePicker\n                            getCalendarContainer={triggerNode => triggerNode.parentNode}\n                            value={this.state.PickerDateRange}\n                            format={\"YYYY/MM/DD\"}\n                            allowClear={false}\n                            locale={\"zh_TW\"}\n                            onChange={this.PickerDateRangeChange}\n                            disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                        />\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                            <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                            <Button value=\"N\" shape=\"circle\" icon=\"minus-circle\" onClick={this.trainDay} />\n                            <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                        </div>\n                    </div>\n                    {\n                        this.state.isLoading\n                            ? (<Icon type=\"loading\" />)\n                            : (\n                                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridGap: \"10px\" }}>\n                                    <Prescriptionordertable PickerDateRange={PickerDateRange} UDORDER0={udata} searchbar={true} caseinfo={caseinfo}></Prescriptionordertable>\n                                    <Treatmentorderlayout PickerDateRange={PickerDateRange} TRTMNT01={tdata} searchbar={true} caseinfo={caseinfo}></Treatmentorderlayout>\n                                </div>\n                            )\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Orderview;\n","import React, { Component } from \"react\";\nimport { Select, Button, Icon } from \"antd\";\nimport * as ApiProvider from \"../../API/ApiProvider\";\nimport moment from \"moment\";\n// import Notelist from './Notelist'\n// import searchlogo from '../../Image/svg/Search.svg'\nimport * as Wardstate from \"../../Function/Wardstate\";\nimport \"./Note.scss\";\nimport * as timeFormat from './NoteTimeFormat'\n// import X2JS from 'x2js';\n// import * as PR from '../../Resource/PRGTXQRY'\n\nvar dataRange = [];\nclass Noteview extends Component {\n  state = {\n    StartTime: null,\n    EndTime: null,\n    display_data: null,\n    context: null,\n    contentdisplay: false,\n\n    ADMDISP: [],\n    ADMLIST: [],\n    DISLIST: [],\n    DISDISP: [],\n    DTAROTQ4: [],\n    DTASOAPQ: [],\n    PCASELIST: [],\n    ERDISP: [],\n    PRGTXQRY: [],\n    PRGTXQRYDIS: [],\n    CPSLIST: [],\n    CPSDISP: [],\n    QPNOT: [],\n    QPNOTDIS: [],\n    OPSORAQ1: [],\n    OPSORAQ2: [],\n    SelectClass: 0,\n    isLoading: false,\n  };\n  componentDidMount() {\n    this.apiData();\n  }\n\n  SelectADMDISP(ADISTNO, ADICASE) {\n    ApiProvider.getStoredProcedureADMDISP(ADISTNO, ADICASE)\n      .then(data => { this.setState({ ADMDISP: data.data }); })\n      .catch(err => { console.log(\"Andy test getStoredProcedureADMDISP NG \" + JSON.stringify(err)); });\n  }\n  SelectDISDISP(CID) {\n    const { caseinfo } = this.props;\n    ApiProvider.getStoredProcedureDISDISP(caseinfo.HISID, CID)\n      .then(data => {\n        this.setState({\n          DISDISP: data.data\n        });\n      })\n      .catch(err => {\n        console.log(\n          \"Andy test getStoredProcedureADMDISP NG \" + JSON.stringify(err)\n        );\n      });\n  }\n\n  SelectERDISP(CID) {\n    const { caseinfo } = this.props;\n    ApiProvider.getStoredProcedureERDISP(caseinfo.HISID, CID)\n      .then(data => {\n        this.setState({\n          ERDISP: data.data\n        });\n      })\n      .catch(err => {\n        console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n      });\n  }\n  SelectDTASOAPQ(date, dpt) {\n    const { caseinfo } = this.props;\n    //門診紀錄內容 需要時間和醫生編號\n    ApiProvider.getStoredProcedureDTASOAPQ(caseinfo.HISID, date, dpt)\n      .then(data => {\n        this.setState({\n          DTASOAPQ: data.data\n        });\n      })\n      .catch(err => {\n        console.log(\n          \"Andy test getStoredProcedureDTASOAPQ NG \" + JSON.stringify(err)\n        );\n      });\n  }\n  SelectPRGTXQRYDIS(List) {\n    this.setState({\n      PRGTXQRYDIS: List\n    });\n  }\n  SelectCPSDISP(HID, CID, SEQ) {\n    ApiProvider.getStoredProcedureCPSDISP(HID, CID, SEQ)\n      .then(data => {\n        this.setState({\n          CPSDISP: data.data\n        });\n      })\n      .catch(err => {\n        console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n      });\n  }\n  SelectQPNOTDIS(data) {\n    this.setState({\n      QPNOTDIS: data\n    });\n  }\n\n  SelectOPSORAQ1(OPABGNDT, OPATIMES) {\n    const { caseinfo } = this.props;\n    //門診紀錄內容 需要時間和醫生編號\n    ApiProvider.getStoredProcedureOPSORAQ2(caseinfo.HISID, OPABGNDT, OPATIMES)\n      .then(data => {\n        this.setState({\n          OPSORAQ2: data.data\n        });\n      })\n      .catch(err => {\n        console.log(\n          \"Andy test getStoredProcedureDTASOAPQ NG \" + JSON.stringify(err)\n        );\n      });\n  }\n  apiData() {\n    this.setState({ isLoading: true });\n    const { caseinfo } = this.props;\n    //入院並摘\n    const ADMLIST = ApiProvider.getStoredProcedureADMLIST(caseinfo.HISID, \"DOC3924B\")\n      .then(data => {\n        return data.data;\n      })\n      .catch(err => {\n        console.log(\n          \"Andy test getStoredProcedureADMLIST NG \" + JSON.stringify(err)\n        );\n      });\n    //出院並摘\n    const DISLIST = ApiProvider.getStoredProcedureDISLIST(\n      caseinfo.HISID,\n      \"DOC3924B\"\n    )\n      .then(data => {\n        return data.data;\n      })\n      .catch(err => {\n        console.log(\n          \"Andy test getStoredProcedureDISLIST NG \" + JSON.stringify(err)\n        );\n      });\n\n    //門診紀錄清單\n    const DTAROTQ4 = ApiProvider.getStoredProcedureDTAROTQ4(caseinfo.HISID)\n      .then(data => {\n        return data.data;\n      })\n      .catch(err => {\n        console.log(\n          \"Andy test getStoredProcedureDTAROTQ4 NG \" + JSON.stringify(err)\n        );\n      });\n\n    //急診紀錄清單\n    const PCASELIST = ApiProvider.getStoredProcedurePCASELIST(\n      caseinfo.HISID,\n      \"DOC3924B\",\n      \"E\"\n    )\n      .then(data => {\n        return data.data;\n      })\n      .catch(err => {\n        console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n      });\n\n    const CPSLIST = ApiProvider.getStoredProcedureCPSLIST(\n      caseinfo.HISID,\n      \"DOC3924B\"\n    )\n      .then(data => {\n        return data.data;\n      })\n      .catch(err => {\n        console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n      });\n\n    function nullvalue(value) {\n      if (value === null) {\n        return \"911\";\n      }\n      const PRGTXQRYDATE = moment(value.PLOCDT, \"YYYYMMDD\").format(\"YYYYMM\");\n      const D = PRGTXQRYDATE.substr(3, 3);\n      return D;\n    }\n\n    const LIVEPLOC = nullvalue(caseinfo.PLOCSTART);\n    const PRGTXQRY = ApiProvider.getStoredProcedurePRGTXQRY(\n      caseinfo.HISID,\n      LIVEPLOC,\n      caseinfo.CASEID\n    ).then(data => {\n      return data.data;\n    }).catch(err => {\n      console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n    });\n    const transdt = caseinfo.TRANSINDT;\n    const ST = moment(transdt, \"YYYYMMDD\").format(\"YYYYMMDDHHmm\");\n    const ET = moment().format(\"YYYYMMDDHHmm\");\n\n    const QPNOT = ApiProvider.getQPNOT(caseinfo.CASEID, ST, ET)\n      .then(data => {\n        const parseSource = Wardstate.XM2JSON(data.data);\n        return parseSource;\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    const OPSORAQ1 = ApiProvider.getStoredProcedureOPSORAQ1(caseinfo.HISID)\n      .then(data => {\n        return data.data;\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    Promise.all([\n      ADMLIST,\n      DISLIST,\n      DTAROTQ4,\n      PCASELIST,\n      PRGTXQRY,\n      CPSLIST,\n      QPNOT,\n      OPSORAQ1\n    ]).then(result => {\n      this.setState({\n        ADMLIST: result[0],\n        DISLIST: result[1],\n        DTAROTQ4: result[2],\n        PCASELIST: result[3],\n        PRGTXQRY: result[4],\n        CPSLIST: result[5],\n        QPNOT: result[6],\n        OPSORAQ1: result[7],\n        isLoading: false,\n      });\n    }).catch(() => { this.setState({ isLoading: false }) });\n  }\n\n  callbackFunction = item_array => {\n    this.setState({\n      display_data: item_array.NoteTime,\n      context: item_array.Content,\n      contentdisplay: true\n    });\n  };\n\n  handleChange = e => {\n    let value = parseInt(e, 10);\n    this.setState({\n      SelectClass: value\n    });\n  };\n\n  onClickSearch() {\n    if (dataRange.length !== 0) {\n      this.setState({\n        StartTime: dataRange[0],\n        EndTime: dataRange[1]\n      });\n    }\n  }\n\n  onDateChange = (date, dateString) => {\n  };\n\n  NotecontrolBar() {\n    const select_data = [\n      { item: \"入院病摘\", value: 0 },\n      { item: \"出院病摘\", value: 1 },\n      { item: \"門診紀錄\", value: 2 },\n      { item: \"急診紀錄\", value: 3 },\n      { item: \"病程紀錄\", value: 4 },\n      { item: \"會診紀錄\", value: 5 },\n      { item: \"護理紀錄\", value: 6 },\n      { item: \"手術記錄\", value: 7 }\n    ];\n\n    const items = (\n      <div\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"100px 100px 100px 100px\",\n          columnGap: \"10px\",\n          marginBottom: \"10px\",\n          gridAutoColumns: \"100px\",\n          gridAutoFlow: \"column\"\n        }}>\n        {select_data.map(info => {\n          return (\n            <Button\n              onClick={e => this.handleChange(e.target.value)}\n              className=\"topMenu\"\n              style={{\n                borderRadius: \"4px\",\n                color: \"#001a6d88\",\n                border: \"1px solid #001a6d88\",\n                paddingLeft: \"4px\",\n                paddingRight: \"4px\",\n                height: \"30px\",\n                gridTemplateColumns: \"column\",\n                cursor: \"pointer\"\n              }}\n              value={info.value}\n            >\n              {info.item}\n            </Button>\n          );\n        })}\n      </div>\n    );\n\n    return items;\n  }\n\n  renderContentArray() {\n    const source = this.state.SelectClass;\n    if (source === 0) {\n      const data = this.state.ADMDISP;\n      if (data.length === 0) {\n        return null;\n      } else {\n        const fakeADMData = data;\n        return fakeADMData.map(row => (\n          <div style={{ whiteSpace: \"pre-wrap\" }}>{row.ADMDATA}</div>\n        ));\n      }\n    }\n    if (source === 1) {\n      const data = this.state.DISDISP;\n      if (data.length === 0) {\n        return null;\n      } else {\n        const fakeADMData = data;\n        return fakeADMData.map(row => (\n          <div style={{ whiteSpace: \"pre-wrap\" }}>{row[\"1\"]}</div>\n        ));\n      }\n    }\n    if (source === 2) {\n      const data = this.state.DTASOAPQ;\n      if (data.length === 0) {\n        return null;\n      } else {\n        let textType = [];\n        let textObj = [];\n        for (var i = 0; i < data.length; i++) {\n          //find type\n          const type = data[i].DTSOAPTY;\n          const lines = data[i].DTSOAPSQ;\n          const content = data[i].DTSOAPTX;\n          if (textType.indexOf(type) === -1) {\n            //new type\n            const newObj = {\n              type: type,\n              lines: lines,\n              content: content\n            };\n            textObj.push(newObj);\n            textType.push(type);\n          } else {\n            //old type\n            const idx = textObj.findIndex(item => item.type === type);\n            textObj[idx].lines = lines;\n            textObj[idx].content = textObj[idx].content + \"\\n\" + content;\n          }\n        }\n        let textResult = [];\n        for (let index = 0; index < textObj.length; index++) {\n          textResult.push(textObj[index].type);\n          textResult.push(textObj[index].content);\n          textResult.push(\"\\n\");\n        }\n\n        return textResult.map(row => (\n          <div style={{ whiteSpace: \"pre-wrap\" }}>{row}</div>\n        ));\n      }\n    }\n    if (source === 3) {\n      const data = this.state.ERDISP;\n      if (data.length === 0) {\n        return null;\n      } else {\n        const fakeADMData = data;\n        return fakeADMData.map(row => (\n          <div style={{ whiteSpace: \"pre-wrap\" }}>\n            {JSON.stringify(row, null, \"\\t\")}\n          </div>\n        ));\n      }\n    }\n    if (source === 4) {\n      const data = this.state.PRGTXQRYDIS;\n      if (data.length === 0) {\n        return null;\n      } else {\n        var newList = [];\n        for (let index = 0; index < 5; index++) {\n          if (index === 0) {\n            const dataFilter = data.filter(function (info, index, arr) {\n              return info.PRGTYPE.toString().trim() === \"D\";\n            });\n            if (dataFilter.length !== 0) {\n              newList.push(dataFilter[0]);\n            }\n          }\n\n          if (index === 1) {\n            const dataFilter = data.filter(function (info, index, arr) {\n              return info.PRGTYPE.toString().trim() === \"S\";\n            });\n            if (dataFilter.length !== 0) {\n              newList.push(dataFilter[0]);\n            }\n          }\n\n          if (index === 2) {\n            const dataFilter = data.filter(function (info, index, arr) {\n              return info.PRGTYPE.toString().trim() === \"O\";\n            });\n            if (dataFilter.length !== 0) {\n              newList.push(dataFilter[0]);\n            }\n          }\n\n          if (index === 3) {\n            const dataFilter = data.filter(function (info, index, arr) {\n              return info.PRGTYPE.toString().trim() === \"A\";\n            });\n            if (dataFilter.length !== 0) {\n              newList.push(dataFilter[0]);\n            }\n          }\n\n          if (index === 4) {\n            const dataFilter = data.filter(function (info, index, arr) {\n              return info.PRGTYPE.toString().trim() === \"P\";\n            });\n            if (dataFilter.length !== 0) {\n              newList.push(dataFilter[0]);\n            }\n          }\n        }\n        const dataMap = newList.map(function (info, index, arr) {\n          return (\n            <div key={index} style={{ marginBottom: \"10px\" }}>\n              <div style={{ whiteSpace: \"pre-wrap\" }}>{info.PRGTYPE}</div>\n              <div style={{ whiteSpace: \"pre-wrap\" }}>{info.PRGTX}</div>\n            </div>\n          );\n        });\n        return dataMap;\n      }\n    }\n    if (source === 5) {\n      const data = this.state.CPSDISP;\n      if (data.length === 0) {\n        return null;\n      } else {\n        const fakeADMData = data;\n        return fakeADMData.map(row => (\n          <div style={{ whiteSpace: \"pre-wrap\" }}>{row[\"1\"]}</div>\n        ));\n      }\n    }\n    if (source === 6) {\n      const data = this.state.QPNOTDIS;\n      if (data.length === 0) {\n        return null;\n      } else {\n        // Time: moment(v.rec_dat.toString() + v.rec_tim.toString(), \"YYYYMMDDHHmm\").format(\"MM/DD HH:mm\"),\n        // special: v.special,\n        // a: v.cre_nam,\n        // b: v.pro_not\n        const fakeADMData = data.map(function (info, index, arr) {\n          const time = info.Time;\n          const cre_nam = info.cre_nam;\n          const pro_not = info.pro_not;\n          return (\n            <div style={{ marginBottom: \"10px\" }}>\n              <div>{time}</div>\n              <div>{cre_nam === undefined ? \"--\" : cre_nam}</div>\n              <div>{pro_not === undefined ? \"--\" : pro_not}</div>\n            </div>\n          );\n        });\n        return fakeADMData;\n      }\n    }\n    if (source === 7) {\n      const data = this.state.OPSORAQ2;\n      if (data.length === 0) {\n        return null;\n      } else {\n        const fakeADMData = data;\n        return fakeADMData.map(row => (\n          <div style={{ whiteSpace: \"pre-wrap\" }}>{row.CONTENT}</div>\n        ));\n      }\n    } else {\n      return null;\n    }\n  }\n  switchListRender() {\n    function groupfirstarray(arrayList) {\n      var result = arrayList.filter(function (value, index, arr) {\n        const res = arr.map(function (value, index, arr) {\n          return moment(\n            value.PRGDT.toString() + value.PRGTM.toString(),\n            \"YYYY-MM-DDHH:mm:ss\"\n          ).valueOf();\n        });\n        return (\n          res.indexOf(\n            moment(\n              value.PRGDT.toString() + value.PRGTM.toString(),\n              \"YYYY-MM-DDHH:mm:ss\"\n            ).valueOf()\n          ) === index\n        );\n      });\n      var arrList = [];\n      for (let index = 0; index < result.length; index++) {\n        const element = result[index];\n        const comparevalue = moment(\n          element.PRGDT.toString() + element.PRGTM.toString(),\n          \"YYYY-MM-DDHH:mm:ss\"\n        ).valueOf();\n        const filterarray = arrayList.filter(function (value, index, arr) {\n          return (\n            moment(\n              value.PRGDT.toString() + value.PRGTM.toString(),\n              \"YYYY-MM-DDHH:mm:ss\"\n            ).valueOf() === comparevalue\n          );\n        });\n        arrList.push(filterarray);\n      }\n      return arrList;\n    }\n    function grouparray(arrayList) {\n      var result = arrayList.filter(function (value, index, arr) {\n        const res = arr.map(function (value, index, arr) {\n          return moment(value.rec_dat.toString(), \"YYYYMMDD\").valueOf();\n        });\n        return (\n          res.indexOf(\n            moment(value.rec_dat.toString(), \"YYYYMMDD\").valueOf()\n          ) === index\n        );\n      });\n      var arrList = [];\n      for (let index = 0; index < result.length; index++) {\n        const element = result[index];\n        const comparevalue = moment(\n          element.rec_dat.toString(),\n          \"YYYYMMDD\"\n        ).valueOf();\n        const filterarray = arrayList.filter(function (value, index, arr) {\n          return (\n            moment(value.rec_dat.toString(), \"YYYYMMDD\").valueOf() ===\n            comparevalue\n          );\n        });\n        arrList.push(filterarray);\n      }\n      return arrList;\n    }\n    const select = this.state.SelectClass;\n    if (select === 0) {\n      const data = this.state.ADMLIST;\n      if (data.length === 0) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n            {/* <Icon type=\"loading\" /> */}\n          </div>\n        );\n      } else {\n        const cellRander = data.map((object, index, arr) => {\n          const HID = object.ADISTNO.toString().trim();\n          const CID = object.ADICASE.toString().trim();\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\",\n              }}\n              onClick={() => this.SelectADMDISP(HID, CID)}\n            >\n              <div style={{ fontSize: \"14px\" }}>\n                住院日:{moment(object.ADIDATE.toString().trim(), \"YYYYMMDD\").format(\"YYYY/MM/DD\")}\n              </div>\n              <div style={{ fontSize: \"14px\" }}>科別:{object.ADISECT}</div>\n            </div>\n          );\n        });\n        return (\n          // <Notelist data={data} display_data={this.state.display_data} parentCallback={this.callbackFunction} start={this.state.StartTime} End={this.state.EndTime}></Notelist>\n          <div>{cellRander}</div>\n        );\n      }\n    }\n    if (select === 1) {\n      const data = this.state.DISLIST;\n      if (data.length === 0) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n            {/* <Icon type=\"loading\" /> */}\n          </div>\n        );\n      } else {\n        const cellRander = data.map((object, index, arr) => {\n          // const HID = object.ADISTNO.toString().trim()\n          const CID = object.DCASENO.toString().trim();\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectDISDISP(CID)}\n            >\n              <div style={{ fontSize: \"14px\" }}>\n                出院日:{moment(object.DDATEOUT.toString().trim(), \"YYYY-MM-DD\").format(\n                  \"YYYY/MM/DD\"\n                )}\n              </div>\n              <div style={{ fontSize: \"14px\" }}>\n                科別:{object.DADMSECT.toString().trim()}\n              </div>\n            </div>\n          );\n        });\n        return (\n          <div>{cellRander}</div>\n        );\n      }\n    }\n    if (select === 2) {\n      const data = this.state.DTAROTQ4;\n      if (data.length === 0) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n            {/* <Icon type=\"loading\" /> */}\n          </div>\n        );\n      } else {\n        const cellRander = data.map((object, index, arr) => {\n          const DPT = object.DTPDEPT.toString().trim();\n          const DTPDATE = object.DTPDATE.toString().trim();\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectDTASOAPQ(DTPDATE, DPT)}\n            >\n              <div style={{ fontSize: \"14px\" }}>\n                門診日期:{moment(object.DTPDATE.toString().trim(), \"YYYY-MM-DD\").format(\n                  \"YYYY/MM/DD\"\n                )}\n              </div>\n              <div style={{ fontSize: \"14px\" }}>\n                科別:{object.SECTNM.toString().trim() + object.DTPDEPT.toString().trim()}\n              </div>\n              <div style={{ fontSize: \"14px\" }}>\n                醫師:{object.DTPDOCNM.toString().trim() + object.DTPDOCID.toString().trim()}\n              </div>\n            </div>\n          );\n        });\n        return (\n          <div>{cellRander}</div>\n        );\n      }\n    }\n    if (select === 3) {\n      const data = this.state.PCASELIST;\n      if (data.length === 0) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n            {/* <Icon type=\"loading\" /> */}\n          </div>\n        );\n      } else {\n        const cellRander = data.map((object, index, arr) => {\n          const CID = object.PCASENO.toString().trim();\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                textAlign: \"center\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectERDISP(CID)}\n            >\n              <div style={{ fontSize: \"14px\" }}>\n                看診日:{moment(object.PDISDT.toString().trim(), \"YYYYMMDD\").format(\n                  \"YYYY/MM/DD\"\n                )}\n              </div>\n              {/* //修改 */}\n              <div style={{ fontSize: \"14px\" }}>\n                科別:{object.PPSECT.toString().trim()}\n              </div>\n            </div>\n          );\n        });\n        return (\n          <div>{cellRander}</div>\n        );\n      }\n    }\n    if (select === 4) {\n      const data = groupfirstarray(this.state.PRGTXQRY);\n      console.log(data)\n      if (data.length === 0) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n            {/* <Icon type=\"loading\" /> */}\n          </div>\n        );\n      } else {\n        const List = data.map(function (info, index, arr) {\n          const mapList = info.map(function (v, i, a) {\n            return {\n              PRGTX: v.PRGTX,\n              PRGTYPE: v.PRGTYPE,\n            };\n          });\n          return {\n            List: mapList,\n            DT: info[0].PRGDT,\n            TN: info[0].PRGTM,\n            Time: moment(info[0].PRGDT.toString().trim() + info[0].PRGTM.toString().trim(), \"YYYY-MM-DDHH:mm:ss\").valueOf(),\n            PRGWARD: info[0].PRGWARD,\n            PRGBEDNO: info[0].PRGBEDNO,\n            PRGSECT: info[0].PRGSECT,\n            PRGENTNM: info[0].PRGENTNM\n          };\n        });\n        const sortList = List.sort(function (a, b) {\n          return a.Time < b.Time ? 1 : -1;\n        });\n        const cellRander = sortList.map((object, index, arr) => {\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                textAlign: \"center\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectPRGTXQRYDIS(object.List)}\n            >\n              <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                <div style={{ fontSize: \"14px\" }}>\n                  時間:{moment(\n                    object.DT.toString() + object.TN.toString(),\n                    \"YYYY-MM-DDHH:mm:ss\"\n                  ).format(\"MM/DD HH:mm\")}\n                </div>\n                <div style={{ fontSize: \"14px\" }}>\n                  {object.PRGWARD.toString().trim() + \"-\" + Number(object.PRGBEDNO)}\n                </div>\n              </div>\n              <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                <div style={{ fontSize: \"14px\" }}>\n                  科別:{object.PRGSECT.toString().trim()}\n                </div>\n                <div style={{ fontSize: \"14px\" }}>\n                  {object.PRGENTNM.toString().trim() + \"醫師\"}\n                </div>\n              </div>\n\n            </div>\n          );\n        });\n        return (\n          <div>{cellRander}</div>\n        );\n      }\n    }\n    if (select === 5) {\n      const data = this.state.CPSLIST;\n      if (data.length === 0) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n            {/* <Icon type=\"loading\" /> */}\n          </div>\n        );\n      } else {\n        const cellRander = data.map((object, index, arr) => {\n          const CID = object.CPSCASE.toString().trim();\n          const SEQ = object.CPSOSEQ.toString().trim();\n          const HID = object.CPSHIST.toString().trim();\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                textAlign: \"center\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectCPSDISP(HID, CID, SEQ)}\n            >\n              <div style={{ fontSize: \"14px\" }}>\n                會診日期:{moment(object.CPSENTDT.toString().trim(), \"YYYYMMDD\").format(\"YYYY/MM/DD\")}\n              </div>\n              <div style={{ fontSize: \"14px\" }}>\n                會診科別:{object.CPKSECT.toString().trim() + \"-\" + object.CPSOSECT.toString().trim()}\n              </div>\n              <div style={{ fontSize: \"14px\" }}>\n                會診醫師:{object.CPKDOCN1.toString().trim() + object.CPKDOCN2.toString().trim() === \"\" ? \"\" : \",\" + object.CPKDOCN2.toString().trim() + object.CPKDOCN2.toString().trim() === \"\" ? \"\" : \",\" + object.CPKDOCN3.toString().trim()}\n              </div>\n            </div>\n          );\n        });\n        return (\n          <div>{cellRander}</div>\n        );\n      }\n    }\n    if (select === 6) {\n      const data = this.state.QPNOT\n      if (data === undefined) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n            {/* <Icon type=\"loading\" /> */}\n          </div>\n        );\n      }\n      if (data.length === 0) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n            {/* <Icon type=\"loading\" /> */}\n          </div>\n        );\n      } else {\n        const List = grouparray(data);\n        const mapList = List.map(function (info, index, arr) {\n          const mapList = info.map(function (v, i, a) {\n            return {\n              Time: moment(\n                v.rec_dat.toString() + v.rec_tim.toString(),\n                \"YYYYMMDDHHmm\"\n              ).format(\"MM/DD HH:mm\"),\n              cre_nam: v.cre_nam,\n              pro_not: v.pro_not\n            };\n          });\n          return {\n            List: mapList,\n            DT: info[0].rec_dat.toString().trim()\n          };\n        });\n        const cellRander = mapList.map((object, index, arr) => {\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                textAlign: \"center\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectQPNOTDIS(object.List)}\n            >\n              <div style={{ fontSize: \"14px\" }}>\n                日期:{moment(object.DT, \"YYYYMMDD\").format(\"YYYY/MM/DD\")}\n              </div>\n            </div>\n          );\n        });\n        return (\n          <div>{cellRander}</div>\n        );\n      }\n    }\n    if (select === 7) {\n      const data = this.state.OPSORAQ1\n      if (data.length === 0) {\n        return (\n          <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n            <Icon type=\"loading\" />\n          </div>\n        );\n      } else {\n        const cellRander = data.map((object, index, arr) => {\n          //OPABGNDT民國\n          console.log(object.OPABGNDT)\n          const OPABGNDT = timeFormat.OPABGNDTtimeformat(Number(object.OPABGNDT));\n          const OPACOD1 = object.OPACOD1.toString().trim();\n          const OPAMANNM = object.OPAMANNM.toString().trim();\n          const OPATIMES = object.OPATIMES.toString().trim();\n          return (\n            <div\n              key={index}\n              className=\"leftMenu\"\n              tabIndex=\"0\"\n              style={{\n                padding: \"4px 8px\",\n                border: \"1px solid rgb(204, 204, 204)\",\n                cursor: \"pointer\",\n                textAlign: \"center\",\n                borderRadius: \"4px\",\n                marginBottom: \"4px\"\n              }}\n              onClick={() => this.SelectOPSORAQ1(OPABGNDT, OPATIMES)}\n            >\n              <div style={{ fontSize: \"14px\" }}>手術日期:{OPABGNDT}</div>\n              <div style={{ fontSize: \"14px\" }}>醫師:{OPAMANNM}</div>\n            </div>\n          );\n        });\n        return (\n          <div>{cellRander}</div>\n        );\n      }\n    }\n  }\n  render() {\n    const control = this.NotecontrolBar();\n    const renderContentArray = this.renderContentArray();\n    const listRender = this.switchListRender();\n    return (\n      <div className=\"Notelayout\">\n        {control}\n        <div>\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"240px 1fr\",\n              gridGap: \"10px\"\n            }}\n          >\n            <div>\n              <div\n                style={{\n                  backgroundColor: \"#71b0e46e\",\n                  height: \"36px\",\n                  paddingLeft: \"4px\",\n                  borderTopRightRadius: \"4px\",\n                  borderTopLeftRadius: \"4px\",\n                  color: \"rgba(0,0,0,0.7)\",\n                  alignItems: \"center\",\n                  width: \"240px\"\n                }}\n              >\n                <div\n                  style={{\n                    fontSize: \"16px\",\n                    color: \"rgba(0,0,0,0.8)\",\n                    lineHeight: \"36px\"\n                  }}\n                >\n                  資料清單\n                </div>\n              </div>\n              <div\n                style={{\n                  padding: \"10px\",\n                  maxHeight: \"700px\",\n                  overflow: \"auto\"\n                }}\n              >\n                {this.state.isLoading ? (<Icon type=\"loading\" />) : listRender}\n              </div>\n            </div>\n            <div style={{ overflow: \"auto\" }}>\n              <div\n                style={{\n                  backgroundColor: \"#71b0e46e\",\n                  height: \"36px\",\n                  paddingLeft: \"4px\",\n                  borderTopRightRadius: \"4px\",\n                  borderTopLeftRadius: \"4px\",\n                  fontSize: \"16px\",\n                  color: \"rgba(0,0,0,0.7)\",\n                  alignItems: \"center\"\n                }}\n              >\n                <div\n                  style={{\n                    fontSize: \"16px\",\n                    color: \"rgba(0,0,0,0.8)\",\n                    lineHeight: \"36px\"\n                  }}\n                >\n                  文件內容\n                </div>\n              </div>\n              <div style={{ maxHeight: \"700px\", overflow: \"auto\" }}>\n                {this.state.isLoading ? (<Icon type=\"loading\" />) : renderContentArray}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Noteview;\n","import moment from \"moment\"\n\nexport function OPABGNDTtimeformat(OPABGNDT) {\n    function valueten(value) {\n        if (value < 10) {\n            return \"0\" + value\n        }\n        return value\n    }\n    if (OPABGNDT === NaN || OPABGNDT === null || OPABGNDT === undefined) {\n        return \"--\"\n    }\n    const year = parseInt(OPABGNDT / 10000) + 1911\n    const month = parseInt((OPABGNDT % 10000) / 100)\n    const day = parseInt(OPABGNDT % 100)\n    const date = year.toString() + valueten(month) + valueten(day)\n    return moment(date, \"YYYYMMDD\").format(\"YYYY/MM/DD\")\n}","import React, { Component } from 'react';\nimport { DatePicker, Button } from 'antd';\nimport GAS from '../CrossSectionView/GAS'\nimport RTbreathe from '../CrossSectionView/RTbreathe'\nimport './RTview.scss'\n// import X2JS from 'x2js';\n// import * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\n\nclass RTview extends Component {\n    state = {\n        QSPE: [],\n        PickerDateRange: [moment(moment().subtract(6, 'days').format('YYYYMMDD')),\n        moment(moment().format('YYYYMMDD'))],\n    }\n\n    PickerDateRangeChange = (date, dateString) => {\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const { PickerDateRange } = this.state\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n        const st = PickerDateRange[0].valueOf()\n        const et = PickerDateRange[1].valueOf()\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                if (bronDate <= (st - day)) {\n                    const bTime = [moment(moment(st - day)), moment(moment(et - day))]\n                    this.PickerDateRangeChange(bTime)\n                }\n                break;\n            case 'N':\n                const nTime = [moment(moment().subtract(6, 'days').format('YYYYMMDD')), moment()]\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTemp = moment(moment()).valueOf()\n                if (aTemp >= (et + day)) {\n                    const aTime = [moment(moment(st + day)), moment(moment(et + day))]\n                    this.PickerDateRangeChange(aTime)\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { caseinfo } = this.props\n        const { RangePicker } = DatePicker\n        const momentDate = this.state.PickerDateRange\n\n        const PickerDateRange = [momentDate[0].valueOf(), momentDate[1].valueOf()]\n\n        return (\n            <div className='rtviewlayout'>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"250px 120px\", gridColumnGap: \"5px\", marginBottom: \"5px\" }}>\n                    <RangePicker\n                        getCalendarContainer={triggerNode => triggerNode.parentNode}\n                        value={this.state.PickerDateRange}\n                        format={\"YYYY/MM/DD\"}\n                        allowClear={false}\n                        locale={\"zh_TW\"}\n                        onChange={this.PickerDateRangeChange}\n                        disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                    />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"minus-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: '1fr 1fr', gridColumnGap: \"5px\" }}>\n                    <GAS PickerDateRange={PickerDateRange} caseinfo={caseinfo} searchbar={true} ></GAS>\n                    <RTbreathe PickerDateRange={PickerDateRange} caseinfo={caseinfo} searchbar={true} ></RTbreathe>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RTview\n","import React, { Component } from 'react'\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Nurtionfeedingcell.scss'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Nurtionfeedingcell extends Component {\n    state = {\n        EditMode: false,\n        onEdit: false,\n        powerLogin: 0,\n        remark: '',\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { caseinfo, data } = this.props\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, data.ORDSEQNO, \"nurtionfeeding\").then(result => {\n            console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    onMouseEnter() {\n        this.setState(\n            {\n                EditMode: true\n            }\n        )\n    }\n    onMouseLeave() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    showModal = () => {\n        this.setState({\n            onEdit: true,\n        });\n    };\n\n    handleOk = newRemarkValue => {\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            onEdit: false,\n        });\n    };\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    Moduledisplay(PName, ST) {\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": PName,\n            \"remarkId\": this.props.data.ORDSEQNO,\n            \"remark\": this.state.remark,\n            \"transinId\": this.props.caseinfo.TRANSINID,\n            \"type\": \"nurtionfeeding\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n        );\n    }\n\n    render() {\n        const { data } = this.props\n        const startTime = moment(data.ORBGNDT.toString().trim(), \"YYYY-MM-DD\").format(\"MM/DD\")\n        const endTime = moment(data.ORENDDT.toString().trim(), \"YYYY-MM-DD\").format(\"MM/DD\")\n        const name = data.ORPROCED.toString().trim()\n\n        return (\n            <div onMouseEnter={() => this.onMouseEnter()} onMouseLeave={() => this.onMouseLeave()} className=\"remark\">\n                <div className='nurtionfeedingcell' style={{ gridTemplateRows: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"1fr\" : \"1fr 1fr\"] }}>\n                    <div className='cellforstate'>\n                        <div className='celllayout'>\n                            <t3>{startTime}</t3>\n                        </div>\n                        <div className='celllayout'>\n                            <t3>{endTime}</t3>\n                        </div>\n                        <div className='celllayout'>\n                            <t3>{name}</t3>\n                        </div>\n                    </div>\n                    <div className='cellforremark' style={{ display: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"none\" : \"flex\"] }}>\n                        <t3>{this.state.remark}</t3>\n                    </div>\n                </div>\n                <div style={this.state.EditMode ? {\n                    display: this.state.powerLogin == 1 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", top: 0, right: 0, height: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"50px\" : \"100px\"], background: \"white\", width: \"77px\", border: \"rgba(232, 232, 232, 1) 1px solid\"\n                } : { display: \"none\" }}>\n                    < div onClick={() => this.showModal()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }} >\n                        <img src={chooseedit} alt='chooseedit'></img>\n                    </div>\n                </div>\n                {this.Moduledisplay(name, startTime)}\n            </div >\n        );\n    }\n}\n\nexport default Nurtionfeedingcell\n","import React, { Component } from 'react'\nimport * as ApiProvider from '../../API/ApiProvider'\n// import { DatePicker, Input } from 'antd';\n// import searchlogo from '../../Image/svg/Search.svg'\nimport Nurtionfeedingcell from './Nurtionfeedingcell'\nimport moment from 'moment';\nimport * as ApiGithub from '../../API/ApiGithub'\n\n\nclass Nurtionfeedingorder extends Component {\n    state = {\n        TRTMNTQ1: [],\n        parser: { \"mappings\": [] },\n        class: \"飲食類別\"\n    }\n    componentDidMount() {\n        this.getAPIFeedingData()\n        this.getTreatmentOrderFilter()\n    }\n    getAPIFeedingData() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID.toString().trim()\n        const CID = caseinfo.CASEID.toString().trim()\n        ApiProvider.getStoredProcedureTRTMNTQ1(HID, CID)\n            .then(data => {\n                console.log(\"getAPIFeedingData OK \" + JSON.stringify(data.data))\n                this.setState({\n                    TRTMNTQ1: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n    }\n    getTreatmentOrderFilter() {\n        ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Treatment\");\n                parser.mappings = [{ \"key\": \"全部\", \"regex_str\": null }, ...parser.mappings]\n                console.log(\"getGitHubJson Treatment OK \" + JSON.stringify(parser))\n                this.setState({\n                    parser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n        allResult[\"全部\"] = []\n\n        inputs.forEach(input => {\n            let content = input.ORPROCED;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n\n            allResult[\"全部\"].push(input)\n        });\n        return allResult;\n    }\n\n    render() {\n        const { caseinfo, PickerDateRange } = this.props\n        const title = [\"開始時間\", \"結束時間\", \"處置名稱\"]\n        const titleCellRender = title.map(function (element, index, arr) {\n            return (\n                <div key={index} style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", borderCollapse: \"collapse\" }}>\n                    <div style={{ fontSize: \"14px\" }}>{element}</div>\n                </div>\n            );\n        })\n\n        const parse = this.parse;\n        let clusteredData = {}\n        if (this.state.parser !== undefined) {\n            clusteredData = parse(this.state.TRTMNTQ1, this.state.parser)\n        }\n        //filter data by selected class\n        let filteredData = clusteredData[this.state.class];\n        let filterData = []\n        if (filteredData !== undefined) {\n            let ListCellData = filteredData\n            filterData = ListCellData.filter((element, index, arr) => {\n                const time = moment(element.ORBGNDT, 'YYYY-MM-DD').valueOf()\n                return PickerDateRange[0] <= time && time <= PickerDateRange[1]\n            })\n\n            filterData = filterData.sort((a, b) => {\n                let tempTimeA = moment(a.ORBGNDT, 'YYYY-MM-DD').valueOf()\n                let tempTimeB = moment(b.ORBGNDT, 'YYYY-MM-DD').valueOf()\n                return tempTimeA < tempTimeB ? 1 : -1\n            })\n        }\n\n        const DataCellRender = filterData.map(function (element, index, arr) {\n            return (\n                <Nurtionfeedingcell key={index} data={element} caseinfo={caseinfo} ></Nurtionfeedingcell>\n            );\n        })\n\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>Feeding Order</t2>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \" 1fr 1fr 2fr \", height: \"30px\", border: \"rgba(238,238,238,1) 1px solid\", backgroundColor: \"rgba(226, 237, 243,.5)\", justifyItems: \"center\" }}>\n                    {titleCellRender}\n                </div>\n                {filterData.length !== 0 &&\n                    <div style={{ minHeight: \"120px\", maxHeight: \"400px\", overflowY: \"auto\" }}>\n                        {DataCellRender}\n                    </div>}\n                {filterData.length === 0 &&\n                    <div style={{ height: \"50px\", paddingLeft: \"7.5%\", display: \"flex\", alignItems: \"center\" }}>\n                        今日無資料\n                    </div>}\n            </div>\n        );\n    }\n}\n\nexport default Nurtionfeedingorder\n","import React, { Component } from 'react'\nimport chooseedit from '../../Image/svg/Chooseedit.svg'\nimport './Nurtion_TPN_cell.scss'\nimport moment from 'moment'\nimport RemarkModal from '../CrossSectionView/RemarkModal'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Nurtiontpncell extends Component {\n    state = {\n        EditMode: false,\n        onEdit: false,\n        remark: null,\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n        this.seachRemark()\n    }\n\n    seachRemark = () => {\n        const { caseinfo, data } = this.props\n        ApiProvider.getOneRemark(caseinfo.TRANSINID, data.UDORDSEQ, \"nurtiontpn\").then(result => {\n            console.log(\"getOneRemark OK \" + JSON.stringify(result));\n            this.setRemark(result.data[0].remark)\n        }).catch(err => {\n            console.log(\"getOneRemark NG \" + JSON.stringify(err));\n        });\n    }\n\n    onMouseEnter() { this.setState({ EditMode: true }) }\n\n    onMouseLeave() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    showModal = () => {\n        this.setState({\n            onEdit: true,\n        });\n    };\n\n    handleOk = newRemarkValue => {\n        this.setState({\n            onEdit: false,\n            remark: newRemarkValue\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    setRemark = (value) => {\n        this.setState({\n            remark: value !== undefined ? value : '',\n        });\n    }\n\n    Moduledisplay(PName, ST) {\n\n        const remarkValue = {\n            \"createTime\": ST,\n            \"name\": PName,\n            \"remarkId\": this.props.data.UDORDSEQ,\n            \"remark\": this.state.remark,\n            \"transinId\": this.props.caseinfo.TRANSINID,\n            \"type\": \"nurtiontpn\",\n            \"editor\": sessionStorage.getItem('user')\n        }\n\n        return (\n            <RemarkModal remarkValue={remarkValue} visible={this.state.onEdit} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n            // <RemarkModal caseinfo={caseinfo} type=\"nurtiontpn\" name={title} visible={this.state.onEdit} remark={this.state.remark} onCancel={this.handleCancel} onOk={this.handleOk}></RemarkModal>\n        );\n    }\n    render() {\n        const { data } = this.props\n        const TPNList = [\"VOL.\", \"AA\", \"Glu\", \"Na\", \"K\", \"Ca\", \"P\", \"Mg\"]\n        const TPNListcellRender = TPNList.map(function (info, index) {\n            return (\n                <centerstyle key={index} style={{ border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                    <t2>{info}</t2>\n                </centerstyle>\n            );\n        })\n        function TPNSubDataMap(data, TPNDATA) {\n            if (TPNDATA === undefined || TPNDATA === null) {\n                return []\n            }\n            const TPNSubData = [data.UDDOSAGE, data.TPNDATA.AA, data.TPNDATA.Glu, data.TPNDATA.Na, data.TPNDATA.K, data.TPNDATA.Ca, data.TPNDATA.P, data.TPNDATA.Mg]\n            const TPNSubDatacellRender = TPNSubData.map(function (info, index) {\n                return (\n                    <centerstyle key={index} style={{ border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                        <t2>{info}</t2>\n                    </centerstyle>\n                );\n            })\n            return TPNSubDatacellRender\n\n        }\n        const TPNSubDatacellRender = TPNSubDataMap(data, data.TPNDATA)\n        const RemarkData = this.state.remark\n\n        const startTime = moment(data.UDBGNDT.toString().trim(), \"YYYY-MM-DD-HH.mm.ss.00.000000\").format(\"MM/DD HH:mm:ss\")\n        const endTime = moment(data.UDENDDT.toString().trim(), \"YYYY-MM-DD-HH.mm.ss.00.000000\").format(\"MM/DD HH:mm:ss\")\n        const name = data.UDGNAME.toString().trim()\n        const status = \"生效中\"\n        return (\n            <div onMouseEnter={() => this.onMouseEnter()} onMouseLeave={() => this.onMouseLeave()} className='nurtiontpntablelayout'>\n                <div style={{ height: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"100px\" : \"130px\"] }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \" 1fr 1fr 60px 450px\", height: \"100px\" }} >\n                        <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                            <t3>{startTime}</t3>\n                        </div>\n                        <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                            <t3>{endTime}</t3>\n                        </div>\n                        <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                            <t3>{status}</t3>\n                        </div>\n                        <div style={{ display: \"grid\", gridTemplateRows: \"30px 70px\" }}>\n                            <div style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\" }}>\n                                <t3>{name}</t3>\n                            </div>\n                            <div style={{ display: \"grid\", gridTemplateRows: \"1fr 1fr\" }}>\n                                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(8,1fr)\" }}>\n                                    {TPNListcellRender}\n                                </div>\n                                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(8,1fr)\" }}>\n                                    {TPNSubDatacellRender}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ fontWeight: \"600\", color: \"rgb(0,120,0)\", display: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"none\" : \"flex\"], border: \"1px solid rgba(232,232,232,1)\", borderCollapse: \"collapse\", padding: \"0px 5px\", alignItems: \"center\", height: \"30px\", width: \"100%\" }}>\n                        <t3>{RemarkData}</t3>\n                    </div>\n                </div>\n                <div style={this.state.EditMode ? {\n                    display: this.state.powerLogin == 1 ? \"flex\" : \"none\", alignItems: \"center\", justifyContent: \"center\", position: \"absolute\", top: 0, right: 0, height: [this.state.remark === \"\" || this.state.remark === undefined || this.state.remark === null ? \"100px\" : \"130px\"], background: \"white\", width: \"77px\", border: \"rgba(232, 232, 232, 1) 1px solid\"\n                } : { display: \"none\" }}>\n                    < div onClick={() => this.showModal()} style={{ width: \"40px\", height: \"40px\", borderRadius: \"99em\", background: \"rgba(124, 179, 5, 1)\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\" }} >\n                        <img src={chooseedit} alt='chooseedit'></img>\n                    </div>\n                </div>\n                {this.Moduledisplay(name, startTime)}\n            </div >\n        );\n    }\n}\n\nexport default Nurtiontpncell\n","import React, { Component } from 'react'\nimport * as d3 from \"d3\";\nimport './Watervaluechart.scss'\nimport { Modal } from 'antd'\n// import { getRandomfornumber } from '../../Function/Wardstate'\nimport moment from 'moment';\n\nclass Watervaluechart extends Component {\n    state = {\n        visible: false,\n        select: null,\n        rowdata: null\n    };\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: true,\n            select: null,\n            rowdata: null\n        });\n    };\n    componentDidUpdate() {\n        const { svg_key } = this.props\n        d3.select(\"#\" + svg_key).remove()\n        this.drawChart()\n\n    }\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentWillUnmount() {\n    }\n\n    cal_svg_hight() {\n        const { axisTop, axisBot } = this.props\n        if (axisTop) {\n            if (axisBot) {\n                return 160\n            }\n            else {\n                return 130\n            }\n        }\n        else {\n            if (axisBot) {\n                return 130\n            }\n            else {\n                return 90\n            }\n        }\n    }\n\n    cal_svg_transform() {\n        const { axisTop, axisBot } = this.props\n        if (axisTop) {\n            if (axisBot) {\n                return 70\n            }\n            else {\n                return 50\n            }\n        }\n        else {\n            if (axisBot) {\n                return 5\n            }\n            else {\n                return 5\n            }\n        }\n    }\n\n    drawChart() {\n        function formatShiftDays(startTime, endTime) {\n            const shiftDays = parseInt((endTime - startTime) / (24 * 60 * 60 * 1000))\n            return shiftDays\n        }\n        const { svg_key, id_key, startTime, watervalueData } = this.props\n        const width = (window.screen.availWidth - 50) / 2 - 50, height = 400\n        const max = 500, min = 0\n        const shiftDays = formatShiftDays(moment(startTime, \"YYYYMMDD\").valueOf(), moment().valueOf())\n\n        if (watervalueData.length === 0) {\n            return null\n        }\n        const rectwidth = (width / shiftDays) - 2\n        var x = d3.scaleLinear()\n            .domain([0, watervalueData.length])\n            .range([0, width]);\n\n\n        //x和y的比例尺\n        var y = d3.scaleLinear()\n            .domain([min, max])\n            .range([height, 0])\n\n\n\n        var yAxis = d3.axisLeft(y)\n            .ticks(11)\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(10);\n\n        var xAxisBottom = d3.axisBottom(x)\n            .ticks(watervalueData.length)\n            .tickFormat(n => (n))\n            .tickSize(0, 0)\n            .tickPadding(height + 10)\n            .tickFormat(function (d) {\n                if (d % 10 === 0) {\n                    if (d > 0) {\n                        return 'D' + d\n                    }\n                    return null\n                }\n                else return null;\n            });\n\n\n        var svg = d3.select(\"#\" + id_key)\n            .append(\"svg\")\n            .attr(\"id\", svg_key)\n            .attr(\"viewBox\", [0, 0, width + 80, height + 50])\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + 50 + \",\" + 30 + \")\"); \n\n\n        //y軸\n        svg.append(\"g\")\n            .call(yAxis)\n            .attr(\"class\", \"axis\");\n\n        svg.append(\"g\")\n            .call(xAxisBottom)\n            .attr(\"class\", \"axis\");\n\n\n        for (let index = 0; index < 11; index++) {\n            //上下虛線\n            svg.append('line')\n                .attr('x1', 0)\n                .attr('y1', y(index * 50))\n                .attr('x2', width)\n                .attr('y2', y(index * 50))\n                .style('stroke', 'rgba(187, 187, 187, 1)')\n                .style('stroke-width', 1)\n                .style('stroke-dasharray', 5.5);\n        }\n\n        for (let index = 0; index < watervalueData.length; index++) {\n            //上下虛線\n            if (index % 10 === 0 && index > 0) {\n                svg.append('line')\n                    .attr('x1', x(0.5 + index))\n                    .attr('y1', y(min))\n                    .attr('x2', x(0.5 + index))\n                    .attr('y2', y(max))\n                    .style('stroke', 'rgba(187, 187, 187, 1)')\n                    .style('stroke-width', 1)\n                    .style('stroke-dasharray', 5.5);\n            }\n        }\n\n\n\n\n        // function rowdatageneral(number) {\n        //     const rowdata = {\n        //         'IV': {\n        //             \"max\": getRandomfornumber(number),\n        //             \"min\": 0\n        //         },\n        //         'feeding': {\n        //             \"max\": getRandomfornumber(number),\n        //             \"min\": 0\n        //         },\n        //         'Other': {\n        //             \"max\": getRandomfornumber(number),\n        //             \"min\": 0\n        //         }\n        //     }\n        //     return rowdata\n        // }\n        const select = this.state.select\n        if (select === null || select === undefined || select === \"\") {\n            d3.selectAll(\"rect#A123\").remove()\n        }\n        for (let index = 0; index < watervalueData.length; index++) {\n            const rowdata = watervalueData[index]\n            const orindex = index + 0.5\n            var svgrect = svg.append('g').on('click', () => {\n                if (rowdata === null) {\n\n                }\n                else {\n                    this.setState({\n                        visible: true,\n                        select: index,\n                        rowdata: rowdata\n                    });\n\n                }\n            })\n            if (index === select) {\n                svgrect.append('rect')\n                    .attr('id', 'A123')\n                    .attr('width', rectwidth + 2)\n                    .attr('height', y(0) - y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .attr('x', x(orindex) - (rectwidth / 2) - 1)\n                    .attr('y', y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .style('fill', 'rgba(0,0,0,0)')\n                    .style('stroke', '#F5A623')\n                    .style('stroke-width', 2)\n                    .style('cursor', 'pointer');\n            }\n            else {\n                svgrect.append('rect')\n                    .attr('id', 'A123')\n                    .attr('width', rectwidth + 2)\n                    .attr('height', y(0) - y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .attr('x', x(orindex) - (rectwidth / 2) - 1)\n                    .attr('y', y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                    .style('fill', 'rgba(0,0,0,0)')\n                    .style('stroke', 'rgba(0,0,0,0)')\n                    .style('stroke-width', 2)\n                    .style('cursor', 'pointer')\n                    .style('opacity', 1);\n            }\n            svgrect.append('line')\n                .attr('x1', x(orindex))\n                .attr('y1', y(rowdata.Feeding + rowdata.IV + rowdata.Other))\n                .attr('x2', x(orindex))\n                .attr('y2', y(rowdata.IV + rowdata.Other))\n                .style('stroke', '#2E64A4')\n                .style('stroke-width', rectwidth)\n\n            svgrect.append('line')\n                .attr('x1', x(orindex))\n                .attr('y1', y(rowdata.IV + rowdata.Other))\n                .attr('x2', x(orindex))\n                .attr('y2', y(rowdata.Other))\n                .style('stroke', '#C3EFFF')\n                .style('stroke-width', rectwidth)\n\n\n            svgrect.append('line')\n                .attr('x1', x(orindex))\n                .attr('y1', y(rowdata.Other))\n                .attr('x2', x(orindex))\n                .attr('y2', y(0))\n                .style('stroke', '#3B97E1')\n                // .style('stroke', 'red')\n                .style('stroke-width', rectwidth)\n        }\n    }\n\n    ModalRender() {\n        function nulldata(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return 0\n            }\n            return value\n        }\n        const data = this.state.rowdata\n        if (data === null || data === undefined) {\n            return null\n        }\n        // function sumRowdata(data) {\n        //     if (data === null || data === undefined) {\n        //         return 0\n        //     }\n        //     return data * 0.8\n        // }\n        const select = this.state.select\n        const waterdata = this.props.watervalueData\n        const car = waterdata[select].Caloriessum\n        return (\n            <Modal\n                title=\"Basic Modal\"\n                visible={this.state.visible}\n                onOk={this.handleOk}\n                onCancel={this.handleCancel}\n                footer={null}\n            >\n                <div>IV:{nulldata(data.IV)}</div>\n                <div>Feeding:{nulldata(data.Feeding)}</div>\n                <div>Other:{nulldata(data.Other)}</div>\n                <div>總熱量:{car}kcal</div>\n            </Modal>\n        );\n    }\n    render() {\n        const { id_key } = this.props\n        const model = this.ModalRender()\n        return (\n            <div id={id_key}>\n                {model}\n            </div>\n        );\n    }\n}\n\nexport default Watervaluechart\n","import React, { Component } from 'react'\nimport Nurtiontpncell from './Nurtion_TPN_cell'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as ApiGithub from '../../API/ApiGithub'\n\nclass Nurtiontpnorder extends Component {\n    state = {\n        onEdit: false,\n        tpndata: [],\n        UDORDER0: [],\n        tpnParsers: []\n    }\n    componentDidMount() {\n        const getAPITPNData = this.getAPITPNData.bind(this)\n        ApiGithub.getGitHubJson(\"TpnOrder.json\")\n            .then(data => {\n                let parser = data.data\n                console.log(\"getGitHubJson TPN Order OK \" + JSON.stringify(parser))\n                this.setState({\n                    tpnParsers: parser\n                }, () => {\n                    getAPITPNData()\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n    }\n    getAPITPNData() {\n        const { caseinfo } = this.props\n        const HID = caseinfo.HISID.toString().trim()\n        const CID = caseinfo.CASEID.toString().trim()\n        const { tpnParsers } = this.state\n        ApiProvider.getStoredProcedureUDORDER0(HID, CID, \"123\")\n            .then(data => {\n                //create list need to do search\n                let tpnList = [] // All TPN data\n                let selected_parser = undefined\n                //fakeData.forEach(item => {\n                data.data.forEach(item => {\n                    //get parser\n                    selected_parser = this.select_parser(item, tpnParsers)\n                    if (selected_parser !== undefined) {\n                        const found = item.UDDRGNAM.match(RegExp(selected_parser.apply_condition.name, selected_parser.apply_condition.name_regex_flags))\n                        if (found !== null && found !== \"\") tpnList.push(item)\n                    }\n                });\n\n                if (selected_parser !== undefined) {\n                    //parser 7 value from each TPN document （AA, Glu, Na, K, Ca, P, Mg）\n                    tpnList.forEach((item, index) => {\n                        ApiProvider.getStoredProcedureUDTEXTQ1(CID, item.UDORDSEQ)\n                            .then(data => {\n                                console.log(\"getStoredProcedureUDTEXTQ1 OK \" + JSON.stringify(data.data))\n\n                                //parse every line\n                                const result = this.parse(data.data, selected_parser)\n                                item.TPNDATA = result;\n                                tpnList.splice(index, 1, item)\n                                this.setState({\n                                    tpndata: tpnList\n                                })\n                            })\n                            .catch(err => {\n                                console.log(\"getStoredProcedureUDTEXTQ1 NG \" + err)\n                            });\n                    });\n                }\n            })\n            .catch(err => {\n                console.log(\"getStoredProcedureUDORDER0 NG \" + err)\n            });\n    }\n    select_parser = (input, parsers) => {\n        const inputBeginTime = moment(input.UDBGNDT, \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n        const inputEndTime = moment(input.UDENDDT, \"YYYY-MM-DD-hh.mm.ss.000000\").valueOf()\n        return parsers.find(x =>\n            input.UDDRGNAM.match(x.apply_condition.name)\n            && (!x.apply_condition.start_time || inputBeginTime >= x.apply_condition.start_time)\n            && (!x.apply_condition.end_time || inputEndTime < x.apply_condition.end_time)\n        )\n    }\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = \"\"\n        });\n\n        inputs.forEach(input => {\n            let content = input.UDWORD;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key] = match[mapping.position]\n                }\n            });\n        });\n        return allResult;\n    }\n    Edit_state() {\n        this.setState(\n            {\n                onEdit: true\n            }\n        )\n    }\n    handleOk = e => {\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            onEdit: false,\n        });\n    };\n\n    render() {\n        const { caseinfo, PickerDateRange } = this.props\n        const title = [\"開始時間\", \"結束時間\", \"狀態\", \"處置名稱\"]\n        const titilecell = title.map(function (info, index) {\n            return (\n                <div key={index} style={{ padding: \"0px 5px\", display: \"flex\", alignItems: \"center\", borderCollapse: \"collapse\" }}>\n                    <div style={{ fontSize: \"14px\" }}>{info}</div>\n                </div>\n            );\n        })\n        const ListCellData = this.state.tpndata\n        let filterData = ListCellData.filter((element, index, arr) => {\n            const time = moment(moment(element.UDBGNDT, 'YYYY-MM-DD-HH.mm.ss.000000').format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n            return PickerDateRange[0] <= time && time <= PickerDateRange[1]\n        })\n\n        filterData = filterData.sort((a, b) => {\n            let tempTimeA = moment(moment(a.UDBGNDT, 'YYYY-MM-DD-HH.mm.ss.000000').format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n            let tempTimeB = moment(moment(b.UDBGNDT, 'YYYY-MM-DD-HH.mm.ss.000000').format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf()\n            return tempTimeA < tempTimeB ? 1 : -1\n        })\n\n        const DataCellRender = filterData.map(function (element, index, arr) {\n            return (\n                <Nurtiontpncell key={index} data={element} caseinfo={caseinfo} ></Nurtiontpncell>\n            );\n        })\n\n        return (\n            <div>\n                <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>TPN order</t2>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \" 1fr 1fr 60px 450px\", height: \"30px\", border: \"rgba(238,238,238,1) 1px solid\", backgroundColor: \"rgba(226, 237, 243,.5)\", justifyItems: \"center\" }}>\n                    {titilecell}\n                </div>\n                {filterData.length !== 0 && <div style={{ minHeight: \"120px\", maxHeight: \"400px\", overflowY: \"auto\" }}>\n                    {DataCellRender}\n                </div>}\n                {filterData.length === 0 &&\n                    <div style={{ height: \"50px\", paddingLeft: \"1.5%\", display: \"flex\", alignItems: \"center\" }}>\n                        今日無資料\n                    </div>}\n            </div>\n        );\n    }\n}\n\nexport default Nurtiontpnorder\n","import React, { Component } from 'react'\nimport Nurtionfeedingorder from './Nurtionfeeding'\nimport { Select, Button, DatePicker, Modal, Icon } from 'antd';\nimport WardlifeChart from '../../Wardview/Wardlifechart'\nimport Wardmonthafter from '../../Wardview/Wardmonthafter'\nimport Nurtiontpnorder from './Nurtion_TPN'\nimport Watervaluechart from './Watervaluechart'\nimport { gender } from '../../Function/Wardbedfunction'\nimport X2JS from 'x2js';\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment'\nimport * as FiliterReg from '../../Function/FiliterReg'\nimport './Nurtion.scss'\nimport * as QDCData from '../../Resource/QDC'\nimport * as ioDataFormat from '../../Module/ioDataFormat'\n\nclass Nurtionview extends Component {\n    state = {\n        visible: false,\n        test_items_interval: 0,\n        UDORDER0: [],\n        QDC: [],\n        QTWER: [],\n        isLoading: false,\n        PickerDateRange: moment(moment().format('YYYYMMDD'))\n    }\n    componentDidMount() {\n        this.API_DATA()\n    }\n    API_DATA() {\n        const { caseinfo } = this.props\n        const xm2 = new X2JS()\n        const st = moment(caseinfo.TRANSINDT.toString(), 'YYYYMMDD').format('YYYYMMDDHHmm')\n        const et = moment().format(\"YYYYMMDDHHmm\")\n        ApiProvider.getQDC(caseinfo.CASEID, st, et)\n            .then(data => {\n                const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n                console.log(parsedata)\n                this.setState({\n                    QDC: parsedata\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        // this.setState({ QDC: QDCData.data.outmsg.resconts.rescont })\n        ApiProvider.getStoredProcedureUDORDER0(caseinfo.HISID, caseinfo.CASEID, \"123\")\n            .then(data => {\n                this.setState({\n                    isLoading: false,\n                    UDORDER0: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n                this.setState({ isLoading: false });\n            });\n    }\n    switch_monthy() {\n        const { caseinfo } = this.props\n        const grewinfo = {\n            \"WEEK_BORN\": Number(caseinfo.WEEK_BORN),\n            \"DAY_BORN\": Number(caseinfo.DAY_BORN),\n            \"BIRTHDAY\": caseinfo.PBASINGNINFO.PBIRTHDT\n        }\n        const WeightList = caseinfo.WEIGHT\n        const sex = gender(caseinfo.PBASINGNINFO.PSEX)\n        const switch_data = this.state.test_items_interval\n        const width = (window.screen.availWidth - 300) / 2, height = 350\n        switch (switch_data) {\n            case 0:\n                return <WardlifeChart width={width} height={height} grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife\"} svg_key={\"wardlife_svg\"} gender={sex}></WardlifeChart>\n            case 1:\n                return <Wardmonthafter width={width} height={height} grewinfo={grewinfo} weightList={WeightList} id_key={\"wardlife_after\"} svg_key={\"wardlife_after_svg\"} gender={sex}></Wardmonthafter>\n            default:\n                return null;\n        }\n    }\n\n    handleChange = (checkedValues) => {\n        this.setState(\n            {\n                test_items_interval: checkedValues\n            }\n        )\n\n    }\n    onOk = (value) => {\n    }\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n    WaterValueControlBar() {\n        return (\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", marginRight: \"10px\" }}>\n                    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        <div style={{ height: \"10px\", width: \"10px\", background: \"#C3EFFF\", marginRight: \"5px\" }}></div>\n                        <t3>IV</t3>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        <div style={{ height: \"10px\", width: \"10px\", background: \"#2E64A4\", marginRight: \"5px\" }}></div>\n                        <t3>Feed</t3>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                        <div style={{ height: \"10px\", width: \"10px\", background: \"#3B97E1\", marginRight: \"5px\" }}></div>\n                        <t3>Other</t3>\n                    </div>\n                </div>\n                {/* <Button type=\"primary\" onClick={this.showModal}>設定營養項目</Button> */}\n            </div>\n        );\n    }\n    SwitchTestItemInterval(testiteminterval) {\n        const time_selectbtn_style = {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"25px\",\n            padding: \"0px 5px\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#001a6dbb\",\n            color: \"white\",\n            fontSize: \"1rem\",\n            borderWidth: \"1px\",\n            borderStyle: \"solid\",\n            borderColor: \"#001a6d88\",\n            cursor: \"pointer\"\n        }\n        const time_unselectbtn_style = {\n            display: \"flex\", justifyContent: \"center\",\n            alignItems: \"center\", height: \"25px\",\n            padding: \"0px 5px\",\n            borderRadius: \"4px\", backgroundColor: \"white\",\n            color: \"#001a6d88\", fontSize: \"1rem\",\n            borderWidth: \"1px\", borderStyle: \"solid\",\n            borderColor: \"#001a6d88\",\n            cursor: \"pointer\"\n        }\n        if (testiteminterval === this.state.test_items_interval) {\n            return time_selectbtn_style\n        }\n        else return time_unselectbtn_style\n    }\n    GrowthCurveControlBar() {\n        const { Option } = Select;\n        return (\n            <div className='titlebutton'>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridColumnGap: \"5px\" }}>\n                    <div style={this.SwitchTestItemInterval(1)} onMouseUp={() => this.handleChange(0)}>40週前</div>\n                    <div style={this.SwitchTestItemInterval(0)} onMouseUp={() => this.handleChange(1)}>40週後</div>\n                </div>\n                {/* <Select defaultValue={1} style={{ width: 120 }} onChange={this.handleChange}>\n                    <Option value={0}>滿足月</Option>\n                    <Option value={1}>不滿足月</Option>\n                </Select> */}\n                {/* <Button type=\"primary\" onClick={this.showModal}>新增體重</Button>\n                <Modal\n                    title=\"手動新增體重紀錄\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                        <div style={{ display: \"flex\", alignItems: \"center\" }}>選擇時間:</div>\n                        <DatePicker getCalendarContainer={triggerNode => triggerNode.parentNode} id=\"nurtion_datepicker\" style={{ width: \"400px\" }} showTime placeholder=\"選擇時間\" onOk={this.onOk} />\n                    </div>\n                </Modal> */}\n            </div>\n        );\n    }\n    WaterValueRender() {\n        function formatTimeArray(startTime) {\n            const shiftTimer = parseInt((moment().valueOf() - moment(startTime, \"YYYYMMDD\").valueOf()) / (23 * 60 * 60 * 1000))\n            var TimerArray = []\n            for (let index = 0; index < shiftTimer; index++) {\n                const Time = moment(moment(startTime, \"YYYYMMDD\").valueOf() + (index * 24 * 60 * 60 * 1000)).format(\"YYYY/MM/DD\")\n                TimerArray.push(Time)\n            }\n            return TimerArray\n        }\n        const { caseinfo } = this.props\n        const QDC = this.state.QDC\n        if (QDC.length === 0) {\n            return null\n        }\n        const feed = ioDataFormat.FeedData(QDC)\n        const IV = ioDataFormat.IVData(QDC)\n        const Other = ioDataFormat.OtherData(QDC)\n        const OtherFilterInput = formatOtherInput(Other)\n\n        console.log(feed)\n\n\n        function formatOtherInput(OtherData) {\n            if (Array.isArray(OtherData)) {\n                const OtherFilterInput = OtherData.filter(function (info, index, arr) {\n                    return info.inp_val1 !== undefined && Number(info.inp_val1) !== NaN\n                })\n                return OtherFilterInput\n            }\n            return []\n        }\n\n\n\n        var Calories = 0\n\n        function sumcar(List) {\n            var Calories = 0\n            for (let index = 0; index < List.length; index++) {\n                const element = List[index];\n                if (element.item === \"進食\") {\n                    if (element.lost === \"配方奶\") {\n                        Calories = Calories + Number(element.inp_val2) * 0.8\n                    }\n                    if (element.lost === \"母奶\") {\n                        Calories = Calories + Number(element.inp_val2) * 0.7\n\n                    }\n                }\n                if (element.nam !== undefined) {\n                    if (element.nam.toString().match(\"10%TPN\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                    if (element.nam.toString().match(\"15%TPN\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34 * 1.5\n                    }\n                    if (element.nam.toString().match(\"SMOFliquid\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                    if (element.nam.toString().match(\"D10\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                    if (element.nam.toString().match(\"D12\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34 * 1.2\n                    }\n                    if (element.nam.toString().match(\"D5W\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34 * 5\n                    }\n                    if (element.nam.toString().match(\"taita\") !== null) {\n                        Calories = Calories + Number(element.inp_val1) * 0.34\n                    }\n                }\n\n            }\n            return parseInt(Calories)\n\n        }\n        const startTime = caseinfo.TRANSINDT.toString()\n        const TimerList = formatTimeArray(startTime)\n        var watervalueDataList = []\n        for (let index = 0; index < TimerList.length; index++) {\n            const element = TimerList[index];\n            const filterFeedind = feed.filter(function (value, index, arr) {\n                return moment(element, \"YYYY/MM/DD\").valueOf() === moment(value.rec_dat.toString().trim(), \"YYYY/MM/DD\").valueOf()\n            })\n            const filterIV = IV.filter(function (value, index, arr) {\n                return moment(element, \"YYYY/MM/DD\").valueOf() === moment(value.rec_dat.toString().trim(), \"YYYY/MM/DD\").valueOf()\n            })\n            const filterOther = OtherFilterInput.filter(function (value, index, arr) {\n                return moment(element, \"YYYY/MM/DD\").valueOf() === moment(value.rec_dat.toString().trim(), \"YYYY/MM/DD\").valueOf()\n            })\n\n            const feedingSum = SumData2(filterFeedind)\n            const IVSum = SumData(filterIV)\n            const OtherSum = SumData(filterOther)\n\n            const Caloriessum = sumcar(filterFeedind) + sumcar(filterIV) + sumcar(filterOther)\n            watervalueDataList.push({\n                Feeding: feedingSum,\n                IV: IVSum,\n                Other: OtherSum,\n                Time: element,\n                Caloriessum\n            })\n\n        }\n        function SumData(arr) {\n            var sum = 0;\n            for (var i = 0; i < arr.length; i++) {\n                sum += Number(arr[i].inp_val1);\n            };\n            return parseInt(sum);\n        }\n\n        function SumData2(arr) {\n            var sum = 0;\n            for (var i = 0; i < arr.length; i++) {\n                sum += Number(arr[i].inp_val2);\n            };\n            return parseInt(sum);\n        }\n\n        return (\n            <Watervaluechart Calories={Calories} watervalueData={watervalueDataList} startTime={caseinfo.TRANSINDT} id_key={\"water_id\"} svg_key={\"water_svg\"} caseiddays='2019/11/11'></Watervaluechart>\n        );\n    }\n\n    PickerDateRangeChange = (date, dateString) => {\n        this.setState({ PickerDateRange: date })\n    }\n\n    trainDay = (e) => {\n        const { caseinfo } = this.props\n        const bron = caseinfo.PBASINGNINFO.PBIRTHDT\n        const bronDate = moment(moment(bron).format('YYYYMMDD')).valueOf()\n\n        const PickerDate = this.state.PickerDateRange.valueOf()\n        const day = 24 * 60 * 60 * 1000\n\n        switch (e.target.value) {\n            case 'B':\n                const bTime = PickerDate - day\n                const bTemp = bTime - (6 * day)\n                bronDate <= bTemp && this.PickerDateRangeChange(moment(bTime))\n                break;\n            case 'N':\n                const nTime = moment(moment().format('YYYYMMDD'))\n                this.PickerDateRangeChange(nTime)\n                break;\n            case 'A':\n                const aTime = PickerDate + day\n                const aTemp = moment(moment().format('YYYYMMDD')).valueOf()\n                aTime <= aTemp && this.PickerDateRangeChange(moment(aTime))\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const GrowthCurve = this.switch_monthy()\n        const GrowthCurveControl = this.GrowthCurveControlBar()\n        const WaterValueControl = this.WaterValueControlBar()\n        const tpndata = this.state.UDORDER0\n        const feeddata = this.state.TRTMNTQ1\n        const TimeStampPickerDate = this.state.PickerDateRange.valueOf()\n        const { caseinfo } = this.props\n\n        if (tpndata.length === 0 || feeddata === 0) {\n            return null\n        }\n\n        const waterRender = this.WaterValueRender()\n        const PickerDateRange = [TimeStampPickerDate - (6 * 24 * 60 * 60 * 1000), TimeStampPickerDate]\n\n        return (\n            <div className='nurtionheight'>\n                <div className='nurtionlayout'>\n                    <div>\n                        <div className='nurtioncomponmentboxtitle'>\n                            <t1>生長曲線圖</t1>\n                            {this.state.isLoading ? (<Icon type=\"loading\" />) : (GrowthCurveControl)}\n                        </div>\n                        <div className='nurtioncomponmentboxcontent'>{GrowthCurve}</div>\n                    </div>\n                    <div>\n                        <div className='nurtioncomponmentboxtitle'>\n                            <t1>水量表</t1>\n                            <div className='titlebutton'>\n                                {WaterValueControl}\n                            </div>\n                        </div>\n                        <div className='nurtioncomponmentboxcontent'>\n                            {this.state.isLoading ? (<Icon type=\"loading\" />) : (waterRender)}\n                        </div>\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"140px 120px\", gridColumnGap: \"5px\", margin: \"10px 0px 5px 0px\" }}>\n                    <DatePicker\n                        getCalendarContainer={triggerNode => triggerNode.parentNode}\n                        value={this.state.PickerDateRange}\n                        format={\"YYYY/MM/DD\"}\n                        allowClear={false}\n                        locale={\"zh_TW\"}\n                        onChange={this.PickerDateRangeChange}\n                    />\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gridColumnGap: \"1px\" }}>\n                        <Button value=\"B\" shape=\"circle\" icon=\"left-circle\" onClick={this.trainDay} />\n                        <Button value=\"N\" shape=\"circle\" icon=\"minus-circle\" onClick={this.trainDay} />\n                        <Button value=\"A\" shape=\"circle\" icon=\"right-circle\" onClick={this.trainDay} />\n                    </div>\n                </div>\n                <div style={{ display: \"grid\", gridTemplateColumns: '1fr 1fr', gridColumnGap: \"10px\", marginBottom: \"20px\" }}>\n                    {\n                        this.state.isLoading ? (<Icon type=\"loading\" />) : (<Nurtionfeedingorder PickerDateRange={PickerDateRange} caseinfo={caseinfo}></Nurtionfeedingorder>)\n                    }\n                    {/* <Nurtiontpnorder PickerDateRange={PickerDateRange} caseinfo={caseinfo}></Nurtiontpnorder> */}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Nurtionview\n","import React, { Component } from 'react'\nimport './Infectionlabtable.scss'\n// import { chronicladdataoneday, chroniclabdatathird } from '../../Data/Wardviewdata'\n// import { arraychange } from '../../Function/Wardstate'\n\nclass Infectionlabtable extends Component {\n    switch_state() {\n        const chronic_state = 2\n        switch (chronic_state) {\n            case 0:\n                return 24\n            case 1:\n                return 18\n            case 2:\n                return 21\n            case 3:\n                return 14\n            default:\n                break;\n        }\n    }\n    switch_state_title() {\n        return \"140px\"\n    }\n    table_content() {\n        function FormatList(Datalist, st) {\n            var Render = []\n            for (let index = 0; index < 21; index++) {\n                const start = st + (index * 8 * 60 * 60 * 1000)\n                const end = st + ((index + 1) * 8 * 60 * 60 * 1000)\n                const FilterData = Datalist.filter(function (value, index, arr) {\n                    return value.Time > start && value.Time < end\n                })\n                var sum = 0\n                for (let index = 0; index < FilterData.length; index++) {\n                    const element = FilterData[index];\n                    sum = sum + Number(element.Data)\n                }\n                Render.push(sum)\n            }\n            return Render\n        }\n        function CellRander(List) {\n            function checkLineColor(lineColor) {\n                if (lineColor === null) {\n                    return '';\n                } else {\n                    return `${lineColor.width} solid ${lineColor.color}`;\n                }\n            }\n            function valueFormat(value) {\n                if (value === 0 || value === undefined || value === null || value === \"\") {\n                    return \"\"\n                }\n                return `${value}`\n            }\n            function TimeLine(interval, index) {\n                const lineStyle = {\n                    width: '',\n                    color: '',\n                }\n                if (interval === 0) {\n                    if (index === 0 || (index % 24) === 0) {\n                        lineStyle.width = '2px';\n                        lineStyle.color = 'rgba(0,0,0,0.2)';\n                        return lineStyle;\n                    } else if (index % 8 === 0) {\n                        lineStyle.width = '2px';\n                        lineStyle.color = 'rgba(0,0,0,0.2)';\n                        return lineStyle;\n                    }\n                    else {\n                        lineStyle.width = '1px';\n                        lineStyle.color = '#eeeeee';\n                        return lineStyle;\n                    }\n                }\n                if (interval === 1) {\n                    if (index === 0 || (index % 6) === 0) {\n                        lineStyle.width = '2px';\n                        lineStyle.color = 'rgba(0,0,0,0.2)';\n                        return lineStyle;\n                    } else if (index % 2 === 0) {\n                        lineStyle.width = '2px';\n                        lineStyle.color = 'rgba(0,0,0,0.2)';\n                        return lineStyle;\n                    }\n                    else {\n                        lineStyle.width = '1px';\n                        lineStyle.color = '#eeeeee';\n                        return lineStyle;\n                    }\n                }\n                if (interval === 2) {\n                    if (index === 0 || (index % 3) === 0) {\n                        lineStyle.width = '2px';\n                        lineStyle.color = 'rgba(0,0,0,0.2)';\n                        return lineStyle;\n                    } else {\n                        lineStyle.width = '2px';\n                        lineStyle.color = 'rgba(0,0,0,0.2)';\n                        return lineStyle;\n                    }\n                }\n                if (interval === 3) {\n                    lineStyle.width = '2px';\n                    lineStyle.color = 'rgba(0,0,0,0.2)';\n                    return lineStyle;\n                }\n            }\n            const cellR = List.map(function (info, index) {\n                const lineColoe = TimeLine(3, index)\n                if (info === 0) {\n                    return (\n                        <div style={{ height: '40px', display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', borderLeft: checkLineColor(lineColoe) }}></div>\n                    )\n                }\n                return (\n                    <div style={{ backgroundColor: 'rgba(0,120,230,.1)', height: '40px', fontSize: \"16px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"rgba(238,238,238,1) 1px solid\", borderCollapse: 'collapse', cursor: \"pointer\", borderLeft: checkLineColor(lineColoe) }}>\n                        <t2>{valueFormat(info)}</t2>\n                    </div>\n                );\n            })\n            return cellR\n        }\n        const { PickerDate, WBCList, BandList, SegList, LymList, PCTList, CRPList, title } = this.props\n        const st = PickerDate + (31 * 60 * 60 * 1000) - (7 * 24 * 60 * 60 * 1000)\n        var WBCRender = FormatList(WBCList, st)\n        var BandRender = FormatList(BandList, st)\n        var SegRender = FormatList(SegList, st)\n        var LymRender = FormatList(LymList, st)\n        var PCTRender = FormatList(PCTList, st)\n        var CRPRender = FormatList(CRPList, st)\n        const WBCcell = CellRander(WBCRender)\n        const Bandcell = CellRander(BandRender)\n        const Segcell = CellRander(SegRender)\n        const Lymcell = CellRander(LymRender)\n        const PCTcell = CellRander(PCTRender)\n        const CRPcell = CellRander(CRPRender)\n        return (\n            <div style={{ display: \"grid\", gridTemplateRows: \"repeat(\" + title.length + \",1fr)\" }}>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{WBCcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{Bandcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{Segcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{Lymcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{PCTcell}</div>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + this.switch_state() + \",1fr)\" }}>{CRPcell}</div>\n            </div>\n        );\n    }\n    render() {\n        const { userdata, title } = this.props\n        const title_list = title.map((info, index) => <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"40px\", border: \"1px solid rgba(238,238,238,1)\", borderCollapse: \"collapse\", backgroundColor: \"#eeeeee\" }} key={index}><t2>{info.title}</t2></div>)\n        return (\n            <div style={{ display: \"grid\", gridTemplateColumns: \"140px 1fr\" }}>\n                <div style={{ display: \"grid\", gridTemplateRows: \"repeat(\" + title.length + \",1fr)\" }}>\n                    {title_list}\n                </div>\n                {this.table_content()}\n            </div>\n        );\n    }\n}\n\nexport default Infectionlabtable\n","import React, { Component } from 'react'\nimport Infectionlabtable from './Infectionlabtable'\n\nclass Infectionlab extends Component { \n    render() {\n        const { WBCList, BandList, SegList, LymList, PCTList, CRPList,PickerDate,title } = this.props\n        const item_title = [{ title: \"WBC\" }, { title: \"Band\" }, { title: \"Seg\" }, { title: \"Lymp\" }, { title: \"PCT\" }, { title: \"CRP\" }]\n        return (\n            <div style={{ marginTop: \"15px\" }}>\n            <div style={{ backgroundColor: \"#71b0e46e\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", height: \"36px\", padding: \"0px 16px\", display: \"flex\", alignItems: \"center\" }}>\n                <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>{title}</t2>\n            </div>\n                <Infectionlabtable PickerDate={PickerDate} title={item_title}  WBCList={WBCList} BandList={BandList} SegList={SegList} LymList={LymList} PCTList={PCTList} CRPList={CRPList}></Infectionlabtable>\n            </div>\n        );\n    }\n}\n\nexport default Infectionlab   ","import React, { Component } from 'react'\nimport { DatePicker, Icon } from 'antd'\nimport Vitalxaxis from '../../Module/Vitalxaxis'\n// import Infectionvitalsign from './Infectionvitalsign'\nimport Infectionlab from './Infectionlab'\nimport Orderonchronic from '../ChronicleView/ChronicOrder'\nimport moment from 'moment'\nimport * as ApiProvider from '../../API/ApiProvider'\nimport * as ApiGithub from '../../API/ApiGithub'\nimport './Infection.scss'\nimport Vitalonchronic from '../ChronicleView/Chronic_vital'\n\nclass Infectionview extends Component {\n    state = {\n        datasource: [],\n        statussource: \"CM\",\n        intervalselect: 2,\n        PickerDate: moment(moment().format(\"YYYYMMDD\"), \"YYYYMMDD\").valueOf(),\n        UDORDER0: [],\n        RESLAB02: [],\n        RESLAB01: [],\n        classParser: undefined,\n        isLoading: false,\n        hrdatasource: [],\n        rrdatasource: [],\n        spo2datasource: [],\n        abpdatasource: [],\n        nbpdatasource: [],\n        btdatasource: [],\n        QDVS: [],\n        QOXY: [],\n    }\n    componentDidMount() {\n        this.apidata()\n    }\n\n    apidata() {\n        const { caseinfo } = this.props\n        this.setState({ isLoading: true });\n        const dateTime = this.state.PickerDate\n        const et = dateTime + (31 * 60 * 60 * 1000)\n        const st = moment(et - (7 * 24 * 60 * 60 * 1000)).format(\"YYYY-MM-DD\")\n        const apiClass = ApiGithub.getGitHubJson(\"Class.json\")\n            .then(data => {\n                let parser = data.data.find(item => item.apply_condition.name === \"Prescription\");\n                console.log(\"getGitHubJson Prescription OK \" + JSON.stringify(parser))\n                this.setState({\n                    classParser: parser\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        const apiUDO = ApiProvider.getStoredProcedureUDORDER0(caseinfo.HISID, caseinfo.CASEID, \"123\")\n            .then(data => {\n                this.setState({\n                    UDORDER0: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getStoredProcedureORDLIST NG \" + JSON.stringify(err))\n            });\n        const apiLAB2 = ApiProvider.getStoredProcedureRESLAB02(caseinfo.HISID, st)\n            .then(data => {\n                this.setState({\n                    RESLAB02: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n        const apiLAB1 = ApiProvider.getStoredProcedureRESLAB01(caseinfo.HISID, st)\n            .then(data => {\n                this.setState({\n                    RESLAB01: data.data\n                })\n            })\n            .catch(err => {\n                console.log(\"Andy test getQDC NG \" + JSON.stringify(err));\n            });\n\n        Promise.all([apiClass, apiUDO, apiLAB2, apiLAB1]).then(() => { this.setState({ isLoading: false }) }).catch(() => { this.setState({ isLoading: false }) });\n    }\n    parse = (inputs, parser) => {\n        let mappings = parser.mappings;\n        let allResult = {};\n        mappings.forEach(mapping => {\n            allResult[mapping.key] = []\n        });\n\n        inputs.forEach(input => {\n            let content = input.UDGNAME;\n            mappings.forEach(mapping => {\n                const re = new RegExp(mapping.regex_str, mapping.regex_flags)\n                const match = content.match(re)\n                if (match !== null && match[0] !== \"\") {\n                    allResult[mapping.key].push(input)\n                }\n            });\n        });\n        return allResult;\n    }\n    sourcehandleChange = (value) => {\n        this.setState({\n            statussource: value\n        })\n\n    }\n\n\n    render() {\n        function vallofnull(value) {\n            if (value === null || value === undefined || value === \"\") {\n                return \"\"\n            }\n            return value.toString().trim()\n        }\n        // const { Option } = Select;\n        const { caseinfo } = this.props\n        const { classParser, UDORDER0 } = this.state\n        const LabData = this.state.RESLAB02\n        const LabData2 = this.state.RESLAB01\n        const dateTime = this.state.PickerDate\n        const et = dateTime + (31 * 60 * 60 * 1000)\n        const st = et - (7 * 24 * 60 * 60 * 1000)\n        var WBCList = []\n        var BandList = []\n        var SegList = []\n        var LymList = []\n        var PCTList = []\n        var CRPList = []\n        if (Array.isArray(LabData)) {\n            if (LabData.length !== 0) {\n                for (let index = 0; index < LabData.length; index++) {\n                    const element = LabData[index];\n                    const WBC = vallofnull(element.RSV01)\n                    const Band = vallofnull(element.RSV13)\n                    const Seg = vallofnull(element.RSV14)\n                    const Lym = vallofnull(element.RSV15)\n                    const PCT = null\n                    const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                    if (st < time && time < et) {\n                        if (WBC !== null || WBC !== \"\" || WBC !== undefined) {\n                            WBCList.push({\n                                Time: time,\n                                Data: WBC\n                            })\n                        }\n                        if (Band !== null || Band !== \"\" || Band !== undefined) {\n                            BandList.push({\n                                Time: time,\n                                Data: Band\n                            })\n                        }\n                        if (Seg !== null || Seg !== \"\" || Seg !== undefined) {\n                            SegList.push({\n                                Time: time,\n                                Data: Seg\n                            })\n                        }\n                        if (Lym !== null || Lym !== \"\" || Lym !== undefined) {\n                            LymList.push({\n                                Time: time,\n                                Data: Lym\n                            })\n                        }\n                        if (PCT !== null || PCT !== \"\" || PCT !== undefined) {\n                            PCTList.push({\n                                Time: time,\n                                Data: PCT\n                            })\n                        }\n                    }\n                }\n            }\n        }\n        if (Array.isArray(LabData2)) {\n            if (LabData2.length !== 0) {\n                for (let index = 0; index < LabData2.length; index++) {\n                    const element = LabData2[index];\n                    const CRP = vallofnull(element.RSV30)\n                    const time = moment((element.ORRESDT.toString() + element.ORRESTM.toString()), \"YYYY-MM-DDHH.mm.ss\").valueOf()\n                    if (st < time && time < et) {\n                        if (CRP !== null || CRP !== \"\" || CRP !== undefined) {\n                            CRPList.push({\n                                Time: time,\n                                Data: CRP\n                            })\n                        }\n                    }\n                }\n            }\n        }\n\n        let clusteredData = {}\n        if (classParser !== undefined) {\n            clusteredData = this.parse(UDORDER0, classParser)\n        }\n\n        //filter data by selected class\n        const filteredData = clusteredData[\"抗生素類別\"];\n\n        return (\n            <div style={{ padding: \"0px 20px\" }}>\n                <div className='Infectioncontrol'>\n                    <DatePicker\n                        getCalendarContainer={triggerNode => triggerNode.parentNode}\n                        disabledDate={(current) => { return current > moment().startOf() || current < moment(caseinfo.PBASINGNINFO.PBIRTHDT.toString(), \"YYYYMMDD\").endOf() }}\n                        defaultValue={moment(this.state.PickerDate)}\n                        onChange={(date, datestring) => { this.setState({ PickerDate: date.valueOf() }) }}\n                        allowClear={false} />\n                </div>\n                <div style={{ margin: \"10px 0px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\" }}>\n                        <div></div>\n                        <Vitalxaxis max={200} min={0} select_interval={2} select_date={new Date().getTime()} id_key=\"xaxis_infect\" svg_id=\"xaxis_svg_infect\"></Vitalxaxis>\n                    </div>\n                </div>\n                <div className='boxshadow'></div>\n                {\n                    this.state.isLoading\n                        ? (\n                            <Icon type=\"loading\" />\n                        )\n                        : (\n                            <div className='Infectionlayout'>\n                                <Vitalonchronic PickerDate={this.state.PickerDate} select_interval={2} fromInfection={true} caseinfo={caseinfo} source={\"infection\"} title=\"Vital\"></Vitalonchronic>\n                                {/* <Infectionvitalsign caseinfo={caseinfo} StatusSource={this.state.statussource} PickerDate={this.state.PickerDate}></Infectionvitalsign> */}\n                                {/* Order */}\n                                <Orderonchronic PickerDate={this.state.PickerDate} UDORDER0={filteredData} select_interval={2} caseinfo={caseinfo} source={\"infection\"} title=\"藥物處方\"></Orderonchronic>\n                                <Infectionlab PickerDate={this.state.PickerDate} WBCList={WBCList} BandList={BandList} SegList={SegList} LymList={LymList} PCTList={PCTList} CRPList={CRPList} title=\"檢驗結果\"></Infectionlab>\n                            </div>\n                        )\n                }\n                <div style={{ display: \"grid\", gridTemplateColumns: \"90px 1fr\", height: \"10px\" }}>\n                    <div></div>\n                    <Vitalxaxis max={200} min={0} select_interval={2} select_date={new Date().getTime()} id_key=\"xaxis_flootsheet_bot\" svg_id=\"xaxis_svg_flootsheet_bot\"></Vitalxaxis>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Infectionview\n","import React, { Component } from 'react';\nimport editlogo from '../../Image/svg/Edit.svg'\n// import detaillogo from '../../Image/svg/details.svg'\nimport { Input, Button } from 'antd';\nimport './Bedsidecard.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nclass Bedsidecard extends Component {\n    state = {\n        caseinfo: this.props.caseinfo,\n        EditMode: false,\n        remarkContent: \"\",\n        inputContent: \"\",\n        powerLogin: 0\n    }\n    componentDidMount() {\n        //bind function\n        this.onInputChange = this.onInputChange.bind(this);\n\n        //query patient remark\n        this.queryPatientRemark();\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    queryPatientRemark() {\n        ApiProvider.getOnePatientRemark(this.state.caseinfo.TRANSINID)\n            .then(data => {\n                console.log(\"queryPatientRemark OK \" + JSON.stringify(data));\n                this.setState({\n                    remarkContent: data.data[0].context\n                });\n            })\n            .catch(err => {\n                console.log(\"queryPatientRemark NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    onClickEnter() {\n        ApiProvider.createPatientRemark(this.state.inputContent, this.state.caseinfo.HISID, this.state.caseinfo.TRANSINID)\n            .then(data => {\n                console.log(\"createPatientRemark OK \" + JSON.stringify(data));\n                this.setState(\n                    {\n                        inputContent: \"\"\n                    }\n                )\n                this.queryPatientRemark();\n            })\n            .catch(err => {\n                console.log(\"createPatientRemark NG \" + JSON.stringify(err));\n            });\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n    render() {\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div className='bedsidecardtitle'>\n                    <t1 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>床頭卡註記</t1>\n                    <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                        <img src={editlogo} alt=\"editlogo\" />\n                    </div>\n                </div>\n                <div className='bedsidecardcontext'>\n                    <t2>{this.state.remarkContent}</t2>\n                </div>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", backgroundColor: \"rgba(238,238,238,1)\" }}>\n                        <Input placeholder=\"輸入當日註記內容\" value={this.state.inputContent} onChange={this.onInputChange}></Input>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Bedsidecard\n","import React, { Component } from 'react';\nimport editlogo from '../../Image/svg/Edit.svg'\nimport { Checkbox, Input, Button } from 'antd';\nimport './Scheduletodo.scss'\nimport * as ApiProvider from '../../API/ApiProvider';\n\nconst TODO_DONE = \"已完成\";\nconst TODO_UNFINISH = \"未完成\";\n\nclass Scheduletodo extends Component {\n    state = {\n        EditMode: false,\n        displayMode: true, //true已完成 flase未完成\n        todolist: [],\n        caseinfo: this.props.caseinfo,\n        inputContent: undefined,\n        powerLogin: 0\n    }\n    componentDidMount() {\n        //bind function\n        this.onInputChange = this.onInputChange.bind(this);\n\n        //query patient notice\\\n        this.queryPatientTodo();\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    queryPatientTodo() {\n        ApiProvider.getOneTodo(this.state.caseinfo.TRANSINID, this.state.caseinfo.CASEID)\n            .then(data => {\n                console.log(\"queryPatientTodo OK \" + JSON.stringify(data));\n                this.setState({\n                    todolist: data.data\n                });\n            })\n            .catch(err => {\n                console.log(\"queryPatientTodo NG \" + JSON.stringify(err));\n            });\n    }\n    onInputChange(event) {\n        this.setState({ inputContent: event.target.value })\n    }\n    onChangeEditMode() {\n        this.setState(\n            {\n                EditMode: !this.state.EditMode\n            }\n        )\n    }\n\n    onClickCancel() {\n        this.setState(\n            {\n                EditMode: false\n            }\n        )\n    }\n\n    onClickEnter() {\n        const timeNowStr = new Date().toISOString()\n        ApiProvider.createTodo(this.state.caseinfo.CASEID, this.state.inputContent, timeNowStr, this.state.caseinfo.TRANSINID, TODO_UNFINISH)\n            .then(data => {\n                console.log(\"createTodo OK \" + JSON.stringify(data));\n                this.queryPatientTodo();\n            })\n            .catch(err => {\n                console.log(\"createTodo NG \" + JSON.stringify(err));\n            });\n        this.setState(\n            {\n                EditMode: false,\n                inputContent: undefined\n            }\n        )\n    }\n    onClickfinish() {\n        this.setState(\n            {\n                displayMode: true\n            }\n        )\n    }\n    onClickunfisish() {\n        this.setState(\n            {\n                displayMode: false\n            }\n        )\n    }\n\n    onChange = (checkedValues) => {\n    }\n    onItemCheck = (event) => {\n\n        const itemToUpdate = this.state.todolist.find(item => item.time === event.target.value);\n\n        if ((this.state.displayMode === true && event.target.checked === false) || (this.state.displayMode === false && event.target.checked === true)) {\n            ApiProvider.createTodo(itemToUpdate.caseid, itemToUpdate.context, itemToUpdate.time, itemToUpdate.transinno, (itemToUpdate.type === TODO_DONE) ? TODO_UNFINISH : TODO_DONE)\n                .then(data => {\n                    console.log(\"updateTodo OK \" + JSON.stringify(data));\n                    this.queryPatientTodo();\n                })\n                .catch(err => {\n                    console.log(\"updateTodo NG \" + JSON.stringify(err));\n                });\n        }\n    }\n    render() {\n        // const button_style = {\n        //     finish: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\", borderRadius: \"16px\", border: \"rgba(245, 166, 35, 1) 1px solid\", color: \"rgba(245, 166, 35, 1)\" },\n        //     unfinish: { display: \"flex\", justifyContent: \"center\", alignItems: \"center\", borderRadius: \"16px\", border: \"rgba(245, 166, 35, 1) 1px solid\", background: \"rgba(245, 166, 35, 1)\", color: \"white\" }\n        // }\n\n        const todolist_data = this.state.todolist\n        const finish_data = todolist_data.filter(function (item, index, array) {\n            return item.type === TODO_DONE;\n        });\n        const finish_value = finish_data.map(function (item, index, array) {\n            return item.time;\n        });\n        const unfinish_data = todolist_data.filter(function (item, index, array) {\n            return item.type === TODO_UNFINISH;\n        });\n\n        const onItemCheck = this.onItemCheck;\n        const finish_checkbox = finish_data.map(function (item, index, array) {\n            return (\n                <div key={index} className='scheduletodocell'>\n                    <Checkbox value={item.time} checked={true} onChange={onItemCheck} style={{ textDecoration: \"line-through\" }}>{item.context}</Checkbox>\n                </div>\n            );\n        });\n        const unfinish_checkbox = unfinish_data.map(function (item, index, array) {\n            return (\n                <div key={index} className='scheduletodocell'>\n                    <Checkbox value={item.time} checked={false} onChange={onItemCheck}>{item.context}</Checkbox>\n                </div>\n            );\n        });\n        return (\n            <div style={{ marginBottom: \"10px\" }}>\n                <div className='scheduletodotitle'>\n                    <t1 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>待辦事項</t1>\n                    <div onClick={() => this.onChangeEditMode()} style={{ display: this.state.powerLogin == 1 ? \"flex\" : \"none\", cursor: \"pointer\" }}>\n                        <img src={editlogo} alt=\"editlogo\" />\n                    </div>\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"10px 0px\" }}>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"115px 115px\", gridColumnGap: \"10px\" }}>\n                        <div style={{ cursor: \"pointer\" }} className={this.state.displayMode ? 'finishbutton' : 'todobutton'} onClick={() => this.onClickunfisish()}>未完成</div>\n                        <div style={{ cursor: \"pointer\" }} onClick={() => this.onClickfinish()} className={this.state.displayMode ? 'todobutton' : 'finishbutton'}>已完成</div>\n                    </div>\n                </div>\n                <Checkbox.Group defaultValue={finish_value} style={{ width: '100%' }} onChange={this.onChange}>\n                    <div style={{ overflowY: \"auto\", maxHeight: \"200px\" }}>\n                        {this.state.displayMode ? finish_checkbox : unfinish_checkbox}\n                    </div>\n                </Checkbox.Group>\n                <div style={{ display: this.state.EditMode ? \"block\" : \"none\" }}>\n                    <div style={{ padding: \"5px 10px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <Input placeholder=\"輸入當日註記內容\" value={this.state.inputContent} onChange={this.onInputChange}></Input>\n                        <Button type=\"primary\">新增</Button>\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"20px\" }}>\n                            <Button onClick={() => this.onClickCancel()}>取消</Button>\n                            <Button onClick={() => this.onClickEnter()} type=\"primary\">儲存</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Scheduletodo\n","import React, { Component } from 'react';\nimport calenderlogo from '../../Image/svg/calender.svg'\nimport calenderwhitelogo from '../../Image/svg/calenderwhite.svg'\nimport pingcheck from '../../Image/svg/ping.svg'\nimport pingwhite from '../../Image/svg/pingwhite.svg'\nimport './Calendercell.scss'\nimport { mmddformat, weekdateformatcalender } from '../../Function/Timeformat'\nimport { Col, Row } from \"antd\"\nclass Calendercell extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            status: false,\n        }\n\n    }\n\n\n    sendcallback(timestamp, clickindex) {\n        this.props.parentCallback(timestamp, clickindex);\n    }\n    onClickCheck(timestamp, clickindex) {\n        this.sendcallback(timestamp, clickindex)\n        this.onClick1()\n    }\n    onClick1 = () => {\n        if (this.state.status === false) {\n            this.setState({ status: true }, () => {\n                this.props.CancelModule(true)\n            })\n\n        } else {\n            this.setState({ status: false }, () => {\n                this.props.CancelModule(false)\n            })\n\n        }\n    }\n\n\n    render() {\n        const { clickindex, state, newDate, timestamp, clickdate, data, today } = this.props;\n        function disableday(state) {\n            const scheduleArray = data.scheduleList.filter(item => item.type === \"排程\");\n            if (state) {\n                return (\n                    <div className='calendersubcontexticon'>\n                        <img src={calenderlogo} alt='calenderlogo' />\n                        <t1>{scheduleArray.length}</t1>\n                    </div>\n                );\n            }\n            else {\n                return (\n                    <div className='calendersubcontexticon'>\n                        <img src={calenderwhitelogo} alt='calenderlogo' />\n                        <t1 className='displayinfo'>{scheduleArray.length}</t1>\n                    </div>\n                );\n            }\n        }\n        function locl(state) {\n            if (timestamp === today) return '當日'\n            else return null\n        }\n        function stateswitch() {\n\n            if (mmddformat(clickdate) === mmddformat(timestamp)) {\n                return true\n            }\n            return false\n        }\n        return (\n            <Row >\n                <Row type=\"flex\" justify=\"center\" >\n                    <Col span={24}>\n                        <div className={stateswitch() ? 'calendersubcontextclick' : 'calendersubcontext'}\n                            onClick={() =>\n                                this.onClickCheck(timestamp, clickindex)\n                            }>\n                            <div className={stateswitch() ? 'calendersubcontexttitleclick' : 'calendersubcontexttitle'}>\n                                <t2 className='calendersubcontexttitletoday'>{mmddformat(timestamp)}({weekdateformatcalender(timestamp)}){locl(newDate)}</t2>\n\n                            </div>\n                            {disableday(state)}\n                        </div>\n                    </Col></Row>\n                <Row type=\"flex\" justify=\"center\" >\n                    <Col >\n                        {stateswitch() && this.state.status ?\n                            <div style={{ width: 0, height: 0, borderStyle: \"solid\", borderWidth: \"17.3px 10px 0 10px\", borderColor: \"#ffbe59 transparent transparent transparent\" }}></div>\n                            : \"\"}</Col>\n                </Row>\n            </Row>\n        );\n    }\n}\n\nexport default Calendercell\n","import React, { Component } from 'react';\nimport { DatePicker } from 'antd';\nimport { Select } from 'antd';\nimport './Calender.scss'\nimport { mmddformat, compareday, yyyymmfirstweeksate } from '../../Function/Timeformat'\nimport Calendercell from './Calendercell'\nimport { Icon } from 'antd'\nimport CrossectionSchedule from '../CrossSectionView/Crosssectionschedule'\nimport * as ApiProvider from '../../API/ApiProvider';\nimport moment from 'moment';\n\nconst SCHEDULE_TYPE_EVENT = \"事件\";\n// const SCHEDULE_TYPE_SCHEDULE = \"排程\";\nconst timeZoneOffset = 8 * 60 * 60 * 1000;\n\nclass Calender extends Component {\n    state = {\n        calendermode: 'week',\n        Clickdays: null,\n        ClickDate: null,\n        displayinfo: null,\n        scheduleRawData: [],\n        scheduleData: [],\n        startTimestamp: 0,\n        endTimestamp: 0,\n        todayBegin: 0,\n        noticeRawData: [],\n        open: false,\n\n    }\n    componentDidMount() {\n        const { startTimestamp, endTimestamp, todayBegin } = this.getStartEndTime();\n        this.setState({\n            startTimestamp: startTimestamp,\n            endTimestamp: endTimestamp,\n            todayBegin: todayBegin,\n            ClickDate: todayBegin\n        });\n        this.querySchedule(new Date(startTimestamp).toISOString().split('.')[0], new Date(endTimestamp).toISOString().split('.')[0]);\n        this.queryNotice();\n    }\n    getStartEndTime() {\n        const today = new Date();\n        const monthfirstweekday = new Date(today.getFullYear(), today.getMonth(), 1).getDay();\n        const firstCellBegin = new Date(today.getFullYear(), today.getMonth(), 1).getTime() - (monthfirstweekday * 24 * 60 * 60 * 1000) + timeZoneOffset;\n        const todayBegin = new Date(today.getFullYear(), today.getMonth(), today.getDate()).getTime() + timeZoneOffset;\n\n        const startTimestamp = (this.state.calendermode === 'week') ? todayBegin - 3 * 24 * 60 * 60 * 1000 : firstCellBegin;\n        const endTimestamp = (this.state.calendermode === 'week') ? startTimestamp + 7 * 24 * 60 * 60 * 1000 : startTimestamp + 35 * 24 * 60 * 60 * 1000;\n\n        return { startTimestamp, endTimestamp, todayBegin };\n    }\n    querySchedule(startTimestampStr, endTimestampStr) {\n        ApiProvider.getOnePatientSchedule(this.props.caseinfo.TRANSINID, startTimestampStr, endTimestampStr)\n            .then(data => {\n                console.log(\"getOnePatientSchedule OK \" + JSON.stringify(data.data));\n\n                const itemList = data.data;\n                let refactoredList = [];\n                itemList.forEach(item => {\n                    const itemTimeStr = item.time.split('T')[0];\n                    let foundItemIndex = refactoredList.findIndex(element => element.time === itemTimeStr);\n                    if (foundItemIndex === -1) {\n                        //not found, create one\n                        let newItem = {\n                            time: itemTimeStr,\n                            timestamp: item.time,\n                            scheduleList: []\n                        }\n                        let newEvent = {\n                            type: item.type,\n                            timestamp: new Date(item.time).getTime(),\n                            writer: (item.type === SCHEDULE_TYPE_EVENT) ? \"林醫師\" : \"張醫師\",\n                            name: item.name,//this.props.caseinfo.PBASINGNINFO.PNAMEC,//(item.type === SCHEDULE_TYPE_EVENT) ? \"林ＯＯ\" : \"黃ＯＯ\",\n                            content: item.context,\n                            bednumber: item.bednumber\n                        }\n                        newItem.scheduleList.push(newEvent);\n                        refactoredList.push(newItem);\n                    } else {\n                        //found, update item\n                        let newEvent = {\n                            type: item.type,\n                            timestamp: new Date(item.time).getTime(),\n                            writer: (item.type === SCHEDULE_TYPE_EVENT) ? \"林醫師\" : \"張醫師\",\n                            name: item.name,//this.props.caseinfo.PBASINGNINFO.PNAMEC,//(item.type === SCHEDULE_TYPE_EVENT) ? \"林ＯＯ\" : \"黃ＯＯ\",\n                            content: item.context,\n                            bednumber: item.bednumber\n                        }\n                        refactoredList[foundItemIndex].scheduleList.push(newEvent);\n                    }\n                });\n                this.setState({\n                    scheduleRawData: data.data,\n                    scheduleData: refactoredList\n                });\n            })\n            .catch(err => {\n                console.log(\"getOnePatientSchedule NG \" + JSON.stringify(err));\n            });\n    }\n    queryNotice() {\n        ApiProvider.getOnePatientNotice(this.props.caseinfo.TRANSINID, this.props.caseinfo.CASEID)\n            .then(result => {\n                console.log(\"getOnePatientNotice OK \" + JSON.stringify(result));\n                this.setState({\n                    noticeRawData: result.data\n                })\n            })\n            .catch(err => {\n                console.log(\"getOnePatientNotice NG \" + JSON.stringify(err));\n            });\n    }\n    callbackFunction = (timestamp, clickindex) => {\n        console.log(timestamp)\n        this.setState({\n            ClickDate: timestamp,\n            displayinfo: clickindex\n        })\n    }\n    onCancelClick() {\n        this.setState({\n            ClickDate: this.state.todayBegin,\n            displayinfo: null\n        }, () => { console.log(this.state) })\n    }\n    CancelModule = (value) => {\n\n        if (value === true) {\n            this.setState({ open: true }, () => { console.log(\"oepn true\", this.state) })\n        } else {\n            this.setState({ open: false }, () => { console.log(\"oepn false\", this.state) })\n        }\n    }\n    handleChange = (value) => {\n        console.log(value)\n        this.setState({\n            calendermode: value,\n            displayinfo: null,\n            Clickdays: null\n        })\n    }\n    onChange = (timestamp) => {\n        console.log('changestate')\n    }\n    onClickCheck(timestampdate) {\n        this.setState({\n            onClickdays: timestampdate\n        })\n    }\n    getDataFromTimestamp(timestamp) {\n        const dateStr = new Date(timestamp).toISOString().split('T')[0];\n        const dataOfDayIndex = this.state.scheduleData.findIndex(element => element.time === dateStr);\n        const dataOfDay = (dataOfDayIndex === -1) ? { scheduleList: [] } : this.state.scheduleData[dataOfDayIndex];\n        return dataOfDay;\n    }\n    getNoticeFromTimestamp(timestamp) {\n        const dateStr = new Date(timestamp).toISOString().split('T')[0];\n        const noticeOfDayArray = this.state.noticeRawData.filter(element => element.time.indexOf(dateStr) > -1);\n        return noticeOfDayArray;\n    }\n    weekmode() {\n        var weekcontext = []\n        for (let index = 0; index < 7; index++) {\n            const timestampdate = this.state.startTimestamp + (index * 24 * 60 * 60 * 1000);\n            const date = mmddformat(timestampdate)\n            const dataOfDay = this.getDataFromTimestamp(timestampdate);\n            // 接 len api\n            if (index - 3 === 0) {\n                weekcontext.push(\n                    <Calendercell CancelModule={this.CancelModule} clickindex={'week'} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={true} newDate={true} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n                );\n            }\n            else {\n                weekcontext.push(\n\n                    <Calendercell CancelModule={this.CancelModule} clickindex={'week'} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={compareday(timestampdate)} newDate={false} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}></Calendercell>\n\n                );\n\n            }\n        }\n        return weekcontext\n    }\n    weekmonthmode(weeknumber, firstMonthWeekDay) {\n        var weekcontext = []\n        for (let index = 0; index < 7; index++) {\n            const timestampdate = new Date(firstMonthWeekDay).getTime() + (index * 24 * 60 * 60 * 1000) + timeZoneOffset;\n            const date = mmddformat(timestampdate)\n            const dataOfDay = this.getDataFromTimestamp(timestampdate)\n\n            if (new Date(mmddformat(new Date().getTime())).getTime() <= new Date(mmddformat(new Date(timestampdate).getTime())).getTime()) {\n                weekcontext.push(\n\n\n                    <Calendercell CancelModule={this.CancelModule} clickindex={weeknumber} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={true} newDate={true} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}>\n                    </Calendercell>\n                );\n            }\n            else {\n                weekcontext.push(\n\n                    <Calendercell CancelModule={this.CancelModule} clickindex={weeknumber} clickdate={this.state.ClickDate} timestamp={timestampdate} date={date} state={false} newDate={true} data={dataOfDay} today={this.state.todayBegin} parentCallback={this.callbackFunction}>\n\n                    </Calendercell>\n                );\n            }\n        }\n        return weekcontext\n    }\n\n    ShowModule(rowIndex) {\n        if (rowIndex === undefined) rowIndex = 0;\n        console.log(\"this.state.ClickDate\" + this.state.ClickDate);\n\n        const dataOfDay = this.getDataFromTimestamp(this.state.ClickDate);\n        const noticeOfDay = this.getNoticeFromTimestamp(this.state.ClickDate);\n\n        function checkmode(state) {\n            if (state === 'week') {\n                return 'calenderdisplayinformation'\n            }\n            if (state === rowIndex) {\n                return 'calenderdisplayinformation'\n            }\n            return 'calenderdisplayinformationnone'\n        }\n        // console.log(moment(this.state.ClickDate).format(\"YYYYMMDDHHmmss\"))\n        return (\n            <div>\n                {this.state.open ?\n                    <div className={checkmode(this.state.displayinfo)} >\n\n                        <div className='calenderModule'>\n                            <t1>詳細資訊</t1>\n                            {/* <Icon type=\"close\" onClick={()=>this.onCancelClick()} /> */}\n                        </div>\n                        <div className='Modulelayout'>\n                            <CrossectionSchedule PickerDate={this.state.ClickDate} source={1} caseinfo={this.props.caseinfo} noticeData={noticeOfDay} scheduleData={dataOfDay} editstatus={true}></CrossectionSchedule>\n                        </div>\n                    </div>\n                    : \"\"}\n            </div>\n        );\n    }\n\n\n    setgroup() {\n        var calendermonthgroup = []\n        const monthfirstweekdate = new Date(yyyymmfirstweeksate(new Date())).getDay()\n        const firstMonthWeekDay = new Date(yyyymmfirstweeksate(new Date())).getTime() - (monthfirstweekdate * 24 * 60 * 60 * 1000)\n\n        for (let index = 0; index < 5; index++) {\n            calendermonthgroup.push(\n                <div className='calendercontextMonthRows'>\n                    {this.weekmonthmode(index, firstMonthWeekDay + (index * 7 * 24 * 60 * 60 * 1000))}\n                    {this.ShowModule(index)}\n                </div>\n            );\n\n        }\n        return calendermonthgroup\n    }\n    modechange(state) {\n        if (state === 'week') {\n            return (\n                <div className='calendercontext'>\n                    {this.weekmode()}\n                    {this.ShowModule()}\n                </div>\n            );\n        }\n        else {\n            // return (\n            //     <div>\n            //         {this.setgroup()}\n            //     </div>\n            // );\n            return this.setgroup()\n        }\n    }\n\n    SelectDatepickertype() {\n        const { MonthPicker } = DatePicker;\n        if (this.state.calendermode === 'month') {\n            return (\n                <MonthPicker getCalendarContainer={triggerNode => triggerNode.parentNode} placeholder=\"請選擇月份\" />\n            );\n        }\n        else {\n            return (\n                <DatePicker getCalendarContainer={triggerNode => triggerNode.parentNode} placeholder={['請選擇時間']} />\n            );\n        }\n    }\n    render() {\n        const { Option } = Select;\n        // const localday = new Date().getTime()\n        // function compareday(days) {\n        //     if (new Date(days).getTime() > new Date().getTime()) {\n        //         return true\n        //     }\n        //     return false\n        // }\n        return (\n            <div>\n                <t1 className='calendertitle'>\n                    <t2 style={{ fontSize: \"16px\", color: \"rgba(0,0,0,.7)\" }}>行事曆</t2>\n                </t1>\n                <div className='calendercontrol'>\n                    {this.SelectDatepickertype()}\n                    <Select defaultValue={this.state.calendermode} onChange={this.handleChange}>\n                        <Option value=\"week\">週</Option>\n                        <Option value=\"month\">月</Option>\n                    </Select>\n                </div>\n                {this.modechange(this.state.calendermode)}\n            </div>\n        );\n    }\n}\n\nexport default Calender\n","import React, { Component } from 'react';\nimport Notice from './Notice'\nimport Bedsidecard from './Bedsidecard'\nimport Scheduletodo from './Scheduletodo'\nimport Calender from './Calender'\nimport './Scheduleview.scss'\n\nclass Scheduleview extends Component {\n    render() {\n        function monthformat(month) {\n            return month + 1\n        }\n        function dateformat(time) {\n            return new Date(time).getFullYear() + \"-\" + monthformat(new Date(time).getMonth()) + \"-\" + new Date(time).getDate()\n        }\n        function exporttime(time) {\n            if (time === null) {\n                return \"--\"\n            }\n            else {\n                return dateformat(time)\n            }\n        }\n        const { caseinfo } = this.props\n        const time = new Date().getTime()\n\n        return (\n            <div>\n                <div style={{ marginBottom: \"5px\" }}>\n                    <centerstyle>\n                        <div className='scheduletitle'>轉入時間:{dateformat(time)}/轉出時間\b:{exporttime(null)}</div>\n                    </centerstyle>\n                    <div className='boxshadow'></div>\n                </div>\n                <div className='schedulelayout'>\n                    <Bedsidecard caseinfo={caseinfo}></Bedsidecard>\n                    <Notice caseinfo={caseinfo}></Notice>\n                    <Calender caseinfo={caseinfo}></Calender>\n                    <Scheduletodo caseinfo={caseinfo}></Scheduletodo>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Scheduleview\n","import React, { Component } from 'react';\nimport Patientinfo from './Patientviewinfo'\nimport { Select, Modal } from 'antd';\nimport { bednumberformat } from '../Function/Wardbedfunction'\nimport { Tabs, Icon } from 'antd';\nimport Crosssectionlayout from './CrossSectionView/Crosssectionlayout'\nimport Chroniclelayout from './ChronicleView/Chroniclelayout'\nimport Flowsheetlayout from './FlootSheetView/Flootsheetlayout'\nimport Examreport from './ExamReport/ExamReport'\nimport Orderview from './Orderview/Orderview'\nimport Noteview from './NoteView/Note'\nimport RTview from './RT/RTview'\nimport Nurtionview from './Nurtion/Nurtion'\nimport Infectionview from './Infection/Infection'\nimport Scheduleview from './Schedule/Scheduleview'\nimport * as ApiProvider from '../API/ApiProvider'\nimport X2JS from 'x2js';\nimport moment from 'moment';\nimport * as WardState from '../Function/Wardstate'\nimport * as WeightList from '../Resource/QTWPER'\nimport * as Wardstate from '../Function/Wardstate'\n\nclass Patientviewlayout extends Component {\n    state = {\n        TYPE: this.props.location.TYPE,\n        PBASINGNINFO: [],\n        PDOCNEW: [],\n        REMARK: [],\n        QMNC: [],\n        QENT: [],\n        QTWER: [],\n        tabstring: \"時間點檢視\",\n        visible: false,\n        PLOCSTART: null,\n        PLOC: null,\n        persionstatus: []\n    }\n    componentDidMount() {\n        const CASEID = this.props.location.state.CASEID\n        const HISID = this.props.location.state.HISID\n        this.getPersonStatus(HISID, CASEID)\n    }\n    getPersonStatus(HID, CID) {\n        ApiProvider.getTablePLOC(CID)\n            .then(data => {\n                console.log(data.data)\n                const result = data.data\n                this.setState({ PLOC: result[result.length - 1], PLOCSTART: result[0] })\n            })\n            .catch(err => {\n                console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n            });\n        ApiProvider.getTablePDOCNEW(CID)\n            .then(data => { this.setState({ PDOCNEW: data.data }) })\n            .catch(err => { console.log(\"Andy test getTablePDOCNEW NG \" + JSON.stringify(err)); });\n        ApiProvider.getTablePBASINFO(HID)\n            .then(data => {\n                this.setState({ PBASINGNINFO: data.data })\n                const PBASINGNINFO = data.data\n                const starttime = moment(PBASINGNINFO.PBIRTHDT, 'YYYYMMDD').format(\"YYYYMMDDHHmm\")\n                const endtime = moment().format('YYYYMMDDHHmm')\n                ApiProvider.getQTWPER(CID, starttime, endtime)\n                    .then(result => {\n                        const QTWER = WardState.XM2JSON(result.data)\n                        this.setState({ QTWER: QTWER })\n                    })\n                    .catch(err => {\n                        console.log(\"Andy test getQTWPER NG \" + JSON.stringify(err));\n                    });\n            })\n            .catch(err => { console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err)); });\n        ApiProvider.getPersionalStatus(HID)\n            .then(data => { console.log(data.data); this.setState({ persionstatus: data.data }) })\n            .catch(err => { console.log(err) })\n        ApiProvider.getQENT(CID)\n            .then(data => { this.setState({ QENT: WardState.XM2JSON(data.data) }) })\n            .catch(err => { console.log(err) })\n        ApiProvider.getQMNC(CID)\n            .then(data => { this.setState({ QMNC: WardState.XM2JSON(data.data) }) })\n            .catch(err => { console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err)); })\n\n        // this.setState({ QTWER: WeightList.data.outmsg.resconts.rescont })\n    }\n    selectchange = (HBEDNUMBER) => {\n        const datalist = this.state.HBEDLIST\n        const filterdata = datalist.filter(function (info, index, array) {\n            return parseInt(info.HBEDNO) === HBEDNUMBER\n        })\n        if (filterdata.length === 0) {\n            return null\n        }\n        else {\n            const source = filterdata[0]\n            const HISID = source.PHISTNUM\n            const CASEID = source.PCASENO\n            const PBASINFO = ApiProvider.getTablePBASINFO(HISID)\n                .then(data => {\n                    return {\n                        PBASINGNINFO: data.data,\n                    }\n                })\n                .catch(err => {\n                    console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n                });\n            const PDOCNEW = ApiProvider.getTablePDOCNEW(CASEID)\n                .then(data => {\n                    return data.data\n                })\n                .catch(err => {\n                    console.log(\"Andy test getTablePDOCNEW NG \" + JSON.stringify(err));\n                });\n            const PLOC = ApiProvider.getTablePLOC(CASEID)\n                .then(data => {\n                    const matadata = data.data\n                    return matadata[matadata.length - 1]\n                })\n                .catch(err => {\n                    console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n                });\n            Promise.all([PBASINFO, PDOCNEW, PLOC])\n                .then(result => {\n                    this.nis_status_shange(CASEID, result[0].PBASINGNINFO);\n                    return {\n                        PBASINGNINFO: result[0].PBASINGNINFO,\n                        // BEDNUMBER: result[0].BEDNUMBER,\n                        PDOCNEW: result[1],\n                        PLOC: result[2]\n                    }\n                })\n                .then(result => {\n                    this.setState({\n                        PBASINGNINFO: result.PBASINGNINFO,\n                        PDOCNEW: result.PDOCNEW,\n                        PLOC: result.PLOC\n                    })\n                })\n                .catch(err => {\n                    console.log(\"error\")\n                })\n\n        }\n    }\n\n    nis_status_shange(CASEID, PBASINGNINFO) {\n        const xm2 = new X2JS()\n        ApiProvider.getQENT(CASEID)\n            .then(data => {\n                this.setState({\n                    QENT: WardState.XM2JSON(data.data)\n                })\n            })\n            .catch(err => { console.log(err) })\n        // ApiProvider.getQMNC(CASEID)\n        //     .then(data => {\n        //         // const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n        //         this.setState({\n        //             QMNC: WardState.XM2JSON(data.data)\n        //         })\n        //         const starttime = moment(PBASINGNINFO.PBIRTHDT, 'YYYYMMDD').format(\"YYYYMMDDHHmm\")\n        //         const endtime = moment().format('YYYYMMDDHHmm')\n        //         ApiProvider.getQTWPER(CASEID, starttime, endtime)\n        //             .then(data => {\n        //                 const parsedata = xm2.xml2js(data.data).outmsg.resconts.rescont\n        //                 var weightlist = []\n        //                 for (let index = 0; index < parsedata.length; index++) {\n        //                     const element = parsedata[index];\n        //                     if (element.type === 'TW') {\n        //                         weightlist.push(element)\n        //                     }\n        //                 }\n        //                 this.setState({ QTWER: weightlist })\n        //             })\n        //             .catch(err => {\n        //                 console.log(\"Andy test getQTWPER NG \" + JSON.stringify(err));\n        //             });\n        //     })\n        //     .catch(err => {\n        //         console.log(\"Andy test getTableHBED NG \" + JSON.stringify(err));\n        //     });\n        this.setState({ QTWER: WeightList.data.outmsg.resconts.rescont })\n    }\n\n\n\n\n    onChange = (activkey) => {\n        this.setState({\n            tabstring: activkey\n        }\n        )\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    OptionSelectRender() {\n        function addzero(value) {\n            if (value < 10) {\n                return \"0\" + value\n            }\n            return value\n        }\n        function optionselect(LISTBED) {\n            const dataoption = LISTBED.map(function (info, index, array) {\n                return (\n                    <Option key={index} value={Number(info.HBEDNO)}>病床{addzero(parseInt(info.HBEDNO))}</Option>\n                );\n            })\n            return dataoption\n\n        }\n        const BedList = this.props.location.state.source\n        const { Option } = Select;\n        const BEDNUMBER = Number(this.props.location.state.BEDNUMBER)\n        if (BedList !== null) {\n            return (\n                <Select defaultValue={Number(BEDNUMBER)} style={{ width: 120 }} onChange={this.selectchange}>\n                    {optionselect(BedList)}\n                </Select>\n            );\n        }\n        return null\n    }\n    fixpatientDate = (data) => {\n        const transdata = {\n            'cause': '住院原因',\n            'car_pho': '主要照顧者電話',\n            'care': '主要照顧者',\n            'con_1': '聯絡人1',\n            'con_p11': '聯絡人1電話',\n            'con_2': '聯絡人2',\n            'con_p21': '聯絡人2電話',\n            'dvs': '住院時生命徵象',\n            'habit': '飲食狀況',\n            'oxy': '住院時氧和評估',\n            'h_val': '住院時頭圍',\n            'b_val': '住院時胸圍',\n            'tall': '住院時身高',\n            'weight': '住院時體重'\n        }\n\n        const patientDate = []\n\n        for (let index in transdata) {\n            if (data[index] !== \"\") {\n                patientDate.push([transdata[index], data[index]])\n            }\n        }\n\n        return patientDate\n    }\n    render() {\n        function apiStatus(value) {\n            if (Array.isArray(value)) {\n                if (value.length === 0) {\n                    return false\n                }\n                return true\n            }\n            if (value === null || value === undefined || value === \"\") {\n                return false\n            }\n            return true\n        }\n        const { PLOC, PLOCSTART } = this.state\n        if (!apiStatus(PLOCSTART) || !apiStatus(PLOC)) {\n            return <Icon type=\"loading\" />\n        }\n\n\n\n\n        function statusPersion(persionstatus, QMNC, QTWER, Birthday) {\n            console.log(persionstatus)\n            // console.log(QMNC)\n            if (persionstatus.length === 0) {\n                console.log(QMNC)\n                // console.log(\"000\" + Number(QMNC.weeks))\n                if (QMNC.length === 0) {\n                    return {\n                        BornWeight: undefined,\n                        BornWeeks: undefined,\n                        BornDays: undefined\n                    }\n                }\n                const BornWeight = Wardstate.BornWeight(QTWER, Birthday)\n                const BornWeeks = Number(QMNC[0].weeks)\n                const BornDays = Number(QMNC[0].days)\n                return {\n                    BornWeight: BornWeight,\n                    BornWeeks: BornWeeks,\n                    BornDays: BornDays\n                }\n            }\n            else {\n                const Weight = Number(persionstatus[0].bweight) * 1000\n                const BornWeeks = Number(persionstatus[0].bweek)\n                const BornDays = Number(persionstatus[0].bday)\n                return {\n                    BornWeight: Weight,\n                    BornWeeks: BornWeeks,\n                    BornDays: BornDays\n                }\n            }\n        }\n        function valueFormat(value) {\n            if (value === \"\" || value === null || value === undefined) {\n                return \"--\"\n            }\n            return value.toString()\n        }\n        function valueBornWeight(value) {\n            if (value === \"\" || value === null || value === undefined || value === 0) {\n                return \"\"\n            }\n            return value.toString() + \"g → \"\n        }\n        const USERDATA = this.state.PBASINGNINFO\n        if (USERDATA.length === 0) {\n            return <Icon type=\"loading\" />\n        }\n        const BEDNUMBER = Number(this.props.location.state.BEDNUMBER)\n        const CASEID = this.props.location.state.CASEID\n        const HISID = this.props.location.state.HISID\n        const DOCLIST = this.state.PDOCNEW\n        const ploc = this.state.PLOC\n        const transintime = ploc.PLOCTM.toString()\n        const transindt = ploc.PLOCDT.toString()\n        const transinid = \"NICU\" + transindt + transintime\n        const { TabPane } = Tabs;\n        // const selectrender = this.OptionSelectRender()\n        const Birthday = USERDATA.PBIRTHDT\n        const { persionstatus, QMNC, QTWER } = this.state\n        const BornWeight = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornWeight\n        const BornWeeks = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornWeeks\n        const BornDays = statusPersion(persionstatus, QMNC, QTWER, Birthday).BornDays\n        const Weight = WardState.NewestWeight(QTWER)\n\n\n\n\n        console.log(this.props.location.state.fromHistory)\n        //true:fromHistory\n\n        const weightList = QTWER.filter(function (info, index, arr) {\n            return info.type === \"TW\"\n        })\n        const caseinfo = {\n            \"HISID\": HISID,\n            \"CASEID\": CASEID,\n            \"WEEK_BORN\": BornWeeks,\n            \"DAY_BORN\": BornDays,\n            \"TRANSINID\": transinid,\n            \"TRANSINDT\": transindt,\n            \"WEIGHT\": weightList,\n            \"PBASINGNINFO\": USERDATA,\n            \"PLOCSTART\": this.state.PLOCSTART\n        }\n        console.log(QTWER)\n        const patientDetail = this.fixpatientDate(this.state.QENT)\n        const status = {\n            date: moment(Birthday, \"YYYYMMDD\").valueOf(),\n            week: BornWeeks,\n            day: BornDays\n        }\n        const AgeStatus = WardState.CalculateAge(status)\n\n        function formatICUDays(fromHistory, transoutTime, transindt) {\n            if (fromHistory === true) {\n                if (transoutTime !== undefined || transoutTime !== null) {\n                    console.log(transindt)\n                    const end = moment(transoutTime, \"YYYYMMDD\")\n                    const start = moment(transindt, \"YYYYMMDD\")\n                    const ICUDays = end.diff(start, 'days')\n                    return \"轉出時入住ICU第\" + ICUDays + \"天\"\n                }\n                return \"--\"\n            }\n            const end = moment()\n            const start = moment(transindt, \"YYYYMMDD\")\n            const ICUDays = end.diff(start, 'days')\n            return \"入住ICU第\" + ICUDays + \"天\"\n        }\n        const ICUDays = formatICUDays(this.props.location.state.fromHistory, this.props.location.state.transouttime, transindt)\n        return ( \n            <div>\n                <div style={{ display: 'flex', justifyContent: \"space-between\", alignItems: 'center', height: \"40px\", marginTop: \"10px\", padding: \"8px\", borderTopLeftRadius: \"4px\", borderTopRightRadius: \"4px\", backgroundColor: \"#71b0e46e\" }}>\n                    {/* <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(6,auto)\", gridColumnGap: \"10px\", alignItems: \"center\" }}> */}\n                    <div style={{ fontWeight: \"600\", color: \"black\", fontSize: \"16px\" }}>\n                        NICU-{bednumberformat(Number(BEDNUMBER))}\n                        <span style={{ lineHeight: \"30px\", fontSize: \"20px\", padding: \"0px 4px\" }}>{USERDATA.PNAMEC.toString().trim()}</span>\n                        {HISID}\n                    </div>\n                    <t2 >\n                        生日：<span style={{ fontWeight: \"600\", color: \"black\" }}>{moment(Birthday, \"YYYYMMDD\").format(\"YYYY/MM/DD\")}</span>\n                    </t2>\n                    <t2>\n                        當日年齡： {valueFormat(BornWeeks)}+{valueFormat(BornDays)} > <spam style={{ fontWeight: \"600\", color: \"black\" }}>{AgeStatus}</spam>\n                    </t2>\n                    <t2>\n                        當日體重： {valueBornWeight(BornWeight)}<spam style={{ fontWeight: \"600\", color: \"black\" }}>{valueFormat(Weight)}g</spam>\n                    </t2>\n                    <t2 style={{ fontWeight: \"600\", color: \"black\" }}>{ICUDays}</t2>\n                    <t2 style={{ color: \"blue\", textDecoration: \"underline\", cursor: \"pointer\" }} onClick={this.showModal}>入院評估</t2>\n                    <Modal\n                        title=\"病人基本資料\"\n                        visible={this.state.visible}\n                        onOk={this.handleOk}\n                        onCancel={this.handleCancel}\n                        width={800}\n                        footer={null}>\n                        <Patientinfo caseinfo={caseinfo} patientDetail={patientDetail}></Patientinfo>\n                    </Modal>\n                    {/* </div> */}\n                </div>\n                <Tabs defaultActiveKey={this.state.tabstring} tabPosition={'top'} onChange={this.onChange}>\n                    <TabPane tab=\"時間點檢視\" key=\"時間點檢視\">\n                        <Crosssectionlayout parentDateCallback={this.callback} caseinfo={caseinfo}></Crosssectionlayout>\n                    </TabPane>\n                    <TabPane tab=\"時間軸檢視\" key=\"時間軸檢視\">\n                        <Chroniclelayout caseinfo={caseinfo}></Chroniclelayout>\n                    </TabPane>\n                    <TabPane tab=\"輸出入細節\" key=\"輸出入細節\">\n                        <Flowsheetlayout caseinfo={caseinfo}></Flowsheetlayout>\n                    </TabPane>\n                    <TabPane tab=\"檢驗及報告\" key=\"檢驗及報告\">\n                        <Examreport caseinfo={caseinfo}>></Examreport>\n                    </TabPane>\n                    <TabPane tab=\"醫囑及藥囑\" key=\"醫囑及藥囑\">\n                        <Orderview caseinfo={caseinfo}>></Orderview>\n                    </TabPane>\n                    <TabPane tab=\"跨團隊紀錄\" key=\"跨團隊紀錄\">\n                        <Noteview caseinfo={caseinfo}>></Noteview>\n                    </TabPane>\n                    <TabPane tab=\"呼吸評估\" key=\"呼吸評估\">\n                        <RTview caseinfo={caseinfo}>></RTview>\n                    </TabPane>\n                    <TabPane tab=\"營養評估\" key=\"營養評估\">\n                        <Nurtionview caseinfo={caseinfo}>></Nurtionview>\n                    </TabPane>\n                    <TabPane tab=\"感染評估\" key=\"感染評估\">\n                        <Infectionview caseinfo={caseinfo}>></Infectionview>\n                    </TabPane>\n                    <TabPane tab=\"行事曆及註記\" key=\"行事曆及註記\">\n                        <Scheduleview caseinfo={caseinfo}>></Scheduleview>\n                    </TabPane>\n                </Tabs>\n            </div>\n        );\n    }\n}\n\nexport default Patientviewlayout;\n","import React, { Component } from 'react';\nimport { Table, Input, Select, Button, Modal, Icon } from 'antd';\nimport * as ApiProvider from '../API/ApiProvider';\nconst { confirm } = Modal;\n\nclass Powersetting extends Component {\n    constructor(props) {\n        super();\n\n        this.addUserdata = this.addUserdata.bind(this)\n        this.adduserhandleChange = this.adduserhandleChange.bind(this)\n    }\n\n    state = {\n        MouseClick: 0,\n        name: '',\n        role: 0,\n        adduser: undefined,\n        userList: [],\n        power: ['僅可瀏覽病房總覽、歷史資料查詢', '可瀏覽和編輯病房總覽、歷史資料查詢', '可瀏覽和編輯權限設定、系統摘要'],\n        powerName: ['唯讀使用者', '一般使用者', '系統管理者'],\n        visible: false,\n        radioValue: 0,\n        pwdRadio: true,\n        inputUsername: '',\n        inputPassword: '',\n        inputName: '',\n        inputDoctorid: '',\n        powerLogin: 0\n    }\n\n    componentDidMount() {\n        this.nameChange = this.nameChange.bind(this)\n        this.queryUserdata = this.queryUserdata.bind(this)\n        this.inputuserName = this.inputuserName.bind(this)\n        this.inputPassword = this.inputPassword.bind(this)\n        this.inputName = this.inputName.bind(this)\n        this.inputDoctorid = this.inputDoctorid.bind(this)\n\n        ApiProvider.getAlluser()\n            .then(data => {\n                this.setState({ userList: data.data })\n            })\n            .catch(err => { })\n\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n\n    radioOnChange = e => {\n        this.setState({\n            radioValue: e.target.value,\n        }, () => {\n            if (this.state.radioValue === 1) {\n                this.setState({\n                    pwdRadio: true,\n                })\n            } else if (this.state.radioValue === 0) {\n                this.setState({\n                    pwdRadio: false,\n                })\n            }\n        })\n    };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    MouseClickTable(record) {\n        this.setState({\n            MouseClick: record\n        })\n    }\n\n    queryUserdata() {\n        const { userList, role } = this.state\n        let fixData = userList\n\n        if (role != 0) {\n            fixData = fixData.filter(data => data.role == (role - 1))\n        }\n\n        if (this.state.name !== '') {\n            fixData = fixData.filter(data => data.name.match(this.state.name) != null)\n        }\n        return fixData\n    }\n\n    addUserdata() {//sso 只剩下4種角色 其他先傳空直\n        ApiProvider.register(this.state.inputName, '', this.state.adduser, this.state.inputUsername, 'none')\n            .then(data => {\n                ApiProvider.getAlluser()\n                    .then(data => {\n                        this.setState({ userList: data.data, inputUsername: '', inputPassword: '', inputName: '', inputDoctorid: '' })\n                    })\n                    .catch(err => { })\n            })\n            .catch(err => { })\n        this.setState({\n            visible: false,\n        });\n    }\n\n\n    showDeleteConfirm(name, account, role, roleString) {\n        const set_State = this.setState.bind(this)\n        confirm({\n            title: '請問您確定要刪除此帳號嗎?',\n            content: <div>姓名：{name}<br />角色：{roleString}<br />帳號：{account}</div>,\n            okText: 'Yes',\n            okType: 'danger',\n            cancelText: 'No',\n            onOk() {\n                ApiProvider.deleteUser(name, role, account).then(data => {\n                    ApiProvider.getAlluser()\n                        .then(data => {\n                            set_State({ userList: data.data })\n                        })\n                        .catch(err => { })\n                }).catch(err => { })\n            },\n            onCancel() {\n            },\n        });\n    }\n\n    EditStyle(key, name, account, role, roleString) {\n        if (key === this.state.MouseClick) {\n            return (\n                <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gridColumnGap: '10px' }}>\n                    <div>\n                        <Button onClick={this.showDeleteConfirm.bind(this, name, account, role, roleString)} type=\"dashed\">\n                            刪除\n                        </Button>\n                    </div>\n                </div>\n            );\n        }\n        else return null\n    }\n\n    handleChange = (value) => {\n        this.setState({ role: value })\n    }\n\n    adduserhandleChange(value) {\n        this.setState({ adduser: value })\n    }\n\n    nameChange(event) {\n        this.setState({ name: event.target.value })\n    }\n\n    inputuserName(event) {\n        this.setState({ inputUsername: event.target.value })\n    }\n\n    inputPassword(event) {\n        this.setState({ inputPassword: event.target.value })\n    }\n\n    inputName(event) {\n        this.setState({ inputName: event.target.value })\n    }\n\n    inputDoctorid(event) {\n        this.setState({ inputDoctorid: event.target.value })\n    }\n\n    Searchbar = () => {\n        const { Option } = Select;\n\n        return (\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <div style={{ fontSize: '16px' }}>\n                        角色:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Select defaultValue={this.state.role} style={{ width: 150 }} onChange={this.handleChange}>\n                            <Option value={0}>全部使用者</Option>\n                            <Option value={1}>唯讀使用者</Option>\n                            <Option value={2}>一般使用者</Option>\n                        </Select>\n                    </div>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center', marginLeft: \"18px\" }}>\n                    <div style={{ fontSize: '16px' }}>\n                        姓名:\n                    </div>\n                    <div style={{ marginLeft: \"10px\" }}>\n                        <Input placeholder=\"輸入個案姓名\" onChange={this.nameChange}></Input>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n    render() {\n\n        const columns = [\n            {\n                title: '編號',\n                dataIndex: 'id',\n                key: 'id',\n                width: \"10%\"\n            },\n            {\n                title: '姓名',\n                dataIndex: 'name',\n                key: 'name',\n                width: \"10%\"\n            },\n            {\n                title: '醫師帳號',\n                dataIndex: 'account',\n                key: 'account',\n                width: \"12%\"\n            },\n            {\n                title: '角色',\n                dataIndex: 'role',\n                key: 'role',\n                width: \"10%\"\n            },\n            {\n                title: '權限',\n                dataIndex: 'power',\n                key: 'power',\n                width: \"40%\"\n            },\n            {\n                dataIndex: 'clickstate',\n                key: 'clickstate',\n                width: \"7%\"\n            }\n        ];\n\n        const fixData = this.queryUserdata()\n\n        const userData = fixData.map((data, index) => {\n            let roleString = ''\n            let powerString = ''\n\n            roleString = this.state.powerName[data.role]\n            powerString = this.state.power[data.role]\n\n            return [\n                {\n                    key: ++index,\n                    id: index,\n                    name: data.name,\n                    role: roleString,\n                    power: powerString,\n                    account: data.username,\n                    doctorid: data.doctorid,\n                    clickstate: this.EditStyle(index, data.name, data.username, data.role, roleString)\n                }\n            ]\n        })\n\n        let myNewArray = [].concat.apply([], userData);\n        const { Option } = Select;\n\n        // if (this.state.userList.length === 0) {\n        //     return (\n        //         <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>\n        //             <Icon type=\"loading\" />\n        //         </div>\n        //     );\n        // }\n\n        return (\n            <div>\n                <div style={{ display: \"flex\", justifyContent: 'space-between', alignItems: 'center' }}>\n                    {this.Searchbar()}\n                    <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n                        <Button style={{ width: \"100%\" }} onClick={this.showModal}>新增帳號</Button>\n                        <Modal\n                            title=\"新增帳號\"\n                            visible={this.state.visible}\n                            onOk={this.addUserdata}\n                            onCancel={this.handleCancel}\n                            width=\"570px\"\n                        >\n                            <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\" }}>\n\n                            </div>\n                            <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\", marginTop: \"10px\" }}>\n                                <div style={{ marginLeft: \"10px\" }}>\n                                    醫師帳號：\n                                <Input id=\"username\" value={this.state.inputUsername} onChange={this.inputuserName} placeholder=\"輸入帳號\" style={{ width: '120px' }} />\n                                </div>\n                                <div style={{ marginLeft: \"10px\" }}>\n                                    姓名：\n                                <Input id=\"name\" placeholder=\"輸入姓名\" value={this.state.inputName} onChange={this.inputName} style={{ width: '120px' }} />\n                                </div>\n                            </div>\n                            <div style={{ display: \"flex\", justifyContent: 'center', alignItems: \"center\", marginTop: \"10px\", marginLeft: \"13px\" }}>\n                                <div style={{ marginLeft: \"0px\" }}>\n                                    角色：{this.state.pwdRadio ?\n                                        <Select placeholder='選擇角色' style={{ width: 150 }} onChange={this.adduserhandleChange.bind(this)}>\n                                            <Option value={0}>唯讀使用者</Option>\n                                            <Option value={1}>一般使用者</Option>\n                                        </Select> :\n                                        <Select placeholder='選擇角色' style={{ width: 150 }} onChange={this.adduserhandleChange.bind(this)}>\n                                            <Option value={2}>系統設定管理員</Option>\n                                        </Select>}\n                                </div>\n                            </div>\n                            <div>\n                            </div>\n                        </Modal>\n                    </div>\n                </div>\n                <div style={{ marginTop: '20px' }}>\n                    <Table columns={columns} dataSource={myNewArray} onRow={record => {\n                        return {\n                            onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                            onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                        };\n                    }} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Powersetting;\n","import React, { Component } from 'react';\nimport { Table, Icon } from 'antd';\n\nclass Systemlogtable extends Component {\n    state = {\n        MouseClick: 0\n    }\n\n    MouseClickTable(record) {\n        this.setState({\n            MouseClick: record\n        })\n    }\n\n    render() {\n\n        const powerName = ['唯讀使用者', '一般使用者', '系統管理員']\n        const loginlog_table = this.props.loginlogList.map(\n            (info, index) => {\n                let managerName = ''\n                let dateTime = info.time.split(\"T\")[0] + ' ' + info.time.split(\"T\")[1].split(\".\")[0]\n\n                managerName = powerName[info.role]\n\n                return {\n                    key: index,\n                    time: dateTime,\n                    event: 'User ' + info.name + '(' + managerName + ') login system'\n                }\n            }\n        )\n\n        const apilog_table = this.props.apilogList.map((data, index) => {\n            if (data !== null) {\n                let date = data.split(\"- -\")[1].split(\"]\")[0].split(\"[\")[1].split(\" \")[0].split(\"/\")\n                const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n                for (let j = 0; j < months.length; j++) {\n                    if (date[1] === months[j]) {\n                        date[1] = months.indexOf(months[j]) + 1\n                    }\n                }\n                if (date[1] < 10) {\n                    date[1] = '0' + date[1]\n                }\n                let time = date[2].split(\":\")[0] + \"-\" + date[1] + \"-\" + date[0] + \" \" + date[2].split(\":\")[1] + \":\" + date[2].split(\":\")[2] + \":\" + date[2].split(\":\")[3]\n                let content = data.split(\"- -\")[1].split(\"]\")[1]\n\n                return {\n                    key: index,\n                    time: time,\n                    event: content\n                }\n            }\n            return null\n        })\n\n        const columns = [\n            {\n                title: '記錄時間',\n                dataIndex: 'time',\n                key: 'time',\n                width: \"1%\"\n            },\n            {\n                title: '事件',\n                dataIndex: 'event',\n                key: 'event',\n                width: \"10%\"\n            }\n        ]\n\n        // if (loginlog_table.length === 0 || apilog_table.length === 0) {\n        //     return (\n        //         <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>\n        //             <Icon type=\"loading\" />\n        //         </div>\n        //     );\n        // }\n\n        return (\n            <div style={{ marginTop: '20px' }}>\n                {\n                    this.props.optionValue ? <Table columns={columns} dataSource={apilog_table} onRow={record => {\n                        return {\n                            onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                            onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                        }\n                    }} pagination={{\n                        onChange: (page, pageSize) => {\n                            this.props.getPages(page)\n                        }\n                    }} /> :\n                        <Table columns={columns} dataSource={loginlog_table} onRow={record => {\n                            return {\n                                onMouseEnter: event => { this.MouseClickTable(record.key) }, // 鼠标移入行\n                                onMouseLeave: event => { this.MouseClickTable(0) } // 鼠标移入行\n                            }\n                        }} pagination={{\n                            onChange: (page, pageSize) => {\n                                this.props.getPages(page)\n                            }\n                        }} />\n                }\n            </div>\n        )\n    }\n}\n\nexport default Systemlogtable\n","import React, { Component } from 'react';\nimport { Progress, Select, DatePicker } from 'antd';\nimport Systemlogtable from './Systemlogtable'\nimport * as ApiProvider from '../API/ApiProvider';\n\nclass Systemlog extends Component {\n\n    state = { startTime: \"\", endTime: \"\", totalSpace: 0, usingSpace: 0, percent: 0, option: 0, loginlogList: [], apilogList: [], page: 1 }\n\n    componentDidMount() {\n        ApiProvider.getSpace()\n            .then(data => {\n                const totalSpace = data.data[0].total / 1024 / 1024 / 1024\n                const usingSpace = (data.data[0].total - data.data[0].unuse) / 1024 / 1024 / 1024\n                const percent = (usingSpace / totalSpace) * 100\n                this.setState({ totalSpace: totalSpace.toFixed(2), usingSpace: usingSpace.toFixed(2), percent: percent.toFixed(2) })\n            })\n            .catch(err => { })\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    onChange(date, dateString) {\n        this.setState({ startTime: dateString[0], endTime: dateString[1] }, () => {\n            if (this.state.option === 0) {\n                this.queryLoginLogdata()\n            } else if (this.state.option === 1) {\n                this.queryApiLogdata()\n            }\n        });\n    }\n\n    queryLoginLogdata() {\n        if (this.state.startTime !== \"\" && this.state.endTime !== \"\") {\n            const st = new Date(this.state.startTime.split('-')[0], this.state.startTime.split('-')[1] - 1, this.state.startTime.split('-')[2]).toISOString().split('.')[0];\n            const et = new Date(this.state.endTime.split('-')[0], this.state.endTime.split('-')[1] - 1, this.state.endTime.split('-')[2]).toISOString().split('.')[0];\n\n            ApiProvider.getLoginlog(st, et)\n                .then(data => {\n                    this.setState({ loginlogList: data.data, apilogList: [] })\n                })\n                .catch(err => { })\n        }\n    }\n\n    queryApiLogdata() {\n        if (this.state.startTime !== \"\" && this.state.endTime !== \"\") {\n            ApiProvider.getApilog(this.state.startTime)\n                .then(data => {\n                    this.setState({ apilogList: data.data, loginlogList: [] })\n                })\n                .catch(err => { })\n        }\n    }\n\n    getPages(pages) {\n        this.setState({ page: pages })\n    }\n\n    handleChange(value) {\n        this.setState({ option: value })\n    }\n    render() {\n        const { Option } = Select;\n        const { RangePicker } = DatePicker;\n        const onChange = this.onChange.bind(this);\n\n        return (\n            <div>\n                <div style={{ fontSize: '22px' }}>系統空間使用狀況</div>\n                <div style={{ marginTop: \"10px\" }}><Progress percent={this.state.percent} showInfo={false} /></div>\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginTop: \"10px\" }}>\n                    <div>\n                        <div>已使用空間/總空間</div>\n                        <div>{this.state.usingSpace}GB({this.state.percent}%)/{this.state.totalSpace}GB</div>\n                    </div>\n                    <div>\n                        <div>收案中的個案資料0.9GB(10.5%)</div>\n                        <div>0.9GB(10.5%)</div>\n                    </div>\n                </div>\n                <div style={{ marginTop: '20px' }}>\n                    <div style={{ fontSize: '22px' }}>Event Log</div>\n                    <div style={{ marginTop: \"10px\" }}>\n                        <Select placeholder='選擇log' style={{ width: 200 }} onChange={this.handleChange.bind(this)}>\n                            <Option value={0}>Login log</Option>\n                            <Option value={1}>API access log</Option>\n                        </Select>\n                        <RangePicker getCalendarContainer={triggerNode => triggerNode.parentNode} onChange={onChange} style={{ marginLeft: \"10px\", width: \"250px\" }} />\n                    </div>\n                    <div style={{ marginTop: '10px' }}>\n                        <Systemlogtable loginlogList={this.state.loginlogList} apilogList={this.state.apilogList} optionValue={this.state.option} getPages={this.getPages.bind(this)} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Systemlog\n","import React, { Component } from 'react';\nimport { Tabs } from 'antd';\nimport Powersetting from '../Systemgroup/powersetting'\nimport Systemlog from '../Systemgroup/Systemlog'\n// import Warningmanage from '../Systemgroup/Warningmanage'\n\n\nclass Systemcontrol extends Component {\n    state = {\n        powerLogin: 0\n    }\n    componentDidMount() {\n        const powerLogins = sessionStorage.getItem('role')\n        this.setState({ powerLogin: powerLogins })\n    }\n    render() {\n\n        const { TabPane } = Tabs;\n        const bollogin = this.state.powerLogin == 2\n        return (\n            <div style={{ paddingLeft: \"24px\", paddingRight: \"24px\" }}>\n                <div style={{ fontSize: \"22px\", height: '50px', lineHeight: \"50px\" }}>系統設定</div>\n                <Tabs defaultActiveKey=\"5\">\n                    <TabPane tab=\"權限設定\" key=\"1\" >\n                        <Powersetting />\n                    </TabPane>\n                    {\n                        bollogin && <TabPane tab=\"系統摘要\" key=\"2\" >\n                            <Systemlog />\n                        </TabPane>\n                    }\n                    {/*<TabPane tab=\"裝置連線狀態管理\" key=\"3\">\n                    </TabPane> \n                    <TabPane tab=\"病人資料狀態管理\" key=\"3\">\n                    </TabPane>                  \n                    <TabPane tab=\"警示管理\" key=\"5\">\n                        <Warningmanage/>\n                    </TabPane>*/}\n                </Tabs>\n            </div>\n        );\n    }\n}\n\nexport default Systemcontrol;\n","import React, { Component } from 'react';\nimport './Layout.scss';\nimport Sidermenu from './Sidermenu';\nimport Bedview from '../Wardview/Bedinfo/Bedview'\nimport Historyview from '../Content/Historyview'\nimport Patientviewlayout from '../Patientview/Patientviewlayout'\nimport Systemcontrol from '../Content/Systemcontrol'\nimport { Route, Switch, Link } from 'react-router-dom';\nimport { yyyymmddformat, weekdateformat } from '../Function/Timeformat'\nimport { Icon } from 'antd'\n\nclass Layoutframe extends Component {\n    onClickLogout() {\n        sessionStorage.clear();\n    }\n    render() {\n        const UsrName = sessionStorage.getItem('user');\n        const url_path = this.props.location.pathname\n        return (\n            <div style={{ height: \"100vh\" }}>\n                <div className=\"header\">\n                    {/*eslint-disable-next-line*/}\n                    <div style={{ display: 'flex', alignItems: 'center', }}>\n                        <div style={{ fontSize: \"20px\", fontWeight: \"default\" }}>北榮NICU智慧醫療系統</div>\n                        <Sidermenu path={url_path} routes={this.props.route}></Sidermenu>\n                    </div>\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", gridColumnGap: \"10px\" }}>\n                        <t3 style={{ color: 'white' }}>{UsrName}醫師 {yyyymmddformat(new Date())} {weekdateformat(new Date())}</t3>\n                        <Link to=\"/Login\" onClick={() => this.onClickLogout()}>\n                            <Icon style={{ color: \"white\" }} type=\"logout\" />\n                        </Link>\n                    </div>\n                </div>\n                <div className=\"content\">\n                    <Switch>\n                        <Route path={`${this.props.match.path}/ward`} component={Bedview} />\n                        <Route path={`${this.props.match.path}/history`} component={Historyview} />\n                        <Route path={`${this.props.match.path}/system`} component={Systemcontrol} />\n                        <Route path={`${this.props.match.path}/patient`} component={Patientviewlayout} />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Layoutframe;\n","import React, { Component, cloneElement } from 'react';\nimport { Button, Icon } from 'antd';\nimport { Redirect } from 'react-router-dom'\nimport { Input } from 'antd'\nimport * as ApiProvider from '../API/ApiProvider';\nimport logo from '../Image/Logo/1200px-Taipei_Veterans_General_Hospital_Emblem.svg.png'\n\n\nclass Loginview extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: false,\n            permission: true,\n            statusstring: null\n        }\n        this.setRedirect = this.setRedirect.bind(this);   //把元件中的this繫結到handleClick方法中，這樣就會保持this一致          \n    };\n\n    componentDidMount() {\n        const account = document.querySelector('#account')\n        const password = document.querySelector('#password')\n        account.addEventListener('focus', () => {\n            account.addEventListener('keyup', e => {\n                if (e.keyCode === 13) {\n                    account.blur();\n                    password.focus();\n                }\n            })\n        })\n\n        password.addEventListener('focus', () => {\n            password.addEventListener('keyup', e => {\n                e.keyCode === 13 && this.setRedirect()\n            })\n        })\n    }\n\n    setRedirect = () => {\n        const account = document.getElementById(\"account\").value;\n        const password = document.getElementById(\"password\").value;\n        ApiProvider.login(account, password)\n            .then(result => {\n                console.log(\"login OK \" + JSON.stringify(result));\n                const userData = result.data\n                const user = account\n                const role = userData[0].role\n                sessionStorage.setItem('user', user);\n                sessionStorage.setItem('role', role);\n                this.setState({\n                    redirect: true\n                })\n            })\n            .catch(err => {\n                console.log(\"login NG \" + JSON.stringify(err));\n                this.setState({\n                    permission: false,\n                    statusstring: \"帳號或密碼錯誤\"\n                })\n            });\n    }\n    renderRedirect = () => {\n        const login = sessionStorage.getItem('user');\n        const role = sessionStorage.getItem('role');\n        if (login !== null) {\n            if (Number(role) === 2) {\n                return <Redirect from={\"/login\"} to={\"/nicu/system\"} />\n            }\n            return <Redirect from={\"/login\"} to={\"/nicu/ward/wardindex\"} />\n        }\n    }\n\n\n    render() {\n        return (\n            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"100vh\", width: \"100vw\", background: 'linear-gradient(to bottom, rgba(195, 239, 255, 1), rgba(46, 100, 164, 1))' }}>\n                {this.renderRedirect()}\n                <div style={{ textAlign: \"center\" }}>\n                    <img style={{ width: \"200px\" }} src={logo} alt='logo'></img>\n                    <div style={{ display: 'flex', justifyContent: \"center\", alignItems: \"center\", flexWrap: \"wrap\" }}>\n                        <div style={{ color: \"white\", fontSize: \"20px\", textAlign: \"center\", width: \"100%\" }}>台北榮民總醫院 NICU智慧醫療系統</div>\n                        <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <div style={{ width: \"350px\", height: \"250px\", borderRadius: \"4px\", backgroundColor: \"white\", textAlign: \"center\", padding: '25px', position: \"relative\" }}>\n                                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                                    <div style={{ height: \"32px\", width: \"32px\", borderRadius: \"2px\", backgroundColor: \"rgba(46,100,164,1)\", color: \"white\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                        <Icon type=\"user\" style={{ color: \"white\" }} />\n                                    </div>\n                                    <Input id=\"account\" style={{ marginLeft: \"20px\" }} placeholder=\"請輸入3270主機帳號\"></Input>\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginTop: \"25px\" }}>\n                                    <div style={{ height: \"32px\", width: \"32px\", borderRadius: \"2px\", backgroundColor: \"rgba(46,100,164,1)\", color: \"white\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                        <Icon type=\"lock\" style={{ color: \"white\" }} />\n                                    </div>\n                                    <Input type=\"password\" id=\"password\" style={{ marginLeft: \"20px\" }} placeholder=\"請輸入密碼\"></Input>\n                                </div>\n                                <Button style={{ width: \"280px\", backgroundColor: \"rgba(46, 100, 164, 1)\", color: \"white\", marginTop: \"70px\" }} onClick={this.setRedirect}>登入</Button>\n                                <div style={{ display: this.state.permission ? \"none\" : \"block\", color: \"red\", fontSize: \"1rem\" }}>{this.state.statusstring}</div>\n                            </div>\n                        </div>\n                        <div style={{ width: \"100%\", justifyContent: \"center\", alignItems: \"center\", display: \"flex\" }}>200310.007-T</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Loginview\n","import React from 'react';\nimport Homepage from './Homepage'\nimport './App.scss';\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\nimport Layoutframe from './Layout/Layout'\nimport Loginview from './Layout/Loginview'\nimport 'antd/dist/antd.css';\nimport { ConfigProvider } from 'antd';\nimport zhTW from 'antd/es/locale/zh_TW';\nimport moment from 'moment';\nimport 'moment/locale/zh-tw';\nmoment.locale('zh-tw');\n\n\n\nfunction App() {\n  document.documentElement.style.fontSize = '14px'\n  return (\n    <div className=\"AllPage\">\n      <ConfigProvider locale={zhTW}>\n        <BrowserRouter>\n          <Route exact path=\"/\" component={Homepage} />\n          <Redirect from={'/'} to={\"/login\"} />\n          <Route path=\"/nicu\" component={Layoutframe} />\n          <Route path=\"/login\" component={Loginview} />\n        </BrowserRouter>\n      </ConfigProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/details.bc0482ca.svg\";"],"sourceRoot":""}